[{"tags": ["docker", "curl", "networking", "rust", "rust-rocket"], "comments": [{"owner": {"reputation": 64542, "user_id": 10008173, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e3ea5d6d5d63e054acb8cfa95a39240d?s=128&d=identicon&r=PG&f=1", "display_name": "David Maze", "link": "https://stackoverflow.com/users/10008173/david-maze"}, "edited": false, "score": 3, "creation_date": 1547075235, "post_id": 54119006, "comment_id": 95071894, "body": "That sounds like the symptom of the server process binding to 127.0.0.1 and being unreachable from outside the container, with the answer being to bind to 0.0.0.0, but I can&#39;t tell you how to address it for this particular server stack."}, {"owner": {"reputation": 607, "user_id": 566986, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/086f2cfa4f8065ff32130661e1dfa498?s=128&d=identicon&r=PG", "display_name": "rvabdn", "link": "https://stackoverflow.com/users/566986/rvabdn"}, "reply_to_user": {"reputation": 64542, "user_id": 10008173, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e3ea5d6d5d63e054acb8cfa95a39240d?s=128&d=identicon&r=PG&f=1", "display_name": "David Maze", "link": "https://stackoverflow.com/users/10008173/david-maze"}, "edited": false, "score": 0, "creation_date": 1547076261, "post_id": 54119006, "comment_id": 95072148, "body": "I bet you are right. I&#39;ll try setting it to 0.0.0.0"}, {"owner": {"reputation": 607, "user_id": 566986, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/086f2cfa4f8065ff32130661e1dfa498?s=128&d=identicon&r=PG", "display_name": "rvabdn", "link": "https://stackoverflow.com/users/566986/rvabdn"}, "reply_to_user": {"reputation": 64542, "user_id": 10008173, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e3ea5d6d5d63e054acb8cfa95a39240d?s=128&d=identicon&r=PG&f=1", "display_name": "David Maze", "link": "https://stackoverflow.com/users/10008173/david-maze"}, "edited": false, "score": 0, "creation_date": 1547079577, "post_id": 54119006, "comment_id": 95072909, "body": "That was the issue.  If you make this an answer I will accept it."}], "answers": [{"tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": false, "score": 1, "last_activity_date": 1547078590, "creation_date": 1547078590, "answer_id": 54120236, "question_id": 54119006, "link": "https://stackoverflow.com/questions/54119006/why-is-are-my-published-ports-not-working/54120236#54120236", "title": "Why is are my published ports not working?", "body": "<p>Rocket have different standard configuration, please try <code>staging</code> or <code>prod</code> to be able to do what you want, <a href=\"https://rocket.rs/v0.4/guide/configuration/\" rel=\"nofollow noreferrer\">source</a>.</p>\n\n<pre><code>ROCKET_ENV=staging cargo run\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/53900614/why-can-i-not-access-this-rust-simple-server-from-the-internet/53900809#53900809\">Why can I not access this Rust simple server from the Internet?</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 607, "user_id": 566986, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/086f2cfa4f8065ff32130661e1dfa498?s=128&d=identicon&r=PG", "display_name": "rvabdn", "link": "https://stackoverflow.com/users/566986/rvabdn"}, "is_accepted": false, "score": 2, "last_activity_date": 1547159427, "creation_date": 1547159427, "answer_id": 54137827, "question_id": 54119006, "link": "https://stackoverflow.com/questions/54119006/why-is-are-my-published-ports-not-working/54137827#54137827", "title": "Why is are my published ports not working?", "body": "<p>David Maze was correct.  The problem was that the process was binding to localhost in the container.  I added a Rocket.toml file with the following entries </p>\n\n<pre><code>[global]\naddress = \"0.0.0.0\"\n\n[development]\naddress = \"0.0.0.0\"\n</code></pre>\n\n<p>and now it works fine.</p>\n\n<p>Thanks David.</p>\n"}], "owner": {"reputation": 607, "user_id": 566986, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/086f2cfa4f8065ff32130661e1dfa498?s=128&d=identicon&r=PG", "display_name": "rvabdn", "link": "https://stackoverflow.com/users/566986/rvabdn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 604, "favorite_count": 0, "answer_count": 2, "score": 4, "last_activity_date": 1600191627, "creation_date": 1547071224, "last_edit_date": 1600191627, "question_id": 54119006, "link": "https://stackoverflow.com/questions/54119006/why-is-are-my-published-ports-not-working", "title": "Why is are my published ports not working?", "body": "<p>I've created a docker image containing a rust application that responds to get requests on port 8000.  The application itself is a basic example using  the rocket library (<a href=\"https://rocket.rs/\" rel=\"nofollow noreferrer\">https://rocket.rs/</a>) it looks like this </p>\n\n<pre><code>#![feature(proc_macro_hygiene, decl_macro)]\n\n#[macro_use] extern crate rocket;\n\n#[get(\"/\")]\nfn index() -&gt; &amp;'static str {\n    \"Hello, world!\"\n}\n\nfn main() {\n    rocket::ignite().mount(\"/\", routes![index]).launch();\n}\n</code></pre>\n\n<p>I have compiled this and called it <code>server</code></p>\n\n<p>I then created a Docker file to host it</p>\n\n<pre><code>FROM ubuntu:16.04\n\nRUN apt-get update; apt-get install -y curl\n\nCOPY server /root/\n\nEXPOSE 8000\n\nCMD [\"/root/server\"]                           \n</code></pre>\n\n<p>I build the docker image with \n<code>$ docker build -t port_test</code> and run it with <code>$ docker run -p 8000:8000 port_test</code></p>\n\n<p>At this point it all looks good </p>\n\n<pre><code>$ docker ps\nCONTAINER ID        IMAGE               COMMAND             CREATED                     STATUS              PORTS                    NAMES\n3befe0c272f7        port_test           \"/root/server\"      7 minutes ago       Up 7 minutes        0.0.0.0:8000-&gt;8000/tcp   festive_wilson\n</code></pre>\n\n<p>If I run curl within the container it works fine </p>\n\n<pre><code>$ docker exec -it 3befe0c272f7 curl -s localhost:8000\nHello, world!\n</code></pre>\n\n<p>However I can't do the same from the host</p>\n\n<pre><code>$ curl localhost:8000\ncurl: (56) Recv failure: Connection reset by peer\n</code></pre>\n"}, {"tags": ["generics", "rust", "traits"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 4, "creation_date": 1547077696, "post_id": 54119049, "comment_id": 95072454, "body": "<a href=\"https://stackoverflow.com/a/54060929/155423\">You literally answered this <i>same question</i> 3 days ago</a>. <b>Please do not encourage duplicates</b>."}], "tags": [], "owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "is_accepted": true, "score": 5, "last_activity_date": 1566146947, "last_edit_date": 1566146947, "creation_date": 1547071397, "answer_id": 54119049, "question_id": 54118880, "link": "https://stackoverflow.com/questions/54118880/error-expected-type-parameter-found-closure/54119049#54119049", "title": "Error: Expected Type Parameter, Found Closure", "body": "<p><strong>tl;dr;</strong> You probably want this:</p>\n\n<pre><code>fn new_user() -&gt; User&lt;impl Fn()&gt; {\n    User {\n        h: Helper { f: || {} },\n    }\n}\n</code></pre>\n\n<p><strong>More details:</strong> Let's look into this:</p>\n\n<pre><code>fn new_user&lt;F3: Fn()&gt;() -&gt; User&lt;F3&gt; {\n    User {\n        // error: expected type parameter, found closure\n        h: Helper { f: || {} },\n    }\n}\n</code></pre>\n\n<p>This states that <code>new_user</code> \"accepts\" <em>anything</em> satisfying <code>Fn()</code>, but the caller must specify it when calling <code>new_user</code>. However, to successfully type-check, the supplied type would have to be the same as the one used within the body of <code>new_user</code>, (which is the type of <code>|| {}</code>). However, closures have anonymous types, so the caller of <code>new_user</code> cannot know this type, since it cannot look into the implementation of <code>new_user</code> too find out what to supply for <code>F3</code>.</p>\n\n<p>As said, what you want is that <code>new_user</code> returns a <code>User&lt;SomeConcreteType&gt;</code> where <code>SomeConcreteType</code> satisfies <code>F3</code>. The caller does not need to - in fact it should not even - specify <code>SomeConcreteType</code>, because it is inferred within <code>new_user</code>. You can do this as follows:</p>\n\n<pre><code>fn new_user() -&gt; User&lt;impl Fn()&gt; {\n    User {\n        h: Helper { f: || {} },\n    }\n}\n</code></pre>\n\n<p>This way, you specify that <code>new_user</code> can be called without any arguments and it returns a <code>User</code> with some concrete type satisfying <code>Fn()</code>.</p>\n"}], "owner": {"reputation": 16572, "user_id": 83741, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/60adb60c59462ef0cb9db65853736cf4?s=128&d=identicon&r=PG", "display_name": "Alexander Torstling", "link": "https://stackoverflow.com/users/83741/alexander-torstling"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1309, "favorite_count": 0, "closed_date": 1547077626, "accepted_answer_id": 54119049, "answer_count": 1, "score": 4, "last_activity_date": 1566146947, "creation_date": 1547070586, "last_edit_date": 1547070983, "question_id": 54118880, "link": "https://stackoverflow.com/questions/54118880/error-expected-type-parameter-found-closure", "closed_reason": "Duplicate", "title": "Error: Expected Type Parameter, Found Closure", "body": "<p>I have the following <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=95a633530905a396580775d15dbd6971\" rel=\"nofollow noreferrer\">code</a>:</p>\n\n<pre><code>struct Helper&lt;F1: Fn()&gt; {\n    f: F1,\n}\n\nstruct User&lt;F2: Fn()&gt; {\n    h: Helper&lt;F2&gt;,\n}\n\nfn new_user&lt;F3: Fn()&gt;() -&gt; User&lt;F3&gt; {\n    User {\n        // error: expected type parameter, found closure\n        h: Helper { f: || {} },\n    }\n}\n\nfn main(){}\n</code></pre>\n\n<p>So <code>User</code> needs a <code>Helper&lt;F1&gt;</code> with the type of F1 being specified by <code>User</code>, in this case by the closure in <code>new_user</code>.</p>\n\n<p>This code fails compile with the error <code>expected type parameter, found closure</code> in <code>new_user</code>. As far as I have understood (see for instance <a href=\"https://github.com/rust-lang/rust/issues/51154\" rel=\"nofollow noreferrer\">this link</a>), this is because the bound of type parameter <code>F3</code> on <code>new_user</code> is specified by the caller (or signature maybe?), and so although the closure implements the <code>Fn()</code> trait, it won't be able to restrict the type parameter F3 to match the type of the closure. Instead, it is expected that <code>new_user</code> should work with any given <code>F3</code>, which it clearly won't.</p>\n\n<p>So my question is: how do I fix this? Is there any way of expressing that I want <code>new_user</code> to return a <code>User</code> with <code>F2</code> set to the type of the closure?</p>\n\n<p>I tried to use a type inference placeholder:</p>\n\n<pre><code>// error: the type placeholder `_` is not allowed within types on item signatures\nfn new_user() -&gt; User&lt;_&gt; {\n    User {\n        h: Helper { f: || {} },\n    }\n}\n</code></pre>\n\n<p>I could use Box, but this requires modifying <code>Helper</code>, which isn't ideal in my practical case:</p>\n\n<pre><code>struct Helper {\n    f: Box&lt;dyn Fn()&gt;,\n}\n\nstruct User {\n    h: Helper,\n}\n\nfn new_user() -&gt; User {\n    User {\n        h: Helper { f: Box::new(|| {}) },\n    }\n}\n\nfn main(){}\n</code></pre>\n\n<p>I'm also experimenting a bit with replacing <code>Fn()</code> with a custom trait, which I can implement for <code>User</code> specifically, but so far it's been clunky.</p>\n\n<p>Any suggestions?</p>\n"}, {"tags": ["arrays", "casting", "reference", "rust", "slice"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547070228, "post_id": 54118745, "comment_id": 95070154, "body": "The Rust code you have provided isn&#39;t syntactically correct."}, {"owner": {"reputation": 1546, "user_id": 2989337, "user_type": "registered", "accept_rate": 44, "profile_image": "https://i.stack.imgur.com/JoDFi.png?s=128&g=1", "display_name": "JawguyChooser", "link": "https://stackoverflow.com/users/2989337/jawguychooser"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547073954, "post_id": 54118745, "comment_id": 95071529, "body": "Is there some syntax error which the compiler isn&#39;t telling me about?  When I add the parans to get operator precedence correct (as in the accepted answer), the code compiles and runs as expected now.  I&#39;m missing your point, I guess."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547077477, "post_id": 54118745, "comment_id": 95072412, "body": "Those are two separate comments. One is that your MCVE is incorrect and invalid. The other is pointing out how you can answer the question. You need to figure out for what types the trait is implemented and then the answer falls out."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547070584, "post_id": 54118870, "comment_id": 95070308, "body": "In many places in Rust, arrays decay gracefully into slices. Why does that not help the OP here?"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1547070781, "post_id": 54118870, "comment_id": 95070387, "body": "@Shepmaster The <code>read_u16()</code> method accepts its receiver by mutable reference, and method resolution only searches for <code>&amp;T</code> and <code>&amp;mut T</code>, but not for <code>&amp;mut &amp;T</code>. But you surely know this?"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547071796, "post_id": 54118870, "comment_id": 95070809, "body": "@Shepmaster I thought about this for a bit, but I couldn&#39;t think of <i>any</i> situaion where the type <code>[T]</code> decays to <code>&amp;[T]</code>. Could you give an example? The only vaguely related case I can think of is calling a method on a slice that accepts the receiver by value, which would indeed work for <code>[T]</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1547071820, "post_id": 54118870, "comment_id": 95070821, "body": "there&#39;s a great many things I&#39;m pretty sure I know, sure, but double checking never hurts. It was intended more as a &quot;this information would be useful in the answer&quot;, but I&#39;ve now included it in mine so you can keep your answer succinct."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547072177, "post_id": 54118870, "comment_id": 95070955, "body": "pedantically, I meant <code>[T; N]</code> (an array, not a slice not behind a pointer), but I think you meant the same as me. I was mostly handwaving at towards methods on slice which are implemented with <code>&amp;self</code> and are accessible via <code>Deref</code> but also via coercion."}], "tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 4, "last_activity_date": 1547077503, "last_edit_date": 1547077503, "creation_date": 1547070528, "answer_id": 54118870, "question_id": 54118745, "link": "https://stackoverflow.com/questions/54118745/why-do-i-get-the-error-trait-bounds-were-not-satisfied-when-using-readbytesext/54118870#54118870", "title": "Why do I get the error &quot;trait bounds were not satisfied&quot; when using ReadBytesExt to read an integer from a slice of bytes?", "body": "<p>Your code calls <code>read_u16()</code> on an <em>array</em> rather than a <em>slice</em>. You probably intend to call the method on <code>&amp;buf[0..1]</code>, but due to operator precedence you actually call it on <code>buf[0..1]</code>. This can be fixed by simply adding a pair of parentheses:</p>\n\n<pre><code>let id = (&amp;buf[0..1]).read_u16::&lt;LittleEndian&gt;();\n</code></pre>\n\n<p>Your original code is interpreted as <code>&amp;(buf[0..1].read_u16::&lt;LittleEndian&gt;())</code>, which is why the compiler complains that the <code>ReadBytesExt</code> trait is not implemented for <code>[u8]</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1547071561, "post_id": 54119017, "comment_id": 95070731, "body": "Note that you also wouldn&#39;t be able to call a method accepting a slice by immutable reference on an array. It doesn&#39;t really matter whether the receiver is defined as <code>&amp;self</code> or <code>&amp;mut self</code> \u2013 neither of them would work."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1547071909, "post_id": 54119017, "comment_id": 95070855, "body": "@SvenMarnach yep, I lost the important word &quot;reference&quot; there."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 0, "last_activity_date": 1547077302, "last_edit_date": 1547077302, "creation_date": 1547071276, "answer_id": 54119017, "question_id": 54118745, "link": "https://stackoverflow.com/questions/54118745/why-do-i-get-the-error-trait-bounds-were-not-satisfied-when-using-readbytesext/54119017#54119017", "title": "Why do I get the error &quot;trait bounds were not satisfied&quot; when using ReadBytesExt to read an integer from a slice of bytes?", "body": "<p>Because the trait bounds were not satisfied.</p>\n\n<p><code>read_u16</code> needs the receiver to be a <em>mutable reference</em>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub trait ReadBytesExt: Read {\n    fn read_u16&lt;T: ByteOrder&gt;(&amp;mut self) -&gt; Result&lt;u16&gt; { ... }\n}\n</code></pre>\n\n<p>This is because it will call <code>Read</code>, which requires the same:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl&lt;'a&gt; Read for &amp;'a [u8] {\n    fn read(&amp;mut self, buf: &amp;mut [u8]) -&gt; Result&lt;usize&gt;\n}\n</code></pre>\n\n<p>Note that <code>Read</code> is implemented for <code>&amp;[u8]</code>, but takes <code>&amp;mut self</code>. That means that <code>self</code> is a <code>&amp;mut &amp;[u8]</code>, a mutable reference to a slice.</p>\n\n<hr>\n\n<p>Introducing parenthesis, as <a href=\"https://stackoverflow.com/a/54118870/155423\">suggested by Sven Marnach</a>, creates a slice (<code>&amp;[u8]</code>) as a temporary value and temporary values can be treated as implicitly mutable.</p>\n\n<p>In the linked question, the starting variable is a slice that is mutable. Calling <code>read_u16</code> can take a mutable reference to <code>buf</code>:</p>\n\n<pre><code>let mut buf: &amp;[u8] = &amp;[0x00, 0x42];\n</code></pre>\n\n<p>In your case, you have an array. While this dereferences to a slice, Rust's automatic (de)referencing rules will never add <em>two</em> levels of reference. Method lookup fails.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/41069865/155423\">How to create an in-memory object that can be used as a Reader, Writer, or Seek in Rust?</a></li>\n<li><a href=\"https://stackoverflow.com/q/28519997/155423\">What are Rust&#39;s exact auto-dereferencing rules?</a></li>\n<li><a href=\"https://stackoverflow.com/q/42240663/155423\">How to read (std::io::Read) from a Vec or Slice?</a></li>\n</ul>\n"}], "owner": {"reputation": 1546, "user_id": 2989337, "user_type": "registered", "accept_rate": 44, "profile_image": "https://i.stack.imgur.com/JoDFi.png?s=128&g=1", "display_name": "JawguyChooser", "link": "https://stackoverflow.com/users/2989337/jawguychooser"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1086, "favorite_count": 0, "accepted_answer_id": 54118870, "answer_count": 2, "score": 0, "last_activity_date": 1547077503, "creation_date": 1547069845, "last_edit_date": 1547073193, "question_id": 54118745, "link": "https://stackoverflow.com/questions/54118745/why-do-i-get-the-error-trait-bounds-were-not-satisfied-when-using-readbytesext", "title": "Why do I get the error &quot;trait bounds were not satisfied&quot; when using ReadBytesExt to read an integer from a slice of bytes?", "body": "<p>The following Rust code doesn't compile.</p>\n\n<pre><code>extern create byteorder;\nuse byetorder::{LittleEndian, ReadBytesExt};\n\nfn main() {                                                                          \n    let buf: [u8; 12] = [                                                                     \n        0x00, 0x42, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0xc3, 0x00, 0x00, 0x30,               \n    ];\n    let id = &amp;buf[0..1].read_u16::&lt;LittleEndian&gt;();              }\n</code></pre>\n\n<p>The message from the compiler:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `read_u16` found for type `[u8]` in the current scope           \n  --&gt; src/main.rs:18:25                                                                       \n   |                                                                                          \n18 |     let id = &amp;buf[0..1].read_u16::&lt;LittleEndian&gt;();                                      \n   |                         ^^^^^^^^                                                         \n   |                                                                                          \n   = note: the method `read_u16` exists but the following trait bounds were not satisfied:    \n           `[u8] : byteorder::ReadBytesExt`\n</code></pre>\n\n<p>There are very similar questions on Stack Overflow, which I have reviewed, but mine is subtly different from those because I'm trying to read a <code>u16</code> from a slice.  In practice, I'm not sure why my example is substantively different, I'm sure I'm missing something obvious.</p>\n\n<p>Specifically, it's not clear to me how what I've got is meaningfully different from what's in the accepted answer here:</p>\n\n<p><a href=\"https://stackoverflow.com/questions/29307474/how-can-i-convert-a-buffer-of-a-slice-of-bytes-u8-to-an-integer\">How can I convert a buffer of a slice of bytes (&amp;[u8]) to an integer?</a></p>\n\n<p>Don't I also have <code>&amp;[u8]</code> when I say <code>&amp;buf[0..1]</code>?</p>\n"}, {"tags": ["rust", "char", "enumeration"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1547070948, "post_id": 54117433, "comment_id": 95070476, "body": "Note that the closest approximation of the <code>char</code> type in C++ is the <code>u8</code> type in Rust. (The types are not completely equivalent, because in C++ it is not defined whether <code>char</code> is signed, nor does it always have 8 bits, but it&#39;s close enough in this context.) The closest equivalent of the Rust type <code>char</code> in C++ is <code>char32_t</code>."}], "owner": {"reputation": 571, "user_id": 6780089, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bcb6413d5c1778241f37cc86901c957a?s=128&d=identicon&r=PG&f=1", "display_name": "YLyu", "link": "https://stackoverflow.com/users/6780089/ylyu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 404, "favorite_count": 0, "closed_date": 1547064337, "answer_count": 0, "score": 2, "last_activity_date": 1547064568, "creation_date": 1547063954, "last_edit_date": 1547064568, "question_id": 54117433, "link": "https://stackoverflow.com/questions/54117433/is-it-possible-to-assign-char-values-to-enum-variants", "closed_reason": "Duplicate", "title": "Is it possible to assign char values to enum variants?", "body": "<p>In C++, I can define an enum class where constant <code>char</code> values are given to different fields:</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>enum class BasicOperators : char {\n    plus='+',\n    minus='-',\n    mul='*',\n    div='/'\n}\n</code></pre>\n\n<p>From <a href=\"https://stackoverflow.com/questions/36928569/enums-with-constant-values-in-rust\">Enums with constant values in Rust</a>, I am aware that I can define an enum with an integer:</p>\n\n<pre><code>enum MyEnum {\n    A = 123,\n    b = 456,\n}\n</code></pre>\n\n<p>If I define an enum with <code>char</code> values like this:</p>\n\n<pre><code>enum BasicOperators {\n    Plus = '+',\n    Minus = '-',\n    Mul = '*',\n    Div = '/',\n}\n</code></pre>\n\n<p>the compiler complains:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; src/lib.rs:2:12\n  |\n2 |     Plus = '+',\n  |            ^^^ expected isize, found char\n</code></pre>\n"}, {"tags": ["rust", "ffi", "cpython"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547060575, "post_id": 54116649, "comment_id": 95066102, "body": "<a href=\"https://stackoverflow.com/q/50458782/155423\">Why do I not get a backtrace when my program has a segmentation fault even though RUST_BACKTRACE=1 is set?</a> \u2014 Run in a debugger."}, {"owner": {"reputation": 2512, "user_id": 5808553, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/6be8254e63e22cc820bb14938d532814?s=128&d=identicon&r=PG&f=1", "display_name": "Rajeev Ranjan", "link": "https://stackoverflow.com/users/5808553/rajeev-ranjan"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547060770, "post_id": 54116649, "comment_id": 95066202, "body": "Thanks @Shepmaster for pointing me out to this post. I do not get any coredumps either. Will try and run GDB."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547060869, "post_id": 54116649, "comment_id": 95066259, "body": "There are many reasons a coredump may not be written. This may also just be a call to <a href=\"https://doc.rust-lang.org/std/process/fn.exit.html\" rel=\"nofollow noreferrer\"><code>std::process::exit</code></a> or an explicit abort somewhere in (poorly written?) code."}], "owner": {"reputation": 2512, "user_id": 5808553, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/6be8254e63e22cc820bb14938d532814?s=128&d=identicon&r=PG&f=1", "display_name": "Rajeev Ranjan", "link": "https://stackoverflow.com/users/5808553/rajeev-ranjan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 57, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1547060648, "creation_date": 1547060457, "last_edit_date": 1547060648, "question_id": 54116649, "link": "https://stackoverflow.com/questions/54116649/rust-program-using-cpython-ffi-silently-getting-killed", "title": "Rust program using CPython FFI silently getting killed", "body": "<p>I have a Rust program which is exiting silently without any trace of the reason in the logs. This would happen after several successful calls to the same method. The last log I see is one after which a FFI call is made. I do not get a log after the return of the FFI call.</p>\n\n<pre><code>use cpython;\nuse cpython::ObjectProtocol;\nuse cpython::PyResult;\n</code></pre>\n\n\n\n<pre><code>fn is_complete(&amp;self, check: bool) -&gt; Result&lt;bool, PyModuleError&gt; {\n    let gil = cpython::Python::acquire_gil();\n    let py = gil.python();\n    debug!(\"Calling complete\"); //This is the last log\n    let res = self\n        .py_complete\n        .call_method(py, \"complete\", (check,), None)\n        .expect(\"No method complete on python module\")\n        .extract::&lt;bool&gt;(py).unwrap();\n    if res {\n        debug!(\"Returning true\"); //This does not appear\n        Ok(true)                \n    }\n    else {\n        debug!(\"Returning false\"); //This does not appear\n        Ok(false)\n    }\n}\n</code></pre>\n\n<p>The Python module does return a value as I had debug logs there as well to confirm. </p>\n\n<p>I have tried using <code>RUST_BACKTRACE=1</code> but in vain.</p>\n"}, {"tags": ["rust", "lifetime", "borrow-checker", "borrowing"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 2, "creation_date": 1547055310, "post_id": 54115451, "comment_id": 95063843, "body": "<i>&quot;A borrow or an Alias can outlive the owner by faking the life time tags.&quot;</i> \u2014 what does that mean? Rust doesn&#39;t let you fake anything, unless you resort to <code>unsafe</code> code."}, {"owner": {"reputation": 1158, "user_id": 4956078, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44600007f35ab98b7badbf1110df0687?s=128&d=identicon&r=PG&f=1", "display_name": "JMAA", "link": "https://stackoverflow.com/users/4956078/jmaa"}, "edited": false, "score": 0, "creation_date": 1547055347, "post_id": 54115451, "comment_id": 95063859, "body": "I&#39;m no expert, but my guess is that is ultimately because both <code>first</code> and <code>second</code> have <code>&#39;static</code> lifetimes. The string literals are baked into the executable, so the references to them are always valid. If you got <code>second</code> from a function call of non-static lifetime I assume this wouldn&#39;t work."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547055882, "post_id": 54115451, "comment_id": 95064116, "body": "What do you think the &quot;owner&quot; is in this case?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1547055952, "post_id": 54115451, "comment_id": 95064147, "body": "See also <a href=\"https://stackoverflow.com/q/31230585/155423\">How does the lifetime work on constant strings / string literals?</a>"}], "answers": [{"comments": [{"owner": {"reputation": 1263, "user_id": 5817767, "user_type": "registered", "accept_rate": 0, "profile_image": "https://graph.facebook.com/209584382725014/picture?type=large", "display_name": "Pawan Kumar", "link": "https://stackoverflow.com/users/5817767/pawan-kumar"}, "edited": false, "score": 0, "creation_date": 1547055619, "post_id": 54115589, "comment_id": 95063999, "body": "Thanks a lot for quick reply. Now I get it.Then that means &lt;&#39;a&gt; are just relative quantities at the function signature level. Those tags doesn&#39;t make much sence at the function level but they makes more sence at the catching return value site? because a function doesn&#39;t know who will call, what kind of references."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 1263, "user_id": 5817767, "user_type": "registered", "accept_rate": 0, "profile_image": "https://graph.facebook.com/209584382725014/picture?type=large", "display_name": "Pawan Kumar", "link": "https://stackoverflow.com/users/5817767/pawan-kumar"}, "edited": false, "score": 0, "creation_date": 1547056536, "post_id": 54115589, "comment_id": 95064412, "body": "@PKChem In this specific case, the lifetime <code>&#39;a</code> is determined by the compiler to be the shorter lifetime of the two string slices. Since in your original example both strings had static lifetime, <code>&#39;a</code> is inferred to be <code>&#39;static</code>, and the return value is also <code>&#39;static</code>. The local variable <code>second</code> does not own the string slice \u2013 it&#39;s just another borrow, and it does not matter that a different borrow goes out of scope, as long as the data you are referring to is still there."}], "tags": [], "owner": {"reputation": 2463, "user_id": 2346731, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/54b21109a70f680b9c50261b90d22f87?s=128&d=identicon&r=PG", "display_name": "Marcus", "link": "https://stackoverflow.com/users/2346731/marcus"}, "is_accepted": true, "score": 8, "last_activity_date": 1547055996, "last_edit_date": 1547055996, "creation_date": 1547055435, "answer_id": 54115589, "question_id": 54115451, "link": "https://stackoverflow.com/questions/54115451/why-can-borrowed-string-literal-outlive-its-owner-by-faking-a-lifetime/54115589#54115589", "title": "Why can borrowed string literal outlive its owner by faking a lifetime?", "body": "<p>This is due to the fact that both of these have the <code>'static</code> lifetime.</p>\n\n<p>Here's an example that doesn't work because the <code>str</code> here does not live for the life of the program like a <code>&amp;'static str</code> does.\nThe only change is the following line: <code>let second = String::from(\"defgh\");</code> and the next line where it is passed to the longest function.</p>\n\n<pre><code>fn main() {\n    let e;\n    let first = \"abcd\";\n    {\n        let second = String::from(\"defgh\");\n        e = longest(first, &amp;second);\n    }\n    println!(\"{}\", e);\n}\n\nfn longest&lt;'a&gt;(first: &amp;'a str, second: &amp;'a str) -&gt; &amp;'a str {\n    if first.len() &gt; second.len() {\n        first\n    } else {\n        second\n    }\n}\n</code></pre>\n\n<p>Here's the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `second` does not live long enough\n --&gt; src/main.rs:6:28\n  |\n6 |         e = longest(first, &amp;second);\n  |                            ^^^^^^^ borrowed value does not live long enough\n7 |     }\n  |     - `second` dropped here while still borrowed\n8 |     println!(\"{}\", e);\n  |                    - borrow later used here\n</code></pre>\n\n<p>More information can be found in <a href=\"https://doc.rust-lang.org/rust-by-example/scope/lifetime/static_lifetime.html\" rel=\"noreferrer\">Static - Rust By Example</a></p>\n"}], "owner": {"reputation": 1263, "user_id": 5817767, "user_type": "registered", "accept_rate": 0, "profile_image": "https://graph.facebook.com/209584382725014/picture?type=large", "display_name": "Pawan Kumar", "link": "https://stackoverflow.com/users/5817767/pawan-kumar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 204, "favorite_count": 0, "accepted_answer_id": 54115589, "answer_count": 1, "score": 5, "last_activity_date": 1607674257, "creation_date": 1547054897, "last_edit_date": 1547055701, "question_id": 54115451, "link": "https://stackoverflow.com/questions/54115451/why-can-borrowed-string-literal-outlive-its-owner-by-faking-a-lifetime", "title": "Why can borrowed string literal outlive its owner by faking a lifetime?", "body": "<p>I understand that a borrow cannot outlive the existence of the thing it points to, to eradicate the dangling pointers.</p>\n\n<p>A borrow or an alias can outlive the owner by faking the lifetimes:</p>\n\n<pre><code>fn main() {\n    let e;\n    let first = \"abcd\";\n    {\n        let second = \"defgh\";\n        e = longest(first, second);\n    }\n    println!(\"{}\", e);\n}\n\nfn longest&lt;'a&gt;(first: &amp;'a str, second: &amp;'a str) -&gt; &amp;'a str {\n    if first.len() &gt; second.len() {\n        first\n    } else {\n        second\n    }\n}\n</code></pre>\n\n<p>Result:</p>\n\n<pre><code>defgh\n</code></pre>\n\n<p>In the above example, the variable <code>e</code> has a longer lifetime than the <code>second</code> variable and clearly the <code>first</code> &amp; <code>second</code> variables lifetimes are different. </p>\n\n<p>When <code>e</code> is initialized with <code>longest(first, second)</code> it gets the <code>second</code> variable whose lifetime to function call is faked as it is equal to <code>first</code> but it is confined to the block and it is assigned to <code>e</code> which will outlive the <code>second</code>. Why is this OK?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 2, "last_activity_date": 1547056206, "last_edit_date": 1547056206, "creation_date": 1547054025, "answer_id": 54115234, "question_id": 54114915, "link": "https://stackoverflow.com/questions/54114915/how-to-push-a-value-to-a-vec-and-append-it-to-a-string-at-the-same-time/54115234#54115234", "title": "How to push a value to a Vec and append it to a String at the same time?", "body": "<p>Reverse the order of the lines that use <code>arg</code>:</p>\n\n<pre><code>for arg in std::env::args() {\n    //newstr.push_str(&amp;format!(\" {}\", arg));\n    write!(&amp;mut newstr, \" {}\", arg);\n    v.push(arg);\n}\n</code></pre>\n\n<p><code>Vec::push</code> takes its argument by value, which moves ownership of <code>arg</code> so it can't be used anymore after <code>v.push(arg)</code>. <code>format!</code> and related macros implicitly borrow their arguments, so you can use <code>arg</code> again after using it in one of those.</p>\n\n<p>If you really needed to move the same <code>String</code> to two different locations, you would need to add <code>.clone()</code>, which copies the string. But that's not necessary in this case.</p>\n\n<p>Also note that <code>format!</code> creates a new <code>String</code>, which is wasteful when all you want is to add on to the end of an existing <code>String</code>. If you add <code>use std::fmt::Write;</code> to the top of your file, you can use <code>write!</code> instead (as shown above), which is more concise and may be more performant.</p>\n\n<h2>See also</h2>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/30288782/3650362\">What are move semantics in Rust?</a></li>\n<li><a href=\"https://stackoverflow.com/q/30972695/3650362\">error: use of moved value - should I use &quot;&amp;&quot; or &quot;mut&quot; or something else?</a></li>\n<li><a href=\"https://stackoverflow.com/q/30450399/3650362\">Does println! borrow or own the variable?</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 1, "last_activity_date": 1547054862, "last_edit_date": 1547054862, "creation_date": 1547054294, "answer_id": 54115304, "question_id": 54114915, "link": "https://stackoverflow.com/questions/54114915/how-to-push-a-value-to-a-vec-and-append-it-to-a-string-at-the-same-time/54115304#54115304", "title": "How to push a value to a Vec and append it to a String at the same time?", "body": "<p>You can do like that:</p>\n\n<pre><code>fn main() {\n    let args: Vec&lt;_&gt; = std::env::args().collect();\n    let s = args.join(\" \");\n\n    println!(\"{}\", s);\n}\n</code></pre>\n\n<p>First, you create the vector, and then you create your string.</p>\n"}], "owner": {"reputation": 13, "user_id": 10889302, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-67ZhEOGzp8A/AAAAAAAAAAI/AAAAAAAAAA4/J86lLuOFWDE/photo.jpg?sz=128", "display_name": "tantalum", "link": "https://stackoverflow.com/users/10889302/tantalum"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 272, "favorite_count": 0, "accepted_answer_id": 54115234, "answer_count": 2, "score": 0, "last_activity_date": 1547056206, "creation_date": 1547052755, "last_edit_date": 1547055782, "question_id": 54114915, "link": "https://stackoverflow.com/questions/54114915/how-to-push-a-value-to-a-vec-and-append-it-to-a-string-at-the-same-time", "title": "How to push a value to a Vec and append it to a String at the same time?", "body": "<p>I want to write a program that sets the shell for the system's nslookup command line program:</p>\n\n<pre><code>fn main() {\n    let mut v: Vec&lt;String&gt; = Vec::new();\n    let mut newstr = String::from(\"nslookup\");\n    for arg in std::env::args() {\n        v.push(arg);\n        newstr.push_str(&amp;format!(\" {}\", arg));\n    }\n    println!(\"{:?}\", v);\n    println!(\"{}\", newstr);\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0382]: borrow of moved value: `arg`\n --&gt; src/main.rs:6:41\n  |\n5 |         v.push(arg);\n  |                --- value moved here\n6 |         newstr.push_str(&amp;format!(\" {}\", arg));\n  |                                         ^^^ value borrowed here after move\n  |\n  = note: move occurs because `arg` has type `std::string::String`, which does not implement the `Copy` trait\n</code></pre>\n\n<p>How to correct the code without traversing <code>env::args()</code> again?</p>\n"}, {"tags": ["rust", "rotation", "game-physics", "discrete-mathematics"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 2, "creation_date": 1547055947, "post_id": 54114146, "comment_id": 95064144, "body": "I don&#39;t know the details of the library you are using. In general, if you want to rotate about the point (x, y) instead of the origin, you need to translate by (-x, -y) first, so the rotation centre becomes the origin. Then rotate and translate back by (x, y), so the rotation centre is moved back to its original location."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1547056112, "post_id": 54114146, "comment_id": 95064217, "body": "(That said, it is <i>possible</i> to use only a single translation that depends on both the desired rotation centre and the angle as a correction, but it&#39;s far easier to use the translate \u2013 rotate \u2013 translate back idiom described above.)"}], "answers": [{"tags": [], "owner": {"reputation": 5433, "user_id": 801924, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/e7897859ed577821631f36eceba0603d?s=128&d=identicon&r=PG", "display_name": "bux", "link": "https://stackoverflow.com/users/801924/bux"}, "is_accepted": false, "score": 0, "last_activity_date": 1619213379, "creation_date": 1619213379, "answer_id": 67237053, "question_id": 54114146, "link": "https://stackoverflow.com/questions/54114146/how-to-use-math-to-rotate-around-the-center-of-a-ggez-image-instead-of-the-top-l/67237053#67237053", "title": "How to use math to rotate around the center of a ggez image instead of the top left?", "body": "<p>In following example:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use ggez;\nuse ggez::event;\nuse ggez::graphics;\nuse ggez::graphics::{DrawMode, MeshBuilder};\nuse ggez::nalgebra as na;\nuse ggez::timer::check_update_time;\nuse ggez::{Context, GameResult};\nuse std::env;\nuse std::path;\n\nstruct MainState {\n    rotate: f32,\n    sprite_batch: graphics::spritebatch::SpriteBatch,\n}\n\nimpl MainState {\n    fn new(ctx: &amp;mut Context) -&gt; GameResult&lt;MainState&gt; {\n        let image = graphics::Image::new(ctx, &quot;/sprite_sheet.png&quot;).unwrap();\n        let batch = graphics::spritebatch::SpriteBatch::new(image);\n        Ok(MainState {rotate: 0.0, sprite_batch: batch})\n    }\n}\n\nimpl event::EventHandler for MainState {\n    fn update(&amp;mut self, ctx: &amp;mut Context) -&gt; GameResult {\n        while check_update_time(ctx, 30) {\n            self.rotate += 0.1;\n        }\n        Ok(())\n    }\n\n    fn draw(&amp;mut self, ctx: &amp;mut Context) -&gt; GameResult {\n        graphics::clear(ctx, graphics::BLACK);\n\n        let mesh = MeshBuilder::new().circle(\n            DrawMode::fill(),\n            na::Point2::new(400.0, 300.0),\n            2.0,\n            2.0,\n            graphics::WHITE,\n        ).build(ctx)?;\n        self.sprite_batch.add(\n            graphics::DrawParam::new()\n                .src(graphics::Rect::new(0.0, 0.0, 1.0, 1.0))\n                .rotation(self.rotate)\n                .dest(na::Point2::new(400.0, 300.0))\n                .offset(na::Point2::new(0.5, 0.5)),\n        );\n\n        graphics::draw(\n            ctx,\n            &amp;self.sprite_batch,\n            graphics::DrawParam::new().dest(na::Point2::new(0.0, 0.0)),\n        )?;\n        graphics::draw(\n            ctx,\n            &amp;mesh,\n            graphics::DrawParam::new().dest(na::Point2::new(0.0, 0.0)),\n        )?;\n\n        self.sprite_batch.clear();\n        graphics::present(ctx)?;\n\n        Ok(())\n    }\n}\n\npub fn main() -&gt; GameResult {\n    let resource_dir = if let Ok(manifest_dir) = env::var(&quot;CARGO_MANIFEST_DIR&quot;) {\n        let mut path = path::PathBuf::from(manifest_dir);\n        path.push(&quot;resources&quot;);\n        path\n    } else {\n        path::PathBuf::from(&quot;./resources&quot;)\n    };\n\n    let cb = ggez::ContextBuilder::new(&quot;oc&quot;, &quot;bux&quot;)\n        .add_resource_path(resource_dir)\n        .window_mode(ggez::conf::WindowMode::default().dimensions(800.0, 600.0));\n    let (ctx, event_loop) = &amp;mut cb.build()?;\n\n    let state = &amp;mut MainState::new(ctx)?;\n    event::run(ctx, event_loop, state)\n}\n</code></pre>\n<p>Where <code>resources/sprite_sheet.png</code> is: <a href=\"https://i.stack.imgur.com/ZPTCm.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/ZPTCm.png\" alt=\"enter image description here\" /></a></p>\n<p>The which do rotation from the center of the image is:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>.offset(na::Point2::new(0.5, 0.5))\n</code></pre>\n"}], "owner": {"reputation": 647, "user_id": 4086020, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/51666e33b30fa4041da075151209a271?s=128&d=identicon&r=PG&f=1", "display_name": "HKVariant", "link": "https://stackoverflow.com/users/4086020/hkvariant"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 244, "favorite_count": 0, "answer_count": 1, "score": 4, "last_activity_date": 1619213379, "creation_date": 1547050216, "last_edit_date": 1547080491, "question_id": 54114146, "link": "https://stackoverflow.com/questions/54114146/how-to-use-math-to-rotate-around-the-center-of-a-ggez-image-instead-of-the-top-l", "title": "How to use math to rotate around the center of a ggez image instead of the top left?", "body": "<p>I'm making a game using <a href=\"https://github.com/ggez/ggez\" rel=\"nofollow noreferrer\">ggez</a>, using a camera from <a href=\"https://crates.io/crates/ggez-goodies\" rel=\"nofollow noreferrer\">ggez_goodies</a>.</p>\n\n<p>This camera only has rotation from the top left of an image, but I want it from the center. Is there a good way to position the image so that it rotates around the center instead?</p>\n\n<p>I'd assume you'd just change the position to fix this, what I have currently is <em>just</em> the position</p>\n\n<pre><code>self.image\n    .draw_camera(\n        camera,\n        ctx,\n        graphics::Point2::new(self.position.0, self.position.1),\n        self.rotation,\n    )\n    .unwrap();\n</code></pre>\n\n<p>I'm guessing a fix would look sort of like this:</p>\n\n<pre><code>self.image\n    .draw_camera(\n        camera,\n        ctx,\n        graphics::Point2::new(\n            self.position.0 + self.rotation_offset.0,\n            self.position.1 + self.rotation_offset.1,\n        ),\n        self.rotation,\n    )\n    .unwrap();\n</code></pre>\n\n<p>I think it would be possible with an offset, but I can't figure out how to set the offset based off of the rotation angle.</p>\n\n<p>What offset/change could I make to the position to get the image to rotate  based around the center instead of around the top left corner?</p>\n"}, {"tags": ["data-structures", "rust", "mutability", "interior-mutability"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 2, "creation_date": 1547026307, "post_id": 54105455, "comment_id": 95046015, "body": "If you want to have multiple &quot;cursors&quot; at the same time, and each of them is supposed to be able to mutate the list, you need some kind of lock to prevent these mutations from happening simultaneously. In the single-threaded case, this could be achieved with <code>RefCell</code>, and in the multi-threaded case with <code>Mutex</code> or <code>RwLock</code>. In any case, there will be some runtime &quot;overhead&quot; if you want to ensure memory safety. (Overhead in quotes, since I&#39;m not sure if something that is needed to achieve a goal can be called overhead.)"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 3, "creation_date": 1547035115, "post_id": 54105455, "comment_id": 95051314, "body": "I read your description, and I am still not clear on what you actually want. That&#39;s why it&#39;s better to present a code sample, even if it&#39;s only &quot;here&#39;s an interface and example of use&quot;."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1547036319, "post_id": 54105455, "comment_id": 95052057, "body": "(1) Are the nodes supposed to own the structure (shared) or are the nodes only references in the structure? (2) Are all nodes omnipotent, or could there be up to N &quot;view&quot; nodes but a single &quot;modifier&quot; node at any point in time?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1547039011, "post_id": 54105455, "comment_id": 95053706, "body": "(3) Does &quot;allowing the relative order of the nodes to be changed&quot; mean moving the nodes around, or just updating pointers that link them?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1547044139, "post_id": 54105455, "comment_id": 95056854, "body": "(4) Related to Peter&#39;s question: can you observe the neighbouring nodes from any node, or only observe the element held by the node."}, {"owner": {"reputation": 7066, "user_id": 94102, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/622606bdd7ad08e2d2e177a8a8bb507a?s=128&d=identicon&r=PG", "display_name": "Jeremy Salwen", "link": "https://stackoverflow.com/users/94102/jeremy-salwen"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1547094300, "post_id": 54105455, "comment_id": 95075819, "body": "@SvenMarnach The cursors are read-only unless one of them at a time is explicitly upgraded to read-write.  But the safety should be enforced by the liftimes of the access, not dynamically."}, {"owner": {"reputation": 7066, "user_id": 94102, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/622606bdd7ad08e2d2e177a8a8bb507a?s=128&d=identicon&r=PG", "display_name": "Jeremy Salwen", "link": "https://stackoverflow.com/users/94102/jeremy-salwen"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1547094686, "post_id": 54105455, "comment_id": 95075877, "body": "@MatthieuM. I expanded the original question with an example pseudocode. (1) The nodes are just the nodes of a linked list, owned by the list.  But the user of the API receives some &quot;handle&quot; to a specific node, through which they can access the node. (2) There could be N &quot;handles&quot; at a given time, and all N could be used to access the data immutably at a time, or one could be given exclusive mutable access at a time. (3) I mean to modify the links in the linked list, without touching the data.  (4) You can observe any node by iterating from any handle, and mutate any node through any handle."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1547105347, "post_id": 54105455, "comment_id": 95078911, "body": "@JeremySalwen: Regarding (1), is the handle received keeping the list alive (ie, can I allocate a list in a function, return a handle, and continue accessing the list from this handle) or does the handle only &quot;borrow&quot; from the list, and cannot outlive it?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1547105714, "post_id": 54105455, "comment_id": 95079077, "body": "@JeremySalwen: Your requirement of no run-time overhead is impossible to satisfy in the presence of <code>handle1.get_mut()</code>: it&#39;s a run-time condition whether a mutable borrow is ongoing on a given node&#39;s data (or a list)."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1547106577, "post_id": 54105455, "comment_id": 95079475, "body": "@JeremySalwen: On the other hand, if you are open to some tweaks to the interface... but it&#39;ll look quite different."}, {"owner": {"reputation": 7066, "user_id": 94102, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/622606bdd7ad08e2d2e177a8a8bb507a?s=128&d=identicon&r=PG", "display_name": "Jeremy Salwen", "link": "https://stackoverflow.com/users/94102/jeremy-salwen"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1547137290, "post_id": 54105455, "comment_id": 95097117, "body": "@MatthieuM.  Regarding (1), my expectation was that the handle does not keep the list alive, and cannot outlive it."}, {"owner": {"reputation": 7066, "user_id": 94102, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/622606bdd7ad08e2d2e177a8a8bb507a?s=128&d=identicon&r=PG", "display_name": "Jeremy Salwen", "link": "https://stackoverflow.com/users/94102/jeremy-salwen"}, "edited": false, "score": 0, "creation_date": 1547137559, "post_id": 54105455, "comment_id": 95097268, "body": "I am definitely open to rewrite the interface, I was just trying to show conceptually what it would do.   I don&#39;t think that conceptually allowing mutable access requires a runtime check.  For example, the <code>handle1.get_mut()</code> could take a mutable reference to the list as an argument, which would allow us to certify at compile-time that it has exclusive access."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1547137983, "post_id": 54105455, "comment_id": 95097531, "body": "@JeremySalwen: I&#39;ve prototyped an idea that should work; I&#39;ve asked people to help reopen the question now that it&#39;s been clarified and I&#39;ll polish my answer in the mean time. Hint: access token."}], "answers": [{"comments": [{"owner": {"reputation": 7066, "user_id": 94102, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/622606bdd7ad08e2d2e177a8a8bb507a?s=128&d=identicon&r=PG", "display_name": "Jeremy Salwen", "link": "https://stackoverflow.com/users/94102/jeremy-salwen"}, "edited": false, "score": 0, "creation_date": 1547862186, "post_id": 54136158, "comment_id": 95350919, "body": "Very Cool!  I was unable to find anything on google about &quot;brands&quot; in this context.  I assume it&#39;s something like dependent types that refer to a specific instance of the list?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 7066, "user_id": 94102, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/622606bdd7ad08e2d2e177a8a8bb507a?s=128&d=identicon&r=PG", "display_name": "Jeremy Salwen", "link": "https://stackoverflow.com/users/94102/jeremy-salwen"}, "edited": false, "score": 0, "creation_date": 1547900055, "post_id": 54136158, "comment_id": 95357260, "body": "@JeremySalwen: Yes, the idea is that you link two variables together (for example, a list and an index guaranteed to be valid for it) at compile-time, and then you can write functions only accepting two variables with the same &quot;brand&quot;. In Rust, lifetimes are very close, however the compiler is allowed to merge lifetime regions, so you cannot guarantee that two list instances will have distinct lifetimes and thus they cannot be used as brands. See <a href=\"https://www.reddit.com/r/rust/comments/2s2etw/leveraging_the_type_system_to_elide_bounds_checks/\" rel=\"nofollow noreferrer\">reddit.com/r/rust/comments/2s2etw/&hellip;</a>"}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 2, "last_activity_date": 1547150684, "creation_date": 1547150684, "answer_id": 54136158, "question_id": 54105455, "link": "https://stackoverflow.com/questions/54105455/safely-return-multiple-references-to-internal-nodes-while-still-allowing-mutati/54136158#54136158", "title": "Safely return multiple references to internal nodes, while still allowing mutation of other nodes", "body": "<blockquote>\n  <p>In other words, the data contained inside the nodes of the list is treated as one resource that can be borrowed shared/mutably, and the links between the nodes are another resource that can be borrowed shared/mutably.</p>\n</blockquote>\n\n<p>The idea to deal with such spatial partitioning is to introduce a different \"key\" for each partition; it's easy since they are static. This has been dubbed the PassKey pattern.</p>\n\n<p>In the absence of <em>brands</em>, it will still require a run-time check: verifying that the elements-key is tied to this specific list instance is mandatory for safety. This is, however, a read-only comparison that will always be <code>true</code>, so the performance is about as good as it gets as far as run-time checks go.</p>\n\n<p>The idea, in a nutshell:</p>\n\n<pre><code>let (handles, elements) = list.keys();\nlet h0 = handles.create(4);\nhandles.swap(h0, h1);\nlet e = elements.get(h0);\n</code></pre>\n\n<p>In your usecase:</p>\n\n<ul>\n<li>It is always possible to change the links, so we will use internal mutability for this.</li>\n<li>The borrow-check on elements inside handles will be carried out by borrowing <code>elements</code>.</li>\n</ul>\n\n<p>The full implementation can be found <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=449fbe1f711f7561dd6eeb6c491e3e4f\" rel=\"nofollow noreferrer\">here</a>. It heavily uses <code>unsafe</code>, and I make no promise that it is fully safe, however it is hopefully sufficient for a demonstration.</p>\n\n<hr>\n\n<p>In this implementation, I have opted for dumb handles and implemented the operations on the key types themselves. This limited the number of types who needed to borrow from the main list, and simplified borrowing.</p>\n\n<p>The core idea, then:</p>\n\n<pre><code>struct LinkedList&lt;T&gt; {\n    head: *mut Node&lt;T&gt;,\n    tail: *mut Node&lt;T&gt;\n}\n\nstruct Handles&lt;'a, T&gt; {\n    list: ptr::NonNull&lt;LinkedList&lt;T&gt;&gt;,\n    _marker: PhantomData&lt;&amp;'a mut LinkedList&lt;T&gt;&gt;,\n}\n\nstruct Elements&lt;'a, T&gt; {\n    list: ptr::NonNull&lt;LinkedList&lt;T&gt;&gt;,\n    _marker: PhantomData&lt;&amp;'a mut LinkedList&lt;T&gt;&gt;,\n}\n</code></pre>\n\n<p><code>LinkedList&lt;T&gt;</code> will act as the storage, however will implement only 3 operations:</p>\n\n<ul>\n<li>construction,</li>\n<li>destruction,</li>\n<li>handing out the keys.</li>\n</ul>\n\n<p>The two keys <code>Handles</code> and <code>Elements</code> will both borrow the list mutably, guaranteeing that a single of (each of them) can exist simultaneously. Borrow-checking will prevent a new <code>Handles</code> or <code>Elements</code> from being created if any instance of them still lives for this list:</p>\n\n<ul>\n<li><code>list</code>: grants access to the list storage; <code>Elements</code> will only use it for checking (necessary) run-time invariants and never dereference it.</li>\n<li><code>_marker</code>: is the key to the borrow-checking actually guaranteeing exclusitivity.</li>\n</ul>\n\n<p>Sounds cool so far? For completion, the last two structures then:</p>\n\n<pre><code>struct Handle&lt;'a, T&gt; {\n    node: ptr::NonNull&lt;Node&lt;T&gt;&gt;,\n    list: ptr::NonNull&lt;LinkedList&lt;T&gt;&gt;,\n    _marker: PhantomData&lt;&amp;'a LinkedList&lt;T&gt;&gt;,\n}\n\nstruct Node&lt;T&gt; {\n    data: T,\n    prev: *mut Node&lt;T&gt;,\n    next: *mut Node&lt;T&gt;,\n}\n</code></pre>\n\n<p><code>Node</code> is the most obvious representation of a doubly-linked list ever, so we're doing something right. The <code>list</code> in <code>Handle&lt;T&gt;</code> is there for the exact same purpose as the one in <code>Elements</code>: verifying that both <code>Handle</code> and <code>Handles</code>/<code>Elements</code> are talking about the same instance of <code>list</code>. It's critical for <code>get_mut</code> to be safe, and otherwise helps avoiding bugs.</p>\n\n<p>There's a subtle reason for <code>Handle&lt;'a, T&gt;</code> having a lifetime tying to the <code>LinkedList</code>. I was tempted to remove it, however this would allow creating a handle from a list, destroying the list, then recreating a list at the same address... and <code>handle.node</code> would now be dangling!</p>\n\n<p>And with, we only need to implement the methods we need on <code>Handles</code> and <code>Elements</code>. A few samples:</p>\n\n<pre><code>impl&lt;'a, T&gt; Handles&lt;'a, T&gt; {\n    pub fn push_front(&amp;self, data: T) -&gt; Handle&lt;'a, T&gt; {\n        let list = unsafe { &amp;mut *self.list.as_ptr() };\n\n        let node = Box::into_raw(Box::new(Node { data, prev: ptr::null_mut(), next: list.head }));\n        unsafe { &amp;mut *node }.set_neighbours();\n\n        list.head = node;\n\n        if list.tail.is_null() {\n            list.tail = node;\n        }\n\n        Handle {\n            node: unsafe { ptr::NonNull::new_unchecked(node) },\n            list: self.list, _marker: PhantomData,\n        }\n    }\n\n    pub fn prev(&amp;self, handle: Handle&lt;'a, T&gt;) -&gt; Option&lt;Handle&lt;'a, T&gt;&gt; {\n        unsafe { handle.node.as_ref() }.prev().map(|node| Handle {\n            node,\n            list: self.list,\n            _marker: PhantomData\n        })\n    }\n}\n</code></pre>\n\n<p>And:</p>\n\n<pre><code>impl&lt;'a, T&gt; Elements&lt;'a, T&gt; {\n    pub fn get&lt;'b&gt;(&amp;'b self, handle: Handle&lt;'a, T&gt;) -&gt; &amp;'b T {\n        assert_eq!(self.list, handle.list);\n\n        let node = unsafe { &amp;*handle.node.as_ptr() };\n        &amp;node.data\n    }\n\n    pub fn get_mut&lt;'b&gt;(&amp;'b mut self, handle: Handle&lt;'a, T&gt;) -&gt; &amp;'b mut T {\n        assert_eq!(self.list, handle.list);\n\n        let node = unsafe { &amp;mut *handle.node.as_ptr() };\n        &amp;mut node.data\n    }\n}\n</code></pre>\n\n<p>And this should be safe because:</p>\n\n<ul>\n<li><code>Handles</code>, after creating a new handle, only ever accesses its links.</li>\n<li><code>Elements</code> only ever returns references to <code>data</code>, and the links cannot be modified while it accesses them.</li>\n</ul>\n\n<p>Example of usage:</p>\n\n<pre><code>fn main() {\n    let mut linked_list = LinkedList::default();\n    {\n        let (handles, mut elements) = linked_list.access();\n        let h0 = handles.push_front(\"Hello\".to_string());\n\n        assert!(handles.prev(h0).is_none());\n        assert!(handles.next(h0).is_none());\n\n        println!(\"{}\", elements.get(h0));\n\n        let h1 = {\n            let first = elements.get_mut(h0);\n            first.replace_range(.., \"Hallo\");\n\n            let h1 = handles.push_front(\"World\".to_string());\n            assert!(handles.prev(h0).is_some());\n\n            first.replace_range(.., \"Goodbye\");\n\n            h1\n        };\n\n        println!(\"{} {}\", elements.get(h0), elements.get(h1));\n\n        handles.swap(h0, h1);\n\n        println!(\"{} {}\", elements.get(h0), elements.get(h1));\n    }\n    {\n        let (handles, elements) = linked_list.access();\n\n        let h0 = handles.front().unwrap();\n        let h1 = handles.back().unwrap();\n        let h2 = handles.push_back(\"And thanks for the fish!\".to_string());\n\n        println!(\"{} {}! {}\", elements.get(h0), elements.get(h1), elements.get(h2));\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 7066, "user_id": 94102, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/622606bdd7ad08e2d2e177a8a8bb507a?s=128&d=identicon&r=PG", "display_name": "Jeremy Salwen", "link": "https://stackoverflow.com/users/94102/jeremy-salwen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 128, "favorite_count": 1, "accepted_answer_id": 54136158, "answer_count": 1, "score": 2, "last_activity_date": 1547150684, "creation_date": 1547020533, "last_edit_date": 1547094017, "question_id": 54105455, "link": "https://stackoverflow.com/questions/54105455/safely-return-multiple-references-to-internal-nodes-while-still-allowing-mutati", "title": "Safely return multiple references to internal nodes, while still allowing mutation of other nodes", "body": "<p>Suppose, for example, I have a linked list which does not allow removal of nodes.</p>\n\n<p>Would it be possible to return shared references to values which have already been inserted, while still allowing the relative order of the nodes to be changed, or new nodes inserted?</p>\n\n<p>Even mutation through one of the nodes should be safe \"on paper\" as long as only one node is used to mutate the list at a time.  Is it possible to represent this in rust's ownership system?</p>\n\n<p>I'm specifically interested in doing so without runtime overhead (potentially using unsafe in the implementation, but not in the interface).</p>\n\n<p>EDIT: As requested, here is an example that gives the outline of what I am thinking of.</p>\n\n<pre><code>let list = MyLinkedList::&lt;i32&gt;::new()\nlet handle1 = list.insert(1); // Returns a handle to the inserted element.\nlet handle2 = list.insert(2);\n\nlet value1 : &amp;i32 = handle1.get();\nlet value2 : &amp;i32 = handle2.prev().get(); // Ok to have two immutable references to the same element.\nlist.insert(3); // Also ok to insert and swap nodes, while the references are held.\nlist.swap(handle1,handl2);\nfoo(value1,value2);\n\nlet exclusive_value: &amp;mut i32 = handle1.get_mut(); // While this reference is held, no other handles can be used, but insertion and permutation are ok \nhandle5 = list.insert(4);\nlist.swap(handle1, handle2);\n</code></pre>\n\n<p>In other words, the data contained inside the nodes of the list is treated as one resource that can be borrowed shared/mutably, and the links between the nodes are another resource that can be borrowed shared/mutably.</p>\n"}, {"tags": ["rust", "lifetime", "borrow-checker", "borrowing"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1547019057, "post_id": 54103238, "comment_id": 95042428, "body": "You have three different lifetimes <code>&#39;a</code>, <code>&#39;b</code> and <code>&#39;c</code> (for the output). How should the compiler know which one depends on which? :/ So this is not <i>very clear</i> for the compiler."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1547042359, "post_id": 54103238, "comment_id": 95055711, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/31609137/why-are-explicit-lifetimes-needed-in-rust\">Why are explicit lifetimes needed in Rust?</a>"}], "answers": [{"comments": [{"owner": {"reputation": 32098, "user_id": 124319, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/lVhrR.jpg?s=128&g=1", "display_name": "coredump", "link": "https://stackoverflow.com/users/124319/coredump"}, "edited": false, "score": 0, "creation_date": 1547038393, "post_id": 54103966, "comment_id": 95053301, "body": "Woudln&#39;t the fact that the function returns <code>t</code> be enough to know the lifetime?"}, {"owner": {"reputation": 3054, "user_id": 115030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c74c0974c6cc25c194a2737e2d6747?s=128&d=identicon&r=PG", "display_name": "Anders Kaseorg", "link": "https://stackoverflow.com/users/115030/anders-kaseorg"}, "reply_to_user": {"reputation": 32098, "user_id": 124319, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/lVhrR.jpg?s=128&g=1", "display_name": "coredump", "link": "https://stackoverflow.com/users/124319/coredump"}, "edited": false, "score": 2, "creation_date": 1547039096, "post_id": 54103966, "comment_id": 95053759, "body": "@coredump The type of the function is supposed to encapsulate everything there is to know about how it can and can&#39;t be called. If you have to peek inside the implementation to see how it can be called, then the implementation becomes part of the public interface; every change to the implementation becomes a potentially backwards-incompatible change. And traits with multiple potential implementations would no longer be possible to specify. Basically, it would be bad."}, {"owner": {"reputation": 32098, "user_id": 124319, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/lVhrR.jpg?s=128&g=1", "display_name": "coredump", "link": "https://stackoverflow.com/users/124319/coredump"}, "edited": false, "score": 0, "creation_date": 1547040828, "post_id": 54103966, "comment_id": 95054832, "body": "Thanks, makes sense"}], "tags": [], "owner": {"reputation": 3054, "user_id": 115030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c74c0974c6cc25c194a2737e2d6747?s=128&d=identicon&r=PG", "display_name": "Anders Kaseorg", "link": "https://stackoverflow.com/users/115030/anders-kaseorg"}, "is_accepted": true, "score": 6, "last_activity_date": 1547021651, "last_edit_date": 1547021651, "creation_date": 1547013000, "answer_id": 54103966, "question_id": 54103238, "link": "https://stackoverflow.com/questions/54103238/why-does-borrow-checker-need-life-time-tags-for-output-when-the-inputs-are-very/54103966#54103966", "title": "Why does borrow checker need life time tags for output when the inputs are very clear?", "body": "\n\n<p>You haven\u2019t told the compiler whether the return value may borrow from <code>s</code>, from <code>t</code>, from both, or from neither:</p>\n\n<pre class=\"lang-rs prettyprint-override\"><code>fn from_s&lt;'a, 'b&gt;(s: &amp;'a str, t: &amp;'b str) -&gt; &amp;'a str {\n    // can be abbreviated: fn from_s&lt;'a&gt;(s: &amp;'a str, t: &amp;str) -&gt; &amp;'a str\n    s\n}\n\nfn from_t&lt;'a, 'b&gt;(s: &amp;'a str, t: &amp;'b str) -&gt; &amp;'b str {\n    // can be abbreviated: fn from_t&lt;'a&gt;(s: &amp;str, t: &amp;'a str) -&gt; &amp;'a str\n    t\n}\n\nfn from_both&lt;'a&gt;(s: &amp;'a str, t: &amp;'a str) -&gt; &amp;'a str {\n    if s &lt; t {\n        s\n    } else {\n        t\n    }\n}\n\nfn from_neither&lt;'a, 'b&gt;(s: &amp;'a str, t: &amp;'b str) -&gt; &amp;'static str {\n    // can be abbreviated: fn func(s: &amp;str, t: &amp;str) -&gt; &amp;'static str\n    \"foo\"\n}\n</code></pre>\n\n<p>The compiler can assume the last one isn\u2019t what you wanted if you didn\u2019t write <code>'static</code>.  But you still need to disambiguate between the first three.</p>\n\n<p>To see why the difference would matter, consider a caller like</p>\n\n<pre class=\"lang-rs prettyprint-override\"><code>fn main() {\n    let s = String::from(\"s\");\n    let r;\n    {\n        let t = String::from(\"t\");\n        r = from_s(&amp;s, &amp;t);\n        // t goes out of scope\n    }\n    println!(\"{}\", r);\n}\n</code></pre>\n\n<p>If the compiler allowed you to call <code>from_t</code> instead of <code>from_s</code>, you\u2019d be printing a string that had already been freed.</p>\n"}, {"tags": [], "owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "is_accepted": false, "score": 1, "last_activity_date": 1547013953, "creation_date": 1547013953, "answer_id": 54104110, "question_id": 54103238, "link": "https://stackoverflow.com/questions/54103238/why-does-borrow-checker-need-life-time-tags-for-output-when-the-inputs-are-very/54104110#54104110", "title": "Why does borrow checker need life time tags for output when the inputs are very clear?", "body": "<p>If I understand correctly, the question is \"why both arguments may have the same lifetime?\" The short answer is that the lifetime annotations are not <em>concrete</em> values, but rather <em>bounds</em> - it states that \"this value must live no more/no less then this lifetime\".</p>\n\n<p>When you're writing your code as you do in question: <code>fn func&lt;'a&gt;(s: &amp;'a str, t: &amp;'a str) -&gt; &amp;'a str</code>, you're saying literally the following:</p>\n\n<ul>\n<li>there is some lifetime - let's name it <code>'a</code>, which can be different on every call site.</li>\n<li>arguments <code>s</code> and <code>t</code> must both live <em>no less</em> then <code>'a</code> (for string literals, this is always the case, since they are <code>'static</code>, but this may not hold for <code>&amp;String</code> coerced to <code>&amp;str</code>) - that is, function type is <strong>contra</strong>variant over arguments types (and the lifetime is part of a type).</li>\n<li>return value must live <em>no more</em> then <code>'a</code> - function type is <strong>co</strong>variant over the return type.</li>\n</ul>\n\n<p>(for more information on variance see the <a href=\"https://doc.rust-lang.org/nomicon/subtyping.html\" rel=\"nofollow noreferrer\">Rustonomicon</a>)</p>\n\n<p>Simplified, this means that both arguments must outlive the return value. This is not always what you want - consider the following case (note that I'm returning <code>s</code> now, so that the initialization order doesn't change):</p>\n\n<pre><code>fn main() {\n    let ss = \"abc\";\n    let mut result = \"\";\n    {\n        let tt = \"def\".to_string();\n        result = func(ss, &amp;tt);\n    }\n    println!(\"{}\", result);\n}    \n\nfn func&lt;'a&gt;(s: &amp;'a str, t: &amp;'a str) -&gt; &amp;'a str {\n    s\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=8c1fefc825b3036340f3b7d045a9eb5a\" rel=\"nofollow noreferrer\">playground</a>)</p>\n\n<p>This code won't compile, although it is logically correct, since the lifetime annotations don't agree with logic: second argument, <code>t</code>, is in no way connected to the return value, and yet it limits its lifetime, according to function annotations. But when we change function to the following:</p>\n\n<pre><code>fn func&lt;'a, 'b&gt;(s: &amp;'a str, t: &amp;'b str) -&gt; &amp;'a str {\n    s\n}\n</code></pre>\n\n<p>...it compiles and return the desired result (although with some warnings), since now the lifetime <code>'b</code> isn't connected with <code>'a</code> and, in fact, can be removed at all - lifetime elision will do its work well.</p>\n"}], "owner": {"reputation": 1263, "user_id": 5817767, "user_type": "registered", "accept_rate": 0, "profile_image": "https://graph.facebook.com/209584382725014/picture?type=large", "display_name": "Pawan Kumar", "link": "https://stackoverflow.com/users/5817767/pawan-kumar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 115, "favorite_count": 0, "accepted_answer_id": 54103966, "answer_count": 2, "score": 1, "last_activity_date": 1547035654, "creation_date": 1547008099, "last_edit_date": 1547035654, "question_id": 54103238, "link": "https://stackoverflow.com/questions/54103238/why-does-borrow-checker-need-life-time-tags-for-output-when-the-inputs-are-very", "title": "Why does borrow checker need life time tags for output when the inputs are very clear?", "body": "<p>Why does the borrow checker gets confused about the lifetimes in the below code</p>\n\n<pre><code>fn main() {\n    let ss = \"abc\"; // lets say 'a scope\n    let tt = \"def\"; // lets say 'b scope\n    let result = func(ss, tt);\n}    \n\nfn func(s: &amp;str, t: &amp;str) -&gt; &amp;str {\n    t\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>| fn func(s: &amp;str, t: &amp;str) -&gt; &amp;str {\n|                              ^ expected lifetime parameter\n|\n= help: this function's return type contains a borrowed value, but the signature does not say whether it is borrowed from `s` or `t`\n</code></pre>\n\n<p>Why does it even matter what is going out in this code? Am I missing something very important edge case?</p>\n\n<p>but when I annotate them with life time tags it works.</p>\n\n<pre><code>fn func&lt;'a&gt;(s: &amp;'a str, t: &amp;'a str) -&gt; &amp;'a str {\n    t\n}\n</code></pre>\n\n<p>I read that each variable binding (let) creates an Implicit scope, then how come 2 input variables have same scope. Correct me If I'm worng. In the function call 'func' stack, \"s\" will be pushed first and then \"t\", So \"s\" and \"t\" have different lifetimes. First \"t\" is dropped and then \"s\".</p>\n"}, {"tags": ["reactjs", "webview", "rust", "webassembly", "wasm-bindgen"], "owner": {"reputation": 43, "user_id": 3034758, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/be6f011cd826d59c0309edd5dd41c6a5?s=128&d=identicon&r=PG&f=1", "display_name": "user3034758", "link": "https://stackoverflow.com/users/3034758/user3034758"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 597, "favorite_count": 1, "answer_count": 0, "score": 4, "last_activity_date": 1547080831, "creation_date": 1547007293, "last_edit_date": 1547080831, "question_id": 54103154, "link": "https://stackoverflow.com/questions/54103154/how-can-i-load-wasm-modules-in-webview-with-rust", "title": "How can I load WASM modules in webview with Rust?", "body": "<p>I'm trying to host a React app in <a href=\"https://github.com/Boscop/web-view\" rel=\"nofollow noreferrer\">webview</a> which uses a compiled Rust -> WebAssembly module.</p>\n\n<p>I get this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Unhandled promise rejection: TypeError: URL is not valid or contains user credentials.\n</code></pre>\n\n<p>The WASM module gets called in one of the components:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>const { mymod } = require(\"../../wasm/mymod\");\n</code></pre>\n\n<p>Then I use webpack to bundle it all.</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>const webpackConfig = {\n  entry: \"./frontend/bootstrap.js\",\n  output: {\n    path: path.resolve(__dirname, \"dist\"),\n    filename: \"bundle.js\",\n  },\n  mode: \"development\",\n  module: {\n    rules: [\n    ]\n  },\n  plugins: [\n    new HtmlWebPackPlugin({\n      template: \"./frontend/index.html\"\n    }),\n    new MiniCssExtractPlugin(),\n  ]\n};\n</code></pre>\n\n<p>Then I load it in webview:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let html = format!(r#\"...\");\n\n    web_view::builder()\n        .title(\"my app\")\n        .content(Content::Html(html))\n        .size(320, 480)\n        .resizable(true)\n        .debug(true)\n        .user_data(())\n        .invoke_handler(|_webview, _arg| Ok(()))\n        .run()\n        .unwrap();\n}\n</code></pre>\n\n<p>The error in the JavaScript debugger leads to this line of code:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>var req = fetch(__webpack_require__.p + \"\" + {\"./frontend/wasm/mymod_bg.wasm\":\"31335016d485c8fcb290\"}[wasmModuleId] + \".module.wasm\")\n</code></pre>\n"}, {"tags": ["git", "rust", "pull", "libgit2"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 3, "creation_date": 1546991569, "post_id": 54100789, "comment_id": 95035689, "body": "For unknow reason, <code>git2-rs</code> doesn&#39;t bind <a href=\"https://libgit2.org/libgit2/#HEAD/group/annotated/git_annotated_commit_from_fetchhead\" rel=\"nofollow noreferrer\"><code>git_annotated_commit_from_fetchhead()</code></a>, I suggest you open an issue on github."}, {"owner": {"reputation": 113, "user_id": 4493387, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/774d4173a27dc62ea12c13c1b46f0b30?s=128&d=identicon&r=PG&f=1", "display_name": "aphorisme", "link": "https://stackoverflow.com/users/4493387/aphorisme"}, "edited": false, "score": 1, "creation_date": 1547226991, "post_id": 54100789, "comment_id": 95133487, "body": "So, I&#39;ve found  <code>let reference = repo.find_reference(&quot;FETCH_HEAD&quot;)?;     let fetch_head_commit = repo.reference_to_annotated_commit(&amp;reference)?; </code> but <code>repo.merge(&amp;[&amp;fetch_head_commit], None, None)?;</code> seems to miss a commit? See also <a href=\"https://github.com/alexcrichton/git2-rs/issues/129#issuecomment-302979206\" rel=\"nofollow noreferrer\">reset to fetched</a>"}], "answers": [{"tags": [], "owner": {"reputation": 564, "user_id": 612829, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/wB0H0.jpg?s=128&g=1", "display_name": "Martin Ellison", "link": "https://stackoverflow.com/users/612829/martin-ellison"}, "is_accepted": false, "score": 0, "last_activity_date": 1568958504, "last_edit_date": 1568958504, "creation_date": 1568958203, "answer_id": 58022401, "question_id": 54100789, "link": "https://stackoverflow.com/questions/54100789/how-is-git-pull-done-with-the-git2-rs-rust-crate/58022401#58022401", "title": "How is &quot;git pull&quot; done with the git2-rs Rust crate?", "body": "<p>Try something like:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>        let our_commit = find_last_commit()?;\n        let reference = repo.find_reference(\"FETCH_HEAD\")?;\n        let their_commit = reference.peel_to_commit()?;\n        let _index = repo\n                .merge_commits(&amp;our_commit, &amp;their_commit, Some(&amp;MergeOptions::new()))?;\n</code></pre>\n\n<p>using</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>   pub fn find_last_commit(repo: &amp;Repository) -&gt; Result&lt;Commit, RepoError&gt; {\n        let obj = repo.head()?.resolve()?.peel(ObjectType::Commit)?;\n        match obj.into_commit() {\n            Ok(c) =&gt; Ok(c),\n            _ =&gt; Err(RepoError::new(\"commit error\")),\n        }\n    } \n</code></pre>\n"}], "owner": {"reputation": 119, "user_id": 2174937, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/16ccf8e9e98684d992d2ec60e2557b24?s=128&d=identicon&r=PG", "display_name": "jmwright", "link": "https://stackoverflow.com/users/2174937/jmwright"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 680, "favorite_count": 0, "answer_count": 1, "score": 5, "last_activity_date": 1568958504, "creation_date": 1546987458, "last_edit_date": 1546991515, "question_id": 54100789, "link": "https://stackoverflow.com/questions/54100789/how-is-git-pull-done-with-the-git2-rs-rust-crate", "title": "How is &quot;git pull&quot; done with the git2-rs Rust crate?", "body": "<p>I'm using <a href=\"https://github.com/alexcrichton/git2-rs\" rel=\"nofollow noreferrer\">git2-rs</a> to implement some standard git functionality in a Rust application. I've been reading up on git internals and understand that at a high level \"git pull\" is a \"git fetch\" followed by a \"git merge\", but am still having trouble understanding how to make it work with git2-rs. There is a discussion on an issue <a href=\"https://github.com/alexcrichton/git2-rs/issues/129\" rel=\"nofollow noreferrer\">here</a> where it's agreed that a git2-rs \"git pull\" example would be nice, but one was never created. There is an example of doing a hard reset in that discussion, but I want to avoid overwriting local changes (thus the merge). I have been unable to find an example in any other codebases that use git2-rs as well.</p>\n\n<p>The \"git reset\" example <a href=\"https://github.com/alexcrichton/git2-rs/issues/129#issuecomment-302979206\" rel=\"nofollow noreferrer\">here</a> shows how to get an OID after a fetch I think, but the merge function takes an <a href=\"https://docs.rs/git2/0.8.0/git2/struct.AnnotatedCommit.html\" rel=\"nofollow noreferrer\">AnnotatedCommit</a>, and I'm not sure how to convert between the two, or even if that's the right direction to go.</p>\n"}, {"tags": ["rust", "operators"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1546984765, "post_id": 54100030, "comment_id": 95033535, "body": "See also <a href=\"https://stackoverflow.com/q/52682164/155423\">What are the differences between using * and &amp; to compare values for equality?</a> and <a href=\"https://stackoverflow.com/q/40677086/155423\">Why isn&#39;t it possible to compare a borrowed integer to a literal integer?</a>."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1546986487, "post_id": 54100030, "comment_id": 95034165, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/40677086/why-isnt-it-possible-to-compare-a-borrowed-integer-to-a-literal-integer\">Why isn&#39;t it possible to compare a borrowed integer to a literal integer?</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1546992911, "post_id": 54100030, "comment_id": 95036023, "body": "<i>ideally in the standard library</i> \u2014 that&#39;s the <b>only</b> location. <a href=\"https://stackoverflow.com/q/25413201/155423\">How do I implement a trait I don&#39;t own for a type I don&#39;t own?</a>."}], "answers": [{"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1546984878, "post_id": 54100173, "comment_id": 95033575, "body": "<code>PartialOrd</code> takes a parameter just like <code>Rem</code> does, so I don&#39;t think it&#39;s impossible. It just... isn&#39;t done. Possibly there is some coherence reason."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1546984988, "post_id": 54100173, "comment_id": 95033631, "body": "@trentcl think this is a dupe of the Q I <a href=\"https://stackoverflow.com/questions/40677086/compare-a-borrowed-integer-to-a-literal-integer\">just linked in the comments</a>?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1546985310, "post_id": 54100173, "comment_id": 95033745, "body": "@Shepmaster Those links do not address why it <i>is</i> possible to write <code>number % prime</code>, which this answers. I&#39;m tempted to flag it but I would be happier if there were another that talks about arithmetic operations"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1546985366, "post_id": 54100173, "comment_id": 95033766, "body": "@trentcl I mean, it\u2019s because someone wrote those implementations, yeah?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1546986740, "post_id": 54100173, "comment_id": 95034259, "body": "@trentcl but &quot;why&quot; is just the contrary, the answer said because this is not implemented, so why it work it&#39;s because it&#39;s implemented. But I agree the duplicate doesn&#39;t match at 100%. I think this answer would link the other question too, to make them related."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1547002134, "post_id": 54100173, "comment_id": 95037960, "body": "@Stargateur You make a good point, but I still don&#39;t think it is a duplicate."}], "tags": [], "owner": {"reputation": 20407, "user_id": 1017941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/yocPw.jpg?s=128&g=1", "display_name": "Hauleth", "link": "https://stackoverflow.com/users/1017941/hauleth"}, "is_accepted": false, "score": 1, "last_activity_date": 1546984640, "last_edit_date": 1546984640, "creation_date": 1546983858, "answer_id": 54100173, "question_id": 54100030, "link": "https://stackoverflow.com/questions/54100030/why-do-i-need-to-dereference-a-variable-when-comparing-it-but-not-when-doing-ari/54100173#54100173", "title": "Why do I need to dereference a variable when comparing it but not when doing arithmetic?", "body": "<p>Because you can have <code>Rem</code> implementation for different types and the core library implements</p>\n\n<pre><code>impl&lt;'a&gt; Rem&lt;&amp;'a i32&gt; for i32 { /* \u2026 */ }\n</code></pre>\n\n<p>This is impossible for <code>PartialOrd</code> and <code>Ord</code> traits, so you need to compare exactly the same types, in this case <code>i32</code>, that is why there is requirement for dereference.</p>\n"}, {"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1547035470, "post_id": 54101468, "comment_id": 95051547, "body": "<i>I can&#39;t answer why the standard library implements the &quot;mixed&quot; versions for reference and value for arithmetic operators, but not for comparisons.</i> =&gt; That&#39;s actually an easy one. A comparison operator never needs to consume a value, while for an arithmetic operator consuming one of the operand to produce the result value allows eschewing clones (with non-Copy types) which is valuable. You could consume values with comparison operators; but consuming when you don&#39;t need to potentially induces inefficiencies, and Rust is about efficiency."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1547047572, "post_id": 54101468, "comment_id": 95059155, "body": "@MatthieuM. I thought about this point, but it still doesn&#39;t make sense to me. As you stated yourself, this only makes a difference for types that are <i>not</i> <code>Copy</code>, but all of the numerical types in the standard library are <code>Copy</code>, so I can&#39;t see the point. The only thing it achieves is that you save a few <code>*</code>s or <code>&amp;</code>s, but the same argument could be used for comparison operators."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1547051196, "post_id": 54101468, "comment_id": 95061484, "body": "The traits were conceived with the ability to use them with Big Integers, matrices, etc..."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1547053805, "post_id": 54101468, "comment_id": 95063061, "body": "@MatthieuM. Hmm, I think we are talking about different things. I&#39;m talking about the trait <i>implementations</i> in the standard library. I do understand the design of the traits. What I don&#39;t understand is why there are implementations to support e.g. <code>&amp;i32 + i32</code> in the standard library, but not for <code>&amp;i32 &lt; i32</code>, which is what the OP is asking about."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1547105051, "post_id": 54101468, "comment_id": 95078789, "body": "Ah! I see what you mean now. Good question indeed."}], "tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 7, "last_activity_date": 1546992009, "creation_date": 1546992009, "answer_id": 54101468, "question_id": 54100030, "link": "https://stackoverflow.com/questions/54100030/why-do-i-need-to-dereference-a-variable-when-comparing-it-but-not-when-doing-ari/54101468#54101468", "title": "Why do I need to dereference a variable when comparing it but not when doing arithmetic?", "body": "<p>Comparison operators actually do behave differently than arithmetic operators. The difference becomes obvious when looking at the trait definitions. As an example, here is the <code>PartialEq</code> trait</p>\n\n<pre><code>pub trait PartialEq&lt;Rhs = Self&gt;\nwhere\n    Rhs: ?Sized,\n{\n    fn eq(&amp;self, other: &amp;Rhs) -&gt; bool;\n    fn ne(&amp;self, other: &amp;Rhs) -&gt; bool { ... }\n}\n</code></pre>\n\n<p>and the <code>Add</code> trait</p>\n\n<pre><code>pub trait Add&lt;RHS = Self&gt; {\n    type Output;\n    fn add(self, rhs: RHS) -&gt; Self::Output;\n}\n</code></pre>\n\n<p>We can see that comparison traits take the operands by reference, while the arithmetic traits take the operands by value. This difference is reflected in how the compiler translates operator expressions:</p>\n\n<pre><code>a == b   ==&gt;   std::cmp::PartialEq::eq(&amp;a, &amp;b)\na + b    ==&gt;   std::ops::Add::add(a, b)\n</code></pre>\n\n<p>The operands of comparisons are evaluated as place expressions, so they can never move values. Operands of arithmetic operators, on the other hand, are evaluated as value expressions, so they are moved or copied depending on whether the operand type is <code>Copy</code>.</p>\n\n<p>As a result of this difference, if we implement <code>PartialEq</code> for the type <code>A</code>, we can not only compare <code>A</code> and <code>A</code>, but also <code>&amp;A</code> and <code>&amp;A</code> by virtue of deref coercions for the operands. For <code>Add</code> on the other hand we need a separate implementation to be able to add <code>&amp;A</code> and <code>&amp;A</code>.</p>\n\n<p>I can't answer why the standard library implements the \"mixed\" versions for reference and value for arithmetic operators, but not for comparisons. I can't see a fundamental reason why the latter can't be done.</p>\n"}], "owner": {"reputation": 289, "user_id": 5404459, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8e1eaadeca33c5f8d00701484f231f7e?s=128&d=identicon&r=PG&f=1", "display_name": "georch", "link": "https://stackoverflow.com/users/5404459/georch"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 905, "favorite_count": 1, "accepted_answer_id": 54101468, "answer_count": 2, "score": 4, "last_activity_date": 1546992330, "creation_date": 1546983154, "last_edit_date": 1546992330, "question_id": 54100030, "link": "https://stackoverflow.com/questions/54100030/why-do-i-need-to-dereference-a-variable-when-comparing-it-but-not-when-doing-ari", "title": "Why do I need to dereference a variable when comparing it but not when doing arithmetic?", "body": "<p>I have the following code:</p>\n\n<pre><code>fn example(known_primes: &amp;[i32], number: i32, prime: i32, limit: i32) {\n    let mut is_prime = true;\n\n    for prime in known_primes {\n        if number % prime == 0 {\n            is_prime = false;\n            break;\n        }\n        if *prime &gt; limit {\n            break;\n        }\n    }\n}\n</code></pre>\n\n<p>Why do I need to dereference <code>prime</code> in the second condition (<code>*prime &gt; limit</code>), when I don't need to do so in the first one (<code>number % prime == 0</code>)?</p>\n\n<p>Both <code>%</code> and <code>&lt;</code> are operators that take two numbers and return something. The only difference seems to be in what they return (a number vs. a boolean). While <a href=\"https://stackoverflow.com/questions/40677086/why-isnt-it-possible-to-compare-a-borrowed-integer-to-a-literal-integer\">Why isn&#39;t it possible to compare a borrowed integer to a literal integer?</a> <em>does</em> explain what would be required to make the code work (implementations for all overloads, ideally in the standard library), it <em>does not</em> say why it does work for <code>a % b</code>. Is there a fundamental difference between these operators? Or is it just not implemented yet?</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1546960587, "post_id": 54094676, "comment_id": 95021661, "body": "<i><code>RefCell</code>s have a run-time cost</i> \u2014 have you benchmarked to see what the &quot;cost&quot; is? I&#39;m 99.9% sure it&#39;s a single integer comparison."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1546960717, "post_id": 54094676, "comment_id": 95021749, "body": "I believe your question is answered by one or more of the answers of <a href=\"https://stackoverflow.com/q/47773849/155423\">Borrow two mutable values from the same HashMap</a>, just ignore one of the mutable borrows.  If you disagree, please <a href=\"https://stackoverflow.com/posts/54094676/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 9, "creation_date": 1546960900, "post_id": 54094676, "comment_id": 95021873, "body": "@Shepmaster: They also have a memory cost :)"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1546970223, "post_id": 54094676, "comment_id": 95027063, "body": "You may also use <code>Cell&lt;i32&gt;</code> or <code>AtomicI32</code> for <code>v</code>, which have no memory overhead and only a small effect on codegen. But that may not work if your actual code is not based on <code>i32</code> but some other type."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1546973783, "post_id": 54094676, "comment_id": 95028735, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=98f6396cf796f5488aa5c63a50287823\" rel=\"nofollow noreferrer\">The duplicate applied to your specific case</a>"}, {"owner": {"reputation": 137, "user_id": 1928741, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/DBmuK.png?s=128&g=1", "display_name": "Oliver Funk", "link": "https://stackoverflow.com/users/1928741/oliver-funk"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547025236, "post_id": 54094676, "comment_id": 95045432, "body": "Ok I&#39;ve over simplified my problem, but thank you for the suggestions, you answered the question I asked.  @Shepmaster the suggestion you posed won&#39;t work in my case because the <code>fn calc_value</code> comes from a trait that structs like Foo implement, so the function signature can&#39;t change and each Foo could reference and use a different number of other nodes.  I&#39;m going to try think of a better way to ask my actual question."}, {"owner": {"reputation": 137, "user_id": 1928741, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/DBmuK.png?s=128&g=1", "display_name": "Oliver Funk", "link": "https://stackoverflow.com/users/1928741/oliver-funk"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1547025264, "post_id": 54094676, "comment_id": 95045446, "body": "@trentcl yah <code>v</code> isn&#39;t <code>i32</code> in my actual case."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1547036839, "post_id": 54094676, "comment_id": 95052362, "body": "Is it guaranteed that a <code>Foo</code> cannot contain its own <code>name</code> as <code>lookup</code>? I.e. the collection of <code>Foo</code>s represent a <a href=\"https://en.wikipedia.org/wiki/Directed_acyclic_graph\" rel=\"nofollow noreferrer\">DAG</a>? There might be a better way to store them rather than by <code>name</code>, for instance, as indices into a <code>Vec</code>, or perhaps using the <code>petgraph</code> crate. Repeated lookup into a <code>BTreeMap</code> is most likely going to dwarf the cost of using <code>RefCell</code>."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1547039498, "post_id": 54094676, "comment_id": 95054014, "body": "Actually, scratch the DAG part. With the <code>calc_value</code> you describe, the graph doesn&#39;t have to be acyclic, it just has to have no nodes with edges to themselves. (But if <code>calc_value</code> can traverse the graph it may have to be acyclic, anyway.)"}, {"owner": {"reputation": 137, "user_id": 1928741, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/DBmuK.png?s=128&g=1", "display_name": "Oliver Funk", "link": "https://stackoverflow.com/users/1928741/oliver-funk"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1547060823, "post_id": 54094676, "comment_id": 95066232, "body": "@trentcl you&#39;re right about the graph. I&#39;m trying to build a computational graph of sorts, where <code>Foo</code>&#39;s define functions that operate on other nodes in the graph."}], "owner": {"reputation": 137, "user_id": 1928741, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/DBmuK.png?s=128&g=1", "display_name": "Oliver Funk", "link": "https://stackoverflow.com/users/1928741/oliver-funk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 83, "favorite_count": 0, "closed_date": 1546973769, "answer_count": 0, "score": 3, "last_activity_date": 1546960490, "creation_date": 1546960322, "last_edit_date": 1546960490, "question_id": 54094676, "link": "https://stackoverflow.com/questions/54094676/is-there-a-way-to-use-the-value-of-an-element-from-a-map-to-update-another-eleme", "closed_reason": "Duplicate", "title": "Is there a way to use the value of an element from a map to update another element without interior mutability?", "body": "<p>I'm trying to look up the value of an element (B) in a <code>BTreeMap</code>, from an element (A) that comes from the same map and then mutate the value of A with the value of B.</p>\n\n<p>I know I can use a <code>RefCell</code> to avoid the \"cannot borrow X as immutable because X is also borrowed as mutable\" error, but I wanted to know if there was a more idiomatic, safe way to do this.</p>\n\n<p>I've thought of trying to store pointers to the other elements, but that doesn't work because the memory locations of elements change move as one adds elements to the <code>BTreeMap</code>, so it's unsafe and wrong.</p>\n\n<p>Is there a better approach to this kind of pattern?</p>\n\n<p><strong>Initial try</strong></p>\n\n<pre><code>use std::collections::BTreeMap;\n\nstruct Map(BTreeMap&lt;String, Foo&gt;);\n\nimpl Map {\n    fn new() -&gt; Self {\n        Map(BTreeMap::new())\n    }\n\n    fn calc_node(&amp;mut self, name: &amp;str) {\n        self.0.get_mut(name).unwrap().calc_value(self)\n    }\n}\n\nstruct Foo {\n    name: String,\n    v: i32,\n\n    lookup: String,\n}\n\nimpl Foo {\n    fn new(name: String, value: i32, lookup: String) -&gt; Self {\n        Self {\n            name,\n            v: value,\n            lookup,\n        }\n    }\n\n    fn calc_value(&amp;mut self, map: &amp;Map) {\n        self.v = map.0.get(&amp;self.lookup).unwrap().v * 2 // really what I'm trying to do\n    }\n}\n\nfn main() {\n    let mut map = Map::new();\n\n    map.0.insert(\n        \"a\".to_string(),\n        Foo::new(\"a\".to_string(), 1, \"b\".to_string()),\n    );\n    map.0.insert(\n        \"b\".to_string(),\n        Foo::new(\"b\".to_string(), 2, \"a\".to_string()),\n    );\n\n    println!(\"{:?}\", map.0.get(\"a\").unwrap().v);\n    map.calc_node(\"a\");\n    println!(\"{:?}\", map.0.get(\"a\").unwrap().v);\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `*self` as immutable because it is also borrowed as mutable\n  --&gt; src/main.rs:11:50\n   |\n11 |         self.0.get_mut(name).unwrap().calc_value(self)\n   |         ------                        ---------- ^^^^ immutable borrow occurs here\n   |         |                             |\n   |         |                             mutable borrow later used by call\n   |         mutable borrow occurs here\n</code></pre>\n\n<p><strong>Using <code>RefCell</code></strong></p>\n\n<pre><code>use std::cell::RefCell;\nuse std::collections::BTreeMap;\n\nstruct Map(BTreeMap&lt;String, RefCell&lt;Foo&gt;&gt;);\n\nimpl Map {\n    fn new() -&gt; Self {\n        Map(BTreeMap::new())\n    }\n\n    fn calc_node(&amp;self, name: &amp;str) {\n        self.0.get(name).unwrap().borrow_mut().calc_value(self)\n    }\n}\n\nstruct Foo {\n    name: String,\n    v: i32,\n\n    lookup: String,\n}\n\nimpl Foo {\n    fn new(name: String, value: i32, lookup: String) -&gt; Self {\n        Self {\n            name,\n            v: value,\n            lookup,\n        }\n    }\n\n    fn calc_value(&amp;mut self, map: &amp;Map) {\n        self.v = map.0.get(&amp;self.lookup).unwrap().borrow().v * 2\n    }\n}\n\nfn main() {\n    let mut map = Map::new();\n\n    map.0.insert(\n        \"a\".to_string(),\n        RefCell::new(Foo::new(\"a\".to_string(), 1, \"b\".to_string())),\n    );\n    map.0.insert(\n        \"b\".to_string(),\n        RefCell::new(Foo::new(\"b\".to_string(), 2, \"a\".to_string())),\n    );\n\n    println!(\"{:?}\", map.0.get(\"a\").unwrap().borrow().v);\n    map.calc_node(\"a\");\n    println!(\"{:?}\", map.0.get(\"a\").unwrap().borrow().v);\n}\n</code></pre>\n\n<p>I get the correct result:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>1\n4\n</code></pre>\n\n<p><code>RefCell</code>s have a run-time cost and I would like to ideally be able to access referenced elements as quickly as possible.</p>\n"}, {"tags": ["rust", "rust-macros", "rust-proc-macros"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 5, "creation_date": 1546939588, "post_id": 54088182, "comment_id": 95009805, "body": "Your derive crate should not depend of anything because it only handles code generation."}], "answers": [{"comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1546949815, "post_id": 54091644, "comment_id": 95015344, "body": "If you have a better solution, please feel free to create one! I am interested in any solution available."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 2, "creation_date": 1546951696, "post_id": 54091644, "comment_id": 95016260, "body": "Is foo_core needed? You can put the stuff in foo_dump"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1546952445, "post_id": 54091644, "comment_id": 95016627, "body": "Interesting... I think one could put the stuff I need in <code>foo_dump</code>. I have to look at my real world example, but yes, that would be a simpler approach."}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 1, "last_activity_date": 1546950239, "last_edit_date": 1546950239, "creation_date": 1546949791, "answer_id": 54091644, "question_id": 54088182, "link": "https://stackoverflow.com/questions/54088182/cyclic-package-dependency-while-implementing-proc-macro/54091644#54091644", "title": "Cyclic package dependency while implementing proc macro", "body": "<p>Thanks to <a href=\"https://stackoverflow.com/questions/54088182/cyclic-package-dependency-while-implementing-proc-macro#comment95009805_54088182\">@Boiethious comment</a> and his help <a href=\"https://chat.stackoverflow.com/rooms/62927/conversation/54088182\">in chat</a> I was able to come up with a solution, which involes introducing a new crate <code>foo_core</code> which contains the structs <code>P1</code> and <code>P2</code>.</p>\n\n<p>So what I did was:</p>\n\n<ul>\n<li>Removing <code>P1</code> and <code>P2</code> from <code>foo</code> and putting them into <code>foo_core</code></li>\n<li>Removing the dependency <code>foo_dump</code> from <code>foo_derive</code> so it only depends on <code>syn</code> and <code>quote</code> anymore</li>\n<li>Adding <code>foo_core</code> as a dependency in <code>foo</code> and <code>foo_dump</code></li>\n<li>Adding the dependency <code>foo_dump</code> to <code>foo</code></li>\n</ul>\n\n<p>(you can see the full list of changes in the <a href=\"https://github.com/hellow554/proc_macro_mcve/commit/0a3953cfbd0efbd8331b9d2a76288b6b6e1cef28\" rel=\"nofollow noreferrer\">git history</a>).</p>\n\n<p>The final dependency chain now looks like this:</p>\n\n<p><img src=\"https://i.stack.imgur.com/KkVVl.png\" alt=\"depency graph\"></p>\n"}], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 817, "favorite_count": 0, "accepted_answer_id": 54091644, "answer_count": 1, "score": 6, "last_activity_date": 1549409659, "creation_date": 1546937446, "last_edit_date": 1549409659, "question_id": 54088182, "link": "https://stackoverflow.com/questions/54088182/cyclic-package-dependency-while-implementing-proc-macro", "title": "Cyclic package dependency while implementing proc macro", "body": "<p>I try to implement a proc_macro <code>Dump</code>, which is similar to serdes <code>Serialize</code>.</p>\n\n<p>For this purpose I have a crate <code>foo</code> which contains my \"primitive\" structs (<code>P1</code> and <code>P2</code> in this case) which should only be dumpable.</p>\n\n<p>Next I do have a <code>foo_derive</code> crate which contains the procedural macro itself.</p>\n\n<p>Because I want to support multiple formats I have a third crate <code>foo_dump</code> which contains the trait definition of <code>Dump</code> (e.g. this struct can be dumped) and <code>Dumper</code> (this is something the backend should implement).\nVery straight forward until this point.</p>\n\n<p>When I now want to compile it, I get this error:\n</p>\n\n<pre><code>$ cargo build\nerror: cyclic package dependency: package `foo v0.1.0 (/tmp/tmp.u34pI5J6qd/example/foo)` depends on itself. Cycle:\npackage `foo v0.1.0 (/tmp/tmp.u34pI5J6qd/example/foo)`\n    ... which is depended on by `foo_dump v0.1.0 (/tmp/tmp.u34pI5J6qd/example/foo_dump)`\n    ... which is depended on by `foo_derive v0.1.0 (/tmp/tmp.u34pI5J6qd/example/foo_derive)`\n</code></pre>\n\n<p>I don't know what the correct way is, how to use dependencies in this crate. My current one is:</p>\n\n<p><img src=\"https://i.stack.imgur.com/DVFsN.png\" alt=\"dependencies\"></p>\n\n<p>and this certainly is not possible.</p>\n\n<p>What am I missing? What do I have to do to break the dependency circle?</p>\n\n<hr>\n\n<p>(<a href=\"https://github.com/hellow554/proc_macro_mcve/tree/82565739105dc5bf22da25efee189b9118bf89cb\" rel=\"nofollow noreferrer\">mcve@github</a>)</p>\n\n<p><em>/Cargo.toml</em></p>\n\n<pre><code>[workspace]\nmembers = [ \n    \"foo\",\n    \"foo_derive\",\n    \"foo_dump\",\n]\n</code></pre>\n\n<p><em>/foo/Cargo.toml</em></p>\n\n<pre><code>[package]\nname = \"foo\"\nversion = \"0.1.0\"\nedition = \"2018\"\n\n[dependencies]\nfoo_derive = { path = \"../foo_derive\" }\n</code></pre>\n\n<p><em>/foo/src/lib.rs</em></p>\n\n<pre><code>use foo_derive::Dump;\n\nstruct P1;\nstruct P2;\n\n#[derive(Dump)]\nstruct Bar {\n    primitive_one: P1,\n    primitive_two: P2,\n}\n</code></pre>\n\n<p><em>/foo_dump/Cargo.toml</em></p>\n\n<pre><code>[package]\nname = \"foo_dump\"\nversion = \"0.1.0\"\nedition = \"2018\"\n\n[dependencies]\nfoo = { path = \"../foo\" }\n</code></pre>\n\n<p><em>/foo_dump/src/lib.rs</em></p>\n\n<pre><code>use foo::{P1, P2};\n\npub trait Dumper {\n    fn dump_p1(&amp;mut self, value: &amp;P1);\n    fn dump_p2(&amp;mut self, value: &amp;P2);\n}\n\npub trait Dump {\n    fn dump&lt;D: Dumper&gt;(&amp;self, d: D);\n}\n\nimpl Dump for P1 {\n    fn dump&lt;D: Dumper&gt;(&amp;self, d: D) {\n        d.dump_p1(self);\n    }\n}\n\nimpl Dump for P2 {\n    fn dump&lt;D: Dumper&gt;(&amp;self, d: D) {\n        d.dump_p2(self);\n    }\n}\n</code></pre>\n\n<p><em>/foo_derive/Cargo.toml</em></p>\n\n<pre><code>[package]\nname = \"foo_derive\"\nversion = \"0.1.0\"\nedition = \"2018\"\n\n[lib]\nproc-macro = true\n\n[dependencies]\nsyn = \"*\"\nquote = \"*\"\nfoo_dump = { path = \"../foo_dump\" }\n</code></pre>\n\n<p><em>/foo_derive/src/lib.rs</em></p>\n\n<pre><code>extern crate proc_macro;\n\nuse quote::quote;\nuse proc_macro::TokenStream;\nuse syn::DeriveInput;\n\n#[proc_macro_derive(Dump)]\npub fn derive_dump(input: TokenStream) -&gt; TokenStream {\n    let input = syn::parse_macro_input!(input as DeriveInput);\n    let name = &amp;input.ident;\n\n    quote!(\n        impl foo_dump::Dump for #name {\n            fn dump&lt;D: foo_dump::Dumper&gt;(&amp;self, d: D) {\n                unimplemented!()\n            }\n        }\n    ).into()\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1546933039, "post_id": 54086451, "comment_id": 95006826, "body": "I really do ask myself why you ever want that? You already own the variable, why do you need a reference to it? You can get it for free, you don&#39;t have to waste 8bytes for that."}], "answers": [{"tags": [], "owner": {"reputation": 69, "user_id": 5724830, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8A46r.jpg?s=128&g=1", "display_name": "Julian Didier", "link": "https://stackoverflow.com/users/5724830/julian-didier"}, "is_accepted": false, "score": 2, "last_activity_date": 1546943770, "last_edit_date": 1546943770, "creation_date": 1546939531, "answer_id": 54088731, "question_id": 54086451, "link": "https://stackoverflow.com/questions/54086451/understanding-rust-lifetime-and-borrow-checker/54088731#54088731", "title": "Understanding Rust lifetime and borrow checker", "body": "<p>The compiler is saying that you are borrowing <code>f.num</code> inside the scope of the function and once this scope is done the reference to <code>f.num</code> doesn't live anymore.</p>\n\n<p>I'm not sure if <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=77d76b9a6d1ed7c921d9f2036c840567\" rel=\"nofollow noreferrer\">this example of code</a> can help you, let me know. I don't know if \"a reference to num\" in your case is important but it doesn't seem to be necessary and maybe you didn't see how to achieve that.</p>\n\n<p>I recommend you to read and take the time to understand how the <a href=\"https://doc.rust-lang.org/book/ch04-00-understanding-ownership.html\" rel=\"nofollow noreferrer\">ownership system</a> works in Rust. It can be a little bit tedious at the beginning but you will master the concept with practice.</p>\n"}], "owner": {"reputation": 9759, "user_id": 51500, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/7fd4ba468da56bb5330a6352c1b54f52?s=128&d=identicon&r=PG", "display_name": "Felipe Lima", "link": "https://stackoverflow.com/users/51500/felipe-lima"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 173, "favorite_count": 0, "closed_date": 1546947705, "answer_count": 1, "score": 0, "last_activity_date": 1546946951, "creation_date": 1546929653, "last_edit_date": 1546946951, "question_id": 54086451, "link": "https://stackoverflow.com/questions/54086451/understanding-rust-lifetime-and-borrow-checker", "closed_reason": "Duplicate", "title": "Understanding Rust lifetime and borrow checker", "body": "<p>Rust newbie here. Can anyone please help me understand why Rust doesn't like this code and how it can be fixed?</p>\n\n<pre><code>struct Foo {\n    num: u32\n}\n\nstruct Bar&lt;'a&gt; {\n    foo: Foo,\n    num_ref: &amp;'a u32,\n}\n\nfn foo&lt;'a&gt;() -&gt; Bar&lt;'a&gt; {\n    let f = Foo { num: 2 };\n    let n: &amp;'a u32 = &amp;f.num;\n    return Bar { foo: f, num_ref: n };\n}\n\nfn main() { }\n</code></pre>\n\n<p>I basically want a function that returns a <code>Bar</code>, which owns <code>Foo</code> and a reference to <code>num</code> (owned by <code>Foo</code>).</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=cac5858ebe159630d9bf328cb98aae14\" rel=\"nofollow noreferrer\">Link to playground</a></p>\n\n<p>Error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `f.num` does not live long enough\n  --&gt; src/main.rs:12:23\n   |\n12 |     let n: &amp;'a u32 = &amp;f.num;\n   |                       ^^^^^ borrowed value does not live long enough\n13 |     return Bar { foo: f, num_ref: n };\n14 | }\n   | - borrowed value only lives until here\n   |\nnote: borrowed value must be valid for the lifetime 'a as defined on the function body at 10:8...\n  --&gt; src/main.rs:10:8\n   |\n10 | fn foo&lt;'a&gt;() -&gt; Bar&lt;'a&gt; {\n   |        ^^\n</code></pre>\n\n<p>Thanks in advance!</p>\n"}, {"tags": ["rust", "future", "rust-tokio"], "answers": [{"comments": [{"owner": {"reputation": 1171, "user_id": 2430915, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/fa2d09b09a5eaf435ffdf18206a3a6b4?s=128&d=identicon&r=PG", "display_name": "BBS", "link": "https://stackoverflow.com/users/2430915/bbs"}, "edited": false, "score": 0, "creation_date": 1546929886, "post_id": 54086073, "comment_id": 95005705, "body": "I have edited the question based on this. Considering <code>NetworkDetails</code> and <code>NetworkCreateInfo</code> are not types I think the best option is to return the network id as a <code>&amp;str</code>."}], "tags": [], "owner": {"reputation": 3054, "user_id": 115030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c74c0974c6cc25c194a2737e2d6747?s=128&d=identicon&r=PG", "display_name": "Anders Kaseorg", "link": "https://stackoverflow.com/users/115030/anders-kaseorg"}, "is_accepted": true, "score": 1, "last_activity_date": 1546931269, "last_edit_date": 1546931269, "creation_date": 1546927744, "answer_id": 54086073, "question_id": 54085424, "link": "https://stackoverflow.com/questions/54085424/matching-future-types/54086073#54086073", "title": "Matching future types", "body": "<p>Your clearest mistake is the <code>;</code> at the end of the <code>None</code> branch.  A semicolon always discards the value of the previous expression, and a block ending with a semicolon has type <code>()</code> (assuming the end is reachable).</p>\n\n<p>After removing the <code>;</code>, you\u2019ll see that the types still don\u2019t match.  The <code>Some</code> branch has type <code>FutureResult&lt;&amp;NetworkDetails&gt;</code>, while the <code>None</code> branch now has type <code>impl Future&lt;Item = NetworkCreateInfo&gt;</code>.  I\u2019m not sure what you\u2019re trying to do here, since even the base <code>NetworkDetails</code> and <code>NetworkCreateInfo</code> types are incompatible.  You\u2019ll need to figure out what type you want and how to get the same type in both branches.</p>\n\n<p>Edit for updated question: Okay, you want to get a <code>String</code> out of both branches.  You have two different types that both implement the <code>Future&lt;Item = String&gt;</code> trait, and you need both branches to be of the same type.  This is exactly the purpose of <a href=\"https://docs.rs/futures/0.2.0/futures/future/enum.Either.html\" rel=\"nofollow noreferrer\"><code>future::Either</code></a>.  Simply wrap one branch in <code>Either::A</code> and the other branch in <code>Either::B</code>.</p>\n\n<p>After that, you\u2019ll also find a trivial borrowing problem in the first branch: you\u2019ll need to copy the string with <code>net.id.clone()</code>.</p>\n"}], "owner": {"reputation": 1171, "user_id": 2430915, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/fa2d09b09a5eaf435ffdf18206a3a6b4?s=128&d=identicon&r=PG", "display_name": "BBS", "link": "https://stackoverflow.com/users/2430915/bbs"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 96, "favorite_count": 0, "accepted_answer_id": 54086073, "answer_count": 1, "score": -1, "last_activity_date": 1546931269, "creation_date": 1546923407, "last_edit_date": 1546929779, "question_id": 54085424, "link": "https://stackoverflow.com/questions/54085424/matching-future-types", "title": "Matching future types", "body": "<p>I am attempting to work with futures to look up asynchronously look up a value. If that value exists I want to return it and if it does not I want to create it.</p>\n\n<pre><code>// A network will be created unless one already exists with this name\npub fn build_network(name: &amp;'static str) {\n    let docker = Docker::new();\n\n    // Get a list of networks\n    let fut = docker\n        .networks()\n        .list(&amp;Default::default())\n        .and_then(move |networks| {\n            // Check if a network with the given name exists  \n            let network = networks.iter().find(|n| n.name == name);\n\n            match network {\n                // Pass on network\n                Some(net) =&gt; future::ok(net.id),\n                // Create a new network\n                None =&gt; {\n                    let docker = Docker::new();\n                    docker\n                        .networks()\n                        .create(&amp;NetworkCreateOptions::builder(name).driver(\"bridge\").build())\n                        .map(|new_net| new_net.id)\n\n                }\n            }\n        })\n        .map(move |net| {\n            println!(\"{:#?}\", net);\n        })\n        .map_err(|e| eprintln!(\"Error: {}\", e));\n\n    tokio::run(fut);\n}\n</code></pre>\n\n<p>It looks like there is a type mismatch in my match expression. I am trying to make sure each arm contains a future for a shiplift network struct, but it looks like I'm not quite getting it. </p>\n\n<pre><code>error[E0308]: match arms have incompatible types\n   --&gt; src/up/mod.rs:168:13\n    |\n168 | /             match network {\n169 | |                 // Pass on network\n170 | |                 Some(net) =&gt; future::ok(net.id),\n171 | |                 // Create a new network\n...   |\n178 | |                 }\n179 | |             }\n    | |_____________^ expected struct `futures::FutureResult`, found struct `futures::Map`\n    |\n    = note: expected type `futures::FutureResult&lt;std::string::String, _&gt;`\n               found type `futures::Map&lt;impl futures::Future, [closure@src/up/mod.rs:177:30: 177:50]&gt;`\nnote: match arm with an incompatible type\n   --&gt; src/up/mod.rs:172:25\n    |\n172 |                   None =&gt; {\n    |  _________________________^\n173 | |                     let docker = Docker::new();\n174 | |                     docker\n175 | |                         .networks()\n176 | |                         .create(&amp;NetworkCreateOptions::builder(name).driver(\"bridge\").build())\n177 | |                         .map(|new_net| new_net.id)\n178 | |                 }\n    | |_________________^\n\nerror: aborting due to previous error\n</code></pre>\n"}, {"tags": ["syntax", "rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1546917085, "post_id": 54084726, "comment_id": 95002627, "body": "In your case, the duplicate suggests <code>std::io::Write::flush(&amp;mut std::io::stdout())</code>. The fully qualified syntax (where you specify both the trait and the type) would look similar to <code>&lt;std::io::Stdout as std::io::Write&gt;::flush(&amp;mut std::io::stdout)</code>."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1546917243, "post_id": 54084726, "comment_id": 95002652, "body": "You may also find <a href=\"https://stackoverflow.com/q/48263001/3650362\">What is a concise way to inform the compiler of the specifc type with multiple implementations of a generic trait?</a> interesting."}, {"owner": {"reputation": 323, "user_id": 1902494, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/716c084bc1fa5c4f34fc15cb0bbc9725?s=128&d=identicon&r=PG", "display_name": "Navigatron", "link": "https://stackoverflow.com/users/1902494/navigatron"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1546917640, "post_id": 54084726, "comment_id": 95002730, "body": "@trentcl, that is exactly what I was looking for. Thank you!"}], "owner": {"reputation": 323, "user_id": 1902494, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/716c084bc1fa5c4f34fc15cb0bbc9725?s=128&d=identicon&r=PG", "display_name": "Navigatron", "link": "https://stackoverflow.com/users/1902494/navigatron"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 165, "favorite_count": 0, "closed_date": 1546917325, "answer_count": 0, "score": 3, "last_activity_date": 1546929489, "creation_date": 1546916730, "last_edit_date": 1546929489, "question_id": 54084726, "link": "https://stackoverflow.com/questions/54084726/how-to-use-a-method-in-rust-without-the-use-keyword", "closed_reason": "Duplicate", "title": "How to use a method in Rust without the &quot;use&quot; keyword?", "body": "<p>I am learning Rust coming from a Java background. In Java, I would commonly <code>import java.util.ArrayList;</code>. As far as I understand, this was a convenience to prevent needing to put <code>java.util.</code> preceding every occurrence of <code>ArrayList</code>.</p>\n\n<p>Consider the following Rust:</p>\n\n<pre><code>use std::io;\nuse std::io::Write;\n\nfn main() {\n    print!(\"Hello World!\");\n    // Let's flush the Buffer\n    io::stdout().flush().expect(\"Oh No!\");\n}\n</code></pre>\n\n<p>If the first <code>use</code> is removed, <code>io</code> is no longer specified. We can fix this by adding <code>std::</code> before <code>io</code>.</p>\n\n<p>The program now reads like this:</p>\n\n<pre><code>use std::io::Write;\n\nfn main() {\n    print!(\"Hello World!\");\n    // Let's flush the Buffer\n    std::io::stdout().flush().expect(\"Oh No!\");\n}\n</code></pre>\n\n<p>What catches my interest is the second <code>use</code> - It is required to use the <code>flush</code> method on stdout. This makes my Java analogy very unhappy - I expect <code>flush</code> to be a part of the \"<code>stdout</code> thing\", and if I have the thing I can use the methods - but that is clearly not the case here.</p>\n\n<p>Is it possible to write the above program without the second <code>use</code>? If so, what is the syntax to fully specify <code>flush</code>?</p>\n\n<p>What is going on?</p>\n\n<hr>\n\n<h1>Solution</h1>\n\n<p><strong>Solved</strong> by some helpful comments below. The linked questions, while not the same question, do have similar answers.</p>\n\n<p>The line in question:</p>\n\n<p><code>std::io::stdout().flush().expect(\"Oh no!\");\n</code></p>\n\n<p>In my experience, <code>stdout.flush()</code> implies that <code>flush</code> is a function within stdout. In Java, stdout would be an object, passed to flush \"behind-the-scenes\" as <code>this</code>. In Python, it would be explicitly in the method signature as <code>self</code>.</p>\n\n<p>In Rust, in this situation, <code>stdout</code> is being passed to <code>flush</code> via dot notation. To fully specify <code>flush</code>, <code>stdout</code> must be passed in the \"traditional\" way, within <code>flush</code>'s parenthesis.</p>\n\n<p>In short, <code>Object.method()</code> is equivalent to <code>method(Object)</code>. (At least here - I am still learning, and may be very wrong.)</p>\n\n<p>To fully specify both <code>stdout</code> and <code>flush</code>, I use the following:</p>\n\n<p><code>std::io::Write::flush(&amp;mut std::io::stdout()).expect(\"Oh no!\");</code></p>\n\n<p>Looking further, the first argument to <code>expect</code> is \"self\", furthering the <code>x.y() == y(x)</code> idea. Translating the above into y(x) format completely, we arrive at the very complicated:</p>\n\n<pre><code>std::result::Result::expect(\n    std::io::Write::flush(\n        &amp;mut std::io::stdout()\n    ),\n    \"Oh no!\"\n);\n</code></pre>\n\n<p>This has been enlightening. Thank you all, and I hope this helps someone in the future.</p>\n"}, {"tags": ["installation", "rust", "rust-cargo"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1546902282, "post_id": 54083065, "comment_id": 94999569, "body": "The command is <code>cargo build</code> for building the project, <code>cargo run</code> for running the main binary application, and <code>cargo install</code> to install the local project. <code>cargo install crate-name</code> only works if the crate is already published on <a href=\"//crates.io\" rel=\"nofollow noreferrer\">crates.io</a>. See also the Cargo guide on <a href=\"https://doc.rust-lang.org/cargo/guide/creating-a-new-project.html\" rel=\"nofollow noreferrer\">creating a new package</a>."}, {"owner": {"reputation": 13, "user_id": 6616630, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2245ce2de4e89bc615f3ebf909004826?s=128&d=identicon&r=PG&f=1", "display_name": "Michael Straka", "link": "https://stackoverflow.com/users/6616630/michael-straka"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1546902870, "post_id": 54083065, "comment_id": 94999724, "body": "Trying to install rust-gmp as a dependency for my project. It seems to be listed on crates.io (<a href=\"https://crates.io/crates/rust-gmp\" rel=\"nofollow noreferrer\">crates.io/crates/rust-gmp</a>)"}, {"owner": {"reputation": 13, "user_id": 6616630, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2245ce2de4e89bc615f3ebf909004826?s=128&d=identicon&r=PG&f=1", "display_name": "Michael Straka", "link": "https://stackoverflow.com/users/6616630/michael-straka"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1546903382, "post_id": 54083065, "comment_id": 94999845, "body": "Done. I get the same error for any crate listed on crates.io though; I can&#39;t seem to install any crate as a dependency."}], "answers": [{"comments": [{"owner": {"reputation": 13, "user_id": 6616630, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2245ce2de4e89bc615f3ebf909004826?s=128&d=identicon&r=PG&f=1", "display_name": "Michael Straka", "link": "https://stackoverflow.com/users/6616630/michael-straka"}, "edited": false, "score": 1, "creation_date": 1546904683, "post_id": 54083294, "comment_id": 95000144, "body": "Thanks! Figured out the problem, needed to write <code>extern crate gmp;</code> in place of <code>extern crate rust-gmp;</code> when importing the package."}], "tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 2, "last_activity_date": 1546903669, "creation_date": 1546903669, "answer_id": 54083294, "question_id": 54083065, "link": "https://stackoverflow.com/questions/54083065/error-specified-package-has-no-binaries-when-trying-to-install-packages-with/54083294#54083294", "title": "&quot;error: specified package has no binaries&quot; when trying to install packages with cargo?", "body": "<p>Dependencies are not actually \"installed\", by Cargo's nomenclature. Instead, as you already did, you add the crate as a dependency of a project in <em>Cargo.toml</em>.</p>\n\n<p>Thus, whenever you run a subcommand which requires those dependencies in some way (e.g <code>cargo build</code>, <code>cargo check</code>, <code>cargo run</code>, etc.), they will be automatically downloaded and compiled for you.</p>\n\n<p>See also the <a href=\"https://doc.rust-lang.org/cargo/guide/dependencies.html\" rel=\"nofollow noreferrer\">Cargo guide on managing dependencies</a>.</p>\n"}], "owner": {"reputation": 13, "user_id": 6616630, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2245ce2de4e89bc615f3ebf909004826?s=128&d=identicon&r=PG&f=1", "display_name": "Michael Straka", "link": "https://stackoverflow.com/users/6616630/michael-straka"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1757, "favorite_count": 0, "closed_date": 1546905713, "accepted_answer_id": 54083294, "answer_count": 1, "score": 1, "last_activity_date": 1546903669, "creation_date": 1546902004, "last_edit_date": 1546903296, "question_id": 54083065, "link": "https://stackoverflow.com/questions/54083065/error-specified-package-has-no-binaries-when-trying-to-install-packages-with", "closed_reason": "Duplicate", "title": "&quot;error: specified package has no binaries&quot; when trying to install packages with cargo?", "body": "<p>I've made a new project with </p>\n\n<pre><code>cargo new project-name\ncd ./project-name\n</code></pre>\n\n<p>And once in the directory running</p>\n\n<pre><code>cargo install crate-name\n</code></pre>\n\n<p>for any crate listed on crates.io yields the error</p>\n\n<pre><code>Updating crates.io index\nInstalling crate-name version-number                                                    \nerror: specified package has no binaries\n</code></pre>\n\n<p>Looking elsewhere suggests adding the proper dependencies to my Cargo.toml file, but this does not change the output I'm getting. In particular I'm trying to install rust-gmp as a project dependency, and having</p>\n\n<pre><code>[dependencies]\nrust-gmp = \"0.5.0\"\n</code></pre>\n\n<p>in Cargo.toml does not allow me to install rust-gmp. Any suggestions?</p>\n"}, {"tags": ["string", "hashmap", "rust"], "owner": {"reputation": 7411, "user_id": 2200659, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/ImYIK.jpg?s=128&g=1", "display_name": "Anders", "link": "https://stackoverflow.com/users/2200659/anders"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 38, "favorite_count": 0, "closed_date": 1546889556, "answer_count": 0, "score": 1, "last_activity_date": 1546889646, "creation_date": 1546889273, "last_edit_date": 1546889646, "question_id": 54080605, "link": "https://stackoverflow.com/questions/54080605/using-entry-with-a-str-even-though-the-key-is-string-in-rust", "closed_reason": "Duplicate", "title": "Using Entry with a &amp;str even though the key is String in Rust?", "body": "<p>I'm working on a problem similar to the one in <a href=\"https://stackoverflow.com/questions/28512394/how-to-lookup-from-and-insert-into-a-hashmap-efficiently/28512504#28512504\">How to lookup from and insert into a HashMap efficiently?</a>. I have a map with <code>String</code> keys and I want to write a function that returns the value for a key if it exists, or calculates and inserts it if it doesn't.</p>\n\n<p>From the answer to that question, I understand that the proper way to do this is to use an <code>Entry</code>. So I wrote this:</p>\n\n<pre><code>fn get_or_calculate(&amp;self, key: &amp;str) -&gt; u64 {\n    match self.map.entry(key) {\n        Entry::Occupied(o) =&gt; o.get(),\n        Entry::Vacant(v) =&gt; v.insert(2 + 2),\n    }\n}\n</code></pre>\n\n<p>Now my problem is that I can no longer use <code>&amp;str</code> to lookup values. While <code>map.get()</code> happily accepts a <code>&amp;str</code>, <code>map.entry()</code> needs a <code>String</code> that it can take ownership of: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/lib.rs:15:30\n   |\n15 |         match self.map.entry(key) {\n   |                              ^^^\n   |                              |\n   |                              expected struct `std::string::String`, found &amp;str\n   |                              help: try using a conversion method: `key.to_string()`\n   |\n   = note: expected type `std::string::String`\n              found type `&amp;str`\n</code></pre>\n\n<p>I could just use <code>to_string()</code>, but I understand that may be costly. It feels a bit unnecessary - since the <code>Entry</code> doesn't outlive my function it would not need to take ownership of the string.</p>\n\n<p>Is there any way to use <code>Entry</code> with <code>&amp;str</code> even though the key is <code>String</code>? Can I somehow rewrite the code without using an <code>Entry</code>?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1546932421, "post_id": 54079579, "comment_id": 95006601, "body": "You could use <code>to_string()</code> and afterwards <code>split</code>, but you should show us some more code of what you have done so far."}], "owner": {"reputation": 4330, "user_id": 3599414, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/ZFtWq.jpg?s=128&g=1", "display_name": "garrettmaring", "link": "https://stackoverflow.com/users/3599414/garrettmaring"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 104, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1593122726, "creation_date": 1546884614, "last_edit_date": 1593122726, "question_id": 54079579, "link": "https://stackoverflow.com/questions/54079579/how-to-split-a-tokenstream", "title": "How to split a TokenStream?", "body": "<p>I'm writing an attribute macro and need to implement custom parsing for the attributes passed into the macro.</p>\n\n<p>Given the <code>TokenStream</code> built from the source <code>(1,1), 2</code>, how can I split this into two <code>TokenStream</code>s: <code>(1,1)</code> &amp; <code>2</code>?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1546856269, "post_id": 54072227, "comment_id": 94977560, "body": "I don&#39;t understand what you are trying to do. <code>create_from_box</code> does not attempt to return a trait object, but a concrete type (and that&#39;s impossible because the concrete type of <code>boxed</code> is not known at compile time)."}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1546856798, "post_id": 54072227, "comment_id": 94977865, "body": "I am trying to generate a new concrete type regarding to dynamic boxed type. I do not know that is possible but if that is not possible, how can I achieve this need?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1546857127, "post_id": 54072227, "comment_id": 94978060, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/33687447/how-to-get-a-reference-to-a-concrete-type-from-a-trait-object\">How to get a reference to a concrete type from a trait object?</a>"}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1546857441, "post_id": 54072227, "comment_id": 94978238, "body": "@Boiethios, Do I really need to use <code>as_any()</code> and <code>downcast_ref()</code>? Since this workaround is upcasting the trait first and downcasting manually, I thought that there may be better solution to the problem."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1546858395, "post_id": 54072227, "comment_id": 94978733, "body": "Yes, or read the implementation and implement your own downcasting trait: give a unique id to each concrete type, and when you want to downcast to a type <code>T</code>, compare the id of <code>T</code> and the id of your trait object. If they are the same, do an unsafe <code>transmute</code>."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1546858462, "post_id": 54072227, "comment_id": 94978770, "body": "You cannot do what you want <i>as is</i> because downcasting is a compile-time operation in Rust, while a trait object is dynamic."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 1, "creation_date": 1546869292, "post_id": 54072227, "comment_id": 94984433, "body": "What type do you want <code>desired_trait_object</code> to have?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1546870944, "post_id": 54072227, "comment_id": 94985338, "body": "Just to chime in, I also don&#39;t understand what behavior you want from this code. You have two &quot;versions&quot; of <code>create_from_box</code>: one returns a <code>FirstStruct</code> and one returns a <code>SecondStruct</code>. Which one should <code>MyTrait::create_from_box(boxed)</code> call? There is no version of <code>create_from_box</code> that is available on trait objects, because you can only use it when you know the concrete type (<code>Self</code>) it returns."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1546872091, "post_id": 54072227, "comment_id": 94986029, "body": "You may be interested in <a href=\"https://stackoverflow.com/q/51822118/3650362\">Why a function on a trait object cannot be called when bounded with <code>Self: Sized</code>?</a> and <a href=\"https://stackoverflow.com/q/23437179/3650362\">Traits as a return value from a function</a> (which is a duplicate of <a href=\"https://stackoverflow.com/q/30661046/3650362\">How do I return an instance of a trait from a method?</a>)."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1546880086, "post_id": 54072227, "comment_id": 94990535, "body": "<i>How to create trait object from boxed trait?</i> \u2014 a <a href=\"https://stackoverflow.com/questions/27567849/what-makes-something-a-trait-object\">&quot;boxed trait&quot; <b>is</b> a trait object</a>"}], "answers": [{"comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1546857840, "post_id": 54072772, "comment_id": 94978473, "body": "Something like this? I think your main problem is your <code>get_my_trait_object</code> which doesn&#39;t work in the way you think you want it. It looks like you want to implement the factory pattern, which doesn&#39;t work well with rust."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1546858204, "post_id": 54072772, "comment_id": 94978627, "body": "That&#39;s not what the OP wants, if I understand well. He wants to downcast from a trait object."}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1546858477, "post_id": 54072772, "comment_id": 94978780, "body": "@Boiethios, This is more like I am seeking to, Trying to implement it accordingly on my side. Let you know if I could."}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1546861657, "post_id": 54072772, "comment_id": 94980415, "body": "@hellow, This was close to my intention but the problem here is we are working on fully over concrete objects like <code>Box&lt;Foo&gt;</code>, I need the inference from trait types like <code>Box&lt;CreateFromBox&gt;</code> which seems not applicable in Rust I guess."}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 1, "last_activity_date": 1546857663, "creation_date": 1546857663, "answer_id": 54072772, "question_id": 54072227, "link": "https://stackoverflow.com/questions/54072227/how-to-create-trait-object-from-boxed-trait/54072772#54072772", "title": "How to create trait object from boxed trait?", "body": "<p>You can use <code>self</code> even if your type is boxed (see <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.into_vec\" rel=\"nofollow noreferrer\"><code>into_vec</code></a>), so your solution could be.</p>\n\n<pre><code>pub trait CreateFromBox {\n    fn create_from_box(self: Box&lt;Self&gt;) -&gt; Self;\n}\n\n#[derive(Debug, Clone)]\nstruct Foo(u32);\nimpl CreateFromBox for Foo {\n    fn create_from_box(self: Box&lt;Self&gt;) -&gt; Self {\n        Self(self.0 + 1)\n    }\n}\n\nfn main() {\n    let a: Box&lt;Foo&gt; = Box::new(Foo(3));\n    let tmp = a.clone();\n    let b: Foo = tmp.create_from_box();\n\n    println!(\"{:?} {:?}\", a, b);\n}\n</code></pre>\n"}], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 157, "favorite_count": 0, "accepted_answer_id": 54072772, "answer_count": 1, "score": -2, "last_activity_date": 1546857663, "creation_date": 1546855628, "last_edit_date": 1546856714, "question_id": 54072227, "link": "https://stackoverflow.com/questions/54072227/how-to-create-trait-object-from-boxed-trait", "title": "How to create trait object from boxed trait?", "body": "<p>I want to work with DST's and having the following scenario</p>\n\n<p>I have the following trait which has ability to take <code>Box</code> and return new Trait Object outside:</p>\n\n<pre><code>pub trait MyTrait {\n    fn create_from_box(boxed: Box&lt;Self&gt;) -&gt; Self\n    where\n        Self: Sized;\n}\n</code></pre>\n\n<p>I have following to different structs which are implementing <code>MyTrait</code>\n    struct FirstStruct;</p>\n\n<pre><code>impl MyTrait for FirstStruct {\n    fn create_from_box(boxed: Box&lt;FirstStruct&gt;) -&gt; FirstStruct {\n        FirstStruct // Build another struct with some logic and boxed struct values\n    }\n}\n\nstruct SecondStruct;\n\nimpl MyTrait for SecondStruct {\n    fn create_from_box(boxed: Box&lt;SecondStruct&gt;) -&gt; SecondStruct {\n        SecondStruct // Build another struct with some logic and boxed struct values\n    }\n}\n</code></pre>\n\n<p>I have a function which gets my trait object in some conditional logic</p>\n\n<pre><code>fn get_my_trait_object() -&gt; Box&lt;MyTrait&gt; {\n    let condition = true; // Retrieved via some logic .\n\n    match condition {\n        true =&gt; Box::new(FirstStruct),\n        false =&gt; Box::new(SecondStruct),\n    }\n}    \n</code></pre>\n\n<p>Then I have the following function which gets my trait object as boxed value and then passes it into <code>MyTrait</code> static method.</p>\n\n<p>And then it tries to create a new MyTrait object which will used later on.</p>\n\n<pre><code>pub fn main() {\n    let boxed = get_my_trait_object();\n    let desired_trait_object = MyTrait::create_from_box(boxed);\n}\n</code></pre>\n\n<p>The main problem here is, when I executed the code I get following two different errors:</p>\n\n<ul>\n<li>The size for values of type <code>dyn MyTrait</code> cannot be known at compilation time</li>\n<li>All local variables must have a statically known size</li>\n</ul>\n\n<p><em>How can I solve these errors and achieve what I am trying to do?</em></p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=975b26f86ce8a52ebc6c7dbe4f735505\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}, {"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1546877965, "post_id": 54071783, "comment_id": 94989396, "body": "You can write <code>let vec: Vec&lt;_&gt; = (0..10).collect()</code> instead, which infers the type the same way (and is slightly more idiomatic IMO)"}], "answers": [{"comments": [{"owner": {"reputation": 668, "user_id": 456370, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/OvePG.png?s=128&g=1", "display_name": "Nyi Nyi", "link": "https://stackoverflow.com/users/456370/nyi-nyi"}, "edited": false, "score": 0, "creation_date": 1546855065, "post_id": 54071995, "comment_id": 94976878, "body": "Thanks. &lt;B as FromIterator&gt;::from_iter(self) hits the point i am looking for."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 668, "user_id": 456370, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/OvePG.png?s=128&g=1", "display_name": "Nyi Nyi", "link": "https://stackoverflow.com/users/456370/nyi-nyi"}, "edited": false, "score": 0, "creation_date": 1546855328, "post_id": 54071995, "comment_id": 94977045, "body": "@nyinyithann If the implementation was written as <code>&lt;B as FromIterator&gt;::from_iter(self)</code>, Rust would not need to infer the type, since it&#39;s expicitly given. If you don&#39;t explicitly specify the type, Rust needs to infer the type based on the information it has, and my understanding of your question has been that you are asking how Rust is performing the type inference. Is this not what you meant?"}, {"owner": {"reputation": 668, "user_id": 456370, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/OvePG.png?s=128&g=1", "display_name": "Nyi Nyi", "link": "https://stackoverflow.com/users/456370/nyi-nyi"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1546855589, "post_id": 54071995, "comment_id": 94977186, "body": "@SvenMarnach Not particularly about type inference. Just wondering about FromIterator::from_iter(self)."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 668, "user_id": 456370, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/OvePG.png?s=128&g=1", "display_name": "Nyi Nyi", "link": "https://stackoverflow.com/users/456370/nyi-nyi"}, "edited": false, "score": 0, "creation_date": 1546855690, "post_id": 54071995, "comment_id": 94977240, "body": "@nyinyithann OK, never mind then, I have misread your question. My answer may still be useful for other people dropping by, so I&#39;ll leave it up."}, {"owner": {"reputation": 668, "user_id": 456370, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/OvePG.png?s=128&g=1", "display_name": "Nyi Nyi", "link": "https://stackoverflow.com/users/456370/nyi-nyi"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1546855773, "post_id": 54071995, "comment_id": 94977285, "body": "@SvenMarnach Thanks for your answer too. Got a pointer to learn more about Rust&#39;s type inference."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 8, "last_activity_date": 1546877587, "last_edit_date": 1546877587, "creation_date": 1546854780, "answer_id": 54071995, "question_id": 54071783, "link": "https://stackoverflow.com/questions/54071783/how-does-rust-understand-to-call-the-appropriate-implementation-of-from-iter-usi/54071995#54071995", "title": "How does Rust understand to call the appropriate implementation of from_iter using only FromIterator::from_iter?", "body": "<p>When the <code>FromIterator</code> trait has an implementor, it has the form:</p>\n\n<pre><code>impl&lt;T&gt; FromIterator for Vec&lt;T&gt; {\n    fn from_iter&lt;I&gt;(iter: I) -&gt; Vec&lt;T&gt; { /* ... */ }\n}\n</code></pre>\n\n<p>It returns the concrete type <code>Self</code>; that is the generic parameter <code>B</code> in the <code>collect</code> code. </p>\n\n<p>When you type <code>collect::&lt;Vec&lt;_&gt;&gt;()</code>, you say that <code>B</code> is <code>Vec&lt;_&gt;</code> and therefore, that <code>Vec&lt;_&gt;::from_iter()</code> must be called.</p>\n\n<p>The implementation of <code>collect</code> could have been written: <code>&lt;B as FromIterator&gt;::from_iter(self)</code>, but it is more verbose.</p>\n"}, {"tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": false, "score": 3, "last_activity_date": 1546877535, "last_edit_date": 1546877535, "creation_date": 1546855181, "answer_id": 54072109, "question_id": 54071783, "link": "https://stackoverflow.com/questions/54071783/how-does-rust-understand-to-call-the-appropriate-implementation-of-from-iter-usi/54072109#54072109", "title": "How does Rust understand to call the appropriate implementation of from_iter using only FromIterator::from_iter?", "body": "<p>Let's look at the definition of the <code>FromIterator</code> trait:</p>\n\n<pre><code>pub trait FromIterator&lt;A&gt;: Sized {\n    fn from_iter&lt;T: IntoIterator&lt;Item = A&gt;&gt;(iter: T) -&gt; Self;\n}\n</code></pre>\n\n<p>From how <code>FromIterator::from_iter()</code> is used in the implementation of the <code>collect()</code> method, Rust knows that the call to <code>FromIterator::from_iter()</code> takes the iterator <code>self</code> as parameter, and returns an object of type <code>B</code>. This information is matched against the definition of the <code>from_iter()</code> method, so Rust can conclude that the <code>Self</code> type of the <code>FromIterator</code> trait implementation must be <code>B</code>, and that the type <code>A</code> must be the item type of the iterator. The <code>Self</code> type of the <code>FromIterator</code> trait is precisely the type Rust needs to call <code>from_iter()</code> for.</p>\n\n<p>The details of how type inference works are complex. Rust uses a variant of the Hindley-Milner type inference algorithm. You can find some further information in <a href=\"https://github.com/rust-lang/rustc-guide/blob/master/src/type-inference.md\" rel=\"nofollow noreferrer\">this document from the rustc guide</a>.</p>\n\n<p>Roughly, Rust uses all information it has about unknown types as constraints and iteratively refines its knowledge about generic types, until only a single type for each unknown type remains, or some type remains ambiguous. In the former case, type inference was successful and all types have been inferred, and in the latter case, Rust will throw an error stating that it needs further type annotations.</p>\n"}], "owner": {"reputation": 668, "user_id": 456370, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/OvePG.png?s=128&g=1", "display_name": "Nyi Nyi", "link": "https://stackoverflow.com/users/456370/nyi-nyi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 304, "favorite_count": 0, "accepted_answer_id": 54071995, "answer_count": 2, "score": 3, "last_activity_date": 1546877587, "creation_date": 1546853999, "last_edit_date": 1546877488, "question_id": 54071783, "link": "https://stackoverflow.com/questions/54071783/how-does-rust-understand-to-call-the-appropriate-implementation-of-from-iter-usi", "title": "How does Rust understand to call the appropriate implementation of from_iter using only FromIterator::from_iter?", "body": "<p>An iterator can be transformed to a collection using the <code>Iterator</code> trait's <code>collect</code> method if the collection implements <code>FromIterator</code>.</p>\n\n<pre><code>let vec = (0..10).collect::&lt;Vec&lt;_&gt;&gt;();\nlet devec = (0..10).collect::&lt;VecDeque&lt;_&gt;&gt;();\n</code></pre>\n\n<p><code>Vec</code> and <code>VecDeque</code> implement <code>FromIterator</code> trait.</p>\n\n<p>The implementation of <code>Iterator::collect</code> method is:</p>\n\n<pre><code>fn collect&lt;B: FromIterator&lt;Self::Item&gt;&gt;(self) -&gt; B\nwhere\n    Self: Sized,\n{\n    FromIterator::from_iter(self)\n}\n</code></pre>\n\n<p>How does Rust understand to call <code>from_iter</code> method of <code>Vec</code> or <code>VecDeque</code> from <code>FromIterator::from_iter(self)</code>?</p>\n"}, {"tags": ["rust", "observable", "change-tracking"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1546845106, "post_id": 54068889, "comment_id": 94972681, "body": "so you are concerned about perf, but you still want to use something with a lot of overhead ?"}, {"owner": {"reputation": 4172, "user_id": 3508956, "user_type": "registered", "accept_rate": 58, "profile_image": "https://i.stack.imgur.com/umLTo.jpg?s=128&g=1", "display_name": "laptou", "link": "https://stackoverflow.com/users/3508956/laptou"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1546847212, "post_id": 54068889, "comment_id": 94973435, "body": "Please pardon me for being naive, but what specifically are you referring to? @Stargateur"}, {"owner": {"reputation": 4172, "user_id": 3508956, "user_type": "registered", "accept_rate": 58, "profile_image": "https://i.stack.imgur.com/umLTo.jpg?s=128&g=1", "display_name": "laptou", "link": "https://stackoverflow.com/users/3508956/laptou"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1546847273, "post_id": 54068889, "comment_id": 94973466, "body": "The idea is to rewrite the core functionality in Rust and have everything be managed there ... obviously making hundreds of P/Invoke calls per second won&#39;t be much better than what I started with"}, {"owner": {"reputation": 4172, "user_id": 3508956, "user_type": "registered", "accept_rate": 58, "profile_image": "https://i.stack.imgur.com/umLTo.jpg?s=128&g=1", "display_name": "laptou", "link": "https://stackoverflow.com/users/3508956/laptou"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1546847307, "post_id": 54068889, "comment_id": 94973481, "body": "So the reason I want Observables is so that my C# code doesn&#39;t have to poll for changes in the state of the Rust core"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1546847728, "post_id": 54068889, "comment_id": 94973598, "body": "@laptou: How do you handle multiple consecutive changes to different fields of a same struct? For example, what do you expect of <code>a.x = 3; a.y = 4;</code>: one event? two events? And what of <code>a = b;</code>, one event? Or one event per field of <code>a</code>? We don&#39;t know <code>INotifyPropertyChanged</code>, so please detail the behavior that are you looking for."}, {"owner": {"reputation": 4172, "user_id": 3508956, "user_type": "registered", "accept_rate": 58, "profile_image": "https://i.stack.imgur.com/umLTo.jpg?s=128&g=1", "display_name": "laptou", "link": "https://stackoverflow.com/users/3508956/laptou"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1546847955, "post_id": 54068889, "comment_id": 94973677, "body": ".NET&#39;s <code>INotifyPropertyChanged</code> fires an event every time a property on the class is changed, regardless of what prompted the change or its proximity to other changes. I could later bundle these events based on timing for efficiency, but for now I just want something rudimentary. @MatthieuM."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1546849225, "post_id": 54068889, "comment_id": 94974102, "body": "@laptou: Okay, then can you enlighten us on what the nature of these events are. Is this &quot;One field change&quot; or &quot;The field (x) changed&quot; or &quot;The field (x) changed from (3) to (5)&quot;? Do you need the address of the object for which the field changed or another ID? Also, please edit your questions with these details, so that new readers don&#39;t have to tread through the comments."}, {"owner": {"reputation": 4172, "user_id": 3508956, "user_type": "registered", "accept_rate": 58, "profile_image": "https://i.stack.imgur.com/umLTo.jpg?s=128&g=1", "display_name": "laptou", "link": "https://stackoverflow.com/users/3508956/laptou"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1546849802, "post_id": 54068889, "comment_id": 94974328, "body": "@MatthieuM. I apologise for my vagueness. I have updated the question"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1546854232, "post_id": 54068889, "comment_id": 94976416, "body": "@laptou: No worries, we&#39;ll work it out together :)"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1546855500, "post_id": 54068889, "comment_id": 94977144, "body": "@laptou: What happens for nested modifications; such as <code>a.x.foo = 3;</code> when <code>a</code> is being observed: is <code>a.x</code> implicitly observed (in which case it has its own notification), is a notification sent that <code>a.x</code> was modified, or is nothing sent?"}, {"owner": {"reputation": 4172, "user_id": 3508956, "user_type": "registered", "accept_rate": 58, "profile_image": "https://i.stack.imgur.com/umLTo.jpg?s=128&g=1", "display_name": "laptou", "link": "https://stackoverflow.com/users/3508956/laptou"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1546877879, "post_id": 54068889, "comment_id": 94989354, "body": "Let us <a href=\"https://chat.stackoverflow.com/rooms/186312/discussion-between-laptou-and-matthieu-m\">continue this discussion in chat</a>."}], "answers": [{"comments": [{"owner": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "edited": false, "score": 4, "creation_date": 1546880302, "post_id": 54078218, "comment_id": 94990650, "body": "It&#39;s worth pointing out that there&#39;s also no way to find out when a field changes in .Net. The way <code>INotifyPropertyChanged</code> works is by using C# properties which are just syntax sugar for getter/setter methods. The coder is responsible for raising the property changed event when a setter is called (or using a codegen tool to do so). There&#39;s nothing inherently special about <code>INotifiyPropertyChanged</code> and the whole thing could probably be replicated in Rust 1:1 just without the syntax sugar of properties."}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 1, "creation_date": 1546885122, "post_id": 54078218, "comment_id": 94992826, "body": "It&#39;s also worth pointing out that the observer pattern (or more generally simple event subscription) is somewhat tricky to implement in Rust due to it usually involving long-lived references to some objects."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1546885742, "post_id": 54078218, "comment_id": 94993069, "body": "@SebastianRedl I figured that was well-covered by the <a href=\"https://stackoverflow.com/a/37573345/155423\">accepted answer on the question the OP linked to</a>. You&#39;ll note I avoided that whole problem by requiring the observer to be passed in to the function call."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1546884675, "last_edit_date": 1546884675, "creation_date": 1546878611, "answer_id": 54078218, "question_id": 54068889, "link": "https://stackoverflow.com/questions/54068889/is-there-a-recommended-pattern-for-finding-out-when-a-property-of-an-object-is-c/54078218#54078218", "title": "Is there a recommended pattern for finding out when a property of an object is changed in Rust?", "body": "<blockquote>\n  <p>Is there a recommended pattern for finding out when a property of an object is changed in Rust?</p>\n</blockquote>\n\n<p>No, there is nothing like this in the Rust language. As far as I know, it's <strong>completely impossible</strong> to tell when a field changes.</p>\n\n<p>You will need to write methods around the properties. These methods can perform whatever side effects you need when updating a value:</p>\n\n<pre><code>trait Observer {\n    fn count_decreased(&amp;mut self, example: &amp;Example);\n}\n\nstruct Example {\n    name: String,\n    count: u32,\n}\n\nimpl Example {\n    fn decrease_count(&amp;mut self, observer: Option&lt;impl Observer&gt;) {\n        self.count -= 1;\n        if let Some(mut observer) = observer {\n            observer.count_decreased(self);\n        }\n    }\n}\n</code></pre>\n\n<p>It seems very plausible that a <a href=\"https://doc.rust-lang.org/book/ch19-06-macros.html#procedural-macros-for-generating-code-from-attributes\" rel=\"nofollow noreferrer\">procedural macro</a> could be written to automatically generate some or all aspects of this.</p>\n"}], "owner": {"reputation": 4172, "user_id": 3508956, "user_type": "registered", "accept_rate": 58, "profile_image": "https://i.stack.imgur.com/umLTo.jpg?s=128&g=1", "display_name": "laptou", "link": "https://stackoverflow.com/users/3508956/laptou"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 626, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1546884675, "creation_date": 1546838361, "last_edit_date": 1546878485, "question_id": 54068889, "link": "https://stackoverflow.com/questions/54068889/is-there-a-recommended-pattern-for-finding-out-when-a-property-of-an-object-is-c", "title": "Is there a recommended pattern for finding out when a property of an object is changed in Rust?", "body": "<p>I have an existing C# application, but some parts of it are poor in performance for a number of reasons. I want to rewrite those parts in Rust and interact with my new native library using P/Invoke. However, the parts of my code that I'm wondering about are the parts that made use of <code>INotifyPropertyChanged</code> or <code>Observable&lt;T&gt;</code>. </p>\n\n<p>For reference, <code>INotifyPropertyChanged</code> is a pattern where the class that implements that interface (trait) will fire an event (property \"y\" on object x has changed) every time one of the class's properties is changed, regardless of what caused the change (the typical exception is for properties which affect each others' values, in order to avoid a stack overflow).</p>\n\n<p>For my particular use case, I am trying to keep track of a tree structure that exists in my Rust code from C#. It would be ideal if these change notifications had a way of bubbling up to the root of the tree (i.e., if <code>x.y[0].z</code> changes, then <code>y[0]</code> fires an event, which is seen by <code>x</code>, and <code>x</code> fires an event).</p>\n\n<p>Is there a recommended pattern for finding out when a property of an object is changed in Rust? For example, is there a way to know when a property of a struct is borrowed and fire a callback?</p>\n\n<p>I've seen <a href=\"https://stackoverflow.com/questions/37572734/how-can-i-implement-the-observer-pattern-in-rust\">How can I implement the observer pattern in Rust?</a>, but the accepted answer doesn't fully address what I'm wondering.</p>\n"}, {"tags": ["compiler-errors", "rust", "lexer"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1546845176, "post_id": 54068231, "comment_id": 94972710, "body": "Your code does not compile, because <code>0</code> is not a char and this question is just a syntactic error. You would have to write <code>Lexer::&lt;&#39;a&gt;</code> or shorter <code>Lexer</code> (also this is not an MCVE, because you could omit all the fields from <code>Lexer</code> and just add something that needs <code>&lt;&#39;a&gt;</code>, e.g. <a href=\"https://doc.rust-lang.org/std/marker/struct.PhantomData.html\" rel=\"nofollow noreferrer\"><code>PhantomData</code></a>)"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1546877031, "post_id": 54068231, "comment_id": 94988866, "body": "<code>Lexer&lt;&#39;a</code> can be the beginning of an expression comparing a variable named <code>Lexer</code> to a named loop expression like <code>&#39;a: loop { break &#39;a 4; }</code>. <a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a83eebeb97f0cdca1a09e8c72ef5ee93\" rel=\"nofollow noreferrer\">Example</a>"}, {"owner": {"reputation": 4217, "user_id": 9614249, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/eJfci.png?s=128&g=1", "display_name": "Increasingly Idiotic", "link": "https://stackoverflow.com/users/9614249/increasingly-idiotic"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1546881884, "post_id": 54068231, "comment_id": 94991363, "body": "@hellow 0 is not a char but the compiler doesn&#39;t give an error for that until after the error in question has been resolved so I did not catch it. There are (many) other errors with this code, but none can be seen by the compiler until error in question is fixed. I have updated my question regardless."}], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1546844879, "post_id": 54068263, "comment_id": 94972608, "body": "and why <code>mut</code> ? ;)"}, {"owner": {"reputation": 4217, "user_id": 9614249, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/eJfci.png?s=128&g=1", "display_name": "Increasingly Idiotic", "link": "https://stackoverflow.com/users/9614249/increasingly-idiotic"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1546882251, "post_id": 54068263, "comment_id": 94991547, "body": "There is no need in the code as is. In my actual program lexer is modified after being constructed but before being returned. I removed it for the question as it was irrelevant. I will update my code here to better reflect that."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1546882330, "post_id": 54068263, "comment_id": 94991586, "body": "that was obvious don&#39;t worry ^^"}], "tags": [], "owner": {"reputation": 4217, "user_id": 9614249, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/eJfci.png?s=128&g=1", "display_name": "Increasingly Idiotic", "link": "https://stackoverflow.com/users/9614249/increasingly-idiotic"}, "is_accepted": true, "score": 0, "last_activity_date": 1546831935, "creation_date": 1546831935, "answer_id": 54068263, "question_id": 54068231, "link": "https://stackoverflow.com/questions/54068231/strange-compile-error-with-lifetime-notation-expected-found/54068263#54068263", "title": "Strange compile error with lifetime notation: &quot;expected `:`, found `&gt;`&quot;", "body": "<p>I have just realized, there is no need for a lifetime on the constructor.</p>\n\n<p>The correct notation is</p>\n\n<pre><code>let mut lexer = Lexer {\n</code></pre>\n\n<p>not </p>\n\n<pre><code>let mut lexer = Lexer&lt;'a&gt; {\n</code></pre>\n"}], "owner": {"reputation": 4217, "user_id": 9614249, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/eJfci.png?s=128&g=1", "display_name": "Increasingly Idiotic", "link": "https://stackoverflow.com/users/9614249/increasingly-idiotic"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 228, "favorite_count": 0, "accepted_answer_id": 54068263, "answer_count": 1, "score": 2, "last_activity_date": 1546882082, "creation_date": 1546831535, "last_edit_date": 1546882082, "question_id": 54068231, "link": "https://stackoverflow.com/questions/54068231/strange-compile-error-with-lifetime-notation-expected-found", "title": "Strange compile error with lifetime notation: &quot;expected `:`, found `&gt;`&quot;", "body": "<p>I have defined a struct and method like so:</p>\n\n<pre><code>struct Lexer&lt;'a&gt; {\n    input: String,\n    pos: CharIndices&lt;'a&gt;,\n    next_pos: Peekable&lt;CharIndices&lt;'a&gt;&gt;,\n    ch: char,\n}\n\nimpl&lt;'a&gt; Lexer&lt;'a&gt; {\n    pub fn new(input: String) -&gt; Lexer&lt;'a&gt; {\n        let mut lexer = Lexer&lt;'a&gt; {\n            input,\n            pos: input.char_indices(),\n            next_pos: input.char_indices().peekable(),\n            ch: char::from(0 as u8),\n        };\n\n        lexer\n    }\n}\n</code></pre>\n\n<p>When compiling I get the error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: expected `:`, found `&gt;`\n  --&gt; src/lexer/mod.rs:15:33\n   |\n15 |         let mut lexer = Lexer&lt;'a&gt; {\n   |                                 ^ expected `:`\n</code></pre>\n\n<p>However, doing as it asks and changing the offending line to <code>let mut lexer = Lexer&lt;'a:&gt; {</code> makes no sense and recompiling confirms that this is indeed incorrect.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: expected `while`, `for`, `loop` or `{` after a label\n  --&gt; src/lexer/mod.rs:15:34\n   |\n15 |         let mut lexer = Lexer&lt;'a:&gt; {\n   |                                  ^ expected `while`, `for`, `loop` or `{` after a label\n</code></pre>\n\n<p>I'm not sure why the compiler is complaining and as best I can tell the lifetime notation looks fine to me.</p>\n\n<p><a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=fb7cc6831c6917d7ef15dbb1362b655a\" rel=\"nofollow noreferrer\">Rust Playground</a></p>\n"}, {"tags": ["rust", "graphql"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1546825226, "creation_date": 1546825226, "answer_id": 54067630, "question_id": 54067537, "link": "https://stackoverflow.com/questions/54067537/escaping-a-keyword-within-a-macro-from-graphql-client/54067630#54067630", "title": "Escaping a keyword within a macro from graphql-client", "body": "<p>Based <a href=\"https://github.com/graphql-rust/graphql-client/blob/708781ae761a1e062c3eea2c35b9bcb4f4b2f189/graphql_client_codegen/src/shared.rs#L39-L56\" rel=\"nofollow noreferrer\">on the code</a>, keywords have an underscore appended to them:</p>\n\n<pre><code>// List of keywords based on https://doc.rust-lang.org/grammar.html#keywords\nlet reserved = &amp;[\n    \"abstract\", \"alignof\", \"as\", \"become\", \"box\", \"break\", \"const\", \"continue\", \"crate\", \"do\",\n    \"else\", \"enum\", \"extern\", \"false\", \"final\", \"fn\", \"for\", \"if\", \"impl\", \"in\", \"let\", \"loop\",\n    \"macro\", \"match\", \"mod\", \"move\", \"mut\", \"offsetof\", \"override\", \"priv\", \"proc\", \"pub\",\n    \"pure\", \"ref\", \"return\", \"Self\", \"self\", \"sizeof\", \"static\", \"struct\", \"super\", \"trait\",\n    \"true\", \"type\", \"typeof\", \"unsafe\", \"unsized\", \"use\", \"virtual\", \"where\", \"while\", \"yield\",\n];\n\nif reserved.contains(&amp;field_name) {\n    let name_ident = Ident::new(&amp;format!(\"{}_\", field_name), Span::call_site());\n    return quote! {\n        #description\n        #deprecation\n        #[serde(rename = #field_name)]\n        pub #name_ident: #field_type\n    };\n}\n</code></pre>\n\n<p>This means that <code>type</code> should be accessible as <code>type_</code>.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://github.com/graphql-rust/graphql-client/issues/94\" rel=\"nofollow noreferrer\">Handle all Rust keywords as field names in codegen (#94)</a></li>\n<li><a href=\"https://github.com/graphql-rust/graphql-client/pull/96\" rel=\"nofollow noreferrer\">Handle all keywords as field names in codegen (#96)</a></li>\n</ul>\n"}], "owner": {"reputation": 1171, "user_id": 2430915, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/fa2d09b09a5eaf435ffdf18206a3a6b4?s=128&d=identicon&r=PG", "display_name": "BBS", "link": "https://stackoverflow.com/users/2430915/bbs"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 144, "favorite_count": 0, "accepted_answer_id": 54067630, "answer_count": 1, "score": 1, "last_activity_date": 1546825226, "creation_date": 1546824085, "last_edit_date": 1546824942, "question_id": 54067537, "link": "https://stackoverflow.com/questions/54067537/escaping-a-keyword-within-a-macro-from-graphql-client", "title": "Escaping a keyword within a macro from graphql-client", "body": "<p>I am trying to use the graphql-client crate to make requests on a graphql schema that looks similar to this</p>\n\n<pre><code>enum AttributeType {\n    // ...\n}\n\ntype Attribute {\n    name: String!\n    type: AttributeType!\n}\n</code></pre>\n\n<p>Using this</p>\n\n<pre><code>#[derive(GraphQLQuery)]\n#[graphql(\n    schema_path = \"src/graphql/schema.graphql\",\n    query_path = \"src/graphql/create_something.graphql\"\n)]\npub struct MutateSomethingModule;\n</code></pre>\n\n<p>When I try to use the graphql-client I get an error: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: expected identifier, found keyword `type`\n  --&gt; src/x/mod.rs:14:10\n   |\n14 | #[derive(GraphQLQuery)]\n   |          ^^^^^^^^^^^^ expected identifier, found keyword\nhelp: you can escape reserved keywords to use them as identifiers\n   |\n14 | #[derive(r#type)]\n   |          ^^^^^^\n\nerror: proc-macro derive produced unparseable tokens\n  --&gt; src/x/mod.rs:14:10\n   |\n14 | #[derive(GraphQLQuery)]\n   |          ^^^^^^^^^^^^\n</code></pre>\n\n<p>I am guessing this error message is complaining that I have the word <code>type</code> as an name is my schema and that I should escape it somehow. Based on the error message I tried replacing <code>type:</code> with <code>r#type:</code>, <code>r#\"type\"#</code> and some other similar variations. </p>\n\n<p>What is the correct way to do this?</p>\n"}, {"tags": ["rust", "actor", "rust-actix"], "comments": [{"owner": {"reputation": 20067, "user_id": 3769905, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/ae9bf76c0597ac1712a84af33e12467d?s=128&d=identicon&r=PG&f=1", "display_name": "BonsaiOak", "link": "https://stackoverflow.com/users/3769905/bonsaioak"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1546913694, "post_id": 54067451, "comment_id": 95002039, "body": "@Shepmaster You&#39;re right, I&#39;ve been on SO long enough to understand that my question left a lot to be desired.  I went through and clarified things and made sure that the error message exactly matched the example."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1546914523, "post_id": 54067451, "comment_id": 95002187, "body": "No worries; it&#39;s super easy to get caught up in a problem that we&#39;ve been working on for a while and lose sight of the bigger picture!"}], "answers": [{"comments": [{"owner": {"reputation": 20067, "user_id": 3769905, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/ae9bf76c0597ac1712a84af33e12467d?s=128&d=identicon&r=PG&f=1", "display_name": "BonsaiOak", "link": "https://stackoverflow.com/users/3769905/bonsaioak"}, "edited": false, "score": 0, "creation_date": 1546910472, "post_id": 54075642, "comment_id": 95001383, "body": "Sorry for the lack of detail.  I didn&#39;t realize there were multiple request types.  I&#39;ve edited the question with an example.  See if that helps."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 20067, "user_id": 3769905, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/ae9bf76c0597ac1712a84af33e12467d?s=128&d=identicon&r=PG&f=1", "display_name": "BonsaiOak", "link": "https://stackoverflow.com/users/3769905/bonsaioak"}, "edited": false, "score": 0, "creation_date": 1547029879, "post_id": 54075642, "comment_id": 95048130, "body": "@BonsaiOak reply is delayed, work is being...unusually <i>interesting</i>. Editing the answer to provide a bit more."}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": false, "score": 4, "last_activity_date": 1547031070, "last_edit_date": 1547031070, "creation_date": 1546868858, "answer_id": 54075642, "question_id": 54067451, "link": "https://stackoverflow.com/questions/54067451/what-is-the-proper-way-to-extract-the-body-of-an-actix-web-response-into-a-strin/54075642#54075642", "title": "What is the proper way to extract the body of an actix_web Response into a string?", "body": "<p>In order to keep the <code>response</code> object you have while also extracting the body, we're going to take advantage of the fact that, unlike a few other frameworks, you can extract the body without destructuring the entire object. Code is below:</p>\n\n<pre><code>actix::run(|| {\n\n    client::get(\"http://localhost/\")\n        .header(\"User-Agent\", \"Actix-web\")\n        .finish()\n        .unwrap()\n        .send()\n        .map_err(|e| {\n          Error::new(ErrorKind::AddrInUse, \"Request error\", e)\n        })\n        .and_then(|response| {\n          println!(\"Got response\");\n          response.body().map(move |body_out| {\n            (response, body_out)\n          }).map_err(|e| Error::new(ErrorKind::InvalidData, \"Payload error\", e))\n        }).and_then(|(response, body)| {\n          println!(\"Response: {:?}, Body: {:?}\", response, body);\n          Ok(())\n      }).map_err(|_| ())\n});\n</code></pre>\n\n<p>In order:</p>\n\n<ul>\n<li>everything in there now uses <code>std::io::Error</code> for ease of use. Since all <code>actix</code> error types implement <code>Error</code>, it is also possible to preserve the original types</li>\n<li><code>and_then()</code> allows me to extract the body. When this is resolved, a <code>map</code> (with <code>move</code> making sure we're taking <code>response</code> with us) then returns a tuple of <code>(response, body)</code></li>\n<li>From there, you can freely use either the response or the body as you see fit </li>\n</ul>\n\n<p>Do note that I replaced your hostname with <code>localhost</code> for testing purposes as <code>ipv4.canhasip.com</code> does not currently resolve to anything on the outside.</p>\n\n<hr>\n\n<p>Initial answer:</p>\n\n<p>You really should've provided more context on this one. <code>actix</code> has more than one request type.</p>\n\n<p>Your initial object (<code>response</code>) is a <a href=\"https://actix.rs/api/actix-web/stable/actix_web/client/struct.ClientResponse.html\" rel=\"nofollow noreferrer\"><code>ClientResponse</code></a>. calling <code>body()</code> on it returns a <code>MessageBody</code> struct, which is the start of the rabbit hole you fell into. This is <strong>NOT</strong> the actual body, merely an object implementing the <code>Future</code> trait and which will, once it has run its course, yield what you are after.</p>\n\n<p>You'll need to do this in a less hacky way, but for now and to convince yourself that this is the source of the issue, instead of your line of code, try this:</p>\n\n<pre><code>println!(\"{:?}\", response.body().wait())\n</code></pre>\n\n<p>Calling <code>wait()</code> on a future blocks the current thread, which is why I am saying it is a temporary, hacky way to show you where the issue is. Depending on what you have at your disposal (if you have an executor-like object somewhere, or are able to return a future for execution), your actual solution will differ.</p>\n"}, {"comments": [{"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 1, "creation_date": 1546871514, "post_id": 54075709, "comment_id": 94985702, "body": "I didn&#39;t want to go that far as, due to the brevity of the OP&#39;s example, it isn&#39;t guaranteed that he isn&#39;t <i>already</i> returning something implementing <code>IntoFuture</code> from where he got that object, hence the caveat :-)"}, {"owner": {"reputation": 20067, "user_id": 3769905, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/ae9bf76c0597ac1712a84af33e12467d?s=128&d=identicon&r=PG&f=1", "display_name": "BonsaiOak", "link": "https://stackoverflow.com/users/3769905/bonsaioak"}, "edited": false, "score": 0, "creation_date": 1546910516, "post_id": 54075709, "comment_id": 95001388, "body": "I&#39;ve edited my question with an example.  See if that helps."}], "tags": [], "owner": {"reputation": 2920, "user_id": 210304, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/3c70d1833ed67198b6e364834b13c770?s=128&d=identicon&r=PG", "display_name": "Caio", "link": "https://stackoverflow.com/users/210304/caio"}, "is_accepted": false, "score": 1, "last_activity_date": 1546869116, "creation_date": 1546869116, "answer_id": 54075709, "question_id": 54067451, "link": "https://stackoverflow.com/questions/54067451/what-is-the-proper-way-to-extract-the-body-of-an-actix-web-response-into-a-strin/54075709#54075709", "title": "What is the proper way to extract the body of an actix_web Response into a string?", "body": "<p>Complementing S\u00e9bastien's answer, you can also resolve the <code>MessageBody</code> future:</p>\n\n<pre><code>.and_then(|response| {\n    response.body().map_err(|_| ()).and_then(|bytes| {\n        println!(\"{:?}\", bytes);\n        Ok(())\n    })\n})\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 650, "user_id": 996314, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/4d6f299c3fe907046a23f106f7b56995?s=128&d=identicon&r=PG&f=1", "display_name": "Rokit", "link": "https://stackoverflow.com/users/996314/rokit"}, "edited": false, "score": 0, "creation_date": 1569786730, "post_id": 54084610, "comment_id": 102699749, "body": "What is the meaning of <code>drop</code> in <code>map_err</code>?"}, {"owner": {"reputation": 650, "user_id": 996314, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/4d6f299c3fe907046a23f106f7b56995?s=128&d=identicon&r=PG&f=1", "display_name": "Rokit", "link": "https://stackoverflow.com/users/996314/rokit"}, "edited": false, "score": 1, "creation_date": 1569787812, "post_id": 54084610, "comment_id": 102699979, "body": "Looks like <code>drop</code> is a prelude function passed into <code>map_err</code> that throws away the error. <a href=\"https://doc.rust-lang.org/std/ops/trait.Drop.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/ops/trait.Drop.html</a> <a href=\"https://doc.rust-lang.org/std/prelude/\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/prelude</a>"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1546915684, "creation_date": 1546915684, "answer_id": 54084610, "question_id": 54067451, "link": "https://stackoverflow.com/questions/54067451/what-is-the-proper-way-to-extract-the-body-of-an-actix-web-response-into-a-strin/54084610#54084610", "title": "What is the proper way to extract the body of an actix_web Response into a string?", "body": "<pre><code>actix::run(|| {\n    client::get(\"http://ipv4.canhasip.com/\")\n        .header(\"User-Agent\", \"Actix-web\")\n        .finish()\n        .unwrap()\n        .send()\n        .map_err(drop)\n        .and_then(|response| response.body().map_err(drop))\n        .map(|body| body.to_vec())\n        .map(|body| String::from_utf8(body).unwrap())\n        .map(drop) // Do *something* with the string, presumably\n});\n</code></pre>\n\n<p>The result of <code>send</code> is a <a href=\"https://docs.rs/actix-web/0.7.17/actix_web/client/struct.SendRequest.html\" rel=\"nofollow noreferrer\"><code>SendRequest</code></a>. This is a future that resolves into a <a href=\"https://docs.rs/actix-web/0.7.17/actix_web/client/struct.ClientResponse.html\" rel=\"nofollow noreferrer\"><code>ClientResponse</code></a>. <code>ClientResponse</code> implements <code>HttpMessage</code>, which has the method\n<a href=\"https://docs.rs/actix-web/0.7.17/actix_web/trait.HttpMessage.html#method.body\" rel=\"nofollow noreferrer\"><code>HttpMessage::body</code></a>. This returns a future that resolves into a <a href=\"https://docs.rs/bytes/0.4.11/bytes/struct.Bytes.html\" rel=\"nofollow noreferrer\"><code>Bytes</code></a>. This can be converted into a <code>String</code> through the usual Rust methods.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/43419974/155423\">How do I read the entire body of a Tokio-based Hyper request?</a></li>\n<li><a href=\"https://stackoverflow.com/questions/19076719/how-do-i-convert-a-vector-of-bytes-u8-to-a-string\">How do I convert a Vector of bytes (u8) to a string</a></li>\n</ul>\n"}], "owner": {"reputation": 20067, "user_id": 3769905, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/ae9bf76c0597ac1712a84af33e12467d?s=128&d=identicon&r=PG&f=1", "display_name": "BonsaiOak", "link": "https://stackoverflow.com/users/3769905/bonsaioak"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2202, "favorite_count": 0, "answer_count": 3, "score": 3, "last_activity_date": 1547031070, "creation_date": 1546823257, "last_edit_date": 1546914590, "question_id": 54067451, "link": "https://stackoverflow.com/questions/54067451/what-is-the-proper-way-to-extract-the-body-of-an-actix-web-response-into-a-strin", "title": "What is the proper way to extract the body of an actix_web Response into a string?", "body": "<p>I am attempting to use <a href=\"https://crates.io/crates/actix-web\" rel=\"nofollow noreferrer\">actix_web</a> to fetch and display the contents of a web page.  The HTTP request completes successfully and I can view the webpage, but I want to read the body into a <code>String</code> for printing.</p>\n\n<p>I tried <code>let my_ip: String = response.body().into();</code> but I get an error that says </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `std::string::String: std::convert::From&lt;actix_web::httpmessage::MessageBody&lt;actix_web::client::response::ClientResponse&gt;&gt;` is not satisfied\n  --&gt; src/main.rs:16:53\n   |\n16 |                 let my_ip: String = response.body().into();\n   |                                                     ^^^^ the trait `std::convert::From&lt;actix_web::httpmessage::MessageBody&lt;actix_web::client::response::ClientResponse&gt;&gt;` is not implemented for `std::string::String`\n   |\n   = help: the following implementations were found:\n             &lt;std::string::String as std::convert::From&lt;&amp;'a str&gt;&gt;\n             &lt;std::string::String as std::convert::From&lt;std::borrow::Cow&lt;'a, str&gt;&gt;&gt;\n             &lt;std::string::String as std::convert::From&lt;std::boxed::Box&lt;str&gt;&gt;&gt;\n             &lt;std::string::String as std::convert::From&lt;trust_dns_proto::error::ProtoError&gt;&gt;\n   = note: required because of the requirements on the impl of `std::convert::Into&lt;std::string::String&gt;` for `actix_web::httpmessage::MessageBody&lt;actix_web::client::response::ClientResponse&gt;`\n</code></pre>\n\n<p>This is what I have so far:</p>\n\n<pre><code>use actix;\nuse actix_web::{client, HttpMessage};\nuse futures::future::Future;\n\nfn main() {\n    actix::run(|| {\n        client::get(\"http://ipv4.canhasip.com/\")\n            .header(\"User-Agent\", \"Actix-web\")\n            .finish()\n            .unwrap()\n            .send()\n            .map_err(|_| ())\n            .and_then(|response| {\n                println!(\"Response: {:?}\", response);\n                // error occurs here\n                let my_ip: String = response.body().into();\n                Ok(())\n            })\n    });\n}\n</code></pre>\n\n<p>Relevant dependency versions:</p>\n\n<pre><code>[dependencies]\nactix-web = \"0.7\"\nactix = \"0.7\"\nfutures = \"0.1\"\n</code></pre>\n"}, {"tags": ["rust", "shadowing"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1546818275, "post_id": 54066883, "comment_id": 94967260, "body": "It is preferred to post separate questions instead of combining your questions into one. That way, it helps the people answering your question as well as others hunting for one of your questions."}], "answers": [{"comments": [{"owner": {"reputation": 2066, "user_id": 6363050, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f9db389fc3801b8ecef05ed3074e2f03?s=128&d=identicon&r=PG&f=1", "display_name": "Samuel Dare", "link": "https://stackoverflow.com/users/6363050/samuel-dare"}, "edited": false, "score": 0, "creation_date": 1546818136, "post_id": 54066923, "comment_id": 94967241, "body": "so its creating new variables? what about 2? if its meant to be mututable then by definition its type isnt fixed at compile time so heap?"}, {"owner": {"reputation": 2088, "user_id": 4281998, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/q8Jvt.png?s=128&g=1", "display_name": "Brady Dean", "link": "https://stackoverflow.com/users/4281998/brady-dean"}, "reply_to_user": {"reputation": 2066, "user_id": 6363050, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f9db389fc3801b8ecef05ed3074e2f03?s=128&d=identicon&r=PG&f=1", "display_name": "Samuel Dare", "link": "https://stackoverflow.com/users/6363050/samuel-dare"}, "edited": false, "score": 0, "creation_date": 1546818340, "post_id": 54066923, "comment_id": 94967270, "body": "In example 2  there is only 1 variable on the stack. Its value is changed with each assignment."}, {"owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "reply_to_user": {"reputation": 2066, "user_id": 6363050, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f9db389fc3801b8ecef05ed3074e2f03?s=128&d=identicon&r=PG&f=1", "display_name": "Samuel Dare", "link": "https://stackoverflow.com/users/6363050/samuel-dare"}, "edited": false, "score": 4, "creation_date": 1546818353, "post_id": 54066923, "comment_id": 94967273, "body": "@Data_Kid &quot;if its meant to be mututable then by definition its type isnt fixed&quot; What is your definition of mutability that that would follow from the definition? Mutable variables still have a fixed type in Rust (and the vast majority of other statically typed languages)."}], "tags": [], "owner": {"reputation": 2088, "user_id": 4281998, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/q8Jvt.png?s=128&g=1", "display_name": "Brady Dean", "link": "https://stackoverflow.com/users/4281998/brady-dean"}, "is_accepted": true, "score": 1, "last_activity_date": 1546818242, "last_edit_date": 1546818242, "creation_date": 1546817952, "answer_id": 54066923, "question_id": 54066883, "link": "https://stackoverflow.com/questions/54066883/shadowing-in-without-let/54066923#54066923", "title": "Shadowing in without &quot;let&quot;", "body": "<p>All values in your example are stored on the stack. In example 1, a new value is pushed onto the stack for each <code>let</code> statement.</p>\n\n<p>It looks like you got the example from <a href=\"https://doc.rust-lang.org/book/ch03-01-variables-and-mutability.html#shadowing\" rel=\"nofollow noreferrer\">The Rust Programming Language</a>. Maybe read this paragraph again for emphasis:</p>\n\n<blockquote>\n  <p>The other difference between <code>mut</code> and shadowing is that because we\u2019re\n  effectively creating a new variable when we use the <code>let</code> keyword again,\n  we can change the type of the value but reuse the same name.</p>\n</blockquote>\n"}], "owner": {"reputation": 2066, "user_id": 6363050, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f9db389fc3801b8ecef05ed3074e2f03?s=128&d=identicon&r=PG&f=1", "display_name": "Samuel Dare", "link": "https://stackoverflow.com/users/6363050/samuel-dare"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 70, "favorite_count": 0, "closed_date": 1546818131, "accepted_answer_id": 54066923, "answer_count": 1, "score": -1, "last_activity_date": 1546818242, "creation_date": 1546817584, "last_edit_date": 1546818161, "question_id": 54066883, "link": "https://stackoverflow.com/questions/54066883/shadowing-in-without-let", "closed_reason": "Duplicate", "title": "Shadowing in without &quot;let&quot;", "body": "<p>From my understanding, shadowing in Rust allows you to use the same variable by using <code>let</code> and re-declaring the variable e.g.</p>\n\n<pre><code>let x = 5;\n\nlet x = x + 1;\n\nlet x = x * 2;\n\nprintln!(\"The value of x is: {}\", x);\n</code></pre>\n\n<p>but, if you make the variable mutable, doesn't that mimic shadowing e.g.:</p>\n\n<pre><code>let mut x = 5;\nprintln!(\"The value of x is: {}\", x);\nx = 6;\nprintln!(\"The value of x is: {}\", x);\n x = 7;\nprintln!(\"The value of x is: {}\", x);\n</code></pre>\n\n<p>In example 1 &amp; 2, where is the variable stored, in the stack or heap?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1546807417, "post_id": 54065447, "comment_id": 94964681, "body": "<code>return match { ... };</code>: don&#39;t do that, that&#39;s very unidiomatic. Instead remove <code>return</code> and the <code>;</code>."}], "answers": [{"comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1546807664, "post_id": 54065529, "comment_id": 94964751, "body": "&quot;However, it&#39;s much more appropriate to write a Display instance yourself.&quot;\u2192 Nah, <a href=\"https://github.com/victorporof/rust-enum-str-derive\" rel=\"nofollow noreferrer\">there are crates to do that for you</a>!"}], "tags": [], "owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "is_accepted": true, "score": 1, "last_activity_date": 1546808776, "last_edit_date": 1546808776, "creation_date": 1546805632, "answer_id": 54065529, "question_id": 54065447, "link": "https://stackoverflow.com/questions/54065447/returning-value-of-enum/54065529#54065529", "title": "Returning value of enum", "body": "<p>You can derive a printable representation <em>for debugging purposes</em> with <code>#[derive(Debug)]</code>. This would let you print it out using <code>println!(\"{:?}\", self)</code></p>\n\n<p>Example:</p>\n\n<pre><code>#[derive(Debug)]\nenum Answer {\n    FizzBuzz,\n    Fizz,\n    Buzz,\n    Nothing(i32),\n}\n</code></pre>\n\n\n\n<pre><code>match self {\n    Nothing(_) -&gt; /* ... */,\n    other -&gt; println!(\"{:?}\", other),\n}\n</code></pre>\n\n<p>However, it's much more appropriate to write a <code>Display</code> instance yourself. You'll have to do the translation (<code>Fizz -&gt; \"Fizz\"</code>, etc) yourself, but then it will be in a centralized location and you can pass it to formatters like you've been doing.</p>\n\n<p>To get the value out of the <code>Nothing</code>, you simply need to pattern match on it and give it a name. Instead of</p>\n\n<pre><code>Nothing(_) =&gt; // Do something generic\n</code></pre>\n\n<p>consider</p>\n\n<pre><code>Nothing(n) =&gt; // Do something that involves the number n\n</code></pre>\n"}], "owner": {"reputation": 2019, "user_id": 7227475, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/a18ae707e89cdc9ffc6cbbd66303ea99?s=128&d=identicon&r=PG&f=1", "display_name": "ohwelppp", "link": "https://stackoverflow.com/users/7227475/ohwelppp"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1308, "favorite_count": 0, "closed_date": 1546808802, "accepted_answer_id": 54065529, "answer_count": 1, "score": -1, "last_activity_date": 1546808826, "creation_date": 1546805186, "last_edit_date": 1546808700, "question_id": 54065447, "link": "https://stackoverflow.com/questions/54065447/returning-value-of-enum", "closed_reason": "Duplicate", "title": "Returning value of enum", "body": "<p>I'm implementing FizzBuzz in Rust. I went from the simplest version to using an enum and I can't resolve it. I've read enums are very potent so I tried to use them to their fullest.</p>\n\n<p>Here is my implementation:</p>\n\n<pre><code>use std::fmt;\n\nfn main() {\n    for i in 1..100 {\n        println!(\"{}\", fizzbuzz(i))\n    }\n}\n\nfn fizzbuzz(value: i32) -&gt; Answer {\n    use crate::Answer::*;\n    return match (value % 3, value % 5) {\n        (0, 0) =&gt; FizzBuzz,\n        (0, _) =&gt; Fizz,\n        (_, 0) =&gt; Buzz,\n        (_, _) =&gt; Nothing(value),\n    };\n}\n\nenum Answer {\n    FizzBuzz,\n    Fizz,\n    Buzz,\n    Nothing(i32),\n}\n\nimpl fmt::Display for Answer {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        use crate::Answer::*;\n        match self {\n            FizzBuzz =&gt; write!(f, \"FizzBuzz\"),\n            Fizz =&gt; write!(f, \"Fizz\"),\n            Buzz =&gt; write!(f, \"Buzz\"),\n            Nothing() =&gt; write!(f, \"number passed to NoBuzz\"),\n        }\n    }\n}\n</code></pre>\n\n<p>I have 2 problems:</p>\n\n<ul>\n<li><p>how to use the name of actual enum in <code>match self</code> block?\nIn Java, I could use just <code>FizzBuzz.name()</code> and it would print\n<code>\"FizzBuzz\"</code> - is it possible in Rust?</p></li>\n<li><p>is it possible to print that <code>value</code> I passed to <code>Nothing</code> in <code>fizzbuzz</code> \nfunction?</p></li>\n</ul>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 3, "creation_date": 1546793516, "post_id": 54063760, "comment_id": 94960638, "body": "You&#39;re trying to store a reference to <code>self.first</code> (because you capture it) in <code>self.second</code>, that cannot work."}, {"owner": {"reputation": 6086, "user_id": 943814, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e8b4b9fc52a3084be9a2de004e0bb6dc?s=128&d=identicon&r=PG", "display_name": "anderspitman", "link": "https://stackoverflow.com/users/943814/anderspitman"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1546793743, "post_id": 54063760, "comment_id": 94960703, "body": "Ok that makes sense, and seems obvious now that you say it. I&#39;ve been in the weeds with this for many hours. It took a while to drill down to this point. Now, is there a way to accomplish the same effect in Rust? Is there some way for <code>second</code> to borrow <code>first</code> whenever it needs it, or something along those lines?"}], "answers": [{"tags": [], "owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "is_accepted": false, "score": 1, "last_activity_date": 1546812878, "last_edit_date": 1546812878, "creation_date": 1546796372, "answer_id": 54064211, "question_id": 54063760, "link": "https://stackoverflow.com/questions/54063760/is-it-possible-to-call-a-member-closure-from-another-member-closure/54064211#54064211", "title": "Is it possible to call a member closure from another member closure?", "body": "<p>Here is a partial solution to your problem: Do not take <code>Box&lt;Fn()&gt;</code>, but use <code>Box&lt;Fn(&amp;MyStruct)&gt;</code> instead, i.e. pass the \"<code>self</code>\" explicitly to the closures.</p>\n\n<p>However, as far as I can see, this only allows the closures to take <code>&amp;MyStruct</code> (as opposed to <code>&amp;mut MyStruct</code>), i.e. the closures cannot modify the given <code>MyStruct</code> (which may or may not be enough for your use case).</p>\n\n<pre><code>struct MyStruct {\n    first: Box&lt;Fn(&amp;MyStruct)&gt;,\n    second: Box&lt;Fn(&amp;MyStruct)&gt;,\n}\n\nimpl MyStruct {\n    fn method(&amp;mut self) {\n        self.second = Box::new(|self2: &amp;MyStruct| {\n            (self2.first)(self2)\n        });\n    }\n}\n\nfn main() {\n    let _ = MyStruct {\n        first: Box::new(|_self_ignored| {}),\n        second: Box::new(|_self_ignored| {}),    \n    };\n}\n</code></pre>\n\n<p>If the closures should modify <code>MyStruct</code>, you run into problems with <code>(self2.first)(self2)</code>, since this would then borrow <code>self2</code> twice, once of them mutably. You could possibly get around this by swapping out <code>first</code>/<code>second</code> temporarily, but this way, you would need to be terribly careful whenever you call <code>first</code>/<code>second</code>, since it could at any time be impossible to call <code>first</code>/<code>second</code>. </p>\n\n<p>There may be <code>unsafe</code> ways around this. That said, I suppose (or at least, I hope) there is a better way to implement what you are trying to achieve.</p>\n"}], "owner": {"reputation": 6086, "user_id": 943814, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e8b4b9fc52a3084be9a2de004e0bb6dc?s=128&d=identicon&r=PG", "display_name": "anderspitman", "link": "https://stackoverflow.com/users/943814/anderspitman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 76, "favorite_count": 0, "closed_date": 1546796629, "answer_count": 1, "score": 1, "last_activity_date": 1546812878, "creation_date": 1546793204, "last_edit_date": 1546795062, "question_id": 54063760, "link": "https://stackoverflow.com/questions/54063760/is-it-possible-to-call-a-member-closure-from-another-member-closure", "closed_reason": "Duplicate", "title": "Is it possible to call a member closure from another member closure?", "body": "<p>I'm working with callbacks on my struct, using boxed closures. However, I haven't been able to figure out how to call one closure from another:</p>\n\n<pre><code>struct MyStruct {\n    first: Box&lt;Fn()&gt;,\n    second: Box&lt;Fn()&gt;,\n}\n\nimpl MyStruct {\n    fn method(&amp;mut self) {\n        self.second = Box::new(|| {\n            // How can I make this work?\n            (self.first)();\n        });\n    }\n}\n\nfn main() {\n    let _ = MyStruct {\n        first: Box::new(|| {}),\n        second: Box::new(|| {}),\n    };\n}\n</code></pre>\n\n<p>This gives:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime due to conflicting requirements\n  --&gt; src/main.rs:8:32\n   |\n8  |           self.second = Box::new(|| {\n   |  ________________________________^\n9  | |             // How can I make this work?\n10 | |             (self.first)();\n11 | |         });\n   | |_________^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 7:5...\n  --&gt; src/main.rs:7:5\n   |\n7  | /     fn method(&amp;mut self) {\n8  | |         self.second = Box::new(|| {\n9  | |             // How can I make this work?\n10 | |             (self.first)();\n11 | |         });\n12 | |     }\n   | |_____^\n   = note: ...so that the types are compatible:\n           expected &amp;&amp;mut MyStruct\n              found &amp;&amp;mut MyStruct\n   = note: but, the lifetime must be valid for the static lifetime...\n   = note: ...so that the expression is assignable:\n           expected std::boxed::Box&lt;(dyn std::ops::Fn() + 'static)&gt;\n              found std::boxed::Box&lt;dyn std::ops::Fn()&gt;\n</code></pre>\n\n<p>I'm not quite sure what that means in this context.</p>\n\n<p>I understand that the borrowing rules are the cause of the error, but is there any legal way in Rust to get the same effect of what I'm going for?</p>\n\n<p>I'm not sure if it makes sense just from this why I would want to do this. It's a minimal reproduction. I can provide a bigger example, but it's much more involved.</p>\n"}, {"tags": ["enums", "rust"], "comments": [{"owner": {"reputation": 2582, "user_id": 3014642, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Yk30K.png?s=128&g=1", "display_name": "TSB99X", "link": "https://stackoverflow.com/users/3014642/tsb99x"}, "edited": false, "score": 1, "creation_date": 1546779497, "post_id": 54061281, "comment_id": 94956740, "body": "Do you actually need <code>enum</code> though? More idiomatic way would be to use <code>struct</code>, maybe? Provide a usecase to see implications of <code>enum</code> usage for your context."}, {"owner": {"reputation": 2582, "user_id": 3014642, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Yk30K.png?s=128&g=1", "display_name": "TSB99X", "link": "https://stackoverflow.com/users/3014642/tsb99x"}, "edited": false, "score": 1, "creation_date": 1546779900, "post_id": 54061281, "comment_id": 94956824, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/9109872/how-do-you-access-enum-values-in-rust\">How do you access enum values in Rust?</a>"}, {"owner": {"reputation": 480, "user_id": 4688042, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/07539504725306ff45b0e9c09e3e2699?s=128&d=identicon&r=PG", "display_name": "QuietJoon", "link": "https://stackoverflow.com/users/4688042/quietjoon"}, "reply_to_user": {"reputation": 2582, "user_id": 3014642, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Yk30K.png?s=128&g=1", "display_name": "TSB99X", "link": "https://stackoverflow.com/users/3014642/tsb99x"}, "edited": false, "score": 0, "creation_date": 1546783296, "post_id": 54061281, "comment_id": 94957635, "body": "@TSB99X I also read <a href=\"https://stackoverflow.com/questions/9109872/how-do-you-access-enum-values-in-rust\" title=\"how do you access enum values in rust\">stackoverflow.com/questions/9109872/&hellip;</a> too. And it only shows about using very long pattern-matching code. And my question is that to avoiding like that way."}, {"owner": {"reputation": 480, "user_id": 4688042, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/07539504725306ff45b0e9c09e3e2699?s=128&d=identicon&r=PG", "display_name": "QuietJoon", "link": "https://stackoverflow.com/users/4688042/quietjoon"}, "reply_to_user": {"reputation": 2582, "user_id": 3014642, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Yk30K.png?s=128&g=1", "display_name": "TSB99X", "link": "https://stackoverflow.com/users/3014642/tsb99x"}, "edited": false, "score": 0, "creation_date": 1546783508, "post_id": 54061281, "comment_id": 94957673, "body": "@TSB99X And, my usecase is to make a generic workflow to compare many chain of algorithms, but I&#39;m afraid that explaining my case obscure the focus of my question."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1546784368, "post_id": 54061281, "comment_id": 94957876, "body": "What should <code>ta.switch = false</code> do? Should it change the variant of <code>ta</code> to <code>EnumType::B</code>? Or should it panic? How should the compiler know what you want to do in that case, if you don&#39;t write some code?"}, {"owner": {"reputation": 480, "user_id": 4688042, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/07539504725306ff45b0e9c09e3e2699?s=128&d=identicon&r=PG", "display_name": "QuietJoon", "link": "https://stackoverflow.com/users/4688042/quietjoon"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1546785386, "post_id": 54061281, "comment_id": 94958194, "body": "@trentcl This kind of approach is possible in Haskell. You could copy&amp;paste the code and run it. Of course, it may occur panic when I treat it wrong like <code>(switch a)</code> in other word <code>ta.switch = false</code>."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1546785492, "post_id": 54061281, "comment_id": 94958228, "body": "So you want it to panic?"}, {"owner": {"reputation": 60850, "user_id": 221955, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0bc09e1bd45610fc85274cd7bb002c56?s=128&d=identicon&r=PG", "display_name": "Michael Anderson", "link": "https://stackoverflow.com/users/221955/michael-anderson"}, "edited": false, "score": 0, "creation_date": 1546823109, "post_id": 54061281, "comment_id": 94967988, "body": "To be clear would <code>print (switch a)</code> be a compile time error or run-time error in Haskell? (i.e. is Haskel treating <code>a</code> as a type of <code>TypeAB</code>, or does it know that <code>a</code> is actually <code>TypeAB::A</code> and treats <code>TypeAB::A</code> and <code>TypeAB::B</code> as distinct types?)"}, {"owner": {"reputation": 480, "user_id": 4688042, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/07539504725306ff45b0e9c09e3e2699?s=128&d=identicon&r=PG", "display_name": "QuietJoon", "link": "https://stackoverflow.com/users/4688042/quietjoon"}, "edited": false, "score": 0, "creation_date": 1546831910, "post_id": 54061281, "comment_id": 94969465, "body": "1. <code>print (switch a)</code> would occur run-time error. 2. In my understanding, a is just a <code>TypeAB</code>, but could be distinguished by pattern matching too. 3. I know that an approach avoiding run-time error would be better.   However, my question is just for that Rust providing the way or not."}], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1546790681, "post_id": 54061565, "comment_id": 94959657, "body": "Please summarize the <code>enum_dispatch</code> in the answer, in case the link goes bust. A link should not be essential, it should only either source or supplement the information presented in the answer."}], "tags": [], "owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "is_accepted": true, "score": 3, "last_activity_date": 1546795324, "last_edit_date": 1546795324, "creation_date": 1546778285, "answer_id": 54061565, "question_id": 54061281, "link": "https://stackoverflow.com/questions/54061281/is-there-a-way-to-directly-access-a-field-value-in-an-enum-struct-without-patter/54061565#54061565", "title": "Is there a way to directly access a field value in an enum struct without pattern matching?", "body": "<p>I think there is currently no built-in way of accessing <code>size</code> directly on the enum type. Until then, <a href=\"https://docs.rs/enum_dispatch/0.1.2/enum_dispatch/\" rel=\"nofollow noreferrer\">enum_dispatch</a> or a <a href=\"https://stackoverflow.com/questions/54056660/converting-an-enum-where-all-variants-implement-the-same-trait-to-a-box-in-rust/54057034#54057034\">macro-based solution</a> may help you.</p>\n"}, {"comments": [{"owner": {"reputation": 480, "user_id": 4688042, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/07539504725306ff45b0e9c09e3e2699?s=128&d=identicon&r=PG", "display_name": "QuietJoon", "link": "https://stackoverflow.com/users/4688042/quietjoon"}, "edited": false, "score": 0, "creation_date": 1546783652, "post_id": 54062081, "comment_id": 94957704, "body": "I&#39;m sorry that my example wasn&#39;t enough which accesses common field only. Of course, I need to access not common field too."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 480, "user_id": 4688042, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/07539504725306ff45b0e9c09e3e2699?s=128&d=identicon&r=PG", "display_name": "QuietJoon", "link": "https://stackoverflow.com/users/4688042/quietjoon"}, "edited": false, "score": 3, "creation_date": 1546784072, "post_id": 54062081, "comment_id": 94957802, "body": "@QuietJoon That doesn&#39;t make sense, what the language should do if the type at runtime of your enum doesn&#39;t have the field you required, panic ?"}, {"owner": {"reputation": 480, "user_id": 4688042, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/07539504725306ff45b0e9c09e3e2699?s=128&d=identicon&r=PG", "display_name": "QuietJoon", "link": "https://stackoverflow.com/users/4688042/quietjoon"}, "edited": false, "score": 0, "creation_date": 1546784528, "post_id": 54062081, "comment_id": 94957913, "body": "In Haskell, it is not an odd but very common approach. I add a little more cases in Haskell code too. Haskell also one of the languages that check type very carefully."}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": false, "score": 6, "last_activity_date": 1546812840, "last_edit_date": 1546812840, "creation_date": 1546782057, "answer_id": 54062081, "question_id": 54061281, "link": "https://stackoverflow.com/questions/54061281/is-there-a-way-to-directly-access-a-field-value-in-an-enum-struct-without-patter/54062081#54062081", "title": "Is there a way to directly access a field value in an enum struct without pattern matching?", "body": "<p>What about style C:</p>\n\n<pre><code>#[derive(Debug)]\nenum Color {\n    Green { name: String },\n    Blue { switch: bool },\n}\n\n#[derive(Debug)]\nstruct Something {\n    size: u32,\n    color: Color,\n}\n\nfn main() {\n    let c = Something {\n        size: 1,\n        color: Color::Green {\n            name: \"green\".to_string(),\n        },\n    };\n    let d = Something {\n        size: 2,\n        color: Color::Blue { switch: true },\n    };\n\n    let vec_cd = vec![&amp;c, &amp;d];\n\n    println!(\"{:?}\", &amp;c);\n    println!(\"{:?}\", &amp;d);\n    println!(\"{:?}\", &amp;vec_cd);\n\n    let _ = c.size;\n}\n</code></pre>\n\n<p>If all variant have something in common, why separate them?</p>\n\n<hr>\n\n<blockquote>\n  <p>Of course, I need to access not common field too.</p>\n</blockquote>\n\n<p>This would imply that Rust should define what to do when the actual type at runtime doesn't contain the field you required. So, I don't think Rust would add this one day.</p>\n\n<p>You could do it yourself. It will require some lines of code, but that matches the behavior of your Haskell code. However, I don't think this is the best thing to do. Haskell is Haskell, I think you should code in Rust and not try to code Haskell by using Rust. That a general rule, some feature of Rust come directly from Haskell, but what you want here is very odd in my opinion for Rust code.</p>\n\n<pre><code>#[derive(Debug)]\nenum Something {\n    A { size: u32, name: String },\n    B { size: u32, switch: bool },\n}\n\nimpl Something {\n    fn size(&amp;self) -&gt; u32 {\n        match self {\n            Something::A { size, .. } =&gt; *size,\n            Something::B { size, .. } =&gt; *size,\n        }\n    }\n\n    fn name(&amp;self) -&gt; &amp;String {\n        match self {\n            Something::A { name, .. } =&gt; name,\n            Something::B { .. } =&gt; panic!(\"Something::B doesn't have name field\"),\n        }\n    }\n\n    fn switch(&amp;self) -&gt; bool {\n        match self {\n            Something::A { .. } =&gt; panic!(\"Something::A doesn't have switch field\"),\n            Something::B { switch, .. } =&gt; *switch,\n        }\n    }\n\n    fn new_size(&amp;self, size: u32) -&gt; Something {\n        match self {\n            Something::A { name, .. } =&gt; Something::A {\n                size,\n                name: name.clone(),\n            },\n            Something::B { switch, .. } =&gt; Something::B {\n                size,\n                switch: *switch,\n            },\n        }\n    }\n\n    // etc...\n}\n\nfn main() {\n    let a = Something::A {\n        size: 1,\n        name: \"Rust is not haskell\".to_string(),\n    };\n    println!(\"{:?}\", a.size());\n    println!(\"{:?}\", a.name());\n\n    let b = Something::B {\n        size: 1,\n        switch: true,\n    };\n    println!(\"{:?}\", b.switch());\n\n    let aa = a.new_size(2);\n    println!(\"{:?}\", aa);\n}\n</code></pre>\n"}], "owner": {"reputation": 480, "user_id": 4688042, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/07539504725306ff45b0e9c09e3e2699?s=128&d=identicon&r=PG", "display_name": "QuietJoon", "link": "https://stackoverflow.com/users/4688042/quietjoon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 868, "favorite_count": 1, "accepted_answer_id": 54061565, "answer_count": 2, "score": 5, "last_activity_date": 1546812840, "creation_date": 1546776082, "last_edit_date": 1546795465, "question_id": 54061281, "link": "https://stackoverflow.com/questions/54061281/is-there-a-way-to-directly-access-a-field-value-in-an-enum-struct-without-patter", "title": "Is there a way to directly access a field value in an enum struct without pattern matching?", "body": "<p>I wish that enums in Rust can be used like Haskell's productive type. I want to</p>\n\n<ul>\n<li>access a field's value directly</li>\n<li>assign a field's value directly or make a clone with the changing value.</li>\n</ul>\n\n<p>Directly means that not using too long pattern matching code, but just could access like <code>let a_size = a.size</code>.</p>\n\n<p>In Haskell: </p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>data TypeAB = A {size::Int, name::String} | B {size::Int, switch::Bool} deriving Show\n\nmain = do\n    let a = A 1 \"abc\"\n    let b = B 1 True\n    print (size a)      -- could access a field's value directly\n    print (name a)      -- could access a field's value directly\n    print (switch b)    -- could access a field's value directly\n    let aa = a{size=2}  -- could make a clone directly with the changing value\n    print aa\n</code></pre>\n\n<p>I tried two styles of Rust enum definition like</p>\n\n<p>Style A:</p>\n\n<pre><code>#[derive(Debug)]\nenum EntryType {\n    A(TypeA),\n    B(TypeB),\n}\n\n#[derive(Debug)]\nstruct TypeA {\n    size: u32,\n    name: String,\n}\n\n#[derive(Debug)]\nstruct TypeB {\n    size: u32,\n    switch: bool,\n}\n\nfn main() {\n    let mut ta = TypeA {\n        size: 3,\n        name: \"TAB\".to_string(),\n    };\n    println!(\"{:?}\", &amp;ta);\n    ta.size = 2;\n    ta.name = \"TCD\".to_string();\n    println!(\"{:?}\", &amp;ta);\n\n    let mut ea = EntryType::A(TypeA {\n        size: 1,\n        name: \"abc\".to_string(),\n    });\n    let mut eb = EntryType::B(TypeB {\n        size: 1,\n        switch: true,\n    });\n    let vec_ab = vec![&amp;ea, &amp;eb];\n\n    println!(\"{:?}\", &amp;ea);\n    println!(\"{:?}\", &amp;eb);\n    println!(\"{:?}\", &amp;vec_ab);\n    // Want to do like `ta.size = 2` for ea\n    // Want to do like `ta.name = \"bcd\".to_string()` for ea\n    // Want to do like `tb.switch = false` for eb\n    // ????\n    println!(\"{:?}\", &amp;ea);\n    println!(\"{:?}\", &amp;eb);\n    println!(\"{:?}\", &amp;vec_ab);\n}\n</code></pre>\n\n<p>Style B:</p>\n\n<pre><code>#[derive(Debug)]\nenum TypeCD {\n    TypeC { size: u32, name: String },\n    TypeD { size: u32, switch: bool },\n}\n\nfn main() {\n    // NOTE: Rust requires representative struct name before each constructor\n    // TODO: Check constructor name can be duplicated\n    let mut c = TypeCD::TypeC {\n        size: 1,\n        name: \"abc\".to_string(),\n    };\n    let mut d = TypeCD::TypeD {\n        size: 1,\n        switch: true,\n    };\n\n    let vec_cd = vec![&amp;c, &amp;d];\n\n    println!(\"{:?}\", &amp;c);\n    println!(\"{:?}\", &amp;d);\n    println!(\"{:?}\", &amp;vec_cd);\n\n    // Can't access a field's value like\n    // let c_size = c.size\n    let c_size = c.size; // [ERROR]: No field `size` on `TypeCD`\n    let c_name = c.name; // [ERROR]: No field `name` on `TypeCD`\n    let d_switch = d.switch; // [ERROR]: No field `switch` on `TypeCD`\n                             // Can't change a field's value like\n                             // c.size = 2;\n                             // c.name = \"cde\".to_string();\n                             // d.switch = false;\n\n    println!(\"{:?}\", &amp;c);\n    println!(\"{:?}\", &amp;d);\n    println!(\"{:?}\", &amp;vec_cd);\n}\n</code></pre>\n\n<p>I couldn't access/assign values directly in any style. Do I have to implement functions or a trait just to access a field's value? Is there some way of deriving things to help this situation?</p>\n"}, {"tags": ["regex", "rust"], "comments": [{"owner": {"reputation": 1540, "user_id": 2606171, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/F4ncy.png?s=128&g=1", "display_name": "belst", "link": "https://stackoverflow.com/users/2606171/belst"}, "edited": false, "score": 1, "creation_date": 1546775213, "post_id": 54061078, "comment_id": 94955678, "body": "use <code>r#&quot;\\\\&quot;lengthSeconds\\\\&quot;:\\\\&quot;2664\\\\&quot;&quot;#</code>"}, {"owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "edited": false, "score": 1, "creation_date": 1546775213, "post_id": 54061078, "comment_id": 94955679, "body": "Could you post a bit more code, possibly executable on <a href=\"https://play.rust-lang.org/\" rel=\"nofollow noreferrer\">play.rust-lang.org</a>? (Just to make sure that we understand what should actually be escaped and what not.)"}], "answers": [{"comments": [{"owner": {"reputation": 3519, "user_id": 1035824, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/e722f972f0f851a1387db53d42ff736d?s=128&d=identicon&r=PG", "display_name": "n1_", "link": "https://stackoverflow.com/users/1035824/n1"}, "edited": false, "score": 0, "creation_date": 1546776115, "post_id": 54061177, "comment_id": 94955882, "body": "Thank you. Dumb question. Backslashes are the only one I need to excape in rawstrings?"}, {"owner": {"reputation": 36931, "user_id": 225757, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/e7140b12949e4652885f6bb02b435f42?s=128&d=identicon&r=PG", "display_name": "Roland Illig", "link": "https://stackoverflow.com/users/225757/roland-illig"}, "edited": false, "score": 0, "creation_date": 1546776254, "post_id": 54061177, "comment_id": 94955912, "body": "This answer is misleading. The backslashes need to be escaped because the regex requires it, not because the raw string requires it."}, {"owner": {"reputation": 1038, "user_id": 6734723, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/64KvA.jpg?s=128&g=1", "display_name": "Stefan Mesken", "link": "https://stackoverflow.com/users/6734723/stefan-mesken"}, "reply_to_user": {"reputation": 36931, "user_id": 225757, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/e7140b12949e4652885f6bb02b435f42?s=128&d=identicon&r=PG", "display_name": "Roland Illig", "link": "https://stackoverflow.com/users/225757/roland-illig"}, "edited": false, "score": 0, "creation_date": 1546776425, "post_id": 54061177, "comment_id": 94955950, "body": "@RolandIllig Thanks for the feedback. I&#39;ve tried to clarify this in the recent edit."}, {"owner": {"reputation": 36931, "user_id": 225757, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/e7140b12949e4652885f6bb02b435f42?s=128&d=identicon&r=PG", "display_name": "Roland Illig", "link": "https://stackoverflow.com/users/225757/roland-illig"}, "edited": false, "score": 0, "creation_date": 1546776576, "post_id": 54061177, "comment_id": 94955989, "body": "Your answer still doesn&#39;t clearly say that the backslashes are needed for the regex. That&#39;s the source of confusion here, and your answer should explain that."}], "tags": [], "owner": {"reputation": 1038, "user_id": 6734723, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/64KvA.jpg?s=128&g=1", "display_name": "Stefan Mesken", "link": "https://stackoverflow.com/users/6734723/stefan-mesken"}, "is_accepted": true, "score": 5, "last_activity_date": 1546777459, "last_edit_date": 1546777459, "creation_date": 1546775248, "answer_id": 54061177, "question_id": 54061078, "link": "https://stackoverflow.com/questions/54061078/rust-regex-pattern-unrecognized-escape-pattern/54061177#54061177", "title": "Rust regex pattern - unrecognized escape pattern", "body": "<p>By using r#..#, you treat your string as a raw string and hence do not process any escapes. However, since backslashes are special characters in Regex, the Regex expression itself still requires you to escape backslashes. So this </p>\n\n<p><code>Regex::new(r#\"\\\\\"lengthSeconds\\\\\":\\\\\"(\\d+)\\\\\"\"#)</code></p>\n\n<p>is what you want.</p>\n\n<p>Alternatively, you could write</p>\n\n<p><code>Regex::new(\"\\\\\\\\\\\"lengthSeconds\\\\\\\\\\\":\\\\\\\\\\\"(\\\\d+)\\\\\\\\\\\"\").unwrap();</code></p>\n\n<p>to yield the same result.</p>\n\n<p>See this <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=5a331d1f44bc714c07bfdb379169f69c\" rel=\"noreferrer\">example on Rust Playground</a></p>\n"}, {"tags": [], "owner": {"reputation": 1540, "user_id": 2606171, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/F4ncy.png?s=128&g=1", "display_name": "belst", "link": "https://stackoverflow.com/users/2606171/belst"}, "is_accepted": false, "score": 3, "last_activity_date": 1546775506, "creation_date": 1546775506, "answer_id": 54061205, "question_id": 54061078, "link": "https://stackoverflow.com/questions/54061078/rust-regex-pattern-unrecognized-escape-pattern/54061205#54061205", "title": "Rust regex pattern - unrecognized escape pattern", "body": "<p>You only need to escape the <code>\\</code> in the regex and can then use a raw string.</p>\n\n<p><code>r#\"\\\\\"lengthSeconds\\\\\":\\\\\"2664\\\\\"\"#</code> is a valid regex which matches <code>\\\"lengthSeconds\\\":\\\"2664\\\"</code></p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a0e29de924fc69d2037a32a3b309b91b\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}, {"tags": [], "owner": {"reputation": 36931, "user_id": 225757, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/e7140b12949e4652885f6bb02b435f42?s=128&d=identicon&r=PG", "display_name": "Roland Illig", "link": "https://stackoverflow.com/users/225757/roland-illig"}, "is_accepted": false, "score": 3, "last_activity_date": 1546777129, "creation_date": 1546777129, "answer_id": 54061411, "question_id": 54061078, "link": "https://stackoverflow.com/questions/54061078/rust-regex-pattern-unrecognized-escape-pattern/54061411#54061411", "title": "Rust regex pattern - unrecognized escape pattern", "body": "<p>The string you want to match is:</p>\n\n<pre><code>\\\"lengthSeconds\\\":\\\"2664\\\"\n</code></pre>\n\n<p>To make a regular expression that matches exactly this string, you need to escape all characters that have a special meaning in regexes. In this case, it is only the backslash. The regular expression is:</p>\n\n<pre><code>\\\\\"lengthSeconds\\\\\":\\\\\"2664\\\\\"\n</code></pre>\n\n<p>To put this regular expressing into a Rust string literal, you need to escape all characters that have a special meaning in Rust string literals. In this case, it's the quote and the backslash. The string literal is thus:</p>\n\n<pre><code>\"\\\\\\\\\\\"lengthSeconds\\\\\\\\\\\":\\\\\\\\\\\"2664\\\\\\\\\\\"\"\n</code></pre>\n\n<p>Since this is very hard to read, you should rather put the regex into a raw string literal. For this you need to escape all characters that have a special meaning in Rust raw string literals, which luckily are none. The raw string literal is thus:</p>\n\n<pre><code>r#\"\\\\\"lengthSeconds\\\\*:\\\\\"2664\\\\\"\"#\n</code></pre>\n"}], "owner": {"reputation": 3519, "user_id": 1035824, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/e722f972f0f851a1387db53d42ff736d?s=128&d=identicon&r=PG", "display_name": "n1_", "link": "https://stackoverflow.com/users/1035824/n1"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1853, "favorite_count": 0, "accepted_answer_id": 54061177, "answer_count": 3, "score": 3, "last_activity_date": 1546777459, "creation_date": 1546774428, "question_id": 54061078, "link": "https://stackoverflow.com/questions/54061078/rust-regex-pattern-unrecognized-escape-pattern", "title": "Rust regex pattern - unrecognized escape pattern", "body": "<p>I do have following string:</p>\n\n<pre><code>\\\"lengthSeconds\\\":\\\"2664\\\"\n</code></pre>\n\n<p>which I would like to match with this regexp:</p>\n\n<pre><code>Regex::new(\"lengthSeconds\\\\\\\":\\\\\\\"(\\\\d+)\\\\\\\"\")\n</code></pre>\n\n<p>I even tried this:</p>\n\n<pre><code>Regex::new(r#\"lengthSeconds\\\":\\\"(\\d+)\\\"\"#)\n</code></pre>\n\n<p>but I'm getting this: </p>\n\n<pre><code>regex parse error:\nlengthSeconds\\\":\\\"(\\d+)\\\"\n             ^^\nerror: unrecognized escape sequence\n</code></pre>\n\n<p>What's wrong with the regexp pattern?</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1546769974, "post_id": 54060372, "comment_id": 94954506, "body": "Can you show your intended usage as code?"}, {"owner": {"reputation": 1470, "user_id": 3492895, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b6583a8c7f8285bb68e0527955bece2d?s=128&d=identicon&r=PG&f=1", "display_name": "Winestone", "link": "https://stackoverflow.com/users/3492895/winestone"}, "reply_to_user": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1546772155, "post_id": 54060372, "comment_id": 94954949, "body": "@SebastianRedl Something like <a href=\"https://pastebin.com/ykMx8cei\" rel=\"nofollow noreferrer\">pastebin.com/ykMx8cei</a> quite a bit messier, hopefully this captures all the details you were hoping for. Hopefully I haven&#39;t made any mistakes."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1546795737, "post_id": 54060372, "comment_id": 94961325, "body": "<i>4 layer page table</i> \u2014 This is already covered by <a href=\"https://os.phil-opp.com/page-tables/\" rel=\"nofollow noreferrer\">Writing an OS in Rust (First Edition): Page Tables</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1546797050, "post_id": 54060372, "comment_id": 94961736, "body": "You cannot yet. The duplicate explains why and when such ability may be added to Rust."}], "owner": {"reputation": 1470, "user_id": 3492895, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b6583a8c7f8285bb68e0527955bece2d?s=128&d=identicon&r=PG&f=1", "display_name": "Winestone", "link": "https://stackoverflow.com/users/3492895/winestone"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 55, "favorite_count": 0, "closed_date": 1546797029, "answer_count": 0, "score": 0, "last_activity_date": 1546795758, "creation_date": 1546768225, "last_edit_date": 1546795758, "question_id": 54060372, "link": "https://stackoverflow.com/questions/54060372/how-to-convey-to-the-compiler-that-a-borrow-only-occurs-in-one-half-of-an-enum", "closed_reason": "Duplicate", "title": "How to convey to the compiler that a borrow only occurs in one half of an enum", "body": "<p>I have a <code>Parent</code> which contains an <code>Option&lt;Child&gt;</code> and each <code>Child</code> contains a <code>Target</code>. </p>\n\n<pre><code>struct MyError {}\n\nstruct Target {}\n\nstruct Child {\n    target: Target,\n}\n\nstruct Parent {\n    child: Option&lt;Child&gt;,\n}\n</code></pre>\n\n<p>Creating a <code>Parent</code> or <code>Child</code> can fail:</p>\n\n<pre><code>impl Child {\n    fn allocate_self() -&gt; Result&lt;Self, MyError&gt; {\n        Ok(Self { target: Target {} }) // could fail\n    }\n}\n\nimpl Parent {\n    fn allocate_self() -&gt; Result&lt;Self, MyError&gt; {\n        Ok(Self { child: None }) // could fail\n    }\n}\n</code></pre>\n\n<p>My goal is to:</p>\n\n<ol>\n<li>Allocate the <code>Parent</code>, returning an error on failure.</li>\n<li>Allocate the <code>Child</code>, returning an error on failure as well as freeing the <code>Parent</code>.</li>\n<li>Return the <code>&amp;mut Target</code> on success.</li>\n</ol>\n\n<p>So far I have:</p>\n\n<pre><code>impl Child {\n    fn retrieve_target(this_opt: &amp;mut Option&lt;Self&gt;) -&gt; Result&lt;&amp;mut Target, MyError&gt; {\n        if this_opt.is_none() {\n            *this_opt = Some(Self::allocate_self()?);\n        }\n        Ok(&amp;mut this_opt.as_mut().unwrap().target)\n    }\n}\n\nimpl Parent {\n    fn retrieve_target(this_opt: &amp;mut Option&lt;Self&gt;) -&gt; Result&lt;&amp;mut Target, MyError&gt; {\n        if this_opt.is_none() {\n            *this_opt = Some(Self::allocate_self()?)\n        }\n        let this = this_opt.as_mut().unwrap();\n        let result = Child::retrieve_target(&amp;mut this.child);\n        // GOAL: if Child::retrieve_target succeeds,\n        //       return the result, otherwise turn ourselves back into a None\n        if result.is_err() {\n            drop(this_opt.take());\n        }\n        result\n    }\n}\n</code></pre>\n\n<p>The problem is that <code>Parent::retrieve_target</code> fails with a compiler error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `*this_opt` as mutable more than once at a time\n  --&gt; src/lib.rs:44:18\n   |\n35 |     fn retrieve_target(this_opt: &amp;mut Option&lt;Self&gt;) -&gt; Result&lt;&amp;mut Target, MyError&gt; {\n   |                                  - let's call the lifetime of this reference `'1`\n...\n39 |         let this = this_opt.as_mut().unwrap();\n   |                    -------- first mutable borrow occurs here\n...\n44 |             drop(this_opt.take());\n   |                  ^^^^^^^^ second mutable borrow occurs here\n45 |         }\n46 |         result\n   |         ------ returning this value requires that `*this_opt` is borrowed for `'1`\n</code></pre>\n\n<p>I've tried an assortment of methods to try to tell the compiler that the <code>Err</code> part of the <code>Result</code> doesn't borrow <code>this_opt</code> but without success.</p>\n\n<p>One solution is to first perform the allocations and then retrieve the target. However, in my use case, I have multiple layers (4 layer page table) and so ideally I'd be able to return the <code>Target</code> once I get to it. Since each layer has to do roughly the same thing, I'd like it to be possible that a macro with some simple name substitutions would be able to create a multi-layered structure.</p>\n\n<p>Is this possible to write (ideally safely and concisely) and if so how?</p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 155397, "user_id": 978917, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/92d059913eace78a868a3e87f98e0a57?s=128&d=identicon&r=PG", "display_name": "ruakh", "link": "https://stackoverflow.com/users/978917/ruakh"}, "edited": false, "score": 1, "creation_date": 1546763453, "post_id": 54059732, "comment_id": 94953179, "body": "My Rust is not what it could be, but I believe the error-message is complaining that (1) the <code>next</code> method un-borrows its <code>self</code> argument when it returns and (2) it returns a mutable reference to part of that argument. Either #1 or #2 could be fine on its own, but the two of them together are in conflict; you can&#39;t keep a reference to something you&#39;ve un-borrowed."}, {"owner": {"reputation": 1961, "user_id": 1874323, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7f6c299c60b5eab6f199347f6715bc05?s=128&d=identicon&r=PG", "display_name": "BlamKiwi", "link": "https://stackoverflow.com/users/1874323/blamkiwi"}, "reply_to_user": {"reputation": 155397, "user_id": 978917, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/92d059913eace78a868a3e87f98e0a57?s=128&d=identicon&r=PG", "display_name": "ruakh", "link": "https://stackoverflow.com/users/978917/ruakh"}, "edited": false, "score": 1, "creation_date": 1546768568, "post_id": 54059732, "comment_id": 94954254, "body": "I ended up finding a post that explains the problem well. <a href=\"https://stackoverflow.com/questions/25730586/how-can-i-create-my-own-data-structure-with-an-iterator-that-returns-mutable-ref\" title=\"how can i create my own data structure with an iterator that returns mutable ref\">stackoverflow.com/questions/25730586/&hellip;</a>"}], "owner": {"reputation": 1961, "user_id": 1874323, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7f6c299c60b5eab6f199347f6715bc05?s=128&d=identicon&r=PG", "display_name": "BlamKiwi", "link": "https://stackoverflow.com/users/1874323/blamkiwi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 33, "favorite_count": 0, "closed_date": 1546768692, "answer_count": 0, "score": 1, "last_activity_date": 1546762141, "creation_date": 1546762141, "question_id": 54059732, "link": "https://stackoverflow.com/questions/54059732/lifetime-compiler-error-for-implementing-custom-iterator", "closed_reason": "Duplicate", "title": "Lifetime compiler error for implementing custom iterator.", "body": "<p>I'm implementing Conway's Game of Life in various forms to reacquant myself with Rust. Currently I'm writing an implementation to use an iterator instead of nested for loops and got stuck on a lifetime issue.</p>\n\n<p>I believe the lifetime annontations correct for the iterator types. However when I go to bind a cell state to the iterator return type, the borrow checker doesn't believe it's a valid assignment. What am I missing in my implementation to allow the borrow checker to succeed?</p>\n\n<p>This is the current implementation of the iterator:</p>\n\n<pre><code>struct LifeBoard {\n    board_size: usize,\n    cells: std::vec::Vec&lt;bool&gt;,\n}\nstruct Cell&lt;'a&gt; {\n    row : usize,\n    col : usize,\n    state : &amp;'a mut bool\n}\n\nstruct CellIterator&lt;'a&gt; {\n    board : &amp;'a mut LifeBoard,\n    index : usize\n}\n\nimpl&lt;'a&gt; std::iter::Iterator for CellIterator&lt;'a&gt; {\n    type Item = Cell&lt;'a&gt;;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Cell&lt;'a&gt;&gt; {\n        if self.index &lt; self.board.cells.len() {\n            let board_size = self.board.board_size;\n            let row = self.index / board_size;\n            let col = self.index % board_size;\n            let state : &amp;'a mut bool =  &amp;mut self.board.cells[self.index];\n            self.index = self.index + 1;\n\n            Some( Cell { row, col, state } )\n        } else {\n            None\n        }\n    }\n}\n\nimpl LifeBoard {\n    fn new(board_size: usize) -&gt; LifeBoard {\n        let mut cells = Vec::new();\n        cells.resize(board_size * board_size, false);\n\n        LifeBoard { board_size, cells }\n    }\n\n    fn iter_cells_mut( &amp;mut self ) -&gt; CellIterator {\n        CellIterator{ board: &amp;mut self, index: 0 }\n    }\n}\n</code></pre>\n\n<p>This is the error message:</p>\n\n<pre><code>error[E0495]: cannot infer an appropriate lifetime for lifetime parameter in function call due to conflicting requirements\n   --&gt; src\\main.rs:116:46\n    |\n116 |             let state : &amp;'a mut bool =  &amp;mut self.board.cells[self.index];\n    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 109:5...\n   --&gt; src\\main.rs:109:5\n    |\n109 | /     fn next(&amp;mut self) -&gt; Option&lt;Cell&lt;'a&gt;&gt; {\n110 | |         if self.index &lt; self.board.cells.len() {\n111 | |             None\n112 | |         } else {\n...   |\n120 | |         }\n121 | |     }\n    | |_____^\nnote: ...so that reference does not outlive borrowed content\n   --&gt; src\\main.rs:116:46\n    |\n116 |             let state : &amp;'a mut bool =  &amp;mut self.board.cells[self.index];\n    |                                              ^^^^^^^^^^^^^^^^\nnote: but, the lifetime must be valid for the lifetime 'a as defined on the impl at 106:6...\n   --&gt; src\\main.rs:106:6\n    |\n106 | impl&lt;'a&gt; std::iter::Iterator for CellIterator&lt;'a&gt; {\n    |      ^^\nnote: ...so that reference does not outlive borrowed content\n   --&gt; src\\main.rs:116:41\n    |\n116 |             let state : &amp;'a mut bool =  &amp;mut self.board.cells[self.index];\n</code></pre>\n"}, {"tags": ["multithreading", "rust"], "comments": [{"owner": {"reputation": 1684, "user_id": 1444038, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/185137db669d90871dd5537330610def?s=128&d=identicon&r=PG", "display_name": "Nika", "link": "https://stackoverflow.com/users/1444038/nika"}, "edited": false, "score": 0, "creation_date": 1546812932, "post_id": 54058000, "comment_id": 94966109, "body": "Not a duplicate, the approach I saw in those topics, they use different things (e.g. putting self into arc directly, then there&#39;s no way to access it anymore from other methods). And it&#39;s not about sharing a mutable object between threads, it&#39;s solution on the question."}], "answers": [{"tags": [], "owner": {"reputation": 1684, "user_id": 1444038, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/185137db669d90871dd5537330610def?s=128&d=identicon&r=PG", "display_name": "Nika", "link": "https://stackoverflow.com/users/1444038/nika"}, "is_accepted": false, "score": 1, "last_activity_date": 1546743567, "last_edit_date": 1546743567, "creation_date": 1546740616, "answer_id": 54058059, "question_id": 54058000, "link": "https://stackoverflow.com/questions/54058000/how-to-mutate-self-within-a-thread/54058059#54058059", "title": "How to mutate self within a thread?", "body": "<p>One amazing guy (Broken pen) on discord channel told me pretty much great solution to this, all credits to him.</p>\n\n<p>So solution is to put properties that we want to be mutated in <code>Arc&lt;Mutex&lt;&gt;&gt;</code> instead and move cloned reference into the thread. So basically code will look like this:</p>\n\n<pre><code>use std::sync::{mpsc, Arc, Mutex};\nuse std::thread;\nuse std::time::Duration;\n\ntype MyType = Arc&lt;Mutex&lt;u32&gt;&gt;;\n\n#[derive(Debug)]\nstruct MyStruct {\n    num: MyType,\n    tx_thread: Option&lt;thread::JoinHandle&lt;()&gt;&gt;,\n    rx_thread: Option&lt;thread::JoinHandle&lt;()&gt;&gt;,\n}\n\nimpl MyStruct {\n    fn new() -&gt; MyStruct {\n        MyStruct {\n            num: Arc::new(Mutex::new(0)),\n            tx_thread: None,\n            rx_thread: None,\n        }\n    }\n\n    fn start(&amp;mut self) {\n        let (tx, rx) = mpsc::channel();\n\n        // tx thread will read from serial port infinitely,\n        // and send data to mpsc channel after certain condition\n        // to be processed.\n        let tx_thread = thread::spawn(move || {\n            let mut i = 0;\n\n            loop {\n                tx.send(i).unwrap();\n                i += 1;\n                thread::sleep(Duration::from_secs(1));\n            }\n        });\n\n        // clone here.\n        let arc_num = self.num.clone();\n        let rx_thread = thread::spawn(move || loop {\n            let num = rx.recv().unwrap();\n            // println!(\"{:?}\", num);\n\n            // now we can use it for writing/reading.\n            *arc_num.lock().unwrap() = num;\n            println!(\"{:?}\", *arc_num.lock().unwrap());\n\n            thread::sleep(Duration::from_secs(1));\n        });\n\n        self.tx_thread = Some(tx_thread);\n        self.rx_thread = Some(rx_thread);\n    }\n}\n\nfn main() {\n    let mut s = MyStruct::new();\n    s.start();\n    thread::sleep(Duration::from_secs(999999));\n}\n</code></pre>\n\n<p>EDIT: another solution is to create inner struct with <code>Arc&lt;Mutex&lt;&gt;&gt;</code> and do work there, which gives you access to everything you need.</p>\n\n<p>See code below:</p>\n\n<pre><code>use std::default::Default;\nuse std::sync::{mpsc, Arc, Mutex};\nuse std::thread;\nuse std::time::Duration;\n\n// this will also implement Drop trait to wait threads to\n// be finished (message will be Enum instead of number in this case)\n\n#[derive(Debug, Default)]\nstruct MyStructInner {\n    num: u32,\n    tx_thread: Option&lt;thread::JoinHandle&lt;()&gt;&gt;,\n    rx_thread: Option&lt;thread::JoinHandle&lt;()&gt;&gt;,\n}\n\n#[derive(Debug, Default)]\nstruct MyStruct {\n    inner: Arc&lt;Mutex&lt;MyStructInner&gt;&gt;,\n}\n\nimpl MyStruct {\n    fn new() -&gt; MyStruct {\n        MyStruct {\n            inner: Arc::new(Mutex::new(MyStructInner {\n                num: 0,\n                ..Default::default()\n            })),\n        }\n    }\n\n    fn start(&amp;mut self) {\n        let (tx, rx) = mpsc::channel();\n\n        // tx thread will read from serial port infinitely,\n        // and send data to mpsc channel after certain condition\n        // to be processed.\n        let tx_thread = thread::spawn(move || {\n            let mut i = 0;\n\n            loop {\n                tx.send(i).unwrap();\n                i += 1;\n                thread::sleep(Duration::from_secs(1));\n            }\n        });\n\n        // after this will receive message, it will start\n        // processing and mutate `self` state if needed.\n        let local_self = self.inner.clone();\n        let rx_thread = thread::spawn(move || loop {\n            let num = rx.recv().unwrap();\n\n            local_self.lock().unwrap().num = num;\n            println!(\"{:?}\", local_self.lock().unwrap().num);\n\n            thread::sleep(Duration::from_secs(1));\n        });\n\n        self.inner.lock().unwrap().tx_thread = Some(tx_thread);\n        self.inner.lock().unwrap().rx_thread = Some(rx_thread);\n    }\n}\n\nfn main() {\n    let mut s = MyStruct::new();\n    s.start();\n    thread::sleep(Duration::from_secs(999999));\n}\n</code></pre>\n"}], "owner": {"reputation": 1684, "user_id": 1444038, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/185137db669d90871dd5537330610def?s=128&d=identicon&r=PG", "display_name": "Nika", "link": "https://stackoverflow.com/users/1444038/nika"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 112, "favorite_count": 0, "closed_date": 1546812264, "answer_count": 1, "score": 1, "last_activity_date": 1546812300, "creation_date": 1546739707, "last_edit_date": 1546812259, "question_id": 54058000, "link": "https://stackoverflow.com/questions/54058000/how-to-mutate-self-within-a-thread", "closed_reason": "Duplicate", "title": "How to mutate self within a thread?", "body": "<p>I am writing an application which should read from a serial port in a loop (like a watcher) and also write commands to it.</p>\n\n<p>The main thread is allowed to only write while the created thread can only  read.</p>\n\n<p>I created a simple example to reproduce my problem here. <code>tx_thread</code> reads from the serial port in a loop and on a certain condition it sends a message via MPSC channel. <code>rx_thread</code> looks for messages; when there is anything available it processes and it should also mutate the current state of the struct.</p>\n\n<pre><code>use std::sync::mpsc;\nuse std::thread;\nuse std::time::Duration;\n\n// this will also implement Drop trait to wait threads to\n// be finished (message will be Enum instead of number in this case)\n\n#[derive(Debug)]\nstruct MyStruct {\n    num: u32,\n    tx_thread: Option&lt;thread::JoinHandle&lt;()&gt;&gt;,\n    rx_thread: Option&lt;thread::JoinHandle&lt;()&gt;&gt;,\n}\n\nimpl MyStruct {\n    fn new() -&gt; MyStruct {\n        MyStruct {\n            num: 0,\n            tx_thread: None,\n            rx_thread: None,\n        }\n    }\n\n    fn start(&amp;mut self) {\n        let (tx, rx) = mpsc::channel();\n\n        // tx thread will read from serial port infinitely,\n        // and send data to mpsc channel after certain condition\n        // to be processed.\n        let tx_thread = thread::spawn(move || {\n            let mut i = 0;\n\n            loop {\n                tx.send(i).unwrap();\n                i += 1;\n                thread::sleep(Duration::from_secs(1));\n            }\n        });\n\n        // after this will receive message, it will start\n        // processing and mutate `self` state if needed.\n        let rx_thread = thread::spawn(move || loop {\n            let num = rx.recv().unwrap();\n            println!(\"{:?}\", num);\n\n            /* here, how do I save `num` to `self`? */\n\n            thread::sleep(Duration::from_secs(1));\n        });\n\n        self.tx_thread = Some(tx_thread);\n        self.rx_thread = Some(rx_thread);\n    }\n}\n\nfn main() {\n    let mut s = MyStruct::new();\n    s.start();\n    thread::sleep(Duration::from_secs(999999));\n}\n</code></pre>\n"}, {"tags": ["rust", "linker", "clang"], "answers": [{"comments": [{"owner": {"reputation": 222, "user_id": 10157207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1d4d9666e272c32931cc37ee334fa4ac?s=128&d=identicon&r=PG&f=1", "display_name": "RandomPerfectHashFunction", "link": "https://stackoverflow.com/users/10157207/randomperfecthashfunction"}, "edited": false, "score": 0, "creation_date": 1573320802, "post_id": 54064089, "comment_id": 103847402, "body": "I had the exact same problem but was using gcc instead of clang to link the object files. Your solution worked for me!"}], "tags": [], "owner": {"reputation": 31, "user_id": 1998770, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/54a739af77dfc90c9f7fe6644c501a1e?s=128&d=identicon&r=PG", "display_name": "Nicknapoli82", "link": "https://stackoverflow.com/users/1998770/nicknapoli82"}, "is_accepted": false, "score": 1, "last_activity_date": 1546796526, "last_edit_date": 1546796526, "creation_date": 1546795503, "answer_id": 54064089, "question_id": 54057837, "link": "https://stackoverflow.com/questions/54057837/rust-object-file-missing-when-linking-with-c-using-clang/54064089#54064089", "title": "Rust object file missing when linking with C using clang", "body": "<p>I was missing the standard library bindings. After a little more Googling I found a few links that were helpful:</p>\n\n<ul>\n<li><p><a href=\"https://www.reddit.com/r/rust/comments/7slfw9/running_rusts_output_llvm_with_clang/\" rel=\"nofollow noreferrer\">Running Rust's output LLVM with Clang</a></p></li>\n<li><p><a href=\"https://stackoverflow.com/questions/48430136/running-llvm-file-generated-with-rustc-with-clang\">Running LLVM file, generated with rustc, with clang</a></p></li>\n</ul>\n\n<p>It turns out I just needed to know where the Rust standard object file was. Running the following is a solution:</p>\n\n<blockquote>\n  <pre class=\"lang-none prettyprint-override\"><code>~/dev/rust/learn/clink$ rustc --crate-type staticlib rustlink.rs\n~/dev/rust/learn/clink$ clang clink.c -o test ~/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/libstd-89cf9eb8d404bb7b.so -L . -lrustlink\nnick@Void:~/dev/rust/learn/clink$ ./test\n5\nFalse\n\"Testing\"\nDid I get here?\n~/dev/rust/learn/clink$ \n</code></pre>\n</blockquote>\n\n<p>I added a line \"Did I get here\" because when I was originally successful in compilation, the program segfaulted before completion. I was trying to figure out if it was the <code>CString</code> printing that was causing it or not. Turns out I had a sort of double free condition. I will add the revised Rust code at the very bottom for completeness. </p>\n\n<p>As a second solution, and more to my liking, you can use an object file:</p>\n\n<blockquote>\n  <pre class=\"lang-none prettyprint-override\"><code>~/dev/rust/learn/clink$ rustc --emit obj --crate-type staticlib rustlink.rs --verbose\n~/dev/rust/learn/clink$ clang clink.c -o test rustlink.o ~/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/libstd-89cf9eb8d404bb7b.so \n~/dev/rust/learn/clink$ ./test\n5\nFalse\n\"Testing\"\nDid I get here?\n~/dev/rust/learn/clink$ \n</code></pre>\n</blockquote>\n\n<p>They both result in the same output, and I can't really say if one way is better than the other. It depends on what your requirements are in development.</p>\n\n<p>Last. My original code above for rustlink.rs was wrong. I learned that using a <code>CString</code> that is bound to a raw pointer is pretty much a bad idea. It needs to allocate its own memory, I think, in most circumstances. This is due to <code>drop</code>. I changed the <code>rust_char_star</code> function from the original post to the following.</p>\n\n<blockquote>\n<pre><code>#[no_mangle]\npub extern \"C\" fn rust_char_star(c: *const c_char) {\n    let ch = unsafe { CStr::from_ptr(c) };\n    let str_printable = CString::from(ch);\n\n    println!(\"{:?}\", str_printable);\n    println!(\"Did I get here?\");\n}\n</code></pre>\n</blockquote>\n\n<p>That prevents what is effectively a double free.</p>\n"}], "owner": {"reputation": 31, "user_id": 1998770, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/54a739af77dfc90c9f7fe6644c501a1e?s=128&d=identicon&r=PG", "display_name": "Nicknapoli82", "link": "https://stackoverflow.com/users/1998770/nicknapoli82"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 592, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1546813014, "creation_date": 1546737575, "last_edit_date": 1546813014, "question_id": 54057837, "link": "https://stackoverflow.com/questions/54057837/rust-object-file-missing-when-linking-with-c-using-clang", "title": "Rust object file missing when linking with C using clang", "body": "<p>I trying to work though some simple FFI things to figure out how to get Rust to work with C or C++ code. My immediate question is:</p>\n\n<p>It seems when I compile Rust code to an object file, it is missing some of the bindings for the clang linker to finalize an executable. Here are two very simple files that I am using.</p>\n\n<p><strong>clink.c</strong></p>\n\n<pre class=\"lang-c prettyprint-override\"><code>#include &lt;stdio.h&gt;\n#include &lt;stdbool.h&gt;\n\nint rust_int(int);\nbool rust_bool(int, int);\n\n/********************************/\n/* void rust_char_star(char *); */\n/********************************/\n\nint main(void) {\n    printf(\"%d\\n\", rust_int(5));\n    if (rust_bool(5, 6)) {\n        printf(\"True\\n\");\n    }\n    else { printf(\"False\\n\"); }\n\n    /******************************/\n    /* rust_char_star(\"Testing\"); */\n    /******************************/\n\n    return 0;\n}\n</code></pre>\n\n<p><strong>rustlink.rs</strong></p>\n\n<pre><code>use std::os::raw::{c_int, c_char};\n// use std::ffi::{CStr, CString};\n\n#[no_mangle]\npub extern \"C\" fn rust_int(i: c_int) -&gt; c_int {\n    i\n}\n\n#[no_mangle]\npub extern \"C\" fn rust_bool(x: c_int, y: c_int) -&gt; bool {\n    if x &gt; y {\n        true\n    }\n    else {\n        false\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n// #[no_mangle]                                                           //\n// pub extern \"C\" fn rust_char_star(c: *const c_char) {                   //\n//     let str_printable = unsafe {CString::from_raw(c as *mut c_char) }; //\n//                                                                        //\n//     println!(\"{:?}\", str_printable);                                   //\n// }                                                                      //\n////////////////////////////////////////////////////////////////////////////\n</code></pre>\n\n<p>When I compile each of these without the <code>CString</code>, everything works as expected. Ignore the warning.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>~/dev/rust/learn/clink$ rustc --emit obj --crate-type staticlib rustlink.rs\nwarning: unused import: `c_char`\nuse std::os::raw::{c_int, c_char};\n                          ^^^^^^\n= note: #[warn(unused_imports)] on by default\n\n~/dev/rust/learn/clink$ clang clink.c rustlink.o -o test\n~/dev/rust/learn/clink$ ./test\n5\nFalse\n</code></pre>\n\n<p>When I uncomment all the code to use the type <code>CString</code> though, that's where I'm missing something. I'm not going to repost the above code with the comments removed. Here is what the output yields though.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>~/dev/rust/learn/clink$ rustc --emit obj --crate-type staticlib rustlink.rs \nwarning: unused import: `CStr`\n --&gt; rustlink.rs:2:16\n  |\n2 | use std::ffi::{CStr, CString};\n  |                ^^^^\n  |\n  = note: #[warn(unused_imports)] on by default\n\n~/dev/rust/learn/clink$ clang clink.c rustlink.o -o test\nrustlink.o: In function `alloc::alloc::dealloc':\nrustlink.3a1fbbbh-cgu.0:(.text._ZN5alloc5alloc7dealloc17hca8aab9ecdf50cafE+0x43): undefined reference to `__rust_dealloc'\nrustlink.o: In function `rust_char_star':\nrustlink.3a1fbbbh-cgu.0:(.text.rust_char_star+0xa): undefined reference to `std::ffi::c_str::CString::from_raw'\nrustlink.3a1fbbbh-cgu.0:(.text.rust_char_star+0x3a): undefined reference to `&lt;std::ffi::c_str::CString as core::fmt::Debug&gt;::fmt'\nrustlink.3a1fbbbh-cgu.0:(.text.rust_char_star+0xa9): undefined reference to `std::io::stdio::_print'\nrustlink.o:(.data.DW.ref.rust_eh_personality[DW.ref.rust_eh_personality]+0x0): undefined reference to `rust_eh_personality'\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\n~/dev/rust/learn/clink$ \n</code></pre>\n\n<p>Going a little further. I attempted to compile the Rust code to a static library to be fed into clang. I'm uncertain why, but this is the result.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>~/dev/rust/learn/clink$ rustc --crate-type staticlib rustlink.rs \nwarning: unused import: `CStr`\n --&gt; rustlink.rs:2:16\n  |\n2 | use std::ffi::{CStr, CString};\n  |                ^^^^\n  |\n  = note: #[warn(unused_imports)] on by default\n\n~/dev/rust/learn/clink$ ls\nclink.c  librustlink.a  rustlink.o  rustlink.rs\n~/dev/rust/learn/clink$ clang clink.c -o test -lrustlink\n/usr/bin/ld: cannot find -lrustlink\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\n~/dev/rust/learn/clink$ clang clink.c -o test -L -lrustlink\n/tmp/clink-357672.o: In function `main':\nclink.c:(.text+0x15): undefined reference to `rust_int'\nclink.c:(.text+0x3a): undefined reference to `rust_bool'\nclink.c:(.text+0x83): undefined reference to `rust_char_star'\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\n~/dev/rust/learn/clink$\n</code></pre>\n\n<p>This is where I am a little confused. I thought when you tell rustc that the crate-type is static that it includes all dependencies, but I guess that is not the case.</p>\n\n<p>Clearly I am missing a step. I would prefer that rustc include all bindings so I can just use a simple command to clang to produce an executable.</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1546740218, "post_id": 54057668, "comment_id": 94949952, "body": "cargo install ?"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1546798573, "creation_date": 1546798573, "answer_id": 54064526, "question_id": 54057668, "link": "https://stackoverflow.com/questions/54057668/is-there-a-way-to-remove-everything-from-the-target-directory-apart-from-the-rel/54064526#54064526", "title": "Is there a way to remove everything from the target directory apart from the release binary?", "body": "<p>No, there is not.</p>\n\n<p>I'd just move the binary out of the <code>target</code> directory and then run <code>cargo clean</code>.</p>\n"}], "owner": {"reputation": 41, "user_id": 5646668, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1887758918b49bc22971243d82e9bec9?s=128&d=identicon&r=PG&f=1", "display_name": "Petr Tikilyaynen", "link": "https://stackoverflow.com/users/5646668/petr-tikilyaynen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 361, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1546798573, "creation_date": 1546735439, "last_edit_date": 1546798547, "question_id": 54057668, "link": "https://stackoverflow.com/questions/54057668/is-there-a-way-to-remove-everything-from-the-target-directory-apart-from-the-rel", "title": "Is there a way to remove everything from the target directory apart from the release binary?", "body": "<p>Can <code>cargo clean</code> remove everything from the <code>target/</code> directory apart from the release binary? The default linking option in Rust is statically linked binaries, so dependencies are only there to improve recompilation/incremental. </p>\n\n<p>AFAIK, <code>cargo clean</code> provides options to specify which target I want to clean up for. Is there a <code>cargo clean</code> flag that I am missing that does that?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1546738035, "post_id": 54057589, "comment_id": 94949643, "body": "&gt; &quot;I think it has something to do with the fact that the new function would have a different return type every time&quot; Pretty close! The question to ask is &quot;who decides what type <code>T</code> is?&quot; You want the implementation of <code>new</code> to decide what closure to return, but generics let the <i>caller</i> decide what type <code>T</code> is. I&#39;m pretty sure there&#39;s another question that addresses this... I&#39;ll look for it."}, {"owner": {"reputation": 6086, "user_id": 943814, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e8b4b9fc52a3084be9a2de004e0bb6dc?s=128&d=identicon&r=PG", "display_name": "anderspitman", "link": "https://stackoverflow.com/users/943814/anderspitman"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1546738230, "post_id": 54057589, "comment_id": 94949676, "body": "Ok I think that makes sense. Basically if the new function worked the type would be deciding for itself what T is, rather than the calling code deciding?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1546738548, "post_id": 54057589, "comment_id": 94949733, "body": "Yep! But that&#39;s also a useful thing to do sometimes, and you can do it with <code>impl Trait</code>. <a href=\"https://stackoverflow.com/q/27535289/3650362\">What is the correct way to return an Iterator (or any other trait)?</a> is the other question I was looking for. Just change <code>fn new() -&gt; Struct&lt;T&gt;</code> to <code>fn new() -&gt; Struct&lt;impl Fn(&amp;[u8])&gt;</code> and it will work."}, {"owner": {"reputation": 6086, "user_id": 943814, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e8b4b9fc52a3084be9a2de004e0bb6dc?s=128&d=identicon&r=PG", "display_name": "anderspitman", "link": "https://stackoverflow.com/users/943814/anderspitman"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1546740195, "post_id": 54057589, "comment_id": 94949949, "body": "Ok it&#39;s close. However, after your change I still can&#39;t actually call the new function. It gives &quot;type annotations required: cannot resolve <code>for&lt;&#39;r&gt; &lt;_ as std::ops::FnOnce&lt;(&amp;&#39;r [u8],)&gt;&gt;::Output == ()</code>&quot;"}, {"owner": {"reputation": 6086, "user_id": 943814, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e8b4b9fc52a3084be9a2de004e0bb6dc?s=128&d=identicon&r=PG", "display_name": "anderspitman", "link": "https://stackoverflow.com/users/943814/anderspitman"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1546740301, "post_id": 54057589, "comment_id": 94949968, "body": "The other answer has a lot of info but I&#39;m not 100% sure it applies here. I&#39;m specifically trying to set a type from within another type, not trying to return one. Although it&#39;s all tied together..."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 6086, "user_id": 943814, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e8b4b9fc52a3084be9a2de004e0bb6dc?s=128&d=identicon&r=PG", "display_name": "anderspitman", "link": "https://stackoverflow.com/users/943814/anderspitman"}, "edited": false, "score": 0, "creation_date": 1546740451, "post_id": 54057589, "comment_id": 94949987, "body": "Let us <a href=\"https://chat.stackoverflow.com/rooms/186248/discussion-between-trentcl-and-anderspitman\">continue this discussion in chat</a>."}], "answers": [{"tags": [], "owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "is_accepted": true, "score": 5, "last_activity_date": 1546812641, "last_edit_date": 1546812641, "creation_date": 1546773141, "answer_id": 54060929, "question_id": 54057589, "link": "https://stackoverflow.com/questions/54057589/how-to-make-a-new-associated-function-with-a-struct-that-has-a-closure-member/54060929#54060929", "title": "How to make a new associated function with a struct that has a closure member?", "body": "<p><strong>tl;dr;</strong> You can do the following:</p>\n\n<pre><code>fn new() -&gt; Struct&lt;impl Fn(&amp;[u8])&gt; {\n    Struct { func: |msg| {} }\n}\n</code></pre>\n\n<p><strong>More detailed:</strong></p>\n\n<p>Let's dissect your <code>impl</code> block:</p>\n\n<pre><code>impl&lt;T&gt; Struct&lt;T&gt;\nwhere\n    T: Fn(&amp;[u8]),\n{\n    fn new() -&gt; Struct&lt;T&gt; {\n        // this doesn't work\n        Struct { func: |msg| {} }\n    }\n}\n</code></pre>\n\n<p>We start with:</p>\n\n<pre><code>impl&lt;T&gt; Struct&lt;T&gt;\nwhere\n    T: Fn(&amp;[u8]),\n</code></pre>\n\n<p>This tells the compiler that the whole <code>impl</code> block is \"valid\" for <em>any</em> <code>T</code> satisfying <code>Fn(&amp;[u8])</code>.</p>\n\n<p>Now: </p>\n\n<pre><code>fn new() -&gt; Struct&lt;T&gt; {\n    // this doesn't work\n    Struct { func: |msg| {} }\n}\n</code></pre>\n\n<p>You say that <code>new</code> returns a <code>Struct&lt;T&gt;</code>, and we are within the block stating that everything inside it works for <em>any</em> <code>T</code> satisfying <code>Fn(&amp;[u8])</code>. However, you return <em>one particular instance</em> of <code>Struct</code>, namely the one parametrized by <code>|msg| {}</code> - thus, the return value can not be a <code>Struct&lt;T&gt;</code> for <em>any</em> <code>T</code> satisfying <code>Fn(&amp;[u8])</code>.</p>\n\n<p>However, you can modify it to do the following:</p>\n\n<pre><code>fn new() -&gt; Struct&lt;impl Fn(&amp;[u8])&gt; {\n    Struct { func: |msg| {} }\n}\n</code></pre>\n\n<p>This tells the compiler that <code>new</code> returns a <code>Struct</code>, whose parameter is known to satisfy <code>Fn(&amp;[u8])</code>, so that the compiler should infer it. In particular it has no assumptions about <code>T</code> and returns <em>one particular type</em>.</p>\n\n<p>In the direct initialization, however, we tell the compiler:</p>\n\n<pre><code>let s = Struct { func: |msg| {} };\n</code></pre>\n\n<p>The compiler sees that you want to create a <code>Struct</code> and knows that - in order to create it - it must infer the type for <code>T</code> res. <code>func</code>. It sees that you passed <code>|msg| {}</code> for <code>func</code>, infers the type for the closure and now knows a concrete type to put into the <code>T</code>.</p>\n"}], "owner": {"reputation": 6086, "user_id": 943814, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e8b4b9fc52a3084be9a2de004e0bb6dc?s=128&d=identicon&r=PG", "display_name": "anderspitman", "link": "https://stackoverflow.com/users/943814/anderspitman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 404, "favorite_count": 0, "closed_date": 1546812526, "accepted_answer_id": 54060929, "answer_count": 1, "score": 5, "last_activity_date": 1546812721, "creation_date": 1546734456, "last_edit_date": 1546812476, "question_id": 54057589, "link": "https://stackoverflow.com/questions/54057589/how-to-make-a-new-associated-function-with-a-struct-that-has-a-closure-member", "closed_reason": "Duplicate", "title": "How to make a new associated function with a struct that has a closure member?", "body": "<p>I almost have an intuitive sense of why this code should NOT work, but I can't quite put my finger on it. I think it has something to do with the fact that the new function would have a different return type every time. </p>\n\n<p>Why is that a problem? Why does the direct creation work?</p>\n\n<pre><code>struct Struct&lt;T&gt;\nwhere\n    T: Fn(&amp;[u8]),\n{\n    func: T,\n}\n\nimpl&lt;T&gt; Struct&lt;T&gt;\nwhere\n    T: Fn(&amp;[u8]),\n{\n    fn new() -&gt; Struct&lt;T&gt; {\n        // this doesn't work\n        Struct { func: |msg| {} }\n    }\n}\n\nfn main() {\n    // this works\n    let s = Struct { func: |msg| {} };\n}\n</code></pre>\n\n<p>The error is</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:14:24\n   |\n14 |         Struct { func: |msg| {} }\n   |                        ^^^^^^^^ expected type parameter, found closure\n   |\n   = note: expected type `T`\n              found type `[closure@src/main.rs:14:24: 14:32]`\n</code></pre>\n"}, {"tags": ["enums", "rust", "traits"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1546740635, "post_id": 54056660, "comment_id": 94950018, "body": "&quot;It feels like it should be a one liner!&quot; primary opinion ? If you want you can create RFC for Rust."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1546740966, "post_id": 54056660, "comment_id": 94950057, "body": "Also, why not <code>impl Foo for Foos</code> ?"}, {"owner": {"reputation": 7411, "user_id": 2200659, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/ImYIK.jpg?s=128&g=1", "display_name": "Anders", "link": "https://stackoverflow.com/users/2200659/anders"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1546742366, "post_id": 54056660, "comment_id": 94950234, "body": "@Stargateur <code>Foo</code> has many methods and I don&#39;t want to have to do a match over the enum variants for every one of them."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1546782522, "post_id": 54056660, "comment_id": 94957469, "body": "yeah I think there is a keyword in preparation for this, still a macro could do the job very well."}], "answers": [{"comments": [{"owner": {"reputation": 7411, "user_id": 2200659, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/ImYIK.jpg?s=128&g=1", "display_name": "Anders", "link": "https://stackoverflow.com/users/2200659/anders"}, "edited": false, "score": 0, "creation_date": 1546733567, "post_id": 54057034, "comment_id": 94948950, "body": "Sorry, <code>into_enum</code> was meant to be <code>into_box</code>, my bad. I have updated the question. Intersting that you can return <code>&amp;dyn</code>, I did not know that. Thanks!"}], "tags": [], "owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "is_accepted": false, "score": 3, "last_activity_date": 1546728671, "creation_date": 1546728671, "answer_id": 54057034, "question_id": 54056660, "link": "https://stackoverflow.com/questions/54056660/converting-an-enum-where-all-variants-implement-the-same-trait-to-a-box-in-rust/54057034#54057034", "title": "Converting an enum where all variants implement the same trait to a box in Rust?", "body": "<p>I recently wanted something similar. I cannot offer you a one-liner, but a macro that automatically generates the respective <code>match</code> arms along with then <code>enum</code> variants:</p>\n\n<pre><code>macro_rules! impl_foos{($($enumvariant: ident($foo: ty),)*) =&gt; {\n    enum Foos {\n        $($enumvariant($foo),)*\n    }\n    impl Foos {\n        fn into_enum(self) -&gt; Box&lt;dyn Foo&gt; {\n            match self {\n                $(Foos::$enumvariant(foo) =&gt; Box::new(foo),)*\n            }\n        }\n    }\n}}\n\nimpl_foos!(\n    A(FooA),\n    B(FooB),\n    C(FooC),\n);\n</code></pre>\n\n<p>This way, there is only one place to maintain all the possibilities, everything else is generated. Maybe even the <a href=\"https://docs.rs/enum_dispatch/0.1.2/enum_dispatch/\" rel=\"nofollow noreferrer\">crate enum_dispatch</a> helps.</p>\n\n<p>Off-topic: Should it really be <code>into_enum(self)-&gt;Box&lt;dyn Foo&gt;</code>? Shouldn't it be something like <code>as_foo(&amp;self)-&gt;&amp;dyn Foo</code>?</p>\n"}, {"tags": [], "owner": {"reputation": 3054, "user_id": 115030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c74c0974c6cc25c194a2737e2d6747?s=128&d=identicon&r=PG", "display_name": "Anders Kaseorg", "link": "https://stackoverflow.com/users/115030/anders-kaseorg"}, "is_accepted": true, "score": 5, "last_activity_date": 1546731371, "creation_date": 1546731371, "answer_id": 54057302, "question_id": 54056660, "link": "https://stackoverflow.com/questions/54056660/converting-an-enum-where-all-variants-implement-the-same-trait-to-a-box-in-rust/54057302#54057302", "title": "Converting an enum where all variants implement the same trait to a box in Rust?", "body": "<p>With the <a href=\"https://docs.rs/enum_dispatch/0.1.2/enum_dispatch/\" rel=\"noreferrer\"><code>enum_dispatch</code> crate</a>, you can write</p>\n\n<pre><code>#[macro_use]\nextern crate enum_dispatch;\n\n#[enum_dispatch]\ntrait Foo {}\n\nstruct FooA {}\nimpl Foo for FooA {}\n\nstruct FooB {}\nimpl Foo for FooB {}\n\nstruct FooC {}\nimpl Foo for FooC {}\n\n#[enum_dispatch(Foo)]\nenum Foos {\n    A(FooA),\n    B(FooB),\n    C(FooC),\n}\n</code></pre>\n\n<p>to get a generated <code>impl Foo for Foos</code>. You can then convert <code>Foos</code> to <code>Box&lt;dyn Foo&gt;</code> with simply <code>Box::new</code>.</p>\n\n<p>There is a potential downside to this approach: <code>Box::new(Foos::A(FooA))</code> contains a <code>Foos</code>, not an <code>FooA</code>, so it will incur the overhead of both the dynamic dispatch from <code>dyn Foo</code> to <code>Foos</code> and the <code>enum</code> dispatch from <code>Foos</code> to <code>FooA</code>.</p>\n\n<p>On the other hand, now that you have <code>impl Foo for Foos</code>: everywhere you would have used <code>Box&lt;dyn Foo&gt;</code>, you\u2019ll instead be able to directly use <code>Foos</code>, which should be more efficient in every way.</p>\n"}], "owner": {"reputation": 7411, "user_id": 2200659, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/ImYIK.jpg?s=128&g=1", "display_name": "Anders", "link": "https://stackoverflow.com/users/2200659/anders"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1698, "favorite_count": 0, "accepted_answer_id": 54057302, "answer_count": 2, "score": 5, "last_activity_date": 1546733487, "creation_date": 1546725528, "last_edit_date": 1546733487, "question_id": 54056660, "link": "https://stackoverflow.com/questions/54056660/converting-an-enum-where-all-variants-implement-the-same-trait-to-a-box-in-rust", "title": "Converting an enum where all variants implement the same trait to a box in Rust?", "body": "<p>I have a trait <code>Foo</code>, with some implementations, together with an enum <code>Foos</code> with one variant per implemention. I want to be able to convert my enum into <code>Box&lt;dyn Foo&gt;</code>.</p>\n\n<p>This is my current solution:</p>\n\n<pre><code>trait Foo {}\n\nstruct FooA {}\nimpl Foo for FooA {}\n\nstruct FooB {}\nimpl Foo for FooB {} \n\nstruct FooC {}\nimpl Foo for FooC {}\n\nenum Foos {\n    A(FooA),\n    B(FooB),\n    C(FooC),\n}\n\nimpl Foos {\n    fn into_box(self) -&gt; Box&lt;dyn Foo&gt; {\n        match self {\n            Foos::A(foo) =&gt; Box::new(foo),\n            Foos::B(foo) =&gt; Box::new(foo),\n            Foos::C(foo) =&gt; Box::new(foo),\n        }\n    }\n}\n</code></pre>\n\n<p>It works, but there's a lot of boiler plate in <code>into_enum</code>. As the number of variants grow, so will the function. Is there a simpler way to do this? It feels like it should be a one liner!</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1546809153, "post_id": 54056268, "comment_id": 94965162, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/54056268/edit\">edit</a> your question to include it. We cannot tell what crates, types, traits, fields, etc. are present in the code. Try to produce something that reproduces your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> or you can reproduce it in a brand new Cargo project. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> as well."}], "answers": [{"comments": [{"owner": {"reputation": 685, "user_id": 2838051, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/d8a5001bf13160b5eda6043161c9443b?s=128&d=identicon&r=PG&f=1", "display_name": "rm.rf.etc", "link": "https://stackoverflow.com/users/2838051/rm-rf-etc"}, "edited": false, "score": 1, "creation_date": 1552497073, "post_id": 54056716, "comment_id": 97035697, "body": "Is there a way to solve this without declaring a new variable?"}, {"owner": {"reputation": 4498, "user_id": 58768, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9bbffd2d873441279b4661070e8add4b?s=128&d=identicon&r=PG", "display_name": "bohdan_trotsenko", "link": "https://stackoverflow.com/users/58768/bohdan-trotsenko"}, "reply_to_user": {"reputation": 685, "user_id": 2838051, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/d8a5001bf13160b5eda6043161c9443b?s=128&d=identicon&r=PG&f=1", "display_name": "rm.rf.etc", "link": "https://stackoverflow.com/users/2838051/rm-rf-etc"}, "edited": false, "score": 6, "creation_date": 1556017446, "post_id": 54056716, "comment_id": 98286689, "body": "@rm.rf.etc you could use <code>title.text().trim().to_string()</code> if you tolerate a copy."}], "tags": [], "owner": {"reputation": 2582, "user_id": 3014642, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Yk30K.png?s=128&g=1", "display_name": "TSB99X", "link": "https://stackoverflow.com/users/3014642/tsb99x"}, "is_accepted": true, "score": 26, "last_activity_date": 1546810082, "last_edit_date": 1546810082, "creation_date": 1546726021, "answer_id": 54056716, "question_id": 54056268, "link": "https://stackoverflow.com/questions/54056268/temporary-value-is-freed-at-the-end-of-this-statement/54056716#54056716", "title": "Temporary value is freed at the end of this statement", "body": "<p>This one seems convoluted at first, but remember that <code>String</code> and <code>&amp;str</code> are different beasts.</p>\n\n<p><code>String</code> can live and be used on its own, but <code>&amp;str</code> is just a reference to part of <code>String</code>. So, <code>&amp;str</code> can live as long as referenced <code>String</code> lives. Lets see how it should work on return signatures.</p>\n\n<pre><code>let title_text = title   .text()   .trim();\n//               ^       ^         ^\n//               Node    String &lt;- &amp;str\n</code></pre>\n\n<ol>\n<li><p>Here, <code>title</code> is a <a href=\"https://docs.rs/select/0.4.2/select/node/struct.Node.html\" rel=\"noreferrer\"><code>select::Node</code></a>.</p></li>\n<li><p><a href=\"https://docs.rs/select/0.4.2/select/node/struct.Node.html#method.text\" rel=\"noreferrer\"><code>Node::text</code></a> returns a <code>String</code>, but nothing binds it to context.</p></li>\n<li><p><a href=\"https://doc.rust-lang.org/std/string/struct.String.html#method.trim\" rel=\"noreferrer\"><code>String::trim</code></a>, in turn, returns a <code>&amp;str</code> which is a reference to part of <code>String</code> itself.</p></li>\n</ol>\n\n<p>In the end, the borrow checker just doesn't understand how it should process a reference to <code>String</code> that will not live long enough in context, as it is a temporary value (non-bound).</p>\n"}], "owner": {"reputation": 2141, "user_id": 1644471, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/cc67b23ba788b61fc17fdf4af314c378?s=128&d=identicon&r=PG", "display_name": "mottosson", "link": "https://stackoverflow.com/users/1644471/mottosson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 9256, "favorite_count": 6, "closed_date": 1546811638, "accepted_answer_id": 54056716, "answer_count": 1, "score": 18, "last_activity_date": 1546811681, "creation_date": 1546722398, "last_edit_date": 1546809219, "question_id": 54056268, "link": "https://stackoverflow.com/questions/54056268/temporary-value-is-freed-at-the-end-of-this-statement", "closed_reason": "Duplicate", "title": "Temporary value is freed at the end of this statement", "body": "<p>I'm trying to scrape a webpage using the Select crate:</p>\n\n<pre><code>let document = Document::from_read(response).unwrap();\n\nfor node in document.find(Class(\"lia-list-row\")) {\n    let title = node.find(Class(\"page-link\")).next().unwrap();\n    let title_text = title.text().trim();\n\n    println!(\"{}\\n\", title_text);\n}\n</code></pre>\n\n<p>Which results in following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>let title_text = title.text().trim();\n                 ^^^^^^^^^^^^       - temporary value is freed at the end of this statement\n                 |\n                 creates a temporary which is freed while still in use\n\nprintln!(\"{} - {}\\n\", i, title_text);\n                         ---------- borrow used here, in later iteration of loop\n</code></pre>\n\n<p>I solved it by separating the <code>.text()</code> and <code>.trim()</code></p>\n\n<pre><code>let title_text = title.text();\nlet trim_text = title_text.trim();\n</code></pre>\n\n<p>What is the difference? Why did the first attempt fail?</p>\n"}, {"tags": ["rust", "rust-rocket"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 3, "creation_date": 1546717872, "post_id": 54055375, "comment_id": 94945323, "body": "You should be able to use a <a href=\"https://rust-lang-nursery.github.io/edition-guide/rust-2018/module-system/raw-identifiers.html\" rel=\"nofollow noreferrer\">raw identifier</a>, <code>r#type</code>."}, {"owner": {"reputation": 105, "user_id": 7311689, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/89f2caa4c3c581568cac82181776a8fd?s=128&d=identicon&r=PG&f=1", "display_name": "sbagin13", "link": "https://stackoverflow.com/users/7311689/sbagin13"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1546718418, "post_id": 54055375, "comment_id": 94945449, "body": "then I get such error:      help: message: <code>&quot;__rocket_param_r#type&quot;</code> is not a valid identifier"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1546718825, "post_id": 54055375, "comment_id": 94945558, "body": "Sounds like a Bug. You should file an issue."}], "answers": [{"tags": [], "owner": {"reputation": 2582, "user_id": 3014642, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Yk30K.png?s=128&g=1", "display_name": "TSB99X", "link": "https://stackoverflow.com/users/3014642/tsb99x"}, "is_accepted": true, "score": 7, "last_activity_date": 1546723461, "creation_date": 1546723461, "answer_id": 54056403, "question_id": 54055375, "link": "https://stackoverflow.com/questions/54055375/how-to-create-an-endpoint-with-a-rust-keyword-as-a-query-dynamic-parameter/54056403#54056403", "title": "How to create an endpoint with a Rust keyword as a query dynamic parameter?", "body": "<p>There is a known limitation for naming query parameters same as reserved keywords. It is highlighted in documentation on topic of <a href=\"https://rocket.rs/v0.4/guide/requests/#field-renaming\" rel=\"noreferrer\">Field Renaming</a>. It does mention how to solve your problem with a little bit of extra code. Example for your use case:</p>\n\n<pre><code>use rocket::request::Form;\n\n#[derive(FromForm)]\nstruct External {\n    #[form(field = \"type\")]\n    api_type: String\n}\n\n#[get(\"/offers?&lt;ext..&gt;\")]\nfn offers_get(ext: Form&lt;External&gt;) -&gt; String {\n    format!(\"type: '{}'\", ext.api_type)\n}\n</code></pre>\n\n<p>For GET request of <code>/offers?type=Hello,%20World!</code> it should return <code>type: 'Hello, World!'</code></p>\n"}], "owner": {"reputation": 105, "user_id": 7311689, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/89f2caa4c3c581568cac82181776a8fd?s=128&d=identicon&r=PG&f=1", "display_name": "sbagin13", "link": "https://stackoverflow.com/users/7311689/sbagin13"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 228, "favorite_count": 0, "accepted_answer_id": 54056403, "answer_count": 1, "score": 6, "last_activity_date": 1546943445, "creation_date": 1546715806, "last_edit_date": 1546943445, "question_id": 54055375, "link": "https://stackoverflow.com/questions/54055375/how-to-create-an-endpoint-with-a-rust-keyword-as-a-query-dynamic-parameter", "title": "How to create an endpoint with a Rust keyword as a query dynamic parameter?", "body": "<p>I use the Rocket library and I need to create an endpoint which contains the dynamic parameter \"type\", a keyword.</p>\n\n<p>I tried something like this but it does not compile:</p>\n\n<pre><code>#[get(\"/offers?&lt;type&gt;\")]\npub fn offers_get(type: String) -&gt; Status {\n    unimplemented!()\n}\n</code></pre>\n\n<p>compiler error:  </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: expected argument name, found keyword `type`\n</code></pre>\n\n<p>Is it possible to have a parameter named \"type\" in rocket? I can't rename the parameter because of the specification I'm following.</p>\n"}, {"tags": ["rust", "debian", "environment-variables", "rust-cargo", "backtrace"], "comments": [{"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 2, "creation_date": 1546714703, "post_id": 54055139, "comment_id": 94944452, "body": "<code>RUST_BACKTRACE=1 cargo run --bin my_binary</code> in a normal shell works for me under Debian. (Your question is somewhat unclear, what do you mean by &quot;create a debian&quot;?)"}, {"owner": {"reputation": 2512, "user_id": 5808553, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/6be8254e63e22cc820bb14938d532814?s=128&d=identicon&r=PG&f=1", "display_name": "Rajeev Ranjan", "link": "https://stackoverflow.com/users/5808553/rajeev-ranjan"}, "reply_to_user": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 0, "creation_date": 1546716690, "post_id": 54055139, "comment_id": 94944978, "body": "@starblue creating a debian was indicating creating a debian package for <code>my_binary</code>. Have edited the question. Hope it better explains now."}, {"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 5, "creation_date": 1546717567, "post_id": 54055139, "comment_id": 94945236, "body": "Have you tried <code>RUST_BACKTRACE=1 my_binary</code>?"}, {"owner": {"reputation": 2512, "user_id": 5808553, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/6be8254e63e22cc820bb14938d532814?s=128&d=identicon&r=PG&f=1", "display_name": "Rajeev Ranjan", "link": "https://stackoverflow.com/users/5808553/rajeev-ranjan"}, "reply_to_user": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 0, "creation_date": 1546748178, "post_id": 54055139, "comment_id": 94950947, "body": "Thanks @starblue. It is a valid syntax to pass the flag like that while executing. Will see if the stacktrace gets printed on hitting an error."}], "answers": [{"tags": [], "owner": {"reputation": 3312, "user_id": 2306173, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/onLRD.gif?s=128&g=1", "display_name": "Alex.K.", "link": "https://stackoverflow.com/users/2306173/alex-k"}, "is_accepted": true, "score": 1, "last_activity_date": 1615018468, "creation_date": 1615018468, "answer_id": 66503677, "question_id": 54055139, "link": "https://stackoverflow.com/questions/54055139/how-to-pass-rust-backtrace-1-when-running-a-rust-binary-installed-in-debian/66503677#66503677", "title": "How to pass RUST_BACKTRACE=1 when running a Rust binary installed in Debian?", "body": "<p>I had the same issue (error message) on Linux Mint 19 after installation of alacritty (0.5.0-dev).</p>\n<p>In terminal just run:</p>\n<pre><code>RUST_BACKTRACE=1RUST_BACKTRACE=1 alacritty \n</code></pre>\n<p>or <code>RUST_BACKTRACE=full</code> for a verbose backtrace.</p>\n<pre><code>RUST_BACKTRACE=1RUST_BACKTRACE=full alacritty \n</code></pre>\n"}], "owner": {"reputation": 2512, "user_id": 5808553, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/6be8254e63e22cc820bb14938d532814?s=128&d=identicon&r=PG&f=1", "display_name": "Rajeev Ranjan", "link": "https://stackoverflow.com/users/5808553/rajeev-ranjan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5690, "favorite_count": 0, "accepted_answer_id": 66503677, "answer_count": 1, "score": 5, "last_activity_date": 1615018468, "creation_date": 1546714012, "last_edit_date": 1546761914, "question_id": 54055139, "link": "https://stackoverflow.com/questions/54055139/how-to-pass-rust-backtrace-1-when-running-a-rust-binary-installed-in-debian", "title": "How to pass RUST_BACKTRACE=1 when running a Rust binary installed in Debian?", "body": "<p>When I run a binary using cargo, I have the option to run it as follows - </p>\n\n<pre><code>bash -c \"RUST_BACKTRACE=1 cargo run --bin my_binary\"\n</code></pre>\n\n<p>This gives me a stack trace when the binary hits an error.\nBut when I create a Debian package for the same binary, how do I get stack traces on failure?</p>\n\n<p>Is there some way to enable backtrace there too, if the source is implemented in Rust?</p>\n\n<p><strong>Edit:</strong></p>\n\n<p>I create a debian package for my cargo project using</p>\n\n<pre><code>cargo deb // Produces a my_binary.deb\n</code></pre>\n\n<p>This my_binary.deb can then be installed on a Debian machine as -</p>\n\n<pre><code> dpkg -i /tmp/my_binary*.deb || true \\\n &amp;&amp; apt-get -f -y install\n</code></pre>\n"}, {"tags": ["rust", "ffi", "rust-cargo"], "comments": [{"owner": {"reputation": 41, "user_id": 1637116, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/585c73949c13592aabb8f2d70f3345b9?s=128&d=identicon&r=PG", "display_name": "pgier", "link": "https://stackoverflow.com/users/1637116/pgier"}, "edited": false, "score": 1, "creation_date": 1546707168, "post_id": 54053982, "comment_id": 94942434, "body": "I&#39;m currently working around the issue by using a local copy of the external crate with the library function commented out."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1546713928, "post_id": 54053982, "comment_id": 94944228, "body": "Is the external crate compiled as a static or dynamic library? How much hacking are you ready to do?"}, {"owner": {"reputation": 41, "user_id": 1637116, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/585c73949c13592aabb8f2d70f3345b9?s=128&d=identicon&r=PG", "display_name": "pgier", "link": "https://stackoverflow.com/users/1637116/pgier"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1546715128, "post_id": 54053982, "comment_id": 94944556, "body": "The crate_type is set as follows:  ` crate_type = [ &quot;cdylib&quot;, &quot;dylib&quot;, &quot;rlib&quot; ] `  This is the library I want to link against:   ` <a href=\"https://github.com/xea/rust-jvmti/\" rel=\"nofollow noreferrer\">github.com/xea/rust-jvmti</a> `  And I&#39;m trying to override the Agent_OnLoad function"}], "owner": {"reputation": 41, "user_id": 1637116, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/585c73949c13592aabb8f2d70f3345b9?s=128&d=identicon&r=PG", "display_name": "pgier", "link": "https://stackoverflow.com/users/1637116/pgier"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 297, "favorite_count": 1, "answer_count": 0, "score": 0, "last_activity_date": 1546794918, "creation_date": 1546706189, "last_edit_date": 1546794918, "question_id": 54053982, "link": "https://stackoverflow.com/questions/54053982/is-it-possible-to-override-a-function-defined-in-an-external-crate", "title": "Is it possible to override a function defined in an external crate?", "body": "<p>I'm trying to use an external crate which defines a pub extern function (let's say \"Run_Foo\") and is available as a dynamic library entry point.  I'd like to use some of the modules of this external crate, but define my own \"Run_Foo\" function to be available as the DLL/SO entry point.</p>\n\n<p>The error I'm getting is </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: linking with `cc` failed: exit code: 1 \nmultiple definition of `Run_Foo'.\n</code></pre>\n\n<p>Is there a way to tell the compiler and linker to ignore this particular function from the external create but still allow me to use its sub modules?</p>\n"}, {"tags": ["unit-testing", "rust", "mocking", "serde"], "answers": [{"tags": [], "owner": {"reputation": 6357, "user_id": 6086311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb99289473f6393b89474785f2d294d1?s=128&d=identicon&r=PG", "display_name": "dtolnay", "link": "https://stackoverflow.com/users/6086311/dtolnay"}, "is_accepted": true, "score": 1, "last_activity_date": 1546716142, "creation_date": 1546716142, "answer_id": 54055424, "question_id": 54052495, "link": "https://stackoverflow.com/questions/54052495/mock-instance-inside-serde-implementation/54055424#54055424", "title": "Mock instance inside serde implementation", "body": "<p>I would recommend accessing the mock through an internally mutable thread-local instance.</p>\n\n<hr>\n\n<pre><code>use serde::{Deserialize, Deserializer};\nuse std::cell::RefCell;\n\nstruct MagickBook {\n    value: isize,\n}\n\nthread_local! {\n    static MAGICK_BOOK: RefCell&lt;MagickBook&gt; = RefCell::new(MagickBook::new());\n}\n\nimpl MagickBook {\n    fn new() -&gt; Self {\n        MagickBook { value: 0 }\n    }\n\n    fn find(&amp;self, _kind: &amp;str) -&gt; isize {\n        let effect = self.value;\n        // -- snip --\n        effect\n    }\n}\n\n#[derive(Deserialize, PartialEq, Debug)]\nstruct Scroll {\n    #[serde(rename = \"kind\", deserialize_with = \"deserialize_effect\")]\n    effect: isize,\n}\n\nfn deserialize_effect&lt;'de, D&gt;(deserializer: D) -&gt; Result&lt;isize, D::Error&gt;\nwhere\n    D: Deserializer&lt;'de&gt;,\n{\n    let kind = String::deserialize(deserializer)?;\n    Ok(MAGICK_BOOK.with(|book| book.borrow().find(&amp;kind)))\n}\n\n#[test]\nfn test_deserialize() {\n    MAGICK_BOOK.with(|book| book.borrow_mut().value = 42);\n    let scroll: Scroll = serde_json::from_str(r#\"{\"kind\":\"wind\"}\"#).unwrap();\n    assert_eq!(scroll, Scroll { effect: 42 });\n}\n</code></pre>\n"}], "owner": {"reputation": 1731, "user_id": 2227895, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/97b12755843e6d207524d92bf1959c89?s=128&d=identicon&r=PG", "display_name": "German Lashevich", "link": "https://stackoverflow.com/users/2227895/german-lashevich"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 67, "favorite_count": 0, "accepted_answer_id": 54055424, "answer_count": 1, "score": 1, "last_activity_date": 1546716142, "creation_date": 1546695073, "last_edit_date": 1546696048, "question_id": 54052495, "link": "https://stackoverflow.com/questions/54052495/mock-instance-inside-serde-implementation", "title": "Mock instance inside serde implementation", "body": "<p>I'm trying to implement custom deserialization function/method which uses some external functionality. The function creates an instance and uses its methods. It's working fine, but I can't figure out how to mock the service in tests.</p>\n\n<p>More general question is: how to provide a state to deserialization function/method?</p>\n\n<p>The code below illustrates what I mean.</p>\n\n<p><code>MagickBook</code> is an external service which holds a state and contains some essential logic in <code>MagickBook::find</code> method.</p>\n\n<p><code>Scroll</code> is a deserializable data structure, which should be deserialized using the logic from <code>MagicBook</code>.</p>\n\n<p>I'd like to have a way to provide particular instance of <code>MagicBook</code> from the outside, at the moment of deserialization. For example in tests.</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=1e73f3bce34f6746a7f360260a0c524c\" rel=\"nofollow noreferrer\">Rust Playground</a></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use serde::de::{Deserialize, Deserializer}; // 1.0.82\nuse serde_derive::Deserialize; // 1.0.82\nuse serde_json; // 1.0.33\n\nstruct MagickBook;\n\n// Some service which I want to mock in the test\nimpl MagickBook {\n    fn new() -&gt; Self {\n        Self {}\n    }\n\n    fn find(&amp;self, _kind: &amp;str) -&gt; isize {\n        let effect = 42;\n        // Here we do some logic depending on input parameter\n        // -- snip --\n        return effect;\n    }\n}\n\n#[derive(Deserialize, PartialEq, Debug)]\nstruct Scroll {\n    #[serde(rename = \"kind\")]\n    #[serde(deserialize_with = \"deserialize_effect\")]\n    effect: isize,\n}\n\nfn deserialize_effect&lt;'de, D&gt;(deserializer: D) -&gt; Result&lt;isize, D::Error&gt;\nwhere\n    D: Deserializer&lt;'de&gt;,\n{\n    let book = MagickBook::new();\n    Ok(book.find(&amp;String::deserialize(deserializer)?))\n}\n\n#[cfg(test)]\nmod tests {\n    use super::*;\n\n    #[test]\n    fn main() {\n        let scroll: Scroll = serde_json::from_str(\"{\\\"kind\\\":\\\"wind\\\"}\").unwrap();\n        assert_eq!(scroll, Scroll { effect: 42 });\n    }\n}\n</code></pre>\n"}, {"tags": ["generics", "rust", "type-conversion", "associated-types"], "answers": [{"tags": [], "owner": {"reputation": 2645, "user_id": 5254193, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-PTHapBqhSQM/AAAAAAAAAAI/AAAAAAAABA4/r5mrExVuDgU/photo.jpg?sz=128", "display_name": "Masaki Hara", "link": "https://stackoverflow.com/users/5254193/masaki-hara"}, "is_accepted": false, "score": 2, "last_activity_date": 1546656765, "creation_date": 1546656765, "answer_id": 54048568, "question_id": 54048500, "link": "https://stackoverflow.com/questions/54048500/convert-literal-to-associated-type-in-generic-struct-implementation/54048568#54048568", "title": "Convert literal to associated type in generic struct implementation", "body": "<p><a href=\"https://docs.rs/num/0.2.0/num/cast/trait.NumCast.html#tymethod.from\" rel=\"nofollow noreferrer\"><code>NumCast::from</code></a> seems to be the best match. I recommend not importing it because the method name conflicts with the widely used one, <code>From::from</code>.</p>\n\n<pre><code>use num::Float;\nuse std::iter::Iterator;\n\npub struct Signal&lt;S&gt;\n    where S: Iterator, S::Item: Float\n{\n    signal: S,\n    val: S::Item,\n}\n\nimpl&lt;S&gt; Signal&lt;S&gt;\n    where S: Iterator, S::Item: Float\n{\n    pub fn new(signal: S) -&gt; Self {\n        Signal {\n            signal: signal,\n            val: num::NumCast::from(0.0).unwrap(),\n        }\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 3054, "user_id": 115030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c74c0974c6cc25c194a2737e2d6747?s=128&d=identicon&r=PG", "display_name": "Anders Kaseorg", "link": "https://stackoverflow.com/users/115030/anders-kaseorg"}, "is_accepted": false, "score": 2, "last_activity_date": 1546656780, "creation_date": 1546656780, "answer_id": 54048572, "question_id": 54048500, "link": "https://stackoverflow.com/questions/54048500/convert-literal-to-associated-type-in-generic-struct-implementation/54048572#54048572", "title": "Convert literal to associated type in generic struct implementation", "body": "\n\n<p>The <a href=\"https://docs.rs/num/0.2.0/num/trait.Float.html\" rel=\"nofollow noreferrer\"><code>Float</code></a> trait doesn\u2019t provide a <code>from({float}) -&gt; Self</code> operation.  But it does depend on <a href=\"https://docs.rs/num/0.2.0/num/trait.NumCast.html\" rel=\"nofollow noreferrer\"><code>NumCast</code></a>:</p>\n\n<pre class=\"lang-rs prettyprint-override\"><code>use num::{Float, NumCast};\n\u2026\nval: NumCast::from(0.0).unwrap(),\n</code></pre>\n\n<p>and also on <a href=\"https://docs.rs/num/0.2.0/num/trait.Zero.html\" rel=\"nofollow noreferrer\"><code>Zero</code></a>:</p>\n\n<pre class=\"lang-rs prettyprint-override\"><code>use num::{Float, Zero};\n\u2026\nval: S::Item::zero(),\n</code></pre>\n"}], "owner": {"reputation": 185, "user_id": 7147804, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/c838f7fe5963d449ead5757805900b41?s=128&d=identicon&r=PG&f=1", "display_name": "user7147804", "link": "https://stackoverflow.com/users/7147804/user7147804"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 102, "favorite_count": 0, "closed_date": 1546794707, "answer_count": 2, "score": 0, "last_activity_date": 1546656780, "creation_date": 1546655744, "question_id": 54048500, "link": "https://stackoverflow.com/questions/54048500/convert-literal-to-associated-type-in-generic-struct-implementation", "closed_reason": "Duplicate", "title": "Convert literal to associated type in generic struct implementation", "body": "<p>How can I convert 0.0 or any other number to the associated Item type in an Iterator assuming that the associated type has the proper trait bound? The following code describes my attempt.</p>\n\n<pre><code>use num::Float;\nuse std::iter::Iterator;\n\npub struct Signal&lt;S&gt;\n    where S: Iterator, S::Item: Float\n{\n    signal: S,\n    val: S::Item,\n}\n\nimpl&lt;S&gt; Signal&lt;S&gt;\n    where S: Iterator, S::Item: Float\n{\n    pub fn new(signal: S) -&gt; Self {\n        Signal {\n            signal: signal,\n            val: S::Item::from(0.0),\n        }\n    }\n}\n</code></pre>\n\n<p>I am currently getting the error: expected associated type, found floating-point variable </p>\n"}, {"tags": ["random", "rust", "idioms"], "answers": [{"tags": [], "owner": {"reputation": 3054, "user_id": 115030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c74c0974c6cc25c194a2737e2d6747?s=128&d=identicon&r=PG", "display_name": "Anders Kaseorg", "link": "https://stackoverflow.com/users/115030/anders-kaseorg"}, "is_accepted": true, "score": 4, "last_activity_date": 1546655940, "last_edit_date": 1546655940, "creation_date": 1546654746, "answer_id": 54048424, "question_id": 54048353, "link": "https://stackoverflow.com/questions/54048353/idiomatic-way-to-get-a-random-number-that-is-different-from-a-previous-one/54048424#54048424", "title": "Idiomatic way to get a random number that is different from a previous one?", "body": "<p>Not sure about idiomatic, but this would avoid the loop:</p>\n\n<pre><code>let current_index = (previous_index + rng.gen_range(1, 5)) % 5;\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 32271, "user_id": 75652, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/303ee8d24a8776dcf67b30c1d4e8b064?s=128&d=identicon&r=PG", "display_name": "janneb", "link": "https://stackoverflow.com/users/75652/janneb"}, "is_accepted": false, "score": 0, "last_activity_date": 1546809092, "last_edit_date": 1546809092, "creation_date": 1546723242, "answer_id": 54056375, "question_id": 54048353, "link": "https://stackoverflow.com/questions/54048353/idiomatic-way-to-get-a-random-number-that-is-different-from-a-previous-one/54056375#54056375", "title": "Idiomatic way to get a random number that is different from a previous one?", "body": "<p>Depending on what you want to do, perhaps <a href=\"https://docs.rs/rand/0.6.3/rand/seq/trait.SliceRandom.html#tymethod.choose_multiple\" rel=\"nofollow noreferrer\"><code>SliceRandom::choose_multiple</code></a> or <a href=\"https://docs.rs/rand/0.6.3/rand/seq/trait.SliceRandom.html#tymethod.shuffle\" rel=\"nofollow noreferrer\"><code>SliceRandom::shuffle</code></a>.</p>\n"}], "owner": {"reputation": 119, "user_id": 7371406, "user_type": "registered", "profile_image": "https://graph.facebook.com/1083156655111572/picture?type=large", "display_name": "Augusto Dias", "link": "https://stackoverflow.com/users/7371406/augusto-dias"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 115, "favorite_count": 0, "accepted_answer_id": 54048424, "answer_count": 2, "score": 1, "last_activity_date": 1546809092, "creation_date": 1546653911, "last_edit_date": 1546809009, "question_id": 54048353, "link": "https://stackoverflow.com/questions/54048353/idiomatic-way-to-get-a-random-number-that-is-different-from-a-previous-one", "title": "Idiomatic way to get a random number that is different from a previous one?", "body": "<p>Is there a better way to do this in Rust?</p>\n\n<pre><code>let mut current_index = rng.gen_range(0, 5);\nwhile current_index == previous_index {\n    current_index = rng.gen_range(0, 5);\n}\n</code></pre>\n"}, {"tags": ["winapi", "rust", "trayicon"], "comments": [{"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 1, "creation_date": 1546689329, "post_id": 54047397, "comment_id": 94937847, "body": "What about <code>uCallbackMessage = WM_MYMESSAGE</code>? From the C code below It is just <code>WM_USER + 1</code>. Probably not a wise choice given that the window is a Console and <code>WM_USER + X</code> are to be defined by the creator of the window class, but hey, it&#39;s just a test, isn&#39;t it?"}, {"owner": {"reputation": 452, "user_id": 2403531, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0a556f4f1e79ff8e4b939ea867264948?s=128&d=identicon&r=PG", "display_name": "user2403531", "link": "https://stackoverflow.com/users/2403531/user2403531"}, "reply_to_user": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1546714085, "post_id": 54047397, "comment_id": 94944284, "body": "Indeed, just a test! I also don&#39;t know how to implement <code>WM_MYMESSAGE</code> in Rust either, so that is an extra wrench in the plans. It seems <code>WM_USER + X</code> is just a range of private message values - would it be better to toss on WM_USER + 10000 and avoid conflicts for the next millennia (I saw the max was 7FFF == 32767)? Of course if I understood the vague docs right."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1546794070, "post_id": 54047397, "comment_id": 94960800, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/54047397/edit\">edit</a> your question to include it. Your Rust code is <i>not syntactically valid</i>. Try to produce something that reproduces your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> or you can reproduce it in a brand new Cargo project. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> as well."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 1, "creation_date": 1546850503, "post_id": 54047397, "comment_id": 94974599, "body": "The proper way to do that would be to register your own window class and then you can define <code>WM_USER + X</code> freely. If you use other&#39;s window class then it is better to use <code>WM_APP + X</code> or even better <code>RegisterWindowMessage()</code>."}, {"owner": {"reputation": 452, "user_id": 2403531, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0a556f4f1e79ff8e4b939ea867264948?s=128&d=identicon&r=PG", "display_name": "user2403531", "link": "https://stackoverflow.com/users/2403531/user2403531"}, "reply_to_user": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1546852901, "post_id": 54047397, "comment_id": 94975688, "body": "@rodrigo Thanks for the insight, I&#39;ll switch to <code>WM_APP</code>! From the docs it seems <a href=\"https://docs.microsoft.com/en-us/windows/desktop/api/winuser/nf-winuser-registerwindowmessagea\" rel=\"nofollow noreferrer\">RegisterWindowMessage()</a> is for 2+ applications processing the same message, so I&#39;ll stay away - simple 1 app here.  @Shepmaster It&#39;s minimal for the req scope. But I&#39;ma level with you, it&#39;s not going to be <i>syntactically valid</i> cause I don&#39;t know how to do that. Hence, we here.<code>&#39;NOTIFYICONDATAA</code> in Rust demands inputs that I don&#39;t want to provide - the first of many <i>syntactically wondrous</i> hurdles!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1546877294, "post_id": 54047397, "comment_id": 94989018, "body": "Your code is <b>still</b> not syntactically valid. <i>Please</i> try to even compile it once."}], "answers": [{"tags": [], "owner": {"reputation": 452, "user_id": 2403531, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0a556f4f1e79ff8e4b939ea867264948?s=128&d=identicon&r=PG", "display_name": "user2403531", "link": "https://stackoverflow.com/users/2403531/user2403531"}, "is_accepted": true, "score": 3, "last_activity_date": 1547244186, "last_edit_date": 1547244186, "creation_date": 1547035069, "answer_id": 54109618, "question_id": 54047397, "link": "https://stackoverflow.com/questions/54047397/how-to-make-a-tray-icon-for-windows-using-the-winapi-crate/54109618#54109618", "title": "How to make a tray icon for Windows using the winapi crate?", "body": "<p>I struck out on my own and headed over to the source of the winapi in Rust <a href=\"https://github.com/retep998/winapi-rs/issues/725\" rel=\"nofollow noreferrer\">https://github.com/retep998/winapi-rs/issues/725</a> and got enough help to solve this issue successfully. The code is now <em>syntactically valid</em> as a wondrous bonus!</p>\n\n<p>A couple of upgrades were needed, largely:</p>\n\n<ul>\n<li><p>Work a string into <code>UTF-16</code> format for the OS to read</p></li>\n<li><p>Write that <code>UTF-16</code> into a 128-long <code>uint16</code> vector array</p></li>\n<li><p>Create <code>nid</code> outside of <code>unsafe{ }</code> so it can be used elsewhere</p></li>\n<li><p>Switch to the W-series of winapi calls instead of the A-series (not sure of the difference other than the A-series wanted odd things, like <code>int8</code> instead of <code>uint16</code> in <code>LoadIcon[letter]</code>)</p></li>\n</ul>\n\n<p>The working code follows:</p>\n\n<pre><code>//-----Import Libraries (called crates)-----\nextern crate winapi;\n//-----Import Built-in Libraries (not called crates)-----\nuse std::process::Command; //use cmd.exe\nuse std::mem::{size_of, zeroed}; //get size of stuff and init with zeros\nuse std::ptr::null_mut; //use a null pointer (I think)\nuse std::ffi::OsStr;\nuse std::os::windows::ffi::OsStrExt;\n\nfn main()\n{\n// to navigate calling with the winapi \"crate\" use the search function at link\n// https://docs.rs/winapi/*/x86_64-pc-windows-msvc/winapi/um/wincon/fn.GetConsoleWindow.html\nlet hWnd = unsafe { winapi::um::wincon::GetConsoleWindow }; //gets the current console window handle\n\n//System Tray Icon support - here it is\nlet WM_MYMESSAGE = winapi::um::winuser::WM_APP + 100; //prep WM_MYMESSAGE\nlet mut trayToolTip = \"Tool tip words here\".to_string(); //record tooltip words for the icon\nlet mut trayToolTipInt: [u16; 128] = [0; 128]; //fill with 0's\nlet trayToolTipStrStep: &amp;str = &amp;*trayToolTip; //these two types of strings\nlet mut trayToolTipStepOS = OsStr::new(trayToolTipStrStep); //convert to OS string format or something\nlet mut trayToolTipStepUTF16 = trayToolTipStepOS.encode_wide().collect::&lt;Vec&lt;u16&gt;&gt;(); //now actually convert to UTF16 format for the OS\ntrayToolTipInt[..trayToolTipStepUTF16.len()].copy_from_slice(&amp;trayToolTipStepUTF16); //record it in that nice integer holder\n\nlet mut nid: winapi::um::shellapi::NOTIFYICONDATAW = unsafe{ zeroed() }; //thing that has info on window and system tray stuff in it \nunsafe\n{\n    nid.cbSize = size_of::&lt;winapi::um::shellapi::NOTIFYICONDATAW&gt;() as u32; //prep\n    nid.hWnd = hWnd(); //links the console window\n    nid.uID = 1001; //it's a number\n    nid.uCallbackMessage = WM_MYMESSAGE; //whoknows should be related to click capture but doesn't so\n    nid.hIcon = winapi::um::winuser::LoadIconW(null_mut(), winapi::um::winuser::IDI_APPLICATION); //icon idk\n    nid.szTip = trayToolTipInt; //tooltip for the icon\n    nid.uFlags = winapi::um::shellapi::NIF_MESSAGE | winapi::um::shellapi::NIF_ICON | winapi::um::shellapi::NIF_TIP; //who knows\n};\n\n//let mut nidszTipLength = trayToolTip.chars().count() as u64; //gets the size of nid.szTip (tooltip length) indirectly (not the right size!)\nlet mut nidszTipLength = trayToolTipStepUTF16.len() as u64; //gets the size of nid.szTip (tooltip length) for the UTF-16 format, which is what Windows cares about\n\nunsafe{ winapi::um::shellapi::Shell_NotifyIconW(winapi::um::shellapi::NIM_ADD, &amp;mut nid) }; //shows the icon\nlet _ = Command::new(\"cmd.exe\").arg(\"/c\").arg(\"pause\").status();\n\ntrayToolTip = \"An updated tooltip is now here!\".to_string(); //update the tooltip string\ntrayToolTipInt = [0; 128]; //fill with 0's (clear it out I hope)\nlet trayToolTipStrStep: &amp;str = &amp;*trayToolTip; //these two types of strings are hella annoying\ntrayToolTipStepOS = OsStr::new(trayToolTipStrStep); //convert to OS string format or something\ntrayToolTipStepUTF16 = trayToolTipStepOS.encode_wide().collect::&lt;Vec&lt;u16&gt;&gt;(); //now actually convert to UTF16 format for the OS\ntrayToolTipInt[..trayToolTipStepUTF16.len()].copy_from_slice(&amp;trayToolTipStepUTF16); //record it in that nice integer holder\nnid.szTip = trayToolTipInt; //tooltip for the icon\n//nidszTipLength = trayToolTip.chars().count() as u64; //gets the size of nid.szTip (tooltip length) indirectly (not the right size!)\nnidszTipLength = trayToolTipStepUTF16.len() as u64; //gets the size of nid.szTip (tooltip length) for the UTF-16 format, which is what Windows cares about\nunsafe{ winapi::um::shellapi::Shell_NotifyIconW(winapi::um::shellapi::NIM_MODIFY, &amp;mut nid) }; //updates system tray icon\n\nlet _ = Command::new(\"cmd.exe\").arg(\"/c\").arg(\"pause\").status();\n\nunsafe{ winapi::um::shellapi::Shell_NotifyIconW(winapi::um::shellapi::NIM_DELETE, &amp;mut nid) }; //deletes system tray icon when done\n\nlet _ = Command::new(\"cmd.exe\").arg(\"/c\").arg(\"pause\").status();\n\n}\n</code></pre>\n\n<p>And don't forget about including the following in your <code>Cargo.toml</code>!</p>\n\n<pre><code>[target.'cfg(windows)'.dependencies]\nwinapi = { version = \"*\", features = [\"winuser\",\"wincon\",\"shellapi\"] }\n</code></pre>\n"}], "owner": {"reputation": 452, "user_id": 2403531, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0a556f4f1e79ff8e4b939ea867264948?s=128&d=identicon&r=PG", "display_name": "user2403531", "link": "https://stackoverflow.com/users/2403531/user2403531"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1570, "favorite_count": 1, "accepted_answer_id": 54109618, "answer_count": 1, "score": 4, "last_activity_date": 1547244186, "creation_date": 1546643457, "last_edit_date": 1546877236, "question_id": 54047397, "link": "https://stackoverflow.com/questions/54047397/how-to-make-a-tray-icon-for-windows-using-the-winapi-crate", "title": "How to make a tray icon for Windows using the winapi crate?", "body": "<p>I am trying to use Rust's winapi crate to make a simple tray icon. I managed to do it before in C, but I can't make Rust happy. Later on I'll include the C code to show what bits of the <code>NOTIFYICONDATA</code> part I want to use.</p>\n\n<p>Super basic goals:</p>\n\n<ul>\n<li><p>Make it say words</p></li>\n<li><p>Make it a default icon like this</p>\n\n<p><img src=\"https://i.imgur.com/1ZgDiXU.png\" alt=\"default icon\"></p>\n\n<p>This is the simplest; I can figure out other built-in icons later.</p></li>\n<li><p>Update the words</p></li>\n<li><p>Delete it when the program is finished</p></li>\n</ul>\n\n<p>Link to Rust's winapi library (with search function!)</p>\n\n<p><a href=\"https://docs.rs/winapi/*/x86_64-pc-windows-msvc/winapi/um/wincon/fn.GetConsoleWindow.html\" rel=\"noreferrer\">https://docs.rs/winapi/*/x86_64-pc-windows-msvc/winapi/um/wincon/fn.GetConsoleWindow.html</a></p>\n\n<p>I really don't know Windows API at all, so it's all Greek to me and I just match syntax I've found in other examples, etc. <strong>So please don't skip anything</strong>, cause I prob won't know what was implicitly there (e.g. a use std:: or something)!</p>\n\n<ul>\n<li><p>Rust version 1.3.1</p></li>\n<li><p>winapi crate version 0.3.6</p></li>\n<li><p>Windows 10</p></li>\n</ul>\n\n<p>Here's the Rust code I've managed so far (but doesn't work!):</p>\n\n<pre><code>//-----Import Libraries (called crates)-----\nextern crate winapi;\n//-----Import Built-in Libraries (not called crates)-----\nuse std::process::Command; //use cmd.exe\nuse std::mem::size_of; //get size of stuff\n\nfn main()\n{\n// to navigate calling with the winapi \"crate\" use the search function at link\n// https://docs.rs/winapi/*/x86_64-pc-windows-msvc/winapi/um/wincon/fn.GetConsoleWindow.html\nlet hWnd = unsafe { winapi::um::wincon::GetConsoleWindow }; //gets the current console window handle\n\n//System Tray Icon support - here it is\nlet WM_MYMESSAGE = winapi::um::winuser::WM_APP + 100; //prep WM_MYMESSAGE\nlet mut trayToolTip = \"Tool tip words here\"; //record tooltip words for the icon\nlet nid = winapi::um::shellapi::NOTIFYICONDATAA //thing that has info on window and system tray stuff in it\n{   \n    cbSize: size_of::&lt;winapi::um::shellapi::NOTIFYICONDATAA&gt;() as u32, //prep\n    hWnd: hWnd(), //links the console window\n    uID: 1001, //it's a number\n    uCallbackMessage: WM_MYMESSAGE, //whoknows should be related to click capture but doesn't so\n    //Couldn't find anything for WM_MYMESSAGE at all\n    hIcon: winapi::um::winuser::LoadIconA(winapi::shared::ntdef::NULL, winapi::um::winuser::IDI_APPLICATION), //icon idk\n    szTip: trayToolTip, //tooltip for the icon\n    uFlags: winapi::um::shellapi::NIF_MESSAGE | winapi::um::shellapi::NIF_ICON | winapi::um::shellapi::NIF_TIP, //who knows\n};\nlet nidszTipLength: u64 = szTip.chars().count(); //gets the size of nid.szTip (tooltip length)\n\nwinapi::um::shellapi::Shell_NotifyIconA(winapi::um::shellapi::NIM_ADD, &amp;nid); //shows the icon\nlet _ = Command::new(\"cmd.exe\").arg(\"/c\").arg(\"pause\").status();\n\nnid.szTip: \"An updated tooltip is now here!\"; //tooltip for the icon\n//abs total guess hoping some Python . stuff that I see sometimes in Rust works here and maybe it gets a : instead of a = too\nwinapi::um::shellapi::Shell_NotifyIconA(winapi::um::shellapi::NIM_MODIFY, &amp;nid); //updates system tray icon\n\nlet _ = Command::new(\"cmd.exe\").arg(\"/c\").arg(\"pause\").status();\n\nwinapi::um::shellapi::Shell_NotifyIconA(winapi::um::shellapi::NIM_DELETE, &amp;nid); //deletes system tray icon when done\n\nlet _ = Command::new(\"cmd.exe\").arg(\"/c\").arg(\"pause\").status();\n\n}\n</code></pre>\n\n<p>The Cargo.toml needs this:</p>\n\n<pre><code>[target.'cfg(windows)'.dependencies]\nwinapi = { version = \"*\", features = [\"wincon\",\"shellapi\",\"ntdef\"] }\n</code></pre>\n\n<p>And here is the C code functionality I'm trying to mimic (not sure what libraries are needed where so I tossed most of them in):</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;math.h&gt;\n#include &lt;ctype.h&gt;\n#define _WIN32_WINNT 0x0500 //must be before windows.h for mystical reasons such as widnows.h overwrites it with not right thing\n#include &lt;windows.h&gt;\n#include &lt;shellapi.h&gt; // make some system tray stuff go on\n#define WM_MYMESSAGE (WM_USER + 1) //for that tray icon\n\nint main()\n{\n    HWND hWnd = GetConsoleWindow(); // from https://stackoverflow.com/questions/11812095/hide-the-console-window-of-a-c-program via Anthropos\n\n    NOTIFYICONDATA nid; //thing that has info on window and system tray stuff in it\n        nid.cbSize = sizeof(NOTIFYICONDATA); //prep\n        nid.hWnd = hWnd; //links the console window\n        nid.uID = 1001; //it's a number\n        nid.uCallbackMessage = WM_MYMESSAGE; //whoknows should be related to click capture but doesn't so\n        nid.hIcon = LoadIcon(NULL, IDI_APPLICATION); //icon idk\n        strcpy(nid.szTip, \"Tool tip words here\"); //tooltip for the icon\n        nid.szTip[19] = '\\0'; //null at the end of it\n        nid.uFlags = NIF_MESSAGE | NIF_ICON | NIF_TIP; //who knows\n        size_t nidszTipLength = sizeof(nid.szTip) / sizeof(nid.szTip[0]); //gets the size of nid.szTip (tooltip length)\n\n    Shell_NotifyIcon(NIM_ADD, &amp;nid); //shows the icon\n\n    system(\"pause\");\n\n    strcpy(nid.szTip, \"An updated tooltip is now here!\"); //tooltip for the icon\n    Shell_NotifyIcon(NIM_MODIFY, &amp;nid); //updates system tray icon\n    nid.szTip[31] = '\\0'; //null at the end of it\n\n    system(\"pause\");\n\n    Shell_NotifyIcon(NIM_DELETE, &amp;nid); //deletes system tray icon when done\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>\n"}, {"tags": ["python", "rust", "cryptography", "aes"], "comments": [{"owner": {"reputation": 79299, "user_id": 589259, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/vJbKg.jpg?s=128&g=1", "display_name": "Maarten Bodewes", "link": "https://stackoverflow.com/users/589259/maarten-bodewes"}, "edited": false, "score": 0, "creation_date": 1546681308, "post_id": 54046577, "comment_id": 94935981, "body": "ECB mode does of course not use an IV (and it sits all alone in your Python code, poor IV). OpenSSL always expects PKCS#7 compatible padding by default."}, {"owner": {"reputation": 13, "user_id": 10860291, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-0k7NQAiNqNE/AAAAAAAAAAI/AAAAAAAAAAA/AKxrwcbxOkZ1VTkS6byzx71E0F6NAYpEbA/mo/photo.jpg?sz=128", "display_name": "jdlm", "link": "https://stackoverflow.com/users/10860291/jdlm"}, "reply_to_user": {"reputation": 79299, "user_id": 589259, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/vJbKg.jpg?s=128&g=1", "display_name": "Maarten Bodewes", "link": "https://stackoverflow.com/users/589259/maarten-bodewes"}, "edited": false, "score": 0, "creation_date": 1546724723, "post_id": 54046577, "comment_id": 94947190, "body": "I fixed the code issue and my misleading comment about the initialization vector. Thanks for pointing those out."}], "answers": [{"comments": [{"owner": {"reputation": 13, "user_id": 10860291, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-0k7NQAiNqNE/AAAAAAAAAAI/AAAAAAAAAAA/AKxrwcbxOkZ1VTkS6byzx71E0F6NAYpEbA/mo/photo.jpg?sz=128", "display_name": "jdlm", "link": "https://stackoverflow.com/users/10860291/jdlm"}, "edited": false, "score": 0, "creation_date": 1546724471, "post_id": 54047715, "comment_id": 94947112, "body": "Pardon the silly question, but how did you arrive at those last 16 bytes? I would have expected a padding to be needed at the end of the byte stream, given a text file that isn&#39;t length mod 16 == 0. So I&#39;m confused as to why the last half isn&#39;t a continuation of the contents in 10.txt Thank you very much."}, {"owner": {"reputation": 3054, "user_id": 115030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c74c0974c6cc25c194a2737e2d6747?s=128&d=identicon&r=PG", "display_name": "Anders Kaseorg", "link": "https://stackoverflow.com/users/115030/anders-kaseorg"}, "reply_to_user": {"reputation": 13, "user_id": 10860291, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-0k7NQAiNqNE/AAAAAAAAAAI/AAAAAAAAAAA/AKxrwcbxOkZ1VTkS6byzx71E0F6NAYpEbA/mo/photo.jpg?sz=128", "display_name": "jdlm", "link": "https://stackoverflow.com/users/10860291/jdlm"}, "edited": false, "score": 0, "creation_date": 1546726557, "post_id": 54047715, "comment_id": 94947559, "body": "@jdim <code>printf &quot;I&#39;m back and I&#39;m&quot; | openssl enc -aes-128-ecb -K 59454c4c4f57205355424d4152494e45</code>. At least 1 byte of padding is always added (when enabled), even for lengths divisible by the block size, because otherwise it would be ambiguous whether the padding should be removed upon decryption."}, {"owner": {"reputation": 13, "user_id": 10860291, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-0k7NQAiNqNE/AAAAAAAAAAI/AAAAAAAAAAA/AKxrwcbxOkZ1VTkS6byzx71E0F6NAYpEbA/mo/photo.jpg?sz=128", "display_name": "jdlm", "link": "https://stackoverflow.com/users/10860291/jdlm"}, "edited": false, "score": 0, "creation_date": 1546726864, "post_id": 54047715, "comment_id": 94947624, "body": "Got it, as per <a href=\"https://tools.ietf.org/html/rfc5652#section-6.3\" rel=\"nofollow noreferrer\">this RFC</a>. Much appreciated."}], "tags": [], "owner": {"reputation": 3054, "user_id": 115030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c74c0974c6cc25c194a2737e2d6747?s=128&d=identicon&r=PG", "display_name": "Anders Kaseorg", "link": "https://stackoverflow.com/users/115030/anders-kaseorg"}, "is_accepted": true, "score": 3, "last_activity_date": 1546646656, "creation_date": 1546646656, "answer_id": 54047715, "question_id": 54046577, "link": "https://stackoverflow.com/questions/54046577/trouble-decrypting-bytes-with-ecb-mode-encryption/54047715#54047715", "title": "Trouble decrypting bytes with ECB mode encryption", "body": "<p>OpenSSL is telling you that your input is not correctly padded.  Change the input to</p>\n\n<pre><code>let data = b\"\\x09\\x12\\x30\\xaa\\xde\\x3e\\xb3\\x30\\xdb\\xaa\\x43\\x58\\xf8\\x8d\\x2a\\x6c\\x60\\xfa\\x36\\x70\\x7e\\x45\\xf4\\x99\\xdb\\xa0\\xf2\\x5b\\x92\\x23\\x01\\xa5\";\n</code></pre>\n\n<p>and you\u2019ll see that your code decrypts it correctly.</p>\n\n<p>If you need to disable padding, you can do that by using a <a href=\"https://docs.rs/openssl/0.10.16/openssl/symm/struct.Crypter.html\" rel=\"nofollow noreferrer\"><code>Crypter</code></a> object and calling <code>.pad(false)</code> on it (<a href=\"https://docs.rs/openssl/0.10.16/src/openssl/symm.rs.html#792\" rel=\"nofollow noreferrer\">example</a>).</p>\n"}], "owner": {"reputation": 13, "user_id": 10860291, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-0k7NQAiNqNE/AAAAAAAAAAI/AAAAAAAAAAA/AKxrwcbxOkZ1VTkS6byzx71E0F6NAYpEbA/mo/photo.jpg?sz=128", "display_name": "jdlm", "link": "https://stackoverflow.com/users/10860291/jdlm"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 564, "favorite_count": 0, "accepted_answer_id": 54047715, "answer_count": 1, "score": 1, "last_activity_date": 1546723990, "creation_date": 1546638615, "last_edit_date": 1546723990, "question_id": 54046577, "link": "https://stackoverflow.com/questions/54046577/trouble-decrypting-bytes-with-ecb-mode-encryption", "title": "Trouble decrypting bytes with ECB mode encryption", "body": "<p>I'm having trouble decrypting a byte string using the openssl crate. As a heads up this is for the Cryptopals challenges, specifically set 2 problem 2. The text file has been encrypted using AES with CBC mode, but I guess a single block can be decrypted with ECB. </p>\n\n<p>I've already tried decrypting the entire <code>10.txt</code> file with CBC mode, and I know that works. I've also used the following Python code to verify that ECB decryption of the sames bytes also works.</p>\n\n<p>For Python 3:</p>\n\n<pre class=\"lang-python prettyprint-override\"><code>from base64 import b64decode\nfrom Crypto.Cipher import AES\ndef main():\n    key = b'YELLOW SUBMARINE'\n    with open(\"10.txt\") as input_file:\n        data = b64decode(input_file.read())\n\n    data = data[0:AES.block_size]\n    print(data)\n    cipher = AES.new(key, AES.MODE_ECB)\n    x = cipher.decrypt(data)\n    print(x)\n    return\n</code></pre>\n\n<p>For Rust:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate openssl;\n\nuse openssl::symm::decrypt;\nuse openssl::symm::{encrypt, Cipher};\n\nstatic KEY: &amp;'static [u8] = b\"YELLOW SUBMARINE\";\n\nfn main() -&gt; std::io::Result&lt;()&gt; {\n    // No idea why this OpenSSL call doesn't work.\n    let data = b\"\\x09\\x12\\x30\\xaa\\xde\\x3e\\xb3\\x30\\xdb\\xaa\\x43\\x58\\xf8\\x8d\\x2a\\x6c\";\n    let cipher = Cipher::aes_128_ecb();\n    let new_data = decrypt(cipher, KEY, None, data);\n    println!(\"error {:?}\", new_data);\n\n    Ok(())\n}\n</code></pre>\n\n<p>I expected to see this function decrypt the byte string in Rust the same way it has been done in python. </p>\n"}, {"tags": ["error-handling", "rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1546636535, "post_id": 54046081, "comment_id": 94927853, "body": "This isn&#39;t to do with the <code>?</code> operator, exactly. You&#39;re not using <code>ok_or</code> correctly: it takes an <code>E</code>, not a <code>Result&lt;T, E&gt;</code>. <code>.ok_or(&quot;error 1&quot;)</code> makes it work"}, {"owner": {"reputation": 438, "user_id": 2634045, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/sstbb.png?s=128&g=1", "display_name": "st_", "link": "https://stackoverflow.com/users/2634045/st"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1546636791, "post_id": 54046081, "comment_id": 94927945, "body": "My bad! How could i miss that. Thank you!"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1546640584, "post_id": 54046081, "comment_id": 94929367, "body": "@trentcl Would you like to post your comment as an answer? I think this is a valid question, and you gave a correct answer."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 1, "creation_date": 1546689795, "post_id": 54046081, "comment_id": 94937954, "body": "It is worth noting that when you get an error about <code>std::convert::From</code> is because you are using one type when other is expected, and there is no conversion between them. In this case, <code>std::convert::From&lt;std::result::Result&lt;_, &amp;str&gt;&gt; is not implemented for &amp;str</code> just means that you are writing a <code>Result&lt;_, &amp;str&gt;</code> where a <code>&amp;str</code> is required."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1546705301, "post_id": 54046081, "comment_id": 94941971, "body": "@rodrigo ... and because <code>?</code> implicitly uses <code>From</code> to convert between error types. I have added this to my answer, thanks."}], "answers": [{"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 6, "last_activity_date": 1546705262, "last_edit_date": 1546705262, "creation_date": 1546643249, "answer_id": 54047365, "question_id": 54046081, "link": "https://stackoverflow.com/questions/54046081/how-do-i-use-the-optionok-or-method-correctly/54047365#54047365", "title": "How do I use the Option::ok_or() method correctly?", "body": "<p>Unlike <code>or</code>, <code>ok_or</code> takes an <code>E</code>, not a full <code>Result&lt;T, E&gt;</code> (because it wouldn't have anything to do if passed an <code>Ok</code>). Just pass the error string directly:</p>\n\n<pre><code>fn main() -&gt; Result&lt;(), &amp;'static str&gt; {\n   let foo: i32 = Some(\"1\")\n       .ok_or(\"error 1\")?\n       .parse()\n       .or(Err(\"error 2\"))?;\n    Ok(())\n}\n</code></pre>\n\n<p>The reason the error message mentions the <code>From</code> trait is because <code>?</code> implicitly uses <code>From</code> to convert the expression's error type into the return value's error type. If it worked, <code>.ok_or(Err(\"error 1\"))</code> would return a value of <code>Result&lt;&amp;'static str, Result&lt;_, &amp;'static str&gt;&gt;</code> (<code>_</code> could be almost anything, since <code>Err</code> doesn't specify). The <code>?</code> operator attempts to find an implementation of <code>From</code> that would convert <code>Result&lt;_, &amp;'static str&gt;</code> (the expression's error type) into <code>&amp;'static str</code> (the return value's error type). Since no such <code>From</code> implementation exists, the compiler emits an error.</p>\n"}], "owner": {"reputation": 438, "user_id": 2634045, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/sstbb.png?s=128&g=1", "display_name": "st_", "link": "https://stackoverflow.com/users/2634045/st"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 971, "favorite_count": 0, "accepted_answer_id": 54047365, "answer_count": 1, "score": 4, "last_activity_date": 1547116106, "creation_date": 1546636159, "last_edit_date": 1547116106, "question_id": 54046081, "link": "https://stackoverflow.com/questions/54046081/how-do-i-use-the-optionok-or-method-correctly", "title": "How do I use the Option::ok_or() method correctly?", "body": "<p>I'm trying to understand how to use the question mark operator for error handling in Rust. I have this code:</p>\n\n<pre><code>fn main() -&gt; Result&lt;(), &amp;'static str&gt; {\n    let foo: i32 = Some(\"1\")\n        .ok_or(Err(\"error 1\"))?\n        .parse()\n        .or(Err(\"error 2\"))?;\n    Ok(())\n}\n</code></pre>\n\n<p>This code can not be compiled for some reason:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `&amp;str: std::convert::From&lt;std::result::Result&lt;_, &amp;str&gt;&gt;` is not satisfied\n --&gt; src/main.rs:2:20\n  |\n2 |       let foo: i32 = Some(\"1\")\n  |  ____________________^\n3 | |         .ok_or(Err(\"error 1\"))?\n  | |_______________________________^ the trait `std::convert::From&lt;std::result::Result&lt;_, &amp;str&gt;&gt;` is not implemented for `&amp;str`\n  |\n  = note: required by `std::convert::From::from`\n</code></pre>\n\n<p><a href=\"https://doc.rust-lang.org/book/ch09-02-recoverable-errors-with-result.html\" rel=\"nofollow noreferrer\">The Rust book</a> has an example usage of the question mark operator:</p>\n\n<pre><code>use std::io;\nuse std::io::Read;\nuse std::fs::File;\n\nfn read_username_from_file() -&gt; Result&lt;String, io::Error&gt; {\n    let mut s = String::new();\n\n    File::open(\"hello.txt\")?.read_to_string(&amp;mut s)?;\n\n    Ok(s)\n}\n</code></pre>\n\n<p>In my opinion, it doesn't differ much from my example in sense of handling errors. I cannot see a reason for my code to be invalid. If the <code>From</code> trait should be implemented for all kinds of <code>Result</code> why does the code from the Rust book work fine?</p>\n"}, {"tags": ["serialization", "rust", "deserialization", "serde"], "answers": [{"comments": [{"owner": {"reputation": 185, "user_id": 9682194, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bcc1995debd353130b7db0024320c8f3?s=128&d=identicon&r=PG&f=1", "display_name": "deltavin", "link": "https://stackoverflow.com/users/9682194/deltavin"}, "edited": false, "score": 0, "creation_date": 1547434294, "post_id": 54054034, "comment_id": 95179263, "body": "This explains it well. Thanks, especially for the enum idea, which seems to be making more sense for this situation."}], "tags": [], "owner": {"reputation": 121, "user_id": 1407922, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ee1db72f605222b160949d29ac9fe060?s=128&d=identicon&r=PG", "display_name": "kimsnj", "link": "https://stackoverflow.com/users/1407922/kimsnj"}, "is_accepted": true, "score": 1, "last_activity_date": 1546797550, "last_edit_date": 1546797550, "creation_date": 1546706643, "answer_id": 54054034, "question_id": 54044755, "link": "https://stackoverflow.com/questions/54044755/how-to-deserialize-bson-to-a-generic-object/54054034#54054034", "title": "How to deserialize BSON to a generic object?", "body": "<p>There are two issues preventing your code from compiling.</p>\n\n<p>The first error you saw: <code>the size for values of type dyn LocationTrait cannot be known at compilation time</code>, is due to the fact that <code>bson::from_bson</code> needs to return the result of the deserialization by value. The compiler needs to know how much space it needs to allocate in the call stack to return it.</p>\n\n<p>However traits are an abstraction to describe behaviour and not data, so it could be implemented for an <code>u8</code> (a single byte) or much larger struct.</p>\n\n<p>In order to be able to return such value, you would need to box it (see <a href=\"https://doc.rust-lang.org/book/ch17-02-trait-objects.html\" rel=\"nofollow noreferrer\">Trait Objects</a>).</p>\n\n<p>The second issue is that the return value must implement the <a href=\"https://docs.serde.rs/serde/de/trait.Deserialize.html\" rel=\"nofollow noreferrer\"><code>Deserialize</code></a> trait (and not <code>LocationTrait</code>)</p>\n\n<p>To solve these issue:</p>\n\n<p>The simplest path is to use enums instead of traits:</p>\n\n<pre><code>#[derive(Serialize, Deserialize)]\n#[serde(tag = \"type\")]\npub enum Location {\n    Country(Country),\n    City(City)\n}\n</code></pre>\n\n<p>This will work with documents such as <code>{\"type\" = \"Country\", name=\"usa\"}</code>.\nCheck <a href=\"https://serde.rs/enum-representations.html\" rel=\"nofollow noreferrer\">the Serde doc</a> for more options.</p>\n\n<p>If you <em>really</em> want to use traits (e.g. to be able to define types outside of this module), you will need a boxed trait and a custom structs as such:</p>\n\n<pre><code>// The same trait as defined earlier\npub trait LocationTrait {}\nimpl LocationTrait for Country {}\nimpl LocationTrait for City {}\n\n// A custom struct on which you can implement the deserialize trait\n// Needed as both Deserialize and Box are defined outside this crate.\nstruct DynLocation(Box&lt;dyn LocationTrait&gt;);\n\nimpl&lt;'de&gt; Deserialize&lt;'de&gt; for DynLocation {\n    fn deserialize&lt;D&gt;(_deserializer: D) -&gt; Result&lt;Self, D::Error&gt;\n    where\n        D: Deserializer&lt;'de&gt;,\n    {\n        // Tricky part ommited here:\n        // You will need to partially deserialize you object\n        // in order to get a first discriminant before instanciating\n        // and deserializing the proper type.\n        unimplemented!()\n    }\n}\n\n// The public method to hide the DynLocation wrapper\npub fn deserialize(item: &amp;str) -&gt; Box&lt;dyn LocationTrait&gt; {\n    let location: DynLocation = serde_json::from_str(item).expect(\"invalid json\");\n    location.0\n}\n</code></pre>\n\n<p>Some discussion around this same topic can be found in <a href=\"https://stackoverflow.com/questions/44231020/how-can-deserialization-of-polymorphic-trait-objects-be-added-in-rust-if-at-all\">How can deserialization of polymorphic trait objects be added in Rust if at all?</a>.</p>\n"}], "owner": {"reputation": 185, "user_id": 9682194, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bcc1995debd353130b7db0024320c8f3?s=128&d=identicon&r=PG&f=1", "display_name": "deltavin", "link": "https://stackoverflow.com/users/9682194/deltavin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1135, "favorite_count": 0, "accepted_answer_id": 54054034, "answer_count": 1, "score": 1, "last_activity_date": 1546797550, "creation_date": 1546629238, "last_edit_date": 1546797471, "question_id": 54044755, "link": "https://stackoverflow.com/questions/54044755/how-to-deserialize-bson-to-a-generic-object", "title": "How to deserialize BSON to a generic object?", "body": "<p>I am using Serde to deserialize BSON objects to Rust struct instances. I can deserialize the objects to concrete struct instances, but how can I deserialize generically? </p>\n\n<p>I have \"countries\" and \"cities\" collections in MongoDB. In the Rust program, I have a struct for <code>Country</code> and <code>City</code>. When I pull a country or a city from Mongo, I can deserialize it using Serde to the <code>Country</code> or <code>City</code> struct.  See the second line in <code>main()</code> below. </p>\n\n<p>I want to deserialize the BSON object into a generic <code>Location</code> object. Based on what I read about generics in the Rust book, I created a trait <code>LocationTrait</code> and implemented it for <code>Country</code> and <code>City</code>. (see line 3 in <code>main()</code>). It fails to compile, saying \nthe size for values of type <code>dyn LocationTrait</code> cannot be known at compilation time.</p>\n\n<pre><code>#[derive(Serialize, Deserialize)]\npub struct Country {\n    pub name: String,\n}\n\n#[derive(Serialize, Deserialize)]\npub struct City {\n    pub name: String,\n}\n\npub trait LocationTrait {}\nimpl LocationTrait for Country {}\nimpl LocationTrait for City {}\n\nfn main() {\n    let item = mongo_coll\n        .find_one(Some(doc! {\"name\": \"usa\"}), None)\n        .unwrap()\n        .unwrap();\n    let country: Country = bson::from_bson(bson::Bson::Document(item)).unwrap();\n    // fails -&gt; let gen_location: LocationTrait = bson::from_bson(bson::Bson::Document(item)).unwrap();\n}\n</code></pre>\n\n<p>Eventually, I would like to create a generic object that represents <code>Country</code> or a <code>City</code>. But, I am not sure of the starting point -- do I need to focus on a trait or do I need to create a new trait-bound struct?</p>\n"}, {"tags": ["macros", "rust", "infinite-recursion"], "comments": [{"owner": {"reputation": 7411, "user_id": 2200659, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/ImYIK.jpg?s=128&g=1", "display_name": "Anders", "link": "https://stackoverflow.com/users/2200659/anders"}, "edited": false, "score": 0, "creation_date": 1546627255, "post_id": 54044382, "comment_id": 94924338, "body": "I have deliberately not included the definition of the trait <code>Configurable</code> in the question, since my understanding is that the compiler does not use it anyway (it&#39;s in another crate and not in scope). Let me know if that was a mistake, and I will add it."}, {"owner": {"reputation": 2452, "user_id": 5082427, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b04ffa64c1eeae620048e1ed31dab54f?s=128&d=identicon&r=PG&f=1", "display_name": "Wazner", "link": "https://stackoverflow.com/users/5082427/wazner"}, "edited": false, "score": 0, "creation_date": 1546628498, "post_id": 54044382, "comment_id": 94924867, "body": "Why are you using a macro for this? Wouldn&#39;t a simple impl work? <code>impl&lt;&#39;de, T: Configurable&gt; Deserialize&lt;&#39;de&gt; for T</code>"}, {"owner": {"reputation": 7411, "user_id": 2200659, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/ImYIK.jpg?s=128&g=1", "display_name": "Anders", "link": "https://stackoverflow.com/users/2200659/anders"}, "reply_to_user": {"reputation": 2452, "user_id": 5082427, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b04ffa64c1eeae620048e1ed31dab54f?s=128&d=identicon&r=PG&f=1", "display_name": "Wazner", "link": "https://stackoverflow.com/users/5082427/wazner"}, "edited": false, "score": 0, "creation_date": 1546628638, "post_id": 54044382, "comment_id": 94924929, "body": "@Wazner See <a href=\"https://stackoverflow.com/questions/54013125/how-can-i-mass-implement-deserialize-for-all-types-that-implement-a-specific-tra\">this question</a>."}], "answers": [{"comments": [{"owner": {"reputation": 7411, "user_id": 2200659, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/ImYIK.jpg?s=128&g=1", "display_name": "Anders", "link": "https://stackoverflow.com/users/2200659/anders"}, "edited": false, "score": 0, "creation_date": 1546635125, "post_id": 54045191, "comment_id": 94927259, "body": "Oh, now I feel stupid. I got that to, but I couldn&#39;t imagine the stack would actually run out for something simple like this. So I just assumed there was an infinite recursion going on."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1546794182, "post_id": 54045191, "comment_id": 94960830, "body": "<i>I&#39;m sure there&#39;s a good reason</i> \u2014 yes, which is why <a href=\"https://docs.rs/quote/0.6.10/quote/#recursion-limit\" rel=\"nofollow noreferrer\">the quote documentation explicitly tells people about it</a>"}], "tags": [], "owner": {"reputation": 7240, "user_id": 327201, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/0ee53216660fae93d26f8dcaba3945a0?s=128&d=identicon&r=PG", "display_name": "Ramon Snir", "link": "https://stackoverflow.com/users/327201/ramon-snir"}, "is_accepted": true, "score": 1, "last_activity_date": 1546631560, "creation_date": 1546631560, "answer_id": 54045191, "question_id": 54044382, "link": "https://stackoverflow.com/questions/54044382/infinite-recursion-in-rust-derive-macro/54045191#54045191", "title": "Infinite recursion in Rust derive macro?", "body": "<p>Trying to compile this locally gives this full error message:</p>\n\n<pre><code>error: recursion limit reached while expanding the macro `stringify`\n  --&gt; src/lib.rs:13:15\n   |\n13 |       let gen = quote! {\n   |  _______________^\n14 | |         impl&lt;'de&gt; Deserialize&lt;'de&gt; for #name {\n15 | |             fn deserialize&lt;D&gt;(deserializer: D) -&gt; Result&lt;#name, D::Error&gt;\n16 | |             where\n...  |\n22 | |         }\n23 | |     };\n   | |_____^\n   |\n   = help: consider adding a `#![recursion_limit=\"128\"]` attribute to your crate\n   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)                                                                                                                                 \n\nerror: aborting due to previous error\n</code></pre>\n\n<p>Putting the following as the first line of the crate makes the error go away. My guess is that the default recursion_limit is simply too low for a macro this complex (which IMO isn't that complex). I'm sure there's a good reason, and I'm glad the error message contained the solution:</p>\n\n<pre><code>#![recursion_limit=\"128\"]\n</code></pre>\n"}], "owner": {"reputation": 7411, "user_id": 2200659, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/ImYIK.jpg?s=128&g=1", "display_name": "Anders", "link": "https://stackoverflow.com/users/2200659/anders"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 748, "favorite_count": 0, "accepted_answer_id": 54045191, "answer_count": 1, "score": 0, "last_activity_date": 1546631560, "creation_date": 1546627186, "question_id": 54044382, "link": "https://stackoverflow.com/questions/54044382/infinite-recursion-in-rust-derive-macro", "title": "Infinite recursion in Rust derive macro?", "body": "<p>I have made the following attampt at a derive macro in Rust:</p>\n\n<pre><code>extern crate proc_macro;\n\nuse crate::proc_macro::TokenStream;\nuse quote::quote;\nuse syn;\n\n#[proc_macro_derive(DeserializeConfigurable)]\npub fn deserialize_configurable_derive(input: TokenStream) -&gt; TokenStream {\n    let ast: syn::DeriveInput = syn::parse(input).unwrap();\n    let name = &amp;ast.ident;\n    let gen = quote! {\n        impl&lt;'de&gt; Deserialize&lt;'de&gt; for #name {\n            fn deserialize&lt;D&gt;(deserializer: D) -&gt; Result&lt;#name, D::Error&gt;\n            where\n                D: Deserializer&lt;'de&gt;,\n            {\n                let config = &lt;#name as Configurable&gt;::Config::deserialize(deserializer)?;\n                Ok(#name::from_config(config))\n            }\n        }\n    };\n    gen.into()\n}\n</code></pre>\n\n<p>The goal is to provide a specific blanket implementation for <code>deserialize</code> based on another trait, <code>Configurable</code>.</p>\n\n<p>However, the compiler has the following complaint regarding my quote statement:</p>\n\n<blockquote>\n  <p>recursion limit reached while expanding the macro <code>stringify</code></p>\n</blockquote>\n\n<p>I don't see the recursion here. I am not even using <code>stringify</code>! What is calling what in infinity here?</p>\n"}, {"tags": ["csv", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1546794621, "post_id": 54043588, "comment_id": 94960951, "body": "See also <a href=\"https://stackoverflow.com/q/29760668/155423\">Conditionally iterate over one of several possible iterators</a> for a version of this that requires no heap allocation"}], "answers": [{"comments": [{"owner": {"reputation": 2422, "user_id": 1610273, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ecb15180b9f6e0a36d96da1e0b860572?s=128&d=identicon&r=PG", "display_name": "nevi_me", "link": "https://stackoverflow.com/users/1610273/nevi-me"}, "edited": false, "score": 1, "creation_date": 1546661689, "post_id": 54045901, "comment_id": 94932984, "body": "Thanks, I didn&#39;t know about usize::MAX. Since I use <code>take()</code> in both branches, I&#39;ve simplified my <code>records</code> to <code>csv_reader.into_records().take(max_read_records.unwrap_or(st&zwnj;&#8203;d::usize::MAX))</code>."}], "tags": [], "owner": {"reputation": 371, "user_id": 5921433, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/zjNTV.jpg?s=128&g=1", "display_name": "Nate", "link": "https://stackoverflow.com/users/5921433/nate"}, "is_accepted": true, "score": 0, "last_activity_date": 1546635115, "creation_date": 1546635115, "answer_id": 54045901, "question_id": 54043588, "link": "https://stackoverflow.com/questions/54043588/optionally-take-records-from-a-csv/54045901#54045901", "title": "Optionally `Take` records from a CSV", "body": "<p>You have to <code>take(std::usize::MAX)</code> when <code>max_records</code> is <code>None</code>. It's annoying, but both iterators have to have the same type to be stored in the same variable. Also, the <code>.intoIter()</code>'s that you added have no effect, as you were calling them on iterators.</p>\n\n<pre><code>fn read_csv_repro(file: File, max_read_records: Option&lt;usize&gt;) {\n    let mut csv_reader = csv::Reader::from_reader(BufReader::new(file));\n    let records: Box&lt;std::iter::Take&lt;StringRecordsIntoIter&lt;std::io::BufReader&lt;std::fs::File&gt;&gt;&gt;&gt; = match max_read_records {\n        Some(max) =&gt; {\n            Box::new(csv_reader.into_records().take(max))\n        },\n        None =&gt; {\n            Box::new(csv_reader.into_records().take(std::usize::MAX))\n        }\n    };\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 2422, "user_id": 1610273, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ecb15180b9f6e0a36d96da1e0b860572?s=128&d=identicon&r=PG", "display_name": "nevi_me", "link": "https://stackoverflow.com/users/1610273/nevi-me"}, "edited": false, "score": 0, "creation_date": 1546715385, "post_id": 54052667, "comment_id": 94944626, "body": "I had tried <code>Box&lt;Iterator&lt;Item=Result&lt;csv::StringRecord&gt;&gt;&gt;</code> but was getting the error. Using <code>csv::Result</code> looks like is what I needed (because I was struggling to convert my expected error into a csv Error type. Thanks"}], "tags": [], "owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "is_accepted": false, "score": 3, "last_activity_date": 1546696227, "creation_date": 1546696227, "answer_id": 54052667, "question_id": 54043588, "link": "https://stackoverflow.com/questions/54043588/optionally-take-records-from-a-csv/54052667#54052667", "title": "Optionally `Take` records from a CSV", "body": "<p>While Nate's answer works for this specific case, the more general solution here is to use trait objects. My impression is that this is what you were intending to do by using <code>Box</code> here. Otherwise, in Nate's solution, the use of <code>Box</code> is completely superfluous.</p>\n\n<p>Here is code that uses trait objects without needing to do <code>take(std::usize::MAX)</code> (using Rust 2018):</p>\n\n<pre><code>use std::fs::File;\nuse std::io::BufReader;\n\n/// Read a csv, and print the first n records\nfn read_csv_repro(\n    file: File,\n    max_read_records: Option&lt;usize&gt;,\n) {\n    let csv_reader = csv::ReaderBuilder::new()\n        .from_reader(BufReader::new(file.try_clone().unwrap()));\n\n    let records: Box&lt;Iterator&lt;Item=csv::Result&lt;csv::StringRecord&gt;&gt;&gt; =\n        match max_read_records {\n            Some(max) =&gt; {\n                Box::new(csv_reader.into_records().take(max).into_iter())\n            },\n            None =&gt; {\n                Box::new(csv_reader.into_records().into_iter())\n            }\n        };\n\n    for result in records\n    {\n        let record = result.unwrap();\n\n        // do something with record, e.g. print values from it to console\n        let string: Option&lt;&amp;str&gt; = record.get(0);\n        println!(\"First record is {:?}\", string);\n    }\n}\n\nfn main() {\n    read_csv_repro(File::open(\"csv_test.csv\").unwrap(), Some(10));\n}\n</code></pre>\n"}], "owner": {"reputation": 2422, "user_id": 1610273, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ecb15180b9f6e0a36d96da1e0b860572?s=128&d=identicon&r=PG", "display_name": "nevi_me", "link": "https://stackoverflow.com/users/1610273/nevi-me"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 149, "favorite_count": 0, "accepted_answer_id": 54045901, "answer_count": 2, "score": 0, "last_activity_date": 1546794469, "creation_date": 1546623126, "last_edit_date": 1546794469, "question_id": 54043588, "link": "https://stackoverflow.com/questions/54043588/optionally-take-records-from-a-csv", "title": "Optionally `Take` records from a CSV", "body": "<p>I'm using the Rust <code>csv</code> crate to read CSV files. I want to create the option for the user to take x first records from the CSV.</p>\n\n<p>Given a function like <code>fn read_records(csv_reader: csv::Reader, max_records: Option&lt;usize&gt;) -&gt; ?</code>, I want to do the below:</p>\n\n<pre><code>use std::fs::File;\nuse std::io::BufReader;\n\nuse csv as csv_crate;\n\nuse self::csv_crate::StringRecordsIntoIter;\n\n/// Read a csv, and print the first n records\nfn read_csv_repro(\n    mut file: File,\n    max_read_records: Option&lt;usize&gt;,\n) {\n    let mut csv_reader = csv::ReaderBuilder::new()\n        .from_reader(BufReader::new(file.try_clone().unwrap()));\n\n    let records: Box&lt;StringRecordsIntoIter&lt;std::io::BufReader&lt;std::fs::File&gt;&gt;&gt; = match max_read_records {\n        Some(max) =&gt; {\n            Box::new(csv_reader.into_records().take(max).into_iter())\n        },\n        None =&gt; {\n            Box::new(csv_reader.into_records().into_iter())\n        }\n    };\n\n    for result in records\n    {\n        let record = result.unwrap();\n\n        // do something with record, e.g. print values from it to console\n        let string: Option&lt;&amp;str&gt; = record.get(0);\n        println!(\"First record is {:?}\", string);\n    }\n}\n\nfn main() {\n    read_csv_repro(File::open(\"csv_test.csv\").unwrap(), Some(10));\n}\n</code></pre>\n\n<p>(<a href=\"https://gist.github.com/nevi-me/0b51dd948d150efa0534f6c0f58b7a60\" rel=\"nofollow noreferrer\">gist</a>)</p>\n\n<p>I'm struggling with getting my code to work, with the below error from the compiler:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:18:22\n   |\n18 |             Box::new(csv_reader.into_records().take(max).into_iter())\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `csv::reader::StringRecordsIntoIter`, found struct `std::iter::Take`\n   |\n   = note: expected type `csv::reader::StringRecordsIntoIter&lt;_&gt;`\n              found type `std::iter::Take&lt;csv::reader::StringRecordsIntoIter&lt;_&gt;&gt;`\n</code></pre>\n\n<p>How can I get the above code to work?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1546620684, "post_id": 54042984, "comment_id": 94921511, "body": "I think your question is answered by <a href=\"https://stackoverflow.com/questions/27650312/show-u8-slice-in-hex-representation\">this Q&amp;A</a>. Please let us know whether this indeed answers your question, then we can mark it as duplicate."}, {"owner": {"reputation": 2050, "user_id": 9917504, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HFxmZ.png?s=128&g=1", "display_name": "Tristo", "link": "https://stackoverflow.com/users/9917504/tristo"}, "edited": false, "score": 1, "creation_date": 1546621709, "post_id": 54042984, "comment_id": 94921977, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/27650312/show-u8-slice-in-hex-representation\">Show u8 slice in hex representation</a>"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1546621894, "post_id": 54042984, "comment_id": 94922054, "body": "How is the &quot;binary&quot; part of the question answered by this other QA ?"}, {"owner": {"reputation": 50921, "user_id": 1666, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/96dda17df0db1cc0c3762c505a7d1352?s=128&d=identicon&r=PG", "display_name": "SCdF", "link": "https://stackoverflow.com/users/1666/scdf"}, "edited": false, "score": 0, "creation_date": 1546624197, "post_id": 54042984, "comment_id": 94923062, "body": "That&#39;s awesome it works for hex! Unfortunately that doesn&#39;t work for binary output, which is where I&#39;m at right now"}, {"owner": {"reputation": 50921, "user_id": 1666, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/96dda17df0db1cc0c3762c505a7d1352?s=128&d=identicon&r=PG", "display_name": "SCdF", "link": "https://stackoverflow.com/users/1666/scdf"}, "edited": false, "score": 0, "creation_date": 1546624395, "post_id": 54042984, "comment_id": 94923163, "body": "I updated the question to get rid of hex references, so it&#39;s clearer it cares about binary (I originally didn&#39;t realise you could do any, so I was trying to be more general. My mistake!)"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1547030216, "post_id": 54042984, "comment_id": 95048356, "body": "OP, is there a problem with the answer ? Why didn&#39;t you accept it?"}, {"owner": {"reputation": 50921, "user_id": 1666, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/96dda17df0db1cc0c3762c505a7d1352?s=128&d=identicon&r=PG", "display_name": "SCdF", "link": "https://stackoverflow.com/users/1666/scdf"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1547043327, "post_id": 54042984, "comment_id": 95056299, "body": "@DenysS&#233;guret I was waiting to see if there was an answer that wasn&#39;t writing custom code to do it, which is IMO the defacto non-answer to any of these library-style questions. It&#39;s been sitting around for awhile though, so it&#39;s the best answer, at least for now."}], "answers": [{"comments": [{"owner": {"reputation": 3054, "user_id": 115030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c74c0974c6cc25c194a2737e2d6747?s=128&d=identicon&r=PG", "display_name": "Anders Kaseorg", "link": "https://stackoverflow.com/users/115030/anders-kaseorg"}, "edited": false, "score": 1, "creation_date": 1546652435, "post_id": 54044287, "comment_id": 94931796, "body": "The intermediate <code>String</code> is <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a4e46f4b81325d268629a112075ebda8\" rel=\"nofollow noreferrer\">not needed</a>."}], "tags": [], "owner": {"reputation": 275, "user_id": 9997295, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/dgewM.jpg?s=128&g=1", "display_name": "Muzol", "link": "https://stackoverflow.com/users/9997295/muzol"}, "is_accepted": true, "score": 2, "last_activity_date": 1546653093, "last_edit_date": 1546653093, "creation_date": 1546626573, "answer_id": 54044287, "question_id": 54042984, "link": "https://stackoverflow.com/questions/54042984/can-i-format-debug-output-as-binary-when-the-values-are-in-a-vector/54044287#54044287", "title": "Can I format debug output as binary when the values are in a vector?", "body": "<p>Well a direct way, no, but I would do something like this:</p>\n\n<pre><code>use std::fmt;\n\nstruct V(Vec&lt;u32&gt;);\n\n// custom output\nimpl fmt::Binary for V {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        // extract the value using tuple idexing\n        // and create reference to 'vec'\n        let vec = &amp;self.0;\n\n        // @count -&gt; the index of the value,\n        // @n     -&gt; the value\n        for (count, n) in vec.iter().enumerate() { \n            if count != 0 { write!(f, \" \")?; }\n\n            write!(f, \"{:b}\", n)?;\n        }\n\n        Ok(())\n    }\n}\n\nfn main() {\n    println!(\"v = {:b} \", V( vec![42, 43, 44] ));\n}\n</code></pre>\n\n<p>Output:</p>\n\n<pre><code>$ rustc v.rs &amp;&amp; ./v\nv = 101010 101011 101100\n</code></pre>\n\n<p>I'm using <code>rustc 1.31.1 (b6c32da9b 2018-12-18)</code></p>\n\n<p>Rust <a href=\"https://doc.rust-lang.org/std/fmt/trait.Binary.html\" rel=\"nofollow noreferrer\">fmt::binary</a> reference.</p>\n\n<p>Rust <a href=\"https://doc.rust-lang.org/1.31.0/rust-by-example/hello/print/print_display.html\" rel=\"nofollow noreferrer\">fmt::Display</a> reference.</p>\n"}], "owner": {"reputation": 50921, "user_id": 1666, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/96dda17df0db1cc0c3762c505a7d1352?s=128&d=identicon&r=PG", "display_name": "SCdF", "link": "https://stackoverflow.com/users/1666/scdf"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 371, "favorite_count": 0, "accepted_answer_id": 54044287, "answer_count": 1, "score": 0, "last_activity_date": 1546653093, "creation_date": 1546620373, "last_edit_date": 1546624353, "question_id": 54042984, "link": "https://stackoverflow.com/questions/54042984/can-i-format-debug-output-as-binary-when-the-values-are-in-a-vector", "title": "Can I format debug output as binary when the values are in a vector?", "body": "<p>In Rust you can format numbers in different bases, which is really useful for bit twiddling:</p>\n\n<pre><code>println!(\"{:?} {:b} {:x}\", 42, 42, 42); // 42 101010 2a\n</code></pre>\n\n<p>Ideally this would also work for vectors! While it works for hex:</p>\n\n<pre><code>println!(\"{:#x?}\", vec![42, 43, 44]); // [ 0x2a, 0x2b, 0x2c ]\n</code></pre>\n\n<p>It does not work for binary:</p>\n\n<pre><code>println!(\"{:b}\", vec![42, 43, 44]); // I wish this were [101010, 101011, 101100]\n</code></pre>\n\n<p>Instead giving:</p>\n\n<blockquote>\n  <p>the trait bound <code>std::vec::Vec&lt;{integer}&gt;: std::fmt::Binary</code> is not satisfied</p>\n</blockquote>\n\n<p>Is there a way of doing binary formatting inside vectors?</p>\n"}, {"tags": ["xml", "rust", "serde"], "answers": [{"tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 2, "last_activity_date": 1546873547, "last_edit_date": 1546873547, "creation_date": 1546674550, "answer_id": 54050036, "question_id": 54041885, "link": "https://stackoverflow.com/questions/54041885/serde-xml-rs-deseralizing-u8-works-but-not-u16/54050036#54050036", "title": "serde-xml-rs deseralizing u8 works but not u16", "body": "<p>This crate is not very active; this is a <a href=\"https://github.com/RReverser/serde-xml-rs/issues/63\" rel=\"nofollow noreferrer\">known bug</a> which has been fixed but not published. You could use the master branch directly:</p>\n\n<pre class=\"lang-toml prettyprint-override\"><code>serde-xml-rs = { git = \"https://github.com/RReverser/serde-xml-rs\" }\n</code></pre>\n\n<p>And also replace <code>serde_xml_rs::deserialize</code> by <code>serde_xml_rs::from_reader</code>.</p>\n\n<hr>\n\n<p><a href=\"https://github.com/RReverser/serde-xml-rs/pull/68#issuecomment-451960408\" rel=\"nofollow noreferrer\">0.3.0</a> just come out !</p>\n\n<p>So you can use the classic:</p>\n\n<pre class=\"lang-toml prettyprint-override\"><code>serde-xml-rs = \"0.3\"\n</code></pre>\n"}], "owner": {"reputation": 27, "user_id": 4327237, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/832d7fe5830aad87d1034834959294cf?s=128&d=identicon&r=PG&f=1", "display_name": "sid34", "link": "https://stackoverflow.com/users/4327237/sid34"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 151, "favorite_count": 0, "accepted_answer_id": 54050036, "answer_count": 1, "score": 1, "last_activity_date": 1546873547, "creation_date": 1546615855, "question_id": 54041885, "link": "https://stackoverflow.com/questions/54041885/serde-xml-rs-deseralizing-u8-works-but-not-u16", "title": "serde-xml-rs deseralizing u8 works but not u16", "body": "<p>I am trying to deserialize a xml document into a custom rust class. The attached code is the simplest form of my issue. When trying to deserialize a number value of any type other than u8 the error given is 'main' panicked at 'called <code>Result::unwrap()</code> on an <code>Err</code> value: invalid type: string \"99\", expected u16' or whatever the desired type is. serde_xml_rs seems to be casting the string value to a proper numeral value for u8  but not other types. Am I doing something wrong?</p>\n\n<pre><code>#[macro_use]\nextern crate serde_derive;\n\nextern crate serde;\nextern crate serde_xml_rs;\n\nfn main() {\n    weird_example();\n}\n\n\n\n#[derive(Deserialize, Debug)]\nstruct SampleStruct {\n    name: String,\n    num_u8: u8,\n    num_u16: u16,\n}\n\nfn weird_example (){\n    let deser: SampleStruct = serde_xml_rs::deserialize(r##\"\n        &lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n        &lt;sample_struct name=\"Sample\" num_u8=\"99\" num_u16=\"99\"&gt;\n        &lt;/sample_struct&gt;\n    \"##.as_bytes()).unwrap();\n    println!(\"{:#?}\", deser);\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1546606963, "post_id": 54039307, "comment_id": 94913988, "body": "<code>insert</code> takes first the key and then the value..."}, {"owner": {"reputation": 803, "user_id": 767440, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/d845c11a24e2e78133885a0927affc6b?s=128&d=identicon&r=PG", "display_name": "carlos.baez", "link": "https://stackoverflow.com/users/767440/carlos-baez"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1546607232, "post_id": 54039307, "comment_id": 94914117, "body": "sorry, I didn&#39;t paste correctly the code.. I edit the post, but the error is the same..."}, {"owner": {"reputation": 36141, "user_id": 4354477, "user_type": "registered", "accept_rate": 52, "profile_image": "https://i.stack.imgur.com/SuxtS.gif?s=128&g=1", "display_name": "ForceBru", "link": "https://stackoverflow.com/users/4354477/forcebru"}, "edited": false, "score": 0, "creation_date": 1546607498, "post_id": 54039307, "comment_id": 94914251, "body": "As far as I understand, <code>HashMap&lt;&amp;&#39;a str, Node&gt;</code> should provide a lifetime specifier to <code>Node</code> because it requires one by definition. So, it should be <code>HashMap&lt;&amp;&#39;a str, Node&lt;&#39;a&gt;&gt;</code>."}, {"owner": {"reputation": 803, "user_id": 767440, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/d845c11a24e2e78133885a0927affc6b?s=128&d=identicon&r=PG", "display_name": "carlos.baez", "link": "https://stackoverflow.com/users/767440/carlos-baez"}, "edited": false, "score": 0, "creation_date": 1546607559, "post_id": 54039307, "comment_id": 94914283, "body": "Yes, but when I do this, I get a mismatched type error...  I don&#39;t exactly why..."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1546609349, "post_id": 54039307, "comment_id": 94915123, "body": "You have 3 or 4 errors, but if you follow the compiler&#39;s advices, you should address all of them."}, {"owner": {"reputation": 803, "user_id": 767440, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/d845c11a24e2e78133885a0927affc6b?s=128&d=identicon&r=PG", "display_name": "carlos.baez", "link": "https://stackoverflow.com/users/767440/carlos-baez"}, "edited": false, "score": 0, "creation_date": 1546609465, "post_id": 54039307, "comment_id": 94915183, "body": "I understand that It can be tedious, but in fact, I have only one error, but when I fix one, It throws another one..."}, {"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 0, "creation_date": 1546609565, "post_id": 54039307, "comment_id": 94915231, "body": "It should be telling you which line requires an explicit lifetime in the error message - my hunch is that the <code>&amp;Node</code> on <code>join</code> needs to be <code>&amp;Node&lt;&#39;a&gt;</code>, or possibly even <code>&amp;&#39;a Node&lt;&#39;a&gt;</code>."}, {"owner": {"reputation": 36141, "user_id": 4354477, "user_type": "registered", "accept_rate": 52, "profile_image": "https://i.stack.imgur.com/SuxtS.gif?s=128&g=1", "display_name": "ForceBru", "link": "https://stackoverflow.com/users/4354477/forcebru"}, "reply_to_user": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 0, "creation_date": 1546609768, "post_id": 54039307, "comment_id": 94915325, "body": "@JoeClay, if you do this, though, Rust will refuse to move out of borrowed content with the last version of the code because, apparently, <code>insert</code> attempts to move the second argument."}, {"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 1, "creation_date": 1546609865, "post_id": 54039307, "comment_id": 94915380, "body": "Then they need to clone the data, or have the hashmap store references. A <code>HashMap</code> always owns the data stored inside of it."}, {"owner": {"reputation": 803, "user_id": 767440, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/d845c11a24e2e78133885a0927affc6b?s=128&d=identicon&r=PG", "display_name": "carlos.baez", "link": "https://stackoverflow.com/users/767440/carlos-baez"}, "edited": false, "score": 1, "creation_date": 1546610027, "post_id": 54039307, "comment_id": 94915464, "body": "I can understand this. Directly, it is a bad design... I can try to refactor all the code to   clone data if you think it is the problem..."}], "answers": [{"comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1546613680, "post_id": 54040387, "comment_id": 94917484, "body": "While your code snippet might answer the question, it would be good if you could add a few sentences what was wrong and how you solved it, at best with some links to documentation or similar problems."}], "tags": [], "owner": {"reputation": 36141, "user_id": 4354477, "user_type": "registered", "accept_rate": 52, "profile_image": "https://i.stack.imgur.com/SuxtS.gif?s=128&g=1", "display_name": "ForceBru", "link": "https://stackoverflow.com/users/4354477/forcebru"}, "is_accepted": true, "score": 5, "last_activity_date": 1546614178, "last_edit_date": 1546614178, "creation_date": 1546610318, "answer_id": 54040387, "question_id": 54039307, "link": "https://stackoverflow.com/questions/54039307/creation-of-a-hashmap-with-struct-in-rust/54040387#54040387", "title": "Creation of a hashmap with struct in Rust", "body": "<p>This simplified example seems to work:</p>\n\n<pre><code>use std::collections::HashMap;\n\n#[derive(Clone)] // we'll be cloning it later on\nstruct Node&lt;'a&gt; {\n    data: &amp;'a i32 \n}\n\n\nstruct Test&lt;'a&gt; {\n    hash_map: HashMap&lt;&amp;'a str, Node&lt;'a&gt;&gt;  // the hash map owns the struct\n}\n\nimpl&lt;'a&gt; Test&lt;'a&gt; {\n    fn new() -&gt; Test&lt;'a&gt; {\n        Test {hash_map: HashMap::new()}\n    }\n\n    fn join(\n        &amp;mut self, // must be mutable\n        node: Node&lt;'a&gt;) { // do not pass a reference\n        self.hash_map.insert(\"test\", node);  // inserting moves `node`\n    }\n}\n\nfn main() {\n    let stuff = Node {data: &amp;12};\n    let mut test = Test::new();\n\n    test.join(stuff.clone());  // if we don't clone, `stuff` will get moved\n\n    println!(\"{}\", *test.hash_map[\"test\"].data);  // outputs \"12\"\n}\n</code></pre>\n\n<p>Since <code>std::collections::HashMap::insert</code> attempts to move its second argument, one can't dereference a pointer to something and pass that to this method because otherwise the pointer will become uninitialized, which isn't permitted. A way so solve this is to pass a moved value and not a pointer to <code>join</code>.</p>\n"}], "owner": {"reputation": 803, "user_id": 767440, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/d845c11a24e2e78133885a0927affc6b?s=128&d=identicon&r=PG", "display_name": "carlos.baez", "link": "https://stackoverflow.com/users/767440/carlos-baez"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5907, "favorite_count": 0, "accepted_answer_id": 54040387, "answer_count": 1, "score": 2, "last_activity_date": 1546614178, "creation_date": 1546606150, "last_edit_date": 1546610787, "question_id": 54039307, "link": "https://stackoverflow.com/questions/54039307/creation-of-a-hashmap-with-struct-in-rust", "title": "Creation of a hashmap with struct in Rust", "body": "<p>I am trying to set up a hashmap of objects / structs in rust... But I don't understand this concrete problem  (a lifetime error).</p>\n\n<pre><code>#[derive(Hash, Eq, PartialEq)]\n#[derive(Serialize, Deserialize, Debug)]\npub struct Node&lt;'a&gt; {\n    identifier: &amp;'a str,\n    sha_id: Vec&lt;u8&gt;,\n    successor_id: Option&lt;Vec&lt;u8&gt;&gt;,\n    predecessor_id: Option&lt;Vec&lt;u8&gt;&gt;,\n}\n\n\nimpl&lt;'a&gt; Node&lt;'a&gt; {\n    ...\n    ..\n    .\n}\n\npub struct Application&lt;'a&gt; {\n    hash_map: HashMap&lt;&amp;'a str, Node&gt;,\n}\n\nimpl&lt;'a&gt; Application&lt;'a&gt; {\n    fn join(&amp;self, node: &amp;Node) {\n        self.hash_map.insert(node.identifier, node);\n    }\n}\n</code></pre>\n\n<p>The error is a missing lifetime specifier in  the <code>hash_map: HashMap&lt;&amp;'a str, Node&gt;</code> that I tried to solve changing Node to Node&lt;'a> but It throws a \"mismatched type\" error when I try to insert...</p>\n\n<p>I don't exactly why I have this problem missing the lifetime and I don't find solutions..</p>\n\n<p><strong>UPDATE:</strong></p>\n\n<pre><code>#[derive(Hash, Eq, PartialEq)]\n#[derive(Serialize, Deserialize, Debug)]\npub struct Node&lt;'a&gt; {\n    identifier: &amp;'a str,\n    sha_id: Vec&lt;u8&gt;,\n    successor_id: Option&lt;Vec&lt;u8&gt;&gt;,\n    predecessor_id: Option&lt;Vec&lt;u8&gt;&gt;,\n}\n\n\nimpl&lt;'a&gt; Node&lt;'a&gt; {\n    ...\n    ..\n    .\n}\n\npub struct Application&lt;'a&gt; {\n    hash_map: HashMap&lt;&amp;'a str, Node&lt;'a&gt;&gt;,\n}\n\nimpl&lt;'a&gt; Application&lt;'a&gt; {\n    fn join(&amp;self, node: &amp;Node) {\n        self.hash_map.insert(node.identifier, *node);\n    }\n}\n</code></pre>\n\n<p>And the output is:</p>\n\n<pre><code>\"explicit lifetime required in the type of `node`\"\n</code></pre>\n\n<p><strong>UPDATE2:</strong></p>\n\n<pre><code>pub struct Application&lt;'a&gt; {\n    hash_map: HashMap&lt;&amp;'a str, Node&lt;'a&gt;&gt;,\n}\n\nimpl&lt;'a&gt; Application&lt;'a&gt; {\n    fn join(&amp;mut self, node: &amp;'a Node&lt;'a&gt;) {\n        self.hash_map.insert(node.identifier, *node);\n    }\n\n}\n</code></pre>\n\n<p>And the output is:</p>\n\n<pre><code>self.hash_map.insert(node.identifier, *node); cannot move out of borrowed content\n</code></pre>\n\n<p><strong>COMPLETE SOLUTION</strong></p>\n\n<pre><code>#[derive(Clone, Hash, Eq, PartialEq)]\n#[derive(Serialize, Deserialize, Debug)]\npub struct Node&lt;'a&gt; {\n    identifier: &amp;'a str,\n    sha_id: Vec&lt;u8&gt;,\n    successor_id: Option&lt;Vec&lt;u8&gt;&gt;,\n    predecessor_id: Option&lt;Vec&lt;u8&gt;&gt;,\n}\n\n\nimpl&lt;'a&gt; Node&lt;'a&gt; {\n...\n..\n.\n}\n\npub struct Application&lt;'a&gt; {\n    hash_map: HashMap&lt;&amp;'a str, Node&lt;'a&gt;&gt;,\n}\n\nimpl&lt;'a&gt; Application&lt;'a&gt; {\n    fn join(&amp;mut self, node: Node&lt;'a&gt;) {\n        self.hash_map.insert(node.identifier, node);\n    }\n\n}\n</code></pre>\n"}, {"tags": ["rust", "ownership"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1546597720, "post_id": 54036921, "comment_id": 94909436, "body": "First off, this is not an minimal example, because the struct <code>Vertex</code> is missing, second don&#39;t use <code>_search</code>, because the underscore indicates, that the function is not used, but it is. Third, according to Anders answer you just need to update your compiler and make it a 2018 project."}, {"owner": {"reputation": 13, "user_id": 10866641, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1dc86bf8235158e17c810db8485c5ed8?s=128&d=identicon&r=PG&f=1", "display_name": "jang", "link": "https://stackoverflow.com/users/10866641/jang"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1546598784, "post_id": 54036921, "comment_id": 94910040, "body": "Thank you for your help! I added implementation of Vertex. I&#39;ll see to that in the next post."}], "answers": [{"comments": [{"owner": {"reputation": 13, "user_id": 10866641, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1dc86bf8235158e17c810db8485c5ed8?s=128&d=identicon&r=PG&f=1", "display_name": "jang", "link": "https://stackoverflow.com/users/10866641/jang"}, "edited": false, "score": 0, "creation_date": 1546599147, "post_id": 54037066, "comment_id": 94910204, "body": "Thank you for the answer! That&#39;s good to know it works in Rust 2018. Well, on Rust 2015, I tried the identical code with yours before, but I found the side-effect of &quot;ns.pop()&quot; and &quot;acc.push(*curr)&quot; are reverted with this code. If there is my misunderstanding, very sorry for that..."}, {"owner": {"reputation": 13, "user_id": 10866641, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1dc86bf8235158e17c810db8485c5ed8?s=128&d=identicon&r=PG&f=1", "display_name": "jang", "link": "https://stackoverflow.com/users/10866641/jang"}, "edited": false, "score": 0, "creation_date": 1546604168, "post_id": 54037066, "comment_id": 94912636, "body": "Oops, never mind! That was my misunderstanding and it actually works. Thanks!"}], "tags": [], "owner": {"reputation": 3054, "user_id": 115030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c74c0974c6cc25c194a2737e2d6747?s=128&d=identicon&r=PG", "display_name": "Anders Kaseorg", "link": "https://stackoverflow.com/users/115030/anders-kaseorg"}, "is_accepted": true, "score": 1, "last_activity_date": 1546598033, "last_edit_date": 1546598033, "creation_date": 1546597529, "answer_id": 54037066, "question_id": 54036921, "link": "https://stackoverflow.com/questions/54036921/modify-specific-value-in-hashmap-object-in-case-ownership-of-its-object-can-be-m/54037066#54037066", "title": "Modify specific value in HashMap object in case ownership of its object can be moved later", "body": "\n\n<p>Your code compiles as written in stable Rust 2018 (or nightly Rust 2015 with <code>#![feature(nll)]</code>).</p>\n\n<p>To make it work on stable Rust 2015, you can move the recursive calls outside of the scope where <code>field</code> is borrowed.  One way to do that is as follows:</p>\n\n<pre class=\"lang-rs prettyprint-override\"><code>pub fn _search(\n    curr: &amp;Vertex&lt;i32&gt;,\n    mut acc: Vec&lt;Vertex&lt;i32&gt;&gt;,\n    mut field: HashMap&lt;Vertex&lt;i32&gt;, Vec&lt;Vertex&lt;i32&gt;&gt;&gt;,\n    goal: &amp;Vertex&lt;i32&gt;,\n) -&gt; Vec&lt;Vertex&lt;i32&gt;&gt; {\n    let v = match field.get_mut(&amp;curr) {\n        // when reached goal\n        _ if *curr == *goal =&gt; {\n            acc.push(*curr);\n            return acc;\n        }\n\n        // when vertices found\n        Some(ns) =&gt; {\n            if let Some(next) = ns.pop() {\n                // go to next depth\n                acc.push(*curr);\n                next\n            } else if let Some(prev) = acc.pop() {\n                // backtrack\n                prev // ditto\n            } else {\n                // no answer\n                return vec![];\n            }\n        }\n\n        // when next is not registered\n        None =&gt; return vec![],\n    };\n    _search(&amp;v, acc, field, goal)\n}\n</code></pre>\n"}], "owner": {"reputation": 13, "user_id": 10866641, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1dc86bf8235158e17c810db8485c5ed8?s=128&d=identicon&r=PG&f=1", "display_name": "jang", "link": "https://stackoverflow.com/users/10866641/jang"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 84, "favorite_count": 0, "accepted_answer_id": 54037066, "answer_count": 1, "score": 1, "last_activity_date": 1546605363, "creation_date": 1546596998, "last_edit_date": 1546605363, "question_id": 54036921, "link": "https://stackoverflow.com/questions/54036921/modify-specific-value-in-hashmap-object-in-case-ownership-of-its-object-can-be-m", "title": "Modify specific value in HashMap object in case ownership of its object can be moved later", "body": "<p>I'm implementing a Depth-First-Search.</p>\n\n<p>Its data structure is implemented with <code>HashMap</code> like \"current node\" -> \"next nodes\".</p>\n\n<p>To avoid loop in cyclic graph, my program tries to remove a node from <code>HashMap</code>s value(<code>Vec</code> of next depth Vertices) when it is stamped.</p>\n\n<p>When manipulating <code>HashMap</code> object's value by <code>get_mut</code>, I noticed that ownership of its whole <code>HashMap</code> object can't be moved later.</p>\n\n<pre><code>#[derive(Debug, PartialEq, Eq, Hash, Copy, Clone)]\npub enum Vertex&lt;A&gt; {\n    Start,\n    Goal,\n    Vertex(A),\n}\n\npub fn search(\n    curr: &amp;Vertex&lt;i32&gt;,\n    mut acc: Vec&lt;Vertex&lt;i32&gt;&gt;,\n    mut field: HashMap&lt;Vertex&lt;i32&gt;, Vec&lt;Vertex&lt;i32&gt;&gt;&gt;,\n    goal: &amp;Vertex&lt;i32&gt;,\n) -&gt; Vec&lt;Vertex&lt;i32&gt;&gt; {\n    match field.get_mut(&amp;curr) {\n        // when reached goal\n        _ if *curr == *goal =&gt; {\n            acc.push(*curr);\n            acc\n        }\n\n        // when vertices found\n        Some(ns) =&gt; {\n            if let Some(next) = ns.pop() {\n                // go to next depth\n                acc.push(*curr);\n                // trying to move \"field\"'s ownership to next recursive call here but it fails because \"field.get_mut(&amp;curr)\" is done at match expression\n                search(&amp;next, acc, field, goal)\n            } else if let Some(prev) = acc.pop() {\n                // backtrack\n                search(&amp;prev, acc, field, goal) // ditto\n            } else {\n                // no answer\n                vec![]\n            }\n        }\n\n        // when next is not registered\n        None =&gt; vec![],\n    }\n}\n</code></pre>\n\n<p>As written in the comment, there is an illegal move in the recursive call.</p>\n\n<p>So I get the following message while compiling.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>18 |     let result: Vec&lt;Vertex&lt;i32&gt;&gt; = match field.get_mut(&amp;curr) {  \n   |                                          ----- borrow of `field` occurs here  \n...  \n29 |                 _search(&amp;next, acc, field, goal) // to be fixed  \n   |                                     ^^^^^ move out of `field` occurs here  \n\nerror[E0505]: cannot move out of `field` because it is borrowed  \n  --&gt; src/algorithm/search/graph/depth_first.rs:31:37  \n   |  \n18 |     let result: Vec&lt;Vertex&lt;i32&gt;&gt; = match field.get_mut(&amp;curr) {  \n   |                                          ----- borrow of `field` occurs here  \n...  \n31 |                 _search(&amp;prev, acc, field, goal) // to be fixed  \n   |                                     ^^^^^ move out of `field` occurs here  \n</code></pre>\n\n<p>Could you suggest a nice way to solve this or redesign the whole code?</p>\n"}, {"tags": ["rust", "integer", "integer-overflow", "unsigned-integer"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1546593268, "post_id": 54035728, "comment_id": 94907221, "body": "Unfortunately the error message doesn&#39;t help you much."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1546605401, "post_id": 54035728, "comment_id": 94913255, "body": "Are you stuck with <code>usize</code>, or could you use <code>isize</code> instead? Or even better, a known bitwidth type like <code>i64</code>?"}, {"owner": {"reputation": 95, "user_id": 10006371, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-MgoBLeEfWnY/AAAAAAAAAAI/AAAAAAAAAAA/AB6qoq1X-kVzrU9is8qtxK3uPuWf2XX-Ag/mo/photo.jpg?sz=128", "display_name": "Excosy S.P.", "link": "https://stackoverflow.com/users/10006371/excosy-s-p"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1546607453, "post_id": 54035728, "comment_id": 94914231, "body": "@MatthieuM. In fact it is index of array, which can only be $usize$"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1546640272, "post_id": 54035728, "comment_id": 94929232, "body": "See also this <a href=\"https://www.reddit.com/r/rust/comments/3mcwf7/adding_unsigned_and_signed_integers/\" rel=\"nofollow noreferrer\">discussion on Reddit</a>."}], "answers": [{"comments": [{"owner": {"reputation": 95, "user_id": 10006371, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-MgoBLeEfWnY/AAAAAAAAAAI/AAAAAAAAAAA/AB6qoq1X-kVzrU9is8qtxK3uPuWf2XX-Ag/mo/photo.jpg?sz=128", "display_name": "Excosy S.P.", "link": "https://stackoverflow.com/users/10006371/excosy-s-p"}, "edited": false, "score": 0, "creation_date": 1546597078, "post_id": 54035801, "comment_id": 94909102, "body": "It seems like the cost of conditional jump is larger than implicit cast. Adding after numeric cast only need to ignore OF bit."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 95, "user_id": 10006371, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-MgoBLeEfWnY/AAAAAAAAAAI/AAAAAAAAAAA/AB6qoq1X-kVzrU9is8qtxK3uPuWf2XX-Ag/mo/photo.jpg?sz=128", "display_name": "Excosy S.P.", "link": "https://stackoverflow.com/users/10006371/excosy-s-p"}, "edited": false, "score": 0, "creation_date": 1546597221, "post_id": 54035801, "comment_id": 94909180, "body": "@ExcosyS.P. The checked operations have a (very slight) cost. However, as far as I know, the explicit cast is not slower than an implicit cast. There is the same cast in both the cases."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 95, "user_id": 10006371, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-MgoBLeEfWnY/AAAAAAAAAAI/AAAAAAAAAAA/AB6qoq1X-kVzrU9is8qtxK3uPuWf2XX-Ag/mo/photo.jpg?sz=128", "display_name": "Excosy S.P.", "link": "https://stackoverflow.com/users/10006371/excosy-s-p"}, "edited": false, "score": 0, "creation_date": 1546597538, "post_id": 54035801, "comment_id": 94909341, "body": "Maybe I didn&#39;t understood your question: is your number always negative?"}, {"owner": {"reputation": 95, "user_id": 10006371, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-MgoBLeEfWnY/AAAAAAAAAAI/AAAAAAAAAAA/AB6qoq1X-kVzrU9is8qtxK3uPuWf2XX-Ag/mo/photo.jpg?sz=128", "display_name": "Excosy S.P.", "link": "https://stackoverflow.com/users/10006371/excosy-s-p"}, "edited": false, "score": 0, "creation_date": 1546597805, "post_id": 54035801, "comment_id": 94909478, "body": "Thanks a lot. Moreover, what I wonder is why not support implicit numeric cast in rust."}, {"owner": {"reputation": 95, "user_id": 10006371, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-MgoBLeEfWnY/AAAAAAAAAAI/AAAAAAAAAAA/AB6qoq1X-kVzrU9is8qtxK3uPuWf2XX-Ag/mo/photo.jpg?sz=128", "display_name": "Excosy S.P.", "link": "https://stackoverflow.com/users/10006371/excosy-s-p"}, "edited": false, "score": 0, "creation_date": 1546597921, "post_id": 54035801, "comment_id": 94909549, "body": "Nope, the number may be negative, its type is i32."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 95, "user_id": 10006371, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-MgoBLeEfWnY/AAAAAAAAAAI/AAAAAAAAAAA/AB6qoq1X-kVzrU9is8qtxK3uPuWf2XX-Ag/mo/photo.jpg?sz=128", "display_name": "Excosy S.P.", "link": "https://stackoverflow.com/users/10006371/excosy-s-p"}, "edited": false, "score": 1, "creation_date": 1546599026, "post_id": 54035801, "comment_id": 94910156, "body": "@ExcosyS.P. An implicit numeric cast is dangerous, because you may have an unexpected result: what if the compiler silently casts a negative i32 to an usize with <a href=\"https://en.wikipedia.org/wiki/Two%27s_complement\" rel=\"nofollow noreferrer\">two&#39;s complement</a>? The result would be more likely unexpected."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1546616309, "post_id": 54035801, "comment_id": 94919066, "body": "I believe you can get rid of the awkward <code>min_value</code> comparison by instead writing <code>if i.is_negative() { u - i.wrapping_abs() as u32 as usize } else { u + i as usize }</code>. <code>wrapping_abs</code> returns <code>i32::min_value()</code> instead of panicking and <code>as u32 as usize</code> inhibits the sign extension that would be performed if you just did <code>as usize</code>."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1546619620, "post_id": 54035801, "comment_id": 94920967, "body": "@trentcl Thanks for the tip. I have just the concern that it expresses less clearly the logic."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1546633621, "post_id": 54035801, "comment_id": 94926697, "body": "&quot;Adding after numeric cast only need to ignore OF bit.&quot; This is only true if you add two signed numbers, and the carry flag only works for two unsigned numbers. To my knowledge, adding a signed and a unsigned number while correctly detecting overflows can&#39;t be done in a single machine code add instruction (at least on x86, which is the only architecture i&#39;m somewhat familiar with, though my knowledge is a bit dated)."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 4, "last_activity_date": 1546619580, "last_edit_date": 1546619580, "creation_date": 1546592493, "answer_id": 54035801, "question_id": 54035728, "link": "https://stackoverflow.com/questions/54035728/how-to-add-a-negative-i32-number-to-an-usize-variable/54035801#54035801", "title": "how to add a negative i32 number to an usize variable?", "body": "<p>Your attempt does not work because in Rust, you can only do operations between strictly similar types. Rust does not do <strong>any</strong> implicit numeric cast because it would be a shoot in the foot as you can see below: you have a special case and several ways to have an overflow.</p>\n\n<p>One way to go is to cast the absolute value of the <code>i32</code> to <code>usize</code> and add or remove it according to whether it is negative or positive. However, you must handle the special case of the minimal value that overflows when you take its absolute value:</p>\n\n<pre><code>fn add(u: usize, i: i32) -&gt; usize {\n    if i.is_negative() {\n        u - i.wrapping_abs() as u32 as usize\n    } else {\n        u + i as usize\n    }\n}\n\nfn main() {\n    let u = 7;\n    let i1 = -1;\n    let i2 = 1;\n    let min = -2_147_483_648;\n\n    assert_eq!(add(u, i1), 6);\n    assert_eq!(add(u, i2), 8);\n    assert_eq!(add(3_000_000_000, min), 852_516_352);\n}\n</code></pre>\n\n<p>You may also verify the overflows:</p>\n\n<pre><code>fn add(u: usize, i: i32) -&gt; Option&lt;usize&gt; {\n    if i.is_negative() {\n        u.checked_sub(i.wrapping_abs() as u32 as usize)\n    } else {\n        u.checked_add(i as usize)\n    }\n}\n\nfn main() {\n    let u = 7;\n    let i1 = -1;\n    let i2 = 1;\n\n    assert_eq!(add(u, i1), Some(6));\n    assert_eq!(add(u, i2), Some(8));\n    assert_eq!(add(0, -1), None);\n}\n</code></pre>\n"}], "owner": {"reputation": 95, "user_id": 10006371, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-MgoBLeEfWnY/AAAAAAAAAAI/AAAAAAAAAAA/AB6qoq1X-kVzrU9is8qtxK3uPuWf2XX-Ag/mo/photo.jpg?sz=128", "display_name": "Excosy S.P.", "link": "https://stackoverflow.com/users/10006371/excosy-s-p"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2690, "favorite_count": 0, "accepted_answer_id": 54035801, "answer_count": 1, "score": 8, "last_activity_date": 1546619580, "creation_date": 1546592189, "last_edit_date": 1546593279, "question_id": 54035728, "link": "https://stackoverflow.com/questions/54035728/how-to-add-a-negative-i32-number-to-an-usize-variable", "title": "how to add a negative i32 number to an usize variable?", "body": "<p>Such as:</p>\n\n<pre><code>let mut a : usize = 0xFF;\na += -1;  // -1 may be from other variable, so there can't be a -= 1;\nprintln!(\"{}\", a);\n</code></pre>\n\n<p>The output is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `usize: std::ops::Neg` is not satisfied\n</code></pre>\n\n<p>anyway?</p>\n"}, {"tags": ["rust", "associated-const"], "comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 1, "creation_date": 1546589175, "post_id": 54034747, "comment_id": 94905584, "body": "Related: <a href=\"https://github.com/rust-lang/rfcs/pull/2342\" rel=\"nofollow noreferrer\">github.com/rust-lang/rfcs/pull/2342</a>"}], "answers": [{"comments": [{"owner": {"reputation": 8075, "user_id": 2169853, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/68b89009f4066d3e1adbe72d4329c8d3?s=128&d=identicon&r=PG", "display_name": "Jens", "link": "https://stackoverflow.com/users/2169853/jens"}, "edited": false, "score": 0, "creation_date": 1546614618, "post_id": 54036646, "comment_id": 94918036, "body": "A <code>const fn</code> with an if-expression gives a better error message: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=156bb6f19dc28b5f554c2df2d24fcd67\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>. However, functions without ifs are not very usefull... The class of functions that can be represented without conditions is rather small."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 8075, "user_id": 2169853, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/68b89009f4066d3e1adbe72d4329c8d3?s=128&d=identicon&r=PG", "display_name": "Jens", "link": "https://stackoverflow.com/users/2169853/jens"}, "edited": false, "score": 6, "creation_date": 1546614829, "post_id": 54036646, "comment_id": 94918152, "body": "@Jens A slightly more general hack is to use <code>[expr1, expr2][condition as usize]</code> to select between two const expressions based on a condition."}], "tags": [], "owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "is_accepted": true, "score": 5, "last_activity_date": 1546595928, "creation_date": 1546595928, "answer_id": 54036646, "question_id": 54034747, "link": "https://stackoverflow.com/questions/54034747/associated-constants-in-condition-of-constant-%c3%acf-expression/54036646#54036646", "title": "Associated constants in condition of constant &#236;f`-expression", "body": "<p>As far as I know, <code>if</code> and others are not (yet) supported in <code>const</code> contexts.</p>\n\n<p>However, often you can acchieve a similar effect along the lines of the following:</p>\n\n<pre><code>trait C {\n    const c: i32;        \n}\n\ntrait StaticAssert&lt;T1:C, T2:C&gt; {\n    const canUseAssociatedConst: i32 = T1::c;\n    const canCompareAssociatedConst: bool = T1::c == T2::c;\n\n    const check: i32 = (T1::c == T2::c) as i32;\n}\n</code></pre>\n"}], "owner": {"reputation": 8075, "user_id": 2169853, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/68b89009f4066d3e1adbe72d4329c8d3?s=128&d=identicon&r=PG", "display_name": "Jens", "link": "https://stackoverflow.com/users/2169853/jens"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 162, "favorite_count": 1, "accepted_answer_id": 54036646, "answer_count": 1, "score": 5, "last_activity_date": 1546793633, "creation_date": 1546587209, "last_edit_date": 1546793633, "question_id": 54034747, "link": "https://stackoverflow.com/questions/54034747/associated-constants-in-condition-of-constant-%c3%acf-expression", "title": "Associated constants in condition of constant &#236;f`-expression", "body": "<p>I am trying to use associated constants as a condition in an <code>if</code>-expression to initialize another constant. I think that this should work, as I can use the associated constants directly to initialize some other constant, so it is applicable in a const context and the if expression does not depend on any other values.</p>\n\n<pre><code>trait C {\n    const c: i32;\n}\n\ntrait StaticAssert&lt;T1: C, T2: C&gt; {\n    const canUseAssociatedConst: i32 = T1::c;\n    const canCompareAssociatedConst: bool = T1::c == T2::c;\n\n    const check: i32 = if T1::c == T2::c { 1 } else { 0 };\n}\n</code></pre>\n\n<p>When I compile this, I get an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0019]: constant contains unimplemented expression type\n --&gt; src/lib.rs:9:24\n  |\n9 |     const check: i32 = if T1::c == T2::c { 1 } else { 0 };\n  |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>I am not sure what the compiler wants to tell me. I've added <code>i32</code> suffixes to enforce that the literals are actually <code>i32</code> values to prevent any issues from different types in the branches, but this did not help either.</p>\n"}, {"tags": ["hash", "rust"], "answers": [{"tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 3, "last_activity_date": 1546793390, "last_edit_date": 1546793390, "creation_date": 1546593046, "answer_id": 54035909, "question_id": 54034727, "link": "https://stackoverflow.com/questions/54034727/why-are-the-results-of-hash-and-hasher-write-not-the-same/54035909#54035909", "title": "Why are the results of hash() and hasher.write() not the same?", "body": "<p>As <a href=\"https://doc.rust-lang.org/std/collections/hash_map/struct.DefaultHasher.html\" rel=\"nofollow noreferrer\">the documentation</a> says:</p>\n\n<blockquote>\n  <p>The default <a href=\"https://doc.rust-lang.org/std/hash/trait.Hasher.html\" rel=\"nofollow noreferrer\"><code>Hasher</code></a> used by <a href=\"https://doc.rust-lang.org/std/collections/hash_map/struct.RandomState.html\" rel=\"nofollow noreferrer\"><code>RandomState</code></a>. The internal algorithm is not specified, and so it and its hashes should not be relied upon over releases.</p>\n</blockquote>\n\n<p>If we follow <a href=\"https://doc.rust-lang.org/std/collections/hash_map/struct.RandomState.html\" rel=\"nofollow noreferrer\"><code>RandomState</code></a>...</p>\n\n<blockquote>\n  <p>A particular instance <code>RandomState</code> will create the same instances of <a href=\"https://doc.rust-lang.org/std/hash/trait.Hasher.html\" rel=\"nofollow noreferrer\"><code>Hasher</code></a>, but the hashers created by two different <code>RandomState</code> instances are unlikely to produce the same result for the same values.</p>\n</blockquote>\n\n<p><a href=\"https://doc.rust-lang.org/std/collections/struct.HashMap.html\" rel=\"nofollow noreferrer\">Rationale</a>:</p>\n\n<blockquote>\n  <p>By default, <code>HashMap</code> uses a hashing algorithm selected to provide resistance against HashDoS attacks. The algorithm is randomly seeded, and a reasonable best-effort is made to generate this seed from a high quality, secure source of randomness provided by the host without blocking the program. Because of this, the randomness of the seed depends on the output quality of the system's random number generator when the seed is created. In particular, seeds generated when the system's entropy pool is abnormally low such as during system boot may be of a lower quality.</p>\n</blockquote>\n\n<hr>\n\n<p>I dug into it a little bit and there is no requirement that <a href=\"https://doc.rust-lang.org/std/hash/trait.Hash.html#tymethod.hash\" rel=\"nofollow noreferrer\"><code>hash()</code></a> and <a href=\"https://doc.rust-lang.org/std/hash/trait.Hasher.html#tymethod.write\" rel=\"nofollow noreferrer\"><code>write()</code></a> share the same behavior.</p>\n\n<p>The only requirement is that <a href=\"https://doc.rust-lang.org/std/hash/trait.Hash.html#hash-and-eq\" rel=\"nofollow noreferrer\"><code>k1 == k2 -&gt; hash(k1) == hash(k2)</code></a> for the <code>Hash</code> trait. The <code>Hasher</code> trait has the same property, but there is no requirement that <code>k1 -&gt; hash(k1) == hasher(k1)</code>.</p>\n\n<p>That makes sense as the <code>Hash</code> trait is intended to be implemented by the user, and they can implement it as they like. For example, one could want to add <a href=\"https://en.wikipedia.org/wiki/Salt_(cryptography)\" rel=\"nofollow noreferrer\">salt</a> into the hash.</p>\n\n<p>Here is a minimal complete and not verifiable example, that could produce either the same output or different output, depending on the implementation:</p>\n\n<pre><code>use std::collections::hash_map::{DefaultHasher, RandomState};\nuse std::hash::{BuildHasher, Hasher, Hash};\n\nfn main() {\n    let s = RandomState::new();\n\n    let mut hasher = s.build_hasher();\n    b\"Cool\".hash(&amp;mut hasher);\n    println!(\"Hash is {:x}\", hasher.finish());\n\n    let mut hasher = s.build_hasher();\n    hasher.write(b\"Cool\");\n    println!(\"Hash is {:x}\", hasher.finish());\n\n    let s = DefaultHasher::new();\n\n    let mut hasher = s.clone();\n    b\"Cool\".hash(&amp;mut hasher);\n    println!(\"Hash is {:x}\", hasher.finish());\n\n    let mut hasher = s.clone();\n    hasher.write(b\"Cool\");\n    println!(\"Hash is {:x}\", hasher.finish());\n}\n</code></pre>\n\n<hr>\n\n<p>You can <a href=\"https://doc.rust-lang.org/src/core/hash/mod.rs.html#662\" rel=\"nofollow noreferrer\">see</a> that the implementation of <code>Hash</code> for a slice also writes the length of the slice:</p>\n\n<pre><code>#[stable(feature = \"rust1\", since = \"1.0.0\")]\nimpl&lt;T: Hash&gt; Hash for [T] {\n    fn hash&lt;H: Hasher&gt;(&amp;self, state: &amp;mut H) {\n        self.len().hash(state);\n        Hash::hash_slice(self, state)\n    }\n}\n</code></pre>\n\n<p>Also, it looks like <a href=\"https://doc.rust-lang.org/src/core/hash/mod.rs.html#570\" rel=\"nofollow noreferrer\"><code>hash_slice()</code></a> has the behavior you want, but it's not stated that it would always be the case (but I think this is the intended behavior and that will not change, I asked <a href=\"https://github.com/rust-lang/rfcs/pull/823#issuecomment-451415774\" rel=\"nofollow noreferrer\">here</a>).</p>\n\n<pre><code>use std::collections::hash_map::DefaultHasher;\nuse std::hash::Hasher;\n\nfn main() {\n    let s = DefaultHasher::new();\n\n    let mut hasher = s.clone();\n    std::hash::Hash::hash_slice(b\"Cool\", &amp;mut hasher);\n    println!(\"Hash is {:x}\", hasher.finish());\n\n    let mut hasher = s.clone();\n    hasher.write(b\"Cool\");\n    println!(\"Hash is {:x}\", hasher.finish());\n}\n</code></pre>\n"}], "owner": {"reputation": 1289, "user_id": 1330706, "user_type": "registered", "profile_image": "https://graph.facebook.com/859896960751961/picture?type=large", "display_name": "mug896", "link": "https://stackoverflow.com/users/1330706/mug896"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 489, "favorite_count": 0, "accepted_answer_id": 54035909, "answer_count": 1, "score": 4, "last_activity_date": 1546865000, "creation_date": 1546587088, "last_edit_date": 1546865000, "question_id": 54034727, "link": "https://stackoverflow.com/questions/54034727/why-are-the-results-of-hash-and-hasher-write-not-the-same", "title": "Why are the results of hash() and hasher.write() not the same?", "body": "<p>A number like <code>1234</code> has the same results if I use either <code>hash()</code> or <code>hasher.write()</code> functions, but a byte slice like <code>b\"Cool\"</code> does not. I think it should be the same; why is it not?</p>\n\n<pre><code>use std::collections::hash_map::DefaultHasher;\nuse std::hash::{Hash, Hasher};\nuse std::mem;\n\nfn main() {\n    let mut hasher = DefaultHasher::new();\n    1234.hash(&amp;mut hasher);\n    println!(\"Hash is {:x}\", hasher.finish());\n\n    let mut hasher = DefaultHasher::new();\n    hasher.write(unsafe { &amp;mem::transmute::&lt;i32, [u8; 4]&gt;(1234) });\n    println!(\"Hash is {:x}\", hasher.finish());\n\n    let mut hasher = DefaultHasher::new();\n    b\"Cool\".hash(&amp;mut hasher);\n    println!(\"Hash is {:x}\", hasher.finish());\n\n    let mut hasher = DefaultHasher::new();\n    hasher.write(b\"Cool\");\n    println!(\"Hash is {:x}\", hasher.finish());\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>Hash is 702c1e2053bd76\nHash is 702c1e2053bd76\nHash is 9bf15988582e5a3f\nHash is 7fe67a564a06876a\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 3054, "user_id": 115030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c74c0974c6cc25c194a2737e2d6747?s=128&d=identicon&r=PG", "display_name": "Anders Kaseorg", "link": "https://stackoverflow.com/users/115030/anders-kaseorg"}, "edited": false, "score": 0, "creation_date": 1546581012, "post_id": 54032940, "comment_id": 94903174, "body": "This is a slightly different question. Here the compiler could ideally deduce that the <code>impl Meow</code> returned by <code>one</code> must be the same as the <code>impl Meow</code> returned by <code>two</code>, whatever it is, in which case the two <code>if</code> branches would unify. It just doesn\u2019t, today."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 3054, "user_id": 115030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c74c0974c6cc25c194a2737e2d6747?s=128&d=identicon&r=PG", "display_name": "Anders Kaseorg", "link": "https://stackoverflow.com/users/115030/anders-kaseorg"}, "edited": false, "score": 0, "creation_date": 1546591896, "post_id": 54032940, "comment_id": 94906693, "body": "@AndersKaseorg while the question might be different, the answer is still the same as in the duplicate"}, {"owner": {"reputation": 3054, "user_id": 115030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c74c0974c6cc25c194a2737e2d6747?s=128&d=identicon&r=PG", "display_name": "Anders Kaseorg", "link": "https://stackoverflow.com/users/115030/anders-kaseorg"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1546596456, "post_id": 54032940, "comment_id": 94908753, "body": "@hellow I disagree. I thought so too at first, but then I looked more carefully at this question and came up with <a href=\"https://stackoverflow.com/questions/54032940/using-impl-trait-in-a-recursive-function/54033740#54033740\">my answer</a>, which is specific to this recursion pattern and does not require a trait object."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "reply_to_user": {"reputation": 3054, "user_id": 115030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c74c0974c6cc25c194a2737e2d6747?s=128&d=identicon&r=PG", "display_name": "Anders Kaseorg", "link": "https://stackoverflow.com/users/115030/anders-kaseorg"}, "edited": false, "score": 1, "creation_date": 1546603133, "post_id": 54032940, "comment_id": 94912167, "body": "I agree with @AndersKaseorg, while the workaround in the linked answer also solves this issue, the reason why this fail is somewhat different: in the linked answer there are two different types that both implement the trait; in this question however there is only one type that implements the trait, and a smarter compiler could just accept it."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1546608187, "post_id": 54032940, "comment_id": 94914548, "body": "@rodrigo: From the language point of view, the two types are different though, because the implementation of a function should never affect the correctness of the caller, only its signature."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1546609413, "post_id": 54032940, "comment_id": 94915155, "body": "@MatthieuM.: Hmmm, yes, that&#39;s true if the caller and the callee are different functions. But what about a recursive function, can it use its own implementation when checking the recursive call? Maybe there are theoretical reasons not to do that, but I don&#39;t see any practical drawback."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1546610470, "post_id": 54032940, "comment_id": 94915697, "body": "@rodrigo: I think the recursive case may not have been considered at all; however, is it worth special-casing? And if you do special-case it, should you also special-case co-recursive cases? Or since recursion is just another form of iteration, do we simply say &quot;just use iteration&quot;? Choices, choices."}], "answers": [{"comments": [{"owner": {"reputation": 3054, "user_id": 115030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c74c0974c6cc25c194a2737e2d6747?s=128&d=identicon&r=PG", "display_name": "Anders Kaseorg", "link": "https://stackoverflow.com/users/115030/anders-kaseorg"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1546606918, "post_id": 54033740, "comment_id": 94913967, "body": "@MatthieuM. Your comment is not relevant to my answer. There is no <code>dyn Trait</code> involved here at all. This is entirely about working around a type unification problem between types that really are the same. (This is <i>not</i> like the other question where the types appear to be the same but aren\u2019t!) If the compiler performed the unification correctly, it would still be zero-overhead. Did you read this carefully before marking it as a duplicate?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1546608229, "post_id": 54033740, "comment_id": 94914573, "body": "I agree with @Matthieu; the opacity of the type is the whole point. There are infinitely many things that a sufficiently smart compiler could do for you, but de-opacifying an opaque type is something it&#39;s not <i>meant</i> to do (along the same lines as full program type inference)."}, {"owner": {"reputation": 3054, "user_id": 115030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c74c0974c6cc25c194a2737e2d6747?s=128&d=identicon&r=PG", "display_name": "Anders Kaseorg", "link": "https://stackoverflow.com/users/115030/anders-kaseorg"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1546608454, "post_id": 54033740, "comment_id": 94914687, "body": "@trentcl Can we just get a few things out of the way: I fully understand that <code>impl Trait</code> is opaque, and that <code>dyn Trait</code> has run-time overhead (even though <code>dyn Trait</code> has nothing to do with this question). I am not proposing that the compiler should de-opacify <code>impl Meow</code> everywhere. That would be a total catastrophe for the abstraction barrier that <code>impl Meow</code> is meanat to enforce. Okay? We agree on all of that. But <i>here</i>, because we\u2019re dealing with recursion, we\u2019re supposed to be <i>inside</i> that abstraction barrier. We ought to be able to unify our own return type with our own return type!"}, {"owner": {"reputation": 3054, "user_id": 115030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c74c0974c6cc25c194a2737e2d6747?s=128&d=identicon&r=PG", "display_name": "Anders Kaseorg", "link": "https://stackoverflow.com/users/115030/anders-kaseorg"}, "edited": false, "score": 0, "creation_date": 1546608517, "post_id": 54033740, "comment_id": 94914727, "body": "Now you can agree or disagree that the language should be extended in that way. Fine. But can we at least acknowledge that this is a different question than the generic questions about <code>impl Trait</code> opacity and <code>impl Trait</code> being different from <code>dyn Trait</code>?"}], "tags": [], "owner": {"reputation": 3054, "user_id": 115030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c74c0974c6cc25c194a2737e2d6747?s=128&d=identicon&r=PG", "display_name": "Anders Kaseorg", "link": "https://stackoverflow.com/users/115030/anders-kaseorg"}, "is_accepted": false, "score": 4, "last_activity_date": 1546617973, "last_edit_date": 1546617973, "creation_date": 1546581557, "answer_id": 54033740, "question_id": 54032940, "link": "https://stackoverflow.com/questions/54032940/using-impl-trait-in-a-recursive-function/54033740#54033740", "title": "Using impl Trait in a recursive function", "body": "<p>I think an ideal compiler would accept your code, but the current language doesn\u2019t allow for the recursive reasoning that would be needed to figure out that the types are actually the same in this case.  You can work around this missing feature by abstracting over the <code>impl Meow</code> type with a type variable:</p>\n\n<pre><code>fn one_template&lt;T: Meow&gt;(gate: bool, two: impl FnOnce() -&gt; T) -&gt; T {\n    if gate {\n        one_template(false, two)\n    } else {\n        two()\n    }\n}\n\nfn one(gate: bool) -&gt; impl Meow {\n    one_template(gate, two)\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ed48ebdd70ede88cab9271e609c33c51\" rel=\"nofollow noreferrer\">Rust playground link</a></p>\n"}, {"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 5, "last_activity_date": 1546793792, "last_edit_date": 1592644375, "creation_date": 1546618364, "answer_id": 54042531, "question_id": 54032940, "link": "https://stackoverflow.com/questions/54032940/using-impl-trait-in-a-recursive-function/54042531#54042531", "title": "Using impl Trait in a recursive function", "body": "<p><em>Disclaimer: this answer assumes that the reader understands that <code>-&gt; impl Trait</code> requires a single type to be returned; see <a href=\"https://stackoverflow.com/questions/52001592/why-can-impl-trait-not-be-used-to-return-multiple-conditional-types\">this question for returning different types</a>.</em></p>\n<hr />\n<h3>Opacity</h3>\n<p>One of the core principles of Rust is that type-checking is entirely driven by the <em>interface</em> of functions, types, etc... and the implementation is ignored.</p>\n<p>With regard to <code>-&gt; impl Trait</code> functionality, this manifests by the language treating each <code>-&gt; impl Trait</code> as an opaque type, solely identified by the function it comes from.</p>\n<p>As a result, you can call the same function twice:</p>\n<pre><code>use std::fmt::Debug;\n\nfn cat(name: &amp;str) -&gt; impl Debug { format!(&quot;Meow {}&quot;, name) }\n\nfn meow(g: bool) -&gt; impl Debug {\n    if g {\n        cat(&quot;Mario&quot;)\n    } else {\n        cat(&quot;Luigi&quot;)\n    }\n}\n\nfn main() {\n    println!(&quot;{:?}&quot;, meow(true));\n}\n</code></pre>\n<p>But you cannot call different functions, even when they return the same type, if at least one is hidden behind <code>-&gt; impl Trait</code>:</p>\n<pre><code>use std::fmt::Debug;\n\nfn mario() -&gt; impl Debug { &quot;Meow Mario&quot; }\n\nfn luigi() -&gt; &amp;'static str { &quot;Meow Luigi&quot; }\n\nfn meow(g: bool) -&gt; impl Debug {\n    if g {\n        mario()\n    } else {\n        luigi()\n    }\n}\n\nfn main() {\n    println!(&quot;{:?}&quot;, meow(true));\n}\n</code></pre>\n<p>Yields:</p>\n<blockquote>\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: if and else have incompatible types\n  --&gt; src/main.rs:8:9\n   |\n8  | /         if g {\n9  | |             mario()\n10 | |         } else {\n11 | |             luigi()\n12 | |         }\n   | |_________^ expected opaque type, found &amp;str\n   |\n   = note: expected type `impl std::fmt::Debug`\n              found type `&amp;str`\n</code></pre>\n</blockquote>\n<p>And with two hidden behind <code>-&gt; impl Trait</code>:</p>\n<pre><code>use std::fmt::Debug;\n\nfn mario() -&gt; impl Debug { &quot;Meow Mario&quot; }\n\nfn luigi() -&gt; impl Debug { &quot;Meow Luigi&quot; }\n\nfn meow(g: bool) -&gt; impl Debug {\n    if g {\n        mario()\n    } else {\n        luigi()\n    }\n}\n\nfn main() {\n    println!(&quot;{:?}&quot;, meow(true));\n}\n</code></pre>\n<p>Yields the same error message than you got:</p>\n<blockquote>\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: if and else have incompatible types\n  --&gt; src/main.rs:8:5\n   |\n8  | /     if g {\n9  | |         mario()\n10 | |     } else {\n11 | |         luigi()\n12 | |     }\n   | |_____^ expected opaque type, found a different opaque type\n   |\n   = note: expected type `impl std::fmt::Debug` (opaque type)\n              found type `impl std::fmt::Debug` (opaque type)\n</code></pre>\n</blockquote>\n<hr />\n<h3>Interaction with Recursion</h3>\n<p>None.</p>\n<p>The language does not special-case recursion here, and therefore does not realize that, in the case presented in the question, there is only ever one type involved. Instead, it notices <code>fn one(...) -&gt; impl Meow</code> and <code>fn two(...) -&gt; impl Meow</code> and concludes that those are different opaque types and therefore compile-time unification is impossible.</p>\n<p><em>It may be reasonable to submit a RFC to tweak this aspect, either by arguing on the point of view of recursion, or by arguing on the point of view of module-level visibility; this is beyond the scope of this answer.</em></p>\n<hr />\n<h3>Work around</h3>\n<p>The only possibility is to ensure that the type is <em>unique</em>, and this requires <em>naming</em> it. Once you have captured the type in a name, you can consistently apply it everywhere it needs to match.</p>\n<p>I'll refer you to <a href=\"https://stackoverflow.com/a/54033740/147192\">@Anders' answer</a> for his clever work-around.</p>\n"}], "owner": {"reputation": 1226, "user_id": 4706114, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MsRfU.jpg?s=128&g=1", "display_name": "paulhauner", "link": "https://stackoverflow.com/users/4706114/paulhauner"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 752, "favorite_count": 0, "accepted_answer_id": 54042531, "answer_count": 2, "score": 3, "last_activity_date": 1546793792, "creation_date": 1546574317, "last_edit_date": 1546599521, "question_id": 54032940, "link": "https://stackoverflow.com/questions/54032940/using-impl-trait-in-a-recursive-function", "title": "Using impl Trait in a recursive function", "body": "<p>I've been experimenting with <code>impl Trait</code> and I came across this error when building a recursive function:</p>\n\n<pre><code>error[E0308]: if and else have incompatible types\n  --&gt; src/main.rs:16:5\n   |\n16 | /     if logic {\n17 | |         one(false)\n18 | |     } else {\n19 | |         two()\n20 | |     }\n   | |_____^ expected opaque type, found a different opaque type\n   |\n   = note: expected type `impl Meow` (opaque type)\n              found type `impl Meow` (opaque type)\n</code></pre>\n\n<p>Here's the code to reproduce (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=f574ada5072d25638b572e3e9e1c96a3\" rel=\"nofollow noreferrer\">Rust playground link</a>):</p>\n\n<pre><code>trait Meow {\n    fn meow();\n}\n\nstruct Cat(u64);\n\nimpl Meow for Cat {\n    fn meow() {}\n}\n\nfn one(gate: bool) -&gt; impl Meow {\n    if gate {\n        one(false)\n    } else {\n        two()\n    }\n}\n\nfn two() -&gt; impl Meow {\n    Cat(42)\n}\n\nfn main() {\n    let _ = one(true);\n}\n</code></pre>\n\n<p>I haven't been able to find documentation about this particular issue and I find it odd that the compiler returns an error that roughly says \"these two identical things are different\".</p>\n\n<p>Is there a way I can support the <code>impl Trait</code> syntax whilst doing this kind of recusion, please?</p>\n"}, {"tags": ["docker", "rust"], "answers": [{"comments": [{"owner": {"reputation": 117, "user_id": 5266647, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qK2XT.jpg?s=128&g=1", "display_name": "Yazanator", "link": "https://stackoverflow.com/users/5266647/yazanator"}, "edited": false, "score": 0, "creation_date": 1546611737, "post_id": 54034078, "comment_id": 94916374, "body": "Thanks, will try this now!"}, {"owner": {"reputation": 117, "user_id": 5266647, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qK2XT.jpg?s=128&g=1", "display_name": "Yazanator", "link": "https://stackoverflow.com/users/5266647/yazanator"}, "edited": false, "score": 0, "creation_date": 1546613532, "post_id": 54034078, "comment_id": 94917396, "body": "Looks like still showing the same error after adding it to my Dockerfile. I&#39;ll try to compile it manually sans Dockerfile in case Docker is doing something weird."}, {"owner": {"reputation": 117, "user_id": 5266647, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qK2XT.jpg?s=128&g=1", "display_name": "Yazanator", "link": "https://stackoverflow.com/users/5266647/yazanator"}, "edited": false, "score": 0, "creation_date": 1546641744, "post_id": 54034078, "comment_id": 94929708, "body": "Didn&#39;t work for me in the Dockerfile, but did so without Docker. I believe something in Running it from Docker causes this bug, will try to find a fix."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 117, "user_id": 5266647, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qK2XT.jpg?s=128&g=1", "display_name": "Yazanator", "link": "https://stackoverflow.com/users/5266647/yazanator"}, "edited": false, "score": 0, "creation_date": 1546648493, "post_id": 54034078, "comment_id": 94931180, "body": "@Yazanator sorry I don&#39;t use docker so I can&#39;t help much about this, if this answer doesn&#39;t answer you don&#39;t accept it."}, {"owner": {"reputation": 117, "user_id": 5266647, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qK2XT.jpg?s=128&g=1", "display_name": "Yazanator", "link": "https://stackoverflow.com/users/5266647/yazanator"}, "edited": false, "score": 0, "creation_date": 1546712415, "post_id": 54034078, "comment_id": 94943823, "body": "gotcha, I posted a solution I found a few hours back. Thanks for your help!"}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": false, "score": 3, "last_activity_date": 1546798194, "last_edit_date": 1592644375, "creation_date": 1546583617, "answer_id": 54034078, "question_id": 54029117, "link": "https://stackoverflow.com/questions/54029117/why-is-the-target-environment-variable-reset-when-compiling-a-rust-program-in-a/54034078#54034078", "title": "Why is the TARGET environment variable reset when compiling a Rust program in a Dockerfile?", "body": "<p><a href=\"https://doc.rust-lang.org/cargo/reference/environment-variables.html#environment-variables-cargo-reads\" rel=\"nofollow noreferrer\"><code>TARGET</code></a> isn't used by Cargo. Cargo can be configured by environment variables as follows:</p>\n<blockquote>\n<p>Cargo can also be configured through environment variables in addition to the TOML syntax above. For each configuration key above of the form <code>foo.bar</code> the environment variable <code>CARGO_FOO_BAR</code> can also be used to define the value. For example the <code>build.jobs</code> key can also be defined by <code>CARGO_BUILD_JOBS</code>.</p>\n</blockquote>\n<p><a href=\"https://doc.rust-lang.org/cargo/reference/config.html#environment-variables\" rel=\"nofollow noreferrer\">Source</a></p>\n<p>You are confused by an environment variable that Cargo <strong>set</strong> for your build script:</p>\n<blockquote>\n<p>Cargo sets several environment variables when build scripts are run. Because these variables are not yet set when the build script is compiled, the above example using <code>env!</code> won't work and instead you'll need to retrieve the values when the build script is run:</p>\n<p><code>TARGET</code> - the target triple that is being compiled for. Native code should be compiled for this triple. Some more information about target triples can be found in clang\u2019s own documentation.</p>\n</blockquote>\n<p><a href=\"https://doc.rust-lang.org/cargo/reference/environment-variables.html#environment-variables-cargo-sets-for-build-scripts\" rel=\"nofollow noreferrer\">Source</a></p>\n<p>To fix your docker script do:</p>\n<pre class=\"lang-none prettyprint-override\"><code>ENV CARGO_BUILD_TARGET=arm-unknown-linux-gnueabihf\n</code></pre>\n<p>See:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/49453571/how-can-i-set-default-build-target-for-cargo\">How can I set default build target for Cargo?</a></li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 741, "user_id": 6508416, "user_type": "registered", "accept_rate": 32, "profile_image": "https://www.gravatar.com/avatar/0da08e7bd83d68673bf85397cf880021?s=128&d=identicon&r=PG&f=1", "display_name": "Hsn", "link": "https://stackoverflow.com/users/6508416/hsn"}, "edited": false, "score": 0, "creation_date": 1556637019, "post_id": 54054893, "comment_id": 98501407, "body": "It doesnt work and giving an error... error[E0658]: use of unstable library feature &#39;duration_as_u128&#39; (see issue #50202)   --&gt; ethcore/src/engines/clique/mod.rs:342:75"}, {"owner": {"reputation": 741, "user_id": 6508416, "user_type": "registered", "accept_rate": 32, "profile_image": "https://www.gravatar.com/avatar/0da08e7bd83d68673bf85397cf880021?s=128&d=identicon&r=PG&f=1", "display_name": "Hsn", "link": "https://stackoverflow.com/users/6508416/hsn"}, "edited": false, "score": 0, "creation_date": 1556639062, "post_id": 54054893, "comment_id": 98502607, "body": "any solution for that?"}], "tags": [], "owner": {"reputation": 117, "user_id": 5266647, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qK2XT.jpg?s=128&g=1", "display_name": "Yazanator", "link": "https://stackoverflow.com/users/5266647/yazanator"}, "is_accepted": false, "score": 0, "last_activity_date": 1546798381, "last_edit_date": 1546798381, "creation_date": 1546712365, "answer_id": 54054893, "question_id": 54029117, "link": "https://stackoverflow.com/questions/54029117/why-is-the-target-environment-variable-reset-when-compiling-a-rust-program-in-a/54054893#54054893", "title": "Why is the TARGET environment variable reset when compiling a Rust program in a Dockerfile?", "body": "<p>I should've been compiling to armhv7 which is compatible with the Raspberry Pi 3 Model B.</p>\n\n<p>This is a Dockerfile that compiles the parity binary for armhv7:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>FROM debian:latest\n\nRUN apt-get update &amp;&amp; apt-get install -y --no-install-recommends \\\n    build-essential \\\n    ca-certificates \\\n    cmake \\\n    curl \\\n    git \\\n    pkg-config \\\n    gcc-arm-linux-gnueabihf \\\n    g++-arm-linux-gnueabihf \\\n    libc6-dev-armhf-cross \\\n    &amp;&amp; rm -rf \\\n    /var/lib/apt/lists/*\n\nRUN sed 's/^deb/deb-src/' /etc/apt/sources.list &gt; \\\n        /etc/apt/sources.list.d/deb-src.list \\\n    &amp;&amp; dpkg --add-architecture armhf \\\n    &amp;&amp; apt-get update \\\n    &amp;&amp; apt-get install -y \\\n        libssl-dev:armhf \\\n        libc6-dev:armhf \\\n    &amp;&amp; rm -rf \\\n      /var/lib/apt/lists/*\n\nENV USER=root\nRUN curl https://sh.rustup.rs -sSf | sh -s -- -y --verbose\nENV PATH=/root/.cargo/bin:$PATH\n\nENV CARGO_TARGET_ARMV7_UNKNOWN_LINUX_GNUEABIHF_LINKER=arm-linux-gnueabihf-gcc \\\n    CC_armv7_unknown_linux_gnueabihf=\"/usr/bin/arm-linux-gnueabihf-gcc\" \\\n    CXX_armv7_unknown_linux_gnueabihf=\"/usr/bin/arm-linux-gnueabihf-g++\" \\\n    CROSS_COMPILE=\"1\" \\\n    OPENSSL_INCLUDE_DIR=\"/usr/include/arm-linux-gnueabihf\" \\\n    OPENSSL_LIB_DIR=\"/usr/lib/arm-linux-gnueabihf\"\n\nRUN /root/.cargo/bin/rustup target add armv7-unknown-linux-gnueabihf\n\nRUN dpkg --add-architecture armhf &amp;&amp; \\\n    apt-get update &amp;&amp; \\\n    apt-get install -y libudev-dev:armhf\n\nRUN git clone https://github.com/paritytech/parity-ethereum.git &amp;&amp; cd parity-ethereum &amp;&amp; \\\n    cargo build --target=armv7-unknown-linux-gnueabihf --release\n\n\nCMD ./parity-ethereum/target/armv7-unknown-linux-gnueabihf/release/parity\n\nEXPOSE 8080 8545 8180\nENTRYPOINT [\"/build/parity/target/armv7-unknown-linux-gnueabihf/release/parity\"]\n</code></pre>\n"}], "owner": {"reputation": 117, "user_id": 5266647, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qK2XT.jpg?s=128&g=1", "display_name": "Yazanator", "link": "https://stackoverflow.com/users/5266647/yazanator"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 704, "favorite_count": 0, "answer_count": 2, "score": 2, "last_activity_date": 1546798381, "creation_date": 1546546268, "last_edit_date": 1546798343, "question_id": 54029117, "link": "https://stackoverflow.com/questions/54029117/why-is-the-target-environment-variable-reset-when-compiling-a-rust-program-in-a", "title": "Why is the TARGET environment variable reset when compiling a Rust program in a Dockerfile?", "body": "<p>I'm trying to cross-compile a Rust binary with Docker for raspberry-pi on ARM6 architecture. I'm specifying the environment arguments for Cargo prior to building, but it errors out on a specific library saying that the \"-m64\" argument was not found.</p>\n\n<p>The environment arguments when the error happens are different than what I set up in the Dockerfile; why are they being reset?</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>FROM ubuntu:latest\n\nRUN apt-get update &amp;&amp; \\\n    apt-get install \\\n    --yes \\\n    binutils \\\n    build-essential \\\n    curl \\\n    git \\\n    wget \\\n    libudev-dev \\\n    zip\n\nARG RASPBERRY_PI_TOOLS_COMMIT_ID=5caa7046982f0539cf5380f94da04b31129ed521\nENV CC=arm-linux-gnueabihf-gcc\nENV TARGET=arm-unknown-linux-gnueabihf\nENV CARGO_CFG_TARGET_ARCH=arm\nENV CARGO_CFG_TARGET_ENDIAN=little\nENV CARGO_CFG_TARGET_ENV=gnu\nENV CARGO_CFG_TARGET_FAMILY=unix\nENV CARGO_CFG_TARGET_OS=linux\nENV CARGO_CFG_TARGET_POINTER_WIDTH=32\nENV CARGO_FEATURE_DEFAULT=1\nENV CARGO_FEATURE_DEV_URANDOM_FALLBACK=1\nENV CARGO_FEATURE_RSA_SIGNING=1\nENV CARGO_FEATURE_USE_HEAP=1\nENV LD=/usr/bin/arm-linux-gnueabihf-ld\nENV LD_LIBRARY_PATH=/src/parity/target/release/deps:/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib:/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib\nENV QEMU_LD_PREFIX=/usr/arm-linux-gnueabihf/libc\nRUN wget https://github.com/raspberrypi/tools/archive/$RASPBERRY_PI_TOOLS_COMMIT_ID.zip -O /root/pi-tools.zip\nRUN unzip /root/pi-tools.zip -d /root\nRUN mv /root/tools-$RASPBERRY_PI_TOOLS_COMMIT_ID /root/pi-tools\nENV PATH=/root/pi-tools/arm-bcm2708/arm-linux-gnueabihf/bin:$PATH\nENV PATH=/root/pi-tools/arm-bcm2708/arm-linux-gnueabihf/libexec/gcc/arm-linux-gnueabihf/4.8.3:$PATH\n\n# Install Rust.\nRUN curl https://sh.rustup.rs -sSf | sh -s -- -y --verbose\nENV PATH=/root/.cargo/bin:$PATH\n\n# Install the arm target for Rust.\nRUN rustup target add arm-unknown-linux-gnueabihf\n# Configure the linker for the arm target.\nENV PKG_CONFIG_ALLOW_CROSS=1 \nRUN echo '[target.arm-unknown-linux-gnueabihf]\\nlinker = \"arm-linux-gnueabihf-gcc\"' &gt;&gt; /root/.cargo/config\n\nENV USER=root\nRUN cargo new /src\nWORKDIR /src\nRUN git clone https://github.com/paritytech/parity &amp;&amp; cd parity &amp;&amp; \\\n    /root/.cargo/bin/rustup target add arm-unknown-linux-gnueabihf &amp;&amp; \\\n    /root/.cargo/bin/cargo build --target=arm-unknown-linux-gnueabihf --release --features final\n\n# Verify that the output file is for armv6\nRUN readelf --arch-specific ./target/arm-unknown-linux-gnueabihf/debug/src\n\nRUN file /build/parity/target/armv7-unknown-linux-gnueabihf/release/parity\n\nEXPOSE 8080 8545 8180\nENTRYPOINT [\"/build/parity/target/armv7-unknown-linux-gnueabihf/release/parity\"]\n</code></pre>\n\n<p>The error is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>process didn't exit successfully: `/src/parity/target/release/build/backtrace-sys-3c9a41016b6512eb/build-script-build` (exit code: 101)\n--- stdout\nTARGET = Some(\"x86_64-unknown-linux-gnu\")\nOPT_LEVEL = Some(\"3\")\nHOST = Some(\"x86_64-unknown-linux-gnu\")\nCC_x86_64-unknown-linux-gnu = None\nCC_x86_64_unknown_linux_gnu = None\nHOST_CC = None\nCC = Some(\"arm-linux-gnueabihf-gcc\")\nCFLAGS_x86_64-unknown-linux-gnu = None\nCFLAGS_x86_64_unknown_linux_gnu = None\nHOST_CFLAGS = None\nCFLAGS = None\nDEBUG = Some(\"false\")\nrunning: \"arm-linux-gnueabihf-gcc\" \"-O3\" \"-ffunction-sections\" \"-fdata-sections\" \"-fPIC\" \"-m64\" \"-I\" \"src/libbacktrace\" \"-I\" \"/src/parity/target/release/build/backtrace-sys-5fc2d3da7fb5f8d4/out\" \"-fvisibility=hidden\" \"-DBACKTRACE_ELF_SIZE=64\" \"-DBACKTRACE_SUPPORTED=1\" \"-DBACKTRACE_USES_MALLOC=1\" \"-DBACKTRACE_SUPPORTS_THREADS=0\" \"-DBACKTRACE_SUPPORTS_DATA=0\" \"-DHAVE_DL_ITERATE_PHDR=1\" \"-D_GNU_SOURCE=1\" \"-D_LARGE_FILES=1\" \"-Dbacktrace_full=__rbt_backtrace_full\" \"-Dbacktrace_dwarf_add=__rbt_backtrace_dwarf_add\" \"-Dbacktrace_initialize=__rbt_backtrace_initialize\" \"-Dbacktrace_pcinfo=__rbt_backtrace_pcinfo\" \"-Dbacktrace_syminfo=__rbt_backtrace_syminfo\" \"-Dbacktrace_get_view=__rbt_backtrace_get_view\" \"-Dbacktrace_release_view=__rbt_backtrace_release_view\" \"-Dbacktrace_alloc=__rbt_backtrace_alloc\" \"-Dbacktrace_free=__rbt_backtrace_free\" \"-Dbacktrace_vector_finish=__rbt_backtrace_vector_finish\" \"-Dbacktrace_vector_grow=__rbt_backtrace_vector_grow\" \"-Dbacktrace_vector_release=__rbt_backtrace_vector_release\" \"-Dbacktrace_close=__rbt_backtrace_close\" \"-Dbacktrace_open=__rbt_backtrace_open\" \"-Dbacktrace_print=__rbt_backtrace_print\" \"-Dbacktrace_simple=__rbt_backtrace_simple\" \"-Dbacktrace_qsort=__rbt_backtrace_qsort\" \"-Dbacktrace_create_state=__rbt_backtrace_create_state\" \"-Dbacktrace_uncompress_zdebug=__rbt_backtrace_uncompress_zdebug\" \"-o\" \"/src/parity/target/release/build/backtrace-sys-5fc2d3da7fb5f8d4/out/src/libbacktrace/alloc.o\" \"-c\" \"src/libbacktrace/alloc.c\"\ncargo:warning=arm-linux-gnueabihf-gcc: error: unrecognized command line option '-m64'\nexit code: 1\n--- stderr\nthread 'main\n</code></pre>\n\n<p>I've set my <code>ENV TARGET=arm-unknown-linux-gnueabihf</code> in the Dockerfile, but when the error happens and it complains about not understanding what <code>-m64</code> is, it's compiling for a <code>TARGET = Some(\"x86_64-unknown-linux-gnu\")</code>, which is not the target I specified.</p>\n\n<p>How do I make compilation use the original target I specified in the Dockerfile?</p>\n\n<p><a href=\"https://cloud.docker.com/repository/registry-1.docker.io/yazanator90/parity-arm/builds/311a205f-d0e7-495d-976d-e9a929267007\" rel=\"nofollow noreferrer\">This is the dockerhub build</a></p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 6086, "user_id": 943814, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e8b4b9fc52a3084be9a2de004e0bb6dc?s=128&d=identicon&r=PG", "display_name": "anderspitman", "link": "https://stackoverflow.com/users/943814/anderspitman"}, "edited": false, "score": 0, "creation_date": 1546544793, "post_id": 54028589, "comment_id": 94893994, "body": "Looks fine to me. I&#39;d use it until you&#39;re confident it&#39;s a bottleneck. If you&#39;re already sure you need the fastest possible, maybe look into <a href=\"https://rust-lang-nursery.github.io/edition-guide/rust-2018/simd-for-faster-computing.html\" rel=\"nofollow noreferrer\">SIMD</a>?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1546548094, "post_id": 54028589, "comment_id": 94895285, "body": "You can do it in one line with iterators, like <code>a.into_iter().zip(b).map(|(a, b)| a*b).sum()</code>. But I&#39;d expect that to be comparably fast, not significantly faster (or slower)."}], "answers": [{"tags": [], "owner": {"reputation": 6086, "user_id": 943814, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e8b4b9fc52a3084be9a2de004e0bb6dc?s=128&d=identicon&r=PG", "display_name": "anderspitman", "link": "https://stackoverflow.com/users/943814/anderspitman"}, "is_accepted": true, "score": 3, "last_activity_date": 1558369716, "last_edit_date": 1558369716, "creation_date": 1546545377, "answer_id": 54028953, "question_id": 54028589, "link": "https://stackoverflow.com/questions/54028589/what-is-the-fastest-way-to-calculate-the-dot-product-of-two-f64-vectors-in-rust/54028953#54028953", "title": "What is the fastest way to calculate the dot product of two f64 vectors in Rust?", "body": "<p>This isn't meant as a comprehensive general answer, but I wanted to share a little code.</p>\n\n<p>Your implementation looks pretty much like what I would do unless I knew it was the bottleneck in my application. Then I'd look into more esoteric approaches (maybe <a href=\"https://rust-lang-nursery.github.io/edition-guide/rust-2018/simd-for-faster-computing.html\" rel=\"nofollow noreferrer\">SIMD</a>).</p>\n\n<p>That said, you might consider changing your function to take slice references instead. That way you can pass <code>Vec</code>s or arrays:</p>\n\n<pre><code>fn dot_product(a: &amp;[f64], b: &amp;[f64]) -&gt; f64 {\n    // Calculate the dot product of two vectors. \n    assert_eq!(a.len(), b.len()); \n    let mut product = 0.0;\n    for i in 0..a.len() {\n        product += a[i] * b[i];\n    }\n    product\n}\n\nfn main() {\n    println!(\"{}\", dot_product(&amp;[1.0,2.0], &amp;[3.0,4.0]));\n    println!(\"{}\", dot_product(&amp;vec![1.0,2.0], &amp;vec![3.0,4.0]));\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/40006219/155423\">Why is it discouraged to accept a reference to a String (&amp;String), Vec (&amp;Vec), or Box (&amp;Box) as a function argument?</a></li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1558369798, "post_id": 56224659, "comment_id": 99070396, "body": "It&#39;s not needed to have <code>use std::vec::Vec;</code>; it&#39;s part of the prelude. Why is the time crate here? Can you compare this to the performance of the OPs code and the other answer? Why the choice of <code>unaligned</code>?"}], "tags": [], "owner": {"reputation": 11, "user_id": 8160349, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/nheYY.png?s=128&g=1", "display_name": "Ching-Chuan Chen", "link": "https://stackoverflow.com/users/8160349/ching-chuan-chen"}, "is_accepted": false, "score": 1, "last_activity_date": 1558369501, "last_edit_date": 1558369501, "creation_date": 1558368901, "answer_id": 56224659, "question_id": 54028589, "link": "https://stackoverflow.com/questions/54028589/what-is-the-fastest-way-to-calculate-the-dot-product-of-two-f64-vectors-in-rust/56224659#56224659", "title": "What is the fastest way to calculate the dot product of two f64 vectors in Rust?", "body": "<p>I used <code>rayon</code> and <code>packed_simd</code> to calculate the dot product and\nfound a way to be faster than Intel MKL:</p>\n\n<pre><code>extern crate packed_simd;\nextern crate rayon;\nextern crate time;\n\nuse packed_simd::f64x4;\nuse packed_simd::f64x8;\nuse rayon::prelude::*;\nuse std::vec::Vec;\n\nfn main() {\n    let n = 100000000;\n    let x: Vec&lt;f64&gt; = vec![0.2; n];\n    let y: Vec&lt;f64&gt; = vec![0.1; n];\n\n    let res: f64 = x\n        .par_chunks(8)\n        .map(f64x8::from_slice_unaligned)\n        .zip(y.par_chunks(8).map(f64x8::from_slice_unaligned))\n        .map(|(a, b)| a * b)\n        .sum::&lt;f64x8&gt;()\n        .sum();\n    println!(\"res: {}\", res);\n}\n</code></pre>\n\n<p><a href=\"https://github.com/ChingChuan-Chen/dot_product\" rel=\"nofollow noreferrer\">This code in my Github</a>. I hope this helps. </p>\n"}], "owner": {"reputation": 1247, "user_id": 6900127, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ItdXX.png?s=128&g=1", "display_name": "Teymour Aldridge", "link": "https://stackoverflow.com/users/6900127/teymour-aldridge"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 834, "favorite_count": 0, "accepted_answer_id": 54028953, "answer_count": 2, "score": 0, "last_activity_date": 1558369716, "creation_date": 1546543545, "last_edit_date": 1558369679, "question_id": 54028589, "link": "https://stackoverflow.com/questions/54028589/what-is-the-fastest-way-to-calculate-the-dot-product-of-two-f64-vectors-in-rust", "title": "What is the fastest way to calculate the dot product of two f64 vectors in Rust?", "body": "<p>I am writing an implementation of a neural network in Rust and am trying to calculate the dot product of two matrices. I have the following code:</p>\n\n<pre><code>fn dot_product(a: Vec&lt;f64&gt;, b: Vec&lt;f64&gt;) -&gt; f64 {\n    // Calculate the dot product of two vectors.\n    asserteq!(a.len(), b.len());\n    let mut product: f64;\n    for i in 0..a.len() {\n        product += a[i] * b[i];\n    }\n    product\n}\n</code></pre>\n\n<p>This takes two vectors, <code>a</code> and <code>b</code> (of the same length) and carries out element-wise multiplication (multiplying value 1 of vector <code>a</code> with value 1 of vector <code>b</code> and adding this to value 2 of vector <code>a</code> and with value 2 of vector <code>b</code> and so on...). </p>\n\n<p>Is there a more efficient way of doing this, and if so, how?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 45, "user_id": 3461311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9032796bee398ed078b2f568f5b1dc3e?s=128&d=identicon&r=PG&f=1", "display_name": "user3461311", "link": "https://stackoverflow.com/users/3461311/user3461311"}, "edited": false, "score": 0, "creation_date": 1546551620, "post_id": 54028683, "comment_id": 94896665, "body": "Hi Silvio, really appreciate for your answer. I think the method signature <b>middle_node(head: &amp;Option&lt;Box&lt;ListNode&gt;&gt;) -&gt; &amp;Option&lt;Box&lt;ListNode&gt;&gt;</b> is defined by Leetcode, I probably should report this bug to them."}, {"owner": {"reputation": 45, "user_id": 3461311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9032796bee398ed078b2f568f5b1dc3e?s=128&d=identicon&r=PG&f=1", "display_name": "user3461311", "link": "https://stackoverflow.com/users/3461311/user3461311"}, "edited": false, "score": 0, "creation_date": 1546551835, "post_id": 54028683, "comment_id": 94896741, "body": "Also, seems like Option&lt;T&gt;.as_ref().unwrap() is a common use scenario, I would wonder why we don&#39;t have a method combine them together in the core library. Thanks."}, {"owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "reply_to_user": {"reputation": 45, "user_id": 3461311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9032796bee398ed078b2f568f5b1dc3e?s=128&d=identicon&r=PG&f=1", "display_name": "user3461311", "link": "https://stackoverflow.com/users/3461311/user3461311"}, "edited": false, "score": 0, "creation_date": 1546553521, "post_id": 54028683, "comment_id": 94897348, "body": "In my experience, <code>unwrap</code> tends to be discouraged except in small programs like this. <code>Option</code> has a lot of other ways of peering into it that don&#39;t involve panicking (<code>unwrap_or</code>, <code>ok_or</code>, etc), all of which need the same <code>as_ref</code> call to ensure borrowing."}, {"owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "reply_to_user": {"reputation": 45, "user_id": 3461311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9032796bee398ed078b2f568f5b1dc3e?s=128&d=identicon&r=PG&f=1", "display_name": "user3461311", "link": "https://stackoverflow.com/users/3461311/user3461311"}, "edited": false, "score": 0, "creation_date": 1546553568, "post_id": 54028683, "comment_id": 94897362, "body": "I agree with you that this should be reported to Leetcode if they really did defining an owning type signature for that function. It&#39;s possible that they simply did so for all the challenges without really thinking about it (easy to do if you&#39;re writing a challenge that&#39;s supposed to support several languages), and it should really be brought to their attention."}], "tags": [], "owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "is_accepted": true, "score": 2, "last_activity_date": 1546543963, "creation_date": 1546543963, "answer_id": 54028683, "question_id": 54027704, "link": "https://stackoverflow.com/questions/54027704/how-to-use-two-pointers-to-iterate-a-linked-list-in-rust/54028683#54028683", "title": "How to use two pointers to iterate a linked list in Rust?", "body": "<p>You're exactly right that your problem is you're trying to move something out of a borrowed object. First, let's take a look at your signature.</p>\n\n<pre><code>pub fn middle_node(head: Option&lt;Box&lt;ListNode&gt;&gt;) -&gt; Option&lt;Box&lt;ListNode&gt;&gt; {\n</code></pre>\n\n<p>This function is taking ownership of <code>head</code> and returning ownership of (some sublist of) the list. This is undoubtedly not what you want, because it would invalidate any other references to the list. In this case, we want to borrow the argument and return another reference.</p>\n\n<pre><code>pub fn middle_node(head: &amp;Option&lt;Box&lt;ListNode&gt;&gt;) -&gt; &amp;Option&lt;Box&lt;ListNode&gt;&gt; {\n</code></pre>\n\n<p>No ownership changes hands. And no ownership needs to change hands; the caller will own the list at the start and it will own the list at the end.</p>\n\n<p>Now, you assign to <code>fast</code> and <code>slow</code>, so they need to be mutable. You can't reassign to an ordinary <code>let</code>.</p>\n\n<pre><code>let mut slow = head;\nlet mut fast = head;\n</code></pre>\n\n<p>(I also removed the <code>&amp;head</code>, as <code>head</code> is now already a reference, so we don't need to take a ref anymore)</p>\n\n<p>Now, finally, as you said, you are trying to <em>move</em> the value out of the option every time, which is both unnecessary and confusing to the borrow checker. Fortunately, <code>Option</code> provides a convenient way to take a reference to the inside. <code>as_ref</code> takes an <code>Option&lt;T&gt;</code> and turns it into a <code>Option&lt;&amp;T&gt;</code>, so we can borrow the inside. We need to <code>as_ref</code> before each time that we <code>unwrap</code>. For example,</p>\n\n<pre><code>while fast.is_some() &amp;&amp; fast.as_ref().unwrap().next.is_some() {\n</code></pre>\n\n<p>(Notice the <code>as_ref</code>) And the same thing in all of the other places you <code>unwrap</code> an optional value. Finally, the returned <code>*slow</code> simply becomes <code>slow</code>, since again <code>slow</code> is already a reference and we're returning a reference now.</p>\n\n<p>Runnable code:</p>\n\n<pre><code>#[derive(PartialEq, Eq, Debug)]\npub struct ListNode {\n    pub val: i32,\n    pub next: Option&lt;Box&lt;ListNode&gt;&gt;\n}\n\nimpl ListNode {\n    #[inline]\n    pub fn new(val: i32) -&gt; Self {\n        ListNode {\n            next: None,\n            val\n        }\n    }\n}\n\nstruct Solution;\nimpl Solution {\n    pub fn middle_node(head: &amp;Option&lt;Box&lt;ListNode&gt;&gt;) -&gt; &amp;Option&lt;Box&lt;ListNode&gt;&gt; {\n        let mut slow = head;\n        let mut fast = head;\n        while fast.is_some() &amp;&amp; fast.as_ref().unwrap().next.is_some() {\n            slow = &amp;(slow.as_ref().unwrap().next);\n            fast = &amp;(fast.as_ref().unwrap().next.as_ref().unwrap().next);\n        }\n        slow\n    }\n}\n\nfn arr_to_list(arr: &amp;[i32]) -&gt; Option&lt;Box&lt;ListNode&gt;&gt; {\n    let mut head = None;\n    for n in arr {\n        let mut new_node = ListNode::new(*n);\n        new_node.next = head;\n        head = Some(Box::new(new_node));\n    }\n    head\n}\n\nfn main() {\n    let node = arr_to_list(&amp;[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\n    let mid = Solution::middle_node(&amp;node);\n    println!(\"Middle node is {}\", mid.as_ref().unwrap().val)\n}\n</code></pre>\n"}], "owner": {"reputation": 45, "user_id": 3461311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9032796bee398ed078b2f568f5b1dc3e?s=128&d=identicon&r=PG&f=1", "display_name": "user3461311", "link": "https://stackoverflow.com/users/3461311/user3461311"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1149, "favorite_count": 1, "accepted_answer_id": 54028683, "answer_count": 1, "score": 4, "last_activity_date": 1546543963, "creation_date": 1546539485, "question_id": 54027704, "link": "https://stackoverflow.com/questions/54027704/how-to-use-two-pointers-to-iterate-a-linked-list-in-rust", "title": "How to use two pointers to iterate a linked list in Rust?", "body": "<p>I just started to learn Rust lang and tried to do some practices on Leetcode. I'm working the problem <a href=\"https://leetcode.com/problems/middle-of-the-linked-list/\" rel=\"nofollow noreferrer\">Middle of the Linked List</a>.</p>\n\n<p>The solution is just to use the slow and fast pointer. This is my code in Rust:</p>\n\n<pre><code>#[derive(PartialEq, Eq, Debug)]\npub struct ListNode {\n    pub val: i32,\n    pub next: Option&lt;Box&lt;ListNode&gt;&gt;\n}\n\nimpl ListNode {\n    #[inline]\n    pub fn new(val: i32) -&gt; Self {\n        ListNode {\n            next: None,\n            val\n        }\n    }\n}\n\nstruct Solution;\nimpl Solution {\n    pub fn middle_node(head: Option&lt;Box&lt;ListNode&gt;&gt;) -&gt; Option&lt;Box&lt;ListNode&gt;&gt; {\n        let slow = &amp;head;\n        let fast = &amp;head;\n        while fast.is_some() &amp;&amp; fast.unwrap().next.is_some() {\n            slow = &amp;(slow.unwrap().next);\n            fast = &amp;(fast.unwrap().next.unwrap().next);\n        }\n        *slow\n    }\n}\n</code></pre>\n\n<p>However, I got a lot of complier errors like:</p>\n\n<pre><code>  --&gt; src/main.rs:22:33\n   |\n22 |         while fast.is_some() &amp;&amp; fast.unwrap().next.is_some() {\n   |                                 ^^^^ cannot move out of borrowed content\n</code></pre>\n\n<p>I understand that I violated the borrower check rules that I cannot take out something from an immutable ref, but how should I achieve this two-pointer implementation?</p>\n\n<p>Any suggestions will help, thanks in advance.</p>\n"}, {"tags": ["reference", "rust", "lifetime"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1546527957, "post_id": 54024229, "comment_id": 94886076, "body": "It&#39;s technically possible to create a self-borrowing struct with lifetimes, but such a struct can&#39;t be moved (because moving it would invalidate the internal reference) and can&#39;t be borrowed mutably (because it&#39;s permanently borrowed immutably), so it&#39;s not often useful to do so. The best way to proceed is probably to make <code>links</code> a <code>Vec&lt;usize&gt;</code> and store indices (i.e. instead of messing about with <code>ref_x</code>, just write <code>self.links.push(len - 1)</code>)."}, {"owner": {"reputation": 21, "user_id": 9095675, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dbcac05491de88c81cf9308cd64672d5?s=128&d=identicon&r=PG&f=1", "display_name": "arcanius", "link": "https://stackoverflow.com/users/9095675/arcanius"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1546529281, "post_id": 54024229, "comment_id": 94886771, "body": "Thanks, trentcl."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 5, "creation_date": 1546529492, "post_id": 54024229, "comment_id": 94886882, "body": "This is an excellent example of Rust saving your sanity. In C++, your code would have compiled, and blown up at run-time. The problem? When you use <code>Vec::push</code>, the vector may run out of space (full capacity), in which case it allocates a new array (2x larger), and moves all the elements to that new array. Unfortunately, that means that all of a sudden all the references (pointers) to those elements become <i>dangling</i>: pointing to freed memory. And that&#39;s Undefined Behavior, and all kinds of strange effects can occur :x"}], "owner": {"reputation": 21, "user_id": 9095675, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dbcac05491de88c81cf9308cd64672d5?s=128&d=identicon&r=PG&f=1", "display_name": "arcanius", "link": "https://stackoverflow.com/users/9095675/arcanius"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 54, "favorite_count": 0, "closed_date": 1546529276, "answer_count": 0, "score": 2, "last_activity_date": 1546525507, "creation_date": 1546525507, "question_id": 54024229, "link": "https://stackoverflow.com/questions/54024229/rust-cannot-create-a-structure-storing-values-and-references-to-these-values", "closed_reason": "Duplicate", "title": "Rust: Cannot create a structure storing values \u200band references to these values", "body": "<p>I created a structure that stores values and references to them, and also created a method for adding values and specified lifetimes. Code example:</p>\n\n<pre><code>struct Storage&lt;'a&gt; {\n    owner :Vec&lt;i32&gt;,\n    links :Vec&lt;&amp;'a i32&gt;\n}\n\nimpl&lt;'a&gt; Storage&lt;'a&gt; {\n    fn new() -&gt; Storage&lt;'a&gt; {\n        Storage {owner: vec![], links: vec![]}\n    }\n\n    fn add_int(&amp;mut self, x :i32) {\n        self.owner.push(x);\n        let len = self.owner.len();\n        let ref_x = match self.owner.get(len-1) {\n            Some(x) =&gt; x,\n            None =&gt; panic!(\"ERROR\")\n        };\n        self.links.push(ref_x);\n        let ref_x = 0;\n    }\n}\n\nfn main() {\n    let mut store = Storage::new();\n    store.add_int(1);\n    store.add_int(2);\n}\n</code></pre>\n\n<p>Then I got a compiler error:</p>\n\n<pre><code>error[E0495]: cannot infer an appropriate lifetime for lifetime parameter in function call due to conflicting requirements\nlet ref_x = match self.owner.get(len-1) {                                                               \n                             ^^^         \n</code></pre>\n\n<p>I can correct this mistake and set for <code>self</code> lifetime <code>'a</code>, as for the structure. But in this case <code>self</code> will not be deleted even after the completion of the method. And then when I try to call the method twice, I get the following error:</p>\n\n<pre><code>error[E0499]: cannot borrow `store` as mutable more than once at a time\n</code></pre>\n\n<p>But how can this contradiction be resolved?</p>\n\n<p>And maybe there is a more correct way in Rust of storing data in the structure with allowing access to it not only through the owner?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1546535571, "post_id": 54022450, "comment_id": 94889987, "body": "Is this similar enough to <a href=\"https://stackoverflow.com/questions/25296195/why-are-recursive-struct-types-illegal-in-rust\">Why are recursive struct types illegal in Rust?</a> that it can be closed as a duplicate?"}, {"owner": {"reputation": 1376, "user_id": 7213112, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/933ad5b40bde4c78aef7faa4cd136434?s=128&d=identicon&r=PG&f=1", "display_name": "sidoshi", "link": "https://stackoverflow.com/users/7213112/sidoshi"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1546576071, "post_id": 54022450, "comment_id": 94902151, "body": "This question is different. I understand why recursive types are invalid and that we can solve that using indirection. But I assume all smart pointers provide indirection since, after all, they are pointers. So my question is is why doesn&#39;t RefCell provide indirection?"}], "answers": [{"tags": [], "owner": {"reputation": 20334, "user_id": 78667, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/b13a3e168d85c7f7f45ae1e54dc9db57?s=128&d=identicon&r=PG", "display_name": "Arkaitz Jimenez", "link": "https://stackoverflow.com/users/78667/arkaitz-jimenez"}, "is_accepted": true, "score": 3, "last_activity_date": 1546742334, "last_edit_date": 1546742334, "creation_date": 1546519654, "answer_id": 54022608, "question_id": 54022450, "link": "https://stackoverflow.com/questions/54022450/why-cant-we-use-refcell-for-recursive-data-structures/54022608#54022608", "title": "Why can&#39;t we use RefCell for recursive data structures?", "body": "<p><code>RefCell</code> contains the object inside, wrapping it, it's <strong>not</strong> a heap allocated value. That's why the compiler says \"recursive without indirection\": <code>RefCell</code> is not an indirection.</p>\n\n<p><code>Box</code> and <code>Rc</code>, on the other hand, contain a reference to an object allocated somewhere else, and therefore are <em>indirections</em>.</p>\n\n<p>Without an indirection, the <code>List</code> enum ends up being infinite since every <code>Cons</code> contains a full <code>List</code> enum inside its <code>RefCell</code>.  </p>\n\n<p>You can not do recursive data structures that contain themselves as values, only as pointers or references.</p>\n"}], "owner": {"reputation": 1376, "user_id": 7213112, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/933ad5b40bde4c78aef7faa4cd136434?s=128&d=identicon&r=PG&f=1", "display_name": "sidoshi", "link": "https://stackoverflow.com/users/7213112/sidoshi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 185, "favorite_count": 0, "accepted_answer_id": 54022608, "answer_count": 1, "score": -1, "last_activity_date": 1546742334, "creation_date": 1546519071, "last_edit_date": 1546742227, "question_id": 54022450, "link": "https://stackoverflow.com/questions/54022450/why-cant-we-use-refcell-for-recursive-data-structures", "title": "Why can&#39;t we use RefCell for recursive data structures?", "body": "<p>Why can't we use <code>RefCell</code> for recursive data structures in Rust?</p>\n\n<p>Invalid:</p>\n\n<pre><code>enum List {\n    Cons(i32, RefCell&lt;List&gt;),\n    Nil,\n}\n</code></pre>\n\n<p>Valid:</p>\n\n<pre><code>enum List {\n    Cons(i32, Rc&lt;List&gt;), // or Box&lt;List&gt;\n    Nil,\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 5, "creation_date": 1546503024, "post_id": 54018162, "comment_id": 94873158, "body": "TLDR: you cannot consume a boxed trait object by self because it requires the caller to be sized. Use <code>self: Box&lt;Self&gt;</code>."}, {"owner": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1546503289, "post_id": 54018162, "comment_id": 94873256, "body": "That;s it, may you write it as answer so I can accept it ?"}], "owner": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 317, "favorite_count": 0, "closed_date": 1546503305, "answer_count": 0, "score": 3, "last_activity_date": 1546502902, "creation_date": 1546501134, "last_edit_date": 1546502902, "question_id": 54018162, "link": "https://stackoverflow.com/questions/54018162/change-object-type-between-implemented-traits", "closed_reason": "Duplicate", "title": "Change object type between implemented traits", "body": "<h3>What I want to do:</h3>\n\n<p>I want to create a small parser in rust that can decode several types -> numbers, strings, lists, etc. For instance the lists can contain any type -> other lists, numbers, etc</p>\n\n<h3>How I'm trying to do it:</h3>\n\n<p>I have a super trait 'Element' which will be the base for all my types. Then I have a a trait per type,  which all require the 'Element' trait. Those traits are backed by some concrete structs. Because the lists can contain (mixed) any type, I try to store the values as <code>Vec&lt;Box&lt;dyn Element&gt;&gt;</code>. The issue is that when later I try to convert the <code>dyn Element</code> to another trait, I hit a wall:</p>\n\n<h3>The error:</h3>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0161]: cannot move a value of type dyn Element: the size of dyn Element cannot be statically determined\n  --&gt; src/main.rs:94:27\n   |\n94 |     let boxed_as_number = num_as_element.to_boxed_number();\n   |                           ^^^^^^^^^^^^^^\n</code></pre>\n\n<h3>MCVE</h3>\n\n<pre><code>use std::fmt;\n\npub enum ElementType {\n    Number,\n    Text,\n}\n\npub trait Element: fmt::Debug {\n    fn element_type(&amp;self) -&gt; ElementType;\n\n    // Works, but I do not want a reference -&gt; I want to change the \"type\"\n    fn to_number_ref(&amp;self) -&gt; Option&lt;&amp;dyn Number&gt;;\n\n    fn to_boxed_number(self) -&gt; Option&lt;Box&lt;dyn Number&gt;&gt;;\n}\n\npub trait Number: Element {\n    fn value(&amp;self) -&gt; i64;\n}\n\npub trait Text: Element {\n    fn value(&amp;self) -&gt; &amp;str;\n}\n\n#[derive(Debug)]\npub struct SignedNumber {\n    value: i64\n}\n\nimpl SignedNumber {\n    fn new(value: i64) -&gt; SignedNumber {\n        return SignedNumber { value };\n    }\n}\n\nimpl Element for SignedNumber {\n    fn element_type(&amp;self) -&gt; ElementType {\n        return ElementType::Number;\n    }\n\n    fn to_number_ref(&amp;self) -&gt; Option&lt;&amp;dyn Number&gt; {\n        return Some(self);\n    }\n\n    fn to_boxed_number(self) -&gt; Option&lt;Box&lt;Number&gt;&gt; {\n        return Some(Box::new(self));\n    }\n}\n\nimpl Number for SignedNumber {\n    fn value(&amp;self) -&gt; i64 {\n        return self.value;\n    }\n}\n\n#[derive(Debug)]\npub struct StringWrapper {\n    value: String\n}\n\nimpl StringWrapper {\n    fn new&lt;T: Into&lt;String&gt;&gt;(value: T) -&gt; StringWrapper {\n        return StringWrapper { value: value.into() };\n    }\n}\n\nimpl Element for StringWrapper {\n    fn element_type(&amp;self) -&gt; ElementType {\n        return ElementType::Text;\n    }\n\n    fn to_number_ref(&amp;self) -&gt; Option&lt;&amp;dyn Number&gt; {\n        return None;\n    }\n\n    fn to_boxed_number(self) -&gt; Option&lt;Box&lt;Number&gt;&gt; {\n       return None;\n    }\n}\n\nimpl Text for StringWrapper {\n    fn value(&amp;self) -&gt; &amp;str {\n        return &amp;self.value;\n    }\n}\n\nfn main() {\n    let num = SignedNumber::new(1);\n    let num_as_element: Box&lt;dyn Element&gt; = Box::new(num);\n    let borrowed_as_num = num_as_element.to_number_ref().unwrap();\n\n    let num = SignedNumber::new(2);\n    let num_as_element: Box&lt;dyn Element&gt; = Box::new(num);\n    let boxed_as_number = num_as_element.to_boxed_number();\n}\n</code></pre>\n\n<h3>Why</h3>\n\n<p>Shouldn't <code>self</code> be <code>SignedNumber</code> in that case ? Why does rustc thinks it's <code>dyn Element</code> ?</p>\n\n<pre><code>impl Element for SignedNumber {\n    fn to_boxed_number(self) -&gt; Option&lt;Box&lt;Number&gt;&gt; {\n        return Some(Box::new(self));\n    }\n}\n</code></pre>\n\n<p>Is there a way to do such type conversion or should I stick with references ? </p>\n"}, {"tags": ["rust", "pyo3"], "answers": [{"tags": [], "owner": {"reputation": 3054, "user_id": 115030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c74c0974c6cc25c194a2737e2d6747?s=128&d=identicon&r=PG", "display_name": "Anders Kaseorg", "link": "https://stackoverflow.com/users/115030/anders-kaseorg"}, "is_accepted": true, "score": 2, "last_activity_date": 1546494670, "creation_date": 1546494670, "answer_id": 54016981, "question_id": 54015328, "link": "https://stackoverflow.com/questions/54015328/calling-from-python-rust-function-with-kwargs-fails/54016981#54016981", "title": "Calling from Python Rust function with kwargs fails", "body": "<p>I\u2019m pretty sure this is a bug in PyO3: <a href=\"https://github.com/PyO3/pyo3/blob/cd23574d8a4a331a72d5ead1b5086f193c273fd5/src/derive_utils.rs#L48-L57\" rel=\"nofollow noreferrer\">this check</a> seems to be adding <code>nkeywords</code> for no reason.  File a <a href=\"https://github.com/PyO3/pyo3/issues\" rel=\"nofollow noreferrer\">GitHub issue</a> and see what the maintainers say.</p>\n"}], "owner": {"reputation": 153, "user_id": 7810882, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/31bd8d33e639ec2e82414a9c730d9d33?s=128&d=identicon&r=PG&f=1", "display_name": "user7810882", "link": "https://stackoverflow.com/users/7810882/user7810882"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 160, "favorite_count": 0, "accepted_answer_id": 54016981, "answer_count": 1, "score": 0, "last_activity_date": 1546494670, "creation_date": 1546479564, "question_id": 54015328, "link": "https://stackoverflow.com/questions/54015328/calling-from-python-rust-function-with-kwargs-fails", "title": "Calling from Python Rust function with kwargs fails", "body": "<p>I am struggling to get <code>kwargs</code> to work. I understand that just like <code>#[args(args=\"*\")]</code> is for <code>args</code>, <code>#[args(kwargs=\"**\")]</code> is for <code>kwargs</code>.</p>\n\n<p>However when I pack the following using <code>pyo3-pack</code> and try to call <code>test1</code> with any arguments I get the error <code>MyClass.test1()() takes at most 0 argument (1 given)</code>.</p>\n\n<p>What am I doing wrong?</p>\n\n<pre><code>#![feature(custom_attribute)]\n#![feature(specialization)]\n\nuse pyo3::prelude::*;\nuse pyo3::types::{PyDict, PyTuple};\n\n#[pyclass]\nstruct MyClass {}\n\n#[pymethods]\nimpl MyClass {\n    #[staticmethod]\n    #[args(kwargs = \"**\")]\n    fn test1(kwargs: Option&lt;&amp;PyDict&gt;) -&gt; PyResult&lt;()&gt; {\n        if let Some(kwargs) = kwargs {\n            for kwarg in kwargs {\n                println!(\"{:?}\", kwarg);\n            }\n        } else {\n            println!(\"kwargs is none\");\n        }\n        Ok(())\n    }\n\n    #[staticmethod]\n    #[args(args = \"*\")]\n    fn test2(args: &amp;PyTuple) -&gt; PyResult&lt;()&gt; {\n        for arg in args {\n            println!(\"{:?}\", arg);\n        }\n        Ok(())\n    }\n}\n\n\n#[pymodule]\nfn test123(_py: Python, m: &amp;PyModule) -&gt; PyResult&lt;()&gt; {\n    m.add_class::&lt;MyClass&gt;()?;\n    Ok(())\n}\n</code></pre>\n"}, {"tags": ["linked-list", "rust"], "answers": [{"tags": [], "owner": {"reputation": 3054, "user_id": 115030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c74c0974c6cc25c194a2737e2d6747?s=128&d=identicon&r=PG", "display_name": "Anders Kaseorg", "link": "https://stackoverflow.com/users/115030/anders-kaseorg"}, "is_accepted": false, "score": 0, "last_activity_date": 1546598321, "last_edit_date": 1546598321, "creation_date": 1546488858, "answer_id": 54016263, "question_id": 54015194, "link": "https://stackoverflow.com/questions/54015194/two-sum-leetcode-rust-solution/54016263#54016263", "title": "Two Sum Leetcode Rust Solution?", "body": "\n\n<p>Your code compiles as written in stable Rust 2018 (or in nightly Rust 2015 with <code>#![feature(nll)]</code>).</p>\n\n<p>You can make it compile in stable Rust 2015 with just a few tweaks:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn add_two_numbers(\n    l1: Option&lt;Box&lt;ListNode&gt;&gt;,\n    l2: Option&lt;Box&lt;ListNode&gt;&gt;,\n) -&gt; Option&lt;Box&lt;ListNode&gt;&gt; {\n    let mut head1 = l1;\n    let mut head2 = l2;\n    let mut res = Some(Box::new(ListNode::new(0)));\n    // Add this block to limit the scope of tmp.\n    {\n        let mut tmp = &amp;mut res;\n        loop {\n            let node1 = head1.take().unwrap_or(Box::new(ListNode::new(0)));\n            let node2 = head2.take().unwrap_or(Box::new(ListNode::new(0)));\n            // Add braces around tmp to force it to be moved instead of reborrowed.\n            tmp = match { tmp }.as_mut() {\n                Some(_n) =&gt; {\n                    let sum = node1.val + node2.val + _n.val;\n                    let carry = sum / 10;\n                    _n.val = sum % 10;\n                    if node1.next.is_none() &amp;&amp; node2.next.is_none() &amp;&amp; carry == 0 {\n                        // Move the return statement outside the block.\n                        break;\n                    } else {\n                        _n.next = Some(Box::new(ListNode::new(carry)));\n                    }\n                    &amp;mut _n.next\n                }\n                _ =&gt; unreachable!(),\n            };\n            head1 = node1.next;\n            head2 = node2.next;\n        }\n    }\n    return res;\n}\n</code></pre>\n\n<p>It probably makes sense why <code>return res</code> needs to be moved outside the scope of <code>tmp</code>.  The <code>{ tmp }</code> thing is a bit more confusing: it tells the compiler to move <code>tmp</code> instead of reborrowing it (see <a href=\"https://www.reddit.com/r/rust/comments/464jge/lifetime_issues_turning_tail_recursion_into_a_loop/\" rel=\"nofollow noreferrer\">this explanation</a>).</p>\n"}], "owner": {"reputation": 15, "user_id": 7134167, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/615a7f3f09825c7a67a488486f849425?s=128&d=identicon&r=PG&f=1", "display_name": "burytheupsidedown", "link": "https://stackoverflow.com/users/7134167/burytheupsidedown"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 292, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1546598321, "creation_date": 1546478335, "question_id": 54015194, "link": "https://stackoverflow.com/questions/54015194/two-sum-leetcode-rust-solution", "title": "Two Sum Leetcode Rust Solution?", "body": "<p>I've been trying to use rust to answer some questions in leetcode. While I feel it hard to deal with linked-list, especially for question Two Sum. How should I deal with the problem of moved value?</p>\n\n<p>This is a piece of code can pass the test.</p>\n\n<pre><code>// Definition for singly-linked list.\n// #[derive(PartialEq, Eq, Debug)]\n// pub struct ListNode {\n//   pub val: i32,\n//   pub next: Option&lt;Box&lt;ListNode&gt;&gt;\n// }\n// \n// impl ListNode {\n//   #[inline]\n//   fn new(val: i32) -&gt; Self {\n//     ListNode {\n//       next: None,\n//       val\n//     }\n//   }\n// }\npub fn add_two_numbers(l1: Option&lt;Box&lt;ListNode&gt;&gt;, l2: Option&lt;Box&lt;ListNode&gt;&gt;) -&gt; Option&lt;Box&lt;ListNode&gt;&gt; {\n        let mut head1 = l1;\n        let mut head2 = l2;\n        let mut res = Some(Box::new(ListNode::new(0)));\n        let mut tmp = &amp;mut res;\n        loop {\n            let node1 = head1.take().unwrap_or(Box::new(ListNode::new(0)));\n            let node2 = head2.take().unwrap_or(Box::new(ListNode::new(0)));\n            tmp = match tmp.as_mut(){\n                Some(_n) =&gt; {\n                    let sum = node1.val + node2.val + _n.val;\n                    let carry = sum /10;\n                    _n.val = sum % 10;\n                    if node1.next.is_none() &amp;&amp; node2.next.is_none() &amp;&amp; carry == 0{\n                        return res;\n                    } else {\n                        _n.next = Some(Box::new(ListNode::new(carry)));\n                    }\n                    &amp;mut _n.next\n                }\n                _ =&gt; unreachable!(),\n            };\n            head1 = node1.next;\n            head2 = node2.next;\n        }\n    }\n</code></pre>\n\n<p>While it can't pass local compile, having error message </p>\n\n<pre><code>error[E0506]: cannot assign to `tmp` because it is borrowed\n   --&gt; empty.rs:109:13\n    |\n109 |               tmp = match tmp.as_mut(){\n    |               ^           --- borrow of `tmp` occurs here\n    |  _____________|\n    | |\n110 | |                 Some(_n) =&gt; {\n111 | |                 let sum = node1.val + node2.val + _n.val;\n112 | |                 let carry = sum /10;\n...   |\n121 | |                 _ =&gt; unreachable!(),\n122 | |             };\n    | |_____________^ assignment to borrowed `tmp` occurs here\n\nerror[E0499]: cannot borrow `*tmp` as mutable more than once at a time\n   --&gt; empty.rs:109:25\n    |\n109 |             tmp = match tmp.as_mut(){\n    |                         ^^^ mutable borrow starts here in previous iteration of loop\n...\n126 |     }\n    |     - mutable borrow ends here\n\nerror[E0505]: cannot move out of `res` because it is borrowed\n   --&gt; empty.rs:115:28\n    |\n105 |         let mut tmp = &amp;mut res;\n    |                            --- borrow of `res` occurs here\n...\n115 |                     return res;\n    |                            ^^^ move out of `res` occurs here\n</code></pre>\n\n<p>I thought I might understand a little bit since tmp is a mutable reference to res, then res is moved. But how could I keep the head of a linked list while at the meantime, keep adding tails to it?</p>\n"}]