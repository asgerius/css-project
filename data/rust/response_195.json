[{"tags": ["iterator", "rust", "lifetime"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1538609530, "post_id": 52636850, "comment_id": 92207064, "body": "Could you please include the full error message in your question?  It&#39;s the most important bit of information when trying to find the cause of an error."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1538611304, "post_id": 52636850, "comment_id": 92207396, "body": "You won&#39;t be able to unwrap <code>self.v0</code>, since you only borrowed it. The error message is probably caused by the fact that the first element of your pair has a lifetime tied to the borrow of<code>Iter</code> passed in as <code>self</code>, while the return value requires lifetime <code>&#39;a</code>, which is tied to the borrow of the underlying <code>TinyMap</code> stored in the iterator. An iterator can&#39;t return items that are tied to the lifetime of <code>self</code>, since this would require <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1598-generic_associated_types.md\" rel=\"nofollow noreferrer\">generic associated types</a>, which are not yet supported by Rust."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1538611330, "post_id": 52636850, "comment_id": 92207400, "body": "Welcome to Stack Overflow! Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/52636850/edit\">edit</a> your question to include it. Emphasis on <b>minimal</b>. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> as well."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1538611663, "post_id": 52636850, "comment_id": 92207469, "body": "For example, <a href=\"https://play.rust-lang.org/?gist=ae9d6ce438a5dd384b0ca9f9e6d88864&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">this continues to reproduce the error</a> and you could probably get even smaller with minimal effort."}, {"owner": {"reputation": 11, "user_id": 10453784, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/07c129940a5e069e2ec66a266e0e3893?s=128&d=identicon&r=PG&f=1", "display_name": "Mohammad Rezaei", "link": "https://stackoverflow.com/users/10453784/mohammad-rezaei"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1538613517, "post_id": 52636850, "comment_id": 92207806, "body": "@Shepmaster thanks for the minimal example. Sorry, I couldn&#39;t get it down that far (my code is actually much larger). (I know this is just an excuse, but I thought context mattered here, because I have no other place I can put K::zero())."}, {"owner": {"reputation": 11, "user_id": 10453784, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/07c129940a5e069e2ec66a266e0e3893?s=128&d=identicon&r=PG&f=1", "display_name": "Mohammad Rezaei", "link": "https://stackoverflow.com/users/10453784/mohammad-rezaei"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1538613724, "post_id": 52636850, "comment_id": 92207854, "body": "@SvenMarnach, I found this [link] (<a href=\"https://medium.com/@jordan_98525/reference-iterators-in-rust-5603a51b5192\" rel=\"nofollow noreferrer\">medium.com/@jordan_98525/&hellip;</a>) that explains why iterators can&#39;t return references to values they hold. Even if I get rid of the reference to self.k, I have a lifetime error with the value part. So I guess there are two questions here: how do I return a reference to K::zero(), and what&#39;s with the lifetime error on the value?"}, {"owner": {"reputation": 11, "user_id": 10453784, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/07c129940a5e069e2ec66a266e0e3893?s=128&d=identicon&r=PG&f=1", "display_name": "Mohammad Rezaei", "link": "https://stackoverflow.com/users/10453784/mohammad-rezaei"}, "edited": false, "score": 0, "creation_date": 1538614885, "post_id": 52636850, "comment_id": 92208082, "body": "I fixed the problem with the value. The correct expression is (*self.v0).as_ref().unwrap(), so the only remaining issue is K::zero(). If I put that in my TinyMap it won&#39;t be tiny anymore... I&#39;ll go with that for now."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1538651039, "post_id": 52636850, "comment_id": 92222250, "body": "The easiest way to fix the problem with <code>K::zero()</code> is to store it in <code>TinyMap</code> as well, even if it is  redundant.  If <code>K</code> wasn&#39;t a generic type, the problem would be trivial to solve, since you could introduce static variables for 0 and 1 and return references to the static variables, solving all lifetime issues.  If <code>K</code> needs to be generic, and you really can&#39;t store all the keys in <code>TinyMap</code>, you may be able to build something using <code>lazy_static</code> and <code>typemap</code>, but it&#39;s probably not going to be worth it."}], "answers": [{"comments": [{"owner": {"reputation": 11, "user_id": 10453784, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/07c129940a5e069e2ec66a266e0e3893?s=128&d=identicon&r=PG&f=1", "display_name": "Mohammad Rezaei", "link": "https://stackoverflow.com/users/10453784/mohammad-rezaei"}, "edited": false, "score": 0, "creation_date": 1538615328, "post_id": 52637555, "comment_id": 92208167, "body": "Thanks, I get the &quot;next() can&#39;t reference iterator contents&quot; now. Is there a way to return a reference to K::zero() without putting it in TinyMap (as it would no longer be tiny)?"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1538646742, "post_id": 52637555, "comment_id": 92219817, "body": "I don&#39;t agree with the &quot;why&quot; part.  This is <i>not</i> an intentional part of the contract for iterators.  It&#39;s just not possible in current Rust to parametrize associated types with a lifetime, so the <code>Item</code> type simply can&#39;t be tied to the lifetime of <code>self</code>.  This is actually the motivating example in the <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1598-generic_associated_types.md\" rel=\"nofollow noreferrer\">generic associated types RFC</a>."}], "tags": [], "owner": {"reputation": 600, "user_id": 3754495, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/65fff37f6d10b64ca1676adcc33f5ffb?s=128&d=identicon&r=PG", "display_name": "notriddle", "link": "https://stackoverflow.com/users/3754495/notriddle"}, "is_accepted": false, "score": 0, "last_activity_date": 1538614814, "creation_date": 1538614814, "answer_id": 52637555, "question_id": 52636850, "link": "https://stackoverflow.com/questions/52636850/whats-the-appropriate-way-to-return-a-reference-to-the-value-from-a-generic-ass/52637555#52637555", "title": "What&#39;s the appropriate way to return a reference to the value from a generic associated function?", "body": "<p>It's not possible to do that with the <code>Iterator</code> trait, because of the lifetime of the self reference (which is elided away in your code, but can be explicitly written like this):</p>\n\n<pre><code>type Item = (&amp;'a K, &amp;'a V);\nfn next&lt;'s&gt;(&amp;'s mut self) -&gt; Self::Item;\n</code></pre>\n\n<p>Since <code>'s</code> doesn't appear in the function's return value (and can't appear in there, because <code>Self::Item</code> can't use type parameters of the function), the output is not allowed to hold a reference to any of the iterator's member variables.</p>\n\n<p>That's the mechanics of the mistake, now here's the <em>why</em> part:</p>\n\n<p>Consider a function that does include a reference to a member of self, with all the lifetimes set up correctly:</p>\n\n<pre><code>struct SomeMember;\nstruct SomeObject {\n    some_member: SomeMember,\n}\nimpl SomeObject {\n    fn some_function&lt;'s&gt;(&amp;'s mut self) -&gt; &amp;'s SomeMember {\n        &amp;self.some_member\n    }\n}\n</code></pre>\n\n<p>The same way you're trying to return <code>&amp;self.k</code>, but without any other things going on, and with the lifetimes fixed so that it's allowed. However, if I then try to do this:</p>\n\n<pre><code>fn main() {\n    let mut some_object = SomeObject{some_member: SomeMember};\n    let _item_1 = some_object.some_function();\n    let _item_2 = some_object.some_function();\n}\n</code></pre>\n\n\n\n<pre><code>error[E0499]: cannot borrow `some_object` as mutable more than once at a time\n  --&gt; src/main.rs:15:23\n   |\n14 |         let _item_1 = some_object.some_function();\n   |                       ----------- first mutable borrow occurs here\n15 |         let _item_2 = some_object.some_function();\n   |                       ^^^^^^^^^^^ second mutable borrow occurs here\n16 |     }\n   |     - first borrow ends here\n</code></pre>\n\n<p>The second call wasn't allowed, because it borrows <code>some_object</code> twice, mutably, a classic Rust no-no! But if I had tried to implement an iterator with an Item type that borrowed the iterator itself, then <code>Iterator::collect()</code> would be impossible, because it tries to pull more than one item out at once!</p>\n\n<p>So, no, an iterator can't return an item that borrows its contents. That's an explicit, and intentional, part of the trait contract for iterators.</p>\n"}, {"tags": [], "owner": {"reputation": 11, "user_id": 10453784, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/07c129940a5e069e2ec66a266e0e3893?s=128&d=identicon&r=PG&f=1", "display_name": "Mohammad Rezaei", "link": "https://stackoverflow.com/users/10453784/mohammad-rezaei"}, "is_accepted": true, "score": 0, "last_activity_date": 1538663329, "last_edit_date": 1538663329, "creation_date": 1538660005, "answer_id": 52648083, "question_id": 52636850, "link": "https://stackoverflow.com/questions/52636850/whats-the-appropriate-way-to-return-a-reference-to-the-value-from-a-generic-ass/52648083#52648083", "title": "What&#39;s the appropriate way to return a reference to the value from a generic associated function?", "body": "<p>The consensus appears to be that as of this time (Rust 1.29), the only sensible way is to put <code>K::zero()</code> inside <code>TinyMap</code>. Thanks to @SvenMarnach for confirming my suspicions.</p>\n"}], "owner": {"reputation": 11, "user_id": 10453784, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/07c129940a5e069e2ec66a266e0e3893?s=128&d=identicon&r=PG&f=1", "display_name": "Mohammad Rezaei", "link": "https://stackoverflow.com/users/10453784/mohammad-rezaei"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 129, "favorite_count": 0, "accepted_answer_id": 52648083, "answer_count": 2, "score": 1, "last_activity_date": 1538663329, "creation_date": 1538608256, "last_edit_date": 1538619636, "question_id": 52636850, "link": "https://stackoverflow.com/questions/52636850/whats-the-appropriate-way-to-return-a-reference-to-the-value-from-a-generic-ass", "title": "What&#39;s the appropriate way to return a reference to the value from a generic associated function?", "body": "<p>Imagine a tiny map that stores 3 values, the first two for known keys. I'd like to implement an iterator for this map, but I'm running into lifetime issues. What's the appropriate way to return a reference to the value from a generic associated function (<code>K::zero()</code> in the example below)? \nFYI, I own the trait, so I tried changing it to the new <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/0195-associated-items.md\" rel=\"nofollow noreferrer\">RFC195</a> associated <code>const</code>, which didn't help.</p>\n\n<p>I've boiled down my problem to the following code:</p>\n\n<pre><code>extern crate num;\n\nuse num::*;\n\npub struct TinyMap&lt;K: Num, V&gt; {\n    v0: Option&lt;V&gt;, // value for K::zero()\n    v1: Option&lt;V&gt;, // value for K::one()\n    k2: K,         // arbitrary K\n    v2: Option&lt;V&gt;, // value for k2\n}\n\npub struct Iter&lt;'a, K: 'a + Num, V: 'a&gt; {\n    k0: K,\n    v0: &amp;'a Option&lt;V&gt;,\n    v1: &amp;'a Option&lt;V&gt;,\n    k2: &amp;'a K,\n    v2: &amp;'a Option&lt;V&gt;,\n}\n\nimpl&lt;K: Num, V&gt; TinyMap&lt;K, V&gt; {\n    pub fn iter(&amp;self) -&gt; Iter&lt;K, V&gt; {\n        Iter {\n            k0: K::zero(),\n            v0: &amp;self.v0,\n            v1: &amp;self.v1,\n            k2: &amp;self.k2,\n            v2: &amp;self.v2,\n        }\n    }\n}\n\nimpl&lt;'a, K: 'a + Num, V: 'a&gt; Iterator for Iter&lt;'a, K, V&gt; {\n    type Item = (&amp;'a K, &amp;'a V);\n\n    fn next(&amp;mut self) -&gt; Option&lt;(&amp;'a K, &amp;'a V)&gt; {\n        if (*self.v0).is_some() {\n            // code removed that remembers we did this once.\n            return Some((&amp;self.k0, ((*self.v0).as_ref()).unwrap()));\n        }\n        // if (*self.v1).is_some() {\n        //     code removed that remembers we did this once.\n        //     return Some((&amp;K::one(), &amp;((*self.v1).unwrap())));\n        // }\n        None\n    }\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for borrow expression due to conflicting requirements\n  --&gt; src/lib.rs:38:26\n   |\n38 |             return Some((&amp;self.k0, ((*self.v0).as_ref()).unwrap()));\n   |                          ^^^^^^^^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 35:5...\n  --&gt; src/lib.rs:35:5\n   |\n35 | /     fn next(&amp;mut self) -&gt; Option&lt;(&amp;'a K, &amp;'a V)&gt; {\n36 | |         if (*self.v0).is_some() {\n37 | |             // code removed that remembers we did this once.\n38 | |             return Some((&amp;self.k0, ((*self.v0).as_ref()).unwrap()));\n...  |\n44 | |         None\n45 | |     }\n   | |_____^\nnote: ...so that reference does not outlive borrowed content\n  --&gt; src/lib.rs:38:26\n   |\n38 |             return Some((&amp;self.k0, ((*self.v0).as_ref()).unwrap()));\n   |                          ^^^^^^^^\nnote: but, the lifetime must be valid for the lifetime 'a as defined on the impl at 32:6...\n  --&gt; src/lib.rs:32:6\n   |\n32 | impl&lt;'a, K: 'a + Num, V: 'a&gt; Iterator for Iter&lt;'a, K, V&gt; {\n   |      ^^\n   = note: ...so that the expression is assignable:\n           expected std::option::Option&lt;(&amp;'a K, &amp;'a V)&gt;\n              found std::option::Option&lt;(&amp;K, &amp;V)&gt;\n</code></pre>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1538573103, "post_id": 52627893, "comment_id": 92189624, "body": "cargo clean + cargo build ?"}, {"owner": {"reputation": 8608, "user_id": 1091116, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/15098b2b940cacd8b4d07026e01e3102?s=128&d=identicon&r=PG", "display_name": "d33tah", "link": "https://stackoverflow.com/users/1091116/d33tah"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1538573411, "post_id": 52627893, "comment_id": 92189829, "body": "@Stargateur is that the only / main solution?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1538573615, "post_id": 52627893, "comment_id": 92189987, "body": "Basically, even if cargo have an option for that you ask for something that need to compile again all your project, so... yes."}], "owner": {"reputation": 8608, "user_id": 1091116, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/15098b2b940cacd8b4d07026e01e3102?s=128&d=identicon&r=PG", "display_name": "d33tah", "link": "https://stackoverflow.com/users/1091116/d33tah"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 39, "favorite_count": 0, "closed_date": 1538573434, "answer_count": 0, "score": 0, "last_activity_date": 1538573495, "creation_date": 1538572463, "last_edit_date": 1538573495, "question_id": 52627893, "link": "https://stackoverflow.com/questions/52627893/is-there-a-way-to-make-cargo-check-always-show-warnings-not-just-on-the-first", "closed_reason": "Duplicate", "title": "Is there a way to make `cargo check` always show warnings, not just on the first attempt?", "body": "<p>Here's my first invocation of <code>cargo check</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo check\n    Updating crates.io index\n   Compiling num-traits v0.2.6                                                                                                                                                                                                                                                                                                                                             \n   Compiling num-integer v0.1.39                                                                                                                                                                                                                                                                                                                                           \n   Compiling num-iter v0.1.37                                                                                                                                                                                                                                                                                                                                              \n    Checking byteorder v1.2.6                                                                                                                                                                                                                                                                                                                                              \n    Checking adler32 v1.0.3                                                                                                                                                                                                                                                                                                                                                \n    Checking bitflags v1.0.4                                                                                                                                                                                                                                                                                                                                               \n    Checking bit-vec v0.5.0                                                                                                                                                                                                                                                                                                                                                \n    Checking libc v0.2.43                                                                                                                                                                                                                                                                                                                                                  \n    Checking inflate v0.4.3                                                                                                                                                                                                                                                                                                                                                \n    Checking deflate v0.7.19                                                                                                                                                                                                                                                                                                                                               \n    Checking png v0.12.0                                                                                                                                                                                                                                                                                                                                                   \n    Checking cargo_check_test v0.1.0 (/tmp/cargo_check_test)                                                                                                                                                                                                                                                                                                                        \nwarning: unused import: `std::path::Path`                                                                                                                                                                                                                                                                                                                                  \n  --&gt; src/main.rs:11:5                                                                                                                                                                                                                                                                                                                                                     \n   |                                                                                                                                                                                                                                                                                                                                                                       \n11 | use std::path::Path;                                                                                                                                                                                                                                                                                                                                                  \n   |     ^^^^^^^^^^^^^^^                                                                                                                                                                                                                                                                                                                                                   \n   |                                                                                                                                                                                                                                                                                                                                                                       \n   = note: #[warn(unused_imports)] on by default\n\n    Finished dev [unoptimized + debuginfo] target(s) in 11.30s                                                                                                                                                                                                                                                                                                             \n</code></pre>\n\n<p>And here's the second:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo check\n    Finished dev [unoptimized + debuginfo] target(s) in 0.02s                                                                                                                                                                                                                                                                                                              \n</code></pre>\n\n<p>Is there a way to make <code>cargo check</code> always show me all warnings, not just at the first attempt?</p>\n"}, {"tags": ["rust", "slice", "mutability", "borrowing"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1538566010, "post_id": 52625459, "comment_id": 92185190, "body": "Yet another case that needs non lexical lifetimes."}, {"owner": {"reputation": 490, "user_id": 738911, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/281dd26b70df2b5152c2925d536ce09e?s=128&d=identicon&r=PG", "display_name": "santi", "link": "https://stackoverflow.com/users/738911/santi"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1538567238, "post_id": 52625459, "comment_id": 92185927, "body": "I don&#39;t think it is a duplicate question, my question is why I can&#39;t print the array, asing for an explanation, not a solution to a problem, the problem is already solved in the last example."}, {"owner": {"reputation": 490, "user_id": 738911, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/281dd26b70df2b5152c2925d536ce09e?s=128&d=identicon&r=PG", "display_name": "santi", "link": "https://stackoverflow.com/users/738911/santi"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1538568535, "post_id": 52625459, "comment_id": 92186612, "body": "I don&#39;t understand you second duplication but I read about non lexical lifetimes and I am starting to understand the issue there... Basically the compiler is over-conservative :-)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1538570063, "post_id": 52625459, "comment_id": 92187601, "body": "<code>println!</code> is a <i>macro</i>, not a <i>function</i>."}], "answers": [{"comments": [{"owner": {"reputation": 490, "user_id": 738911, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/281dd26b70df2b5152c2925d536ce09e?s=128&d=identicon&r=PG", "display_name": "santi", "link": "https://stackoverflow.com/users/738911/santi"}, "edited": false, "score": 0, "creation_date": 1538567717, "post_id": 52626115, "comment_id": 92186168, "body": "That&#39;s pretty similar to what I understood, mainly for the last example. But println is not changing anything, I don&#39;t think any side effects could happen. If I don&#39;t iterate over the array, and just print it, the error is the same."}, {"owner": {"reputation": 1158, "user_id": 4956078, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44600007f35ab98b7badbf1110df0687?s=128&d=identicon&r=PG&f=1", "display_name": "JMAA", "link": "https://stackoverflow.com/users/4956078/jmaa"}, "reply_to_user": {"reputation": 490, "user_id": 738911, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/281dd26b70df2b5152c2925d536ce09e?s=128&d=identicon&r=PG", "display_name": "santi", "link": "https://stackoverflow.com/users/738911/santi"}, "edited": false, "score": 0, "creation_date": 1538568346, "post_id": 52626115, "comment_id": 92186507, "body": "You&#39;re correct, your original code can&#39;t do anything bad. But because the compiler isn&#39;t checking that you&#39;re not actually using <code>slice</code> in the loop, just that <code>slice</code> exists and therefore <i>could</i> be used, it stops you. You just have to reassure the compiler by making sure <code>slice</code> doesn&#39;t exist when you make you make another borrow of <code>ar</code>"}], "tags": [], "owner": {"reputation": 1158, "user_id": 4956078, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44600007f35ab98b7badbf1110df0687?s=128&d=identicon&r=PG&f=1", "display_name": "JMAA", "link": "https://stackoverflow.com/users/4956078/jmaa"}, "is_accepted": true, "score": 1, "last_activity_date": 1538566660, "last_edit_date": 1538566660, "creation_date": 1538566258, "answer_id": 52626115, "question_id": 52625459, "link": "https://stackoverflow.com/questions/52625459/why-cant-i-print-an-array-after-ive-taken-a-slice-of-it-in-rust/52626115#52626115", "title": "Why can&#39;t I print an array after I&#39;ve taken a slice of it in Rust?", "body": "<p>It seems you've already found the answer if your last example, but you still seem a little confused.</p>\n\n<p>The <code>println!</code> here isn't the problem at all (note how the error message, which is actually very accurate here, doesn't mention it at all). The problem is that the <code>slices</code> variable is mutably borrowing from <code>ar</code>, and <code>slices</code> still exists when <code>ar.iter()</code> tries to borrow from <code>ar</code>. You can't have a mutable and immutable borrow at the same time, so the compiler stops you.</p>\n\n<p>One solution, as you already found, is to ensure that the mutable <code>slices</code> borrow doesn't exist when you use <code>ar.iter()</code> (which borrows <code>ar</code>).</p>\n\n<hr>\n\n<p>As for <em>why</em> the compiler is stopping you from doing this, it's because it doesn't want the value of an immutable borrow to unexpectedly change from under you. Basically, when you immutably borrow <code>ar</code> for <code>ar.iter</code>, it would be very strange if the underlying data suddenly changed. But since <code>slice</code> is already mutably borrowing the same data you <em>could</em> put some code in your loop that changes <code>ar</code> via <code>slice</code>, which would affect the iterator. The compiler doesn't want you doing this. The way it guarantees that you can't is by ensuring that no mutable borrow (<code>slice</code> in this case) exists when you make the immutable borrow. Right now, it doesn't check whether there is code that is actually trying to use the mutable borrow in the loop, it just guarantees that there couldn't possibly be.</p>\n"}], "owner": {"reputation": 490, "user_id": 738911, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/281dd26b70df2b5152c2925d536ce09e?s=128&d=identicon&r=PG", "display_name": "santi", "link": "https://stackoverflow.com/users/738911/santi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 727, "favorite_count": 0, "closed_date": 1538570021, "accepted_answer_id": 52626115, "answer_count": 1, "score": 0, "last_activity_date": 1538569934, "creation_date": 1538563945, "last_edit_date": 1538569934, "question_id": 52625459, "link": "https://stackoverflow.com/questions/52625459/why-cant-i-print-an-array-after-ive-taken-a-slice-of-it-in-rust", "closed_reason": "Duplicate", "title": "Why can&#39;t I print an array after I&#39;ve taken a slice of it in Rust?", "body": "<p>Why can't I pass data to a function when that function is not going to modify it and the ownership context doesn't end there?</p>\n\n<p>This code gives an error:</p>\n\n<pre><code>let mut ar = [1, 2, 3, 4, 5];\nlet slice = &amp;mut ar[1..=3];\nslice[1] = 9;\nprintln!(\"{:?} \", slice);\nfor e in ar.iter(){\n    println!(\"{}\", e)\n}\n</code></pre>\n\n<p>This is the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `ar` as immutable because it is also borrowed as mutable\n --&gt; src/main.rs:6:14\n  |\n3 |     let slice = &amp;mut ar[1..=3];\n  |                      -- mutable borrow occurs here\n...\n6 |     for e in ar.iter() {\n  |              ^^ immutable borrow occurs here\n...\n9 | }\n  | - mutable borrow ends here\n</code></pre>\n\n<p>My guess is that we can't pass the array to the <code>println!</code> function because we have borrowed it, but I can't understand why. It's not like the <code>println!</code> function will change it!</p>\n\n<p>I find the following behaviour difficult to understand. How can I print an array if I have slices of it?</p>\n\n<p>This code works and prints <code>[2, 9, 4]</code></p>\n\n<pre><code>let mut ar = [1, 2, 3, 4, 5];\nlet slice = &amp;mut ar[1..=3];\nslice[1] = 9;\nprintln!(\"{:?} \", slice);\n</code></pre>\n\n<p>Also, this code works and prints everything properly, by modifying the slice we modify the original array!</p>\n\n<pre><code>let mut ar = [1, 2, 3, 4, 5];\n{\n    let slice = &amp;mut ar[1..=3];\n    slice[1] = 9;\n    println!(\"{:?} \", slice); // -&gt; [2, 9, 4]\n}\nfor e in ar.iter(){\n    println!(\"{}\", e) //-&gt; 1 2 9 4 5 as expected since the slice has changed\n}\n</code></pre>\n"}, {"tags": ["asynchronous", "rust", "rust-tokio"], "comments": [{"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 0, "creation_date": 1538557836, "post_id": 52622206, "comment_id": 92180482, "body": "I&#39;m not hugely familiar with Tokio (hence why I&#39;m not writing a full answer), but I think you&#39;d need to <code>read_to_end</code> from the socket into a buffer, append the extra data into the buffer, and then <code>write_all</code> from the buffer to the socket. The Tokio docs have <a href=\"https://tokio.rs/docs/getting-started/io/#using-the-future-api\" rel=\"nofollow noreferrer\">an example</a> of using the <code>read</code>/<code>write</code> helpers that you could probably adapt to your use case."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1538563312, "post_id": 52622206, "comment_id": 92183692, "body": "It is rather unclear to me what exactly your problem is, and what you tried.  The code you showed is just a copy of the echo server example from Tokio, without any modifications, so it doesn&#39;t look like you tried anything at all so far."}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1538564451, "post_id": 52622206, "comment_id": 92184342, "body": "@SvenMarnach I put the code to explain the context that I am working on. The opening socket and running them via tokio core will be the same. I am currently trying to get the data as framed from socket but I am not sure how to send it back to client after I changed it."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1538570421, "post_id": 52622206, "comment_id": 92187860, "body": "It sounds like you want an answer to <i>write your code for you</i>. That doesn&#39;t feel in the spirit of Stack Overflow to me."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1538601999, "post_id": 52622206, "comment_id": 92205000, "body": "@AkinerAlkan Just to expand this a bit more, questions on Stack Overflow shoud be about one specific problem, so the answer can benefit many people.  For this reason, we need to understand what exactly you have trouble with.  A question simply saying &quot;I copied this example and want to change it in this way, but I don&#39;t really know how&quot; doesn&#39;t really fit with this approach, so you would be better off asking on Reddit or the Rust user forums.  These sites have a broader scope than Stack Overflow."}], "answers": [{"tags": [], "owner": {"reputation": 146, "user_id": 2055065, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b7eb4e5e16d6065e239134549c0929d3?s=128&d=identicon&r=PG", "display_name": "Markus Ebner", "link": "https://stackoverflow.com/users/2055065/markus-ebner"}, "is_accepted": true, "score": 1, "last_activity_date": 1538759838, "creation_date": 1538759838, "answer_id": 52670526, "question_id": 52622206, "link": "https://stackoverflow.com/questions/52622206/how-can-i-asynchronously-retrieve-data-and-modify-it-with-a-tokio-based-echo-ser/52670526#52670526", "title": "How can I asynchronously retrieve data and modify it with a Tokio-based echo server?", "body": "<p>An echo server is kind of special in a sense, that exactly one \"request\" from a client is followed by exactly one response from the server. A very nice example for such a use-case is tokio's <a href=\"https://github.com/tokio-rs/tokio/blob/2f690d30bc061a8595744e34fde371882b676a86/examples/tinydb.rs\" rel=\"nofollow noreferrer\">TinyDB example</a>.</p>\n\n<p>One thing that should be considered, however, is that while UDP is based on packets, that hit the other side in the exact form that you sent them with, TCP is not. TCP is a stream protocol - it has strong guarantees relating that a packet was received by the other side and that the data sent is received in exactly the order it was sent in. However, what is not guaranteed is, that one call to \"send\" on the one side leads to exactly one \"receive\" call on the other side, returning the exact same chunk of data that was sent. This is especially of interest when sending very long chunks of data, where one send maps to multiple receives. Thus you should settle for a delimiter that the server can wait for before trying to send a response to the client. In Telnet, that delimiter would be \"\\r\\n\".\nThat is where tokio's Decoder/Encoder infrastructure comes to play. An example implementation of such a codec is <a href=\"https://docs.rs/tokio/0.1.11/tokio/codec/struct.LinesCodec.html\" rel=\"nofollow noreferrer\">LinesCodec</a>. If you want to have\nTelnet, this does exactly what you want. It will give you exactly one message at a time and allow you to send exactly one such message at a time as response:</p>\n\n<pre><code>extern crate tokio;\n\nuse tokio::codec::Decoder;\nuse tokio::net::TcpListener;\nuse tokio::prelude::*;\nuse tokio::codec::LinesCodec;\nuse std::net::SocketAddr;\n\nfn main() {\n    let addr = \"127.0.0.1:15000\".parse::&lt;SocketAddr&gt;().unwrap();\n\n    let socket = TcpListener::bind(&amp;addr).unwrap();\n    println!(\"Listening on: {}\", addr);\n\n    let done = socket.incoming()\n        .map_err(|e| println!(\"failed to accept socket; error = {:?}\", e))\n        .for_each(move |socket| {\n            // Fit the line-based codec on top of the socket. This will take on the task of\n            // parsing incomming messages, as well as formatting outgoing ones (appending \\r\\n).\n            let (lines_tx, lines_rx) = LinesCodec::new().framed(socket).split();\n\n            // This takes every incomming message and allows to create one outgoing message for it,\n            // essentially generating a stream of responses.\n            let responses = lines_rx.map(|incomming_message| {\n                // Implement whatever transform rules here\n                if incomming_message == \"hello\" {\n                    return String::from(\"hello from server\");\n                }\n                return incomming_message;\n            });\n\n            // At this point `responses` is a stream of `Response` types which we\n            // now want to write back out to the client. To do that we use\n            // `Stream::fold` to perform a loop here, serializing each response and\n            // then writing it out to the client.\n            let writes = responses.fold(lines_tx, |writer, response| {\n                //Return the future that handles to send the response to the socket\n                writer.send(response)\n            });\n\n            // Run this request/response loop until the client closes the connection\n            // Then return Ok(()), ignoring all eventual errors.\n            tokio::spawn(\n                writes.then(move |_| Ok(()))\n            );\n\n            return Ok(());\n        });\n\n    tokio::run(done);\n}\n</code></pre>\n"}], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 355, "favorite_count": 0, "accepted_answer_id": 52670526, "answer_count": 1, "score": 0, "last_activity_date": 1538759838, "creation_date": 1538552867, "last_edit_date": 1538570339, "question_id": 52622206, "link": "https://stackoverflow.com/questions/52622206/how-can-i-asynchronously-retrieve-data-and-modify-it-with-a-tokio-based-echo-ser", "title": "How can I asynchronously retrieve data and modify it with a Tokio-based echo server?", "body": "<p>I am working on an echo server which takes data from TCP and applies some logic to that data. For example, if the client data comes in as <code>hello</code> I want to respond it as<code>hello from server</code>.</p>\n\n<p>I am able to forward the input data using the <code>copy</code> function, but this is not useful in my case. </p>\n\n<p>Here is the starting code that I am working on:</p>\n\n<pre><code>extern crate futures;\nextern crate tokio_core;\nextern crate tokio_io;\n\nuse futures::stream::Stream;\nuse futures::Future;\nuse std::net::SocketAddr;\nuse tokio_core::net::TcpListener;\nuse tokio_core::reactor::Core;\nuse tokio_io::io::copy;\nuse tokio_io::AsyncRead;\n\nfn main() {\n    let addr = \"127.0.0.1:15000\".parse::&lt;SocketAddr&gt;().unwrap();\n    let mut core = Core::new().unwrap();\n    let handle = core.handle();\n\n    let socket = TcpListener::bind(&amp;addr, &amp;handle).unwrap();\n    println!(\"Listening on: {}\", addr);\n\n    let done = socket.incoming().for_each(move |(socket, addr)| {\n        let (reader, writer) = socket.split();\n        let amt = copy(reader, writer);\n\n        let msg = amt.then(move |result| {\n            match result {\n                Ok((amt, _, _)) =&gt; println!(\"wrote {} bytes to {}\", amt, addr),\n                Err(e) =&gt; println!(\"error on {}: {}\", addr, e),\n            }\n\n            Ok(())\n        });\n\n        handle.spawn(msg);\n\n        Ok(())\n    });\n\n    core.run(done).unwrap();\n}\n</code></pre>\n\n<p>I know that I need to add some logic instead of this copy function but how?</p>\n\n<pre><code>let amt = copy(reader, writer);\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 1, "creation_date": 1538554583, "post_id": 52619274, "comment_id": 92178794, "body": "Just <a href=\"https://play.rust-lang.org/?gist=61b3bad332c166778cd73553354ab791&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">removing the <code>Box</code></a> seems to work for me. Is that what you want?"}, {"owner": {"reputation": 797, "user_id": 4803321, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/26ViJ.png?s=128&g=1", "display_name": "\u5468\u6c49\u6210", "link": "https://stackoverflow.com/users/4803321/%e5%91%a8%e6%b1%89%e6%88%90"}, "reply_to_user": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1538570423, "post_id": 52619274, "comment_id": 92187864, "body": "It works for me too. But I found what I need is still more complex than it. I don&#39;t know whether I need to take a break, or keep asking question. I&#39;m new to Rust, and I&#39;m tired."}, {"owner": {"reputation": 797, "user_id": 4803321, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/26ViJ.png?s=128&g=1", "display_name": "\u5468\u6c49\u6210", "link": "https://stackoverflow.com/users/4803321/%e5%91%a8%e6%b1%89%e6%88%90"}, "reply_to_user": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1538572622, "post_id": 52619274, "comment_id": 92189303, "body": "What I want is: <a href=\"https://play.rust-lang.org/?gist=044651be795dc090ce740e7ca6f7a437\" rel=\"nofollow noreferrer\">play.rust-lang.org/?gist=044651be795dc090ce740e7ca6f7a437</a>"}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1538572908, "post_id": 52619274, "comment_id": 92189498, "body": "It looks like you are mixing <code>fn</code>, <code>dyn Fn</code> and maybe <code>impl Fn</code>. I&#39;m not familiar with <code>tool</code> but messing around, <a href=\"https://play.rust-lang.org/?gist=bd576c6aa83f8bdf5b955dc6c5fdbe23&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">this version</a> compiles."}, {"owner": {"reputation": 797, "user_id": 4803321, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/26ViJ.png?s=128&g=1", "display_name": "\u5468\u6c49\u6210", "link": "https://stackoverflow.com/users/4803321/%e5%91%a8%e6%b1%89%e6%88%90"}, "reply_to_user": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1538573289, "post_id": 52619274, "comment_id": 92189751, "body": "I will learn them soon, Hi I change the gist just now when you are helping me. Shall you check it again: <a href=\"https://play.rust-lang.org/?gist=044651be795dc090ce740e7ca6f7a437\" rel=\"nofollow noreferrer\">play.rust-lang.org/?gist=044651be795dc090ce740e7ca6f7a437</a>"}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1538589292, "post_id": 52619274, "comment_id": 92199249, "body": "Other than the obvious typo in the return type, <a href=\"https://play.rust-lang.org/?gist=efffbfc0354f8cbe2011feb771339e9e&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">the correction would be similar to the previous one</a>."}], "answers": [{"comments": [{"owner": {"reputation": 797, "user_id": 4803321, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/26ViJ.png?s=128&g=1", "display_name": "\u5468\u6c49\u6210", "link": "https://stackoverflow.com/users/4803321/%e5%91%a8%e6%b1%89%e6%88%90"}, "edited": false, "score": 1, "creation_date": 1538884546, "post_id": 52662767, "comment_id": 92298241, "body": "In your first comment, <a href=\"https://play.rust-lang.org/?gist=61b3bad332c166778cd73553354ab791\" rel=\"nofollow noreferrer\">removing the Box</a>, I don&#39;t see any dynamic references,<code>fn b (c: impl Fn(u64) -&gt; u64, n: u64)</code> just works out, why?"}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "reply_to_user": {"reputation": 797, "user_id": 4803321, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/26ViJ.png?s=128&g=1", "display_name": "\u5468\u6c49\u6210", "link": "https://stackoverflow.com/users/4803321/%e5%91%a8%e6%b1%89%e6%88%90"}, "edited": false, "score": 0, "creation_date": 1538921124, "post_id": 52662767, "comment_id": 92305448, "body": "@\u5468\u6c49\u6210: Ah, but the code in that comment does have a dynamic reference. You don&#39;t see it because the type is deduced by the compiler: the <code>f</code> argument in the lambda function. If you check its type, it is <code>&amp;dyn Fn(_) -&gt; _</code>. Which is expected, because that is what <code>fix()</code> needs."}], "tags": [], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "is_accepted": true, "score": 1, "last_activity_date": 1538732735, "creation_date": 1538732735, "answer_id": 52662767, "question_id": 52619274, "link": "https://stackoverflow.com/questions/52619274/recursive-closure-as-function-parameter-cannot-infer-an-appropriate-lifetime-du/52662767#52662767", "title": "Recursive closure as function parameter \u201ccannot infer an appropriate lifetime due to conflicting requirements\u201d", "body": "<p>It looks like you are mixing several concepts here. First of all you must understand the difference between these:</p>\n\n<ol>\n<li><code>fn(A) -&gt; B</code></li>\n<li><code>impl Fn(A) -&gt; B</code> or <code>T: Fn(A) -&gt; B</code></li>\n<li><code>&amp;dyn Fn(A) -&gt; B</code></li>\n<li><code>Box&lt;dyn Fn(A) -&gt; B&gt;</code></li>\n</ol>\n\n<p>Number 1 is the type of a pointer to a function, just like in C.</p>\n\n<p>Number 2 is a generic type that implements the <em>function</em> trait <code>Fn</code>, that is a type that is <em>callable</em>.</p>\n\n<p>Number 3 is a dynamic reference to a callable object (the <code>dyn</code> keyword is optional).</p>\n\n<p>Number 4 is a <em>trait object</em>, that is a boxed callable object with the real type erased.</p>\n\n<p>Now look at the definition of <a href=\"https://docs.rs/tool/0.2.1/tool/fn.fix.html\" rel=\"nofollow noreferrer\"><code>tool::fix</code></a>:</p>\n\n<pre><code>pub fn fix&lt;A, B, F&gt;(f: F) -&gt; impl Fn(A) -&gt; B \nwhere\n    F: Fn(&amp;Fn(A) -&gt; B, A) -&gt; B, \n</code></pre>\n\n<p>From that you see that <code>fix</code> uses number 2 for the <code>f</code> parameter, but number 3 for the <code>A</code> parameter of <code>f</code>. Also, it returns number 2.</p>\n\n<p>The tricky part here is that <code>f</code> is a function that takes a function as argument. The <code>f</code> itself can be any of any kind that implements <code>Fn</code>, but the first argument of that function must be of <code>&amp;dyn Fn</code> kind.</p>\n\n<p>Your original error comes from trying to box a <code>&amp;dyn Fn(A) -&gt; B</code>, but you cannot do that generically, because such a value may contain references, and <code>Box</code> requires a <code>'static</code> type.</p>\n\n<p>But with all that in mind you can carefully write your function without using <code>Box</code>, so your problem just disappears, and the result is nicer (<a href=\"https://play.rust-lang.org/?gist=313cb1d53170ab2a14b7caa7f3ba21a3&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a>):</p>\n\n<pre><code>fn main() {\n    fn wrap (wrap_fn: impl Fn(&amp;dyn Fn(u64) -&gt; u64, u64) -&gt; u64) -&gt; impl Fn(u64) -&gt; u64 {\n        let a = RefCell::new(false);\n\n        let fib = fix(move |f, x| {\n            *a.borrow_mut() = true;\n            if x == 0 || x == 1 {\n                x\n            } else {\n                // `f` is `fib`\n                wrap_fn(f, x - 1) + wrap_fn(f, x - 2)\n            }\n        });  \n\n        fib\n    }\n\n    fn b (c: &amp;dyn Fn(u64) -&gt; u64, n: u64) -&gt; u64 {\n        c(n)\n    }\n\n    println!(\"{}\", (wrap(b))(10));\n}\n</code></pre>\n"}], "owner": {"reputation": 797, "user_id": 4803321, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/26ViJ.png?s=128&g=1", "display_name": "\u5468\u6c49\u6210", "link": "https://stackoverflow.com/users/4803321/%e5%91%a8%e6%b1%89%e6%88%90"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 238, "favorite_count": 0, "accepted_answer_id": 52662767, "answer_count": 1, "score": 0, "last_activity_date": 1538732735, "creation_date": 1538537107, "question_id": 52619274, "link": "https://stackoverflow.com/questions/52619274/recursive-closure-as-function-parameter-cannot-infer-an-appropriate-lifetime-du", "title": "Recursive closure as function parameter \u201ccannot infer an appropriate lifetime due to conflicting requirements\u201d", "body": "<p>This question is more complex than <a href=\"https://stackoverflow.com/questions/28627673/closure-as-function-parameter-cannot-infer-an-appropriate-lifetime-due-to-confl\">Closure as function parameter \u201ccannot infer an appropriate lifetime due to conflicting requirements\u201d</a>.</p>\n\n<p>There's a recursive closure which move environmental variable into it.</p>\n\n<p>The code below works, <a href=\"https://github.com/Stebalien/tool-rs\" rel=\"nofollow noreferrer\">tool</a> is a grab-bag of useful functions for functional programming includes <a href=\"https://docs.rs/tool/0.2.1/tool/fn.fix.html\" rel=\"nofollow noreferrer\">making recursive closure</a>:</p>\n\n<pre><code>extern crate tool;\nuse tool::prelude::*;\nuse std::cell::Cell;\n\nfn main() {\n    let a = Cell::new(false);\n\n    let fib = fix(move |f, x| {\n        a.set(true);\n        if x == 0 || x == 1 {\n            x\n        } else {\n            // `f` is `fib`\n            f(x - 1) + f(x - 2)\n        }\n    });\n\n    println!(\"{}\", fib(10));\n}\n</code></pre>\n\n<p>I want to know is it possible to pass that closure to a function, then call that function in that closure, the code below throws an error.</p>\n\n<pre><code>extern crate tool;\nuse tool::prelude::*;\nuse std::cell::RefCell;\n\nfn main() {\n    let a = RefCell::new(false);\n\n    let fib = fix(move |f, x| {\n        *a.borrow_mut() = true;\n        if x == 0 || x == 1 {\n            x\n        } else {\n            // `f` is `fib`\n            b(Box::new(f), x - 1) + f(x - 2)\n        }\n    });\n\n    fn b (c: Box&lt;Fn(u64) -&gt; u64&gt;, n: u64) -&gt; u64 {\n        c(n)\n    }\n\n    println!(\"{}\", b(Box::new(fib), 10));\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime due to conflicting requirements\n  --&gt; src/main.rs:14:24\n   |\n14 |             b(Box::new(f), x - 1) + f(x - 2)\n   |                        ^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #2 defined on the body at 8:19... \n  --&gt; src/main.rs:8:19\n   |\n8  |       let fib = fix(move |f, x| {\n   |  ___________________^\n9  | |         *a.borrow_mut() = true;\n10 | |         if x == 0 || x == 1 {\n11 | |             x\n...  |\n15 | |         }\n16 | |     });\n   | |_____^\n   = note: ...so that the expression is assignable:\n           expected &amp;dyn std::ops::Fn(u64) -&gt; u64\n              found &amp;dyn std::ops::Fn(u64) -&gt; u64\n   = note: but, the lifetime must be valid for the static lifetime...\n   = note: ...so that the expression is assignable:\n           expected std::boxed::Box&lt;(dyn std::ops::Fn(u64) -&gt; u64 + 'static)&gt;\n              found std::boxed::Box&lt;dyn std::ops::Fn(u64) -&gt; u64&gt;\n</code></pre>\n"}, {"tags": ["rust"], "owner": {"reputation": 31, "user_id": 10448973, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c93a506d812d18e393414b53174c944c?s=128&d=identicon&r=PG&f=1", "display_name": "cypres", "link": "https://stackoverflow.com/users/10448973/cypres"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 52, "favorite_count": 1, "closed_date": 1538556924, "answer_count": 0, "score": 1, "last_activity_date": 1538533178, "creation_date": 1538533178, "question_id": 52618825, "link": "https://stackoverflow.com/questions/52618825/why-do-i-have-to-include-bufread-and-write-in-the-below-use-declaration", "closed_reason": "Duplicate", "title": "Why do I have to include `BufRead` and `Write` in the below `use` declaration?", "body": "<p>Why do I have to include <code>BufRead</code> and <code>Write</code> in the below <code>use</code> declaration?</p>\n\n<pre><code>use std::io::{self, BufRead, Write};\n\nfn main() -&gt; io::Result&lt;()&gt; {\n    let stdin = io::stdin();\n    for line in stdin.lock().lines() {\n        io::stdout().write(line.unwrap().as_bytes())?;\n    }\n    Ok(())\n}\n</code></pre>\n\n<p>From the documentation I understand that <code>use</code> basically gives you a shorthand way to refer to names, but here <code>Write</code> and especially <code>BufRead</code> are not used in the code directly. <code>write</code> looks like a method on whatever <code>io::stdout()</code> returns and <code>BufRead</code> is not mentioned in the code at all.</p>\n\n<p>What are the rules on how to figure out what <code>use</code> declarations are necessary?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 4, "creation_date": 1538514896, "post_id": 52616310, "comment_id": 92167200, "body": "(Actually, in C, these is no concept of heap or stack, malloc is only require to give memory, whatever it is, some implementation of malloc use &quot;the stack&quot;, but C doesn&#39;t care, and that is the point, C abstract this for you (however under the hood malloc often use &quot;the heap&quot;))"}, {"owner": {"reputation": 193600, "user_id": 87189, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/98e7d6edce863e7a1bf8199b082eb25e?s=128&d=identicon&r=PG", "display_name": "tadman", "link": "https://stackoverflow.com/users/87189/tadman"}, "edited": false, "score": 2, "creation_date": 1538515044, "post_id": 52616310, "comment_id": 92167250, "body": "Try not to think of &quot;stack&quot; vs. &quot;heap&quot; as those two concepts are really antiquated and mostly irrelevant since compilers can and will blur those lines really heavily. Think instead of &quot;local&quot; vs. &quot;shareable&quot; or &quot;dynamic&quot;."}, {"owner": {"reputation": 133, "user_id": 5233041, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/25ae7a1e6c78e6ce642e21bb740b26f4?s=128&d=identicon&r=PG&f=1", "display_name": "Jim Morrison", "link": "https://stackoverflow.com/users/5233041/jim-morrison"}, "edited": false, "score": 0, "creation_date": 1538515263, "post_id": 52616310, "comment_id": 92167334, "body": "Yeah I do think this way, I just want to know what is happening under the hood and how rust accomplishes that without an explicit call to something like &quot;new&quot;"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1538517744, "post_id": 52616310, "comment_id": 92168203, "body": "It is preferred to post separate questions instead of combining your questions into one. That way, it helps the people answering your question as well as others hunting for one of your questions."}, {"owner": {"reputation": 9895, "user_id": 452775, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/88963e7cc58eabf150447e7b78a24793?s=128&d=identicon&r=PG", "display_name": "Lii", "link": "https://stackoverflow.com/users/452775/lii"}, "edited": false, "score": 1, "creation_date": 1603360823, "post_id": 52616310, "comment_id": 114015401, "body": "@JimMorrison: About question 3-4: The book you link to states the following: &quot;<i>Note: there\u2019s one big difference between the MyBox&lt;T&gt; type we\u2019re about to build and the real Box&lt;T&gt;: our version will not store its data on the heap.</i>&quot; So the <code>MyBox</code> and the regular <code>Box</code> are fundamentally different!"}], "answers": [{"comments": [{"owner": {"reputation": 133, "user_id": 5233041, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/25ae7a1e6c78e6ce642e21bb740b26f4?s=128&d=identicon&r=PG&f=1", "display_name": "Jim Morrison", "link": "https://stackoverflow.com/users/5233041/jim-morrison"}, "edited": false, "score": 0, "creation_date": 1538516193, "post_id": 52616664, "comment_id": 92167696, "body": "That&#39;s actually what I thought (that Box gets a &quot;special treatment&quot;) but I couldnt find anything online that confirms this. Thanks for the answer!"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 133, "user_id": 5233041, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/25ae7a1e6c78e6ce642e21bb740b26f4?s=128&d=identicon&r=PG&f=1", "display_name": "Jim Morrison", "link": "https://stackoverflow.com/users/5233041/jim-morrison"}, "edited": false, "score": 4, "creation_date": 1538518705, "post_id": 52616664, "comment_id": 92168496, "body": "@Jim The only special thing about how <code>Box</code> handles memory is that you can use <code>*</code> to move out of it (deallocating the backing memory). Everything else about <code>Box</code> can be and is written in ordinary Rust code using <code>liballoc</code> as a backend."}, {"owner": {"reputation": 1030, "user_id": 2143214, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6ab0b46203bdd472fde873ac2a193306?s=128&d=identicon&r=PG", "display_name": "selvan", "link": "https://stackoverflow.com/users/2143214/selvan"}, "edited": false, "score": 0, "creation_date": 1602695027, "post_id": 52616664, "comment_id": 113804270, "body": "See cs242.stanford.edu/f19/lectures/07-2-smart-pointers for details on implementing simplified Box, Rc using raw pointers and traits"}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 10, "last_activity_date": 1538515700, "last_edit_date": 1592644375, "creation_date": 1538515700, "answer_id": 52616664, "question_id": 52616310, "link": "https://stackoverflow.com/questions/52616310/what-goes-on-the-stack-and-what-goes-on-the-heap-in-rust/52616664#52616664", "title": "What goes on the stack and what goes on the heap in Rust?", "body": "<ol>\n<li><p>This is hard to say. Usually Rust avoid allocating anything on the heap. Never will the compiler do an implicit allocation on the heap, but may library functions can do it for you. At least anything that is dynamically sized (eg. <code>Vec&lt;T&gt;</code>) will need something on the heap under the hood, for the rest, the documentation should hint it.</p>\n<p>Note that even in C, many functions can do heap allocation without an explicit call to <code>malloc</code>. Eg. I've had to debug a memory leak recently where a developer called <a href=\"http://man7.org/linux/man-pages/man3/getaddrinfo.3.html\" rel=\"noreferrer\"><code>getaddrinfo</code></a> without a corresponding <code>freeaddrinfo</code>, ignoring that this function allocates memory on the heap. This class of bugs should be really rare in Rust however, thanks to <a href=\"https://doc.rust-lang.org/book/2018-edition/ch04-01-what-is-ownership.html?highlight=RAII#memory-and-allocation\" rel=\"noreferrer\">RAII</a>.</p>\n</li>\n<li><p>Not at all! The book is simplifying things here to avoid details not important for this section.</p>\n</li>\n<li><p>\u2014</p>\n</li>\n<li><p><code>Box</code> is a compiler built-in. Under the hood what allocates the memory is an allocator defined as in <a href=\"https://doc.rust-lang.org/alloc/\" rel=\"noreferrer\"><code>liballoc</code></a>. You can think of this allocator as providing <code>malloc</code>-like functionality. In practice, the default allocator uses <a href=\"http://jemalloc.net/\" rel=\"noreferrer\">jemalloc</a> on most targets, it is also possible to use a custom allocator, for example the <a href=\"https://crates.io/crates/alloc_system\" rel=\"noreferrer\"><code>alloc_system</code></a> crate uses the system's <code>malloc</code>/<code>realloc</code>/<code>free</code> functions to build its allocator.</p>\n</li>\n</ol>\n"}], "owner": {"reputation": 133, "user_id": 5233041, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/25ae7a1e6c78e6ce642e21bb740b26f4?s=128&d=identicon&r=PG&f=1", "display_name": "Jim Morrison", "link": "https://stackoverflow.com/users/5233041/jim-morrison"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2367, "favorite_count": 1, "accepted_answer_id": 52616664, "answer_count": 1, "score": 8, "last_activity_date": 1603357374, "creation_date": 1538513905, "last_edit_date": 1603357374, "question_id": 52616310, "link": "https://stackoverflow.com/questions/52616310/what-goes-on-the-stack-and-what-goes-on-the-heap-in-rust", "title": "What goes on the stack and what goes on the heap in Rust?", "body": "<p>I am really confused about Rust's system of memory allocation.</p>\n<p>In Java you use <code>new</code> to allocate memory on the heap. In C you use <code>malloc()</code>, everything else goes on the stack.</p>\n<p>I thought, in Rust, <code>Box&lt;T&gt;</code> allocates memory on the heap but after reading <a href=\"https://doc.rust-lang.org/book/ch15-02-deref.html#defining-our-own-smart-pointer\" rel=\"nofollow noreferrer\">&quot;Defining Our Own Smart Pointer&quot; section in chapter 15.2 in <em>The Rust Programming Language</em></a> it seems like <code>MyBox&lt;T&gt;</code> doesn't have any special annotation to make the value of <code>T</code> live on the heap.</p>\n<ol>\n<li><p>What exactly goes on the stack and what goes on the heap?</p>\n</li>\n<li><p>Is the implementation of <code>MyBox&lt;T&gt;</code> essentially the same as <code>Box&lt;T&gt;</code>?</p>\n</li>\n<li><p>If the implementations are identical, what makes <code>T</code> stored on the heap rather than the stack?</p>\n</li>\n<li><p>If the implementations aren't identical what makes a <code>Box&lt;T&gt;</code> allocate memory on the heap?</p>\n</li>\n</ol>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 1680, "user_id": 5779280, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/9189e53b869ce72527f955625ec040f7?s=128&d=identicon&r=PG", "display_name": "Andrew Graham-Yooll", "link": "https://stackoverflow.com/users/5779280/andrew-graham-yooll"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1538510750, "post_id": 52614536, "comment_id": 92165519, "body": "Sorry, Ill change that.  This code is actually run in a test.  When I run <code>cargo test</code> it raises an error."}], "answers": [{"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 9, "last_activity_date": 1538507074, "creation_date": 1538507074, "answer_id": 52614838, "question_id": 52614536, "link": "https://stackoverflow.com/questions/52614536/how-do-i-access-a-struct-field-which-has-the-same-name-as-a-public-function/52614838#52614838", "title": "How do I access a struct field which has the same name as a public function?", "body": "<blockquote>\n  <p>How can this be?</p>\n</blockquote>\n\n<p>The language is defined in such a way that there is no conflict between fields and methods.</p>\n\n<blockquote>\n  <p>How can I access the field version?</p>\n</blockquote>\n\n<p>You can't: it is private and does not have a getter method.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 6, "last_activity_date": 1538509261, "creation_date": 1538509261, "answer_id": 52615297, "question_id": 52614536, "link": "https://stackoverflow.com/questions/52614536/how-do-i-access-a-struct-field-which-has-the-same-name-as-a-public-function/52615297#52615297", "title": "How do I access a struct field which has the same name as a public function?", "body": "<p>You access a field that is named the same as a function by <em>accessing the field</em>:</p>\n\n<pre><code>struct Example {\n    foo: i32,\n}\n\nimpl Example {\n    fn foo(&amp;self) -&gt; i32 {\n        self.foo + 100\n    }\n}\n\nfn main() {\n    let ex = Example { foo: 42 };\n\n    println!(\"{}\", ex.foo);\n    println!(\"{}\", ex.foo());\n}\n</code></pre>\n\n<p>It is assumed that, without the parenthesis, you want the field's value.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/27994509/155423\">How do I call a function through a member variable?</a></li>\n</ul>\n"}], "owner": {"reputation": 1680, "user_id": 5779280, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/9189e53b869ce72527f955625ec040f7?s=128&d=identicon&r=PG", "display_name": "Andrew Graham-Yooll", "link": "https://stackoverflow.com/users/5779280/andrew-graham-yooll"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 881, "favorite_count": 1, "accepted_answer_id": 52614838, "answer_count": 2, "score": 3, "last_activity_date": 1538591209, "creation_date": 1538505929, "last_edit_date": 1538591209, "question_id": 52614536, "link": "https://stackoverflow.com/questions/52614536/how-do-i-access-a-struct-field-which-has-the-same-name-as-a-public-function", "title": "How do I access a struct field which has the same name as a public function?", "body": "<p>I'm trying to access the version of a particular <code>clap::App</code> I have instantiated.  However, the field <a href=\"https://kbknapp.github.io/clap-rs/src/clap/app.rs.html#90\" rel=\"nofollow noreferrer\"><code>version</code></a> exists as does the public function <a href=\"https://kbknapp.github.io/clap-rs/src/clap/app.rs.html#299\" rel=\"nofollow noreferrer\"><code>version()</code></a></p>\n\n<p>Here is the relevant bits of source code:</p>\n\n<pre><code>pub struct App&lt;'a, 'v, 'ab, 'u, 'h, 'ar&gt; {\n    // ...\n    version: Option&lt;&amp;'v str&gt;,\n    // ...\n}\n\nimpl&lt;'a, 'v, 'ab, 'u, 'h, 'ar&gt; App&lt;'a, 'v, 'ab, 'u, 'h, 'ar&gt;{\n    // ...\n    pub fn version(mut self, v: &amp;'v str) -&gt; Self {\n        self.version = Some(v);\n        self\n    }\n    // ...\n}\n</code></pre>\n\n<p>And my code:</p>\n\n<pre><code>pub fn build_cli() -&gt; App&lt;'static, 'static&gt; {\n    App::new(\"my-pi\")\n        .version(\"0.1.0\")\n// ...\n\nlet app = build_cli();\nassert_eq!(app.version, \"0.1.0\"); // &lt;-- Error here\n</code></pre>\n\n<p>The field <code>version</code> and function <code>version()</code> both exist on <code>App</code>.  How can this be? And how can I access the field <code>version</code>?</p>\n\n<p>The error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0615]: attempted to take value of method `version` on type `clap::App&lt;'_, '_&gt;`\n  --&gt; src/cli.rs:27:21\n   |\n27 |         assert_eq!(app.version, \"0.1.0\");\n   |                        ^^^^^^^\n   |\n   = help: maybe a `()` to call it is missing?\n</code></pre>\n"}, {"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 28990, "user_id": 1114966, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/af8712b05e5cfb862323a07c83749054?s=128&d=identicon&r=PG", "display_name": "squiguy", "link": "https://stackoverflow.com/users/1114966/squiguy"}, "edited": false, "score": 1, "creation_date": 1538501510, "post_id": 52613313, "comment_id": 92161326, "body": "The code you listed in the playground link, can you update it here?"}, {"owner": {"reputation": 1209, "user_id": 2179822, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ec8ebff1de01237c23aa51bff540eb39?s=128&d=identicon&r=PG", "display_name": "K. Biermann", "link": "https://stackoverflow.com/users/2179822/k-biermann"}, "reply_to_user": {"reputation": 28990, "user_id": 1114966, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/af8712b05e5cfb862323a07c83749054?s=128&d=identicon&r=PG", "display_name": "squiguy", "link": "https://stackoverflow.com/users/1114966/squiguy"}, "edited": false, "score": 0, "creation_date": 1538502156, "post_id": 52613313, "comment_id": 92161640, "body": "Sry; the playground was outdated. I updated it \ud83d\ude0a"}], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1538514611, "post_id": 52613645, "comment_id": 92167099, "body": "@Shepmaster Can you show on exemple ? This is still confuse for me."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1538519498, "post_id": 52613645, "comment_id": 92168724, "body": "@Stargateur looks like it&#39;s not possible (or easy) to do here because there&#39;s already a blanket implementation on <code>T</code>. You could instead <a href=\"https://play.rust-lang.org/?gist=c514800b728c46e052247198cf8cf804&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">specify the specific trait bound needed</a>"}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 2, "last_activity_date": 1538502817, "last_edit_date": 1538502817, "creation_date": 1538502225, "answer_id": 52613645, "question_id": 52613313, "link": "https://stackoverflow.com/questions/52613313/cannot-call-a-fnt-x-from-an-implt-x-because-x-is-not-satisfied-for-t/52613645#52613645", "title": "Cannot call a fn&lt;T: X&gt; from an impl&lt;T: X&gt; because X is not satisfied for T", "body": "<p>If you expect to use <code>print_fd()</code> with a reference you must do this:</p>\n\n<pre><code>fn print_fd(p: &amp;impl RawFd) {\n    println!(\"{}\", p.raw_fd());\n}\n</code></pre>\n\n<p>or</p>\n\n<pre><code>fn print_fd&lt;T: RawFd&gt;(p: &amp;T) {\n    println!(\"{}\", p.raw_fd());\n}\n</code></pre>\n\n<hr>\n\n<p>Or you must take self by value:</p>\n\n<pre><code>impl&lt;T: RawFd&gt; Printable for T {\n    fn print(self) {\n        print_fd(self);\n    }\n}\n</code></pre>\n\n<hr>\n\n<p>Or you could use clone:</p>\n\n<pre><code>impl&lt;T&gt; Printable for T where T: Clone + RawFd {\n    fn print(&amp;self) {\n        print_fd(self.clone());\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 1209, "user_id": 2179822, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ec8ebff1de01237c23aa51bff540eb39?s=128&d=identicon&r=PG", "display_name": "K. Biermann", "link": "https://stackoverflow.com/users/2179822/k-biermann"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 60, "favorite_count": 0, "accepted_answer_id": 52613645, "answer_count": 1, "score": 0, "last_activity_date": 1538502817, "creation_date": 1538500841, "last_edit_date": 1538502385, "question_id": 52613313, "link": "https://stackoverflow.com/questions/52613313/cannot-call-a-fnt-x-from-an-implt-x-because-x-is-not-satisfied-for-t", "title": "Cannot call a fn&lt;T: X&gt; from an impl&lt;T: X&gt; because X is not satisfied for T", "body": "<p>I have a trait <code>RawFd</code> that is implemented for each type that satisfies special requirements.</p>\n\n<p>Now I have a function that accepts any type that implements <code>RawFd</code>. And I have a trait with an implementation for each <code>T</code> that implements <code>RawFd</code>.</p>\n\n<p>However I cannot call my function from my trait even if <code>T</code> implements <code>RawFd</code>:</p>\n\n<pre><code>pub trait RawFd {\n    fn raw_fd(&amp;self) -&gt; u64;\n}\n\n#[cfg(unix)]\nimpl&lt;T: std::os::unix::io::AsRawFd&gt; RawFd for T {\n    fn raw_fd(&amp;self) -&gt; u64 { self.as_raw_fd() as u64 }\n}\n\n#[cfg(windows)]\nimpl&lt;T: std::os::windows::io::AsRawSocket&gt; RawFd for T {\n    fn raw_fd(&amp;self) -&gt; u64 { self.as_raw_socket() as u64 }\n} \n\nfn print_fd&lt;T: RawFd&gt;(p: T) {\n    println!(\"{}\", p.raw_fd());\n}\n\ntrait Printable {\n    fn print(&amp;self);\n}\n\nimpl&lt;T: RawFd&gt; Printable for T {\n    fn print(&amp;self) {\n        print_fd(self);\n    }\n}\n</code></pre>\n\n<p>What is my mistake here and how can I solve it.</p>\n\n<p>(Link to <a href=\"https://play.rust-lang.org/?gist=92d30ba23735868a5e50d2bbd264c925&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a>)</p>\n"}, {"tags": ["json", "rust", "serde", "serde-json"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1539523611, "post_id": 52802446, "comment_id": 92524666, "body": "Please enhance your example to show how this could be used for an enum as OP asked. I wasn&#39;t able to get my own examples to work with an enum. This also fails to compile due to <code>not all trait items implemented, missing: `expecting`</code>."}, {"owner": {"reputation": 1602, "user_id": 5947247, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f5212b96ae435bb73b9980f34b2913e8?s=128&d=identicon&r=PG&f=1", "display_name": "Isaac van Bakel", "link": "https://stackoverflow.com/users/5947247/isaac-van-bakel"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1539527028, "post_id": 52802446, "comment_id": 92525690, "body": "It fails to compile because it&#39;s not meant to compile - it&#39;s a skeleton answer, and implementing the trait is manual work that can be done by referring to the docs. The point is to demonstrate the high-level idea that solves the OP&#39;s problem. This works for an <code>enum</code> field, because it works for any field that&#39;s an <code>Option&lt;T&gt;</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1539528719, "post_id": 52802446, "comment_id": 92526137, "body": "<a href=\"https://docs.rs/serde/1.0.80/serde/trait.Deserializer.html#tymethod.deserialize_any\" rel=\"nofollow noreferrer\"><code>deserialize_any</code> consumes <code>self</code></a>. How do you call <code>T::deserialize</code> once it&#39;s gone? The return type of your function is inconsistent (<code>Result::Ok</code> vs. <code>Option::Some</code>). This answer does not work."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1539532061, "post_id": 52802446, "comment_id": 92527132, "body": "Deserializers <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=21983a34d4e12f803196a5e10d69f932\" rel=\"nofollow noreferrer\">can not be cloned</a>. Note that this back-and-forth is why it&#39;s strongly encouraged for you to create a working solution <i>before</i> answering."}], "tags": [], "owner": {"reputation": 1602, "user_id": 5947247, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f5212b96ae435bb73b9980f34b2913e8?s=128&d=identicon&r=PG&f=1", "display_name": "Isaac van Bakel", "link": "https://stackoverflow.com/users/5947247/isaac-van-bakel"}, "is_accepted": false, "score": -2, "last_activity_date": 1539530539, "last_edit_date": 1539530539, "creation_date": 1539518722, "answer_id": 52802446, "question_id": 52611244, "link": "https://stackoverflow.com/questions/52611244/how-can-i-deserialize-a-type-where-all-the-fields-are-default-values-as-a-none-i/52802446#52802446", "title": "How can I deserialize a type where all the fields are default values as a None instead?", "body": "<p>You can look at <a href=\"https://serde.rs/string-or-struct.html\" rel=\"nofollow noreferrer\">an example of custom field deserializing</a>.</p>\n\n<p>In particular, you might want to define something like</p>\n\n<pre><code>extern crate serde; // 1.0.78\n#[macro_use]\nextern crate serde_derive; // 1.0.78\n\nuse serde::{Deserialize, Deserializer, de::Visitor};\n\nfn none_if_all_default&lt;'de, T, D&gt;(deserializer: D) -&gt; Result&lt;Option&lt;T&gt;, D::Error&gt;\nwhere\n    T: Deserialize&lt;'de&gt;,\n    D: Deserializer&lt;'de&gt; + Clone,\n{\n    struct AllDefault;\n\n    impl&lt;'de&gt; Visitor&lt;'de&gt; for AllDefault {\n        type Value = bool;\n\n        // Implement the visitor functions here -\n        // You can recurse over all values to check if they're\n        // the empty string or 0, and return true\n        //...\n    }\n\n    let all_default = deserializer.clone().deserialize_any(AllDefault)?;\n\n    if all_default {\n        Ok(None)\n    } else {\n        Ok(Some(T::deserialize(deserializer)?))\n    }\n}\n</code></pre>\n\n<p>And then do</p>\n\n<pre><code>#[derive(Deserialize)]\nstruct Outer2 {\n    #[serde(deserialize_with = \"none_if_all_default\")]\n    test: Option&lt;Test&lt;Foo&gt;&gt;,\n}\n</code></pre>\n"}], "owner": {"reputation": 3672, "user_id": 1590632, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/263e8802fec96fd22c29ad02789cf009?s=128&d=identicon&r=PG", "display_name": "main--", "link": "https://stackoverflow.com/users/1590632/main"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 879, "favorite_count": 1, "answer_count": 1, "score": 10, "last_activity_date": 1539530539, "creation_date": 1538493015, "last_edit_date": 1538498811, "question_id": 52611244, "link": "https://stackoverflow.com/questions/52611244/how-can-i-deserialize-a-type-where-all-the-fields-are-default-values-as-a-none-i", "title": "How can I deserialize a type where all the fields are default values as a None instead?", "body": "<p>I have to deserialize JSON blobs where in some places the absence of an entire object is encoded as an object with the same structure but all of its fields set to default values (empty strings and zeroes).</p>\n\n<pre><code>extern crate serde_json; // 1.0.27\n#[macro_use] extern crate serde_derive; // 1.0.78\nextern crate serde; // 1.0.78\n\n#[derive(Debug, Deserialize)]\nstruct Test&lt;T&gt; {\n    text: T,\n    number: i32,\n}\n\n#[derive(Debug, Deserialize)]\nstruct Outer {\n    test: Option&lt;Test&lt;String&gt;&gt;,\n}\n\n#[derive(Debug, Deserialize)]\nenum Foo { Bar, Baz }\n#[derive(Debug, Deserialize)]\nstruct Outer2 {\n    test: Option&lt;Test&lt;Foo&gt;&gt;,\n}\n\nfn main() {\n    println!(\"{:?}\", serde_json::from_str::&lt;Outer&gt;(r#\"{ \"test\": { \"text\": \"abc\", \"number\": 42 } }\"#).unwrap());\n    // good: Outer { test: Some(Test { text: \"abc\", number: 42 }) }\n\n    println!(\"{:?}\", serde_json::from_str::&lt;Outer&gt;(r#\"{ \"test\": null }\"#).unwrap());\n    // good: Outer { test: None }\n\n    println!(\"{:?}\", serde_json::from_str::&lt;Outer&gt;(r#\"{ \"test\": { \"text\": \"\", \"number\": 0 } }\"#).unwrap());\n    // bad: Outer { test: Some(Test { text: \"\", number: 0 }) }\n    // should be: Outer { test: None }\n\n    println!(\"{:?}\", serde_json::from_str::&lt;Outer2&gt;(r#\"{ \"test\": { \"text\": \"Bar\", \"number\": 42 } }\"#).unwrap());\n    // good: Outer2 { test: Some(Test { text: Bar, number: 42 }) }\n\n    println!(\"{:?}\", serde_json::from_str::&lt;Outer2&gt;(r#\"{ \"test\": { \"text\": \"\", \"number\": 0 } }\"#).unwrap());\n    // bad: error\n    // should be: Outer { test: None }\n}\n</code></pre>\n\n<p>I would handle this after deserialization but as you can see this approach is not possible for enum values: no variant matches the empty string so the deserialization fails entirely.</p>\n\n<p>How can I teach this to serde?</p>\n"}, {"tags": ["rust", "hyper"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1538485813, "post_id": 52608883, "comment_id": 92152143, "body": "Have you tried fetching the body through either <code>req.body()</code>, <code>req.into_body()</code>, or <code>req.into_parts()</code>? This seems to be well documented in <a href=\"https://docs.rs/hyper/0.12.11/hyper/struct.Request.html\" rel=\"nofollow noreferrer\"><code>hyper:Request</code></a>."}, {"owner": {"reputation": 690, "user_id": 3914698, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/BD1iT.jpg?s=128&g=1", "display_name": "Brian Albert Monroe", "link": "https://stackoverflow.com/users/3914698/brian-albert-monroe"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1538486504, "post_id": 52608883, "comment_id": 92152598, "body": "Yes, I&#39;ve done <code>println!(&quot;{:?}&quot;, req.body());</code> and all it shows is the word &quot;Body&quot;. It won&#39;t print without the debug, and it doesn&#39;t seem to contain &quot;hello&quot;. I&#39;ve looked at hyper::request many times, if you can point me to something specific I may have overlooked I&#39;d appreciate it"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1538486701, "post_id": 52608883, "comment_id": 92152723, "body": "The proposed duplicate seems to cover your use case: <code>let entire_body = body.concat2();</code> will produce a <code>Future</code> with the whole data."}], "owner": {"reputation": 690, "user_id": 3914698, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/BD1iT.jpg?s=128&g=1", "display_name": "Brian Albert Monroe", "link": "https://stackoverflow.com/users/3914698/brian-albert-monroe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 584, "favorite_count": 0, "closed_date": 1538485964, "answer_count": 0, "score": 1, "last_activity_date": 1538485942, "creation_date": 1538485281, "last_edit_date": 1538485942, "question_id": 52608883, "link": "https://stackoverflow.com/questions/52608883/how-to-extract-the-data-from-a-hyper-post-request", "closed_reason": "Duplicate", "title": "How to extract the data from a hyper POST request?", "body": "<p>I'm trying to make a small application that'll run as a webserver that accepts GET and POST requests. I've got it up and running and it accepts both requests, but I don't know how to extract the data from a POST request. Here's the code to get the server up and running:</p>\n\n<pre><code>extern crate futures;\nextern crate hyper;\n\nuse hyper::service::service_fn_ok;\nuse hyper::{Body, Method, Response, Request, StatusCode};\n// This is here because we use map_error.\nuse futures::{Future};\n\nfn post_fn(req : Request&lt;Body&gt;) -&gt; Response&lt;Body&gt; {\n    println!(\"In post!\");\n    Response::new(Body::from(\"You posted something!\"))\n}\n\nfn start_server() {\n    let router =  || {\n        service_fn_ok( |req| match (req.method(), req.uri().path()) {\n            (&amp;Method::GET, \"/ping\") =&gt; {\n                println!(\"In ping\");\n                Response::new(Body::from(\"You pinged me!\"))\n            }\n            (&amp;Method::POST, \"/\") =&gt; {\n                post_fn(req)\n            }\n            (_, _) =&gt; {\n                let mut res = Response::new(Body::from(\"not found\"));\n                *res.status_mut() = StatusCode::NOT_FOUND;\n                res\n            }\n        })\n    };\n\n    // Setup and run the server\n    let addr = \"127.0.0.1:3000\".parse::&lt;std::net::SocketAddr&gt;().unwrap();\n\n    let server = hyper::Server::bind(&amp;addr).serve(router);\n\n    hyper::rt::run(server.map_err(|e| {\n        eprintln!(\"server error: {}\", e);\n    }));\n}\n\nfn main() {\n    start_server();\n}\n</code></pre>\n\n<p>Basically what I want to know is what <code>post_fn</code> needs to be so it can print out \"hello\" with <code>curl -X POST --data hello 'localhost:3000'</code>.\nUltimately the data will be a JSON string that I deserialize, but I can't figure out how to get my hands on the data first.</p>\n"}, {"tags": ["iterator", "rust"], "answers": [{"tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": false, "score": 6, "last_activity_date": 1538476434, "last_edit_date": 1538476434, "creation_date": 1538476010, "answer_id": 52606517, "question_id": 52605781, "link": "https://stackoverflow.com/questions/52605781/how-do-i-create-a-by-value-iterator-on-the-stack/52606517#52606517", "title": "How do I create a by-value iterator on the stack?", "body": "<blockquote>\n  <p>Is there a simple way (preferably in the <code>std</code> lib) to create a consuming iterator on the stack?</p>\n</blockquote>\n\n<p>No.</p>\n\n<blockquote>\n  <p>Is there a <s>simple</s> way <s>(preferably in the std lib)</s> to create a consuming iterator on the stack?</p>\n</blockquote>\n\n<p>Yes.  Use a crate like <a href=\"https://crates.io/crates/stack\" rel=\"noreferrer\"><code>stack</code></a> or <a href=\"https://crates.io/crates/smallvec\" rel=\"noreferrer\"><code>smallvec</code></a>, which provide array types that implement <code>IntoIterator</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 1003, "user_id": 4957011, "user_type": "registered", "accept_rate": 82, "profile_image": "https://lh3.googleusercontent.com/-qCvohWQdhyo/AAAAAAAAAAI/AAAAAAAAAyc/5cVJx4KgEFE/photo.jpg?sz=128", "display_name": "Phoenix", "link": "https://stackoverflow.com/users/4957011/phoenix"}, "is_accepted": false, "score": 3, "last_activity_date": 1567755008, "last_edit_date": 1567755008, "creation_date": 1538508275, "answer_id": 52615095, "question_id": 52605781, "link": "https://stackoverflow.com/questions/52605781/how-do-i-create-a-by-value-iterator-on-the-stack/52615095#52615095", "title": "How do I create a by-value iterator on the stack?", "body": "<p>Very ugly, but technically works:</p>\n\n<pre><code>for s in [\n    Some(String::from(\"hello\")),\n    Some(String::from(\"goodbye\"))\n].iter_mut().map(|option| option.take().unwrap()) {\n    let s: String = s;\n    println!(\"{}\", s);\n}\n</code></pre>\n\n<p>You can use a macro that achieves this in a prettier way:</p>\n\n<pre><code>macro_rules! iter {\n    [ $( $item:expr ),+ ] =&gt; {{\n        [ $( Some($item), )+ ]\n        .iter_mut()\n        .map(|o| o.take().unwrap())\n    }};\n    // Rule to allow a trailing comma:\n    [ $( $item:expr, )+ ] =&gt; {{\n        iter![ $( $item ),+ ]\n    }};\n}\n\nfn main() {\n    for s in iter![String::from(\"hello\"), String::from(\"goodbye\")] {\n        println!(\"{}\", s);\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1563617660, "post_id": 57123548, "comment_id": 100764902, "body": "@FrenchBoiethios True, your mileage may vary. Chained iterators might not make the most efficient code at the moment. <a href=\"https://godbolt.org/z/fdpSz4\" rel=\"nofollow noreferrer\">godbolt.org/z/fdpSz4</a>"}], "tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 2, "last_activity_date": 1563623322, "last_edit_date": 1563623322, "creation_date": 1563616061, "answer_id": 57123548, "question_id": 52605781, "link": "https://stackoverflow.com/questions/52605781/how-do-i-create-a-by-value-iterator-on-the-stack/57123548#57123548", "title": "How do I create a by-value iterator on the stack?", "body": "<p>You can have a macro which wraps the values in a <a href=\"https://doc.rust-lang.org/std/iter/fn.once.html\" rel=\"nofollow noreferrer\"><code>once</code></a> iterator and <a href=\"https://doc.rust-lang.org/core/iter/trait.Iterator.html#method.chain\" rel=\"nofollow noreferrer\">chains</a> them together:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>macro_rules! value_iter {\n    () =&gt; {\n        std::iter::empty()\n    };\n    ($v: expr, $( $rest: expr ), +) =&gt; {\n        std::iter::once($v).chain(\n            value_iter!($($rest),*)\n        )\n    };\n    ($v: expr) =&gt; {\n        std::iter::once($v)\n    };\n}\n</code></pre>\n\n<p>Using:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Debug, PartialEq)]\nstruct Foo;\n\nlet it = value_iter![Foo, Foo, Foo];\n\nlet all: Vec&lt;_&gt; = it.collect();\nassert_eq!(all, vec![Foo, Foo, Foo]);\n</code></pre>\n\n<p>A known drawback is that the iterator will not be an exact-size iterator, and so the compiler might miss some obvious optimizations.</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e6003a6be56dc3af4cdb523716c8d2ea\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 118, "favorite_count": 2, "accepted_answer_id": 57123548, "answer_count": 3, "score": 4, "last_activity_date": 1567755008, "creation_date": 1538473149, "last_edit_date": 1563615379, "question_id": 52605781, "link": "https://stackoverflow.com/questions/52605781/how-do-i-create-a-by-value-iterator-on-the-stack", "title": "How do I create a by-value iterator on the stack?", "body": "<p>I can create a consuming iterator in the heap:</p>\n\n<pre><code>vec![1, 10, 100].into_iter()\n</code></pre>\n\n<p>I can also create an iterator on the stack that borrows the elements:</p>\n\n<pre><code>[1, 10, 100].iter()\n</code></pre>\n\n<p>But if I write this:</p>\n\n<pre><code>[1, 10, 100].into_iter()\n</code></pre>\n\n<p>This is not a consuming iterator because <code>[T; _]::into_iter</code> does not exist: <code>IntoIterator</code> is only implemented for the borrowed version (aka slice). Is there a simple way (preferably in the <code>std</code> lib) to create a consuming iterator on the stack?</p>\n\n<hr>\n\n<p>I know that <code>[1, 10, 100].iter().cloned()</code> can be done, but this requires the items to be clonable.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1538467072, "post_id": 52604023, "comment_id": 92142391, "body": "This is a pretty broad problem, you might want to narrow it down a bit; in addition, you probably want to be using <code>u8</code> instead of <code>i8</code> in the <code>Message</code> enum."}, {"owner": {"reputation": 3010, "user_id": 1222135, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/b80a4b5f0be0575599f7b18b80ced91c?s=128&d=identicon&r=PG", "display_name": "greg", "link": "https://stackoverflow.com/users/1222135/greg"}, "edited": false, "score": 0, "creation_date": 1538467619, "post_id": 52604023, "comment_id": 92142715, "body": "Thank for your comments, I have updated the question accordingly."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1538469824, "post_id": 52604023, "comment_id": 92143882, "body": "you can&#39;t ask in a question how to write a parser, there is very big book that doesn&#39;t cover this question. As you format code is simple why not make something simple like a machine state ?"}], "answers": [{"comments": [{"owner": {"reputation": 93509, "user_id": 4086, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/e4a1b4bf6865eddd0edfe8cb90361c84?s=128&d=identicon&r=PG", "display_name": "Ferruccio", "link": "https://stackoverflow.com/users/4086/ferruccio"}, "edited": false, "score": 0, "creation_date": 1538472921, "post_id": 52605051, "comment_id": 92145493, "body": "Looks good, but it seems the default when there is no number should be 1, not 0."}, {"owner": {"reputation": 3010, "user_id": 1222135, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/b80a4b5f0be0575599f7b18b80ced91c?s=128&d=identicon&r=PG", "display_name": "greg", "link": "https://stackoverflow.com/users/1222135/greg"}, "edited": false, "score": 0, "creation_date": 1538474135, "post_id": 52605051, "comment_id": 92146065, "body": "Thank you, this answer has a lot of things I can dig in."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1538475021, "post_id": 52605051, "comment_id": 92146455, "body": "Without copy, <a href=\"https://play.rust-lang.org/?gist=4332501936ad3e3ea875a7bd43cd2674&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 3010, "user_id": 1222135, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/b80a4b5f0be0575599f7b18b80ced91c?s=128&d=identicon&r=PG", "display_name": "greg", "link": "https://stackoverflow.com/users/1222135/greg"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1538476366, "post_id": 52605051, "comment_id": 92147174, "body": "@Stargateur I cannot get what the <code>radix</code> stands for in your example."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 3010, "user_id": 1222135, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/b80a4b5f0be0575599f7b18b80ced91c?s=128&d=identicon&r=PG", "display_name": "greg", "link": "https://stackoverflow.com/users/1222135/greg"}, "edited": false, "score": 0, "creation_date": 1538476522, "post_id": 52605051, "comment_id": 92147247, "body": "@greg From <a href=\"https://doc.rust-lang.org/std/primitive.char.html#method.is_digit\" rel=\"nofollow noreferrer\">doc</a>, &quot;A &#39;radix&#39; here is sometimes also called a &#39;base&#39;. A radix of two indicates a binary number, a radix of ten, decimal, and a radix of sixteen, hexadecimal, to give some common values. Arbitrary radices are supported.&quot;"}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 4, "last_activity_date": 1538472973, "last_edit_date": 1538472973, "creation_date": 1538470419, "answer_id": 52605051, "question_id": 52604023, "link": "https://stackoverflow.com/questions/52604023/what-is-an-efficient-way-of-parsing-a-string-of-single-character-commands-each/52605051#52605051", "title": "What is an efficient way of parsing a string of single-character commands, each optionally followed by an integer repeat count?", "body": "<p>You can do this very simply with an iterator, using <code>parse</code> and some basic <code>String</code> processing:</p>\n\n<pre><code>#[derive(Debug, PartialEq, Clone)]\nenum Message {                                                                                                                                                            \n    TurnLeft(u8),                                                                                                                                                             \n    TurnRight(u8),                                                                                                                                                            \n    MoveForward(u8),                                                                                                                                                          \n}\n\nstruct RobotOrders(String);\n\nimpl RobotOrders {\n    fn new(source: impl Into&lt;String&gt;) -&gt; Self {\n        RobotOrders(source.into())\n    }\n}\n\nimpl Iterator for RobotOrders {\n    type Item = Message;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Message&gt; {\n        self.0.chars().next()?;\n        let order = self.0.remove(0);\n        let n_digits = self.0.chars().take_while(char::is_ascii_digit).count();\n        let mut number = self.0.clone();\n        self.0 = number.split_off(n_digits);\n        let number = number.parse().unwrap_or(1);\n\n        Some(match order {\n            'L' =&gt; Message::TurnLeft(number),\n            'R' =&gt; Message::TurnRight(number),\n            'M' =&gt; Message::MoveForward(number),\n            _ =&gt; unimplemented!(),\n        })\n    }\n}\n\nfn main() {\n    use Message::*;\n    let orders = RobotOrders::new(\"M3LMR2\");\n    let should_be = [MoveForward(3), TurnLeft(1), MoveForward(1), TurnRight(2)];\n\n    assert!(orders.eq(should_be.iter().cloned()));\n}\n</code></pre>\n"}], "owner": {"reputation": 3010, "user_id": 1222135, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/b80a4b5f0be0575599f7b18b80ced91c?s=128&d=identicon&r=PG", "display_name": "greg", "link": "https://stackoverflow.com/users/1222135/greg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 93, "favorite_count": 0, "accepted_answer_id": 52605051, "answer_count": 1, "score": 0, "last_activity_date": 1538486781, "creation_date": 1538466489, "last_edit_date": 1538486781, "question_id": 52604023, "link": "https://stackoverflow.com/questions/52604023/what-is-an-efficient-way-of-parsing-a-string-of-single-character-commands-each", "title": "What is an efficient way of parsing a string of single-character commands, each optionally followed by an integer repeat count?", "body": "<p>I am implementing a robot that takes orders like <code>L</code> (turn left), <code>R</code> (turn right) and <code>M</code> (move forward). These orders may be augmented with a quantifier like <code>M3LMR2</code> (move 3 steps, turn left, move one step, turn face). This is the equivalent of <code>MMMLMRR</code>.</p>\n\n<p>I coded the robot structure that can understand the following enum:</p>\n\n<pre><code>pub enum Message {                                                                                                                                                            \n    TurnLeft(i8),                                                                                                                                                             \n    TurnRight(i8),                                                                                                                                                            \n    MoveForward(i8),                                                                                                                                                          \n}\n</code></pre>\n\n<p><code>Robot::execute(&amp;mut self, orders: Vec&lt;Message&gt;)</code> is doing its job correctly.</p>\n\n<p>Now, I am struggling to write something decent for the string parsing, juggling with <code>&amp;str</code>, <code>String</code>, <code>char</code> and unsafe slicings because tokens can be 1 or more characters. </p>\n\n<p>I have tried regular expression matching (almost worked), but I really want to tokenize the string:</p>\n\n<pre><code>fn capture(orders: &amp;String, start: &amp;usize, end: &amp;usize) -&gt; Message {\n    unsafe {\n        let order = orders.get_unchecked(start..end);\n        // \u2026\n    };\n\n    Message::TurnLeft(1) // temporary\n}\n\npub fn parse_orders(orders: String) -&gt; Result&lt;Vec&lt;Message&gt;, String&gt; {\n    let mut messages = vec![];\n    let mut start: usize = 0;\n    let mut end: usize = 0;\n\n    while end &lt; orders.len() &amp;&amp; end != start {\n        end += 1;\n\n        match orders.get(end) {\n            Some('0'...'9') =&gt; continue,\n            _ =&gt; {\n                messages.push(capture(&amp;orders, &amp;start, &amp;end));\n                start = end;\n            }\n        }\n    }\n\n    Ok(messages)\n}\n</code></pre>\n\n<p>This doesn't compile and is clumsy.</p>\n\n<p>The idea is to write a parser that turn the order string into a vector of <code>Message</code>:</p>\n\n<pre><code>let messages = parse_order(\"M3LMR2\");\nprintln!(\"Messages =&gt; {:?}\", messages);\n// would print\n// [Message::MoveForward(3), Message::TurnLeft(1), Message::MoveForward(1), Message::TurnRight(2)]\n</code></pre>\n\n<p>What would be the efficient/elegant way for doing that?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 65310, "user_id": 201725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/616f7a1cbb20fe949d883393657c039a?s=128&d=identicon&r=PG", "display_name": "Jan Hudec", "link": "https://stackoverflow.com/users/201725/jan-hudec"}, "edited": false, "score": 0, "creation_date": 1538463633, "post_id": 52602808, "comment_id": 92140878, "body": "\u201cMy closure need to be returned from a function and need to capture variable from the environment.\u201d \u2014 those two requirements are mutually incompatible, because the environment does not live long enough. You have to wrap the environment in something that will be part of the returned function whether it is another closure or an explicit struct implementing <code>Fn</code>."}, {"owner": {"reputation": 797, "user_id": 4803321, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/26ViJ.png?s=128&g=1", "display_name": "\u5468\u6c49\u6210", "link": "https://stackoverflow.com/users/4803321/%e5%91%a8%e6%b1%89%e6%88%90"}, "reply_to_user": {"reputation": 65310, "user_id": 201725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/616f7a1cbb20fe949d883393657c039a?s=128&d=identicon&r=PG", "display_name": "Jan Hudec", "link": "https://stackoverflow.com/users/201725/jan-hudec"}, "edited": false, "score": 0, "creation_date": 1538474675, "post_id": 52602808, "comment_id": 92146320, "body": "@JanHudec No, just move the ownership of variable from environmental to the closure use <code>move | | {}</code> syntax, then it works."}, {"owner": {"reputation": 65310, "user_id": 201725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/616f7a1cbb20fe949d883393657c039a?s=128&d=identicon&r=PG", "display_name": "Jan Hudec", "link": "https://stackoverflow.com/users/201725/jan-hudec"}, "edited": false, "score": 0, "creation_date": 1538475840, "post_id": 52602808, "comment_id": 92146866, "body": "But than it is not captured from the environment, but moved into the closure. That is different thing."}], "answers": [{"comments": [{"owner": {"reputation": 797, "user_id": 4803321, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/26ViJ.png?s=128&g=1", "display_name": "\u5468\u6c49\u6210", "link": "https://stackoverflow.com/users/4803321/%e5%91%a8%e6%b1%89%e6%88%90"}, "edited": false, "score": 0, "creation_date": 1538478028, "post_id": 52603063, "comment_id": 92147974, "body": "My bad, I missed some details.The closure need to move the environmental variable, and can mutate it, I use your code for that situation, it doesn&#39;t work. Check <a href=\"https://gist.github.com/rust-play/8a89589562927ecf398494f6b6f67c4e\" rel=\"nofollow noreferrer\">gist.github.com/rust-play/8a89589562927ecf398494f6b6f67c4e</a>,"}], "tags": [], "owner": {"reputation": 1721, "user_id": 5034140, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-H4LtHEu4ABU/AAAAAAAAAAI/AAAAAAAABfc/vgbjnSLypvo/photo.jpg?sz=128", "display_name": "Guillaume Gris", "link": "https://stackoverflow.com/users/5034140/guillaume-gris"}, "is_accepted": true, "score": 1, "last_activity_date": 1538461841, "creation_date": 1538461841, "answer_id": 52603063, "question_id": 52602808, "link": "https://stackoverflow.com/questions/52602808/return-a-recursive-closure-which-move-environmental-mutable-variable-into-it-fro/52603063#52603063", "title": "return a recursive closure which move environmental mutable variable into it from a function?", "body": "<p>You can wrap your recursive context in a non recursive closure:</p>\n\n<pre><code>pub fn fib() -&gt; Box&lt;Fn(u64) -&gt; u64&gt; {\n    Box::new(|n: u64| {\n        let id = &amp;(|a| a) as &amp;Fn(u64) -&gt; u64;\n        let (fib, fib_p): (_, RefCell&lt;&amp;Fn(u64) -&gt; u64&gt;);\n        fib_p = RefCell::new(id);\n\n        fib = |n: u64| {\n            if n &lt; 2 {\n                n\n            } else {\n                (fib_p.borrow())(n - 2) + (fib_p.borrow())(n - 1)\n            }\n        };\n\n        *fib_p.borrow_mut() = &amp;fib;\n\n        fib(n)\n    })\n}\n</code></pre>\n"}], "owner": {"reputation": 797, "user_id": 4803321, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/26ViJ.png?s=128&g=1", "display_name": "\u5468\u6c49\u6210", "link": "https://stackoverflow.com/users/4803321/%e5%91%a8%e6%b1%89%e6%88%90"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 73, "favorite_count": 0, "accepted_answer_id": 52603063, "answer_count": 1, "score": 0, "last_activity_date": 1538478409, "creation_date": 1538460274, "last_edit_date": 1538478409, "question_id": 52602808, "link": "https://stackoverflow.com/questions/52602808/return-a-recursive-closure-which-move-environmental-mutable-variable-into-it-fro", "title": "return a recursive closure which move environmental mutable variable into it from a function?", "body": "<p>Ways that make recursive closure are not suitable for me from the accepted answer of the question:</p>\n\n<p><a href=\"https://stackoverflow.com/questions/16946888/is-it-possible-to-make-a-recursive-closure-in-rust\">Is it possible to make a recursive closure in Rust?</a></p>\n\n<p>My closure need to be returned from a function and need to move variable from the environment into it, and can mutate it.</p>\n\n<p>Then I find a way seems more suitable for me:</p>\n\n<p><a href=\"https://github.com/Hoverbear/rust-rosetta/issues/450\" rel=\"nofollow noreferrer\">Anonymous recursion with closures</a></p>\n\n<pre><code>use std::cell::RefCell;\n\nfn main() {\n    let id = &amp;(|a| a) as &amp;Fn(u64) -&gt; u64;\n    let (fib, fib_p): (_, RefCell&lt;&amp;Fn(u64) -&gt; u64&gt;);\n    fib_p = RefCell::new(id);\n\n    fib = |n: u64| {\n        if n &lt; 2 {\n            n\n        } else {\n            (fib_p.borrow())(n - 2) + (fib_p.borrow())(n - 1)\n        }\n    };\n\n    *fib_p.borrow_mut() = &amp;fib;\n\n    println!(\"{}\", fib(10));        \n}\n</code></pre>\n\n<p>The above code works fine.</p>\n\n<p>But my closure need to be returned from a function, so it can't be a reference to prevent dangling Reference, and we don't know the size of the closure from compile time, so I used the smart pointer <code>Box</code> for it. The below code throws an error:</p>\n\n<pre><code>use std::cell::RefCell;\n\nfn main() {\n    let id: Box&lt;Fn(u64) -&gt; u64&gt; = Box::new(|a| a);\n    let (fib, fib_p): (Box&lt;Fn(u64) -&gt; u64&gt;, RefCell&lt;&amp;Box&lt;Fn(u64) -&gt; u64&gt;&gt;);\n    fib_p = RefCell::new(&amp;id);\n\n    fib = Box::new(|n: u64| {\n        if n &lt; 2 {\n            n\n        } else {\n            (fib_p.borrow())(n - 2) + (fib_p.borrow())(n - 1)\n        }\n    });\n\n    *fib_p.borrow_mut() = &amp;fib;\n\n    println!(\"{}\", fib(10));        \n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `fib_p` does not live long enough\n  --&gt; src/main.rs:12:15\n   |\n8  |     fib = Box::new(|n: u64| {\n   |                    -------- capture occurs here\n...\n12 |             (&amp;fib_p.borrow())(n - 2) + (&amp;fib_p.borrow())(n - 1)\n   |               ^^^^^ borrowed value does not live long enough\n...\n19 | }\n   | - borrowed value dropped before borrower\n   |\n   = note: values in a scope are dropped in the opposite order they are created\n</code></pre>\n"}, {"tags": ["rust", "unsafe"], "comments": [{"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 3, "creation_date": 1538460867, "post_id": 52601731, "comment_id": 92139820, "body": "Do you actually access <code>v</code> in your code, or is it opaque? If it&#39;s opaque, all of this is not necessary."}, {"owner": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "reply_to_user": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1538461359, "post_id": 52601731, "comment_id": 92139987, "body": "It is opaque and only the FFI implementation can touch it.  But can you be more specific to say what is not necessary? Do you mean the use of <code>UnsafeCell</code>? or <code>*mut c_void</code> (which I think would be necessory...)"}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1538461604, "post_id": 52601731, "comment_id": 92140092, "body": "<code>UnsafeCell</code> informs the Rust compiler that a value may change at any time, even though the compiler can see a shared reference to it. This is important for when the compiler wants to use the value, so that it knows it can&#39;t just hold it in a register. But if the compiler never touches the field, because it&#39;s only touched by FFI functions, then the annotation isn&#39;t necessary."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1538462954, "post_id": 52601731, "comment_id": 92140628, "body": "of course you can&#39;t what is the size of void ?"}, {"owner": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1538463050, "post_id": 52601731, "comment_id": 92140665, "body": "@Stargateur <code>UnsafeCell</code> does not require <code>Sized</code>, so we can put DST in it..."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1538463443, "post_id": 52601731, "comment_id": 92140807, "body": "I&#39;m not very aware of these concept in Rust, but I don&#39;t think it&#39;s possible to create a thing that hold void, whatever Rust magic feature have. That the entire point of void in C. You can&#39;t write <code>void a;</code>, you can only have <code>void *a;</code>. And this make sense because void is... nothing. You can&#39;t do anything to <code>*a</code> because it&#39;s a void type. Someone have to know what is its real type to use it. So I don&#39;t know how Rust would be capable of this."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1538486464, "post_id": 52601731, "comment_id": 92152575, "body": "A dynamically-sized type (DST) is not the same as an <i>unsized</i> / <i>zero-sized</i> type."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1538496932, "post_id": 52601731, "comment_id": 92159240, "body": "<code>void</code> is not allowed as a value in C, so why do you expect to have one in Rust?"}, {"owner": {"reputation": 1003, "user_id": 4957011, "user_type": "registered", "accept_rate": 82, "profile_image": "https://lh3.googleusercontent.com/-qCvohWQdhyo/AAAAAAAAAAI/AAAAAAAAAyc/5cVJx4KgEFE/photo.jpg?sz=128", "display_name": "Phoenix", "link": "https://stackoverflow.com/users/4957011/phoenix"}, "edited": false, "score": 0, "creation_date": 1538508641, "post_id": 52601731, "comment_id": 92164612, "body": "I think you want an <code>UnsafeCell&lt;*mut c_void&gt;</code>. A mutable pointer to data of an unknown type, that may be mutated by other code during the existence of the pointer."}, {"owner": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1538521995, "post_id": 52601731, "comment_id": 92169406, "body": "@Shepmaster If <code>c_void</code> is fully uninhabited it is like <code>UnsafeCell&lt;!&gt;</code>, but in reality although <code>c_void</code> is uninhabited but <code>*mut c_void</code> is not: it will point to an opaque value. What I expecting is to express the fact that this opaque value can be modified/changed even we have a shared reference to the object owns it."}, {"owner": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "reply_to_user": {"reputation": 1003, "user_id": 4957011, "user_type": "registered", "accept_rate": 82, "profile_image": "https://lh3.googleusercontent.com/-qCvohWQdhyo/AAAAAAAAAAI/AAAAAAAAAyc/5cVJx4KgEFE/photo.jpg?sz=128", "display_name": "Phoenix", "link": "https://stackoverflow.com/users/4957011/phoenix"}, "edited": false, "score": 0, "creation_date": 1538522131, "post_id": 52601731, "comment_id": 92169444, "body": "@Phoenix The semantic is quite different though. <code>UnsafeCell&lt;*mut c_void&gt;</code> contains additional abstraction: it is a pointer to a pointer. This also means the <code>get</code> method is not ready to be sent to FFI without <code>unsafe</code> deference."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1538522157, "post_id": 52601731, "comment_id": 92169451, "body": "<i>a pointer to a pointer</i> \u2014 why do you believe that? I think that may be the root of your issue."}, {"owner": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1538522361, "post_id": 52601731, "comment_id": 92169497, "body": "@Shepmaster because, we can only get <code>*mut T</code> from <code>UnsafeCell</code>, which makes it work like a pointer. And the fact it supports DST also implies it is an indirection (means pointer, maybe I was wrong here?). So if we use a pointer as the contained value it will be a pointer to a pointer."}, {"owner": {"reputation": 491, "user_id": 5282385, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2f909f7c0f578c26cc98852294a416cc?s=128&d=identicon&r=PG", "display_name": "Ralf Jung", "link": "https://stackoverflow.com/users/5282385/ralf-jung"}, "edited": false, "score": 0, "creation_date": 1538757524, "post_id": 52601731, "comment_id": 92269780, "body": "@EarthEngine it would help if you could edit the question to be about the actual, high-level problem you are trying to solve. What happened here is that you want part-way down the <i>wrong</i> rabbit-hole, got stuck, and are asking a very specific question that is already making some wrong assumptions. So I suggest you take a couple steps back and focus on what you want to achieve: Which kind of API do you want to wrap, which kind of operations does it provide, what do the user-visible types look like in C, what would you like the user-visible types to look like in Rust?"}, {"owner": {"reputation": 491, "user_id": 5282385, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2f909f7c0f578c26cc98852294a416cc?s=128&d=identicon&r=PG", "display_name": "Ralf Jung", "link": "https://stackoverflow.com/users/5282385/ralf-jung"}, "edited": false, "score": 0, "creation_date": 1538757647, "post_id": 52601731, "comment_id": 92269819, "body": "But to literally answer your question, remember that <code>UnsafeCell</code> is NOT a pointer, so it seems what you want is a <code>*mut UnsafeCell&lt;c_void&gt;</code>, which you can obtain from <code>*mut c_void</code> by a simple cast. That&#39;s even a safe operation. It&#39;s not at all what you want though."}], "answers": [{"comments": [{"owner": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "edited": false, "score": 0, "creation_date": 1538524121, "post_id": 52617746, "comment_id": 92169863, "body": "This is what I thought. However, <code>UnsafeCell</code> was refered to as &quot;the root of interior mutability&quot;, and this example seems to imply that, <code>*mut T</code> is another root. Am I right? (Maybe I should open another question...)"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "edited": false, "score": 1, "creation_date": 1538529009, "post_id": 52617746, "comment_id": 92170835, "body": "@EarthEngine Interior mutability means you can mutate something while only holding a shared reference (<code>&amp;T</code>) to it. Raw pointers don&#39;t let you do that. Mutating something through a <code>*mut T</code> isn&#39;t interior mutability, that&#39;s just regular mutability."}, {"owner": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "edited": false, "score": 0, "creation_date": 1538531514, "post_id": 52617746, "comment_id": 92171388, "body": "I know. But when you look at my <code>FFIStruct</code> example, I wanted to hide the fact that <code>self.v</code> can be mutated while only holding a shared reference <code>&amp;self</code> to it. Is this interior mutability? Also, please check my example for <code>&amp;Cell&lt;c_void&gt;</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "edited": false, "score": 1, "creation_date": 1538532224, "post_id": 52617746, "comment_id": 92171538, "body": "@EarthEngine <code>self.v</code> <b>must not</b> be mutated by FFI code because the pointer itself is accessed as an immutable reference (via <code>&amp;self</code>). The value that <code>self.v</code> <b>points to</b> can be mutated because it&#39;s behind a raw pointer."}, {"owner": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "edited": false, "score": 0, "creation_date": 1538533035, "post_id": 52617746, "comment_id": 92171687, "body": "@Shepmaster Just a simple question: Do <code>FFIStruct</code> has interior mutability? How many level behind the pointers does not matter: they are all owned by the struct, conceptually."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "edited": false, "score": 0, "creation_date": 1538671185, "post_id": 52617746, "comment_id": 92235052, "body": "@EarthEngine I honestly cannot answer that question \u2014 I have no idea ^_^"}, {"owner": {"reputation": 491, "user_id": 5282385, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2f909f7c0f578c26cc98852294a416cc?s=128&d=identicon&r=PG", "display_name": "Ralf Jung", "link": "https://stackoverflow.com/users/5282385/ralf-jung"}, "reply_to_user": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "edited": false, "score": 2, "creation_date": 1538757385, "post_id": 52617746, "comment_id": 92269719, "body": "@EarthEngine Interior mutability is not a concern for you <i>until you create a shared reference to some data</i>. And I mean directly to that data, not transitively through a raw pointer. So I think every single mention of <code>UnsafeCell</code> and interior mutability in this discussion is a red herring. You never have a shared ref to begin with."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 3, "last_activity_date": 1538833360, "last_edit_date": 1538833360, "creation_date": 1538523026, "answer_id": 52617746, "question_id": 52601731, "link": "https://stackoverflow.com/questions/52601731/how-to-create-unsafecellc-void-safely/52617746#52617746", "title": "How to create UnsafeCell&lt;c_void&gt; safely?", "body": "<p>TL;DR: Just use <code>*mut Foo</code>. Cells of any kind are <em>not</em> needed here.</p>\n\n<hr>\n\n<p><strong>Disclaimer: there is no formal Rust memory model, yet.</strong></p>\n\n<p>You <em>cannot</em> create this type, period, because you cannot<sup>1</sup> create an instance of <code>c_void</code>.</p>\n\n<p>The thing is, you don't <em>need</em> to create such a type. <a href=\"https://stackoverflow.com/a/49513368/155423\">Aliasing is not spatial but temporal</a>. You can have multiple <code>*mut T</code> pointing to the same place and it doesn't matter <em>until you try to access one</em>. This essentially converts it to a reference and the aliasing requirements need to be upheld while that reference is around.</p>\n\n<blockquote>\n  <p>raw pointers fall outside of Rust's safe memory model.</p>\n  \n  <p>\u2014 <a href=\"https://doc.rust-lang.org/nightly/nomicon/ffi.html#calling-foreign-functions\" rel=\"nofollow noreferrer\"><em>The Rustonomicon</em></a></p>\n</blockquote>\n\n\n\n<blockquote>\n  <p>Different from references and smart pointers, raw pointers:</p>\n  \n  <ul>\n  <li>Are allowed to ignore the borrowing rules by having both immutable and mutable pointers or multiple mutable pointers to the same location</li>\n  <li>Aren\u2019t guaranteed to point to valid memory</li>\n  <li>Are allowed to be null</li>\n  <li>Don\u2019t implement any automatic cleanup</li>\n  </ul>\n  \n  <p>\u00b8\u2014 <a href=\"https://doc.rust-lang.org/book/2018-edition/ch19-01-unsafe-rust.html#dereferencing-a-raw-pointer\" rel=\"nofollow noreferrer\"><em>The Rust Programming Language</em></a></p>\n</blockquote>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/52548161/155423\">Why does modifying a mutable reference&#39;s value through a raw pointer not violate Rust&#39;s aliasing rules?</a></li>\n<li><a href=\"https://stackoverflow.com/q/38315383/155423\">What&#39;s the Rust idiom to define a field pointing to a C opaque pointer?</a></li>\n<li><a href=\"https://stackoverflow.com/q/49503331/155423\">Is it undefined behavior to do runtime borrow management with the help of raw pointers in Rust?</a></li>\n<li><a href=\"https://stackoverflow.com/q/47620011/155423\">Can an FFI function modify a variable that wasn&#39;t declared mutable?</a></li>\n</ul>\n\n<p><sup>1</sup> You technically <em>can</em>, but that's only because of an implementation and backwards compatibility limitation.</p>\n"}, {"comments": [{"owner": {"reputation": 491, "user_id": 5282385, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2f909f7c0f578c26cc98852294a416cc?s=128&d=identicon&r=PG", "display_name": "Ralf Jung", "link": "https://stackoverflow.com/users/5282385/ralf-jung"}, "edited": false, "score": 2, "creation_date": 1538757182, "post_id": 52658821, "comment_id": 92269633, "body": "I don&#39;t think this is the type you want. I am afraid your question was already somewhat ill-posed, which is why the answers also became confusing. The thing is, UnsafeCell is only relevant for shared references. If you do FFI and <i>everything is behind a ptr indirection</i>, then you do not have to worry about <code>UnsafeCell</code>. Just use <code>*mut</code> and wrap it in a newtype. <a href=\"https://doc.rust-lang.org/nightly/nomicon/ffi.html#representing-opaque-structs\" rel=\"nofollow noreferrer\">The nomicon has some further information</a>."}], "tags": [], "owner": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "is_accepted": false, "score": -1, "last_activity_date": 1538718251, "last_edit_date": 1538718251, "creation_date": 1538717053, "answer_id": 52658821, "question_id": 52601731, "link": "https://stackoverflow.com/questions/52601731/how-to-create-unsafecellc-void-safely/52658821#52658821", "title": "How to create UnsafeCell&lt;c_void&gt; safely?", "body": "<p>After <a href=\"https://internals.rust-lang.org/t/ffi-mutating-raw-pointer-where-immutable-reference-in-scope-is-this-ub/8510/3\" rel=\"nofollow noreferrer\">some internal discussion in the Rust forum</a> and <a href=\"https://github.com/rust-lang/rust/issues/43467\" rel=\"nofollow noreferrer\">a discussion on RFC 1861</a>, I realize <code>c_void</code> is just a common workaround and other options exists like <code>struct Opaque&lt;UnsafeCell&lt;()&gt;&gt;</code>.</p>\n\n<p>So I concluded what I needed here is <code>*const UnsafeCell&lt;c_void&gt;</code>. From its type we know:</p>\n\n<ul>\n<li>This is a raw pointer, so it is suitable to send to FFI immediately;</li>\n<li>The raw pointer assumes <code>const</code>, means any casting to <code>*mut T</code> will UB and programmer should avoid it. This protects the memory it points to being modified within Rust (unless through <code>UnsafeCell</code>, of cause);</li>\n<li>It contains <code>UnsafeCell</code>, so it implies interior mutability. This justifies the FFI function being able to mutate it;</li>\n<li>It is not possible to create a <code>c_void</code>, so as for <code>UnsafeCell&lt;c_void&gt;</code>. They can only be created by FFI.</li>\n</ul>\n\n<p><a href=\"https://play.rust-lang.org/?gist=62448cb6f4aa82dbe7d9e6014175d09a&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Demostrate</a>:</p>\n\n<pre><code>use std::cell::UnsafeCell;\nuse std::os::raw::c_void;\n\n//Let's say all those functions are in an FFI module,\n//with the exact same behaviour\nfn ffi_create() -&gt; *mut c_void {\n    Box::into_raw(Box::new(0u8)) as *mut c_void\n}\nunsafe fn ffi_write_u8(p: *mut c_void, v:u8) {\n    *(p as *mut u8) = v;\n}\nunsafe fn ffi_read_u8(p: *mut c_void) -&gt; u8 {\n    *(p as *mut u8)\n}\n\nfn main() {\n    unsafe {\n        //let's ignore ffi_destroy() for now\n        let pointer = ffi_create() as *const UnsafeCell&lt;c_void&gt;;\n        let ref_pointer = &amp;pointer;        \n        ffi_write_u8((&amp;*pointer).get(), 7);\n        let integer = ffi_read_u8((&amp;**ref_pointer).get());\n        assert_eq!(integer, 7);\n    }\n}\n</code></pre>\n\n<p>It is interesting how easy and ergonomic (yet expressive) to convert between <code>*mut c_void</code> and <code>*const UnsafeCell&lt;c_void&gt;</code>.</p>\n"}], "owner": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 547, "favorite_count": 1, "answer_count": 2, "score": 3, "last_activity_date": 1538833360, "creation_date": 1538451825, "last_edit_date": 1538531299, "question_id": 52601731, "link": "https://stackoverflow.com/questions/52601731/how-to-create-unsafecellc-void-safely", "title": "How to create UnsafeCell&lt;c_void&gt; safely?", "body": "<p>The <code>UnsafeCell</code> <a href=\"https://doc.rust-lang.org/beta/std/cell/struct.UnsafeCell.html\" rel=\"nofollow noreferrer\">documentation</a> says</p>\n\n<blockquote>\n  <p>The <code>UnsafeCell&lt;T&gt;</code> type is the only legal way to obtain aliasable data that is considered mutable.</p>\n</blockquote>\n\n<p>The only construction method is:</p>\n\n<pre><code>pub const fn new(value: T) -&gt; UnsafeCell&lt;T&gt;\n</code></pre>\n\n<p>However, it is not possible to create a <code>c_void</code>, we can only create <code>*mut c_void</code> or <code>*const c_void</code>.</p>\n\n<p>Is it possible to create <code>UnsafeCell&lt;c_void&gt;</code> from a <code>*mut c_void</code>? With this, we can let the compiler know that the pointer can point to something mutable.</p>\n\n<p>Or is this not necessary? Can we always use <code>*mut c_void</code> even we know some FFI call will mutate the data it points to and we have multiple references to it?</p>\n\n<p>A use case would be:</p>\n\n<pre><code>struct FFIStruct { v: UnsafeCell&lt;c_void&gt;, other_fields: ... }\nimpl FFIStruct {\n    // We don't want to require &amp;mut self, as we \n    // are sure private call_ffi() will always be called \n    // sequentially, and we don't want to stop\n    // status() being callable during the call\n    fn call_ffi(&amp;self){ ffi_function(self.v.get()) }\n    pub fn status(&amp;self) -&gt; FFIStatus { ... }\n}\n</code></pre>\n\n<p>Now how do we create <code>FFIStruct</code>? Or just use <code>*mut c_void</code> would be OK?</p>\n\n<h1>Example code to create <code>&amp;Cell&lt;c_void&gt;</code></h1>\n\n<p>Requires <code>#![feature(as_cell)]</code>:</p>\n\n<pre><code>unsafe fn get_cell&lt;'a&gt;(p: *mut c_void) -&gt; &amp;'a Cell&lt;c_void&gt; {\n    Cell::from_mut(&amp;mut *p)\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1538440287, "post_id": 52600354, "comment_id": 92135511, "body": "See also <a href=\"https://stackoverflow.com/q/31082098/155423\">Why would I use divergent functions?</a>"}], "answers": [{"tags": [], "owner": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "is_accepted": true, "score": 5, "last_activity_date": 1538440196, "creation_date": 1538440196, "answer_id": 52600568, "question_id": 52600354, "link": "https://stackoverflow.com/questions/52600354/avoid-use-of-possibly-uninitialized-variable-in-match-structure-which-is-unr/52600568#52600568", "title": "Avoid &quot;use of possibly uninitialized variable&quot; in &quot;match&quot; structure which is unreachable when variable is undefined in Rust", "body": "<p>From the compiler's point of view, when you call <code>die_with_error()</code>, your function doesn't return any value to the caller. In actuality, this function doesn't only return nothing, it doesn't return at all. The way to express this in Rust is with the <a href=\"https://doc.rust-lang.org/beta/std/primitive.never.html\" rel=\"noreferrer\">never type <code>!</code></a>:</p>\n\n<pre><code>fn die_with_error(error: &amp;str) -&gt; ! {\n    eprintln!(\"{}\", &amp;error);\n    process::exit(-1)\n}\n</code></pre>\n\n<p>With this change, the compiler will know that <code>runmode</code> must always have an initialized value.</p>\n"}], "owner": {"reputation": 1621, "user_id": 1376972, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/84f95e218ba7d8f35c4503f0f3113908?s=128&d=identicon&r=PG", "display_name": "Konstantin Pereiaslov", "link": "https://stackoverflow.com/users/1376972/konstantin-pereiaslov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 210, "favorite_count": 0, "accepted_answer_id": 52600568, "answer_count": 1, "score": 1, "last_activity_date": 1538440200, "creation_date": 1538438057, "last_edit_date": 1538440200, "question_id": 52600354, "link": "https://stackoverflow.com/questions/52600354/avoid-use-of-possibly-uninitialized-variable-in-match-structure-which-is-unr", "title": "Avoid &quot;use of possibly uninitialized variable&quot; in &quot;match&quot; structure which is unreachable when variable is undefined in Rust", "body": "<p>I'm writing a console Rust application. It takes its first argument and decides which mode to run in. If the first argument is undefined or unknown, the application should exit. Here is the code:</p>\n\n<pre><code>use std::env;\nuse std::process;\n\nenum RunMode {\n    Extract,\n}\n\nfn die_with_error(error: &amp;str) {\n    eprintln!(\"{}\", &amp;error);\n    process::exit(-1);\n}\n\nfn main() {\n    let mut args = env::args();\n    args.next();\n    let mut runmode;\n\n    match args.next() {\n        Some(arg) =&gt; {\n            match arg.as_ref() {\n                \"extract\" =&gt; runmode = RunMode::Extract,\n                _ =&gt; die_with_error(&amp;format!(\"Unknown mode {}\", &amp;arg.to_string())),\n            };\n        }\n        None =&gt; die_with_error(\"No mode specified. Please specify a mode as a first argument. Use --help to get a list of modes available\"),\n    };\n\n    match runmode {\n        RunMode::Extract =&gt; {\n            let file_name = args\n                .next()\n                .expect(\"Please specify a filename as a second argument\");\n            println!(\"You passed {}\", file_name);\n        }\n    }\n}\n</code></pre>\n\n<p>This doesn't compile and produces the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0381]: use of possibly uninitialized variable: `runmode`\n  --&gt; src/main.rs:27:11\n   |\n27 |     match runmode {\n   |           ^^^^^^^ use of possibly uninitialized `runmode`\n</code></pre>\n\n<p>I understand there are situations when the runmode can be undefined, but in these situations the line 27 with <code>match</code> won't ever be reached.\nI am able to avoid by defining a default value for runmode, but this doesn't seem clean. What is the proper way to deal with this in Rust?</p>\n"}, {"tags": ["memory-management", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1538416243, "post_id": 52596080, "comment_id": 92127267, "body": "<code>mem::replace(&amp;mut self.repeat_state, None)</code> \u2014 that&#39;s <code>Option::take</code>"}], "answers": [{"comments": [{"owner": {"reputation": 1003, "user_id": 4957011, "user_type": "registered", "accept_rate": 82, "profile_image": "https://lh3.googleusercontent.com/-qCvohWQdhyo/AAAAAAAAAAI/AAAAAAAAAyc/5cVJx4KgEFE/photo.jpg?sz=128", "display_name": "Phoenix", "link": "https://stackoverflow.com/users/4957011/phoenix"}, "edited": false, "score": 0, "creation_date": 1538508793, "post_id": 52603407, "comment_id": 92164676, "body": "I think it&#39;s worth mentioning that <code>Rc</code> makes the data structure not thread safe, and that the thread safe alternative is <code>Arc</code>, which is more expensive."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "reply_to_user": {"reputation": 1003, "user_id": 4957011, "user_type": "registered", "accept_rate": 82, "profile_image": "https://lh3.googleusercontent.com/-qCvohWQdhyo/AAAAAAAAAAI/AAAAAAAAAyc/5cVJx4KgEFE/photo.jpg?sz=128", "display_name": "Phoenix", "link": "https://stackoverflow.com/users/4957011/phoenix"}, "edited": false, "score": 0, "creation_date": 1538548218, "post_id": 52603407, "comment_id": 92175556, "body": "@Phoenix <code>Rc</code> is perfectly <i>safe</i> to use in a multi-thread setting since the compiler will prevent you from doing anything unsafe with it, but of course this means that the compiler will restrict you to a single thread. I&#39;ve added a note to that effect."}, {"owner": {"reputation": 1003, "user_id": 4957011, "user_type": "registered", "accept_rate": 82, "profile_image": "https://lh3.googleusercontent.com/-qCvohWQdhyo/AAAAAAAAAAI/AAAAAAAAAyc/5cVJx4KgEFE/photo.jpg?sz=128", "display_name": "Phoenix", "link": "https://stackoverflow.com/users/4957011/phoenix"}, "edited": false, "score": 0, "creation_date": 1538576714, "post_id": 52603407, "comment_id": 92191953, "body": "Thank you. What I meant is that, it would be unsafe to use across threads, if you could do it, but the compiler recognizes that this would be unsafe, so it doesn&#39;t let you do it."}], "tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": true, "score": 2, "last_activity_date": 1538548172, "last_edit_date": 1538548172, "creation_date": 1538463691, "answer_id": 52603407, "question_id": 52596080, "link": "https://stackoverflow.com/questions/52596080/can-i-avoid-cloning-strings-by-holding-a-reference-instead/52603407#52603407", "title": "Can I avoid cloning Strings by holding a reference instead?", "body": "<p>You can avoid cloning the strings by wrapping them in an <code>Rc</code> and cloning that instead. Cloning an <code>Rc</code> is cheap since it consists of incrementing a counter:</p>\n\n<pre><code>pub struct Reader {\n    handle: BufReader&lt;File&gt;,\n    repeat_state: Option&lt;(NonZeroU32, Rc&lt;String&gt;)&gt;,\n}\n\nimpl Reader {\n    pub fn new&lt;P: AsRef&lt;Path&gt;&gt;(path: P) -&gt; Result&lt;Reader, Error&gt; {\n        let file = File::open(path)?;\n        let handle = BufReader::new(file);\n\n        Ok(Reader {\n            handle,\n            repeat_state: None,\n        })\n    }\n\n    /// get next line, respecting repeat instructions\n    pub fn next_line(&amp;mut self) -&gt; Option&lt;Rc&lt;String&gt;&gt; {\n        if self.repeat_state.is_some() {\n            let (repeats_left, last_line) = mem::replace(&amp;mut self.repeat_state, None).unwrap();\n\n            self.repeat_state = NonZeroU32::new(repeats_left.get() - 1)\n                .map(|repeats_left| (repeats_left, last_line.clone()));\n\n            Some(last_line)\n        } else {\n            let mut line = Rc::new (String::new());\n            if self.handle.read_line(Rc::make_mut (&amp;mut line)).is_err() || line.is_empty() {\n                return None\n            }\n\n            if line.starts_with(\"repeat \") {\n                let repeats: Option&lt;u32&gt; = line.chars().skip(7)\n                    .take_while(|c| c.is_numeric())\n                    .collect::&lt;String&gt;().parse().ok();\n\n                self.repeat_state = repeats\n                    .and_then(|repeats| NonZeroU32::new(repeats - 1))\n                    .map(|repeats_left| (repeats_left, line.clone()))\n            }\n\n            Some(line)\n        }\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=961144631b4b8b33da46ec7ec9a3943c&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>Note that <code>Rc</code> cannot be shared between multiple threads. If you want to share the strings between threads, you can use <a href=\"https://doc.rust-lang.org/stable/std/sync/struct.Arc.html\" rel=\"nofollow noreferrer\"><code>Arc</code></a> instead.</p>\n"}], "owner": {"reputation": 6137, "user_id": 847382, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/b73e2fff665c33621c8a4347cf8074be?s=128&d=identicon&r=PG", "display_name": "PitaJ", "link": "https://stackoverflow.com/users/847382/pitaj"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 102, "favorite_count": 0, "accepted_answer_id": 52603407, "answer_count": 1, "score": 0, "last_activity_date": 1538548172, "creation_date": 1538415082, "last_edit_date": 1538416702, "question_id": 52596080, "link": "https://stackoverflow.com/questions/52596080/can-i-avoid-cloning-strings-by-holding-a-reference-instead", "title": "Can I avoid cloning Strings by holding a reference instead?", "body": "<p>I have a data structure in which I am providing a wrapper around a read buffer to automatically handle repeating statements in the readout.</p>\n\n<p>This is done by storing an internal state of how many repeats are left and the line to be repeated.</p>\n\n<pre><code>use std::fs::File;\nuse std::path::Path;\nuse std::io::BufReader;\nuse std::io::prelude::*;\nuse std::io::Error;\nuse std::num::NonZeroU32;\nuse std::mem;\n\npub struct Reader {\n    handle: BufReader&lt;File&gt;,\n    repeat_state: Option&lt;(NonZeroU32, String)&gt;,\n}\n\nimpl Reader {\n    pub fn new&lt;P: AsRef&lt;Path&gt;&gt;(path: P) -&gt; Result&lt;Reader, Error&gt; {\n        let file = File::open(path)?;\n        let handle = BufReader::new(file);\n\n        Ok(Reader {\n            handle,\n            repeat_state: None,\n        })\n    }\n\n    /// get next line, respecting repeat instructions\n    pub fn next_line(&amp;mut self) -&gt; Option&lt;String&gt; {\n        if self.repeat_state.is_some() {\n            let (repeats_left, last_line) = mem::replace(&amp;mut self.repeat_state, None).unwrap();\n\n            self.repeat_state = NonZeroU32::new(repeats_left.get() - 1)\n                .map(|repeats_left| (repeats_left, last_line.clone()));\n\n            Some(last_line)\n        } else {\n            let mut line = String::new();\n            if self.handle.read_line(&amp;mut line).is_err() || line.is_empty() {\n                return None\n            }\n\n            if line.starts_with(\"repeat \") {\n                let repeats: Option&lt;u32&gt; = line.chars().skip(7)\n                    .take_while(|c| c.is_numeric())\n                    .collect::&lt;String&gt;().parse().ok();\n\n                self.repeat_state = repeats\n                    .and_then(|repeats| NonZeroU32::new(repeats - 1))\n                    .map(|repeats_left| (repeats_left, line.clone()))\n            }\n\n            Some(line)\n        }\n    }\n}\n\n#[test]\nfn test_next_line() {\n    let source = \"\nline one\nrepeat 2    line two and line three\nline four\nrepeat 11   lines 5-15\nline 16\nline 17\nlast line (18)\n    \".trim();\n    let mut input = File::create(\"file.txt\").unwrap();\n    write!(input, \"{}\", source);\n\n\n    let mut read = Reader::new(\"file.txt\").unwrap();\n    assert_eq!(\n        read.next_line(),\n        Some(\"line one\\n\".to_string())\n    );\n    assert_eq!(\n        read.next_line(),\n        Some(\"repeat 2    line two and line three\\n\".to_string())\n    );\n    assert_eq!(\n        read.next_line(),\n        Some(\"repeat 2    line two and line three\\n\".to_string())\n    );\n    assert_eq!(\n        read.next_line(),\n        Some(\"line four\\n\".to_string())\n    );\n\n    for _ in 5..=15 {\n        assert_eq!(\n            read.next_line(),\n            Some(\"repeat 11   lines 5-15\\n\".to_string())\n        );\n    }\n\n    assert_eq!(\n        read.next_line(),\n        Some(\"line 16\\n\".to_string())\n    );\n    assert_eq!(\n        read.next_line(),\n        Some(\"line 17\\n\".to_string())\n    );\n    assert_eq!(\n        read.next_line(),\n        Some(\"last line (18)\".to_string())\n    );\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=3717f7b17f9fe4b87173aef7cf9d2af9&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>The problem is that I have to clone the held repeated value every time in order to both hold onto it and return it. I want to avoid these costly clones by returning (and maybe storing) a <code>&amp;str</code>. I've tried several things, but was unable to get it to work:</p>\n\n<ul>\n<li>Storing <code>String</code>, returning <code>&amp;str</code>: \"does not live long enough\" lifetime errors</li>\n<li>Storing <code>&amp;str</code>, returning <code>&amp;str</code>: same lifetime errors</li>\n<li><code>Cow&lt;&amp;str&gt;</code></li>\n<li><code>Box&lt;&amp;str&gt;</code></li>\n</ul>\n\n<p>These clones are the bottleneck of my program at the moment, according to  the CodeXL time-based sampling profiler after building in release mode with debug info. Now, my program is plenty fast as it is, but I'm wondering if there is a way of avoiding them.</p>\n"}, {"tags": ["rust", "rust-actix"], "comments": [{"owner": {"reputation": 1540, "user_id": 2606171, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/F4ncy.png?s=128&g=1", "display_name": "belst", "link": "https://stackoverflow.com/users/2606171/belst"}, "edited": false, "score": 1, "creation_date": 1538409303, "post_id": 52594350, "comment_id": 92124236, "body": "check <a href=\"https://actix.rs/docs/databases/\" rel=\"nofollow noreferrer\">actix.rs/docs/databases</a> for an example using diesel."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1538410275, "post_id": 52594350, "comment_id": 92124696, "body": "Does <a href=\"https://play.rust-lang.org/?gist=05152eac1a86b2977e88dfef21f72be6&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">moving the clone of the <code>pool</code> outside of the closures</a> fix the problem?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1538410339, "post_id": 52594350, "comment_id": 92124731, "body": "If so, I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/31360003/155423\">How to share an Arc in multiple closures?</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/52594350/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 1, "user_id": 8538500, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-tniuBy5AT44/AAAAAAAAAAI/AAAAAAAAABE/sLviw6kumGM/photo.jpg?sz=128", "display_name": "markdownzhang", "link": "https://stackoverflow.com/users/8538500/markdownzhang"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1538413076, "post_id": 52594350, "comment_id": 92125979, "body": "@Shepmaster Thanks,It&#39;s can solve my problem. But if I want make more path like mytest2~100. How should I do."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1538413850, "post_id": 52594350, "comment_id": 92126289, "body": "I added a second answer to that question showing a macro-based alternative."}], "owner": {"reputation": 1, "user_id": 8538500, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-tniuBy5AT44/AAAAAAAAAAI/AAAAAAAAABE/sLviw6kumGM/photo.jpg?sz=128", "display_name": "markdownzhang", "link": "https://stackoverflow.com/users/8538500/markdownzhang"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 493, "favorite_count": 0, "closed_date": 1538413830, "answer_count": 0, "score": 0, "last_activity_date": 1538410164, "creation_date": 1538407811, "last_edit_date": 1538410164, "question_id": 52594350, "link": "https://stackoverflow.com/questions/52594350/how-to-use-actix-web-with-a-mysql-connection-pool", "closed_reason": "Duplicate", "title": "How to use actix_web with a MySQL connection pool?", "body": "<p>I want to use a MySQL connection pool in a handler function:</p>\n\n<pre><code>let pw = my::Pool::new(\"mysql://xxxxxx/dev\");\nlet pool: my::Pool;\nmatch pw {\n    Err(err) =&gt; {\n        panic!(\"{}\", err);\n    }\n    Ok(p) =&gt; pool = p,\n};\nserver::new(move || {\n    let pool = pool.to_owned();\n    App::new()\n        .middleware(Logger::default())\n        .middleware(Logger::new(\"%a %{User-Agent}i\"))\n        .resource(\"/mytest\", |r| {\n            r.method(http::Method::GET)\n                .f(|req: &amp;HttpRequest| index(pool.clone(), req))\n        })\n        .resource(\"/mytest1\", |r| {\n            r.method(http::Method::GET)\n                .f(|req: &amp;HttpRequest| index(pool.clone(), req))\n        })\n})\n.bind(\"127.0.0.1:8088\")\n.unwrap()\n.run();\n</code></pre>\n\n<p>I get the error </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0373]: closure may outlive the current function, but it borrows `pool`, which is owned by the current function\n</code></pre>\n\n<p>The compiler gives a suggestion:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>help: to force the closure to take ownership of `pool` (and any other referenced variables), use the `move` keyword\n</code></pre>\n\n<p>If I use <code>move</code> in <code>/mytest</code> then I can't use the pool in <code>/mytest1</code>.</p>\n"}, {"tags": ["macros", "rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1538384830, "post_id": 52587636, "comment_id": 92110535, "body": "Do you have an <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>?"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1538386896, "post_id": 52587636, "comment_id": 92111535, "body": "The error message looks like you are using the macro inside a <code>loop</code>, which seems to be the source of the problem."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1538393840, "post_id": 52587636, "comment_id": 92115139, "body": "The first error is: <code>failed to resolve. Use of undeclared type or module &#39;Sort&#39;</code>. I think there is code missing from your post.  <a href=\"https://play.rust-lang.org/?gist=4d80995a74fa3401c1cbab09006ac534&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}], "answers": [{"comments": [{"owner": {"reputation": 21, "user_id": 2455742, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ec796213f2f6ba813a6b475a2314d9f6?s=128&d=identicon&r=PG", "display_name": "user2455742", "link": "https://stackoverflow.com/users/2455742/user2455742"}, "edited": false, "score": 0, "creation_date": 1538396648, "post_id": 52590398, "comment_id": 92116733, "body": "Shoulb be <code>let sort_by = &amp;$sort_by;</code> in my case. Thanks!"}], "tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 3, "last_activity_date": 1538401242, "last_edit_date": 1538401242, "creation_date": 1538394353, "answer_id": 52590398, "question_id": 52587636, "link": "https://stackoverflow.com/questions/52587636/how-to-capture-by-reference-in-rust-macro/52590398#52590398", "title": "How to capture by reference in rust macro", "body": "<p>Using a macro is equivalent to substituting the code it expands to into its call site.  This means if the macro expansion contains <code>$sort_by</code> multiple times, the code will evaluate the expression you pass in as <code>$sort_by</code> multiple times.  If the expression consumes some variable, this will be invalid.</p>\n\n<p>This is in contrast to how function calls work.  If you pass an expression to a function, it will be evaluated before calling the function, and only the result is passed to the function.</p>\n\n<p>If this is the source of your problem, you can fix it by assigning <code>$sort_by</code> to a local variable inside your macro expansion, and only access the local variable subsequently:</p>\n\n<pre><code>macro_rules! sort_by {\n    ($query:ident, $sort_by:expr, { $($name:pat =&gt; $column:path,)+ }) =&gt; {\n        let sort_by = $sort_by;\n        match sort_by.column {\n            $(\n                $name =&gt; if sort_by.descending {\n                    $query = $query.order_by($column.desc());\n                } else {\n                    $query = $query.order_by($column.asc());\n                },\n            )+\n        }\n    }\n}\n</code></pre>\n\n<p>(Note that I could not test this, since your example is incomplete.)</p>\n"}], "owner": {"reputation": 21, "user_id": 2455742, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ec796213f2f6ba813a6b475a2314d9f6?s=128&d=identicon&r=PG", "display_name": "user2455742", "link": "https://stackoverflow.com/users/2455742/user2455742"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 559, "favorite_count": 0, "accepted_answer_id": 52590398, "answer_count": 1, "score": 1, "last_activity_date": 1538401242, "creation_date": 1538384441, "last_edit_date": 1538389450, "question_id": 52587636, "link": "https://stackoverflow.com/questions/52587636/how-to-capture-by-reference-in-rust-macro", "title": "How to capture by reference in rust macro", "body": "<p>I have a macro to generate <code>match</code> arms:</p>\n\n<pre><code>macro_rules! sort_by {\n    ( $query:ident, $sort_by:expr, { $( $name:pat =&gt; $column:path,)+ } ) =&gt; {\n        match $sort_by.column {\n            $(\n                $name =&gt; if $sort_by.descending {\n                    $query = $query.order_by($column.desc());\n                } else {\n                    $query = $query.order_by($column.asc());\n                },\n            )+\n        }\n    }\n}\n</code></pre>\n\n<p>and I want to call it like this:</p>\n\n<pre><code>sort_by!(query, sort_by.unwrap_or(Sort::desc(\"id\")), {\n    \"id\" =&gt; table::id,\n    \"customerName\" =&gt; table::customer_name,\n});\n</code></pre>\n\n<p>But I'm getting an error:</p>\n\n<pre><code>sort_by!(query, &amp;sort_by.unwrap_or(Sort::desc(\"id\")), {\n                ^^^^^^^ value moved here in previous iteration of loop\n</code></pre>\n\n<p>So I have to call it like this:</p>\n\n<pre><code>let sort = sort_by.unwrap_or(Sort::desc(\"id\"));\nsort_by!(query, &amp;sort, {\n    \"id\" =&gt; table::id,\n    \"customerName\" =&gt; table::customer_name,\n});\n</code></pre>\n\n<p>What should I change to be able to use the expression directly in the macro invocation?</p>\n"}, {"tags": ["algorithm", "matrix", "rust"], "answers": [{"comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1538388858, "post_id": 52587755, "comment_id": 92112582, "body": "Thanks! One note is, that you don&#39;t handle overflows in your code :/ (I mean, when do you have <code>4x10^9</code> elements, but yeah...)"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1538393575, "post_id": 52587755, "comment_id": 92114989, "body": "@hellow Your question explicitly states that the upper bound doesn&#39;t need to be checked, so I didin&#39;t.  Feel free to add the check if you want to. :)"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1538394274, "post_id": 52587755, "comment_id": 92115375, "body": "Upper bound check, in respect to the matrix size ;) sorry if that was unclear."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1538395277, "post_id": 52587755, "comment_id": 92115950, "body": "@hellow And how to <code>get_neighbours()</code> have the knowledge of the matrix ?"}], "tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 2, "last_activity_date": 1538414552, "last_edit_date": 1538414552, "creation_date": 1538384905, "answer_id": 52587755, "question_id": 52586819, "link": "https://stackoverflow.com/questions/52586819/how-do-i-get-all-the-neighbour-indices-in-a-matrix-without-including-negative-va/52587755#52587755", "title": "How do I get all the neighbour-indices in a matrix without including negative values?", "body": "<p>You just need to use <code>if</code> expressions to handle the special case that the coordinates are zero, e.g.</p>\n\n<pre><code>fn get_neighbours(p: Position) -&gt; impl Iterator&lt;Item = Position&gt; {\n    let m_range = if p.0 &gt; 0 { p.0 - 1..p.0 + 2 } else { 0..2 };\n    let n_range = if p.1 &gt; 0 { p.1 - 1..p.1 + 2 } else { 0..2 };\n    m_range\n        .flat_map(move |m| n_range.clone().map(move |n| (m, n)))\n        .filter(move |&amp;q| p != q)\n}\n</code></pre>\n"}], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 75, "favorite_count": 0, "accepted_answer_id": 52587755, "answer_count": 1, "score": 0, "last_activity_date": 1538414552, "creation_date": 1538380842, "last_edit_date": 1538414410, "question_id": 52586819, "link": "https://stackoverflow.com/questions/52586819/how-do-i-get-all-the-neighbour-indices-in-a-matrix-without-including-negative-va", "title": "How do I get all the neighbour-indices in a matrix without including negative values?", "body": "<p>I'm struggling to find all direct neighbours for a given position (which is a <code>(usize, usize)</code>) in an <code>N</code> x <code>M</code> matrix.</p>\n\n<p>The matrix provides a method <code>get(p: Position) -&gt; Option&lt;T&gt;</code> where it does bounds checking and returns <code>None</code> if the position is out of range. This means an upper bound does not need to be checked, but a lower bound still needs to. That is, it does not underflow <code>0</code> in any direction.</p>\n\n<p>My first attempt was to iterate over the slice <code>&amp;[-1, 0, 1]</code> and use <code>checked_add</code>, but this does not work because <code>-1</code> is not a <code>usize</code>.</p>\n\n<p>My next attempt was to subtract 1 from my position (both <code>x</code> and <code>y</code>) and then iterate over the slice <code>&amp;[0, 1, 2]</code>, but that does not work the position <code>(0, _)</code> or <code>(_, 0)</code>.</p>\n\n<p>I prepared a <a href=\"https://play.rust-lang.org/?gist=497f81f5c4a7c60a06eaf042ed2468da&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a>, where one just can implement the one function. (I hope my tests are correct)</p>\n\n<pre><code>type Position = (usize, usize) //x, y\n\nfn get_neighbours(p: Position) -&gt; impl Iterator&lt;Item = Position&gt; {\n    unimplemented!()\n}\n</code></pre>\n\n<p>(<code>impl Iterator</code> can be replaced by <code>Vec</code> if necessary).</p>\n"}, {"tags": ["rust", "rust-macros", "rust-proc-macros"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1538385250, "post_id": 52585719, "comment_id": 92110741, "body": "For what it&#39;s worth, the book contains a <a href=\"https://doc.rust-lang.org/book/2018-edition/appendix-04-macros.html#procedural-macros-for-custom-derive\" rel=\"nofollow noreferrer\">section on writing procedural macros</a>."}, {"owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1538390902, "post_id": 52585719, "comment_id": 92113663, "body": "@SvenMarnach this only explains <code>proc_macro_derive</code>, not <code>proc_macro_attribute</code>."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1538393147, "post_id": 52585719, "comment_id": 92114772, "body": "@llogiq I&#39;m aware of that, however the link may be useful to other people landing here.  (And your first question is &quot;how does one create such a thing&quot;, which is covered there.)"}, {"owner": {"reputation": 65310, "user_id": 201725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/616f7a1cbb20fe949d883393657c039a?s=128&d=identicon&r=PG", "display_name": "Jan Hudec", "link": "https://stackoverflow.com/users/201725/jan-hudec"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1538399294, "post_id": 52585719, "comment_id": 92118341, "body": "I would say that they should be documented in the Book appendix linked by @SvenMarnach and if they are not, it is a bug that should be reported <i>and</i> referenced in the tracking issue <a href=\"https://github.com/rust-lang/rust/issues/38356\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/38356</a> (it is still open, and does not mention documenting the feature, but probably should)."}], "answers": [{"tags": [], "owner": {"reputation": 65310, "user_id": 201725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/616f7a1cbb20fe949d883393657c039a?s=128&d=identicon&r=PG", "display_name": "Jan Hudec", "link": "https://stackoverflow.com/users/201725/jan-hudec"}, "is_accepted": false, "score": 3, "last_activity_date": 1538403647, "creation_date": 1538403647, "answer_id": 52593193, "question_id": 52585719, "link": "https://stackoverflow.com/questions/52585719/how-do-i-create-a-proc-macro-attribute/52593193#52593193", "title": "How do I create a proc_macro_attribute?", "body": "<p>If I understand <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1566-proc-macros.md\" rel=\"nofollow noreferrer\">RFC 1566</a> correctly, you:</p>\n\n<ul>\n<li><p>Create a crate of type <code>proc_macro</code>, i.e. its <code>Cargo.toml</code> should contain</p>\n\n<pre><code>[lib]\nproc-macro = true\n</code></pre></li>\n<li><p>In that crate, create the implementation, annotated with <code>#[proc_macro_attribute]</code>. The <code>#[proc_macro]</code> for function-like macros and <code>#[proc_macro_derive]</code> for custom derives work the same, except they only have one <code>TokenStream</code> argument. These are defined in the <code>proc_macro</code> crate.</p>\n\n<p>The first token stream is the arguments in the attribute, the second is the body of the annotated item.</p></li>\n<li><p>Then in the crate that wants to use the macro, simply depend on the proc_macro crate and\nimport it with <code>#[macro_use]</code> attribute (<code>#[macro_use] extern crate</code>\u2026).</p></li>\n</ul>\n\n<p>That should be enough.</p>\n\n<p>The <a href=\"https://doc.rust-lang.org/book/2018-edition/appendix-04-macros.html#procedural-macros-for-custom-derive\" rel=\"nofollow noreferrer\">appendix in Book</a> should be extended to mention the other proc macro types beyond <code>#[proc_macro_derive]</code>. That it does not is probably a bug.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 11, "last_activity_date": 1551280968, "last_edit_date": 1551280968, "creation_date": 1538404268, "answer_id": 52593373, "question_id": 52585719, "link": "https://stackoverflow.com/questions/52585719/how-do-i-create-a-proc-macro-attribute/52593373#52593373", "title": "How do I create a proc_macro_attribute?", "body": "<p>The Rust compiler has a fairly complete <a href=\"https://github.com/rust-lang/rust/tree/master/src/test\" rel=\"noreferrer\">test suite</a>. When looking for examples of newly-introduced features, I frequently start there:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ rg -c proc_macro_attribute\nsrc/test/run-pass-fulldeps/auxiliary/proc_macro_def.rs:2\nsrc/test/ui-fulldeps/auxiliary/attr_proc_macro.rs:1\n[... 35 other matches ...]\n</code></pre>\n\n<p>Here's a fully worked example:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ tree\n.\n\u251c\u2500\u2500 Cargo.toml\n\u251c\u2500\u2500 my_macro\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Cargo.toml\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 src\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 lib.rs\n\u2514\u2500\u2500 src\n    \u2514\u2500\u2500 main.rs\n</code></pre>\n\n<p><strong>Cargo.toml</strong></p>\n\n<p>We add a dependency on our macro-defining crate.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[package]\nname = \"foo\"\nversion = \"0.1.0\"\nauthors = [\"An Devloper &lt;an.devloper@example.com&gt;\"]\n\n[dependencies]\nmy_macro = { path = \"my_macro\" }\n</code></pre>\n\n<p><strong>src/main.rs</strong></p>\n\n<p>We import the attribute macro and add it to a function.</p>\n\n<pre><code>#[macro_use]\nextern crate my_macro;\n\n#[log_entry_and_exit(hello, \"world\")]\nfn this_will_be_destroyed() -&gt; i32 {\n    42\n}\n\nfn main() {\n    dummy()\n}\n</code></pre>\n\n<p><strong>my_macro/Cargo.toml</strong></p>\n\n<p>We specify <code>crate_type</code> as <code>proc_macro</code>.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[package]\nname = \"my_macro\"\nversion = \"0.1.0\"\nauthors = [\"An Devloper &lt;an.devloper@example.com&gt;\"]\n\n[lib]\ncrate_type = [\"proc-macro\"]\n</code></pre>\n\n<p><strong>my_macro/src/lib.rs</strong></p>\n\n<p>We add <code>#[proc_macro_attribute]</code> to each function that should be a macro.</p>\n\n<pre><code>extern crate proc_macro;\n\nuse proc_macro::*;\n\n#[proc_macro_attribute]\npub fn log_entry_and_exit(args: TokenStream, input: TokenStream) -&gt; TokenStream {\n    let x = format!(r#\"\n        fn dummy() {{\n            println!(\"entering\");\n            println!(\"args tokens: {{}}\", {args});\n            println!(\"input tokens: {{}}\", {input});\n            println!(\"exiting\");\n        }}\n    \"#,\n            args = args.into_iter().count(),\n            input = input.into_iter().count(),\n    );\n\n    x.parse().expect(\"Generated invalid tokens\")\n}\n</code></pre>\n\n<p><strong>cargo run</strong></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>entering\nargs tokens: 3\ninput tokens: 7\nexiting\n</code></pre>\n\n<p>The \"hard\" part is wrangling the <code>TokenStream</code> into something useful and then outputting something equally useful. The crates <a href=\"https://crates.io/crates/syn\" rel=\"noreferrer\">syn</a> and <a href=\"https://crates.io/crates/quote\" rel=\"noreferrer\">quote</a> are the current gold standards for those two tasks. Dealing with <code>TokenStream</code> is covered in the <a href=\"https://doc.rust-lang.org/book/ch19-06-macros.html\" rel=\"noreferrer\">macros chapter of <em>The Rust Programming Language</em></a> as well as <a href=\"https://doc.rust-lang.org/proc_macro/struct.TokenStream.html\" rel=\"noreferrer\">API documentation</a>.</p>\n\n<p>There's also <code>#[proc_macro]</code>, which takes functions of the form:</p>\n\n<pre><code>#[proc_macro]\npub fn the_name_of_the_macro(input: TokenStream) -&gt; TokenStream\n</code></pre>\n\n<p>And can be invoked as <code>the_name_of_the_macro!(...)</code>.</p>\n"}], "owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4701, "favorite_count": 1, "accepted_answer_id": 52593373, "answer_count": 2, "score": 4, "last_activity_date": 1551280968, "creation_date": 1538375803, "last_edit_date": 1551116986, "question_id": 52585719, "link": "https://stackoverflow.com/questions/52585719/how-do-i-create-a-proc-macro-attribute", "title": "How do I create a proc_macro_attribute?", "body": "<p>Now that <code>proc_macros</code> <a href=\"https://github.com/rust-lang/rust/pull/52081\" rel=\"nofollow noreferrer\">have been stabilized</a>, how does one create such a thing?</p>\n\n<p>From what I've seen, there's the option of putting a <code>#[proc_macro_attribute]</code> annotation on a <code>fn whatsitsname(attrs: TokenStream, code: TokenStream) -&gt; TokenStream</code>, but how can I register it? How can I add custom attributes?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1538378009, "post_id": 52584251, "comment_id": 92107196, "body": "Actually, the error message does <b>not</b> suggest to add <code>move</code> in front of the closure\u2026"}], "answers": [{"comments": [{"owner": {"reputation": 797, "user_id": 4803321, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/26ViJ.png?s=128&g=1", "display_name": "\u5468\u6c49\u6210", "link": "https://stackoverflow.com/users/4803321/%e5%91%a8%e6%b1%89%e6%88%90"}, "edited": false, "score": 0, "creation_date": 1538383416, "post_id": 52586232, "comment_id": 92109846, "body": "Yes! I edit the question, and the example now reproduces the problem I am facing to."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "reply_to_user": {"reputation": 797, "user_id": 4803321, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/26ViJ.png?s=128&g=1", "display_name": "\u5468\u6c49\u6210", "link": "https://stackoverflow.com/users/4803321/%e5%91%a8%e6%b1%89%e6%88%90"}, "edited": false, "score": 0, "creation_date": 1538383727, "post_id": 52586232, "comment_id": 92109983, "body": "Updated the answer"}, {"owner": {"reputation": 797, "user_id": 4803321, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/26ViJ.png?s=128&g=1", "display_name": "\u5468\u6c49\u6210", "link": "https://stackoverflow.com/users/4803321/%e5%91%a8%e6%b1%89%e6%88%90"}, "edited": false, "score": 0, "creation_date": 1538894650, "post_id": 52586232, "comment_id": 92299567, "body": "<a href=\"https://play.rust-lang.org/?gist=056202533bf21cdf235d84a1cc4c8698&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Solution 1</a>  will report an error, when calling it. I&#39;m kind confusing of the relationship between keyword <code>move</code> and trait <code>FnOnce</code>."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "reply_to_user": {"reputation": 797, "user_id": 4803321, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/26ViJ.png?s=128&g=1", "display_name": "\u5468\u6c49\u6210", "link": "https://stackoverflow.com/users/4803321/%e5%91%a8%e6%b1%89%e6%88%90"}, "edited": false, "score": 0, "creation_date": 1538989073, "post_id": 52586232, "comment_id": 92323881, "body": "@\u5468\u6c49\u6210 You&#39;re right, there is apparently a limitation in current rust that <a href=\"https://doc.rust-lang.org/stable/std/boxed/trait.FnBox.html\" rel=\"nofollow noreferrer\">makes it impossible to call a <code>Box&lt;FnOnce&gt;</code></a>. I&#39;ll add a note."}], "tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": true, "score": 1, "last_activity_date": 1608762195, "last_edit_date": 1608762195, "creation_date": 1538378157, "answer_id": 52586232, "question_id": 52584251, "link": "https://stackoverflow.com/questions/52584251/function-returns-a-closure-which-return-a-closure-that-use-the-environment-varia/52586232#52586232", "title": "function returns a closure which return a closure that use the environment variable", "body": "<p>You have (rightly) used <code>move</code> for the first closure (line 7), but you need to also add it for the second closure (line 8):</p>\n<pre><code>let closure2: Closure2 = Box::new(move || {\n    let closure1 = move || { // &lt;-- Add &quot;move&quot; on this line\n        println!(&quot;{}&quot;, a)\n    };\n    Box::new(closure1)\n});\n</code></pre>\n<p><a href=\"https://play.integer32.com/?gist=31dec3c9b2ff273ff0c4334e120f2642&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a></p>\n<p>This makes it work if <code>a</code> has a <code>Copy</code> type, but it causes the error <code>cannot move out of captured outer variable in an 'Fn' closure</code> when <code>a</code> is not <code>Copy</code> (eg if <code>a</code> is a <code>Vec</code>). The problem is due to the fact that you are defining <code>closure2</code> as <code>Fn</code>, which means that you are telling the compiler that you might want to call it more than once. However the first time you call <code>closure2</code> will move <code>a</code> into the returned <code>closure1</code>, so <code>a</code> won't be available for a possible next call to <code>closure2</code>.</p>\n<p>Long story short: you need to define <code>closure2</code> as <code>FnOnce</code> to tell the compiler that you can't call it more than once, or you need to move a clone of <code>a</code> into <code>closure1</code> so that <code>closure2</code> will keep its copy.</p>\n<h3>Solution 1: <code>FnOnce</code></h3>\n<pre><code>type Closure1 = Box&lt;Fn() -&gt; ()&gt;;\ntype Closure2 = Box&lt;FnOnce() -&gt; Closure1&gt;;\n\nfn closure_container() -&gt; Closure2 {\n    let a: Vec&lt;usize&gt; = Vec::new();\n    let closure2: Closure2 = Box::new(move || {\n        let closure1 = move || {\n            println!(&quot;{:?}&quot;, a)\n        };\n        Box::new(closure1)\n    });\n\n    closure2\n}\n</code></pre>\n<p><a href=\"https://play.integer32.com/?gist=a56f4b9e57e61a94fd7f74e400b9bba4&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a></p>\n<p>Note however that although you can <em>create</em> a <code>Closure2</code> this way, it is impossible to <em>call</em> it in current stable Rust. If you are willing to use nightly, it should work if you replace <code>FnOnce</code> with <a href=\"https://doc.rust-lang.org/stable/std/boxed/trait.FnBox.html\" rel=\"nofollow noreferrer\"><code>FnBox</code></a>, but I'm hitting another error with this (<a href=\"https://play.integer32.com/?gist=71f039bb06194aa2ef345787901aed45&amp;version=nightly&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a>). For the time being, you will need to use solution 2 and clone <code>a</code>. If you want to avoid the cost of cloning the entire vector, you can <a href=\"https://stackoverflow.com/a/52603407/5397009\">wrap it in an <code>Rc</code> and clone that</a> (<a href=\"https://play.integer32.com/?gist=ee8c8f2312e03d520b26ce8bf4560a03&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a>).</p>\n<h3>Solution 2: Clone</h3>\n<pre><code>type Closure1 = Box&lt;Fn() -&gt; ()&gt;;\ntype Closure2 = Box&lt;Fn() -&gt; Closure1&gt;;\n\nfn closure_container() -&gt; Closure2 {\n    let a: Vec&lt;usize&gt; = Vec::new();\n    let closure2: Closure2 = Box::new(move || {\n        let b = a.clone();\n        let closure1 = move || {\n            println!(&quot;{:?}&quot;, b)\n        };\n        Box::new(closure1)\n    });\n\n    closure2\n}\n</code></pre>\n<p><a href=\"https://play.integer32.com/?gist=a69b26cf705c92e61fecb9f16db6b1ef&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a></p>\n"}], "owner": {"reputation": 797, "user_id": 4803321, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/26ViJ.png?s=128&g=1", "display_name": "\u5468\u6c49\u6210", "link": "https://stackoverflow.com/users/4803321/%e5%91%a8%e6%b1%89%e6%88%90"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 89, "favorite_count": 0, "accepted_answer_id": 52586232, "answer_count": 1, "score": -1, "last_activity_date": 1608762195, "creation_date": 1538364826, "last_edit_date": 1538384273, "question_id": 52584251, "link": "https://stackoverflow.com/questions/52584251/function-returns-a-closure-which-return-a-closure-that-use-the-environment-varia", "title": "function returns a closure which return a closure that use the environment variable", "body": "<p><code>functionA</code> returns <code>closureA</code>, and that <code>closureA</code> returns a <code>closureB</code>, <code>closureB</code> which use variable from <code>functionA</code>'s surrounding environment. </p>\n\n<pre><code>fn main () {\n   type Closure1 = Box&lt;Fn() -&gt; ()&gt;;\n   type Closure2 = Box&lt;Fn() -&gt; Closure1&gt;;\n\n   fn closure_container() -&gt; Closure2 {\n       let mut a: Vec&lt;usize&gt; = Vec::new();\n       let closure2: Closure2 = Box::new(move || {\n           let closure1 = || {\n               println!(\"{}\", a)\n           };\n           Box::new(closure1)\n       });\n\n       closure2\n   }\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of captured outer variable in an `Fn` closure\n --&gt; src/main.rs:9:27\n  |\n6 |        let mut a: Vec&lt;usize&gt; = Vec::new();\n  |            ----- captured outer variable\n...\n9 |            let closure1 = move || {\n  |                           ^^^^^^^ cannot move out of captured outer variable in an `Fn` closure\n</code></pre>\n\n<p>It compiles <code>let mut a = 100;</code>, But <code>let mut a: Vec&lt;usize&gt; = Vec::new();</code> will report a error! I don't know how to fix it.</p>\n"}, {"tags": ["linux", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1538359473, "post_id": 52583696, "comment_id": 92102496, "body": "See also <a href=\"https://stackoverflow.com/q/91576/155423\">crti.o file missing</a> \u2014 Have you installed the proper dependencies for your system?"}, {"owner": {"reputation": 9526, "user_id": 7356355, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed89399fa941467104efb9930687aaa?s=128&d=identicon&r=PG&f=1", "display_name": "user158", "link": "https://stackoverflow.com/users/7356355/user158"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1538360621, "post_id": 52583696, "comment_id": 92102673, "body": "@Shepmaster thank you very much for support, I fixed the issue by installing libc6-dev. Really happy about Rust community."}, {"owner": {"reputation": 73, "user_id": 6449441, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/82c9d044ca06062ac6480387a5ffa3e2?s=128&d=identicon&r=PG&f=1", "display_name": "hkiame", "link": "https://stackoverflow.com/users/6449441/hkiame"}, "edited": false, "score": 0, "creation_date": 1579445970, "post_id": 52583696, "comment_id": 105761111, "body": "To install the developer package command: sudo apt-get install libc6-dev"}], "owner": {"reputation": 9526, "user_id": 7356355, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed89399fa941467104efb9930687aaa?s=128&d=identicon&r=PG&f=1", "display_name": "user158", "link": "https://stackoverflow.com/users/7356355/user158"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1460, "favorite_count": 0, "closed_date": 1538377478, "answer_count": 0, "score": 0, "last_activity_date": 1593438743, "creation_date": 1538358835, "last_edit_date": 1593438743, "question_id": 52583696, "link": "https://stackoverflow.com/questions/52583696/error-linking-with-cc-failed-exit-code-1-on-linux", "closed_reason": "Duplicate", "title": "error: linking with `cc` failed: exit code: 1 on Linux", "body": "<p>I know that similar questions have been asked (<a href=\"https://stackoverflow.com/questions/28124221/error-linking-with-cc-failed-exit-code-1\">error: linking with `cc` failed: exit code: 1</a>) and there is also an <a href=\"https://github.com/rust-lang/rust/issues/25289\" rel=\"nofollow noreferrer\">issue in the GitHub repo</a>, but I could not figure out why this is happening in my case.</p>\n<p>I get the following error when I am trying to run simple hello world program</p>\n<pre class=\"lang-none prettyprint-override\"><code>username@computer:~/hello$ cargo run\n   Compiling hello v0.1.0 (file:///home/username/hello)                        \nerror: linking with `cc` failed: exit code: 1\n  |\n  = note: &quot;cc&quot; &quot;-Wl,--as-needed&quot; &quot;-Wl,-z,noexecstack&quot; &quot;-m64&quot; &quot;-L&quot; &quot;/home/username/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib&quot; &quot;/home/username/hello/target/debug/deps/hello-48f1e5d3f3df5b46.1y16o1qfye96o7m0.rcgu.o&quot; &quot;/home/username/hello/target/debug/deps/hello-48f1e5d3f3df5b46.3rngp6bm2u2q5z0y.rcgu.o&quot; &quot;/home/username/hello/target/debug/deps/hello-48f1e5d3f3df5b46.4oc10dk278mpk1vy.rcgu.o&quot; &quot;/home/username/hello/target/debug/deps/hello-48f1e5d3f3df5b46.4xq48u46a1pwiqn7.rcgu.o&quot; &quot;/home/username/hello/target/debug/deps/hello-48f1e5d3f3df5b46.544l4wfz89vbhoea.rcgu.o&quot; &quot;/home/username/hello/target/debug/deps/hello-48f1e5d3f3df5b46.oa3rad818d8sgn4.rcgu.o&quot; &quot;-o&quot; &quot;/home/username/hello/target/debug/deps/hello-48f1e5d3f3df5b46&quot; &quot;/home/username/hello/target/debug/deps/hello-48f1e5d3f3df5b46.crate.allocator.rcgu.o&quot; &quot;-Wl,--gc-sections&quot; &quot;-pie&quot; &quot;-Wl,-zrelro&quot; &quot;-Wl,-znow&quot; &quot;-nodefaultlibs&quot; &quot;-L&quot; &quot;/home/username/hello/target/debug/deps&quot; &quot;-L&quot; &quot;/home/username/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib&quot; &quot;-Wl,--start-group&quot; &quot;-Wl,-Bstatic&quot; &quot;/home/username/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd-9318d1aa9575dbf9.rlib&quot; &quot;/home/username/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libpanic_unwind-e3cd3f44688b2d97.rlib&quot; &quot;/home/username/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/liballoc_jemalloc-2f4890fbea3bd5e0.rlib&quot; &quot;/home/username/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libunwind-a0ddde720c2c46c5.rlib&quot; &quot;/home/username/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/liballoc_system-9c41ffe739844496.rlib&quot; &quot;/home/username/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/liblibc-af766b046896c123.rlib&quot; &quot;/home/username/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/liballoc-00b776688b98de66.rlib&quot; &quot;/home/username/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcore-d05a4396ceff8bc8.rlib&quot; &quot;-Wl,--end-group&quot; &quot;/home/username/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcompiler_builtins-fe16a4dcdcd95bab.rlib&quot; &quot;-Wl,-Bdynamic&quot; &quot;-ldl&quot; &quot;-lrt&quot; &quot;-lpthread&quot; &quot;-lpthread&quot; &quot;-lgcc_s&quot; &quot;-lc&quot; &quot;-lm&quot; &quot;-lrt&quot; &quot;-lpthread&quot; &quot;-lutil&quot; &quot;-lutil&quot;\n  = note: /usr/bin/ld: cannot find Scrt1.o: No such file or directory\n          /usr/bin/ld: cannot find crti.o: No such file or directory\n          collect2: error: ld returned 1 exit status\n</code></pre>\n<p>I have tried:</p>\n<ol>\n<li>Reinstalling Rust</li>\n<li>Checking whether GCC is installed (it is)</li>\n<li>Directly compiling the file via <code>rustc main.rs</code> (same error)</li>\n</ol>\n<p>It seems to be issue with the new Rust compiler. I am using <code>rustc 1.29.1 (b801ae664 2018-09-20)</code> on <code>Linux mint 18.3</code> , Kernel version is</p>\n<pre><code>$ uname -a\nLinux Computer 4.10.0-38-generic #42~16.04.1-Ubuntu SMP Tue Oct 10 16:32:20 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1538330555, "post_id": 52580629, "comment_id": 92096483, "body": "Please make your <a href=\"https://stackoverflow.com/tags/rust/info\">example compile</a>. What are the types of <code>get_a</code> and <code>get_b</code>? Do they return the same kind of error? <code>impl Trait</code> means the function chooses the return type, but there can only be one type. Also, why not use <a href=\"https://doc.rust-lang.org/std/error/trait.Error.html\" rel=\"nofollow noreferrer\"><code>Error</code></a>?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1538331422, "post_id": 52580629, "comment_id": 92096746, "body": "<i>I don&#39;t have a single type that I know of that I can give it</i> \u2014 <a href=\"https://stackoverflow.com/q/52001592/155423\"><code>impl Trait</code> can not be used to return multiple types</a>."}, {"owner": {"reputation": 1183, "user_id": 1816631, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/29ced07f3e8c91fca396d867bda0b7da?s=128&d=identicon&r=PG", "display_name": "Gorm Casper", "link": "https://stackoverflow.com/users/1816631/gorm-casper"}, "edited": false, "score": 0, "creation_date": 1538331579, "post_id": 52580629, "comment_id": 92096791, "body": "Okay, sorry, was working on something on play.rust-lang.org that I could show; but so I guess the answer is that there is no way to do this. The only way is to run <code>.map_err(...)</code> on every error I get so I can get the same type I guess"}, {"owner": {"reputation": 1183, "user_id": 1816631, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/29ced07f3e8c91fca396d867bda0b7da?s=128&d=identicon&r=PG", "display_name": "Gorm Casper", "link": "https://stackoverflow.com/users/1816631/gorm-casper"}, "edited": false, "score": 0, "creation_date": 1538332433, "post_id": 52580629, "comment_id": 92097069, "body": "<a href=\"https://play.rust-lang.org/?gist=96fd9e3caa5ba3672ef632d7c6719065&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> There we go :-)"}, {"owner": {"reputation": 1183, "user_id": 1816631, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/29ced07f3e8c91fca396d867bda0b7da?s=128&d=identicon&r=PG", "display_name": "Gorm Casper", "link": "https://stackoverflow.com/users/1816631/gorm-casper"}, "edited": false, "score": 0, "creation_date": 1538332748, "post_id": 52580629, "comment_id": 92097154, "body": "There is actually a pretty good explanation here: <a href=\"https://stackoverflow.com/questions/52001592/why-can-impl-trait-not-be-used-to-return-multiple-conditional-types?noredirect=1&amp;lq=1\" title=\"why can impl trait not be used to return multiple conditional types\">stackoverflow.com/questions/52001592/&hellip;</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1538332879, "post_id": 52580629, "comment_id": 92097186, "body": "@GormCasper do you feel that question&#39;s answers solve your issue?"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1538333054, "post_id": 52580629, "comment_id": 92097237, "body": "<a href=\"https://play.integer32.com/?gist=8a2d3c35b875106315d6281d4c22c131&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\"><code>Error</code> is a little special as it is able to auto-<code>Box</code> itself with <code>?</code></a>, because there is a <code>impl&lt;&#39;a, E: Error + &#39;a&gt; From&lt;E&gt; for Box&lt;Error + &#39;a&gt;</code> implementation."}, {"owner": {"reputation": 1183, "user_id": 1816631, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/29ced07f3e8c91fca396d867bda0b7da?s=128&d=identicon&r=PG", "display_name": "Gorm Casper", "link": "https://stackoverflow.com/users/1816631/gorm-casper"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1538334071, "post_id": 52580629, "comment_id": 92097502, "body": "@Shepmaster I think so. I&#39;m just bummed I have to <code>.map_err</code> everything. @mcarton I don&#39;t quite get that, but <code>Box</code>ing everything seems just as cumbersome as <code>map_err</code> (and I&#39;ve never worked with them before)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1538334327, "post_id": 52580629, "comment_id": 92097550, "body": "@mcarton&#39;s point is that <a href=\"https://play.rust-lang.org/?gist=5f73929d99728a49b7d447ba3998599f&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\"><code>fn get_a_b() -&gt; Result&lt;(), Box&lt;std::error::Error&gt;&gt;</code> works as-is</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1538334414, "post_id": 52580629, "comment_id": 92097567, "body": "You&#39;ll note that we are having difficulty with your &quot;question&quot; because you haven&#39;t really <i>asked</i> a question. &quot;Return type for Impl Display&quot; isn&#39;t something that&#39;s answerable."}, {"owner": {"reputation": 1183, "user_id": 1816631, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/29ced07f3e8c91fca396d867bda0b7da?s=128&d=identicon&r=PG", "display_name": "Gorm Casper", "link": "https://stackoverflow.com/users/1816631/gorm-casper"}, "edited": false, "score": 0, "creation_date": 1538334830, "post_id": 52580629, "comment_id": 92097659, "body": "Oh, I just thought &quot;What is the&quot; are not very google&#39;able words to put in a headline, so I thought of them as implied. ... I&#39;m fine with the answer. If you want, you can make a post that just links to what I linked to, and/or the <code>Box</code> answer. (which totally works! -- for all the errors I could get except one. Very happy here :))"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1538378936, "post_id": 52580629, "comment_id": 92107631, "body": "Or you might want to look at the <a href=\"https://boats.gitlab.io/failure/\" rel=\"nofollow noreferrer\">failure</a> crate\u2026"}], "owner": {"reputation": 1183, "user_id": 1816631, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/29ced07f3e8c91fca396d867bda0b7da?s=128&d=identicon&r=PG", "display_name": "Gorm Casper", "link": "https://stackoverflow.com/users/1816631/gorm-casper"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 62, "favorite_count": 0, "closed_date": 1538337548, "answer_count": 0, "score": 0, "last_activity_date": 1538332835, "creation_date": 1538330286, "last_edit_date": 1538332835, "question_id": 52580629, "link": "https://stackoverflow.com/questions/52580629/return-type-for-impl-display", "closed_reason": "Duplicate", "title": "Return type for Impl Display", "body": "<p>I have this (very simplified) function:</p>\n\n<pre><code>fn get_a_b() -&gt; Result&lt;(), impl std::fmt::Display&gt; {\n    env::current_dir()?;\n    File::open(\"bad-dir\")?;\n    Ok(())\n}\n</code></pre>\n\n<p>but <a href=\"https://play.rust-lang.org/?gist=96fd9e3caa5ba3672ef632d7c6719065&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">I get this error pointing to <code>Display</code></a>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0282]: type annotations needed\n  --&gt; src/main.rs:12:28\n   |\n12 | fn get_a_b() -&gt; Result&lt;(), impl std::fmt::Display&gt; {\n   |                            ^^^^^^^^^^^^^^^^^^^^^^ cannot infer type\n</code></pre>\n\n<p>I assume it's because I need to somehow define what is inside the <code>Display</code>(?), but if I only ever need to display it (<code>println!</code>), then can't I just say that all I know is that it implements <code>Display</code> and let that be it?</p>\n\n<p>There are quite a lot of ways the function can fail (it's doing a lot of <code>io</code> as well as some <code>serde</code> parsing), so I don't have a single type that I know of that I can give it.</p>\n"}, {"tags": ["process", "rust", "daemon"], "comments": [{"owner": {"reputation": 207, "user_id": 2519977, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e49452fdc198e591d73f5e373d860e23?s=128&d=identicon&r=PG", "display_name": "rudib", "link": "https://stackoverflow.com/users/2519977/rudib"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1538331978, "post_id": 52580384, "comment_id": 92096919, "body": "@Shepmaster Could it have something to do with <a href=\"https://github.com/rust-lang/rust/blob/866a713258915e6cbb212d135f751a6a8c9e1c0a/src/libstd/sys/windows/process.rs#L81\" rel=\"nofollow noreferrer\">this</a> and <a href=\"https://github.com/rust-lang/rust/blob/866a713258915e6cbb212d135f751a6a8c9e1c0a/src/libstd/sys/windows/process.rs#L112\" rel=\"nofollow noreferrer\">this</a> part of <code>process::Command</code>?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1538349035, "post_id": 52580384, "comment_id": 92100767, "body": "&quot;However, when the parent exits, the child exits too, which is undesired behavior in this case.&quot; Are you sure ? Generally, child doesn&#39;t die with their parent, at least this is the standard behavior on all unix system, I didn&#39;t think windows differ."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1538349178, "post_id": 52580384, "comment_id": 92100791, "body": "But if you need special behavior I suppose your could directly use winapi with <a href=\"https://doc.rust-lang.org/std/os/windows/io/trait.IntoRawHandle.html\" rel=\"nofollow noreferrer\"><code>into_raw_handle()</code></a>"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1538349340, "post_id": 52580384, "comment_id": 92100828, "body": "Also your use of <code>arg()</code> is incorrect, it&#39;s probably why your child die. You must use it as <a href=\"https://doc.rust-lang.org/std/process/struct.Command.html#method.arg\" rel=\"nofollow noreferrer\">doc</a> say."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1538349610, "post_id": 52580384, "comment_id": 92100881, "body": "And for finish, try to avoid the use of <code>exit()</code>, the <a href=\"https://doc.rust-lang.org/std/process/fn.exit.html\" rel=\"nofollow noreferrer\">doc</a> explain why."}, {"owner": {"reputation": 207, "user_id": 2519977, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e49452fdc198e591d73f5e373d860e23?s=128&d=identicon&r=PG", "display_name": "rudib", "link": "https://stackoverflow.com/users/2519977/rudib"}, "edited": false, "score": 0, "creation_date": 1538354514, "post_id": 52580384, "comment_id": 92101668, "body": "I tried to implement all your suggestions, see my updated post, sadly the beahaviour is still the same. as for the <code>arg()</code>. Technically, I&#39;m passing one long argument to <code>cmd.exe</code>, so it should be correct? - as the docs say to use one <code>arg()</code> per argument."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1538364552, "post_id": 52580384, "comment_id": 92103322, "body": "No, it&#39;s not correct this will problably not work, you doc is clear, you must do something like that: <code>.args(&amp;[&quot;&#47;C&quot;, &quot;powershell&quot;, &quot;-Command&quot;, &quot;Start-Process&quot;, &quot;-Verb&quot;, &quot;runas&quot;, &quot;-File-Path&quot;, &quot;C:\\\\my\\\\file&quot;]);</code>. And <code>into_raw_handle()</code> is not magic, this give you the raw handle of your os, aka windows in your case, you need to search, maybe <a href=\"https://docs.microsoft.com/en-us/windows/console/freeconsole\" rel=\"nofollow noreferrer\">this</a> will work."}, {"owner": {"reputation": 207, "user_id": 2519977, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e49452fdc198e591d73f5e373d860e23?s=128&d=identicon&r=PG", "display_name": "rudib", "link": "https://stackoverflow.com/users/2519977/rudib"}, "edited": false, "score": 0, "creation_date": 1538393740, "post_id": 52580384, "comment_id": 92115071, "body": "Ok, I&#39;m now using <code>args</code> as I probably should with the same effect. I&#39;m now trying to use <code>kernel32::StartProcessW</code> directly with the detach flags. Will update one that is done."}, {"owner": {"reputation": 207, "user_id": 2519977, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e49452fdc198e591d73f5e373d860e23?s=128&d=identicon&r=PG", "display_name": "rudib", "link": "https://stackoverflow.com/users/2519977/rudib"}, "edited": false, "score": 0, "creation_date": 1538428800, "post_id": 52580384, "comment_id": 92132742, "body": "After using <code>winapi::um::processthreadsapi::CreateProcessW</code> directly, still with the same results, I checked other factors. It turned out that the &quot;problem&quot; was that the application was launched in a powershell which caused this behavior. If the program is launched directly, it works as expected. I&#39;m unsure why this is the case, but it works now and the issue does not seem to be related to rust (I would have to test if e.g. C++ behaves the same way...). Thank you for your help!"}], "owner": {"reputation": 207, "user_id": 2519977, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e49452fdc198e591d73f5e373d860e23?s=128&d=identicon&r=PG", "display_name": "rudib", "link": "https://stackoverflow.com/users/2519977/rudib"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 638, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1538428845, "creation_date": 1538328590, "last_edit_date": 1538428845, "question_id": 52580384, "link": "https://stackoverflow.com/questions/52580384/fully-detach-childprocess-in-rust-on-windows", "title": "Fully detach ChildProcess in Rust on Windows", "body": "<p>I need to relaunch a Rust application on Windows as administrator so I worked out a command that would do that for me.</p>\n\n<p>After relaunching, I would like the initiating process to exit and the child to continue running. However, when the parent exits, the child exits too, which is undesired behavior in this case.</p>\n\n<p>I have used the standard <code>process:Command</code> to launch the command (simplified here):</p>\n\n<pre><code>#![allow(unused)]\nfn main() {\n    use std::process::Command;\n    use std::os::windows::io::IntoRawHandle;\n\n    let mut mycom = Command::new(\"C:\\\\Windows\\\\System32\\\\cmd.exe\")\n        .arg(\"/C powershell -Command Start-Process -Verb runas -File-Path C:\\\\my\\\\file\");\n    let child = mycom.spawn()\n        .expect(\"command failed to start\");\n\n    //Perfectly running Child dies after pressing Enter\n    let mut s = String::new();\n    std::io::stdin().read_line(&amp;mut s);\n}\n</code></pre>\n\n<p>I found some documentation of <code>.detached()</code> and <code>child.forget()</code> <a href=\"https://github.com/rust-lang/rust/issues/15641\" rel=\"nofollow noreferrer\">here</a> and <a href=\"https://mail.mozilla.org/pipermail/rust-dev/2014-July/010789.html\" rel=\"nofollow noreferrer\">here</a>, however these options seem to be discontinued.</p>\n\n<p>I also tried the Windows <code>start</code> command which also did not give me a detached process.</p>\n\n<p>It's relatively easy on Linux by using <code>nohup</code> or <code>mycommand &amp;</code>.\nThere may be a way with <code>setsid</code> in libc, but I didn't find any usable documentation for that, just <a href=\"https://docs.rs/libc/0.2.43/libc/fn.setsid.html\" rel=\"nofollow noreferrer\">the generated documentation</a>.</p>\n\n<p>Is there a way to achieve a fully detached process?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 2, "creation_date": 1538308639, "post_id": 52577558, "comment_id": 92090509, "body": "The example you&#39;ve provided works just fine.  Either you&#39;ve pasted the wrong code, or you&#39;re omitting something important."}, {"owner": {"reputation": 31, "user_id": 5598102, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/WxjUb.jpg?s=128&g=1", "display_name": "Pucker", "link": "https://stackoverflow.com/users/5598102/pucker"}, "reply_to_user": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1538315461, "post_id": 52577558, "comment_id": 92092070, "body": "The answer below is right.. I use the 2018 edition, the old way won&#39;t work.."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1538316129, "post_id": 52577558, "comment_id": 92092221, "body": "The opposite is true; the old way does work with this code.  Using a beta feature and not mentioning it counts as omitting something important."}], "answers": [{"tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 4, "last_activity_date": 1538311747, "creation_date": 1538311747, "answer_id": 52578016, "question_id": 52577558, "link": "https://stackoverflow.com/questions/52577558/unresolved-import-when-calling-functions-across-modules-in-rust-2018/52578016#52578016", "title": "&quot;unresolved import&quot; when calling functions across modules in Rust 2018", "body": "<p>You appear to be using the beta version of the 2018 edition of Rust rather than the stable release.  In the new version, you need to explicitly mark imports from the current crate with the <code>crate</code> keyword:</p>\n\n<pre><code>use crate::xxx::hello;\n</code></pre>\n\n<p>See <a href=\"https://rust-lang-nursery.github.io/edition-guide/rust-2018/module-system/path-clarity.html\" rel=\"nofollow noreferrer\">the section on \"path clarity\" in the edition guide</a> for more details.</p>\n"}], "owner": {"reputation": 31, "user_id": 5598102, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/WxjUb.jpg?s=128&g=1", "display_name": "Pucker", "link": "https://stackoverflow.com/users/5598102/pucker"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1632, "favorite_count": 0, "accepted_answer_id": 52578016, "answer_count": 1, "score": 2, "last_activity_date": 1538315158, "creation_date": 1538307848, "last_edit_date": 1538315158, "question_id": 52577558, "link": "https://stackoverflow.com/questions/52577558/unresolved-import-when-calling-functions-across-modules-in-rust-2018", "title": "&quot;unresolved import&quot; when calling functions across modules in Rust 2018", "body": "<p>Here is the file tree of my demo project:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>.\n\u251c\u2500\u2500 Cargo.lock\n\u251c\u2500\u2500 Cargo.toml\n\u251c\u2500\u2500 src\n \u00a0\u00a0 \u251c\u2500\u2500 lib.rs\n \u00a0\u00a0 \u251c\u2500\u2500 ooo.rs\n \u00a0\u00a0 \u2514\u2500\u2500 xxx.rs\n</code></pre>\n\n<p>In <code>lib.rs</code>:</p>\n\n<pre><code>mod xxx;\nmod ooo;\n</code></pre>\n\n<p>In <code>xxx.rs</code>:</p>\n\n<pre><code>pub fn hello() {\n    println!(\"hello!\");\n}\n</code></pre>\n\n<p>In <code>ooo.rs</code>:</p>\n\n<pre><code>use xxx::hello;\n\npub fn world() {\n    hello();\n    println!(\"world!\");\n}\n</code></pre>\n\n<p>When I execute <code>cargo build</code>, it doesn't succeed:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>   Compiling ooo v0.1.0 (/Users/eric/ooo)\nerror[E0432]: unresolved import `xxx`\n --&gt; src/ooo.rs:1:5\n  |\n1 | use xxx::hello;\n  |     ^^^ Could not find `xxx` in `{{root}}`\n</code></pre>\n\n<p>I know that if I use <code>super::ooo::hello</code> instead of <code>ooo::hello</code>, it will succeed, but is there any way I can use <code>ooo::hello</code> and succeed?</p>\n\n<p>For example, this works in the <code>redis-rs</code> project in <code>src/client.rs</code> where <code>connection</code> and <code>types</code> are the modules in this crate:</p>\n\n<pre><code>use connection::{connect, Connection, ConnectionInfo, ConnectionLike, IntoConnectionInfo};\nuse types::{RedisFuture, RedisResult, Value};\n</code></pre>\n"}, {"tags": ["callback", "rust"], "comments": [{"owner": {"reputation": 648, "user_id": 9968825, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d6d0332ac7d53381e1a5b84b320fd135?s=128&d=identicon&r=PG", "display_name": "chrysn", "link": "https://stackoverflow.com/users/9968825/chrysn"}, "edited": false, "score": 0, "creation_date": 1538305410, "post_id": 52577220, "comment_id": 92089779, "body": "PS: The same can be asked about lifetimes as well (&quot;The callback needs to be generic on an <code>&#39;a</code> in its <code>&amp;&#39;a [u8]</code> argument, but my processor picks the lifetime and it will only barely outlive the callback invocation&quot;) -- I&#39;ve run into both versions, but to the type system they&#39;re probably the same, and I&#39;d only continue with the lifetime version of the problem once the unnamable-closure version is resolved."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1538327081, "post_id": 52577220, "comment_id": 92095480, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/41508680/155423\">Generic struct over a generic type without type parameter</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/52577220/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1538328912, "post_id": 52577220, "comment_id": 92095953, "body": "I&#39;m guessing you wouldn&#39;t find it satisfactory to change the signature to <code>fn c(data: Box&lt;dyn Iterator&lt;Item=i32&gt;&gt;) </code>..."}, {"owner": {"reputation": 648, "user_id": 9968825, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d6d0332ac7d53381e1a5b84b320fd135?s=128&d=identicon&r=PG", "display_name": "chrysn", "link": "https://stackoverflow.com/users/9968825/chrysn"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1538416649, "post_id": 52577220, "comment_id": 92127433, "body": "@Shepmaster, the RFC that answers the other question is not (directly) helpful here, but helped me find an answer (in progress). Thanks for the link and the edits."}], "answers": [{"tags": [], "owner": {"reputation": 648, "user_id": 9968825, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d6d0332ac7d53381e1a5b84b320fd135?s=128&d=identicon&r=PG", "display_name": "chrysn", "link": "https://stackoverflow.com/users/9968825/chrysn"}, "is_accepted": true, "score": 0, "last_activity_date": 1538460376, "creation_date": 1538460376, "answer_id": 52602825, "question_id": 52577220, "link": "https://stackoverflow.com/questions/52577220/receiving-callbacks-with-impl-trait-and-passing-them-existential-values/52602825#52602825", "title": "Receiving callbacks with `impl Trait` and passing them existential values", "body": "<p>What solved my issue was introducing a trait for callbacks that has a workhorse method that's generic on an argument's type. This precludes the direct use of lambdas as callbacks AFAICT (I can't wrap them), but allows passing around functions generic on their argument types or lifetimes.</p>\n\n<p>The punchline is the trait function</p>\n\n<pre><code>fn call_now&lt;T: Iterator&lt;Item=i32&gt;&gt;(&amp;mut self, data: T) -&gt; ();\n</code></pre>\n\n<p>, and the full adapted code example goes like this:</p>\n\n<pre><code>use std::iter::*;\n\ntrait Callback {\n    fn call_now&lt;T: Iterator&lt;Item=i32&gt;&gt;(&amp;mut self, data: T) -&gt; ();\n}\n\nstruct Processor&lt;CB&gt;\n{\n    callback: CB\n}\n\nimpl&lt;CB: Callback&gt; Processor&lt;CB&gt; where\n{\n    fn process(&amp;mut self) {\n        let a = [23, 42].iter().map(|i| i + 1);\n        self.callback.call_now(a);\n    }\n}\n\nstruct C();\nimpl Callback for C {\n    fn call_now&lt;T: Iterator&lt;Item=i32&gt;&gt;(&amp;mut self, data: T) {\n        println!(\"Data:\");\n        for i in data {\n            println!(\"Item: {}\", i);\n        }\n    }\n}\n\nfn main() {\n    let mut p = Processor {\n        callback: C(),\n    };\n    p.process()\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?gist=9b35fda51e39d4a792589372b129bdc7&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">try on playground</a>)</p>\n\n<p>Higher-kind types (<a href=\"https://stackoverflow.com/questions/41508680/generic-struct-over-a-generic-type-without-type-parameter\">as explained well in another question</a>), which have been suggested as a solution, helped understand the problem, but seem not to be directly applicable. (They might help wrapping lambdas, but I'm not sure of that.)</p>\n"}], "owner": {"reputation": 648, "user_id": 9968825, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d6d0332ac7d53381e1a5b84b320fd135?s=128&d=identicon&r=PG", "display_name": "chrysn", "link": "https://stackoverflow.com/users/9968825/chrysn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 365, "favorite_count": 0, "accepted_answer_id": 52602825, "answer_count": 1, "score": 2, "last_activity_date": 1538460376, "creation_date": 1538304823, "last_edit_date": 1538416833, "question_id": 52577220, "link": "https://stackoverflow.com/questions/52577220/receiving-callbacks-with-impl-trait-and-passing-them-existential-values", "title": "Receiving callbacks with `impl Trait` and passing them existential values", "body": "<p>When defining an API for handler callbacks (e.g. processing shell commands or network requests), I'd like to hide implementation details from the callback signature -- for example, I'd like to accept callbacks of the form</p>\n\n<pre><code>fn c(data: impl Iterator&lt;Item = i32&gt;) -&gt; ()\n</code></pre>\n\n<p>While I can easily express the callbacks themselves using the <code>impl Trait</code> argument syntax or as <code>fn c&lt;I: Iterator&lt;...&gt;&gt;(data: I) -&gt; ()</code>, I can't accept them that generically because my processor is not universal on <code>I</code>, but existential.</p>\n\n<p>I could make the processing parts generic on <code>I</code> and then say that <code>I: Iterator&lt;Item = i32&gt;</code>:</p>\n\n<pre><code>/// A non-working callback that receives an iterator.\nuse std::iter::*;\nuse std::marker::PhantomData;\n\nstruct Processor&lt;CB, I&gt; {\n    callback: CB,\n    _i: PhantomData&lt;I&gt;,\n}\n\n// Here it'd be nice to say that it won't implement it for all I, but there exists an (unnamable) I\n// for which it's implemented.\nimpl&lt;CB, I&gt; Processor&lt;CB, I&gt;\nwhere\n    CB: FnMut(I) -&gt; (),\n    I: Iterator&lt;Item = i32&gt;,\n{\n    fn process(self) {\n        let a = [23, 42].iter().map(|i| i + 1);\n        let mut cb = self.callback;\n        cb(a)\n    }\n}\n\nfn c(data: impl Iterator&lt;Item = i32&gt;) {\n    println!(\"Data:\");\n    for i in data {\n        println!(\"Item: {}\", i);\n    }\n}\n\nfn main() {\n    let p = Processor {\n        callback: c,\n        _i: PhantomData,\n    };\n    p.process()\n}\n</code></pre>\n\n<p><a href=\"https://play.integer32.com/?gist=4b3fa08c29a86295c88ad6f68d5e342e&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>This is not true as the implementation is not generic on <code>I</code> and the compiler expresses its dissatisfaction with the lie:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:20:12\n   |\n20 |         cb(a)\n   |            ^ expected type parameter, found struct `std::iter::Map`\n   |\n   = note: expected type `I`\n              found type `std::iter::Map&lt;std::slice::Iter&lt;'_, {integer}&gt;, [closure@src/main.rs:18:37: 18:46]&gt;`\n</code></pre>\n\n<p>I also tried to name the unnameable as far as possible, but that generates really unwieldy type names (workable in the example, but resulting in multi-line type names in practical code):</p>\n\n<pre><code>/// A non-working callback that receives an iterator.\nuse std::iter::*;\n\nstruct Processor&lt;CB&gt; {\n    callback: CB,\n}\n\nimpl&lt;CB&gt; Processor&lt;CB&gt;\nwhere\n    CB: FnMut(Map&lt;std::slice::Iter&lt;'static, i32&gt;, FnOnce(i32) -&gt; i32&gt;) -&gt; (),\n{\n    fn process(self) {\n        let a = [23, 42].iter().map(|i| i + 1);\n        let mut cb = self.callback;\n        cb(a)\n    }\n}\n\nfn c(data: impl Iterator&lt;Item = i32&gt;) {\n    println!(\"Data:\");\n    for i in data {\n        println!(\"Item: {}\", i);\n    }\n}\n\nfn main() {\n    let p = Processor { callback: c };\n    p.process()\n}\n</code></pre>\n\n<p><a href=\"https://play.integer32.com/?gist=98fc2a882a89553e6fb1f5d2c1020bf1&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>This still fails once there is a lambda type involved:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the size for values of type `(dyn std::ops::FnOnce(i32) -&gt; i32 + 'static)` cannot be known at compilation time\n  --&gt; src/main.rs:8:1\n   |\n8  | / impl&lt;CB&gt; Processor&lt;CB&gt;\n9  | | where\n10 | |     CB: FnMut(Map&lt;std::slice::Iter&lt;'static, i32&gt;, FnOnce(i32) -&gt; i32&gt;) -&gt; (),\n11 | | {\n...  |\n16 | |     }\n17 | | }\n   | |_^ doesn't have a size known at compile-time\n   |\n   = help: the trait `std::marker::Sized` is not implemented for `(dyn std::ops::FnOnce(i32) -&gt; i32 + 'static)`\n   = note: to learn more, visit &lt;https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types-and-sized&gt;\n   = note: required by `std::iter::Map`\n\nerror[E0277]: the size for values of type `(dyn std::ops::FnOnce(i32) -&gt; i32 + 'static)` cannot be known at compilation time\n  --&gt; src/main.rs:12:5\n   |\n12 | /     fn process(self) {\n13 | |         let a = [23, 42].iter().map(|i| i + 1);\n14 | |         let mut cb = self.callback;\n15 | |         cb(a)\n16 | |     }\n   | |_____^ doesn't have a size known at compile-time\n   |\n   = help: the trait `std::marker::Sized` is not implemented for `(dyn std::ops::FnOnce(i32) -&gt; i32 + 'static)`\n   = note: to learn more, visit &lt;https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types-and-sized&gt;\n   = note: required by `std::iter::Map`\n</code></pre>\n\n<p>What's the idiomatic way around this? Is it possible with a different syntax that says \"For all <code>CB</code> this implements <code>Processor</code>, where the <code>CB</code> type needs to be generic on its argument and I get to choose its type\"? Something like</p>\n\n<pre><code>impl&lt;CB&gt; Processor&lt;CB&gt;\nwhere\n    CB: FnMut(impl Iterator&lt;Item = i32&gt;) -&gt; (),\n</code></pre>\n\n<p>Given that I am aiming for an embedded environment, I'm looking for solutions that do not involve std, so approaches like <code>Box&lt;...&gt;</code> won't solve the issue.</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 3, "last_activity_date": 1538303664, "creation_date": 1538303664, "answer_id": 52577078, "question_id": 52576953, "link": "https://stackoverflow.com/questions/52576953/cannot-print-a-processcommand-because-borrowed-value-does-not-live-long-enoug/52577078#52577078", "title": "Cannot print a process::Command because &quot;borrowed value does not live long enough&quot;", "body": "<p><code>Command::arg</code> takes <code>self</code> by mutable reference, so you need to store the <code>Command</code> returned by <code>Command::new</code> in a variable before calling <code>arg</code>, otherwise the <code>Command</code> would be dropped at the end of the statement. (The compiler could in theory use a hidden variable here as it does in other circumstances, but it doesn't do it as of Rust 1.29.)</p>\n\n<pre><code>fn main() {\n    use std::process::Command;\n\n    let mut x = Command::new(\"sh\");\n    x.arg(\"2\");\n\n    let y = x.output();\n\n    println!(\"status: {:#?}\", x);\n    println!(\"status: {:#?}\", y);\n}\n</code></pre>\n"}], "owner": {"reputation": 2609, "user_id": 2859813, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/310f81cfdbb98071fcd873caca0e0ed5?s=128&d=identicon&r=PG", "display_name": "Razze", "link": "https://stackoverflow.com/users/2859813/razze"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 87, "favorite_count": 0, "closed_date": 1538314951, "accepted_answer_id": 52577078, "answer_count": 1, "score": 1, "last_activity_date": 1538396382, "creation_date": 1538302618, "last_edit_date": 1538396382, "question_id": 52576953, "link": "https://stackoverflow.com/questions/52576953/cannot-print-a-processcommand-because-borrowed-value-does-not-live-long-enoug", "closed_reason": "Duplicate", "title": "Cannot print a process::Command because &quot;borrowed value does not live long enough&quot;", "body": "<p>I want a way to print the command with its arguments. In my real case, those arguments are generated and I want to see the command that we're going to run.</p>\n\n<p>I'm trying to do this:</p>\n\n<pre><code>fn main() {\n    use std::process::Command;\n\n    let x = Command::new(\"sh\").arg(\"2\");\n\n    let y = x.output();\n\n    println!(\"status: {:#?}\", x);\n    println!(\"status: {:#?}\", y);\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: borrowed value does not live long enough\n  --&gt; src/main.rs:4:13\n   |\n4  |     let x = Command::new(\"sh\").arg(\"2\");\n   |             ^^^^^^^^^^^^^^^^^^         - temporary value dropped here while still borrowed\n   |             |\n   |             temporary value does not live long enough\n...\n10 | }\n   | - temporary value needs to live until here\n   |\n   = note: consider using a `let` binding to increase its lifetime\n</code></pre>\n\n<p>I can get it to work if I don't add the <code>.arg(\"2\")</code> above, but that doesn't help me with my usecase.</p>\n\n<p>All the other examples on stackoverflow doesn't seem to help me solving this.</p>\n"}, {"tags": ["windows", "rust", "build-tools"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1538314086, "post_id": 52574189, "comment_id": 92091719, "body": "It is preferred to post separate questions instead of combining your questions into one. That way, it helps the people answering your question as well as others hunting for one of your questions."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1538314197, "post_id": 52574189, "comment_id": 92091751, "body": "This sounds like you should file an issue with rustup to improve their documentation, or <a href=\"https://github.com/rust-lang-nursery/rustup.rs/issues/1363\" rel=\"nofollow noreferrer\">add on to this existing one</a>"}, {"owner": {"reputation": 2750, "user_id": 661598, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/BVAlk.png?s=128&g=1", "display_name": "wst", "link": "https://stackoverflow.com/users/661598/wst"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1538403508, "post_id": 52574189, "comment_id": 92120992, "body": "@Shepmaster I have to admit I couldn&#39;t find that link. I really tried, maybe my query wasn&#39;t specific enough. Well, I still think question here make sense and all 3 problems listed are closely related. But also I do understand that it&#39;s important to keep the questions in bay with the rules and clarity. I&#39;ll leave decision to moderators. If you decide to close the question - go ahead."}], "owner": {"reputation": 2750, "user_id": 661598, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/BVAlk.png?s=128&g=1", "display_name": "wst", "link": "https://stackoverflow.com/users/661598/wst"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 745, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1538314080, "creation_date": 1538275459, "last_edit_date": 1538314080, "question_id": 52574189, "link": "https://stackoverflow.com/questions/52574189/how-to-setup-msvc-build-tools-for-rust", "title": "How to setup MSVC build tools for Rust?", "body": "<p>I installed <code>rustup</code> in January 2017 without any problems. Recently I tried to do the same and have a huge problem. The <a href=\"https://www.rust-lang.org/en-US/install.html\" rel=\"nofollow noreferrer\">documentation</a> states that I need to go and install the <a href=\"https://www.visualstudio.com/downloads/#build-tools-for-visual-studio-2017\" rel=\"nofollow noreferrer\">Build Tools for Visual Studio 2017</a>. This is kind of vague, especially because I've never used any Microsoft product for development.</p>\n\n<p>When I do start the installation, a tons of options appear and total download size goes in gigabytes. After I've installed what I guess would be the right choice it's not visible on path anyway (<code>cargo build</code> gives missing linker error, after I fixed that some missing libs show up.) I am using Powershell but on old CMD it behaves the same. Later on I found out there is a link to CMD in Menu Start that will open a CMD shell with correct path, but I'd rather use my ConEmu for that. I do know I could set up PATH manually etc. but this is not right way to do it (or it shouldn't be.) I don't want to be burdened with remembering to fix it later on after installation point changes, etc.</p>\n\n<p>So the question, finally, is.</p>\n\n<ol>\n<li>What is the set of minimum necessary components to check in Build Tools VS 2017 installer to be able to develop in Rust.</li>\n<li>How to set up PATH - automatically, if possible, in order to avoid later manual maintenance.</li>\n<li>How to set up above tools globally so I can develop and run my apps using IntelliJ or VSCode.</li>\n</ol>\n"}, {"tags": ["regex", "text", "rust"], "comments": [{"owner": {"reputation": 481647, "user_id": 3832970, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/64323e6cf08401474da3bf770ea13b58?s=128&d=identicon&r=PG&f=1", "display_name": "Wiktor Stribi\u017cew", "link": "https://stackoverflow.com/users/3832970/wiktor-stribi%c5%bcew"}, "edited": false, "score": 2, "creation_date": 1538258349, "post_id": 52572866, "comment_id": 92082191, "body": "See <a href=\"https://regex101.com/r/jm0DGc/1\" rel=\"nofollow noreferrer\">regex101.com/r/jm0DGc/1</a>"}, {"owner": {"reputation": 183, "user_id": 6629864, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ATrOC.png?s=128&g=1", "display_name": "Moreorem", "link": "https://stackoverflow.com/users/6629864/moreorem"}, "reply_to_user": {"reputation": 481647, "user_id": 3832970, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/64323e6cf08401474da3bf770ea13b58?s=128&d=identicon&r=PG&f=1", "display_name": "Wiktor Stribi\u017cew", "link": "https://stackoverflow.com/users/3832970/wiktor-stribi%c5%bcew"}, "edited": false, "score": 0, "creation_date": 1538258613, "post_id": 52572866, "comment_id": 92082231, "body": "Thank you very much, this helped a lot!"}], "owner": {"reputation": 183, "user_id": 6629864, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ATrOC.png?s=128&g=1", "display_name": "Moreorem", "link": "https://stackoverflow.com/users/6629864/moreorem"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 15, "favorite_count": 0, "closed_date": 1538258338, "answer_count": 0, "score": 0, "last_activity_date": 1538258162, "creation_date": 1538258162, "question_id": 52572866, "link": "https://stackoverflow.com/questions/52572866/regular-expression-for-an-optional-column", "closed_reason": "Duplicate", "title": "Regular expression for an optional column", "body": "<p>In <code>Rust</code>, with the <code>regex 1.0.2</code> library, I am using the following regular expression to read lines from a text file and store them into some datastores. The problem is that in some cases one of the column can have a missing value because is optional. However when that happens, the regex mechanism ommits the whole line. How can I inform it that the specific column is optional so that the result will recognize other parts of the line and fill the empty column with an empty string?</p>\n\n<p>Example:</p>\n\n<pre><code>5   \"Stanford Encyclopedia of Philosophy\"   \"Product\"\n6   \"Spatial History Project\"   \n7   \"Humanities Research Network\"   \"Group\"`\n</code></pre>\n\n<p>Expression: <code>(?P&lt;n_id&gt;\\\\d+)\\\\s+\"(?P&lt;n_label&gt;[^\"]*)\"\\\\s+\"(?P&lt;n_type&gt;[^\"]*)\"</code></p>\n\n<p>Current Result : </p>\n\n<pre><code>Captures({0: Some(\"5\\t\\\"Stanford Encyclopedia of Philosophy\\\"\\t\\\"Product\\\"\"), \"n_id\": Some(\"5\"), \"n_label\": Some(\"Stanford Encyclopedia of Philosophy\"), \"n_type\": Some(\"Product\")})\nCaptures({0: Some(\"7\\t\\\"Humanities Research Network\\\"\\t\\\"Group\\\"\"), \"n_id\": Some(\"7\"), \"n_label\": Some(\"Humanities Research Network\"), \"n_type\": Some(\"Group\")})\n</code></pre>\n\n<p>Desirable Result:</p>\n\n<pre><code>Captures({0: Some(\"5\\t\\\"Stanford Encyclopedia of Philosophy\\\"\\t\\\"Product\\\"\"), \"n_id\": Some(\"5\"), \"n_label\": Some(\"Stanford Encyclopedia of Philosophy\"), \"n_type\": Some(\"Product\")})\nCaptures({0: Some(\"6\\t\\\"Spatial History Project\\\"\\t\\\"Group\\\"\"), \"n_id\": Some(\"6\"), \"n_label\": Some(\"Spatial History Project\"), \"n_type\": Some(\"\")})\nCaptures({0: Some(\"7\\t\\\"Humanities Research Network\\\"\\t\\\"Group\\\"\"), \"n_id\": Some(\"7\"), \"n_label\": Some(\"Humanities Research Network\"), \"n_type\": Some(\"Group\")})\n</code></pre>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1538264416, "post_id": 52572460, "comment_id": 92083076, "body": "Why do you want to do any of what you ask? Why do you believe what you are asking is memory-safe? Why is <i>I want the <code>self</code> reference to last precisely <code>&#39;b</code></i> a valid thing to do?"}, {"owner": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1538297870, "post_id": 52572460, "comment_id": 92088021, "body": "@Shepmaster The use case is that I start from a root <code>Fmt</code> and descend recursively (along a <code>Vec&lt;String&gt;</code>) into <code>Fmt</code>s produced by a <code>get_subfmt</code> call, and when the vector is empty, call a method not shown here for brevity. So each preceding <code>Fmt</code> (and its <code>BoxOrRef</code>) has naturally greater lifetime enforced by the recursive function&#39;s scope than the following one. This seems safe, but I&#39;m very new to the lifetimes business, so I may have erred in my reasoning somewhere."}], "answers": [{"comments": [{"owner": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 0, "creation_date": 1538297400, "post_id": 52573877, "comment_id": 92087890, "body": "So moving the lifetime to the trait is the way to go. Oh well. Thank you."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 1, "last_activity_date": 1538271552, "creation_date": 1538271552, "answer_id": 52573877, "question_id": 52572460, "link": "https://stackoverflow.com/questions/52572460/how-to-specify-that-a-lifetime-from-an-impl-should-be-the-same-as-the-lifetime-o/52573877#52573877", "title": "How to specify that a lifetime from an impl should be the same as the lifetime of &#39;self&#39;?", "body": "<p>This is the best I could come up with:</p>\n\n<pre><code>use std::borrow::Borrow;\n\npub trait Fmt&lt;'b&gt; {\n    fn get_subfmt&lt;'a&gt;(&amp;'a self, name: &amp;str) -&gt; Option&lt;BoxOrRef&lt;'a, dyn Fmt + 'a&gt;&gt;\n    where\n        'b: 'a;\n}\n\npub enum BoxOrRef&lt;'a, T: ?Sized + 'a&gt; {\n    Boxed(Box&lt;T&gt;),\n    Ref(&amp;'a T)\n}\n\nimpl&lt;'b, T: Borrow&lt;dyn Fmt&lt;'b&gt; + 'b&gt;&gt; Fmt&lt;'b&gt; for T {\n    fn get_subfmt&lt;'a&gt;(&amp;'a self, name: &amp;str) -&gt; Option&lt;BoxOrRef&lt;'a, dyn Fmt + 'a&gt;&gt;\n    where\n        'b: 'a,\n    {\n        self.borrow().get_subfmt(name)\n    }\n}\n</code></pre>\n\n<p>We want the bound <code>'b: 'a</code> (<code>'b</code> outlives <code>'a</code>), not <code>'a: 'b</code>, because a borrowed reference cannot outlive its referent.</p>\n"}], "owner": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 102, "favorite_count": 0, "accepted_answer_id": 52573877, "answer_count": 1, "score": 1, "last_activity_date": 1538315481, "creation_date": 1538254411, "last_edit_date": 1538315481, "question_id": 52572460, "link": "https://stackoverflow.com/questions/52572460/how-to-specify-that-a-lifetime-from-an-impl-should-be-the-same-as-the-lifetime-o", "title": "How to specify that a lifetime from an impl should be the same as the lifetime of &#39;self&#39;?", "body": "<p>I'm starting from a root <code>Fmt</code> and descending recursively (along a <code>Vec&lt;String&gt;</code>) into <code>Fmt</code>s produced by a <code>get_subfmt</code> call. When the vector is empty, I call a method (not shown here for brevity). Each preceding <code>Fmt</code> (and its <code>BoxOrRef</code>) has naturally greater lifetime enforced by the recursive function's scope than the following one. This seems safe, but I'm very new to the lifetimes business, so I may have erred in my reasoning somewhere.</p>\n\n<p>Consider the following bit of simplified code:</p>\n\n<pre><code>use std::borrow::Borrow;\n\npub trait Fmt {\n    fn get_subfmt&lt;'a&gt;(&amp;'a self, name: &amp;str) -&gt; Option&lt;BoxOrRef&lt;'a, dyn Fmt&gt;&gt;;\n}\n\npub enum BoxOrRef&lt;'a, T: ?Sized + 'a&gt; {\n    Boxed(Box&lt;T&gt;),\n    Ref(&amp;'a T)\n}\n\nimpl&lt;'b, T: Borrow&lt;dyn Fmt + 'b&gt;&gt; Fmt for T {\n    fn get_subfmt(&amp;'b self, name: &amp;str) -&gt; Option&lt;BoxOrRef&lt;'b, dyn Fmt&gt;&gt; {\n        self.borrow().get_subfmt(name)\n    }\n}\n</code></pre>\n\n<p>This fails with the following errors:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: method not compatible with trait\n  --&gt; src/lib.rs:13:5\n   |\n13 |     fn get_subfmt(&amp;'b self, name: &amp;str) -&gt; Option&lt;BoxOrRef&lt;'b, dyn Fmt&gt;&gt; {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ lifetime mismatch\n   |\n   = note: expected type `fn(&amp;'a T, &amp;str) -&gt; std::option::Option&lt;BoxOrRef&lt;'a, Fmt + 'a&gt;&gt;`\n              found type `fn(&amp;'b T, &amp;str) -&gt; std::option::Option&lt;BoxOrRef&lt;'b, Fmt + 'b&gt;&gt;`\nnote: the lifetime 'a as defined on the method body at 13:5...\n  --&gt; src/lib.rs:13:5\n   |\n13 |     fn get_subfmt(&amp;'b self, name: &amp;str) -&gt; Option&lt;BoxOrRef&lt;'b, dyn Fmt&gt;&gt; {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: ...does not necessarily outlive the lifetime 'b as defined on the impl at 12:1\n  --&gt; src/lib.rs:12:1\n   |\n12 | impl&lt;'b, T: Borrow&lt;dyn Fmt + 'b&gt;&gt; Fmt for T {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0308]: method not compatible with trait\n  --&gt; src/lib.rs:13:5\n   |\n13 |     fn get_subfmt(&amp;'b self, name: &amp;str) -&gt; Option&lt;BoxOrRef&lt;'b, dyn Fmt&gt;&gt; {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ lifetime mismatch\n   |\n   = note: expected type `fn(&amp;'a T, &amp;str) -&gt; std::option::Option&lt;BoxOrRef&lt;'a, Fmt + 'a&gt;&gt;`\n              found type `fn(&amp;'b T, &amp;str) -&gt; std::option::Option&lt;BoxOrRef&lt;'b, Fmt + 'b&gt;&gt;`\nnote: the lifetime 'b as defined on the impl at 12:1...\n  --&gt; src/lib.rs:12:1\n   |\n12 | impl&lt;'b, T: Borrow&lt;dyn Fmt + 'b&gt;&gt; Fmt for T {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: ...does not necessarily outlive the lifetime 'a as defined on the method body at 13:5\n  --&gt; src/lib.rs:13:5\n   |\n13 |     fn get_subfmt(&amp;'b self, name: &amp;str) -&gt; Option&lt;BoxOrRef&lt;'b, dyn Fmt&gt;&gt; {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>It seems that the compiler can't prove that the <code>'a</code> from the definition of <code>get_subfmt</code> is the same as <code>'b</code> from the <code>impl</code>, most likely because I haven't told it that it is. How do I communicate to the compiler that I want the <code>self</code> reference to last precisely <code>'b</code>? I can't slap a <code>&lt;'a: 'b&gt;</code> on the <code>get_subfmt</code> in the <code>impl</code>, as that doesn't match the method signature. I've tried constraining <code>T</code> to be <code>T: Borrow&lt;dyn Fmt + 'b&gt; + 'b</code>, but that doesn't help, the errors remain.</p>\n\n<p>I could move <code>'a</code> from the method to the <code>Fmt</code> itself, but it doesn't really seem right, so I would like to avoid it if there's a way to.</p>\n"}, {"tags": ["rust", "epoll"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1538254962, "post_id": 52572327, "comment_id": 92081471, "body": "Please, to help us help you, try to create a <a href=\"https://stackoverflow.com/help/mcve\">MCVE</a>."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1538256579, "post_id": 52572327, "comment_id": 92081828, "body": "You already ask for a non blocking socket when you create your socket but you still ask again non block mode..."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1538257269, "post_id": 52572327, "comment_id": 92081974, "body": "file descriptor of epoll instance is in blocking mode, so it&#39;s blocking as you didn&#39;t put timeout. Plus, I don&#39;t understand why you mix level-triggered and edge-triggered mode. Generally, you choice one and all socket in the poll use the same mode."}], "owner": {"reputation": 33, "user_id": 9436394, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Mavr Huston", "link": "https://stackoverflow.com/users/9436394/mavr-huston"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 131, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1538264099, "creation_date": 1538253190, "last_edit_date": 1538264099, "question_id": 52572327, "link": "https://stackoverflow.com/questions/52572327/why-does-an-edge-triggered-epoll-loop-freeze-at-the-end-of-a-http-load-test", "title": "Why does an edge-triggered epoll loop freeze at the end of a HTTP load test?", "body": "<p>I'm writing a HTTP server and I want to have one thread per CPU and each thread controls a separate epoll instance. I've implemented a test version of edge-triggered epoll using the nix crate, but I don't understand whats wrong with it.</p>\n\n<p>When I'm testing this with <a href=\"https://linux.die.net/man/1/ab\" rel=\"nofollow noreferrer\">ab</a> (<code>ab -n 200000 -c 1000</code>) it works fast,\nbut at the end of testing epoll freezes. I don't know whats wrong, maybe I've broken the epoll state or I need to use the inner states of the client?</p>\n\n<pre><code>extern crate nix;\n\nuse nix::errno::Errno;\nuse nix::fcntl::*;\nuse nix::sys::epoll::EpollCreateFlags;\nuse nix::sys::epoll::*;\nuse nix::sys::socket::sockopt::ReuseAddr;\nuse nix::sys::socket::*;\nuse nix::unistd::close;\nuse nix::unistd::{read, write};\nuse nix::Error;\nuse std::collections::HashMap;\nuse std::os::unix::io::RawFd;\nuse std::thread;\n\nconst BUFSIZE: usize = 16384;\n\n#[derive(Hash, Eq, PartialEq, Debug, Clone, Copy)]\npub enum State {\n    Read,\n    Write,\n}\n\n#[derive(Clone, Debug)]\npub struct Client {\n    pub readed: Vec&lt;u8&gt;,\n    pub state: State,\n}\n\nimpl Client {\n    fn new() -&gt; Self {\n        Client {\n            readed: Vec::new(),\n            state: State::Read,\n        }\n    }\n}\n\nfn socket_to_nonblock(sock: RawFd) -&gt; Result&lt;(), nix::Error&gt; {\n    let flags = match fcntl(sock, F_GETFL) {\n        Ok(fl) =&gt; fl,\n        Err(err) =&gt; return Err(err),\n    };\n    let new_flags = flags | OFlag::O_NONBLOCK.bits();\n    let new_flags = OFlag::from_bits(new_flags).unwrap();\n\n    match fcntl(sock, F_SETFL(new_flags)) {\n        Ok(_) =&gt; return Ok(()),\n        Err(err) =&gt; return Err(err),\n    }\n}\n\nfn epoll_loop(server_sock: RawFd) -&gt; nix::Result&lt;()&gt; {\n    let mut clients: HashMap&lt;RawFd, Client&gt; = HashMap::new(); //SockFlag::EPOLLET\n\n    let epfd = epoll_create1(EpollCreateFlags::from_bits(0).unwrap())?;\n    let mut ev = EpollEvent::new(\n        EpollFlags::EPOLLIN | EpollFlags::EPOLLOUT,\n        server_sock as u64,\n    );\n    epoll_ctl(epfd, EpollOp::EpollCtlAdd, server_sock, &amp;mut ev)?;\n\n    let mut epoll_events = vec![EpollEvent::empty(); 1024];\n    let buffer = [0; BUFSIZE];\n    let critical_error = false;\n    let mut accepted = 0;\n    let mut closed = 0;\n\n    let mut refused = 0;\n    loop {\n        let nfds = match epoll_wait(epfd, &amp;mut epoll_events, -1) {\n            Ok(n) =&gt; n,\n            Err(e) =&gt; {\n                println!(\"Err wait {:?}\", e);\n                panic!();\n            }\n        };\n\n        for i in 0..nfds {\n            let cur_socket = epoll_events[i].data() as i32;\n            let cur_event = epoll_events[i].events();\n\n            if cur_event == cur_event &amp; EpollFlags::EPOLLERR\n                || cur_event == cur_event &amp; EpollFlags::EPOLLHUP\n                || cur_event != cur_event &amp; (EpollFlags::EPOLLIN | EpollFlags::EPOLLOUT)\n            {\n                println!(\"error big if {:?}\", cur_event);\n                close(epoll_events[i].data() as i32);\n                continue;\n            }\n\n            if server_sock == cur_socket {\n                loop {\n                    let client_fd = match accept(server_sock) {\n                        Ok(client) =&gt; {\n                            accepted += 1;\n                            if (client &lt; 0) {\n                                println!(\"JOPA\");\n                                panic!();\n                            }\n                            println!(\n                                \"Accepted {:?} Closed {:?} Dif: {:?} Refused {:?} Events len: {:?}\",\n                                accepted,\n                                closed,\n                                accepted - closed,\n                                refused,\n                                nfds\n                            );\n                            client\n                        }\n                        Err(err) =&gt; {\n                            refused += 1;\n                            println!(\"Error accept {:?}\", err);\n                            break;\n                        }\n                    };\n\n                    match socket_to_nonblock(client_fd) {\n                        Ok(_) =&gt; {}\n                        Err(err) =&gt; println!(\"Non block err {:?}\", err),\n                    }\n\n                    let mut ev = EpollEvent::new(\n                        EpollFlags::EPOLLIN | EpollFlags::EPOLLET,\n                        client_fd as u64,\n                    );\n                    match epoll_ctl(epfd, EpollOp::EpollCtlAdd, client_fd, &amp;mut ev) {\n                        Ok(e) =&gt; {}\n                        Err(err) =&gt; println!(\"Server accept ctl {:?}\", err),\n                    }\n                    println!(\"{:?}\", clients.insert(client_fd, Client::new()));\n                    break;\n                }\n                println!(\"loop breaked\");\n                continue;\n            }\n\n            if cur_event == cur_event &amp; EpollFlags::EPOLLIN {\n                let mut buf: [u8; 2048] = [0; 2048];\n                let client = clients.get_mut(&amp;cur_socket).unwrap();\n                loop {\n                    let mut total_len = client.readed.len();\n                    let size = match read(cur_socket, &amp;mut buf[total_len..]) {\n                        Ok(size) =&gt; {\n                            client.readed.extend_from_slice(&amp;buf[..size]);\n                            if (size == 0) {\n                                break;\n                            }\n                        }\n                        Err(e) =&gt; break,\n                    };\n                }\n\n                let req = std::str::from_utf8(&amp;client.readed.as_slice())\n                    .unwrap()\n                    .to_string();\n\n                if !(req.find(\"\\n\\n\").is_some() || req.find(\"\\r\\n\\r\\n\").is_some()) {\n                    continue;\n                }\n\n                let mut ev = EpollEvent::new(\n                    EpollFlags::EPOLLOUT | EpollFlags::EPOLLET,\n                    cur_socket as u64,\n                );\n                match epoll_ctl(epfd, EpollOp::EpollCtlMod, cur_socket, &amp;mut ev) {\n                    Ok(e) =&gt; {}\n                    Err(err) =&gt; println!(\"Read ctl Err {:?}\", err),\n                }\n\n                client.state = State::Write;\n            }\n\n            if cur_event == cur_event &amp; EpollFlags::EPOLLOUT {\n                let buf = \"HTTP/1.1 200 Ok\\nConnection: close\\nContent-Type: text/plain\\n\\nha?\\n\\n\";\n                let buf_len = buf.len();\n                let mut sended = 0;\n                let mut need_to_close = false;\n                loop {\n                    match write(cur_socket, &amp;buf.as_bytes()[sended..]) {\n                        Ok(len) =&gt; {\n                            sended += len;\n                            if sended &gt;= buf_len {\n                                need_to_close = true;\n                                break;\n                            }\n                        }\n                        Err(e) =&gt; {\n                            need_to_close = true;\n                            break;\n                        }\n                    }\n                }\n\n                if (need_to_close) {\n                    match epoll_ctl(\n                        epfd,\n                        EpollOp::EpollCtlDel,\n                        cur_socket as i32,\n                        &amp;mut epoll_events[i],\n                    ) {\n                        Ok(e) =&gt; {}\n                        Err(err) =&gt; println!(\"Err epollctl write {:?}\", err),\n                    }\n                    clients.remove(&amp;cur_socket);\n                    match shutdown(cur_socket as i32, Shutdown::Both) {\n                        Ok(e) =&gt; {}\n                        Err(err) =&gt; println!(\"Err shutdown {:?}\", err),\n                    }\n                    close(cur_socket as i32)?;\n                    closed += 1;\n                    println!(\"closed: {:?}\", closed);\n                }\n            }\n            continue;\n        }\n    }\n}\n\nfn main() {\n    let server_sock = match socket(\n        AddressFamily::Inet,\n        SockType::Stream,\n        SockFlag::SOCK_NONBLOCK,\n        SockProtocol::Tcp,\n    ) {\n        Ok(sock) =&gt; sock,\n        Err(err) =&gt; panic!(\"{:?}\", err),\n    };\n\n    match setsockopt(server_sock, ReuseAddr, &amp;true) {\n        Ok(_) =&gt; {}\n        Err(err) =&gt; panic!(\"Error set sock opt {:?}\", err),\n    }\n    let addr = SockAddr::new_inet(InetAddr::new(IpAddr::new_v4(127, 0, 0, 1), 5468));\n\n    match bind(server_sock, &amp;addr) {\n        Ok(_) =&gt; {}\n        Err(err) =&gt; panic!(\"Error bind: {:?}\", err),\n    }\n\n    socket_to_nonblock(server_sock);\n    match listen(server_sock, 1024) {\n        Ok(_) =&gt; {}\n        Err(err) =&gt; panic!(\"Error listen: {:?}\", err),\n    }\n\n    epoll_loop(server_sock.clone());\n}\n</code></pre>\n"}, {"tags": ["rust", "closures"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1538226847, "creation_date": 1538226847, "answer_id": 52568706, "question_id": 52568668, "link": "https://stackoverflow.com/questions/52568668/is-it-possible-to-return-a-rust-closure-that-returns-a-closure-without-using-a-b/52568706#52568706", "title": "Is it possible to return a Rust closure that returns a closure without using a Box?", "body": "<p>No. As you are already aware, <code>impl Trait</code> is the mechanism to return an instance of a trait without boxing. </p>\n\n<p>If you try to extend this:</p>\n\n<pre><code>fn add2() -&gt; impl Fn(i32) -&gt; impl Fn(i32) -&gt; i32 {\n    |x| |y| x + y\n}\n</code></pre>\n\n<p>The compiler tells you:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n --&gt; src/lib.rs:9:30\n  |\n9 | fn add2() -&gt; impl Fn(i32) -&gt; impl Fn(i32) -&gt; i32 {\n  |                              ^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>From the <code>impl Trait</code> RFC, emphasis mine:</p>\n\n<blockquote>\n  <p><code>impl Trait</code> may only be written within the return type of a\n  freestanding or inherent-impl function, not in trait definitions or\n  any non-return type position. They may also not appear in the return\n  type of closure traits or function pointers, unless these are\n  themselves part of a legal return type.</p>\n  \n  <ul>\n  <li><strong>Eventually, we will want to allow the feature to be used within traits</strong></li>\n  </ul>\n</blockquote>\n\n<p>The return type of a closure is an <em>associated type</em> of the closure trait:</p>\n\n<pre><code>pub trait FnOnce&lt;Args&gt; {\n    type Output;\n    extern \"rust-call\" fn call_once(self, args: Args) -&gt; Self::Output;\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/27535289/155423\">What is the correct way to return an Iterator (or any other trait)?</a></li>\n<li><a href=\"https://stackoverflow.com/q/30661046/155423\">How do I return an instance of a trait from a method?</a></li>\n</ul>\n"}], "owner": {"reputation": 2027, "user_id": 722720, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/7c5d12bf3c52daa8c9169da94ec021b8?s=128&d=identicon&r=PG", "display_name": "EFanZh", "link": "https://stackoverflow.com/users/722720/efanzh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 417, "favorite_count": 0, "accepted_answer_id": 52568706, "answer_count": 1, "score": 1, "last_activity_date": 1538229670, "creation_date": 1538226455, "last_edit_date": 1538229670, "question_id": 52568668, "link": "https://stackoverflow.com/questions/52568668/is-it-possible-to-return-a-rust-closure-that-returns-a-closure-without-using-a-b", "title": "Is it possible to return a Rust closure that returns a closure without using a Box?", "body": "<p>It is easy to wrap the inner closure inside a <code>Box</code>:</p>\n\n<pre><code>fn add1() -&gt; impl Fn(i32) -&gt; Box&lt;Fn(i32) -&gt; i32&gt; {\n    |x| Box::new(|y| x + y)\n}\n</code></pre>\n\n<p>But is it necessary to use a <code>Box</code>? In the following code:</p>\n\n<pre><code>fn add2() -&gt; ?? {\n    |x: i32| move |y: i32| x + y\n}\n</code></pre>\n\n<p>Can I replace <code>??</code> with something to make the code type check?</p>\n"}, {"tags": ["rust", "serde"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1538225891, "post_id": 52567944, "comment_id": 92074181, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/52567944/edit\">edit</a> your question to include it. We cannot tell what crates and their versions are present in the code and there is <a href=\"https://crates.io/crates/config_rs\" rel=\"nofollow noreferrer\">no crate called config_rs</a>. Try to produce something that reproduces your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> or you can reproduce it in a brand new Cargo project. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> as well."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1538226091, "post_id": 52567944, "comment_id": 92074235, "body": "See also <a href=\"https://stackoverflow.com/q/47785720/155423\">Deserialize TOML string to enum using config-rs</a>; <a href=\"https://stackoverflow.com/q/45059538/155423\">How to deserialize into a enum variant based on a key name?</a>; <a href=\"https://stackoverflow.com/q/48641541/155423\">Deserializing TOML into vector of enum with values</a>; <a href=\"https://stackoverflow.com/q/49604190/155423\">How do I configure Serde to use an enum variant&#39;s discriminant rather than name?</a>; etc. If it uses Serde, also check out the <a href=\"https://serde.rs/\" rel=\"nofollow noreferrer\">thorough Serde docs</a>."}], "answers": [{"tags": [], "owner": {"reputation": 2184, "user_id": 3536548, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/qEPjr.png?s=128&g=1", "display_name": "Thermatix", "link": "https://stackoverflow.com/users/3536548/thermatix"}, "is_accepted": true, "score": 0, "last_activity_date": 1538339082, "last_edit_date": 1538339082, "creation_date": 1538229345, "answer_id": 52569046, "question_id": 52567944, "link": "https://stackoverflow.com/questions/52567944/how-do-i-make-a-config-rs-field-that-can-deserialize-into-one-of-several-types/52569046#52569046", "title": "How do I make a config.rs field that can deserialize into one of several types?", "body": "<p>Changing the <code>InitialValues</code> <code>enum</code> to be:</p>\n\n<pre><code>#[derive(Debug, Deserialize)]\n#[serde(\n    rename_all = \"lowercase\",\n    untagged\n)]\npub enum InitialValue {\n    Char(char),\n    String(String),\n    Int(i32),\n    Float(f32),\n    Bool(bool),\n    Range(Range&lt;i32&gt;)\n}\n</code></pre>\n\n<p>Means that the following now works:</p>\n\n<pre><code>---\nexample:\n  feature_packs:\n    - example\n    - example\n  components:\n    - component: char\n      initial_value: T\n    - component: string\n      initial_value: 'asdasdasd'\n    - component: int\n      initial_value: 2\n    - component: float\n      initial_value: 3.2\n    - component: bool\n      initial_value: true\n    - component: range\n      initial_value:\n        start: 0\n        end: 9\n</code></pre>\n\n<p>It's a bit more verbose then I'd like but at least it's doable.</p>\n\n<hr>\n\n<p>EDIT: Thanks to @dtolnay answer I was able to improve this question and now it reads the data exactly as I originally intended!</p>\n\n<p>Code above has already been modified to reflect this.</p>\n\n<hr>\n\n<p>Also, by <code>#[serde(flatten)]</code> to <code>Templates</code> like so:</p>\n\n<pre><code>#[derive(Debug, Deserialize)]\npub struct Templates {\n    #[serde(flatten)]\n    templates: HashMap&lt;Name,Template&gt;,\n}\n</code></pre>\n\n<p>I was able to remove the need to add <code>templates:</code> at the start of the file.</p>\n"}, {"tags": [], "owner": {"reputation": 6357, "user_id": 6086311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb99289473f6393b89474785f2d294d1?s=128&d=identicon&r=PG", "display_name": "dtolnay", "link": "https://stackoverflow.com/users/6086311/dtolnay"}, "is_accepted": false, "score": 3, "last_activity_date": 1538250922, "creation_date": 1538250922, "answer_id": 52572035, "question_id": 52567944, "link": "https://stackoverflow.com/questions/52567944/how-do-i-make-a-config-rs-field-that-can-deserialize-into-one-of-several-types/52572035#52572035", "title": "How do I make a config.rs field that can deserialize into one of several types?", "body": "<p>I would deserialize the example config you gave as follows.</p>\n\n<hr>\n\n<pre><code>const Y: &amp;str = r#\"\n---\norc:\n  feature_packs:\n    - physical\n    - basic_identifiers_mob\n  components:\n    - component: char\n      initial_value: T\ngoblin:\n  feature_packs:\n    - physical\n    - basic_identifiers_mob\n  components:\n    - component: char\n      initial_value: t\n\"#;\n\n#[macro_use]\nextern crate serde_derive;\n\nextern crate serde;\nextern crate serde_yaml;\n\nuse std::collections::HashMap as Map;\n\ntype Templates = Map&lt;String, Template&gt;;\n\n#[derive(Deserialize, Debug)]\nstruct Template {\n    feature_packs: Vec&lt;String&gt;,\n    components: Vec&lt;Component&gt;,\n}\n\n#[derive(Deserialize, Debug)]\n#[serde(\n    tag = \"component\",\n    content = \"initial_value\",\n    rename_all = \"lowercase\",\n)]\nenum Component {\n    Char(char),\n    String(String),\n    Int(i32),\n    Float(f32),\n    Bool(bool),\n    Range(Range&lt;i32&gt;),\n}\n\n#[derive(Deserialize, Debug)]\nstruct Range&lt;T&gt; {\n    start: T,\n    end: T,\n}\n\nfn main() {\n    println!(\"{:#?}\", serde_yaml::from_str::&lt;Templates&gt;(Y).unwrap());\n}\n</code></pre>\n"}], "owner": {"reputation": 2184, "user_id": 3536548, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/qEPjr.png?s=128&g=1", "display_name": "Thermatix", "link": "https://stackoverflow.com/users/3536548/thermatix"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 247, "favorite_count": 1, "accepted_answer_id": 52569046, "answer_count": 2, "score": 2, "last_activity_date": 1538339082, "creation_date": 1538220812, "last_edit_date": 1538226754, "question_id": 52567944, "link": "https://stackoverflow.com/questions/52567944/how-do-i-make-a-config-rs-field-that-can-deserialize-into-one-of-several-types", "title": "How do I make a config.rs field that can deserialize into one of several types?", "body": "<p>I'm using <a href=\"https://crates.io/crates/config\" rel=\"nofollow noreferrer\">config</a> as a means to load external data into my program which uses <a href=\"https://crates.io/crates/serde\" rel=\"nofollow noreferrer\">serde</a> in the background to deserialize, but I want the ability that a specific field can be one of several types. \nBecause I'm quite new to Rust, the <a href=\"https://serde.rs/string-or-struct.html\" rel=\"nofollow noreferrer\">documentation</a> I found doesn't make a lot of sense. </p>\n\n<p>How can I make it so that <code>initial_value</code> can be one of several types:</p>\n\n<ul>\n<li><code>String</code></li>\n<li><code>i32</code></li>\n<li><code>bool</code></li>\n<li><code>[i32,i32]</code></li>\n</ul>\n\n<p>I get that I can use the attribute <code>deserialize_with</code> to direct to a custom decoder but beyond that I'm a bit at a loss.</p>\n\n<p>Here's my code:</p>\n\n<pre><code>use std::collections::HashMap;\nuse std::fs;\n\nuse config_rs::{Config, ConfigError, File};\n\n#[derive(Debug, Deserialize)]\nenum InitialValues {\n    String,\n    i32,\n    bool,\n}\n\n#[derive(Debug, Deserialize)]\nstruct Component {\n    component: String,\n    initial_value: InitialValues,\n}\n\n#[derive(Debug, Deserialize)]\nstruct Template {\n    feature_packs: Vec&lt;String&gt;,\n    components: Vec&lt;Component&gt;,\n}\n\ntype Name = String;\ntype Type = String;\n\n#[derive(Debug, Deserialize)]\npub struct Templates {\n    templates: HashMap&lt;Name, Template&gt;,\n}\n\nimpl Templates {\n    pub fn new(file: &amp;str) -&gt; Result&lt;Self, ConfigError&gt; {\n        let mut templates = Config::new();\n        templates.merge(File::with_name(file)).unwrap();\n        templates.try_into()\n    }\n}\n\n#[derive(Debug)]\npub struct Manager {\n    pub templates: HashMap&lt;Type, Templates&gt;,\n}\n\nimpl Manager {\n    pub fn new(dir: &amp;str) -&gt; Self {\n        let mut manager = Self {\n            templates: HashMap::new(),\n        };\n        'paths: for raw_path in fs::read_dir(dir).unwrap() {\n            let path = raw_path.unwrap().path();\n            let file_path = path.clone();\n            let type_name = path.clone();\n            let templates = match Templates::new(type_name.to_str().unwrap()) {\n                Ok(templates) =&gt; templates,\n                Err(message) =&gt; {\n                    println!(\"TemplateManager: file({:?}), {}\", &amp;file_path, message);\n                    continue 'paths;\n                }\n            };\n            manager.templates.insert(\n                file_path.file_stem().unwrap().to_str().unwrap().to_owned(),\n                templates,\n            );\n        }\n        manager\n    }\n}\n</code></pre>\n\n<p>An example config file:</p>\n\n<pre><code>---\ntemplates:\n  orc:\n    feature_packs:\n      - physical\n      - basic_identifiers_mob\n    components:\n      - component: char\n        initial_value: T\n  goblin:\n    feature_packs:\n      - physical\n      - basic_identifiers_mob\n    components:\n      - component: char\n        initial_value: t\n</code></pre>\n"}, {"tags": ["rust", "serde"], "answers": [{"comments": [{"owner": {"reputation": 57, "user_id": 10431891, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6c215ab9ab6acef162f26469c90a3b71?s=128&d=identicon&r=PG&f=1", "display_name": "Deveres", "link": "https://stackoverflow.com/users/10431891/deveres"}, "edited": false, "score": 0, "creation_date": 1538346667, "post_id": 52566598, "comment_id": 92100372, "body": "I was thinking on using a <code>enum</code>, but I didn&#39;t know about <code>untagged</code>, which is the key part.  How could I access the <code>ResourceA</code> data after getting the response?"}, {"owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "reply_to_user": {"reputation": 57, "user_id": 10431891, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6c215ab9ab6acef162f26469c90a3b71?s=128&d=identicon&r=PG&f=1", "display_name": "Deveres", "link": "https://stackoverflow.com/users/10431891/deveres"}, "edited": false, "score": 0, "creation_date": 1538372355, "post_id": 52566598, "comment_id": 92104974, "body": "Use pattern match via <code>match</code>, see <a href=\"https://play.rust-lang.org/?gist=a9d6228e79b03cceaf2b38da596fdc87&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">here</a>. Anyway, a nice place to see for rust patterns is <a href=\"https://doc.rust-lang.org/rust-by-example/custom_types/enum.html#enums\" rel=\"nofollow noreferrer\">Rust by examples</a>"}, {"owner": {"reputation": 57, "user_id": 10431891, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6c215ab9ab6acef162f26469c90a3b71?s=128&d=identicon&r=PG&f=1", "display_name": "Deveres", "link": "https://stackoverflow.com/users/10431891/deveres"}, "edited": false, "score": 0, "creation_date": 1538449983, "post_id": 52566598, "comment_id": 92137327, "body": "Thank you. I realized later that it was the way to get it"}], "tags": [], "owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "is_accepted": true, "score": 2, "last_activity_date": 1538209751, "creation_date": 1538209751, "answer_id": 52566598, "question_id": 52564468, "link": "https://stackoverflow.com/questions/52564468/most-rusty-way-to-wrap-rustson-responses-and-avoid-duplicated-traits/52566598#52566598", "title": "Most &quot;rusty&quot; way to wrap Rustson responses and avoid duplicated traits?", "body": "<p>You have a response with two variants, so an enum based solution may be considered:</p>\n\n<pre><code>#[derive(Debug, Serialize, Deserialize)]\nstruct ResourceA {\n    value: String,\n}\n\n#[derive(Debug, Serialize, Deserialize]\n#[serde(untagged)]\npub enum Response {\n    ErrAndValue{error: bool, data: ResourceA},\n    Simple(ResourceA),\n}\n</code></pre>\n\n<p>I've used the <a href=\"https://serde.rs/enum-representations.html#untagged\" rel=\"nofollow noreferrer\">untagged</a> annotation to conform the json format:</p>\n\n<pre><code>{ value: \"resource A\" }\n{ error: false, data: { value: \"resource A\" } }\n</code></pre>\n\n<p>Then your <code>RestPath</code> impl reduce to:</p>\n\n<pre><code>impl&lt;'a&gt; RestPath&lt;(&amp;'a str, String)&gt; for Response {\n    fn get_path(params: (&amp;str, String)) -&gt; Result&lt;String, Error&gt; {\n        let (resource, id) = params;\n        Ok(format!(\"{}/{}\", resource, id))\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 57, "user_id": 10431891, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6c215ab9ab6acef162f26469c90a3b71?s=128&d=identicon&r=PG&f=1", "display_name": "Deveres", "link": "https://stackoverflow.com/users/10431891/deveres"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 75, "favorite_count": 0, "accepted_answer_id": 52566598, "answer_count": 1, "score": 1, "last_activity_date": 1538857646, "creation_date": 1538186991, "last_edit_date": 1538857646, "question_id": 52564468, "link": "https://stackoverflow.com/questions/52564468/most-rusty-way-to-wrap-rustson-responses-and-avoid-duplicated-traits", "title": "Most &quot;rusty&quot; way to wrap Rustson responses and avoid duplicated traits?", "body": "<p>I'm learning Rust, but I'm not sure about the most elegant or \"rusty\" way of doing some things:</p>\n\n<p>I'm retrieving data from an API that, on some endpoints returns a JSON object (<code>{ value: \"resource A\" }</code>), but in other occasions, it returns a JSON object wrapped by another object (<code>{ error: false, data: { value: \"resource A\" } }</code>).</p>\n\n<p>I'm using <a href=\"https://github.com/spietika/restson-rust\" rel=\"nofollow noreferrer\">Restson</a> to retrieve that data.</p>\n\n<p>My question is: what is the most elegant way to deal with different responses? I don't know how to use some kind of abstract <code>Response</code> that could accept both kind of JSON responses.</p>\n\n<p>I mean, in this case I'm implementing 2 traits, but both of them have the same content, so, to me, it smells like there is something wrong there.</p>\n\n<p>This is a simplified example, so typos could exist:</p>\n\n<pre><code>use restson::{RestPath, RestClient, Error};\n\n#[derive(Debug, Serialize, Deserialize)]\nstruct Response&lt;T&gt; {\n    error: bool,\n    data: T\n}\n\n#[derive(Debug, Serialize, Deserialize)]\nstruct ResourceA {\n    value: String,\n}\n\n// HERE: How do I remove this duplication?  \nimpl&lt;'a&gt; RestPath&lt;(&amp;'a str, String)&gt; for ResourceA {\n    fn get_path(params: (i8, String, &amp;str)) -&gt; Result&lt;String, Error&gt; {\n        let (resource, id) = params;\n        Ok(format!(\"{}/{}\", resource, id))\n    }\n}\nimpl&lt;'a, T&gt; RestPath&lt;(&amp;'a str, String)&gt; for Response&lt;T&gt; {\n    fn get_path(params: (&amp;str, String)) -&gt; Result&lt;String, Error&gt; {\n        let (resource, id) = params;\n        Ok(format!(\"{}/{}\", resource, id))\n    }\n}\n\npub struct Client {\n    client: RestClient,\n}\n\nimpl Client {\n    pub fn new() -&gt; Client {\n        Client {\n            client: RestClient::new(\"http://my.client\").unwrap(),\n        }\n    }\n\n    pub fn get_resource_a(&amp;mut self, id: String) -&gt; ResourceA {\n        let params = (\"a\", id);\n        self.client.get(params).unwrap()\n    }\n\n    pub fn get_resource_a2(&amp;mut self, id: String) -&gt; ResourceA {\n        let params = (\"a2\", id);\n        let response: Response&lt;ResourceA&gt; = self.api_client.get(params).unwrap();\n        response.data\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "serde"], "comments": [{"owner": {"reputation": 33, "user_id": 7140793, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/015bc8453df21b618730960584a92ffd?s=128&d=identicon&r=PG", "display_name": "Fran&#231;ois Triquet", "link": "https://stackoverflow.com/users/7140793/fran%c3%a7ois-triquet"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1538227359, "post_id": 52562539, "comment_id": 92074560, "body": "Thanks for your answer. When you say &quot;make your own&quot; do you means something like defining a trait (<code>SeralizeToArray</code> for example) and implement it for structures that I &quot;know&quot; (tuples, vec, etc) that they will be serialized to an array?"}, {"owner": {"reputation": 33, "user_id": 7140793, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/015bc8453df21b618730960584a92ffd?s=128&d=identicon&r=PG", "display_name": "Fran&#231;ois Triquet", "link": "https://stackoverflow.com/users/7140793/fran%c3%a7ois-triquet"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1538230902, "post_id": 52562539, "comment_id": 92075439, "body": "I&#39;ve been able to define this trait and provide implementations for tuples and array using macros plus one implementation for Vec. It seems to do the job for what I need because the job parameters will mostly be tuples since they are not likely to be of the same type. Thanks! P.S. How can I mark this question as resolved? Should I answer my own question with the solution I have?"}], "answers": [{"comments": [{"owner": {"reputation": 33, "user_id": 7140793, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/015bc8453df21b618730960584a92ffd?s=128&d=identicon&r=PG", "display_name": "Fran&#231;ois Triquet", "link": "https://stackoverflow.com/users/7140793/fran%c3%a7ois-triquet"}, "edited": false, "score": 0, "creation_date": 1538236979, "post_id": 52569374, "comment_id": 92076960, "body": "Thanks, this is not perfect as you said because I can still implement SerializeToArray for anything but it stills prevent the most common potential problem which is to forgot to have a tuple as <code>Args</code> when the job takes only one parameter."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1538231737, "creation_date": 1538231737, "answer_id": 52569374, "question_id": 52562539, "link": "https://stackoverflow.com/questions/52562539/how-to-ensure-at-compile-time-that-a-type-will-serialize-into-a-json-array/52569374#52569374", "title": "How to ensure at compile time that a type will serialize into a JSON array?", "body": "<p>I'm pretty sure the answer is \"no, there's nothing native to Serde to do this\". There's no trait corresponding to this specific need.</p>\n\n<p>You could make your own <em>marker trait</em> and require that it be present, but it wouldn't be automatically implemented by anything; you'd have to manually implement it for any valid type. I'm guessing it wouldn't be what you want:</p>\n\n<pre><code>trait SerializeToJsonArray {}\n\nimpl&lt;T&gt; SerializeToJsonArray for Vec&lt;T&gt; {}\nimpl&lt;T&gt; SerializeToJsonArray for [T] {}\nimpl&lt;A&gt; SerializeToJsonArray for (A, ) {}\nimpl&lt;A, B&gt; SerializeToJsonArray for (A, B, ) {}\nimpl&lt;A, B, C&gt; SerializeToJsonArray for (A, B, C, ) {}\n// etc.\n\ntrait BackgroundJob {\n    type Args: Serialize + SerializeToJsonArray;\n}\n</code></pre>\n\n<p>This is also trivially breakable \u2014 you can easily implement <code>SerializeToJsonArray</code> for types that <strong>don't</strong> serialize to an array. Likewise, Serde doesn't know about this trait and you'll still need to handle non-arrays at serialization time.</p>\n"}], "owner": {"reputation": 33, "user_id": 7140793, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/015bc8453df21b618730960584a92ffd?s=128&d=identicon&r=PG", "display_name": "Fran&#231;ois Triquet", "link": "https://stackoverflow.com/users/7140793/fran%c3%a7ois-triquet"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 121, "favorite_count": 0, "accepted_answer_id": 52569374, "answer_count": 1, "score": 3, "last_activity_date": 1538231737, "creation_date": 1538167950, "last_edit_date": 1538169051, "question_id": 52562539, "link": "https://stackoverflow.com/questions/52562539/how-to-ensure-at-compile-time-that-a-type-will-serialize-into-a-json-array", "title": "How to ensure at compile time that a type will serialize into a JSON array?", "body": "<p>I have a trait that I use as an interface to Rails' ActiveJob; I want my Rust backend to fire jobs to be processed by a Rails API:</p>\n\n<pre><code>trait BackgroundJob {\n    type Args: Serialize;\n    const QUEUE: &amp;'static str;\n    const CLASS: JobClass;\n\n    fn payload(self) -&gt; Self::Args;\n}\n</code></pre>\n\n<p>An example implementation of the trait:</p>\n\n<pre><code>impl BackgroundJob for MyJob {\n    type Args = (String,);\n    const QUEUE: &amp;'static str = \"my_queue\";\n    const CLASS: JobClass = JobClass::Job1;\n\n    fn payload(self) -&gt; Self::Args {\n        (self.payload,)\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=70ad53bc61eb7d40aae0dbf1dca0f96c&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>In my application the code is a little bit more complex (specifically, I have an Actix actor instead of the generic function over <code>BackgroundJob</code>) but the idea is the same.</p>\n\n<p>This code works fine but I have to make sure that all the implementations of <code>BackgroundJob</code> will have as the <code>Args</code> type parameter something that will serialize to a JSON array (to work with active job).</p>\n\n<p>What I would like to do is to have a compile-time guarantee that <code>Args</code> will serialize to an array. Is that possible?</p>\n\n<p>I tried to work around with <code>SerializeTuple</code> and <code>SerializeSeq</code> traits from Serde but without success.</p>\n"}, {"tags": ["rust", "ownership", "mutability", "borrowing"], "comments": [{"owner": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "edited": false, "score": 0, "creation_date": 1538162461, "post_id": 52561484, "comment_id": 92061530, "body": "<code>let mut mutcat = cat;</code> defines a mutable binding to an immutable value."}, {"owner": {"reputation": 21, "user_id": 9902351, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Bastiaan de Graaf", "link": "https://stackoverflow.com/users/9902351/bastiaan-de-graaf"}, "reply_to_user": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "edited": false, "score": 0, "creation_date": 1538162690, "post_id": 52561484, "comment_id": 92061609, "body": "Ok! I can see that I think. but I have tried to get it as a mutable value, which I guess is provided by get_categories()? Is there some way I am overlooking?"}, {"owner": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "edited": false, "score": 0, "creation_date": 1538162814, "post_id": 52561484, "comment_id": 92061650, "body": "I can&#39;t build in your code in the playground but I think what you want is <code>.iter_mut()</code> <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.iter_mut\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/primitive.slice.html#method.iter_mut</a>"}, {"owner": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "edited": false, "score": 0, "creation_date": 1538162875, "post_id": 52561484, "comment_id": 92061681, "body": "There&#39;s a sort of related question here <a href=\"https://stackoverflow.com/questions/28587698/whats-the-difference-between-placing-mut-before-a-variable-name-and-after-the\" title=\"whats the difference between placing mut before a variable name and after the\">stackoverflow.com/questions/28587698/&hellip;</a>"}, {"owner": {"reputation": 21, "user_id": 9902351, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Bastiaan de Graaf", "link": "https://stackoverflow.com/users/9902351/bastiaan-de-graaf"}, "reply_to_user": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "edited": false, "score": 2, "creation_date": 1538162933, "post_id": 52561484, "comment_id": 92061711, "body": "Thanks a lot, I struggled providing a working example without just dumping the whole project. sorry for the inconvenience, I am going to have a look at the method you suggest!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1538162953, "post_id": 52561484, "comment_id": 92061720, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/52561484/edit\">edit</a> your question to include it. We cannot tell what crates, types, traits, fields, etc. are present in the code, such as what <code>Node</code> is or <code>GenICam</code> is. Try to produce something that reproduces your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> or you can reproduce it in a brand new Cargo project. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> as well."}, {"owner": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "edited": false, "score": 0, "creation_date": 1538163116, "post_id": 52561484, "comment_id": 92061805, "body": "@BastiaandeGraaf No problem! Just letting you know that I&#39;m not 100% sure. If that fixes your issue, let us know and we can improve your question by getting an MCVE that demonstrates the issue."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1538163671, "post_id": 52561484, "comment_id": 92062024, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/35005704/155423\">Cannot borrow immutable borrowed content as mutable</a> and/or <a href=\"https://stackoverflow.com/q/41045011/155423\">Cannot borrow immutable borrowed content as mutable when implementing a binary tree with Rc</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/52561484/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 21, "user_id": 9902351, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Bastiaan de Graaf", "link": "https://stackoverflow.com/users/9902351/bastiaan-de-graaf"}, "edited": false, "score": 0, "creation_date": 1538164466, "post_id": 52561484, "comment_id": 92062355, "body": "the second link you provided seems to! trying to implement it now"}], "owner": {"reputation": 21, "user_id": 9902351, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Bastiaan de Graaf", "link": "https://stackoverflow.com/users/9902351/bastiaan-de-graaf"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 71, "favorite_count": 0, "closed_date": 1538313728, "answer_count": 0, "score": 1, "last_activity_date": 1538313744, "creation_date": 1538162398, "last_edit_date": 1538163474, "question_id": 52561484, "link": "https://stackoverflow.com/questions/52561484/immutable-variable-where-a-mutable-variable-seems-to-be-provided", "closed_reason": "Duplicate", "title": "immutable variable where a mutable variable seems to be provided", "body": "<p>I have a clonable struct, called <code>GenICam</code>. This struct has a <code>HashMap</code> of <code>Rc&lt;dyn Node&gt;</code> trait objects, and a <code>HashMap</code> of <code>Rc&lt;Category&gt;</code> structs which implement the <code>Node</code> trait. The keys are <code>NodeName</code> which is an alias type for <code>String</code>.</p>\n\n<p>Each category has a list of feature names, which are represented in the <code>nodes</code> <code>HashMap</code> of <code>GenICam</code>. This list should be used to populate the <code>node_list</code> field with references to the nodes using the functions below:</p>\n\n<pre><code>use std::{collections::HashMap, rc::Rc};\n\ntype NodeName = String;\n\n#[derive(Clone)]\npub struct GenICam {\n    nodes: HashMap&lt;NodeName, Rc&lt;Node&gt;&gt;,\n    categories: HashMap&lt;NodeName, Rc&lt;Category&gt;&gt;,\n}\n\nimpl GenICam {\n    fn get_categories(&amp;self) -&gt; Vec&lt;Rc&lt;Category&gt;&gt; {\n        let mut collect = Vec::new();\n        for i in &amp;self.categories {\n            collect.push(i.1.clone());\n        }\n        collect\n    }\n\n    /// Fills all categories with references to the features if available\n    fn populate_categories(&amp;mut self) {\n        let mut cats = self.get_categories();\n        for cat in cats {\n            let mut mutcat = cat;\n            mutcat.populate(&amp;self);\n        }\n    }\n}\n\n#[derive(Clone)]\npub struct Category {\n    pub name: NodeName,\n    features: Vec&lt;String&gt;,\n    pub node_list: HashMap&lt;NodeName, Rc&lt;Node&gt;&gt;,\n}\n\nimpl Category {\n    pub fn populate(&amp;mut self, genicam: &amp;GenICam) {\n        for feat in &amp;self.clone().features {\n            let result = genicam.node(feat.to_string());\n            match result {\n                None =&gt; (),\n                Some(x) =&gt; self.add_to_node_list(x),\n            };\n        }\n    }\n\n    /// populate the node hashmap with the given node\n    pub fn add_to_node_list(&amp;mut self, node: &amp;Rc&lt;Node&gt;) {\n        println!(\"Succes: {:?}\", node.name());\n        self.node_list.insert(node.name(), node.clone());\n    }\n}\n</code></pre>\n\n<p>I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0596]: cannot borrow immutable borrowed content as mutable\n    --&gt; src/genicam.rs:174:4\n |\n |             mutcat.populate(&amp;self);\n |             ^^^^^^ cannot borrow as mutable\n</code></pre>\n\n<p>I cannot wrap my head around why <code>mutcat</code> is immutable, since it is defined as <code>let mut</code>.</p>\n"}, {"tags": ["rust", "inline-assembly", "arm64"], "comments": [{"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 0, "creation_date": 1571882826, "post_id": 52559956, "comment_id": 103389657, "body": "The reason this doesn&#39;t work is that a Rust compiler has no reason to emit a line of asm like <code>.equ HCR_VALUE, 0xffff0000</code> to define that name as an assemble-time constant.  Think of inline asm as just letting you put your own stuff into the compiler&#39;s asm output before it&#39;s fed to an assembler; the template string is <i>not</i> understood by the compiler other than to substitute <code>%0</code> or <code>%[operand_name]</code>."}], "answers": [{"comments": [{"owner": {"reputation": 961, "user_id": 5920297, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/80fc64c0293ff9460b4a8f127afdb8b2?s=128&d=identicon&r=PG&f=1", "display_name": "phodina", "link": "https://stackoverflow.com/users/5920297/phodina"}, "edited": false, "score": 0, "creation_date": 1538171504, "post_id": 52560879, "comment_id": 92064586, "body": "Thanks @Florian. This is definitely the right direction. I tried as you suggested and got the following error: <code>&lt;inline asm&gt;:11:16: error: expected label or encodable integer pc offset     ldr    x0, -453</code>"}, {"owner": {"reputation": 6093, "user_id": 2189500, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/109f747845a9ce762a1fff72eb8cf6f3?s=128&d=identicon&r=PG", "display_name": "David Wohlferd", "link": "https://stackoverflow.com/users/2189500/david-wohlferd"}, "edited": false, "score": 2, "creation_date": 1538188685, "post_id": 52560879, "comment_id": 92067321, "body": "I don&#39;t have Rust or arm (<code>ldr</code> looks like arm), but you could try:  <code>asm!(&quot;ldr x0, $0&quot;:: &quot;i&quot; (HCR_VALUE):&quot;x0&quot;);</code> or <code>asm!(&quot;ldr x0, =$0&quot;:: &quot;i&quot; (HCR_VALUE):&quot;x0&quot;);</code>"}, {"owner": {"reputation": 26934, "user_id": 8316315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44d833a8a46fea39d7bfca1540ea9c07?s=128&d=identicon&r=PG&f=1", "display_name": "Florian Weimer", "link": "https://stackoverflow.com/users/8316315/florian-weimer"}, "reply_to_user": {"reputation": 961, "user_id": 5920297, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/80fc64c0293ff9460b4a8f127afdb8b2?s=128&d=identicon&r=PG&f=1", "display_name": "phodina", "link": "https://stackoverflow.com/users/5920297/phodina"}, "edited": false, "score": 0, "creation_date": 1538198360, "post_id": 52560879, "comment_id": 92068470, "body": "@phodina Sorry, you still need to put the <code>=</code> into the inline assembly, like David said."}, {"owner": {"reputation": 961, "user_id": 5920297, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/80fc64c0293ff9460b4a8f127afdb8b2?s=128&d=identicon&r=PG&f=1", "display_name": "phodina", "link": "https://stackoverflow.com/users/5920297/phodina"}, "reply_to_user": {"reputation": 6093, "user_id": 2189500, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/109f747845a9ce762a1fff72eb8cf6f3?s=128&d=identicon&r=PG", "display_name": "David Wohlferd", "link": "https://stackoverflow.com/users/2189500/david-wohlferd"}, "edited": false, "score": 0, "creation_date": 1538200955, "post_id": 52560879, "comment_id": 92068839, "body": "Thanks @Florian and @David. Putting <code>=</code> does the trick. Sorry for not saying it&#39;s an AArch64 instruction."}], "tags": [], "owner": {"reputation": 26934, "user_id": 8316315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44d833a8a46fea39d7bfca1540ea9c07?s=128&d=identicon&r=PG&f=1", "display_name": "Florian Weimer", "link": "https://stackoverflow.com/users/8316315/florian-weimer"}, "is_accepted": true, "score": 3, "last_activity_date": 1538198329, "last_edit_date": 1538198329, "creation_date": 1538159169, "answer_id": 52560879, "question_id": 52559956, "link": "https://stackoverflow.com/questions/52559956/how-do-i-use-a-constant-in-rusts-inline-assembly-macro/52560879#52560879", "title": "How do I use a constant in Rust&#39;s inline assembly macro?", "body": "<p>You need to pass the constant with a suitable constraint, like this:</p>\n\n<pre><code>unsafe { asm!(\"ldr x0, =${0:c}\" : : \"i\" (HCR_VALUE) : \"x0\"); }\n</code></pre>\n\n<p>The right constraint depends on the architecture; on RISC CPUs, not all constants can be represented as immediate values.  So you may have to use a register constraint instead and have LLVM materialize the constant there.</p>\n"}], "owner": {"reputation": 961, "user_id": 5920297, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/80fc64c0293ff9460b4a8f127afdb8b2?s=128&d=identicon&r=PG&f=1", "display_name": "phodina", "link": "https://stackoverflow.com/users/5920297/phodina"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 597, "favorite_count": 0, "accepted_answer_id": 52560879, "answer_count": 1, "score": 3, "last_activity_date": 1571854561, "creation_date": 1538154650, "last_edit_date": 1571854561, "question_id": 52559956, "link": "https://stackoverflow.com/questions/52559956/how-do-i-use-a-constant-in-rusts-inline-assembly-macro", "title": "How do I use a constant in Rust&#39;s inline assembly macro?", "body": "<p>I'm porting some legacy assembly code to Rust and I need to call it through the <code>asm!</code> macro. However, the assembly code depends on some constants stored in a C header file. I'd like to keep it similar, define the constants in Rust and have the names of the constants in the <code>asm</code> macro.</p>\n\n<p>Legacy C header:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>#define HCR_VALUE 0xffff0000\n</code></pre>\n\n<p>Legacy ASM file:</p>\n\n<pre><code>.func\n...\nldr    x0, =HCR_VALUE\n...\n</code></pre>\n\n<p>Rust code:</p>\n\n<pre><code>pub const HCR_VALUE: u32 = 0xffff0000;\n</code></pre>\n\n\n\n<pre><code>unsafe { asm!(\"ldr x0, HCR_VALUE\":::\"x0\"); }\n</code></pre>\n\n<p>Building the application ends up with a linker error:</p>\n\n<pre><code>lld-link: error: undefined symbol: HCR_VALUE\n</code></pre>\n"}, {"tags": ["rust", "rust-obsolete"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1538154910, "post_id": 52559884, "comment_id": 92058555, "body": "<code>use std::mem::transmute as cast;</code> Ugh. Please don&#39;t do that."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1538154911, "post_id": 52559884, "comment_id": 92058557, "body": "What is the type of <code>self</code> in your example?  For what it&#39;s worth, the <code>repr()</code> method was simply an alias for <code>std::mem::transmute_copy()</code>, which is still available today."}, {"owner": {"reputation": 3209, "user_id": 2388218, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/47123a304d11a2b8408fbb7bf804837c?s=128&d=identicon&r=PG", "display_name": "Matt", "link": "https://stackoverflow.com/users/2388218/matt"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1538155132, "post_id": 52559884, "comment_id": 92058649, "body": "@SvenMarnach a <code>static str</code>"}, {"owner": {"reputation": 3209, "user_id": 2388218, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/47123a304d11a2b8408fbb7bf804837c?s=128&d=identicon&r=PG", "display_name": "Matt", "link": "https://stackoverflow.com/users/2388218/matt"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1538155242, "post_id": 52559884, "comment_id": 92058697, "body": "@trentcl This code interfaces with <code>libjit</code>. This low-level sort of development is <i>really</i> new to me. I know <code>transmute</code> is a scary thing to use, but considering the FFI, is there a safe/cleaner way of doing it?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1538155334, "post_id": 52559884, "comment_id": 92058731, "body": "It&#39;s not that you shouldn&#39;t use <code>transmute</code> (although that doesn&#39;t really look necessary here either), just that you shouldn&#39;t rename it to <code>cast</code>. It saves a couple keystrokes at the expense of making everybody who ever reads the code say, &quot;huh?&quot;"}, {"owner": {"reputation": 3209, "user_id": 2388218, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/47123a304d11a2b8408fbb7bf804837c?s=128&d=identicon&r=PG", "display_name": "Matt", "link": "https://stackoverflow.com/users/2388218/matt"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1538155383, "post_id": 52559884, "comment_id": 92058748, "body": "@trentcl Gotcha. Thanks!"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1538156100, "post_id": 52559884, "comment_id": 92059046, "body": "I think more context is required. This looks like part of the implementation of a typemap, or something reflective like that. It&#39;s using the offset of the fields of a slice reference, which is pretty sketchy. I wonder if Code Review would be a better place for this."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1538156565, "post_id": 52559884, "comment_id": 92059224, "body": "I don&#39;t think he layout of a slice in memory is guaranteed in any way by Rust.  You should probably use your own type instead of <code>&amp;&#39;static str</code>.  If this is not possible for some reason, you can use <code>offset_data = 0</code> and <code>offset_len = std::mem::size_of&lt;*const u8&gt;()</code>.  This will break if the internal layout of a slice is changed by Rust, but so will any other solution to get these offsets."}, {"owner": {"reputation": 7441, "user_id": 1575353, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/rvz3i.png?s=128&g=1", "display_name": "S\u1d00\u1d0d On\u1d07\u1d0c\u1d00", "link": "https://stackoverflow.com/users/1575353/s%e1%b4%80%e1%b4%8d-on%e1%b4%87%e1%b4%8c%e1%b4%80"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 3, "creation_date": 1538156759, "post_id": 52559884, "comment_id": 92059306, "body": "@trentcl this post on CR would not be <a href=\"https://codereview.stackexchange.com/help/on-topic\">on-topic</a> because: &quot;<i>For licensing, moral, and procedural reasons, we cannot review code written by other programmers. We expect you, as the author, to understand why the code is written the way that it is.</i>&quot;"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1538159662, "post_id": 52559884, "comment_id": 92060473, "body": "@trentcl Yeah I just realised. There would have to be some inverse of <code>from_raw_parts()</code>, but returning pointers, even for the size."}], "answers": [{"comments": [{"owner": {"reputation": 3209, "user_id": 2388218, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/47123a304d11a2b8408fbb7bf804837c?s=128&d=identicon&r=PG", "display_name": "Matt", "link": "https://stackoverflow.com/users/2388218/matt"}, "edited": false, "score": 0, "creation_date": 1538425418, "post_id": 52592945, "comment_id": 92131368, "body": "Thanks for this, Simon! I&#39;ll pore over it in a few hours and see if I understand it fully. As a bit of backstory, this code came from a Rust <a href=\"https://github.com/TomBebbington/jit.rs\" rel=\"nofollow noreferrer\">jit library</a> which was/is interfacing with <code>libjit</code>. Dunno if that means anything to you or changes your opinion on some things, but there you have it. Thanks again!"}, {"owner": {"reputation": 8764, "user_id": 1162888, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ad1b7cc2be3bf5120b508c56590e6293?s=128&d=identicon&r=PG", "display_name": "Simon Sapin", "link": "https://stackoverflow.com/users/1162888/simon-sapin"}, "reply_to_user": {"reputation": 3209, "user_id": 2388218, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/47123a304d11a2b8408fbb7bf804837c?s=128&d=identicon&r=PG", "display_name": "Matt", "link": "https://stackoverflow.com/users/2388218/matt"}, "edited": false, "score": 0, "creation_date": 1538455516, "post_id": 52592945, "comment_id": 92138446, "body": "I\u2019m not familiar with libjit, but I\u2019m not surprised that a JIT would want to do such unchecked memory accesses. I suppose that replacing them entirely would be a big rewrite and you\u2019ll likely want the practical answer."}, {"owner": {"reputation": 3209, "user_id": 2388218, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/47123a304d11a2b8408fbb7bf804837c?s=128&d=identicon&r=PG", "display_name": "Matt", "link": "https://stackoverflow.com/users/2388218/matt"}, "edited": false, "score": 0, "creation_date": 1538499541, "post_id": 52592945, "comment_id": 92160476, "body": "Do you have any recommendations for a more idiomatic and safe way of messing around at this low of a level? I suppose with this interface you can only be so safe, but I&#39;m relatively new to this realm of programming."}, {"owner": {"reputation": 8764, "user_id": 1162888, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ad1b7cc2be3bf5120b508c56590e6293?s=128&d=identicon&r=PG", "display_name": "Simon Sapin", "link": "https://stackoverflow.com/users/1162888/simon-sapin"}, "reply_to_user": {"reputation": 3209, "user_id": 2388218, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/47123a304d11a2b8408fbb7bf804837c?s=128&d=identicon&r=PG", "display_name": "Matt", "link": "https://stackoverflow.com/users/2388218/matt"}, "edited": false, "score": 1, "creation_date": 1538512817, "post_id": 52592945, "comment_id": 92166448, "body": "There is some inherent tension between safe v.s. low-level. The nature of a JIT is to generate machine code that is completely outside of Rust\u2019s type checkers, for example.  Rather than manipulating the individual fields of <code>&amp;str</code> (the pointer and length), try to manipulate it a whole, an opaque type whose size is twice the size of a pointer. <code>.as_ptr()</code> and <code>.len()</code> access the components, and <code>from_raw_parts</code> creates a new value with potentially-modified components, but neither requires assuming the exact memory layout inside of <code>&amp;str</code>."}], "tags": [], "owner": {"reputation": 8764, "user_id": 1162888, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ad1b7cc2be3bf5120b508c56590e6293?s=128&d=identicon&r=PG", "display_name": "Simon Sapin", "link": "https://stackoverflow.com/users/1162888/simon-sapin"}, "is_accepted": true, "score": 3, "last_activity_date": 1538404547, "last_edit_date": 1538404547, "creation_date": 1538402817, "answer_id": 52592945, "question_id": 52559884, "link": "https://stackoverflow.com/questions/52559884/what-is-a-modern-analog-to-the-deprecated-stdrawrepr/52592945#52592945", "title": "What is a modern analog to the deprecated std::raw::Repr?", "body": "<p>For <code>x</code> of type <code>&amp;[T]</code> or <code>&amp;str</code>:</p>\n\n<ul>\n<li>The replacement for <code>x.repr().data</code> is <code>x.as_ptr()</code>.</li>\n<li>The replacement for <code>x.repr().len</code> is <code>x.len()</code>.</li>\n<li>The replacement for transmuting from <code>std::raw::Slice</code> back to <code>&amp;[T]</code> or <code>&amp;str</code> is <code>std::slice::from_raw_parts</code> (and optionally <code>std::str::from_utf8_unchecked</code>).</li>\n</ul>\n\n<p>However what this code does not just access the pointer and the length, it\u2019s taking the <em>address</em> of those fields in order to compute their offset, presumably to later do some unsafe/unchecked memory reads or writes.</p>\n\n<p>The unhelpful answer is <strong>don\u2019t do this</strong>. <code>std::raw::Slice</code> was removed precisely because we didn\u2019t want to stabilize the exact memory layout of <code>&amp;[T]</code> and <code>&amp;str</code>. If this is possible at all, consider refactoring the code to not do these unchecked memory accesses but instead e.g. replace the whole string with <code>std::str::from_utf8_unchecked(std::slice::from_raw_parts(new_pointer, new_len))</code>.</p>\n\n<p>The practical answer is that the memory layout is very unlikely to change, and you\u2019ll probably be ok if you hard-code:</p>\n\n<pre><code>let offset_data = 0;\nlet offset_len = std::mem::size_of::&lt;usize&gt;();\n</code></pre>\n"}], "owner": {"reputation": 3209, "user_id": 2388218, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/47123a304d11a2b8408fbb7bf804837c?s=128&d=identicon&r=PG", "display_name": "Matt", "link": "https://stackoverflow.com/users/2388218/matt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 578, "favorite_count": 0, "accepted_answer_id": 52592945, "answer_count": 1, "score": 3, "last_activity_date": 1538404547, "creation_date": 1538154266, "last_edit_date": 1538157743, "question_id": 52559884, "link": "https://stackoverflow.com/questions/52559884/what-is-a-modern-analog-to-the-deprecated-stdrawrepr", "title": "What is a modern analog to the deprecated std::raw::Repr?", "body": "<p>I'm looking through some old (~2014) Rust code and I'm seeing this code block:</p>\n\n<pre><code>fn compile(self, func:&amp;UncompiledFunction&lt;'a&gt;) -&gt; &amp;'a Val {\n    unsafe {\n        use std::raw::Repr;\n        use std::mem::transmute as cast;\n        let slice = self.repr();\n        let ty = &lt;&amp;'a str as Compile&lt;'a&gt;&gt;::get_type();\n        let structure = Val::new(func, &amp;ty);\n        let offset_data = cast::&lt;_, usize&gt;(&amp;slice.data) - cast::&lt;_, usize&gt;(&amp;slice);\n        let offset_len = cast::&lt;_, usize&gt;(&amp;slice.len) - cast::&lt;_, usize&gt;(&amp;slice);\n        func.insn_store_relative(structure, offset_data, func.insn_of(mem::transmute::&lt;_, isize&gt;(slice.data)));\n        func.insn_store_relative(structure, offset_len, func.insn_of(slice.len));\n        structure\n    }\n}\n</code></pre>\n\n<p>According <a href=\"https://doc.rust-lang.org/1.6.0/std/raw/struct.Slice.html\" rel=\"nofollow noreferrer\">to the docs</a> and <a href=\"https://github.com/rust-lang/rust/issues/27751\" rel=\"nofollow noreferrer\">this GitHub discussion</a> <code>std::raw::Repr</code> and <code>std::raw::Slice</code> have been deprecated in favor of <a href=\"https://github.com/rust-lang/rust/issues/27751#issuecomment-195477994\" rel=\"nofollow noreferrer\"><code>std::slice</code> functions</a>.</p>\n\n<p>As someone with only a beginner's understanding of the std library I'm unsure how to translate these particular lines from the above block:</p>\n\n<pre><code>let slice = self.repr(); // `self` here is a `static str`\nlet offset_data = cast::&lt;_, usize&gt;(&amp;slice.data) - cast::&lt;_, usize&gt;(&amp;slice);\nlet offset_len = cast::&lt;_, usize&gt;(&amp;slice.len) - cast::&lt;_, usize&gt;(&amp;slice);\n</code></pre>\n\n<p>I was looking through the <a href=\"https://doc.rust-lang.org/1.6.0/std/raw/trait.Repr.html\" rel=\"nofollow noreferrer\">documentation for <code>Repr</code></a> with the hopes that I could produce an analogy with some function in the <code>std::slice</code> family, but nothing is immediately clear to me.</p>\n\n<p>I'm hoping someone can explain to me what exactly <code>Repr</code> does (in different language) and what a more updated approach might be.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1538127253, "post_id": 52552361, "comment_id": 92043521, "body": "Looks like specialization at first sight: <a href=\"https://play.rust-lang.org/?gist=aba06954d23a33487332595bb687c086&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1538127344, "post_id": 52552361, "comment_id": 92043563, "body": "@Boiethios that&#39;s exactly why I stumbled over this. Actually kinda nice that it allows to &quot;specialize&quot; for string slices."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1538127389, "post_id": 52552361, "comment_id": 92043577, "body": "@Boiethios It&#39;s not specialization. <code>str</code> does not satisfy the requirements for <code>T</code> in the other impl, so they don&#39;t overlap. What you are seeing there is the the <code>Show</code> impl for <code>&amp;str</code> not <code>str</code>."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1538127622, "post_id": 52552361, "comment_id": 92043711, "body": "But, to be honest, this feels a bit icky. The autoref rules make this very confusing, since you get different behaviour with only sized types."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 2, "creation_date": 1538127652, "post_id": 52552361, "comment_id": 92043730, "body": "@PeterHall I know! That&#39;s why I wrote: <i>looks like</i>."}], "tags": [], "owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "is_accepted": true, "score": 15, "last_activity_date": 1538127451, "last_edit_date": 1538127451, "creation_date": 1538127136, "answer_id": 52552361, "question_id": 52552212, "link": "https://stackoverflow.com/questions/52552212/why-is-it-possible-to-implement-a-trait-for-both-t-display-and-str/52552361#52552361", "title": "Why is it possible to implement a trait for both `T: Display` and `str`?", "body": "<p>The bound <code>&lt;T: Display&gt;</code> implicitly assumes <code>T</code> must be a Sized type. However <code>str</code> is <a href=\"https://stackoverflow.com/a/25753422/224671\">unsized</a>. Therefore the two impls are not in conflict with each other.</p>\n\n<p>If you need to cover unsized types like <code>str</code> as well, you need to relax the Sized requirement by adding <code>T: ?Sized</code>:</p>\n\n<pre><code>impl&lt;T: Display + ?Sized&gt; Show for T {}\n//              ^~~~~~~~\n</code></pre>\n"}], "owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 643, "favorite_count": 1, "accepted_answer_id": 52552361, "answer_count": 1, "score": 12, "last_activity_date": 1538127451, "creation_date": 1538126646, "last_edit_date": 1538127134, "question_id": 52552212, "link": "https://stackoverflow.com/questions/52552212/why-is-it-possible-to-implement-a-trait-for-both-t-display-and-str", "title": "Why is it possible to implement a trait for both `T: Display` and `str`?", "body": "<p>There is no <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1210-impl-specialization.md\" rel=\"noreferrer\">specialization</a> in <a href=\"https://github.com/rust-lang/rust/issues/31844\" rel=\"noreferrer\">stable Rust yet</a>, so this does not work:</p>\n\n<pre><code>trait X {}\n\nimpl&lt;T&gt; X for T {}\nimpl X for u32 {}  // conflicting implementation\n</code></pre>\n\n<p>No surprises there: <code>X</code> is implemented for any type <code>T</code> and we can't implement it again for <code>u32</code>.</p>\n\n<p>Surprisingly, the following snippet compiles successfuly:</p>\n\n<pre><code>use std::fmt::Display;\n\npub trait Show {}\n\nimpl&lt;T: Display&gt; Show for T {}\n\nimpl Show for str {}\n\n// These impls would cause \"conflicting implementation\" errors:\n// impl&lt;'a&gt; Show for &amp;'a str\n// impl Show for String\n\nfn main() {}\n</code></pre>\n\n<p>I would not expect this code to compile because <a href=\"https://doc.rust-lang.org/1.29.0/src/core/fmt/mod.rs.html#1912-1916\" rel=\"noreferrer\"><code>Display</code> is implemented for <code>str</code></a>, so the generic impl should implement <code>Show</code> for <code>str</code> and conflict with the specific impl.</p>\n\n<p>Why does <code>impl Show for str</code> not conflict with <code>impl&lt;T: Display&gt; Show for T</code>?</p>\n"}, {"tags": ["pointers", "rust", "unsafe", "borrowing"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1538110375, "post_id": 52548161, "comment_id": 92036213, "body": "I think that it&#39;s LLVM who handle this and as <code>x</code> and <code>x_ptr</code> contain the address of the same type, LLVM must reload <code>x</code>"}, {"owner": {"reputation": 2004, "user_id": 4916831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/kIpeA.jpg?s=128&g=1", "display_name": "lcmylin", "link": "https://stackoverflow.com/users/4916831/lcmylin"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1538111593, "post_id": 52548161, "comment_id": 92036584, "body": "@Stargateur Really? I was under the impression that type-based alias analysis allowed LLVM to make stronger assumptions about the disjointness of objects of the same type in memory."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1538125287, "post_id": 52548161, "comment_id": 92042467, "body": "@Mylin: From memory, TBAA is opt-in (the front-end needs to emit specific attributes) and rustc doesn&#39;t opt-in. Instead it uses per-variable annotations."}, {"owner": {"reputation": 491, "user_id": 5282385, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2f909f7c0f578c26cc98852294a416cc?s=128&d=identicon&r=PG", "display_name": "Ralf Jung", "link": "https://stackoverflow.com/users/5282385/ralf-jung"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1538314412, "post_id": 52548161, "comment_id": 92091798, "body": "Indeed, Rust does NOT do any reasoning based on pointee type (except for checking for interior mutability). So what @Stargateur wrote is incorrect for Rust."}], "answers": [{"comments": [{"owner": {"reputation": 491, "user_id": 5282385, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2f909f7c0f578c26cc98852294a416cc?s=128&d=identicon&r=PG", "display_name": "Ralf Jung", "link": "https://stackoverflow.com/users/5282385/ralf-jung"}, "edited": false, "score": 2, "creation_date": 1538314497, "post_id": 52552565, "comment_id": 92091819, "body": "Indeed, the key point is that <code>x_ptr</code> is <i>derived from</i> <code>x</code> AND <code>x</code> has not been used since <code>x_ptr</code> was created. Both of these have to be true for this code to be correct."}, {"owner": {"reputation": 491, "user_id": 5282385, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2f909f7c0f578c26cc98852294a416cc?s=128&d=identicon&r=PG", "display_name": "Ralf Jung", "link": "https://stackoverflow.com/users/5282385/ralf-jung"}, "edited": false, "score": 1, "creation_date": 1538316307, "post_id": 52552565, "comment_id": 92092265, "body": "Might be worth adding an example like <a href=\"https://play.rust-lang.org/?gist=c830d6933236d2a23f833de664209c40&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> showing that using <code>x_ptr</code> again after <code>x</code> was used is <i>not</i> allowed."}, {"owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "reply_to_user": {"reputation": 491, "user_id": 5282385, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2f909f7c0f578c26cc98852294a416cc?s=128&d=identicon&r=PG", "display_name": "Ralf Jung", "link": "https://stackoverflow.com/users/5282385/ralf-jung"}, "edited": false, "score": 0, "creation_date": 1564944201, "post_id": 52552565, "comment_id": 101186339, "body": "@RalfJung It&#39;s &quot;&quot;&quot;not allowed&quot;&quot;&quot;, yet <code>assert_eq!(x, &amp;[3, 4, 6]);</code> right after the last line fails and tells that it has changed to <code>4, 4, 6</code>... So are we back to having issues which Rust was built to avoid, by simply not even defining what&#39;s correct and what&#39;s not? If compiler doesn&#39;t optimize (I built it on release mode, same thing) it right now to not break it (it seems to, which is why I get correct results as if I was using C), then what&#39;s even the point of these arbitrary rules? This is major pain point for me, when it&#39;s impossible to figure out what&#39;s wrong and what&#39;s okay to do..."}, {"owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 0, "creation_date": 1564944502, "post_id": 52552565, "comment_id": 101186428, "body": "To be completely clear: <code>&amp;mut + &amp;mut = compile error</code>, this is the only thing that&#39;s obvious... I got there by trying to figure out whether <code>&amp;mut + *mut = wrong</code> (here we claim that it&#39;s wrong), and whether <code>*mut + *mut = wrong</code> (I have yet to find anything mentioning it). If there&#39;s no clear rules set yet, then is this UB, but not UB(tm)?"}, {"owner": {"reputation": 491, "user_id": 5282385, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2f909f7c0f578c26cc98852294a416cc?s=128&d=identicon&r=PG", "display_name": "Ralf Jung", "link": "https://stackoverflow.com/users/5282385/ralf-jung"}, "edited": false, "score": 0, "creation_date": 1565037626, "post_id": 52552565, "comment_id": 101217879, "body": "It&#39;s UB, and exploited in some cases. Some optimizations are temporarily <a href=\"https://stackoverflow.com/questions/57259126/why-does-the-rust-compiler-not-optimize-code-assuming-that-two-mutable-reference\">disabled because of LLVM bugs</a>. But just because the compiler does not currently recognize your code in the maximal possible way, doesn&#39;t mean it won&#39;t get better in the future. You can&#39;t expect the compiler to do all the most aggressive optimizations from the start. In C the usual approach seems to be &quot;optimize until someone complains it&#39;s wrong&quot;; we&#39;d like to first be sure we know what&#39;s right."}, {"owner": {"reputation": 491, "user_id": 5282385, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2f909f7c0f578c26cc98852294a416cc?s=128&d=identicon&r=PG", "display_name": "Ralf Jung", "link": "https://stackoverflow.com/users/5282385/ralf-jung"}, "reply_to_user": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 0, "creation_date": 1565037733, "post_id": 52552565, "comment_id": 101217918, "body": "@Sahsahae also, <i>unsafe</i> Rust does indeed share many of the problems of Undefined Behavior with C and C++. The value in Rust lies in the ability to seal unsafety behind an abstraction, and localize it. Compare <code>std::vector</code> in C++ and <code>Vec</code> in Rust: their <i>implementation</i> is very similar, and it is equally dangerous in both languages. But as a <i>user</i> there is a huge difference: in C++ you have to worry about iterator invalidation etc. all the time, in Rust you know the compiler got your back."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 8, "last_activity_date": 1538333567, "last_edit_date": 1538333567, "creation_date": 1538127883, "answer_id": 52552565, "question_id": 52548161, "link": "https://stackoverflow.com/questions/52548161/why-does-modifying-a-mutable-references-value-through-a-raw-pointer-not-violate/52552565#52552565", "title": "Why does modifying a mutable reference&#39;s value through a raw pointer not violate Rust&#39;s aliasing rules?", "body": "<p><strong>Disclaimer: there is no formal memory model, yet.</strong><sup>1</sup></p>\n\n<p>First of all, I'd like to address:</p>\n\n<blockquote>\n  <p>The problem I see here is that <code>x</code>, being an <code>&amp;mut</code> reference, can be assumed to be unique by the compiler.</p>\n</blockquote>\n\n<p>Yes... and no. <code>x</code> can only be assumed to be unique <em>if not borrowed</em>, an important distinction:</p>\n\n<pre><code>fn doit(x: &amp;mut T) {\n    let y = &amp;mut *x;\n    //  x is re-borrowed at this point.\n}\n</code></pre>\n\n<p>Therefore, currently, I would work with the assumption that deriving a pointer from <code>x</code> will temporarily \"borrow\" <code>x</code> in some sense.</p>\n\n<p>This is all wishy washy in the absence of a formal model, of course, and part of the reason why the rustc compiler is not too aggressive with aliasing optimizations yet: until a formal model is defined, and code is checked to match it, optimizations have to be conservative.</p>\n\n<p><sup>1</sup> <em>The RustBelt project is all about establishing a formally proven memory model for Rust. The latest news from Ralf Jung were about a <a href=\"https://internals.rust-lang.org/t/stacked-borrows-an-aliasing-model-for-rust/8153\" rel=\"nofollow noreferrer\">Stacked Borrows model</a>.</em></p>\n\n<hr>\n\n<p>From Ralf (comments): the key point in the above example is that there is a clear transfer from <code>x</code> to <code>x_ptr</code> and back to <code>x</code> again. So the <code>x_ptr</code> is a scoped borrow in a sense. Should the usage go <code>x</code>, <code>x_ptr</code>, back to <code>x</code> and back to <code>x_ptr</code>, then the latter would be Undefined Behavior:</p>\n\n<pre><code>fn main() {\n    let x = &amp;mut [1, 2, 4];\n    let x_ptr = x.as_mut_ptr(); // x_ptr borrows the right to mutate\n\n    unsafe {\n        for i in 0..x.len() {\n            *x_ptr.offset(i as isize) += 2; // Fine use of raw pointer.\n        }\n    }\n    assert_eq!(x, &amp;[3, 4, 6]);  // x is back in charge, x_ptr invalidated.\n\n    unsafe { *x_ptr += 1; }     // B\u00c4M! Used no-longer-valid raw pointer.\n}\n</code></pre>\n"}], "owner": {"reputation": 2004, "user_id": 4916831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/kIpeA.jpg?s=128&g=1", "display_name": "lcmylin", "link": "https://stackoverflow.com/users/4916831/lcmylin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 470, "favorite_count": 2, "accepted_answer_id": 52552565, "answer_count": 1, "score": 9, "last_activity_date": 1538333567, "creation_date": 1538107896, "last_edit_date": 1538140287, "question_id": 52548161, "link": "https://stackoverflow.com/questions/52548161/why-does-modifying-a-mutable-references-value-through-a-raw-pointer-not-violate", "title": "Why does modifying a mutable reference&#39;s value through a raw pointer not violate Rust&#39;s aliasing rules?", "body": "<p>I don't have a particularly solid understanding of Rust's aliasing rules (and from what I've heard they're not solidly defined), but I'm having trouble understanding what makes <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#examples-15\" rel=\"noreferrer\">this code example</a> in the <code>std::slice</code> documentation okay. I'll repeat it here:</p>\n\n<pre><code>let x = &amp;mut [1, 2, 4];\nlet x_ptr = x.as_mut_ptr();\n\nunsafe {\n    for i in 0..x.len() {\n        *x_ptr.offset(i as isize) += 2;\n    }\n}\nassert_eq!(x, &amp;[3, 4, 6]);\n</code></pre>\n\n<p>The problem I see here is that <code>x</code>, being an <code>&amp;mut</code> reference, can be assumed to be unique by the compiler. The contents of <code>x</code> get modified through <code>x_ptr</code>, and then read back via <code>x</code>, and I see no reason why the compiler couldn't just assume that <code>x</code> hadn't been modified, since it was never modified through the only existing <code>&amp;mut</code> reference.</p>\n\n<p>So, what am I missing here?</p>\n\n<ul>\n<li><p>Is the compiler required to assume that <code>*mut T</code> may alias <code>&amp;mut T</code>, even though it's normally allowed to assume that <code>&amp;mut T</code> <em>never</em> aliases another <code>&amp;mut T</code>?</p></li>\n<li><p>Does the <code>unsafe</code> block act as some sort of aliasing barrier, where the compiler assumes that code inside it may have modified anything in scope?</p></li>\n<li><p>Is this code example broken?</p></li>\n</ul>\n\n<p>If there is some kind of stable rule that makes this example okay, what exactly is it? What is its extent? How much should I worry about aliasing assumptions breaking random things in <code>unsafe</code> Rust code?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1538101891, "post_id": 52547329, "comment_id": 92034391, "body": "Since you&#39;re implementing an ECS, have you watched <a href=\"https://www.youtube.com/watch?v=aKLntZcp27M\" rel=\"nofollow noreferrer\">Catherine West&#39;s closing keynote from Rustconf this year</a>? It&#39;s not super in-depth, but well worth 45 minutes in my opinion."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1538102188, "post_id": 52547329, "comment_id": 92034447, "body": "Explicit returns at the end of the block are considered unidiomatic Rust. Just let the last expression be the return value (<code>fn name(&amp;self) -&gt; &amp;&#39;static str { &quot;A&quot; }</code>; <code>fn new(item: Box&lt;Name&gt;) -&gt; Container { Container { item } }</code>, etc.). You can also avoid repeating yourself when constructing <code>Container</code> by only saying <code>item</code> once."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1538114371, "post_id": 52547329, "comment_id": 92037384, "body": "You may find <a href=\"https://users.rust-lang.org/t/how-to-do-c-like-inheritance/20545\" rel=\"nofollow noreferrer\">users.rust-lang.org/t/how-to-do-c-like-inheritance/20545</a> interesting"}], "owner": {"reputation": 13004, "user_id": 887128, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/21dfdd82b179972af12332a8db35ac64?s=128&d=identicon&r=PG", "display_name": "Max", "link": "https://stackoverflow.com/users/887128/max"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 85, "favorite_count": 0, "closed_date": 1538102344, "answer_count": 0, "score": 1, "last_activity_date": 1538102394, "creation_date": 1538100460, "last_edit_date": 1538102110, "question_id": 52547329, "link": "https://stackoverflow.com/questions/52547329/best-way-to-implement-union-type-container", "closed_reason": "Duplicate", "title": "Best way to implement union type container", "body": "<p>I have a bunch of types:</p>\n\n<pre><code>struct A { cool_thing: &amp;'static str }\nstruct B {}\nstruct C {}\nstruct D {}\n</code></pre>\n\n<p>I also have a way of identifying the types, e.g.</p>\n\n<pre><code>trait Name {\n    fn name(&amp;self) -&gt; &amp;'static str;\n}\n\nimpl Name for A {\n    fn name(&amp;self) -&gt; &amp;'static str { return \"A\"; }\n}\n// etc.\n</code></pre>\n\n<p>Given the above, what is the best way to implement a container for these types? For instance, I want something like this:</p>\n\n<pre><code>struct Container {\n    item: Box&lt;Name&gt;,\n}\n\nimpl Container {\n    fn new(item: Box&lt;Name&gt;) -&gt; Container {\n        return Container { item: item };\n    }\n\n    fn get_item(&amp;self) -&gt; &amp;Name {\n        return self.item.as_ref();\n    }\n}\n</code></pre>\n\n<p>Later, I'd like to use this container:</p>\n\n<pre><code>let a = A { cool_thing: \"Yah!\" };\nlet container = Container::new(Box::new(a));\nlet thing = container.get_item();\nif thing.name == \"A\" {\n    // How to access cool_thing here?\n}\n</code></pre>\n\n<p>How can this be accomplished? </p>\n\n<p>I'd like <code>Container</code> to be able to store objects without depending on them explicitly. This is to avoid possible circular dependencies where an object might want to consume a <code>Container</code> as well as populate it with some local type (specifically I'm trying to implement the \"entity\" of an <a href=\"https://en.wikipedia.org/wiki/Entity%E2%80%93component%E2%80%93system\" rel=\"nofollow noreferrer\">entity-component-system</a>. The dependency issue makes using something like an enum inappropriate. </p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1538090967, "post_id": 52546262, "comment_id": 92032422, "body": "<code>?Send</code> \u2014 it is <a href=\"https://stackoverflow.com/questions/30333607/what-does-the-question-mark-mean-in-a-type-parameter-bound\">not possible to define such a bound</a>; you may only say <code>?Sized</code>."}, {"owner": {"reputation": 7260, "user_id": 86432, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/ac0f5806a57ad801fec9f5619763f667?s=128&d=identicon&r=PG", "display_name": "masonk", "link": "https://stackoverflow.com/users/86432/masonk"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1538091340, "post_id": 52546262, "comment_id": 92032506, "body": "Good to know. I reworded for clarity."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1538131110, "post_id": 52546262, "comment_id": 92045761, "body": "The error message is bad \u2013 see also <a href=\"https://github.com/rust-lang/rust/issues/54560\" rel=\"nofollow noreferrer\">this bug report</a>"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1538096729, "post_id": 52546611, "comment_id": 92033443, "body": "<i>A static in a generic function will not generate one static for each <code>T</code></i> \u2014 any reason you know of for why? I&#39;m asking around, but I can&#39;t figure out any specific reason; it seems like it could be a form of monomorphization."}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1538105705, "post_id": 52546611, "comment_id": 92035101, "body": "When everything is built statically, that could work, but if the application uses dynamically linked libraries, there could be multiple instantiations of the same variable. For example, crate A defines a generic <code>static</code> but doesn&#39;t instantiate it, then crates B and C both instantiate it for the same type. For functions, this is generally not a problem because we (often) don&#39;t care that there are two identical functions."}, {"owner": {"reputation": 7260, "user_id": 86432, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/ac0f5806a57ad801fec9f5619763f667?s=128&d=identicon&r=PG", "display_name": "masonk", "link": "https://stackoverflow.com/users/86432/masonk"}, "edited": false, "score": 0, "creation_date": 1538114681, "post_id": 52546611, "comment_id": 92037481, "body": "Thanks for this fantastic answer! Much appreciated."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1538151722, "post_id": 52546611, "comment_id": 92057176, "body": "@FrancisGagn&#233; won&#39;t that happen in the &quot;normal&quot; case as well? Won&#39;t two dylibs that each define a <code>static FOO</code> (even from the same shared crate) have distinct memory addresses?"}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1538251383, "post_id": 52546611, "comment_id": 92080648, "body": "@Shepmaster If you try to build a binary with a mix of static and dynamic libs, you end up with errors like <code>error: cannot satisfy dependencies so `std` only shows up once</code>, which means that in practice, I don&#39;t think you can have two dylibs that contain the same crate (that shared crate must be a dylib too)."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 5, "last_activity_date": 1538093285, "creation_date": 1538093285, "answer_id": 52546611, "question_id": 52546262, "link": "https://stackoverflow.com/questions/52546262/use-of-type-variable-from-outer-function-in-a-closure-that-creates-a-thread-lo/52546611#52546611", "title": "&quot;Use of type variable from outer function&quot; in a closure that creates a thread-local variable of that type", "body": "<p>It has nothing to do with the closure and everything to do with <code>static</code>. Here's a smaller example that produces the same error:</p>\n\n<pre><code>fn foo&lt;T&gt;() {\n    static BAR: Option&lt;T&gt; = None;\n}\n</code></pre>\n\n<p>A <code>static</code> in a generic function will not generate one static for each <code>T</code>; there is only one <code>static</code> variable. Take the following program, for example:</p>\n\n<pre><code>fn foo&lt;T&gt;() {\n    static mut COUNTER: i32 = 0;\n    unsafe {\n        COUNTER += 1;\n        println!(\"{}\", COUNTER);\n    }\n}\n\nfn main() {\n    foo::&lt;i32&gt;();\n    foo::&lt;u64&gt;();\n}\n</code></pre>\n\n<p>This prints:</p>\n\n<pre><code>1\n2\n</code></pre>\n\n<p>Here, <code>foo::&lt;i32&gt;</code> and <code>foo::&lt;u64&gt;</code> both share the same counter. Considering this, it doesn't make sense to define a single static whose type depends on the type parameter of its enclosing generic function, since that function can be instantiated multiple times.</p>\n\n<p>Unfortunately, there's no way to define a \"generic <code>static</code>\" that is instantiated for each <code>T</code> that is used. What you can do instead is define some sort of typemap (i.e. a map from <code>TypeId</code> to <code>Box&lt;Any&gt;</code>) and perform a dynamic lookup in that map.</p>\n"}], "owner": {"reputation": 7260, "user_id": 86432, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/ac0f5806a57ad801fec9f5619763f667?s=128&d=identicon&r=PG", "display_name": "masonk", "link": "https://stackoverflow.com/users/86432/masonk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 358, "favorite_count": 0, "accepted_answer_id": 52546611, "answer_count": 1, "score": 1, "last_activity_date": 1538093285, "creation_date": 1538089992, "last_edit_date": 1538091439, "question_id": 52546262, "link": "https://stackoverflow.com/questions/52546262/use-of-type-variable-from-outer-function-in-a-closure-that-creates-a-thread-lo", "title": "&quot;Use of type variable from outer function&quot; in a closure that creates a thread-local variable of that type", "body": "<p>I'm trying to build a threadpool where each thread in the pool has a <code>thread_local!</code>  type which can be used by tasks on that worker thread.  (<code>T</code> in the example below). The key purpose of the class is that the resource <code>T</code> need not be <code>Send</code>, since it will be constructed locally on each worker thread by a factory method which <em>is</em> <code>Send</code>.</p>\n\n<p>My use case is to do work on a pool of <code>!Send</code> db connections, but I tried to make it generic over the resource type <code>T</code>.</p>\n\n<pre><code>extern crate threadpool;\n\nuse std::sync::mpsc::channel;\nuse std::sync::Arc;\n\n// A RemoteResource is a threadpool that maintains a threadlocal ?Send resource\n// on every pool in the thread, which tasks sent to the pool can reference.\n// It can be used e.g., to manage a pool of database connections.\nstruct RemoteResource&lt;T, M&gt;\nwhere\n    M: 'static + Send + Sync + Fn() -&gt; T,\n{\n    pool: threadpool::ThreadPool,\n    make_resource: Arc&lt;M&gt;,\n}\n\nimpl&lt;T, M&gt; RemoteResource&lt;T, M&gt;\nwhere\n    M: Send + Sync + Fn() -&gt; T,\n{\n    pub fn new(num_workers: usize, make_resource: M) -&gt; Self {\n        RemoteResource {\n            pool: threadpool::ThreadPool::new(num_workers),\n            make_resource: Arc::new(make_resource),\n        }\n    }\n\n    pub fn call&lt;F, R&gt;(&amp;mut self, f: F) -&gt; R\n    where\n        R: 'static + Send,\n        F: 'static + ::std::marker::Send + FnOnce(&amp;mut T) -&gt; R,\n    {\n        let (tx, rx) = channel();\n        let maker = self.make_resource.clone();\n        self.pool.execute(move || {\n            use std::cell::RefCell;\n            thread_local!{\n                static UNSENDABLE_TYPE: RefCell&lt;Option&lt;T&gt;&gt; = RefCell::new(None)\n            }\n            UNSENDABLE_TYPE.with(|it| {\n                let mut mine = it.borrow_mut();\n                if mine.is_none() {\n                    *mine = Some(maker());\n                }\n                if let Some(ref mut mine) = *mine {\n                    let res = f(mine);\n                    tx.send(res).unwrap();\n                    return ();\n                }\n                unreachable!()\n            });\n        });\n        rx.recv().unwrap()\n    }\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?gist=c84de241dc0fc9f1fd9c007e53b68e9d&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Playground</a>)</p>\n\n<p>Unfortunately I can't get my code to typecheck when I abstract over <code>T</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0401]: can't use type parameters from outer function\n  --&gt; src/lib.rs:38:56\n   |\n17 | impl&lt;T, M&gt; RemoteResource&lt;T, M&gt;\n   |      - type variable from outer function\n...\n28 |     pub fn call&lt;F, R&gt;(&amp;mut self, f: F) -&gt; R\n   |            ---- try adding a local type parameter in this method instead\n...\n38 |                 static UNSENDABLE_TYPE: RefCell&lt;Option&lt;T&gt;&gt; = RefCell::new(None)\n   |                                                        ^ use of type variable from outer function\n</code></pre>\n\n<p>I tried to resolve this using the suggestions in the Rust Compiler Error Index, but \"copying the type over\" doesn't work. If if \"copy\" <code>T</code> into <code>call</code>, then I get a \"shadowed type variable\" error. If I introduce a new type <code>U</code>, then I get a very confusing E401 again, but this time suggesting that I try to add a type parameter to the type parameters on <code>call</code>, exactly where I've actually already added it. This second thing looks like a bug in the compiler to me. (If you're curious about that, <a href=\"https://play.rust-lang.org/?gist=c6b32c3f67fc6bdc20bfb1a1f51058e0&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">here's the playground</a>).</p>\n\n<p>Is it possible to get this to typecheck? If not, why not?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 28990, "user_id": 1114966, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/af8712b05e5cfb862323a07c83749054?s=128&d=identicon&r=PG", "display_name": "squiguy", "link": "https://stackoverflow.com/users/1114966/squiguy"}, "edited": false, "score": 0, "creation_date": 1538088835, "post_id": 52546048, "comment_id": 92031989, "body": "I think <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.get\" rel=\"nofollow noreferrer\"><code>Vec::get</code></a> will do what you want."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1538091688, "post_id": 52546048, "comment_id": 92032579, "body": "Please define what <b>efficiently</b> means to you in this case. Asking &quot;do I want to explore&quot; is about as opinion-based as a question could be. Opinion-based questions are off-topic for Stack Overflow."}, {"owner": {"reputation": 75, "user_id": 3760442, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63bb20baa8e3f7e7915f102d88691494?s=128&d=identicon&r=PG&f=1", "display_name": "sysarcher", "link": "https://stackoverflow.com/users/3760442/sysarcher"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1538121645, "post_id": 52546048, "comment_id": 92040603, "body": "@Shepmaster I&#39;m learning the language and wanted to avoid <code>.clone()</code> that I&#39;ve gotten used to in some of these cases. You&#39;re right &#39;Do I want...&#39; sound like an opinion but it was an edit to the original question."}], "answers": [{"comments": [{"owner": {"reputation": 75, "user_id": 3760442, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63bb20baa8e3f7e7915f102d88691494?s=128&d=identicon&r=PG&f=1", "display_name": "sysarcher", "link": "https://stackoverflow.com/users/3760442/sysarcher"}, "edited": false, "score": 0, "creation_date": 1538090117, "post_id": 52546225, "comment_id": 92032270, "body": "thanks for the answer! However, do you have a way to do the conversion from <code>Vec&lt;String&gt;</code> returned by <code>std::env::args().collect()</code> to an array of <code>&amp;str</code> (as in your, and my examples)?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 75, "user_id": 3760442, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63bb20baa8e3f7e7915f102d88691494?s=128&d=identicon&r=PG&f=1", "display_name": "sysarcher", "link": "https://stackoverflow.com/users/3760442/sysarcher"}, "edited": false, "score": 1, "creation_date": 1538091795, "post_id": 52546225, "comment_id": 92032600, "body": "@sysarcher <a href=\"https://stackoverflow.com/q/25383488/155423\">How to match a String against string literals in Rust?</a>; <a href=\"https://stackoverflow.com/q/39785597/155423\">How do I get a slice of a Vec&lt;T&gt; in Rust?</a>; <a href=\"https://stackoverflow.com/q/33216514/155423\">Convert Vec&lt;String&gt; to Vec&lt;&amp;str&gt;</a>."}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 3, "last_activity_date": 1578073857, "last_edit_date": 1578073857, "creation_date": 1538089640, "answer_id": 52546225, "question_id": 52546048, "link": "https://stackoverflow.com/questions/52546048/can-a-slice-pattern-be-used-to-parse-command-line-arguments-without-cloning/52546225#52546225", "title": "Can a slice pattern be used to parse command line arguments without cloning?", "body": "<p>As of 1.40, there is no stable syntax for \"the rest\". There is such a syntax in nightly however:</p>\n\n<pre><code>#![feature(slice_patterns)]\n\nfn main() {\n    let args = [\"foo\", \"bar\"];\n    match args {\n        [\"run\", rest_of_commands @ ..] =&gt; println!(\"{:?}\", rest_of_commands),\n        _ =&gt; println!(\"usage: run &lt;your-command&gt;\"),\n    }\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=56c49bba2518d115b65d4370f9152197\" rel=\"nofollow noreferrer\">Permalink to the playground</a>)</p>\n\n<p>The syntax <code>identifier @ ..</code> to mean \"the rest\" <a href=\"https://github.com/rust-lang/rust/issues/62254\" rel=\"nofollow noreferrer\">is not finalized yet, and might changed in the future</a>.</p>\n"}], "owner": {"reputation": 75, "user_id": 3760442, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63bb20baa8e3f7e7915f102d88691494?s=128&d=identicon&r=PG&f=1", "display_name": "sysarcher", "link": "https://stackoverflow.com/users/3760442/sysarcher"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 258, "favorite_count": 0, "accepted_answer_id": 52546225, "answer_count": 1, "score": 1, "last_activity_date": 1578073857, "creation_date": 1538088137, "last_edit_date": 1538144645, "question_id": 52546048, "link": "https://stackoverflow.com/questions/52546048/can-a-slice-pattern-be-used-to-parse-command-line-arguments-without-cloning", "title": "Can a slice pattern be used to parse command line arguments without cloning?", "body": "<p>Can the <a href=\"https://rust-lang-nursery.github.io/edition-guide/rust-2018/slice-patterns.html\" rel=\"nofollow noreferrer\">slice pattern in Rust</a> be used to parse command line arguments?</p>\n\n<p>I capture the arguments as: <code>let args: Vec&lt;String&gt; = std::env::args().skip(1).collect();</code></p>\n\n<p>I'm thinking something like this, which doesn't compile:</p>\n\n<pre><code>// example usage: progname run bash ls -la\nmatch args {\n    [\"run\", rest_of_commands[..]] =&gt; println!(\"{:?}\", rest_of_commands),\n    _ =&gt; println!(\"usage: run &lt;your-command&gt;\"),\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 28990, "user_id": 1114966, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/af8712b05e5cfb862323a07c83749054?s=128&d=identicon&r=PG", "display_name": "squiguy", "link": "https://stackoverflow.com/users/1114966/squiguy"}, "edited": false, "score": 1, "creation_date": 1538086081, "post_id": 52545734, "comment_id": 92031360, "body": "What&#39;s the reasoning for not just using a boolean since you want to cast to it?"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1538086172, "post_id": 52545734, "comment_id": 92031379, "body": "&quot;but now I again have to cast the value to bool all the time&quot;, well, that&#39;s just how Rusts enumerations work, and it has nothing to do with booleans: <a href=\"https://play.rust-lang.org/?gist=ded9c99eae954aee741a4808474706b4&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 1324, "user_id": 6800156, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/144bd2330b7c506ab60c6f9e68250fa0?s=128&d=identicon&r=PG&f=1", "display_name": "Artemiy Rodionov", "link": "https://stackoverflow.com/users/6800156/artemiy-rodionov"}, "edited": false, "score": 0, "creation_date": 1538086678, "post_id": 52545734, "comment_id": 92031505, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/36928569/enums-with-constant-values-in-rust\">Enums with constant values in Rust</a>"}, {"owner": {"reputation": 1324, "user_id": 6800156, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/144bd2330b7c506ab60c6f9e68250fa0?s=128&d=identicon&r=PG&f=1", "display_name": "Artemiy Rodionov", "link": "https://stackoverflow.com/users/6800156/artemiy-rodionov"}, "edited": false, "score": 0, "creation_date": 1538087339, "post_id": 52545734, "comment_id": 92031667, "body": "<a href=\"https://play.rust-lang.org/?gist=1ec26f17ba8a9e4980d03a6c44a9207e&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 4, "creation_date": 1538088815, "post_id": 52545734, "comment_id": 92031983, "body": "Can you explain why you want an enum that is not a bool, yet use it like a bool?"}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 1, "creation_date": 1538094025, "post_id": 52545734, "comment_id": 92033021, "body": "You don&#39;t need to specify <code>#[repr(u8)]</code> to get your enum represented as a single byte; the compiler already does that if the discriminants are in bounds, whether the discriminants are explicit or implicit."}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1538094109, "post_id": 52545734, "comment_id": 92033033, "body": "&quot;now I again have to cast the value to <code>bool</code> all the time&quot; If these were integers instead, you&#39;d still have to cast them, so it&#39;s not a problem specific to <code>bool</code>."}, {"owner": {"reputation": 8075, "user_id": 2169853, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/68b89009f4066d3e1adbe72d4329c8d3?s=128&d=identicon&r=PG", "display_name": "Jens", "link": "https://stackoverflow.com/users/2169853/jens"}, "reply_to_user": {"reputation": 28990, "user_id": 1114966, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/af8712b05e5cfb862323a07c83749054?s=128&d=identicon&r=PG", "display_name": "squiguy", "link": "https://stackoverflow.com/users/1114966/squiguy"}, "edited": false, "score": 0, "creation_date": 1538112990, "post_id": 52545734, "comment_id": 92036962, "body": "@squiguy  I&#39;ve edited the question. I don&#39;t want to cast it all the time, just when it is explicitly needed. That will probably only be the case when serializing/deserializing the header and the enum will be used all the time. That is the whole point of the enum anyway."}, {"owner": {"reputation": 8075, "user_id": 2169853, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/68b89009f4066d3e1adbe72d4329c8d3?s=128&d=identicon&r=PG", "display_name": "Jens", "link": "https://stackoverflow.com/users/2169853/jens"}, "reply_to_user": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1538113101, "post_id": 52545734, "comment_id": 92036992, "body": "@SebastianRedl The point is that I don&#39;t want to use it like a bool. I want an enum that has two possible values, and when needed gives me the representation value that happens to be defined as true or false."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1538128298, "post_id": 52545734, "comment_id": 92044172, "body": "Probably relevant guideline: <a href=\"https://rust-lang-nursery.github.io/api-guidelines/type-safety.html#c-bitflag\" rel=\"nofollow noreferrer\">C-BITFLAG</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1538144491, "post_id": 52545734, "comment_id": 92053267, "body": "These two statements appear to be at odds: &quot;The reason I want to use an enum instead of two constants is that the flag is not an enum and I don&#39;t want to mix normal bools and the flag.&quot; and &quot;It looks like I have to use <code>u8</code> as the underlying type and then always cast the value into <code>bool</code> [...] This compiles, but seems overly complicated.&quot; Do you want to be able to assign a <code>bool</code> to a <code>Flag</code> or not? If putting <code>as bool</code> is &quot;overly complicated&quot;, then how could you remove that without making it possible to accidentally mix <code>Flag</code>s and <code>bool</code>s?"}, {"owner": {"reputation": 8075, "user_id": 2169853, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/68b89009f4066d3e1adbe72d4329c8d3?s=128&d=identicon&r=PG", "display_name": "Jens", "link": "https://stackoverflow.com/users/2169853/jens"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1538159753, "post_id": 52545734, "comment_id": 92060509, "body": "@trentcl The statements are add odds because there was a little mistake in the first one. It should be &quot;that the flag is not an bool&quot;. I&#39;ve corrected it. I came to the conclusion that using <code>as bool</code> actually describes pretty much the intention of converting the flag to (or from) <code>bool</code> when needed. However, I don&#39;t like the fact that I have to assign numeric values which are then automatically converted to <code>bool</code> due to the fact that the enum is restricted. I think implementing <code>From&lt;Flag&gt; for bool</code> as suggested in the answer is a more or less literal translation of my intention."}, {"owner": {"reputation": 8075, "user_id": 2169853, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/68b89009f4066d3e1adbe72d4329c8d3?s=128&d=identicon&r=PG", "display_name": "Jens", "link": "https://stackoverflow.com/users/2169853/jens"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1538159805, "post_id": 52545734, "comment_id": 92060531, "body": "@E_net4 Thanks for the hint to look into <code>C-BITLFAG</code>. It will certainly be useful."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1538160027, "post_id": 52545734, "comment_id": 92060616, "body": "I&#39;m (pleasantly) surprised that <code>E2::ONE as bool</code> works at all; I would have expected to have to write <code>E2::ONE as u8 as bool</code> or something."}], "answers": [{"comments": [{"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 0, "creation_date": 1538129142, "post_id": 52546542, "comment_id": 92044654, "body": "Minor nitpick: You say &quot;You can compare enums directly as well as matching on them&quot; and then provide two examples of matching on them rather than a comparison and a match. I&#39;d change the first example to a comparison."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 0, "creation_date": 1538140044, "post_id": 52546542, "comment_id": 92050608, "body": "@Cubic I really had meant to just link to the existing Q&amp;A for that bit. Thanks for reminding me!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1538150732, "last_edit_date": 1538150732, "creation_date": 1538092714, "answer_id": 52546542, "question_id": 52545734, "link": "https://stackoverflow.com/questions/52545734/is-there-a-way-to-use-a-boolean-as-an-underlying-type-for-an-enum/52546542#52546542", "title": "Is there a way to use a boolean as an underlying type for an enum?", "body": "<p>No, you cannot use a <code>bool</code> as the underlying representation of an enum.</p>\n\n<p>Instead, create constants:</p>\n\n<pre><code>const ONE: bool = true;\nconst TWO: bool = false;\n</code></pre>\n\n<p>You can also implement a method that converts the enum to a boolean:</p>\n\n<pre><code>enum Flag {\n    One,\n    Two,\n}\n\nimpl From&lt;Flag&gt; for bool {\n    fn from(f: Flag) -&gt; bool {\n        match f {\n            Flag::One =&gt; true,\n            Flag::Two =&gt; false,\n        }\n    }\n}\n</code></pre>\n\n<p>Note that idiomatic Rust style uses <code>UpperCamelCase</code> for enum variants, and <code>SHOUTING_SNAKE_CASE</code> for constants. </p>\n\n<p>I agree with commenters that it's strange to want to use an enum as a boolean. You can <a href=\"https://stackoverflow.com/q/36297412/155423\">compare enums for equality</a> or match on them:</p>\n\n<pre><code>if let Flag::One = flag {\n    println!(\"something\");\n} else {\n    println!(\"something else\");\n}\n</code></pre>\n\n\n\n<pre><code>match flag {\n    Flag::One =&gt; println!(\"something\"),\n    Flag::Two =&gt; println!(\"something else\"),\n}\n</code></pre>\n\n<p>In case that you are worried about size usage, note that a two-value enum (up to a 256-value enum) with no members is the same size as a boolean:</p>\n\n<pre><code>enum Flag {\n    One,\n    Two,\n}\n\nfn main() {\n    use std::mem;\n    assert_eq!(mem::size_of::&lt;Flag&gt;(), mem::size_of::&lt;bool&gt;());\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/33354058/155423\">How do I get the integer value of an enum?</a></li>\n<li><a href=\"https://stackoverflow.com/q/31358826/155423\">How do I convert an enum reference to a number?</a></li>\n<li><a href=\"https://stackoverflow.com/q/25507320/155423\">How to specify the representation type for an enum in Rust to interface with C++?</a></li>\n<li><a href=\"https://stackoverflow.com/q/36297412/155423\">How to implement PartialEq for an enum?</a></li>\n<li><a href=\"https://stackoverflow.com/q/25576748/155423\">How to compare enum without pattern matching</a></li>\n</ul>\n"}], "owner": {"reputation": 8075, "user_id": 2169853, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/68b89009f4066d3e1adbe72d4329c8d3?s=128&d=identicon&r=PG", "display_name": "Jens", "link": "https://stackoverflow.com/users/2169853/jens"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1341, "favorite_count": 0, "accepted_answer_id": 52546542, "answer_count": 1, "score": 2, "last_activity_date": 1538159492, "creation_date": 1538085812, "last_edit_date": 1538159492, "question_id": 52545734, "link": "https://stackoverflow.com/questions/52545734/is-there-a-way-to-use-a-boolean-as-an-underlying-type-for-an-enum", "title": "Is there a way to use a boolean as an underlying type for an enum?", "body": "<p>I decided to implement a protocol which uses a couple of flags, so I started to define <code>enum</code>s for the flags. However, when I want to define a flag that has two values which can be <code>true</code> or <code>false</code> I get an error message:</p>\n\n<pre><code>// The protocol definition says that the flag \n// can have two values true or false, so I could just use \n// plain bool, but I want another name for true and false.\nenum Flag {\n    ONE = true,\n    TWO = false,\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; src/lib.rs:5:11\n  |\n5 |     ONE = true,\n  |           ^^^^ expected isize, found bool\n\nerror[E0308]: mismatched types\n --&gt; src/lib.rs:6:11\n  |\n6 |     TWO = false,\n  |           ^^^^^ expected isize, found bool\n</code></pre>\n\n<p>The reason I want to use an enum instead of two constants is that the flag is not an bool. It is flag with representation value true or false, but I don't want to mix normal <code>bool</code>s and flag. If I used <code>bool</code> constants, I could pass the flag value to every function that takes a <code>bool</code> as argument, or use them in expressions as <code>bool</code>, e.g.</p>\n\n<pre><code>if ONE {\n}\n\nfn some_function_with_a_flag(b: bool);\n// I don't want this!\nsome_function_with_a_flag(ONE);\n</code></pre>\n\n<p>Using an enum instead of bool constants also prevents some more errors when using the flag as a struct member. There are more flags defined in the same way, so when I just use plain <code>bool</code>s and constants I will have a struct like</p>\n\n<pre><code>struct Header {\n    flag1: bool,\n    flag2: bool,\n    flag3: bool,\n}\n</code></pre>\n\n<p>The compiler will accept code where the flag values are switched:</p>\n\n<pre><code>h = Header { flag3: ONE, flag1: TWO, flag2: ONE };\n</code></pre>\n\n<p>That is not possible when each flag is its own type (alias for <code>bool</code>).</p>\n\n<p>The point of defining the enum with values <code>true</code> and <code>false</code> is just that the protocol defines it that way. In my code, I will probably only use the boolean value of the flags when data is packed to be serialized (it is part of the data header).</p>\n\n<p>Ok, the compiler always assumes that the underlying type is <code>isize</code>. It could derive it from the values, but let's define it</p>\n\n<pre><code>#[repr(bool)]\nenum E1 {\n    ONE = true,\n    TWO = false,\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0552]: unrecognized representation hint\n --&gt; src/lib.rs:1:8\n  |\n1 | #[repr(bool)]\n  |        ^^^^\n</code></pre>\n\n<p>It looks like I have to use <code>u8</code> as the underlying type and then always cast the value into <code>bool</code></p>\n\n<pre><code>#[repr(u8)]\nenum E2 {\n    ONE = 1,\n    TWO = 0,\n}\n\nlet x = E2::ONE as bool;\n</code></pre>\n\n<p>This compiles, but seems overly complicated. Is there a better way to define an <code>enum</code> with <code>bool</code> values? Is there an idiom for a type alias of <code>bool</code> where I can specify the value? I could just do</p>\n\n<pre><code>enum Flag {\n    TWO, \n    ONE,\n}\n</code></pre>\n\n<p>but now I again have to cast the value to <code>bool</code> all the time, and the order of definition looks unnatural.</p>\n\n<p>Since the bool value will only be used when reading/writing the header I will just put the conversion into the corresponding functions and keep the rest of the program free from implementation details.</p>\n"}, {"tags": ["rust", "borrow-checker", "borrowing", "lifetime-scoping"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1538082333, "post_id": 52544921, "comment_id": 92030121, "body": "What do you want <code>self.data</code> to be after <code>match_me</code> is called?"}, {"owner": {"reputation": 3, "user_id": 2231289, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cc8f5c7bd239d4924362bf55c63f922c?s=128&d=identicon&r=PG", "display_name": "Robbie McKinstry", "link": "https://stackoverflow.com/users/2231289/robbie-mckinstry"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1538156057, "post_id": 52544921, "comment_id": 92059026, "body": "I don&#39;t really care what the value of <code>self.data</code> is after its matched. I only need to extra the value once. <code>self</code> will be dropped immediately after <code>match_me</code> is called."}], "answers": [{"comments": [{"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 1, "creation_date": 1538088696, "post_id": 52545583, "comment_id": 92031959, "body": "Option 4: he wants an owned return value and could just clone the member string."}, {"owner": {"reputation": 2673, "user_id": 7274990, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6819319104c8dbd5f1612d86ea8d9216?s=128&d=identicon&r=PG&f=1", "display_name": "Calculator", "link": "https://stackoverflow.com/users/7274990/calculator"}, "edited": false, "score": 0, "creation_date": 1538089108, "post_id": 52545583, "comment_id": 92032047, "body": "Option 2: If the immutable <code>self</code> reference is a hard constraint, he could still use interior mutability with <code>RefCell&lt;Option&lt;String&gt;&gt;</code> and <code>self.data.borrow_mut().take()</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1538186508, "post_id": 52545583, "comment_id": 92067077, "body": "Option 5: take <code>self</code> by value."}, {"owner": {"reputation": 3, "user_id": 2231289, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cc8f5c7bd239d4924362bf55c63f922c?s=128&d=identicon&r=PG", "display_name": "Robbie McKinstry", "link": "https://stackoverflow.com/users/2231289/robbie-mckinstry"}, "edited": false, "score": 0, "creation_date": 1538188980, "post_id": 52545583, "comment_id": 92067359, "body": "I went with Option 2. I realized immutable <code>self</code> wasn&#39;t a hard constraint. I should have made it clear that String was just an example data type for the sake of example. Thanks for your help! I definitely appreciate it!"}], "tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 4, "last_activity_date": 1538084744, "creation_date": 1538084744, "answer_id": 52545583, "question_id": 52544921, "link": "https://stackoverflow.com/questions/52544921/locally-owned-reference-considered-borrowed/52545583#52545583", "title": "Locally owned reference considered borrowed", "body": "<p>It is unclear to me what you are trying to achieve, but I can offer a few options that work.</p>\n\n<ol>\n<li><p>If you only want to return a reference to the string without changing anything in <code>Cell</code>, you should return <code>&amp;str</code> rather than <code>String</code> from <code>match_me()</code>.  Apart from the return type, you only need minor changes to <code>match_me()</code> in your first example:</p>\n\n<pre><code>fn match_me(&amp;self) -&gt; &amp;str {\n    match &amp;self.data {\n        Some(x) =&gt; x,\n        None =&gt; \"match failed\",\n    }\n}\n</code></pre>\n\n<p>The rest of your code can remain unchanged.</p></li>\n<li><p>If you want to move the string out of your structure, you need to receive <code>self</code> as mutable reference:</p>\n\n<pre><code>fn match_me(&amp;mut self) -&gt; String {\n    match self.data.take() {\n        Some(x) =&gt; x,\n        None =&gt; \"match failed\".to_owned(),\n    }\n}\n</code></pre>\n\n<p>This will leave a <code>None</code> in <code>self.data</code> after calling the function, since we are moving the string out and transferring ownership back to the caller.</p></li>\n<li><p>And finally, if for some reason you really need shared ownership of the string, you can also use a reference-counted pointer:</p>\n\n<pre><code>struct Cell {\n    data: Option&lt;Rc&lt;String&gt;&gt;,\n}\n\nimpl Cell {\n    fn match_me(&amp;self) -&gt; Rc&lt;String&gt; {\n        match &amp;self.data {\n            Some(x) =&gt; x.clone(),\n            None =&gt; Rc::new(\"match failed\".to_owned()),\n        }\n    }\n}\n</code></pre>\n\n<p>This is a lot more uncommon than the other options, and nothing in your question hints that you actually need this, so I'm only including this for completeness.</p></li>\n</ol>\n\n<p>My best guess is that you actually want the first option.</p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1538090589, "post_id": 52545738, "comment_id": 92032356, "body": "<i>return <code>&amp;String</code></i> \u2014 this is <a href=\"https://stackoverflow.com/q/40006219/155423\">99.99% pointless</a>."}, {"owner": {"reputation": 1324, "user_id": 6800156, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/144bd2330b7c506ab60c6f9e68250fa0?s=128&d=identicon&r=PG&f=1", "display_name": "Artemiy Rodionov", "link": "https://stackoverflow.com/users/6800156/artemiy-rodionov"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1538098757, "post_id": 52545738, "comment_id": 92033825, "body": "It seems that this can be helpful for 0.01% cases, so I will leave this answer and next time i will prefer the comment for this"}], "tags": [], "owner": {"reputation": 1324, "user_id": 6800156, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/144bd2330b7c506ab60c6f9e68250fa0?s=128&d=identicon&r=PG&f=1", "display_name": "Artemiy Rodionov", "link": "https://stackoverflow.com/users/6800156/artemiy-rodionov"}, "is_accepted": false, "score": 0, "last_activity_date": 1538085819, "creation_date": 1538085819, "answer_id": 52545738, "question_id": 52544921, "link": "https://stackoverflow.com/questions/52544921/locally-owned-reference-considered-borrowed/52545738#52545738", "title": "Locally owned reference considered borrowed", "body": "<p>I want to extend the answer of Sven Marnach and propose an another one option if you want to return <code>&amp;String</code> and avoid <code>clone</code></p>\n\n<pre><code>impl Cell {\n    // it is better to use `Result` type in case when an error may be occurred\n    fn match_me(&amp;self) -&gt; Result&lt;&amp;String, &amp;'static str&gt; {\n        match self.data {\n            // `ref` provides to bind a reference to a variable\n            // cel: &amp;String \n            Some(ref cel) =&gt; Ok(cel),\n            None =&gt; Err(\"match failed\"),\n        }\n    }\n}\n\nfn main() {\n    ...\n    // add unwrap to get a value\n    let result = my_cell.match_me().unwrap();\n    ...\n}\n</code></pre>\n"}], "owner": {"reputation": 3, "user_id": 2231289, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cc8f5c7bd239d4924362bf55c63f922c?s=128&d=identicon&r=PG", "display_name": "Robbie McKinstry", "link": "https://stackoverflow.com/users/2231289/robbie-mckinstry"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 82, "favorite_count": 0, "accepted_answer_id": 52545583, "answer_count": 2, "score": 0, "last_activity_date": 1538085819, "creation_date": 1538081389, "last_edit_date": 1538082283, "question_id": 52544921, "link": "https://stackoverflow.com/questions/52544921/locally-owned-reference-considered-borrowed", "title": "Locally owned reference considered borrowed", "body": "<p>I've got a structural type with an <code>Option&lt;String&gt;</code> field. Within a method on my optional type, I want to match on that field and extract the value into the local scope. I understand that I need to convince the borrow checker not to drop the memory pointed to within my structural type; I'm not sure how to do that.</p>\n\n<p>For context, here's an obviously wrong example.</p>\n\n<pre><code>struct Cell {\n    data: Option&lt;String&gt;,\n}\n\nimpl Cell {\n    fn match_me(&amp;self) -&gt; String {\n        match self.data {\n            Some(x) =&gt; x,\n            None =&gt; \"match failed\".to_owned(),\n        }\n    }\n}\n\nfn main() {\n    let data = Some(\"hello\".to_owned());\n    let my_cell = Cell { data };\n    let result = my_cell.match_me();\n    print!(\"{}\", result);\n}\n</code></pre>\n\n<p>This program is obviously wrong because I'm moving the value inside of <code>x</code> into the local scope, which means it will be dropped when the method returns; however, since the struct outlives the method call, the value will still be accessible elsewhere, which would produce a <em>use after free</em> error.</p>\n\n<p>Since I want to use the <code>Some()</code> value without discarding it, I figured I should reference count it. Attempt two:</p>\n\n<pre><code>use std::rc::Rc;\n\nstruct Cell {\n    data: Rc&lt;Option&lt;Rc&lt;String&gt;&gt;&gt;,\n}\n\nimpl Cell {\n    fn match_me(&amp;self) -&gt; String {\n        let local = self.data.clone();\n        match *local {\n            Some(x) =&gt; *Rc::clone(&amp;x),\n            None =&gt; \"match failed\".to_owned(),\n        }\n    }\n}\n\nfn main() {\n    let data = Rc::new(Some(Rc::new(\"hello\".to_owned())));\n    let my_cell = Cell { data };\n    let result = my_cell.match_me();\n    print!(\"{}\", result);\n}\n</code></pre>\n\n<p>However, despite cloning these references, I'm still getting the borrow error. </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>   Compiling playground v0.0.1 (file:///playground)\nerror[E0507]: cannot move out of borrowed content\n  --&gt; src/main.rs:10:15\n   |\n10 |         match *local {\n   |               ^^^^^^ cannot move out of borrowed content\n11 |             Some(x) =&gt; *Rc::clone(&amp;x),\n   |                  - hint: to prevent move, use `ref x` or `ref mut x`\n\nerror[E0507]: cannot move out of borrowed content\n  --&gt; src/main.rs:11:24\n   |\n11 |             Some(x) =&gt; *Rc::clone(&amp;x),\n   |                        ^^^^^^^^^^^^^^ cannot move out of borrowed \ncontent\n</code></pre>\n\n<p>Do I really have no recourse except to <code>clone</code> the item itself?</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=77001156db1c18acf72e4b4080e1c90b&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Playground Link to the obviously wrong example.</a></p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=3ed635df8b3b660245940aa6bbfa1521&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Playground Link to a reference counted nightmare.</a></p>\n"}, {"tags": ["installation", "rust", "windows-subsystem-for-linux"], "comments": [{"owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 0, "creation_date": 1538077884, "post_id": 52542965, "comment_id": 92028154, "body": "try <code>strace</code> and see what syscall fails"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1538084518, "post_id": 52542965, "comment_id": 92030939, "body": "<a href=\"//meta.stackoverflow.com/q/285551\">Please don&#39;t post your code as an image.</a> I down voted because the same principle applies as Image of terminal output"}, {"owner": {"reputation": 509, "user_id": 6676654, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/GtxHk.jpg?s=128&g=1", "display_name": "thesdev", "link": "https://stackoverflow.com/users/6676654/thesdev"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1538129363, "post_id": 52542965, "comment_id": 92044775, "body": "@Stargateur I did it because it was lengthy. I included the more important parts of the output as text in the question though/"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1538129813, "post_id": 52542965, "comment_id": 92045032, "body": "the is no problem, question can have a lot of character in it. Image can&#39;t be copied, mobile user and low connection user will prefer download 5ko than an image of 5Mo"}, {"owner": {"reputation": 509, "user_id": 6676654, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/GtxHk.jpg?s=128&g=1", "display_name": "thesdev", "link": "https://stackoverflow.com/users/6676654/thesdev"}, "reply_to_user": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 0, "creation_date": 1538139233, "post_id": 52542965, "comment_id": 92050173, "body": "@the8472 I&#39;m not sure which part I should post but here is the last part of the output: <a href=\"https://i.postimg.cc/9fTKQmTG/Untitled.png\" rel=\"nofollow noreferrer\">![wsl-error.png</a>](<a href=\"https://postimg.cc/hJDpCq2j\" rel=\"nofollow noreferrer\">postimg.cc/hJDpCq2j</a>)"}, {"owner": {"reputation": 509, "user_id": 6676654, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/GtxHk.jpg?s=128&g=1", "display_name": "thesdev", "link": "https://stackoverflow.com/users/6676654/thesdev"}, "reply_to_user": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 0, "creation_date": 1538140788, "post_id": 52542965, "comment_id": 92051044, "body": "@the8472 perhaps this is more useful: <a href=\"https://pastebin.com/07w3Zi23\" rel=\"nofollow noreferrer\">strace-log</a>. I guess <code>stat(&quot;&#47;home&#47;thesdev&#47;.terminfo&quot;, 0x7fffd10d32c0) = -1 ENOENT (No such file or directory)</code> is where the problem starts."}], "answers": [{"tags": [], "owner": {"reputation": 26934, "user_id": 8316315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44d833a8a46fea39d7bfca1540ea9c07?s=128&d=identicon&r=PG&f=1", "display_name": "Florian Weimer", "link": "https://stackoverflow.com/users/8316315/florian-weimer"}, "is_accepted": false, "score": 5, "last_activity_date": 1538080922, "creation_date": 1538080922, "answer_id": 52544833, "question_id": 52542965, "link": "https://stackoverflow.com/questions/52542965/rust-installation-fails-on-windows-subsystem-for-linux-could-not-rename-compone/52544833#52544833", "title": "Rust installation fails on Windows Subsystem for Linux: could not rename component file", "body": "<p>Apparently, you need to close Visual Studio Code and run the command directly at the WSL prompt. The underlying issue is among the most-encountered WSL bugs:</p>\n\n<ul>\n<li><a href=\"https://github.com/Microsoft/WSL/issues/14\" rel=\"noreferrer\">npm package fails to install \"npm ERR! Error: EACCES: permission denied\"</a></li>\n<li><a href=\"https://github.com/Microsoft/WSL/issues/1956\" rel=\"noreferrer\">Unable to save file when inotify is in use (using Node)</a></li>\n<li><a href=\"https://github.com/Microsoft/WSL/issues/3395\" rel=\"noreferrer\">EACCES when renaming folder that is being watched from nodejs</a></li>\n</ul>\n\n<p>I wouldn't be surprised if virus scanners could trigger this as well, not just Visual Studio Code.</p>\n"}, {"comments": [{"owner": {"reputation": 2121, "user_id": 972463, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d3bc5ab641723f8ed45c4c4605ac7f2d?s=128&d=identicon&r=PG", "display_name": "Sergey Ushakov", "link": "https://stackoverflow.com/users/972463/sergey-ushakov"}, "edited": false, "score": 0, "creation_date": 1560834383, "post_id": 55373522, "comment_id": 99854534, "body": "Yes, this simple trick did the job for me on plain Windows 8 :)"}], "tags": [], "owner": {"reputation": 509, "user_id": 6676654, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/GtxHk.jpg?s=128&g=1", "display_name": "thesdev", "link": "https://stackoverflow.com/users/6676654/thesdev"}, "is_accepted": true, "score": 1, "last_activity_date": 1553678174, "creation_date": 1553678174, "answer_id": 55373522, "question_id": 52542965, "link": "https://stackoverflow.com/questions/52542965/rust-installation-fails-on-windows-subsystem-for-linux-could-not-rename-compone/55373522#55373522", "title": "Rust installation fails on Windows Subsystem for Linux: could not rename component file", "body": "<p>It seems that adding sudo to the start of the command does the trick.</p>\n"}, {"comments": [{"owner": {"reputation": 73, "user_id": 6345768, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/64e2ccc08a96cb309b195bbc3f505991?s=128&d=identicon&r=PG", "display_name": "Caruso33", "link": "https://stackoverflow.com/users/6345768/caruso33"}, "edited": false, "score": 0, "creation_date": 1613474501, "post_id": 56566419, "comment_id": 117080139, "body": "^ is the only solution which worked for me. I did a  <code>curl --proto &#39;=https&#39; --tlsv1.2 -sSf https:&#47;&#47;sh.rustup.rs &gt; rustinstall.sh</code> and  <code>sudo chmod +x .&#47;rustinstall.sh</code> in between"}], "tags": [], "owner": {"reputation": 1250, "user_id": 4064698, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a699fa2f813c250874b5da4592bf4e4e?s=128&d=identicon&r=PG&f=1", "display_name": "weirdev", "link": "https://stackoverflow.com/users/4064698/weirdev"}, "is_accepted": false, "score": 1, "last_activity_date": 1560357710, "last_edit_date": 1560357710, "creation_date": 1560355808, "answer_id": 56566419, "question_id": 52542965, "link": "https://stackoverflow.com/questions/52542965/rust-installation-fails-on-windows-subsystem-for-linux-could-not-rename-compone/56566419#56566419", "title": "Rust installation fails on Windows Subsystem for Linux: could not rename component file", "body": "<p>After several failed installations with the same error, I had to nuke my <code>.rustup</code> directory. I then ran the Rust installer with sudo. I recommend also temporarily turning off your antivirus protection, as that seems to cause issues.</p>\n\n<p>The entire sequence of commands:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ sudo rm -rf ./home/&lt;your_username&gt;/.rustup\n$ curl 'https://sh.rustup.rs' -sSf &gt; rustinstall.sh\n$ sudo ./rustinstall.sh -y\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 11, "user_id": 11655609, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-ZnNIbVq1UXA/AAAAAAAAAAI/AAAAAAAANaQ/vmaEfUXCYYQ/photo.jpg?sz=128", "display_name": "DG.", "link": "https://stackoverflow.com/users/11655609/dg"}, "is_accepted": false, "score": 1, "last_activity_date": 1562653547, "creation_date": 1562653547, "answer_id": 56946440, "question_id": 52542965, "link": "https://stackoverflow.com/questions/52542965/rust-installation-fails-on-windows-subsystem-for-linux-could-not-rename-compone/56946440#56946440", "title": "Rust installation fails on Windows Subsystem for Linux: could not rename component file", "body": "<p><strong>Potential solution - disable your real-time antivirus protection during install</strong> </p>\n\n<p>I had a very similar issue:</p>\n\n<blockquote>\n  <p>info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'</p>\n  \n  <p>info: latest update on 2019-07-04, rust version 1.36.0 (a53f9df32 2019-07-03)</p>\n  \n  <p>info: downloading component 'rustc'\n   91.1 MiB /  91.1 MiB (100 %) 777.6 KiB/s in  1m 30s ETA:  0s</p>\n  \n  <p>info: downloading component 'rust-std'\n   61.3 MiB /  61.3 MiB (100 %) 269.1 KiB/s in  6m  2s ETA:  0s</p>\n  \n  <p>info: downloading component 'cargo'\n    4.6 MiB /   4.6 MiB (100 %) 499.2 KiB/s in 10s ETA:  0s</p>\n  \n  <p>info: downloading component 'rust-docs'\n   11.0 MiB /  11.0 MiB (100 %) 128.8 KiB/s in  1m 24s ETA:  0s</p>\n  \n  <p>info: installing component 'rustc'\n   91.1 MiB /  91.1 MiB (100 %)   8.7 MiB/s in  9s ETA:  0s</p>\n  \n  <p>info: installing component 'rust-std'\n   61.3 MiB /  61.3 MiB (100 %)  11.4 MiB/s in  5s ETA:  0s</p>\n  \n  <p>info: installing component 'cargo'</p>\n  \n  <p>info: installing component 'rust-docs'\n   11.0 MiB /  11.0 MiB (100 %) 537.6 KiB/s in 44s ETA:  0s</p>\n  \n  <p>info: rolling back changes\n  error: could not rename component file from '/home/dg/.rustup/tmp/k_625bkits6oph6j_dir/rust-docs/share/doc/rust/html' to '/home/dg/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/share/doc/rust/html'</p>\n  \n  <p>info: caused by: Permission denied (os error 13)</p>\n</blockquote>\n\n<p>I read <a href=\"https://github.com/rust-lang/rustup.rs/issues/1540\" rel=\"nofollow noreferrer\">this thread - Installing rust-docs component on Windows 10 is very slow</a> about an issue with the unpacking of the documentation on windows. They mention the anti-virus contributes to issues with speed.</p>\n\n<p>I turned off my anti-virus real-time protection and ran the install script again, this time with no issues.</p>\n\n<blockquote>\n  <p>info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'</p>\n  \n  <p>info: latest update on 2019-07-04, rust version 1.36.0 (a53f9df32 2019-07-03)</p>\n  \n  <p>info: downloading component 'rustc'</p>\n  \n  <p>info: downloading component 'rust-std'</p>\n  \n  <p>info: downloading component 'cargo'</p>\n  \n  <p>info: downloading component 'rust-docs'</p>\n  \n  <p>info: installing component 'rustc'\n   91.1 MiB /  91.1 MiB (100 %)   9.1 MiB/s in  8s ETA:  0s</p>\n  \n  <p>info: installing component 'rust-std'\n   61.3 MiB /  61.3 MiB (100 %)  12.2 MiB/s in  5s ETA:  0s</p>\n  \n  <p>info: installing component 'cargo'</p>\n  \n  <p>info: installing component 'rust-docs'\n   11.0 MiB /  11.0 MiB (100 %) 299.2 KiB/s in 27s ETA:  0s</p>\n  \n  <p>info: default toolchain set to 'stable'</p>\n  \n  <p>stable installed - rustc 1.36.0 (a53f9df32 2019-07-03)</p>\n  \n  <p>Rust is installed now. Great!</p>\n</blockquote>\n"}, {"tags": [], "owner": {"reputation": 10770, "user_id": 852063, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/80fd1d68d0d2ae503cf5870e29fecae5?s=128&d=identicon&r=PG&f=1", "display_name": "Amani", "link": "https://stackoverflow.com/users/852063/amani"}, "is_accepted": false, "score": 0, "last_activity_date": 1597201342, "creation_date": 1597201342, "answer_id": 63369129, "question_id": 52542965, "link": "https://stackoverflow.com/questions/52542965/rust-installation-fails-on-windows-subsystem-for-linux-could-not-rename-compone/63369129#63369129", "title": "Rust installation fails on Windows Subsystem for Linux: could not rename component file", "body": "<p>For anyone on WSL 2 try this:</p>\n<pre><code>export RUSTUP_IO_THREADS=1\ncurl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n</code></pre>\n"}], "owner": {"reputation": 509, "user_id": 6676654, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/GtxHk.jpg?s=128&g=1", "display_name": "thesdev", "link": "https://stackoverflow.com/users/6676654/thesdev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2745, "favorite_count": 1, "accepted_answer_id": 55373522, "answer_count": 5, "score": 5, "last_activity_date": 1597201342, "creation_date": 1538072301, "last_edit_date": 1592644375, "question_id": 52542965, "link": "https://stackoverflow.com/questions/52542965/rust-installation-fails-on-windows-subsystem-for-linux-could-not-rename-compone", "title": "Rust installation fails on Windows Subsystem for Linux: could not rename component file", "body": "<p>I'm trying to install Rust on the Windows Subsystem for Linux (WSL) by running the following command which is provided officially <a href=\"https://www.rust-lang.org/en-US/install.html\" rel=\"nofollow noreferrer\">here</a>:</p>\n<blockquote>\n<p><code>curl https://sh.rustup.rs -sSf | sh</code></p>\n</blockquote>\n<p>I've installed Ubuntu from the Microsoft Store.</p>\n<p>The problem is that the fails with 5 similar errors:</p>\n<blockquote>\n<p>error: could not rename component file from '/home/thesdev/.rustup/tmp/glf5z1z643ehld0x_dir/bk' to '/home/thesdev/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/share/man'</p>\n<p>...</p>\n<p>error: failed to install component: 'rust-docs-x86_64-unknown-linux-gnu', detected conflict: '&quot;share/doc/rust/html&quot;'</p>\n</blockquote>\n<p><img src=\"https://i.stack.imgur.com/AQMio.png\" alt=\"Screenshot of the installation process\" /></p>\n<p>Screenshot is from VS Code. Trying it in the Ubuntu application results in the same errors.</p>\n"}, {"tags": ["windows", "visual-c++", "rust"], "comments": [{"owner": {"reputation": 117699, "user_id": 62576, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/15264f7bf48e10ce32dfa4865a13763c?s=128&d=identicon&r=PG", "display_name": "Ken White", "link": "https://stackoverflow.com/users/62576/ken-white"}, "edited": false, "score": 0, "creation_date": 1538067974, "post_id": 52541868, "comment_id": 92023763, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/12573816/what-is-an-undefined-reference-unresolved-external-symbol-error-and-how-do-i-fix\">What is an undefined reference/unresolved external symbol error and how do I fix it?</a>"}], "answers": [{"tags": [], "owner": {"reputation": 303, "user_id": 1389657, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/3550c46ac59cb7217f45e2188cc62739?s=128&d=identicon&r=PG", "display_name": "Vlad Markushin", "link": "https://stackoverflow.com/users/1389657/vlad-markushin"}, "is_accepted": true, "score": 0, "last_activity_date": 1538139532, "creation_date": 1538139532, "answer_id": 52555902, "question_id": 52541868, "link": "https://stackoverflow.com/questions/52541868/unresolved-external-symbol-aes-set-encrypt-key-when-linking-rust-code-to-borings/52555902#52555902", "title": "Unresolved external symbol AES_set_encrypt_key when linking Rust code to boringssl on Windows", "body": "<p>I had compiled my library with 32-bit version of MSVC, but Rust compiles programs with 64-bit one. That's why there was a conflict.</p>\n"}], "owner": {"reputation": 303, "user_id": 1389657, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/3550c46ac59cb7217f45e2188cc62739?s=128&d=identicon&r=PG", "display_name": "Vlad Markushin", "link": "https://stackoverflow.com/users/1389657/vlad-markushin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 173, "favorite_count": 0, "accepted_answer_id": 52555902, "answer_count": 1, "score": 0, "last_activity_date": 1538139549, "creation_date": 1538067485, "last_edit_date": 1538139549, "question_id": 52541868, "link": "https://stackoverflow.com/questions/52541868/unresolved-external-symbol-aes-set-encrypt-key-when-linking-rust-code-to-borings", "title": "Unresolved external symbol AES_set_encrypt_key when linking Rust code to boringssl on Windows", "body": "<p>I'm trying to compile my library wrapper of boringssl. I've compiled the crypto.lib file that definitely contains the symbol <code>AES_set_encrypt_key</code>, judging by the command:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>nm crypto.lib --demangle\n</code></pre>\n\n<p>Then I've generated a FFI file that declares that symbol:</p>\n\n<pre><code>use std::os::raw::{c_char, c_int, c_uchar, c_uint, c_void};\n\n#[repr(C)]\npub struct aes_key_st {\n    pub rd_key: [u32; 60usize],\n    pub rounds: c_uint,\n}\n\npub type AES_KEY = aes_key_st;\n\nextern \"C\" {\n    pub fn AES_set_encrypt_key(key: *const u8, bits: c_uint, aeskey: *mut AES_KEY) -&gt; c_int;\n    pub fn foo() -&gt; c_int;\n}\n</code></pre>\n\n<p>Here are the original C declarations:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>struct aes_key_st {\n  uint32_t rd_key[4 * (AES_MAXNR + 1)];\n  unsigned rounds;\n};\n\ntypedef struct aes_key_st AES_KEY;\n\nOPENSSL_EXPORT int AES_set_encrypt_key(const uint8_t *key, unsigned bits, AES_KEY *aeskey);\n</code></pre>\n\n<p>build.rs:</p>\n\n<pre><code>fn main() {\n    let out_dir = \"&lt;path_to_lib&gt;\"\n    println!(\"cargo:rustc-link-search=native={}\", out_dir);\n    println!(\"cargo:rustc-link-lib=static=crypto\");\n}\n</code></pre>\n\n<p>I am getting an <code>LNK2019 (unresolved external symbol)</code> error when compiling this code.</p>\n\n<p>Why is this happening?</p>\n"}, {"tags": ["generics", "rust", "closures"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1538080773, "post_id": 52539771, "comment_id": 92029455, "body": "It looks like you would need higher kinded types to express this, which currently aren&#39;t supported by rust."}], "answers": [{"comments": [{"owner": {"reputation": 14809, "user_id": 53185, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/021d0d3a0676561486d5ec92339e3bb4?s=128&d=identicon&r=PG", "display_name": "mamcx", "link": "https://stackoverflow.com/users/53185/mamcx"}, "edited": false, "score": 0, "creation_date": 1538144840, "post_id": 52550353, "comment_id": 92053442, "body": "This is as verbose or more than the normal way? If it can&#39;t collapse to just pass (A, B) -&gt; C without implement per operator then I don&#39;t see the point."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 14809, "user_id": 53185, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/021d0d3a0676561486d5ec92339e3bb4?s=128&d=identicon&r=PG", "display_name": "mamcx", "link": "https://stackoverflow.com/users/53185/mamcx"}, "edited": false, "score": 0, "creation_date": 1538146438, "post_id": 52550353, "comment_id": 92054367, "body": "@mamcx: It&#39;s definitely on the verbose side of things, and essentially boils down to Rust not supporting overloading. Honestly, at this point I would go with a custom <code>trait BinOp { fn on_i64(&amp;self, i64, i64) -&gt; i64; fn on_i32(&amp;self, i32, i32) -&gt; i32; ... }</code> (with a method for each type) and then implement it for <code>Adder</code>, <code>Muler</code>, etc..."}, {"owner": {"reputation": 2652, "user_id": 5445670, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xrwS2.png?s=128&g=1", "display_name": "Solomon Ucko", "link": "https://stackoverflow.com/users/5445670/solomon-ucko"}, "reply_to_user": {"reputation": 14809, "user_id": 53185, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/021d0d3a0676561486d5ec92339e3bb4?s=128&d=identicon&r=PG", "display_name": "mamcx", "link": "https://stackoverflow.com/users/53185/mamcx"}, "edited": false, "score": 0, "creation_date": 1590947381, "post_id": 52550353, "comment_id": 109867587, "body": "@mamcx You could probably create a <code>macro_rules!</code> macro to minimize repetition."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 1, "last_activity_date": 1538119395, "creation_date": 1538119395, "answer_id": 52550353, "question_id": 52539771, "link": "https://stackoverflow.com/questions/52539771/how-can-i-pass-a-closure-with-generics-to-a-function-without-making-that-functio/52550353#52550353", "title": "How can I pass a closure with generics to a function without making that function generic?", "body": "<p>There are essentially two distinct ways to talk about function types:</p>\n\n<ul>\n<li>pointers: <code>fn(A, B) -&gt; C</code>,</li>\n<li>traits: <code>Fn(A, B) -&gt; C</code>, <code>FnMut(A, B) -&gt; C</code>, <code>FnOnce(A, B) -&gt; C</code>.</li>\n</ul>\n\n<p>In either case, they are characterized by the arguments and result types.</p>\n\n<p>So, what are the arguments and result types of <code>apply</code>?</p>\n\n<p><strong>It depends.</strong></p>\n\n<p>From your example, we can see that it is <code>FnOnce(T, T) -&gt; T</code> for <code>T</code> in <code>[i64, i32, ...]</code>.</p>\n\n<p>This is not <em>one</em> type, this is <em>many</em> types. Therefore it needs not a single function but many functions; or perhaps a function object implementing <code>FnOnce</code> multiple times.</p>\n\n<hr>\n\n<p>The function object route is only available on nightly, and requires an awful lot of boilerplate (for which macros would help):</p>\n\n<pre><code>#![feature(fn_traits)]\n#![feature(unboxed_closures)]\n\nuse std::ops::*;\n\n#[derive(Debug, Clone, PartialEq, PartialOrd)]\npub enum Scalar {\n    I64(i64),\n    I32(i32),\n    //many many others\n}\n\npub trait TMath: Add + Mul + Sized {} //mark numerical types\n\nimpl&lt;T: Add + Mul&gt; TMath for T {}\n\nstruct Adder;\n\nimpl FnOnce&lt;(i64, i64)&gt; for Adder {\n    type Output = i64;\n    extern \"rust-call\" fn call_once(self, args: (i64, i64)) -&gt; i64 {\n        args.0 + args.1\n    }\n}\n\nimpl FnMut&lt;(i64, i64)&gt; for Adder {\n    extern \"rust-call\" fn call_mut(&amp;mut self, args: (i64, i64)) -&gt; i64 {\n        args.0 + args.1\n    }\n}\n\nimpl Fn&lt;(i64, i64)&gt; for Adder {\n    extern \"rust-call\" fn call(&amp;self, args: (i64, i64)) -&gt; i64 {\n        args.0 + args.1\n    }\n}\n\nimpl FnOnce&lt;(i32, i32)&gt; for Adder {\n    type Output = i32;\n    extern \"rust-call\" fn call_once(self, args: (i32, i32)) -&gt; i32 {\n        args.0 + args.1\n    }\n}\n\nimpl FnMut&lt;(i32, i32)&gt; for Adder {\n    extern \"rust-call\" fn call_mut(&amp;mut self, args: (i32, i32)) -&gt; i32 {\n        args.0 + args.1\n    }\n}\n\nimpl Fn&lt;(i32, i32)&gt; for Adder {\n    extern \"rust-call\" fn call(&amp;self, args: (i32, i32)) -&gt; i32  {\n        args.0 + args.1\n    }\n}\n\nfn bin_op&lt;F&gt;(apply: &amp;F, x: Scalar, y: Scalar) -&gt; Scalar\n    where\n        F: Fn(i64, i64) -&gt; i64,\n        F: Fn(i32, i32) -&gt; i32,\n{\n    match (x, y) {\n        (Scalar::I64(a), Scalar::I64(b))\n            =&gt; Scalar::I64((apply as &amp;Fn(i64, i64) -&gt; i64)(a, b)),\n        (Scalar::I32(a), Scalar::I32(b))\n            =&gt; Scalar::I32((apply as &amp;Fn(i32, i32) -&gt; i32)(a, b)),\n        _ =&gt; unreachable!(),\n    }\n}\n\nfn main() {\n    let result = bin_op(&amp;Adder, Scalar::I32(1), Scalar::I32(2));\n    println!(\"{:?}\", result);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=44b2f7d4b89bf093bda333023c29fcce&amp;version=nightly&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Prints <code>I32(3)</code>.</a></p>\n"}], "owner": {"reputation": 14809, "user_id": 53185, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/021d0d3a0676561486d5ec92339e3bb4?s=128&d=identicon&r=PG", "display_name": "mamcx", "link": "https://stackoverflow.com/users/53185/mamcx"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 484, "favorite_count": 0, "answer_count": 1, "score": 5, "last_activity_date": 1538119395, "creation_date": 1538059991, "last_edit_date": 1538061852, "question_id": 52539771, "link": "https://stackoverflow.com/questions/52539771/how-can-i-pass-a-closure-with-generics-to-a-function-without-making-that-functio", "title": "How can I pass a closure with generics to a function without making that function generic?", "body": "<p>I have a function that works with a enum to apply binary functions. This is for an interpreter:</p>\n\n<pre><code>use std::ops::*;\n\n#[derive(Debug, Clone, PartialEq, PartialOrd)]\npub enum Scalar {\n    I64(i64),\n    I32(i32),\n    //many many others\n}\n\npub trait TMath: Add + Mul + Sized {} //mark numerical types\nimpl&lt;T: Add + Mul&gt; TMath for T {}\n\nfn add&lt;T: TMath&gt;(x: T, y: T) -&gt; &lt;T as Add&gt;::Output {\n    x + y\n}\n\npub type NatBinExpr&lt;T: TMath&gt; = Fn(&amp;T, &amp;T) -&gt; T;\n</code></pre>\n\n<p>I want to do:</p>\n\n<pre><code>let result = bin_op(add, &amp;Scalar::I32(1), &amp;Scalar::I32(2));\n</code></pre>\n\n<p>but also to make it work for arbitrary binary functions:</p>\n\n<pre><code>let result = bin_op(Scalar::concat, &amp;Scalar::I32(1), &amp;Scalar::I32(2));\n</code></pre>\n\n<p>However, I haven't found a way to pass the closure without making <code>bin_op</code> generic:</p>\n\n<pre><code>fn bin_op(apply: &amp;NatBinExpr???, x: &amp;Scalar, y: &amp;Scalar) -&gt; Scalar {\n    match (x, y) {\n        (Scalar::I64(a), Scalar::I64(b)) =&gt; Scalar::I64(apply(a, b)),\n        (Scalar::I32(a), Scalar::I32(b)) =&gt; Scalar::I32(apply(a, b)),\n    }\n}\n</code></pre>\n\n<p>Making <code>bin_op</code> generic is not right; <code>bin_op</code> operates on <code>Scalar</code>, but the internal operation is generic.</p>\n\n<p>I originally <a href=\"https://www.reddit.com/r/rust/comments/9j8o8e/how_pass_a_closure_with_generics_to_a_non_generic/\" rel=\"nofollow noreferrer\">asked this question on Reddit</a></p>\n"}, {"tags": ["rust", "future", "rust-tokio"], "answers": [{"tags": [], "owner": {"reputation": 651, "user_id": 5223795, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/ef3abe0f20c34e1325db295fab0c1be9?s=128&d=identicon&r=PG&f=1", "display_name": "Boris", "link": "https://stackoverflow.com/users/5223795/boris"}, "is_accepted": true, "score": 0, "last_activity_date": 1538063513, "last_edit_date": 1538063513, "creation_date": 1538062976, "answer_id": 52540655, "question_id": 52539464, "link": "https://stackoverflow.com/questions/52539464/compilation-error-with-tokiorun-and-send-marker/52540655#52540655", "title": "Compilation error with tokio::run() and Send marker", "body": "<p>Looks like I just needed to change the function signature to</p>\n\n<pre><code>fn read_async(\n    &amp;self,\n    _: Option&lt;HashMap&lt;String, Value&gt;&gt;,\n) -&gt; Box&lt;Future&lt;Item = Option&lt;Self::Data&gt;, Error = String&gt; + Send&gt; {\n//                                                        ^^^^^^^\n</code></pre>\n\n<p>Indeed, <code>Box&lt;T&gt;</code> should be <code>Send</code> when <code>T</code> is <code>Send</code>, but I have to spell it out because <code>Future</code> doesn't derive it manually/automatically.</p>\n\n<p>Thanks to <a href=\"https://github.com/tobz\" rel=\"nofollow noreferrer\">Tobz</a> for pointing this out.</p>\n"}], "owner": {"reputation": 651, "user_id": 5223795, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/ef3abe0f20c34e1325db295fab0c1be9?s=128&d=identicon&r=PG&f=1", "display_name": "Boris", "link": "https://stackoverflow.com/users/5223795/boris"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 435, "favorite_count": 0, "accepted_answer_id": 52540655, "answer_count": 1, "score": 1, "last_activity_date": 1538063513, "creation_date": 1538058858, "last_edit_date": 1538061388, "question_id": 52539464, "link": "https://stackoverflow.com/questions/52539464/compilation-error-with-tokiorun-and-send-marker", "title": "Compilation error with tokio::run() and Send marker", "body": "<p>I am trying to build a library defining a generic datasource which can pull data from various sources, synchronously and asynchronously. \nWhen building the async piece, I ran into the following compilation issue which I don't understand how to address:</p>\n\n<p>Here is my simplified code (<a href=\"https://play.rust-lang.org/?gist=e9d9eddf267bb4a5e6f33f4ce7d42ff5&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground link</a>)</p>\n\n<pre><code>extern crate futures; // futures = \"0.1.24\"\nextern crate tokio; // tokio = \"0.1.8\"\nextern crate serde_json;\n\nuse futures::Future;\nuse serde_json::Value;\n\nuse std::collections::HashMap;\n\ntrait DataSource {\n    type Data;\n\n    fn read_async(&amp;self, Option&lt;HashMap&lt;String, Value&gt;&gt;) -&gt; Box&lt;futures::Future&lt;Item=Option&lt;Self::Data&gt;, Error=String&gt;&gt; \n        where Self::Data: 'static + Send;\n}\n\nstruct DataSourceImpl;\nimpl DataSource for DataSourceImpl {\n    type Data = Vec&lt;String&gt;;\n\n    fn read_async(&amp;self, _params: Option&lt;HashMap&lt;String, Value&gt;&gt;) -&gt; Box&lt;futures::Future&lt;Item=Option&lt;Self::Data&gt;, Error=String&gt;&gt; \n        where Self::Data: 'static + Send \n    {\n        Box::new(futures::future::ok(Some(vec![\"some data\".to_string()])))\n    }\n\n}\n\nfn main() {\n    let datasource = DataSourceImpl{};\n\n    let params = HashMap::new();\n    tokio::run(datasource.read_async(Some(params))\n        .map(|content| {\n            println!(\"Content read = {:?}\", &amp;content);\n            ()\n        })\n        .map_err(|err| {\n            println!(\"Error {}\", &amp;err);\n            ()\n        })\n    );\n}\n</code></pre>\n\n<p>I got the following compilation error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: `dyn futures::Future&lt;Item=std::option::Option&lt;std::vec::Vec&lt;std::string::String&gt;&gt;, Error=std::string::String&gt;` cannot be sent between threads safely\n  --&gt; src/main.rs:45:13\n   |\n45 |     runtime.spawn(future);\n   |             ^^^^^ `dyn futures::Future&lt;Item=std::option::Option&lt;std::vec::Vec&lt;std::string::String&gt;&gt;, Error=std::string::String&gt;` cannot be sent between threads safely\n   |\n   = help: the trait `std::marker::Send` is not implemented for `dyn futures::Future&lt;Item=std::option::Option&lt;std::vec::Vec&lt;std::string::String&gt;&gt;, Error=std::string::String&gt;`\n   = note: required because of the requirements on the impl of `std::marker::Send` for `std::ptr::Unique&lt;dyn futures::Future&lt;Item=std::option::Option&lt;std::vec::Vec&lt;std::string::String&gt;&gt;, Error=std::string::String&gt;&gt;`\n   = note: required because it appears within the type `std::boxed::Box&lt;dyn futures::Future&lt;Item=std::option::Option&lt;std::vec::Vec&lt;std::string::String&gt;&gt;, Error=std::string::String&gt;&gt;`\n   = note: required because it appears within the type `futures::Map&lt;std::boxed::Box&lt;dyn futures::Future&lt;Item=std::option::Option&lt;std::vec::Vec&lt;std::string::String&gt;&gt;, Error=std::string::String&gt;&gt;, [closure@src/main.rs:34:14: 37:10]&gt;`\n   = note: required because it appears within the type `futures::MapErr&lt;futures::Map&lt;std::boxed::Box&lt;dyn futures::Future&lt;Item=std::option::Option&lt;std::vec::Vec&lt;std::string::String&gt;&gt;, Error=std::string::String&gt;&gt;, [closure@src/main.rs:34:14: 37:10]&gt;, [closure@src/main.rs:38:18: 41:10]&gt;`\n</code></pre>\n\n<p>Yet when looking into the standard library, I found the following implementations:</p>\n\n<ul>\n<li><code>impl&lt;T: ?Sized&gt; Send for Box&lt;T&gt; where T: Send</code></li>\n<li><code>impl&lt;T&gt; Send for Option&lt;T&gt; where T: Send</code></li>\n<li><code>impl&lt;T&gt; Send for Vec&lt;T&gt; where T: Send</code></li>\n<li><code>impl Send for String</code></li>\n<li><code>impl Send for [failure::]Error</code></li>\n</ul>\n\n<p>What am I missing?</p>\n\n<p>If I get rid of the trait and replace the <code>Box&lt;Future&lt;...&gt;&gt;</code> by <code>impl Future&lt;...&gt;</code> then it works (<a href=\"https://play.rust-lang.org/?gist=e87d63c29317be57351e90f635f2993a&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground link for the new code</a>); yet I don't understand what is wrong with the trait &amp; <code>Box</code> implementation...</p>\n\n<pre><code>extern crate failure;\nextern crate futures; // futures = \"0.1.24\"\nextern crate tokio; // tokio = \"0.1.8\"\nextern crate serde_json;\n\nuse futures::Future;\nuse serde_json::Value;\n\nuse std::collections::HashMap;\n\nfn read_async(_params: Option&lt;HashMap&lt;String, Value&gt;&gt;) -&gt; impl futures::Future&lt;Item=Option&lt;Vec&lt;String&gt;&gt;, Error=failure::Error&gt; {\n    futures::future::ok(Some(vec![\"some data\".to_string()]))\n}\n\nfn main() {\n    let params = HashMap::new();\n    let future = read_async(Some(params))\n        .map(|content| {\n            println!(\"Content read = {:?}\", &amp;content);\n            ()\n        })\n        .map_err(|err| {\n            println!(\"Error {}\", &amp;err);\n            ()\n        });\n\n    tokio::run(future);\n}\n</code></pre>\n"}, {"tags": ["python", "rust", "pyo3"], "comments": [{"owner": {"reputation": 8909, "user_id": 467366, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/fYQGf.jpg?s=128&g=1", "display_name": "Paul", "link": "https://stackoverflow.com/users/467366/paul"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1538056432, "post_id": 52538458, "comment_id": 92016733, "body": "@Shepmaster I think your edit makes the title less accurate. The fact that the reference count is increased is <i>not</i> something I want to manage or think about in the Rust version. If pyo3 does something else that is equivalent to increasing the reference count that&#39;s fine."}, {"owner": {"reputation": 8909, "user_id": 467366, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/fYQGf.jpg?s=128&g=1", "display_name": "Paul", "link": "https://stackoverflow.com/users/467366/paul"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1538056689, "post_id": 52538458, "comment_id": 92016931, "body": "@Shepmaster It&#39;s not really a hard requirement. If <code>pyo3</code> keeps a single reference to any Python object created and then manages whether or not to release that reference using Rust object lifetimes or something, that would be fine. I don&#39;t really know or care, so long as I&#39;m using the correct lifetime management from a pyo3 perspective."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1538060519, "post_id": 52538458, "comment_id": 92019589, "body": "<i>the lifetimes of <code>x</code> and the return value are not the same</i> \u2014 why do you say this? <a href=\"https://doc.rust-lang.org/book/second-edition/ch10-03-lifetime-syntax.html#lifetime-elision\" rel=\"nofollow noreferrer\">Lifetime elision</a> makes them the same. You could explicitly annotate them to &quot;prove&quot; it: <code>fn f&lt;&#39;a&gt;(_py: Python, x: &amp;&#39;a PyObject) -&gt; PyResult&lt;&amp;&#39;a PyObject&gt;</code>."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1538060605, "post_id": 52538458, "comment_id": 92019647, "body": "@Shepmaster Doing that seems to result in compiler errors anyway, because <code>pyfunc</code> is not retaining lifetime parameters."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1538060620, "post_id": 52538458, "comment_id": 92019657, "body": "<i>no opportunity for <code>pyo3</code> to increase the reference count for <code>x</code></i> \u2014 what prevents it from increasing the reference <i>before</i> it hands it to you?"}, {"owner": {"reputation": 8909, "user_id": 467366, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/fYQGf.jpg?s=128&g=1", "display_name": "Paul", "link": "https://stackoverflow.com/users/467366/paul"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1538060726, "post_id": 52538458, "comment_id": 92019734, "body": "@Shepmaster I imagine it would have to increase it in the <code>#[pyfunc]</code> macro by detecting that the function returns a reference, rather than before it is handed to the function itself, since not all functions increase the reference count of their input parameters."}, {"owner": {"reputation": 8909, "user_id": 467366, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/fYQGf.jpg?s=128&g=1", "display_name": "Paul", "link": "https://stackoverflow.com/users/467366/paul"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1538060844, "post_id": 52538458, "comment_id": 92019816, "body": "As to the lifetime question, that was the gist of the compiler error - this may be the issue @E_net4 was talking about, but I think the point of Python&#39;s reference counting is that the lifetime of the input and output should be disconnected (hence the reference counting), so even if the Rust semantics say it has the correct lifetime <i>as declared</i>, that&#39;s not how the function is intended to be used."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1538141401, "last_edit_date": 1538141401, "creation_date": 1538064998, "answer_id": 52541221, "question_id": 52538458, "link": "https://stackoverflow.com/questions/52538458/writing-a-pyo3-function-equivalent-to-a-python-function-that-returns-its-input-o/52541221#52541221", "title": "Writing a pyo3 function equivalent to a Python function that returns its input object", "body": "<p>A <code>PyObject</code> is <a href=\"https://github.com/PyO3/pyo3/blob/ed273982/src/object.rs#L18\" rel=\"nofollow noreferrer\">a simple wrapper around a raw pointer</a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct PyObject(*mut ffi::PyObject);\n</code></pre>\n\n<p>It has multiple creation functions, each corresponding to different kinds of pointers that we might get from Python. Some of these, such as <a href=\"https://github.com/PyO3/pyo3/blob/ed273982/src/object.rs#L75\" rel=\"nofollow noreferrer\"><code>from_borrowed_ptr</code></a>, call <code>Py_INCREF</code> on the passed-in pointer.</p>\n\n<p>Thus, it seems like we can accept a <code>PyObject</code>, so long as it was created in the \"right\" manner.</p>\n\n<p>If we <a href=\"https://stackoverflow.com/q/28580386/155423\">expand</a> this code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[pyfunction]\npub fn example(_py: Python, x: PyObject) -&gt; PyObject {\n    x\n}\n</code></pre>\n\n<p>We can see this section of code that calls our function:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut _iter = _output.iter();\n::pyo3::ObjectProtocol::extract(_iter.next().unwrap().unwrap()).and_then(\n    |arg1| {\n        ::pyo3::ReturnTypeIntoPyResult::return_type_into_py_result(example(\n            _py, arg1,\n        ))\n    },\n)\n</code></pre>\n\n<p>Our argument is created by a call to <a href=\"https://github.com/PyO3/pyo3/blob/ed273982/src/objectprotocol.rs#L182-L184\" rel=\"nofollow noreferrer\"><code>ObjectProtocol::extract</code></a>, which in turn calls <code>FromPyObject::extract</code>. This is <a href=\"https://github.com/PyO3/pyo3/blob/ed273982/src/object.rs#L312-L318\" rel=\"nofollow noreferrer\">implemented for <code>PyObject</code></a> by calling <code>from_borrowed_ptr</code>.</p>\n\n<p>Thus, using a bare <code>PyObject</code> as the argument type will correctly increment the reference count.</p>\n\n<p>Likewise, when a <code>PyObject</code> is dropped in Rust, it will automatically <a href=\"https://github.com/PyO3/pyo3/blob/ed273982/src/object.rs#L320-L327\" rel=\"nofollow noreferrer\">decrease the reference count</a>. When it is returned back to Python, <a href=\"https://github.com/PyO3/pyo3/blob/ed273982/src/object.rs#L287-L296\" rel=\"nofollow noreferrer\">ownership is transferred</a> and it is up to the Python code to update the reference count appropriately.</p>\n\n<hr>\n\n<p>All investigation done for <a href=\"https://github.com/PyO3/pyo3/tree/ed2739829fdc8d3bb86629c35ae09ebcfe1d116e\" rel=\"nofollow noreferrer\">commit ed273982</a> from the master branch, corresponding to v0.5.0-alpha.1.</p>\n"}, {"comments": [{"owner": {"reputation": 8909, "user_id": 467366, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/fYQGf.jpg?s=128&g=1", "display_name": "Paul", "link": "https://stackoverflow.com/users/467366/paul"}, "edited": false, "score": 0, "creation_date": 1538065726, "post_id": 52541390, "comment_id": 92022667, "body": "The simplest test would be to call <code>a = object(); assert f(a) is a</code>, since the important part is that the input should be the same object as the output."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 8909, "user_id": 467366, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/fYQGf.jpg?s=128&g=1", "display_name": "Paul", "link": "https://stackoverflow.com/users/467366/paul"}, "edited": false, "score": 0, "creation_date": 1538065850, "post_id": 52541390, "comment_id": 92022740, "body": "@Paul I guess that could be added as well. But I was mostly attempting to check whether the reference count is consistent with the number of variables pointing at the object."}], "tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": false, "score": 4, "last_activity_date": 1538066411, "last_edit_date": 1538066411, "creation_date": 1538065595, "answer_id": 52541390, "question_id": 52538458, "link": "https://stackoverflow.com/questions/52538458/writing-a-pyo3-function-equivalent-to-a-python-function-that-returns-its-input-o/52541390#52541390", "title": "Writing a pyo3 function equivalent to a Python function that returns its input object", "body": "<p>According <a href=\"https://stackoverflow.com/a/52541221/1233251\">to the other answer</a>, <code>pyo3</code> takes care of building additional boilerplate around our functions in order to keep track of Python reference counting. In particular, the counter is already incremented when passing the object as an argument to the function. Nevertheless, the <a href=\"https://github.com/PyO3/pyo3/blob/master/src/object.rs#L117\" rel=\"nofollow noreferrer\"><code>clone_ref</code></a> method can be used to explicitly create a new reference to the same object, which will also increment its reference counter.</p>\n\n<p>The output of the function must still be an actual Python object rather than a reference to it (which seems reasonable, as Python does not understand Rust references; <code>pyo3</code> seems to ignore lifetime parameters in these functions).</p>\n\n<pre><code>#[pyfunction]\nfn f(py: Python, x: PyObject) -&gt; PyResult&lt;PyObject&gt; {\n    Ok(x.clone_ref(py))\n}\n</code></pre>\n\n<p>From playing around with the function in Python land (AKA not a serious testbed), it <em>at least</em> seems to work as intended.</p>\n\n<pre><code>from dummypy import f\n\ndef get_object():\n    return f(\"OK\")\n\na = [1, 2, 3]\n\nif True:\n    b = f(a)\n    assert b is a\n    b[0] = 9001\n\nprint(a)\n\nx = get_object()\nprint(x)\n</code></pre>\n"}], "owner": {"reputation": 8909, "user_id": 467366, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/fYQGf.jpg?s=128&g=1", "display_name": "Paul", "link": "https://stackoverflow.com/users/467366/paul"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1043, "favorite_count": 1, "accepted_answer_id": 52541221, "answer_count": 2, "score": 6, "last_activity_date": 1538141401, "creation_date": 1538055715, "last_edit_date": 1538063074, "question_id": 52538458, "link": "https://stackoverflow.com/questions/52538458/writing-a-pyo3-function-equivalent-to-a-python-function-that-returns-its-input-o", "title": "Writing a pyo3 function equivalent to a Python function that returns its input object", "body": "<p>I am looking to write a Rust backend for my library, and I need to implement the equivalent of the following function in <code>pyo3</code>:</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>def f(x):\n    return x\n</code></pre>\n\n<p>This should return the <em>same object</em> as the input, and the function getting the return value should hold a new reference to the input. If I were writing this in the C API I would write it as:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>PyObject * f(PyObject * x) {\n    Py_XINCREF(x);\n    return x;\n}\n</code></pre>\n\n<p>In <a href=\"https://github.com/PyO3/pyo3\" rel=\"nofollow noreferrer\">PyO3</a>, I find it quite confusing to navigate the differences between <code>PyObject</code>, <code>PyObjectRef</code>, <code>&amp;PyObject</code>, <code>Py&lt;PyObject&gt;</code>, <code>Py&lt;&amp;PyObject&gt;</code>.</p>\n\n<p>The most naive version of this function is:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate pyo3;\n\nuse pyo3::prelude::*;\n\n#[pyfunction]\npub fn f(_py: Python, x: &amp;PyObject) -&gt; PyResult&lt;&amp;PyObject&gt; {\n    Ok(x)\n}\n</code></pre>\n\n<p>Among other things, the lifetimes of <code>x</code> and the return value are not the same, plus I see no opportunity for <code>pyo3</code> to increase the reference count for <code>x</code>, and in fact the compiler seems to agree with me:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0106]: missing lifetime specifier\n --&gt; src/lib.rs:4:49\n  |\n4 | pub fn f(_py: Python, x: &amp;PyObject) -&gt; PyResult&lt;&amp;PyObject&gt; {\n  |                                                 ^ expected lifetime parameter\n  |\n  = help: this function's return type contains a borrowed value, but the signature does not say whether it is borrowed from `_py` or `x`\n</code></pre>\n\n<p>There may be a way for me to <em>manually</em> increase the reference count using the <code>_py</code> parameter and use lifetime annotations to make the compiler happy, but my impression is that <code>pyo3</code> intends to manage reference counts <em>itself</em> using object lifetimes.</p>\n\n<p>What is the proper way to write this function? Should I be attempting to wrap it in a <code>Py</code> container?</p>\n"}, {"tags": ["rust", "ffi"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 4, "creation_date": 1538031417, "post_id": 52531109, "comment_id": 92001614, "body": "Please don&#39;t blindy implement <code>Send</code> and/or <code>Sync</code> to any struct. Pointers are not Send for a certain reason. Who is responsible for cleaning or syncing the resource? You could use a <code>Mutex</code>/<code>Arc</code> to gain <code>Send</code> and <code>Sync</code>."}, {"owner": {"reputation": 3822, "user_id": 91585, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/58b7ea3d38398e9e2882d23f57762cb6?s=128&d=identicon&r=PG", "display_name": "Florian Doyon", "link": "https://stackoverflow.com/users/91585/florian-doyon"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1538031857, "post_id": 52531109, "comment_id": 92001828, "body": "This is realtime audio IO using OpenSL-ES, the struct is safe to send, and should never be hidden behind a lock, there are other interfaces / callbacks that are calling the destructors in the C++ version."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 2, "creation_date": 1538035373, "post_id": 52531109, "comment_id": 92003669, "body": "Since that <code>SDLObjectItf_</code> is generated, I must then advise you to only implement <code>Send</code>/<code>Sync</code> on a high level API layer. You could also include the reasoning behind implementing Send but not Sync into the question."}, {"owner": {"reputation": 3822, "user_id": 91585, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/58b7ea3d38398e9e2882d23f57762cb6?s=128&d=identicon&r=PG", "display_name": "Florian Doyon", "link": "https://stackoverflow.com/users/91585/florian-doyon"}, "edited": false, "score": 0, "creation_date": 1538038947, "post_id": 52531109, "comment_id": 92005628, "body": "Thanks for the suggestion, but even if I implement <code>Send</code> on AndroidAudioIO the error remains..."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 2, "creation_date": 1538040027, "post_id": 52531109, "comment_id": 92006320, "body": "Please also include the necessary parts to reproduce the issue. In particular, that compiler message refers to an additional portion of the code not shown here. You might be able to make a minimal example that runs in the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Playground</a>."}, {"owner": {"reputation": 3822, "user_id": 91585, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/58b7ea3d38398e9e2882d23f57762cb6?s=128&d=identicon&r=PG", "display_name": "Florian Doyon", "link": "https://stackoverflow.com/users/91585/florian-doyon"}, "edited": false, "score": 1, "creation_date": 1538062680, "post_id": 52531109, "comment_id": 92021001, "body": "I have added the reasoning for Send only, will recreate a repro in Playground when I have access to the code tonight."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1538063599, "post_id": 52531109, "comment_id": 92021579, "body": "<i>I only care about <code>Send</code></i> \u2014 but the <b>compiler</b> cares about <code>Sync</code>: <code>the trait `std::marker::Sync` is not implemented </code>"}, {"owner": {"reputation": 3822, "user_id": 91585, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/58b7ea3d38398e9e2882d23f57762cb6?s=128&d=identicon&r=PG", "display_name": "Florian Doyon", "link": "https://stackoverflow.com/users/91585/florian-doyon"}, "edited": false, "score": 0, "creation_date": 1538130564, "post_id": 52531109, "comment_id": 92045478, "body": "Thanks for your messages. all very helpful. I did indeed confuse <code>Send</code> and <code>Sync</code>."}], "answers": [{"comments": [{"owner": {"reputation": 3822, "user_id": 91585, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/58b7ea3d38398e9e2882d23f57762cb6?s=128&d=identicon&r=PG", "display_name": "Florian Doyon", "link": "https://stackoverflow.com/users/91585/florian-doyon"}, "edited": false, "score": 0, "creation_date": 1538130539, "post_id": 52542139, "comment_id": 92045462, "body": "I have not read the error message properly and confused <code>Send</code> and <code>Sync</code>. woe is me"}], "tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 2, "last_activity_date": 1538068802, "creation_date": 1538068802, "answer_id": 52542139, "question_id": 52531109, "link": "https://stackoverflow.com/questions/52531109/impl-send-for-bindgen-generated-pointer-type/52542139#52542139", "title": "Impl Send for Bindgen-generated pointer type", "body": "<p>The following code reproduces the same problem (assuming <code>Engine</code> only retains <code>AndroidAudioIO</code> at type-level, so that it can produce such a handler at a later date; it works by direct composition as well).</p>\n\n<pre><code>#[macro_use]\nextern crate lazy_static;\n\nuse std::marker::PhantomData;\nuse std::ptr::NonNull;\n\n#[repr(C)]\n#[derive(Debug, Copy, Clone)]\npub struct SLObjectItf;\n\npub struct AndroidAudioIO {\n    sl_output_buffer_queue: NonNull&lt;SLObjectItf&gt;,\n}\nunsafe impl Send for AndroidAudioIO {}\n\n#[derive(Debug)]\npub struct Engine&lt;T&gt;(PhantomData&lt;T&gt;);\n\nlazy_static! {\n    static ref engine: Option&lt;Engine&lt;AndroidAudioIO&gt;&gt; = None;\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?gist=9236033cb9d56a8678f8b4a764d1ffaa&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Playground</a>)</p>\n\n<p>The  issue here is that this <code>Engine</code> entity is in a global static variable, which immediately makes it shared across all threads. This requires <code>Sync</code>, but <code>Engine</code> was not given an implementation of <code>Sync</code> because <code>AudioAndroidIO</code> does not implement <code>Sync</code>. Indeed, regardless of whether the engine contains the audio I/O handler as an attribute or that information only exists at type level, even <a href=\"https://doc.rust-lang.org/std/marker/struct.PhantomData.html\" rel=\"nofollow noreferrer\"><code>PhantomData</code></a> inherits these trait implementations directly from its parameter type. Quoting from the docs:</p>\n\n<pre><code>impl&lt;T: ?Sized&gt; Send for PhantomData&lt;T&gt;\nwhere\n    T: Send,\nimpl&lt;T: ?Sized&gt; Sync for PhantomData&lt;T&gt;\nwhere\n    T: Sync\n</code></pre>\n\n<p>This is likely a case where <code>Engine</code> is OK to have <code>Sync</code> (although <code>PhantomData</code> chooses this safe behaviour of avoiding assumptions about the inner type). To solve this, first make <em>absolute</em> sure that <code>Engine</code> is thread-safe. Then, manually implement <code>Sync</code> for this one.</p>\n\n<pre><code>unsafe impl&lt;T&gt; Sync for Engine&lt;T&gt; {}\n</code></pre>\n\n<hr>\n\n<blockquote>\n  <p>I tried adding <code>unsafe impl Send for SLObjectItf_{}</code> and other variants to no avail.</p>\n</blockquote>\n\n<p>Well, that would have generally been a Bad Idea\u2122 anyway. Implementing <code>Send</code> and/or <code>Sync</code> should be done on top of a safe, high level abstraction of your bindings.</p>\n"}], "owner": {"reputation": 3822, "user_id": 91585, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/58b7ea3d38398e9e2882d23f57762cb6?s=128&d=identicon&r=PG", "display_name": "Florian Doyon", "link": "https://stackoverflow.com/users/91585/florian-doyon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 485, "favorite_count": 0, "accepted_answer_id": 52542139, "answer_count": 1, "score": 0, "last_activity_date": 1538068802, "creation_date": 1538031161, "last_edit_date": 1538063677, "question_id": 52531109, "link": "https://stackoverflow.com/questions/52531109/impl-send-for-bindgen-generated-pointer-type", "title": "Impl Send for Bindgen-generated pointer type", "body": "<p>I am trying to send an FFI pointer type to another thread. The struct it points to has been generated by bindgen <a href=\"https://github.com/AmpMe/opensles-sys\" rel=\"nofollow noreferrer\">from opensles-sys</a></p>\n\n<p>Here is my wrapper struct:</p>\n\n<pre><code>pub struct AndroidAudioIO {\n    sl_output_buffer_queue: NonNull&lt;SLObjectItf&gt;,\n}\nunsafe impl Send for AndroidAudioIO{}\n</code></pre>\n\n<p>The <code>SLObjectItf</code> type is an alias for <code>*const *const SLObjectItf_</code> whose definition is generated by bindgen. It's a collection of FFI function pointers.</p>\n\n<pre><code>#[repr(C)]\n#[derive(Debug, Copy, Clone)]\npub struct SLObjectItf_ {\n    pub Realize: ::std::option::Option&lt;\n        unsafe extern \"C\" fn(self_: SLObjectItf, async: SLboolean) -&gt; SLresult,\n    &gt;,\n    // More of the same pattern, only extern \"C\" function pointers, no data\n}\n</code></pre>\n\n<p>I tried adding <code>unsafe impl Send for SLObjectItf_{}</code> and other variants to no avail.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: `std::ptr::NonNull&lt;*const *const opensles::bindings::SLObjectItf_&gt;` cannot be shared between threads safely\n  --&gt; src/lib.rs:12:1\n   |\n12 | / lazy_static! {\n13 | | static ref engine:Option&lt;mynoise::Engine&lt;Box&lt;audio::AndroidAudioIO&gt;&gt;&gt; = None;\n14 | | }\n   | |_^ `std::ptr::NonNull&lt;*const *const opensles::bindings::SLObjectItf_&gt;` cannot be shared between threads safely\n   |\n   = help: within `audio::AndroidAudioIO`, the trait `std::marker::Sync` is not implemented for `std::ptr::NonNull&lt;*const *const opensles::bindings::SLObjectItf_&gt;`\n   = note: required because it appears within the type `audio::AndroidAudioIO`\n</code></pre>\n\n<p>The reason why I only care about <code>Send</code> but not <code>Sync</code> is that a single thread (the RT audio thread) interacts with this struct, but it is being created on another thread, hence the need to <code>Send</code> the pointer across to the correct thread.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 4, "creation_date": 1538022368, "post_id": 52529167, "comment_id": 91998081, "body": "because string literal have a static lifetime"}], "answers": [{"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1538034569, "post_id": 52529434, "comment_id": 92003249, "body": "Actually, as I linked in a comment, all literals have the <code>&#39;static</code> lifetime."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1538056673, "post_id": 52529434, "comment_id": 92016916, "body": "@Boiethios that&#39;s not fully true... in fact OPs post <i>shows</i> it isn&#39;t true as they are using the literal <code>100</code> / <code>1000</code>. It&#39;s only when you immediately take a reference to a literal can the compiler promote it to a <code>static</code> variable."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1538057131, "post_id": 52529434, "comment_id": 92017254, "body": "@Shepmaster Well, it depends what you call a literal. I&#39;m not sure that 100/1000 is a literal."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1538057272, "post_id": 52529434, "comment_id": 92017347, "body": "@Boiethios <code>100</code> / <code>1000</code> is 100% a literal. A literal that is stored in a variable. If you take a reference to the literal, <a href=\"https://play.rust-lang.org/?gist=95c25c21aac510462c3063767a5428cb&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">it works</a>. In OP&#39;s case they are taking a reference to the variable and it doesn&#39;t."}], "tags": [], "owner": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "is_accepted": true, "score": 5, "last_activity_date": 1538022364, "creation_date": 1538022364, "answer_id": 52529434, "question_id": 52529167, "link": "https://stackoverflow.com/questions/52529167/why-do-the-lifetime-rules-discriminate-in-favor-of-string-literals/52529434#52529434", "title": "Why do the lifetime rules discriminate in favor of string literals?", "body": "<p>Per <em>The Rust Programming Language</em>, <a href=\"https://doc.rust-lang.org/book/2018-edition/ch10-03-lifetime-syntax.html#the-static-lifetime\" rel=\"noreferrer\">all string literals have the special <code>'static</code> lifetime</a>. </p>\n\n<p>So in your example you have an <code>A&lt;'static&gt;</code> and you're changing which <code>&amp;'static str</code> it holds.</p>\n"}], "owner": {"reputation": 797, "user_id": 4803321, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/26ViJ.png?s=128&g=1", "display_name": "\u5468\u6c49\u6210", "link": "https://stackoverflow.com/users/4803321/%e5%91%a8%e6%b1%89%e6%88%90"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 104, "favorite_count": 0, "closed_date": 1538055059, "accepted_answer_id": 52529434, "answer_count": 1, "score": 1, "last_activity_date": 1538055065, "creation_date": 1538020213, "last_edit_date": 1538055024, "question_id": 52529167, "link": "https://stackoverflow.com/questions/52529167/why-do-the-lifetime-rules-discriminate-in-favor-of-string-literals", "closed_reason": "Duplicate", "title": "Why do the lifetime rules discriminate in favor of string literals?", "body": "<p>This snippet doesn't compile because the struct <code>A</code> instance outlives the reference <code>s2</code> it holds in its field <code>s</code>. No problem.</p>\n\n<pre><code>struct A&lt;'a&gt; {\n    s: &amp;'a usize,\n}\n\nlet s1 = 100;\n\nlet mut a = A { s: &amp;s1 };\n\n{\n    let s2 = 1000;\n\n    a.s = &amp;s2;\n}\n</code></pre>\n\n<p>In the same situation for string literals, it compiles. Why?</p>\n\n<pre><code>struct A&lt;'a&gt; {\n    s: &amp;'a str,\n}\n\nlet s1 = \"abc\";\n\nlet mut a = A { s: &amp;s1 };\n\n{\n    let s2 = \"abcd\";\n\n    a.s = &amp;s2;\n}\n</code></pre>\n"}]