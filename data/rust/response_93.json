[{"tags": ["debugging", "gdb", "rust", "pretty-print"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 2, "creation_date": 1476904280, "post_id": 40139269, "comment_id": 67549201, "body": "In <code>rust-gdb</code> I&#39;m getting things like <code>$1 = Vec&lt;i32&gt;(len: 2, cap: 2) = {1, 2}</code>. In <code>gdb</code> on the other hand, I&#39;m getting something closer to what you have. Have you really tried <code>rust-gdb</code>?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1476904470, "post_id": 40139269, "comment_id": 67549321, "body": "@mcarton do your GDB / Rust versions match?"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1476905416, "post_id": 40139269, "comment_id": 67549838, "body": "Slightly outdated gdb 7.11.1 &amp; rust 1.12. But maybe there&#39;s been a regression at some point\u2026"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1476909507, "post_id": 40139269, "comment_id": 67552167, "body": "Well, after upgrading to gdb 7.12, I get exactly the same output as his with <code>gdb</code>, and still the nicer one with <code>rust-gdb</code>."}, {"owner": {"reputation": 18871, "user_id": 1442050, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e975c669f2ce0f2be4613f1e123864b3?s=128&d=identicon&r=PG", "display_name": "Tom Tromey", "link": "https://stackoverflow.com/users/1442050/tom-tromey"}, "edited": false, "score": 0, "creation_date": 1476975075, "post_id": 40139269, "comment_id": 67584324, "body": "Make sure the <code>rust-gdb</code> pretty-printers are in fact installed, using <code>info pretty-printer</code>."}, {"owner": {"reputation": 3397, "user_id": 1255016, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/c20883abe67a3a886c4955a515273b53?s=128&d=identicon&r=PG", "display_name": "hfhc2", "link": "https://stackoverflow.com/users/1255016/hfhc2"}, "edited": false, "score": 0, "creation_date": 1476977925, "post_id": 40139269, "comment_id": 67586498, "body": "&gt; rust-gdb -q     (gdb) info pretty-printer     global pretty-printers:       builtin         mpx_bound128"}, {"owner": {"reputation": 260, "user_id": 3216180, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3d2a3c45b3213fccec32c5034a80f04d?s=128&d=identicon&r=PG", "display_name": "ebvalaim", "link": "https://stackoverflow.com/users/3216180/ebvalaim"}, "edited": false, "score": 2, "creation_date": 1477559164, "post_id": 40139269, "comment_id": 67819562, "body": "Rust 1.12.1 &amp; gdb 7.12 here, getting data ugly-printed in <code>rust-gdb</code> (even though <code>info pretty-printer</code> lists <code>rust_pretty_printer_lookup_function</code>)..."}], "owner": {"reputation": 3397, "user_id": 1255016, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/c20883abe67a3a886c4955a515273b53?s=128&d=identicon&r=PG", "display_name": "hfhc2", "link": "https://stackoverflow.com/users/1255016/hfhc2"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 2204, "favorite_count": 1, "answer_count": 0, "score": 6, "last_activity_date": 1476903290, "creation_date": 1476902731, "last_edit_date": 1476903290, "question_id": 40139269, "link": "https://stackoverflow.com/questions/40139269/how-do-i-pretty-print-rust-structures-in-gdb", "title": "How do I pretty-print Rust structures in GDB?", "body": "<p>How do I pretty-print structures (specifically <code>Vec</code>s) in <code>rust-gdb</code> or plain <code>gdb</code>? Whenever I call <code>p some_vector</code> I get this result:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>collections::vec::Vec&lt;usize&gt; = {buf = alloc::raw_vec::RawVec&lt;usize&gt; = {ptr = core::ptr::Unique&lt;usize&gt; = {pointer = core::nonzero::NonZero&lt;*const usize&gt; = {\n    0x7ffff640d000}, _marker = core::marker::PhantomData&lt;usize&gt;}, cap = 16}, len = 10}\n</code></pre>\n\n<p>This is just unreadable. Is there any way to get a result showing the contents of the <code>Vec</code>? I am using Rust 1.12 and GDB 7.12.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1476881455, "post_id": 40131838, "comment_id": 67533697, "body": "Shot in the dark: <code>pub use rle::rle_new;</code> in <code>lib.rs</code>? (<code>rle</code> is not <code>pub</code>...)"}, {"owner": {"reputation": 22825, "user_id": 992687, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/0Da71.png?s=128&g=1", "display_name": "The Unfun Cat", "link": "https://stackoverflow.com/users/992687/the-unfun-cat"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1476881511, "post_id": 40131838, "comment_id": 67533738, "body": "I tried that and it did not work. I also tried to change <code>mod rle</code> to <code>pub mod rle</code> but that did not work either. Thanks anyways :)"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1476881830, "post_id": 40131838, "comment_id": 67534000, "body": "Might want to open a bug to improve the warning; it would be so more useful if it included a tip on how to fix this :("}, {"owner": {"reputation": 22825, "user_id": 992687, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/0Da71.png?s=128&g=1", "display_name": "The Unfun Cat", "link": "https://stackoverflow.com/users/992687/the-unfun-cat"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1476882644, "post_id": 40131838, "comment_id": 67534606, "body": "Well, the easiest way was to move my <code>rle_new</code> function to the <code>lib.rs</code> file. Worked then :) Keeping this open as is, in case sb has an answer."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1476882674, "post_id": 40131838, "comment_id": 67534632, "body": "Doing as @MatthieuM. suggests (<code>pub use</code>) makes <code>_rle_new</code> show up as an exported symbol in the library according to <code>nm</code>. Works for me."}, {"owner": {"reputation": 22825, "user_id": 992687, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/0Da71.png?s=128&g=1", "display_name": "The Unfun Cat", "link": "https://stackoverflow.com/users/992687/the-unfun-cat"}, "edited": false, "score": 0, "creation_date": 1476882835, "post_id": 40131838, "comment_id": 67534735, "body": "Okay, so it adds a prefix <code>_</code> to <code>rle_new</code> then? Anyways, thanks for the tip, I must have made a mistake. If you add that as an answer I will accept it Matthieu M:)"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1476883563, "post_id": 40131838, "comment_id": 67535269, "body": "@Shepmaster: With a leading <code>_</code> as prefix? If it&#39;s the case I would let you answer and fill in the blanks, seems weird that the symbol name would be altered..."}, {"owner": {"reputation": 1699, "user_id": 783825, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/cce2622c5ccd49a3cbf2007491ab1075?s=128&d=identicon&r=PG", "display_name": "Neikos", "link": "https://stackoverflow.com/users/783825/neikos"}, "edited": false, "score": 0, "creation_date": 1476885154, "post_id": 40131838, "comment_id": 67536552, "body": "using <code>pub use rle::rle_new</code> I get a <code>rle_new</code> symbol in <code>.&#47;target&#47;debug&#47;&lt;lib&gt;.so</code>, so I cannot reproduce the leading <code>_</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1699, "user_id": 783825, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/cce2622c5ccd49a3cbf2007491ab1075?s=128&d=identicon&r=PG", "display_name": "Neikos", "link": "https://stackoverflow.com/users/783825/neikos"}, "edited": false, "score": 0, "creation_date": 1476888336, "post_id": 40131838, "comment_id": 67539244, "body": "@Neikos that&#39;s a platform difference. macOS vs Linux."}, {"owner": {"reputation": 1699, "user_id": 783825, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/cce2622c5ccd49a3cbf2007491ab1075?s=128&d=identicon&r=PG", "display_name": "Neikos", "link": "https://stackoverflow.com/users/783825/neikos"}, "edited": false, "score": 0, "creation_date": 1476893760, "post_id": 40131838, "comment_id": 67543052, "body": "Ah okay, TIL! Thanks!"}], "answers": [{"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 15, "last_activity_date": 1476887990, "creation_date": 1476887990, "answer_id": 40134580, "question_id": 40131838, "link": "https://stackoverflow.com/questions/40131838/function-is-marked-no-mangle-but-not-exported/40134580#40134580", "title": "function is marked #[no_mangle], but not exported", "body": "<p>The Rust philosophy is to prefer explicit over implicit.</p>\n\n<p>Rust will only export symbols that are publicly accessible from the root crate. This makes it very easy to inspect the public interface of a crate without crawling through all files: just follow the <code>pub</code> from the root.</p>\n\n<p>In your case, the symbol <code>rle_new</code> is publicly accessible to anyone having access to the <code>rle</code> module (such as sibling modules), but the <code>rle</code> module itself is not publicly accessible in the root crate.</p>\n\n<p>The simplest solution is to selectively export this symbol:</p>\n\n<pre><code>pub use rle::rle_new;\n</code></pre>\n"}], "owner": {"reputation": 22825, "user_id": 992687, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/0Da71.png?s=128&g=1", "display_name": "The Unfun Cat", "link": "https://stackoverflow.com/users/992687/the-unfun-cat"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1491, "favorite_count": 1, "accepted_answer_id": 40134580, "answer_count": 1, "score": 6, "last_activity_date": 1476887990, "creation_date": 1476881298, "last_edit_date": 1476881991, "question_id": 40131838, "link": "https://stackoverflow.com/questions/40131838/function-is-marked-no-mangle-but-not-exported", "title": "function is marked #[no_mangle], but not exported", "body": "<p>I have a project with two files:</p>\n\n<ul>\n<li><code>src/lib.rs</code></li>\n<li><code>src/rle.rs</code></li>\n</ul>\n\n<p><code>rle.rs</code> contains the following (and much more):</p>\n\n<pre><code>extern crate libc;\n\n#[derive(Debug, PartialEq)]\npub struct Rle {\n    pub lengths: Vec&lt;i32&gt;,\n    pub values: Vec&lt;i32&gt;,\n}\n\n#[no_mangle]\npub extern \"C\" fn rle_new(blablabla...)\n</code></pre>\n\n<p><code>lib.rs</code> looks like the following:</p>\n\n<pre><code>mod rle;\nuse rle::rle_new; \n// blablabla\n</code></pre>\n\n<p>When I load the library in Python I get the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Traceback (most recent call last):\n  File \"compact_ranges.py\", line 19, in &lt;module&gt;\n    lib.rle_new.restype = POINTER(RleS)\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/ctypes/__init__.py\", line 378, in __getattr__\n    func = self.__getitem__(name)\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/ctypes/__init__.py\", line 383, in __getitem__\n    func = self._FuncPtr((name_or_ordinal, self))\nAttributeError: dlsym(0x7f94ca700370, rle_new): symbol not found\n</code></pre>\n\n<p>It seems like Rust understands this (clever, clever) because my linter says:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>17   1 warning         function rle_new is marked #[no_mangle], but not exported, #[warn(private_no_mangle_fns)] on by default (rust-cargo)\n</code></pre>\n\n<p>How do I fix this and make my function <code>rle_new</code> available from the target/debug/libranges.dylib file?</p>\n\n<p>The <code>crate-type</code> in my <code>Cargo.toml</code> is <code>[\"dylib\"]</code></p>\n"}, {"tags": ["arrays", "generics", "rust", "traits"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1476880339, "post_id": 40131465, "comment_id": 67532828, "body": "Why is using <code>Vec</code> not appropriate? Just because it <i>can</i> change size does not mean it <i>has</i> to."}, {"owner": {"reputation": 1699, "user_id": 783825, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/cce2622c5ccd49a3cbf2007491ab1075?s=128&d=identicon&r=PG", "display_name": "Neikos", "link": "https://stackoverflow.com/users/783825/neikos"}, "edited": false, "score": 1, "creation_date": 1476880533, "post_id": 40131465, "comment_id": 67532978, "body": "You could use a NewType like explained here: <a href=\"http://valve.github.io/blog/2014/08/26/json-serialization-in-rust-part-2/\" rel=\"nofollow noreferrer\">valve.github.io/blog/2014/08/26/&hellip;</a>"}, {"owner": {"reputation": 356, "user_id": 6060352, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/b64Kk.jpg?s=128&g=1", "display_name": "lochsh", "link": "https://stackoverflow.com/users/6060352/lochsh"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1476880539, "post_id": 40131465, "comment_id": 67532987, "body": "@MatthieuM. I want a data structure that can&#39;t change size -- using one that <i>could</i> leaves room for bugs and doesn&#39;t feel like a nice choice of data structure.  I&#39;d rather use a type that guarantees the behaviour I want."}, {"owner": {"reputation": 356, "user_id": 6060352, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/b64Kk.jpg?s=128&g=1", "display_name": "lochsh", "link": "https://stackoverflow.com/users/6060352/lochsh"}, "reply_to_user": {"reputation": 1699, "user_id": 783825, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/cce2622c5ccd49a3cbf2007491ab1075?s=128&d=identicon&r=PG", "display_name": "Neikos", "link": "https://stackoverflow.com/users/783825/neikos"}, "edited": false, "score": 0, "creation_date": 1476880997, "post_id": 40131465, "comment_id": 67533328, "body": "@Neikos do you mean creating a tuple struct containing the generic array, and deriving <code>RustcDecodable</code> on that?  I had previously tried this (sorry for not including in post), and get the following error:  <code>error[E0277]: the trait bound `generic_array::GenericArray&lt;f64, _&gt;: rustc_serialize::Decodable` is not satisfied</code>"}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 2, "creation_date": 1476881003, "post_id": 40131465, "comment_id": 67533330, "body": "A <code>Vec</code>-like structure with a fixed size? How about a <code>Box&lt;[T]&gt;</code>?"}, {"owner": {"reputation": 1699, "user_id": 783825, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/cce2622c5ccd49a3cbf2007491ab1075?s=128&d=identicon&r=PG", "display_name": "Neikos", "link": "https://stackoverflow.com/users/783825/neikos"}, "edited": false, "score": 1, "creation_date": 1476881914, "post_id": 40131465, "comment_id": 67534061, "body": "@lochsh Yes, it would contain it, but then you can implement the Decodable trait manually check the &quot;Deserializing fixed length arrays&quot; part in the post I linked"}, {"owner": {"reputation": 356, "user_id": 6060352, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/b64Kk.jpg?s=128&g=1", "display_name": "lochsh", "link": "https://stackoverflow.com/users/6060352/lochsh"}, "reply_to_user": {"reputation": 1699, "user_id": 783825, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/cce2622c5ccd49a3cbf2007491ab1075?s=128&d=identicon&r=PG", "display_name": "Neikos", "link": "https://stackoverflow.com/users/783825/neikos"}, "edited": false, "score": 0, "creation_date": 1476882791, "post_id": 40131465, "comment_id": 67534709, "body": "@Neikos thanks!  I will look tomorrow more closely (busy atm), it sounds very promising :)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1476882976, "post_id": 40131465, "comment_id": 67534834, "body": "If you use a newtype, please mark this question a duplicate of <a href=\"http://stackoverflow.com/q/25413201/155423\">stackoverflow.com/q/25413201/155423</a>."}, {"owner": {"reputation": 356, "user_id": 6060352, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/b64Kk.jpg?s=128&g=1", "display_name": "lochsh", "link": "https://stackoverflow.com/users/6060352/lochsh"}, "reply_to_user": {"reputation": 1699, "user_id": 783825, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/cce2622c5ccd49a3cbf2007491ab1075?s=128&d=identicon&r=PG", "display_name": "Neikos", "link": "https://stackoverflow.com/users/783825/neikos"}, "edited": false, "score": 0, "creation_date": 1476916533, "post_id": 40131465, "comment_id": 67555167, "body": "Newtype did indeed solve my problem.  Thank you very much @Neikos.  I will mark as duplicate :)"}], "owner": {"reputation": 356, "user_id": 6060352, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/b64Kk.jpg?s=128&g=1", "display_name": "lochsh", "link": "https://stackoverflow.com/users/6060352/lochsh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 97, "favorite_count": 0, "closed_date": 1476969704, "answer_count": 0, "score": 0, "last_activity_date": 1476882923, "creation_date": 1476880218, "last_edit_date": 1476882923, "question_id": 40131465, "link": "https://stackoverflow.com/questions/40131465/reading-data-from-file-into-a-genericarray", "closed_reason": "Duplicate", "title": "Reading data from file into a GenericArray", "body": "<p>I am using the <a href=\"https://github.com/fizyk20/generic-array\" rel=\"nofollow\" title=\"generic_array crate\">generic_array crate</a> in Rust.  I want fixed length arrays, so <code>Vec</code> is not appropriate, but I want the length of the array to be defined at runtime, hence using this crate instead of <code>array</code>.</p>\n\n<p>The code is for a clustering algorithm, where each generic array represents a data point.  I want the data to be of any dimension.  For example, if I was clustering pixels on an image, I might have 3D data, one for each colour channel; but I don't want the code to only be able to be used on 3D data.</p>\n\n<p>I'm having issues with reading data from a CSV file into a generic array.  Before using generic arrays, I had a 2D struct that derived from <code>RustcDecodable</code>.</p>\n\n<p>How best to implement reading data from a file into a <code>GenericArray</code>? I can't implement the <code>Decodable</code> trait for <code>GenericArray</code>, <a href=\"https://doc.rust-lang.org/error-index.html#E0117\" rel=\"nofollow\">as the <code>Decodable</code> trait is external</a>.</p>\n\n<p>Here is what my code looked like when I was only allowing 2D data:</p>\n\n<pre><code>use std::path::Path;\n\nextern crate csv;\nextern crate rustc_serialize;\n\n/// Store one data point's (or one cluster centroid's) x and y co-ordinates\n#[derive(Clone, Copy, Debug, RustcDecodable)]\npub struct DataPoint {\n    pub x: f64,\n    pub y: f64,\n}\n\nimpl DataPoint {\n\n    pub fn squared_euclidean_distance(&amp;self, other: &amp;DataPoint) -&gt; f64 {\n        (other.x - self.x).powi(2) + (other.y - self.y).powi(2)\n    }\n}\n\npub fn read_data&lt;P&gt;(file_path: P) -&gt; Vec&lt;DataPoint&gt;\n    where P: AsRef&lt;Path&gt;\n{\n    let mut reader = csv::Reader::from_file(file_path).unwrap();\n    reader.decode().map(|point| point.unwrap()).collect()\n}\n</code></pre>\n\n<p>Here is what my code looks like with <code>GenericArray</code>s (minus <code>read_data</code> function):</p>\n\n<pre><code>extern crate generic_array;\n\ntrait Euclidean&lt;N&gt; {\n    fn squared_euclidean_distance(&amp;self, other: &amp;generic_array::GenericArray&lt;f64, N&gt;) -&gt; f64\n        where N: generic_array::ArrayLength&lt;f64&gt;;\n}\n\n\nimpl &lt;N&gt; Euclidean&lt;N&gt; for generic_array::GenericArray&lt;f64, N&gt;\n    where N: generic_array::ArrayLength&lt;f64&gt;\n{\n    fn squared_euclidean_distance(&amp;self, other: &amp;generic_array::GenericArray&lt;f64, N&gt;) -&gt; f64\n        where N: generic_array::ArrayLength&lt;f64&gt;\n    {\n        let iter = self.iter().zip(other.iter());\n        iter.fold(0.0, |acc, x| acc + (x.0 - x.1).powi(2))\n    }\n}\n</code></pre>\n\n<p>Should I read the data into something intermediate, then into the <code>GenericArray</code>?  Should I define my own version of the <code>Decodable</code> trait?  Should I give up on generic arrays?</p>\n"}, {"tags": ["keyboard", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 6, "creation_date": 1476848114, "post_id": 40121588, "comment_id": 67513921, "body": "<a href=\"https://doc.rust-lang.org/std/\" rel=\"nofollow noreferrer\">The complete standard library API is documented</a>, so check that for relevant types and functions. You don&#39;t list any cross-platform requirements, so I&#39;ll assume you are on Linux. Perhaps you can just open <code>&#47;dev&#47;tty</code> or whatever? Most people would just use a crate to solve this problem (Rust <b>loves</b> crates), but asking for a library recommendation is <i>off topic</i> for Stack Overflow, so it&#39;s good that you didn&#39;t do that!"}, {"owner": {"reputation": 1499, "user_id": 526514, "user_type": "registered", "accept_rate": 36, "profile_image": "https://www.gravatar.com/avatar/511274e57d0d546ed59b3d023bf5513a?s=128&d=identicon&r=PG", "display_name": "Ivan Yurov", "link": "https://stackoverflow.com/users/526514/ivan-yurov"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1476848761, "post_id": 40121588, "comment_id": 67514078, "body": "Ummm... why is it an offtopic? I hear it for the first time. Besides that I&#39;m completely new to system programming, so I would appreciate any links to particular examples in Rust on how to open /dev/tty etc"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1476859465, "post_id": 40121588, "comment_id": 67518132, "body": "@IvanYouroff: SO caters to questions that have an objective &quot;best&quot; answer. A Q&amp;A is not a forum, so it is not suitable for debates and (in this case) pitching one library against another. SO also aims to have answers that last (ideally eternally valid), and best libraries tend to come and go, so that in 2 years the best library for a particular task may be completely different... and therefore the &quot;recommendation&quot; be completely off, which would mislead people."}, {"owner": {"reputation": 1499, "user_id": 526514, "user_type": "registered", "accept_rate": 36, "profile_image": "https://www.gravatar.com/avatar/511274e57d0d546ed59b3d023bf5513a?s=128&d=identicon&r=PG", "display_name": "Ivan Yurov", "link": "https://stackoverflow.com/users/526514/ivan-yurov"}, "edited": false, "score": 1, "creation_date": 1476886794, "post_id": 40121588, "comment_id": 67537933, "body": "I agree with the part about debates and holy wars, but most of the higher level programming problems are solved like &quot;How do I do X?&quot; - &quot;Use library Y, here&#39;s the example&quot; and even years later if library Z will be the better option, finding the answer mentioning Y would be a good starting point."}], "owner": {"reputation": 1499, "user_id": 526514, "user_type": "registered", "accept_rate": 36, "profile_image": "https://www.gravatar.com/avatar/511274e57d0d546ed59b3d023bf5513a?s=128&d=identicon&r=PG", "display_name": "Ivan Yurov", "link": "https://stackoverflow.com/users/526514/ivan-yurov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 206, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1476847915, "creation_date": 1476847538, "last_edit_date": 1476847915, "question_id": 40121588, "link": "https://stackoverflow.com/questions/40121588/is-there-a-simple-way-to-read-scancodes-from-the-keyboard-without-involving-thir", "title": "Is there a simple way to read scancodes from the keyboard without involving third-party libs?", "body": "<p>I'm trying to build a shell project in Rust and I ran into trouble in the very beginning. Instead of reading the whole line and output through stdin/stdout, I want to parse every keypress and maintain a buffer until <kbd>Enter</kbd> is pressed. With an ability to move the cursor, backspace, access command history by up/down keys etc.</p>\n"}, {"tags": ["rust", "nickel"], "answers": [{"tags": [], "owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "is_accepted": true, "score": 6, "last_activity_date": 1476834046, "last_edit_date": 1476834046, "creation_date": 1476833568, "answer_id": 40119718, "question_id": 40119477, "link": "https://stackoverflow.com/questions/40119477/how-to-send-a-value-to-a-nickel-middleware-function/40119718#40119718", "title": "How to send a value to a Nickel Middleware function", "body": "<p>The Nickel examples show <a href=\"https://github.com/nickel-org/nickel.rs/blob/master/examples/no_macro_custom_data.rs\" rel=\"nofollow\">a way to pass a configuration</a> into the server object.</p>\n\n<p>Essentially, you instantiate a <code>Nickel</code> instance using its <code>with_data</code> method:</p>\n\n<pre><code>struct MyConfig {\n    greet: String,\n}\n\nlet my_config = MyConfig { greet: \"hello\".to_string() };\n\nlet mut server = Nickel::with_data(my_config);\n</code></pre>\n\n<p>And your handler can access it via the <code>server_data</code> method:</p>\n\n<pre><code>let my_config = req.server_data();\nres.send(&amp;*my_config.greet);\n</code></pre>\n\n<p>So, applying that to your specific example.. your code becomes:</p>\n\n<pre><code>extern crate nickel;\nuse nickel::{Nickel, HttpRouter, Request, Response, MiddlewareResult};\n\nfn main() {\n    let data = \"wanted\";\n    let mut server = Nickel::with_data(data);\n    server.get(\"/\", landing);\n    server.listen(\"localhost:6767\");\n}\n\nfn landing&lt;'a, 'mw&gt;(request: &amp;mut Request&lt;&amp;'a str&gt;, response: Response&lt;'mw, &amp;'a str&gt;) -&gt; MiddlewareResult&lt;'mw, &amp;'a str&gt; {\n    response.send(*request.server_data())\n}\n</code></pre>\n\n<p>Resulting in:</p>\n\n<p><a href=\"https://i.stack.imgur.com/hZPfu.png\" rel=\"nofollow\"><img src=\"https://i.stack.imgur.com/hZPfu.png\" alt=\"Nickel\"></a></p>\n"}], "owner": {"reputation": 10672, "user_id": 321731, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/88e60659e997d36af3ff348b3251e1a6?s=128&d=identicon&r=PG", "display_name": "tshepang", "link": "https://stackoverflow.com/users/321731/tshepang"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 270, "favorite_count": 0, "accepted_answer_id": 40119718, "answer_count": 1, "score": 0, "last_activity_date": 1476834046, "creation_date": 1476832025, "last_edit_date": 1476832392, "question_id": 40119477, "link": "https://stackoverflow.com/questions/40119477/how-to-send-a-value-to-a-nickel-middleware-function", "title": "How to send a value to a Nickel Middleware function", "body": "<p>Consdier the following code:</p>\n\n<pre><code>extern crate nickel;\nuse nickel::{Nickel, HttpRouter, Request, Response, MiddlewareResult};\n\nfn main() {\n    let data = \"wanted\";\n    let mut server = Nickel::new();\n    server.get(\"/\", landing);\n    server.listen(\"localhost:6767\");\n}\n\nfn landing&lt;'a&gt;(_: &amp;mut Request, response: Response&lt;'a&gt;) -&gt; MiddlewareResult&lt;'a&gt; {\n    response.send(\"not wanted\")\n}\n</code></pre>\n\n<p>I want to use <code>data</code> in the function <code>landing</code>.</p>\n"}, {"tags": ["hashmap", "rust", "optional"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1476819849, "post_id": 40116738, "comment_id": 67504978, "body": "@Shepmaster this code has a different problem than the code in your duplicate."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1476819888, "post_id": 40116738, "comment_id": 67504999, "body": "@LukasKalbertodt it&#39;s true, but I&#39;m answering (duplicating) based on the question asked in the title. Trying to solving the OPs problem, as I don&#39;t suppose they want to hear the direct answer: &quot;All blocks in an <code>if</code> statement must return the same type, and <code>Vec::push</code> and <code>HashMap::insert</code> don&#39;t have the same type&quot;."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1476820209, "post_id": 40116738, "comment_id": 67505214, "body": "If that&#39;s what OP is interested in, this can be a duplicate of <a href=\"http://stackoverflow.com/q/24579756/155423\">stackoverflow.com/q/24579756/155423</a>; <a href=\"http://stackoverflow.com/q/37554325/155423\">stackoverflow.com/q/37554325/155423</a>; <a href=\"http://stackoverflow.com/q/24502282/155423\">stackoverflow.com/q/24502282/155423</a>; <a href=\"http://stackoverflow.com/q/39522242/155423\">stackoverflow.com/q/39522242/155423</a>; or potentially others."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1476821010, "post_id": 40116738, "comment_id": 67505656, "body": "@GeckStar: does this help? I really want to know if all of this is actually helpful to you or not. And if not, how you would expect/hope this question is handled?"}, {"owner": {"reputation": 834, "user_id": 4466895, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/BJvz2.jpg?s=128&g=1", "display_name": "GeckStar", "link": "https://stackoverflow.com/users/4466895/geckstar"}, "edited": false, "score": 0, "creation_date": 1476821541, "post_id": 40116738, "comment_id": 67505956, "body": "I&#39;m currently checking out the duplicate, which means that I&#39;m looking into how to use <code>Entry</code>. The code snippets from the other duplicates in Shepmaster&#39;s second comment gave me more ideas on what to use if I fail to get it right with <code>Entry</code>, e.g. using <code>if</code>clauses with <code>map.contains_key(key)</code>. The best answer would have been to suggest an alternative to the match construct in my answer imo, since I&#39;m understand from Shepmaster&#39;s first comment that I&#39;m trying something here that is inherently flawed, that is using statements returning different types within a <code>match</code> block."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1476821925, "post_id": 40116738, "comment_id": 67506176, "body": "I hope you don&#39;t read too much negativity into my duplicate closing. Like @LukasKalbertodt says, we <i>do</i> want to answer questions, but I don&#39;t want to rewrite the same answers for every specific permutation of submitted code."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1476822105, "post_id": 40116738, "comment_id": 67506286, "body": "FWIW, you <b>cannot</b> use the <code>match</code> or <code>if</code> form combined with <code>get</code> because of borrowing issues. That&#39;s the <i>reason</i> that the <code>Entry</code> API was created, so that entire direction would be a dead end. There&#39;s also issues with immutable vs mutable borrowing, moving out out borrowed content, etc."}, {"owner": {"reputation": 834, "user_id": 4466895, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/BJvz2.jpg?s=128&g=1", "display_name": "GeckStar", "link": "https://stackoverflow.com/users/4466895/geckstar"}, "edited": false, "score": 1, "creation_date": 1476822900, "post_id": 40116738, "comment_id": 67506696, "body": "Gotcha. I didn&#39;t read any negativity into your duplicate closing, if anything that just showed me that I didn&#39;t search thoroughly enough for the problem. I have only started learning Rust this week though, so I&#39;m currently lacking the skill to put the problems I&#39;m facing into words, which makes it hard to search for this stuff."}], "owner": {"reputation": 834, "user_id": 4466895, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/BJvz2.jpg?s=128&g=1", "display_name": "GeckStar", "link": "https://stackoverflow.com/users/4466895/geckstar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 562, "favorite_count": 0, "closed_date": 1476819763, "answer_count": 0, "score": 1, "last_activity_date": 1476819848, "creation_date": 1476819710, "last_edit_date": 1476819848, "question_id": 40116738, "link": "https://stackoverflow.com/questions/40116738/executing-actions-on-a-hashmap-depending-on-whether-a-key-exists-or-not", "closed_reason": "Duplicate", "title": "Executing actions on a HashMap depending on whether a key exists or not", "body": "<p>I wrote a struct <code>Edge</code> which represents a tuple of points, given by IDs as <code>u16</code> types.</p>\n\n<pre><code>#[derive(Debug)]\nstruct Edge {\n    left: u16,\n    right: u16,\n}\n</code></pre>\n\n<p>In my main function, I have a <code>Vector</code> of edges and a <code>HashMap</code> which maps every point ID to a <code>Vector</code> of all edges of which it is the <code>left</code> object.</p>\n\n<p>To fill the <code>HashMap</code>, I iterate over the <code>Vector</code> of edges, check if the <code>left</code> value of the edge is already a key in the <code>HashMap</code>, and if so, I simply add the edge to the <code>Vector</code> of edges, and if not, I insert the new key and value.</p>\n\n<pre><code>let mut map = HashMap::&lt;u16, Vec&lt;Edge&gt;&gt;::new();\nlet edge_list: Vec&lt;Edge&gt; = vec![];  // emptiness of this vector should not affect the code\n\nfor edge in edge_list.iter() {\n    match map.get(&amp;edge.left) {\n        Some(x) =&gt; x.push(*edge),\n        None =&gt; map.insert(edge.left, vec![*edge]),\n    }       \n}\n</code></pre>\n\n<p>However, the compiler does not like my code:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: match arms have incompatible types\n  --&gt; src/main.rs:14:9\n   |\n14 |         match map.get(&amp;edge.left) {\n   |         ^ expected (), found enum `std::option::Option`\n   |\n   = note: expected type `()`\n   = note:    found type `std::option::Option&lt;std::vec::Vec&lt;Edge&gt;&gt;`\nnote: match arm with an incompatible type\n  --&gt; src/main.rs:16:21\n   |\n16 |             None =&gt; map.insert(edge.left, vec![*edge]),\n   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>I don't know what it is expecting. <code>map.get(...)</code> should return an <code>Option</code>, i.e. it is either <code>Some(x)</code> or <code>None</code>, and I am evaluating both cases. I have seen a bunch of cases where <code>match</code> was used to deconstruct an <code>Option</code>. Why would <code>match</code> expect <code>()</code>? What could be wrong?</p>\n"}, {"tags": ["garbage-collection", "rust"], "comments": [{"owner": {"reputation": 1619, "user_id": 3342206, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/92d5672ff3c806eb71d84d7298d5be43?s=128&d=identicon&r=PG&f=1", "display_name": "8bittree", "link": "https://stackoverflow.com/users/3342206/8bittree"}, "edited": false, "score": 11, "creation_date": 1476814871, "post_id": 40115260, "comment_id": 67502126, "body": "<a href=\"https://www.rust-lang.org/en-US/faq.html#is-rust-garbage-collected\" rel=\"nofollow noreferrer\">Rust does not have a garbage collector.</a>"}, {"owner": {"reputation": 2324, "user_id": 2272652, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/vKcw7.jpg?s=128&g=1", "display_name": "Christian Grabowski", "link": "https://stackoverflow.com/users/2272652/christian-grabowski"}, "edited": false, "score": 1, "creation_date": 1476815095, "post_id": 40115260, "comment_id": 67502258, "body": "You can do this like atomic reference counters  to &quot;sorta&quot; accomplish things a garbage collector handles. <a href=\"https://doc.rust-lang.org/std/sync/struct.Arc.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/sync/struct.Arc.html</a>"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1476887264, "post_id": 40115260, "comment_id": 67538365, "body": "&quot;a systems language comparable to C but with a garbage collector&quot; that would be D, not Rust. Where did you read that?"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 10, "last_activity_date": 1476816705, "last_edit_date": 1476816705, "creation_date": 1476814917, "answer_id": 40115371, "question_id": 40115260, "link": "https://stackoverflow.com/questions/40115260/why-does-rust-need-to-return-static-sizes/40115371#40115371", "title": "Why does Rust need to return static sizes?", "body": "<blockquote>\n  <p>Why does Rust need to return static sizes?</p>\n</blockquote>\n\n<p>Every value in every language needs to have a static size. That's how the compiler / interpreter / runtime / virtual machine / hardware knows how to access the bits that make up the value.</p>\n\n<p>In many languages, every value is comparable to a Rust <code>Box</code>, so they all take up one or two pointer's worth of space. The statically-known size for those values allows a layer of indirection which can point to something with a runtime-determined size. </p>\n\n<p>In Rust (and C, C++, probably other system languages), you can also directly store arbitrary values on the stack, unboxed. In these cases, you still need to know the size that the value will occupy.</p>\n\n<p>This is a simplification, as some languages allow certain specific values to reside on the stack, while others \"embed\" certain value types inside of the fixed-size indirection. Tricks like these are usually for performance reasons.</p>\n\n<blockquote>\n  <p>but with a garbage collector</p>\n</blockquote>\n\n<p><a href=\"https://www.rust-lang.org/en-US/faq.html#is-rust-garbage-collected\" rel=\"noreferrer\">Rust <strong>does not</strong> have a garbage collector</a>. It does have <em>smart pointers</em> that deallocate resources when the pointer goes out of scope.</p>\n\n<p><a href=\"https://doc.rust-lang.org/std/boxed/struct.Box.html\" rel=\"noreferrer\"><code>Box</code></a> is the obvious smart pointer, but there's also <a href=\"https://doc.rust-lang.org/std/rc/struct.Rc.html\" rel=\"noreferrer\"><code>Rc</code></a> and <a href=\"https://doc.rust-lang.org/std/sync/struct.Arc.html\" rel=\"noreferrer\"><code>Arc</code></a>.</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user7038223"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 247, "favorite_count": 0, "accepted_answer_id": 40115371, "answer_count": 1, "score": -1, "last_activity_date": 1476816705, "creation_date": 1476814543, "last_edit_date": 1476815101, "question_id": 40115260, "link": "https://stackoverflow.com/questions/40115260/why-does-rust-need-to-return-static-sizes", "title": "Why does Rust need to return static sizes?", "body": "<p>I thought one of the big features of Rust is being a systems language comparable to C but with a garbage collector. If this is the case, why do you need to return values of a static size (or use <code>Box</code> from what I gather)?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 3, "creation_date": 1476800887, "post_id": 40107874, "comment_id": 67493194, "body": "If you are dealing with constants or static variables (and you have to specify the type) it&#39;s common to use a slice type instead: <code>static FOO: &amp;[f32] = &amp;[3.0, ...];</code>"}, {"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 0, "creation_date": 1476805895, "post_id": 40107874, "comment_id": 67496991, "body": "then you can use a <code>const</code>, unless you need to have the slice itself in static memory (i.e if you need a <code>&amp;&#39;static &amp;[f32]</code>)."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 23, "last_activity_date": 1476792536, "creation_date": 1476792536, "answer_id": 40107874, "question_id": 40107797, "link": "https://stackoverflow.com/questions/40107797/can-array-lengths-be-inferred-in-rust/40107874#40107874", "title": "Can array lengths be inferred in Rust?", "body": "<p><code>_</code> can only be used in two contexts: in patterns, to match a value to ignore, and as a placeholder for a type. In array types, the length is not a type, but an expression, and <code>_</code> cannot be used in expressions.</p>\n\n<p>What you can do, though, is append <code>f32</code> to only one of the literals and omit the type completely. Since all the items of an array must have the same type, the compiler will infer the correct element type for the array.</p>\n\n<pre><code>let a = [0.0f32, 1.0, 2.0];\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 53, "user_id": 5490910, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e29ba66bae23a8c962f88da8b78f6868?s=128&d=identicon&r=PG&f=1", "display_name": "miedzinski", "link": "https://stackoverflow.com/users/5490910/miedzinski"}, "is_accepted": false, "score": 1, "last_activity_date": 1579917114, "creation_date": 1579917114, "answer_id": 59905715, "question_id": 40107797, "link": "https://stackoverflow.com/questions/40107797/can-array-lengths-be-inferred-in-rust/59905715#59905715", "title": "Can array lengths be inferred in Rust?", "body": "<p>Since 1.39 it's possible using a simple macro</p>\n\n<pre><code>macro_rules! arr {\n    ($id: ident $name: ident: [$ty: ty; _] = $value: expr) =&gt; {\n        $id $name: [$ty; $value.len()] = $value;\n    }\n}\n</code></pre>\n\n<p>Usage</p>\n\n<pre><code>arr!(static BYTES: [u8; _] = *b\"foo\");\narr!(let floats: [f32; _] = [0., 1.]);\n</code></pre>\n"}], "owner": {"reputation": 67096, "user_id": 265521, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/34a66330977044d70165288c56740d4b?s=128&d=identicon&r=PG", "display_name": "Timmmm", "link": "https://stackoverflow.com/users/265521/timmmm"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 918, "favorite_count": 0, "accepted_answer_id": 40107874, "answer_count": 2, "score": 14, "last_activity_date": 1579917114, "creation_date": 1476792296, "question_id": 40107797, "link": "https://stackoverflow.com/questions/40107797/can-array-lengths-be-inferred-in-rust", "title": "Can array lengths be inferred in Rust?", "body": "<p>I can do this:</p>\n\n<pre><code>let a: [f32; 3] = [0.0, 1.0, 2.0];\n</code></pre>\n\n<p>But why doesn't this work?</p>\n\n<pre><code>let a: [f32; _] = [0.0, 1.0, 2.0];\n</code></pre>\n\n<p>It seems to me that the length is redundant and trivial to infer. Is there a way to avoid having to specify it explicitly? (And without having to append <code>f32</code> to all the literals.)</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 3566, "user_id": 5138648, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1fdbc41d6ae88135845b5d965dac0b13?s=128&d=identicon&r=PG", "display_name": "aSpex", "link": "https://stackoverflow.com/users/5138648/aspex"}, "edited": false, "score": 4, "creation_date": 1476769303, "post_id": 40100077, "comment_id": 67472754, "body": "See here <a href=\"https://doc.rust-lang.org/std/fmt/index.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/fmt/index.html</a> and here <a href=\"http://stackoverflow.com/documentation/rust/362/hello-world/1248/advanced-usage-of-println\">stackoverflow.com/documentation/rust/362/hello-world/1248/&hellip;</a>"}, {"owner": {"reputation": 402, "user_id": 3809903, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/9e1c36e71e453b8ecea77f2e8127942b?s=128&d=identicon&r=PG&f=1", "display_name": "kai", "link": "https://stackoverflow.com/users/3809903/kai"}, "reply_to_user": {"reputation": 3566, "user_id": 5138648, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1fdbc41d6ae88135845b5d965dac0b13?s=128&d=identicon&r=PG", "display_name": "aSpex", "link": "https://stackoverflow.com/users/5138648/aspex"}, "edited": false, "score": 0, "creation_date": 1476769391, "post_id": 40100077, "comment_id": 67472786, "body": "@aSpex Thx!! It is that I want!!! :)"}], "answers": [{"tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": false, "score": 6, "last_activity_date": 1476771790, "last_edit_date": 1476771790, "creation_date": 1476771139, "answer_id": 40100802, "question_id": 40100077, "link": "https://stackoverflow.com/questions/40100077/what-is-the-difference-between-printlns-format-styles/40100802#40100802", "title": "What is the difference between println&#39;s format styles?", "body": "<p><code>println!()</code> is a macro that uses the <a href=\"https://doc.rust-lang.org/stable/std/fmt/index.html\" rel=\"noreferrer\"><code>std::fmt</code> syntax</a> and <code>{}</code> indicate parameters. If the brackets are left empty (<code>{}</code>), the corresponding argument needs to implement the <code>Display</code> trait and if they contain <code>:?</code> it means that the argument's <code>Debug</code> implementation should be used instead.</p>\n\n<p>The bottom line is that it is not the parameters' type that is relevant here, but <a href=\"https://doc.rust-lang.org/stable/std/fmt/index.html#formatting-traits\" rel=\"noreferrer\">the traits they implement</a>. For instance, <code>Vec</code>tors implement <code>Debug</code>, but they don't implement <code>Display</code> and that is why you can't use <code>{}</code> against them while <code>{:?}</code> works just fine.</p>\n"}, {"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 15, "last_activity_date": 1476773089, "creation_date": 1476773089, "answer_id": 40101290, "question_id": 40100077, "link": "https://stackoverflow.com/questions/40100077/what-is-the-difference-between-printlns-format-styles/40101290#40101290", "title": "What is the difference between println&#39;s format styles?", "body": "<p>For thoroughness, the <code>std::fmt</code> formatting syntax is composed of two parts:</p>\n\n<pre><code>{&lt;position-or-name&gt;:&lt;format&gt;}\n</code></pre>\n\n<p>where:</p>\n\n<ul>\n<li><code>&lt;position-or-name&gt;</code> can be the argument position: <code>println!(\"Hello {0}!\"</code>, \"world\");`, note that it is checked at compile-time</li>\n<li><code>&lt;position-or-name&gt;</code> can also be a name: <code>println!(\"Hello {arg}!\", arg = \"world\");</code></li>\n<li><code>&lt;format&gt;</code> is <a href=\"https://doc.rust-lang.org/stable/std/fmt/index.html#formatting-traits\">one of the following formats</a>, where each format requires the argument to implement a specific trait, checked at compile-time</li>\n</ul>\n\n<p>The default, in the absence of position, name or format, is to pick the argument matching the index of <code>{}</code> and to use the <code>Display</code> trait. There are however various traits! From the link above:</p>\n\n<ul>\n<li>nothing \u21d2 Display</li>\n<li><code>?</code> \u21d2 Debug</li>\n<li><code>o</code> \u21d2 Octal</li>\n<li><code>x</code> \u21d2 LowerHex</li>\n<li><code>X</code> \u21d2 UpperHex</li>\n<li><code>p</code> \u21d2 Pointer</li>\n<li><code>b</code> \u21d2 Binary</li>\n<li><code>e</code> \u21d2 LowerExp</li>\n<li><code>E</code> \u21d2 UpperExp</li>\n</ul>\n\n<p>and if necessary new traits could be added in the future.</p>\n"}], "owner": {"reputation": 402, "user_id": 3809903, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/9e1c36e71e453b8ecea77f2e8127942b?s=128&d=identicon&r=PG&f=1", "display_name": "kai", "link": "https://stackoverflow.com/users/3809903/kai"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 879, "favorite_count": 1, "answer_count": 2, "score": 10, "last_activity_date": 1476774722, "creation_date": 1476767889, "last_edit_date": 1476774722, "question_id": 40100077, "link": "https://stackoverflow.com/questions/40100077/what-is-the-difference-between-printlns-format-styles", "title": "What is the difference between println&#39;s format styles?", "body": "<p>I'm so sorry to ask such a simple question... A day ago, I started learning Rust and tried the <code>println!</code> method.</p>\n\n<pre><code>fn main() {\n  println!(\"Hello {}!\", \"world\");\n}\n-&gt; Hello world!\n</code></pre>\n\n<p>And then, I found other format styles: <code>{}, {:}, {:?}, {?}</code>, ...</p>\n\n<p>I know that <code>{}</code> is instead <code>String</code>, but I don't understand the other format style. How do those styles differ from each other? I think <code>{:?}</code> is array or vector. Is it correct?</p>\n\n<p>Please explain these format style with sample code :(</p>\n"}, {"tags": ["rust", "typetraits"], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "delete_vote_count": 1, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 45, "favorite_count": 0, "closed_date": 1476745391, "answer_count": 0, "score": 2, "last_activity_date": 1476744409, "creation_date": 1476744409, "question_id": 40096841, "link": "https://stackoverflow.com/questions/40096841/cant-impl-a-type-trait-requiring-debug-for-a-type-containing-phantomdata", "closed_reason": "Duplicate", "title": "Can&#39;t impl a type trait requiring Debug for a type containing PhantomData", "body": "<p>Given the following code (<a href=\"https://play.rust-lang.org/?gist=ad70fe340d2ac3f7b11dc49bfec7e3b9&amp;version=stable&amp;backtrace=0\" rel=\"nofollow\">Rust Playground</a>):</p>\n\n<pre><code>use std::fmt::Debug;\nuse std::marker::PhantomData;\n\ntrait Herp: Debug {}\n\n#[derive(Debug)]\nstruct Derp&lt;S: ?Sized&gt; {\n    phantom: PhantomData&lt;S&gt;\n}\n\nimpl&lt;S: ?Sized&gt; Herp for Derp&lt;S&gt; {}\n</code></pre>\n\n<p>The following error occurs:</p>\n\n<pre><code>error[E0277]: the trait bound `S: std::fmt::Debug` is not satisfied\n  --&gt; src/...\n   |\n37 | impl&lt;S: ?Sized&gt; Herp for Derp&lt;S&gt; {}\n   |                 ^^^^\n   |\n   = help: consider adding a `where S: std::fmt::Debug` bound\n   = note: required because of the requirements on the impl of `std::fmt::Debug` for `Derp&lt;S&gt;`\n   = note: required by `Herp\n</code></pre>\n\n<p>I find this behaviour inappropriate because <code>Debug</code> is derived properly for <code>Derp</code> and <code>PhantomData&lt;T&gt;</code> should implement <code>Debug</code> regardless of type <code>T</code> (<a href=\"https://doc.rust-lang.org/std/marker/struct.PhantomData.html\" rel=\"nofollow\">docs</a>). I also couldn't find anything else on my search that could apparently induce this error.</p>\n\n<p>Why can't I implement a trait that requires Debug for a type containing a phantom?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 3, "creation_date": 1476737645, "post_id": 40095383, "comment_id": 67463735, "body": "Nice question. I was expecting a <code>map()</code> method on <code>MutexGuard</code>, like <a href=\"https://doc.rust-lang.org/std/cell/struct.Ref.html#method.map\" rel=\"nofollow noreferrer\"><code>Ref::map()</code></a>... Why isn&#39;t there one? *_*"}, {"owner": {"reputation": 3376, "user_id": 134409, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e1ec6b4e77bfbae1b992957792572630?s=128&d=identicon&r=PG", "display_name": "dpc.pw", "link": "https://stackoverflow.com/users/134409/dpc-pw"}, "edited": false, "score": 0, "creation_date": 1476739990, "post_id": 40095383, "comment_id": 67464798, "body": "``` impl MyStruct { fn with_data&lt;F : Fn(&amp;Vec&lt;i32))&gt; (f : F) { ... } } ``` Would that work? Basically just let the user provide a function that will modify that data when under lock, instead of trying to return it?"}, {"owner": {"reputation": 449, "user_id": 878298, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d5910505de191043ea9aa614073ae05?s=128&d=identicon&r=PG", "display_name": "Sergey Mitskevich", "link": "https://stackoverflow.com/users/878298/sergey-mitskevich"}, "reply_to_user": {"reputation": 3376, "user_id": 134409, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e1ec6b4e77bfbae1b992957792572630?s=128&d=identicon&r=PG", "display_name": "dpc.pw", "link": "https://stackoverflow.com/users/134409/dpc-pw"}, "edited": false, "score": 0, "creation_date": 1476740689, "post_id": 40095383, "comment_id": 67465084, "body": "@dpc.pw Yep. I thought about closure approach too... Not very beautiful, but does what I need... The best solution would be something like <code>map()</code> as Lukas mentioned, or some kind of weird lifetime manipulation magic, but I can&#39;t think of any..."}, {"owner": {"reputation": 3376, "user_id": 134409, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e1ec6b4e77bfbae1b992957792572630?s=128&d=identicon&r=PG", "display_name": "dpc.pw", "link": "https://stackoverflow.com/users/134409/dpc-pw"}, "edited": false, "score": 0, "creation_date": 1476741790, "post_id": 40095383, "comment_id": 67465517, "body": "Closure method is commonly used through rust code for references, borrows etc."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1476744982, "post_id": 40095383, "comment_id": 67466531, "body": "<a href=\"https://play.rust-lang.org/?gist=b2e483fa6b65d762f03b7137cbe686a0&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">It&#39;s kind of possible</a>. This code is not very nice tho, because it will do the lookup every time <code>deref()</code> is called. I don&#39;t think you can do any better in safe Rust. But I&#39;d love to be proven wrong here."}, {"owner": {"reputation": 17491, "user_id": 901827, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/86a6acccf7e8dbe398ebda4f8524ed50?s=128&d=identicon&r=PG", "display_name": "LinearZoetrope", "link": "https://stackoverflow.com/users/901827/linearzoetrope"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1476770886, "post_id": 40095383, "comment_id": 67473413, "body": "@LukasKalbertodt I think you have the right idea but the wrong approach, I think you need a <code>struct{MutexGuard&lt;&#39;a&gt;,&amp;&#39;a Inner}</code> with a <code>deref(_mut)</code> and <code>map</code> method. That should allow arbitrary remapping without waiting for a lock every time in safe Rust."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 17491, "user_id": 901827, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/86a6acccf7e8dbe398ebda4f8524ed50?s=128&d=identicon&r=PG", "display_name": "LinearZoetrope", "link": "https://stackoverflow.com/users/901827/linearzoetrope"}, "edited": false, "score": 1, "creation_date": 1476774350, "post_id": 40095383, "comment_id": 67475186, "body": "@Jsor I&#39;d love to see that in action ;-)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1533267942, "post_id": 40095383, "comment_id": 90293227, "body": "@LukasKalbertodt <a href=\"https://github.com/rust-lang/rust/pull/30834#issuecomment-180284290\" rel=\"nofollow noreferrer\">Evidently <code>MutexGuard::map</code> would be unsound</a>"}], "answers": [{"comments": [{"owner": {"reputation": 449, "user_id": 878298, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d5910505de191043ea9aa614073ae05?s=128&d=identicon&r=PG", "display_name": "Sergey Mitskevich", "link": "https://stackoverflow.com/users/878298/sergey-mitskevich"}, "edited": false, "score": 1, "creation_date": 1476812975, "post_id": 40103493, "comment_id": 67501125, "body": "Thanks for your answer! I decided to mark Chris&#39; answer as accepted, because <code>owning_ref</code> does not require to make an intermediate type. But more importantly, as Lukas pointed in similar suggestion in comments, this will invoke <code>map()</code> closure on each <code>deref()</code>. On other hand, <code>owning_ref</code> invokes lookup only once (at least in cases I have tested)."}], "tags": [], "owner": {"reputation": 1699, "user_id": 783825, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/cce2622c5ccd49a3cbf2007491ab1075?s=128&d=identicon&r=PG", "display_name": "Neikos", "link": "https://stackoverflow.com/users/783825/neikos"}, "is_accepted": false, "score": 6, "last_activity_date": 1476780097, "creation_date": 1476780097, "answer_id": 40103493, "question_id": 40095383, "link": "https://stackoverflow.com/questions/40095383/how-to-return-a-reference-to-a-sub-value-of-a-value-that-is-under-a-mutex/40103493#40103493", "title": "How to return a reference to a sub-value of a value that is under a mutex?", "body": "<p>This can be made possible by using a secondary struct that implements <code>Deref</code> and holds the MutexGuard.</p>\n\n<p>Example:</p>\n\n<pre><code>use std::sync::{Arc, Mutex, MutexGuard};\nuse std::collections::HashMap;\nuse std::ops::Deref;\n\npub struct Inner&lt;'a&gt;(MutexGuard&lt;'a, HashMap&lt;i32, Vec&lt;i32&gt;&gt;&gt;, i32);\n\nimpl&lt;'a&gt; Deref for Inner&lt;'a&gt; {\n    type Target = Vec&lt;i32&gt;;\n    fn deref(&amp;self) -&gt; &amp;Self::Target {\n        self.0.get(&amp;self.1).unwrap()\n    }\n}\npub struct MyStruct {\n    data: Arc&lt;Mutex&lt;HashMap&lt;i32, Vec&lt;i32&gt;&gt;&gt;&gt;,\n}\n\nimpl MyStruct {\n    pub fn get_data_for&lt;'a&gt;(&amp;'a self, i: i32) -&gt; Inner&lt;'a&gt; {\n        let d = self.data.lock().unwrap();\n        Inner(d, i)\n    }\n}\n\nfn main() {\n    let mut hm = HashMap::new();\n    hm.insert(1, vec![1,2,3]);\n    let s = MyStruct {\n        data: Arc::new(Mutex::new(hm))\n    };\n\n    {\n        let v = s.get_data_for(1);\n        println!(\"{:?}\", *v);\n        let x : Vec&lt;_&gt; = v.iter().map(|x| x * 2).collect();\n        println!(\"{:?}\", x); // Just an example to see that it works\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 1699, "user_id": 783825, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/cce2622c5ccd49a3cbf2007491ab1075?s=128&d=identicon&r=PG", "display_name": "Neikos", "link": "https://stackoverflow.com/users/783825/neikos"}, "edited": false, "score": 0, "creation_date": 1476783632, "post_id": 40103840, "comment_id": 67481022, "body": "The library has a type called <code>MutexGuardRef</code> why not use that? <a href=\"http://kimundi.github.io/owning-ref-rs/owning_ref/type.MutexGuardRef.html\" rel=\"nofollow noreferrer\">kimundi.github.io/owning-ref-rs/owning_ref/&hellip;</a>"}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "reply_to_user": {"reputation": 1699, "user_id": 783825, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/cce2622c5ccd49a3cbf2007491ab1075?s=128&d=identicon&r=PG", "display_name": "Neikos", "link": "https://stackoverflow.com/users/783825/neikos"}, "edited": false, "score": 0, "creation_date": 1476785236, "post_id": 40103840, "comment_id": 67482185, "body": "Thanks, I hadn&#39;t noticed <code>MutexGuardRef</code>!"}, {"owner": {"reputation": 849, "user_id": 5745120, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/7127d653b208611f48e4d73b7b7f8aec?s=128&d=identicon&r=PG", "display_name": "Sergey", "link": "https://stackoverflow.com/users/5745120/sergey"}, "edited": false, "score": 0, "creation_date": 1512923788, "post_id": 40103840, "comment_id": 82442033, "body": "@ChrisEmerson Is it possible to modify <code>get_data_for</code> method so it would not <code>unwrap</code> the result of <code>get</code> function and would return <code>Option</code>? I tried to do it myself but cannot get around <code>conflicting lifetime requirements</code> errors"}], "tags": [], "owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "is_accepted": true, "score": 9, "last_activity_date": 1476785218, "last_edit_date": 1476785218, "creation_date": 1476781147, "answer_id": 40103840, "question_id": 40095383, "link": "https://stackoverflow.com/questions/40095383/how-to-return-a-reference-to-a-sub-value-of-a-value-that-is-under-a-mutex/40103840#40103840", "title": "How to return a reference to a sub-value of a value that is under a mutex?", "body": "<p>This solution is similar to @Neikos's, but using <a href=\"https://crates.io/crates/owning_ref/\" rel=\"noreferrer\">owning_ref</a> to do hold the <code>MutexGuard</code> and a reference to the <code>Vec</code>:</p>\n\n<pre><code>extern crate owning_ref;\nuse std::sync::Arc;\nuse std::sync::{Mutex,MutexGuard};\nuse std::collections::HashMap;\nuse std::vec::Vec;\nuse owning_ref::MutexGuardRef;\n\ntype HM = HashMap&lt;i32, Vec&lt;i32&gt;&gt;;\n\npub struct MyStruct {\n    data: Arc&lt;Mutex&lt;HM&gt;&gt;,\n}\n\nimpl MyStruct {\n    pub fn new() -&gt; MyStruct {\n        let mut hm = HashMap::new();\n        hm.insert(3, vec![2,3,5,7]);\n        MyStruct{\n            data: Arc::new(Mutex::new(hm)),\n        }\n    }\n    pub fn get_data_for&lt;'ret, 'me:'ret, 'c&gt;(&amp;'me self, i: &amp;'c i32) -&gt; MutexGuardRef&lt;'ret, HM, Vec&lt;i32&gt;&gt; {\n        MutexGuardRef::new(self.data.lock().unwrap())\n               .map(|mg| mg.get(i).unwrap())\n    }\n}\n\nfn main() {\n    let s: MyStruct = MyStruct::new();\n\n    let vref = s.get_data_for(&amp;3);\n\n    for x in vref.iter() {\n        println!(\"{}\", x);\n    }\n}\n</code></pre>\n\n<p>This has the advantage that it's easy (through the <code>map</code> method on <code>owning_ref</code>) to get a similar reference to anything else reachable from the <code>Mutex</code> (an individual item in a <code>Vec</code>, etc.) without having to re-implement the returned type.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 3, "last_activity_date": 1527113954, "creation_date": 1527113954, "answer_id": 50498286, "question_id": 40095383, "link": "https://stackoverflow.com/questions/40095383/how-to-return-a-reference-to-a-sub-value-of-a-value-that-is-under-a-mutex/50498286#50498286", "title": "How to return a reference to a sub-value of a value that is under a mutex?", "body": "<p>As described in <a href=\"https://stackoverflow.com/q/32300132/155423\">Why can&#39;t I store a value and a reference to that value in the same struct?</a>, the <a href=\"https://crates.io/crates/rental\" rel=\"nofollow noreferrer\">Rental crate</a> allows for self-referential structs in certain cases. Here, we bundle the <code>Arc</code>, the <code>MutexGuard</code>, and the value all into a struct that <code>Deref</code>s to the value:</p>\n\n<pre><code>#[macro_use]\nextern crate rental;\n\nuse std::{\n    collections::HashMap, sync::{Arc, Mutex},\n};\n\nuse owning_mutex_guard_value::OwningMutexGuardValue;\n\npub struct MyStruct {\n    data: Arc&lt;Mutex&lt;HashMap&lt;i32, Vec&lt;i32&gt;&gt;&gt;&gt;,\n}\n\nimpl MyStruct {\n    pub fn get_data_for(&amp;self, i: &amp;i32) -&gt; OwningMutexGuardValue&lt;HashMap&lt;i32, Vec&lt;i32&gt;&gt;, Vec&lt;i32&gt;&gt; {\n        OwningMutexGuardValue::new(\n            self.data.clone(),\n            |d| Box::new(d.lock().unwrap()),\n            |g, _| g.get(i).unwrap(),\n        )\n    }\n}\n\nrental! {\n    mod owning_mutex_guard_value {\n        use std::sync::{Arc, Mutex, MutexGuard};\n\n        #[rental(deref_suffix)]\n        pub struct OwningMutexGuardValue&lt;T, U&gt;\n        where\n            T: 'static,\n            U: 'static,\n        {\n            lock: Arc&lt;Mutex&lt;T&gt;&gt;,\n            guard: Box&lt;MutexGuard&lt;'lock, T&gt;&gt;,\n            value: &amp;'guard U,\n        }\n    }\n}\n\nfn main() {\n    let mut data = HashMap::new();\n    data.insert(1, vec![1, 2, 3]);\n    let s = MyStruct {\n        data: Arc::new(Mutex::new(data)),\n    };\n\n    let locked_data = s.get_data_for(&amp;1);\n    let total: i32 = locked_data.iter().map(|x| x * 2).sum();\n    println!(\"{}\", total);\n\n    assert!(s.data.try_lock().is_err());\n\n    drop(locked_data);\n\n    assert!(s.data.try_lock().is_ok());\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1600801180, "post_id": 63506964, "comment_id": 113201163, "body": "This answer is so underrated. Thanks, this is exactly what I was looking for, and I&#39;d never think to look for it in <code>parking_lot</code>."}], "tags": [], "owner": {"reputation": 1022, "user_id": 5863987, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/z7wZz.png?s=128&g=1", "display_name": "NieDzejkob", "link": "https://stackoverflow.com/users/5863987/niedzejkob"}, "is_accepted": false, "score": 3, "last_activity_date": 1597932658, "creation_date": 1597932658, "answer_id": 63506964, "question_id": 40095383, "link": "https://stackoverflow.com/questions/40095383/how-to-return-a-reference-to-a-sub-value-of-a-value-that-is-under-a-mutex/63506964#63506964", "title": "How to return a reference to a sub-value of a value that is under a mutex?", "body": "<p>The <a href=\"https://docs.rs/parking_lot/\" rel=\"nofollow noreferrer\"><code>parking_lot</code></a> crate provides an implementation of Mutexes that's better on many accounts than the one in <code>std</code>. Among the goodies is <code>MutexGuard::map</code>, which implements an interface similar to <code>owning_ref</code>'s.</p>\n<pre><code>use std::sync::Arc;\nuse parking_lot::{Mutex, MutexGuard, MappedMutexGuard};\nuse std::collections::HashMap;\n\npub struct MyStruct {\n    data: Arc&lt;Mutex&lt;HashMap&lt;i32, Vec&lt;i32&gt;&gt;&gt;&gt;,\n}\n\nimpl MyStruct {\n    pub fn get_data_for(&amp;self, i: &amp;i32) -&gt; MappedMutexGuard&lt;Vec&lt;i32&gt;&gt; {\n        MutexGuard::map(self.data.lock(), |d| d.get_mut(i).unwrap())\n    }\n}\n</code></pre>\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d715ce55c8980899c232f0e54c013996\" rel=\"nofollow noreferrer\">You can try it on the playground here.</a></p>\n"}], "owner": {"reputation": 449, "user_id": 878298, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d5910505de191043ea9aa614073ae05?s=128&d=identicon&r=PG", "display_name": "Sergey Mitskevich", "link": "https://stackoverflow.com/users/878298/sergey-mitskevich"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3628, "favorite_count": 7, "accepted_answer_id": 40103840, "answer_count": 4, "score": 22, "last_activity_date": 1597932658, "creation_date": 1476737226, "last_edit_date": 1527112525, "question_id": 40095383, "link": "https://stackoverflow.com/questions/40095383/how-to-return-a-reference-to-a-sub-value-of-a-value-that-is-under-a-mutex", "title": "How to return a reference to a sub-value of a value that is under a mutex?", "body": "<p>I have a structure that looks somewhat like this:</p>\n\n<pre><code>pub struct MyStruct {\n    data: Arc&lt;Mutex&lt;HashMap&lt;i32, Vec&lt;i32&gt;&gt;&gt;&gt;,\n}\n</code></pre>\n\n<p>I can easily get a lock on the mutex and query the underlying <code>HashMap</code>:</p>\n\n<pre><code>let d = s.data.lock().unwrap();\nlet v = d.get(&amp;1).unwrap();\nprintln!(\"{:?}\", v);\n</code></pre>\n\n<p>Now I want to make a method to encapsulate the querying, so I write something like this:</p>\n\n<pre><code>impl MyStruct {\n    pub fn get_data_for(&amp;self, i: &amp;i32) -&gt; &amp;Vec&lt;i32&gt; {\n        let d = self.data.lock().unwrap();\n        d.get(i).unwrap()\n    }\n}\n</code></pre>\n\n<p>This fails to compile because I'm trying to return a reference to the data under a <code>Mutex</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: `d` does not live long enough\n  --&gt; &lt;anon&gt;:30:9\n   |\n30 |         d.get(i).unwrap()\n   |         ^\n   |\nnote: reference must be valid for the anonymous lifetime #1 defined on the block at 28:53...\n  --&gt; &lt;anon&gt;:28:54\n   |\n28 |     pub fn get_data_for(&amp;self, i: &amp;i32) -&gt; &amp;Vec&lt;i32&gt; {\n   |                                                      ^\nnote: ...but borrowed value is only valid for the block suffix following statement 0 at 29:42\n  --&gt; &lt;anon&gt;:29:43\n   |\n29 |         let d = self.data.lock().unwrap();\n   |                                           ^\n</code></pre>\n\n<p>I can fix it by wrapping the <code>HashMap</code> values in an <code>Arc</code>, but it looks ugly (<code>Arc</code> in <code>Arc</code>) and complicates the code:</p>\n\n<pre><code>pub struct MyStruct {\n    data: Arc&lt;Mutex&lt;HashMap&lt;i32, Arc&lt;Vec&lt;i32&gt;&gt;&gt;&gt;&gt;,\n}\n</code></pre>\n\n<p>What is the best way to approach this? Is it possible to make a method that does what I want, without modifying the data structure?</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=1b612a0968b0666f5fc414c395715d0a&amp;version=stable&amp;backtrace=0\" rel=\"noreferrer\">Full example code</a>.</p>\n"}, {"tags": ["sorting", "vector", "reference", "rust", "tuples"], "comments": [{"owner": {"reputation": 10707, "user_id": 6650102, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/boCIP.jpg?s=128&g=1", "display_name": "Aurora0001", "link": "https://stackoverflow.com/users/6650102/aurora0001"}, "edited": false, "score": 4, "creation_date": 1476721121, "post_id": 40091161, "comment_id": 67455003, "body": "It might help if you look at the trait where <code>cmp</code> is defined: <a href=\"https://doc.rust-lang.org/std/cmp/trait.Ord.html#tymethod.cmp\" rel=\"nofollow noreferrer\"><code>Ord::cmp(&amp;self, other: &amp;Self)</code></a>."}, {"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 1, "creation_date": 1476732721, "post_id": 40091161, "comment_id": 67461138, "body": "If you are so inclined, you can call it in \u201csymmetric\u201d fashion like this: <code>Ord::cmp(&amp;a.1, &amp;b.1)</code>"}], "answers": [{"comments": [{"owner": {"reputation": 834, "user_id": 4466895, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/BJvz2.jpg?s=128&g=1", "display_name": "GeckStar", "link": "https://stackoverflow.com/users/4466895/geckstar"}, "edited": false, "score": 0, "creation_date": 1476722599, "post_id": 40091455, "comment_id": 67455819, "body": "Great answer. While the comment by Aurora0001 certainly helped, it were the details to the dot operator that I really needed to &quot;get&quot; it. Thanks."}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 21, "last_activity_date": 1476722096, "creation_date": 1476722096, "answer_id": 40091455, "question_id": 40091161, "link": "https://stackoverflow.com/questions/40091161/sorting-a-vector-of-tuples-needs-a-reference-for-the-second-value/40091455#40091455", "title": "Sorting a vector of tuples needs a reference for the second value?", "body": "<p>As Aurora0001 already pointed out in the comments, we should have a look at <a href=\"https://doc.rust-lang.org/std/cmp/trait.Ord.html#tymethod.cmp\" rel=\"noreferrer\">the function signature of <code>cmp()</code></a>:</p>\n\n<pre><code>fn cmp(&amp;self, other: &amp;Self) -&gt; Ordering\n</code></pre>\n\n<p>We see that both values are taken by reference, so it shouldn't be a surprise that you have to pass <code>&amp;b.1</code> to the method instead of <code>b.1</code>. </p>\n\n<blockquote>\n  <p>Especially because I do not need to reference <code>a.1</code>, either.</p>\n</blockquote>\n\n<p>This is the more interesting question ;-) </p>\n\n<p>The simple solution is, that the <code>.</code> (dot) operator performs auto-dereferencing as well as auto-borrowing. Let's see it in action:</p>\n\n<pre><code>struct Foo;\n\nimpl Foo {\n    fn takes_value(self) {}\n    fn takes_ref(&amp;self) {}\n    fn takes_mut_ref(&amp;mut self) {}\n}\n\nfn main() {\n    let mut a = Foo;\n\n    // all of those work thanks to auto-borrowing\n    a.takes_ref();\n    a.takes_mut_ref();\n    a.takes_value();\n\n    // --------\n    let b = Foo;\n    let c = &amp;mut b;\n\n    // these work as well\n    c.takes_ref();\n    c.takes_mut_ref();\n\n    // this one works, *if* the type implements `Copy`\n    c.takes_value();\n}\n</code></pre>\n\n<p>So the <code>.</code> operator helps the programmer and always passes the right kind of <code>self</code> parameter.</p>\n\n<hr>\n\n<p><strong>Note</strong>: the kind of sorting you are doing very common. There is a method even better suited for this task: <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.sort_by_key\" rel=\"noreferrer\"><code>[T]::sort_by_key()</code></a>. It would look like this:</p>\n\n<pre><code>// note: type annotations not required\nlet mut tuple_list2 = vec![(1, 5), (0, 17), (8, 2)];\ntuple_list2.sort_by_key(|k| k.1);\n</code></pre>\n"}], "owner": {"reputation": 834, "user_id": 4466895, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/BJvz2.jpg?s=128&g=1", "display_name": "GeckStar", "link": "https://stackoverflow.com/users/4466895/geckstar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4016, "favorite_count": 1, "accepted_answer_id": 40091455, "answer_count": 1, "score": 13, "last_activity_date": 1476724331, "creation_date": 1476720965, "last_edit_date": 1476724331, "question_id": 40091161, "link": "https://stackoverflow.com/questions/40091161/sorting-a-vector-of-tuples-needs-a-reference-for-the-second-value", "title": "Sorting a vector of tuples needs a reference for the second value?", "body": "<p>I have a vector of tuples of integers and want to sort it by the second element of each tuple:</p>\n\n<pre><code>fn main() {\n    let mut tuple_list2: Vec&lt;(u16, u16)&gt; = vec![(1, 5), (0, 17), (8, 2)];\n    tuple_list2.sort_by(|a, b| a.1.cmp(b.1));\n}\n</code></pre>\n\n<p>The compiler throws an error because <code>b.1</code> is a <code>u16</code> and not a reference to one (<code>&amp;u16</code>). I can solve this problem by referencing <code>b.1</code> instead:</p>\n\n<pre><code>fn main() {\n    let mut tuple_list2: Vec&lt;(u16, u16)&gt; = vec![(1, 5), (0, 17), (8, 2)];\n    tuple_list2.sort_by(|a, b| a.1.cmp(&amp;b.1));\n}\n</code></pre>\n\n<p>I don't understand why I have to do this. Especially because I do not need to reference <code>a.1</code>, either.</p>\n"}, {"tags": ["rust", "mio"], "owner": {"reputation": 1599, "user_id": 2441230, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/4a3fe1d786c575a3b6aaa872604d1d13?s=128&d=identicon&r=PG", "display_name": "ElefEnt", "link": "https://stackoverflow.com/users/2441230/elefent"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 188, "favorite_count": 0, "answer_count": 0, "score": 3, "last_activity_date": 1476669258, "creation_date": 1476669026, "last_edit_date": 1476669258, "question_id": 40077440, "link": "https://stackoverflow.com/questions/40077440/can-i-register-one-tcplistener-on-multiple-mio-poll-objects", "title": "Can I register one TcpListener on multiple mio Poll objects?", "body": "<p>Can I register the same <code>TcpListener</code> on multiple mio <code>Poll</code> objects (one <code>Poll</code> per thread for a multi-threaded server)?</p>\n\n<p>When I try, I get the error: </p>\n\n<blockquote>\n  <p>thread 'main' panicked at 'called <code>Result::unwrap()</code> on an <code>Err</code>\n  value:  Error { repr: Custom(Custom { kind: Other, error:\n  StringError(\"socket  already registered\") }) }',\n  src/libcore/result.rs:788</p>\n</blockquote>\n\n<p>Is this intended behavior?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1476668354, "post_id": 40076875, "comment_id": 67427746, "body": "Duplicate of <a href=\"http://stackoverflow.com/q/24579756/155423\">stackoverflow.com/q/24579756/155423</a>; <a href=\"http://stackoverflow.com/q/37554325/155423\">stackoverflow.com/q/37554325/155423</a>; <a href=\"http://stackoverflow.com/q/24502282/155423\">stackoverflow.com/q/24502282/155423</a>; <a href=\"http://stackoverflow.com/q/39522242/155423\">stackoverflow.com/q/39522242/155423</a> and probably others."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1476687614, "post_id": 40076875, "comment_id": 67433304, "body": "If <code>self.worlds.len() &gt; 0</code> is <i>not</i> true, the length is 0 and indexing at 0 will panic. You might want to return an <code>Option&lt;World&gt;</code>."}], "answers": [{"comments": [{"owner": {"reputation": 9945, "user_id": 1270259, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/f8493a9385dae9f438379050d76ac2bf?s=128&d=identicon&r=PG", "display_name": "TheWebs", "link": "https://stackoverflow.com/users/1270259/thewebs"}, "edited": false, "score": 1, "creation_date": 1476665817, "post_id": 40076896, "comment_id": 67427293, "body": "Ahh this makes sense. I thought with out the <code>return</code> keyword, rust would know &quot;ok he doesn&#39;t use a <code>;</code> so he must want to return&quot; Thanks :)"}, {"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "reply_to_user": {"reputation": 9945, "user_id": 1270259, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/f8493a9385dae9f438379050d76ac2bf?s=128&d=identicon&r=PG", "display_name": "TheWebs", "link": "https://stackoverflow.com/users/1270259/thewebs"}, "edited": false, "score": 2, "creation_date": 1476666870, "post_id": 40076896, "comment_id": 67427480, "body": "You&#39;re correct... except it doesn&#39;t assume &quot;so he must want to return <i>from the function</i>&quot;. Everything is an expression in Rust - everything returns a value. Your <code>if</code> conditional here is what Rust is assuming &quot;wants to return&quot; a value from. Its not assigned to anything and so Rust expects it&#39;ll return unit (which is <code>()</code>.. nothing). Instead, your conditional evaluates to a <code>World</code> instance: hence the error."}], "tags": [], "owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "is_accepted": true, "score": 5, "last_activity_date": 1476663250, "creation_date": 1476663250, "answer_id": 40076896, "question_id": 40076875, "link": "https://stackoverflow.com/questions/40076875/expected-but-found-a-struct/40076896#40076896", "title": "Expected () but found a struct", "body": "<p>Your <code>if</code> block doesn't return anything.. flow will fall through here:</p>\n\n<pre><code>if self.worlds.len() &gt; 0 {\n    let world_index: usize = rng.gen_range(0, self.worlds.len());\n\n    self.worlds[world_index]\n} // &lt;--- ... this drops down\n\nself.worlds[0]\n</code></pre>\n\n<p>Here is a simple reproduction of your issue: <a href=\"https://play.rust-lang.org/?gist=43ddb2d89bf51f277a4e476e942f8e1c&amp;version=stable&amp;backtrace=0\" rel=\"noreferrer\">Playground link</a></p>\n\n<p>There are two ways you can fix this. First, you can explicitly return in the conditional (<a href=\"https://play.rust-lang.org/?gist=0f7fb465e664d21eafc9ab02f1ec752c&amp;version=stable&amp;backtrace=0\" rel=\"noreferrer\">View it on the playground</a>):</p>\n\n<pre><code>if self.worlds.len() &gt; 0 {\n    let world_index: usize = rng.gen_range(0, self.worlds.len());\n\n    return self.worlds[world_index]; // Explicitly return out of here\n} \n\nself.worlds[0]\n</code></pre>\n\n<p>The more \"idiomatic\" approach I guess would be to add an <code>else</code> block, so that the value the conditional evaluates to is actually what the function returns (<a href=\"https://play.rust-lang.org/?gist=f71b7d86c8e4bf63943f62c0b5b32ecf&amp;version=stable&amp;backtrace=0\" rel=\"noreferrer\">View it on the playground</a>):</p>\n\n<pre><code>if self.worlds.len() &gt; 0 {\n    let world_index: usize = rng.gen_range(0, self.worlds.len());\n\n    self.worlds[world_index]\n} else {\n    self.worlds[0]\n}\n</code></pre>\n\n<p>Now, no matter what logical branch the code takes, the expression that results will be returned from the function.</p>\n"}], "owner": {"reputation": 9945, "user_id": 1270259, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/f8493a9385dae9f438379050d76ac2bf?s=128&d=identicon&r=PG", "display_name": "TheWebs", "link": "https://stackoverflow.com/users/1270259/thewebs"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2875, "favorite_count": 0, "closed_date": 1476687675, "accepted_answer_id": 40076896, "answer_count": 1, "score": -1, "last_activity_date": 1476667717, "creation_date": 1476663091, "last_edit_date": 1476667717, "question_id": 40076875, "link": "https://stackoverflow.com/questions/40076875/expected-but-found-a-struct", "closed_reason": "Duplicate", "title": "Expected () but found a struct", "body": "<p>I have a world object:</p>\n\n<pre><code>use rand::{thread_rng, Rng};\n\nuse super::world::World;\n\npub struct Worlds {\n    worlds: Vec&lt;World&gt;\n}\n\nimpl Worlds {\n    pub fn new(world: Vec&lt;World&gt;) -&gt; Worlds {\n        Worlds { worlds: world }\n    }\n\n    pub fn get_random_world(&amp;self) -&gt; World {\n        let mut rng = thread_rng();\n\n        if self.worlds.len() &gt; 0 {\n            let world_index: usize = rng.gen_range(0, self.worlds.len());\n\n            self.worlds[world_index]\n        }\n\n        self.worlds[0]\n    }\n}\n</code></pre>\n\n<p>The structure <code>Worlds</code> takes a vector of structures called <code>World</code> (I can post that code if you need it).</p>\n\n<p><code>get_random_world</code> is supposed to return a <code>World</code> structure, and does with <code>self.worlds[world_index]</code>, but apparently it expects a <code>()</code>.</p>\n\n<p>I'm lost; I told it what to return, it returns that but it expects something different?</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>   |\n20 |             self.worlds[world_index]\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^ expected (), found struct `game::world::world::World`\n   |\n   = note: expected type `()`\n   = note:    found type `game::world::world::World`\n</code></pre>\n\n<p>I'm not sure what to do at this point.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 6, "creation_date": 1476649542, "post_id": 40075031, "comment_id": 67423318, "body": "There are <a href=\"http://stackoverflow.com/search?q=%5Brust%5D+move+out+of+borrowed+content+is%3Aq\"><i>so many</i> other questions for the same error message</a>. <code>i32</code> is <code>Copy</code>, <code>String</code> isn&#39;t. You <b>don&#39;t</b> own <code>self</code>, it&#39;s borrowed (<code>&amp;self</code>)."}, {"owner": {"reputation": 9945, "user_id": 1270259, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/f8493a9385dae9f438379050d76ac2bf?s=128&d=identicon&r=PG", "display_name": "TheWebs", "link": "https://stackoverflow.com/users/1270259/thewebs"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1476649593, "post_id": 40075031, "comment_id": 67423335, "body": "@Shepmaster This doesn&#39;t answer my question or give me a solution."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1476649798, "post_id": 40075031, "comment_id": 67423406, "body": "TheWebs what @Shepmaster means is that you are supposed to show some effort in your question, and if there are other questions similar to yours, explain why their answers don&#39;t apply to your problem."}], "answers": [{"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 12, "last_activity_date": 1476649658, "creation_date": 1476649658, "answer_id": 40075101, "question_id": 40075031, "link": "https://stackoverflow.com/questions/40075031/cannot-move-out-of-borrowed-content-in-rust/40075101#40075101", "title": "Cannot move out of borrowed content in Rust", "body": "<p>The difference between <code>get_hp</code> and <code>get_name</code> is that <code>get_hp</code> returns a <code>i32</code>. <code>i32</code> is a <a href=\"https://doc.rust-lang.org/std/marker/trait.Copy.html\"><code>Copy</code></a> type. <code>Copy</code> types can be copied by simply copying bits and are never moved out. On the other hand <code>String</code> is not <code>Copy</code>, it manages some memory which must either be transferred (moved out) or <a href=\"https://doc.rust-lang.org/std/clone/trait.Clone.html\"><code>Clone</code>d</a>.</p>\n\n<p>For getters like this, it is more idiomatic to return references instead of cloning. And for <code>String</code>s, it should specifically <a href=\"https://stackoverflow.com/questions/40006219/why-is-it-discouraged-to-accept-a-reference-to-a-string-string-or-vec-vec/40006220\">be <code>&amp;str</code></a>.</p>\n\n<pre><code>pub fn get_name(&amp;self) -&gt; &amp;str {\n    &amp;self.name\n}\n</code></pre>\n"}], "owner": {"reputation": 9945, "user_id": 1270259, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/f8493a9385dae9f438379050d76ac2bf?s=128&d=identicon&r=PG", "display_name": "TheWebs", "link": "https://stackoverflow.com/users/1270259/thewebs"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 6851, "favorite_count": 2, "accepted_answer_id": 40075101, "answer_count": 1, "score": 4, "last_activity_date": 1476649658, "creation_date": 1476649157, "last_edit_date": 1476649446, "question_id": 40075031, "link": "https://stackoverflow.com/questions/40075031/cannot-move-out-of-borrowed-content-in-rust", "title": "Cannot move out of borrowed content in Rust", "body": "<pre><code>pub struct Character {\n    name: String,\n    hp: i32,\n    level: i32,\n    xp: i32,\n    xp_needed: i32,\n    gold: i32\n}\n\nimpl Character {\n    pub fn new(name: String) -&gt; Character {\n        let mut rng = thread_rng();\n\n        let hp: i32 = rng.gen_range(12, 75);\n        let gold: i32 = rng.gen_range(10, 50);\n\n        Character { name: name, hp: hp, level: 1, xp: 0, gold: gold, xp_needed: 100 }\n    }\n\n    pub fn get_name(&amp;self) -&gt; String {\n        self.name\n    }\n\n    // ...\n}\n</code></pre>\n\n<p>How exactly am I breaking the rules here?</p>\n\n<blockquote>\n  <p>At a high-level, this is against-the-grain for Rust. You cannot transfer ownership of something borrowed because you don't own it.</p>\n</blockquote>\n\n<p>Um don't I? I have other functions like:</p>\n\n<pre><code>pub fn get_hp(&amp;self) -&gt; i32 {\n    self.hp\n}\n</code></pre>\n\n<p>And that works just fine.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>   |\n23 |         self.name\n   |         ^^^^ cannot move out of borrowed content\n\nerror: aborting due to previous error\n</code></pre>\n\n<p>What's going on? What is the appropriate approach to return the character name? Why does the <code>get_hp</code> method work but not <code>get_name</code>?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 10707, "user_id": 6650102, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/boCIP.jpg?s=128&g=1", "display_name": "Aurora0001", "link": "https://stackoverflow.com/users/6650102/aurora0001"}, "edited": false, "score": 2, "creation_date": 1476647667, "post_id": 40074725, "comment_id": 67422705, "body": "<code>&amp;self.hp = hp</code> is trying to assign to a reference, which is clearly not a good idea. <code>self.hp = hp</code> (and take <code>&amp;mut self</code> instead, because you are <i>mutating</i> <code>self</code>)."}], "answers": [{"comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 4, "creation_date": 1476647728, "post_id": 40074765, "comment_id": 67422719, "body": "Note: usually, <code>Copy</code>-types like <code>i32</code> are not passed by immutable reference, but by value."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1476647775, "last_edit_date": 1476647775, "creation_date": 1476647669, "answer_id": 40074765, "question_id": 40074725, "link": "https://stackoverflow.com/questions/40074725/how-do-i-set-values-of-existing-structs/40074765#40074765", "title": "How do I set values of existing structs?", "body": "<p>The syntax <code>&amp;foo = bar</code> doesn't make sense. If it worked, it would mean something like:</p>\n\n<ol>\n<li>Take the reference to <code>foo</code>.</li>\n<li>Replace the reference (a pointer) with the <em>value</em> of <code>bar</code>.</li>\n</ol>\n\n<p>What you want is</p>\n\n<pre><code>fn set_hp(&amp;mut self, hp: &amp;i32) {\n    self.hp = *hp;\n}\n</code></pre>\n\n<p>This <em>dereferences</em> the passed-in argument and it is stored in <code>self.hp</code>. Note that the <code>self</code> argument has to be mutable in order to change the value.</p>\n\n<blockquote>\n  <p>What's this left hand expression jazz? </p>\n</blockquote>\n\n<p>Often abbreviated as <strong>LHS</strong>, it's what is on the <em>left side</em> of the assignment operation. There are certain things that are valid to be assigned to. For example, <code>5 = 6</code> would also be an invalid LHS.</p>\n"}], "owner": {"reputation": 9945, "user_id": 1270259, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/f8493a9385dae9f438379050d76ac2bf?s=128&d=identicon&r=PG", "display_name": "TheWebs", "link": "https://stackoverflow.com/users/1270259/thewebs"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1369, "favorite_count": 0, "accepted_answer_id": 40074765, "answer_count": 1, "score": 0, "last_activity_date": 1476648806, "creation_date": 1476647376, "last_edit_date": 1476648806, "question_id": 40074725, "link": "https://stackoverflow.com/questions/40074725/how-do-i-set-values-of-existing-structs", "title": "How do I set values of existing structs?", "body": "<p>Consider the following:</p>\n\n<pre><code>use rand::{thread_rng, Rng};\n\nstruct Character {\n    name: String,\n    hp: i32,\n    level: i32,\n    xp: i32,\n    gold: i32\n}\n\nimpl Character {\n    fn new(name: String) -&gt; Character {\n        let mut rng = thread_rng();\n\n        let hp: i32 = rng.gen_range(12, 75);\n        let gold: i32 = rng.gen_range(10, 50);\n\n        Character { name: name, hp: hp, level: 1, xp: 0, gold: gold }\n    }\n\n    fn set_hp(&amp;self, hp: &amp;i32) {\n        &amp;self.hp = hp;\n    }\n\n    fn get_hp(&amp;self) -&gt; i32 {\n        self.hp\n    }\n}\n</code></pre>\n\n<p>Which generates the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0070]: invalid left-hand side expression\n  --&gt; src/game/character/Character.rs:22:9\n   |\n22 |         &amp;self.hp = hp;\n   |         ^^^^^^^^^^^^^ left-hand of expression not valid\n</code></pre>\n\n<p>Why can I not set the <code>Character.hp</code> to the value passed in? What's this left hand expression jazz? I couldn't find any info on this in the docs.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 12035, "user_id": 603094, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/325af9a946cb4337c6640f0e95044be1?s=128&d=identicon&r=PG", "display_name": "kirelagin", "link": "https://stackoverflow.com/users/603094/kirelagin"}, "edited": false, "score": 2, "creation_date": 1476643136, "post_id": 40073785, "comment_id": 67421218, "body": "This question is literally in the FAQ on the Rust website :/."}, {"owner": {"reputation": 11807, "user_id": 1233652, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/739be9b9fc65280b58da4835eca5cd22?s=128&d=identicon&r=PG", "display_name": "Alex Lipov", "link": "https://stackoverflow.com/users/1233652/alex-lipov"}, "reply_to_user": {"reputation": 12035, "user_id": 603094, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/325af9a946cb4337c6640f0e95044be1?s=128&d=identicon&r=PG", "display_name": "kirelagin", "link": "https://stackoverflow.com/users/603094/kirelagin"}, "edited": false, "score": 3, "creation_date": 1476643595, "post_id": 40073785, "comment_id": 67421425, "body": "@kirelagin Yep, but given the above compile error, how I supposed to know that? It took me a while to find, and I believe there will be others who will search for similar error message."}], "answers": [{"tags": [], "owner": {"reputation": 11807, "user_id": 1233652, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/739be9b9fc65280b58da4835eca5cd22?s=128&d=identicon&r=PG", "display_name": "Alex Lipov", "link": "https://stackoverflow.com/users/1233652/alex-lipov"}, "is_accepted": true, "score": 28, "last_activity_date": 1554537850, "last_edit_date": 1554537850, "creation_date": 1476641958, "answer_id": 40073786, "question_id": 40073785, "link": "https://stackoverflow.com/questions/40073785/compile-error-when-trying-to-use-increment-operator/40073786#40073786", "title": "Compile error when trying to use increment operator", "body": "<p>Increment (++) and decrement (--) operators are <strong>not supported</strong> in Rust.  </p>\n\n<p>From <a href=\"https://doc.rust-lang.org/1.2.0/complement-design-faq.html#why-no---x-or-x++?\" rel=\"noreferrer\">Rust's FAQ</a>:  </p>\n\n<blockquote>\n  <p><strong>Why doesn't Rust have increment and decrement operators?</strong><br>\n  Preincrement and postincrement (and the decrement equivalents), while\n  convenient, are also fairly complex. They require knowledge of\n  evaluation order, and often lead to subtle bugs and undefined behavior\n  in C and C++. <code>x = x + 1</code> or <code>x += 1</code> is only slightly longer, but\n  unambiguous.</p>\n</blockquote>\n"}], "owner": {"reputation": 11807, "user_id": 1233652, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/739be9b9fc65280b58da4835eca5cd22?s=128&d=identicon&r=PG", "display_name": "Alex Lipov", "link": "https://stackoverflow.com/users/1233652/alex-lipov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5092, "favorite_count": 1, "accepted_answer_id": 40073786, "answer_count": 1, "score": 11, "last_activity_date": 1554537850, "creation_date": 1476641958, "last_edit_date": 1476643206, "question_id": 40073785, "link": "https://stackoverflow.com/questions/40073785/compile-error-when-trying-to-use-increment-operator", "title": "Compile error when trying to use increment operator", "body": "<p>During work on a side project I've tried to use an increment operator, as following:</p>\n\n<pre><code>fn main() {\n    let mut my_var = 5;\n    my_var++;\n}\n</code></pre>\n\n<p>and received the following error:</p>\n\n<pre><code>error: expected expression, found `+`\n --&gt; src\\main.rs:3:12\n  |\n3 |     my_var++;\n  |            ^\n</code></pre>\n\n<p>What's wrong with my code?</p>\n"}, {"tags": ["enums", "reference", "rust"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 2, "creation_date": 1476638760, "post_id": 40073084, "comment_id": 67419643, "body": "Additional info: when you&#39;re iterating through a <code>&amp;[Token]</code>, the yielded items are references, not the values directly. Therefore <code>token</code> in your <code>for</code>-loop has the type <code>&amp;main::Token</code> which is different from <code>main::Token</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1476638822, "post_id": 40073084, "comment_id": 67419669, "body": "And <a href=\"http://stackoverflow.com/q/21747136/155423\">How do I print the type of a variable in Rust?</a>."}, {"owner": {"reputation": 1135, "user_id": 3754101, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/D1eNN.jpg?s=128&g=1", "display_name": "enaJ", "link": "https://stackoverflow.com/users/3754101/enaj"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1476639426, "post_id": 40073084, "comment_id": 67419863, "body": "@LukasKalbertodt, thanks that makes lots of sense, but if I use Token::Operator(ref a) =&gt; println!(&quot;do something A&quot;), still not work. Any suggestion?"}, {"owner": {"reputation": 35314, "user_id": 344347, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/1d83837bce9d9a2656c4f5704d40c430?s=128&d=identicon&r=PG", "display_name": "Pavel Strakhov", "link": "https://stackoverflow.com/users/344347/pavel-strakhov"}, "edited": false, "score": 3, "creation_date": 1476640025, "post_id": 40073084, "comment_id": 67420074, "body": "<code>token</code> has <code>&amp;Token</code> type, and you&#39;re trying to match it as <code>Token</code> type. Use <code>match *token</code>, as suggested in the duplicate&#39;s answer. Using <code>ref</code> in a pattern only alters type of the variable inside the corresponding branch, but has no effect on the <code>match</code> itself."}, {"owner": {"reputation": 1135, "user_id": 3754101, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/D1eNN.jpg?s=128&g=1", "display_name": "enaJ", "link": "https://stackoverflow.com/users/3754101/enaj"}, "reply_to_user": {"reputation": 35314, "user_id": 344347, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/1d83837bce9d9a2656c4f5704d40c430?s=128&d=identicon&r=PG", "display_name": "Pavel Strakhov", "link": "https://stackoverflow.com/users/344347/pavel-strakhov"}, "edited": false, "score": 0, "creation_date": 1476642276, "post_id": 40073084, "comment_id": 67420916, "body": "@PavelStrakhov, that really helps!!!"}, {"owner": {"reputation": 1135, "user_id": 3754101, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/D1eNN.jpg?s=128&g=1", "display_name": "enaJ", "link": "https://stackoverflow.com/users/3754101/enaj"}, "reply_to_user": {"reputation": 35314, "user_id": 344347, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/1d83837bce9d9a2656c4f5704d40c430?s=128&d=identicon&r=PG", "display_name": "Pavel Strakhov", "link": "https://stackoverflow.com/users/344347/pavel-strakhov"}, "edited": false, "score": 0, "creation_date": 1476642677, "post_id": 40073084, "comment_id": 67421065, "body": "@PavelStrakhov, does  (ref a)   and  (&amp; a) has the same meaning? Why I cannot use  Token::Operator(&amp; a) =&gt; println!(&quot;do something A&quot;)?"}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1476655264, "post_id": 40073084, "comment_id": 67425027, "body": "@enaJ: <a href=\"http://stackoverflow.com/a/33204483/234590\">stackoverflow.com/a/33204483/234590</a>"}], "owner": {"reputation": 1135, "user_id": 3754101, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/D1eNN.jpg?s=128&g=1", "display_name": "enaJ", "link": "https://stackoverflow.com/users/3754101/enaj"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 297, "favorite_count": 0, "closed_date": 1476638481, "answer_count": 0, "score": 0, "last_activity_date": 1476644192, "creation_date": 1476638138, "last_edit_date": 1495542795, "question_id": 40073084, "link": "https://stackoverflow.com/questions/40073084/in-a-match-expected-reference-found-enum-error-e0308", "closed_reason": "Duplicate", "title": "In a match, expected reference, found enum, error E0308", "body": "<p>I am working on a Reverse Polish Notation problem. In the <code>eval</code> function, I want to pass the input tokens as a reference, then iterate through it and using match to do something either <code>A</code> or <code>B</code>. But the program produces an error:</p>\n\n<blockquote>\n  <p>expected reference, found enum <code>main::Token</code>.</p>\n</blockquote>\n\n<p>I want to check the type of token here, but Rust doesn't seem to have a straightforward way to print out the type. What is the error source here?  </p>\n\n<pre><code>pub enum Operator {\n    // `+`\n    Add, \n    // `-`\n    Sub,\n    // `*`\n    Mul,\n}\n\npub enum Token {\n    Operator(Operator),\n    Operand(isize),\n}\n\npub fn eval(tokens: &amp;[Token]) -&gt; Option&lt;isize&gt; {       \n    for token in tokens {\n        // error here: expected reference, found enum `main::Token` \n        match token {\n            Token::Operator(ref a) =&gt; println!(\"do something A\"),\n            Token::Operand(ref b) =&gt; println!(\"do something B\"),\n        };\n    } \n\n    Some(5) \n}\n\nfn main() { \n    // test input\n    let input1 = Token::Operand(3);\n    let input2 = Token::Operand(2);\n    let sign1 = Operator::Add;\n    let input3 = Token::Operator(sign1);\n    eval(&amp;[input1, input2, input3]);\n}\n</code></pre>\n\n<p>My question is <strong>not</strong> a duplicate of <a href=\"https://stackoverflow.com/questions/36590549/matching-on-a-reference-to-an-enum\">Matching on a reference to an enum</a>, since add <code>ref</code> doesn't save it from the type mismatch error. </p>\n"}, {"tags": ["parsing", "rust"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1476638697, "post_id": 40073078, "comment_id": 67419619, "body": "Won&#39;t this fall afoul of the orphan rules? Neither <code>Offset</code> nor <code>str</code> are owned by the calling code."}], "tags": [], "owner": {"reputation": 1452, "user_id": 203955, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed9901b9b80743c05aedf58b4f4926dd?s=128&d=identicon&r=PG", "display_name": "G&#233;al", "link": "https://stackoverflow.com/users/203955/g%c3%a9al"}, "is_accepted": true, "score": 2, "last_activity_date": 1476638123, "creation_date": 1476638123, "answer_id": 40073078, "question_id": 40070972, "link": "https://stackoverflow.com/questions/40070972/how-to-get-the-output-for-several-sequential-nom-parsers-when-the-input-is-a-st/40073078#40073078", "title": "How to get the output for several sequential nom parsers when the input is a &amp;str?", "body": "<p>there's an <code>Offset</code> trait implementation for <code>&amp;str</code> that will be available in the next version of nom. There is no planned release date yet for nom 2.0, so in the meantime, you can copy the implementation in your code:</p>\n\n<pre><code>use nom::Offset;\n\nimpl Offset for str {\n    fn offset(&amp;self, second: &amp;Self) -&gt; usize {\n        let fst = self.as_ptr();\n        let snd = second.as_ptr();\n\n        snd as usize - fst as usize\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 15070, "user_id": 388427, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/a43a07bc90818154ff9c8d4af7c23502?s=128&d=identicon&r=PG", "display_name": "Sergey", "link": "https://stackoverflow.com/users/388427/sergey"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 113, "favorite_count": 0, "accepted_answer_id": 40073078, "answer_count": 1, "score": 0, "last_activity_date": 1476638123, "creation_date": 1476625532, "last_edit_date": 1495540102, "question_id": 40070972, "link": "https://stackoverflow.com/questions/40070972/how-to-get-the-output-for-several-sequential-nom-parsers-when-the-input-is-a-st", "title": "How to get the output for several sequential nom parsers when the input is a &amp;str?", "body": "<p>This question is almost identical to <a href=\"https://stackoverflow.com/questions/36300373/capture-the-entire-contiguous-matched-input-with-nom\">Capture the entire contiguous matched input with nom</a>, but I have to parse UTF-8 text as input (<code>&amp;str</code>) not just bytes (<code>&amp;[u8]</code>). I am trying to get the whole match for several parsers:</p>\n\n<pre><code>named!(parse &lt;&amp;str, &amp;str&gt;,\n           recognize!(\n               chain!(\n                   is_not_s!(\".\") ~\n                       tag_s!(\".\")    ~\n                       is_not_s!( \"./ \\r\\n\\t\" ),\n                   || {}\n               )\n           )\n);\n</code></pre>\n\n<p>And it causes this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>no method named \"offset\" found for type \"&amp;str\" in the current scope\n</code></pre>\n\n<p>Is the only way to do this to switch to <code>&amp;[u8]</code> as input and then do <code>map_res!</code>?</p>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 17491, "user_id": 901827, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/86a6acccf7e8dbe398ebda4f8524ed50?s=128&d=identicon&r=PG", "display_name": "LinearZoetrope", "link": "https://stackoverflow.com/users/901827/linearzoetrope"}, "edited": false, "score": 1, "creation_date": 1476650374, "post_id": 40070904, "comment_id": 67423595, "body": "Is there a distinction between <code>&quot;x:version.number&quot; = ...</code> and <code>&quot;x = { version = &quot;version.number&quot;, ... }</code>?"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 17491, "user_id": 901827, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/86a6acccf7e8dbe398ebda4f8524ed50?s=128&d=identicon&r=PG", "display_name": "LinearZoetrope", "link": "https://stackoverflow.com/users/901827/linearzoetrope"}, "edited": false, "score": 2, "creation_date": 1476655414, "post_id": 40070904, "comment_id": 67425075, "body": "@Jsor Yes, the latter doesn&#39;t work. The LHS defines <i>what</i> to replace and you can only replace specific versions of crates, not some crates in general (it may happen that you have two different versions of a crate in your dep-tree). The RHS says what to replace it <i>with</i> and as mentioned in the answer, the version has to match the LHS-version, so there is no point in writing it on the right side."}, {"owner": {"reputation": 5338, "user_id": 4594973, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/USV9e.jpg?s=128&g=1", "display_name": "code_dredd", "link": "https://stackoverflow.com/users/4594973/code-dredd"}, "edited": false, "score": 0, "creation_date": 1596225383, "post_id": 40070904, "comment_id": 111754821, "body": "Note that <code>[replace]</code> is deprecated and <code>[patch]</code> should be used instead. See cargo docs linked in the answer for more."}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 13, "last_activity_date": 1476625062, "creation_date": 1476625062, "answer_id": 40070904, "question_id": 40070903, "link": "https://stackoverflow.com/questions/40070903/how-to-tell-cargo-to-use-a-git-repository-as-source-for-an-indirect-dependency-i/40070904#40070904", "title": "How to tell Cargo to use a git repository as source for an indirect dependency instead of crates.io?", "body": "<p>You can use <strong>the <code>[replace]</code> section</strong> in your project's <code>Cargo.toml</code>. You can find the documentation about that feature <a href=\"http://doc.crates.io/specifying-dependencies.html#overriding-dependencies\">here in the Cargo documentation</a>.</p>\n\n<p>In your case, <code>glium</code> depends on <code>glutin 0.6.1</code>. The version <code>0.6.1</code> on crates.io still contains the bug. So just add this to your <code>Cargo.toml</code>:</p>\n\n<pre><code>[replace]\n\"glutin:0.6.1\" = { git = 'https://github.com/tomaka/glutin' }\n</code></pre>\n\n<hr>\n\n<p>Note however, </p>\n\n<blockquote>\n  <p>[...] that the replaced crate must not only have the same name but also the same version.</p>\n</blockquote>\n\n<p>But even in the case of a version-mismatch (the repository already contains a newer version), you could still be in luck if the crate's maintainer creates git tags for every version (many in the Rust community do). In that case you can just specify the tag:</p>\n\n<pre><code>[replace]\n\"glutin:0.6.1\" = { \n    git = 'https://github.com/tomaka/glutin' \n    tag = 'v0.6.1'\n}\n</code></pre>\n\n<p>Sadly, this won't work with <code>glutin</code>, because the maintainer did not create tags for every version. In that case you can simply find the last commit before the version was bumped and specify it with <strong><code>rev = 'b4a3d0...'</code></strong> or specify a specific branch with the <strong><code>branch = '...'</code></strong> key.</p>\n"}], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2717, "favorite_count": 1, "accepted_answer_id": 40070904, "answer_count": 1, "score": 14, "last_activity_date": 1476657496, "creation_date": 1476625062, "last_edit_date": 1476657496, "question_id": 40070903, "link": "https://stackoverflow.com/questions/40070903/how-to-tell-cargo-to-use-a-git-repository-as-source-for-an-indirect-dependency-i", "title": "How to tell Cargo to use a git repository as source for an indirect dependency instead of crates.io?", "body": "<p><a href=\"https://users.rust-lang.org/t/compiling-to-the-web-with-rust-and-emscripten/7627\" rel=\"noreferrer\">A few days ago</a>, cross-compiling to JavaScript via Emscripten has finally hit nightly. I wanted to compile a project using <code>glium</code> in that manner. However, there are still many Emscripten-related bugs in many crates. While maintainers usually fix those bugs quickly, they don't necessarily release those bug fixes to <a href=\"https://crates.io/\" rel=\"noreferrer\">crates.io</a> immediately.</p>\n\n<p>In my case, <code>glium</code> depends on <code>glutin</code>. <code>glutin</code> had a bug which is fixed now, but only in the git repository, not on <code>crates.io</code>.  <em>Note</em>: <code>glutin</code> is not a direct dependency of my project; only an indirect one through <code>glium</code>!</p>\n\n<p><strong>How do I tell Cargo to use <a href=\"https://github.com/tomaka/glutin\" rel=\"noreferrer\">the <code>glutin</code> repository</a> as source for <code>glutin</code> instead of <code>crates.io</code></strong>?</p>\n"}, {"tags": ["types", "rust"], "answers": [{"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": false, "score": 2, "last_activity_date": 1476619162, "creation_date": 1476619162, "answer_id": 40069991, "question_id": 40069909, "link": "https://stackoverflow.com/questions/40069909/when-should-i-use-tuple-structs-over-normal-tuples/40069991#40069991", "title": "When should I use tuple structs over normal tuples?", "body": "<p>Tuple structures are less common. Use them when you only have a few members and it's clear enough which are which that they don't need a name.</p>\n\n<p>One common use of tuple structures is <em>newtypes</em>. This is a tuple structure with only one member. This is useful to make simple wrappers around existing types.</p>\n"}, {"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 2, "last_activity_date": 1476619211, "creation_date": 1476619211, "answer_id": 40070001, "question_id": 40069909, "link": "https://stackoverflow.com/questions/40069909/when-should-i-use-tuple-structs-over-normal-tuples/40070001#40070001", "title": "When should I use tuple structs over normal tuples?", "body": "<p>The main difference between tuples and tuple structs is that the latter introduces a <em>name</em> while the former does not.</p>\n\n<p>Sometimes, pieces of data are bundled together just because. For example, imagine a state-machine: each transition returns a piece of data as well as the next state of the state-machine, what's the name of this?</p>\n\n<pre><code>impl StateA {\n    fn on_event_x(self) -&gt; (String, StateB);\n}\n</code></pre>\n\n<p>This should not be abused; names are useful to document the API after all! Sometimes, however, there is just no silly name (<code>StringAndStateB</code> :x) that fits and a tuple works well.</p>\n\n<p>So, when to use tuple structs? When you need or wish to name a type, and you prefer to use a tuple struct rather than a regular struct or enum (which is another discussion entirely!).</p>\n"}, {"comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 3, "creation_date": 1476622792, "post_id": 40070506, "comment_id": 67414349, "body": "On a second thought, for this text, a blog post would have been more appropriate than an SO-answer *_*"}, {"owner": {"reputation": 514, "user_id": 1375259, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/yuWQ9.jpg?s=128&g=1", "display_name": "Chakravarthy Raghunandan", "link": "https://stackoverflow.com/users/1375259/chakravarthy-raghunandan"}, "edited": false, "score": 0, "creation_date": 1476623553, "post_id": 40070506, "comment_id": 67414554, "body": "Oh my! Thank you for taking your time to write such a comprehensive answer :)"}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 17, "last_activity_date": 1476622708, "creation_date": 1476622708, "answer_id": 40070506, "question_id": 40069909, "link": "https://stackoverflow.com/questions/40069909/when-should-i-use-tuple-structs-over-normal-tuples/40070506#40070506", "title": "When should I use tuple structs over normal tuples?", "body": "<h2>Summary</h2>\n\n<p>Use <em>tuple structs</em> when:</p>\n\n<ul>\n<li>the name of the <em>type</em> carries semantic information <strong>and</strong> </li>\n<li>naming the <em>fields</em> does not add any semantic information</li>\n</ul>\n\n<p>You will find that this is not too often the case. If it is, you are usually just trying to wrap exactly <em>one</em> other type into a new type to give it different <strong>behavior</strong>. This is a known pattern, called <em>'newtype' pattern</em>. When you have multiple fields in your struct, you usually want to name them.</p>\n\n<hr>\n\n<h2>Examples</h2>\n\n<p>As a quick reminder:</p>\n\n<ul>\n<li><strong>tuples</strong> are anonymous types with anonymous fields</li>\n<li><strong>tuple structs</strong> are named types with anonymous fields</li>\n<li><strong>structs</strong> are named types with named fields</li>\n</ul>\n\n<p>Let's take a look at <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.split_at\"><code>[T]::split_at()</code></a>:</p>\n\n<pre><code>fn split_at(&amp;self, mid: usize) -&gt; (&amp;[T], &amp;[T])\n</code></pre>\n\n<p>They authors of this function choose to return a tuple here. Let's see, would we gain anything from...</p>\n\n<ul>\n<li><em>naming the type</em>: not really, right? What would we call it? <code>SplitSlice</code>, <code>SliceParts</code>, ...? Every name we could give is superfluous, because the function is already named appropriately.</li>\n<li><em>naming the fields</em>: questionable. <code>left</code> and <code>right</code> would make it more clear what part is what side. But here we assume that programmers have the correct intuition. English is written from left to right, in English cultures arrays are usually drawn from left to right (<code>[0 | 1 | 2 | 3 ]</code>), so it kind of makes sense for most people.</li>\n</ul>\n\n<p><strong>\u21d2 just a tuple is fine!</strong></p>\n\n<hr>\n\n<p>Another example: imagine you are writing an application that somehow works with a text file (compiler, text editor, ...). When you are talking about a region in the text file (for example, a search result), you want to specify that region by giving byte offsets. Let's see if tuples work out for us:</p>\n\n<pre><code>fn find_first_occurence(file: &amp;TextFile, needle: &amp;str) -&gt; (usize, usize)\n</code></pre>\n\n<p>Does the return type speak for itself? Rather not... even if you know that regions in the file are specified by byte offsets, the return value is still ambiguous: either it's <code>(start, end)</code> or it's <code>(start, stuff)</code>, where stuff can be any other search metric (the function doesn't need to return <code>end</code>, since we already know the length of <code>needle</code> and thus could calculate it). So, I hope you agree, we want to name the return type. Let's call it <code>Span</code> -- that's the name used <a href=\"https://github.com/rust-lang/rust/blob/9d4d0da7af77858f268a66ff144134945c880560/src/libsyntax_pos/lib.rs#L56-L62\">in the Rust compiler</a>.</p>\n\n<p>Next question: struct or tuple struct? Does it make sense to name the fields? Again, there is no clear answer, but I'd argue that we <em>do</em> want to name the fields. What is easier to read: <code>span.1 - span.0</code> or <code>span.high - span.low</code>? Additionally, we can write documentation for the named fields; for example, to document that <code>high</code> is exclusive.</p>\n\n<p><strong>\u21d2 struct</strong></p>\n\n<hr>\n\n<p>Now imagine you want to report line numbers to the user. Especially important is a function that returns the corresponding line number for a given span (for simplicity's sake, we assume this span never spans more than one line).</p>\n\n<pre><code>fn get_line_number(file: &amp;TextFile, span: Span) -&gt; ???\n</code></pre>\n\n<p>So what do we return? In the context of this function a simple <code>u32</code> is probably fine! There is no doubt what this <code>u32</code> represents. Although: does the line number counting starts with 0 or 1? <em>sigh</em></p>\n\n<p>Sure, we could document this property on the function ... and every other function working with line numbers. So how about creating a new type and document it there? This will also help with functions taking multiple numbers, including line numbers:</p>\n\n<pre><code>print_snippet(&amp;file, 57, 63, 80);\n</code></pre>\n\n<p>Wait, what are line numbers now? Exactly: instead of taking <code>u32</code>s, it would take <code>LineNumber</code>s -- the type system is the documentation.</p>\n\n<p>We now agreed on creating a new type. But: struct or tuple struct? Let's try struct:</p>\n\n<pre><code>struct LineNumber {\n    line_number: u32,    // uhm...\n}\n</code></pre>\n\n<p>Well, how to call the field? The only fitting names fall into two categories:</p>\n\n<ul>\n<li>like the struct name: <code>line_number</code>, <code>number</code>, <code>line</code>, ...</li>\n<li>without semantic information: <code>inner</code>, <code>value</code>, <code>data</code>, ...</li>\n</ul>\n\n<p>There is not really a benefit in naming the field. So let's don't and use a ...</p>\n\n<p><strong>\u21d2 tuple struct \ud83c\udf89</strong></p>\n\n<p>The decision to make it an own type has some nice consequences: we can use 0-based numbers in our source code but never need to worry about printing it incorrectly:</p>\n\n<pre><code>impl fmt::Display for LineNumber {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        (self.0 + 1).fmt(f)\n    }\n}\n</code></pre>\n\n<p>We can adjust the 0-based number to a 1-based number (for those damn humanz!) in a single place!</p>\n\n<p>Also note that we were talking about byte offsets above. Instead of using <code>usize</code>, we should also create a new type to distinguish it from char offsets, for example!</p>\n"}], "owner": {"reputation": 514, "user_id": 1375259, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/yuWQ9.jpg?s=128&g=1", "display_name": "Chakravarthy Raghunandan", "link": "https://stackoverflow.com/users/1375259/chakravarthy-raghunandan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1326, "favorite_count": 0, "accepted_answer_id": 40070506, "answer_count": 3, "score": 5, "last_activity_date": 1476622811, "creation_date": 1476618625, "last_edit_date": 1476622811, "question_id": 40069909, "link": "https://stackoverflow.com/questions/40069909/when-should-i-use-tuple-structs-over-normal-tuples", "title": "When should I use tuple structs over normal tuples?", "body": "<p>In The Rust Programming Language book, in the <em>Structs</em> chapter we are introduced to <a href=\"https://doc.rust-lang.org/book/structs.html#tuple-structs\" rel=\"nofollow\"><em>tuple structs</em></a>.</p>\n\n<p>Under which cases should I use tuple structs over normal tuples (other than the example mentioned in the book)?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 9, "last_activity_date": 1476584245, "creation_date": 1476584245, "answer_id": 40066159, "question_id": 40066150, "link": "https://stackoverflow.com/questions/40066150/how-to-create-a-string-instead-of-printing-it-to-standard-out/40066159#40066159", "title": "How to create a String instead of printing it to standard out?", "body": "<p>Use the <a href=\"https://doc.rust-lang.org/stable/std/macro.format!.html\"><code>format!</code></a> macro.</p>\n\n<pre><code>pub fn hello() -&gt; String {\n    println!(\"Hello, How are you doing? What's your characters name?\");\n\n    let mut name = String::new();\n\n    io::stdin().read_line(&amp;mut name).expect(\"Failed to read name. What was that name again?\");\n\n    format!(\"Welcome to the castle {}\", name)\n}\n</code></pre>\n"}], "owner": {"reputation": 9945, "user_id": 1270259, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/f8493a9385dae9f438379050d76ac2bf?s=128&d=identicon&r=PG", "display_name": "TheWebs", "link": "https://stackoverflow.com/users/1270259/thewebs"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 55, "favorite_count": 0, "accepted_answer_id": 40066159, "answer_count": 1, "score": 4, "last_activity_date": 1476627432, "creation_date": 1476584147, "last_edit_date": 1476627432, "question_id": 40066150, "link": "https://stackoverflow.com/questions/40066150/how-to-create-a-string-instead-of-printing-it-to-standard-out", "title": "How to create a String instead of printing it to standard out?", "body": "<p>Consider the following function:</p>\n\n<pre><code>use std::io;\n\npub fn hello() {\n    println!(\"Hello, How are you doing? What's your characters name?\");\n\n    let mut name = String::new();\n\n    io::stdin().read_line(&amp;mut name).expect(\"Failed to read name. What was that name again?\");\n\n    println!(\"Welcome to the castle {}\", name);\n}\n</code></pre>\n\n<p>How do I take the last <code>println!</code> and turn it into a <code>\"Welcome to the castle {}\".to_string();</code> and have the <code>{}</code> replaced with <code>name</code> (obviously I would need to add <code>-&gt; String</code> to the function declaration.)</p>\n"}, {"tags": ["generics", "rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1476571100, "post_id": 40064700, "comment_id": 67403886, "body": "Do you mean a <code>Vec&lt;ComponentList&lt;C&gt;&gt;</code> where <code>C: Component</code> is the same class for the whole vector, or a  <code>Vec&lt;ComponentList&lt;c&gt;&gt;</code> for each component type <code>c</code> you have?"}, {"owner": {"reputation": 409, "user_id": 5150012, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/40c29ca36d80155da6f6c16d7b1b31a7?s=128&d=identicon&r=PG&f=1", "display_name": "EpicPotato", "link": "https://stackoverflow.com/users/5150012/epicpotato"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1476571399, "post_id": 40064700, "comment_id": 67403937, "body": "I meant a <code>Vec&lt;ComponentList&lt;c&gt;&gt;</code> for each <code>impl</code> of <code>Component</code> (the latter)"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1476572568, "post_id": 40064700, "comment_id": 67404158, "body": "In that case you need to either keep an attribute to each implementation in your struct, or have a vector with dynamic dispatch (as in the first answer seen below)."}, {"owner": {"reputation": 409, "user_id": 5150012, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/40c29ca36d80155da6f6c16d7b1b31a7?s=128&d=identicon&r=PG&f=1", "display_name": "EpicPotato", "link": "https://stackoverflow.com/users/5150012/epicpotato"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1476573114, "post_id": 40064700, "comment_id": 67404272, "body": "Do you think you could clarify how exactly I would keep an attribute to each implementation?"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1476574047, "post_id": 40064700, "comment_id": 67404466, "body": "<code>struct ComponentManager { component1: Component1, component2: Component2, ... }</code>"}], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 8, "last_activity_date": 1476574843, "creation_date": 1476574843, "answer_id": 40065342, "question_id": 40064700, "link": "https://stackoverflow.com/questions/40064700/vector-of-generic-structs-in-rust/40065342#40065342", "title": "Vector of Generic Structs in Rust", "body": "<p>Create a trait that each <code>ComponentList&lt;T&gt;</code> will implement but that will hide that <code>T</code>. In that trait, define any methods you need to operate on the component list (you will not be able to use <code>T</code>, of course, you'll have to use trait objects like <code>&amp;Component</code>).</p>\n\n<pre><code>trait AnyComponentList {\n    // Add any necessary methods here\n}\n\nimpl&lt;T: Component&gt; AnyComponentList for ComponentList&lt;T&gt; {\n    // Implement methods here\n}\n\nstruct ComponentManager {\n    component_lists: Vec&lt;Box&lt;AnyComponentList&gt;&gt;,\n}\n</code></pre>\n\n<hr>\n\n<p>If you would like to have efficient lookup of a <code>ComponentList&lt;T&gt;</code> based on <code>T</code> from the <code>ComponentManager</code>, you might want to look into <a href=\"https://crates.io/crates/anymap\" rel=\"noreferrer\"><code>anymap</code></a> or <a href=\"https://crates.io/crates/typemap\" rel=\"noreferrer\"><code>typemap</code></a> instead. <code>anymap</code> provides a simple map keyed by the type (i.e. you use a type <code>T</code> as the key and store/retrieve a value of type <code>T</code>). <code>typemap</code> generalizes <code>anymap</code> by associated keys of type <code>K</code> with values of type <code>K::Value</code>.</p>\n"}], "owner": {"reputation": 409, "user_id": 5150012, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/40c29ca36d80155da6f6c16d7b1b31a7?s=128&d=identicon&r=PG&f=1", "display_name": "EpicPotato", "link": "https://stackoverflow.com/users/5150012/epicpotato"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4887, "favorite_count": 0, "accepted_answer_id": 40065342, "answer_count": 1, "score": 8, "last_activity_date": 1476574843, "creation_date": 1476569088, "last_edit_date": 1476571407, "question_id": 40064700, "link": "https://stackoverflow.com/questions/40064700/vector-of-generic-structs-in-rust", "title": "Vector of Generic Structs in Rust", "body": "<p>I am creating an entity component system in Rust, and I would like to be able to store a <code>Vec</code> of components for each different <code>Component</code> type:</p>\n\n<pre><code>pub trait Component {}\n\nstruct ComponentList&lt;T: Component&gt; {\n    components: Vec&lt;T&gt;,\n}\n</code></pre>\n\n<p>Is it possible to create a collection of these <code>ComponentList</code>s?</p>\n\n<pre><code>struct ComponentManager {\n    component_lists: Vec&lt;ComponentList&lt;_&gt;&gt;, // This does not work\n}\n</code></pre>\n\n<p>This is intended to make it faster to retrieve a list of a certain <code>Component</code> type, as all instances of a certain type of component will be in the same <code>ComponentList</code>.</p>\n"}, {"tags": ["rust", "mio"], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1476777366, "post_id": 40101983, "comment_id": 67477015, "body": "Two remarks: (1) Linux used to have a bug where the port was unique across all interfaces, but now two interfaces can use the same port number; it may be worth binding to other interfaces than localhost to get more ports; (2) it is possible to configure your system to allocate ephemeral port numbers from a larger pool. Obviously, this does not remove the limit, just pushes it further."}, {"owner": {"reputation": 1599, "user_id": 2441230, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/4a3fe1d786c575a3b6aaa872604d1d13?s=128&d=identicon&r=PG", "display_name": "ElefEnt", "link": "https://stackoverflow.com/users/2441230/elefent"}, "edited": false, "score": 0, "creation_date": 1476843215, "post_id": 40101983, "comment_id": 67512873, "body": "Interesting but my load test is actually pretty small (20 secs, 10 users). I doubt it can reach 16k connections with these settings."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1599, "user_id": 2441230, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/4a3fe1d786c575a3b6aaa872604d1d13?s=128&d=identicon&r=PG", "display_name": "ElefEnt", "link": "https://stackoverflow.com/users/2441230/elefent"}, "edited": false, "score": 1, "creation_date": 1476912422, "post_id": 40101983, "comment_id": 67553567, "body": "@ElefEnt this isn&#39;t a case where you have to <i>doubt</i> anything \u2014 prove it! 800 connections a second * 20 seconds = 16000. That would be 1 connection every millisecond, which is a very reasonable timeframe. Your load testing tool should <b>tell you</b> how many connections were made. You can also consider running <code>strace</code> or equivalent to see what errors are reported by the OS during the connection."}, {"owner": {"reputation": 4886, "user_id": 1526406, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/16743c6762f8d35cf1bf8cb852898c33?s=128&d=identicon&r=PG", "display_name": "Cully", "link": "https://stackoverflow.com/users/1526406/cully"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1476914455, "post_id": 40101983, "comment_id": 67554385, "body": "When I&#39;ve run load tests, it doesn&#39;t take long to get to 16000 connections.  And like @Shepmaster commented, you should be able to ask siege to report the number of connections made."}, {"owner": {"reputation": 4886, "user_id": 1526406, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/16743c6762f8d35cf1bf8cb852898c33?s=128&d=identicon&r=PG", "display_name": "Cully", "link": "https://stackoverflow.com/users/1526406/cully"}, "reply_to_user": {"reputation": 1599, "user_id": 2441230, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/4a3fe1d786c575a3b6aaa872604d1d13?s=128&d=identicon&r=PG", "display_name": "ElefEnt", "link": "https://stackoverflow.com/users/2441230/elefent"}, "edited": false, "score": 0, "creation_date": 1477259857, "post_id": 40101983, "comment_id": 67680915, "body": "@ElefEnt I added some comments about how you can test if this is actually the problem."}], "tags": [], "owner": {"reputation": 4886, "user_id": 1526406, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/16743c6762f8d35cf1bf8cb852898c33?s=128&d=identicon&r=PG", "display_name": "Cully", "link": "https://stackoverflow.com/users/1526406/cully"}, "is_accepted": false, "score": 5, "last_activity_date": 1477259829, "last_edit_date": 1592644375, "creation_date": 1476775329, "answer_id": 40101983, "question_id": 40063892, "link": "https://stackoverflow.com/questions/40063892/after-a-load-test-every-new-mio-connection-immediately-hangs-up/40101983#40101983", "title": "After a load test, every new mio connection immediately hangs up", "body": "<p>I don't know why load testing apps don't document this better. I ran into possibly the same problem a few months ago.  It sounds like you've reached the <a href=\"http://danielmendel.github.io/blog/2013/04/07/benchmarkers-beware-the-ephemeral-port-limit/\" rel=\"nofollow noreferrer\">&quot;Ephemeral Port Limit&quot;</a>.  Here are some quotes from the article that summarize the idea:</p>\n<blockquote>\n<p>Whenever a connection is made between a client and server, the system binds that connection to an ephemeral port \u2013 a set of ports specified at the high end of the valid port range.</p>\n<p>The total number of ephemeral ports available on OS X is 16,383.</p>\n<p>Note that this limitation does not affect real-world requests to a live server because each TCP connection is defined by the tuple of source IP, source port, destination IP and destination port \u2013 so the ephemeral port limit only applies to a single client / server pair.</p>\n</blockquote>\n<p>In other words, it's happening because you're running the load test from localhost to localhost, and running out of ephemeral ports after likely around 16,383 connections.</p>\n<p>There are a couple things you can do to test whether this is the problem:</p>\n<ol>\n<li><p>Have your load tester report the number of connections made.  If it's around 16,000, then this is a likely culprit.</p>\n</li>\n<li><p>Increase the ephemeral port limit and run your load tests again.  If you get a higher number of connections, then this is probably the issue.  But remember, if this is the problem, it won't be a problem in the wild.</p>\n</li>\n</ol>\n<p>You can see your ephemeral port range using this command:</p>\n<p><code>$ sysctl net.inet.ip.portrange.first net.inet.ip.portrange.last</code></p>\n<p>And you can increase it using this command:</p>\n<p><code>$ sysctl -w net.inet.ip.portrange.first=32768</code></p>\n<p>After running your tests, you should probably set the port range back to what it was before, since this increase represents a non-standard range.</p>\n"}], "owner": {"reputation": 1599, "user_id": 2441230, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/4a3fe1d786c575a3b6aaa872604d1d13?s=128&d=identicon&r=PG", "display_name": "ElefEnt", "link": "https://stackoverflow.com/users/2441230/elefent"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 317, "favorite_count": 0, "answer_count": 1, "score": 5, "last_activity_date": 1477259829, "creation_date": 1476563391, "last_edit_date": 1476573564, "question_id": 40063892, "link": "https://stackoverflow.com/questions/40063892/after-a-load-test-every-new-mio-connection-immediately-hangs-up", "title": "After a load test, every new mio connection immediately hangs up", "body": "<p>I wrote a multithreaded asynchronous HTTP server in Rust using mio. When I run a load test (using siege) the server works fine on the first load test but when the load test is done all requests to the server start failing. </p>\n\n<p>Using some logging, I noticed that every new connection I get with <code>accept()</code> receives a hangup event immediately. The server connection itself doesn't get any error or hangup events.</p>\n\n<p>I am running Rust 1.12.0 with mio 0.6 on OS X 10.11 El Capitan</p>\n\n<p>Here's the main event loop of my server:</p>\n\n<pre><code>pub fn run(self) {\n    let poll = Poll::new().unwrap();\n    let server = TcpListener::bind(&amp;SocketAddr::from_str(&amp;self.host).unwrap()).unwrap();\n    poll.register(&amp;server, SERVER, Ready::readable(), PollOpt::edge()).unwrap();\n    let mut events = Events::with_capacity(1024);\n    let mut next_conn: usize = 1;\n    let mut workers = Vec::new();\n    // Create worker threads.\n    for _ in 0..self.num_workers {\n        let (tx, rx) = channel();\n        let worker_handler = self.event_handler.duplicate();\n        thread::spawn(move || {\n            Self::process_events(rx, worker_handler);\n        });\n        workers.push(tx);\n    }\n    loop {\n        println!(\"Polling...\");\n        match poll.poll(&amp;mut events, None) {\n            Err(e) =&gt; panic!(\"Error during poll(): {}\", e),\n            Ok(_) =&gt; {}\n        }\n        for event in events.iter() {\n            match event.token() {\n                SERVER =&gt; {\n                    println!(\"Accepting..\");\n                    match server.accept() {\n                        Ok((stream, _)) =&gt; {\n                            println!(\"Registering new connection...\");\n                            match poll.register(&amp;stream,\n                                                Token(next_conn),\n                                                Ready::readable(),\n                                                PollOpt::edge()) {\n                                Err(e) =&gt; panic!(\"Error during register(): {}\", e),\n                                Ok(_) =&gt; {\n                                    println!(\"New connection on worker {} \",\n                                             next_conn % self.num_workers);\n                                    workers[next_conn % self.num_workers]\n                                        .send(Msg::NewConn(next_conn, stream))\n                                        .unwrap();\n                                    next_conn += 1;\n                                }\n                            }\n                        }\n                        Err(e) =&gt; panic!(\"Error during accept() : {}\", e),\n                    }\n                }\n                Token(id) =&gt; {\n                    println!(\"Sending event on conn {} to worker {}\",\n                             id,\n                             id % self.num_workers);\n                    workers[id % self.num_workers]\n                        .send(Msg::ConnEvent(id, event.kind()))\n                        .unwrap();\n                }\n            }\n        }\n    }\n}\n\nfn process_events(channel: Receiver&lt;Msg&gt;, mut event_handler: Box&lt;EventHandler&gt;) {\n    loop {\n        let msg = channel.recv().unwrap();\n        match msg {\n            Msg::NewConn(id, conn) =&gt; {\n                event_handler.new_conn(id, conn);\n            }\n            Msg::ConnEvent(id, event) =&gt; {\n                event_handler.conn_event(id, event);\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>Full code with the example webapp I am using is <a href=\"https://github.com/syml/rust-webserver\">available on GitHub</a>.</p>\n\n<p>Load test command:</p>\n\n<pre><code>siege -b -c10 -d10 -t20S http://localhost:8080\n</code></pre>\n"}, {"tags": ["multithreading", "rust", "hyper"], "comments": [{"owner": {"reputation": 3493, "user_id": 1049866, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/Afe2j.png?s=128&g=1", "display_name": "PureW", "link": "https://stackoverflow.com/users/1049866/purew"}, "edited": false, "score": 0, "creation_date": 1476543190, "post_id": 40060378, "comment_id": 67394925, "body": "As in the supplied example, I would love to remove the <code>Mutex</code> protecting the <code>Sender</code> since <code>Sender</code> is already designed for lock-free intrathread message-passing. All it requires is a <code>clone</code> per thread."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1476543775, "post_id": 40060378, "comment_id": 67395138, "body": "After a few minutes of thinking about it, I tend to agree with you. Cloning handlers would be more powerful, because you were also able to simulate the old behavior by having a single <code>Arc&lt;OldBehaviorHandler&gt;</code> in your handler. It&#39;s not that easy the other way around... (as far as I can see right now)"}], "answers": [{"tags": [], "owner": {"reputation": 3493, "user_id": 1049866, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/Afe2j.png?s=128&g=1", "display_name": "PureW", "link": "https://stackoverflow.com/users/1049866/purew"}, "is_accepted": true, "score": 3, "last_activity_date": 1476545023, "last_edit_date": 1476545023, "creation_date": 1476543965, "answer_id": 40060634, "question_id": 40060378, "link": "https://stackoverflow.com/questions/40060378/why-does-hyper-require-handler-to-implement-sync-instead-of-using-independent-ha/40060634#40060634", "title": "Why does hyper require Handler to implement Sync instead of using independent Handlers per thread?", "body": "<p>Ok, so this actually seems impossible at the moment in Hyper. It is discussed in <a href=\"https://github.com/hyperium/hyper/issues/248\" rel=\"nofollow\">issue 248</a> and the developer prefers <code>Sync</code> over <code>Clone</code>:</p>\n\n<blockquote>\n  <p>We talked through this on IRC. Simple synopsis is that if it were\n  <code>Clone</code>, users could easily have state on their handler that they think\n  is modified with each request, but instead, it would have been cloned\n  several times and not modify what they hoped. Instead, it's better\n  force the user to make sure their state is synchronized.</p>\n</blockquote>\n"}, {"comments": [{"owner": {"reputation": 3493, "user_id": 1049866, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/Afe2j.png?s=128&g=1", "display_name": "PureW", "link": "https://stackoverflow.com/users/1049866/purew"}, "edited": false, "score": 0, "creation_date": 1476544887, "post_id": 40060733, "comment_id": 67395505, "body": "Thanks for this, I was not aware different threads could be handling various parts of processing of one request, is this always true or does it follow from hyper&#39;s design?"}, {"owner": {"reputation": 3493, "user_id": 1049866, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/Afe2j.png?s=128&g=1", "display_name": "PureW", "link": "https://stackoverflow.com/users/1049866/purew"}, "edited": false, "score": 0, "creation_date": 1476545046, "post_id": 40060733, "comment_id": 67395572, "body": "Also, how would I have <code>Sender</code> implement <code>Sync</code> and what does this entail? I thought the very design of <code>Sender</code> prohibits <code>Sync</code> and forces user to clone instead."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 3493, "user_id": 1049866, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/Afe2j.png?s=128&g=1", "display_name": "PureW", "link": "https://stackoverflow.com/users/1049866/purew"}, "edited": false, "score": 0, "creation_date": 1476545470, "post_id": 40060733, "comment_id": 67395723, "body": "@PureW: which <code>Sender</code>? I thought this was a type in your code (since there is no qualification), if it&#39;s not then you cannot implement <code>Sync</code> for it. If it is, then you can implement <code>Sync</code> for it, using <code>unsafe</code>, if you know what you are doing; you might want to ask on reddit, the users forum or IRC though if this is all alien to you."}, {"owner": {"reputation": 3493, "user_id": 1049866, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/Afe2j.png?s=128&g=1", "display_name": "PureW", "link": "https://stackoverflow.com/users/1049866/purew"}, "edited": false, "score": 0, "creation_date": 1476545811, "post_id": 40060733, "comment_id": 67395862, "body": "Sorry, the <code>Sender</code> is the one in <code>mpsc</code>. The full example has a <code>use std::sync::mpsc::Sender;</code>"}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 4, "last_activity_date": 1476544493, "creation_date": 1476544493, "answer_id": 40060733, "question_id": 40060378, "link": "https://stackoverflow.com/questions/40060378/why-does-hyper-require-handler-to-implement-sync-instead-of-using-independent-ha/40060733#40060733", "title": "Why does hyper require Handler to implement Sync instead of using independent Handlers per thread?", "body": "<p>This is a papercut issue.</p>\n\n<p><code>Sync</code> is trivially implemented for any stateless handler; having a <code>Clone</code> bound instead would mean having multiple concurrent states evolving independently from one another (with requests being dispatched randomly). I am not even sure there is a guarantee that while <em>waiting</em> during the handling of a request the same thread gets invoked with the result.</p>\n\n<p>By using <code>Sync</code>, the author forces you to think about what it means to share state across queries (or even intra-query).</p>\n\n<hr>\n\n<blockquote>\n  <p>As in the supplied example, I would love to remove the Mutex protecting the Sender since Sender is already designed for lock-free intrathread message-passing. All it requires is a clone per thread.</p>\n</blockquote>\n\n<p>You can have <code>Sender</code> implement <code>Sync</code> if it is (think it through, obviously), and then remove the <code>Mutex</code>.</p>\n\n<p>It also possible, though not too elegant, to have one instance per thread using the <a href=\"https://doc.rust-lang.org/std/thread/\" rel=\"nofollow\"><code>thread_local!</code></a> macro, and then a trampoline handler dispatch the work to the thread-local <code>Sender</code> upon invocation.</p>\n\n<hr>\n\n<p>Finally, note that hyper is under redesign at the moment; it should move to <code>Future</code> which may or may not cause some reconsideration here.</p>\n"}], "owner": {"reputation": 3493, "user_id": 1049866, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/Afe2j.png?s=128&g=1", "display_name": "PureW", "link": "https://stackoverflow.com/users/1049866/purew"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 152, "favorite_count": 0, "accepted_answer_id": 40060634, "answer_count": 2, "score": 2, "last_activity_date": 1476545886, "creation_date": 1476542401, "last_edit_date": 1476545886, "question_id": 40060378, "link": "https://stackoverflow.com/questions/40060378/why-does-hyper-require-handler-to-implement-sync-instead-of-using-independent-ha", "title": "Why does hyper require Handler to implement Sync instead of using independent Handlers per thread?", "body": "<p>Hyper has the following <a href=\"http://hyper.rs/hyper/v0.9.10/hyper/server/index.html\" rel=\"nofollow\">example</a> of a <code>Handler</code> that implements <code>Sync</code>:</p>\n\n<pre><code>use std::sync::Mutex;\nuse std::sync::mpsc::{channel, Sender};\nuse hyper::server::{Handler, Server, Request, Response};\n\nstruct SenderHandler {\n    sender: Mutex&lt;Sender&lt;&amp;'static str&gt;&gt;\n}\n\nimpl Handler for SenderHandler {\n    fn handle(&amp;self, req: Request, res: Response) {\n        self.sender.lock().unwrap().send(\"start\").unwrap();\n    }\n}\n</code></pre>\n\n<p>and states that a <code>Handler</code> must implement <a href=\"http://hyper.rs/hyper/v0.9.10/hyper/server/index.html\" rel=\"nofollow\"><code>Sync</code></a>, since <code>Handler</code> can be called from different threads.</p>\n\n<p>To me, this sounds like an unnecessary performance penalty. What I would prefer would be to setup one <code>SenderHandler</code> per thread, each being independent, which would remove the requirement on implementing <code>Sync</code>.</p>\n\n<p>Have I misunderstood Hyper, Rust's type-system or is this not possible?</p>\n"}, {"tags": ["iterator", "rust", "traits", "lifetime"], "answers": [{"comments": [{"owner": {"reputation": 4223, "user_id": 710955, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/GvorM.png?s=128&g=1", "display_name": "LeMoussel", "link": "https://stackoverflow.com/users/710955/lemoussel"}, "edited": false, "score": 0, "creation_date": 1476705903, "post_id": 40058150, "comment_id": 67444177, "body": "I&#39;m newby with Rust. How can I use your solution?  <code>for a in ?????? { println!(&quot;{}&quot;, a); }</code> ?"}, {"owner": {"reputation": 4223, "user_id": 710955, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/GvorM.png?s=128&g=1", "display_name": "LeMoussel", "link": "https://stackoverflow.com/users/710955/lemoussel"}, "edited": false, "score": 0, "creation_date": 1476713381, "post_id": 40058150, "comment_id": 67449725, "body": "I want to test your solution but I don&#39;t see how to do this. <code>fn main() {     let str_struct = StringStructIter{ How to do from &quot;1101&quot; ? };     for a in str_struct {         println!(&quot;{}&quot;, a);     } }</code>"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 4223, "user_id": 710955, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/GvorM.png?s=128&g=1", "display_name": "LeMoussel", "link": "https://stackoverflow.com/users/710955/lemoussel"}, "edited": false, "score": 0, "creation_date": 1476715272, "post_id": 40058150, "comment_id": 67451097, "body": "@LeMoussel I added the remaining code, I hope everything should be clear now!"}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 5, "last_activity_date": 1476715242, "last_edit_date": 1476715242, "creation_date": 1476528932, "answer_id": 40058150, "question_id": 40057904, "link": "https://stackoverflow.com/questions/40057904/wrong-number-of-lifetime-parameters-when-using-a-modified-chars-iterator/40058150#40058150", "title": "Wrong number of lifetime parameters when using a modified `Chars` iterator", "body": "<p>To answer the question you asked, I'd recommend to <code>impl IntoIterator for &amp;StringStruct</code> (a <strong>reference</strong> to a <code>StringStruct</code> instead of the struct directly). The code would look like this:</p>\n\n<pre><code>impl&lt;'a&gt; IntoIterator for &amp;'a StringStruct {\n    type Item = u32;\n    type IntoIter = Map&lt;Chars&lt;'a&gt;, Fn(char) -&gt; u32&gt;;\n    // ...\n}\n</code></pre>\n\n<hr>\n\n<p>However, you will notice many <strong>more errors</strong> that have a different origin afterwards. The next error that pops up is that <code>Fn(char) -&gt; u32</code> does not have a constant size at compile time.</p>\n\n<p>The problem is that you try to name the type of your closure by writing <code>Fn(char) -&gt; u32</code>. But this is <em>not</em> the type of your closure, but merely a trait which is implemented by the closure. The type of a closure <strong>can't be named</strong> (sometimes called \"Voldemort type\"). </p>\n\n<p>This means that, right now, you can't specify the type of a <code>Map&lt;_, _&gt;</code> object. This is a known issue; the recently accepted <code>impl Trait</code>-RFC might offer a workaround for cases like this. But right now, it's not possible, sorry.</p>\n\n<p><strong>So how to solve it then?</strong> You need to create your own type that implements <code>Iterator</code> and use it instead of <code>Map&lt;_, _&gt;</code>. Note that you can still use the <code>Chars</code> iterator. Here is the full solution:</p>\n\n<pre><code>struct StringStructIter&lt;'a&gt; {\n    chars: Chars&lt;'a&gt;,\n    count: u32,\n}\n\nimpl&lt;'a&gt; Iterator for StringStructIter&lt;'a&gt; {\n    type Item = u32;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n         self.chars.next().map(|c| {\n            if c == '1' {\n                self.count += 1;\n            }\n            self.count\n        })\n    }\n}\n\nimpl&lt;'a&gt; IntoIterator for &amp;'a StringStruct {\n    type Item = u32;\n    type IntoIter = StringStructIter&lt;'a&gt;;\n\n    fn into_iter(self) -&gt; Self::IntoIter {\n         StringStructIter {\n             chars: self.system_string.chars(),\n             count: 0,\n         }\n    }\n}\n\nfn main() {\n    let str_struct = StringStruct { system_string: String::from(\"1101\") };\n    for a in &amp;str_struct {\n        println!(\"{}\", a);\n    }\n}\n</code></pre>\n\n<hr>\n\n<p><em>And just a small note</em>: an explicit <code>return</code> when not necessary is considered bad style in Rust. Better stick to rule and write idiomatic code by removing <code>return</code> whenever possible ;-)</p>\n"}], "owner": {"reputation": 113, "user_id": 5403094, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/acd743bfc491a531ec5bf256a82b8578?s=128&d=identicon&r=PG&f=1", "display_name": "webbertee", "link": "https://stackoverflow.com/users/5403094/webbertee"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 308, "favorite_count": 0, "accepted_answer_id": 40058150, "answer_count": 1, "score": 5, "last_activity_date": 1476715242, "creation_date": 1476527387, "last_edit_date": 1476529183, "question_id": 40057904, "link": "https://stackoverflow.com/questions/40057904/wrong-number-of-lifetime-parameters-when-using-a-modified-chars-iterator", "title": "Wrong number of lifetime parameters when using a modified `Chars` iterator", "body": "<p>I want to implement the <code>IntoIterator</code> trait for a struct containing a <code>String</code>. The iterator is based on the <code>chars()</code> iterator, is supposed to count the <code>'1'</code> chars and accumulate the result. This is a simplified version of what I got so far:</p>\n\n<pre><code>use std::iter::Map;\nuse std::str::Chars;\n\nfn main() {\n    let str_struct = StringStruct { system_string: String::from(\"1101\") };\n    for a in str_struct {\n        println!(\"{}\", a);\n    }\n}\n\nstruct StringStruct {\n    system_string: String\n}\n\nimpl IntoIterator for StringStruct {\n    type Item = u32;\n    type IntoIter = Map&lt;Chars, Fn(char) -&gt; u32&gt;;\n\n    fn into_iter(self) -&gt; Self::IntoIter {\n        let count = 0;\n        return self.system_string.chars().map(|c| match c {\n            Some('1') =&gt; {\n                count += 1;\n                return Some(count);\n            },\n            Some(chr) =&gt; return Some(count),\n            None =&gt; return None\n        });\n    }\n}\n</code></pre>\n\n<p>Expected output: <code>1, 2, 2, 3</code></p>\n\n<p>This fails with:</p>\n\n<pre><code>error[E0107]: wrong number of lifetime parameters: expected 1, found 0\n  --&gt; src/main.rs:17:25\n   |\n17 |     type IntoIter = Map&lt;Chars, Fn(char) -&gt; u32&gt;;\n   |                         ^^^^^ expected 1 lifetime parameter\n</code></pre>\n\n<p>The chars iterator should have the same lifetime as the <code>StringStruct::system_string</code>, but I have no idea how to express this or if this approach is viable at all.</p>\n"}, {"tags": ["linux", "windows", "rust", "virtualfilesystem"], "answers": [{"tags": [], "owner": {"reputation": 35314, "user_id": 344347, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/1d83837bce9d9a2656c4f5704d40c430?s=128&d=identicon&r=PG", "display_name": "Pavel Strakhov", "link": "https://stackoverflow.com/users/344347/pavel-strakhov"}, "is_accepted": false, "score": 3, "last_activity_date": 1476534286, "creation_date": 1476534286, "answer_id": 40058992, "question_id": 40057303, "link": "https://stackoverflow.com/questions/40057303/how-to-create-a-virtual-filesystem-in-rust/40058992#40058992", "title": "How to create a virtual filesystem in Rust?", "body": "<p>The most popular implementation of virtual filesystems in Linux and MacOS is FUSE. There is a Rust crate that provides access to it: <a href=\"https://github.com/zargony/rust-fuse\" rel=\"nofollow\">rust-fuse</a>.</p>\n\n<p>For Windows there is <a href=\"https://dokan-dev.github.io/#fuse-api\" rel=\"nofollow\">Dokan FUSE</a> wrapper that claims to be compatible with FUSE API. You may try to build rust-fuse crate with that library.</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user7022802"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1466, "favorite_count": 2, "answer_count": 1, "score": 2, "last_activity_date": 1476534286, "creation_date": 1476523330, "question_id": 40057303, "link": "https://stackoverflow.com/questions/40057303/how-to-create-a-virtual-filesystem-in-rust", "title": "How to create a virtual filesystem in Rust?", "body": "<p>I am developing an application, which should mount a folder over the network. It should show up similiar to a folder mounted by SMB, only that the server does not use the SMB protocol. It is similiar to this: Server A is a HTTP server, that contains files and Client B should be able to mount those files, to be directly able to access them without downloading them first (streaming). The client should thus be able to stream files, i.e. accessing the file at arbitrary positions. Also the files stored on Server A are encoded, compressed, encrypted and packetized in a specific way, so I need to decode them (do some internal processing) before presenting them to the virtual file system. The client should have read-only access. I want the client to be available on Windows and Linux. It should look like this:</p>\n\n<p>Client has mounted a folder and wants to access /virtualfolder/data.file at position 1248989. The data stored on the server is split in blocks of arbitrary lengths (let's say it is 1 megabyte). I then need to download the part of the file corresponding to bytes 1000000 - 1999999, decode them, cache them and then the user can access this data.</p>\n\n<p>Of course my decoding process is done internally, I just need an API to create a virtual folder (or filesystem) on the OS, that shows up the names of the files and their sizes and lets the user access them.</p>\n\n<p>It should look like this:\n[OS] &lt;-virtual filesystem API-> [Client] &lt;-some protocol-> [Server]</p>\n\n<p>Accessing a file should look like this:</p>\n\n<p>[OS] I want to get the bytes 0-255 from file /vfs/somefile.tar</p>\n\n<p>[Client] Retrieving block 0-999999 from file /vfs/somefile.tar from server. This corresponds to block B5F997084DC8687. Downloading B5F997084DC8687 and decoding it.</p>\n\n<p>[Client] Here is /vfs/somefile.tar from 0-255.</p>\n\n<p>[OS] I want to get the bytes 256-511 from file /vfs/somefile.tar</p>\n\n<p>[Client] This corresponds to B5F997084DC8687. Already downloaded and cached this file. </p>\n\n<p>[Client] Here is /vfs/somefile.tar from 256-511.</p>\n\n<p>Pretty straightforward I assume. Is there a simple API for such things?</p>\n"}, {"tags": ["mongodb", "linker", "rust"], "answers": [{"tags": [], "owner": {"reputation": 23600, "user_id": 1695172, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/6319d7eafca7852cf04c88598ca31e75?s=128&d=identicon&r=PG", "display_name": "Netwave", "link": "https://stackoverflow.com/users/1695172/netwave"}, "is_accepted": false, "score": 0, "last_activity_date": 1476573375, "last_edit_date": 1476573375, "creation_date": 1476535296, "answer_id": 40059148, "question_id": 40056911, "link": "https://stackoverflow.com/questions/40056911/rust-linking-error-while-compiling-with-mongodb-driver/40059148#40059148", "title": "Rust linking error while compiling with mongodb driver", "body": "<p>Seems that I installed the GNU version of GCC on my computer, mingw-64 with GCC 6.1. This does not work properly.</p>\n\n<p>Installing the MSVC version of the Rust compiler makes it work perfectly.</p>\n"}], "owner": {"reputation": 23600, "user_id": 1695172, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/6319d7eafca7852cf04c88598ca31e75?s=128&d=identicon&r=PG", "display_name": "Netwave", "link": "https://stackoverflow.com/users/1695172/netwave"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 86, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1476573375, "creation_date": 1476520706, "last_edit_date": 1476573335, "question_id": 40056911, "link": "https://stackoverflow.com/questions/40056911/rust-linking-error-while-compiling-with-mongodb-driver", "title": "Rust linking error while compiling with mongodb driver", "body": "<p>I've been bumping my head against this, I've tried all dependency versions but the compiler could not find a method to link with:</p>\n\n<p>My Cargo.toml looks like this:</p>\n\n<pre><code>[package]\nname    = \"mongotest\"\nversion = \"0.1.0\"\nauthors = [\"netwave\"]\n\n[dependencies]\nbson       = \"*\"\nmongodb    = \"0.1.7\"\n</code></pre>\n\n<p>It all compiles properly, but when linking it could not find <code>gethostname</code></p>\n\n<blockquote>\n  <p>C:\\Users\\netwave.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-0.3.1\\src/oid.rs:205:\n  undefined reference to `gethostname'</p>\n</blockquote>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1476526967, "post_id": 40055279, "comment_id": 67390318, "body": "Be careful about the notion of \u201cunicode character\u201d. It&#39;s not easy to define, and certainly is not the same as <code>char</code> (which is a unicode scalar value). Eg \u201c\u0254\u0303\u201d is one character, but two <code>char</code>s."}, {"owner": {"reputation": 47, "user_id": 7021505, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a53cbd662fe1ed839ba6ef21001b96e2?s=128&d=identicon&r=PG&f=1", "display_name": "Vladislav Chebanyuk", "link": "https://stackoverflow.com/users/7021505/vladislav-chebanyuk"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1476531764, "post_id": 40055279, "comment_id": 67391620, "body": "@mcarton you are right, but I think I don&#39;t need so exotic symbols, <code>unicode scalar</code> is enough"}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 2, "creation_date": 1476532749, "post_id": 40055279, "comment_id": 67391906, "body": "With respect to the update about raw strings, please describe the problem you&#39;re trying to solve."}], "answers": [{"tags": [], "owner": {"reputation": 8813, "user_id": 389119, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/05241abffd72dcdcd1dc9d6833706ba9?s=128&d=identicon&r=PG", "display_name": "antoyo", "link": "https://stackoverflow.com/users/389119/antoyo"}, "is_accepted": false, "score": 0, "last_activity_date": 1476512940, "creation_date": 1476512940, "answer_id": 40055769, "question_id": 40055279, "link": "https://stackoverflow.com/questions/40055279/parse-a-string-containing-a-unicode-number-into-the-corresponding-unicode-charac/40055769#40055769", "title": "Parse a string containing a Unicode number into the corresponding Unicode character?", "body": "<p>To get the characters from the <code>String</code>, you can use the <code>chars()</code> method to get an iterator over the characters:</p>\n\n<pre><code>    let ch : char = s.chars().next().unwrap();\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": false, "score": 2, "last_activity_date": 1476533178, "last_edit_date": 1495541799, "creation_date": 1476519786, "answer_id": 40056782, "question_id": 40055279, "link": "https://stackoverflow.com/questions/40055279/parse-a-string-containing-a-unicode-number-into-the-corresponding-unicode-charac/40056782#40056782", "title": "Parse a string containing a Unicode number into the corresponding Unicode character?", "body": "<p><em>I indeed completely misunderstood your question; my old answer can be seen in the <a href=\"https://stackoverflow.com/posts/40056782/revisions\">edit logs</a></em></p>\n\n<blockquote>\n  <p>Is there a builtin function to parse a string containing a Rust unicode escape into the corresponding unicode character?</p>\n</blockquote>\n\n<p>AFAIK, <strong>no</strong>, there is not a builtin function to do that.</p>\n\n<p>The answer to \"how to do it yourself\" is a bit broad, as there are many ways to do it (and it's not clear whether you also want to parse standard escapes, such as <code>\"\\n\"</code>).</p>\n\n<ul>\n<li>Use a regex</li>\n<li>Do simple, naive manual parsing</li>\n<li>Embed it into a bigger lexer (<a href=\"https://github.com/rust-lang/rust/blob/9e3dcb45493366c790d333aaf4dfa5a043e49a63/src/libsyntax/parse/lexer/mod.rs#L959-L1014\" rel=\"nofollow noreferrer\">the function in the Rust compiler parsing such unicode escapes</a>)</li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 3, "last_activity_date": 1476573267, "creation_date": 1476573267, "answer_id": 40065186, "question_id": 40055279, "link": "https://stackoverflow.com/questions/40055279/parse-a-string-containing-a-unicode-number-into-the-corresponding-unicode-charac/40065186#40065186", "title": "Parse a string containing a Unicode number into the corresponding Unicode character?", "body": "<p>I believe the function you are looking for is <a href=\"https://doc.rust-lang.org/std/char/fn.from_u32.html\" rel=\"nofollow\"><code>char::from_u32</code></a>:</p>\n\n<pre><code>fn string_to_unicode_char(s: &amp;str) -&gt; Option&lt;char&gt; {\n    // Do something more appropriate to find the actual number\n    let number = &amp;s[3..7];\n\n    u32::from_str_radix(number, 16)\n        .ok()\n        .and_then(std::char::from_u32)\n}\n\nfn main() {\n    let s = r\"\\u{00AA}\";  // note the raw string literal!\n    let ch = string_to_unicode_char(s);\n    assert_eq!(ch, Some('\\u{00AA}'));\n}\n</code></pre>\n"}], "owner": {"reputation": 47, "user_id": 7021505, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a53cbd662fe1ed839ba6ef21001b96e2?s=128&d=identicon&r=PG&f=1", "display_name": "Vladislav Chebanyuk", "link": "https://stackoverflow.com/users/7021505/vladislav-chebanyuk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 763, "favorite_count": 0, "answer_count": 3, "score": 1, "last_activity_date": 1476573267, "creation_date": 1476508930, "last_edit_date": 1476572937, "question_id": 40055279, "link": "https://stackoverflow.com/questions/40055279/parse-a-string-containing-a-unicode-number-into-the-corresponding-unicode-charac", "title": "Parse a string containing a Unicode number into the corresponding Unicode character?", "body": "<p>Is there a function to do something like this:</p>\n\n<pre><code>fn string_to_unicode_char(s: &amp;str) -&gt; Option&lt;char&gt; {\n    // ...\n}\n\nfn main() {\n    let s = r\"\\u{00AA}\";  // note the raw string literal!\n    string_to_unicode_char(s).unwrap();\n}\n</code></pre>\n\n<p>Note that <code>r\"\\u{00AA}\"</code> uses a <a href=\"https://doc.rust-lang.org/reference.html#raw-string-literals\" rel=\"nofollow\">raw string</a> i. e. it isn't a <em>Unicode sequence</em> but 8 separate symbols, as <code>\\</code> <code>u</code> <code>{</code> <code>0</code> <code>0</code> <code>A</code> <code>A</code> <code>}</code>.</p>\n\n<p>I need to interpret/convert/parse this string and return a char if all is good, <code>None</code> otherwise. I don't have any experience with Unicode, so any ideas are welcome.</p>\n"}, {"tags": ["rust", "lifetime"], "answers": [{"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": false, "score": 27, "last_activity_date": 1533297123, "last_edit_date": 1533297123, "creation_date": 1476490053, "answer_id": 40053649, "question_id": 40053550, "link": "https://stackoverflow.com/questions/40053550/the-compiler-suggests-i-add-a-static-lifetime-because-the-parameter-type-may-no/40053649#40053649", "title": "The compiler suggests I add a &#39;static lifetime because the parameter type may not live long enough, but I don&#39;t think that&#39;s what I want", "body": "<blockquote>\n  <p>asking me to consider adding a 'static lifetime qualifier (E0310). I am 99% sure that's not what I want, but I'm not exactly sure what I'm supposed to do.</p>\n</blockquote>\n\n<p>Yes it is. The compiler does not want a <code>&amp;'static</code> reference, it wants <code>U: 'static</code>.</p>\n\n<p>Having <code>U: 'static</code> means that <code>U</code> contains no references with a lifetime less than <code>'static</code>. This is required because you want to put a <code>U</code> instance in a structure without lifetimes.</p>\n\n<pre><code>trait Bar&lt;T&gt; {}\n\nstruct Foo&lt;T&gt; {\n    data: Vec&lt;Box&lt;dyn Bar&lt;T&gt;&gt;&gt;,\n}\n\nimpl&lt;T&gt; Foo&lt;T&gt; {\n    fn add&lt;U: Bar&lt;T&gt; + 'static&gt;(&amp;mut self, x: U) {\n        self.data.push(Box::new(x));\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 2462, "user_id": 911651, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/8d03f24dd6314707c4da54eb577a7dbf?s=128&d=identicon&r=PG", "display_name": "AlexLiesenfeld", "link": "https://stackoverflow.com/users/911651/alexliesenfeld"}, "edited": false, "score": 3, "creation_date": 1605132462, "post_id": 40053651, "comment_id": 114561632, "body": "I can&#39;t express enough how valuable this explanation is. Thank you so much!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 61, "last_activity_date": 1533297073, "last_edit_date": 1533297073, "creation_date": 1476490067, "answer_id": 40053651, "question_id": 40053550, "link": "https://stackoverflow.com/questions/40053550/the-compiler-suggests-i-add-a-static-lifetime-because-the-parameter-type-may-no/40053651#40053651", "title": "The compiler suggests I add a &#39;static lifetime because the parameter type may not live long enough, but I don&#39;t think that&#39;s what I want", "body": "<p>Check out the entire error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0310]: the parameter type `U` may not live long enough\n --&gt; src/main.rs:9:24\n  |\n8 |     fn add&lt;U: Bar&lt;T&gt;&gt;(&amp;mut self, x: U) {\n  |            -- help: consider adding an explicit lifetime bound `U: 'static`...\n9 |         self.data.push(Box::new(x));\n  |                        ^^^^^^^^^^^\n  |\nnote: ...so that the type `U` will meet its required lifetime bounds\n --&gt; src/main.rs:9:24\n  |\n9 |         self.data.push(Box::new(x));\n  |                        ^^^^^^^^^^^\n</code></pre>\n\n<p>Specifically, the compiler is letting you know that it's possible that some arbitrary type <code>U</code> <em>might contain a reference</em>, and that reference could then become invalid:</p>\n\n<pre><code>impl&lt;'a, T&gt; Bar&lt;T&gt; for &amp;'a str {}\n\nfn main() {\n    let mut foo = Foo { data: vec![] };\n\n    {\n        let s = \"oh no\".to_string();\n        foo.add(s.as_ref());\n    }\n}\n</code></pre>\n\n<p>That would be Bad News.</p>\n\n<p>Whether you want a <code>'static</code> lifetime or a parameterized lifetime is up to your needs. The <code>'static</code> lifetime is easier to use, but has more restrictions. Because of this, it's the default when you declare a <em>trait object</em> in a struct or a type alias:</p>\n\n<pre><code>struct Foo&lt;T&gt; {\n    data: Vec&lt;Box&lt;dyn Bar&lt;T&gt;&gt;&gt;,\n    // same as\n    // data: Vec&lt;Box&lt;dyn Bar&lt;T&gt; + 'static&gt;&gt;,\n} \n</code></pre>\n\n<p>However, when used as an argument, a trait object uses <em>lifetime elision</em> and gets a unique lifetime:</p>\n\n<pre><code>fn foo(&amp;self, x: Box&lt;dyn Bar&lt;T&gt;&gt;)\n// same as\n// fn foo&lt;'a, 'b&gt;(&amp;'a self, x: Box&lt;dyn Bar&lt;T&gt; + 'b&gt;)\n</code></pre>\n\n<p>These two things need to match up.</p>\n\n<pre><code>struct Foo&lt;'a, T&gt; {\n    data: Vec&lt;Box&lt;dyn Bar&lt;T&gt; + 'a&gt;&gt;,\n}\n\nimpl&lt;'a, T&gt; Foo&lt;'a, T&gt; {\n    fn add&lt;U&gt;(&amp;mut self, x: U)\n    where\n        U: Bar&lt;T&gt; + 'a,\n    {\n        self.data.push(Box::new(x));\n    }\n}\n</code></pre>\n\n<p><strong>or</strong></p>\n\n<pre><code>struct Foo&lt;T&gt; {\n    data: Vec&lt;Box&lt;dyn Bar&lt;T&gt;&gt;&gt;,\n}\n\nimpl&lt;T&gt; Foo&lt;T&gt; {\n    fn add&lt;U&gt;(&amp;mut self, x: U)\n    where\n        U: Bar&lt;T&gt; + 'static,\n    {\n        self.data.push(Box::new(x));\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 3629, "user_id": 251860, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2c2ad88c3ece5cacea1e45153311a0e4?s=128&d=identicon&r=PG", "display_name": "Robert Mason", "link": "https://stackoverflow.com/users/251860/robert-mason"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 12268, "favorite_count": 10, "accepted_answer_id": 40053651, "answer_count": 2, "score": 52, "last_activity_date": 1533297123, "creation_date": 1476489105, "last_edit_date": 1529946085, "question_id": 40053550, "link": "https://stackoverflow.com/questions/40053550/the-compiler-suggests-i-add-a-static-lifetime-because-the-parameter-type-may-no", "title": "The compiler suggests I add a &#39;static lifetime because the parameter type may not live long enough, but I don&#39;t think that&#39;s what I want", "body": "<p>I'm trying to implement something that looks like this minimal example:</p>\n\n<pre><code>trait Bar&lt;T&gt; {}\n\nstruct Foo&lt;T&gt; {\n    data: Vec&lt;Box&lt;Bar&lt;T&gt;&gt;&gt;,\n}\n\nimpl&lt;T&gt; Foo&lt;T&gt; {\n    fn add&lt;U: Bar&lt;T&gt;&gt;(&amp;mut self, x: U) {\n        self.data.push(Box::new(x));\n    }\n}\n</code></pre>\n\n<p>Since Rust defaults to (as far as I can tell) pass-by-ownership, my mental model thinks this should work.  The <code>add</code> method takes ownership of object <code>x</code> and is able to move this object into a <code>Box</code> because it knows the full type <code>U</code> (and not just trait <code>Bar&lt;T&gt;</code>).  Once moved into a <code>Box</code>, the lifetime of the item inside the box should be tied to the actual lifetime of the box (e.g., when <code>pop()</code>ed off the vector the object will be destroyed).</p>\n\n<p>Clearly, however, the compiler disagrees (and I'm sure knows a bit more than I...), asking me to consider adding a <code>'static</code> lifetime qualifier (E0310).  I am 99% sure that's not what I want, but I'm not exactly sure what I'm supposed to do.</p>\n\n<p>To clarify what I'm thinking and help identify misconceptions, my mental model, coming from a C++ background, is:</p>\n\n<ul>\n<li><code>Box&lt;T&gt;</code> is essentially <code>std::unique_ptr&lt;T&gt;</code></li>\n<li>Without any annotations, variables are passed by value if <code>Copy</code> and rvalue-reference otherwise</li>\n<li>With a reference annotation, <code>&amp;</code> is roughly <code>const&amp;</code> and <code>&amp;mut</code> is roughly <code>&amp;</code></li>\n<li>The default lifetime is lexical scope</li>\n</ul>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1476488774, "post_id": 40053414, "comment_id": 67382810, "body": "\u201cLikewise, they aren&#39;t a fancy way of concatenating strings.\u201d \u2192 Well, there is <code>concat!</code>. Sure, it&#39;s implemented as a plugin because regular macros can&#39;t do it, but the wording is misleading here."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 4, "last_activity_date": 1476488888, "last_edit_date": 1476488888, "creation_date": 1476488052, "answer_id": 40053414, "question_id": 40052928, "link": "https://stackoverflow.com/questions/40052928/is-there-a-more-beautiful-way-to-convert-a-character-literal-to-its-correspondin/40053414#40053414", "title": "Is there a more beautiful way to convert a character literal to its corresponding escape character?", "body": "<p>Rust macros are not C macros \u2014 you cannot create invalid tokens and hope that they are valid sometime in the future. Likewise, they aren't a fancy way of concatenating strings that later get interpreted as code.</p>\n\n<p>Looking at the code, It seems like the main repetition is in the <code>push</code> and <code>continue</code>. I'd probably use normal functions and pattern matching to DRY up that specific code:</p>\n\n<pre><code>fn escape_char(c: char) -&gt; Option&lt;char&gt; {\n    Some(match c {\n        // 'b' =&gt; '\\b',\n        // 'f' =&gt; '\\f',\n        'n' =&gt; '\\n',\n        'r' =&gt; '\\r',\n        't' =&gt; '\\t',\n        _ =&gt; return None,\n    })\n}\n\nfn main() {\n    // ...\n\n    if let Some(escape) = escape_char('b') {\n        token.push(escape);\n        continue;\n    }\n\n    // ...\n}\n</code></pre>\n\n<p>Now the mapping is constrained to a single <code>x =&gt; '\\y'</code> line.</p>\n\n<p>Note that <code>\\b</code> and <code>\\f</code> aren't recognized escape codes in Rust; not sure what you are going to do for those.</p>\n"}], "owner": {"reputation": 47, "user_id": 7021505, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a53cbd662fe1ed839ba6ef21001b96e2?s=128&d=identicon&r=PG&f=1", "display_name": "Vladislav Chebanyuk", "link": "https://stackoverflow.com/users/7021505/vladislav-chebanyuk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 257, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1476488888, "creation_date": 1476484568, "last_edit_date": 1476488104, "question_id": 40052928, "link": "https://stackoverflow.com/questions/40052928/is-there-a-more-beautiful-way-to-convert-a-character-literal-to-its-correspondin", "title": "Is there a more beautiful way to convert a character literal to its corresponding escape character?", "body": "<p>I'm writing a parser:</p>\n\n<pre><code>match ch  {\n    // ...\n    'b' =&gt; {\n        token.push('\\b');\n        continue;\n    },\n    'f' =&gt; {\n        token.push('\\f');\n        continue;\n    },\n    'n' =&gt; {\n        token.push('\\n');\n        continue;\n    },\n    'r' =&gt; {\n        token.push('\\r');\n        continue;\n    },\n    't' =&gt; {\n        token.push('\\t');\n        continue;\n    },\n    // ...\n},\n</code></pre>\n\n<p>There's a lot of repeating code, so I'm thinking about a more elegant way to do it. I thought something like this would be possible:</p>\n\n<pre><code>macro_rules! escaped_match {\n    ($char:expr) =&gt; (\n        '$char' =&gt; {\n            token.push('\\$char')\n            continue;\n        }\n    )\n}\n</code></pre>\n\n<p>But my hope is gone:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: character literal may only contain one codepoint: '$\n --&gt; src/main.rs:3:9\n  |\n3 |         '$char' =&gt; {\n  |         ^^\n</code></pre>\n\n<p>Is there a more beautiful way to do it, whether using macros, compiler plugins, hacks, or black magic?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 1084, "user_id": 4302668, "user_type": "registered", "accept_rate": 44, "profile_image": "https://i.stack.imgur.com/EmGum.png?s=128&g=1", "display_name": "Michael Hewson", "link": "https://stackoverflow.com/users/4302668/michael-hewson"}, "edited": false, "score": 0, "creation_date": 1476570101, "post_id": 40048273, "comment_id": 67403672, "body": "I think the reason the <code>Box</code> is necessary is that <code>mem::transmute&lt;T,U&gt;</code> needs to check that the size of types <code>T</code> and <code>U</code> are equal, and in order to do that <code>T</code> and <code>U</code> must be <code>Sized</code>. <code>F</code> is not <code>Sized</code>, but <code>Box&lt;F&gt;</code> is."}, {"owner": {"reputation": 1084, "user_id": 4302668, "user_type": "registered", "accept_rate": 44, "profile_image": "https://i.stack.imgur.com/EmGum.png?s=128&g=1", "display_name": "Michael Hewson", "link": "https://stackoverflow.com/users/4302668/michael-hewson"}, "edited": false, "score": 0, "creation_date": 1476570356, "post_id": 40048273, "comment_id": 67403722, "body": "So if Rust had an <code>expand_lifetime</code> function that worked on <code>?Sized</code> types, it would be possible, right? Something like <code>fn expand_lifetime&lt;&#39;a, T: ?Sized&gt;(x: T + &#39;a) -&gt; T + &#39;static</code>"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1476503065, "post_id": 40054682, "comment_id": 67385016, "body": "It&#39;s interesting to think about what would be needed to do this in a &quot;clean&quot; manner. Ideally, you could <code>transmute</code> from <code>F</code> to <code>F-prime</code>, where the latter has had all its lifetimes substituted with <code>&#39;static</code>. Of course, there&#39;s no way to pick apart the type of <code>F</code> or to put it back together again. The boxed trait object allows the code to specify <i>a</i> type that it can then control the lifetimes of."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 1, "last_activity_date": 1476502598, "creation_date": 1476502598, "answer_id": 40054682, "question_id": 40048273, "link": "https://stackoverflow.com/questions/40048273/could-this-scoped-thread-code-be-changed-to-use-fnonce-instead-of-boxfnonc/40054682#40054682", "title": "Could this scoped thread code be changed to use `FnOnce()` instead of `Box&lt;FnOnce()&gt;`?", "body": "<p>As far as I know, this is not possible as of Rust 1.12. We'd have to transmute <code>f</code> into another type of the same size that respects the <code>'static</code> bound. The most straightforward way to do this would be to convert it into an array of bytes of the same size as <code>F</code>, but that's not possible because we can't use <a href=\"https://doc.rust-lang.org/stable/std/mem/fn.size_of.html\" rel=\"nofollow\"><code>size_of</code></a> in a constant expression (as we could with <code>sizeof</code> in C++).</p>\n\n<p>We could work around this by allocating an array with a fixed size that is independent from <code>F</code> and either panic if <code>F</code> is too large or fall back to using <code>Box</code>.</p>\n\n<pre><code>impl&lt;'a&gt; Scope&lt;'a&gt; {\n    pub fn spawn&lt;F&gt;(&amp;mut self, f: F) where F: FnOnce() + Send + 'a {\n        assert!(std::mem::size_of::&lt;F&gt;() &lt;= 256);\n        let mut x: [u8; 256] = [0; 256];\n        unsafe { std::ptr::write(&amp;mut x as *mut _ as *mut F, f); }\n        let join_handle = thread::spawn(move || {\n            let f: F = unsafe { std::mem::transmute_copy(&amp;x) };\n            f()\n        });\n        self.join_handles.push_back(join_handle);\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 1084, "user_id": 4302668, "user_type": "registered", "accept_rate": 44, "profile_image": "https://i.stack.imgur.com/EmGum.png?s=128&g=1", "display_name": "Michael Hewson", "link": "https://stackoverflow.com/users/4302668/michael-hewson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 138, "favorite_count": 1, "answer_count": 1, "score": 3, "last_activity_date": 1476502598, "creation_date": 1476463808, "last_edit_date": 1476463894, "question_id": 40048273, "link": "https://stackoverflow.com/questions/40048273/could-this-scoped-thread-code-be-changed-to-use-fnonce-instead-of-boxfnonc", "title": "Could this scoped thread code be changed to use `FnOnce()` instead of `Box&lt;FnOnce()&gt;`?", "body": "<p>I have the following code that implements scoped threads in Rust - that is, the ability to spawn threads and safely access variables that are on the stack. Most of the following code is taken from <a href=\"https://github.com/aturon/crossbeam\" rel=\"nofollow\">crossbeam</a>, with a bit of inspiration also from <a href=\"https://github.com/Kimundi/scoped-threadpool-rs\" rel=\"nofollow\">scoped_threadpool</a>.</p>\n\n<pre><code>use std::thread;\nuse std::thread::JoinHandle;\nuse std::collections::LinkedList;\nuse std::marker::PhantomData;\nuse std::boxed::Box;\n\npub struct Scope&lt;'a&gt; {\n    join_handles: LinkedList&lt;JoinHandle&lt;()&gt;&gt;,\n    _marker: PhantomData&lt;::std::cell::Cell&lt;&amp;'a mut ()&gt;&gt;\n}\n\nimpl&lt;'a&gt; Scope&lt;'a&gt; {\n    pub fn spawn&lt;F&gt;(&amp;mut self, f: F) where F: FnOnce() + Send + 'a {\n        // Could this be done without using a Box?\n        let closure: Box&lt;FnBox + Send + 'a&gt; = Box::new(f);\n        let closure: Box&lt;FnBox + Send + 'static&gt; = unsafe{\n            std::mem::transmute(closure)\n        };\n        let join_handle = thread::spawn(move || closure.call_box());\n        self.join_handles.push_back(join_handle);\n    }\n}\n\npub fn scope&lt;'a, F, R&gt;(f: F) -&gt; R where F: FnOnce(&amp;mut Scope&lt;'a&gt;) -&gt;     R {\n    let mut scope = Scope {\n        join_handles: LinkedList::new(),\n        _marker: PhantomData\n    };\n    let ret = f(&amp;mut scope);\n    for join_handle in scope.join_handles {\n        join_handle.join().unwrap();\n    }\n    ret\n}\n\ntrait FnBox {\n    fn call_box(self: Box&lt;Self&gt;);\n}\n\nimpl&lt;F: FnOnce()&gt; FnBox for F {\n    fn call_box(self: Box&lt;Self&gt;) { (*self)() }\n}\n\n// Example usage:\n\n// let mut foo = 0;\n// scope(|mut scope| {\n//     scope.spawn(|| {\n//         foo = 1;\n//     });\n// });\n// assert!(foo == 1);\n</code></pre>\n\n<p>Could the <code>spawn</code> function be changed so that <code>f</code> is not placed in a <code>Box</code>, in order to avoid the extra heap allocation? If not, why is it necessary to use a <code>Box</code>?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 28990, "user_id": 1114966, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/af8712b05e5cfb862323a07c83749054?s=128&d=identicon&r=PG", "display_name": "squiguy", "link": "https://stackoverflow.com/users/1114966/squiguy"}, "edited": false, "score": 0, "creation_date": 1476424999, "post_id": 40035899, "comment_id": 67348381, "body": "What is <code>f</code> is in this case?"}, {"owner": {"reputation": 1599, "user_id": 2441230, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/4a3fe1d786c575a3b6aaa872604d1d13?s=128&d=identicon&r=PG", "display_name": "ElefEnt", "link": "https://stackoverflow.com/users/2441230/elefent"}, "reply_to_user": {"reputation": 28990, "user_id": 1114966, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/af8712b05e5cfb862323a07c83749054?s=128&d=identicon&r=PG", "display_name": "squiguy", "link": "https://stackoverflow.com/users/1114966/squiguy"}, "edited": false, "score": 0, "creation_date": 1476425075, "post_id": 40035899, "comment_id": 67348409, "body": "it&#39;s a mio::tcp::TcpStream"}, {"owner": {"reputation": 669, "user_id": 5076511, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WubM0.jpg?s=128&g=1", "display_name": "Fabulous", "link": "https://stackoverflow.com/users/5076511/fabulous"}, "edited": false, "score": 0, "creation_date": 1476425209, "post_id": 40035899, "comment_id": 67348468, "body": "what is the value of n when the code crashes?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1476427608, "post_id": 40035899, "comment_id": 67349667, "body": "What&#39;s the default size of your stack? Because <code>Box::new([0; 1024 * 1024])</code> will allocate 1MB on the stack prior to moving it to the box."}, {"owner": {"reputation": 1599, "user_id": 2441230, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/4a3fe1d786c575a3b6aaa872604d1d13?s=128&d=identicon&r=PG", "display_name": "ElefEnt", "link": "https://stackoverflow.com/users/2441230/elefent"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1476427973, "post_id": 40035899, "comment_id": 67349833, "body": "@MatthieuM. Ugh. Is there a way to allocate directly on the heap?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 4, "creation_date": 1476428202, "post_id": 40035899, "comment_id": 67349942, "body": "@ElefEnt: It&#39;s in the works (<a href=\"https://github.com/rust-lang/rust/issues/27779\" rel=\"nofollow noreferrer\">placement_new_protocol</a>). In the mean time, I advise creating a <code>Vec</code> and then converting it to a <code>Box</code> via <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.into_boxed_slice\" rel=\"nofollow noreferrer\"><code>into_boxed_slice</code></a>."}, {"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 4, "creation_date": 1476436469, "post_id": 40035899, "comment_id": 67354555, "body": "For this particular case, using Vec or Box doesn&#39;t matter, so you could also just use Vec and not convert."}], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1476434255, "post_id": 40037711, "comment_id": 67353275, "body": "Will it really overflow the stack? I mean, it&#39;s only 1MB, which is not THAT much. I know some OSes have tight limits by default, but I don&#39;t know if OS X is one of them."}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1476434875, "post_id": 40037711, "comment_id": 67353632, "body": "Well, that is the error that is reported; perhaps it is bogus, but I&#39;m not sure how to investigate it further."}], "tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": true, "score": 5, "last_activity_date": 1476431187, "last_edit_date": 1495541329, "creation_date": 1476431187, "answer_id": 40037711, "question_id": 40035899, "link": "https://stackoverflow.com/questions/40035899/stack-overflow-with-heap-buffer/40037711#40037711", "title": "Stack overflow with heap buffer?", "body": "<p>As Matthieu said, <code>Box::new([0; 1024 * 1024])</code> will currently overflow the stack due to initial stack allocation. If you are using Rust Nightly, the <code>box_syntax</code> feature will allow it to run without issues:</p>\n\n<pre><code>#![feature(box_syntax)]\n\nfn main() {\n    let mut buf: Box&lt;[u8]&gt; = box [0; 1024 * 1024]; // note box instead of Box::new()\n\n    println!(\"{}\", buf[0]);\n}\n</code></pre>\n\n<p>You can find additional information about the difference between <code>box</code> and <code>Box::new()</code> in the following question: <a href=\"https://stackoverflow.com/questions/35201250/what-the-difference-is-between-using-the-box-keyword-and-boxnew/35201819\">What the difference is between using the box keyword and Box::new?</a>.</p>\n"}], "owner": {"reputation": 1599, "user_id": 2441230, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/4a3fe1d786c575a3b6aaa872604d1d13?s=128&d=identicon&r=PG", "display_name": "ElefEnt", "link": "https://stackoverflow.com/users/2441230/elefent"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 160, "favorite_count": 0, "accepted_answer_id": 40037711, "answer_count": 1, "score": 4, "last_activity_date": 1476447894, "creation_date": 1476424648, "last_edit_date": 1476447894, "question_id": 40035899, "link": "https://stackoverflow.com/questions/40035899/stack-overflow-with-heap-buffer", "title": "Stack overflow with heap buffer?", "body": "<p>I have the following code to read from a file:</p>\n\n<pre><code>let mut buf: Box&lt;[u8]&gt; = Box::new([0; 1024 * 1024]);\nwhile let Ok(n) = f.read(&amp;mut buf) {\n    if n &gt; 0 {\n        resp.send_data(&amp;buf[0..n]);\n    } else {\n        break;\n    }\n}\n</code></pre>\n\n<p>But it causes:</p>\n\n<pre><code>fatal runtime error: stack overflow\n</code></pre>\n\n<p>I am on OS X 10.11 with Rust 1.12.0.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 13635, "user_id": 547365, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ddefbca930fdd39846b698bab7ac3146?s=128&d=identicon&r=PG", "display_name": "w.brian", "link": "https://stackoverflow.com/users/547365/w-brian"}, "edited": false, "score": 2, "creation_date": 1476460304, "post_id": 40036218, "comment_id": 67370556, "body": "The confusing aspect about the <code>Send + &#39;static</code> constraint is that in the Rust book they&#39;re wrapping a <code>Vec</code> that at first glance doesn&#39;t appear to have a <code>&#39;static</code> lifetime since it&#39;s defined in the <code>main</code> method.  Upon further inspection it is <code>&#39;static</code> because it&#39;s a literal value. This is not immediately apparent to everyone.  When I originally added the <code>Send</code> constraint it complained that it needed to be <code>&#39;static</code>, it seemed to defy what the example was conveying, hence the question.  The condescending tone of your answer is unwarranted and reflects poorly on the rust community."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 13635, "user_id": 547365, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ddefbca930fdd39846b698bab7ac3146?s=128&d=identicon&r=PG", "display_name": "w.brian", "link": "https://stackoverflow.com/users/547365/w-brian"}, "edited": false, "score": 0, "creation_date": 1476501566, "post_id": 40036218, "comment_id": 67384825, "body": "@w.brian It&#39;s not that it&#39;s a literal value, it&#39;s that it can live as long as it wants to.  In other words, there isn&#39;t anything in the type itself that limits how long it&#39;s valid (such as a reference to non-static data): the answer to the question &quot;when does a value of this type become invalid&quot; is &quot;never&quot;."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 13635, "user_id": 547365, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ddefbca930fdd39846b698bab7ac3146?s=128&d=identicon&r=PG", "display_name": "w.brian", "link": "https://stackoverflow.com/users/547365/w-brian"}, "edited": false, "score": 2, "creation_date": 1476501963, "post_id": 40036218, "comment_id": 67384871, "body": "@w.brian As for my &quot;tone&quot;, I&#39;m afraid that&#39;s in your head: if I wanted to do condescending, I wouldn&#39;t have bothered to go through and get links for every specific page of documentation so you could follow my reasoning more easily.  Moreso, I find it offensive and petty for you to malign the whole community for the perceived &quot;tone&quot; of one person.  Irrespective of myself, this community has some of the most helpful, welcoming and hard-working volunteers I&#39;ve ever seen.  If you want to have a problem with someone, have it with <i>me.</i>"}, {"owner": {"reputation": 13635, "user_id": 547365, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ddefbca930fdd39846b698bab7ac3146?s=128&d=identicon&r=PG", "display_name": "w.brian", "link": "https://stackoverflow.com/users/547365/w-brian"}, "edited": false, "score": 3, "creation_date": 1476502880, "post_id": 40036218, "comment_id": 67384991, "body": "I appreciate the answer, but it implies I didn&#39;t do my due diligence. And whether you like it or not, you represent the community when you provide answers for this tag."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 9, "last_activity_date": 1476425905, "creation_date": 1476425905, "answer_id": 40036218, "question_id": 40035731, "link": "https://stackoverflow.com/questions/40035731/how-do-i-share-a-generic-struct-between-threads-using-arcmutexmystructt/40036218#40036218", "title": "How do I share a generic struct between threads using Arc&lt;Mutex&lt;MyStruct&lt;T&gt;&gt;&gt;?", "body": "<blockquote>\n  <p>I'm trying to understand why <code>M</code> would need to implement <code>Send</code>, ...</p>\n</blockquote>\n\n<p>Because, as stated by <a href=\"https://doc.rust-lang.org/std/marker/trait.Send.html\">the <code>Send</code> documentation</a>:</p>\n\n<blockquote>\n  <p>Types that can be transferred across thread boundaries.</p>\n</blockquote>\n\n<p>If it's not <code>Send</code>, it is <em>by definition</em> not safe to send to another thread.</p>\n\n<p>Almost all of the information you need is <em>right there</em> in the documentation:</p>\n\n<ul>\n<li><a href=\"https://doc.rust-lang.org/std/thread/fn.spawn.html\"><code>thread::spawn</code></a> requires the callable you give it to be <code>Send</code>.</li>\n<li>You're using a closure, which is only <code>Send</code> if all the values it captures are <code>Send</code>.  This is true in general of most types (they are <code>Send</code> if everything they're made of is <code>Send</code>, and similarly for <code>Sync</code>).</li>\n<li>You're capturing <code>data</code>, which is an <a href=\"https://doc.rust-lang.org/std/sync/struct.Arc.html\"><code>Arc&lt;T&gt;</code></a>, which is only <code>Send</code> if <code>T</code> is <code>Send</code>.</li>\n<li><code>T</code> is a <a href=\"https://doc.rust-lang.org/std/sync/struct.Mutex.html\"><code>Mutex&lt;U&gt;</code></a>, which is only <code>Send</code> if <code>U</code> is <code>Send</code>.</li>\n<li><code>U</code> is <code>M</code>.  Thus, <code>M</code> must be <code>Send</code>.</li>\n</ul>\n\n<p>In addition, note that <code>thread::spawn</code> also requires that the callable be <code>'static</code>, so you need that too.  It needs <em>that</em> because if it didn't require that, it'd have no guarantee that the value will continue to exist for the entire lifetime of the thread (which may or may not outlive the thread that spawned it).</p>\n\n<blockquote>\n  <p>..., and what the appropriate way to accomplish this is.</p>\n</blockquote>\n\n<p>Same way as any other constraints: <code>M: 'static + Send + Memory</code>.</p>\n"}], "owner": {"reputation": 13635, "user_id": 547365, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ddefbca930fdd39846b698bab7ac3146?s=128&d=identicon&r=PG", "display_name": "w.brian", "link": "https://stackoverflow.com/users/547365/w-brian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2145, "favorite_count": 0, "accepted_answer_id": 40036218, "answer_count": 1, "score": 3, "last_activity_date": 1476447819, "creation_date": 1476423879, "last_edit_date": 1476447819, "question_id": 40035731, "link": "https://stackoverflow.com/questions/40035731/how-do-i-share-a-generic-struct-between-threads-using-arcmutexmystructt", "title": "How do I share a generic struct between threads using Arc&lt;Mutex&lt;MyStruct&lt;T&gt;&gt;&gt;?", "body": "<p>I have some mutable state I need to share between threads.  I followed the <a href=\"https://doc.rust-lang.org/book/concurrency.html\" rel=\"nofollow\">concurrency section</a> of the Rust book, which shares a vector between threads and mutates it.</p>\n\n<p>Instead of a vector, I need to share a generic struct that is ultimately monomorphized.  Here is a distilled example of what I'm trying:</p>\n\n<pre><code>use std::sync::{Arc, Mutex};\nuse std::thread;\nuse std::time::Duration;\nuse std::marker::PhantomData;\n\ntrait Memory {}\n\nstruct SimpleMemory;\n\nimpl Memory for SimpleMemory {}\n\nstruct SharedData&lt;M: Memory&gt; {\n    value: usize,\n    phantom: PhantomData&lt;M&gt;,\n}\n\nimpl&lt;M: Memory&gt; SharedData&lt;M&gt; {\n    fn new() -&gt; Self {\n        SharedData {\n            value: 0,\n            phantom: PhantomData,\n        }\n    }\n}\n\nfn main() {\n    share(SimpleMemory);\n}\n\nfn share&lt;M: Memory&gt;(memory: M) {\n    let data = Arc::new(Mutex::new(SharedData::&lt;M&gt;::new()));\n\n    for i in 0..3 {\n        let data = data.clone();\n        thread::spawn(move || {\n            let mut data = data.lock().unwrap();\n            data.value += i;\n        });\n    }\n\n    thread::sleep(Duration::from_millis(50));\n}\n</code></pre>\n\n<p>The compiler complains with the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `M: std::marker::Send` is not satisfied\n  --&gt; src/main.rs:37:9\n   |\n37 |         thread::spawn(move || {\n   |         ^^^^^^^^^^^^^\n   |\n   = help: consider adding a `where M: std::marker::Send` bound\n   = note: required because it appears within the type `std::marker::PhantomData&lt;M&gt;`\n   = note: required because it appears within the type `SharedData&lt;M&gt;`\n   = note: required because of the requirements on the impl of `std::marker::Send` for `std::sync::Mutex&lt;SharedData&lt;M&gt;&gt;`\n   = note: required because of the requirements on the impl of `std::marker::Send` for `std::sync::Arc&lt;std::sync::Mutex&lt;SharedData&lt;M&gt;&gt;&gt;`\n   = note: required because it appears within the type `[closure@src/main.rs:37:23: 40:10 data:std::sync::Arc&lt;std::sync::Mutex&lt;SharedData&lt;M&gt;&gt;&gt;, i:usize]`\n   = note: required by `std::thread::spawn`\n</code></pre>\n\n<p>I'm trying to understand why <code>M</code> would need to implement <code>Send</code>, and what the appropriate way to accomplish this is.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1476412563, "post_id": 40033535, "comment_id": 67344971, "body": "<a href=\"https://doc.rust-lang.org/stable/book/testing.html#the-tests-module\" rel=\"nofollow noreferrer\">doc.rust-lang.org/stable/book/testing.html#the-tests-module</a>"}], "answers": [{"comments": [{"owner": {"reputation": 1084, "user_id": 4302668, "user_type": "registered", "accept_rate": 44, "profile_image": "https://i.stack.imgur.com/EmGum.png?s=128&g=1", "display_name": "Michael Hewson", "link": "https://stackoverflow.com/users/4302668/michael-hewson"}, "edited": false, "score": 0, "creation_date": 1476409384, "post_id": 40033602, "comment_id": 67344320, "body": "Thanks! I put <code>use super::*</code> since I&#39;m not worried about namespace clouding in my own crate."}], "tags": [], "owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "is_accepted": true, "score": 12, "last_activity_date": 1560392290, "last_edit_date": 1560392290, "creation_date": 1476409035, "answer_id": 40033602, "question_id": 40033535, "link": "https://stackoverflow.com/questions/40033535/how-to-call-functions-that-arent-inside-a-module-from-the-test-module/40033602#40033602", "title": "How to call functions that aren&#39;t inside a module from the test module?", "body": "<p>You could use <code>super::</code> to refer to the parent module:</p>\n\n<pre><code>fn it_works() {\n    super::foo();\n}\n</code></pre>\n\n<p>In Rust 2015, you can use <code>::</code> to refer to the root module of the crate:</p>\n\n<pre><code>fn it_works() {\n    ::foo();\n}\n</code></pre>\n\n<p>In Rust 2018, you can use <code>crate::</code> to refer to the root module of the crate:</p>\n\n<pre><code>fn it_works() {\n    crate::foo();\n}\n</code></pre>\n\n<p>Or, as <code>foo</code> may be used repeatedly, you could <code>use</code> it in the module:</p>\n\n<pre><code>mod tests {\n    use foo;         // &lt;-- import the `foo` from the root module\n    // or\n    use super::foo;  // &lt;-- import the `foo` from the parent module\n\n    fn it_works() {\n        foo();\n    }\n}\n</code></pre>\n\n<p>For test modules, it's also common to import everything from the parent module:</p>\n\n<pre><code>mod tests {\n    use super::*;  // &lt;-- import everything from the parent module\n\n    fn it_works() {\n        foo();\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 1084, "user_id": 4302668, "user_type": "registered", "accept_rate": 44, "profile_image": "https://i.stack.imgur.com/EmGum.png?s=128&g=1", "display_name": "Michael Hewson", "link": "https://stackoverflow.com/users/4302668/michael-hewson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2793, "favorite_count": 1, "accepted_answer_id": 40033602, "answer_count": 1, "score": 6, "last_activity_date": 1560392290, "creation_date": 1476408559, "last_edit_date": 1560392130, "question_id": 40033535, "link": "https://stackoverflow.com/questions/40033535/how-to-call-functions-that-arent-inside-a-module-from-the-test-module", "title": "How to call functions that aren&#39;t inside a module from the test module?", "body": "<p>These are the contents of my <code>src/lib.rs</code> file:</p>\n\n<pre><code>pub fn foo() {}\n\n#[cfg(test)]\nmod tests {\n    #[test]\n    fn it_works() {\n        foo();\n    }\n}\n</code></pre>\n\n<p>When I run <code>cargo test</code>, I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0425]: cannot find function `foo` in this scope\n --&gt; src/lib.rs:7:9\n  |\n7 |         foo();\n  |         ^^^ not found in this scope\n</code></pre>\n\n<p>How do I call <code>foo</code> from inside the <code>test</code> module?</p>\n"}, {"tags": ["reference", "rust", "traits"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1476403737, "post_id": 40032934, "comment_id": 67342936, "body": "I&#39;m not exactly sure, what you want to achieve. <code>&amp;V</code> does not have a method <code>into_iter</code>, because it doesn&#39;t implement <code>IntoIterator</code>. <code>V</code> has said method because it implements said trait. Also: there is an important difference between <code>&amp;IntoIterator&lt;...&gt;</code> and <code>&amp;V where V: IntoIterator&lt;...&gt;</code>. So for the case that I&#39;m not the only confused reader: could you clarify the question a bit? :)"}, {"owner": {"reputation": 133677, "user_id": 44389, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/eed60bdfc964ec62cc48aa6020a03d7b?s=128&d=identicon&r=PG", "display_name": "Noldorin", "link": "https://stackoverflow.com/users/44389/noldorin"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1476403828, "post_id": 40032934, "comment_id": 67342965, "body": "@LukasKalbertodt: My bad. I was being stupid with the trait bounds! I will delete the question, thanks for pointing it out."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1476403887, "post_id": 40032934, "comment_id": 67342987, "body": "Or put another way: what difference in behavior do you expect when calling on <code>value</code> instead of <code>*value</code>?"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1476403911, "post_id": 40032934, "comment_id": 67342993, "body": "Ok sure, glad I could help (although you could keep the question to share the knowledge?)"}, {"owner": {"reputation": 133677, "user_id": 44389, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/eed60bdfc964ec62cc48aa6020a03d7b?s=128&d=identicon&r=PG", "display_name": "Noldorin", "link": "https://stackoverflow.com/users/44389/noldorin"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1476404192, "post_id": 40032934, "comment_id": 67343056, "body": "@LukasKalbertodt: Sure, the solution was changing the bound to <code>&amp;V: IntoIterator...</code>, which was kind of obvious I guess. ;) Except it&#39;s late, and I wasn&#39;t thinking. Then I just needed to add some explicit type parameters. But if you still think it&#39;s helpful to post the code, I can do it."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1476404411, "post_id": 40032934, "comment_id": 67343108, "body": "If you have the time, why not edit the question and self answer? ;-) The [rust] tag is still small-ish; any knowledge would help. At least I don&#39;t think this question was asked before..."}, {"owner": {"reputation": 133677, "user_id": 44389, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/eed60bdfc964ec62cc48aa6020a03d7b?s=128&d=identicon&r=PG", "display_name": "Noldorin", "link": "https://stackoverflow.com/users/44389/noldorin"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1476404528, "post_id": 40032934, "comment_id": 67343143, "body": "Okay, that&#39;s done!"}], "answers": [{"tags": [], "owner": {"reputation": 133677, "user_id": 44389, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/eed60bdfc964ec62cc48aa6020a03d7b?s=128&d=identicon&r=PG", "display_name": "Noldorin", "link": "https://stackoverflow.com/users/44389/noldorin"}, "is_accepted": false, "score": 5, "last_activity_date": 1476568715, "last_edit_date": 1476568715, "creation_date": 1476404423, "answer_id": 40033057, "question_id": 40032934, "link": "https://stackoverflow.com/questions/40032934/how-do-i-call-a-trait-method-on-a-reference-and-not-the-referenced-value/40033057#40033057", "title": "How do I call a trait method on a reference and not the referenced value?", "body": "<p>I ended up solving this issue just after posting it, thanks to @LukasKalbertodt's helpful comments. It turns out I simply wanted the type bound to be <code>&amp;V: IntoIterator&lt;Item = &amp;T&gt;</code>, to match the intended usage in the function body (duh!).</p>\n\n<p>So the code becomes:</p>\n\n<pre><code>fn csl_join&lt;'a, 'b, V, T&gt;(value: &amp;'a V) -&gt; String\n    where V: 'a,\n          &amp;'a V: IntoIterator&lt;Item = &amp;'b T&gt;,\n          T: ToString + 'b\n{\n    itertools::join(value.into_iter().map(|v: &amp;T| v.to_string()), \",\")\n}\n</code></pre>\n\n<p>I'll leave this here in case it assists someone else, by chance.</p>\n"}], "owner": {"reputation": 133677, "user_id": 44389, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/eed60bdfc964ec62cc48aa6020a03d7b?s=128&d=identicon&r=PG", "display_name": "Noldorin", "link": "https://stackoverflow.com/users/44389/noldorin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 81, "favorite_count": 1, "answer_count": 1, "score": 2, "last_activity_date": 1476568715, "creation_date": 1476403470, "last_edit_date": 1476407140, "question_id": 40032934, "link": "https://stackoverflow.com/questions/40032934/how-do-i-call-a-trait-method-on-a-reference-and-not-the-referenced-value", "title": "How do I call a trait method on a reference and not the referenced value?", "body": "<p>I have a reference (<code>foo</code>) that implements the trait <code>IntoIterator&lt;Item = &amp;T&gt;</code>. I want to call the trait method <code>into_iter</code> directly on <code>foo</code> (i.e. the reference itself) and not <code>*foo</code> (the referenced value), as seems to be happening, since the type of <code>*foo</code> also implements <code>IntoIterator</code> (albeit with <code>Item = T</code>). I've tried UFCS, but even that doesn't seem to do the trick.</p>\n\n<p>Here's my actual code:</p>\n\n<pre><code>fn csl_join&lt;'a, V, T&gt;(value: &amp;V) -&gt; String \n    where V: IntoIterator&lt;Item = &amp;'a T&gt;, \n          T: 'a + ToString \n{\n    itertools::join(value.into_iter().map(|v: &amp;T| v.to_string()), \",\")\n}\n</code></pre>\n"}, {"tags": ["floating-point", "rust", "decode", "encode"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1476392406, "post_id": 40030551, "comment_id": 67338976, "body": "<code>integer_decode()</code> does not lose precision -- it&#39;s merely a deconstruction of the floating-point number into its components."}, {"owner": {"reputation": 11531, "user_id": 2558778, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/8673885f9ba1bd1424015567ef6833f5?s=128&d=identicon&r=PG&f=1", "display_name": "Jeroen", "link": "https://stackoverflow.com/users/2558778/jeroen"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1476394164, "post_id": 40030551, "comment_id": 67339914, "body": "@trentcl I&#39;m aware, but it appears encoding as in the documentation of the aforementioned function does."}], "answers": [{"comments": [{"owner": {"reputation": 35314, "user_id": 344347, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/1d83837bce9d9a2656c4f5704d40c430?s=128&d=identicon&r=PG", "display_name": "Pavel Strakhov", "link": "https://stackoverflow.com/users/344347/pavel-strakhov"}, "edited": false, "score": 4, "creation_date": 1476399796, "post_id": 40030648, "comment_id": 67341916, "body": "Why not just transmute <code>f64</code> to <code>[u8; 8]</code> and store it without unnecessary conversions?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 35314, "user_id": 344347, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/1d83837bce9d9a2656c4f5704d40c430?s=128&d=identicon&r=PG", "display_name": "Pavel Strakhov", "link": "https://stackoverflow.com/users/344347/pavel-strakhov"}, "edited": false, "score": 0, "creation_date": 1476401000, "post_id": 40030648, "comment_id": 67342215, "body": "@PavelStrakhov sounds like a prime candidate for an answer!"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1476426961, "post_id": 40030648, "comment_id": 67349307, "body": "Oh! I was hoping for <code>f32</code> and <code>f64</code> to be directly encodable as hexadecimal (which is the easiest way to get a portable representation) but apparently they do not implement <code>LowerHex</code> or <code>UpperHex</code>. Disappointment :("}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1476448168, "post_id": 40030648, "comment_id": 67362041, "body": "@MatthieuM. yeah, and there&#39;s no hex floating point literal either, so if you need to have a very specific float, you have to go through a <code>transmute</code> :-("}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 3, "creation_date": 1476448434, "post_id": 40030648, "comment_id": 67362243, "body": "@Shepmaster: I think it would be worth raising a RFC here; both for support of literals and formatting/parsing. The formatting/parsing is much simpler than decimal format; literal parsing might require some tricks however (to avoid ambiguities with integrals)."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 3, "last_activity_date": 1476391861, "last_edit_date": 1476391861, "creation_date": 1476391519, "answer_id": 40030648, "question_id": 40030551, "link": "https://stackoverflow.com/questions/40030551/how-to-decode-and-encode-a-float-in-rust/40030648#40030648", "title": "How to decode and encode a float in Rust?", "body": "<p>Interpret the floating point bits as an integer and print out the value as hex:</p>\n\n<pre><code>use std::mem;\n\nfn main() {\n    let a_third: f64 = 1.0 / 3.0;\n\n    let as_int: u64 = unsafe { mem::transmute(a_third) };\n    println!(\"{}\", as_int);\n\n    let as_string = format!(\"{:016x}\", as_int);\n    println!(\"{}\", as_string);\n\n    let back_to_int = u64::from_str_radix(&amp;as_string, 16).expect(\"Not an integer\");\n    println!(\"{}\", back_to_int);\n\n    let back_to_float: f64 = unsafe { mem::transmute(back_to_int) };\n    println!(\"{}\", back_to_float);\n\n    assert_eq!(back_to_float, a_third);\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 11531, "user_id": 2558778, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/8673885f9ba1bd1424015567ef6833f5?s=128&d=identicon&r=PG&f=1", "display_name": "Jeroen", "link": "https://stackoverflow.com/users/2558778/jeroen"}, "edited": false, "score": 0, "creation_date": 1476394313, "post_id": 40031324, "comment_id": 67339990, "body": "Going from the docs that come with the function, it can lose precision during encoding."}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "reply_to_user": {"reputation": 11531, "user_id": 2558778, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/8673885f9ba1bd1424015567ef6833f5?s=128&d=identicon&r=PG&f=1", "display_name": "Jeroen", "link": "https://stackoverflow.com/users/2558778/jeroen"}, "edited": false, "score": 0, "creation_date": 1476444219, "post_id": 40031324, "comment_id": 67359476, "body": "@JeroenBollen can you link these docs? I can&#39;t find this information in <code>std</code>. I implemented <code>fn integer_encode((mantissa, exponent, sign): (u64, i16, i8)) -&gt; f64 { (sign as f64) * (mantissa as f64) * (2f64.powf(exponent as f64)) }</code> and it works for any <code>X</code> I feed into <code>integer_encode(integer_decode(X))</code> except for <code>NaN</code> (maybe there is something wrong with my <code>integer_encode</code>, though)."}, {"owner": {"reputation": 11531, "user_id": 2558778, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/8673885f9ba1bd1424015567ef6833f5?s=128&d=identicon&r=PG&f=1", "display_name": "Jeroen", "link": "https://stackoverflow.com/users/2558778/jeroen"}, "edited": false, "score": 0, "creation_date": 1476445349, "post_id": 40031324, "comment_id": 67360188, "body": "I did link to it in the OP."}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "reply_to_user": {"reputation": 11531, "user_id": 2558778, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/8673885f9ba1bd1424015567ef6833f5?s=128&d=identicon&r=PG&f=1", "display_name": "Jeroen", "link": "https://stackoverflow.com/users/2558778/jeroen"}, "edited": false, "score": 0, "creation_date": 1476445464, "post_id": 40031324, "comment_id": 67360243, "body": "@JeroenBollen that link doesn&#39;t provide any information about loss of precision."}, {"owner": {"reputation": 11531, "user_id": 2558778, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/8673885f9ba1bd1424015567ef6833f5?s=128&d=identicon&r=PG&f=1", "display_name": "Jeroen", "link": "https://stackoverflow.com/users/2558778/jeroen"}, "edited": false, "score": 0, "creation_date": 1476445551, "post_id": 40031324, "comment_id": 67360305, "body": "The example provided only checks if the decoding is close to the original, not if it&#39;s exact. Decoding is done using multiplication which includes loss of precision."}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "reply_to_user": {"reputation": 11531, "user_id": 2558778, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/8673885f9ba1bd1424015567ef6833f5?s=128&d=identicon&r=PG&f=1", "display_name": "Jeroen", "link": "https://stackoverflow.com/users/2558778/jeroen"}, "edited": false, "score": 1, "creation_date": 1476445846, "post_id": 40031324, "comment_id": 67360492, "body": "@JeroenBollen maybe that&#39;s only a case with <code>f32</code>? I can&#39;t reproduce any difference for <code>f64</code>, at least not enough to break <code>assert_eq!(2.0, integer_encode(integer_decode(2.0)));</code> like in the example in the docs you linked."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1476454969, "post_id": 40031324, "comment_id": 67367020, "body": "Could just be a poorly written example. Multiplication shouldn&#39;t lose precision if the result is exactly representable"}], "tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": false, "score": 1, "last_activity_date": 1476395739, "last_edit_date": 1476395739, "creation_date": 1476394190, "answer_id": 40031324, "question_id": 40030551, "link": "https://stackoverflow.com/questions/40030551/how-to-decode-and-encode-a-float-in-rust/40031324#40031324", "title": "How to decode and encode a float in Rust?", "body": "<p>What's wrong with <code>integer_decode()</code>? It is lossless and works for finite numbers as well as NaN and infinities:</p>\n\n<pre><code>use std::mem;\n\nfn integer_decode(val: f64) -&gt; (u64, i16, i8) {\n    let bits: u64 = unsafe { mem::transmute(val) };\n    let sign: i8 = if bits &gt;&gt; 63 == 0 { 1 } else { -1 };\n    let mut exponent: i16 = ((bits &gt;&gt; 52) &amp; 0x7ff) as i16;\n    let mantissa = if exponent == 0 {\n        (bits &amp; 0xfffffffffffff) &lt;&lt; 1\n    } else {\n        (bits &amp; 0xfffffffffffff) | 0x10000000000000\n    };\n\n    exponent -= 1023 + 52;\n    (mantissa, exponent, sign)\n}\n\nfn main() {\n    println!(\"{:?}\", integer_decode(std::f64::NAN));\n    println!(\"{:?}\", integer_decode(std::f64::INFINITY));\n    println!(\"{:?}\", integer_decode(std::f64::NEG_INFINITY));\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 35314, "user_id": 344347, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/1d83837bce9d9a2656c4f5704d40c430?s=128&d=identicon&r=PG", "display_name": "Pavel Strakhov", "link": "https://stackoverflow.com/users/344347/pavel-strakhov"}, "is_accepted": false, "score": 2, "last_activity_date": 1476446780, "creation_date": 1476446780, "answer_id": 40042789, "question_id": 40030551, "link": "https://stackoverflow.com/questions/40030551/how-to-decode-and-encode-a-float-in-rust/40042789#40042789", "title": "How to decode and encode a float in Rust?", "body": "<p>If you don't intend to transfer serialized data between machines or you're certain that float representation is the same on all platforms you target, you can store byte representation of the number:</p>\n\n<pre><code>use std::io::{Read, Write};\n\nfn main() {\n  {\n    let num: f64 = 1.0 / 3.0;\n    let bytes: [u8; 8] = unsafe { std::mem::transmute(num) };\n    let mut file = std::fs::File::create(\"/tmp/1\").unwrap();\n    file.write_all(&amp;bytes).unwrap();\n  }\n  {\n    let mut file = std::fs::File::open(\"/tmp/1\").unwrap();\n    let mut bytes: [u8; 8] = unsafe { std::mem::uninitialized() };\n    file.read_exact(&amp;mut bytes).unwrap();\n    let num: f64 = unsafe { std::mem::transmute(bytes) };\n    println!(\"result: {}\", num);\n  }\n}\n</code></pre>\n\n<p>You can also use existing serialization framework, like <a href=\"https://github.com/serde-rs/serde\" rel=\"nofollow\">serde</a>. If you don't want the entire framework and just want to serialize floats, you can use <a href=\"https://github.com/dtolnay/dtoa\" rel=\"nofollow\">dtoa</a> (it's used by serde_json), although I'm not sure if it provides strong precision guarantees.</p>\n"}, {"tags": [], "owner": {"reputation": 20875, "user_id": 510, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ab3d9363f071b568105b02e835958c3d?s=128&d=identicon&r=PG", "display_name": "Evan Shaw", "link": "https://stackoverflow.com/users/510/evan-shaw"}, "is_accepted": false, "score": 4, "last_activity_date": 1577524917, "creation_date": 1577524917, "answer_id": 59509589, "question_id": 40030551, "link": "https://stackoverflow.com/questions/40030551/how-to-decode-and-encode-a-float-in-rust/59509589#59509589", "title": "How to decode and encode a float in Rust?", "body": "<p>Newer versions of Rust provide safer options than some of the other answers suggest:</p>\n\n<ul>\n<li>From Rust 1.20, you can use <a href=\"https://doc.rust-lang.org/std/primitive.f64.html#method.to_bits\" rel=\"nofollow noreferrer\">to_bits</a> and <a href=\"https://doc.rust-lang.org/std/primitive.f64.html#method.from_bits\" rel=\"nofollow noreferrer\">from_bits</a> to convert to and from the <code>u64</code> binary representation.</li>\n<li>From Rust 1.40, you can use <a href=\"https://doc.rust-lang.org/std/primitive.f64.html#method.to_be_bytes\" rel=\"nofollow noreferrer\">to_be_bytes</a> and <a href=\"https://doc.rust-lang.org/std/primitive.f64.html#method.from_be_bytes\" rel=\"nofollow noreferrer\">from_be_bytes</a> to deal with <code>[u8; 8]</code>. (There are also methods for little-endian byte order and native byte order.)</li>\n</ul>\n"}], "owner": {"reputation": 11531, "user_id": 2558778, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/8673885f9ba1bd1424015567ef6833f5?s=128&d=identicon&r=PG&f=1", "display_name": "Jeroen", "link": "https://stackoverflow.com/users/2558778/jeroen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2211, "favorite_count": 0, "answer_count": 4, "score": 3, "last_activity_date": 1577524917, "creation_date": 1476391170, "last_edit_date": 1476392517, "question_id": 40030551, "link": "https://stackoverflow.com/questions/40030551/how-to-decode-and-encode-a-float-in-rust", "title": "How to decode and encode a float in Rust?", "body": "<p>I want to decode, store and encode a float in Rust. I know about <a href=\"https://docs.rs/num/0.1.36/num/trait.Float.html#tymethod.integer_decode\" rel=\"nofollow\"><code>num::Float::integer_decode()</code></a> but I'd rather not lose <em>any</em> precision. That is, unless the format I encode into is smaller than the format I encode from of course.</p>\n"}, {"tags": ["rust", "glium"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1476381433, "post_id": 40027741, "comment_id": 67332924, "body": "Duplicate of <a href=\"http://stackoverflow.com/q/25413201/155423\">How do I implement a trait I don&#39;t own for a type I don&#39;t own</a>?"}, {"owner": {"reputation": 1670, "user_id": 754534, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/567f7e1a18f931b5a6e3d88a20c27c67?s=128&d=identicon&r=PG&f=1", "display_name": "JPNotADragon", "link": "https://stackoverflow.com/users/754534/jpnotadragon"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1476381550, "post_id": 40027741, "comment_id": 67332990, "body": "@shepmaster: it&#39;s not really a duplicate, because I don&#39;t really want to implement that trait unless there&#39;s no better way. The link is informative though - thanks."}], "answers": [{"comments": [{"owner": {"reputation": 1670, "user_id": 754534, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/567f7e1a18f931b5a6e3d88a20c27c67?s=128&d=identicon&r=PG&f=1", "display_name": "JPNotADragon", "link": "https://stackoverflow.com/users/754534/jpnotadragon"}, "edited": false, "score": 0, "creation_date": 1476384615, "post_id": 40028032, "comment_id": 67334602, "body": "Thanks Lukas, that did the trick! I&#39;m so new to Rust (started on Monday 3 days ago) that it didn&#39;t occur to me that there was nothing stopping me from defining and implementing my <i>own</i> trait. (Even so, I couldn&#39;t have come up with this on my own, too much left to learn still.) Out of curiosity, why did you stop doing stuff with cgmath and glium?"}, {"owner": {"reputation": 1670, "user_id": 754534, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/567f7e1a18f931b5a6e3d88a20c27c67?s=128&d=identicon&r=PG&f=1", "display_name": "JPNotADragon", "link": "https://stackoverflow.com/users/754534/jpnotadragon"}, "edited": false, "score": 0, "creation_date": 1476385000, "post_id": 40028032, "comment_id": 67334826, "body": "sorry @LukasKalbertodt forgot to correctly include your name in the above comment."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 1670, "user_id": 754534, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/567f7e1a18f931b5a6e3d88a20c27c67?s=128&d=identicon&r=PG&f=1", "display_name": "JPNotADragon", "link": "https://stackoverflow.com/users/754534/jpnotadragon"}, "edited": false, "score": 0, "creation_date": 1476385541, "post_id": 40028032, "comment_id": 67335125, "body": "@JPNotADragon The name is not a problem, when you are commenting on my answer, since I get notified anyway ;-) Glad I could help. I did not stop working with <code>cgmath</code> or <code>glium</code>; sorry if my answer seem to imply it. I really like <code>cgmath</code> and think its design is terrific. While generally being pretty nice to use, <code>glium</code> has some design flaws, which tomaka itself acknowledges. A rewrite <a href=\"https://github.com/tomaka/glium2\" rel=\"nofollow noreferrer\">is being considered</a>. But <code>glium</code> is still OK, so don&#39;t stop using it ;-)"}, {"owner": {"reputation": 1670, "user_id": 754534, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/567f7e1a18f931b5a6e3d88a20c27c67?s=128&d=identicon&r=PG&f=1", "display_name": "JPNotADragon", "link": "https://stackoverflow.com/users/754534/jpnotadragon"}, "edited": false, "score": 0, "creation_date": 1476385796, "post_id": 40028032, "comment_id": 67335259, "body": "Thanks! That&#39;s the answer I was hoping for :-)"}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 7, "last_activity_date": 1476382667, "last_edit_date": 1476382667, "creation_date": 1476382063, "answer_id": 40028032, "question_id": 40027741, "link": "https://stackoverflow.com/questions/40027741/how-can-i-use-a-cgmathmatrix-as-a-uniform-parameter-in-glium/40028032#40028032", "title": "How can I use a cgmath::Matrix as a uniform parameter in glium?", "body": "<blockquote>\n  <p>I do believe I cannot implement this trait myself, as both it and the <code>Matrix4</code> type are in a crate separate from mine.</p>\n</blockquote>\n\n<p>This is very true.</p>\n\n<blockquote>\n  <p>Is there really no better option than to manually convert the matrix into an array of arrays of floats?</p>\n</blockquote>\n\n<p>Well, you don't have to do a lot manually.</p>\n\n<p>First, it's useful to note that <code>Matrix4&lt;S&gt;</code> <a href=\"http://brendanzab.github.io/cgmath/cgmath/struct.Matrix4.html\" rel=\"noreferrer\">implements <code>Into&lt;[[S; 4]; 4]&gt;</code></a> (I can't link to that impl directly, so you have to use <kbd>ctrl</kbd>+<kbd>f</kbd>). That means that you can easily convert a <code>Matrix4</code> into an array which is accepted by glium. Unfortunately, <code>into()</code> only works when the compiler knows exactly what type to convert to. So here is a non-working and a working version:</p>\n\n<pre><code>// Not working, the macro accepts many types, so the compiler can't be sure \nlet uniforms = uniform! {\n    matrix: cgmath::Matrix4::from_scale(0.1).into()\n};\n\n// Works, because we excplicitly mention the type\nlet matrix: [[f64; 4]; 4] = cgmath::Matrix::from_scale(0.1).into();\nlet uniforms = uniform! {\n    matrix: matrix,  \n};\n</code></pre>\n\n<hr>\n\n<p>But this solution might be still too much to write. When I worked with <code>cgmath</code> and <code>glium</code>, I created a helper trait to reduce code size even more. This might not be the best solution, but it works and has no obvious downsides (AFAIK).</p>\n\n<pre><code>pub trait ToArr {\n    type Output;\n    fn to_arr(&amp;self) -&gt; Self::Output;\n}\n\nimpl&lt;T: BaseNum&gt; ToArr for Matrix4&lt;T&gt; {\n    type Output = [[T; 4]; 4];\n    fn to_arr(&amp;self) -&gt; Self::Output {\n        (*self).into()\n    }\n}\n</code></pre>\n\n<p>I hope this code explains itself. With this trait, you now only have to <code>use</code> the trait near the <code>draw()</code> call and then:</p>\n\n<pre><code>let uniforms = uniform! {\n    matrix: cgmath::Matrix4::from_scale(0.1).to_arr(),\n    //                                      ^^^^^^^^^\n};\n</code></pre>\n"}], "owner": {"reputation": 1670, "user_id": 754534, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/567f7e1a18f931b5a6e3d88a20c27c67?s=128&d=identicon&r=PG&f=1", "display_name": "JPNotADragon", "link": "https://stackoverflow.com/users/754534/jpnotadragon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1112, "favorite_count": 1, "accepted_answer_id": 40028032, "answer_count": 1, "score": 5, "last_activity_date": 1476382667, "creation_date": 1476380983, "last_edit_date": 1476381396, "question_id": 40027741, "link": "https://stackoverflow.com/questions/40027741/how-can-i-use-a-cgmathmatrix-as-a-uniform-parameter-in-glium", "title": "How can I use a cgmath::Matrix as a uniform parameter in glium?", "body": "<p>I'm trying to integrate the <code>cgmath</code> library into my first experiments with <code>glium</code>, but I can't figure out how to pass my <code>Matrix4</code> object to the <code>draw()</code> call.</p>\n\n<p>My <code>uniforms</code> object is defined thus:</p>\n\n<pre><code>let uniforms = uniform! {\n    matrix: cgmath::Matrix4::from_scale(0.1)\n};\n</code></pre>\n\n<p>and this is my <code>draw</code> call:</p>\n\n<pre><code>target.draw(&amp;vertex_buffer, &amp;index_slice, &amp;program, &amp;uniforms, &amp;Default::default())\n      .unwrap();\n</code></pre>\n\n<p>which fails to compile with the message</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `cgmath::Matrix4&lt;{float}&gt;: glium::uniforms::AsUniformValue` is not satisfied\n</code></pre>\n\n<p>I'm a total beginner with Rust, but I do believe I cannot implement this trait myself, as both it and the <code>Matrix4</code> type are in a crate separate from mine.</p>\n\n<p>Is there really no better option than to manually convert the matrix into an array of arrays of floats?</p>\n"}, {"tags": ["multithreading", "rust", "signals"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1476380116, "post_id": 40027334, "comment_id": 67332245, "body": "Welcome to Stack Overflow! Do you already understand why stopping an arbitrary thread is a <a href=\"http://docs.oracle.com/javase/1.5.0/docs/guide/misc/threadPrimitiveDeprecation.html\" rel=\"nofollow noreferrer\">Very Bad Idea</a> (not a language-specific issue)? Beyond that, you need to provide a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. Right now, the code presented seems more like a wishlist and an implicit request for the community to write the implementation for you. The surface-visible issue <b>appears</b> to be that <code>WorkerPool</code> doesn&#39;t implement <code>Copy</code>, so moving it <a href=\"https://doc.rust-lang.org/stable/book/ownership.html\" rel=\"nofollow noreferrer\">transfers ownership</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1476380214, "post_id": 40027334, "comment_id": 67332297, "body": "You should also include the <i>error messages</i> you receive and show what <a href=\"http://meta.stackoverflow.com/q/261592/155423\">research and attempts at fixing it you&#39;ve already performed</a>."}, {"owner": {"reputation": 23, "user_id": 5091296, "user_type": "registered", "profile_image": "https://graph.facebook.com/10203703639786419/picture?type=large", "display_name": "Paul Howard Johnson", "link": "https://stackoverflow.com/users/5091296/paul-howard-johnson"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1476385688, "post_id": 40027334, "comment_id": 67335197, "body": "Thanks for the quick response.  I&#39;ve included the full code of the WorkerPool struct as well as the errors I&#39;m receiving on compile.  I don&#39;t want to stop the threads; I want to collect them with join.  I agree stopping them would not be a good idea."}, {"owner": {"reputation": 23, "user_id": 5091296, "user_type": "registered", "profile_image": "https://graph.facebook.com/10203703639786419/picture?type=large", "display_name": "Paul Howard Johnson", "link": "https://stackoverflow.com/users/5091296/paul-howard-johnson"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1476425274, "post_id": 40027334, "comment_id": 67348495, "body": "I was able to remove the first error using guidance from <a href=\"http://stackoverflow.com/questions/28158738/cannot-move-out-of-borrowed-content\">here</a>.  Thanks for that tip.  I wish I didn&#39;t have to make it unsafe, though."}, {"owner": {"reputation": 23, "user_id": 5091296, "user_type": "registered", "profile_image": "https://graph.facebook.com/10203703639786419/picture?type=large", "display_name": "Paul Howard Johnson", "link": "https://stackoverflow.com/users/5091296/paul-howard-johnson"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1476449850, "post_id": 40027334, "comment_id": 67363226, "body": "Also, the join isn&#39;t working even though it compiles.  It looks like I&#39;m getting a memory address for the pthread_t, but the join never completes."}, {"owner": {"reputation": 23, "user_id": 5091296, "user_type": "registered", "profile_image": "https://graph.facebook.com/10203703639786419/picture?type=large", "display_name": "Paul Howard Johnson", "link": "https://stackoverflow.com/users/5091296/paul-howard-johnson"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1476453370, "post_id": 40027334, "comment_id": 67365880, "body": "Got the join working by changing the way I initialized the state_ptr.  Now I just have that last problem with early termination.  The joins work correctly now and terminate waits till they complete, but I still can&#39;t get it to work on interrupt; the program just exits since I need to comment out the call to wait on the threads."}], "answers": [{"comments": [{"owner": {"reputation": 23, "user_id": 5091296, "user_type": "registered", "profile_image": "https://graph.facebook.com/10203703639786419/picture?type=large", "display_name": "Paul Howard Johnson", "link": "https://stackoverflow.com/users/5091296/paul-howard-johnson"}, "edited": false, "score": 0, "creation_date": 1476457145, "post_id": 40045062, "comment_id": 67368374, "body": "I really appreciate the detailed answer and edits.  When you say the program logic is &quot;poor&quot;, do you mean the solution above doesn&#39;t solve the program in the best way, or was that part of your footnote joke?  What would you do differently?"}, {"owner": {"reputation": 23, "user_id": 5091296, "user_type": "registered", "profile_image": "https://graph.facebook.com/10203703639786419/picture?type=large", "display_name": "Paul Howard Johnson", "link": "https://stackoverflow.com/users/5091296/paul-howard-johnson"}, "edited": false, "score": 0, "creation_date": 1476457291, "post_id": 40045062, "comment_id": 67368486, "body": "In regards to your first comment about interrupting the threads, I do want to make sure they complete, and that is why I was using join.  I don&#39;t want to let the program terminate before all threads have completed.  Do you still see a conflict there?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 23, "user_id": 5091296, "user_type": "registered", "profile_image": "https://graph.facebook.com/10203703639786419/picture?type=large", "display_name": "Paul Howard Johnson", "link": "https://stackoverflow.com/users/5091296/paul-howard-johnson"}, "edited": false, "score": 0, "creation_date": 1476457932, "post_id": 40045062, "comment_id": 67368916, "body": "@PaulHowardJohnson by &quot;poor&quot;, I mean &quot;probably not the expected behavior&quot;. The code does all of that work to accept a signal and do something in response, but the program can <i>still exit while work is happening</i>. If it&#39;s OK to exit while work is in process, then I wouldn&#39;t do anything special to handle an interrupt and just let it kill the program; the default behavior."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 23, "user_id": 5091296, "user_type": "registered", "profile_image": "https://graph.facebook.com/10203703639786419/picture?type=large", "display_name": "Paul Howard Johnson", "link": "https://stackoverflow.com/users/5091296/paul-howard-johnson"}, "edited": false, "score": 0, "creation_date": 1476458229, "post_id": 40045062, "comment_id": 67369123, "body": "Also, the footnote isn&#39;t intended as a joke, <i>per se</i>. It&#39;s just another way of pointing out that there seem to be mismatched expectations present in the code. There&#39;s no way that there can be any threads running if we only exit the loop when all the threads have stopped running..."}, {"owner": {"reputation": 23, "user_id": 5091296, "user_type": "registered", "profile_image": "https://graph.facebook.com/10203703639786419/picture?type=large", "display_name": "Paul Howard Johnson", "link": "https://stackoverflow.com/users/5091296/paul-howard-johnson"}, "edited": false, "score": 0, "creation_date": 1476465316, "post_id": 40045062, "comment_id": 67373274, "body": "But that is the crux of the issue: the program can&#39;t stop running until all work is completed, because it could potentially corrupt the data that is being received from the calls to get the video objects.  If the database insert was happening at the time the program is terminated, then that would be a serious issue.  Your <code>please_stop</code> code is exactly what I was thinking about before I saw your response.  We just need to make sure that the loop exits in an orderly fashion, and then we are guaranteed that all the threads have been joined and we are good to go."}, {"owner": {"reputation": 23, "user_id": 5091296, "user_type": "registered", "profile_image": "https://graph.facebook.com/10203703639786419/picture?type=large", "display_name": "Paul Howard Johnson", "link": "https://stackoverflow.com/users/5091296/paul-howard-johnson"}, "edited": false, "score": 0, "creation_date": 1476469388, "post_id": 40045062, "comment_id": 67375422, "body": "And you are right about the C thing.  Rust actually prevented me from making the logic error we are talking about with the need for the please stop signal for the main thread, which is really cool. I was just frustrated :)."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1476458959, "last_edit_date": 1476458959, "creation_date": 1476453608, "answer_id": 40045062, "question_id": 40027334, "link": "https://stackoverflow.com/questions/40027334/running-interruptible-rust-program-that-spawns-threads/40045062#40045062", "title": "Running interruptible Rust program that spawns threads", "body": "<blockquote>\n  <p><code>terminate</code> can be called at any time to collect them.</p>\n  \n  <p>I don't want to stop the threads; I want to collect them with <code>join</code>. I agree stopping them would not be a good idea.</p>\n</blockquote>\n\n<p>These two statements don't make sense to me. You can only join a thread <em>when it's complete</em>. The word \"interruptible\" and \"at any time\" would mean that you could attempt to stop a thread <strong>while it is still doing some processing</strong>. Which behavior do you want?</p>\n\n<p>If you want to be able to stop a thread that has partially completed, you have to enhance your code to check if it should exit early. This is usually complicated by the fact that you are doing some big computation that you don't have control over. Ideally, you break that up into chunks and check your exit flag frequently. For example, with video work, you could check every frame. Then the response delay is roughly the time to process a frame.</p>\n\n<blockquote>\n  <p>this would be really easy to do in C. </p>\n</blockquote>\n\n<p>This would be really easy <em>to do incorrectly</em>. For example, the code currently presented attempts to perform mutation to the pool from two different threads without any kind of synchronization. That's a sure-fire recipe to make broken, hard-to-debug code.</p>\n\n<blockquote>\n  <p>// Use 9 threads for an example.</p>\n</blockquote>\n\n<p><code>0..10</code> creates 10 threads. </p>\n\n<hr>\n\n<p>Anyway, it seems like the missing piece of knowledge is <a href=\"https://doc.rust-lang.org/std/sync/struct.Arc.html\" rel=\"nofollow\"><code>Arc</code></a> and <a href=\"https://doc.rust-lang.org/std/sync/struct.Mutex.html\" rel=\"nofollow\"><code>Mutex</code></a>. <code>Arc</code> allows sharing ownership of a single item between threads, and <code>Mutex</code> allows for run-time mutable borrowing between threads.</p>\n\n<pre><code>#[macro_use]\nextern crate chan;\nextern crate chan_signal;\n\nuse chan_signal::Signal;\nuse std::thread::{self, JoinHandle};\nuse std::sync::{Arc, Mutex};\n\nfn main() {\n    let worker_pool = Arc::new(Mutex::new(WorkerPool::new()));\n\n    let signal = chan_signal::notify(&amp;[Signal::INT, Signal::TERM]);\n\n    let (work_done_tx, work_done_rx) = chan::sync(0);\n\n    let worker_pool_clone = worker_pool.clone();\n    thread::spawn(move || run(work_done_tx, worker_pool_clone));\n\n    // Wait for a signal or for work to be done.\n    chan_select! {\n        signal.recv() -&gt; signal =&gt; {\n            println!(\"received signal: {:?}\", signal);\n            let mut pool = worker_pool.lock().expect(\"Unable to lock the pool\");\n            pool.terminate();\n        },\n        work_done_rx.recv() =&gt; {\n            println!(\"Program completed normally.\");\n        }\n    }\n}\n\nfn run(_work_done_tx: chan::Sender&lt;()&gt;, worker_pool: Arc&lt;Mutex&lt;WorkerPool&gt;&gt;)  {\n    loop {\n        let mut worker_pool = worker_pool.lock().expect(\"Unable to lock the pool\");\n        worker_pool.ingest();\n        worker_pool.terminate();\n    }\n}\n\npub struct WorkerPool {\n    join_handles: Vec&lt;JoinHandle&lt;()&gt;&gt;,\n}\n\nimpl WorkerPool {\n    pub fn new() -&gt; Self {\n        WorkerPool {\n            join_handles: vec![],\n        }\n    }\n\n    pub fn ingest(&amp;mut self) {\n        self.join_handles.extend(\n            (0..10).map(|i| {\n                thread::spawn(move || {\n                    println!(\"Getting videos for thread {}\", i);\n                })\n            })\n        )\n    }\n\n    pub fn terminate(&amp;mut self) {\n        for handle in self.join_handles.drain(..) {\n            handle.join().expect(\"Unable to join thread\")\n        }\n    }\n}\n</code></pre>\n\n<p>Beware that the program logic itself is still poor; even though an interrupt is sent, the <code>loop</code> in <code>run</code> <strong>continues to execute</strong>. The main thread will lock the mutex, join all the current threads<sup>1</sup>, unlock the mutex and exit the program. However, the loop can lock the mutex before the main thread has exited and start processing some new data! And then the program exits right in the middle of processing. It's almost the same as if you didn't handle the interrupt at all.</p>\n\n<p><strong>1</strong>: Haha, tricked you! There <em>are no running threads at that point</em>. Since the mutex is locked for the entire <code>loop</code>, the only time another lock can be made is when the loop is resetting. However, since the last instruction in the loop is to join all the threads, there won't be anymore running.</p>\n\n<blockquote>\n  <p>I don't want to let the program terminate before all threads have completed. </p>\n</blockquote>\n\n<p>Perhaps it's an artifact of the reduced problem, but I don't see how the infinite loop can ever exit, so the \"I'm done\" channel seems superfluous.</p>\n\n<p>I'd probably just add a flag that says \"please stop\" when an interrupt is received. Then I'd check that instead of the infinite loop and wait for the running thread to finish before exiting the program.</p>\n\n<pre><code>use std::sync::atomic::{AtomicBool, Ordering};\n\nfn main() {\n    let worker_pool = WorkerPool::new();\n\n    let signal = chan_signal::notify(&amp;[Signal::INT, Signal::TERM]);\n    let please_stop = Arc::new(AtomicBool::new(false));\n\n    let threads_please_stop = please_stop.clone();\n    let runner = thread::spawn(|| run(threads_please_stop, worker_pool));\n\n    // Wait for a signal\n    chan_select! {\n        signal.recv() -&gt; signal =&gt; {\n            println!(\"received signal: {:?}\", signal);\n            please_stop.store(true, Ordering::SeqCst);\n        },\n    }\n\n    runner.join().expect(\"Unable to join runner thread\");\n}\n\nfn run(please_stop: Arc&lt;AtomicBool&gt;, mut worker_pool: WorkerPool)  {\n    while !please_stop.load(Ordering::SeqCst) {\n        worker_pool.ingest();\n        worker_pool.terminate();\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 23, "user_id": 5091296, "user_type": "registered", "profile_image": "https://graph.facebook.com/10203703639786419/picture?type=large", "display_name": "Paul Howard Johnson", "link": "https://stackoverflow.com/users/5091296/paul-howard-johnson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1350, "favorite_count": 0, "accepted_answer_id": 40045062, "answer_count": 1, "score": 2, "last_activity_date": 1476458959, "creation_date": 1476379522, "last_edit_date": 1476453256, "question_id": 40027334, "link": "https://stackoverflow.com/questions/40027334/running-interruptible-rust-program-that-spawns-threads", "title": "Running interruptible Rust program that spawns threads", "body": "<p>I am trying to write a program that spawns a bunch of threads and then joins the threads at the end.  I want it to be interruptible, because my plan is to make this a constantly running program in a UNIX service.</p>\n\n<p>The idea is that <code>worker_pool</code> will contain all the threads that have been spawned, so <code>terminate</code> can be called at any time to collect them.</p>\n\n<p>I can't seem to find a way to utilize the chan_select crate to do this, because this requires I spawn a thread first to spawn my child threads, and once I do this I can no longer use the <code>worker_pool</code> variable when joining the threads on interrupt, because it had to be moved out for the main loop.  If you comment out the line in the interrupt that terminates the workers, it compiles.</p>\n\n<p>I'm a little frustrated, because this would be really easy to do in C.  I could set up a static pointer, but when I try and do that in Rust I get an error because I am using a vector for my threads, and I can't initialize to an empty vector in a static.  I know it is safe to join the workers in the interrupt code, because execution stops here waiting for the signal.</p>\n\n<p>Perhaps there is a better way to do the signal handling, or maybe I'm missing something that I can do.</p>\n\n<p>The error and code follow:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>MacBook8088:video_ingest pjohnson$ cargo run\n   Compiling video_ingest v0.1.0 (file:///Users/pjohnson/projects/video_ingest)\nerror[E0382]: use of moved value: `worker_pool`\n  --&gt; src/main.rs:30:13\n   |\n24 |     thread::spawn(move || run(sdone, &amp;mut worker_pool));\n   |                   ------- value moved (into closure) here\n...\n30 |             worker_pool.terminate();\n   |             ^^^^^^^^^^^ value used here after move\n&lt;chan macros&gt;:42:47: 43:23 note: in this expansion of chan_select! (defined in &lt;chan macros&gt;)\nsrc/main.rs:27:5: 35:6 note: in this expansion of chan_select! (defined in &lt;chan macros&gt;)\n   |\n   = note: move occurs because `worker_pool` has type `video_ingest::WorkerPool`, which does not implement the `Copy` trait\n</code></pre>\n\n<h2>main.rs</h2>\n\n<pre><code>#[macro_use]\nextern crate chan;\nextern crate chan_signal;\nextern crate video_ingest;\n\nuse chan_signal::Signal;\nuse video_ingest::WorkerPool;\nuse std::thread;\nuse std::ptr;\n\n///\n/// Starts processing\n/// \nfn main() {\n    let mut worker_pool = WorkerPool { join_handles: vec![] };\n\n    // Signal gets a value when the OS sent a INT or TERM signal.\n    let signal = chan_signal::notify(&amp;[Signal::INT, Signal::TERM]);\n\n    // When our work is complete, send a sentinel value on `sdone`.\n    let (sdone, rdone) = chan::sync(0);\n\n    // Run work.\n    thread::spawn(move || run(sdone, &amp;mut worker_pool));\n\n    // Wait for a signal or for work to be done.\n    chan_select! {\n        signal.recv() -&gt; signal =&gt; {\n            println!(\"received signal: {:?}\", signal);\n            worker_pool.terminate(); // &lt;-- Comment out to compile\n        },\n        rdone.recv() =&gt; {\n            println!(\"Program completed normally.\");\n        }\n    }\n}\n\nfn run(sdone: chan::Sender&lt;()&gt;, worker_pool: &amp;mut WorkerPool)  {\n    loop {\n        worker_pool.ingest();\n        worker_pool.terminate();\n    }\n}\n</code></pre>\n\n<h2>lib.rs</h2>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate libc;\n\nuse std::thread;\nuse std::thread::JoinHandle;\nuse std::os::unix::thread::JoinHandleExt;\nuse libc::pthread_join;\nuse libc::c_void;\nuse std::ptr;\nuse std::time::Duration;\n\npub struct WorkerPool {\n    pub join_handles: Vec&lt;JoinHandle&lt;()&gt;&gt;\n}\n\nimpl WorkerPool {\n\n    ///\n    /// Does the actual ingestion\n    ///\n    pub fn ingest(&amp;mut self) {\n\n        // Use 9 threads for an example.\n        for i in 0..10 {\n            self.join_handles.push(\n                thread::spawn(move || {\n\n                    // Get the videos\n                    println!(\"Getting videos for thread {}\", i);\n                    thread::sleep(Duration::new(5, 0));\n                })\n            );\n        }\n    }\n\n    ///\n    /// Joins all threads\n    ///\n    pub fn terminate(&amp;mut self) {\n        println!(\"Total handles: {}\", self.join_handles.len());\n\n        for handle in &amp;self.join_handles {\n            println!(\"Joining thread...\");\n\n            unsafe {\n                let mut state_ptr: *mut *mut c_void = 0 as *mut *mut c_void;\n                pthread_join(handle.as_pthread_t(), state_ptr);\n            }\n        }\n\n        self.join_handles = vec![];\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "abstract-syntax-tree", "type-systems", "downcast"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1476371177, "post_id": 40024093, "comment_id": 67326515, "body": "You&#39;ve got another problem coming, actually: you cannot return <code>Self</code> (a trait object cannot use <code>Self</code> by value), you need to return <code>Rc&lt;AstNode&gt;</code> probably."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1476371229, "post_id": 40024093, "comment_id": 67326560, "body": "Is there any reason why <code>Expression</code> does not implement the <code>AstNode</code> trait, which would let dynamic dispatch do the right thing?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1476376450, "post_id": 40024093, "comment_id": 67330205, "body": "I think the AST manipulation is a distraction here. What you really want to know is whether it&#39;s possible to downcast <code>Rc&lt;Trait&gt;</code> to <code>Rc&lt;Object&gt;</code>, where <code>Object</code> implements <code>Trait</code>, right?"}, {"owner": {"reputation": 8897, "user_id": 2474, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/7ea904f852dda8cefbeeebe012f1932d?s=128&d=identicon&r=PG", "display_name": "rix0rrr", "link": "https://stackoverflow.com/users/2474/rix0rrr"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1476377986, "post_id": 40024093, "comment_id": 67331086, "body": "@MatthieuM., <code>Expression</code> does implement <code>AstNode</code>, I hoped that would be obvious. Doesn&#39;t help for downcasting."}, {"owner": {"reputation": 8897, "user_id": 2474, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/7ea904f852dda8cefbeeebe012f1932d?s=128&d=identicon&r=PG", "display_name": "rix0rrr", "link": "https://stackoverflow.com/users/2474/rix0rrr"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1476378028, "post_id": 40024093, "comment_id": 67331111, "body": "@trentcl that&#39;s true, but I included the broader context in hopes that someone could propose an altogether better solution if the downcasting turns out to be impossible"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1476381690, "post_id": 40024093, "comment_id": 67333066, "body": "@rix0rrr: I meant that if <code>Expression</code> implements <code>AstNone</code>, then <code>Expression</code> can implement <code>clone_with_children</code> and when it does then you do not need to downcast any longer, you can just invoke <code>clone_with_children</code> and it is dynamically dispatched to current concrete type."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1476550546, "post_id": 40024093, "comment_id": 67397400, "body": "I seem to have finally pieced down your question; whether I am right or wrong I would encourage you to produce a <a href=\"http://stackoverflow.com/help/mcve\">MCVE</a> showing <i>in which context</i> you need to downcast (and cannot). My <i>guess</i>, given the lack of code sample, is that <code>AstNode::clone_with_children</code> returns a <code>Rc&lt;AstNode&gt;</code> which cannot be substituted for a <code>Rc&lt;Expression&gt;</code> in the conditions and expressions... I can see many ways to circumvent the issue, but it&#39;s hard to predict in advance which are useful and which are useless..."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1476722642, "post_id": 40024093, "comment_id": 67455846, "body": "I&#39;ve edited my answer somewhat, but the second part of the question is a bit open-ended. Possibly you should consider asking on Programmers.SE or the <a href=\"https://users.rust-lang.org/\" rel=\"nofollow noreferrer\">Rust language forums</a> for more perspectives."}], "answers": [{"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": false, "score": 8, "last_activity_date": 1599739655, "last_edit_date": 1599739655, "creation_date": 1476407264, "answer_id": 40033391, "question_id": 40024093, "link": "https://stackoverflow.com/questions/40024093/downcast-traits-inside-rc-for-ast-manipulation/40033391#40033391", "title": "Downcast traits inside Rc for AST manipulation", "body": "<blockquote>\n<p>Note: In this answer I will use the <code>dyn Trait</code> syntax to make it more clear when a type is a trait object. The older way to write <code>Rc&lt;dyn Trait&gt;</code> is <code>Rc&lt;Trait&gt;</code>. See <a href=\"https://stackoverflow.com/q/50650070/3650362\">What does &quot;dyn&quot; mean in a type?</a></p>\n</blockquote>\n<p>No, you can't downcast <code>Rc&lt;dyn Trait&gt;</code> to <code>Rc&lt;Concrete&gt;</code>, because trait objects like <code>dyn Trait</code> don't contain any information about the concrete type the data belongs to.</p>\n<p>Here's an excerpt from <a href=\"https://doc.rust-lang.org/std/raw/struct.TraitObject.html\" rel=\"nofollow noreferrer\">the official documentation</a> that applies to all pointers to trait objects (<code>&amp;dyn Trait</code>, <code>Box&lt;dyn Trait&gt;</code>, <code>Rc&lt;dyn Trait&gt;</code>, etc.):</p>\n<pre><code>pub struct TraitObject {\n    pub data: *mut (),\n    pub vtable: *mut (),\n}\n</code></pre>\n<p>The <code>data</code> field points to the struct itself, and the <code>vtable</code> field points to a collection of function pointers, one for each method of the trait. At runtime, that's all you have. And that's not sufficient to reconstruct the struct's type. (With <code>Rc&lt;dyn Trait&gt;</code>, the block <code>data</code> points to also contains the strong and weak reference counts, but no additional type information.)</p>\n<p>But there are at least 3 other options.</p>\n<h3>Put the common behavior in the trait</h3>\n<p>First, you could add all the operations that you need to do on <code>Expression</code>s or <code>Condition</code>s to the trait <code>AstNode</code>, and implement them for each struct. This way you never need to call a method that isn't available on the trait object, because the trait contains all the methods you need.</p>\n<p>This likely entails replacing most <code>Rc&lt;Expression&gt;</code> and <code>Rc&lt;Condition&gt;</code> members in the tree with <code>Rc&lt;dyn AstNode&gt;</code>, since you can't downcast <code>Rc&lt;dyn AstNode&gt;</code> (but see below about <code>Any</code>):</p>\n<pre><code>enum Condition {\n    Equals(Rc&lt;dyn AstNode&gt;, Rc&lt;dyn AstNode&gt;),\n    LessThan(Rc&lt;dyn AstNode&gt;, Rc&lt;dyn AstNode&gt;),\n    ...\n}\n</code></pre>\n<p>A variation on this might be writing methods on <code>AstNode</code> that take <code>&amp;self</code> and return references to various concrete types:</p>\n<pre><code>trait AstNode {\n    fn as_expression(&amp;self) -&gt; Option&lt;&amp;Expression&gt; { None }\n    fn as_condition(&amp;self) -&gt; Option&lt;&amp;Condition&gt; { None }\n    ...\n}\n\nimpl AstNode for Expression {\n    fn as_expression(&amp;self) -&gt; Option&lt;&amp;Expression&gt; { Some(self) }\n}\n\nimpl AstNode for Condition {\n    fn as_condition(&amp;self) -&gt; Option&lt;&amp;Condition&gt; { Some(self) }\n}\n</code></pre>\n<p>Instead of downcasting <code>Rc&lt;dyn AstNode&gt;</code> to <code>Rc&lt;Condition&gt;</code>, just store it as an <code>AstNode</code> and call e.g. <code>rc.as_condition().unwrap().method_on_condition()</code>, if you're confident <code>rc</code> is in fact an <code>Rc&lt;Condition&gt;</code>.</p>\n<h3>Double down on <code>enum</code>s</h3>\n<p>Second, you could create another enum that unifies <code>Condition</code> and <code>Expression</code>, and do away with trait objects entirely. This is what I have done in the AST of my own Scheme interpreter. With this solution, no downcasting is required because all the type information is in the enum variant. (Also with this solution, you definitely have to replace <code>Rc&lt;Condition&gt;</code> or <code>Rc&lt;Expression&gt;</code> if you need to get an <code>Rc&lt;Node&gt;</code> out of it.)</p>\n<pre><code>enum Node {\n    Condition(Condition),\n    Expression(Expression),\n    // you may add more here\n}\nimpl Node {\n    fn children(&amp;self) -&gt; Vec&lt;Rc&lt;Node&gt;&gt; { ... }\n}\n</code></pre>\n<h3>Downcast with <code>Any</code></h3>\n<p>A third option is to use <a href=\"https://doc.rust-lang.org/std/any/index.html\" rel=\"nofollow noreferrer\"><code>Any</code></a>, and <code>Rc::downcast</code> each <code>Rc&lt;dyn Any&gt;</code> into its concrete type as needed.</p>\n<p>A slight variation on that would be to add a method <code>fn as_any(&amp;self) -&gt; &amp;Any { self }</code> to <code>AstNode</code>, and then you can call <code>Expression</code> methods (that take <code>&amp;self</code>) by writing <code>node.as_any().downcast_ref::&lt;Expression&gt;().method_on_expression()</code>. But there is currently no way to (safely) <a href=\"https://stackoverflow.com/questions/28632968/why-doesnt-rust-support-trait-object-upcasting#28664881\">upcast</a> an <code>Rc&lt;dyn Trait&gt;</code> to an <code>Rc&lt;dyn Any&gt;</code> (this could change in the future, though).</p>\n<p><code>Any</code> is, strictly speaking, the closest thing to an answer to your question. I don't recommend it because downcasting, or <em>needing</em> to downcast, is often an indication of a poor design. Even in languages with class inheritance, like Java, if you want to do the same kind of thing (store a bunch of nodes in an <code>ArrayList&lt;Node&gt;</code>, for example), you'd have to either make all needed operations available on the base class or somewhere enumerate all the subclasses that you might need to downcast to, which is a terrible anti-pattern. Anything you'd do here with <code>Any</code> would be comparable in complexity to just changing <code>AstNode</code> to an enum.</p>\n<h2>TL;DR</h2>\n<p>You need to store each node of the AST as a type that (a) <strong>provides all the methods you might need to call</strong> and (b) <strong>unifies all the types you might need to put in one</strong>. Option 1 uses trait objects, while option 2 uses enums, but they're pretty similar in principle. A third option is to use <code>Any</code> to enable downcasting.</p>\n<h2>See also</h2>\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/27892375/can-i-do-type-introspection-with-trait-objects-and-then-downcast-it\">Can I do type introspection with trait objects and then downcast it?</a></li>\n<li><a href=\"https://stackoverflow.com/questions/33687447/how-to-get-struct-reference-from-boxed-trait\">How to get struct reference from boxed trait?</a></li>\n<li>(Programmers.SE) <a href=\"https://softwareengineering.stackexchange.com/questions/321805/is-it-a-code-smell-to-store-generic-objects-in-a-container-and-then-get-object-a\">Is it a code smell to store generic objects in a container and then get object and downcast the objects from container?</a></li>\n</ul>\n"}], "owner": {"reputation": 8897, "user_id": 2474, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/7ea904f852dda8cefbeeebe012f1932d?s=128&d=identicon&r=PG", "display_name": "rix0rrr", "link": "https://stackoverflow.com/users/2474/rix0rrr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 771, "favorite_count": 1, "answer_count": 1, "score": 18, "last_activity_date": 1599739655, "creation_date": 1476369590, "last_edit_date": 1476369865, "question_id": 40024093, "link": "https://stackoverflow.com/questions/40024093/downcast-traits-inside-rc-for-ast-manipulation", "title": "Downcast traits inside Rc for AST manipulation", "body": "<p>I'm trying to manipulate ASTs in Rust. There will be lots of manipulations, and I want my trees to be immutable, so to save time all references will be <code>Rc</code>s.</p>\n\n<p>My tree nodes will look like this:</p>\n\n<pre><code>enum Condition {\n    Equals(Rc&lt;Expression&gt;, Rc&lt;Expression&gt;),\n    LessThan(Rc&lt;Expression&gt;, Rc&lt;Expression&gt;),\n    ...\n}\n\nenum Expression {\n    Plus(Rc&lt;Expression&gt;, Rc&lt;Expression&gt;),\n    ...\n}\n</code></pre>\n\n<p>I want to replace a random node of a given type with another node of the same type. To do generic operations on trees I've made a trait:</p>\n\n<pre><code>trait AstNode {\n    fn children(&amp;self) -&gt; Vec&lt;Rc&lt;AstNode&gt;&gt;;\n}\n</code></pre>\n\n<p>And all nodes implement this. This allows me to walk the tree without having to destructure each node type for every operation, by simply calling <code>children()</code>.</p>\n\n<p>I also want to clone a node while updating only one of its children, and leaving the other ones in place. Assume that I've been able to generate nodes of the right concrete type (and I'm happy for the program to panic if I'm wrong). I'll add the following method to the trait:</p>\n\n<pre><code>trait AstNode {\n    fn clone_with_children(&amp;self, new_children: Vec&lt;Rc&lt;AstNode&gt;&gt;) -&gt; Self\n        where Self: Sized;\n}\n</code></pre>\n\n<p>My plan is to take the children returned by <code>childen()</code>, replace one of them, and call <code>clone_with_children()</code> to construct a node of the same enum variant but with one node replaced.</p>\n\n<p>My problem is how to write <code>clone_with_children()</code>.</p>\n\n<p>I need to downcast <code>Rc&lt;AstNode&gt;</code> to <code>Rc&lt;Expression&gt;</code> (or what have you), while keeping the refcount inside the <code>Rc</code> the same, but none of the downcasting libraries I've found seem to be able to do that.</p>\n\n<p>Is what I want possible, or should I do it completely differently?</p>\n"}, {"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 285, "user_id": 1622390, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/220879866d95befeb82ef4718be6b42a?s=128&d=identicon&r=PG", "display_name": "burtonageo", "link": "https://stackoverflow.com/users/1622390/burtonageo"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1476369319, "post_id": 40023706, "comment_id": 67325034, "body": "@matthieuM., The definition of the <a href=\"https://doc.rust-lang.org/std/cmp/trait.PartialOrd.html\" rel=\"nofollow noreferrer\"><code>PartialOrd</code></a> trait requires <code>PartialEq</code>, so from my understanding I think it&#39;s okay for the <code>#[derive(PartialOrd)]</code> to require a <code>#[derive(PartialEq)]</code> as well."}, {"owner": {"reputation": 187800, "user_id": 320615, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/65c80e12b6a33913538653f6d4ef1277?s=128&d=identicon&r=PG", "display_name": "Dogbert", "link": "https://stackoverflow.com/users/320615/dogbert"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1476369354, "post_id": 40023706, "comment_id": 67325069, "body": "@MatthieuM. I don&#39;t see what is wrong with that. <code>PartialOrd</code> requires <code>PartialEq</code>. The same thing happens with <code>struct A(u8);</code>."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 187800, "user_id": 320615, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/65c80e12b6a33913538653f6d4ef1277?s=128&d=identicon&r=PG", "display_name": "Dogbert", "link": "https://stackoverflow.com/users/320615/dogbert"}, "edited": false, "score": 1, "creation_date": 1476370851, "post_id": 40023706, "comment_id": 67326283, "body": "@Dogbert: I got something weird at some point... but I am afraid I reduced it too much afterward."}], "answers": [{"tags": [], "owner": {"reputation": 187800, "user_id": 320615, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/65c80e12b6a33913538653f6d4ef1277?s=128&d=identicon&r=PG", "display_name": "Dogbert", "link": "https://stackoverflow.com/users/320615/dogbert"}, "is_accepted": true, "score": 7, "last_activity_date": 1476370117, "creation_date": 1476370117, "answer_id": 40024307, "question_id": 40023706, "link": "https://stackoverflow.com/questions/40023706/why-do-i-get-a-trait-bound-t-stdmarkersized-is-not-satisfied-when-i-tr/40024307#40024307", "title": "Why do I get a `trait bound `[T]: std::marker::Sized` is not satisfied when I try and implement Ord and Eq manually on unsized types?", "body": "<p>The problem is that <code>S: AsRef&lt;[u8]&gt;</code> is also restricting <code>S</code> to <code>Sized</code> types by default. You need to use <code>?Sized</code> to opt-out of that.</p>\n\n<blockquote>\n  <p>All generic type parameters implicitly have the <code>Sized</code> bound, so the <code>?Sized</code> can be used to opt-out of the implicit bound.</p>\n</blockquote>\n\n<p><a href=\"https://doc.rust-lang.org/beta/book/unsized-types.html\">From the Rust Book</a>.</p>\n\n<p>The following compiles fine for me:</p>\n\n<pre><code>use std::cmp::Ordering;\n\nstruct A([u8]);\n\nimpl AsRef&lt;[u8]&gt; for A {\n    fn as_ref(&amp;self) -&gt; &amp;[u8] {\n        &amp;self.0\n    }\n}\n\nimpl&lt;S: AsRef&lt;[u8]&gt; + ?Sized&gt; PartialEq&lt;S&gt; for A {\n    fn eq(&amp;self, other: &amp;S) -&gt; bool {\n        self.0.eq(other.as_ref())\n    }\n}\n\nimpl Eq for A {}\n\nimpl&lt;S: AsRef&lt;[u8]&gt; + ?Sized&gt; PartialOrd&lt;S&gt; for A {\n    fn partial_cmp(&amp;self, other: &amp;S) -&gt; Option&lt;Ordering&gt; {\n        let slice: &amp;[u8] = &amp;self.0;\n        slice.partial_cmp(other.as_ref())\n    }\n}\n\nimpl Ord for A {\n    fn cmp(&amp;self, other: &amp;Self) -&gt; Ordering {\n        self.partial_cmp(&amp;other).unwrap()\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=fa88142288b2b455ce90b7e6bf0a67c7&amp;version=stable&amp;backtrace=0\">Demo</a></p>\n"}], "owner": {"reputation": 285, "user_id": 1622390, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/220879866d95befeb82ef4718be6b42a?s=128&d=identicon&r=PG", "display_name": "burtonageo", "link": "https://stackoverflow.com/users/1622390/burtonageo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1273, "favorite_count": 0, "accepted_answer_id": 40024307, "answer_count": 1, "score": 7, "last_activity_date": 1476370117, "creation_date": 1476368584, "last_edit_date": 1476369136, "question_id": 40023706, "link": "https://stackoverflow.com/questions/40023706/why-do-i-get-a-trait-bound-t-stdmarkersized-is-not-satisfied-when-i-tr", "title": "Why do I get a `trait bound `[T]: std::marker::Sized` is not satisfied when I try and implement Ord and Eq manually on unsized types?", "body": "<p>When creating a struct which stores a DST (e.g., a raw slice), I can use the normal <code>#[derive(Eq, PartialEq, Ord, PartialOrd)]</code> facility to get implementations of this trait on my type:</p>\n\n<pre><code>#[derive(PartialEq, Eq, PartialOrd, Ord)]\nstruct A([u8]);\n</code></pre>\n\n<p>However, if I implement them manually, then the compiler will complain that my type does not implement <code>Sized</code>:</p>\n\n<pre><code>struct A([u8]);\n\nimpl AsRef&lt;[u8]&gt; for A {\n    fn as_ref(&amp;self) -&gt; &amp;[u8] {\n        &amp;self.0\n    }\n}\n\nimpl&lt;S: AsRef&lt;[u8]&gt;&gt; PartialEq&lt;S&gt; for A {\n    fn eq(&amp;self, other: &amp;S) -&gt; bool {\n        self.0.eq(other.as_ref())\n    }\n}\n\nimpl Eq for A { }\n\nimpl&lt;S: AsRef&lt;[u8]&gt;&gt; PartialOrd&lt;S&gt; for A {\n    fn partial_cmp(&amp;self, other: &amp;S) -&gt; Option&lt;Ordering&gt; {\n        let  slice: &amp;[u8] = &amp;self.0;\n        slice.partial_cmp(other.as_ref())\n    }\n}\n\nimpl Ord for A {\n    fn cmp(&amp;self, other: &amp;Self) -&gt; Ordering {\n        self.partial_cmp(&amp;other).unwrap()\n    }\n}\n</code></pre>\n\n<p>Compiler result:</p>\n\n<pre><code>rustc 1.12.0 (3191fbae9 2016-09-23)\nerror[E0277]: the trait bound `[u8]: std::marker::Sized` is not satisfied\n  --&gt; &lt;anon&gt;:20:6\n   |\n20 | impl Eq for A { }\n   |      ^^\n   |\n   = note: `[u8]` does not have a constant size known at compile-time\n   = note: required because it appears within the type `A`\n   = note: required because of the requirements on the impl of `std::cmp::PartialEq` for `A`\n   = note: required by `std::cmp::Eq`\n\nerror[E0277]: the trait bound `[u8]: std::marker::Sized` is not satisfied\n  --&gt; &lt;anon&gt;:29:6\n   |\n29 | impl Ord for A {\n   |      ^^^\n   |\n   = note: `[u8]` does not have a constant size known at compile-time\n   = note: required because it appears within the type `A`\n   = note: required because of the requirements on the impl of `std::cmp::PartialOrd` for `A`\n   = note: required by `std::cmp::Ord`\n</code></pre>\n\n<p>If I create a variant of the type which <em>does</em> have a fixed size (e.g. by turning it into a fixed-size array), then I can manually implement the traits no problem. </p>\n\n<pre><code>struct B([u8; 5]);\n\nimpl AsRef&lt;[u8]&gt; for B {\n    fn as_ref(&amp;self) -&gt; &amp;[u8] {\n        &amp;self.0\n    }\n}\n\nimpl&lt;S: AsRef&lt;[u8]&gt;&gt; PartialEq&lt;S&gt; for B {\n    fn eq(&amp;self, other: &amp;S) -&gt; bool {\n        self.0.eq(other.as_ref())\n    }\n}\n\nimpl Eq for B { }\n\nimpl&lt;S: AsRef&lt;[u8]&gt;&gt; PartialOrd&lt;S&gt; for B {\n    fn partial_cmp(&amp;self, other: &amp;S) -&gt; Option&lt;Ordering&gt; {\n        let  slice: &amp;[u8] = &amp;self.0;\n        slice.partial_cmp(other.as_ref())\n    }\n}\n\nimpl Ord for B {\n    fn cmp(&amp;self, other: &amp;Self) -&gt; Ordering {\n        self.partial_cmp(&amp;other).unwrap()\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=1a26e92098a452952fbe95afd146c0ec&amp;version=stable&amp;backtrace=0\" rel=\"nofollow\">Here is a playground link showing the issue</a>.</p>\n\n<p>My question is - how do I implement <code>Ord</code> and <code>Eq</code> on my custom DST, so that I can take advantage of the fact that I can <code>partial_cmp/eq</code> by any <code>AsRef&lt;[u8]&gt;</code>, but also use that to enforce the bounds for the <code>Ord</code>/<code>Eq</code> trait implementations, as I do with <code>struct B</code> in my example?</p>\n"}, {"tags": ["iterator", "rust"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1476364127, "post_id": 40021882, "comment_id": 67320695, "body": "@Shepmaster: Damned, you were faster than me :P"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1476364611, "post_id": 40022060, "comment_id": 67321078, "body": "Hypothetically, there <i>could</i> be an underlying system call like <code>readdir_sorted_by_name</code>. That would allow &quot;reading one entry at a time&quot; to return in sorted order."}, {"owner": {"reputation": 3039, "user_id": 2851815, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/37MCt.png?s=128&g=1", "display_name": "\u043d\u0430\u0431\u0438\u044f\u0447\u043b\u044d\u0432\u044d\u043b\u0438", "link": "https://stackoverflow.com/users/2851815/%d0%bd%d0%b0%d0%b1%d0%b8%d1%8f%d1%87%d0%bb%d1%8d%d0%b2%d1%8d%d0%bb%d0%b8"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1476367237, "post_id": 40022060, "comment_id": 67323285, "body": "@Shepmaster Some FSes are even sorted ex definitione so they&#39;ll always return sorted entries"}, {"owner": {"reputation": 115745, "user_id": 119527, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/lTjBL.png?s=128&g=1", "display_name": "Jonathon Reinhart", "link": "https://stackoverflow.com/users/119527/jonathon-reinhart"}, "edited": false, "score": 3, "creation_date": 1528949411, "post_id": 40022060, "comment_id": 88701796, "body": "Using <code>.filter_map(|r| r.ok())</code> will skip any entries that are <code>Err</code> without using <code>unwrap()</code>."}], "tags": [], "owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "is_accepted": true, "score": 17, "last_activity_date": 1476364756, "last_edit_date": 1476364756, "creation_date": 1476364486, "answer_id": 40022060, "question_id": 40021882, "link": "https://stackoverflow.com/questions/40021882/how-to-sort-readdir-iterator/40022060#40022060", "title": "How to sort ReadDir iterator", "body": "<p><code>ReadDir</code> only reads one entry at a time, so it can't sort it before iterating.  There is no sorted <code>readdir</code> system call (at least not on the platforms I know of, which means there can't be a portable one).</p>\n\n<p>So the only option is to read into a <code>Vec</code> and sort there:</p>\n\n<pre><code>use std::fs;\n\nfn main() {\n    let mut paths: Vec&lt;_&gt; = fs::read_dir(\"/\").unwrap()\n                                              .map(|r| r.unwrap())\n                                              .collect();\n    paths.sort_by_key(|dir| dir.path());\n    for path in paths {\n        println!(\"Name: {}\", path.path().display())\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 6, "last_activity_date": 1476364490, "last_edit_date": 1495541221, "creation_date": 1476364490, "answer_id": 40022061, "question_id": 40021882, "link": "https://stackoverflow.com/questions/40021882/how-to-sort-readdir-iterator/40022061#40022061", "title": "How to sort ReadDir iterator", "body": "<blockquote>\n  <p>Can I sort the <code>ReadDir</code> iterator before iteration?</p>\n</blockquote>\n\n<p>Basically, no. On macOS and Linux, the <a href=\"https://github.com/rust-lang/rust/blob/19ac57926abb749a93e2eb84502048d9c57f2d7b/src/libstd/sys/unix/fs.rs#L605-L616\" rel=\"nofollow noreferrer\"><code>readdir_r</code> function is used</a>. This <a href=\"https://stackoverflow.com/q/8977441/155423\">is not guaranteed to return in any specific order</a>. Generally, it will return in the order that is fastest / easiest for the filesystem, which <strong>could</strong> change every time you call it.</p>\n\n<p>You will need to collect the items, sort them, then re-iterate.</p>\n"}], "owner": {"reputation": 22928, "user_id": 978690, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/lNUl6.png?s=128&g=1", "display_name": "rap-2-h", "link": "https://stackoverflow.com/users/978690/rap-2-h"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2513, "favorite_count": 0, "accepted_answer_id": 40022060, "answer_count": 2, "score": 14, "last_activity_date": 1476364756, "creation_date": 1476363955, "last_edit_date": 1476364084, "question_id": 40021882, "link": "https://stackoverflow.com/questions/40021882/how-to-sort-readdir-iterator", "title": "How to sort ReadDir iterator", "body": "<p>I can display a directory list like this:</p>\n\n<pre><code>use std::fs;\n\nfn main() {\n    let paths = fs::read_dir(\"./\").unwrap();\n    for path in paths {\n        println!(\"Name: {}\", path.unwrap().path().display())\n    }\n}\n</code></pre>\n\n<p>Can I sort the <code>ReadDir</code> iterator before iteration? The directory names are date-like numbers like <code>201610131503</code>. I read the <a href=\"https://doc.rust-lang.org/std/fs/struct.ReadDir.html\">documentation for <code>ReadDir</code></a> but I did not find a built-in function for this. Maybe I do not know how to search?</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 5700, "user_id": 4934640, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/2f69527ae459cbbda0ab5c2e08686a50?s=128&d=identicon&r=PG&f=1", "display_name": "user", "link": "https://stackoverflow.com/users/4934640/user"}, "edited": false, "score": 1, "creation_date": 1588053374, "post_id": 40021555, "comment_id": 108743819, "body": "This question has a better answer: <a href=\"https://stackoverflow.com/a/50986237/4934640\">How to pass compiler flags to a sub crate in Rust?</a>"}], "answers": [{"comments": [{"owner": {"reputation": 285, "user_id": 1622390, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/220879866d95befeb82ef4718be6b42a?s=128&d=identicon&r=PG", "display_name": "burtonageo", "link": "https://stackoverflow.com/users/1622390/burtonageo"}, "edited": false, "score": 0, "creation_date": 1476364137, "post_id": 40021750, "comment_id": 67320701, "body": "Hmm, what if I have a dependency like <a href=\"https://github.com/tomprogrammer/rust-ascii\" rel=\"nofollow noreferrer\"><code>ascii</code></a>, which exposes a <code>no_std</code> flag - which I want to <i>disable</i> if my <code>use_std</code> flag is enabled?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 285, "user_id": 1622390, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/220879866d95befeb82ef4718be6b42a?s=128&d=identicon&r=PG", "display_name": "burtonageo", "link": "https://stackoverflow.com/users/1622390/burtonageo"}, "edited": false, "score": 0, "creation_date": 1476364943, "post_id": 40021750, "comment_id": 67321359, "body": "@burtonageo an interesting question, you could probably ask a separate top-level question for that! It might even be a feature request. Specifically for <code>no_std</code> though, I feel like I heard that the right thing to do is to have a <i>default feature</i> that enables using things from <code>std</code>, so perhaps the ascii crate is just backwards..."}, {"owner": {"reputation": 285, "user_id": 1622390, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/220879866d95befeb82ef4718be6b42a?s=128&d=identicon&r=PG", "display_name": "burtonageo", "link": "https://stackoverflow.com/users/1622390/burtonageo"}, "edited": false, "score": 0, "creation_date": 1476366864, "post_id": 40021750, "comment_id": 67322963, "body": "Yeah, I&#39;ve heard that features are meant to be additive, not subtractive, so I think my best bet would be to make a pull request to them."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 20, "last_activity_date": 1517453701, "last_edit_date": 1517453701, "creation_date": 1476363584, "answer_id": 40021750, "question_id": 40021555, "link": "https://stackoverflow.com/questions/40021555/how-do-i-pass-down-feature-flags-to-subdependencies-in-cargo/40021750#40021750", "title": "How do I &#39;pass down&#39; feature flags to subdependencies in Cargo?", "body": "\n\n<p>From <a href=\"https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section\" rel=\"noreferrer\">the documentation you linked to</a>:</p>\n\n<blockquote>\n<pre class=\"lang-none prettyprint-override\"><code># Features can be used to reexport features of other packages. The `session`\n# feature of package `awesome` will ensure that the `session` feature of the\n# package `cookie` is also enabled.\nsession = [\"cookie/session\"]\n</code></pre>\n</blockquote>\n\n<p>Is that sufficient?</p>\n"}], "owner": {"reputation": 285, "user_id": 1622390, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/220879866d95befeb82ef4718be6b42a?s=128&d=identicon&r=PG", "display_name": "burtonageo", "link": "https://stackoverflow.com/users/1622390/burtonageo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2827, "favorite_count": 1, "answer_count": 1, "score": 16, "last_activity_date": 1517453701, "creation_date": 1476363106, "last_edit_date": 1477322201, "question_id": 40021555, "link": "https://stackoverflow.com/questions/40021555/how-do-i-pass-down-feature-flags-to-subdependencies-in-cargo", "title": "How do I &#39;pass down&#39; feature flags to subdependencies in Cargo?", "body": "<p>I'm writing a library in Cargo. If this library depends on another library like <a href=\"http://crates.io/crates/libc\" rel=\"noreferrer\"><code>libc</code></a>, which exposes a feature (in this case, <code>use_std</code>), how do I make a feature I expose enable or disable that feature in my dependency?</p>\n\n<p>Looking at the <a href=\"http://doc.crates.io/manifest.html#the-features-section\" rel=\"noreferrer\">cargo documentation</a>, it looks like there's no official way specified to do this.</p>\n"}, {"tags": ["curl", "rust", "runtime-error"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1476362089, "post_id": 40021037, "comment_id": 67318924, "body": "It is not clear what the question is here: the title seems to imply that you do not understand that using the index 0 on a collection of size 0 will cause a panic... however the questions seems mostly about explaining WHY this index 0 appears here. I would suggest editing the title to make it about <code>slack</code> since that&#39;s the core of the question."}, {"owner": {"reputation": 22928, "user_id": 978690, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/lNUl6.png?s=128&g=1", "display_name": "rap-2-h", "link": "https://stackoverflow.com/users/978690/rap-2-h"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1476362295, "post_id": 40021037, "comment_id": 67319085, "body": "@MatthieuM. Thank you! You are right, I have just edited it. Is it better now?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1476362404, "post_id": 40021037, "comment_id": 67319163, "body": "Great, looks much better now :) Though of course now I&#39;ve got no idea what the problem is :x"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1476379773, "post_id": 40021037, "comment_id": 67332056, "body": "Apparently this problem (or at least a sub-problem) is fixed now: <a href=\"https://github.com/alexcrichton/curl-rust/issues/130#event-822840505\" rel=\"nofollow noreferrer\">Issue on GitHub</a>."}], "answers": [{"tags": [], "owner": {"reputation": 22928, "user_id": 978690, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/lNUl6.png?s=128&g=1", "display_name": "rap-2-h", "link": "https://stackoverflow.com/users/978690/rap-2-h"}, "is_accepted": true, "score": 0, "last_activity_date": 1476439276, "creation_date": 1476439276, "answer_id": 40040392, "question_id": 40021037, "link": "https://stackoverflow.com/questions/40021037/runtime-error-with-rust-slack-index-out-of-bounds-the-len-is-0-but-the-index-i/40040392#40040392", "title": "Runtime error with rust-slack: index out of bounds: the len is 0 but the index is 0", "body": "<p>It was a problem in curl-rust. Fixed in <a href=\"https://github.com/alexcrichton/curl-rust/issues/130\" rel=\"nofollow\">this issue</a>. I just had to run <code>cargo update</code>, then rebuild and everything is OK now.</p>\n\n<p><em>Thanks to Lukas Kalbertodt, Alex Crichton and the author of rust-slack for their help.</em></p>\n"}], "owner": {"reputation": 22928, "user_id": 978690, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/lNUl6.png?s=128&g=1", "display_name": "rap-2-h", "link": "https://stackoverflow.com/users/978690/rap-2-h"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 673, "favorite_count": 0, "accepted_answer_id": 40040392, "answer_count": 1, "score": 1, "last_activity_date": 1476448083, "creation_date": 1476361814, "last_edit_date": 1476448083, "question_id": 40021037, "link": "https://stackoverflow.com/questions/40021037/runtime-error-with-rust-slack-index-out-of-bounds-the-len-is-0-but-the-index-i", "title": "Runtime error with rust-slack: index out of bounds: the len is 0 but the index is 0", "body": "<p>I'm using <a href=\"https://github.com/frostly/rust-slack\" rel=\"nofollow\">rust-slack</a> and I have encountered a runtime error, which is hard to understand for a beginner like me:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>thread 'main' panicked at 'index out of bounds: the len is 0 but the index is 0', ../src/libcollections/vec.rs:1265\nstack backtrace:\n   1:     0x55c042e567e9 - std::sys::backtrace::tracing::imp::write::h00e948915d1e4c72\n   2:     0x55c042e5d9fc - std::panicking::default_hook::_{{closure}}::h7b8a142818383fb8\n   3:     0x55c042e5cc49 - std::panicking::default_hook::h41cf296f654245d7\n   4:     0x55c042e5d338 - std::panicking::rust_panic_with_hook::h4cbd7ca63ce1aee9\n   5:     0x55c042e5d192 - std::panicking::begin_panic::h93672d0313d5e8e9\n   6:     0x55c042e5d100 - std::panicking::begin_panic_fmt::hd0daa02942245d81\n   7:     0x55c042e5d081 - rust_begin_unwind\n   8:     0x55c042e936df - core::panicking::panic_fmt::hbfc935564d134c1b\n   9:     0x55c042e93683 - core::panicking::panic_bounds_check::h08d619adcd972898\n  10:     0x55c042e1f3db - curl::easy::Easy::cvt::h8b0cee78a8555d56\n  11:     0x55c042e1f1fd - curl::easy::Easy::setopt_path::h97000cc95ffaf29e\n  12:     0x55c042e20e05 - curl::easy::default_configure::h81b9c3a40aadad76\n  13:     0x55c042e1e715 - curl::easy::Easy::new::h6256decf6c19f143\n  14:     0x55c042db16e4 - slack_hook::slack::Slack::send::h14b50e23bd1ee165\n  15:     0x55c042dab5af - deployer::main::had2f8b13f079aa74\n  16:     0x55c042e654e6 - __rust_maybe_catch_panic\n  17:     0x55c042e5c3c2 - std::rt::lang_start::h53bf99b0829cc03c\n  18:     0x7f176846682f - __libc_start_main\n  19:     0x55c042da5e98 - _start\n  20:                0x0 - &lt;unknown&gt;\n</code></pre>\n\n<ul>\n<li>It compiles and works on macOS (no panic).</li>\n<li>It compiles but <em>fails</em> (see error above) on an almost fresh Ubuntu 16.04.</li>\n</ul>\n\n<p>I have some <code>println!</code> traces in my application so I know where it crashes and the 20th line of backtrace seems to say it's here too. Ironically, the function is called <code>success</code>, and is the last step of a long script:</p>\n\n<pre><code>fn success()  {\n    let slack = Slack::new(\"https://hooks.slack.com/MY_HOOK_URL\").unwrap();\n    let p = PayloadBuilder::new()\n        .text(\"Deployment success.\")\n        .channel(\"#app-notifier\")\n        .username(\"Deploy Bot\")\n        .icon_emoji(\":tropical_drink:\")\n        .build()\n        .unwrap();\n\n    let res = slack.send(&amp;p);\n    match res {\n        Ok(()) =&gt; println!(\"Success msg sent.\"),\n        Err(x) =&gt; println!(\"&lt;!&gt; Success error ^^: {:?}\",x)\n    }\n}\n</code></pre>\n\n<p>The Slack URL works on my local machine. How to fix this particular case myself? I just need some clues.</p>\n"}, {"tags": ["rust", "smart-pointers"], "answers": [{"comments": [{"owner": {"reputation": 2816, "user_id": 5402030, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/pT1Sp.png?s=128&g=1", "display_name": "MutantOctopus", "link": "https://stackoverflow.com/users/5402030/mutantoctopus"}, "edited": false, "score": 0, "creation_date": 1523291629, "post_id": 40014837, "comment_id": 86489437, "body": "There&#39;s also the logistic argument: With a reference counted pointer, you want to be able to distinguish when you create a new pointer, or when you just give the pointer to something else. <code>Copy</code> would remove this distinction."}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 44, "last_activity_date": 1549376414, "last_edit_date": 1549376414, "creation_date": 1476343763, "answer_id": 40014837, "question_id": 40014703, "link": "https://stackoverflow.com/questions/40014703/why-is-stdrcrc-not-copy/40014837#40014837", "title": "Why is std::rc::Rc&lt;&gt; not Copy?", "body": "<blockquote>\n  <p>It seems to me that <code>Rc&lt;&gt;</code> should just consist of a pointer, which is a fixed size, so the type itself should be <code>Sized</code> and hence <code>Copy</code>, right?</p>\n</blockquote>\n\n<p>This is not quite true. <code>Rc</code> is short for <strong>R</strong>eference <strong>C</strong>ounted. This means that the type keeps track of how many references point to the owned data. That way we can have multiple owners at the same time and safely free the data, once the reference count reaches 0.</p>\n\n<hr>\n\n<p>But how do we keep the reference counter valid and up to date? Exactly, we have to do something whenever a new reference/owner is created and whenever a reference/owner is deleted. Specifically, we have to increase the counter in the former case and decrease it in the latter.</p>\n\n<p>The counter is decreased by implementing <a href=\"https://doc.rust-lang.org/std/ops/trait.Drop.html\" rel=\"noreferrer\"><code>Drop</code></a>, the Rust equivalent of a destructor. This <code>drop()</code> function is executed whenever a variable goes out of scope \u2013 perfect for our goal.</p>\n\n<p>But when do we do the increment? You guessed it: in <code>clone()</code>. <a href=\"https://doc.rust-lang.org/std/marker/trait.Copy.html\" rel=\"noreferrer\">The <code>Copy</code> trait</a>, by definition, says that a type can be duplicated just by copying bits:</p>\n\n<blockquote>\n  <p>Types that can be copied by simply copying bits (i.e. <code>memcpy</code>).</p>\n</blockquote>\n\n<p>This is not true in our case, because: yes, we \"just copy bits\", but we also do additional work! We do need to increment our reference counter!</p>\n\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/blob/1.32.0/src/liballoc/rc.rs#L817-L860\" rel=\"noreferrer\"><code>Drop</code> impl of <code>Rc</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/blob/1.32.0/src/liballoc/rc.rs#L863-L883\" rel=\"noreferrer\"><code>Clone</code> impl of <code>Rc</code></a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": false, "score": 13, "last_activity_date": 1476363218, "last_edit_date": 1476363218, "creation_date": 1476344226, "answer_id": 40014984, "question_id": 40014703, "link": "https://stackoverflow.com/questions/40014703/why-is-stdrcrc-not-copy/40014984#40014984", "title": "Why is std::rc::Rc&lt;&gt; not Copy?", "body": "<p>A type cannot implement <code>Copy</code> if it implements <code>Drop</code> (<a href=\"https://doc.rust-lang.org/stable/std/marker/trait.Copy.html#when-can-my-type-not-be-copy\" rel=\"noreferrer\">source</a>). Since <code>Rc</code> <a href=\"https://doc.rust-lang.org/stable/src/alloc/up/src/liballoc/rc.rs.html#449-471\" rel=\"noreferrer\">does implement it</a> to decrement its reference count, it is not possible.</p>\n\n<p>In addition, <code>Rc</code> is not just a pointer. It consists of a <code>Shared</code>:</p>\n\n<pre><code>pub struct Rc&lt;T: ?Sized&gt; {\n    ptr: Shared&lt;RcBox&lt;T&gt;&gt;,\n}\n</code></pre>\n\n<p>Which, in turn, is not only a pointer:</p>\n\n<pre><code>pub struct Shared&lt;T: ?Sized&gt; {\n    pointer: NonZero&lt;*const T&gt;,\n    _marker: PhantomData&lt;T&gt;,\n}\n</code></pre>\n\n<p><code>PhantomData</code> is needed to express the ownership of <code>T</code>: </p>\n\n<blockquote>\n  <p>this marker has no consequences for variance, but is necessary for\n  dropck to understand that we logically own a <code>T</code>.</p>\n  \n  <p>For details, see:\n  <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/0769-sound-generic-drop.md#phantom-data\" rel=\"noreferrer\">https://github.com/rust-lang/rfcs/blob/master/text/0769-sound-generic-drop.md#phantom-data</a></p>\n</blockquote>\n"}], "owner": {"reputation": 8897, "user_id": 2474, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/7ea904f852dda8cefbeeebe012f1932d?s=128&d=identicon&r=PG", "display_name": "rix0rrr", "link": "https://stackoverflow.com/users/2474/rix0rrr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3673, "favorite_count": 4, "accepted_answer_id": 40014837, "answer_count": 2, "score": 29, "last_activity_date": 1549383031, "creation_date": 1476343339, "last_edit_date": 1549383031, "question_id": 40014703, "link": "https://stackoverflow.com/questions/40014703/why-is-stdrcrc-not-copy", "title": "Why is std::rc::Rc&lt;&gt; not Copy?", "body": "<p>Can someone explain to me why <code>Rc&lt;&gt;</code> is not <code>Copy</code>?</p>\n\n<p>I'm writing code that uses a lot of shared pointers, and having to type <code>.clone()</code> all the time is getting on my nerves.</p>\n\n<p>It seems to me that <code>Rc&lt;&gt;</code> should just consist of a pointer, which is a fixed size, so the type itself should be <code>Sized</code> and hence <code>Copy</code>, right?</p>\n\n<p>Am I missing something?</p>\n"}]