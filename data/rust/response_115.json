[{"tags": ["testing", "stack", "rust", "benchmarking", "rust-cargo"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1490196636, "post_id": 42955243, "comment_id": 73006845, "body": "Have you checked the emitted LLVM IR/assembly?"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1490210539, "post_id": 42960702, "comment_id": 73015958, "body": "This answer is totally believable, but can you provide any references? I&#39;m a little surprised that benches aren&#39;t run in a separate thread, just with concurrency disabled, because threads also provide a nice panicking firewall (and I&#39;d expect there to be code reuse anyway)."}, {"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 4, "creation_date": 1490212033, "post_id": 42960702, "comment_id": 73016814, "body": "@Shepmaster I ran it in LLDB and noted the test is run in &quot;thread #1&quot; (main thread) with the --bench flag and &quot;thread #2&quot; with the --test flag, when I crank up the array size to 5120. The relevant code seems to be here: <a href=\"https://github.com/rust-lang/rust/blob/8c4f2c64c6759a82f143e23964a46a65c67509c9/src/libtest/lib.rs#L1337-L1369\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/blob/&hellip;</a>. --test spawns a new thread, while --bench runs directly. Also, <code>catch_unwind</code> does not start a new thread."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1490212089, "post_id": 42960702, "comment_id": 73016846, "body": "Oh right, <code>catch_unwind</code> exists now. Back in ye olde days the <i>only</i> way to &quot;catch&quot; a panic was via a separate thread."}, {"owner": {"reputation": 1885, "user_id": 370562, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/a59e5c81d88134e98662be745d42ac8b?s=128&d=identicon&r=PG", "display_name": "Josh", "link": "https://stackoverflow.com/users/370562/josh"}, "edited": false, "score": 0, "creation_date": 1490215691, "post_id": 42960702, "comment_id": 73018831, "body": "This is great, thanks.  I knew it was large for the stack, and also knew that tests were run in parallel, although I didn&#39;t realize benchmarks weren&#39;t."}], "tags": [], "owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "is_accepted": true, "score": 28, "last_activity_date": 1490212470, "last_edit_date": 1495540988, "creation_date": 1490209986, "answer_id": 42960702, "question_id": 42955243, "link": "https://stackoverflow.com/questions/42955243/cargo-test-release-causes-a-stack-overflow-why-doesnt-cargo-bench/42960702#42960702", "title": "cargo test --release causes a stack overflow. Why doesn&#39;t cargo bench?", "body": "<p>To get things into perspective, note that the size of your array is 8 \u00d7 2 \u00d7 512 \u00d7 512 = 4 MiB in size. </p>\n\n<p><code>cargo test</code> crashes but <code>cargo bench</code> doesn't because a \"test\" calls the function <code>it_works()</code> <em>in a new thread</em>, while \"bench\" calls it <em>in the main thread</em>. </p>\n\n<p>The default stack size of the main thread is typically 8 MiB, so that array is going to occupy half of the available stack. That's a lot, but there's still room available, so the benchmark runs normally.</p>\n\n<p>The <a href=\"https://unix.stackexchange.com/questions/127602/default-stack-size-for-pthreads\">stack size of a new thread</a>, however, is typically much smaller. On Linux it is 2 MiB, <a href=\"https://stackoverflow.com/questions/1825964/c-c-maximum-stack-size-of-program\">and other platforms could be even smaller</a>. So, your 4 MiB array easily overflows the thread's stack and causes a stack overflow / segfault.</p>\n\n<p>You can increase the default stack size of new threads by <a href=\"https://stackoverflow.com/questions/29937697/how-to-set-the-thread-stack-size-during-compile-time\">setting the <code>RUST_MIN_STACK</code> environment variable</a>.</p>\n\n<pre><code>$ RUST_MIN_STACK=8388608 cargo test \n</code></pre>\n\n<p><code>cargo test</code> runs the tests in parallel threads to improve total test time while benchmarks are run sequentially in the same thread to reduce noise.</p>\n\n<p>Due to the limited stack size, it is a bad idea to allocate this array on stack. You have to either store it on the heap (<code>box</code> it) or as a global <code>static mut</code>.</p>\n"}], "owner": {"reputation": 1885, "user_id": 370562, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/a59e5c81d88134e98662be745d42ac8b?s=128&d=identicon&r=PG", "display_name": "Josh", "link": "https://stackoverflow.com/users/370562/josh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1256, "favorite_count": 2, "accepted_answer_id": 42960702, "answer_count": 1, "score": 16, "last_activity_date": 1490212470, "creation_date": 1490194522, "question_id": 42955243, "link": "https://stackoverflow.com/questions/42955243/cargo-test-release-causes-a-stack-overflow-why-doesnt-cargo-bench", "title": "cargo test --release causes a stack overflow. Why doesn&#39;t cargo bench?", "body": "<p>In trying to write an optimized DSP algorithm, I was wondering about relative speed between stack allocation and heap allocation, and size limits of stack-allocated arrays.  I realize there is a stack frame size limit, but I don't understand why the following runs, generating seemingly realistic benchmark results with <code>cargo bench</code>, but fails with a stack overflow when run with <code>cargo test --release</code>.</p>\n\n<pre><code>#![feature(test)]\nextern crate test;\n\n#[cfg(test)]\nmod tests {\n    use test::Bencher;\n\n    #[bench]\n    fn it_works(b: &amp;mut Bencher) {\n        b.iter(|| { let stack = [[[0.0; 2]; 512]; 512]; });\n    }\n}\n</code></pre>\n"}, {"tags": ["vector", "rust", "ownership"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 4, "creation_date": 1490192384, "post_id": 42954008, "comment_id": 73003291, "body": "You are most advised to read about <a href=\"https://doc.rust-lang.org/stable/book/ownership.html#move-semantics\" rel=\"nofollow noreferrer\">move semantics</a>."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 15, "last_activity_date": 1578324389, "last_edit_date": 1578324389, "creation_date": 1490192536, "answer_id": 42954372, "question_id": 42954008, "link": "https://stackoverflow.com/questions/42954008/how-to-pass-one-vec-to-multiple-functions-in-rust/42954372#42954372", "title": "How to pass one Vec to multiple functions in Rust?", "body": "<p>This is an issue that very beginners to Rust will experience. As a beginner, you should read <a href=\"https://doc.rust-lang.org/stable/book/\" rel=\"nofollow noreferrer\"><em>The Rust Programming Language</em></a>. A lot of effort has been put into this book, especially for newcomers to Rust. This will cover many things that you will run into.</p>\n\n<p>Relevant sections:</p>\n\n<ul>\n<li><a href=\"https://doc.rust-lang.org/stable/book/ch03-02-data-types.html\" rel=\"nofollow noreferrer\">Data Types</a></li>\n<li><a href=\"https://doc.rust-lang.org/stable/book/ch04-00-understanding-ownership.html\" rel=\"nofollow noreferrer\">Understanding Ownership</a></li>\n<li><a href=\"https://doc.rust-lang.org/stable/book/ch04-02-references-and-borrowing.html\" rel=\"nofollow noreferrer\">References and borrowing</a></li>\n</ul>\n\n<hr>\n\n<p>The underlying problem is that you've <em>transferred ownership</em> of the vector when you call <code>max</code>. The value is then gone; <code>main</code> no longer has it.</p>\n\n<p>The simplest thing to to is to clone the vector before passing to <code>max</code>. This allows <code>main</code> to keep ownership of <code>my_array</code> and then transfer ownership to <code>min</code> on the subsequent line:</p>\n\n<pre><code>let max = max(my_array.clone());\nlet min = min(my_array);\n</code></pre>\n\n<p>This is inefficient, as neither <code>max</code> nor <code>min</code> need to take ownership of the vector to do their work. Cloning the <code>Vec</code> also requires additional memory allocation. It's more idiomatic to pass in a <em>slice</em>, which is a type of reference to the data inside the <code>Vec</code>:</p>\n\n<pre><code>let max = max(&amp;my_array);\nlet min = min(&amp;my_array);\n</code></pre>\n\n<pre><code>fn max(array: &amp;[i32]) -&gt; i32 {\n    let mut max = array[0];\n    for &amp;val in array {\n        if max &lt; val {\n            max = val;\n        }\n    }\n    max\n}\n</code></pre>\n\n<p>When iterating over a slice, you get back references to the items in the slice. With integers, we can dereference them (here using the <code>&amp;</code> in <code>for &amp;val in array</code>) and make a copy of the value.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/40006219/155423\">Why is it discouraged to accept a reference to a String (&amp;String), Vec (&amp;Vec), or Box (&amp;Box) as a function argument?</a></li>\n</ul>\n\n<hr>\n\n<p>Even better, there's no need to rewrite basic functions like this. You also <strong>assume there's always at least one value</strong>, which isn't true for an empty vector. The idiomatic solution is to use <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html\" rel=\"nofollow noreferrer\">iterators</a>:</p>\n\n<pre><code>fn main() {\n    let my_array = vec![61, 14, 71, 23, 42, 8, 13, 66];\n    let max = my_array.iter().max();\n    let min = my_array.iter().min();\n    println!(\"Max value is {:?}.\", max);\n    println!(\"Min value is {:?}.\", min);\n}\n</code></pre>\n\n<p>This uses <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.min\" rel=\"nofollow noreferrer\"><code>Iterator::min</code></a> and <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.max\" rel=\"nofollow noreferrer\"><code>Iterator::max</code></a>, \n which each return an <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html\" rel=\"nofollow noreferrer\"><code>Option</code></a>, as an empty slice has no minimum or maximum value.</p>\n\n<p>Technically, it's a little different from your original solution, as <code>min</code> and <code>max</code> are <code>Option&lt;&amp;i32&gt;</code>; a reference to the original slice. You can get back to <code>Option&lt;i32&gt;</code> by using <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.copied\" rel=\"nofollow noreferrer\"><code>Option::copied</code></a>:</p>\n\n<pre><code>fn main() {\n    let my_array = vec![61, 14, 71, 23, 42, 8, 13, 66];\n    let max = my_array.iter().max().copied();\n    let min = my_array.iter().min().copied();\n    println!(\"Max value is {:?}.\", max);\n    println!(\"Min value is {:?}.\", min);\n}\n</code></pre>\n\n<hr>\n\n<p>Bonus information: slices, <code>Vec</code>s, and arrays are all different types. It's not correct to refer to <code>my_array</code> as an array at all.</p>\n"}], "owner": {"reputation": 1633, "user_id": 1155578, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/74b30ee7f3d52637c5f545edc7a92b6f?s=128&d=identicon&r=PG", "display_name": "tajihiro", "link": "https://stackoverflow.com/users/1155578/tajihiro"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1562, "favorite_count": 1, "accepted_answer_id": 42954372, "answer_count": 1, "score": 4, "last_activity_date": 1578324389, "creation_date": 1490191618, "last_edit_date": 1578324137, "question_id": 42954008, "link": "https://stackoverflow.com/questions/42954008/how-to-pass-one-vec-to-multiple-functions-in-rust", "title": "How to pass one Vec to multiple functions in Rust?", "body": "<p>I wrote a <code>max</code> function which takes a <code>Vec</code> as a parameter. It works as I expected. Then I added a <code>min</code> function the same as the <code>max</code> function:</p>\n\n<pre><code>fn main() {\n    let my_array = vec![61, 14, 71, 23, 42, 8, 13, 66];\n    let max = max(my_array);\n    let min = min(my_array);\n    println!(\"Max value is {}.\", max);\n}\n\nfn max(array: Vec&lt;i32&gt;) -&gt; i32 {\n    let mut max = array[0];\n    for val in array {\n        if max &lt; val {\n            max = val;\n        }\n    }\n    max\n}\n\nfn min(array: Vec&lt;i32&gt;) -&gt; i32 {\n    let mut min = array[0];\n    for val in array {\n        if min &gt; val {\n            min = val;\n        }\n    }\n    min\n}\n</code></pre>\n\n<p>Rust reports an error if I put the same <code>my_array</code> parameter on the call to <code>min</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0382]: use of moved value: `my_array`\n --&gt; src/main.rs:4:19\n  |\n2 |     let my_array = vec![61, 14, 71, 23, 42, 8, 13, 66];\n  |         -------- move occurs because `my_array` has type `std::vec::Vec&lt;i32&gt;`, which does not implement the `Copy` trait\n3 |     let max = max(my_array);\n  |                   -------- value moved here\n4 |     let min = min(my_array);\n  |                   ^^^^^^^^ value used here after move\n</code></pre>\n\n<p>How can I write code that works?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 5, "last_activity_date": 1490152119, "creation_date": 1490152119, "answer_id": 42942009, "question_id": 42941885, "link": "https://stackoverflow.com/questions/42941885/an-explanation-for-syntax-let-secretboxkeyref-mut-kb-k/42942009#42942009", "title": "An explanation for syntax: &#39;let secretbox::Key(ref mut kb) = k;&#39;", "body": "<p><code>secretbox::Key(ref mut kb)</code> is a <a href=\"https://doc.rust-lang.org/book/patterns.html\" rel=\"noreferrer\">pattern</a>. <code>secretbox::Key</code> is a <a href=\"https://doc.rust-lang.org/book/structs.html#tuple-structs\" rel=\"noreferrer\">tuple struct</a>, so its fields are unnamed and surrounded by parentheses. <code>ref mut kb</code> binds <code>kb</code> to a mutable reference to the only field in the struct.</p>\n\n<p>You could do the same with:</p>\n\n<pre><code>let kb = &amp;mut k.0;\n</code></pre>\n"}], "owner": {"reputation": 35, "user_id": 3862683, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f0657785bf6e65027d50913c0e636325?s=128&d=identicon&r=PG&f=1", "display_name": "DanDooley", "link": "https://stackoverflow.com/users/3862683/dandooley"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 79, "favorite_count": 0, "accepted_answer_id": 42942009, "answer_count": 1, "score": 2, "last_activity_date": 1490152119, "creation_date": 1490151430, "question_id": 42941885, "link": "https://stackoverflow.com/questions/42941885/an-explanation-for-syntax-let-secretboxkeyref-mut-kb-k", "title": "An explanation for syntax: &#39;let secretbox::Key(ref mut kb) = k;&#39;", "body": "<p>I've been working with sodiumoxide to create a 'password manager' of sorts.\nThis particular example in the documentation has me stumped:</p>\n\n<pre><code>use sodiumoxide::crypto::secretbox;\nuse sodiumoxide::crypto::pwhash;\n\nlet passwd = b\"Correct Horse Battery Staple\";\nlet salt = pwhash::gen_salt();\nlet mut k = secretbox::Key([0; secretbox::KEYBYTES]);\n{\n    let secretbox::Key(ref mut kb) = k;\n    pwhash::derive_key(kb, passwd, &amp;salt,\n                       pwhash::OPSLIMIT_INTERACTIVE,\n                       pwhash::MEMLIMIT_INTERACTIVE).unwrap();\n}\n</code></pre>\n\n<p>Specifically the line:</p>\n\n<pre><code>let secretbox::Key(ref mut kb) = k;\n</code></pre>\n\n<p>I don't quite understand the syntax of this or what it's doing. If someone could explain to me what is happening in this line that'd be awesome. Thanks.</p>\n"}, {"tags": ["types", "rust"], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1490169448, "post_id": 42940846, "comment_id": 72987274, "body": "Note: much as divergent functions return <code>!</code> (bottom) it is useful to consider <code>return x</code>, <code>break</code> and <code>continue</code> as expressions evaluating to <code>!</code>. Then, since bottom is <a href=\"https://en.wikipedia.org/wiki/Bottom_type#Computer_science_applications\" rel=\"nofollow noreferrer\">a subtype of all types</a>, it is natural for it to convert to <code>u32</code> (or any type, really)."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 8, "last_activity_date": 1490147488, "last_edit_date": 1495540462, "creation_date": 1490144041, "answer_id": 42940846, "question_id": 42940812, "link": "https://stackoverflow.com/questions/42940812/why-does-a-continue-in-a-match-arm-not-have-to-typecheck/42940846#42940846", "title": "Why does a `continue` in a match arm not have to typecheck?", "body": "<blockquote>\n  <p>However, the <code>Err(_)</code> branch returns <code>continue</code></p>\n</blockquote>\n\n<p>Not really. <code>continue</code> is not something that \"returns\", it's something that changes the flow of code. Since that match arm does not produce a value, the type of it doesn't matter. The <code>match</code> as a whole does typecheck - every <em>resulting value</em> is a <code>u32</code>.</p>\n\n<p>You can also use other control flow keywords like <code>return</code> or <code>break</code>.</p>\n\n<p>A similar concept is <a href=\"https://stackoverflow.com/q/31082098/155423\">divergent functions</a>. These are functions that are guaranteed to <strong>never</strong> return, so they can be used in place of <em>any</em> expression.</p>\n\n<p>This allows you to also use macros like <code>panic!(\"...\")</code> or <code>unimplemented!()</code> as a match arm, as these expand to a diverging function.</p>\n"}], "owner": {"reputation": 151, "user_id": 7681067, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21aab8fda8a91d1650181196af5cf7af?s=128&d=identicon&r=PG&f=1", "display_name": "wopwop", "link": "https://stackoverflow.com/users/7681067/wopwop"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 93, "favorite_count": 1, "answer_count": 1, "score": 4, "last_activity_date": 1490147488, "creation_date": 1490143822, "last_edit_date": 1490144181, "question_id": 42940812, "link": "https://stackoverflow.com/questions/42940812/why-does-a-continue-in-a-match-arm-not-have-to-typecheck", "title": "Why does a `continue` in a match arm not have to typecheck?", "body": "<p><a href=\"https://doc.rust-lang.org/book/guessing-game.html\" rel=\"nofollow noreferrer\">Rust's guessing game tutorial</a> has the following example code:</p>\n\n<pre><code>let guess: u32 = match guess.trim().parse() {\n    Ok(num) =&gt; num,\n    Err(_) =&gt; continue,\n};\n</code></pre>\n\n<p>The result of the match should be <code>u32</code> and this is the case in the <code>Ok(num)</code> branch. However, the <code>Err(_)</code> branch returns <code>continue</code>, which is certainly not a <code>u32</code>. Why does this typecheck and work?</p>\n"}, {"tags": ["rust", "simd", "avx", "avx2"], "comments": [{"owner": {"reputation": 4773, "user_id": 535962, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/6aa3a26bc30fdd702ce2b00cac46a1ca?s=128&d=identicon&r=PG", "display_name": "lovesh", "link": "https://stackoverflow.com/users/535962/lovesh"}, "edited": false, "score": 1, "creation_date": 1530306201, "post_id": 42938907, "comment_id": 89205777, "body": "You can with Rust 1.27"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1490184218, "post_id": 42945689, "comment_id": 72997117, "body": "You don&#39;t <b>need</b> inline assembly or nightly. You can also use shims compiled from C or direct assembly that are then linked to Rust (see <a href=\"https://github.com/shepmaster/cupid/blob/1ac5bfcc783ab59163dbbf0462754e0373f56069/build.rs\" rel=\"nofollow noreferrer\">my cupid crate</a> for an example)."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1490184995, "post_id": 42945689, "comment_id": 72997639, "body": "@Shepmaster: I added a note; but I personally feel that is no longer &quot;SIMD in Rust&quot;. Also, any instruction requiring over-aligned arguments will require a lot of care (unless alignment specification is finally available?); and I don&#39;t see how FFI can help with that."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1490186003, "post_id": 42945689, "comment_id": 72998430, "body": "Yeah, one of my other crates has to deal with alignment in a much more manual way. However, in that case it&#39;s nicer to do it one level up as I can deal with misaligned data once, then do aligned data in the tight loop."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 11, "last_activity_date": 1537988818, "last_edit_date": 1592644375, "creation_date": 1490169218, "answer_id": 42945689, "question_id": 42938907, "link": "https://stackoverflow.com/questions/42938907/is-it-possible-to-use-simd-instructions-in-rust/42945689#42945689", "title": "Is it possible to use SIMD instructions in Rust?", "body": "<p>The answer is yes, with caveats:</p>\n<ul>\n<li>It is available on stable for x86 and x86_64 <a href=\"https://doc.rust-lang.org/1.29.0/core/arch/index.html\" rel=\"noreferrer\">through the <code>core::arch</code> module</a>, reexported as <a href=\"https://doc.rust-lang.org/1.29.0/std/arch/\" rel=\"noreferrer\"><code>std::arch</code></a>.</li>\n<li>Other CPUs require the use of a nightly compiler for now.</li>\n<li>Not all instructions may be available through <code>core::arch</code>, in which case inline assembly is necessary, which also requires a nightly compiler.</li>\n</ul>\n<p>The <code>std::arch</code> module only provides CPU instructions as intrinsics, and requires the use of <code>unsafe</code> blocks as well as specific <code>feature</code> on the functions containing those instructions to properly align arguments. The documentation of <a href=\"https://doc.rust-lang.org/1.29.0/std/arch/\" rel=\"noreferrer\"><code>std::arch</code></a> is a good starting point for compile-time and run-time detection of CPU features.</p>\n<p>As noted in the documentation, higher level APIs will likely be available at some point in the future under <code>std::simd</code> (and possibly <code>core::simd</code>); a sneak preview being available in <a href=\"https://github.com/rust-lang-nursery/stdsimd\" rel=\"noreferrer\">the <code>stdsimd</code> crate</a>:</p>\n<blockquote>\n<h3>Ergonomics</h3>\n<p>It's important to note that using the <code>arch</code> module is not the easiest thing in the world, so if you're curious to try it out you may want to brace yourself for some wordiness!</p>\n<p>The primary purpose of this module is to enable stable crates on crates.io to build up much more ergonomic abstractions which end up using SIMD under the hood. Over time these abstractions may also move into the standard library itself, but for now this module is tasked with providing the bare minimum necessary to use vendor intrinsics on stable Rust.</p>\n</blockquote>\n<p><em>Note: you may also possibly use the FFI to link in a library that does so for you; for example <a href=\"https://github.com/shepmaster/cupid/blob/1ac5bfcc783ab59163dbbf0462754e0373f56069/build.rs\" rel=\"noreferrer\">Shepmaster's cupid crate</a> uses such a strategy to access cpu features at runtime.</em></p>\n"}], "owner": {"reputation": 17899, "user_id": 1018562, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/ca58bb22c2bf586eb0c11e94d79d031e?s=128&d=identicon&r=PG", "display_name": "pythonic", "link": "https://stackoverflow.com/users/1018562/pythonic"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5884, "favorite_count": 2, "accepted_answer_id": 42945689, "answer_count": 1, "score": 8, "last_activity_date": 1573414436, "creation_date": 1490133532, "last_edit_date": 1490135452, "question_id": 42938907, "link": "https://stackoverflow.com/questions/42938907/is-it-possible-to-use-simd-instructions-in-rust", "title": "Is it possible to use SIMD instructions in Rust?", "body": "<p>In C/C++, you can use intrinsics for SIMD (such as AVX and AVX2) instructions. Is there a way to use SIMD in Rust?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1490119177, "post_id": 42934501, "comment_id": 72966608, "body": "What have you tried? We expect that questions <a href=\"https://meta.stackoverflow.com/q/261592/155423\">have had a lot of effort put into them <i>before</i> they are asked on Stack Overflow</a>."}, {"owner": {"reputation": 349, "user_id": 529212, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/cce7b3ae9b83b6ea3f3e8486f0a4684e?s=128&d=identicon&r=PG", "display_name": "Marek Miettinen", "link": "https://stackoverflow.com/users/529212/marek-miettinen"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1490131571, "post_id": 42934501, "comment_id": 72973856, "body": "I&#39;ve checked the docs (doesn&#39;t seem to be implemented) and written my own (rather crude) implementation. This is a pretty common combinator, so I assumed I&#39;ve either missed something, or there might be a quality implementation somewhere out there."}, {"owner": {"reputation": 179, "user_id": 1045920, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/43f209feeca2ba6fb240449864ff93dc?s=128&d=identicon&r=PG", "display_name": "Marcel", "link": "https://stackoverflow.com/users/1045920/marcel"}, "edited": false, "score": 0, "creation_date": 1508944032, "post_id": 42934501, "comment_id": 80818995, "body": "I know it&#39;s been a while, but would you mind sharing your &quot;crude&quot; implementation."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1490184055, "post_id": 42948943, "comment_id": 72996998, "body": "The linked documentation for <code>combineLatest</code> says <i>The <code>CombineLatest</code> operator behaves in a similar way to <code>Zip</code>, but ...</i>, so I&#39;d expect that <code>zip</code> is not appropriate."}, {"owner": {"reputation": 349, "user_id": 529212, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/cce7b3ae9b83b6ea3f3e8486f0a4684e?s=128&d=identicon&r=PG", "display_name": "Marek Miettinen", "link": "https://stackoverflow.com/users/529212/marek-miettinen"}, "edited": false, "score": 0, "creation_date": 1490211353, "post_id": 42948943, "comment_id": 73016425, "body": "<code>zip</code> only produces a (combined) value when both source streams have produced a value. What I&#39;m looking for would always produce a value combining any value polled from one of the source streams with the latest value from the other stream. This does require each source stream to produce at least one value, and also implies the source stream items need to implement <code>Clone</code>"}, {"owner": {"reputation": 3397, "user_id": 1255016, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/c20883abe67a3a886c4955a515273b53?s=128&d=identicon&r=PG", "display_name": "hfhc2", "link": "https://stackoverflow.com/users/1255016/hfhc2"}, "edited": false, "score": 0, "creation_date": 1490259530, "post_id": 42948943, "comment_id": 73034929, "body": "Yeah, sorry about that, my mistake. I guess you have to go with your own implementation..."}], "tags": [], "owner": {"reputation": 3397, "user_id": 1255016, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/c20883abe67a3a886c4955a515273b53?s=128&d=identicon&r=PG", "display_name": "hfhc2", "link": "https://stackoverflow.com/users/1255016/hfhc2"}, "is_accepted": false, "score": -1, "last_activity_date": 1490179790, "last_edit_date": 1490179790, "creation_date": 1490178567, "answer_id": 42948943, "question_id": 42934501, "link": "https://stackoverflow.com/questions/42934501/how-to-combine-latest-values-of-two-streams-using-futures-rs/42948943#42948943", "title": "How to combine latest values of two streams using futures-rs?", "body": "<p>How about the <code>zip</code> <a href=\"https://docs.rs/futures/0.1.11/futures/stream/trait.Stream.html#method.zip\" rel=\"nofollow noreferrer\">method</a> of the <code>Stream</code> trait?</p>\n"}, {"tags": [], "owner": {"reputation": 179, "user_id": 1045920, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/43f209feeca2ba6fb240449864ff93dc?s=128&d=identicon&r=PG", "display_name": "Marcel", "link": "https://stackoverflow.com/users/1045920/marcel"}, "is_accepted": false, "score": 1, "last_activity_date": 1509286908, "creation_date": 1509286908, "answer_id": 47001273, "question_id": 42934501, "link": "https://stackoverflow.com/questions/42934501/how-to-combine-latest-values-of-two-streams-using-futures-rs/47001273#47001273", "title": "How to combine latest values of two streams using futures-rs?", "body": "<p>Below my crude implementation. Feedback is welcome! Full setup including cargo  <a href=\"https://github.com/marcelbuesing/stream-combinators\" rel=\"nofollow noreferrer\">here</a>. </p>\n\n<pre><code>use futures::{Async, Stream, Poll};\nuse futures::stream::Fuse;\n\n#[cfg(test)]\nmod tests {\n\n    extern crate tokio_core;\n    extern crate tokio_timer;\n    use self::tokio_timer::*;\n    use self::tokio_core::reactor::Core;\n\n    use futures::Stream;\n    use std::time::Duration;\n\n    use zip_latest::zip_latest;\n\n    #[test]\n    /// Combine two timer streams that produce values independent of each other\n    /// Output\n    /// ```\n    ///    Tuple (Some(1), None)\n    ///    Tuple (Some(2), None)\n    ///    Tuple (Some(3), None)\n    ///    Tuple (Some(4), None)\n    ///    Tuple (Some(5), Some(1))\n    ///    Tuple (Some(6), Some(1))\n    ///    Tuple (Some(7), Some(1))\n    ///    Tuple (Some(8), Some(1))\n    ///    Tuple (Some(9), Some(1))\n    ///    Tuple (Some(10), Some(2))\n    /// ```\n    ///\n    fn combine_two_timer_streams() {\n        let mut a_counter = 0;\n        let mut b_counter = 0;\n\n        let a = Timer::default()\n            .interval(Duration::from_millis(1000))\n            .map(|_| {\n                a_counter += 1;\n                a_counter\n            })\n            // We'll stop the stream after 10 loops\n            .take_while(|x| Ok(x &lt;= &amp;10));\n        let b = Timer::default().interval(Duration::from_millis(5000)).map(\n            |_| {\n                b_counter += 1;\n                b_counter\n            },\n        );\n\n        let zl = zip_latest(a, b).for_each(|tuple| {\n            println!(\"Tuple {:?}\", tuple);\n            Ok(())\n        });\n\n        let mut core = Core::new().unwrap();\n        core.run(zl).unwrap();\n    }\n}\n\n#[derive(Debug)]\n/// get at most one error at a time.\n#[must_use = \"streams do nothing unless polled\"]\npub struct ZipLatest&lt;S1: Stream, S2: Stream&gt; {\n    stream1: Fuse&lt;S1&gt;,\n    stream2: Fuse&lt;S2&gt;,\n    queued1: Option&lt;S1::Item&gt;,\n    queued2: Option&lt;S2::Item&gt;,\n}\n\n///\n/// Combines the latest output of two streams.\n/// It will produce a new tuple everytime any of the streams produces a new value.\n/// The stream will produce `Option::None` values for streams that have not yet produced a value.\n///\npub fn zip_latest&lt;S1, S2, T1: Clone, T2: Clone&gt;(stream1: S1, stream2: S2) -&gt; ZipLatest&lt;S1, S2&gt;\nwhere\n    S1: Stream&lt;Item = T1&gt;,\n    S2: Stream&lt;Item = T2, Error = S1::Error&gt;,\n{\n    ZipLatest {\n        stream1: stream1.fuse(),\n        stream2: stream2.fuse(),\n        queued1: None,\n        queued2: None,\n    }\n}\n\nimpl&lt;S1, S2, T1: Clone, T2: Clone&gt; Stream for ZipLatest&lt;S1, S2&gt;\nwhere\n    S1: Stream&lt;Item = T1&gt;,\n    S2: Stream&lt;Item = T2, Error = S1::Error&gt;,\n{\n    type Item = (Option&lt;S1::Item&gt;, Option&lt;S2::Item&gt;);\n    type Error = S1::Error;\n\n    fn poll(&amp;mut self) -&gt; Poll&lt;Option&lt;Self::Item&gt;, Self::Error&gt; {\n\n        match (self.stream1.poll()?, self.stream2.poll()?) {\n            (Async::Ready(None), _) =&gt; Ok(Async::Ready(None)),\n            (_, Async::Ready(None)) =&gt; Ok(Async::Ready(None)),\n            (Async::Ready(Some(item1)), Async::Ready(Some(item2))) =&gt; {\n                self.queued1 = Some(item1);\n                self.queued2 = Some(item2);\n                Ok(Some((self.queued1.clone(), self.queued2.clone())).into())\n            },\n            (Async::Ready(Some(item1)), Async::NotReady) =&gt; {\n                self.queued1 = Some(item1);\n                Ok(Some((self.queued1.clone(), self.queued2.clone())).into())\n            },\n            (Async::NotReady, Async::Ready(Some(item2))) =&gt; {\n                self.queued2 = Some(item2);\n                Ok(Some((self.queued1.clone(), self.queued2.clone())).into())\n            },\n            (Async::NotReady, Async::NotReady) =&gt; Ok(Async::NotReady)\n        }\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 123, "user_id": 5184153, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-_I_El7BrMyE/AAAAAAAAAAI/AAAAAAAAAAA/BDwYDRQz8bI/photo.jpg?sz=128", "display_name": "Legokichi Duckscallion", "link": "https://stackoverflow.com/users/5184153/legokichi-duckscallion"}, "is_accepted": false, "score": 1, "last_activity_date": 1583513720, "creation_date": 1583513720, "answer_id": 60568462, "question_id": 42934501, "link": "https://stackoverflow.com/questions/42934501/how-to-combine-latest-values-of-two-streams-using-futures-rs/60568462#60568462", "title": "How to combine latest values of two streams using futures-rs?", "body": "<p>How about this (in futures-0.3)</p>\n\n<pre><code>futures::stream::select(\n    st1.map(Either::Left),\n    st2.map(Either::Right),\n).fold((None, None), |(l, r), either|async move{\n    let ret = match either {\n        Either::Left(l) =&gt; (Some(l), r),\n        Either::Right(r) =&gt; (l, Some(r)),\n    };\n    println!(\"{:?}\", ret);\n    ret\n})\n</code></pre>\n\n<p>example: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=38827437b5227cfbf753062f727f2d0b\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=38827437b5227cfbf753062f727f2d0b</a></p>\n"}], "owner": {"reputation": 349, "user_id": 529212, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/cce7b3ae9b83b6ea3f3e8486f0a4684e?s=128&d=identicon&r=PG", "display_name": "Marek Miettinen", "link": "https://stackoverflow.com/users/529212/marek-miettinen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 517, "favorite_count": 0, "answer_count": 3, "score": 2, "last_activity_date": 1583513720, "creation_date": 1490118202, "last_edit_date": 1490135539, "question_id": 42934501, "link": "https://stackoverflow.com/questions/42934501/how-to-combine-latest-values-of-two-streams-using-futures-rs", "title": "How to combine latest values of two streams using futures-rs?", "body": "<p>How can I implement the equivalent of <a href=\"http://reactivex.io/documentation/operators/combinelatest.html\" rel=\"nofollow noreferrer\">Rx <code>combineLatest</code></a> with <a href=\"https://github.com/alexcrichton/futures-rs\" rel=\"nofollow noreferrer\">futures-rs</a> <a href=\"https://docs.rs/futures/0.1.11/futures/stream/index.html\" rel=\"nofollow noreferrer\">streams</a>? </p>\n\n<p>I'd like to get a stream of pairs with the current value of either stream, with the latest value from the other stream. The first value would be emitted only after having one value from each stream.</p>\n"}, {"tags": ["stream", "rust", "future", "rust-tokio"], "comments": [{"owner": {"reputation": 1447, "user_id": 392331, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8a3eba1d67a2c45274e1df07f6888e5f?s=128&d=identicon&r=PG", "display_name": "46bit", "link": "https://stackoverflow.com/users/392331/46bit"}, "edited": false, "score": 0, "creation_date": 1491970255, "post_id": 42928432, "comment_id": 73782514, "body": "Do you mean you want a timeout on the connection?"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 8, "last_activity_date": 1599574011, "last_edit_date": 1599574011, "creation_date": 1504046388, "answer_id": 45949292, "question_id": 42928432, "link": "https://stackoverflow.com/questions/42928432/how-to-select-between-a-future-and-stream-in-rust/45949292#45949292", "title": "How to select between a future and stream in Rust?", "body": "<p>You can convert a <code>Future</code> into a <code>Stream</code> using <a href=\"https://docs.rs/futures/0.3.1/futures/future/trait.FutureExt.html#method.into_stream\" rel=\"nofollow noreferrer\"><code>FutureExt::into_stream</code></a> and then select on the two streams:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use futures::prelude::*; // 0.3.1\n\nfn select_stream_or_future_as_stream&lt;S, F&gt;(stream: S, future: F) -&gt; impl Stream&lt;Item = S::Item&gt;\nwhere\n    S: Stream,\n    F: Future&lt;Output = S::Item&gt;,\n{\n    stream::select(future.into_stream(), stream)\n}\n</code></pre>\n<p>See also:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/q/59982803/155423\">How to convert a Future into a Stream?</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 4229, "user_id": 327702, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/FEzyr.jpg?s=128&g=1", "display_name": "opensourcegeek", "link": "https://stackoverflow.com/users/327702/opensourcegeek"}, "is_accepted": false, "score": 3, "last_activity_date": 1520415608, "creation_date": 1520415608, "answer_id": 49148593, "question_id": 42928432, "link": "https://stackoverflow.com/questions/42928432/how-to-select-between-a-future-and-stream-in-rust/49148593#49148593", "title": "How to select between a future and stream in Rust?", "body": "<p>The way I adapted the sample code is below, may be useful for beginners.</p>\n\n<pre><code>let timer = tokio_timer::Timer::default();\n    // Error out when timeout is reached\n    let timeout = timer.sleep(time::Duration::from_millis(950)).then(|_| {\n        future::err(io::Error::new(io::ErrorKind::Other, \"Timeout\"))\n    });\n\n    let handle = core.handle();\n\n    // this returns IoFuture = BoxFuture&lt;T, io::Error&gt;;\n    let addresses = tokio_dns::CpuPoolResolver::new(1 as usize).resolve(\"www.google.cz\");\n    let socket = addresses.and_then(|all_addresses| {\n        let mut ipv4_addresses =  all_addresses.iter().filter(|x| is_ipv4(**x));\n        let addr = ipv4_addresses.next().unwrap();\n        let sock = TcpStream::connect(&amp;SocketAddr::new(*addr, 443), &amp;handle);\n        sock.map_err(|e| {\n            println!(\"{:?}\", e);\n            io::Error::new(io::ErrorKind::Other, e)\n        })\n    });\n\n    let tls_handshake = socket.and_then(|socket| {\n        println!(\"Got socket\");\n        let cx = TlsConnector::builder().unwrap().build().unwrap();\n        let tls = cx.connect_async(\"www.google.cz\", socket);\n        tls.map_err(|e| {\n            println!(\"{:?}\", e);\n            io::Error::new(io::ErrorKind::Other, e)\n        })\n    });\n\n    let request = tls_handshake.and_then(|socket| {\n        println!(\"SSL Handshake Successful\");\n        let write_all = tokio_io::io::write_all(socket, \"\\\n            GET / HTTP/1.0\\r\\n\\\n            Host: www.google.cz\\r\\n\\\n            \\r\\n\\\n        \".as_bytes());\n        println!(\"Wrote to socket\");\n        write_all.map_err(|e| {\n            println!(\"{:?}\", e);\n            io::Error::new(io::ErrorKind::Other, e)\n        })\n    });\n\n    let response = request.and_then(|(socket, _request)| {\n        let read_till_end = tokio_io::io::read_to_end(socket, Vec::new());\n        println!(\"Read till end of socket\");\n        read_till_end\n    });\n\n    let waiter = response.select(timeout).map(|(win, _)| {\n        let (_socket, data) = win;\n        data\n    });\n\n    let result = core.run(waiter);\n</code></pre>\n"}], "owner": {"reputation": 4229, "user_id": 327702, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/FEzyr.jpg?s=128&g=1", "display_name": "opensourcegeek", "link": "https://stackoverflow.com/users/327702/opensourcegeek"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3123, "favorite_count": 2, "accepted_answer_id": 45949292, "answer_count": 2, "score": 6, "last_activity_date": 1599574011, "creation_date": 1490102579, "last_edit_date": 1580660821, "question_id": 42928432, "link": "https://stackoverflow.com/questions/42928432/how-to-select-between-a-future-and-stream-in-rust", "title": "How to select between a future and stream in Rust?", "body": "<p>I've just started experimenting with futures/tokio in Rust. I can do really basic things with just futures or just with streams. I was wondering how you can select between future and a stream.</p>\n\n<p>How can I extend the toy problem from the tokio documentation to use <a href=\"https://docs.rs/tokio-timer/0.1.0/tokio_timer/struct.Timer.html\" rel=\"nofollow noreferrer\"><code>tokio_timer::Timer</code></a> to do a timed HTTPS request?</p>\n\n<pre><code>extern crate futures; // v0.1 (old)\nextern crate native_tls;\nextern crate tokio_core;\nextern crate tokio_io;\nextern crate tokio_tls;\n\nuse std::io;\nuse std::net::ToSocketAddrs;\n\nuse futures::Future;\nuse native_tls::TlsConnector;\nuse tokio_core::net::TcpStream;\nuse tokio_core::reactor::Core;\nuse tokio_tls::TlsConnectorExt;\n\nfn main() {\n    let mut core = Core::new().unwrap();\n    let handle = core.handle();\n    let addr = \"www.rust-lang.org:443\".to_socket_addrs().unwrap().next().unwrap();\n\n    let cx = TlsConnector::builder().unwrap().build().unwrap();\n    let socket = TcpStream::connect(&amp;addr, &amp;handle);\n\n    let tls_handshake = socket.and_then(|socket| {\n        let tls = cx.connect_async(\"www.rust-lang.org\", socket);\n        tls.map_err(|e| {\n            io::Error::new(io::ErrorKind::Other, e)\n        })\n    });\n    let request = tls_handshake.and_then(|socket| {\n        tokio_io::io::write_all(socket, \"\\\n            GET / HTTP/1.0\\r\\n\\\n            Host: www.rust-lang.org\\r\\n\\\n            \\r\\n\\\n        \".as_bytes())\n    });\n    let response = request.and_then(|(socket, _request)| {\n        tokio_io::io::read_to_end(socket, Vec::new())\n    });\n\n    let (_socket, data) = core.run(response).unwrap();\n    println!(\"{}\", String::from_utf8_lossy(&amp;data));\n}\n</code></pre>\n"}, {"tags": ["sockets", "rust", "mio"], "comments": [{"owner": {"reputation": 288867, "user_id": 207421, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG", "display_name": "user207421", "link": "https://stackoverflow.com/users/207421/user207421"}, "edited": false, "score": 0, "creation_date": 1490087224, "post_id": 42921495, "comment_id": 72942593, "body": "If the client closed the socket, i.e. closed the connection normally, you will get a normal end of stream indication when reading, or a &#39;broken pipe&#39; or &#39;connection reset&#39; when writing."}], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 453, "favorite_count": 1, "answer_count": 0, "score": 4, "last_activity_date": 1490101612, "creation_date": 1490083978, "last_edit_date": 1495540031, "question_id": 42921495, "link": "https://stackoverflow.com/questions/42921495/how-can-i-detect-that-the-client-has-closed-the-socket-using-mio-0-6", "title": "How can I detect that the client has closed the socket using mio 0.6?", "body": "<p>I want a way to detect that the client has closed the socket so I can <code>deregister</code> it, but I can not find any suitable way to do it.</p>\n\n<p>My question is similar to <a href=\"https://stackoverflow.com/questions/30759271/detecting-client-hangup-in-mio\">Detecting client hangup in MIO</a>, but there are two main differences:</p>\n\n<ol>\n<li><p>I need a cross-platform solution. According to the source code of mio 0.6, <code>hup</code> is a UNIX-only thing, my code should also work on Windows.</p></li>\n<li><p>The API of mio dramatically changed since 0.3.</p></li>\n</ol>\n"}, {"tags": ["tensorflow", "rust"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1490082974, "post_id": 42920085, "comment_id": 72940178, "body": "Out of curiosity: what CPU do you have? Could it be possible that you are using the wrong target triplet?"}, {"owner": {"reputation": 123, "user_id": 5886122, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8cdadff74d1a111c7c47e5ea2c8991d5?s=128&d=identicon&r=PG&f=1", "display_name": "Rak", "link": "https://stackoverflow.com/users/5886122/rak"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1490087396, "post_id": 42920085, "comment_id": 72942709, "body": "I&#39;m running it on a VM and my host has an i7. Another weird thing I noticed since this post was that <code>&#47;proc&#47;cpuinfo</code> lists SSE (all versions) as supported... maybe there is a difference in how its availability is checked?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1490089439, "post_id": 42920085, "comment_id": 72944188, "body": "Something is fishy there then, the latest SSE instructions are available on <a href=\"https://en.wikipedia.org/wiki/SSE4\" rel=\"nofollow noreferrer\">Nehalem/Haswell</a> for example. Here is <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/platform/cpu_info.cc\" rel=\"nofollow noreferrer\">the code Tensorflow is using</a> which is <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/platform/cpu_feature_guard.cc#35\" rel=\"nofollow noreferrer\">called from here</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1490101686, "post_id": 42920085, "comment_id": 72953355, "body": "You have a very strange definition of &quot;and I have a working libtensorflow.so&quot; if using the library results in an error..."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1490103485, "post_id": 42920085, "comment_id": 72954876, "body": "Could you try using the master branch of the Rust bindings? It will (by default) download and install pre-compiled TensorFlow binaries, and might fix your issue."}, {"owner": {"reputation": 123, "user_id": 5886122, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8cdadff74d1a111c7c47e5ea2c8991d5?s=128&d=identicon&r=PG&f=1", "display_name": "Rak", "link": "https://stackoverflow.com/users/5886122/rak"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1490158320, "post_id": 42920085, "comment_id": 72982346, "body": "@Shepmaster I meant that there were no compile or link errors... Its only causing an error at runtime. I also got the <code>libtensorflow_cc.so</code> (C++ bindings) file working without the runtime error. @E_net4 I don&#39;t think Tensorflow offers precompiled 32bit binaries, so I have to compile it myself, but I&#39;ll check if using the master branch of the Rust bindings does anything."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1490184210, "post_id": 42920085, "comment_id": 72997112, "body": "You might be having additional difficulties from the fact that you have a 32-bit machine, which is not very common. Maybe the question would be better phrased as &quot;How can I use the Rust bindings for TensorFlow on 32-bit Linux&quot;?"}], "owner": {"reputation": 123, "user_id": 5886122, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8cdadff74d1a111c7c47e5ea2c8991d5?s=128&d=identicon&r=PG&f=1", "display_name": "Rak", "link": "https://stackoverflow.com/users/5886122/rak"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 460, "favorite_count": 0, "answer_count": 0, "score": 4, "last_activity_date": 1490101659, "creation_date": 1490078498, "last_edit_date": 1490101659, "question_id": 42920085, "link": "https://stackoverflow.com/questions/42920085/how-can-i-build-libtensorflow-so-for-the-tensorflow-rust-bindings-without-sse", "title": "How can I build libtensorflow.so for the Tensorflow Rust bindings without SSE?", "body": "<p>I've been trying to use the Tensorflow Rust community bindings on Ubuntu 16.04 32bit. The compilation succeeds, and I have a working <code>libtensorflow.so</code> file that\nlinks properly with the Rust program, but as soon as I run the program I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>F tensorflow/core/platform/cpu_feature_guard.cc:35] The TensorFlow library was compiled to use SSE instructions, but these aren't available on your machine.\n</code></pre>\n\n<p>I've tried several solutions, and I've successfully gotten the <code>libtensorflow_cc.so</code> shared library to work, but the same solutions that worked for that don't work for the <code>libtensorflow.so</code> shared library. I'm trying to compile the <code>r1.0</code> tag from the main tensorflow github repository.</p>\n\n<p>The <code>tensorflow.bzl</code> doesn't have the line referenced in <a href=\"https://stackoverflow.com/questions/41474136/disable-sse4-1-when-compiling-tensorflow\">this</a> answer, so that solution wouldn't apply. I've also tried compiling with <code>bazel build --copt=-mno-sse ...</code>, but that also did not work. Any ideas as to how to fix this?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 1194, "user_id": 1191070, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/JPU4k.jpg?s=128&g=1", "display_name": "Patrik Stas", "link": "https://stackoverflow.com/users/1191070/patrik-stas"}, "edited": false, "score": 0, "creation_date": 1568883969, "post_id": 42917566, "comment_id": 102419458, "body": "Note that the description of ? has been included in 2018 book <a href=\"https://doc.rust-lang.org/edition-guide/rust-2018/error-handling-and-panics/the-question-mark-operator-for-easier-error-handling.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/edition-guide/rust-2018/&hellip;</a>"}], "answers": [{"comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 6, "creation_date": 1554789683, "post_id": 42921174, "comment_id": 97869303, "body": "it would be nice if you could extend your answer a little bit, e.g. discuss that the return type of the function must match the type you try to &quot;unwrap&quot;, e.g. <code>Result</code> or <code>Option</code>."}, {"owner": {"reputation": 5962, "user_id": 3873510, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/YpJMi.jpg?s=128&g=1", "display_name": "Paul Razvan Berg", "link": "https://stackoverflow.com/users/3873510/paul-razvan-berg"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1583679617, "post_id": 42921174, "comment_id": 107190615, "body": "@hellow I guess that&#39;d better be a new question altogether"}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 159, "last_activity_date": 1586974553, "last_edit_date": 1586974553, "creation_date": 1490082889, "answer_id": 42921174, "question_id": 42917566, "link": "https://stackoverflow.com/questions/42917566/what-is-this-question-mark-operator-about/42921174#42921174", "title": "What is this question mark operator about?", "body": "<p>As you may have noticed, Rust does not have exceptions. It has panics, but their functionality is limited (they cannot carry structured information) and their use for error-handling is discouraged (they are meant for unrecoverable errors).</p>\n\n<p>In Rust, error handling uses <a href=\"https://doc.rust-lang.org/std/result/enum.Result.html\" rel=\"noreferrer\"><code>Result</code></a>. A typical example would be:</p>\n\n<pre><code>fn halves_if_even(i: i32) -&gt; Result&lt;i32, Error&gt; {\n    if i % 2 == 0 {\n        Ok(i / 2)\n    } else {\n        Err(/* something */)\n    }\n}\n\nfn do_the_thing(i: i32) -&gt; Result&lt;i32, Error&gt; {\n    let i = match halves_if_even(i) {\n        Ok(i) =&gt; i,\n        Err(e) =&gt; return Err(e),\n    };\n\n    // use `i`\n}\n</code></pre>\n\n<p>This is great because:</p>\n\n<ul>\n<li>when writing the code you cannot accidentally forget to deal with the error,</li>\n<li>when reading the code you can immediately see that there is a potential for error right here.</li>\n</ul>\n\n<p>It's less than ideal, however, in that it is very verbose. This is where the question mark operator <code>?</code> comes in.</p>\n\n<p>The above can be rewritten as:</p>\n\n<pre><code>fn do_the_thing(i: i32) -&gt; Result&lt;i32, Error&gt; {\n    let i = halves_if_even(i)?;\n\n    // use `i`\n}\n</code></pre>\n\n<p>which is much more concise.</p>\n\n<p>What <code>?</code> does here is equivalent to the <code>match</code> statement above. In short: it unpacks the <code>Result</code> if OK and <em>returns</em> the error if not.</p>\n\n<p>It's a bit magic, but error handling needs some magic to cut down the boilerplate, and unlike exceptions it is immediately visible which function calls may or may not error out: those that are adorned with <code>?</code>.</p>\n\n<p>One example of the magic is that this also works for <code>Option</code>:</p>\n\n<pre><code>// Assume\n// fn halves_if_even(i: i32) -&gt; Option&lt;i32&gt;\n\nfn do_the_thing(i: i32) -&gt; Option&lt;i32&gt; {\n    let i = halves_if_even(i)?;\n\n    // use `i`\n}\n</code></pre>\n\n<p>This is powered by the (unstable) <a href=\"https://doc.rust-lang.org/std/ops/trait.Try.html\" rel=\"noreferrer\"><code>Try</code></a> trait.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/40545332/155423\">Is the question mark operator ? equivalent to the try! macro?</a></li>\n<li><a href=\"https://stackoverflow.com/q/30555477/155423\">Why do try!() and ? not compile when used in a function that doesn&#39;t return Option or Result?</a></li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 1528, "user_id": 4418836, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ab020a2f9ef157eb9599ee0126cd2e0a?s=128&d=identicon&r=PG", "display_name": "Jordan", "link": "https://stackoverflow.com/users/4418836/jordan"}, "edited": false, "score": 2, "creation_date": 1600805944, "post_id": 63877649, "comment_id": 113203173, "body": "not to be confused with actual <code>.unwrap()</code> which panics in the case of an error."}], "tags": [], "owner": {"reputation": 2964, "user_id": 7134134, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/fzCCW.jpg?s=128&g=1", "display_name": "snnsnn", "link": "https://stackoverflow.com/users/7134134/snnsnn"}, "is_accepted": false, "score": 2, "last_activity_date": 1614106148, "last_edit_date": 1614106148, "creation_date": 1600053583, "answer_id": 63877649, "question_id": 42917566, "link": "https://stackoverflow.com/questions/42917566/what-is-this-question-mark-operator-about/63877649#63877649", "title": "What is this question mark operator about?", "body": "<p>It is for error propagation for recoverable error type <code>Result&lt;T, E&gt;</code>. It unwraps the result and gives you the inner value.</p>\n<p>Rather than handling error case, you propagate it to the caller code and deal with only the <code>Ok</code> case. Benefit is, it eliminates a lot of boilerplate and makes function's implementation simpler.</p>\n"}], "owner": {"reputation": 13014, "user_id": 4140572, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/2uRSa.png?s=128&g=1", "display_name": "Angel Angel", "link": "https://stackoverflow.com/users/4140572/angel-angel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 28573, "favorite_count": 14, "accepted_answer_id": 42921174, "answer_count": 2, "score": 119, "last_activity_date": 1614106148, "creation_date": 1490064631, "last_edit_date": 1518216323, "question_id": 42917566, "link": "https://stackoverflow.com/questions/42917566/what-is-this-question-mark-operator-about", "title": "What is this question mark operator about?", "body": "<p>I'm reading <a href=\"https://doc.rust-lang.org/std/fs/struct.File.html\" rel=\"noreferrer\">the documentation for <code>File</code></a>:</p>\n\n<pre><code>//..\nlet mut file = File::create(\"foo.txt\")?;\n//..\n</code></pre>\n\n<p>What is the <code>?</code> in this line? I do not recall seeing it in the Rust Book before.</p>\n"}, {"tags": ["rust", "typenum"], "comments": [{"owner": {"reputation": 1417, "user_id": 2977291, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/66afbccc6043392125ac0f0de57ccfa7?s=128&d=identicon&r=PG&f=1", "display_name": "paholg", "link": "https://stackoverflow.com/users/2977291/paholg"}, "edited": false, "score": 0, "creation_date": 1495768895, "post_id": 42916361, "comment_id": 75399821, "body": "<a href=\"https://github.com/paholg/typenum/issues/67#issuecomment-256713503\" rel=\"nofollow noreferrer\">This comment</a> in a typenum issue outlines how <a href=\"https://crates.io/crates/nalgebra\" rel=\"nofollow noreferrer\">nalgebra</a> accomplishes something similar."}], "answers": [{"comments": [{"owner": {"reputation": 5777, "user_id": 1485877, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/tkdN8.jpg?s=128&g=1", "display_name": "drhagen", "link": "https://stackoverflow.com/users/1485877/drhagen"}, "edited": false, "score": 0, "creation_date": 1490093784, "post_id": 42917050, "comment_id": 72947487, "body": "In my real case, my motivation for a dynamic type was so that I don&#39;t have to duplicate the algorithm (more complicated than <code>add</code>), but maybe I can abstract the algorithm into a private &quot;unsafe&quot; function that the typed functions call."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 5777, "user_id": 1485877, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/tkdN8.jpg?s=128&g=1", "display_name": "drhagen", "link": "https://stackoverflow.com/users/1485877/drhagen"}, "edited": false, "score": 1, "creation_date": 1490108680, "post_id": 42917050, "comment_id": 72959103, "body": "You can further simplify it by implementing <code>From&lt;Vec&lt;E&gt;&gt;</code> for<code>Vector&lt;E, N&gt;</code>, and then write your algorithm for any <code>V: Into&lt;Vector&lt;E, N&gt;&gt;</code>."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 5777, "user_id": 1485877, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/tkdN8.jpg?s=128&g=1", "display_name": "drhagen", "link": "https://stackoverflow.com/users/1485877/drhagen"}, "edited": false, "score": 0, "creation_date": 1490216938, "post_id": 42917050, "comment_id": 73019534, "body": "Actually I later realised that the suggestion from my last comment won&#39;t work. You can&#39;t implement <code>From&lt;Vec&lt;E&gt;&gt;</code> for <code>Vector&lt;E, N&gt;</code> because you&#39;d need to know the length of the <code>Vec</code> at compile time, which defeats the point."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 3, "last_activity_date": 1490062565, "last_edit_date": 1490062565, "creation_date": 1490061207, "answer_id": 42917050, "question_id": 42916361, "link": "https://stackoverflow.com/questions/42916361/combine-a-compile-time-integer-type-with-a-dynamic-type/42917050#42917050", "title": "Combine a compile-time integer type with a dynamic type", "body": "<p>You could just keep using <code>Vec&lt;T&gt;</code> for what it does best, and use your <code>Vector&lt;T, N&gt;</code> for checked length vectors. To accomplish that, you can define a trait for addition and implement it for different combinations of the two types of vector:</p>\n\n<pre><code>trait MyAdd&lt;T&gt; {\n    type Output;\n    fn add(&amp;self, other: &amp;T) -&gt; Self::Output;\n}\n\nimpl &lt;T, N: Unsigned&gt; MyAdd&lt;Vector&lt;T, N&gt;&gt; for Vector&lt;T, N&gt; {\n    type Output = Vector&lt;T, N&gt;;\n    fn add(&amp;self, other: &amp;Vector&lt;T, N&gt;) -&gt; Self::Output {\n        Vector::new(/* implement addition here */)\n    }\n}\n\nimpl &lt;T, N: Unsigned&gt; MyAdd&lt;Vec&lt;T&gt;&gt; for Vector&lt;T, N&gt; {\n    type Output = Vector&lt;T, N&gt;;\n    fn add(&amp;self, other: &amp;Vec&lt;T&gt;) -&gt; Self::Output {\n        Vector::new(/* implement addition here */)\n    }\n}\n\nimpl &lt;T&gt; MyAdd&lt;Vec&lt;T&gt;&gt; for Vec&lt;T&gt; {\n    type Output = Vec&lt;T&gt;;\n    fn add(&amp;self, other: &amp;Vec&lt;T&gt;) -&gt; Self::Output {\n        Vec::new(/* implement addition here */)\n    }\n}\n\nimpl &lt;T, N: Unsigned&gt; MyAdd&lt;Vector&lt;T, N&gt;&gt; for Vec&lt;T&gt; {\n    type Output = Vector&lt;T, N&gt;;\n    fn add(&amp;self, other: &amp;Vector&lt;T, N&gt;) -&gt; Self::Output {\n        Vector::new(/* implement addition here */)\n    }\n}\n</code></pre>\n\n<p>Now you can use it almost in the same way as you were trying to:</p>\n\n<pre><code>fn main() {\n    use typenum::{U3, U4};\n    let vector3 = Vector::&lt;usize, U3&gt;::new(vec![1, 2, 3]);\n    let vector4 = Vector::&lt;usize, U4&gt;::new(vec![1, 2, 3, 4]);\n    let vector4_dynamic = vec![1, 2, 3, 4];\n\n    vector3.add(&amp;vector4); // Compile error!\n    vector3.add(&amp;vector4_dynamic); // Runtime error on length assertion\n}\n</code></pre>\n\n<p>You could avoid creating your own trait by using the built in <code>std::ops::Add</code>, but you wouldn't be able to implement it for <code>Vec</code>. The left side of the <code>.add</code> would always have to be <code>Vector&lt;E, N&gt;</code> with <code>Vec</code> limited to only being in the argument. You could get around that with another <code>Vec</code> <em>\"newtype\"</em> wrapper, similar to what you've done with <code>Vector&lt;E, T&gt;</code> but without the length check and phantom type.</p>\n"}, {"comments": [{"owner": {"reputation": 5777, "user_id": 1485877, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/tkdN8.jpg?s=128&g=1", "display_name": "drhagen", "link": "https://stackoverflow.com/users/1485877/drhagen"}, "edited": false, "score": 0, "creation_date": 1490093590, "post_id": 42917064, "comment_id": 72947333, "body": "That last solution is surprisingly simple. Could I add a <code>Deref</code> implementation to coerce a <code>&amp;Vector&lt;E, N: Unsigned&gt;</code> to <code>&amp;Vector&lt;E, N: Dynamic&gt;</code> to get back the combined behavior for references or would that defeat the typed numbers by casting two mismatched <code>Unsigned</code> to <code>Dynamic</code>?"}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "reply_to_user": {"reputation": 5777, "user_id": 1485877, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/tkdN8.jpg?s=128&g=1", "display_name": "drhagen", "link": "https://stackoverflow.com/users/1485877/drhagen"}, "edited": false, "score": 0, "creation_date": 1490140044, "post_id": 42917064, "comment_id": 72977251, "body": "Adding such a <code>Deref</code> implementation doesn&#39;t work; the coercion doesn&#39;t kick in at all. I wouldn&#39;t recommend doing this anyway."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 3, "last_activity_date": 1490061273, "creation_date": 1490061273, "answer_id": 42917064, "question_id": 42916361, "link": "https://stackoverflow.com/questions/42916361/combine-a-compile-time-integer-type-with-a-dynamic-type/42917064#42917064", "title": "Combine a compile-time integer type with a dynamic type", "body": "<p><a href=\"https://github.com/rust-lang/rust/pull/26870\" rel=\"nofollow noreferrer\">Specifying a default for type parameters</a> has, sadly, still not been stabilized, so you'll need to use a nightly compiler in order for the following to work.</p>\n\n<p>If you're playing with defaulted type parameters, be aware that the compiler will first try to infer the types based on usage, and only fall back to the default when there's not enough information. For example, if you were to pass a vector declared with an explicit <code>N</code> and a vector declared without <code>N</code> to <code>add</code>, the compiler would infer that the second vector's <code>N</code> must be the same as the first vector's <code>N</code>, instead of selecting <code>Dynamic</code> for the second vector's <code>N</code>. Therefore, if the sizes don't match, the runtime error would happen when constructing the second vector, not when adding them together.</p>\n\n<hr>\n\n<p>It's possible to define multiple <code>impl</code> blocks for different sets of type parameters. For example, we can have an implementation of <code>new</code> when <code>N: Unsigned</code> and another when <code>N</code> is <code>Dynamic</code>.</p>\n\n<pre><code>extern crate typenum;\n\nuse std::marker::PhantomData;\n\nuse typenum::Unsigned;\n\nstruct Dynamic;\n\nstruct Vector&lt;E, N&gt; {\n    vec: Vec&lt;E&gt;,\n    _marker: PhantomData&lt;N&gt;,\n}\n\nimpl&lt;E, N: Unsigned&gt; Vector&lt;E, N&gt; {\n    fn new(vec: Vec&lt;E&gt;) -&gt; Self {\n        assert!(N::to_usize() == vec.len());\n        Vector {\n            vec: vec,\n            _marker: PhantomData,\n        }\n    }\n}\n\nimpl&lt;E&gt; Vector&lt;E, Dynamic&gt; {\n    fn new(vec: Vec&lt;E&gt;) -&gt; Self {\n        Vector {\n            vec: vec,\n            _marker: PhantomData,\n        }\n    }\n}\n</code></pre>\n\n<p>However, this approach with two <code>impl</code>s providing a <code>new</code> method doesn't work well with defaulted type parameters; the compiler will complain about the ambiguity instead of inferring the default when calling <code>new</code>. So instead, we need to define a trait that unifies <code>N: Unsigned</code> and <code>Dynamic</code>. This trait will contain a method to help us perform the assert in <code>new</code> correctly depending on whether the size is fixed or dynamic.</p>\n\n<pre><code>#![feature(default_type_parameter_fallback)]\n\nuse std::marker::PhantomData;\nuse std::ops::Add;\n\nuse typenum::Unsigned;\n\nstruct Dynamic;\n\ntrait FixedOrDynamic {\n    fn is_valid_size(value: usize) -&gt; bool;\n}\n\nimpl&lt;T: Unsigned&gt; FixedOrDynamic for T {\n    fn is_valid_size(value: usize) -&gt; bool {\n        Self::to_usize() == value\n    }\n}\n\nimpl FixedOrDynamic for Dynamic {\n    fn is_valid_size(_value: usize) -&gt; bool {\n        true\n    }\n}\n\nstruct Vector&lt;E, N: FixedOrDynamic = Dynamic&gt; {\n    vec: Vec&lt;E&gt;,\n    _marker: PhantomData&lt;N&gt;,\n}\n\nimpl&lt;E, N: FixedOrDynamic&gt; Vector&lt;E, N&gt; {\n    fn new(vec: Vec&lt;E&gt;) -&gt; Self {\n        assert!(N::is_valid_size(vec.len()));\n        Vector {\n            vec: vec,\n            _marker: PhantomData,\n        }\n    }\n}\n</code></pre>\n\n<hr>\n\n<p>In order to support <code>add</code> receiving a fixed and a dynamic vector, but not fixed vectors of different lengths, we need to introduce another trait. For each <code>N: Unsigned</code>, only <code>N</code> itself and <code>Dynamic</code> will implement the trait.</p>\n\n<pre><code>trait SameOrDynamic&lt;N&gt; {\n    type Output: FixedOrDynamic;\n\n    fn length_check(left_len: usize, right_len: usize) -&gt; bool;\n}\n\nimpl&lt;N: Unsigned&gt; SameOrDynamic&lt;N&gt; for N {\n    type Output = N;\n\n    fn length_check(_left_len: usize, _right_len: usize) -&gt; bool {\n        true\n    }\n}\n\nimpl&lt;N: Unsigned&gt; SameOrDynamic&lt;Dynamic&gt; for N {\n    type Output = N;\n\n    fn length_check(left_len: usize, right_len: usize) -&gt; bool {\n        left_len == right_len\n    }\n}\n\nimpl&lt;N: Unsigned&gt; SameOrDynamic&lt;N&gt; for Dynamic {\n    type Output = N;\n\n    fn length_check(left_len: usize, right_len: usize) -&gt; bool {\n        left_len == right_len\n    }\n}\n\nimpl SameOrDynamic&lt;Dynamic&gt; for Dynamic {\n    type Output = Dynamic;\n\n    fn length_check(left_len: usize, right_len: usize) -&gt; bool {\n        left_len == right_len\n    }\n}\n\nfn add&lt;E, N1, N2&gt;(vector1: &amp;Vector&lt;E, N1&gt;, vector2: &amp;Vector&lt;E, N2&gt;) -&gt; Vector&lt;E, N2::Output&gt;\n    where N1: FixedOrDynamic,\n          N2: FixedOrDynamic + SameOrDynamic&lt;N1&gt;,\n{\n    assert!(N2::length_check(vector1.vec.len(), vector2.vec.len()));\n    unimplemented!()\n}\n</code></pre>\n\n<p>If you don't actually need to support calling <code>add</code> with a fixed and a dynamic vector, then you can simplify this drastically:</p>\n\n<pre><code>fn add&lt;E, N: FixedOrDynamic&gt;(vector1: &amp;Vector&lt;E, N&gt;, vector2: &amp;Vector&lt;E, N&gt;) -&gt; Vector&lt;E, N&gt; {\n    // TODO: perform length check when N is Dynamic\n    unimplemented!()\n}\n</code></pre>\n"}], "owner": {"reputation": 5777, "user_id": 1485877, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/tkdN8.jpg?s=128&g=1", "display_name": "drhagen", "link": "https://stackoverflow.com/users/1485877/drhagen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 284, "favorite_count": 0, "accepted_answer_id": 42917064, "answer_count": 2, "score": 2, "last_activity_date": 1490062565, "creation_date": 1490055941, "question_id": 42916361, "link": "https://stackoverflow.com/questions/42916361/combine-a-compile-time-integer-type-with-a-dynamic-type", "title": "Combine a compile-time integer type with a dynamic type", "body": "<p>I am using <code>typenum</code> in Rust to add compile-time dimension checking to some types I am working with. I would like to combine it with a dynamic type so that an expression with mismatched dimensions would fail at compile time if given two incompatible <code>typenum</code> types, but compile fine and fail at runtime if one or more of the types is <code>Dynamic</code>. Is this possible in Rust? If so, how would I combine Unsigned and Dynamic?</p>\n\n<pre><code>extern crate typenum;\nuse typenum::Unsigned;\nuse std::marker::PhantomData;\n\nstruct Dynamic {}\n\n// N needs to be some kind of union type of Unsigned and Dynamic, but don't know how\nstruct Vector&lt;E, N: Unsigned&gt; {\n    vec: Vec&lt;E&gt;,\n    _marker: PhantomData&lt;(N)&gt;,\n}\n\nimpl&lt;E, N: Unsigned&gt; Vector&lt;E, N&gt; {\n    fn new(vec: Vec&lt;E&gt;) -&gt; Self {\n        assert!(N::to_usize() == vec.len());\n        Vector {\n            vec: vec,\n            _marker: PhantomData,\n        }\n    }\n}\n\nfn add&lt;E, N: Unsigned&gt;(vector1: &amp;Vector&lt;E, N&gt;, vector2: &amp;Vector&lt;E, N&gt;) {\n    print!(\"Implement addition here\")\n}\n\nfn main() {\n    use typenum::{U3, U4};\n    let vector3 = Vector::&lt;usize, U3&gt;::new(vec![1, 2, 3]);\n    let vector4 = Vector::&lt;usize, U4&gt;::new(vec![1, 2, 3, 4]);\n    // Can I make the default be Dynamic here?\n    let vector4_dynamic = Vector::new(vec![1, 2, 3, 4]);\n\n    add(&amp;vector3, &amp;vector4); // should fail to compile\n    add(&amp;vector3, &amp;vector4_dynamic); // should fail at runtime\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1490049584, "post_id": 42914762, "comment_id": 72929595, "body": "In this case, there&#39;s no difference between a closure and a function."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1490049736, "post_id": 42914762, "comment_id": 72929655, "body": "Additionally, it&#39;s more idiomatic to accept a generic <code>F</code> where <code>F: Fn(&amp;str)</code>, not the trait object <code>&amp;Fn(&amp;str)</code>."}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1490050442, "post_id": 42914762, "comment_id": 72929908, "body": "While the questions are superficially similar, the answers to the other question do not really apply here. In this case the OP is asking how to do something that actually makes sense, they&#39;re just approaching it wrong. Specifically the OP needs to restructure the code so that the clsoure doesn&#39;t directly return a reference. Instead, the closure should return an object that manages the lifetime of the resource, <i>and</i> provides a method to get to the reference. To make <code>test</code> usable with different resources, the closure should likely return a boxed trait object. (See my answer for details.)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 1, "creation_date": 1490050727, "post_id": 42914762, "comment_id": 72930019, "body": "@user4815162342 OP specifically said to disregard the fact that they were going to use <code>mmap</code>, so I did. If you think that this question is actually about returning a boxed trait object, we can change the question to clarify, but that will invalidate the <i>other</i> existing answer. Which of the 3 wrongs do you feel is the lesser sin?"}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1490051492, "post_id": 42914762, "comment_id": 72930303, "body": "@Shepmaster It is my understanding that the OP wants to first test other aspects of the design without immediately implementing the full <code>mmap</code> logic. On the other hand, the <i>interface</i> (the signature of the closure) should be flexible enough to add support for <code>mmap</code> later - which is why the OP wanted to return <code>&amp;[u8]</code>. But that is my understanding, and I certainly wouldn&#39;t change the question myself - it is up to the OP to do so if they choose to after reading these comments. It is perfectly fine for both answers to remain, each one valid in context of its understanding of the question."}, {"owner": {"reputation": 349, "user_id": 4188769, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/8f3afb7939f5281251ccf59f5935f0a5?s=128&d=identicon&r=PG&f=1", "display_name": "Jonas Felber", "link": "https://stackoverflow.com/users/4188769/jonas-felber"}, "reply_to_user": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1490140946, "post_id": 42914762, "comment_id": 72977525, "body": "Thank you very much for your help! I am sorry for not being more precise, but @user4815162342 came very close to what I wanted to do while explaining what I did wrong (conceptually) so I will not edit my question."}], "answers": [{"tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": false, "score": 2, "last_activity_date": 1490048302, "last_edit_date": 1490048302, "creation_date": 1490047848, "answer_id": 42914909, "question_id": 42914762, "link": "https://stackoverflow.com/questions/42914762/return-a-reference-from-a-callback/42914909#42914909", "title": "Return a reference from a callback", "body": "<p>You do not want to return a reference here because your <code>data</code> only exists inside the closure. Unless you wish to change the callback API to something that modifies a buffer by mutable reference, a simpler (and still idiomatic) approach would be returning the vector.</p>\n\n<pre><code>test(&amp;|path| {\n    if false {\n        let mut data: Vec&lt;u8&gt; = Vec::new();\n        let mut file = File::open(path).unwrap();\n        file.read_to_end(&amp;mut data).unwrap();\n        return Some(data);\n    }\n    None\n});\n</code></pre>\n\n<p>Then, modify the consumer function <code>test</code> to return the vector, thus retaining ownership. If you need to, you can obtain a reference to the data inside the vector by calling <code>as_slice</code>.</p>\n\n<pre><code>pub fn test&lt;'a&gt;(loader: &amp;Fn(&amp;str) -&gt; Option&lt;Vec&lt;u8&gt;&gt;) {}\n</code></pre>\n\n<blockquote>\n  <p>I want to use the return type &amp;[u8] because I am thinking about using mmap and the implementation that looked promising exposed &amp;[u8] to access the data</p>\n</blockquote>\n\n<p>You probably mean that you would like your functions to return <code>&amp;[u8]</code>. Even in this case, the data has to be owned somewhere else, and this is something that you have to handle yourself. This could involve having some kind of <code>ResourceHandler</code> struct that would provide slices that live as long as the resource handler.</p>\n\n<blockquote>\n  <p>But this is overkill for now, so I want to focus on the callback to read and return the contents of the file that is passed onto it.</p>\n</blockquote>\n\n<p>In that case, you might be fine with returning a <code>Vec</code> for the time being. :)</p>\n"}, {"tags": [], "owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "is_accepted": true, "score": 3, "last_activity_date": 1490167806, "last_edit_date": 1490167806, "creation_date": 1490049884, "answer_id": 42915325, "question_id": 42914762, "link": "https://stackoverflow.com/questions/42914762/return-a-reference-from-a-callback/42915325#42915325", "title": "Return a reference from a callback", "body": "<p>It is incorrect to return reference to stack-allocated data, as it will immediately outlive the object it refers to. The only kind of references that can always be returned, no questions asked, are those whose lifetime is <code>'static</code> - which Rust will carefully check. References to freshly allocated data are definitely not <code>'static</code>.</p>\n\n<p>Fortunately, there is a way around it: it is safe to return a reference when Rust can prove that the reference outlives the data. For example:</p>\n\n<pre><code>// Memory backed by a Vec\nstruct VecMemory {\n    data: Vec&lt;u8&gt;\n}\n\nimpl VecMemory {\n    fn as_slice(&amp;self) -&gt; &amp;[u8] {\n        &amp;self.data\n    }\n}\n</code></pre>\n\n<p><code>as_slice()</code> may return a reference because that reference provably outlives the object it refers to. If we undo the lifetime elision, the signature of <code>as_slice()</code> would be:</p>\n\n<pre><code>fn as_slice&lt;'a&gt;(&amp;'a self) -&gt; &amp;'a [u8]\n</code></pre>\n\n<p>The next question is what should the closure return? If it returned a <code>Vec</code>, as suggested by @E_net4, or a <code>VecMemory</code> (which again just holds a <code>Vec</code>), then the use of a vector as the underlying storage would be baked into the interface. To support different storage types, the closure should return what other languages would call an <em>interface</em>. The closest Rust equivalent is a trait object, which is specified in return context as <code>Box&lt;SomeTrait&gt;</code>.</p>\n\n<p>With this design, the closure effectively heap-allocates a resource management object and returns a two-pointer-sized box that provides ownership and a uniform interface to the heap-allocated value. The user of the box is communicating with the implementation only through the box, which uses an internal vtable to talk to the implementation. (Pointer to the vtable is the reason why the <code>Box</code> itself takes up two pointers, not one.) In other words, return value of the closure is such that it <em>erases</em> the concrete type returned.</p>\n\n<pre><code>use std::fs::File;\nuse std::io::prelude::*;\n\ntrait Memory {\n    fn as_slice(&amp;self) -&gt; &amp;[u8];\n    // a real-life trait would likely also define\n    // as_slice(&amp;mut self) -&gt; &amp;mut [u8]\n}\n\n// Memory backed by a Vec\nstruct VecMemory {\n    data: Vec&lt;u8&gt;\n}\n\nimpl Memory for VecMemory {\n    fn as_slice(&amp;self) -&gt; &amp;[u8] {\n        &amp;self.data\n    }\n}\n\nfn main() {\n    test(&amp;|path| {\n        if false {\n            let mut data: Vec&lt;u8&gt; = Vec::new();\n            let mut file = File::open(path).unwrap();\n            file.read_to_end(&amp;mut data).unwrap();\n            return Some(Box::new(VecMemory { data: data }));\n        }\n        None\n    });\n}\n\n// loader returns a boxed trait object whose underlying memory\n// can be accessed as long as the box is alive.\nfn test&lt;'a&gt;(_loader: &amp;Fn(&amp;str) -&gt; Option&lt;Box&lt;Memory&gt;&gt;) {}\n</code></pre>\n\n<p>To use <code>mmap</code> for the storage, one would write a different <code>Memory</code> implementation, say <code>Mmap</code>. This one would store the raw pointer and the size of the memory returned by <code>mmap()</code>. It would call <code>mmap()</code> in <code>new()</code> and <code>munmap()</code> in <code>Drop::drop</code>. Most importantly, <code>Mmap</code> would implement <code>Memory</code> using an unsafe block to construct a slice from the stored pointer and length. Again, this is safe because lifetime of the reference will be tied to the lifetime of <code>Mmap</code>.</p>\n"}], "owner": {"reputation": 349, "user_id": 4188769, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/8f3afb7939f5281251ccf59f5935f0a5?s=128&d=identicon&r=PG&f=1", "display_name": "Jonas Felber", "link": "https://stackoverflow.com/users/4188769/jonas-felber"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 722, "favorite_count": 0, "closed_date": 1490049565, "accepted_answer_id": 42915325, "answer_count": 2, "score": 0, "last_activity_date": 1490167806, "creation_date": 1490047181, "last_edit_date": 1490049660, "question_id": 42914762, "link": "https://stackoverflow.com/questions/42914762/return-a-reference-from-a-callback", "closed_reason": "Duplicate", "title": "Return a reference from a callback", "body": "<p>I am trying to return a reference to a data array from inside a callback. The snippet below is not possible because of lifetimes, but I added it anyway to give a better context.</p>\n\n<p>I want to implement some kind of virtual filesystem. I want to use the return type <code>&amp;[u8]</code> because I am thinking about using <code>mmap</code> and the implementation that looked promising exposed <code>&amp;[u8]</code> to access the data.</p>\n\n<p>This is overkill for now, so I want to focus on the callback to read and return the contents of the file that is passed onto it.</p>\n\n<p>What would be an idiomatic way of doing this?</p>\n\n<pre><code>use std::fs::File;\nuse std::io::prelude::*;\n\nfn main() {\n    test(&amp;|path| {\n        if false {\n            let mut data: Vec&lt;u8&gt; = Vec::new();\n            let mut file = File::open(path).unwrap();\n            file.read_to_end(&amp;mut data).unwrap();\n            return Some(&amp;data);\n        }\n        None\n    });\n}\n\n// loads various files. I do not care about them anymore once this function returns\npub fn test&lt;'a&gt;(loader: &amp;Fn(&amp;str) -&gt; Option&lt;&amp;'a [u8]&gt;) {}\n</code></pre>\n"}, {"tags": ["filesystems", "rust", "fuse"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1490053548, "creation_date": 1490053548, "answer_id": 42916002, "question_id": 42912688, "link": "https://stackoverflow.com/questions/42912688/how-to-get-uid-and-gid-in-rust-fuse/42916002#42916002", "title": "How to get UID and GID in rust-fuse?", "body": "<p>Version 0.3.0 of the fuse crate <a href=\"https://docs.rs/fuse/0.3.0/fuse/struct.Request.html\" rel=\"nofollow noreferrer\">documents the <code>Request</code> struct</a> as having <a href=\"https://docs.rs/fuse/0.3.0/fuse/struct.Request.html#method.uid\" rel=\"nofollow noreferrer\"><code>uid</code></a> and <a href=\"https://docs.rs/fuse/0.3.0/fuse/struct.Request.html#method.gid\" rel=\"nofollow noreferrer\"><code>gid</code></a> methods.</p>\n"}], "owner": {"reputation": 4375, "user_id": 4756304, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/rKJAb.png?s=128&g=1", "display_name": "boehm_s", "link": "https://stackoverflow.com/users/4756304/boehm-s"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 338, "favorite_count": 0, "accepted_answer_id": 42916002, "answer_count": 1, "score": 1, "last_activity_date": 1490053548, "creation_date": 1490039254, "last_edit_date": 1490039754, "question_id": 42912688, "link": "https://stackoverflow.com/questions/42912688/how-to-get-uid-and-gid-in-rust-fuse", "title": "How to get UID and GID in rust-fuse?", "body": "<p>I'm using <a href=\"https://crates.io/crates/fuse\" rel=\"nofollow noreferrer\">rust-fuse</a> to implement my own file system, and I need to get the UID and GID of the user who performs operations on the file system. \nI know that there is a <code>fuse_context</code> structure in the C libfuse, but I couldn't find it in rust-fuse.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 325758, "user_id": 415784, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/2WX9Z.jpg?s=128&g=1", "display_name": "Nawaz", "link": "https://stackoverflow.com/users/415784/nawaz"}, "edited": false, "score": 0, "creation_date": 1544445863, "post_id": 42910814, "comment_id": 94266386, "body": "What is <i>destructor</i> in Rust? Did you mean <code>drop</code>?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 325758, "user_id": 415784, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/2WX9Z.jpg?s=128&g=1", "display_name": "Nawaz", "link": "https://stackoverflow.com/users/415784/nawaz"}, "edited": false, "score": 1, "creation_date": 1544448387, "post_id": 42910814, "comment_id": 94267757, "body": "@Nawaz <a href=\"https://stackoverflow.com/q/53324276/155423\">there&#39;s no material difference</a>.  <code>drop</code> is just the name of Rust&#39;s destructor function."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 30, "last_activity_date": 1544448472, "last_edit_date": 1544448472, "creation_date": 1490032915, "answer_id": 42910814, "question_id": 42910662, "link": "https://stackoverflow.com/questions/42910662/is-it-possible-in-rust-to-delete-an-object-before-the-end-of-scope/42910814#42910814", "title": "Is it possible in Rust to delete an object before the end of scope?", "body": "<blockquote>\n  <p>Is it possible in Rust to delete an object before the end of scope?</p>\n</blockquote>\n\n<p>Yes.</p>\n\n<blockquote>\n  <p>Is it possible to call the destructor of an object explicitly in Rust?</p>\n</blockquote>\n\n<p>No.</p>\n\n<p>To clarify, you can use <a href=\"https://doc.rust-lang.org/std/mem/fn.drop.html\" rel=\"noreferrer\"><code>std::mem::drop</code></a> to transfer ownership of a variable, which causes it to go out of scope:</p>\n\n<pre><code>struct Noisy;\n\nimpl Drop for Noisy {\n    fn drop(&amp;mut self) {\n        println!(\"Dropping Noisy!\");\n    }\n}\n\nfn main() {\n    let a = Noisy;\n    let b = Noisy;\n\n    println!(\"1\");\n\n    drop(b);\n\n    println!(\"2\");\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>1\nDropping Noisy!\n2\nDropping Noisy!\n</code></pre>\n\n<p>However, you are forbidden from calling the destructor (the implementation of the <code>Drop</code> trait) yourself. Doing so would lead to double free situations as the compiler will still insert the automatic call to the the <code>Drop</code> trait.</p>\n\n<hr>\n\n<p>Amusing side note \u2014 the implementation of <code>drop</code> is quite elegant:</p>\n\n<pre><code>pub fn drop&lt;T&gt;(_x: T) { }\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1490033017, "post_id": 42910819, "comment_id": 72920799, "body": "<code>drop</code> is in the prelude; no need to qualify it."}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 5, "creation_date": 1490062038, "post_id": 42910819, "comment_id": 72933160, "body": "@Shepmaster: <a href=\"http://stackoverflow.com/a/36169663/234590\">I remember you pointing out a rare case of <code>drop</code> being useful.</a> :)"}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 16, "last_activity_date": 1490033036, "last_edit_date": 1490033036, "creation_date": 1490032932, "answer_id": 42910819, "question_id": 42910662, "link": "https://stackoverflow.com/questions/42910662/is-it-possible-in-rust-to-delete-an-object-before-the-end-of-scope/42910819#42910819", "title": "Is it possible in Rust to delete an object before the end of scope?", "body": "<p>The official answer is to call <a href=\"https://doc.rust-lang.org/std/mem/fn.drop.html\" rel=\"noreferrer\"><code>mem::drop</code></a>:</p>\n\n<pre><code>fn do_the_thing() {\n    let s = \"Hello, World\".to_string();\n    println!(\"{}\", s);\n\n    drop(s);\n\n    println!(\"{}\", 3);\n}\n</code></pre>\n\n<p>However, note that <code>mem::drop</code> is nothing special. Here is <a href=\"https://doc.rust-lang.org/src/core/mem.rs.html#614\" rel=\"noreferrer\">the definition in full</a>:</p>\n\n<pre><code>pub fn drop&lt;T&gt;(_x: T) { }\n</code></pre>\n\n<p>That's all.</p>\n\n<p>Any function taking <em>ownership</em> of a parameter will cause this parameter to be dropped at the end of said function. From the point of view of the caller, it's an early drop :)</p>\n"}], "owner": {"reputation": 17899, "user_id": 1018562, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/ca58bb22c2bf586eb0c11e94d79d031e?s=128&d=identicon&r=PG", "display_name": "pythonic", "link": "https://stackoverflow.com/users/1018562/pythonic"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 7398, "favorite_count": 5, "accepted_answer_id": 42910814, "answer_count": 2, "score": 18, "last_activity_date": 1544448472, "creation_date": 1490032467, "last_edit_date": 1490052696, "question_id": 42910662, "link": "https://stackoverflow.com/questions/42910662/is-it-possible-in-rust-to-delete-an-object-before-the-end-of-scope", "title": "Is it possible in Rust to delete an object before the end of scope?", "body": "<p>From what I understand, the compiler automatically generates code to call the destructor to delete an object when it's no longer needed, at the end of scope.</p>\n\n<p>In some situations, it is beneficial to delete an object as soon as it's no longer needed, instead of waiting for it to go out of scope. Is it possible to call the destructor of an object explicitly in Rust?</p>\n"}, {"tags": ["rust", "nanomsg"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1490036785, "post_id": 42906463, "comment_id": 72923033, "body": "I can reproduce this. To be honest, it could really be a problem with the actual example, so I filed an issue: <a href=\"https://github.com/thehydroimpulse/nanomsg.rs/issues/173\" rel=\"nofollow noreferrer\">github.com/thehydroimpulse/nanomsg.rs/issues/173</a>"}], "answers": [{"tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 5, "last_activity_date": 1490050273, "last_edit_date": 1490050273, "creation_date": 1490046638, "answer_id": 42914595, "question_id": 42906463, "link": "https://stackoverflow.com/questions/42906463/example-of-nanomsg-crate-does-not-work/42914595#42914595", "title": "Example of nanomsg crate does not work", "body": "<p>It was an issue with the server code, which has already been fixed in the master branch (<a href=\"https://github.com/thehydroimpulse/nanomsg.rs/issues/173\" rel=\"nofollow noreferrer\">#173</a>). Here's the faulty snippet (<a href=\"https://github.com/blabaere/nanomsg.rs/blob/a9d46929119ce0dd437caf4e651b4f5d273eae50/examples/pubsub.rs#L50\" rel=\"nofollow noreferrer\">from repo</a>):</p>\n\n<pre><code>let msg = format!(\"{:?} #{}\", topic,  count);\nmatch socket.write_all(msg.as_bytes()) {\n    Ok(..) =&gt; println!(\"Published '{}'.\", msg),\n    Err(err) =&gt; {\n        println!(\"Server failed to publish '{}'.\", err);\n        break\n    }\n}\n</code></pre>\n\n<p>The published message was built using the <code>format!</code> macro, which was improperly pretty-printing the topic as an array of bytes, rather than a slice of text. A different topic identifier led to no subscribers receiving the message.</p>\n\n<p>The example was fixed <a href=\"https://github.com/thehydroimpulse/nanomsg.rs/blob/6fe241d9551c4f67e54d0df67c4d4d9f1da53f74/examples/pubsub.rs#L51-L55\" rel=\"nofollow noreferrer\">here</a> by the current maintainer. As an ending note, users of this API have to keep in mind that the first bytes of a publish message always refer to the subscription topic.</p>\n"}], "owner": {"reputation": 111, "user_id": 7679205, "user_type": "registered", "accept_rate": 50, "profile_image": "https://graph.facebook.com/1785230388414883/picture?type=large", "display_name": "Atsuki Takahashi", "link": "https://stackoverflow.com/users/7679205/atsuki-takahashi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 192, "favorite_count": 0, "accepted_answer_id": 42914595, "answer_count": 1, "score": 3, "last_activity_date": 1490050273, "creation_date": 1490020729, "last_edit_date": 1490029952, "question_id": 42906463, "link": "https://stackoverflow.com/questions/42906463/example-of-nanomsg-crate-does-not-work", "title": "Example of nanomsg crate does not work", "body": "<p>I tried the Rust nanomsg  <a href=\"https://github.com/thehydroimpulse/nanomsg.rs/blob/master/examples/pubsub.rs\" rel=\"nofollow noreferrer\">pubsub example</a>, but it does not work.</p>\n\n<p>I did each of these operations in separate console windows: </p>\n\n<ol>\n<li><p><code>cargo run --example pubsub -- device hoge</code></p>\n\n<p>It shows</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Subscribed to '[104, 111, 103, 101]'.\nDevice is ready.\n</code></pre></li>\n<li><p><code>cargo run --example pubsub -- client hoge</code></p>\n\n<p>It shows</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Subscribed to '[104, 111, 103, 101]'.\n</code></pre></li>\n<li><p><code>cargo run --example pubsub -- server hoge</code></p>\n\n<p>It shows</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Server is ready.\nPublished '[104, 111, 103, 101] #1'.\nPublished '[104, 111, 103, 101] #2'.\nPublished '[104, 111, 103, 101] #3'.\n...\n</code></pre></li>\n</ol>\n\n<p>All three commands kept running, none of them exited. I expected console 2 to show:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Subscribed to '[104, 111, 103, 101]'.\nRecv '[104, 111, 103, 101] #1'.\nRecv '[104, 111, 103, 101] #2'.\nRecv '[104, 111, 103, 101] #3'.\n...\n</code></pre>\n\n<p>But nothing was displayed.</p>\n\n<p>My environment is</p>\n\n<ul>\n<li>Max OS X Sierra</li>\n<li>nanomsg 1.0.0</li>\n<li>rustc 1.16.0</li>\n</ul>\n"}, {"tags": ["enums", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1490021403, "post_id": 42906376, "comment_id": 72912859, "body": "I wrote a procedural macro to automatically generate these accessors for me (<code>is_foo</code>, <code>as_foo</code>, <code>into_foo</code>), only for the case of a single member variable, but it still generates the same code that you&#39;ve shown."}], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 4, "creation_date": 1490023558, "post_id": 42907107, "comment_id": 72914524, "body": "I am always uncomfortable with macros hiding control-flow. Why not use the macro to generate the getters instead?"}], "tags": [], "owner": {"reputation": 11117, "user_id": 1554020, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/49118fbd7e64a00bc99b19d41e5e28e0?s=128&d=identicon&r=PG", "display_name": "yuri kilochek", "link": "https://stackoverflow.com/users/1554020/yuri-kilochek"}, "is_accepted": true, "score": 1, "last_activity_date": 1490022844, "last_edit_date": 1490022844, "creation_date": 1490022286, "answer_id": 42907107, "question_id": 42906376, "link": "https://stackoverflow.com/questions/42906376/what-is-the-idiomatic-way-of-mapping-a-single-enum-variant-into-a-result-in-rust/42907107#42907107", "title": "What is the idiomatic way of mapping a single enum variant into a Result in Rust?", "body": "<p>You can do it with a simple accessor macro:</p>\n\n<pre><code>macro_rules! try_unpack {\n    ($variant:path, $value:expr) =&gt; {\n        if let $variant(x) = $value {\n            x\n        } else {\n            return Err(MismatchError)\n        }   \n    }\n}\n\nstruct SomeType;\nstruct SomethingElse;\nstruct YetAnotherThing;\n\nenum MyEnum {\n    Foo(SomeType),\n    Bar(SomethingElse),\n    Baz(YetAnotherThing)\n}\n\nstruct MismatchError;\n\nfn test(x: MyEnum) -&gt; Result&lt;i32, MismatchError&gt; {\n    let y: SomethingElse = try_unpack!(MyEnum::Bar, x);\n    return 42;\n}\n</code></pre>\n"}], "owner": {"reputation": 1517, "user_id": 275984, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/620339c024f25dbc2597a9d33c6eef54?s=128&d=identicon&r=PG", "display_name": "b0fh", "link": "https://stackoverflow.com/users/275984/b0fh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1059, "favorite_count": 0, "accepted_answer_id": 42907107, "answer_count": 1, "score": 2, "last_activity_date": 1490022844, "creation_date": 1490020545, "last_edit_date": 1490021406, "question_id": 42906376, "link": "https://stackoverflow.com/questions/42906376/what-is-the-idiomatic-way-of-mapping-a-single-enum-variant-into-a-result-in-rust", "title": "What is the idiomatic way of mapping a single enum variant into a Result in Rust?", "body": "<p>I have an enum type defined as</p>\n\n<pre><code>enum MyEnum {\n    Foo(SomeType),\n    Bar(SomethingElse),\n    Baz(YetAnotherThing),\n    ...\n}\n</code></pre>\n\n<p>And I often need to match on a single case, within the context of a <code>Result</code>-returning function. More specifically, I write code like this:</p>\n\n<pre><code>impl MyEnum {\n    fn as_foo(&amp;self) -&gt; Result&lt;&amp;SomeType, Error&gt; {\n        if let MyEnum::Foo(x) = y {\n            Ok(&amp;x)\n        } else {\n            Err(MismatchError)\n        }\n    }\n\n    fn as_bar(&amp;self) -&gt; Result&lt;&amp;SomethingElse, Error&gt; {\n         ...\n    }\n\n    ...\n\n}\n</code></pre>\n\n<p>So that later I can do</p>\n\n<pre><code>let x = myenum.as_foo()?\n</code></pre>\n\n<p>instead of the more cumbersome</p>\n\n<pre><code>if let MyEnum::Foo(x) = myenum {\n    ...\n} else {\n    return Err(MismatchError);\n}\n</code></pre>\n\n<p>Surely there is a more efficient way to get that effect than by hand-writing a method for every possible variant ? Is there something in the language already, or should I research writing my own macro ? </p>\n\n<p>It's not clear to me how to handle cases where there is more than one field, or if there are named fields. The former probably through a tuple ? The latter I can always reduce by introducing intermediary structs.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1490020470, "post_id": 42904968, "comment_id": 72912153, "body": "<code>use self::b::c::Foo;</code> would work <i>outside</i> a function (at module scope)."}, {"owner": {"reputation": 20035, "user_id": 2971, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f3f6251940b41a2251e7a9f4b745a7f2?s=128&d=identicon&r=PG", "display_name": "Magnus Hoff", "link": "https://stackoverflow.com/users/2971/magnus-hoff"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1490020812, "post_id": 42904968, "comment_id": 72912419, "body": "It sure does. So I feel it shouldn&#39;t be too much to ask to achieve a similar thing in a nested scope, to avoid messing around in the module scope :/"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1490021014, "post_id": 42904968, "comment_id": 72912547, "body": "I am afraid that it may be that the use of <code>self</code> at module scope is special cased. Seeing as <code>self</code> is used for methods, not all nested scopes could benefit from it anyway... Not sure if this is solvable due to keyword reuse."}, {"owner": {"reputation": 20035, "user_id": 2971, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f3f6251940b41a2251e7a9f4b745a7f2?s=128&d=identicon&r=PG", "display_name": "Magnus Hoff", "link": "https://stackoverflow.com/users/2971/magnus-hoff"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1490021549, "post_id": 42904968, "comment_id": 72912986, "body": "Gah, that&#39;s not ideal. I have always found it confusing that <code>use</code> resolves names from ... some &quot;top level&quot; scope. Module? I would have expected the same rules for name resolution as in the rest of my code :/ And perhaps a leading <code>::</code> to get to the top level scope?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1490021706, "post_id": 42904968, "comment_id": 72913113, "body": "<code>use</code> resolves from crate level by default; you can use <code>self</code> and <code>super</code> to alter this behavior. The idea was, I think, that it makes reasoning about <code>use</code> non-local and eases transfer of code from module to another. I personally just find it confusing though &#175;_(\u30c4)_/&#175;"}], "answers": [{"comments": [{"owner": {"reputation": 20035, "user_id": 2971, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f3f6251940b41a2251e7a9f4b745a7f2?s=128&d=identicon&r=PG", "display_name": "Magnus Hoff", "link": "https://stackoverflow.com/users/2971/magnus-hoff"}, "edited": false, "score": 0, "creation_date": 1490017164, "post_id": 42905043, "comment_id": 72909807, "body": "Right, I&#39;m looking for <code>use</code>, so I can bring a trait into scope."}, {"owner": {"reputation": 20035, "user_id": 2971, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f3f6251940b41a2251e7a9f4b745a7f2?s=128&d=identicon&r=PG", "display_name": "Magnus Hoff", "link": "https://stackoverflow.com/users/2971/magnus-hoff"}, "edited": false, "score": 0, "creation_date": 1490017707, "post_id": 42905043, "comment_id": 72910199, "body": "So your answer is &quot;no&quot;, then? It is not possible to refer to a local name in a <code>use</code> declaration?"}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "reply_to_user": {"reputation": 20035, "user_id": 2971, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f3f6251940b41a2251e7a9f4b745a7f2?s=128&d=identicon&r=PG", "display_name": "Magnus Hoff", "link": "https://stackoverflow.com/users/2971/magnus-hoff"}, "edited": false, "score": 1, "creation_date": 1490017793, "post_id": 42905043, "comment_id": 72910260, "body": "Not that I know of (not in the exact way you are after), but maybe someone else knows a different way."}, {"owner": {"reputation": 20035, "user_id": 2971, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f3f6251940b41a2251e7a9f4b745a7f2?s=128&d=identicon&r=PG", "display_name": "Magnus Hoff", "link": "https://stackoverflow.com/users/2971/magnus-hoff"}, "edited": false, "score": 0, "creation_date": 1490020373, "post_id": 42905043, "comment_id": 72912080, "body": "See my question edit for elaboration on what exactly I meant by bringing a trait into scope. Thanks anyway :)"}], "tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": false, "score": 0, "last_activity_date": 1490017391, "last_edit_date": 1490017391, "creation_date": 1490016996, "answer_id": 42905043, "question_id": 42904968, "link": "https://stackoverflow.com/questions/42904968/using-a-local-name-in-a-use-declaration/42905043#42905043", "title": "Using a local name in a `use` declaration", "body": "<p>When you have already imported <code>a::b</code> and want to access a trait from <code>c</code>, you can do it in the following manner:</p>\n\n<pre><code>pub mod a {\n    pub mod b {\n        pub mod c {\n            pub trait Foo {}\n        }\n    }\n}\n\nfn main() {\n    use a::b;\n\n    struct Derp;\n\n    impl b::c::Foo for Derp {}\n}\n</code></pre>\n"}], "owner": {"reputation": 20035, "user_id": 2971, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f3f6251940b41a2251e7a9f4b745a7f2?s=128&d=identicon&r=PG", "display_name": "Magnus Hoff", "link": "https://stackoverflow.com/users/2971/magnus-hoff"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 75, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1490020315, "creation_date": 1490016761, "last_edit_date": 1490020315, "question_id": 42904968, "link": "https://stackoverflow.com/questions/42904968/using-a-local-name-in-a-use-declaration", "title": "Using a local name in a `use` declaration", "body": "<p>Is there any way to refer to a local name in a <code>use</code> declaration?</p>\n\n<pre><code>pub mod a {\n    pub mod b {\n        pub mod c {\n\n        }\n    }\n}\n\nfn main() {\n    use a::b;\n\n    use a::b::c; //&lt; This compiles, but is kind of roundabout,\n        // considering that I have already imported `b` into scope.\n\n    use b::c; //&lt; This fails to compile!\n\n    use self::b::c; //&lt; This also fails to compile\n}\n</code></pre>\n\n<p>I am currently working on a procedural macro that generates code, and in an effort to maintain hygiene, I want to add a <code>use</code> declaration for a locally imported crate (<code>extern crate blah</code> in that case). However, I can't seem to be able to refer to that name in the <code>use</code> declaration.</p>\n\n<p>Is it somehow possible? Where are the rules for <code>use</code> name resolution spelled out in detail?</p>\n\n<hr>\n\n<p>I put a <a href=\"https://play.rust-lang.org/?code=pub%20mod%20a%20%7B%0A%20%20%20%20pub%20mod%20b%20%7B%0A%20%20%20%20%20%20%20%20pub%20trait%20Trait%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20fn%20trait_fn(%26self)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%7D%0A%0Astruct%20Struct%3B%0A%0Aimpl%20a%3A%3Ab%3A%3ATrait%20for%20Struct%20%7B%0A%20%20%20%20fn%20trait_fn(%26self)%20%7B%7D%0A%7D%0A%0Afn%20main()%20%7B%0A%20%20%20%20use%20a%3A%3Ab%3B%0A%0A%20%20%20%20let%20s%20%3D%20Struct%3B%0A%0A%20%20%20%20use%20a%3A%3Ab%3A%3ATrait%3B%20%2F%2F%3C%20Avoid%20naming%20%60a%60%20here.%20%60self%3A%3Ab%3A%3ATrait%60%20would%20be%20perfect%2C%20but%20doesn%27t%20work%0A%20%20%20%20s.trait_fn()%3B%0A%7D%0A&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">more elaborate/motivating example</a> wherein I use <code>use</code> to bring a trait into scope up on the playground.</p>\n"}, {"tags": ["objective-c", "swift", "rust", "ffi"], "comments": [{"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 1, "creation_date": 1490012887, "post_id": 42903037, "comment_id": 72906628, "body": "You need to provide more information. This is a linker error, but you did not specify any information about how you are linking the swift project into the Rust project."}, {"owner": {"reputation": 2231, "user_id": 4465497, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/vibwv.png?s=128&g=1", "display_name": "XAMPPRocky", "link": "https://stackoverflow.com/users/4465497/xampprocky"}, "reply_to_user": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1490013699, "post_id": 42903037, "comment_id": 72907232, "body": "@ker Updated. I link by compiling the rust project as a staticlib."}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1490016114, "post_id": 42903037, "comment_id": 72909092, "body": "So I misunderstood... you are linking the Rust project in your swift project? How are you doing that in swift? Please post the full command line. It&#39;s very unclear to me what you are linking where and how the error occurs."}, {"owner": {"reputation": 2231, "user_id": 4465497, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/vibwv.png?s=128&g=1", "display_name": "XAMPPRocky", "link": "https://stackoverflow.com/users/4465497/xampprocky"}, "reply_to_user": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1490016832, "post_id": 42903037, "comment_id": 72909587, "body": "Full command line? This is in XCode I just created a Objective-C bridging header, and that works fine. You can read more how that works here: <a href=\"https://www.bignerdranch.com/blog/building-an-ios-app-in-rust-part-1/\" rel=\"nofollow noreferrer\">bignerdranch.com/blog/building-an-ios-app-in-rust-part-1</a>"}], "answers": [{"tags": [], "owner": {"reputation": 322, "user_id": 255309, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/873a567bdee611a5e4b9ad8b186a7390?s=128&d=identicon&r=PG", "display_name": "steveatinfincia", "link": "https://stackoverflow.com/users/255309/steveatinfincia"}, "is_accepted": true, "score": 7, "last_activity_date": 1490047035, "creation_date": 1490047035, "answer_id": 42914713, "question_id": 42903037, "link": "https://stackoverflow.com/questions/42903037/how-to-call-a-swift-function-in-rust/42914713#42914713", "title": "How to call a Swift function in Rust?", "body": "<p>The issue here is attempting to call a bare Swift function from Objective-C, which isn't supported.</p>\n\n<p>If you check the <code>Foo-Swift.h</code> header you'll find that the <code>foo()</code> function isn't present, which indicates that the symbol for it, <code>_foo</code>, won't be available at runtime either.</p>\n\n<p>The solution is to put the <code>foo()</code> function inside something that can be called from Objective-C, like a class deriving from NSObject:</p>\n\n<pre><code>class Foo: NSObject {\n    class func foo(byte: UInt8) -&gt; UInt8 {\n        return byte * 2\n    }\n}\n</code></pre>\n\n<p>Once you do that, you'll find the <code>Foo-Swift.h</code> header now has an interface for it:</p>\n\n<pre><code>@interface Foo : NSObject\n+ (uint8_t)fooWithByte:(uint8_t)byte;\n- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;\n@end\n</code></pre>\n\n<p>Since we know it's available from Objective-C now, we can call it like this:</p>\n\n<pre><code>uint8_t foo_bridge(uint8_t byte) {\n    return [Foo fooWithByte:byte];\n}\n</code></pre>\n"}], "owner": {"reputation": 2231, "user_id": 4465497, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/vibwv.png?s=128&g=1", "display_name": "XAMPPRocky", "link": "https://stackoverflow.com/users/4465497/xampprocky"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1162, "favorite_count": 0, "accepted_answer_id": 42914713, "answer_count": 1, "score": 5, "last_activity_date": 1490047035, "creation_date": 1490011205, "last_edit_date": 1490023251, "question_id": 42903037, "link": "https://stackoverflow.com/questions/42903037/how-to-call-a-swift-function-in-rust", "title": "How to call a Swift function in Rust?", "body": "<p>I have a function written in Swift that I want to call from Rust. I've tried exposing it through Objective-C, however I continue to get errors from <code>ld</code> saying it can't find <code>_foo</code>. The Rust project is linked to the Swift project by compiling the Rust project as a staticlib.</p>\n\n<h3>foo.h</h3>\n\n<pre class=\"lang-c prettyprint-override\"><code>#pragma once\n\n#include &lt;stdint.h&gt;\n\nuint8_t foo_bridge(uint8_t);\n</code></pre>\n\n<h3>foo.m</h3>\n\n<pre class=\"lang-c prettyprint-override\"><code>#import &lt;Foundation/Foundation.h&gt;\n#import &lt;Foo-Swift.h&gt;\n\nuint8_t foo_bridge(uint8_t byte) {\n    return foo(byte);\n}\n</code></pre>\n\n<h3>bar.swift</h3>\n\n<pre><code>public func foo(byte: UInt8) -&gt; UInt8 {\n    return byte * 2\n}\n</code></pre>\n\n<h3>src/lib.rs</h3>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern \"C\" {\n    pub fn foo_bridge(byte: u8) -&gt; u8;\n}\n</code></pre>\n\n<h3>Bar-Bridging-Header.h</h3>\n\n<pre class=\"lang-c prettyprint-override\"><code>#import \"foo.h\"\n</code></pre>\n\n<h3>Cargo.toml</h3>\n\n<pre><code>[package]\nname = \"foo\"\nversion = \"0.1.0\"\n\n[lib]\nname = \"foo\"\ncrate-type = [\"staticlib\"]\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1489997005, "post_id": 42896665, "comment_id": 72896957, "body": "When you say &quot;work with integers&quot; what should the return type be: an integer, or a floating point?"}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1490001653, "post_id": 42896665, "comment_id": 72899433, "body": "@MatthieuM. Judging by the chosen algorithm, I would say the OP would like something that always returns <code>f64</code>, but that also accepts integer inputs."}, {"owner": {"reputation": 1470, "user_id": 2075745, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/6f9a084d236381e1882c4e28edb5151f?s=128&d=identicon&r=PG", "display_name": "user25064", "link": "https://stackoverflow.com/users/2075745/user25064"}, "edited": false, "score": 0, "creation_date": 1490010953, "post_id": 42896665, "comment_id": 72905268, "body": "See also <code>num</code> crate which I think is underused. It defines <code>zero</code> and <code>one</code> traits that can be used for functions such as <code>sum</code> and <code>product</code> for example"}], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1490002868, "post_id": 42899613, "comment_id": 72900166, "body": "Note: in this example, I assume that <code>val2</code> uses a <code>Vec&lt;i32&gt;</code>, and <code>i32</code> has a lossless conversion to <code>f64</code> thus <code>Into&lt;f64&gt;</code> is implemented; however I don&#39;t think it would work for <code>i64</code>."}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1490003576, "post_id": 42899613, "comment_id": 72900594, "body": "@MatthieuM. Such behavior sounds like a reasonable default, although it might not be what the user expects. I&#39;ve now mentioned it in the answer explicitly."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1490003762, "post_id": 42899613, "comment_id": 72900715, "body": "It is reasonable, I just prefer &quot;full disclosures&quot;. Nice answer :)"}], "tags": [], "owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "is_accepted": true, "score": 14, "last_activity_date": 1590956888, "last_edit_date": 1590956888, "creation_date": 1490001184, "answer_id": 42899613, "question_id": 42896665, "link": "https://stackoverflow.com/questions/42896665/how-to-allow-function-to-work-with-integers-or-floats/42899613#42899613", "title": "How to allow function to work with integers or floats?", "body": "<p>The code in the question doesn't compile because <code>f64</code> does not have a <code>borrow()</code> method. Also, the slice it accepts doesn't need to be mutable since we are not changing it. Here is a modified version that compiles and works:</p>\n\n<pre><code>fn mean(arr: &amp;[f64]) -&gt; f64 {\n    let mut i = 0.0;\n    let mut mean = 0.0;\n    for &amp;num in arr {\n        i += 1.0;\n        mean += (num - mean) / i;\n    }\n    mean\n}\n</code></pre>\n\n<p>We specify <code>&amp;num</code> when looping over <code>arr</code>, so that the type of <code>num</code> is <code>f64</code> rather than a reference to <code>f64</code>. This snippet would work with both, but omitting it would break the generic version.</p>\n\n<p>For the same function to accept floats and integers alike, its parameter needs to be <em>generic</em>. Ideally we'd like it to accept any type that can be converted into <code>f64</code>, including <code>f32</code> or user-defined types that defin such a conversion. Something like this:</p>\n\n<pre><code>fn mean&lt;T&gt;(arr: &amp;[T]) -&gt; f64 {\n    let mut i = 0.0;\n    let mut mean = 0.0;\n    for &amp;num in arr {\n        i += 1.0;\n        mean += (num as f64 - mean) / i;\n    }\n    mean\n}\n</code></pre>\n\n<p>This doesn't compile because <code>x as f64</code> is not defined for <code>x</code> of an arbitry type. Instead, we need a trait bound on <code>T</code> that defines a way to convert <code>T</code> values to <code>f64</code>. This is exactly the purpose of the <a href=\"https://doc.rust-lang.org/core/convert/trait.Into.html\" rel=\"nofollow noreferrer\"><code>Into</code> trait</a>; every type <code>T</code> that implements <code>Into&lt;U&gt;</code> defines an <code>into(self) -&gt; U</code> method. Specifying <code>T: Into&lt;f64&gt;</code> as the trait bound gives us the <code>into()</code> method that returns an <code>f64</code>.</p>\n\n<p>We also need to request <code>T</code> to be <code>Copy</code>, to prevent reading the value from the array to \"consume\" the value, i.e. attempt moving it out of the array. Since primitive numbers such as integers implement <code>Copy</code>, this is ok for us. Working code then looks like this:</p>\n\n<pre><code>fn mean&lt;T: Into&lt;f64&gt; + Copy&gt;(arr: &amp;[T]) -&gt; f64 {\n    let mut i = 0.0;\n    let mut mean = 0.0;\n    for &amp;num in arr {\n        i += 1.0;\n        mean += (num.into() - mean) / i;\n    }\n    mean\n}\n\nfn main() {\n    let val1 = mean(&amp;vec![4.0, 5.0, 3.0, 2.0]);\n    let val2 = mean(&amp;vec![4, 5, 3, 2]);\n    println!(\"The means are {} and {}\", val1, val2);\n}\n</code></pre>\n\n<p>Note that this will only work for types that define <em>lossless</em> conversion to <code>f64</code>. Thus it will work for <code>u32</code>, <code>i32</code> (as in the above example) and smaller integer types, but it won't accept for example a vector of <code>i64</code> or <code>u64</code>, which cannot be losslessly converted to <code>f64</code>.</p>\n\n<p>Also note that this problem lends nicely to functional programming idioms such as <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.enumerate\" rel=\"nofollow noreferrer\"><code>enumerate()</code></a> and <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.enumerate\" rel=\"nofollow noreferrer\"><code>fold()</code></a>. Although outside the scope of this already longish answer, writing out such an implementation is an exercise <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a098f0555e455053c47efb5f3d88fb40\" rel=\"nofollow noreferrer\">hard to resist</a>.</p>\n"}], "owner": {"reputation": 613, "user_id": 6376924, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/8108cf5530c5687c887bb234aca2d93d?s=128&d=identicon&r=PG&f=1", "display_name": "atomsmasher", "link": "https://stackoverflow.com/users/6376924/atomsmasher"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1482, "favorite_count": 2, "accepted_answer_id": 42899613, "answer_count": 1, "score": 8, "last_activity_date": 1590956888, "creation_date": 1489989216, "last_edit_date": 1490021291, "question_id": 42896665, "link": "https://stackoverflow.com/questions/42896665/how-to-allow-function-to-work-with-integers-or-floats", "title": "How to allow function to work with integers or floats?", "body": "<p>I <a href=\"https://github.com/boxtown/statrs/blob/master/src/statistics/iter_statistics.rs#L58\" rel=\"noreferrer\">found a function to compute a mean</a> and have been playing with it. The code snippet below runs, but if the data inside the input changes from a float to an int an error occurs. How do I get this to work with floats and integers? </p>\n\n<pre><code>use std::borrow::Borrow;\n\nfn mean(arr: &amp;mut [f64]) -&gt; f64 {\n    let mut i = 0.0;\n    let mut mean = 0.0;\n    for num in arr {\n        i += 1.0;\n        mean += (num.borrow() - mean) / i;\n    }\n    mean\n}\n\nfn main() {\n    let val = mean(&amp;mut vec![4.0, 5.0, 3.0, 2.0]);\n    println!(\"The mean is {}\", val);\n}\n</code></pre>\n"}, {"tags": ["function", "rust"], "answers": [{"comments": [{"owner": {"reputation": 399, "user_id": 7421598, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/cXstR.jpg?s=128&g=1", "display_name": "Eva Red", "link": "https://stackoverflow.com/users/7421598/eva-red"}, "edited": false, "score": 0, "creation_date": 1489984423, "post_id": 42895726, "comment_id": 72892427, "body": "I wonder if I can write a recursion in closure? If not, is there any way that ff is not the argument, but it mentioned in function a, and the function a is able to have recursion?"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 399, "user_id": 7421598, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/cXstR.jpg?s=128&g=1", "display_name": "Eva Red", "link": "https://stackoverflow.com/users/7421598/eva-red"}, "edited": false, "score": 0, "creation_date": 1489984632, "post_id": 42895726, "comment_id": 72892475, "body": "@EvaRed As I said, functions don&#39;t capture.  <i>Period.</i>  As for recursion, closures don&#39;t have names, so can&#39;t self recurse.  Even if they could, I&#39;m not sure it would work with the implicit borrowing going on.  If you really, desperately <i>need</i> to do recursion with a closure, you can probably make it work (borrowing issues aside) using a trampoline, but that would be a different question."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 399, "user_id": 7421598, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/cXstR.jpg?s=128&g=1", "display_name": "Eva Red", "link": "https://stackoverflow.com/users/7421598/eva-red"}, "edited": false, "score": 1, "creation_date": 1489985328, "post_id": 42895726, "comment_id": 72892608, "body": "@EvaRed I should probably note that a trampoline approach would likely end up being <i>significantly</i> more convoluted that just using a function and passing <code>&amp;mut ff</code> explicitly."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1490704503, "post_id": 42895726, "comment_id": 73222728, "body": "Related: <a href=\"http://stackoverflow.com/q/16946888/155423\">Is it possible to make a recursive closure in Rust?</a>"}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 26, "last_activity_date": 1489983130, "last_edit_date": 1495535409, "creation_date": 1489983130, "answer_id": 42895726, "question_id": 42895596, "link": "https://stackoverflow.com/questions/42895596/unable-to-create-a-local-function-because-cant-capture-dynamic-environment-in/42895726#42895726", "title": "Unable to create a local function because &quot;can&#39;t capture dynamic environment in a fn item&quot;", "body": "<p>Functions in Rust don't capture variables from the surrounding environment, period.  A \"local\" function in Rust is really just a global function that isn't globally visible; it can't do anything more than any other global function.</p>\n\n<p>Instead, Rust has closures which are distinct from functions in that they <em>do</em> capture variables from their environment.  That would look like this:</p>\n\n<pre><code>fn h() -&gt; Vec&lt;i32&gt; {\n    let mut ff = vec![];\n    let mut a = || {\n        for i in 0..5{\n            ff.push(i)\n        }\n    };\n    a();\n    ff\n}\n</code></pre>\n\n<p>Three things to note with this.  Firstly, <code>append</code> is not what you want, you want <code>push</code>.  You should check the <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html\" rel=\"noreferrer\">documentation for <code>Vec</code></a> to see what's available and what methods do.  Secondly, you have to make <code>a</code> mutable because it's mutating something it captured (see also this <a href=\"https://stackoverflow.com/questions/30177395/when-does-a-closure-implement-fn-fnmut-and-fnonce#30232500\">answer about <code>Fn</code>, <code>FnMut</code>, and <code>FnOnce</code></a>).  Third, it won't compile:</p>\n\n<pre><code>error[E0505]: cannot move out of `ff` because it is borrowed\n --&gt; &lt;anon&gt;:9:9\n  |\n3 |         let mut a = || {\n  |                     -- borrow of `ff` occurs here\n...\n9 |         ff\n  |         ^^ move out of `ff` occurs here\n</code></pre>\n\n<p>The problem is that by creating the closure, you had to give it a mutable borrow to <code>ff</code>.  However, that borrow prevents anyone else from moving or otherwise messing with <code>ff</code>.  You need to shorten the length of time this borrow exists:</p>\n\n<pre><code>fn h() -&gt; Vec&lt;i32&gt; {\n    let mut ff = vec![];\n    {\n        let mut a = || {\n            for i in 0..5{\n                ff.push(i)\n            }\n        };\n        a();\n    }\n    ff\n}\n</code></pre>\n\n<p>This works, but is kinda clunky.  It's also unnecessary; the above could more cleanly be rewritten by just passing the borrow to <code>ff</code> into a local function explicitly:</p>\n\n<pre><code>fn h() -&gt; Vec&lt;i32&gt; {\n    let mut ff = vec![];\n    fn a(ff: &amp;mut Vec&lt;i32&gt;) {\n        for i in 0..5{\n            ff.push(i)\n        }\n    }\n    a(&amp;mut ff);\n    ff\n}\n</code></pre>\n\n<p>This last one is the best (if you're able to use it), because it keeps it clean when and why <code>ff</code> is being borrowed.</p>\n"}], "owner": {"reputation": 399, "user_id": 7421598, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/cXstR.jpg?s=128&g=1", "display_name": "Eva Red", "link": "https://stackoverflow.com/users/7421598/eva-red"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 6376, "favorite_count": 2, "accepted_answer_id": 42895726, "answer_count": 1, "score": 16, "last_activity_date": 1588481846, "creation_date": 1489982155, "last_edit_date": 1490702479, "question_id": 42895596, "link": "https://stackoverflow.com/questions/42895596/unable-to-create-a-local-function-because-cant-capture-dynamic-environment-in", "title": "Unable to create a local function because &quot;can&#39;t capture dynamic environment in a fn item&quot;", "body": "<p>Is there any way to create a local function like this Python code?</p>\n\n\n\n<pre><code>def h():\n    final = []\n    def a():\n        for i in range(5):\n            final.append(i)\n        a()\n        return final\n</code></pre>\n\n<p>I tried it, but failed:</p>\n\n<pre><code>fn h() -&gt; Vec&lt;i32&gt; {\n    let mut ff = vec![];\n    fn a() {\n        for i in 0..5 {\n            ff.push(i)\n        }\n    };\n    a();\n    ff\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code> error[E0434]: can't capture dynamic environment in a fn item; use the || { ... } closure form instead\n --&gt; src/main.rs:5:13\n  |\n5 |             ff.push(i)\n  |             ^^\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 1878, "user_id": 3013715, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/gfzGT.jpg?s=128&g=1", "display_name": "Patrick Allen", "link": "https://stackoverflow.com/users/3013715/patrick-allen"}, "reply_to_user": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 0, "creation_date": 1489974937, "post_id": 42894646, "comment_id": 72890313, "body": "I&#39;m asking a question because I don&#39;t know the answer. Thanks anyways @ildjarn."}, {"owner": {"reputation": 37223, "user_id": 485561, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/61c769a3a57614e2cff3789076adde3d?s=128&d=identicon&r=PG", "display_name": "Mankarse", "link": "https://stackoverflow.com/users/485561/mankarse"}, "edited": false, "score": 0, "creation_date": 1489974996, "post_id": 42894646, "comment_id": 72890326, "body": "In <code>load_rom</code> you are altering <code>self.mem</code>. Why do you think that this would be possible without <code>cpu</code> being mutable? Perhaps you could move the mutation into a factory function that returns a fully initialised <code>CPU</code> that can be bound to an immutable variable."}, {"owner": {"reputation": 1878, "user_id": 3013715, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/gfzGT.jpg?s=128&g=1", "display_name": "Patrick Allen", "link": "https://stackoverflow.com/users/3013715/patrick-allen"}, "edited": false, "score": 0, "creation_date": 1489975114, "post_id": 42894646, "comment_id": 72890349, "body": "It&#39;s not really that I don&#39;t think cpu should be mutable, It&#39;s just that it seems weird to me that I have to declare it as mutable externally in order for internal functions to modify it&#39;s own contents. Again, new to Rust, so bear with me.  Thanks"}], "answers": [{"tags": [], "owner": {"reputation": 37223, "user_id": 485561, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/61c769a3a57614e2cff3789076adde3d?s=128&d=identicon&r=PG", "display_name": "Mankarse", "link": "https://stackoverflow.com/users/485561/mankarse"}, "is_accepted": false, "score": 2, "last_activity_date": 1489976826, "last_edit_date": 1489976826, "creation_date": 1489976423, "answer_id": 42894851, "question_id": 42894646, "link": "https://stackoverflow.com/questions/42894646/why-do-i-have-to-declare-a-variable-as-mutable-in-order-for-internal-functions-t/42894851#42894851", "title": "Why do I have to declare a variable as mutable in order for internal functions to modify its own contents?", "body": "<p>Rust uses a transitive immutability model. This means that if a variable is marked as <code>immutable</code>, the variable may not be mutated, and data accessed through the variable may not be mutated.</p>\n\n<p>Furthermore, if you have a mutable reference to a variable, the type system disallows any immutable references from coexisting; and so data not marked as `mut' is truly unchanging throughout the lifetime of the the immutable reference.</p>\n\n<p>Together this makes it so that by default, it is not possible for there to be two mutable references to the same data at the same time. This is a requirement for efficient memory safety and thread safety; and also makes it simpler to reason about mutation in Rust code.</p>\n\n<p>If you want \"interior\" mutability you can use <code>Cell&lt;T&gt;</code> or <code>RefCell&lt;T&gt;</code> from the <code>std::cell</code> module. However, this is probably the wrong thing to do for a CPU struct that is meant to represent a CPU that is expected to be run, and have its state change after each operation. Interior mutability should generally be reserved for performing mutation within the implementation of an operation that does not perform any logical (externally visible) mutation of an object. A CPU running operations or loading memory would not be a good candidate for this, as each operation such as \"load memory\", \"run instruction\" or whatever will alter the logical state of the CPU.</p>\n\n<p>See <a href=\"https://doc.rust-lang.org/stable/std/cell/\" rel=\"nofollow noreferrer\">the <code>std::cell</code> documentation</a> for further discussion of when you might want interior mutability.</p>\n"}, {"comments": [{"owner": {"reputation": 1878, "user_id": 3013715, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/gfzGT.jpg?s=128&g=1", "display_name": "Patrick Allen", "link": "https://stackoverflow.com/users/3013715/patrick-allen"}, "edited": false, "score": 0, "creation_date": 1489977794, "post_id": 42894867, "comment_id": 72890930, "body": "Awesome response. So I can have one mutable reference and as many immutable ones as I want. When does this change AKA when can I use another mutable reference? When the last goes out of scope / dies?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1878, "user_id": 3013715, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/gfzGT.jpg?s=128&g=1", "display_name": "Patrick Allen", "link": "https://stackoverflow.com/users/3013715/patrick-allen"}, "edited": false, "score": 0, "creation_date": 1489978092, "post_id": 42894867, "comment_id": 72890998, "body": "@PatrickAllen yep, when it goes out of scope is the right way to think about it. There are <i>some</i> nuances to that you might hit eventually, but I&#39;d let those lie until you hit them ^_^."}, {"owner": {"reputation": 1878, "user_id": 3013715, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/gfzGT.jpg?s=128&g=1", "display_name": "Patrick Allen", "link": "https://stackoverflow.com/users/3013715/patrick-allen"}, "edited": false, "score": 0, "creation_date": 1489978292, "post_id": 42894867, "comment_id": 72891046, "body": "Ha ha, I will do. Thanks for the great response. It&#39;s reassuring to know that there are still some around here that are willing to cater to the new crowd."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1878, "user_id": 3013715, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/gfzGT.jpg?s=128&g=1", "display_name": "Patrick Allen", "link": "https://stackoverflow.com/users/3013715/patrick-allen"}, "edited": false, "score": 0, "creation_date": 1489978766, "post_id": 42894867, "comment_id": 72891154, "body": "@PatrickAllen FWIW, I don&#39;t disagree with the handful of comments you got on your question. I can&#39;t speak for the others, but I had no idea what you were trying to ask until your last reply, which is why I edited it into the question. I think you&#39;ll find I&#39;m one of the harshest <a href=\"https://stackoverflow.com/questions/tagged/rust\">rust</a> participants and I down/close vote all sorts of poor questions and close dupes like it&#39;s going out of style. Those commenters helped extract your core question before I got here with my heavy voting hand ;-) We will <i>always</i> answer a <b>good and unique</b> question, regardless of origin."}, {"owner": {"reputation": 1878, "user_id": 3013715, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/gfzGT.jpg?s=128&g=1", "display_name": "Patrick Allen", "link": "https://stackoverflow.com/users/3013715/patrick-allen"}, "edited": false, "score": 0, "creation_date": 1489979021, "post_id": 42894867, "comment_id": 72891225, "body": "Yeah, I get it. I tried my hardest to explain my question. I agree, but I don&#39;t agree with the sass a lot of people put into responses, especially when I tried to make it clear that I&#39;m new to this. Either way, thanks :)"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1489977919, "last_edit_date": 1492087974, "creation_date": 1489976555, "answer_id": 42894867, "question_id": 42894646, "link": "https://stackoverflow.com/questions/42894646/why-do-i-have-to-declare-a-variable-as-mutable-in-order-for-internal-functions-t/42894867#42894867", "title": "Why do I have to declare a variable as mutable in order for internal functions to modify its own contents?", "body": "<blockquote>\n  <p>make <code>cpu</code> mutable in order for <strong>internal functions to modify its own contents</strong></p>\n</blockquote>\n\n<p>(emphasis mine)</p>\n\n<p>Rust is a <strong>systems language</strong>, which means that it attempts to give you the ability to create <em>fast</em> and <em>efficient</em> code. One of the primary ways that this is done is by providing references to existing data instead of copying it.</p>\n\n<p>Rust is also a <strong>safe language</strong>, which (among other things) means that accessing an invalid reference should be impossible.</p>\n\n<p>To accomplish both of these goals, there have to be tradeoffs. Some languages move the safety checks to runtime, enforce mandatory synchronization primitives (e.g. a mutex and friends), or some other interesting solution. Some languages avoid the mess entirely and opt to disallow references or not attempt to guarantee safety.</p>\n\n<p>Rust differs from these by checking as many things at compile time as feasible. This implies that the compiler <em>has</em> to be able to reason about when and where a piece of memory might be mutated.</p>\n\n<p>If it didn't know this, then you might get a reference to something within a value and then call a mutating method on that value that invalidates the reference. When you go to use the now-invalid reference... <strong>BOOOOOM</strong>. Your program crashes at <em>best</em>, or leaks information or creates a backdoor at <em>worst</em>.</p>\n\n<p><code>&amp;mut self</code> is in indication to the compiler that this method might mutate the values within. It is only valid to get a mutable reference to a value that is already mutable, which is denoted by the <code>mut</code> keyword on a variable binding (<code>mut cpu</code> here).</p>\n\n<p>However, this isn't <em>just</em> useful to the compiler. Knowing that something is being changed is <em>highly</em> valuable to the programmer too. Mutability in a large system adds hard-to-reason-about complexity, and being forced to explicitly list when something is and isn't mutable can be very informative and mentally freeing.</p>\n\n<p>It's also useful to know the <a href=\"https://doc.rust-lang.org/book/references-and-borrowing.html#the-rules\" rel=\"nofollow noreferrer\">rules for borrowing</a> that Rust applies. These restrict you to one or the other of: </p>\n\n<pre><code>* one or more references (`&amp;T`) to a resource,\n* exactly one mutable reference (`&amp;mut T`).\n</code></pre>\n\n<p>Succinctly, this can be summed as \"aliasing XOR mutability\". </p>\n\n<hr>\n\n<p>If your mutation is truly internal, then you can also make use of <a href=\"https://doc.rust-lang.org/book/mutability.html#interior-vs-exterior-mutability\" rel=\"nofollow noreferrer\">interior mutability</a>, such as by using a <a href=\"https://doc.rust-lang.org/std/cell/struct.RefCell.html\" rel=\"nofollow noreferrer\"><code>RefCell</code></a> or a <a href=\"https://doc.rust-lang.org/std/sync/struct.Mutex.html\" rel=\"nofollow noreferrer\"><code>Mutex</code></a>. What you use depends on your needs and what kind of data you want to store.</p>\n\n<p>These constructs are a good mental fit for structures like caches, where you want to \"hide\" the mutability from the outside. However, there are also limitations to these as the lifetime of references to the data within <em>must</em> be shortened to continue providing the \"aliasing XOR mutabilty\" guarantee to keep the code safe.</p>\n\n<hr>\n\n<p>For your specific problem, I agree with the commenters that it makes sense for <code>load_rom</code> to accept a <code>&amp;mut self</code>. It can even be simplified:</p>\n\n<pre><code>pub fn load_rom(&amp;mut self, filepath: &amp;str) {\n    let mut file = File::open(filepath).unwrap();\n    file.read_exact(&amp;mut self.mem);\n}\n</code></pre>\n\n<p>You may want to zero out any old data before loading. Otherwise, if you load a second ROM that's smaller than the first, data from the first ROM can leak to the second (<a href=\"https://retrocomputing.stackexchange.com/questions/2456/why-would-older-video-games-include-fragments-of-source-code\">an actual bug from older computers / operating systems</a>).</p>\n"}], "owner": {"reputation": 1878, "user_id": 3013715, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/gfzGT.jpg?s=128&g=1", "display_name": "Patrick Allen", "link": "https://stackoverflow.com/users/3013715/patrick-allen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 172, "favorite_count": 0, "accepted_answer_id": 42894867, "answer_count": 2, "score": 0, "last_activity_date": 1489977919, "creation_date": 1489974510, "last_edit_date": 1489975727, "question_id": 42894646, "link": "https://stackoverflow.com/questions/42894646/why-do-i-have-to-declare-a-variable-as-mutable-in-order-for-internal-functions-t", "title": "Why do I have to declare a variable as mutable in order for internal functions to modify its own contents?", "body": "<p>I have a <code>CPU</code> struct with a <code>load_rom</code> method:</p>\n\n<pre><code>use std::fs::File;\nuse std::io::{self, Read};\n\npub struct CPU {\n    pub mem: [u8; 4096],\n    V: [u8; 16],\n    I: u16,\n    stack: [u16; 16],\n    opcode: u16,\n}\n\nimpl CPU {\n    pub fn new() -&gt; CPU {\n        CPU {\n            mem: [0; 4096],\n            V: [0; 16],\n            I: 0,\n            stack: [0; 16],\n            opcode: 0,\n        }\n    }\n    pub fn load_rom(&amp;self, filepath: &amp;str) {\n        let mut rom: Vec&lt;u8&gt; = Vec::new();\n        let mut file = File::open(filepath).unwrap();\n        file.read_to_end(&amp;mut rom);\n\n        for (i, mut byte) in rom.iter().enumerate() {\n            self.mem[i] = *byte;\n        }\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>This generates the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: cannot assign to immutable indexed content `self.mem[..]`\n  --&gt; src/main.rs:28:13\n   |\n28 |             self.mem[i] = *byte;\n   |             ^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>When I create a CPU with <code>let mut cpu = CPU::new();</code> and pass <code>&amp;mut self</code> to the <code>load_rom</code> method, everything works just fine.</p>\n\n<p>If I don't use <code>mut</code> on creation, I get the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: cannot borrow immutable local variable `cpu` as mutable\n  --&gt; src/main.rs:10:2\n   |\n9  |    let cpu = CPU::new();\n   |        --- use `mut cpu` here to make mutable\n10 |    cpu.load_rom(\"/Users/.../Code/Rust/chip8/src/roms/connect4.ch8\");\n   |    ^^^ cannot borrow mutably\n</code></pre>\n\n<p>It doesn't seem right that I have to make <code>cpu</code> mutable in order for internal functions to modify its own contents. Do I really have to declare <code>cpu</code> as mutable? Or am I missing something?</p>\n"}, {"tags": ["rust", "llvm", "compiler-optimization", "llvm-codegen"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 5, "creation_date": 1489951141, "post_id": 42891039, "comment_id": 72883432, "body": "Why would you NOT want a function call with no side effect to be optimized away? If it&#39;s useless, good riddance!"}, {"owner": {"reputation": 435, "user_id": 6517909, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/542422dbe372e54be780ad815e253206?s=128&d=identicon&r=PG&f=1", "display_name": "Doe", "link": "https://stackoverflow.com/users/6517909/doe"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 3, "creation_date": 1489959999, "post_id": 42891039, "comment_id": 72886543, "body": "For the same reasons underlying <a href=\"https://stackoverflow.com/questions/7083482/how-to-prevent-gcc-from-optimizing-out-a-busy-wait-loop\" title=\"how to prevent gcc from optimizing out a busy wait loop\">stackoverflow.com/questions/7083482/&hellip;</a> ;  Side-effect-less functions are not always without side effects. Constant-time functions (e.g. busy-waits) are a prominent example of this. Space-bar-activated heater programs are another."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1489995898, "post_id": 42891039, "comment_id": 72896405, "body": "I know, the question is more what is <b>your</b> usecase? For example, achieving constant-time functions or busy-waiting are two very different goals. Constant-time functions in general require assembly."}, {"owner": {"reputation": 435, "user_id": 6517909, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/542422dbe372e54be780ad815e253206?s=128&d=identicon&r=PG&f=1", "display_name": "Doe", "link": "https://stackoverflow.com/users/6517909/doe"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1489999412, "post_id": 42891039, "comment_id": 72898149, "body": "busy-wait loops and constant-time functions, while different in goals, need the same basic feature: to control compiler assumptions. As for specifics of my usecase, ignore it. I argue that focusing on the asker&#39;s task rather than the question at hand runs counter to the reasons behind this site&#39;s existence, and is a genuine disservice to those who come later expecting an answer (something I&#39;ve been bitten by many times with rust questions). I think rust users should aim to have questions and answers of quality that you expect when searching for C. I&#39;m tired of asker-specific workarounds."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1490003114, "post_id": 42891039, "comment_id": 72900321, "body": "<i>I think rust users should aim to have questions and answers of quality that you expect when searching for C. I&#39;m tired of asker-specific workarounds.</i> =&gt; However, sometimes there just is a MUCH better answer for a specific problem than there is for a generic problem. For constant time functions, as used in cryptography, attempting to divine the number of clock cycles that the resulting optimized assembly would get is just plain unfeasible (and brittle), which is why constant time functions are written from assembly blocks and manually optimized."}, {"owner": {"reputation": 435, "user_id": 6517909, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/542422dbe372e54be780ad815e253206?s=128&d=identicon&r=PG&f=1", "display_name": "Doe", "link": "https://stackoverflow.com/users/6517909/doe"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1490004494, "post_id": 42891039, "comment_id": 72901232, "body": "What about developers who want to implement busy-loops and space-bar-heaters in rust? I understand where you&#39;re coming from - I genuinely do, but I didn&#39;t ask how to implement cryptographic constant-time functions. People who inevitably end up on this page won&#39;t be looking for this information either (well, now they might, seeing that this discussion devolved towards crypto). The page I linked to above demonstrates what people like me seek: A question with a nice direct answer. Again, I appreciate what you and the rust community are trying to do, but I believe it&#39;s causing more harm than good."}, {"owner": {"reputation": 435, "user_id": 6517909, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/542422dbe372e54be780ad815e253206?s=128&d=identicon&r=PG&f=1", "display_name": "Doe", "link": "https://stackoverflow.com/users/6517909/doe"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1490016001, "post_id": 42891039, "comment_id": 72908999, "body": "Let us <a href=\"http://chat.stackoverflow.com/rooms/138539/discussion-between-doe-and-matthieu-m\">continue this discussion in chat</a>."}], "answers": [{"comments": [{"owner": {"reputation": 435, "user_id": 6517909, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/542422dbe372e54be780ad815e253206?s=128&d=identicon&r=PG&f=1", "display_name": "Doe", "link": "https://stackoverflow.com/users/6517909/doe"}, "edited": false, "score": 0, "creation_date": 1489961608, "post_id": 42891114, "comment_id": 72887046, "body": "It doesn&#39;t seem to force a call at all. See is.gd R6i36H"}], "tags": [], "owner": {"reputation": 1093, "user_id": 3642914, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/034a47abb43659aba14fef3ff0eff17c?s=128&d=identicon&r=PG", "display_name": "Leonora Tindall", "link": "https://stackoverflow.com/users/3642914/leonora-tindall"}, "is_accepted": false, "score": 3, "last_activity_date": 1490034673, "last_edit_date": 1490034673, "creation_date": 1489951397, "answer_id": 42891114, "question_id": 42891039, "link": "https://stackoverflow.com/questions/42891039/how-to-prevent-function-calls-from-being-optimized-away/42891114#42891114", "title": "How to prevent function calls from being optimized away?", "body": "<p><code>#[no_mangle]</code>will currently do this, but that <a href=\"https://internals.rust-lang.org/t/precise-semantics-of-no-mangle/4098\" rel=\"nofollow noreferrer\">may change</a>.</p>\n\n<pre><code>#[no_mangle]\npub fn do_what_i_say_dammit(x: i64) -&gt; i64 { x*x }\n</code></pre>\n\n<p>To clarify (from that post):</p>\n\n<blockquote>\n  <p>My mental model is that symbols are owned by rustc by default (e.g.,\n  if the symbol is private, rustc can emit a differently-typed\n  \"arg-promoted\" symbol instead of the expected one, as long as it\n  handles it correctly), and <code>#[no_mangle]</code> transfers ownership of the\n  symbol to the programmer.</p>\n  \n  <p>Now, because ownership is transferred to the programmer, rustc's\n  unspecified symbol mangling scheme can't be used, so the symbol is\n  left unmangled.</p>\n  \n  <p>Having an unmangled rustc-owned symbol makes pretty much no sense (you\n  can't actually use it because the compiler owns it) - so <code>#[no_mangle]</code>\n  implies <code>#[linker_owned]</code>. There is no loose <code>#[linker_owned]</code> because\n  nobody implemented it.</p>\n</blockquote>\n\n<p>Edit: Here's a simple example. <a href=\"https://i.stack.imgur.com/k1gEW.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/k1gEW.png\" alt=\"no_mangle description\"></a></p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1489972145, "post_id": 42893060, "comment_id": 72889724, "body": "While useful, OP specifically asked about <i>stable Rust</i>."}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": false, "score": 1, "last_activity_date": 1489962536, "creation_date": 1489962536, "answer_id": 42893060, "question_id": 42891039, "link": "https://stackoverflow.com/questions/42891039/how-to-prevent-function-calls-from-being-optimized-away/42893060#42893060", "title": "How to prevent function calls from being optimized away?", "body": "<p>There is <a href=\"https://doc.rust-lang.org/1.1.0/test/fn.black_box.html\" rel=\"nofollow noreferrer\"><code>test::black_box()</code></a> (link to old docs) which is still unstable (as is the whole <code>test</code> crate). This function takes a value of an arbitrary type and returns the same value again. So it is basically the identity function. \"Oh well, now that's <em>very useful</em>, <a href=\"https://bluss.github.io/rust/fun/2015/10/11/stuff-the-identity-function-does/\" rel=\"nofollow noreferrer\">isn't it</a>?\" you might ask ironically. </p>\n\n<p>But there is something special: the value which is passed through is hidden from LLVM (the thing doing nearly all optimizations in Rust right now)! It's truly a <strong>black box</strong> as LLVM doesn't know anything about a piece of code. And without knowing anything LLVM can't prove that optimizations won't be changing the program's behavior. Thus: no optimizations. </p>\n\n<p>How does it do that? Let's look at the definition:</p>\n\n<pre><code>pub fn black_box&lt;T&gt;(dummy: T) -&gt; T {\n    // we need to \"use\" the argument in some way LLVM can't\n    // introspect.\n    unsafe { asm!(\"\" : : \"r\"(&amp;dummy)) }\n    dummy\n}\n</code></pre>\n\n<p>I'd be lying if I were to pretend I understand this piece of code completely, but it goes something like that: we insert empty inline assembly (not a single instruction) but tell Rust (which tells LLVM) that this piece of assembly uses the variable <code>dummy</code>. This makes it impossible for the optimizer to reason about the variable. <a href=\"http://i.ytimg.com/vi/K5tQn9f2Qc0/hqdefault.jpg\" rel=\"nofollow noreferrer\">Stupid compiler</a>, so easy to deceive, muhahahaha! If you want another explanation, Chandler Carruth <a href=\"https://www.youtube.com/watch?v=nXaxk27zwlk&amp;t=41m19s\" rel=\"nofollow noreferrer\">explained the dark magic</a> at CppCon 2015.</p>\n\n<p>So how do you use it now? Just use it for some kind of value... anything that goes through <code>black_box()</code> needs to be calculated. How about something like this?</p>\n\n<pre><code>black_box(my_function());\n</code></pre>\n\n<p>The return value of <code>my_function()</code> needs to be calculated, because the compiler can't prove it's useless! So the function call won't be removed. Note however, that you have to use unstable features (either the <code>test</code> crate or inline asm to write the function yourself) or use FFI. I certainly wouldn't ship this kind of code in a production library, but it's certainly useful for testing purposes!</p>\n"}], "owner": {"reputation": 435, "user_id": 6517909, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/542422dbe372e54be780ad815e253206?s=128&d=identicon&r=PG&f=1", "display_name": "Doe", "link": "https://stackoverflow.com/users/6517909/doe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2097, "favorite_count": 1, "answer_count": 2, "score": 1, "last_activity_date": 1564862964, "creation_date": 1489951023, "last_edit_date": 1564862964, "question_id": 42891039, "link": "https://stackoverflow.com/questions/42891039/how-to-prevent-function-calls-from-being-optimized-away", "title": "How to prevent function calls from being optimized away?", "body": "<p>How can I ensure that a function with no side effects gets executed and doesn't get optimized away in stable Rust?</p>\n\n<p>Is there an attribute combination I could use, or must I call another function with side effects? In the case where a function call is necessary,  does the Rust standard library provide cheap function that is guaranteed to not be optimized away?</p>\n"}, {"tags": ["matrix", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1489971755, "post_id": 42889394, "comment_id": 72889644, "body": "Your <code>extract</code> example code doesn&#39;t even have balanced delimiters, much less explain what the arguments even <b>mean</b>. How are we supposed to know what <code>(-1,&#39;:&#39;,)</code> is supposed to communicate? What kind of data structure do you expect this to return and what operations are you going to perform on that result? It would be trivial to write a version of <code>extract</code> that just panics, but I doubt that is your goal. Overall, your question appears far too underspecified to attempt to answer here on Stack Overflow."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1489971818, "post_id": 42889394, "comment_id": 72889661, "body": "The best suggestion I have for you is to go look at the source of <a href=\"https://crates.io/search?q=matrix\" rel=\"nofollow noreferrer\">one of the numerous matrix libraries</a>. You may also have better luck asking such an open-ended question on a resource like <a href=\"https://www.reddit.com/r/rust/\" rel=\"nofollow noreferrer\">the Rust subreddit</a>, the <a href=\"https://users.rust-lang.org/\" rel=\"nofollow noreferrer\">users forum</a>, or the <a href=\"https://www.rust-lang.org/en-US/community.html\" rel=\"nofollow noreferrer\">Rust IRC channels</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1489977739, "post_id": 42889394, "comment_id": 72890923, "body": "Re: &quot;delimiters&quot; \u2014 I meant the missing close parenthesis, which you&#39;ve since fixed. There&#39;s also no need to add <b>EDIT</b> text; just <i>edit</i> the question to make it better. If you address my comments, I delete them, so there&#39;s no point in referring to them ;-)"}], "owner": {"reputation": 1366, "user_id": 4807889, "user_type": "registered", "accept_rate": 45, "profile_image": "https://graph.facebook.com/10153645629657370/picture?type=large", "display_name": "mjwrazor", "link": "https://stackoverflow.com/users/4807889/mjwrazor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 376, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1490017330, "creation_date": 1489942669, "last_edit_date": 1495541374, "question_id": 42889394, "link": "https://stackoverflow.com/questions/42889394/how-do-you-index-select-over-a-matrix-in-rust", "title": "How do you index select over a matrix in Rust", "body": "<p>I have a matrix that looks like this:</p>\n\n<pre><code>pub struct Matrix&lt;T&gt; {\n    pub grid: Vec&lt;T&gt;,\n}\n\n/// constructor\nimpl&lt;T&gt; Matrix&lt;T&gt; {\n    pub fn new(data: Vec&lt;T&gt;) -&gt; Matrix&lt;T&gt; {\n        Matrix { grid: data }\n    }\n}\n</code></pre>\n\n<p>I need to be able to do something like this, something close to the <code>iloc</code> of Python's pandas if you know what that is (<a href=\"https://github.com/pandas-dev/pandas/blob/master/doc/cheatsheet/Pandas_Cheat_Sheet.pdf\" rel=\"nofollow noreferrer\">Pandas Cheat sheet</a>):</p>\n\n<pre><code>// m equals a matrix of type Vec&lt;String&gt;\n// the matrix is 11 rows 4 columns. I dont want the first row\n// because of headers or the first or last column.\n// args {cols: Vec&lt;?&gt;||tuple(i64,str,i64), rows: Vec&lt;?&gt;||tuple(i64,str,i64}\nlet data = m.extract(vec![1,2], (-1,':',))\n</code></pre>\n\n<p>I have looked at those other libraries and they are great for what they do but I am working on something that these libraries do not accomplish. </p>\n\n<p>The arguments for the extraction is <code>columns, rows</code>, which I would like to take either a tuple or Vec, but if that is not possible I will settle for a vector. As stated this syntax is derived from python's pandas library which I posted a link to the cheat sheet with reference to the <code>iloc</code> function. So <code>vec![1,2]</code> would return me only columns 1 and 2 with index starting at 0. While for the tuple <code>(-1,':',)</code>, I would want to return all rows except the first. So if instead it was <code>(,':',-1)</code> I would get all the rows except the last. <code>(1,':',6)</code> would return rows 1-6 including all in between. <code>(,':',)</code> would return all rows. Which <code>(0,':',0)</code> and <code>vec![0]</code> both give only the first row/column except the vector type cannot specify a range. </p>\n\n<p>As for the data structure I want to return is a Matrix like the ones used in the other matrix libraries. A matrix type with rows, columns and data. I am reading in a csv file into a generic Matrix T which I should probably turn into just a String since I doubt I will ever change that. I need to be able to convert the data int the String matrix into f64 and then have a new matrix type hold that to work matrices math on. I still need to keep the <code>String</code> matrix as a reference to create my own logic to communicate positive or negative feedback(true/false) on fields that contain things like country names by a match or with yes/no in columns. </p>\n\n<p>How would I iterate over this matrix which will contain a <code>Vec&lt;Vec&lt;T&gt;&gt;</code> to retrieve a specific matrix from it? I have headers, and I want all the data so I need to skip the index of <code>Matrix.grid[0]</code> but none else. </p>\n\n<p>Do I need to write an <code>impl Iterator</code> and if so how would this be done? I have seen <a href=\"https://stackoverflow.com/questions/30422177/lifetime-in-iterator-impl\">an example</a> with a different format but do I need lifetimes to accomplish this? Is there anything I need to add the the struct or with a <code>impl</code> to get the capability to copy, get a <code>mut ref</code> to all values, a <code>ref</code> to all values?  </p>\n\n<p>I am rather new to Rust and am very eager to learn more. I have read the whole Rust book, taken a course online, but still I find myself lost when dealing with a Matrix. </p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1489972003, "post_id": 42888440, "comment_id": 72889694, "body": "<a href=\"http://stackoverflow.com/q/28820781/155423\">You</a> cannot <a href=\"http://stackoverflow.com/q/27570978/155423\">extend</a> the <a href=\"http://stackoverflow.com/q/35666024/155423\">lifetime</a> of a <a href=\"https://stackoverflow.com/q/30330697/155423\">reference</a>, <b>period</b>."}, {"owner": {"reputation": 2559, "user_id": 665869, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b73cd84b791b01148061a5dab96eebc6?s=128&d=identicon&r=PG", "display_name": "mitnk", "link": "https://stackoverflow.com/users/665869/mitnk"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1489982487, "post_id": 42888440, "comment_id": 72891989, "body": "The question marked answered this (duplicated) one is not quite match (the solution part is not clear at least to my question), but <a href=\"http://stackoverflow.com/a/35673760/665869\">this one</a> did answer my question in a way. Thanks for the links!"}], "answers": [{"comments": [{"owner": {"reputation": 2559, "user_id": 665869, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b73cd84b791b01148061a5dab96eebc6?s=128&d=identicon&r=PG", "display_name": "mitnk", "link": "https://stackoverflow.com/users/665869/mitnk"}, "edited": false, "score": 0, "creation_date": 1489939374, "post_id": 42888725, "comment_id": 72879422, "body": "Thanks! Learned a lot :)"}], "tags": [], "owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "is_accepted": true, "score": 1, "last_activity_date": 1489971902, "last_edit_date": 1489971902, "creation_date": 1489939043, "answer_id": 42888725, "question_id": 42888440, "link": "https://stackoverflow.com/questions/42888440/how-to-increase-lifetime-of-the-bindings/42888725#42888725", "title": "How to increase lifetime of the bindings", "body": "<p>Instead of storing a borrowed reference, you could store the <code>Command</code> object itself.</p>\n\n<pre><code>let cmds = vec![vec![\"ls\", \"-lh\"], vec![\"grep\", \"foo\"]];\nlet mut processes: Vec&lt;Command&gt; = Vec::new();\n// ^ you can store concrete objects instead of references.\n\nfor cmd in &amp;cmds {\n// ^ prefer a `for` loop over a `while` loop. (Also, you don't need to clone the cmds)\n    let mut p = Command::new(cmd[0]);\n    p.args(&amp;cmd[1..]);\n    // ^ you can get a concrete `Command` instead of `&amp;mut Command` reference\n    //   if you store the returned object from `new()`.\n    processes.push(p);\n}\n\nprintln!(\"processes: {:?}\", processes);\n// processes: [\"ls\" \"-lh\", \"grep\" \"foo\"]\n</code></pre>\n"}], "owner": {"reputation": 2559, "user_id": 665869, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b73cd84b791b01148061a5dab96eebc6?s=128&d=identicon&r=PG", "display_name": "mitnk", "link": "https://stackoverflow.com/users/665869/mitnk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 468, "favorite_count": 0, "closed_date": 1489972030, "accepted_answer_id": 42888725, "answer_count": 1, "score": 0, "last_activity_date": 1490017038, "creation_date": 1489937462, "last_edit_date": 1489971890, "question_id": 42888440, "link": "https://stackoverflow.com/questions/42888440/how-to-increase-lifetime-of-the-bindings", "closed_reason": "Duplicate", "title": "How to increase lifetime of the bindings", "body": "<p>I have the following code ...</p>\n\n<pre><code>use std::process::Command;\n\nfn main() {\n    let cmds = vec![vec![\"ls\", \"-lh\"], vec![\"grep\", \"foo\"]];\n    let mut processes: Vec&lt;&amp;mut Command&gt; = Vec::new();\n\n    let mut i = 0;\n    let length = cmds.len();\n    while i &lt; length {\n        let cmd = cmds[i].clone();\n        let mut p = Command::new(&amp;cmd[0]).args(&amp;(cmd[1..]));\n        processes.push(p);\n        i += 1;\n    }\n    println!(\"processes: {:?}\", processes);\n\n    // want to manipulate processes elements here again.\n    // ...\n}\n</code></pre>\n\n<p>Which doesn't compile:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: borrowed value does not live long enough\n  --&gt; src/main.rs:11:60\n   |\n11 |         let mut p = Command::new(&amp;cmd[0]).args(&amp;(cmd[1..]));\n   |                     ---------------------                  ^ temporary value dropped here while still borrowed\n   |                     |\n   |                     temporary value created here\n...\n19 | }\n   | - temporary value needs to live until here\n   |\n   = note: consider using a `let` binding to increase its lifetime\n</code></pre>\n\n<p>I understand why it refused to compile, I just don't know how to fix it in this case.</p>\n"}, {"tags": ["macros", "rust"], "comments": [{"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1489922645, "post_id": 42885668, "comment_id": 72873968, "body": "Could you change how <code>invoke!</code> is called instead?"}, {"owner": {"reputation": 620, "user_id": 2576287, "user_type": "registered", "accept_rate": 56, "profile_image": "https://lh5.googleusercontent.com/-VegFz4P9Ovc/AAAAAAAAAAI/AAAAAAAAATo/Z-69W9rBCno/photo.jpg?sz=128", "display_name": "mrLSD", "link": "https://stackoverflow.com/users/2576287/mrlsd"}, "reply_to_user": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1489926604, "post_id": 42885668, "comment_id": 72875110, "body": "@kennytm it&#39;s presented explicitly in code:  <code>invoke!(      [&quot;str1&quot;, &quot;str2&quot;]: i32 =&gt; test1() test2();      [&quot;str3&quot;, &quot;str1&quot;]: i32 =&gt; test1();  )</code>"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1489926876, "post_id": 42885668, "comment_id": 72875178, "body": "I get errors in your macro - even the one you say is working. Also, can you show what you expect your first example to be transformed into?"}, {"owner": {"reputation": 620, "user_id": 2576287, "user_type": "registered", "accept_rate": 56, "profile_image": "https://lh5.googleusercontent.com/-VegFz4P9Ovc/AAAAAAAAAAI/AAAAAAAAATo/Z-69W9rBCno/photo.jpg?sz=128", "display_name": "mrLSD", "link": "https://stackoverflow.com/users/2576287/mrlsd"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1489927708, "post_id": 42885668, "comment_id": 72875466, "body": "@PeterHall I don&#39;t know how you can get errors. I added link to question, it&#39;s worked code sample. Through time I added expected sample."}, {"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 1, "creation_date": 1489930882, "post_id": 42885668, "comment_id": 72876503, "body": "@mrLSD I mean, instead of <code>invoke!([&quot;str1&quot;]: i32 =&gt; test1(), test2(), test3, test4)</code>, could you change the syntax to like <code>invoke!([&quot;str1&quot;]: i32 =&gt; {test1() =&gt; test3, test2() =&gt; test4})</code>?"}], "answers": [{"comments": [{"owner": {"reputation": 620, "user_id": 2576287, "user_type": "registered", "accept_rate": 56, "profile_image": "https://lh5.googleusercontent.com/-VegFz4P9Ovc/AAAAAAAAAAI/AAAAAAAAATo/Z-69W9rBCno/photo.jpg?sz=128", "display_name": "mrLSD", "link": "https://stackoverflow.com/users/2576287/mrlsd"}, "edited": false, "score": 0, "creation_date": 1489938923, "post_id": 42887655, "comment_id": 72879273, "body": "Thank you for awesome answer. Is it I understand correct that <code>$args:tt</code> impossible set as optional, i.e. <code>test vs test()</code>?"}, {"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 0, "creation_date": 1563052600, "post_id": 42887655, "comment_id": 100575950, "body": "Just reading this answer and it should be updated. There is now an optional modifier for macros <code>$($x:ident)?</code>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1489972978, "last_edit_date": 1489972978, "creation_date": 1489933191, "answer_id": 42887655, "question_id": 42885668, "link": "https://stackoverflow.com/questions/42885668/adding-an-ident-to-multiple-repetition-results-in-local-ambiguity-multiple-par/42887655#42887655", "title": "Adding an ident to multiple repetition results in &quot;local ambiguity: multiple parsing options&quot;", "body": "<p>This macro pattern does not make sense:</p>\n\n<pre><code>$($func:ident$args:tt),* $($newfunc:ident),*;\n</code></pre>\n\n<p>This says to parse zero or more identifiers (<code>func</code>) followed by zero or more identifiers (<code>newfunc</code>). If the input was the ident <code>foo</code>, then the parser would not be capable of deciding which grammar path to choose as there's a limited about of lookahead (presumably one token).</p>\n\n<p>As pointed out in the comments, the easiest solution is to introduce new syntax to disambiguate the cases.</p>\n\n<pre><code>macro_rules! invoke {\n    ( $([$($field:expr),*]: $vtype:ty =&gt; $($func:ident$args:tt),* [$($newfunc:ident),*]; )+ ) =&gt; {{\n        $(\n            let x = vec![$($field),*];\n            let y = vec![$($func$args),*];\n            let z: Vec&lt;$vtype&gt; = vec![$($newfunc()),*];\n            println!(\"{:#?}: {:#?} [{:#?}]\", x, y, z);\n        )+\n    }};\n}\n\nfn main() {\n    invoke!( \n        [\"str1\", \"str2\"]: i32 =&gt; test1(), test2() [test3, test4]; \n        [\"str3\", \"str1\"]: i32 =&gt; test1() [test3]; \n    );\n}\n\nfn test1() -&gt; i32 { 42 }\nfn test2() -&gt; i32 { 42 }\nfn test3() -&gt; i32 { 42 }\nfn test4() -&gt; i32 { 42 }\n</code></pre>\n\n<blockquote>\n  <p>do I understand correctly that it's impossible to set <code>$args:tt</code> as optional, i.e. <code>test</code> vs <code>test()</code>.</p>\n</blockquote>\n\n<p>There is no <em>optional</em>  modifier in macros that I am aware of. Usually, this is handled by having multiple parallel patterns:</p>\n\n<pre><code>macro_rules! thing {\n    ($name:ident$args:tt) =&gt; { println!(\"a\") };\n    ($name:ident) =&gt; { println!(\"b\") };\n}\n\nfn main() {\n    thing!(foo);   // b\n    thing!(foo()); // a\n}\n</code></pre>\n\n<p>This doesn't appear to help your case because you wish to collect a bunch of A and then a bunch of B. This would allow a bunch of A-or-B. In grammar, it would be akin to</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>(A|B)* # This form\nA*B*   # What you want\n</code></pre>\n"}], "owner": {"reputation": 620, "user_id": 2576287, "user_type": "registered", "accept_rate": 56, "profile_image": "https://lh5.googleusercontent.com/-VegFz4P9Ovc/AAAAAAAAAAI/AAAAAAAAATo/Z-69W9rBCno/photo.jpg?sz=128", "display_name": "mrLSD", "link": "https://stackoverflow.com/users/2576287/mrlsd"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 502, "favorite_count": 1, "accepted_answer_id": 42887655, "answer_count": 1, "score": 4, "last_activity_date": 1489972978, "creation_date": 1489920452, "last_edit_date": 1489932572, "question_id": 42885668, "link": "https://stackoverflow.com/questions/42885668/adding-an-ident-to-multiple-repetition-results-in-local-ambiguity-multiple-par", "title": "Adding an ident to multiple repetition results in &quot;local ambiguity: multiple parsing options&quot;", "body": "<p>I'm trying to build a macro that would be called with a list of function calls (<code>test2()</code>) or identifiers (<code>test3</code>):</p>\n\n<pre><code>invoke!( \n    [\"str1\", \"str2\"]: i32 =&gt; test1(), test2(), test3, test4; \n    [\"str3\", \"str1\"]: i32 =&gt; test1(), test3; \n)\n</code></pre>\n\n<p>Right now, it only supports function calls:</p>\n\n<pre><code>invoke!( \n    [\"str1\", \"str2\"]: i32 =&gt; test1(), test2(); \n    [\"str3\", \"str1\"]: i32 =&gt; test1(); \n)\n</code></pre>\n\n<p>The original macro code:</p>\n\n<pre><code>macro_rules! invoke {\n    ( $([$($field:expr),*]: $vtype:ty =&gt; $($func:ident$args:tt),*; )+ ) =&gt; {\n        $(\n            let x = vec![$($field),*];\n            let y = vec![$($func$args),*];\n            println!(\"{:#?}: {:#?}\", x, y)\n        )+\n    };\n}\n</code></pre>\n\n<p>When I try to change it to support both forms:</p>\n\n<pre><code>macro_rules! invoke {\n    ( $([$($field:expr),*]: $vtype:ty =&gt; $($func:ident$args:tt),* $($newfunc:ident),*; )+ ) =&gt; {\n        $(\n            let x = vec![$($field),*];\n            let y = vec![$($func$args),*];\n            let z: Vec&lt;$vtype&gt; = vec![$newfunc()];\n            println!(\"{:#?}: {:#?} [{:#?}]\", x, y, z)\n        )+\n    };\n}\n</code></pre>\n\n<p>I get an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: local ambiguity: multiple parsing options: built-in NTs ident ('func') or ident ('newfunc').\n  --&gt; src/main.rs:15:34\n   |\n15 |         [\"str1\", \"str2\"]: i32 =&gt; test1(), test2(), test3, test4; \n   |                                  ^^^^^\n</code></pre>\n\n<p>I know that it possible to build this macro via <code>:tt</code>, but I can't find way how to do it.</p>\n\n<p><a href=\"https://play.rust-lang.org/?code=macro_rules!%20invoke%20%7B%0A%20%20%20%20(%20%24(%5B%24(%24field%3Aexpr)%2C*%5D%3A%20%24vtype%3Aty%20%3D%3E%20%24(%24func%3Aident%24args%3Att)%2C*%3B%20)%2B%20)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%24(%0A%20%20%20%20%20%20%20%20%20%20%20%20let%20x%20%3D%20vec!%5B%24(%24field)%2C*%5D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20let%20y%20%3D%20vec!%5B%24(%24func%24args)%2C*%5D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20println!(%22%7B%3A%23%3F%7D%3A%20%7B%3A%23%3F%7D%22%2C%20x%2C%20y)%0A%20%20%20%20%20%20%20%20)%2B%0A%20%20%20%20%7D%3B%0A%7D%0A%0Afn%20test1(val%3A%20i32)%20-%3E%20i32%20%7B%0A%20%20%20%20val%20*%202%0A%7D%0A%0Afn%20test2()%20-%3E%20i32%20%7B%0A%20%20%20%2020%0A%7D%0A%0Afn%20main()%20%7B%0A%20%20%20%20invoke!(%20%5B%22str1%22%2C%20%22str2%22%5D%3A%20i32%20%3D%3E%20test1(20)%2C%20test2()%3B%20)%3B%0A%7D%0A&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">Working code sample</a></p>\n\n<p><a href=\"https://play.rust-lang.org/?code=macro_rules!%20invoke%20%7B%0A%20%20%20%20(%20%24(%5B%24(%24field%3Aexpr)%2C*%5D%3A%20%24vtype%3Aty%20%3D%3E%20%24(%24func%3Aident%24args%3Att)%2C*%20%24(%24newfunc%3Aident)%2C*%3B%20)%2B%20)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%24(%0A%20%20%20%20%20%20%20%20%20%20%20%20let%20x%20%3D%20vec!%5B%24(%24field)%2C*%5D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20let%20y%20%3D%20vec!%5B%24(%24func%24args)%2C*%5D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20let%20z%20%3D%20vec!(%24(%24newfunc)%2C*)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20println!(%22%7B%3A%23%3F%7D%3A%20%7B%3A%23%3F%7D%22%2C%20x%2C%20y)%0A%20%20%20%20%20%20%20%20)%2B%0A%20%20%20%20%7D%3B%0A%7D%0A%0Afn%20test1(val%3A%20i32)%20-%3E%20i32%20%7B%0A%20%20%20%20val%20*%202%0A%7D%0A%0Afn%20test2()%20-%3E%20i32%20%7B%0A%20%20%20%2020%0A%7D%0A%0Afn%20main()%20%7B%0A%20%20%20%20invoke!(%20%5B%22str1%22%2C%20%22str2%22%5D%3A%20i32%20%3D%3E%20test1(20)%2C%20test2()%2C%20test2%3B%20)%3B%0A%7D%0A&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">Expected and not working code sample</a></p>\n"}, {"tags": ["multithreading", "scope", "rust"], "comments": [{"owner": {"reputation": 13883, "user_id": 6815131, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2c38385f9eb57b70176498fa5c3b4c99?s=128&d=identicon&r=PG&f=1", "display_name": "Joe C", "link": "https://stackoverflow.com/users/6815131/joe-c"}, "edited": false, "score": 0, "creation_date": 1489875457, "post_id": 42879544, "comment_id": 72864467, "body": "May I suggest you use a profiling tool, such as VisualVM, to help you to find the threads (if any) that are deadlocking, and on which objects."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 0, "last_activity_date": 1489871926, "last_edit_date": 1495542322, "creation_date": 1489871926, "answer_id": 42879999, "question_id": 42879544, "link": "https://stackoverflow.com/questions/42879544/processing-trees-in-parallel-in-rust/42879999#42879999", "title": "Processing trees in parallel in Rust", "body": "<blockquote>\n  <p>in a deadlock, and I don't understand why</p>\n</blockquote>\n\n<p>You have 4 threads, then call <code>map_parallel</code> once, which ties up a thread, which calls <code>map_parallel</code> itself before it exits, which ties up a thread, and so on. You ran out of threads before any thread could finish. Switching to 5 threads \"fixes\" the deadlock in this example. Obviously, switching the number of threads depending on the depth of the tree is not ideal.</p>\n\n<hr>\n\n<p>I'd recommend splitting up your code into separate concerns. Since you are already handling things in parallel, each node needs to be independent from each other. That means you can implement an iterator:</p>\n\n<pre><code>impl BinaryTree {\n    fn iter_mut(&amp;mut self) -&gt; IterMut {\n        IterMut { queue: vec![self] }\n    }\n}\n\nstruct IterMut&lt;'a&gt; {\n    queue: Vec&lt;&amp;'a mut BinaryTree&gt;,\n}\n\nimpl&lt;'a&gt; Iterator for IterMut&lt;'a&gt; {\n    type Item = &amp;'a mut i32;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        match self.queue.pop() {\n            Some(tree) =&gt; {\n                match *tree {\n                    Leaf(ref mut n) =&gt; Some(n),\n                    Node(ref mut left, ref mut right) =&gt; {\n                        self.queue.push(right);\n                        self.queue.push(left);\n                        self.next() // bad recursive, see note\n                    }\n                }\n            }\n            None =&gt; None,\n        }\n    }\n}\n</code></pre>\n\n<p>This is nice because it removes any entanglement of the threading library with the data structure. With this, you can then choose to do single-threaded mutation:</p>\n\n<pre><code>for node in tree.iter_mut() {\n    *node += 1;\n}\n</code></pre>\n\n<p>Or threaded:</p>\n\n<pre><code>let thread_pool = scoped_pool::Pool::new(2);\nthread_pool.scoped(|scope| {\n    for node in tree.iter_mut() {\n        scope.execute(move || {\n            *node += 1;\n        })\n    }\n});\n</code></pre>\n\n<hr>\n\n<p>You'll note that I used tail-recursive code in the iterator. Rust doesn't optimize this, so you should change it to the imperative equivalent.</p>\n\n<p>You may also want to investigate using a <a href=\"https://stackoverflow.com/a/36168919/155423\">zipper</a> for the iterator.</p>\n"}], "owner": {"reputation": 194, "user_id": 7732825, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/42efe0f0ead85ed3e4ac7685e982be7b?s=128&d=identicon&r=PG&f=1", "display_name": "Morten Lohne", "link": "https://stackoverflow.com/users/7732825/morten-lohne"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 554, "favorite_count": 0, "accepted_answer_id": 42879999, "answer_count": 1, "score": 0, "last_activity_date": 1489871926, "creation_date": 1489869241, "question_id": 42879544, "link": "https://stackoverflow.com/questions/42879544/processing-trees-in-parallel-in-rust", "title": "Processing trees in parallel in Rust", "body": "<p>I have a tree structure in Rust which I would like to process in parallel. My real problem is more complicated, but this is essentially the serial version I have now:</p>\n\n<pre><code>#[derive(Debug)]\nenum BinaryTree {\n    Node(Box&lt;BinaryTree&gt;, Box&lt;BinaryTree&gt;),\n    Leaf(i32),\n}\n\nuse BinaryTree::*;\n\nimpl BinaryTree {\n    /// Applies the given function to every leaf in the tree\n    fn map&lt;F: Fn(i32) -&gt; i32&gt;(&amp;mut self, f: &amp;F) {\n        match *self {\n            Node(ref mut tree1, ref mut tree2) =&gt; {\n                tree1.map(f);\n                tree2.map(f);\n            }\n            Leaf(ref mut n) =&gt; *n = f(*n),\n        }\n    }\n}\n</code></pre>\n\n<p>I'd like to parallelize this using: </p>\n\n<ul>\n<li>No locks</li>\n<li>A thread pool, or otherwise not having to re-create threads</li>\n<li>(Preferably) no unsafe code</li>\n</ul>\n\n<p>The problem seems very natural to parallelize: At every node, process each child node concurrently, potentially falling back to the serial version at some point. However, this requires scoped threads, which aren't in the standard library yet. I settled for the <a href=\"https://github.com/reem/rust-scoped-pool\" rel=\"nofollow noreferrer\">scoped-pool</a> crate, and arrived at this solution:  </p>\n\n<pre><code>extern crate scoped_pool;\n\nimpl BinaryTree {\n/// Applies the given function to every leaf in the tree\n    fn map_parallel&lt;F&gt;(&amp;mut self, f: &amp;F, scope: &amp;scoped_pool::Scope)\n        where F: Fn(i32) -&gt; i32 + Send + Sync\n    {\n        match self {\n            &amp;mut Node(ref mut tree1, ref mut tree2) =&gt; {\n                // Create new, smaller scope\n                scope.zoom(|scope2| {\n                    // Concurrently process child nodes\n                    scope2.recurse(|scope3| {\n                        tree1.map_parallel(f, scope3);\n                    });\n                    scope2.recurse(|scope3| {\n                        tree2.map_parallel(f, scope3);\n                    });\n                }\n                           );},\n            &amp;mut Leaf(ref mut n) =&gt; *n = f(*n),\n        }\n    }\n}\nfn main() {\n    let mut tree = Node(\n        Box::new(Node(\n            Box::new(Node(\n                Box::new(Node(\n                    Box::new(Node(\n                        Box::new(Leaf(11)),\n                        Box::new(Leaf(15)))),\n                    Box::new(Leaf(13)))),\n                Box::new(Leaf(19)))),\n            Box::new(Leaf(5)))),\n        Box::new(Leaf(10)));\n\n    let thread_pool = scoped_pool::Pool::new(4);\n    tree.map_parallel(&amp;|n| n + 1, &amp;scoped_pool::Scope::forever(thread_pool));\n    println!(\"{:?}\", tree);\n}\n</code></pre>\n\n<p>However, this appears to get stuck in a deadlock, and I don't understand why. What is the idiomatic way to process trees in parallel in Rust?</p>\n"}, {"tags": ["rust", "borrow-checker", "memory-safety"], "answers": [{"comments": [{"owner": {"reputation": 1093, "user_id": 3642914, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/034a47abb43659aba14fef3ff0eff17c?s=128&d=identicon&r=PG", "display_name": "Leonora Tindall", "link": "https://stackoverflow.com/users/3642914/leonora-tindall"}, "edited": false, "score": 0, "creation_date": 1489869074, "post_id": 42879470, "comment_id": 72862577, "body": "The strategy of moving <code>get_b</code> to <code>B</code> had not occured to me, but in this case it works extremely well since the purpose of <code>State</code> is to entirely encapsulate both <code>A</code> and <code>B</code>. Many thanks."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 9, "last_activity_date": 1489923731, "last_edit_date": 1489923731, "creation_date": 1489868811, "answer_id": 42879470, "question_id": 42879098, "link": "https://stackoverflow.com/questions/42879098/why-are-borrows-of-struct-members-allowed-in-mut-self-but-not-of-self-to-immut/42879470#42879470", "title": "Why are borrows of struct members allowed in &amp;mut self, but not of self to immutable methods?", "body": "<p>A key aspect of mutable references is that they are guaranteed to be the <strong>only</strong> way to access a particular value while they exist (unless they're reborrowed, which \"disables\" them temporarily).</p>\n\n<p>When you write</p>\n\n<pre><code>self.a.do_something(&amp;self.b);\n</code></pre>\n\n<p>the compiler is able to see that the borrow on <code>self.a</code> (which is taken implicitly to perform the method call) is distinct from the borrow on <code>self.b</code>, because it can reason about direct field accesses.</p>\n\n<p>However, when you write</p>\n\n<pre><code>self.a.do_something(self.get_b());\n</code></pre>\n\n<p>then the compiler doesn't see a borrow on <code>self.b</code>, but rather a borrow on <code>self</code>. That's because lifetime parameters on method signatures cannot propagate such detailed information about borrows. Therefore, the compiler cannot guarantee that the value returned by <code>self.get_b()</code> doesn't give you access to <code>self.a</code>, which would create two references that can access <code>self.a</code>, one of them being mutable, which is illegal.</p>\n\n<p>The reason field borrows don't propagate across functions is to simplify type checking and borrow checking (for machines <em>and</em> for humans). The principle is that the signature should be sufficient for performing those tasks: changing the implementation of a function should not cause errors in its callers.</p>\n\n<blockquote>\n  <p>What if I need to do something more complex than just returning a member in order to get the argument for <code>a.do_something()</code>?</p>\n</blockquote>\n\n<p>I would move <code>get_b</code> from <code>State</code> to <code>B</code> and call <code>get_b</code> on <code>self.b</code>. This way, the compiler can see the distinct borrows on <code>self.a</code> and <code>self.b</code> and will accept the code.</p>\n\n<pre><code>self.a.do_something(self.b.get_b());\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 1093, "user_id": 3642914, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/034a47abb43659aba14fef3ff0eff17c?s=128&d=identicon&r=PG", "display_name": "Leonora Tindall", "link": "https://stackoverflow.com/users/3642914/leonora-tindall"}, "edited": false, "score": 1, "creation_date": 1489886123, "post_id": 42879534, "comment_id": 72866775, "body": "This is interesting. The real world case this minimal example was extracted from was a struct containing the all the game-relevant state of a Pong clone, and <code>A</code> and <code>B</code> were the ball and paddle. In this case, a type <code>PhysicsState</code> could be extracted from the general <code>GameState</code>. Thank you for that insight."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1489869193, "last_edit_date": 1495542731, "creation_date": 1489869193, "answer_id": 42879534, "question_id": 42879098, "link": "https://stackoverflow.com/questions/42879098/why-are-borrows-of-struct-members-allowed-in-mut-self-but-not-of-self-to-immut/42879534#42879534", "title": "Why are borrows of struct members allowed in &amp;mut self, but not of self to immutable methods?", "body": "<p>Yes, the compiler isolates functions for the purposes of the safety checks it makes. If it didn't, then every function would essentially have to be inlined everywhere. No one would appreciate this for at least two reasons:</p>\n\n<ol>\n<li>Compile times would go <em>through the roof</em>, and many opportunities for parallelization would have to be discarded.</li>\n<li>Changes to a function N calls away could affect the <em>current</em> function. See also <a href=\"https://stackoverflow.com/questions/31609137/why-are-explicit-lifetimes-needed-in-rust\">Why are explicit lifetimes needed in Rust?</a> which touches on the same concept.</li>\n</ol>\n\n<blockquote>\n  <p>what kind of memory-unsafety is the compiler saving me from here</p>\n</blockquote>\n\n<p>None, really. In fact, it could be argued that it's creating false positives, as your example shows.</p>\n\n<p>It's really more of a benefit for preserving <strong>programmer sanity</strong>.</p>\n\n<hr>\n\n<p>The general advice that I give and follow when I encounter this problem is that the compiler is guiding you to discovering a new type in your existing code. </p>\n\n<p>Your particular example is a bit too simplified for this to make sense, but if you had <code>struct Foo(A, B, C)</code> and found that a method on <code>Foo</code> needed <code>A</code> and <code>B</code>, that's often a good sign that there's a hidden type composed of <code>A</code> and <code>B</code>: <code>struct Foo(Bar, C); struct Bar(A, B)</code>.</p>\n\n<p>This isn't a silver bullet as you can end up with methods that need each pair of data, but in my experience it works the majority of the time.</p>\n"}], "owner": {"reputation": 1093, "user_id": 3642914, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/034a47abb43659aba14fef3ff0eff17c?s=128&d=identicon&r=PG", "display_name": "Leonora Tindall", "link": "https://stackoverflow.com/users/3642914/leonora-tindall"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 751, "favorite_count": 2, "accepted_answer_id": 42879470, "answer_count": 2, "score": 8, "last_activity_date": 1489923731, "creation_date": 1489866644, "last_edit_date": 1489867185, "question_id": 42879098, "link": "https://stackoverflow.com/questions/42879098/why-are-borrows-of-struct-members-allowed-in-mut-self-but-not-of-self-to-immut", "title": "Why are borrows of struct members allowed in &amp;mut self, but not of self to immutable methods?", "body": "<p>If I have a struct that encapsulates two members, and updates one based on the other, that's fine as long as I do it this way:</p>\n\n<pre><code>struct A {\n    value: i64\n}\n\nimpl A {\n    pub fn new() -&gt; Self {\n        A { value: 0 }\n    }\n    pub fn do_something(&amp;mut self, other: &amp;B) {\n        self.value += other.value;\n    }\n    pub fn value(&amp;self) -&gt; i64 {\n        self.value\n    }\n}\n\nstruct B {\n    pub value: i64\n}\n\nstruct State {\n    a: A,\n    b: B\n}\n\nimpl State {\n    pub fn new() -&gt; Self {\n        State {\n            a: A::new(),\n            b: B { value: 1 }\n        }\n    }\n    pub fn do_stuff(&amp;mut self) -&gt; i64 {\n        self.a.do_something(&amp;self.b);\n        self.a.value()\n    }\n    pub fn get_b(&amp;self) -&gt; &amp;B {\n        &amp;self.b\n    }\n}\n\nfn main() {\n    let mut state = State::new();\n    println!(\"{}\", state.do_stuff());\n}\n</code></pre>\n\n<p>That is, when I directly refer to <code>self.b</code>. But when I change <code>do_stuff()</code> to this:</p>\n\n<pre><code>pub fn do_stuff(&amp;mut self) -&gt; i64 {\n    self.a.do_something(self.get_b());\n    self.a.value()\n}\n</code></pre>\n\n<p>The compiler complains: <code>cannot borrow `*self` as immutable because `self.a` is also borrowed as mutable</code>.</p>\n\n<p>What if I need to do something more complex than just returning a member in order to get the argument for <code>a.do_something()</code>? Must I make a function that returns <code>b</code> by value and store it in a binding, then pass that binding to <code>do_something()</code>? What if <code>b</code> is complex?</p>\n\n<p>More importantly to my understanding, what kind of memory-unsafety is the compiler saving me from here?</p>\n"}, {"tags": ["string", "hashmap", "rust", "append", "memory-efficient"], "comments": [{"owner": {"reputation": 187800, "user_id": 320615, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/65c80e12b6a33913538653f6d4ef1277?s=128&d=identicon&r=PG", "display_name": "Dogbert", "link": "https://stackoverflow.com/users/320615/dogbert"}, "edited": false, "score": 2, "creation_date": 1489856821, "post_id": 42877284, "comment_id": 72858397, "body": "Just <code>mystringval.push_str(sourcePortion.as_str())</code> should work. Could you give that a shot?"}, {"owner": {"reputation": 138, "user_id": 2041635, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/nlgiD.jpg?s=128&g=1", "display_name": "ezekiel68", "link": "https://stackoverflow.com/users/2041635/ezekiel68"}, "reply_to_user": {"reputation": 187800, "user_id": 320615, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/65c80e12b6a33913538653f6d4ef1277?s=128&d=identicon&r=PG", "display_name": "Dogbert", "link": "https://stackoverflow.com/users/320615/dogbert"}, "edited": false, "score": 0, "creation_date": 1489857576, "post_id": 42877284, "comment_id": 72858662, "body": "Yes, it did.  I guess it surprises me that all the examples I see of altering a HashMap Entry include the dereference character.  Do you mind writing up an answer that includes why my case doesn&#39;t need that?  I&#39;ll be glad to mark it as accepted."}], "answers": [{"comments": [{"owner": {"reputation": 138, "user_id": 2041635, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/nlgiD.jpg?s=128&g=1", "display_name": "ezekiel68", "link": "https://stackoverflow.com/users/2041635/ezekiel68"}, "edited": false, "score": 0, "creation_date": 1489858435, "post_id": 42877568, "comment_id": 72858964, "body": "Thanks for the detailed answer, @Shepmaster"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 138, "user_id": 2041635, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/nlgiD.jpg?s=128&g=1", "display_name": "ezekiel68", "link": "https://stackoverflow.com/users/2041635/ezekiel68"}, "edited": false, "score": 0, "creation_date": 1489858483, "post_id": 42877568, "comment_id": 72858980, "body": "@ezekiel68 make sure to upvote all answers that are useful, even those you&#39;ve accepted."}, {"owner": {"reputation": 138, "user_id": 2041635, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/nlgiD.jpg?s=128&g=1", "display_name": "ezekiel68", "link": "https://stackoverflow.com/users/2041635/ezekiel68"}, "edited": false, "score": 0, "creation_date": 1489858556, "post_id": 42877568, "comment_id": 72859008, "body": "you&#39;ll make a decent stackoverflow citizen of me yet!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 138, "user_id": 2041635, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/nlgiD.jpg?s=128&g=1", "display_name": "ezekiel68", "link": "https://stackoverflow.com/users/2041635/ezekiel68"}, "edited": false, "score": 0, "creation_date": 1489858764, "post_id": 42877568, "comment_id": 72859067, "body": "@ezekiel68 we are all about those magic internet points here!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1489858178, "creation_date": 1489858178, "answer_id": 42877568, "question_id": 42877284, "link": "https://stackoverflow.com/questions/42877284/how-to-append-to-string-values-in-a-hash-table-in-rust/42877568#42877568", "title": "How to append to string values in a hash table in Rust?", "body": "<p>If you inspect the type returned by <code>or_insert</code>:</p>\n\n<pre><code>fn update_count(map: &amp;mut HashMap&lt;&amp;str, u32&gt;) {\n    let () = map.entry(\"hello\").or_insert(0);\n}\n</code></pre>\n\n<p>You will see it is a mutable reference:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; src/main.rs:4:9\n  |\n4 |     let () = map.entry(\"hello\").or_insert(0);\n  |         ^^ expected &amp;mut u32, found ()\n  |\n  = note: expected type `&amp;mut u32`\n             found type `()`\n</code></pre>\n\n<p>That means that you can call any method that needs a <code>&amp;mut self</code> receiver with no extra syntax:</p>\n\n<pre><code>fn update_mapping(map: &amp;mut HashMap&lt;&amp;str, String&gt;) {\n    map.entry(\"hello\").or_insert_with(String::new).push_str(\"wow\")\n}\n</code></pre>\n\n<hr>\n\n<p>Turning back to the integer form, what happens if we don't put the dereference?</p>\n\n<pre><code>fn update_count(map: &amp;mut HashMap&lt;&amp;str, i32&gt;) {\n    map.entry(\"hello\").or_insert(0) += 1;\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0368]: binary assignment operation `+=` cannot be applied to type `&amp;mut i32`\n --&gt; src/main.rs:4:5\n  |\n4 |     map.entry(\"hello\").or_insert(0) += 1;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot use `+=` on type `&amp;mut i32`\n\nerror[E0067]: invalid left-hand side expression\n --&gt; src/main.rs:4:5\n  |\n4 |     map.entry(\"hello\").or_insert(0) += 1;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid expression for left-hand side\n</code></pre>\n\n<p>The difference is that the <code>+=</code> operator <em>automatically</em> takes a mutable reference to the left-hand side of the expression. Expanded, it might look something like this:</p>\n\n<pre><code>use std::ops::AddAssign;\n\nfn update_count(map: &amp;mut HashMap&lt;&amp;str, i32&gt;) {\n    AddAssign::add_assign(&amp;mut map.entry(\"hello\").or_insert(0), 1);\n}\n</code></pre>\n\n<p>Adding the explicit dereference brings the types back to one that has the trait implemented:</p>\n\n<pre><code>use std::ops::AddAssign;\n\nfn update_count(map: &amp;mut HashMap&lt;&amp;str, i32&gt;) {\n    AddAssign::add_assign(&amp;mut (*map.entry(\"hello\").or_insert(0)), 1);\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 187800, "user_id": 320615, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/65c80e12b6a33913538653f6d4ef1277?s=128&d=identicon&r=PG", "display_name": "Dogbert", "link": "https://stackoverflow.com/users/320615/dogbert"}, "is_accepted": true, "score": 2, "last_activity_date": 1489858183, "creation_date": 1489858183, "answer_id": 42877570, "question_id": 42877284, "link": "https://stackoverflow.com/questions/42877284/how-to-append-to-string-values-in-a-hash-table-in-rust/42877570#42877570", "title": "How to append to string values in a hash table in Rust?", "body": "<p><code>*mystringval.push_str(sourcePortion.as_str());</code> is parsed as <code>*(mystringval.push_str(sourcePortion.as_str()));</code> and since <code>String::push_str</code> returns <code>()</code>, you get the <code>() cannot be dereferenced</code> error.</p>\n\n<p>Using parentheses around the dereference solves the precedence issue:</p>\n\n<pre><code>(*mystringval).push_str(sourcePortion.as_str());\n</code></pre>\n\n<p>The reason <code>*myval += 1</code> works is because unary <code>*</code> has a higher precedence than <code>+=</code>, which means it's parsed as</p>\n\n<pre><code>(*myval) += 1\n</code></pre>\n\n<hr>\n\n<p>Since <code>or_insert</code> returns <code>&amp;mut V</code>, you don't need to dereference it before calling its methods. The following also works:</p>\n\n<pre><code>mystringval.push_str(sourcePortion.as_str());\n</code></pre>\n"}], "owner": {"reputation": 138, "user_id": 2041635, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/nlgiD.jpg?s=128&g=1", "display_name": "ezekiel68", "link": "https://stackoverflow.com/users/2041635/ezekiel68"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 622, "favorite_count": 0, "accepted_answer_id": 42877570, "answer_count": 2, "score": 0, "last_activity_date": 1489858276, "creation_date": 1489856591, "last_edit_date": 1489858276, "question_id": 42877284, "link": "https://stackoverflow.com/questions/42877284/how-to-append-to-string-values-in-a-hash-table-in-rust", "title": "How to append to string values in a hash table in Rust?", "body": "<p>I have source files that contain text CSV lines for many products for a given day.  I want to use Rust to collate these files so that I end up with many new destination CSV files, one per product, each containing portions of the lines only specific to that product.</p>\n\n<p>My current solution is to loop over the lines of the source files and use a <code>HashMap&lt;String, String&gt;</code> to gather the lines for each product.  I split each source line and use the element containing the product ID as a key, to obtain an <code>Entry</code> (occupied or vacant) in my <code>HashMap</code>.  If it is vacant, I initialize the value with a new <code>String</code> that is allocated up-front with a given capacity, so that I can efficiently append to it thereafter.</p>\n\n<pre><code>// so far, so good (the first CSV item is the product ID)\nlet mystringval = productmap.entry(splitsource[0].to_owned()).or_insert(String::with_capacity(SOME_CAPACITY));\n</code></pre>\n\n<p>I then want to append formatted elements of the same source line to this <code>Entry</code>.  There are many examples online, such as\n<br><a href=\"https://doc.rust-lang.org/std/collections/hash_map/struct.HashMap.html#method.entry\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/std/collections/hash_map/struct.HashMap.html#method.entry</a>\n<br>of how to make this work if the <code>HashMap</code> value is an integer:</p>\n\n<pre><code>// this works if you obtain an Entry from a HashMap containing int vals\n*myval += 1;\n</code></pre>\n\n<p>I haven't figured out how to append more text to the <code>Entry</code> I obtain from my <code>HashMap&lt;String, String&gt;</code> using this kind of syntax, and I've done my best to research examples online. There are surprisingly few examples anywhere of manipulating non-numeric entries in Rust data structures.</p>\n\n<pre><code>// using the Entry obtained from my first code snippet above\n*mystringval.push_str(sourcePortion.as_str());\n</code></pre>\n\n<p>Attempting to compile this produces the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: type `()` cannot be dereferenced\n   --&gt; coll.rs:102:17\n    |\n102 |                 *mystringval.push_str(sourcePortion.as_str());\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>How can I append to a <code>String</code> inside the <code>Entry</code> value?</p>\n"}, {"tags": ["struct", "rust", "traits"], "answers": [{"comments": [{"owner": {"reputation": 928, "user_id": 4141219, "user_type": "registered", "accept_rate": 88, "profile_image": "https://lh4.googleusercontent.com/-d32iaz7YS1g/AAAAAAAAAAI/AAAAAAAAAao/vl5qXOl_78g/photo.jpg?sz=128", "display_name": "Charlie", "link": "https://stackoverflow.com/users/4141219/charlie"}, "edited": false, "score": 0, "creation_date": 1489857916, "post_id": 42877371, "comment_id": 72858770, "body": "Thanks for your answer. However, as you might guess, I&#39;d also like to create new <code>Element</code>s (<code>Molecule</code>s in this case) at runtime. I&#39;m not sure if (and how) that is possible with enums. For now, I&#39;ll see how I can change my code."}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "reply_to_user": {"reputation": 928, "user_id": 4141219, "user_type": "registered", "accept_rate": 88, "profile_image": "https://lh4.googleusercontent.com/-d32iaz7YS1g/AAAAAAAAAAI/AAAAAAAAAao/vl5qXOl_78g/photo.jpg?sz=128", "display_name": "Charlie", "link": "https://stackoverflow.com/users/4141219/charlie"}, "edited": false, "score": 0, "creation_date": 1489858561, "post_id": 42877371, "comment_id": 72859010, "body": "See it like this: for each struct that would have implemented the <code>Element</code>  trait, you instead add a variant to the <code>Element</code> enum. You can&#39;t create types at runtime in Rust, and neither can you create enum variants at runtime, so using an enum instead of a family of types shouldn&#39;t hinder you in that regard."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 2, "last_activity_date": 1489857062, "creation_date": 1489857062, "answer_id": 42877371, "question_id": 42877213, "link": "https://stackoverflow.com/questions/42877213/rust-struct-cant-replace-trait-in-hashmap/42877371#42877371", "title": "Rust struct can&#39;t replace trait in HashMap", "body": "<p>The standard solution to this problem would be to use <em>trait objects</em> instead of generics. Specifically, <code>RedoxReaction</code> would be defined as:</p>\n\n<pre><code>#[derive(Eq, Hash, PartialEq)]\nstruct RedoxReaction { left: Box&lt;Element&gt; }\n</code></pre>\n\n<p>However, that doesn't work here because neither <code>PartialEq</code>, <code>Eq</code> nor <code>Hash</code> are <a href=\"https://huonw.github.io/blog/2015/01/object-safety/\" rel=\"nofollow noreferrer\"><em>object safe</em></a>. Indeed, it doesn't make a lot of sense to ask if two <code>Elements</code> are equal when one of them is an <code>Ion</code> and the other is a <code>Photon</code>.</p>\n\n<p>I would instead recommend that you consider using an <a href=\"https://doc.rust-lang.org/book/enums.html\" rel=\"nofollow noreferrer\">enum</a> for your elements. All your elements would have the same type (the enum <code>Element</code>), and object safety would not be an issue.</p>\n"}, {"tags": [], "owner": {"reputation": 928, "user_id": 4141219, "user_type": "registered", "accept_rate": 88, "profile_image": "https://lh4.googleusercontent.com/-d32iaz7YS1g/AAAAAAAAAAI/AAAAAAAAAao/vl5qXOl_78g/photo.jpg?sz=128", "display_name": "Charlie", "link": "https://stackoverflow.com/users/4141219/charlie"}, "is_accepted": false, "score": 1, "last_activity_date": 1489867129, "last_edit_date": 1489867129, "creation_date": 1489864863, "answer_id": 42878816, "question_id": 42877213, "link": "https://stackoverflow.com/questions/42877213/rust-struct-cant-replace-trait-in-hashmap/42878816#42878816", "title": "Rust struct can&#39;t replace trait in HashMap", "body": "<p>I eventually solved this problem by using the <em>hash</em> of the <code>Reaction</code> as the key of the <code>HashMap</code> with the following function:</p>\n\n<pre><code>use std::collections::hash_map::DefaultHasher;\nuse std::hash::*;\n\nfn reaction_to_hash&lt;E: Element&gt;(reaction: &amp;Reaction&lt;E&gt;) -&gt; u64 {\n    let mut s = DefaultHasher::new();\n    reaction.hash(&amp;mut s);\n    s.finish()\n}\n</code></pre>\n\n<p>Then you can use <code>map.insert(reaction_to_hash(&amp;reaction), &lt;value&gt;)</code> to store the values, and <code>map.get(&amp; reaction_to_hash(&amp;reaction))</code> to retrieve the value.</p>\n"}], "owner": {"reputation": 928, "user_id": 4141219, "user_type": "registered", "accept_rate": 88, "profile_image": "https://lh4.googleusercontent.com/-d32iaz7YS1g/AAAAAAAAAAI/AAAAAAAAAao/vl5qXOl_78g/photo.jpg?sz=128", "display_name": "Charlie", "link": "https://stackoverflow.com/users/4141219/charlie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 730, "favorite_count": 1, "accepted_answer_id": 42877371, "answer_count": 2, "score": 1, "last_activity_date": 1489867129, "creation_date": 1489856154, "last_edit_date": 1489858196, "question_id": 42877213, "link": "https://stackoverflow.com/questions/42877213/rust-struct-cant-replace-trait-in-hashmap", "title": "Rust struct can&#39;t replace trait in HashMap", "body": "<p>I'm trying to create a <code>HashMap</code> containing a known value for a specific input. This input can accept multiple types, as long as they implement a certain trait. In this case, however, only a certain type is given, which Rust doesn't like.</p>\n\n<p>Is there any way to \"convert\" a struct into a trait, or otherwise fix this issue?</p>\n\n<pre><code>#![allow(unused)]\n\nuse std::collections::HashMap;\nuse std::hash::*;\n\n\ntrait Element: Eq + PartialEq + Hash {}\n\ntrait Reaction&lt;T: Element&gt; {}\n\n\n#[derive(Eq, Hash, PartialEq)]\nstruct Ion {\n    charge: u16\n}\n\nimpl Element for Ion {}\n\n\n#[derive(Eq, Hash, PartialEq)]\nstruct RedoxReaction&lt;T: Element&gt; { left: T }\n\nimpl&lt;T: Element&gt; Reaction&lt;T&gt; for RedoxReaction&lt;T&gt; {}\n\n\nfn get_sep_database&lt;T: Element&gt;() -&gt; HashMap&lt;RedoxReaction&lt;T&gt;, f32&gt; {\n    let mut map: HashMap&lt;RedoxReaction&lt;T&gt;, f32&gt; = HashMap::new();\n\n    let reaction = RedoxReaction {\n        left: Ion {\n            charge: 1\n        }\n    };\n\n    // note: expected type `RedoxReaction&lt;T&gt;`\n    //       found type `RedoxReaction&lt;Ion&gt;`\n    map.insert(reaction, 0.000 as f32);\n\n    return map;\n}\n\n\nfn main() {\n    let db = get_sep_database();\n\n    let reaction = RedoxReaction {\n        left: Ion {\n            charge: 1\n        }\n    };\n\n    // expected this to be 0.000\n    let sep = db.get(&amp;reaction);\n}\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1489848236, "last_edit_date": 1495540828, "creation_date": 1489848236, "answer_id": 42875758, "question_id": 42873092, "link": "https://stackoverflow.com/questions/42873092/is-it-possible-to-check-if-a-field-implements-a-trait-with-custom-derive/42875758#42875758", "title": "Is it possible to check if a field implements a trait with custom derive?", "body": "<p>Take a look at the <a href=\"https://stackoverflow.com/q/28580386/155423\">expanded version</a> of your code:</p>\n\n<pre><code>#![feature(prelude_import)]\n#![no_std]\n#[prelude_import]\nuse std::prelude::v1::*;\n#[macro_use]\nextern crate std as std;\nstruct Foo;\n\nstruct Bar {\n    f: Foo,\n}\n#[automatically_derived]\n#[allow(unused_qualifications)]\nimpl ::std::clone::Clone for Bar {\n    #[inline]\n    fn clone(&amp;self) -&gt; Bar {\n        match *self {\n            Bar { f: ref __self_0_0 } =&gt; Bar { f: ::std::clone::Clone::clone(&amp;(*__self_0_0)) },\n        }\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>All it does is call a function that has a trait bound, passing in the arguments. This is useful because <code>clone</code> needs to be called recursively anyway. This gets you the check \"for free\".</p>\n\n<p>If you don't need to call the trait in question, you can still do something similar to <a href=\"https://stackoverflow.com/q/32764797/155423\">enforce that an argument implements a trait at compile time</a>. <code>Eq</code> does this by implementing a <a href=\"https://github.com/rust-lang/rust/blob/1.16.0/src/libcore/cmp.rs#L168\" rel=\"nofollow noreferrer\">hidden function on the trait</a>. You could also generate one-off functions that express your trait bound.</p>\n"}], "owner": {"reputation": 13772, "user_id": 944430, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/4d2b181af01c96927ac05eb864d6b7b6?s=128&d=identicon&r=PG", "display_name": "Maik Klein", "link": "https://stackoverflow.com/users/944430/maik-klein"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 454, "favorite_count": 0, "accepted_answer_id": 42875758, "answer_count": 1, "score": 2, "last_activity_date": 1544287644, "creation_date": 1489832447, "last_edit_date": 1544287644, "question_id": 42873092, "link": "https://stackoverflow.com/questions/42873092/is-it-possible-to-check-if-a-field-implements-a-trait-with-custom-derive", "title": "Is it possible to check if a field implements a trait with custom derive?", "body": "<pre><code>struct Foo;\n\n#[derive(Clone)]\nstruct Bar {\n    f: Foo,\n}\n\nfn main() {}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=0638677ecd6bd61eb488fb330d4bff96&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>This results in </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `Foo: std::clone::Clone` is not satisfied\n --&gt; &lt;anon&gt;:5:5\n  |\n5 |     f: Foo,\n  |     ^^^^^^ the trait `std::clone::Clone` is not implemented for `Foo`\n  |\n  = note: required by `std::clone::Clone::clone`\n</code></pre>\n\n<p>It is only possible to derive <code>Clone</code> if all the types of the fields implement clone. I would like to do the same thing.</p>\n\n<p><a href=\"https://docs.rs/syn/0.15/syn/struct.Field.html\" rel=\"nofollow noreferrer\"><code>Field</code></a> does not seem to expose which traits it implements. How would I check if a <a href=\"https://docs.rs/syn/0.15/syn/enum.Type.html\" rel=\"nofollow noreferrer\"><code>Type</code></a> implements a specific trait? Is this currently not possible?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1489806212, "post_id": 42869962, "comment_id": 72845844, "body": "Are you sure this has anything to do with <code>Rc</code>? Perhaps a duplicate of <a href=\"http://stackoverflow.com/q/30281664/155423\">Returning the T borrowed from RefCell&lt;T&gt;</a>?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1489806547, "post_id": 42869962, "comment_id": 72845912, "body": "You probably also want to read <a href=\"http://stackoverflow.com/q/32300132/155423\">Why can&#39;t I store a value and a reference to that value in the same struct?</a>"}, {"owner": {"reputation": 46, "user_id": 7614733, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bb9ef151507b6fb7cb6c78687756c37d?s=128&d=identicon&r=PG", "display_name": "Alan Somers", "link": "https://stackoverflow.com/users/7614733/alan-somers"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1490063070, "post_id": 42869962, "comment_id": 72933444, "body": "Thanks @Shepmaster, that second link was useful.  I think that my fundamental problem is that I&#39;m trying to store a naked reference in a struct that may be heap-allocated with an indeterminate lifetime.  It works for simple test cases, but not for more complicated code where the compiler can&#39;t guarantee the lifetimes.  I probably need to try to refactor the underlying library to not do that."}], "owner": {"reputation": 46, "user_id": 7614733, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bb9ef151507b6fb7cb6c78687756c37d?s=128&d=identicon&r=PG", "display_name": "Alan Somers", "link": "https://stackoverflow.com/users/7614733/alan-somers"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 717, "favorite_count": 0, "closed_date": 1491867531, "answer_count": 0, "score": 1, "last_activity_date": 1491867552, "creation_date": 1489805770, "last_edit_date": 1489806078, "question_id": 42869962, "link": "https://stackoverflow.com/questions/42869962/how-to-write-a-rust-function-that-returns-a-reference-to-the-inner-member-of-an", "closed_reason": "Duplicate", "title": "How to write a Rust function that returns a reference to the inner member of an Rc?", "body": "<p>My goal is to write a function that will take an <code>Rc&lt;RefCell&lt;&amp;'a mut [u8]&gt;&gt;</code> as an argument and return a struct that contains a reference to the inner slice, but I can't satisfy the borrow checker.  My first attempt looked like this:</p>\n\n<pre><code>pub fn mk_buf_holder&lt;'a&gt;(buf: Rc&lt;RefCell&lt;&amp;'a mut [u8]&gt;&gt;) -&gt; BufHolder&lt;'a&gt; {\n    BufHolder::&lt;'a&gt; { buf: buf.borrow_mut().deref_mut()}\n}\n</code></pre>\n\n<p>But that doesn't work, of course, because the result of <code>borrow_mut</code> goes out of scope.  My next attempt added extra members to the struct, just to keep around values that would otherwise be temporary.  I thought that putting them into the struct would give them the same lifetime as <code>buf</code>, but the borrow checker disagrees.  Here's the full example:</p>\n\n<pre><code>use std::cell::{Ref, RefCell, RefMut};\nuse std::ops::DerefMut;\nuse std::rc::Rc;\n\npub struct BufHolder&lt;'a&gt; {\n    buf: &amp;'a mut [u8],\n    bufclone: Rc&lt;RefCell&lt;&amp;'a mut [u8]&gt;&gt;,\n    bufref: RefMut&lt;'a, &amp;'a mut[u8]&gt;\n}\n\npub fn mk_buf_holder&lt;'a&gt;(buf: Rc&lt;RefCell&lt;&amp;'a mut [u8]&gt;&gt;) -&gt; BufHolder&lt;'a&gt; {\n    let bufclone = buf.clone();\n    let bufref = bufclone.borrow_mut();\n    BufHolder::&lt;'a&gt; { bufclone: bufclone,\n                      buf: bufref.deref_mut(),\n                      bufref: bufref }\n}\n</code></pre>\n\n<p>The compiler still tells me that the result of <code>borrow_mut()</code> doesn't live long enough, even though I added it to the output structure.  It's as if the compiler is copying into the output, instead of moving it.  How can I fix this function?</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: `bufclone` does not live long enough\n  --&gt; src/main.rs:13:18\n   |\n13 |     let bufref = bufclone.borrow_mut();\n   |                  ^^^^^^^^ does not live long enough\n...\n19 | }\n   | - borrowed value only lives until here\n   |\nnote: borrowed value must be valid for the lifetime 'a as defined on the body at 11:74...\n  --&gt; src/main.rs:11:75\n   |\n11 |   pub fn mk_buf_holder&lt;'a&gt;(buf: Rc&lt;RefCell&lt;&amp;'a mut [u8]&gt;&gt;) -&gt; BufHolder&lt;'a&gt; {\n   |  ___________________________________________________________________________^ starting here...\n12 | |     let bufclone = buf.clone();\n13 | |     let bufref = bufclone.borrow_mut();\n14 | |     BufHolder::&lt;'a&gt; {\n15 | |         bufclone: bufclone,\n16 | |         buf: bufref.deref_mut(),\n17 | |         bufref: bufref,\n18 | |     }\n19 | | }\n   | |_^ ...ending here\n\nerror: `bufref` does not live long enough\n  --&gt; src/main.rs:16:14\n   |\n16 |         buf: bufref.deref_mut(),\n   |              ^^^^^^ does not live long enough\n...\n19 | }\n   | - borrowed value only lives until here\n   |\nnote: borrowed value must be valid for the lifetime 'a as defined on the body at 11:74...\n  --&gt; src/main.rs:11:75\n   |\n11 |   pub fn mk_buf_holder&lt;'a&gt;(buf: Rc&lt;RefCell&lt;&amp;'a mut [u8]&gt;&gt;) -&gt; BufHolder&lt;'a&gt; {\n   |  ___________________________________________________________________________^ starting here...\n12 | |     let bufclone = buf.clone();\n13 | |     let bufref = bufclone.borrow_mut();\n14 | |     BufHolder::&lt;'a&gt; {\n15 | |         bufclone: bufclone,\n16 | |         buf: bufref.deref_mut(),\n17 | |         bufref: bufref,\n18 | |     }\n19 | | }\n   | |_^ ...ending here\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 14748, "user_id": 132728, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/3e932264fb24dfdfd63dc467bfb1e957?s=128&d=identicon&r=PG", "display_name": "Max", "link": "https://stackoverflow.com/users/132728/max"}, "edited": false, "score": 1, "creation_date": 1489902468, "post_id": 42869586, "comment_id": 72869255, "body": "Thanks a lot, yeah, I didn&#39;t think about crate-level visibility. I agree the nested submodule is weird, that should be removed and I move the modules one level up. As a beginner in Rust I have to say the module system is one of the weaker aspects of the language and gave me a bit of trouble, but I hope I can get the hang out of it some time."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1489805317, "last_edit_date": 1489805317, "creation_date": 1489801980, "answer_id": 42869586, "question_id": 42869134, "link": "https://stackoverflow.com/questions/42869134/compiler-warns-about-unused-code-for-private-functions-that-are-actually-used/42869586#42869586", "title": "Compiler warns about unused code for private functions that are actually used", "body": "<blockquote>\n  <p>Why is the function marked as unused although it's actually used in the same file in the same module?</p>\n</blockquote>\n\n<p>Because unused code is a transitive calculation, and the code that calls that function cannot be called from outside the crate. The compiler is correct here.</p>\n\n<hr>\n\n<p>The first error I see is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning: static item is never used: `ALPHABET`, #[warn(dead_code)] on by default\n --&gt; src/spellcheck/edits.rs:3:1\n</code></pre>\n\n<p>That's defined as:</p>\n\n<p><strong>src/spellcheck/edits.rs</strong></p>\n\n<pre><code>static ALPHABET : &amp;'static str = \"abcdefghijklmnopqrstuvwxyz\";\n</code></pre>\n\n<p>So it's not public, and can only be used from inside the module. </p>\n\n<p>It's called from <code>replaces</code> and <code>inserts</code>. Both of those are used from <code>edits1</code>, a public function. Is the module containing it (<code>edits</code>) public?</p>\n\n<p><strong>src/spellcheck/mod.rs</strong></p>\n\n<pre><code>mod edits;\npub mod corrections;\npub mod dictionary;\n</code></pre>\n\n<p>Nope, it is not. So where is <code>edits1</code> called from? <code>kodecheck_spellcheck::spellcheck::corrections::create_candidates</code>, a non-public function. This is called by <code>suggest_corrections</code>, a public function, inside the public module <code>corrections</code>.</p>\n\n<p>Let's look up the tree...</p>\n\n<p><strong>src/lib-spellcheck.rs</strong></p>\n\n<pre><code>// @FIXME do we really need this here or move to sub-modules?\n#[macro_use]\nextern crate nom;\nextern crate regex;\n\nmod spellcheck;\n</code></pre>\n\n<p>Ah. For whatever reason, you've decided to introduce a completely nested private module <code>spellcheck</code> inside the crate (which is why the full path earlier is <code>kodecheck_spellcheck::spellcheck::corrections::create_candidates</code>).</p>\n\n<p>From this, we can see that <code>kodecheck_spellcheck::spellcheck</code> <strong>cannot be accessed from outside the crate</strong>; it's not <code>pub</code>.</p>\n\n<hr>\n\n<p>Let's create an example that uses the crate. This the the best way to see if it's true and would have been easy for you to test yourself:</p>\n\n<p><strong>examples/foo.rs</strong></p>\n\n<pre><code>extern crate kodecheck_spellcheck;\n\nfn main() {\n    kodecheck_spellcheck::spellcheck::corrections::create_candidates();\n}\n</code></pre>\n\n<p>Compiling this has the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: module `spellcheck` is private\n --&gt; examples/foo.rs:4:5\n  |\n4 |     kodecheck_spellcheck::spellcheck::corrections::create_candidates();\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<hr>\n\n<p>We could also create a <a href=\"/help/mcve\">MCVE</a>:</p>\n\n<pre><code>mod spellcheck {\n    mod edits {\n        static ALPHABET: &amp;'static str = \"\";\n\n        pub fn edits1() {\n            println!(\"{}\", ALPHABET);\n        }\n    }\n\n    pub mod corrections {\n        pub fn create_candidates() {\n            ::spellcheck::edits::edits1();\n        }\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>Note that this differs from your example because <code>main</code> is empty. Your library crate doesn't have a <code>main</code>method that calls anything. You could also explicitly specify that it's a library crate, but this is less well-known:</p>\n\n<pre><code>#![crate_type=\"lib\"]\n\nmod spellcheck {\n    mod edits {\n        static ALPHABET: &amp;'static str = \"\";\n\n        pub fn edits1() {\n            println!(\"{}\", ALPHABET);\n        }\n    }\n\n    pub mod corrections {\n        pub fn create_candidates() {\n            ::spellcheck::edits::edits1();\n        }\n    }\n}\n</code></pre>\n\n<hr>\n\n<p>Because there's a private module where all the code is, <em>nothing</em> outside this crate can call anything <em>inside</em> the crate. Therefore every method is unreachable.</p>\n\n<p>To fix it, I'd suggest combining <strong>src/spellcheck/mod.rs</strong> into <strong>src/lib-spellcheck.rs</strong>. You could also just make the module public, but I see no reason to have the extra module.</p>\n\n<p>I also see no reason to rename <strong>src/lib.rs</strong> to <strong>src/lib-spellcheck.rs</strong>; it's far more idiomatic to just leave it <strong>lib.rs</strong>.</p>\n\n<hr>\n\n<p>Additionally, you should go ahead and become comfortable with Rust style. Braces go on the same line as the signature:</p>\n\n<pre><code>fn calc_p(word: &amp;str, dict: &amp;Dictionary) -&gt; f32 {\n    // ...\n</code></pre>\n\n<p>Tools like <a href=\"https://github.com/rust-lang-nursery/rustfmt\" rel=\"nofollow noreferrer\">rustfmt</a> will help you apply the proper style.</p>\n"}], "owner": {"reputation": 14748, "user_id": 132728, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/3e932264fb24dfdfd63dc467bfb1e957?s=128&d=identicon&r=PG", "display_name": "Max", "link": "https://stackoverflow.com/users/132728/max"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 919, "favorite_count": 0, "accepted_answer_id": 42869586, "answer_count": 1, "score": 2, "last_activity_date": 1489805317, "creation_date": 1489797541, "last_edit_date": 1489805293, "question_id": 42869134, "link": "https://stackoverflow.com/questions/42869134/compiler-warns-about-unused-code-for-private-functions-that-are-actually-used", "title": "Compiler warns about unused code for private functions that are actually used", "body": "<p>I started grouping code for one of my projects into module files. I encountered a lot of warnings about unused code for functions in those modules, but the functions are actually used (privately within the module).</p>\n\n<p>An example from <a href=\"https://github.com/kodecheck/kodecheck/blob/master/lib-spellcheck/src/spellcheck/corrections.rs#L46\" rel=\"nofollow noreferrer\">my project</a>:</p>\n\n<pre><code>// ...\n\n// Line 46:\n\nfn calc_p(word: &amp;str, dict: &amp;Dictionary) -&gt; f32\n{\n    if !dict.contains_key(word) {\n        return 0.0;\n    }\n\n    let total: u32 = dict.values().sum();\n    dict[word] as f32 / total as f32\n}\n\n...\n</code></pre>\n\n<p>But <a href=\"https://github.com/kodecheck/kodecheck/blob/master/lib-spellcheck/src/spellcheck/corrections.rs#L13\" rel=\"nofollow noreferrer\">at line 13 in the same file</a>, same module the function is clearly used:</p>\n\n<pre><code>// ...\n\npub fn suggest_corrections(to_be_corrected: &amp;str, dict: &amp;Dictionary) -&gt; Vec&lt;(f32, String)&gt;\n{\n    let candidates = create_candidates(to_be_corrected, dict);\n\n    let mut weighted_candidates = candidates\n        .into_iter()\n        .map(|w| (calc_p(&amp;w, dict), w)) // Line 13 - calc_p used here\n        .collect::&lt;Vec&lt;_&gt;&gt;();\n\n    weighted_candidates.sort_by(|a, b| b.partial_cmp(a).unwrap());\n\n    weighted_candidates\n}\n\n// ...\n</code></pre>\n\n<p>Yet I get the compiler warning:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning: function is never used: `calc_p`, #[warn(dead_code)] on by default\n  --&gt; src/spellcheck/corrections.rs:46:1\n   |\n46 |   fn calc_p(word: &amp;str, dict: &amp;Dictionary) -&gt; f32\n   |  _^ starting here...\n47 | | {\n48 | |     if !dict.contains_key(word) {\n49 | |         return 0.0;\n50 | |     }\n51 | |\n52 | |     let total: u32 = dict.values().sum();\n53 | |     dict[word] as f32 / total as f32\n54 | | }\n   | |_^ ...ending here\n</code></pre>\n\n<p>I thought maybe it's because the module <code>corrections</code> is not public, but I also <a href=\"https://github.com/kodecheck/kodecheck/blob/master/lib-spellcheck/src/spellcheck/mod.rs\" rel=\"nofollow noreferrer\">marked the module as public</a> and still get the same warning.</p>\n\n<p>I tried to reproduce the behaviour using <a href=\"https://play.rust-lang.org/?gist=91e73fbec7c7e28337ff8279e112e873&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">the playground</a>, but if the module is defined in the same file it seems to work. The warnings also happen for me during <a href=\"https://travis-ci.org/kodecheck/kodecheck/jobs/212329539\" rel=\"nofollow noreferrer\">a TravisCI build</a>.</p>\n\n<p>Why is the function marked as unused although it's actually used in the same file in the same module?</p>\n\n<p>I'm using Rust 1.15 / 1.16.</p>\n"}, {"tags": ["windows", "batch-file", "rust", "rust-cargo", "oniguruma"], "comments": [{"owner": {"reputation": 7560, "user_id": 1034749, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2022f0caae119ed6232cf370bb9d9d3a?s=128&d=identicon&r=PG", "display_name": "fghj", "link": "https://stackoverflow.com/users/1034749/fghj"}, "edited": false, "score": 1, "creation_date": 1489878795, "post_id": 42868953, "comment_id": 72865372, "body": "Run <code>cargo build -v -v</code> to see <code>println</code> output from <code>build.rs</code>"}], "answers": [{"tags": [], "owner": {"reputation": 5700, "user_id": 4934640, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/2f69527ae459cbbda0ab5c2e08686a50?s=128&d=identicon&r=PG&f=1", "display_name": "user", "link": "https://stackoverflow.com/users/4934640/user"}, "is_accepted": true, "score": 0, "last_activity_date": 1489886218, "last_edit_date": 1495540447, "creation_date": 1489885837, "answer_id": 42881787, "question_id": 42868953, "link": "https://stackoverflow.com/questions/42868953/how-to-call-a-batch-builder-script-on-a-rust-cargo-build-script/42881787#42881787", "title": "How to call a batch builder script on a Rust cargo build script?", "body": "<p>I called it within <code>-vv</code>, as commented by <a href=\"https://stackoverflow.com/users/1034749\">user1034749</a>, it outputted correctly and ran the <code>make_win32.bat</code> file.</p>\n\n<p>I just have to put inside the <code>make_win32.bat</code> the command <code>cd D:\\rust-onig\\src</code> because the batch file was being ran on some folder elsewhere.</p>\n\n<pre><code>D:\\rust-onig&gt;cargo build -vv\n       Fresh libc v0.2.21\n       Fresh pkg-config v0.3.9\n       Fresh lazy_static v0.2.4\n       Fresh bitflags v0.7.0\n   Compiling onig_sys v61.3.0 (file:///D:/User/Downloads/rust-onig/onig_sys)\n     Running `D:\\rust-onig\\target\\debug\\build\\onig_sys-a911e1c40e7ed561\\build-script-build`\nOpening MAIN!!!!!!!!\n\n\n\n\n\nD:\\rust-onig\\onig_sys&gt;cd /d D:\\rust-onig\\onig_sys\\oniguruma\\src\n\nD:\\rust-onig\\onig_sys\\oniguruma\\src&gt;copy config.h.win32 config.h\n        1 file(s) copied.\n\nD:\\rust-onig\\onig_sys\\oniguruma\\src&gt;nmake -f Makefile.windows\n\nMicrosoft (R) Program Maintenance Utility Version 14.00.23506.0\nCopyright (C) Microsoft Corporation.  All rights reserved.\n\nprocess exited with: exit code: 0\nprocess exited with: exit code: 0\nprocess exited with: exit code: 0\nprocess exited with: exit code: 0\nprocess exited with: exit code: 0\n     Running `rustc --crate-name onig_sys onig_sys\\src\\lib.rs --crate-type lib --emit=dep-info,link -C debuginfo=2 --cfg \"feature=\\\"static_onig\\\"\" -C metadata=071c5dad786f940b -C extra-filename=-071c5dad786f940b --out-dir D:\\rust-onig\\target\\debug\\deps -L dependency=D:\\rust-onig\\target\\debug\\deps --extern libc=D:\\rust-onig\\target\\debug\\deps\\liblibc-5dc7b85e748840b4.rlib`\n   Compiling onig v1.2.2 (file:///D:/User/Downloads/rust-onig)\n     Running `rustc --crate-name onig src\\lib.rs --crate-type lib --emit=dep-info,link -C debuginfo=2 -C metadata=9cad49cfdc2b5108 -C extra-filename=-9cad49cfdc2b5108 --out-dir D:\\rust-onig\\target\\debug\\deps -L dependency=D:\\rust-onig\\target\\debug\\deps --extern libc=D:\\rust-onig\\target\\debug\\deps\\liblibc-5dc7b85e748840b4.rlib --extern lazy_static=D:\\rust-onig\\target\\debug\\deps\\liblazy_static-82c2efae9a7bf732.rlib --extern onig_sys=D:\\rust-onig\\target\\debug\\deps\\libonig_sys-071c5dad786f940b.rlib --extern bitflags=D:\\rust-onig\\target\\debug\\deps\\libbitflags-65ddff5d2b91509e.rlib`\n    Finished dev [unoptimized + debuginfo] target(s) in 8.92 secs\n</code></pre>\n\n<hr>\n\n<h1>Update</h1>\n\n<p>The <a href=\"https://github.com/rust-onig/rust-onig\" rel=\"nofollow noreferrer\">rust-onig</a> developer had added built-in supported to call <code>nmake</code> directly instead of using a <code>batch</code> file: <a href=\"https://stackoverflow.com/a/42875974/4934640\">https://stackoverflow.com/a/42875974/4934640</a></p>\n"}], "owner": {"reputation": 5700, "user_id": 4934640, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/2f69527ae459cbbda0ab5c2e08686a50?s=128&d=identicon&r=PG&f=1", "display_name": "user", "link": "https://stackoverflow.com/users/4934640/user"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 674, "favorite_count": 0, "accepted_answer_id": 42881787, "answer_count": 1, "score": 0, "last_activity_date": 1489886218, "creation_date": 1489796053, "last_edit_date": 1495540447, "question_id": 42868953, "link": "https://stackoverflow.com/questions/42868953/how-to-call-a-batch-builder-script-on-a-rust-cargo-build-script", "title": "How to call a batch builder script on a Rust cargo build script?", "body": "<h3>How to call a batch builder script on a Rust cargo build script?</h3>\n\n<p>The project <a href=\"https://github.com/rust-onig/rust-onig\" rel=\"nofollow noreferrer\">rust-onig</a> requires to compile the <a href=\"https://github.com/kkos/oniguruma\" rel=\"nofollow noreferrer\">oniguruma</a> C project. This is originated from the question <a href=\"https://stackoverflow.com/questions/42864924/error-failed-to-run-custom-build-command-for-onig-sys-v61-1-0\">error: failed to run custom build command for `onig_sys v61.1.0`</a> which attempts to build <code>oniguruma</code> on windows. Afterwards was noticed on windows within Visual Studio 2015, we need to call the <code>make_win32.bat</code>, instead of <code>cmake</code> to build the <code>oniguruma</code> C project.</p>\n\n<p>However I have no idea how to do the <code>cargo</code> builder to call the <code>make_win32.bat</code> build script. Based on <a href=\"http://doc.crates.io/build-script.html\" rel=\"nofollow noreferrer\">build-script</a>, I edited the default builder <a href=\"https://github.com/rust-onig/rust-onig/blob/master/onig_sys/build.rs\" rel=\"nofollow noreferrer\">build.rs</a> which is attempting to use <code>cmake</code> instead of <code>make_win32.bat</code>:</p>\n\n<pre><code>extern crate pkg_config;\nextern crate cmake;\n\n// use std::env;\n\n// fn compile_with_cmake() {\n//     use cmake::Config;\n\n//     let static_link = env::var(\"CARGO_FEATURE_STATIC_ONIG\").is_ok();\n\n//     // Builds the project in the directory located in `oniguruma`, installing it\n//     // into $OUT_DIR\n//     let mut c = Config::new(\"oniguruma\");\n\n//     let dst = if static_link {\n//                   c.define(\"BUILD_SHARED_LIBS\", \"OFF\")\n//               } else {\n//                   c.define(\"CMAKE_MACOSX_RPATH\", \"NO\")\n//               }\n//               .build();\n\n//     let link_type = if static_link {\n//         \"static\"\n//     } else {\n//         \"dylib\"\n//     };\n\n//     println!(\"cargo:rustc-link-search=native={}\",\n//              dst.join(\"build\").display());\n//     println!(\"cargo:rustc-link-lib={}=onig\", link_type);\n// }\n\npub fn main() {\n\n    println!(\"Opening MAIN!!!!!!!!\\n\\n\\n\\n\");\n    use std::process::Command;\n\n    let status = Command::new(\"D:\\\\User\\\\Downloads\\\\rust-onig\\\\onig_sys\\\\oniguruma\\\\make_win32.bat\").status().unwrap_or_else(|e|\n    {\n        panic!(\"failed to execute process: {}\", e)\n    });\n\n    println!(\"process exited with: {}\", status);\n    println!(\"process exited with: {}\", status);\n    println!(\"process exited with: {}\", status);\n    println!(\"process exited with: {}\", status);\n    println!(\"process exited with: {}\", status);\n\n    // if let Ok(_) = pkg_config::find_library(\"oniguruma\") {\n    //     return;\n    // }\n\n    // compile_with_cmake();\n}\n</code></pre>\n\n<p>But my builder script is not called, as the message <code>process exited with</code> is never showed:</p>\n\n<pre><code>D:\\Downloads\\rust-onig&gt;cargo build\n   Compiling onig_sys v61.1.0 (file:///D:/User/Downloads/rust-onig/onig_sys)\n   Compiling onig v1.2.0 (file:///D:/User/Downloads/rust-onig)\nwarning: unused import: `c_ulong`, #[warn(unused_imports)] on by default\n --&gt; src\\names.rs:6:27\n  |\n6 | use libc::{c_int, c_uint, c_ulong, c_void, c_uchar};\n  |                           ^^^^^^^\n\n    Finished dev [unoptimized + debuginfo] target(s) in 11.31 secs\n\nD:\\Downloads\\rust-onig&gt;\n</code></pre>\n\n<p>What is displayed, when do we attempt to used the <code>cmake</code> builder can be viewed on the question This is originated from the question <a href=\"https://stackoverflow.com/questions/42864924/error-failed-to-run-custom-build-command-for-onig-sys-v61-1-0\">error: failed to run custom build command for `onig_sys v61.1.0`</a></p>\n\n<p>The problem there is <code>cmake</code> is generating several <code>Visual Studio</code> projects, which purely do not know how to build <code>oniguruma</code>. The only solution able to effectively build it is the <code>make_win32.bat</code> which already comes within <code>oniguruma</code>. Moreover, we need to use the <code>make_win32.bat</code> instead of let <code>cmake</code> generating <code>Visual Studio</code>.</p>\n"}, {"tags": ["rust", "rust-cargo", "oniguruma"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1489777058, "post_id": 42864924, "comment_id": 72836696, "body": "<i>oniguruma\\src\\regenc.c(32): error C2099: initializer is not a constant</i> \u2014 that&#39;s why. For whatever reason, that line of C code is not compatible with your C compiler."}, {"owner": {"reputation": 5700, "user_id": 4934640, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/2f69527ae459cbbda0ab5c2e08686a50?s=128&d=identicon&r=PG&f=1", "display_name": "user", "link": "https://stackoverflow.com/users/4934640/user"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1489778267, "post_id": 42864924, "comment_id": 72837324, "body": "I downloaded the <code>oniguruma</code> and run the <code>make_win32</code> and it compiled successfully, with the same compiler (VS 2015). But somehow, when <code>Rust</code> is doing it, it is not working."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1489779758, "post_id": 42864924, "comment_id": 72838104, "body": "@user: Might be a different set of flags. Tracking down the line of the error I get <a href=\"https://github.com/kkos/oniguruma/blob/master/src/regenc.c#L32\" rel=\"nofollow noreferrer\">github.com/kkos/oniguruma/blob/master/src/regenc.c#L32</a>, where <a href=\"https://github.com/kkos/oniguruma/blob/d5e9cc2de2431fbaa833a9202e3cc89661dd95fe/src/regenc.h#L116\" rel=\"nofollow noreferrer\"><code>ONIG_ENCODING_DEFAULT</code> aliases <code>ONIG_ENCODING_ASCII</code></a> which is defined as <a href=\"https://github.com/kkos/oniguruma/blob/dacfaba1082a00abea5d564931458f8d659bf3f2/src/oniguruma.h#L205\" rel=\"nofollow noreferrer\">the address of a global</a>. It&#39;s indeed not a constant in C (see <a href=\"http://stackoverflow.com/questions/3025050\">stackoverflow.com/questions/3025050</a>), so maybe you compiled in C++ mode?"}, {"owner": {"reputation": 5700, "user_id": 4934640, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/2f69527ae459cbbda0ab5c2e08686a50?s=128&d=identicon&r=PG&f=1", "display_name": "user", "link": "https://stackoverflow.com/users/4934640/user"}, "edited": false, "score": 0, "creation_date": 1489780260, "post_id": 42864924, "comment_id": 72838354, "body": "Thanks. Thought I do not know how I compiled (I just called <code>make_win32.bat</code>), but I found on the issue <a href=\"https://github.com/trishume/syntect/issues/48\" rel=\"nofollow noreferrer\">github.com/trishume/syntect/issues/48</a>, they said is it just because <code>onig_sys</code> doesn&#39;t build on Windows, which is reported on the issue <a href=\"https://github.com/rust-onig/rust-onig/issues/35\" rel=\"nofollow noreferrer\">github.com/rust-onig/rust-onig/issues/35</a>, Therefore what you said seem to be the way to fix the <code>onig_sys</code> compiling on Windows."}], "answers": [{"tags": [], "owner": {"reputation": 4144, "user_id": 1353098, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/65458ca597cb66a71e73012cbfc5030b?s=128&d=identicon&r=PG", "display_name": "Will", "link": "https://stackoverflow.com/users/1353098/will"}, "is_accepted": true, "score": 3, "last_activity_date": 1489849857, "last_edit_date": 1489849857, "creation_date": 1489849495, "answer_id": 42875974, "question_id": 42864924, "link": "https://stackoverflow.com/questions/42864924/error-failed-to-run-custom-build-command-for-onig-sys-v61-1-0/42875974#42875974", "title": "error: failed to run custom build command for `onig_sys v61.1.0`", "body": "<p>Oniguruma doesn't build with CMake on Windows MSVC. This <a href=\"https://github.com/rust-onig/rust-onig/issues/35\" rel=\"nofollow noreferrer\">was an open issue</a> in the <code>onig_sys</code> crate.</p>\n\n<p>I've now <a href=\"https://github.com/rust-onig/rust-onig/pull/36\" rel=\"nofollow noreferrer\">updated the way the <code>onig_sys</code> crate builds</a> so it should work with MSVC now.</p>\n\n<p>To update to this fixed version make sure the <code>Cargo.toml</code> dependency for <code>onig</code> is set to either <code>1.2</code> or <code>1.2.1</code>:</p>\n\n<pre><code>[dependencies]\nonig = \"1.2\"\n</code></pre>\n"}], "owner": {"reputation": 5700, "user_id": 4934640, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/2f69527ae459cbbda0ab5c2e08686a50?s=128&d=identicon&r=PG&f=1", "display_name": "user", "link": "https://stackoverflow.com/users/4934640/user"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2790, "favorite_count": 1, "accepted_answer_id": 42875974, "answer_count": 1, "score": 1, "last_activity_date": 1489849857, "creation_date": 1489775913, "last_edit_date": 1489778765, "question_id": 42864924, "link": "https://stackoverflow.com/questions/42864924/error-failed-to-run-custom-build-command-for-onig-sys-v61-1-0", "title": "error: failed to run custom build command for `onig_sys v61.1.0`", "body": "<h3>error: failed to run custom build command for <code>onig_sys v61.1.0</code></h3>\n\n<p>I am compiling the rust program <a href=\"https://github.com/trishume/syntect\" rel=\"nofollow noreferrer\">https://github.com/trishume/syntect</a> by running <code>make packs</code>. However it throws the error:</p>\n\n<pre><code>$ make packs\ncargo run --example gendata -- synpack testdata/Packages assets/default_newlines.packdump assets/default_nonewlines.packdump\n   Compiling onig_sys v61.1.0\nerror: failed to run custom build command for `onig_sys v61.1.0`\nprocess didn't exit successfully: `D:\\syntect\\target\\debug\\build\\onig_sys-523c993a9ee13532\\build-script-build` (exit code: 101)\n\n...\n\n--- stderr\nDIST_NAME: onig\nDIST_VERSION: 6.1.1\nDIST_LICENSE: BSD\nDIST_AUTHOR: K.Kosako\nDIST_MAINTAINER: K.Kosako\nDIST_URL: https://github.com/kkos/oniguruma\nDIST_DESC: Oniguruma is a regular expressions library.\nDIST_DEPENDS:\nthread 'main' panicked at '\ncommand did not execute successfully, got: exit code: 1\n\nbuild script failed, must exit now', C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cmake-0.1.21\\src\\lib.rs:605\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\n\nmake: *** [packs] Error 101\n</code></pre>\n\n<p>Why the <a href=\"https://github.com/kkos/oniguruma\" rel=\"nofollow noreferrer\">https://github.com/kkos/oniguruma</a> is not compiling?</p>\n\n<p>I ran <code>cargo build -vv</code> and got this most all the log:</p>\n\n<pre><code>D:\\syntect&gt;cargo build -vv\n       Fresh num-traits v0.1.37\n       Fresh winapi-build v0.1.1\n       Fresh pkg-config v0.3.9\n       Fresh gcc v0.3.45\n       Fresh regex-syntax v0.4.0\n       Fresh num-integer v0.1.33\n       Fresh cmake v0.1.21\n       Fresh num-iter v0.1.33\n       Fresh lazy_static v0.2.4\n       Fresh winapi v0.2.8\n       Fresh yaml-rust v0.3.5\n       Fresh serde v0.8.23\n       Fresh bitflags v0.7.0\n       Fresh num v0.1.37\n       Fresh xml-rs v0.3.6\n       Fresh rustc-serialize v0.3.23\n       Fresh bitflags v0.8.0\n       Fresh fnv v1.0.5\n       Fresh serde v0.9.11\n       Fresh kernel32-sys v0.2.2\n       Fresh byteorder v1.0.0\n       Fresh bincode v0.6.1\n   Compiling onig_sys v61.1.0\n       Fresh same-file v0.1.3\n       Fresh libc v0.2.21\n     Running `D:\\syntect\\target\\debug\\build\\onig_sys-523c993a9ee13532\\build-scrip\nt-build`\n       Fresh byteorder v0.5.3\n       Fresh walkdir v1.0.7\n       Fresh miniz-sys v0.1.9\n       Fresh time v0.1.36\n       Fresh flate2 v0.2.17\n       Fresh chrono v0.2.25\n       Fresh plist v0.1.2\nrunning: \"cmake\" \"C:\\\\Users\\\\Professional\\\\.cargo\\\\registry\\\\src\\\\github.com-1ecc6299db9ec823\\\\onig_sys-61.1.0\\\\oniguruma\" \"-G\" \"Visual Studio 14 2015 Win64\" \"-DBUILD_SHARED_LIBS=OFF\" \"-\nDCMAKE_INSTALL_PREFIX=D:\\\\syntect\\\\target\\\\debug\\\\build\\\\onig_sys-d633e\n4c1e0d45051\\\\out\" \"-DCMAKE_C_FLAGS= /nologo /MD\" \"-DCMAKE_C_FLAGS_RELEASE= /nologo /MD\" \"-DCMAKE_CXX_FLAGS= /nologo /MD\" \"-DCMAKE_CXX_FLAGS_RELEASE= /nologo /MD\" \"-DCMAKE_BUILD_TYPE=Rele\nase\"\nDIST_NAME: onig\nDIST_VERSION: 6.1.1\nDIST_LICENSE: BSD\nDIST_AUTHOR: K.Kosako\nDIST_MAINTAINER: K.Kosako\nDIST_URL: https://github.com/kkos/oniguruma\nDIST_DESC: Oniguruma is a regular expressions library.\nDIST_DEPENDS:\n-- Configuring done\n-- Generating done\n-- Build files have been written to: D:/syntect/target/debug/build/onig_sys-d633e\n4c1e0d45051/out/build\nrunning: \"cmake\" \"--build\" \".\" \"--target\" \"install\" \"--config\" \"Release\" \"--\"\nMicrosoft (R) Build Engine version 14.0.24723.2\nCopyright (C) Microsoft Corporation. All rights reserved.\n\nBuild started 17/03/2017 15:41:57.\nThe target \"BeforeGenerateProjectPriFile\" listed in a BeforeTargets attribute at \"C:\\Program Files (x86)\\MSBuild\\Microsoft\\NuGet\\Microsoft.NuGet.targets (186,61)\" does not exist in the p\nroject, and will be ignored.\nThe target \"BeforeGenerateProjectPriFile\" listed in a BeforeTargets attribute at \"C:\\Program Files (x86)\\MSBuild\\Microsoft\\NuGet\\Microsoft.NuGet.targets (186,61)\" does not exist in the p\nroject, and will be ignored.\nProject \"D:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\out\\build\\instal\nl.vcxproj\" on node 1 (default targets).\nProject \"D:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\out\\build\\instal\nl.vcxproj\" (1) is building \"D:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d450\n51\\out\\build\\ZERO_CHECK.vcxproj\" (2) on node 1 (default targets).\nInitializeBuildStatus:\n  Creating \"x64\\Release\\ZERO_CHECK\\ZERO_CHECK.tlog\\unsuccessfulbuild\" because \"AlwaysCreate\" was specified.\nCustomBuild:\n  All outputs are up-to-date.\n  Checking Build System\n  CMake does not need to re-run because D:/syntect/target/debug/build/onig_sys-d6\n33e4c1e0d45051/out/build/CMakeFiles/generate.stamp is up-to-date.\nFinalizeBuildStatus:\n  Deleting file \"x64\\Release\\ZERO_CHECK\\ZERO_CHECK.tlog\\unsuccessfulbuild\".\n  Touching \"x64\\Release\\ZERO_CHECK\\ZERO_CHECK.tlog\\ZERO_CHECK.lastbuildstate\".\nDone Building Project \"D:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\ou\nt\\build\\ZERO_CHECK.vcxproj\" (default targets).\nThe target \"BeforeGenerateProjectPriFile\" listed in a BeforeTargets attribute at \"C:\\Program Files (x86)\\MSBuild\\Microsoft\\NuGet\\Microsoft.NuGet.targets (186,61)\" does not exist in the p\nroject, and will be ignored.\nThe target \"BeforeGenerateProjectPriFile\" listed in a BeforeTargets attribute at \"C:\\Program Files (x86)\\MSBuild\\Microsoft\\NuGet\\Microsoft.NuGet.targets (186,61)\" does not exist in the p\nroject, and will be ignored.\nProject \"D:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\out\\build\\instal\nl.vcxproj\" (1) is building \"D:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d450\n51\\out\\build\\ALL_BUILD.vcxproj\" (3) on node 1 (default targets).\nProject \"D:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\out\\build\\ALL_BU\nILD.vcxproj\" (3) is building \"D:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d4\n5051\\out\\build\\onig.vcxproj\" (4) on node 1 (default targets).\nInitializeBuildStatus:\n  Touching \"onig.dir\\Release\\onig.tlog\\unsuccessfulbuild\".\nCustomBuild:\n  All outputs are up-to-date.\n  Building Custom Rule C:/Users/user/.cargo/registry/src/github.com-1ecc6299db9ec823/onig_sys-61.1.0/oniguruma/CMakeLists.txt\n  CMake does not need to re-run because D:/syntect/target/debug/build/onig_sys-d6\n33e4c1e0d45051/out/build/CMakeFiles/generate.stamp is up-to-date.\nClCompile:\n  F:\\VisualStudio2015\\VC\\bin\\x86_amd64\\CL.exe /c /I\"D:\\syntect\\target\\debug\\build\n\\onig_sys-d633e4c1e0d45051\\out\\build\" /I\"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\" /nologo /W1 /WX- /O2 /D _CRT_SECURE_NO_WARNINGS\n/D \"CMAKE_INTDIR=\\\"Release\\\"\" /D _MBCS /Gm- /MD /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo\"onig.dir\\Release\\\\\" /Fd\"onig.dir\\Release\\onig.pdb\" /Gd /TC /errorReport:queue \"C:\\\nUsers\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\regenc.c\"\n  regenc.c\nC:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\regenc.c(32): warning C4273: 'OnigEncDefaultCharEncoding': inconsistent dll linkage [D\n:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\out\\build\\onig.vcxproj]\n  c:\\users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\regenc.h(227): note: see previous definition of 'OnigEncDefaultCharEncoding'\nC:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\regenc.c(32): error C2099: initializer is not a constant [D:\\User\\\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\out\\build\\onig.vcxproj]\nC:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\regenc.c(36): warning C4273: 'onigenc_init': inconsistent dll linkage [D:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\out\\build\\onig.vcxproj]\n  c:\\users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\oniguruma.h(343): note: see previous definition of 'onigenc_init'\n  c:\\users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\oniguruma.h(345): note: see previous definition of 'onig_initialize_encoding'\nC:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\regenc.c(53): warning C4273: 'onigenc_get_default_encoding': inconsistent dll linkage\n[D:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\out\\build\\onig.vcxproj]\n  c:\\users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\oniguruma.h(349): note: see previous definition of 'onigenc_get_default_encoding'\nC:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\regenc.c(59): warning C4273: 'onigenc_set_default_encoding': inconsistent dll linkage\n[D:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\out\\build\\onig.vcxproj]\n  c:\\users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\oniguruma.h(347): note: see previous definition of 'onigenc_set_default_encoding'\nC:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\regenc.c(66): warning C4273: 'onigenc_get_right_adjust_char_head': inconsistent dll li\nnkage [D:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\out\\build\\onig.vcx\nproj]\n  c:\\users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\oniguruma.h(359): note: see previous definition of 'onigenc_get_right_adjust_char_he\nad'\nC:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\regenc.c(77): warning C4273: 'onigenc_get_right_adjust_char_head_with_prev': inconsist\nent dll linkage [D:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\out\\buil\nd\\onig.vcxproj]\n  c:\\users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\oniguruma.h(353): note: see previous definition of 'onigenc_get_right_adjust_char_he\nad_with_prev'\nC:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\regenc.c(92): warning C4273: 'onigenc_get_prev_char_head': inconsistent dll linkage [D\n:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\out\\build\\onig.vcxproj]\n  c:\\users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\oniguruma.h(355): note: see previous definition of 'onigenc_get_prev_char_head'\nC:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\regenc.c(101): warning C4273: 'onigenc_step_back': inconsistent dll linkage [D:\\User\\D\nropbox\\Applications\\SoftwareVersioning\\SublimeText\\Data\\Packages\\ObjectBeautifier\\source\\libraries\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\out\\build\\onig.vcxproj]\n  c:\\users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\oniguruma.h(338): note: see previous definition of 'onigenc_step_back'\nC:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\regenc.c(127): warning C4273: 'onigenc_step': inconsistent dll linkage [D:\\User\\Dropbo\nx\\Applications\\SoftwareVersioning\\SublimeText\\Data\\Packages\\ObjectBeautifier\\source\\libraries\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\out\\build\\onig.vcxproj]\n  c:\\users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\regenc.h(222): note: see previous definition of 'onigenc_step'\nC:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\regenc.c(137): warning C4273: 'onigenc_strlen': inconsistent dll linkage [D:\\User\\Drop\nbox\\Applications\\SoftwareVersioning\\SublimeText\\Data\\Packages\\ObjectBeautifier\\source\\libraries\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\out\\build\\onig.vcxproj]\n  c:\\users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\oniguruma.h(361): note: see previous definition of 'onigenc_strlen'\nC:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\regenc.c(150): warning C4273: 'onigenc_strlen_null': inconsistent dll linkage [D:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\out\\build\\onig.vcxproj]\n  c:\\users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\oniguruma.h(363): note: see previous definition of 'onigenc_strlen_null'\nC:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\regenc.c(175): warning C4273: 'onigenc_str_bytelen_null': inconsistent dll linkage [D:\n\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\out\\build\\onig.vcxproj]\n  c:\\users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\oniguruma.h(365): note: see previous definition of 'onigenc_str_bytelen_null'\nC:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\regenc.c(197): warning C4273: 'OnigEncAsciiToLowerCaseTable': inconsistent dll linkage\n [D:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\out\\build\\onig.vcxproj]\n\n  c:\\users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\regenc.h(228): note: see previous definition of 'OnigEncAsciiToLowerCaseTable'\nC:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\regenc.c(269): warning C4273: 'OnigEncAsciiCtypeTable': inconsistent dll linkage [D:\\U\nser\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\out\\build\\onig.vcxproj]\n  c:\\users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\regenc.h(230): note: see previous definition of 'OnigEncAsciiCtypeTable'\nC:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\regenc.c(304): warning C4273: 'OnigEncISO_8859_1_ToLowerCaseTable': inconsistent dll l\ninkage [D:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\out\\build\\onig.vc\nxproj]\n  c:\\users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\regenc.h(216): note: see previous definition of 'OnigEncISO_8859_1_ToLowerCaseTable'\n\n\n\"D:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\out\\build\\install.vcxpro\nj\" (default target) (1) -&gt;\n\"D:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\out\\build\\ALL_BUILD.vcxp\nroj\" (default target) (3) -&gt;\n\"D:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\out\\build\\onig.vcxproj\"\n(default target) (4) -&gt;\n(ClCompile target) -&gt;\n  C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\regenc.c(32): error C2099: initializer is not a constant [D:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\out\\build\\onig.vcxproj]\n\n    45 Warning(s)\n    1 Error(s)\n\nTime Elapsed 00:00:03.85\nthread 'main' panicked at '\ncommand did not execute successfully, got: exit code: 1\n\nbuild script failed, must exit now', C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cmake-0.1.21\\src\\lib.rs:605\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\nerror: failed to run custom build command for `onig_sys v61.1.0`\nprocess didn't exit successfully: `D:\\syntect\\target\\debug\\build\\onig_sys-523c993\na9ee13532\\build-script-build` (exit code: 101)\n--- stdout\nrunning: \"cmake\" \"C:\\\\Users\\\\Professional\\\\.cargo\\\\registry\\\\src\\\\github.com-1ecc6299db9ec823\\\\onig_sys-61.1.0\\\\oniguruma\" \"-G\" \"Visual Studio 14 2015 Win64\" \"-DBUILD_SHARED_LIBS=OFF\" \"-\nDCMAKE_INSTALL_PREFIX=D:\\\\User\\\\syntect\\\\target\\\\debug\\\\build\\\\onig_sys-d633e\n4c1e0d45051\\\\out\" \"-DCMAKE_C_FLAGS= /nologo /MD\" \"-DCMAKE_C_FLAGS_RELEASE= /nologo /MD\" \"-DCMAKE_CXX_FLAGS= /nologo /MD\" \"-DCMAKE_CXX_FLAGS_RELEASE= /nologo /MD\" \"-DCMAKE_BUILD_TYPE=Rele\nase\"\n-- Configuring done\n-- Generating done\n-- Build files have been written to: D:/syntect/target/debug/build/onig_sys-d633e\n4c1e0d45051/out/build\nrunning: \"cmake\" \"--build\" \".\" \"--target\" \"install\" \"--config\" \"Release\" \"--\"\nMicrosoft (R) Build Engine version 14.0.24723.2\nCopyright (C) Microsoft Corporation. All rights reserved.\n\nBuild started 17/03/2017 15:41:57.\nThe target \"BeforeGenerateProjectPriFile\" listed in a BeforeTargets attribute at \"C:\\Program Files (x86)\\MSBuild\\Microsoft\\NuGet\\Microsoft.NuGet.targets (186,61)\" does not exist in the p\nroject, and will be ignored.\nThe target \"BeforeGenerateProjectPriFile\" listed in a BeforeTargets attribute at \"C:\\Program Files (x86)\\MSBuild\\Microsoft\\NuGet\\Microsoft.NuGet.targets (186,61)\" does not exist in the p\nroject, and will be ignored.\nProject \"D:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\out\\build\\instal\nl.vcxproj\" on node 1 (default targets).\nProject \"D:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\out\\build\\instal\nl.vcxproj\" (1) is building \"D:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d450\n51\\out\\build\\ZERO_CHECK.vcxproj\" (2) on node 1 (default targets).\nInitializeBuildStatus:\n  Creating \"x64\\Release\\ZERO_CHECK\\ZERO_CHECK.tlog\\unsuccessfulbuild\" because \"AlwaysCreate\" was specified.\nCustomBuild:\n  All outputs are up-to-date.\n  Checking Build System\n  CMake does not need to re-run because D:/syntect/target/debug/build/onig_sys-d6\n33e4c1e0d45051/out/build/CMakeFiles/generate.stamp is up-to-date.\nFinalizeBuildStatus:\n  Deleting file \"x64\\Release\\ZERO_CHECK\\ZERO_CHECK.tlog\\unsuccessfulbuild\".\n  Touching \"x64\\Release\\ZERO_CHECK\\ZERO_CHECK.tlog\\ZERO_CHECK.lastbuildstate\".\nDone Building Project \"D:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\ou\nt\\build\\ZERO_CHECK.vcxproj\" (default targets).\nThe target \"BeforeGenerateProjectPriFile\" listed in a BeforeTargets attribute at \"C:\\Program Files (x86)\\MSBuild\\Microsoft\\NuGet\\Microsoft.NuGet.targets (186,61)\" does not exist in the p\nroject, and will be ignored.\nThe target \"BeforeGenerateProjectPriFile\" listed in a BeforeTargets attribute at \"C:\\Program Files (x86)\\MSBuild\\Microsoft\\NuGet\\Microsoft.NuGet.targets (186,61)\" does not exist in the p\nroject, and will be ignored.\nProject \"D:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\out\\build\\instal\nl.vcxproj\" (1) is building \"D:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d450\n51\\out\\build\\ALL_BUILD.vcxproj\" (3) on node 1 (default targets).\nProject \"D:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\out\\build\\ALL_BU\nILD.vcxproj\" (3) is building \"D:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d4\n5051\\out\\build\\onig.vcxproj\" (4) on node 1 (default targets).\nInitializeBuildStatus:\n  Touching \"onig.dir\\Release\\onig.tlog\\unsuccessfulbuild\".\nCustomBuild:\n  All outputs are up-to-date.\n  Building Custom Rule C:/Users/user/.cargo/registry/src/github.com-1ecc6299db9ec823/onig_sys-61.1.0/oniguruma/CMakeLists.txt\n  CMake does not need to re-run because D:/syntect/target/debug/build/onig_sys-d6\n33e4c1e0d45051/out/build/CMakeFiles/generate.stamp is up-to-date.\nClCompile:\n  F:\\VisualStudio2015\\VC\\bin\\x86_amd64\\CL.exe /c /I\"D:\\syntect\\target\\debug\\build\n\\onig_sys-d633e4c1e0d45051\\out\\build\" /I\"C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\" /nologo /W1 /WX- /O2 /D _CRT_SECURE_NO_WARNINGS\n/D \"CMAKE_INTDIR=\\\"Release\\\"\" /D _MBCS /Gm- /MD /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo\"onig.dir\\Release\\\\\" /Fd\"onig.dir\\Release\\onig.pdb\" /Gd /TC /errorReport:queue \"C:\\\nUsers\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\regenc.c\"\n  regenc.c\nC:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\regenc.c(32): warning C4273: 'OnigEncDefaultCharEncoding': inconsistent dll linkage [D\n:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\out\\build\\onig.vcxproj]\n  c:\\users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\regenc.h(227): note: see previous definition of 'OnigEncDefaultCharEncoding'\nC:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\regenc.c(32): error C2099: initializer is not a constant [D:\\User\\\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\out\\build\\onig.vcxproj]\nC:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\regenc.c(36): warning C4273: 'onigenc_init': inconsistent dll linkage [D:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\out\\build\\onig.vcxproj]\n  c:\\users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\oniguruma.h(343): note: see previous definition of 'onigenc_init'\n  c:\\users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\oniguruma.h(345): note: see previous definition of 'onig_initialize_encoding'\nC:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\regenc.c(53): warning C4273: 'onigenc_get_default_encoding': inconsistent dll linkage\n[D:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\out\\build\\onig.vcxproj]\n  c:\\users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\oniguruma.h(349): note: see previous definition of 'onigenc_get_default_encoding'\nC:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\regenc.c(59): warning C4273: 'onigenc_set_default_encoding': inconsistent dll linkage\n[D:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\out\\build\\onig.vcxproj]\n  c:\\users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\oniguruma.h(347): note: see previous definition of 'onigenc_set_default_encoding'\nC:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\regenc.c(66): warning C4273: 'onigenc_get_right_adjust_char_head': inconsistent dll li\nnkage [D:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\out\\build\\onig.vcx\nproj]\n  c:\\users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\oniguruma.h(359): note: see previous definition of 'onigenc_get_right_adjust_char_he\nad'\nC:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\regenc.c(77): warning C4273: 'onigenc_get_right_adjust_char_head_with_prev': inconsist\nent dll linkage [D:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\out\\buil\nd\\onig.vcxproj]\n  c:\\users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\oniguruma.h(353): note: see previous definition of 'onigenc_get_right_adjust_char_he\nad_with_prev'\nC:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\regenc.c(861): warning C4273: 'onigenc_mb4_is_code_ctype': inconsistent dll linkage [D\n:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\out\\build\\onig.vcxproj]\n  c:\\users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\regenc.h(149): note: see previous definition of 'onigenc_mb4_is_code_ctype'\nC:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\regenc.c(876): warning C4273: 'onigenc_with_ascii_strncmp': inconsistent dll linkage [\nD:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\out\\build\\onig.vcxproj]\n  c:\\users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\regenc.h(220): note: see previous definition of 'onigenc_with_ascii_strncmp'\nDone Building Project \"D:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\ou\nt\\build\\onig.vcxproj\" (default targets) -- FAILED.\nDone Building Project \"D:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\ou\nt\\build\\ALL_BUILD.vcxproj\" (default targets) -- FAILED.\nDone Building Project \"D:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\ou\nt\\build\\install.vcxproj\" (default targets) -- FAILED.\n\nBuild FAILED.\n\n\"D:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\out\\build\\install.vcxpro\nj\" (default target) (1) -&gt;\n\"D:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\out\\build\\ALL_BUILD.vcxp\nroj\" (default target) (3) -&gt;\n\"D:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\out\\build\\onig.vcxproj\"\n(default target) (4) -&gt;\n(ClCompile target) -&gt;\n  C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\regenc.c(32): warning C4273: 'OnigEncDefaultCharEncoding': inconsistent dll linkage\n[D:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\out\\build\\onig.vcxproj]\n  C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\regenc.c(861): warning C4273: 'onigenc_mb4_is_code_ctype': inconsistent dll linkage\n[D:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\out\\build\\onig.vcxproj]\n  C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\regenc.c(876): warning C4273: 'onigenc_with_ascii_strncmp': inconsistent dll linkage\n [D:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\out\\build\\onig.vcxproj]\n\n\n\n\"D:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\out\\build\\install.vcxpro\nj\" (default target) (1) -&gt;\n\"D:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\out\\build\\ALL_BUILD.vcxp\nroj\" (default target) (3) -&gt;\n\"D:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\out\\build\\onig.vcxproj\"\n(default target) (4) -&gt;\n(ClCompile target) -&gt;\n  C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\onig_sys-61.1.0\\oniguruma\\src\\regenc.c(32): error C2099: initializer is not a constant [D:\\syntect\\target\\debug\\build\\onig_sys-d633e4c1e0d45051\\out\\build\\onig.vcxproj]\n\n    45 Warning(s)\n    1 Error(s)\n\nTime Elapsed 00:00:03.85\n\n--- stderr\nDIST_NAME: onig\nDIST_VERSION: 6.1.1\nDIST_LICENSE: BSD\nDIST_AUTHOR: K.Kosako\nDIST_MAINTAINER: K.Kosako\nDIST_URL: https://github.com/kkos/oniguruma\nDIST_DESC: Oniguruma is a regular expressions library.\nDIST_DEPENDS:\nthread 'main' panicked at '\ncommand did not execute successfully, got: exit code: 1\n\nbuild script failed, must exit now', C:\\Users\\User\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cmake-0.1.21\\src\\lib.rs:605\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\n\n\nD:\\syntect&gt;\n</code></pre>\n"}, {"tags": ["sqlite", "rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 14, "last_activity_date": 1489775856, "last_edit_date": 1489775856, "creation_date": 1489775179, "answer_id": 42864719, "question_id": 42864066, "link": "https://stackoverflow.com/questions/42864066/rusqlite-query-with-sum-panics-with-invalidcolumntype0-null/42864719#42864719", "title": "Rusqlite query with SUM panics with &quot;InvalidColumnType(0, Null)&quot;", "body": "<p>If I run your query directly in the <code>sqlite</code> command line utility, <strong>there is no value</strong>, the result is <code>NULL</code>:</p>\n\n<pre><code>sqlite&gt; SELECT SUM(size) FROM toto WHERE size=42;\n\nsqlite&gt; SELECT coalesce(SUM(size), 'NULL!') FROM toto WHERE size=42;\nNULL!\nsqlite&gt;\n</code></pre>\n\n<p>Since there are no rows matching the where clause, <a href=\"https://www.sqlite.org/lang_aggfunc.html#sumunc\" rel=\"noreferrer\">the sum is NULL</a>:</p>\n\n<blockquote>\n  <p>If there are no non-NULL input rows then sum() returns NULL but total() returns 0.0</p>\n</blockquote>\n\n<p>Your <code>NULL</code> result cannot be converted to an <code>i64</code>, so you get an error:</p>\n\n<blockquote>\n  <p><code>InvalidColumnType(0, Null)</code></p>\n</blockquote>\n\n<p>If you print that error out, it says the same thing:</p>\n\n<pre><code>let i: i64 = conn.query_row(\"SELECT SUM(size) FROM toto WHERE size = ?1\", &amp;[&amp;filter], |r| {\n    match r.get_checked(0) {\n        Ok(v) =&gt; v,\n        Err(e) =&gt; panic!(\"query_row error: {}\", e),\n    }\n}).expect(\"select failed\");\n</code></pre>\n\n<blockquote>\n  <p>query_row error: Invalid column type Null at index: 0</p>\n</blockquote>\n\n<h3>Fixing it Rust-side</h3>\n\n<p>If you update your code to account for a <code>NULL</code> by using an <code>Option</code>, it will correctly execute:</p>\n\n<pre><code>let i: Option&lt;i64&gt; = conn.query_row(\n    \"SELECT SUM(size) FROM toto WHERE size = ?1\",\n    &amp;[&amp;filter],\n    |r| r.get(0)\n).expect(\"select failed\");\n</code></pre>\n\n<p>You can then use <code>i.unwrap_or(0)</code>.</p>\n\n<h3>Fixing it SQL-side with <code>TOTAL</code></h3>\n\n<pre><code>let i: f64 = conn.query_row(\n    \"SELECT TOTAL(size) FROM toto WHERE size = ?1\",\n    &amp;[&amp;filter],\n    |r| r.get(0)\n).expect(\"select failed\");\n</code></pre>\n\n<p>Note that we switched to a <code>f64</code>.</p>\n\n<h3>Fixing it SQL-side with <code>COALESCE</code></h3>\n\n<pre><code>let i: i64 = conn.query_row(\n    \"SELECT COALESCE(SUM(size), 0) FROM toto WHERE size = ?1\",\n    &amp;[&amp;filter],\n    |r| r.get(0)\n).expect(\"select failed\");\n</code></pre>\n"}], "owner": {"reputation": 169, "user_id": 4354599, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b9b12556e83d7f13aed7442cda0e1c6f?s=128&d=identicon&r=PG", "display_name": "edelangh", "link": "https://stackoverflow.com/users/4354599/edelangh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 767, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1489775856, "creation_date": 1489772803, "last_edit_date": 1489775248, "question_id": 42864066, "link": "https://stackoverflow.com/questions/42864066/rusqlite-query-with-sum-panics-with-invalidcolumntype0-null", "title": "Rusqlite query with SUM panics with &quot;InvalidColumnType(0, Null)&quot;", "body": "<p>I have this working code:</p>\n\n<pre><code>extern crate rusqlite;\n\nuse rusqlite::Connection;\n\nfn main() {\n    let conn = Connection::open(\"db.sqlite\").unwrap();\n\n    conn.execute(\"CREATE TABLE toto (size INTEGER NOT NULL DEFAULT 0);\", &amp;[]).unwrap();\n    conn.execute(\"INSERT INTO toto(size) VALUES (42);\", &amp;[]).unwrap();\n\n    let filter = 0;\n    let i: i64 = conn.query_row(\"SELECT SUM(size) FROM toto\", &amp;[], |r| r.get(0)).unwrap();\n    println!(\"Coucou\");\n    println!(\"Coucou: {}\", i);\n}\n</code></pre>\n\n<p>But if I switch</p>\n\n<pre><code>\"SELECT SUM(size) FROM toto\", &amp;[]\n</code></pre>\n\n<p>to</p>\n\n<pre><code>\"SELECT SUM(size) FROM toto WHERE size=?1\", &amp;[&amp;filter]\n</code></pre>\n\n<p>and re-run, it panics:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rm db.sqlite\nRUST_BACKTRACE=1 cargo run\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>        Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs\n         Running `target/debug/testsqlite`\n    thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: InvalidColumnType(0, Null)', /checkout/src/libcore/result.rs:860\n</code></pre>\n\n<p>If I execute this query in sqliteman, it works, so why does rusqlite panic?</p>\n"}, {"tags": ["rust", "implementation", "traits"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 21, "last_activity_date": 1553711084, "last_edit_date": 1553711084, "creation_date": 1489759779, "answer_id": 42859728, "question_id": 42859330, "link": "https://stackoverflow.com/questions/42859330/how-do-i-make-a-struct-callable/42859728#42859728", "title": "How do I make a struct callable?", "body": "<p>You cannot yet implement the <code>Fn*</code> traits in stable Rust. This is only possible with the nightly compiler using <code>#[feature]</code>!</p>\n\n<p>It's very useful to <em>fully read the trait that you are implementing</em> to see how to implement it. The <a href=\"https://doc.rust-lang.org/std/ops/trait.Fn.html\" rel=\"noreferrer\"><code>Fn</code> trait</a> is defined as:</p>\n\n<pre><code>pub trait Fn&lt;Args&gt;: FnMut&lt;Args&gt; {\n    extern \"rust-call\" fn call(&amp;self, args: Args) -&gt; Self::Output;\n}\n</code></pre>\n\n<p>Notice any differences between the implementation and the definition? I see many:</p>\n\n<ol>\n<li><p>The implementation doesn't provide a value for <code>Args</code>! That's what the compiler is pointing at. See also <a href=\"https://stackoverflow.com/q/25272392/155423\">Wrong number of type arguments: expected 1 but found 0</a></p></li>\n<li><p>The implementation doesn't implement the supertrait <a href=\"https://doc.rust-lang.org/std/ops/trait.FnMut.html\" rel=\"noreferrer\"><code>FnMut</code></a>, which itself requires the supertrait <a href=\"https://doc.rust-lang.org/std/ops/trait.FnOnce.html\" rel=\"noreferrer\"><code>FnOnce</code></a>. <code>FnOnce</code> is where the <em>associated type</em> <code>Output</code> is declared.</p></li>\n<li><p>The implementation neglects to define what concrete type <code>Output</code> should be.</p></li>\n<li><p>The implementation returns <code>Self</code> while the trait returns <code>Self::Output</code>.</p></li>\n<li><p>The implementation doesn't accept the second argument to <code>call</code>. This argument contains any arguments passed in.</p></li>\n</ol>\n\n<p>Additionally, types in Rust use <code>PascalCase</code>, not <code>snake_case</code>, so it should be <code>Foo</code>.</p>\n\n<pre><code>#![feature(unboxed_closures)]\n#![feature(fn_traits)]\n\nstruct Foo;\n\nimpl Fn&lt;()&gt; for Foo {\n    extern \"rust-call\" fn call(&amp;self, _args: ()) {\n        println!(\"Call (Fn) for Foo\");\n    }\n}\n\nimpl FnMut&lt;()&gt; for Foo {\n    extern \"rust-call\" fn call_mut(&amp;mut self, _args: ()) {\n        println!(\"Call (FnMut) for Foo\");\n    }\n}\n\nimpl FnOnce&lt;()&gt; for Foo {\n    type Output = ();\n\n    extern \"rust-call\" fn call_once(self, _args: ()) {\n        println!(\"Call (FnOnce) for Foo\");\n    }\n}\n\nfn main() {\n    let x = Foo;\n    x();\n}\n</code></pre>\n\n<p>Normally though, only one trait's implementation would have interesting code in it and the other trait implementations would delegate to it:</p>\n\n<pre><code>extern \"rust-call\" fn call(&amp;self, args: ()) {\n    println!(\"Foo called, took args: {:?}\", args);\n}\n\n// ...\n\nextern \"rust-call\" fn call_mut(&amp;mut self, args: ()) {\n    self.call(args)\n}\n\n// ...\n\nextern \"rust-call\" fn call_once(self, args: ()) {\n    self.call(args)\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/27454761/155423\">What is a crate attribute and where do I add it?</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 4459, "user_id": 127251, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9b6273d6505f5cead55793f95dbe7873?s=128&d=identicon&r=PG", "display_name": "Paul Chernoch", "link": "https://stackoverflow.com/users/127251/paul-chernoch"}, "is_accepted": false, "score": 0, "last_activity_date": 1616182009, "last_edit_date": 1616182009, "creation_date": 1616181660, "answer_id": 66714422, "question_id": 42859330, "link": "https://stackoverflow.com/questions/42859330/how-do-i-make-a-struct-callable/66714422#66714422", "title": "How do I make a struct callable?", "body": "<p>By implementing Deref, you can simulate the desired behavior. Then you just use parentheses around parameters and get a return value just like you were calling a function.</p>\n<p>See this thread: <a href=\"https://users.rust-lang.org/t/callable-struct-on-stable/54689/6\" rel=\"nofollow noreferrer\">https://users.rust-lang.org/t/callable-struct-on-stable/54689/6</a></p>\n<p>The relevant part (thanks to crawdad):</p>\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let func: Functionish = make_func();\n    func();\n}\n\nfn make_func() -&gt; Functionish {\n    Functionish {\n        f: Box::new(|| println!(&quot;printing&quot;)),\n    }\n}\n\nstruct Functionish {\n    f: Box&lt;dyn Fn()&gt;,\n}\n\nimpl std::ops::Deref for Functionish {\n    type Target = dyn Fn();\n\n    fn deref(&amp;self) -&gt; &amp;Self::Target {\n        &amp;self.f\n    }\n}\n</code></pre>\n<p>Here is an incomplete example from my own code that takes parameters, one a ref and one a mutable ref. In my case, the closure is stored inside an Rc, which necessitated the odd line <code>&amp;(*self.function_container)</code> because I need to go into the Rc before I can get the reference to the closure.</p>\n<pre><code>pub struct FeelFunction {\n  pub function_type: FunctionType,\n  name_container: RefCell&lt;String&gt;,\n  function_container: Rc&lt;dyn Fn(&amp;FeelValue, &amp;mut NestedContext) -&gt; FeelValue&gt;\n}\n\nimpl Deref for FeelFunction {\n  type Target = dyn Fn(&amp;FeelValue, &amp;mut NestedContext) -&gt; FeelValue;\n\n  fn deref(&amp;self) -&gt; &amp;Self::Target {\n      &amp;(*self.function_container)\n  }\n}\n</code></pre>\n"}], "owner": {"reputation": 247, "user_id": 7434592, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-yqnZP9IHDss/AAAAAAAAAAI/AAAAAAAAAPI/rerXfZvsW0U/photo.jpg?sz=128", "display_name": "\u0410\u043d\u0434\u0440\u0435\u0439 \u041b\u0435\u0434\u043e\u0432\u0441\u043a\u0438\u0445", "link": "https://stackoverflow.com/users/7434592/%d0%90%d0%bd%d0%b4%d1%80%d0%b5%d0%b9-%d0%9b%d0%b5%d0%b4%d0%be%d0%b2%d1%81%d0%ba%d0%b8%d1%85"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2864, "favorite_count": 1, "answer_count": 2, "score": 17, "last_activity_date": 1616182009, "creation_date": 1489758798, "last_edit_date": 1489759845, "question_id": 42859330, "link": "https://stackoverflow.com/questions/42859330/how-do-i-make-a-struct-callable", "title": "How do I make a struct callable?", "body": "<pre><code>#![feature(unboxed_closures)]\n#![feature(fn_traits)]\n\nstruct foo;\n\nimpl std::ops::Add for foo {\n    type Output = foo;\n    fn add(self, x: foo) -&gt; foo {\n        println!(\"Add for foo\");\n        x\n    }\n}\n\nimpl Fn for foo {\n    extern \"rust-call\" fn call(&amp;self) -&gt; Self {\n        println!(\"Call for Foo \");\n        self\n    }\n}\n\nfn main() {\n    let x = foo;\n    let y = foo;\n    x + y;\n\n    x();\n}\n</code></pre>\n\n<p>I implemented the <code>Add</code> trait, but I don't understand how to call the struct as a function. I get the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0243]: wrong number of type arguments: expected 1, found 0\n  --&gt; src/main.rs:14:10\n   |\n14 |     impl Fn for foo {\n   |          ^^ expected 1 type argument\n</code></pre>\n\n<p>I'm new to Rust, and can't find examples how to make this thing happen.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 56117, "user_id": 845092, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/50ccdbac5f0f9ff683e4b30a248189bf?s=128&d=identicon&r=PG", "display_name": "Mooing Duck", "link": "https://stackoverflow.com/users/845092/mooing-duck"}, "edited": false, "score": 3, "creation_date": 1489729444, "post_id": 42849924, "comment_id": 72807696, "body": "I don&#39;t know rust, but <code>assert!(x==y || x%y==0)</code>?"}, {"owner": {"reputation": 1288, "user_id": 1030331, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a040efe521220498bf6f1ffc3349b5cc?s=128&d=identicon&r=PG", "display_name": "Elliott", "link": "https://stackoverflow.com/users/1030331/elliott"}, "reply_to_user": {"reputation": 56117, "user_id": 845092, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/50ccdbac5f0f9ff683e4b30a248189bf?s=128&d=identicon&r=PG", "display_name": "Mooing Duck", "link": "https://stackoverflow.com/users/845092/mooing-duck"}, "edited": false, "score": 0, "creation_date": 1489730488, "post_id": 42849924, "comment_id": 72808085, "body": "x == y || x%y == 0 is great, make this an answer and i&#39;ll mark it"}, {"owner": {"reputation": 1417, "user_id": 2977291, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/66afbccc6043392125ac0f0de57ccfa7?s=128&d=identicon&r=PG&f=1", "display_name": "paholg", "link": "https://stackoverflow.com/users/2977291/paholg"}, "edited": false, "score": 3, "creation_date": 1489746908, "post_id": 42849924, "comment_id": 72816643, "body": "Note that that will panic if <code>y == 0</code> but <code>x</code> is nonzero. <code>x == y || ( y != 0 &amp;&amp; x % y == 0)</code> would work."}, {"owner": {"reputation": 1288, "user_id": 1030331, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a040efe521220498bf6f1ffc3349b5cc?s=128&d=identicon&r=PG", "display_name": "Elliott", "link": "https://stackoverflow.com/users/1030331/elliott"}, "edited": false, "score": 0, "creation_date": 1489777471, "post_id": 42849924, "comment_id": 72836916, "body": "Good point -- the &quot;assertion will fail&quot; but it&#39;ll fail with a divide by zero error rather than a helpful error message"}], "answers": [{"comments": [{"owner": {"reputation": 623, "user_id": 1955971, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/f1d7c2842d4d6be9c8f79e1384f284af?s=128&d=identicon&r=PG", "display_name": "Aleksander Fular", "link": "https://stackoverflow.com/users/1955971/aleksander-fular"}, "edited": false, "score": 0, "creation_date": 1489764374, "post_id": 42850088, "comment_id": 72828808, "body": "<code>assert_eq!(0, x % if y == 0 { 1 } else { y });</code> looks invalid to me, if <code>y == 0</code> then the result would always be 0. since <code>mod 1</code> is always equivalent to 0."}, {"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "reply_to_user": {"reputation": 623, "user_id": 1955971, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/f1d7c2842d4d6be9c8f79e1384f284af?s=128&d=identicon&r=PG", "display_name": "Aleksander Fular", "link": "https://stackoverflow.com/users/1955971/aleksander-fular"}, "edited": false, "score": 0, "creation_date": 1489765897, "post_id": 42850088, "comment_id": 72829868, "body": "@AleksanderFular OK. Deleted that."}], "tags": [], "owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "is_accepted": false, "score": 5, "last_activity_date": 1489765884, "last_edit_date": 1489765884, "creation_date": 1489729608, "answer_id": 42850088, "question_id": 42849924, "link": "https://stackoverflow.com/questions/42849924/check-if-x-is-a-multiple-of-y-where-y-may-be-zero/42850088#42850088", "title": "Check if X is a multiple of Y, where Y may be zero", "body": "<p><a href=\"https://doc.rust-lang.org/book/if.html\" rel=\"nofollow noreferrer\"><code>if</code> is an expression in Rust</a>, so you could write</p>\n\n<pre><code>assert_eq!(0, if y == 0 { x } else { x % y });\n</code></pre>\n\n<p>As mentioned in the comment, you could also write</p>\n\n<pre><code>assert!(y == 0 &amp;&amp; x == 0 || x % y == 0);\n</code></pre>\n\n<p>but the <code>if</code> expression approach is more general.</p>\n\n<p>You could also <a href=\"https://doc.rust-lang.org/std/primitive.i32.html#method.checked_rem\" rel=\"nofollow noreferrer\">use <code>checked_rem</code></a> so that <code>x.checked_rem(0) == None</code>, but that is not going to be simpler than an <code>if</code> expression.</p>\n\n<pre><code>assert_eq!(0, x.checked_rem(y).unwrap_or(x));\n</code></pre>\n"}], "owner": {"reputation": 1288, "user_id": 1030331, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a040efe521220498bf6f1ffc3349b5cc?s=128&d=identicon&r=PG", "display_name": "Elliott", "link": "https://stackoverflow.com/users/1030331/elliott"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 323, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1489765884, "creation_date": 1489728892, "last_edit_date": 1489756924, "question_id": 42849924, "link": "https://stackoverflow.com/questions/42849924/check-if-x-is-a-multiple-of-y-where-y-may-be-zero", "title": "Check if X is a multiple of Y, where Y may be zero", "body": "<p>I have two numbers, X and Y, and I want to assert that X is a multiple of Y -- i.e., I want to assert that there exists some arbitrary integer n such that Y * n == X.</p>\n\n<p>If Y is guaranteed to be greater than zero, I can write</p>\n\n<pre><code>assert!(x % y == 0)\n</code></pre>\n\n<p>But in my case, Y may be zero. If Y is zero, then X must also be zero, so I could write</p>\n\n<pre><code>if y == 0 {\n    assert!(x == 0);\n} else {\n    assert!(x % y == 0);\n}\n</code></pre>\n\n<p>But this is 5 lines long and has two branches vs. the assert's single branch. Is it possible to do this in one line in an elegant way?</p>\n"}, {"tags": ["multithreading", "rust"], "answers": [{"comments": [{"owner": {"reputation": 3495, "user_id": 36585, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a0ccd55542e51b1b98f5a72b30c815dc?s=128&d=identicon&r=PG", "display_name": "pnkfelix", "link": "https://stackoverflow.com/users/36585/pnkfelix"}, "edited": false, "score": 5, "creation_date": 1489748355, "post_id": 42851615, "comment_id": 72817586, "body": "For general types <code>T</code>, a <code>Mutex&lt;T&gt;</code> is indeed necessary. Another option for some types is to use wrapper types in <a href=\"https://doc.rust-lang.org/std/sync/atomic/index.html\" rel=\"nofollow noreferrer\"><code>std::sync::atomic</code></a>, for example <a href=\"https://doc.rust-lang.org/std/sync/atomic/struct.AtomicIsize.html\" rel=\"nofollow noreferrer\"><code>AtomicIsize</code></a> which provides methods like <code>fetch_add</code> or <code>compare_and_swap</code>. (You&#39;ll also have to specify what memory ordering to impose.)"}], "tags": [], "owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "is_accepted": true, "score": 12, "last_activity_date": 1568744428, "last_edit_date": 1568744428, "creation_date": 1489735681, "answer_id": 42851615, "question_id": 42849210, "link": "https://stackoverflow.com/questions/42849210/how-can-i-mutably-share-an-i32-between-threads/42851615#42851615", "title": "How can I mutably share an i32 between threads?", "body": "<p>Please read the <a href=\"https://doc.rust-lang.org/book/ch16-03-shared-state.html\" rel=\"nofollow noreferrer\">\"Shared-State Concurrency\" chapter of The Rust Book</a>, it explains how to do this in detail.</p>\n\n<p>In short:</p>\n\n<ol>\n<li>Your program does not work because <code>num</code> is <strong>copied</strong>, so <code>output()</code> and the thread operate on different copies of the number. The Rust compiler will fail to compile with an error if <code>num</code> is not copyable.</li>\n<li>Since you need to share the same variable between multiple threads, you need to wrap it in an <a href=\"https://doc.rust-lang.org/std/sync/struct.Arc.html\" rel=\"nofollow noreferrer\"><code>Arc</code></a> (<strong>a</strong>tomic <strong>r</strong>eference-<strong>c</strong>ounted variable)</li>\n<li>Since you need to modify the variable inside the <code>Arc</code>, you need to put it in a <a href=\"https://doc.rust-lang.org/std/sync/struct.Mutex.html\" rel=\"nofollow noreferrer\"><code>Mutex</code></a> or <a href=\"https://doc.rust-lang.org/std/sync/struct.RwLock.html\" rel=\"nofollow noreferrer\"><code>RwLock</code></a>. You use the <code>.lock()</code> method to obtain a mutable reference out of a <code>Mutex</code>. The method will ensure exclusive access across the whole process during the lifetime of that mutable reference.</li>\n</ol>\n\n<pre><code>use std::sync::{Arc, Mutex};\nuse std::thread;\nuse std::time::Duration;\n\nfn main() {\n    let num = Arc::new(Mutex::new(5));\n    // allow `num` to be shared across threads (Arc) and modified\n    // (Mutex) safely without a data race.\n\n    let num_clone = num.clone();\n    // create a cloned reference before moving `num` into the thread.\n\n    thread::spawn(move || {\n        loop {\n            *num.lock().unwrap() += 1;\n            // modify the number.\n            thread::sleep(Duration::from_secs(10));\n        }\n    });\n\n    output(num_clone);\n}\n\nfn output(num: Arc&lt;Mutex&lt;i32&gt;&gt;) {\n    loop {\n        println!(\"{:?}\", *num.lock().unwrap());\n        // read the number.\n        //  - lock(): obtains a mutable reference; may fail,\n        //    thus return a Result\n        //  - unwrap(): ignore the error and get the real\n        //    reference / cause panic on error.\n        thread::sleep(Duration::from_secs(5));\n    }\n}\n</code></pre>\n\n<p>You may also want to read:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/23350954/why-does-rust-have-mutexes-and-other-sychronization-primitives-if-sharing-of-mu/23361845#23361845\">Why does Rust have mutexes and other sychronization primitives, if sharing of mutable state between tasks is not allowed?</a></li>\n<li><a href=\"https://stackoverflow.com/questions/40984932/what-happens-when-an-arc-is-cloned/40985661\">What happens when an Arc is cloned?</a></li>\n<li><a href=\"https://stackoverflow.com/questions/31373255/share-mutable-object-between-threads/31373349#31373349\">How do I share a mutable object between threads using Arc?</a> (for why we need <code>Arc&lt;Mutex&lt;i32&gt;&gt;</code> instead of <code>Arc&lt;i32&gt;</code>)</li>\n<li><a href=\"https://stackoverflow.com/questions/33116317/when-would-you-use-a-mutex-without-an-arc/33116578#33116578\">When would you use a Mutex without an Arc?</a> (for why we need <code>Arc&lt;Mutex&lt;i32&gt;&gt;</code> instead of <code>Mutex&lt;i32&gt;</code>)</li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": false, "score": 4, "last_activity_date": 1555012355, "last_edit_date": 1555012355, "creation_date": 1549649263, "answer_id": 54598041, "question_id": 42849210, "link": "https://stackoverflow.com/questions/42849210/how-can-i-mutably-share-an-i32-between-threads/54598041#54598041", "title": "How can I mutably share an i32 between threads?", "body": "<p>The other answer solves the problem for any type, but as pnkfelix <a href=\"https://stackoverflow.com/questions/42849210/share-i32-mutably-between-threads#comment72817586_42851615\">observes</a>, atomic wrapper types are another solution that will work for the specific case of <code>i32</code>.</p>\n\n<p>Since Rust 1.0, you can use <code>AtomicBool</code>, <code>AtomicPtr&lt;T&gt;</code>, <code>AtomicIsize</code> and <code>AtomicUsize</code> to synchronize multi-threaded access to <code>bool</code>, <code>*mut T</code>, <code>isize</code> and <code>usize</code> values. In Rust 1.34, several new <code>Atomic</code> types have been stabilized, including <code>AtomicI32</code>. (Check the <code>std::sync::atomic</code> documentation for the current list.)</p>\n\n<p>Using an atomic type is most likely more efficient than locking a <code>Mutex</code> or <code>RwLock</code>, but requires more attention to the low-level details of memory ordering. If your threads share more data than can fit in one of the standard atomic types, you probably want a <code>Mutex</code> instead of multiple <code>Atomic</code>s.</p>\n\n<p>That said, here's a version of kennytm's answer using <code>AtomicI32</code> instead of <code>Mutex&lt;i32&gt;</code>:</p>\n\n<pre><code>use std::sync::{\n    atomic::{AtomicI32, Ordering},\n    Arc,\n};\nuse std::thread;\nuse std::time::Duration;\n\nfn main() {\n    let num = Arc::new(AtomicI32::new(5));\n    let num_clone = num.clone();\n\n    thread::spawn(move || loop {\n        num.fetch_add(1, Ordering::SeqCst);\n        thread::sleep(Duration::from_secs(10));\n    });\n\n    output(num_clone);\n}\n\nfn output(num: Arc&lt;AtomicI32&gt;) {\n    loop {\n        println!(\"{:?}\", num.load(Ordering::SeqCst));\n        thread::sleep(Duration::from_secs(5));\n    }\n}\n</code></pre>\n\n<p><code>Arc</code> is still required for shared ownership (but see <a href=\"https://stackoverflow.com/q/32750829/3650362\">How can I pass a reference to a stack variable to a thread?</a>).</p>\n\n<p>Choosing the right memory <code>Ordering</code> is far from trivial. <code>SeqCst</code> is the most conservative choice, but if there is only one memory address being shared, <code>Relaxed</code> should also work. See the links below for more information.</p>\n\n<h2>Links</h2>\n\n<ol>\n<li><a href=\"https://doc.rust-lang.org/std/sync/atomic/index.html\" rel=\"nofollow noreferrer\"><code>std::sync::atomic</code> module documentation</a></li>\n<li><a href=\"https://doc.rust-lang.org/nomicon/atomics.html\" rel=\"nofollow noreferrer\">Atomics</a> (chapter of <em>The Rustonomicon</em>)</li>\n<li><a href=\"https://llvm.org/docs/LangRef.html#memory-model-for-concurrent-operations\" rel=\"nofollow noreferrer\">LLVM Memory Model for Concurrent Operations</a> and <a href=\"https://llvm.org/docs/Atomics.html\" rel=\"nofollow noreferrer\">Atomic Instructions and Concurrency Guide</a></li>\n</ol>\n"}], "owner": {"reputation": 73, "user_id": 7725021, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/871639a1d7c8ee1415a4f0d24bd865f4?s=128&d=identicon&r=PG&f=1", "display_name": "user7725021", "link": "https://stackoverflow.com/users/7725021/user7725021"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2091, "favorite_count": 1, "accepted_answer_id": 42851615, "answer_count": 2, "score": 5, "last_activity_date": 1568744929, "creation_date": 1489724748, "last_edit_date": 1568744929, "question_id": 42849210, "link": "https://stackoverflow.com/questions/42849210/how-can-i-mutably-share-an-i32-between-threads", "title": "How can I mutably share an i32 between threads?", "body": "<p>I'm new to Rust and threading and I'm trying to print out a number while adding to it in another thread. How can I accomplish this?</p>\n\n<pre><code>use std::thread;\nuse std::time::Duration;\n\nfn main() {\n    let mut num = 5;\n    thread::spawn(move || {\n        loop {\n            num += 1;\n            thread::sleep(Duration::from_secs(10));\n        }\n    });\n    output(num);\n}\n\nfn output(num: i32) {\n    loop {\n        println!(\"{:?}\", num);\n        thread::sleep(Duration::from_secs(5));\n    }\n}\n</code></pre>\n\n<p>The above code doesn't work: it always prints <code>5</code> as if the number is never incremented.</p>\n"}, {"tags": ["proxy", "rust"], "comments": [{"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 5, "creation_date": 1489697090, "post_id": 42843329, "comment_id": 72797668, "body": "I suggest using a <a href=\"https://www.rust-lang.org/en-US/other-installers.html#standalone\" rel=\"nofollow noreferrer\">standalone installer</a>. That&#39;s what I do at work."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1489697746, "post_id": 42843329, "comment_id": 72797961, "body": "Can you resolve <code>static.rust-lang.org</code> through other means? A web browser or a command line tool like <code>dig</code>?"}, {"owner": {"reputation": 7536, "user_id": 2419183, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/ac151b3eb8086a1f05da6f80ab1b1f50?s=128&d=identicon&r=PG", "display_name": "Peter Pei Guo", "link": "https://stackoverflow.com/users/2419183/peter-pei-guo"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1489699748, "post_id": 42843329, "comment_id": 72798856, "body": "@Shepmaster, I can, but the installer is just one single .exe binary and gives no option to configure/take in the solved IP address."}, {"owner": {"reputation": 7536, "user_id": 2419183, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/ac151b3eb8086a1f05da6f80ab1b1f50?s=128&d=identicon&r=PG", "display_name": "Peter Pei Guo", "link": "https://stackoverflow.com/users/2419183/peter-pei-guo"}, "reply_to_user": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1489699820, "post_id": 42843329, "comment_id": 72798885, "body": "@ljedrz, perfect! thanks!"}, {"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1489726061, "post_id": 42843329, "comment_id": 72806665, "body": "Can you modify your <a href=\"https://superuser.com/questions/47716/how-do-i-block-certain-websites-from-being-accessed-through-a-browser/47720#47720\">hosts file</a> to hard code the DNS response?"}, {"owner": {"reputation": 7536, "user_id": 2419183, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/ac151b3eb8086a1f05da6f80ab1b1f50?s=128&d=identicon&r=PG", "display_name": "Peter Pei Guo", "link": "https://stackoverflow.com/users/2419183/peter-pei-guo"}, "reply_to_user": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1489820245, "post_id": 42843329, "comment_id": 72848154, "body": "@kennytm, good idea, tested and worked. I will add this to the answer. Thanks!"}], "answers": [{"comments": [{"owner": {"reputation": 3566, "user_id": 5138648, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1fdbc41d6ae88135845b5d965dac0b13?s=128&d=identicon&r=PG", "display_name": "aSpex", "link": "https://stackoverflow.com/users/5138648/aspex"}, "edited": false, "score": 2, "creation_date": 1507271076, "post_id": 42846168, "comment_id": 80150883, "body": "Have you tried to set up environment variable <code>https_proxy=http:&#47;&#47;x.x.x.x:port</code>? After that rustup started working for me."}, {"owner": {"reputation": 570, "user_id": 3256073, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a0f9a1e93018776d149054dc2ccbe57f?s=128&d=identicon&r=PG&f=1", "display_name": "hsandt", "link": "https://stackoverflow.com/users/3256073/hsandt"}, "edited": false, "score": 1, "creation_date": 1510241097, "post_id": 42846168, "comment_id": 81359831, "body": "1 didn&#39;t work but 2 did. I guess I really have a problem with my proxy at the office (http(s)_proxy environment variable seems ignored, so I can&#39;t use Package Control on Sublime Text, etc.)"}], "tags": [], "owner": {"reputation": 7536, "user_id": 2419183, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/ac151b3eb8086a1f05da6f80ab1b1f50?s=128&d=identicon&r=PG", "display_name": "Peter Pei Guo", "link": "https://stackoverflow.com/users/2419183/peter-pei-guo"}, "is_accepted": false, "score": 7, "last_activity_date": 1489820711, "last_edit_date": 1489820711, "creation_date": 1489704486, "answer_id": 42846168, "question_id": 42843329, "link": "https://stackoverflow.com/questions/42843329/how-can-i-install-rust-using-rustup-on-windows-when-behind-a-firewall/42846168#42846168", "title": "How can I install Rust using rustup on Windows when behind a firewall?", "body": "<p>I have tested two solutions that were suggested as comments above, and both worked. Thanks, kennytm and ljedrz!</p>\n\n<ol>\n<li><p>Suggested by kennytm, add the following line to the hosts file in c:\\Windows\\System32\\drivers\\etc</p>\n\n<p>13.32.244.72    static.rust-lang.org</p></li>\n<li><p>Suggested by ljedrz, use a standalone installer. In the past, one could easily find those standalone installers, but with the latest reorg of the rust language site, the only thing really pops out initially is the rustup-init.exe. However as @ljedrz pointed out in his comment above, those standalone installers still exist and can be found here: <a href=\"https://www.rust-lang.org/en-US/other-installers.html#standalone\" rel=\"noreferrer\">standalone installers for various platforms</a>.  </p></li>\n</ol>\n"}, {"comments": [{"owner": {"reputation": 193, "user_id": 2376823, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1031fbb24953f749937e719308dfaae8?s=128&d=identicon&r=PG", "display_name": "Plendor", "link": "https://stackoverflow.com/users/2376823/plendor"}, "edited": false, "score": 0, "creation_date": 1557833253, "post_id": 47624713, "comment_id": 98889862, "body": "This is super useful for other applications too. Thank you!"}, {"owner": {"reputation": 14946, "user_id": 8188846, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/85a7614508b329eb4a495c59ccf64ac7?s=128&d=identicon&r=PG", "display_name": "Maximilian Burszley", "link": "https://stackoverflow.com/users/8188846/maximilian-burszley"}, "edited": false, "score": 0, "creation_date": 1561993796, "post_id": 47624713, "comment_id": 100228672, "body": "This doesn&#39;t answer the OP who has stated their <code>http_proxy</code> environment variable is already set."}], "tags": [], "owner": {"reputation": 4229, "user_id": 20164, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/6f90c4e2d000246df830fac88805bda7?s=128&d=identicon&r=PG", "display_name": "Jim Burger", "link": "https://stackoverflow.com/users/20164/jim-burger"}, "is_accepted": false, "score": 25, "last_activity_date": 1512345907, "creation_date": 1512345907, "answer_id": 47624713, "question_id": 42843329, "link": "https://stackoverflow.com/questions/42843329/how-can-i-install-rust-using-rustup-on-windows-when-behind-a-firewall/47624713#47624713", "title": "How can I install Rust using rustup on Windows when behind a firewall?", "body": "<p>I followed aSpex's advice...</p>\n\n<ol>\n<li>Go to <a href=\"https://www.rust-lang.org/\" rel=\"noreferrer\">https://www.rust-lang.org/</a> -> Install</li>\n<li><p>Download rustup-init.exe to ~/Downloads</p></li>\n<li><p>In powershell:</p>\n\n<pre><code>$proxy='http://&lt;IP&gt;:&lt;PORT&gt;'\n\n$ENV:HTTP_PROXY=$proxy \n$ENV:HTTPS_PROXY=$proxy\ncd ~\\Downloads\n.\\rustup-init.exe\n</code></pre></li>\n</ol>\n"}, {"tags": [], "owner": {"reputation": 997, "user_id": 527160, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/hAFLq.png?s=128&g=1", "display_name": "fr1550n", "link": "https://stackoverflow.com/users/527160/fr1550n"}, "is_accepted": false, "score": 0, "last_activity_date": 1603103900, "creation_date": 1603103900, "answer_id": 64425650, "question_id": 42843329, "link": "https://stackoverflow.com/questions/42843329/how-can-i-install-rust-using-rustup-on-windows-when-behind-a-firewall/64425650#64425650", "title": "How can I install Rust using rustup on Windows when behind a firewall?", "body": "<p>My rustup was not using curl and the https_proxy variable needed modification.</p>\n<ol>\n<li><p>Enabling curl for rustup:</p>\n<p>set RUSTUP_USE_CURL=1</p>\n</li>\n<li><p>Remove the protocol in the value for https_proxy</p>\n<p>set https_proxy=user:passwd@host:port</p>\n</li>\n<li><p>retry</p>\n<p>rustup install stable</p>\n<p>rustup default stable</p>\n</li>\n</ol>\n<p>The information was gleaned from: <a href=\"https://rust-lang.github.io/rustup/network-proxies.html\" rel=\"nofollow noreferrer\">https://rust-lang.github.io/rustup/network-proxies.html</a></p>\n"}], "owner": {"reputation": 7536, "user_id": 2419183, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/ac151b3eb8086a1f05da6f80ab1b1f50?s=128&d=identicon&r=PG", "display_name": "Peter Pei Guo", "link": "https://stackoverflow.com/users/2419183/peter-pei-guo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 7226, "favorite_count": 6, "answer_count": 3, "score": 17, "last_activity_date": 1603103900, "creation_date": 1489692939, "last_edit_date": 1489697551, "question_id": 42843329, "link": "https://stackoverflow.com/questions/42843329/how-can-i-install-rust-using-rustup-on-windows-when-behind-a-firewall", "title": "How can I install Rust using rustup on Windows when behind a firewall?", "body": "<p>I <a href=\"https://rustup.rs/\" rel=\"noreferrer\">downloaded rustup-init.exe</a>. When I ran it at home, everything went fine, but when I run it from my office through a proxy, I ran into a problem:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>info: syncing channel updates for 'stable-x86_64-pc-windows-msvc'\nerror: could not download file from 'https://static.rust-lang.org/dist/channel-rust-stable.toml.sha256' to 'C:\\Users\\350627\\.rustup\\tmp\\l3ogei4e89gnb1df_file\ninfo: caused by: error during download\ninfo: caused by: [6] Couldn't resolve host name (Couldn't resolve host 'static.rust-lang.org')\n</code></pre>\n\n<p>I am on Windows and the <code>http_proxy</code> environment variable is properly set. </p>\n\n<p>I tried to \"customize installation\", but it did not give me the option to manually provide an IP address:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>1) Proceed with installation (default)\n2) Customize installation\n3) Cancel installation\n</code></pre>\n\n<p>Does anyone know a workaround?</p>\n"}, {"tags": ["pointers", "types", "rust", "type-systems"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1489691129, "post_id": 42842581, "comment_id": 72794448, "body": "Have you read <a href=\"https://doc.rust-lang.org/1.15.0/book/references-and-borrowing.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/1.15.0/book/references-and-borrowing.html</a> ? The first (interesting) example is <a href=\"https://doc.rust-lang.org/1.15.0/book/references-and-borrowing.html#iterator-invalidation\" rel=\"nofollow noreferrer\">Iterator Invalidation</a> which has <i>nothing</i> to do with data races. Data race freedom is actually mostly a fallout of the <b>Aliasing XOR Mutability</b> principle which underlies borrow checking; the cherry on top of the cake so to speak."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1489691476, "post_id": 42842581, "comment_id": 72794657, "body": "@MatthieuM. tsk, tsk, linking to that old, out of date documentation. Didn&#39;t you know that Rust 1.16.0 came out literally hours ago?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1489735897, "post_id": 42842581, "comment_id": 72810287, "body": "@Shepmaster: Alas, a few hours too late! Fortunately, it made it up having <code>cargo check</code>!"}], "answers": [{"comments": [{"owner": {"reputation": 748, "user_id": 2128597, "user_type": "registered", "accept_rate": 64, "profile_image": "https://graph.facebook.com/100000157613328/picture?type=large", "display_name": "\u76db\u5b89\u5b89", "link": "https://stackoverflow.com/users/2128597/%e7%9b%9b%e5%ae%89%e5%ae%89"}, "edited": false, "score": 0, "creation_date": 1489692195, "post_id": 42842814, "comment_id": 72795074, "body": "Can you reallocate without having ownership?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 748, "user_id": 2128597, "user_type": "registered", "accept_rate": 64, "profile_image": "https://graph.facebook.com/100000157613328/picture?type=large", "display_name": "\u76db\u5b89\u5b89", "link": "https://stackoverflow.com/users/2128597/%e7%9b%9b%e5%ae%89%e5%ae%89"}, "edited": false, "score": 1, "creation_date": 1489692384, "post_id": 42842814, "comment_id": 72795156, "body": "@\u76db\u5b89\u5b89 yes. To call <code>push</code>, you only need <code>&amp;mut Vec&lt;T&gt;</code>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1489691550, "last_edit_date": 1489691550, "creation_date": 1489691187, "answer_id": 42842814, "question_id": 42842581, "link": "https://stackoverflow.com/questions/42842581/why-does-rust-enforce-objects-can-only-be-mutably-borrowed-once/42842814#42842814", "title": "Why does Rust enforce objects can only be mutably borrowed once?", "body": "<p>Because of <strong>memory safety</strong>.</p>\n\n<p>Consider this example (disregard the fact that this would result in an infinite loop if it compiled):</p>\n\n<pre><code>let mut list = vec![1, 2, 3];\nfor item in &amp;list {\n    list.push(*item + 1);\n    println!(\"item = {}\", item);\n}\n</code></pre>\n\n<p><code>item</code> is a reference to the memory held by <code>list</code>; it is of type <code>&amp;i32</code>. You may read the value of that element by dereferencing it (<code>*item</code>).</p>\n\n<p>What would happen to the reference in <code>item</code> if the <code>push</code> call were to reallocate the vector's memory to a different address?</p>\n\n<p>The reference would then contain the <em>old</em> address. Any attempt to access it would involve reading some undefined chunk of memory. This violates a core Rust safety principle.</p>\n\n<blockquote>\n  <p>Isn't there already <code>Send</code>/<code>Sync</code></p>\n</blockquote>\n\n<p><code>Send</code> and <code>Sync</code> are concerned with multiple threads. As you can see from the example above, you don't need threads to potentially produce invalid references.</p>\n"}], "owner": {"reputation": 748, "user_id": 2128597, "user_type": "registered", "accept_rate": 64, "profile_image": "https://graph.facebook.com/100000157613328/picture?type=large", "display_name": "\u76db\u5b89\u5b89", "link": "https://stackoverflow.com/users/2128597/%e7%9b%9b%e5%ae%89%e5%ae%89"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 85, "favorite_count": 0, "accepted_answer_id": 42842814, "answer_count": 1, "score": 1, "last_activity_date": 1489691550, "creation_date": 1489690414, "last_edit_date": 1489690853, "question_id": 42842581, "link": "https://stackoverflow.com/questions/42842581/why-does-rust-enforce-objects-can-only-be-mutably-borrowed-once", "title": "Why does Rust enforce objects can only be mutably borrowed once?", "body": "<p>Isn't there already <code>Send</code>/<code>Sync</code>? The official document only mentions it has something to do with data races.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1489658249, "post_id": 42830493, "comment_id": 72771079, "body": "&quot;<i>I should only accept types that are <code>repr(C)</code></i>&quot;  -&gt; could you clarify that? You do accept generic types in some of your methods and need those to be <code>repr(C)</code>? Why?"}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1489658278, "post_id": 42830493, "comment_id": 72771106, "body": "I don&#39;t think there is any guarantee that Rust will use the same representation for data as C does."}, {"owner": {"reputation": 13772, "user_id": 944430, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/4d2b181af01c96927ac05eb864d6b7b6?s=128&d=identicon&r=PG", "display_name": "Maik Klein", "link": "https://stackoverflow.com/users/944430/maik-klein"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1489658863, "post_id": 42830493, "comment_id": 72771528, "body": "@LukasKalbertodt I am not completely sure what you mean, but I added an example in my question. Surely <code>Vertex</code> here should match the C layout that the shader is going to use? I am not quite sure if <code>#[repr(C)]</code> will also result in a different size because of different packing."}], "answers": [{"comments": [{"owner": {"reputation": 13772, "user_id": 944430, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/4d2b181af01c96927ac05eb864d6b7b6?s=128&d=identicon&r=PG", "display_name": "Maik Klein", "link": "https://stackoverflow.com/users/944430/maik-klein"}, "edited": false, "score": 0, "creation_date": 1489660394, "post_id": 42830797, "comment_id": 72772621, "body": "Oh right, I can&#39;t believe that I didn&#39;t notice that. I guess I could use proc macros to dynamically implement some trait if the type has <code>#[repr(C)]</code>."}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 2, "creation_date": 1489666247, "post_id": 42830797, "comment_id": 72776645, "body": "In particular, fields have been re-ordered for a bit recently, though that was temporarily backed out again: <a href=\"https://internals.rust-lang.org/t/rolling-out-or-unrolling-struct-field-reorderings/4485\" rel=\"nofollow noreferrer\">internals.rust-lang.org/t/&hellip;</a>"}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 7, "last_activity_date": 1489658614, "creation_date": 1489658614, "answer_id": 42830797, "question_id": 42830493, "link": "https://stackoverflow.com/questions/42830493/what-is-the-difference-between-reprc-and-reprrust/42830797#42830797", "title": "What is the difference between repr(C) and repr(rust)?", "body": "<p>The difference you see in the output of your program is not due to memory layout. <code>Box&lt;T&gt;</code> heap allocates and stores a pointer to the heap contents, so what you are printing is the pointer. As <code>Box&lt;T&gt;</code> doesn't perform any interning/object pooling, the two addresses are of course different. What's probably a bit confusing is that the addresses are so close to each other. I <em>guess</em> this has just something to do with jmalloc, the allocator Rust uses, which has densely packed pools for small allocations.</p>\n\n<blockquote>\n  <p>Can I assume that if a type only contains other POD types, then the layout will be the same as in C?</p>\n</blockquote>\n\n<p><strong>No.</strong> You pretty much can't assume anything about Rust's memory layout of types. This is intentionally not specified to allow for optimizations, such as field reordering. Even though <em>right now</em>, <code>repr(Rust)</code> matches <code>repr(C)</code> pretty closely, you can't assume that it will be like that forever.</p>\n"}], "owner": {"reputation": 13772, "user_id": 944430, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/4d2b181af01c96927ac05eb864d6b7b6?s=128&d=identicon&r=PG", "display_name": "Maik Klein", "link": "https://stackoverflow.com/users/944430/maik-klein"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3433, "favorite_count": 1, "accepted_answer_id": 42830797, "answer_count": 1, "score": 7, "last_activity_date": 1489658750, "creation_date": 1489657823, "last_edit_date": 1489658750, "question_id": 42830493, "link": "https://stackoverflow.com/questions/42830493/what-is-the-difference-between-reprc-and-reprrust", "title": "What is the difference between repr(C) and repr(rust)?", "body": "<p>I am currently writing a Vulkan renderer and I just realized that I should only accept types that are <code>repr(C)</code>, but as far as I know there is no way to actually check that at compile time.</p>\n\n<pre><code>struct Vertex {\n    x: f32,\n    y: f32,\n    b: Box&lt;f32&gt;\n}\n\n#[repr(C)]\nstruct Vertex2 {\n    x: f32,\n    y: f32,\n    b: Box&lt;f32&gt;\n}\n\nfn to_bytes&lt;T&gt;(t: &amp;T) -&gt; &amp;[u8]{\n    let p: *const T = t;\n    let p = p as *const u8;\n    unsafe{\n        std::slice::from_raw_parts(p, std::mem::size_of::&lt;T&gt;())\n    }\n}\n\nfn main() {\n    let v = Vertex{x: 42.0, y: 0.0, b: Box::new(42.0)};\n    let v2 = Vertex2{x: 42.0, y: 0.0, b: Box::new(42.0)};\n    println!(\"{:?}\", to_bytes(&amp;v));\n    println!(\"{:?}\", to_bytes(&amp;v2));\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=5c29b9a791c535973620c65c2be0b6fe&amp;version=stable&amp;backtrace=0\" rel=\"noreferrer\">Playground</a></p>\n\n<p>After a few tries, I could finally see a difference between <code>repr(c)</code> and <code>repr(rust)</code> but only when I used a <code>Box</code>.</p>\n\n<p>What is the difference between <code>repr(C)</code> and <code>repr(rust)</code>? Can I assume that if a type only contains other POD types, then the layout will be the same as in C?</p>\n\n<p>Example:</p>\n\n<pre><code>let slice = base.device\n    .map_memory::&lt;Vertex&gt;(vertex_input_buffer_memory,\n                          0,\n                          vertex_input_buffer_info.size,\n                          vk::MemoryMapFlags::empty())\n    .unwrap();\nslice.copy_from_slice(&amp;vertices);\n</code></pre>\n\n<p><a href=\"https://github.com/MaikKlein/ash/blob/master/examples/src/bin/triangle.rs#L183\" rel=\"noreferrer\">Source</a></p>\n\n<p>I am filling a buffer that I hand to Vulkan, so I assume that the layout here probably matters. </p>\n"}, {"tags": ["string", "vector", "rust"], "comments": [{"owner": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 0, "creation_date": 1489638616, "post_id": 42824439, "comment_id": 72761591, "body": "You really want a <code>Vec&lt;Vec&lt;Vec&lt;&amp;str&gt;&gt;&gt;</code>? o_O"}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "reply_to_user": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 0, "creation_date": 1489657982, "post_id": 42824439, "comment_id": 72770879, "body": "@ildjarn Since the OP is &quot;trying to push to a <code>Vec&lt;Vec&lt;String&gt;&gt;</code>&quot;, it seems they want a <code>Vec&lt;Vec&lt;String&gt;&gt;</code> (two <code>Vec</code>s, not three)."}, {"owner": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "reply_to_user": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1489658196, "post_id": 42824439, "comment_id": 72771037, "body": "@user4815162342 : Ah, somehow I&#39;d missed that bit. That said, getting rid of <code>childVec</code> should be part of the answer then."}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "reply_to_user": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 0, "creation_date": 1489669563, "post_id": 42824439, "comment_id": 72779102, "body": "@ildjarn No, you are completely right, sorry about that. The OP really does want a <code>Vec&lt;Vec&lt;String&gt;&gt;</code>, but their code is creating a <code>Vec&lt;Vec&lt;Vec&lt;String&gt;&gt;&gt;</code> with an unnecessary one-element vector in the middle."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1489673456, "post_id": 42824439, "comment_id": 72781985, "body": "The <b>true</b> answer is to use <a href=\"https://crates.io/crates/csv\" rel=\"nofollow noreferrer\">the csv crate</a> because parsing CSV is harder than everyone thinks it is."}], "answers": [{"comments": [{"owner": {"reputation": 1366, "user_id": 4807889, "user_type": "registered", "accept_rate": 45, "profile_image": "https://graph.facebook.com/10153645629657370/picture?type=large", "display_name": "mjwrazor", "link": "https://stackoverflow.com/users/4807889/mjwrazor"}, "edited": false, "score": 0, "creation_date": 1489677284, "post_id": 42824498, "comment_id": 72785024, "body": "This solution also works. <a href=\"https://gist.github.com/anonymous/69085de6ed235a05cfc59e35cefa12f6\" rel=\"nofollow noreferrer\">gist</a>"}], "tags": [], "owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "is_accepted": false, "score": 3, "last_activity_date": 1489633452, "last_edit_date": 1489633452, "creation_date": 1489633211, "answer_id": 42824498, "question_id": 42824439, "link": "https://stackoverflow.com/questions/42824439/how-to-convert-a-string-of-strings-to-an-array-vector-of-strings-in-rust/42824498#42824498", "title": "How to convert a String of strings to an Array/Vector of Strings in Rust", "body": "<p>You need to give the compiler a little hint as to what you want <code>values</code> to be.</p>\n\n<p>You can say you want it to be a vector of <em>something</em>:</p>\n\n<pre><code>let values: Vec&lt;_&gt; = trimmed.split(',').collect();\n</code></pre>\n\n<p><a href=\"http://play.integer32.com/?gist=1e841f7520dc06d150cfc05572c70275&amp;version=stable\" rel=\"nofollow noreferrer\">Working example in the playground</a></p>\n\n<p>A few other notes about the code, if you're interested.</p>\n\n<ul>\n<li>The variable names should be <code>snake_case</code>. So the vectors should be called <code>main_vec</code> and <code>child_vec</code>.</li>\n<li>The <code>child_vec</code> does not need to be cloned when pushing it to the <code>main_vec</code>. Pushing it to <code>main_vec</code> transfers ownership and the loop redeclares the <code>child_vec</code> and so the compiler can guarantee nothing has been violated here.</li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 0, "creation_date": 1489669114, "post_id": 42832849, "comment_id": 72778775, "body": "OP wants a <code>Vec&lt;Vec&lt;String&gt;&gt;</code> rather than a <code>Vec&lt;Vec&lt;&amp;str&gt;&gt;</code> so after the <code>split</code> there should be a <code>.map(String::from)</code> or somesuch."}, {"owner": {"reputation": 1366, "user_id": 4807889, "user_type": "registered", "accept_rate": 45, "profile_image": "https://graph.facebook.com/10153645629657370/picture?type=large", "display_name": "mjwrazor", "link": "https://stackoverflow.com/users/4807889/mjwrazor"}, "reply_to_user": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 1, "creation_date": 1489674809, "post_id": 42832849, "comment_id": 72782995, "body": "@ildjarn True that seems to be my problem, I can&#39;t figure out the right spot to drop in either the <code>String::from()</code> or the <code>.to_string()</code> methods."}, {"owner": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "reply_to_user": {"reputation": 1366, "user_id": 4807889, "user_type": "registered", "accept_rate": 45, "profile_image": "https://graph.facebook.com/10153645629657370/picture?type=large", "display_name": "mjwrazor", "link": "https://stackoverflow.com/users/4807889/mjwrazor"}, "edited": false, "score": 0, "creation_date": 1489674944, "post_id": 42832849, "comment_id": 72783126, "body": "@mjwrazor : What Victor has at the end, plus a <code>.map(String::from)</code> after the <code>split</code>: <code>.map(|s| s.trim().split(&#39;,&#39;).map(String::from).collect::&lt;Vec&lt;_&gt;&gt;())</code>. (Other options are available e.g. <code>.map(|s| s.trim().split(&#39;,&#39;).map(ToString::to_string).collect::&lt;Vec&lt;_&zwnj;&#8203;&gt;&gt;())</code>, but I think using <code>From</code> reads best.)"}], "tags": [], "owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "is_accepted": true, "score": 4, "last_activity_date": 1489676404, "last_edit_date": 1489676404, "creation_date": 1489663768, "answer_id": 42832849, "question_id": 42824439, "link": "https://stackoverflow.com/questions/42824439/how-to-convert-a-string-of-strings-to-an-array-vector-of-strings-in-rust/42832849#42832849", "title": "How to convert a String of strings to an Array/Vector of Strings in Rust", "body": "<p><a href=\"http://play.integer32.com/?gist=3aeb7572427ae53682b7845795112c96&amp;version=stable\" rel=\"nofollow noreferrer\">Another solution</a>, based on iterators:</p>\n\n<pre><code>fn main() {\n    let raw_string = r\"rust\nheader1,header2,header3\nr1v1,r1v2,r1v3\nr2v1,r2v2,r2v3\";\n\n    let main_vec = raw_string.lines()\n                             .map(|s| s.trim().split(',').map(String::from).collect::&lt;Vec&lt;String&gt;&gt;())\n                             .collect::&lt;Vec&lt;Vec&lt;String&gt;&gt;&gt;();\n\n    print!(\"{:?}\", main_vec);\n}\n</code></pre>\n\n<p>As @Simon Whitehead has already said, the the only thing you need to do with <code>collect()</code> is to specify the type because this is a generic method. But it may also be deduced by the compiler itself in some circumstances.</p>\n\n<p>The code above is pretty verbose about type specification: actually you may leave the <code>Vec</code>'s value type unspecified and let it be deduced by the compiler like this:</p>\n\n<pre><code>let main_vec = raw_string.lines()\n                         .map(|s| s.trim().split(',').map(String::from).collect::&lt;Vec&lt;_&gt;&gt;())\n                         .collect::&lt;Vec&lt;_&gt;&gt;();\n</code></pre>\n\n<p>For more information, see the <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.collect\" rel=\"nofollow noreferrer\">definition of <code>collect()</code> method</a>.</p>\n"}], "owner": {"reputation": 1366, "user_id": 4807889, "user_type": "registered", "accept_rate": 45, "profile_image": "https://graph.facebook.com/10153645629657370/picture?type=large", "display_name": "mjwrazor", "link": "https://stackoverflow.com/users/4807889/mjwrazor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3458, "favorite_count": 0, "accepted_answer_id": 42832849, "answer_count": 2, "score": 1, "last_activity_date": 1489676404, "creation_date": 1489632799, "last_edit_date": 1489675006, "question_id": 42824439, "link": "https://stackoverflow.com/questions/42824439/how-to-convert-a-string-of-strings-to-an-array-vector-of-strings-in-rust", "title": "How to convert a String of strings to an Array/Vector of Strings in Rust", "body": "<p>I have a string from a CSV file that contains multiple lines:</p>\n\n<h2>Edit. Rust was not in the actual string.</h2>\n\n<pre><code>header1,header2,header3\nr1v1,r1v2,r1v3\nr2v1,r2v2,r2v3\n</code></pre>\n\n<p>I am trying to push these into a <code>Vec&lt;Vec&lt;String&gt;&gt;</code>:</p>\n\n<pre><code>// the csv is raw_string\nlet lines = raw_string.lines();\nlet mut mainVec = Vec::new();\n\nfor row in lines {\n    let mut childVec = Vec::new();\n    let trimmed = row.trim();\n    let values = trimmed.split(',').collect();\n    childVec.push(values);\n    mainVec.push(childVec.clone());\n}\n</code></pre>\n\n<p>But I get the error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0282]: unable to infer enough type information about `_`\n --&gt; src/main.rs:9:13\n  |\n9 |         let values = trimmed.split(',').collect();\n  |             ^^^^^^ cannot infer type for `_`\n  |\n  = note: type annotations or generic parameter binding required\n</code></pre>\n"}]