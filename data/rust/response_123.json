[{"tags": ["rust", "llvm"], "comments": [{"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1495075917, "post_id": 44035940, "comment_id": 75102016, "body": "<code>__sync_val_compare_and_swap_4</code> is <i>not</i> provided by compiler-rt. Does linking to <code>libgcc_s</code> work? (ref <a href=\"http://stackoverflow.com/a/9329139/224671\">stackoverflow.com/a/9329139/224671</a>)"}, {"owner": {"reputation": 7497, "user_id": 1213227, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/78179ef730f268752c0f6fdde3943b99?s=128&d=identicon&r=PG", "display_name": "Matthias", "link": "https://stackoverflow.com/users/1213227/matthias"}, "reply_to_user": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1495086520, "post_id": 44035940, "comment_id": 75105016, "body": "@kennytm: Not yet, I&#39;m not sure whether I even have it for the target platform, but I&#39;ll give it a try. However, it is kind of strange that llvm should need libgcc_s."}, {"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1495087223, "post_id": 44035940, "comment_id": 75105324, "body": "The linked question uses GCC 4, I don&#39;t know what is the LLVM equivalent :)"}], "answers": [{"tags": [], "owner": {"reputation": 7497, "user_id": 1213227, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/78179ef730f268752c0f6fdde3943b99?s=128&d=identicon&r=PG", "display_name": "Matthias", "link": "https://stackoverflow.com/users/1213227/matthias"}, "is_accepted": true, "score": 2, "last_activity_date": 1495368970, "creation_date": 1495368970, "answer_id": 44096737, "question_id": 44035940, "link": "https://stackoverflow.com/questions/44035940/understanding-dependencies-of-rust-libraries/44096737#44096737", "title": "Understanding dependencies of Rust libraries", "body": "<p>In the meantime, I've found a solution. I share it in the hope it will be useful for somebody else. </p>\n\n<p>As kennytm correctly mentioned, the symbols do not belong to compiler_rt. In addition, the symbols are only by chance the same as in the functions of the libgcc, c.f. <a href=\"http://llvm.org/docs/Atomics.html#libcalls-atomic\" rel=\"nofollow noreferrer\">here</a>. The calls will be emitted by llvm in case the CPU does not support atomic commands such as <code>cmpxchg</code>. </p>\n\n<p>My processor is an ARMv6 and <em>does</em> support atomic commands. However, I failed to tell Rust/llvm about: the JSON file with the target description looked like that:</p>\n\n<pre><code>{  \"llvm-target\": \"arm-none-eabihf\",  \n   \"target-endian\": \"little\",\n   \"target-pointer-width\": \"32\", \n   \"os\": \"none\",\n   \"env\": \"eabihf\", \n   \"vendor\": \"unknown\",\n   \"arch\": \"arm\", \n   \"linker\": \"arm-none-eabi-gcc\",\n   \"linker-flavor\": \"gnu\",\n   \"data-layout\": \"e-m:e-p:32:32-i64:64-v128:64:128-a:0:32-n32-S64\",\n   \"executables\": true,\n   \"relocation-model\": \"static\",\n   \"no-compiler-rt\": true\n}\n</code></pre>\n\n<p>In this way, my CPU could also have been an ARMv5 what do not support atomic commands. By adding a field <code>\"cpu\": \"arm1176jzf-s\"</code> I could solve the linker error. </p>\n"}], "owner": {"reputation": 7497, "user_id": 1213227, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/78179ef730f268752c0f6fdde3943b99?s=128&d=identicon&r=PG", "display_name": "Matthias", "link": "https://stackoverflow.com/users/1213227/matthias"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 258, "favorite_count": 0, "accepted_answer_id": 44096737, "answer_count": 1, "score": 4, "last_activity_date": 1495368970, "creation_date": 1495061376, "question_id": 44035940, "link": "https://stackoverflow.com/questions/44035940/understanding-dependencies-of-rust-libraries", "title": "Understanding dependencies of Rust libraries", "body": "<p>I'm writing for education purposes an embedded Rust program for ARM.\nSince it is a bare metal system, I use the core library only. The library's manual page claims that corelib depends on nothing, but <code>memcpy</code>, <code>memcmp</code>, and <code>memset</code>, and the unwind functions (see <a href=\"https://doc.rust-lang.org/core/index.html\" rel=\"noreferrer\">https://doc.rust-lang.org/core/index.html</a>).\nHowever, especially if I use <a href=\"https://doc.rust-lang.org/core/sync/atomic/\" rel=\"noreferrer\">atomic types</a>, I continue to get linker errors because of missing symbols, such as <code>__sync_val_compare_and_swap_4</code> or <code>__sync_lock_test_and_set_4</code> that indicates a missing <a href=\"https://compiler-rt.llvm.org\" rel=\"noreferrer\">compiler-rt</a> library.   I understand, that compiler-rt should on top of corelib. That looks like a circular dependency, what shouldn't be. In addition, I understand that compiler-rt in turn depends on an OS.</p>\n\n<ol>\n<li>What part of my understanding is not correct?</li>\n<li>How can I get a real independent corelib, or what parts of it are really independent? I know that I could re-implement the missing functions, but they seem to be quite a lot. Also, I'm aware of the <a href=\"https://github.com/rust-lang-nursery/compiler-builtins\" rel=\"noreferrer\">compiler-builtins crate</a>, but it still leaves me with unresolved symbols. </li>\n</ol>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": false, "score": 3, "last_activity_date": 1495054588, "last_edit_date": 1495054588, "creation_date": 1495051695, "answer_id": 44033937, "question_id": 44033221, "link": "https://stackoverflow.com/questions/44033221/how-to-write-macro-for-similar-matching-arms/44033937#44033937", "title": "How to write macro for similar matching arms?", "body": "<p>You cannot do that exactly. A macro cannot expand to a <code>match</code> arm (<code>&lt;Variant&gt; =&gt; &lt;Expression&gt;</code>).</p>\n\n<p>The closest you could get is probably something like this:</p>\n\n<pre><code>enum Foo {\n    A(u32),\n    B(u32),\n    C(u32),\n    D(u32),\n}\n\nmacro_rules! gen1 {\n    ($Variant:ident) =&gt; {\n        Foo::$Variant(ref a)\n    }\n}\n\nmacro_rules! gen2 {\n    ($Variant:ident) =&gt; {\n        concat!(stringify!($Variant), \" foo\")\n    }\n}\n\nfn print(x: Foo) {\n    println!(\"{}\", match x {\n        Foo::A(ref a) =&gt; \"special\",\n        gen1!(B) =&gt; gen2!(B),\n        gen1!(C) =&gt; gen2!(C),\n        gen1!(D) =&gt; gen2!(D),\n    });\n}\n\nfn main() {\n    print(Foo::A(42));\n    print(Foo::B(42));\n    print(Foo::C(42));\n    print(Foo::D(42));\n}\n</code></pre>\n\n<p><a href=\"http://play.integer32.com/?gist=603c3ebc7fe896e30e2ba4e6958c1bfb&amp;version=undefined\" rel=\"nofollow noreferrer\">Playground link.</a></p>\n"}, {"comments": [{"owner": {"reputation": 17717, "user_id": 691867, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/86cad22e6f9100c801c56c099872bbc2?s=128&d=identicon&r=PG", "display_name": "colinfang", "link": "https://stackoverflow.com/users/691867/colinfang"}, "edited": false, "score": 0, "creation_date": 1495106673, "post_id": 44034632, "comment_id": 75118034, "body": "How do I use <code>type_name</code>? It only gives me the type of <code>Enum</code>, not the individual item?  <a href=\"http://play.integer32.com/?gist=b015089c2a81fe44724eea5c4ce006bc&amp;version=undefined\" rel=\"nofollow noreferrer\">play.integer32.com/&hellip;</a>"}, {"owner": {"reputation": 694, "user_id": 7033869, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-qhp8umXBLiA/AAAAAAAAAAI/AAAAAAAAAAA/faBbkZ-N7fw/photo.jpg?sz=128", "display_name": "Francois Mockers", "link": "https://stackoverflow.com/users/7033869/francois-mockers"}, "reply_to_user": {"reputation": 17717, "user_id": 691867, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/86cad22e6f9100c801c56c099872bbc2?s=128&d=identicon&r=PG", "display_name": "colinfang", "link": "https://stackoverflow.com/users/691867/colinfang"}, "edited": false, "score": 1, "creation_date": 1495234034, "post_id": 44034632, "comment_id": 75183803, "body": "Oh <code>type_name</code> doesn&#39;t work as I though for <code>Enum</code>... You can try <a href=\"https://github.com/mockersf/variant-name\" rel=\"nofollow noreferrer\">github.com/mockersf/variant-name</a>, it was fun to write"}], "tags": [], "owner": {"reputation": 694, "user_id": 7033869, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-qhp8umXBLiA/AAAAAAAAAAI/AAAAAAAAAAA/faBbkZ-N7fw/photo.jpg?sz=128", "display_name": "Francois Mockers", "link": "https://stackoverflow.com/users/7033869/francois-mockers"}, "is_accepted": true, "score": 3, "last_activity_date": 1495054561, "last_edit_date": 1495054561, "creation_date": 1495054513, "answer_id": 44034632, "question_id": 44033221, "link": "https://stackoverflow.com/questions/44033221/how-to-write-macro-for-similar-matching-arms/44034632#44034632", "title": "How to write macro for similar matching arms?", "body": "<p>If changing your output a little is acceptable, you could use a catch-all for all the same arms:</p>\n\n<pre><code>match x {\n    Foo::A(ref a) =&gt; println!(\"special\"),\n    _ =&gt; println!(\"{:?} Foo\", x),\n}\n</code></pre>\n\n<p><a href=\"http://play.integer32.com/?gist=4d3812bf30e5aeac4646c5587540125b&amp;version=undefined\" rel=\"nofollow noreferrer\">Playground link</a></p>\n\n<p>But this would print the type and its parameters. If you are on nightly, and not afraid of experimental, you can use <a href=\"https://doc.rust-lang.org/std/intrinsics/fn.type_name.html\" rel=\"nofollow noreferrer\"><code>std::intrinsics::type_name</code></a> to display only the type name.</p>\n\n<p>Or you can use a macro that does all your match arms:</p>\n\n<pre><code>macro_rules! gen_match {\n    ($x:ident, $Special:ident, [$( $Foo:ident ),*]) =&gt; {\n        match $x {\n            Foo::$Special(ref a) =&gt; println!(\"special\"),\n            $(Foo::$Foo(ref a) =&gt; println!(\"{} foo\", stringify!($Foo)),)*\n        }\n    }\n}\n</code></pre>\n\n<p>and calling it:</p>\n\n<pre><code>gen_match!(x, A, [B, C, D]);\n</code></pre>\n\n<p><a href=\"http://play.integer32.com/?gist=919c2ee9ad2c31cce2ca495cd90add3d&amp;version=undefined\" rel=\"nofollow noreferrer\">Playground link</a></p>\n\n<p>The brackets around the variants that will be generic formatted are for readability, they could be removed from macro definition</p>\n"}], "owner": {"reputation": 17717, "user_id": 691867, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/86cad22e6f9100c801c56c099872bbc2?s=128&d=identicon&r=PG", "display_name": "colinfang", "link": "https://stackoverflow.com/users/691867/colinfang"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1039, "favorite_count": 0, "accepted_answer_id": 44034632, "answer_count": 2, "score": 0, "last_activity_date": 1495642291, "creation_date": 1495049125, "last_edit_date": 1495642291, "question_id": 44033221, "link": "https://stackoverflow.com/questions/44033221/how-to-write-macro-for-similar-matching-arms", "title": "How to write macro for similar matching arms?", "body": "<p>I have some repetitive code</p>\n\n<pre><code>match *x {\n    A(ref a) =&gt; \"special\",\n    B(ref a) =&gt; \"B foo\",\n    C(ref a) =&gt; \"C foo\",\n    D(ref a) =&gt; \"D foo\",\n    // ...\n}\n</code></pre>\n\n<p>I would like a macro like</p>\n\n<pre><code>macro_rules! generic_fmt {\n    ($T:ident) =&gt; {\n        $T(ref a) =&gt; {\"$T foo\"},\n    }\n}\n</code></pre>\n\n<p>So that I can simplify my matching to</p>\n\n<pre><code>match *x {\n    A(ref a) =&gt; \"special\",\n    generic_fmt!(B),\n    generic_fmt!(C),\n    generic_fmt!(D),\n    // ...\n}\n</code></pre>\n\n<p>What's the best way to do that? I'm using rustc 1.19.0-nightly.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 13, "creation_date": 1495026775, "post_id": 44025929, "comment_id": 75078094, "body": "Assuming there&#39;s not a better solution - you&#39;d probably be better off replacing <code>panic!</code> with <a href=\"https://doc.rust-lang.org/std/macro.unreachable.html\" rel=\"nofollow noreferrer\"><code>unreachable!</code></a> to better communicate your intent."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 5, "creation_date": 1495026990, "post_id": 44025929, "comment_id": 75078256, "body": "The only &quot;bullet proof&quot; alternative is to use an enum { One, Two }, but it leads to more boilerplate and just forces the range check to be done slightly sooner. This sounds like the use of <code>_</code> is one of those &quot;have to make do&quot; circumstances."}, {"owner": {"reputation": 22928, "user_id": 978690, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/lNUl6.png?s=128&g=1", "display_name": "rap-2-h", "link": "https://stackoverflow.com/users/978690/rap-2-h"}, "edited": false, "score": 0, "creation_date": 1495027004, "post_id": 44025929, "comment_id": 75078273, "body": "Wow thanks! I did not know this macro!"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 8, "creation_date": 1495028241, "post_id": 44025929, "comment_id": 75079313, "body": "@rap-2-h: In this case, you may also be interested in <code>unimplemented!()</code>, which is very useful when prototyping! With it, you can leave a branch incomplete or even a whole function implementation, and the compiler won&#39;t complain about missing expressions or type mismatches."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1495047111, "creation_date": 1495047111, "answer_id": 44032727, "question_id": 44025929, "link": "https://stackoverflow.com/questions/44025929/can-i-avoid-in-pattern-matching-with-gen-range/44032727#44032727", "title": "Can I avoid `_` in pattern matching with gen_range?", "body": "<blockquote>\n  <p>I understand the compiler can't guess that <code>gen_range(1, 3)</code> can only return 1 or 2</p>\n</blockquote>\n\n<p>That is correct. <code>gen_range</code> returns an <code>i32</code> in this case, and an <code>i32</code> may have many more values.</p>\n\n<blockquote>\n  <p>is there a way to avoid adding this useless line <code>_ =&gt; panic!(\"never happens\")</code></p>\n</blockquote>\n\n<p>As was covered in the comments, <a href=\"https://doc.rust-lang.org/std/macro.unreachable.html\" rel=\"noreferrer\"><code>unreachable!</code></a> better expresses your intent than just a plain <code>panic!</code>:</p>\n\n<pre><code>match rand::thread_rng().gen_range(1, 3) {\n    1 =&gt; println!(\"1\"),\n    2 =&gt; println!(\"2\"),\n    _ =&gt; unreachable!(),\n};\n</code></pre>\n\n<blockquote>\n  <p>replace the last value (<code>2</code>) by <code>_</code>?</p>\n</blockquote>\n\n<p>This would be fine, but the \"failure\" case when you eventually change the arguments is likely harder to catch:</p>\n\n<pre><code>match rand::thread_rng().gen_range(1, 100) {\n    1 =&gt; println!(\"1\"),\n    _ =&gt; println!(\"2\"), // oops!\n};\n</code></pre>\n\n<p>A version that panics is more likely to blow up obviously during testing. Which you choose is up to you and your risk tolerance.</p>\n\n<blockquote>\n  <p>The only \"bullet proof\" alternative is to use an <code>enum { One, Two }</code>, but it leads to more boilerplate and just forces the range check to be done slightly sooner</p>\n</blockquote>\n\n<p>This works, and would be useful if you wanted to have the equivalent of the <code>match</code> multiple times in your code. This consolidates the logic to one location.</p>\n\n<p>I'm a little surprised there isn't a macros 1.1 crate that allows something like <code>#[derive(Rand)]</code> for an enum... but there are some crates that seem to make it easier.</p>\n\n<p>In <em>this specific case</em>, you could also generate a random boolean and just pick <code>1</code> or <code>2</code>:</p>\n\n<pre><code>if rand::thread_rng().gen() {\n    println!(\"1\")\n} else {\n    println!(\"2\")\n}\n</code></pre>\n"}], "owner": {"reputation": 22928, "user_id": 978690, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/lNUl6.png?s=128&g=1", "display_name": "rap-2-h", "link": "https://stackoverflow.com/users/978690/rap-2-h"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 127, "favorite_count": 0, "accepted_answer_id": 44032727, "answer_count": 1, "score": 4, "last_activity_date": 1495047111, "creation_date": 1495026705, "question_id": 44025929, "link": "https://stackoverflow.com/questions/44025929/can-i-avoid-in-pattern-matching-with-gen-range", "title": "Can I avoid `_` in pattern matching with gen_range?", "body": "<p>If I want to <code>match</code> the result of a <code>rand::thread_rng().get_range(1, 3)</code>, I need to add a <code>_</code> value even if <strong>I</strong> know there is only two possible values:</p>\n\n<pre><code>match rand::thread_rng().gen_range(1, 3) {\n    1 =&gt; println!(\"1\"),\n    2 =&gt; println!(\"2\"),\n    _ =&gt; panic!(\"never happens\")\n};\n</code></pre>\n\n<p>The <code>_</code> case is useless but required.</p>\n\n<p>I understand the compiler can't guess that <code>gen_range(1, 3)</code> can only return 1 or 2 but is there a way to avoid adding this useless line <code>_ =&gt; panic!(\"never happens\")</code> with pattern matching (maybe with some hint to the compiler)? Or do I need to replace the last value (<code>2</code>) by <code>_</code>?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1495024872, "creation_date": 1495024872, "answer_id": 44025173, "question_id": 44024912, "link": "https://stackoverflow.com/questions/44024912/is-there-a-way-to-set-a-background-color-on-an-imageimagebuffer/44025173#44025173", "title": "Is there a way to set a background color on an `image::ImageBuffer`?", "body": "<p>If you continue reading the documentation, you will find <a href=\"http://www.piston.rs/image/image/struct.ImageBuffer.html#method.from_pixel\" rel=\"nofollow noreferrer\"><code>ImageBuffer::from_pixel</code></a>:</p>\n\n<blockquote>\n<pre><code>fn from_pixel(width: u32,\n              height: u32,\n              pixel: P)\n              -&gt; ImageBuffer&lt;P, Vec&lt;P::Subpixel&gt;&gt;\n</code></pre>\n  \n  <p>Constructs a new <code>ImageBuffer</code> by copying a pixel</p>\n</blockquote>\n"}, {"tags": [], "owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "is_accepted": false, "score": 0, "last_activity_date": 1495026152, "creation_date": 1495026152, "answer_id": 44025693, "question_id": 44024912, "link": "https://stackoverflow.com/questions/44024912/is-there-a-way-to-set-a-background-color-on-an-imageimagebuffer/44025693#44025693", "title": "Is there a way to set a background color on an `image::ImageBuffer`?", "body": "<p>You can use the <code>from_pixel</code> and <code>from_fn</code> methods to form a buffer with a custom background.</p>\n\n<p>Here's an example from a project of mine where I drop a shadow on the background.</p>\n\n<pre><code>enum Grace {\n    /// How much \"grace\" time have passed, in percents.\n    Good (f32),\n    Picked,\n    Delayed,\n    Closed,\n    /// Closed by GM without player making a choice.\n    Miss}\n\nimpl Grace {\n    fn from_time (opened: i64, now: i64) -&gt; Grace {\n        let delta = now - (opened + 7200);  // First two hours are \"free\".\n        if delta &lt;= 0 {return Grace::Good (0.0)}\n        let percent = (delta * 100) as f32 / time::Duration::hours (24) .num_seconds() as f32;\n        if percent &lt;= 100.0 {Grace::Good (percent)} else {Grace::Delayed}}}\n\nlet mut ib = ImageBuffer::from_fn (600, 24, |x, y| Rgba (match grace {\n    Grace::Picked | Grace::Closed =&gt; [200, 200, 255, (255 * y / 24) as u8],\n    Grace::Good (pc) =&gt; [pc as u8, (70 + (130 * x / 600)) as u8, 0, (255 * y / 24) as u8],\n    Grace::Delayed =&gt; [(70 + (130 * x / 600)) as u8, (70 + (130 * x / 600)) as u8, 0, (255 * y / 24) as u8],\n    Grace::Miss =&gt; [(70 + (130 * x / 600)) as u8, 0, 0, (255 * y / 24) as u8]}));\n</code></pre>\n"}], "owner": {"reputation": 22928, "user_id": 978690, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/lNUl6.png?s=128&g=1", "display_name": "rap-2-h", "link": "https://stackoverflow.com/users/978690/rap-2-h"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 341, "favorite_count": 0, "accepted_answer_id": 44025173, "answer_count": 2, "score": 0, "last_activity_date": 1495026152, "creation_date": 1495024128, "last_edit_date": 1495024949, "question_id": 44024912, "link": "https://stackoverflow.com/questions/44024912/is-there-a-way-to-set-a-background-color-on-an-imageimagebuffer", "title": "Is there a way to set a background color on an `image::ImageBuffer`?", "body": "<p>Using the <a href=\"http://www.piston.rs/image/image/index.html\" rel=\"nofollow noreferrer\">image</a> crate, I can create an <code>ImageBuffer</code> then put a pixel and save it:</p>\n\n<pre><code>let mut img = ImageBuffer::new(100, 100);\nimg.put_pixel(50, 50);\n\nlet ref mut fout = File::create(&amp;Path::new(\"test.png\")).unwrap();\nlet _ = ImageRgb8(img).save(fout, PNG);\n</code></pre>\n\n<p>I want to set a background color (default is black). I could iterate on pixels and put a pixel of the same color on each, but I'm not sure it's the best way (it seems overkill). I think I missed something. </p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 1517, "user_id": 275984, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/620339c024f25dbc2597a9d33c6eef54?s=128&d=identicon&r=PG", "display_name": "b0fh", "link": "https://stackoverflow.com/users/275984/b0fh"}, "edited": false, "score": 0, "creation_date": 1495027602, "post_id": 44025222, "comment_id": 75078743, "body": "Oh well. I&#39;ll keep an eye on this RFC. Thanks !"}], "tags": [], "owner": {"reputation": 17388, "user_id": 921321, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/3f4c4737cb30134f58cc76f06ef5113a?s=128&d=identicon&r=PG", "display_name": "Lukazoid", "link": "https://stackoverflow.com/users/921321/lukazoid"}, "is_accepted": true, "score": 2, "last_activity_date": 1495026079, "last_edit_date": 1495026079, "creation_date": 1495025003, "answer_id": 44025222, "question_id": 44023955, "link": "https://stackoverflow.com/questions/44023955/what-is-the-proper-way-to-consume-pieces-of-a-slice-in-a-loop-when-the-piece-siz/44025222#44025222", "title": "What is the proper way to consume pieces of a slice in a loop when the piece size can change each iteration?", "body": "<p>You are correct in your reasoning that <code>let (chunk, message) = message.split_at(element.size);</code> creates a new binding <code>message</code> within that scope and does not update the outer <code>message</code> value.</p>\n\n<p>What you are looking for is a 'destructuring assignment' of the tuple. This would allow tuple elements to be assigned to existing variable bindings instead of creating new bindings, something like:</p>\n\n<pre><code>let chunk;\n(chunk, message) = message.split_at(element.size);\n</code></pre>\n\n<p>Unfortunately this is currently not possible in Rust. You can see <a href=\"https://github.com/rust-lang/rfcs/issues/372\" rel=\"nofollow noreferrer\">a pre-RFC which proposes to add destructuring assignment</a> to the Rust language.</p>\n\n<p>I believe what you currently have is a perfectly fine solution, perhaps rename <code>message2</code> to something like <code>rest_of_message</code> or <code>remaining_message</code>.</p>\n"}], "owner": {"reputation": 1517, "user_id": 275984, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/620339c024f25dbc2597a9d33c6eef54?s=128&d=identicon&r=PG", "display_name": "b0fh", "link": "https://stackoverflow.com/users/275984/b0fh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 254, "favorite_count": 0, "accepted_answer_id": 44025222, "answer_count": 1, "score": 1, "last_activity_date": 1495026079, "creation_date": 1495021552, "last_edit_date": 1495024318, "question_id": 44023955, "link": "https://stackoverflow.com/questions/44023955/what-is-the-proper-way-to-consume-pieces-of-a-slice-in-a-loop-when-the-piece-siz", "title": "What is the proper way to consume pieces of a slice in a loop when the piece size can change each iteration?", "body": "<p>I need to process a slice of bytes into fixed chunks, but the chunk pattern is only known at runtime:</p>\n\n<pre><code>pub fn process(mut message: &amp;[u8], pattern: &amp;[Pattern]) {\n    for element in pattern: {\n        match element {\n            (...) =&gt; {\n                let (chunk, message2) = message.split_at(element.size);\n                /* process chunk */\n                message = message2;\n            },\n            // ...\n        }\n    }\n}\n</code></pre>\n\n<p>It feels awkward to have to use this <code>message2</code>. But if I do</p>\n\n<pre><code>let (chunk, message) = message.split_at(element.size);\n</code></pre>\n\n<p>Then it does not work, I assume because this actually creates a new <code>messages</code> binding that goes out of scope between loop iterations.</p>\n\n<p>Is there a more elegant way to do this?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1495006688, "post_id": 44018378, "comment_id": 75064056, "body": "What do you consider a merger between <code>a1</code> and <code>a2</code>?"}, {"owner": {"reputation": 3492, "user_id": 118958, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/NwFFJ.jpg?s=128&g=1", "display_name": "ynimous", "link": "https://stackoverflow.com/users/118958/ynimous"}, "reply_to_user": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1495007182, "post_id": 44018378, "comment_id": 75064356, "body": "I consider a merge as: <code>merge(a1: A, a2: A) -&gt; A</code>. Edited my question to make this more clear."}], "answers": [{"tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": false, "score": 3, "last_activity_date": 1495008707, "creation_date": 1495008707, "answer_id": 44019110, "question_id": 44018378, "link": "https://stackoverflow.com/questions/44018378/merge-boxed-elements/44019110#44019110", "title": "Merge boxed elements", "body": "<p>You can access the contents of boxed arguments by dereferencing them and combine them in a new <code>Box</code>. For example:</p>\n\n<pre><code>fn merge(a1: Box&lt;usize&gt;, a2: Box&lt;usize&gt;) -&gt; Box&lt;usize&gt; {\n    Box::new(*a1 + *a2)\n}\n\nfn main() {\n    let a1 = Box::new(1);\n    let a2 = Box::new(2);\n\n    println!(\"{}\", merge(a1, a2));\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1495008951, "post_id": 44019136, "comment_id": 75065446, "body": "Good idea with the reuse of the non-box function."}], "tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": true, "score": 3, "last_activity_date": 1495008789, "creation_date": 1495008789, "answer_id": 44019136, "question_id": 44018378, "link": "https://stackoverflow.com/questions/44018378/merge-boxed-elements/44019136#44019136", "title": "Merge boxed elements", "body": "<p>You can re-use your <code>merge</code> function, by dereferencing the boxes inside the <code>boxed_merge</code> function. Note that this will not re-use the allocations but instead create a new one</p>\n\n<pre><code>fn boxed_merge(a1: Box&lt;A&gt;, a2: Box&lt;A&gt;) -&gt; Box&lt;A&gt; {\n    Box::new(merge(*a1, *a2))\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1495031792, "post_id": 44025556, "comment_id": 75082155, "body": "This only applies for merges of Copy structures. If you had two sets that are merged, the elements of the set might not be copyable (e.g. <code>Box&lt;T&gt;</code>)."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 1, "creation_date": 1495031927, "post_id": 44025556, "comment_id": 75082277, "body": "@oli_obk-ker that&#39;s true, but if that were the case I&#39;d change to <code>fn merge_ref(&amp;mut self, other: A)</code> which has the same benefits of avoiding extraneous allocation."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 4, "last_activity_date": 1495032218, "last_edit_date": 1495541429, "creation_date": 1495025841, "answer_id": 44025556, "question_id": 44018378, "link": "https://stackoverflow.com/questions/44018378/merge-boxed-elements/44025556#44025556", "title": "Merge boxed elements", "body": "<p>I would advocate that a by-value <code>merge</code> should <em>not</em> be your base implementation. Instead, a mutating method provides more flexibility. You can then build on that for by-value and by-boxed-value methods:</p>\n\n<pre><code>struct A(u8);\n\nimpl A {\n    fn merge_ref(&amp;mut self, other: &amp;A) {\n        self.0 += other.0\n    }\n}\n\nfn merge(mut a1: A, a2: A) -&gt; A { \n    a1.merge_ref(&amp;a2);\n    a1\n}\n\nfn boxed_merge(mut a1: Box&lt;A&gt;, a2: Box&lt;A&gt;) -&gt; Box&lt;A&gt; {\n    a1.merge_ref(&amp;a2);\n    a1\n}\n\nfn main() {\n    let a1 = A(1);\n    let a2 = A(2);\n\n    let a3 = merge(a1, a2);\n\n    let boxed_a3 = Box::new(a3);\n    let boxed_a4 = Box::new(A(4));\n\n    let boxed_a7 = boxed_merge(boxed_a3, boxed_a4);\n\n    println!(\"{}\", boxed_a7.0);\n}\n</code></pre>\n\n<p>Notably, this will be more efficient in the boxed case as you don't have to perform any additional allocations.</p>\n\n<p><a href=\"https://stackoverflow.com/questions/44018378/merge-boxed-elements/44025556?noredirect=1#comment75082155_44025556\">As oli_obk - ker points out</a>:</p>\n\n<blockquote>\n  <p>This only applies for merges of <code>Copy</code> structures. If you had two sets that are merged, the elements of the set might not be copyable</p>\n</blockquote>\n\n<p>That could be addressed by taking the thing to merge in by value in <code>merge_ref</code> and using the same trick to move out of the box in the <code>boxed_merge</code> method:</p>\n\n<pre><code>struct B(Vec&lt;u8&gt;);\n\nimpl B {\n    fn merge_ref(&amp;mut self, other: B) {\n        self.0.extend(other.0)\n    }\n}\n\nfn merge(mut b1: B, b2: B) -&gt; B { \n    b1.merge_ref(b2);\n    b1\n}\n\nfn boxed_merge(mut b1: Box&lt;B&gt;, b2: Box&lt;B&gt;) -&gt; Box&lt;B&gt; {\n    b1.merge_ref(*b2);\n    b1\n}\n\nfn main() {\n    let b1 = B(vec![1]);\n    let b2 = B(vec![2]);\n\n    let b3 = merge(b1, b2);\n\n    let boxed_b3 = Box::new(b3);\n    let boxed_b4 = Box::new(B(vec![4]));\n\n    let boxed_b7 = boxed_merge(boxed_b3, boxed_b4);\n\n    println!(\"{:?}\", boxed_b7.0);\n}\n</code></pre>\n\n<p>We still don't have any extra allocation here.</p>\n"}], "owner": {"reputation": 3492, "user_id": 118958, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/NwFFJ.jpg?s=128&g=1", "display_name": "ynimous", "link": "https://stackoverflow.com/users/118958/ynimous"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 63, "favorite_count": 0, "accepted_answer_id": 44019136, "answer_count": 3, "score": 0, "last_activity_date": 1495032218, "creation_date": 1495006429, "last_edit_date": 1495024398, "question_id": 44018378, "link": "https://stackoverflow.com/questions/44018378/merge-boxed-elements", "title": "Merge boxed elements", "body": "<p>Assuming that the following function exists:</p>\n\n<pre><code>fn merge(a1: A, a2: A) -&gt; A { /* implemented */ }\n</code></pre>\n\n<p>Is there a way to write the function for the same operation using boxed types? That is:</p>\n\n<pre><code>fn boxed_merge(a1: Box&lt;A&gt;, a2: Box&lt;A&gt;) -&gt; Box&lt;A&gt; { /* ??? */ }\n</code></pre>\n"}, {"tags": ["tcp", "rust", "blocking"], "comments": [{"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 2, "creation_date": 1495008864, "post_id": 44015638, "comment_id": 75065394, "body": "<code>TcpStream::connect(&quot;0.0.0.0:8000&quot;)</code> \u2190 I think you should use <code>&quot;127.0.0.1:8000&quot;</code> here?"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1495220984, "last_edit_date": 1592644375, "creation_date": 1495215787, "answer_id": 44076060, "question_id": 44015638, "link": "https://stackoverflow.com/questions/44015638/simple-rust-tcp-server-and-client-do-not-receive-messages-and-never-terminates/44076060#44076060", "title": "Simple Rust TCP server and client do not receive messages and never terminates", "body": "<p>First off, <strong>don't ignore warnings</strong>. You have 4 errors of the type <code>warning: unused result which must be used</code>. Every single one of those could be cases where your code is failing and you <em>wouldn't even know it</em>. Use <code>expect</code> liberally!</p>\n<p>Second, you have an open client read socket and you ask to &quot;read all the data until the end into a string&quot;. <strong>What determines the end?</strong> In this case, it's when the socket is closed; so when is that?</p>\n<p>Trick question!</p>\n<ul>\n<li>The client's read socket closes when the server's write socket closes.</li>\n<li>The server's write socket closes when the server's read socket closes.</li>\n<li>The server's read socket closes when the the client's write socket closes.</li>\n</ul>\n<p>So when does that happen? Because there's no code that does it specifically, it will close when the socket is dropped, so:</p>\n<ul>\n<li>The client's write socket closes when the the client ends.</li>\n</ul>\n<p>Thus the deadlock. The issue could be fixed by explicitly closing the write half of the socket:</p>\n<pre><code>stream.shutdown(std::net::Shutdown::Write).expect(&quot;could not shutdown&quot;);\n</code></pre>\n<p>Third, you are writing into a <code>BufWriter</code>. Review the documentation for it:</p>\n<blockquote>\n<p>A <code>BufWriter</code> keeps an in-memory buffer of data and writes it to an underlying writer in large, <strong>infrequent</strong> batches.</p>\n<p>The buffer will be written out when the <strong>writer is dropped</strong>.</p>\n</blockquote>\n<p>The <code>BufWriter</code> is dropped at the end of the scope, after you've tried to read the response. That's another deadlock.</p>\n<hr />\n<p>In the end, you need to establish a protocol for how to delimit messages sent back and forth. A simple but very limited solution is to have a <em>line-oriented</em> protocol: every message fits on one line ending with a newline character.</p>\n<p>If you choose that, you can use <code>read_to_line</code> instead. I've also used <code>BufWriter::flush</code> to force the data to be sent down the wire; you could have also encapsulated <code>writer</code> in a block so it is dropped earlier or explicitly call <code>drop(writer)</code>.</p>\n<pre><code>use std::net::{TcpListener, TcpStream};\nuse std::io::{BufReader, BufWriter, Write, BufRead};\nuse std::thread;\n\nfn main() {\n    thread::spawn(start_server);\n\n    let player_stream = TcpStream::connect(&quot;127.0.0.1:8000&quot;).expect(&quot;Couldn't connect&quot;);\n\n    let mut reader = BufReader::new(&amp;player_stream);\n    let mut response = String::new();\n    reader.read_line(&amp;mut response).expect(&quot;Could not read&quot;);\n    println!(&quot;Player received &gt;{}&lt;&quot;, response.trim());\n\n    let mut writer = BufWriter::new(&amp;player_stream);\n    writer.write_all(&quot;NAME\\n&quot;.as_bytes()).expect(&quot;Could not write&quot;);\n}\n\nfn start_server() {\n    let listener = TcpListener::bind(&quot;127.0.0.1:8000&quot;).unwrap();\n\n    fn handle_client(stream: TcpStream) {\n        println!(&quot;Client connected&quot;);\n\n        let mut writer = BufWriter::new(&amp;stream);\n        writer.write_all(&quot;Red\\n&quot;.as_bytes()).expect(&quot;could not write&quot;);\n        writer.flush().expect(&quot;could not flush&quot;);\n\n        let mut reader = BufReader::new(&amp;stream);\n        let mut response = String::new();\n        reader.read_line(&amp;mut response).expect(&quot;could not read&quot;);\n        println!(&quot;Server received {}&quot;, response);\n    }\n\n    for stream in listener.incoming() {\n        let stream = stream.expect(&quot;Unable to accept&quot;);\n        handle_client(stream);\n    }\n}\n</code></pre>\n<p>You'll note that the program doesn't always print out the server's response. That's because the main thread exiting exits the program.</p>\n<hr />\n<p>You mentioned that your real case uses XML, which can have newlines embedded in it, making a line-oriented protocol unsuitable. Another common protocol is to send a length before sending the data itself. There are many possible implementations for this. At a previous job, we sent XML in this fashion. We started with an ASCII-encoded newline-terminated string of the length before the data itself. In that case, having the readability of the length as a string was a benefit. You could also choose to send a number of bytes that can be interpreted according to some endianness as a 2's compliment number.</p>\n<hr />\n<p>See also:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/q/39049365/155423\">Rust echo server and client using futures blocks itself forever</a></li>\n</ul>\n"}], "owner": {"reputation": 13, "user_id": 8022994, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/75040079da23baa70c82f69492eece0a?s=128&d=identicon&r=PG&f=1", "display_name": "JAlbers", "link": "https://stackoverflow.com/users/8022994/jalbers"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2676, "favorite_count": 0, "accepted_answer_id": 44076060, "answer_count": 1, "score": 0, "last_activity_date": 1495220984, "creation_date": 1494995503, "last_edit_date": 1495220741, "question_id": 44015638, "link": "https://stackoverflow.com/questions/44015638/simple-rust-tcp-server-and-client-do-not-receive-messages-and-never-terminates", "title": "Simple Rust TCP server and client do not receive messages and never terminates", "body": "<p>I am trying to spawn a server and connect to it on a different thread. I know Rust has blocking I/O, but I feel like I should be able to connect a server in a different thread. I do not have a lot of knowledge in threads. The end game is to connect to this server across a network. That is what I am simulating with the <code>player_stream</code> <code>TCPStream</code>. The <code>player_stream</code> will wait until there is something in its buffer. Once something has been written there, it will respond back to the server. As is, the program will not terminate.</p>\n\n<pre><code>use std::net::{TcpListener, TcpStream};\nuse std::io::{BufReader,BufWriter};\nuse std::io::Write;\nuse std::io::Read;\nuse std::thread;\n\nfn main() {\n    thread::spawn(move || {\n        start_server();\n    });\n    let player_stream = TcpStream::connect(\"127.0.0.1:8000\").expect(\"Couldn't connect\");\n    let mut reader = BufReader::new(&amp;player_stream);\n    let mut response = String::new();\n    reader.read_to_string(&amp;mut response);\n    println!(\"Player received {}\", response);\n    let mut writer = BufWriter::new(&amp;player_stream);\n    writer.write_all(\"NAME\".as_bytes());\n}\n\nfn start_server() {\n    let listener = TcpListener::bind(\"127.0.0.1:8000\").unwrap();\n\n    fn handle_client(stream: TcpStream) {\n        println!(\"Client connected\");\n        let mut writer = BufWriter::new(&amp;stream);\n        writer.write_all(\"Red\".as_bytes());\n        let mut reader = BufReader::new(&amp;stream);\n        let mut response = String::new();\n        reader.read_to_string(&amp;mut response);\n        println!(\"Server received {}\", response);\n\n    }\n\n// accept connections\n    for stream in listener.incoming() {\n        match stream {\n            Ok(stream) =&gt; {\n                handle_client(stream);\n            }\n            Err(e) =&gt; { panic!(\"{}\",e) }\n        }\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "serde", "serde-json"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 2, "creation_date": 1494997816, "post_id": 44014399, "comment_id": 75059443, "body": "But your problem probably boils down to: <a href=\"http://stackoverflow.com/questions/32682876/is-there-any-way-to-return-a-reference-to-a-variable-created-in-a-function/32683309#32683309\">Is there any way to return a reference to a variable created in a function?</a> To which the answer is basically: no. Your <code>ResponseJson</code> should own the <code>serde_json::Value</code> instead of borrowing it. If you want to sometimes borrow, sometimes own it, you might be interested in <a href=\"https://doc.rust-lang.org/stable/std/borrow/enum.Cow.html\" rel=\"nofollow noreferrer\"><code>Cow</code></a>."}, {"owner": {"reputation": 651, "user_id": 5223795, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/ef3abe0f20c34e1325db295fab0c1be9?s=128&d=identicon&r=PG&f=1", "display_name": "Boris", "link": "https://stackoverflow.com/users/5223795/boris"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1494998817, "post_id": 44014399, "comment_id": 75059802, "body": "@LukasKalbertodt there you go. Sorry for missing the first lines.   You&#39;re correct it boils down to returning a reference to a variable created in a function in order to implement a Trait (FormData in that case). What is weird is that I do manage to get it done in the <code>from_serde_value(&amp;Value)</code> function since I&#39;m basically returning a newly created ResponseJSON. I figured it wouldn&#39;t be too different in the case of <code>from_data()</code> function"}, {"owner": {"reputation": 651, "user_id": 5223795, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/ef3abe0f20c34e1325db295fab0c1be9?s=128&d=identicon&r=PG&f=1", "display_name": "Boris", "link": "https://stackoverflow.com/users/5223795/boris"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1495000018, "post_id": 44014399, "comment_id": 75060311, "body": "As per @LukasKalbertodt suggestion it does compile if ResponseJSON owns the <code>serde_json::Value</code> removing all references (in struct definition and function signatures). Adding that as an answer for the sake of discussion / archive"}], "answers": [{"tags": [], "owner": {"reputation": 651, "user_id": 5223795, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/ef3abe0f20c34e1325db295fab0c1be9?s=128&d=identicon&r=PG&f=1", "display_name": "Boris", "link": "https://stackoverflow.com/users/5223795/boris"}, "is_accepted": false, "score": 1, "last_activity_date": 1495000768, "creation_date": 1495000768, "answer_id": 44016719, "question_id": 44014399, "link": "https://stackoverflow.com/questions/44014399/function-local-variable-doesnt-live-long-enough/44016719#44016719", "title": "Function local variable doesn&#39;t live long enough", "body": "<p>As per @LukasKalbertodt 's comment above, it does work when ResponseJSON owns the <code>serde_json::Value</code></p>\n\n<p>Revised code (pasted as is, even though there are better ways to chain some parts of the code)</p>\n\n<pre><code>#![allow(dead_code)]\n\nextern crate serde_json;\nextern crate rocket;\nextern crate serde;\n\nuse serde::ser::Error;\nuse serde_json::Value;\n\nuse rocket::outcome::IntoOutcome;\n\nuse std::io::Read;\n\nstatic NULL: Value = serde_json::Value::Null;\n\npub struct ResponseJSON { // &lt;-- changed to remove the lifetime parameter\n    success: bool,\n    http_code: u16,\n    data: serde_json::Value, // &lt;- changed to remove the '&amp;'\n}\n\nimpl ResponseJSON {\n    pub fn ok() -&gt; ResponseJSON {\n        ResponseJSON {\n            success: true,\n            http_code: 200,\n            data: Value::Null,\n        } \n    }\n    pub fn http_code(mut self, code: u16) -&gt; ResponseJSON {\n        self.http_code = code;\n        self\n    }\n    pub fn data(mut self, data: serde_json::Value) -&gt; ResponseJSON { // &lt;- changed to remove the '&amp;'\n        self.data = data;\n        self\n    }\n\n    pub fn from_serde_value(json: serde_json::Value) -&gt; ResponseJSON { // &lt;- changed to remove the reference &amp; lifetime parameter\n        if !json[\"success\"].is_null() {\n            ResponseJSON::ok()\n                .http_code(json[\"http_code\"].as_u64().unwrap() as u16)\n                .data(json.get(\"data\").unwrap_or(&amp;NULL).clone())\n        } else {\n            ResponseJSON::ok()\n                .data(json.pointer(\"\").unwrap().clone())\n        }\n    }\n}\n\nimpl rocket::data::FromData for ResponseJSON {\n    type Error = serde_json::Error;\n\n    fn from_data(request: &amp;rocket::Request, data: rocket::Data) -&gt; rocket::data::Outcome&lt;Self, serde_json::Error&gt; {\n        if !request.content_type().map_or(false, |ct| ct.is_json()) {\n            println!(\"Content-Type is not JSON.\");\n            return rocket::Outcome::Forward(data);\n        }\n\n        let data_from_reader = data.open().take(1&lt;&lt;20);\n        let value = serde_json::from_reader(data_from_reader);\n        let unwraped_value : Value = if value.is_ok() { value.unwrap() } else { Value::Null };\n\n        if !unwraped_value.is_null() {\n            Ok(ResponseJSON::from_serde_value(unwraped_value)).into_outcome() // &lt;- changed to remove the '&amp;' in front of `unwraped_value`\n        } else {\n            Err(serde_json::Error::custom(\"Unable to create JSON from reader\")).into_outcome()\n        }\n    }\n}\n\nfn main() {\n    println!(\"it compiles &amp; runs\");\n}\n</code></pre>\n\n<p><code>cargo run</code> output</p>\n\n<pre><code>   Compiling tests v0.1.0 (file:///Users/bgbahoue/Projects.nosync/tests)\n    Finished dev [unoptimized + debuginfo] target(s) in 1.28 secs\n     Running `target/debug/tests`\nit compiles &amp; runs\n</code></pre>\n\n<hr>\n\n<p>My take is that in that case the ownership (lifetime ?) of the input parameter's <code>data</code> is passed to <code>data_from_reader</code> to <code>value</code> to <code>unwraped_value</code> to the temp ResponseJSON to the returned <code>rocket::data::Outcome</code>; so it seems ok.</p>\n\n<p>With references, the temp ResponseJSON didn't outlive the function end, since it outlived the <code>serde_json::Value</code> from which it was created i.e. <code>unwraped_value</code> lifetime i.e. the function's end; hence the compiler issue.</p>\n\n<p>Not 100% sure of my explaination though, would love your thoughts about that</p>\n"}], "owner": {"reputation": 651, "user_id": 5223795, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/ef3abe0f20c34e1325db295fab0c1be9?s=128&d=identicon&r=PG&f=1", "display_name": "Boris", "link": "https://stackoverflow.com/users/5223795/boris"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 196, "favorite_count": 0, "closed_date": 1495024195, "answer_count": 1, "score": 3, "last_activity_date": 1495000768, "creation_date": 1494987283, "last_edit_date": 1494998392, "question_id": 44014399, "link": "https://stackoverflow.com/questions/44014399/function-local-variable-doesnt-live-long-enough", "closed_reason": "Duplicate", "title": "Function local variable doesn&#39;t live long enough", "body": "<p>I'm trying to write a wrapper around serde_json &amp; Rocket's <code>FromData</code> to strongly type some of the JSON I exchange with a server.</p>\n\n<p>I can't compile the following code:</p>\n\n<pre><code>extern crate serde_json;\nextern crate rocket;\nextern crate serde;\n\nuse serde::ser::Error;\nuse serde_json::Value;\n\nuse rocket::data::DataStream;\nuse rocket::outcome::IntoOutcome;\n\nuse std::io::Read;\n\nstatic NULL: Value = serde_json::Value::Null;\n\npub struct ResponseJSON&lt;'v&gt; {\n    success: bool,\n    http_code: u16,\n    data: &amp;'v serde_json::Value,\n}\n\nimpl&lt;'v&gt; ResponseJSON&lt;'v&gt; {\n    pub fn ok() -&gt; ResponseJSON&lt;'v&gt; {\n        ResponseJSON {\n            success: true,\n            http_code: 200,\n            data: &amp;NULL,\n        } \n    }\n    pub fn http_code(mut self, code: u16) -&gt; ResponseJSON&lt;'v&gt; {\n        self.http_code = code;\n        self\n    }\n    pub fn data(mut self, ref_data: &amp;'v serde_json::Value) -&gt; ResponseJSON&lt;'v&gt; {\n        self.data = ref_data;\n        self\n    }\n\n    pub fn from_serde_value(json: &amp;'v serde_json::Value) -&gt; ResponseJSON&lt;'v&gt; {\n        if !json[\"success\"].is_null() {\n            ResponseJSON::ok()\n                .http_code(json[\"http_code\"].as_u64().unwrap() as u16)\n                .data(json.get(\"data\").unwrap_or(&amp;NULL))\n        } else {\n            ResponseJSON::ok()\n                .data(json.pointer(\"\").unwrap())\n        }\n    }\n}\n\nimpl&lt;'v&gt; rocket::data::FromData for ResponseJSON&lt;'v&gt; {\n    type Error = serde_json::Error;\n\n    fn from_data(request: &amp;rocket::Request, data: rocket::Data) -&gt; rocket::data::Outcome&lt;Self, serde_json::Error&gt; {\n        if !request.content_type().map_or(false, |ct| ct.is_json()) {\n            println!(\"Content-Type is not JSON.\");\n            return rocket::Outcome::Forward(data);\n        }\n\n        let data_from_reader = data.open().take(1&lt;&lt;20);\n        let value = serde_json::from_reader(data_from_reader);\n        let unwraped_value : Value = if value.is_ok() { value.unwrap() } else { Value::Null };\n\n        if !unwraped_value.is_null() {\n            Ok(ResponseJSON::from_serde_value(&amp;unwraped_value)).into_outcome()\n        } else {\n            Err(serde_json::Error::custom(\"Unable to create JSON from reader\")).into_outcome()\n        }\n    }\n}\n\nfn main() {\n    println!(\"it runs!\");\n}\n</code></pre>\n\n<p>The compiler's error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>   Compiling tests v0.1.0 (file:///Users/bgbahoue/Projects.nosync/tests)\nerror: `unwraped_value` does not live long enough\n  --&gt; src/main.rs:64:48\n   |\n64 |             Ok(ResponseJSON::from_serde_value(&amp;unwraped_value)).into_outcome()\n   |                                                ^^^^^^^^^^^^^^ does not live long enough\n...\n68 |     }\n   |     - borrowed value only lives until here\n   |\nnote: borrowed value must be valid for the lifetime 'v as defined on the body at 53:114...\n  --&gt; src/main.rs:53:115\n   |\n53 |       fn from_data(request: &amp;rocket::Request, data: rocket::Data) -&gt; rocket::data::Outcome&lt;Self, serde_json::Error&gt; {\n   |  ___________________________________________________________________________________________________________________^\n54 | |         if !request.content_type().map_or(false, |ct| ct.is_json()) {\n55 | |             println!(\"Content-Type is not JSON.\");\n56 | |             return rocket::Outcome::Forward(data);\n...  |\n67 | |         }\n68 | |     }\n   | |_____^\n\nerror: aborting due to previous error\n</code></pre>\n\n<p>Since <code>data_from_reader</code>, <code>value</code> and <code>unwraped_value</code> come from <code>data</code> I thought the compiler could infer that it had the same lifetime but apparently it's not the case. Is there any way I could state that or do something that would work in such a case ?</p>\n\n<p><a href=\"https://docs.serde.rs/serde_json/fn.from_reader.html\" rel=\"nofollow noreferrer\"><code>serde_json::from_reader</code></a>:</p>\n\n<pre><code>pub fn from_reader&lt;R, T&gt;(rdr: R) -&gt; Result&lt;T&gt; \nwhere\n    R: Read,\n    T: DeserializeOwned, \n</code></pre>\n\n<p><a href=\"https://api.rocket.rs/rocket/struct.Data.html\" rel=\"nofollow noreferrer\"><code>rocket::data::Data::open</code></a>:</p>\n\n<pre><code>fn open(self) -&gt; DataStream\n</code></pre>\n\n<p><a href=\"https://api.rocket.rs/rocket/data/struct.DataStream.html\" rel=\"nofollow noreferrer\"><code>rocket::data::DataStream::take</code></a>:</p>\n\n<pre><code>fn take(self, limit: u64) -&gt; Take&lt;Self&gt;\n</code></pre>\n"}, {"tags": ["ubuntu", "rust", "dynamic-linking"], "answers": [{"comments": [{"owner": {"reputation": 912, "user_id": 407256, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/689107856b5a794181624031eb6df776?s=128&d=identicon&r=PG", "display_name": "flukus", "link": "https://stackoverflow.com/users/407256/flukus"}, "edited": false, "score": 0, "creation_date": 1494989604, "post_id": 44014552, "comment_id": 75057237, "body": "Ah, that&#39;s probably it, a left over artifact of a previous rust/cargo install."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 912, "user_id": 407256, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/689107856b5a794181624031eb6df776?s=128&d=identicon&r=PG", "display_name": "flukus", "link": "https://stackoverflow.com/users/407256/flukus"}, "edited": false, "score": 0, "creation_date": 1494991133, "post_id": 44014552, "comment_id": 75057594, "body": "@flukus what do you mean? Installing these libraries into the home directory is the deliberate location, and the home directory is rarely (never?) part of the system executable loader&#39;s search path. What is &quot;left over&quot;?"}, {"owner": {"reputation": 912, "user_id": 407256, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/689107856b5a794181624031eb6df776?s=128&d=identicon&r=PG", "display_name": "flukus", "link": "https://stackoverflow.com/users/407256/flukus"}, "edited": false, "score": 0, "creation_date": 1494994298, "post_id": 44014552, "comment_id": 75058324, "body": "I mean the folder itself and the path modifications are from a previous install with rustup. I&#39;m trying to compile and run with the ubuntu packages."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1523894244, "last_edit_date": 1523894244, "creation_date": 1494988457, "answer_id": 44014552, "question_id": 44012802, "link": "https://stackoverflow.com/questions/44012802/unable-to-execute-a-hello-world-project-when-using-prefer-dynamic/44014552#44014552", "title": "Unable to execute a hello world project when using prefer-dynamic", "body": "<p>You should review your terminology; words mean specific things when programming. You are able to <em>compile</em> your code just fine, as shown by the fact that invoking the Rust compiler (a.k.a. <code>rustc</code>) doesn't have any errors.</p>\n\n<p>Your problem occurs when <em>executing</em> the program. These are very different concepts and it will serve you well to understand the difference.</p>\n\n<p>The \"problem\" is that you... are using dynamic linking, just like you've asked for. This is <strong>not</strong> a Rust issue, just a general programming issue. I'm sure there are numerous SO questions, such as <a href=\"https://stackoverflow.com/questions/480764/linux-error-while-loading-shared-libraries-cannot-open-shared-object-file-no-s\">Linux error while loading shared libraries: cannot open shared object file: No such file or directory</a> or one of the <a href=\"https://stackoverflow.com/search?q=%22error+while+loading+shared+libraries%22+is%3Aq\">500 other questions with that error message</a> that can provide you with more information.</p>\n\n<p>You are dynamically linking against the Rust standard library, but your system doesn't know about that library because it's not installed in a location your system knows about. Most likely, you've installed via rustup, so the library is in your home directory. For example, mine is in <code>/home/ubuntu/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/libstd-f4594d3e53dcb114.so</code>.</p>\n\n<p>You will find <em>many</em> possible solutions. The easiest to demonstrate is using the <code>LD_LIBRARY_PATH</code> variable:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ ./example\n./example: error while loading shared libraries: libstd-f4594d3e53dcb114.so: cannot open shared object file: No such file or directory\n$ LD_LIBRARY_PATH=/home/ubuntu/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/ ./example\nHello, world!\n</code></pre>\n\n<p>You can also check out <a href=\"https://stackoverflow.com/q/40602708/155423\">Linking Rust application with a dynamic library not in the runtime linker search path</a></p>\n\n<hr>\n\n<p>To help discover this, you can make Rust <a href=\"https://github.com/rust-lang/rust/issues/36175#issuecomment-243923976\" rel=\"nofollow noreferrer\">print out the linker invocation it uses</a>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ rustc +nightly -Cprefer-dynamic -Z print-link-args hello.rs\n\"cc\" \"-m64\" \"-L\" \"/Users/shep/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib\" \"hello.hello0.rcgu.o\" \"hello.hello1.rcgu.o\" \"hello.hello2.rcgu.o\" \"hello.hello3.rcgu.o\" \"hello.hello4.rcgu.o\" \"hello.hello5.rcgu.o\" \"-o\" \"hello\" \"hello.crate.allocator.rcgu.o\" \"-Wl,-dead_strip\" \"-nodefaultlibs\" \"-L\" \"/Users/shep/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib\" \"-L\" \"/Users/shep/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib\" \"-l\" \"std-834fbefe8dbe98b5\" \"/Users/shep/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libcompiler_builtins-b4312e2f1496a4e4.rlib\" \"-l\" \"System\" \"-l\" \"resolv\" \"-l\" \"pthread\" \"-l\" \"c\" \"-l\" \"m\"\n</code></pre>\n\n<p>You can see that <code>\"-L\" \"/Users/shep/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib\"</code> was added to the linker path and then <code>\"-l\" \"std-834fbefe8dbe98b5\"</code> links the standard library.</p>\n"}], "owner": {"reputation": 912, "user_id": 407256, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/689107856b5a794181624031eb6df776?s=128&d=identicon&r=PG", "display_name": "flukus", "link": "https://stackoverflow.com/users/407256/flukus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 650, "favorite_count": 1, "accepted_answer_id": 44014552, "answer_count": 1, "score": 3, "last_activity_date": 1523894244, "creation_date": 1494974778, "last_edit_date": 1523893460, "question_id": 44012802, "link": "https://stackoverflow.com/questions/44012802/unable-to-execute-a-hello-world-project-when-using-prefer-dynamic", "title": "Unable to execute a hello world project when using prefer-dynamic", "body": "<p>I'm playing with Rust's compilation options on an extremely simple project, hello world:</p>\n\n<pre><code>fn main() {\n    println!(\"Hello, world!\");\n}\n</code></pre>\n\n<p>I'm compiling with this line, prefer-dynamic is the only notable option:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rustc main.rs -o ./build/rci -C prefer-dynamic\n</code></pre>\n\n<p>It was working fine until I made some changes and then it didn't. Now if I try to compile the code exactly as above I get this output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>./build/rci: error while loading shared libraries: libstd-2ddb28df747fcb8c.so: cannot open shared object file: No such file or directory\n</code></pre>\n\n<p>The output of ldd is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>linux-vdso.so.1 =&gt;  (0x00007ffd321a4000)\nlibstd-2ddb28df747fcb8c.so =&gt; not found\nlibc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007f52eaef3000)\n/lib64/ld-linux-x86-64.so.2 (0x000055f0f6251000)\n</code></pre>\n\n<p>This is on Ubuntu 17.04 with Rust 1.15.1.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 0, "creation_date": 1495182088, "post_id": 44014853, "comment_id": 75154107, "body": "&quot;I honestly don&#39;t know how you found Rc::make_mut;&quot; - some people actually read the <a href=\"https://doc.rust-lang.org/std/rc/struct.Rc.html\" rel=\"nofollow noreferrer\">struct docs</a>. They give a nice overview over available methods if you click the <code>[\u2212]</code> on the top right. That or IDE autocomplete."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 0, "creation_date": 1495195898, "post_id": 44014853, "comment_id": 75163392, "body": "@the8472 You mean the struct docs that I linked in my first sentence and said &quot;you really need to read what this method does before using it&quot;? ^_^ My concern is mainly that there&#39;s some misguided resource out there that says &quot;this is how you do it&quot; using <code>make_mut</code> that people might follow without understanding."}, {"owner": {"reputation": 8813, "user_id": 389119, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/05241abffd72dcdcd1dc9d6833706ba9?s=128&d=identicon&r=PG", "display_name": "antoyo", "link": "https://stackoverflow.com/users/389119/antoyo"}, "edited": false, "score": 3, "creation_date": 1510827431, "post_id": 44014853, "comment_id": 81604652, "body": "I&#39;ve just learned about <code>make_mut()</code> in <a href=\"https://blog.rust-lang.org/2017/11/14/Fearless-Concurrency-In-Firefox-Quantum.html\" rel=\"nofollow noreferrer\">this article</a> and I guess they show a great use case: in cascading style sheets, you may have a child and a parent with the same style, but if the child style is different, you use <code>make_mut()</code> to create a clone of it and you can then update the child style independently of the parent."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 8813, "user_id": 389119, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/05241abffd72dcdcd1dc9d6833706ba9?s=128&d=identicon&r=PG", "display_name": "antoyo", "link": "https://stackoverflow.com/users/389119/antoyo"}, "edited": false, "score": 0, "creation_date": 1510835346, "post_id": 44014853, "comment_id": 81609994, "body": "@antoyo haha yeah, I read that and thought about this question too \ud83d\ude05. I agree that the use case we see there makes sense and might even be why the method exists in the first place. I worry now that people will see the article and be even more tempted to use it without fully understanding what the function does. I suppose we will see!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1495008463, "last_edit_date": 1495008463, "creation_date": 1494990484, "answer_id": 44014853, "question_id": 44012575, "link": "https://stackoverflow.com/questions/44012575/explain-the-behavior-of-rcmake-mut-and-why-it-differs-compared-to-mutex/44014853#44014853", "title": "Explain the behavior of *Rc::make_mut and why it differs compared to Mutex", "body": "<p>You need to read and understand the documentation for functions you use before you use them. <a href=\"https://doc.rust-lang.org/std/rc/struct.Rc.html#method.make_mut\" rel=\"noreferrer\"><code>Rc::make_mut</code> says</a>, emphasis mine:</p>\n\n<blockquote>\n  <p>Makes a mutable reference into the given <code>Rc</code>.</p>\n  \n  <p><strong>If there are other <code>Rc</code> or <code>Weak</code> pointers to the same value, then\n  <code>make_mut</code> will invoke <code>clone</code> on the inner value to ensure unique\n  ownership. This is also referred to as clone-on-write.</strong></p>\n  \n  <p>See also <code>get_mut</code>, which will fail rather than cloning.</p>\n</blockquote>\n\n<p>You have multiple <code>Rc</code> pointers <em>because you called <code>rc_pref.clone()</code></em>. Thus, when you call <code>make_mut</code>, the inner value will be cloned and the <code>Rc</code> pointers will now be disassociated from each other:</p>\n\n<pre><code>use std::rc::Rc;\n\nfn main() {\n    let counter = Rc::new(100);\n    let mut counter_clone = counter.clone();\n    println!(\"{}\", Rc::strong_count(&amp;counter));       // 2\n    println!(\"{}\", Rc::strong_count(&amp;counter_clone)); // 2\n\n    *Rc::make_mut(&amp;mut counter_clone) += 50;\n    println!(\"{}\", Rc::strong_count(&amp;counter));       // 1\n    println!(\"{}\", Rc::strong_count(&amp;counter_clone)); // 1\n\n    println!(\"{}\", counter);       // 100\n    println!(\"{}\", counter_clone); // 150\n}\n</code></pre>\n\n<p>The version with the <code>Mutex</code> works because it's completely different. You aren't calling a function which clones the inner value anymore. Of course, it doesn't make sense to use a <code>Mutex</code> when you don't have threads. The single-threaded equivalent of a <code>Mutex</code> is... <code>RefCell</code>!</p>\n\n<hr>\n\n<p>I honestly don't know how you found <code>Rc::make_mut</code>; I've never even <em>heard</em> of it before. The <a href=\"https://doc.rust-lang.org/std/cell/index.html\" rel=\"noreferrer\">module documentation for <code>cell</code></a> doesn't mention it, nor does the <a href=\"https://doc.rust-lang.org/std/rc/index.html\" rel=\"noreferrer\">module documentation for <code>rc</code></a>. </p>\n\n<p>I'd highly encourage you to take a step back and re-read through the documentation. The <a href=\"https://doc.rust-lang.org/beta/book/second-edition\" rel=\"noreferrer\">second edition of The Rust Programming Language</a> has a <a href=\"https://doc.rust-lang.org/beta/book/second-edition/ch15-00-smart-pointers.html\" rel=\"noreferrer\">chapter on smart pointers</a>, including <code>Rc</code> and <code>RefCell</code>. Read the module-level documentation for <a href=\"https://doc.rust-lang.org/std/rc/index.html\" rel=\"noreferrer\"><code>rc</code></a> and <a href=\"https://doc.rust-lang.org/std/cell/index.html\" rel=\"noreferrer\"><code>cell</code></a> as well.</p>\n\n<p>Here's what your code should look like. Note the usage of <a href=\"https://doc.rust-lang.org/std/cell/struct.RefCell.html#method.borrow_mut\" rel=\"noreferrer\"><code>borrow_mut</code></a>.</p>\n\n<pre><code>fn main() {\n    let prefe = Rc::new(Prefe::new());    \n    println!(\"prefe: {:?}\", prefe.name_test);             // 3\n\n    let prefe_clone = prefe.clone();\n    *prefe_clone.name_test.borrow_mut() += 1;\n    println!(\"prefe_clone: {:?}\", prefe_clone.name_test); // 4\n\n    *prefe_clone.name_test.borrow_mut() += 1;\n    println!(\"prefe_clone: {:?}\", prefe_clone.name_test); // 5\n    println!(\"prefe: {:?}\", prefe.name_test);             // 5\n}\n</code></pre>\n"}], "owner": {"reputation": 13014, "user_id": 4140572, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/2uRSa.png?s=128&g=1", "display_name": "Angel Angel", "link": "https://stackoverflow.com/users/4140572/angel-angel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 812, "favorite_count": 0, "accepted_answer_id": 44014853, "answer_count": 1, "score": 3, "last_activity_date": 1495008463, "creation_date": 1494973443, "last_edit_date": 1494990538, "question_id": 44012575, "link": "https://stackoverflow.com/questions/44012575/explain-the-behavior-of-rcmake-mut-and-why-it-differs-compared-to-mutex", "title": "Explain the behavior of *Rc::make_mut and why it differs compared to Mutex", "body": "<p>I needed to pass a resource between several functions which use a closure as an argument. And within these the data was handled, but it looked for that the changes that were realized to a variable will be reflected in the rest.</p>\n\n<p>The first thing I thought was to use <code>Rc</code>. I had previously used <code>Arc</code> to handle the data between different threads, but since these functions aren't  running in different threads I chose <code>Rc</code> instead.</p>\n\n<p>The most simplified code that I have, to show my doubts:</p>\n\n<p><em>The use of <code>RefCell</code> was because maybe I had to see that this syntax will not work as I expected:</em></p>\n\n<pre><code>*Rc::make_mut(&amp;mut rc_pref_temp)...\n</code></pre>\n\n<hr>\n\n<pre><code>use std::sync::Arc;\nuse std::rc::Rc;\nuse std::sync::Mutex;\nuse std::cell::RefCell;\nuse std::cell::Cell;\n\nfn main() {\n    test2();\n    println!(\"---\");\n    test();\n}\n\n#[derive(Debug, Clone)]\nstruct Prefe {\n    name_test: RefCell&lt;u64&gt;,\n}\n\nimpl Prefe {\n    fn new() -&gt; Prefe {\n        Prefe {\n            name_test: RefCell::new(3 as u64),\n        }\n    }\n}\n\nfn test2(){\n    let mut prefe: Prefe = Prefe::new();\n\n    let mut rc_pref = Rc::new(Mutex::new(prefe));\n\n    println!(\"rc_pref Mutex: {:?}\", rc_pref.lock().unwrap().name_test);\n\n    let mut rc_pref_temp = rc_pref.clone();\n\n    *rc_pref_temp.lock().unwrap().name_test.get_mut() += 1;\n\n    println!(\"rc_pref_clone Mutex: {:?}\", rc_pref_temp.lock().unwrap().name_test);\n\n    *rc_pref_temp.lock().unwrap().name_test.get_mut() += 1;\n\n    println!(\"rc_pref_clone Mutex: {:?}\", rc_pref_temp.lock().unwrap().name_test);\n\n    println!(\"rc_pref Mutex: {:?}\", rc_pref.lock().unwrap().name_test);\n}\n\nfn test(){\n    let mut prefe: Prefe = Prefe::new();\n\n    let mut rc_pref = Rc::new(prefe);\n\n    println!(\"rc_pref: {:?}\", rc_pref.name_test);\n\n    let mut rc_pref_temp = rc_pref.clone();\n\n    *((*Rc::make_mut(&amp;mut rc_pref_temp)).name_test).get_mut() += 1;\n\n    println!(\"rc_pref_clone: {:?}\", rc_pref_temp.name_test);\n\n    *((*Rc::make_mut(&amp;mut rc_pref_temp)).name_test).get_mut() += 1;\n\n    println!(\"rc_pref_clone: {:?}\", rc_pref_temp.name_test);\n\n    println!(\"rc_pref: {:?}\", rc_pref.name_test);\n}\n</code></pre>\n\n<p>The code is simplified, the scenario where it is used is totally different. I note this to avoid comments like \"you can lend a value to the function\", because what interests me is to know why the cases exposed work in this way.</p>\n\n<p>stdout:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rc_pref       Mutex  : RefCell { value: 3 }\nrc_pref_clone Mutex  : RefCell { value: 4 }\nrc_pref_clone Mutex  : RefCell { value: 5 }\nrc_pref       Mutex  : RefCell { value: 5 }\n---\nrc_pref              : RefCell { value: 3 }\nrc_pref_clone        : RefCell { value: 4 }\nrc_pref_clone        : RefCell { value: 5 }\nrc_pref              : RefCell { value: 3 }\n</code></pre>\n\n<h2>About <code>test()</code></h2>\n\n<p>I'm new to Rust so I don't know if this crazy syntax is the right way.</p>\n\n<pre><code>*((*Rc::make_mut(&amp;mut rc_pref_temp)).name_test).get_mut() += 1;\n</code></pre>\n\n<p>When running <code>test()</code> you can see that the previous syntax works, because it increases the value, but this increase does not affect the clones. I expected that with the use of <code>*Rc::make_mut(&amp; mut rc_pref_temp)...</code> that the clones of a shared reference would reflect the same values.</p>\n\n<ul>\n<li>If <code>Rc</code> has references to the same object, why do the changes to an object not apply to the rest of the clones? Why does this work this way? Am I doing something wrong?</li>\n</ul>\n\n<p>Note: I use <code>RefCell</code> because in some tests I thought that maybe I had something to do.</p>\n\n<h2>About <code>test2()</code></h2>\n\n<p>I've got it working as expected using <code>Mutex</code> with <code>Rc</code>, but I do not know if this is the correct way. I have some ideas of how <code>Mutex</code> and <code>Arc</code> works, but after using this syntax:</p>\n\n<pre><code>*Rc::make_mut(&amp;mut rc_pref_temp)...\n</code></pre>\n\n<p>With the use of <code>Mutex</code> in <code>test2()</code>, I wonder if <code>Mutex</code> is not only responsible for changing the data in but also the one in charge of reflecting the changes in all the cloned references.</p>\n\n<p>Do the shared references actually point to the same object? I want to think they do, but with the above code where the changes are not reflected without the use of <code>Mutex</code>, I have some doubts.</p>\n"}, {"tags": ["rust", "serde", "rust-rocket"], "answers": [{"comments": [{"owner": {"reputation": 93, "user_id": 4329758, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3b069caffaa9e1b0ee8c1975dff70e14?s=128&d=identicon&r=PG&f=1", "display_name": "Alexsandr Startsev", "link": "https://stackoverflow.com/users/4329758/alexsandr-startsev"}, "edited": false, "score": 0, "creation_date": 1494998660, "post_id": 44011993, "comment_id": 75059736, "body": "Thanks, it&#39;s realy hell."}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 3, "last_activity_date": 1494970612, "last_edit_date": 1495541443, "creation_date": 1494970612, "answer_id": 44011993, "question_id": 44009825, "link": "https://stackoverflow.com/questions/44009825/can-i-render-a-template-in-rocket-with-my-own-serialized-struct/44011993#44011993", "title": "Can I render a Template in Rocket with my own serialized struct?", "body": "<p>The current version of rocket, <code>v0.2.6</code>, uses <code>serde = \"^0.9\"</code> and not serde 1.0 yet. This means that if you're saying something like <code>serde = \"1\"</code> in your <code>Cargo.toml</code>, cargo will download and link two different versions of serde. This leads to the error message.</p>\n\n<p>Furthermore, due to a mistake by the <code>chrono</code> developers, <code>chrono</code> 3.1 uses serde 1.0, while <code>chrono</code> 3.0 uses serde 0.9. But updating a dependency to a new major version should lead to a major version bump in the crate itself (related: <a href=\"https://stackoverflow.com/a/41195476/2408867\"><em>What exactly is considered a breaking change to a library crate?</em></a>). This lead to many breakages. In order to cope with that, you need to say <code>chrono = \"=3.0\"</code> in your <code>Cargo.toml</code> if you want to use that crate.</p>\n\n<p>This, by the way, is exactly what diesel 0.12 is doing, which is using serde 0.9 as well. Diesel 0.13 is using serde 1.0, so it can depend on <code>chrono = \"^0.3.1\"</code>. So Rocket is probably the last crate which needs to do the transition to serde 1.0. But this shouldn't take too long anymore. Then, everything should be in order again. </p>\n\n<p>Ahhh, nothing beats the smell of dependency hell in the morning.</p>\n"}, {"tags": [], "owner": {"reputation": 5087, "user_id": 2942471, "user_type": "registered", "accept_rate": 57, "profile_image": "https://graph.facebook.com/100000008666513/picture?type=large", "display_name": "manonthemat", "link": "https://stackoverflow.com/users/2942471/manonthemat"}, "is_accepted": false, "score": 1, "last_activity_date": 1494991932, "creation_date": 1494991932, "answer_id": 44015062, "question_id": 44009825, "link": "https://stackoverflow.com/questions/44009825/can-i-render-a-template-in-rocket-with-my-own-serialized-struct/44015062#44015062", "title": "Can I render a Template in Rocket with my own serialized struct?", "body": "<p>Just like Lukas explained, there are some dependency issues. Rocket actually has <a href=\"https://github.com/SergioBenitez/Rocket/commit/30fac3297810b348a4f3e43d01a937783f0baad2\" rel=\"nofollow noreferrer\">upgraded to the newer Serde versions</a>, but didn't push the changes as a new version of Rocket to crates.io. Therefore I recommend to tell cargo to pull rocket and its related crates from GitHub.</p>\n\n<p>An example dependencies section of the Cargo.toml is provided below:</p>\n\n<pre><code>[dependencies]\nchrono = \"0.3.1\"\nrocket = { git = \"https://github.com/SergioBenitez/Rocket\" }\nrocket_codegen = { git = \"https://github.com/SergioBenitez/Rocket\" }\nrocket_contrib = { git = \"https://github.com/SergioBenitez/Rocket\" }\nserde = \"1.0.2\"\nserde_json = \"1.0.1\"\nserde_derive = \"1.0.2\"\n</code></pre>\n"}], "owner": {"reputation": 93, "user_id": 4329758, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3b069caffaa9e1b0ee8c1975dff70e14?s=128&d=identicon&r=PG&f=1", "display_name": "Alexsandr Startsev", "link": "https://stackoverflow.com/users/4329758/alexsandr-startsev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 227, "favorite_count": 0, "accepted_answer_id": 44011993, "answer_count": 2, "score": 2, "last_activity_date": 1506694201, "creation_date": 1494962252, "last_edit_date": 1506694201, "question_id": 44009825, "link": "https://stackoverflow.com/questions/44009825/can-i-render-a-template-in-rocket-with-my-own-serialized-struct", "title": "Can I render a Template in Rocket with my own serialized struct?", "body": "<p>I'm using <a href=\"https://rocket.rs/\" rel=\"nofollow noreferrer\">Rocket</a> and I'm trying to create a <code>Layout</code> struct. I've implemented <code>serde::Serialize</code>, because the documentation says the static method <code>Template::render</code>'s second argument accepts a struct that implements <code>Serialize</code>:</p>\n\n<pre><code>struct Layout {\n    data: String,\n    second: String,\n}\n\nimpl Layout {\n    fn new(data: String, second: String) -&gt; Layout {\n        Layout { data, second }\n    }\n\n    fn render(&amp;self) -&gt; Template {\n        Template::render(\"Layout\", &amp;self)\n    }\n}\n\nimpl Serialize for Layout {\n    fn serialize&lt;S&gt;(&amp;self, serialize: S) -&gt; Result&lt;S::Ok, S::Error&gt;\n        where S: Serializer\n    {\n        let mut state = serializer.serialize_struct(\"Layout\", 2);\n        state.serialize_field(\"data\", &amp;self.data)?;\n        state.serialize_field(\"second\", &amp;self.data)?;\n        state.end()\n    }\n}\n</code></pre>\n\n<p>I get the error </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>the trait `serde::ser::Serialize` is not implemented for `layout::Layout`\n</code></pre>\n\n<p>What did I do wrong?</p>\n"}, {"tags": ["rust", "traits", "lifetime"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 2, "creation_date": 1494944072, "post_id": 44003622, "comment_id": 75036233, "body": "Adding explicit type annotations help. For example, saying <code>&amp;|x: &amp;i32| { ... }</code> already solves the problem. Rust seems to have problems inferring types in these situations :/ at least that&#39;s what <i>I</i> think the problem is."}], "answers": [{"tags": [], "owner": {"reputation": 2322, "user_id": 1987178, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/YS4r1.png?s=128&g=1", "display_name": "rom1v", "link": "https://stackoverflow.com/users/1987178/rom1v"}, "is_accepted": false, "score": 2, "last_activity_date": 1504815361, "last_edit_date": 1504815361, "creation_date": 1494944435, "answer_id": 44004103, "question_id": 44003622, "link": "https://stackoverflow.com/questions/44003622/implementing-trait-for-fnsomething-in-rust/44004103#44004103", "title": "Implementing trait for Fn(&amp;something) in Rust", "body": "<p>As suggested in a <a href=\"https://stackoverflow.com/questions/44003622/implementing-trait-for-fnsomething-in-rust#comment75036233_44003622\">comment</a>, giving the explicit type in the closure parameters fixes the issue:</p>\n\n<pre><code>@@ -26,8 +26,8 @@ fn main() {\n     // from struct instance (WORKS)\n     run_the_runnable(&amp;MyRunnable, &amp;x);\n\n-    // from closure (DOES NOT WORK)\n-    run_the_runnable(&amp;|x| {\n+    // from closure with annotated type (WORKS)\n+    run_the_runnable(&amp;|x: &amp;i32| {\n         println!(\"Hello from run(&amp;i32) closure {}\", x);\n     }, &amp;x);\n }\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?code=trait%20Runnable%20%7B%0A%20%20%20%20fn%20run%28%26self%2C%20x%3A%20%26i32%29%3B%0A%7D%0A%0Aimpl%3CF%3E%20Runnable%20for%20F%20where%20F%3A%20Fn%28%26i32%29%20%7B%0A%20%20%20%20fn%20run%28%26self%2C%20x%3A%20%26i32%29%20%7B%0A%20%20%20%20%20%20%20%20self%28x%29%3B%0A%20%20%20%20%7D%0A%7D%0A%0Afn%20run_the_runnable%28runnable%3A%20%26Runnable%2C%20x%3A%20%26i32%29%20%7B%0A%20%20%20%20runnable.run%28x%29%3B%0A%7D%0A%0Afn%20main%28%29%20%7B%0A%20%20%20%20%2F%2F%20runnable%20without%20parameters%0A%20%20%20%20struct%20MyRunnable%3B%0A%20%20%20%20impl%20Runnable%20for%20MyRunnable%20%7B%0A%20%20%20%20%20%20%20%20fn%20run%28%26self%2C%20x%3A%20%26i32%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20println!%28%22Hello%20from%20MyRunnable%20%7B%7D%22%2C%20x%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20let%20x%20%3D%2042%3B%0A%0A%20%20%20%20%2F%2F%20from%20struct%20instance%20%28WORKS%29%0A%20%20%20%20run_the_runnable%28%26MyRunnable%2C%20%26x%29%3B%0A%0A%20%20%20%20%2F%2F%20from%20closure%20%28DOES%20NOT%20WORK%29%0A%20%20%20%20run_the_runnable%28%26%7Cx%3A%20%26i32%7C%20%7B%0A%20%20%20%20%20%20%20%20println!%28%22Hello%20from%20run%28%26i32%29%20closure%20%7B%7D%22%2C%20x%29%3B%0A%20%20%20%20%7D%2C%20%26x%29%3B%0A%7D&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">Rust playground</a>)</p>\n"}], "owner": {"reputation": 2322, "user_id": 1987178, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/YS4r1.png?s=128&g=1", "display_name": "rom1v", "link": "https://stackoverflow.com/users/1987178/rom1v"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 715, "favorite_count": 2, "closed_date": 1494944957, "answer_count": 1, "score": 3, "last_activity_date": 1504815361, "creation_date": 1494943223, "last_edit_date": 1495542384, "question_id": 44003622, "link": "https://stackoverflow.com/questions/44003622/implementing-trait-for-fnsomething-in-rust", "closed_reason": "Duplicate", "title": "Implementing trait for Fn(&amp;something) in Rust", "body": "<p>Here is a working sample to implement <code>Runnable</code> for <code>Fn()</code> (so that we can directly pass a &amp;closure to the <code>run_the_runnable</code> function):</p>\n\n<pre><code>trait Runnable {\n    fn run(&amp;self);\n}\n\nimpl&lt;F&gt; Runnable for F where F: Fn() {\n    fn run(&amp;self) {\n        self();\n    }\n}\n\nfn run_the_runnable(runnable: &amp;Runnable) {\n    runnable.run();\n}\n\nfn main() {\n    // runnable without parameters\n    struct MyRunnable;\n    impl Runnable for MyRunnable {\n        fn run(&amp;self) {\n            println!(\"Hello from MyRunnable\");\n        }\n    }\n\n    // from struct instance (WORKS)\n    run_the_runnable(&amp;MyRunnable);\n\n    // from closure (WORKS)\n    run_the_runnable(&amp;|| {\n        println!(\"Hello from run() closure\");\n    });\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?code=trait%20Runnable%20%7B%0A%20%20%20%20fn%20run%28%26self%29%3B%0A%7D%0A%0Aimpl%3CF%3E%20Runnable%20for%20F%20where%20F%3A%20Fn%28%29%20%7B%0A%20%20%20%20fn%20run%28%26self%29%20%7B%0A%20%20%20%20%20%20%20%20self%28%29%3B%0A%20%20%20%20%7D%0A%7D%0A%0Afn%20run_the_runnable%28runnable%3A%20%26Runnable%29%20%7B%0A%20%20%20%20runnable.run%28%29%3B%0A%7D%0A%0Afn%20main%28%29%20%7B%0A%20%20%20%20%2F%2F%20runnable%20without%20parameters%0A%20%20%20%20struct%20MyRunnable%3B%0A%20%20%20%20impl%20Runnable%20for%20MyRunnable%20%7B%0A%20%20%20%20%20%20%20%20fn%20run%28%26self%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20println!%28%22Hello%20from%20MyRunnable%22%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20from%20struct%20instance%20%28WORKS%29%0A%20%20%20%20run_the_runnable%28%26MyRunnable%29%3B%0A%0A%20%20%20%20%2F%2F%20from%20closure%20%28WORKS%29%0A%20%20%20%20run_the_runnable%28%26%7C%7C%20%7B%0A%20%20%20%20%20%20%20%20println!%28%22Hello%20from%20run%28%29%20closure%22%29%3B%0A%20%20%20%20%7D%29%3B%0A%7D&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">Rust playground</a>)</p>\n\n<p>Now, let's change the runnable <code>run()</code> method to accept a reference parameter (<code>&amp;i32</code>), and implement <code>Fn(&amp;i32)</code>:</p>\n\n<pre><code>trait Runnable {\n    fn run(&amp;self, x: &amp;i32);\n}\n\nimpl&lt;F&gt; Runnable for F where F: Fn(&amp;i32) {\n    fn run(&amp;self, x: &amp;i32) {\n        self(x);\n    }\n}\n\nfn run_the_runnable(runnable: &amp;Runnable, x: &amp;i32) {\n    runnable.run(x);\n}\n\nfn main() {\n    // runnable without parameters\n    struct MyRunnable;\n    impl Runnable for MyRunnable {\n        fn run(&amp;self, x: &amp;i32) {\n            println!(\"Hello from MyRunnable {}\", x);\n        }\n    }\n\n    let x = 42;\n\n    // from struct instance (WORKS)\n    run_the_runnable(&amp;MyRunnable, &amp;x);\n\n    // from closure (DOES NOT WORK)\n    run_the_runnable(&amp;|x| {\n        println!(\"Hello from run(&amp;i32) closure {}\", x);\n    }, &amp;x);\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?code=trait%20Runnable%20%7B%0A%20%20%20%20fn%20run%28%26self%2C%20x%3A%20%26i32%29%3B%0A%7D%0A%0Aimpl%3CF%3E%20Runnable%20for%20F%20where%20F%3A%20Fn%28%26i32%29%20%7B%0A%20%20%20%20fn%20run%28%26self%2C%20x%3A%20%26i32%29%20%7B%0A%20%20%20%20%20%20%20%20self%28x%29%3B%0A%20%20%20%20%7D%0A%7D%0A%0Afn%20run_the_runnable%28runnable%3A%20%26Runnable%2C%20x%3A%20%26i32%29%20%7B%0A%20%20%20%20runnable.run%28x%29%3B%0A%7D%0A%0Afn%20main%28%29%20%7B%0A%20%20%20%20%2F%2F%20runnable%20without%20parameters%0A%20%20%20%20struct%20MyRunnable%3B%0A%20%20%20%20impl%20Runnable%20for%20MyRunnable%20%7B%0A%20%20%20%20%20%20%20%20fn%20run%28%26self%2C%20x%3A%20%26i32%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20println!%28%22Hello%20from%20MyRunnable%20%7B%7D%22%2C%20x%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20let%20x%20%3D%2042%3B%0A%0A%20%20%20%20%2F%2F%20from%20struct%20instance%20%28WORKS%29%0A%20%20%20%20run_the_runnable%28%26MyRunnable%2C%20%26x%29%3B%0A%0A%20%20%20%20%2F%2F%20from%20closure%20%28DOES%20NOT%20WORK%29%0A%20%20%20%20run_the_runnable%28%26%7Cx%7C%20%7B%0A%20%20%20%20%20%20%20%20println!%28%22Hello%20from%20run%28%26i32%29%20closure%20%7B%7D%22%2C%20x%29%3B%0A%20%20%20%20%7D%2C%20%26x%29%3B%0A%7D&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">Rust playground</a>)</p>\n\n<p>Passing the closure does not work anymore:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0271]: type mismatch resolving `for&lt;'r&gt; &lt;[closure@&lt;anon&gt;:30:27: 32:10] as std::ops::FnOnce&lt;(&amp;'r i32,)&gt;&gt;::Output == ()`\n  --&gt; &lt;anon&gt;:30:26\n   |\n30 |           run_the_runnable(&amp;|x| {\n   |  __________________________^ starting here...\n31 | |             println!(\"Hello from run(&amp;i32) closure {}\", x);\n32 | |         }, &amp;x);\n   | |_________^ ...ending here: expected bound lifetime parameter , found concrete lifetime\n   |\n   = note: concrete lifetime that was found is lifetime '_#63r\n   = note: required because of the requirements on the impl of `Runnable` for `[closure@&lt;anon&gt;:30:27: 32:10]`\n   = note: required for the cast to the object type `Runnable`\n\nerror[E0281]: type mismatch: the type `[closure@&lt;anon&gt;:30:27: 32:10]` implements the trait `std::ops::Fn&lt;(_,)&gt;`, but the trait `for&lt;'r&gt; std::ops::Fn&lt;(&amp;'r i32,)&gt;` is required (expected concrete lifetime, found bound lifetime parameter )\n  --&gt; &lt;anon&gt;:30:26\n   |\n30 |           run_the_runnable(&amp;|x| {\n   |  __________________________^ starting here...\n31 | |             println!(\"Hello from run(&amp;i32) closure {}\", x);\n32 | |         }, &amp;x);\n   | |_________^ ...ending here\n   |\n   = note: required because of the requirements on the impl of `Runnable` for `[closure@&lt;anon&gt;:30:27: 32:10]`\n   = note: required for the cast to the object type `Runnable`\n</code></pre>\n\n<p>There are many questions about this error:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/41087239/expected-concrete-lifetime-found-bound-lifetime-parameter-when-storing-a-fn-in\">Expected concrete lifetime, found bound lifetime parameter when storing a fn in a struct</a></li>\n<li><a href=\"https://stackoverflow.com/questions/32194367/expected-bound-lifetime-parameter-found-concrete-lifetime\">Expected bound lifetime parameter, found concrete lifetime</a></li>\n<li><a href=\"https://stackoverflow.com/questions/24847331/rust-lifetime-error-expected-concrete-lifetime-but-found-bound-lifetime\">Rust lifetime error expected concrete lifetime but found bound lifetime</a></li>\n<li>\u2026</li>\n</ul>\n\n<p>But I am still not able to resolve this specific lifetime problem.</p>\n"}, {"tags": ["stack", "rust", "os-agnostic"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 3, "creation_date": 1494944197, "post_id": 44003589, "comment_id": 75036327, "body": "Do you want to increase the stack size of the stack the compiler operates on <b>or</b> the <a href=\"http://stackoverflow.com/questions/29937697/how-to-set-the-thread-stack-size-during-compile-time\">stack of <i>your</i> program</a>?"}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1494952858, "post_id": 44003589, "comment_id": 75042446, "body": "@LukasKalbertodt the issue occurred during cargo tests and the overflowed thread was <code>libname-hash.exe</code>, so I guess it&#39;s the program after all."}], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 6, "creation_date": 1494948113, "post_id": 44003965, "comment_id": 75039223, "body": "@ljedrz: I&#39;ll note that <a href=\"https://doc.rust-lang.org/1.8.0/std/thread/struct.Builder.html\" rel=\"nofollow noreferrer\"><code>std::thread::Builder</code></a> let you specify the stack size of the created thread from within the program. Only the stack size of the <i>main</i> thread is set by the OS."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1494948704, "post_id": 44003965, "comment_id": 75039676, "body": "@MatthieuM. can you really set a stack size of like 256MB that way? Also, linking to the Rust 1.8 documentation? It&#39;s much better to link to <a href=\"https://doc.rust-lang.org/std/thread/struct.Builder.html\" rel=\"nofollow noreferrer\">the current docs</a>, which clarifies what <i>unit</i> <code>stack_size</code> takes."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1494948959, "post_id": 44003965, "comment_id": 75039874, "body": "@Shepmaster: I blame Google for the link ;) As for the maximum stack size, it may indeed be limited by the OS, or by the underlying thread implementation, but you <i>can</i> tune it from within Rust."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1494949057, "post_id": 44003965, "comment_id": 75039943, "body": "@MatthieuM. I was under the impression that <code>ulimit</code> (and other OS equivalents) was what controlled the maximum; do you know if that&#39;s true?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1494949416, "post_id": 44003965, "comment_id": 75040204, "body": "@Shepmaster: No idea, the only times I&#39;ve hit a stackoverflow was because of an unbounded recursion, so the fix was in the logic, not in the OS. I don&#39;t use FreeBSD though, which is notorious for its small stacks (1MB or 2MB by default I think)."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 4, "last_activity_date": 1494944091, "last_edit_date": 1495541433, "creation_date": 1494944091, "answer_id": 44003965, "question_id": 44003589, "link": "https://stackoverflow.com/questions/44003589/how-to-increase-the-stack-size-available-to-a-rust-library/44003965#44003965", "title": "How to increase the stack size available to a Rust library?", "body": "<p>This is not a language feature, it's an operating system feature. On *nix systems, you will use a tool like <code>ulimit</code>. Other systems likely use other tools:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/13245019/how-to-change-the-stack-size-using-ulimit-or-per-process-on-mac-os-x-for-a-c-or\">How to change the stack size using ulimit or per process on Mac OS X for a C or Ruby program?</a></li>\n<li><a href=\"https://superuser.com/q/340239/130901\">How to increase stack size permanently on Windows 7?</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": true, "score": 4, "last_activity_date": 1495095131, "creation_date": 1495095131, "answer_id": 44042122, "question_id": 44003589, "link": "https://stackoverflow.com/questions/44003589/how-to-increase-the-stack-size-available-to-a-rust-library/44042122#44042122", "title": "How to increase the stack size available to a Rust library?", "body": "<p>After some research I concluded that there isn't a universal way to achieve what I am after, but using <code>std::thread::Builder</code> I was able to create an extra thread with a specified stack size and perform stack-heavy operations inside it:</p>\n\n<pre><code>fn huge_reduction() {\n    let builder = thread::Builder::new()\n                  .name(\"reductor\".into())\n                  .stack_size(32 * 1024 * 1024); // 32MB of stack space\n\n    let handler = builder.spawn(|| {\n        // stack-intensive operations\n    }).unwrap();\n\n    handler.join().unwrap();\n}\n</code></pre>\n"}], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3947, "favorite_count": 1, "accepted_answer_id": 44042122, "answer_count": 2, "score": 2, "last_activity_date": 1495095131, "creation_date": 1494943136, "last_edit_date": 1495004270, "question_id": 44003589, "link": "https://stackoverflow.com/questions/44003589/how-to-increase-the-stack-size-available-to-a-rust-library", "title": "How to increase the stack size available to a Rust library?", "body": "<p>I am playing with lambda calculus and would like to have a bit more stack space to be able to build and compute (very) long function chains. Is there a way to increase it for the crate, similar to increasing the recursion limit (<code>#![recursion_limit = \"100\"]</code>)?</p>\n\n<p>The crate is a library and I would like it to be able to perform stack-intensive operations regardless of the target operating system.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 330, "user_id": 1513002, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6906bc00afec4223ab90b27024a2de99?s=128&d=identicon&r=PG&f=1", "display_name": "jinpan", "link": "https://stackoverflow.com/users/1513002/jinpan"}, "edited": false, "score": 0, "creation_date": 1589054601, "post_id": 44002428, "comment_id": 109142490, "body": "To add onto this answer, if your library crate-type is exclusively a &quot;cdylib&quot;, you&#39;ll get a &quot;can&#39;t find create for <code>demo</code>&quot; compilation error - see <a href=\"https://github.com/rust-lang/cargo/issues/6659\" rel=\"nofollow noreferrer\">github.com/rust-lang/cargo/issues/6659</a>.  To get integration tests / benchmarks working, you&#39;ll want add &quot;(r)lib&quot; to the list of crate-type."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 18, "last_activity_date": 1552355990, "last_edit_date": 1552355990, "creation_date": 1494940170, "answer_id": 44002428, "question_id": 43998085, "link": "https://stackoverflow.com/questions/43998085/how-can-i-use-a-module-from-outside-the-src-folder-in-a-binary-project-such-as/44002428#44002428", "title": "How can I use a module from outside the src folder in a binary project, such as for integration tests or benchmarks?", "body": "<p>Here's a literal answer, but <strong>don't actually use this</strong>!</p>\n\n<pre><code>#![feature(test)]\nextern crate test;\n\n#[path = \"../src/foo.rs\"] // Here\nmod foo;\n\n#[bench]\nfn bencher(_: &amp;mut test::Bencher) {\n    println!(\"{:?}\", foo::Thang);\n}\n</code></pre>\n\n<p>In fact, it's very likely that this won't work because your code in <code>foo.rs</code> needs supporting code from other files that won't be included.</p>\n\n<hr>\n\n<p>Instead of doing this, <em>just create a library</em>. You have the pure definition of a library - a piece of code that wants to be used in two different executables. You don't have to give up having an executable or even create separate directories (see <a href=\"https://stackoverflow.com/q/26946646/155423\">Rust package with both a library and a binary?</a>), but creating reusable code is a key component of making <em>good</em> code.</p>\n\n<p>Your end state would look something like:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>demo\n\u251c\u2500\u2500 Cargo.lock\n\u251c\u2500\u2500 Cargo.toml\n\u251c\u2500\u2500 benches\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 crypto_bench.rs\n\u251c\u2500\u2500 benchmarks\n\u2514\u2500\u2500 src\n    \u251c\u2500\u2500 bin\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 main.rs\n    \u251c\u2500\u2500 crypto.rs\n    \u2514\u2500\u2500 lib.rs\n</code></pre>\n\n<p>Move the reusable code to a library:</p>\n\n<p><strong>src/lib.rs</strong></p>\n\n<pre><code>pub mod crypto;\n</code></pre>\n\n<p><strong>src/crypto.rs</strong></p>\n\n<pre><code>pub struct Crypto;\nimpl Crypto {\n    pub fn secret() {}\n}\n</code></pre>\n\n<p>Then import your library from the benchmark and the binary:</p>\n\n<p><strong>benches/crypto_bench.rs</strong></p>\n\n<pre><code>#![feature(test)]\n\nextern crate test;\n\nuse demo::crypto::Crypto;\nuse test::Bencher;\n\n#[bench]\nfn speedy(b: &amp;mut Bencher) {\n    b.iter(|| Crypto::secret());\n}\n</code></pre>\n\n<p><strong>src/bin/main.rs</strong></p>\n\n<pre><code>use demo::crypto::Crypto;\n\nfn main() {\n    Crypto::secret();\n    eprintln!(\"Did the secret thing!\");\n}\n</code></pre>\n\n<p>You can then run it in different ways:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo build\n   Compiling demo v0.1.0 (/private/tmp/example)\n    Finished dev [unoptimized + debuginfo] target(s) in 0.51s\n\n$ cargo run\n    Finished dev [unoptimized + debuginfo] target(s) in 0.01s\n     Running `target/debug/main`\nDid the secret thing!\n\n$ cargo +nightly bench\n   Compiling demo v0.1.0 (/private/tmp/example)\n    Finished release [optimized] target(s) in 0.70s\n     Running target/release/deps/my_benchmark-5c9c5716763252a0\n\nrunning 1 test\ntest speedy ... bench:           1 ns/iter (+/- 0)\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 1 measured; 0 filtered out\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/26946646/155423\">Rust package with both a library and a binary?</a></li>\n<li><a href=\"https://stackoverflow.com/q/44539729/155423\">What is an idiomatic way to have shared utility functions for integration tests and benchmarks?</a></li>\n<li><a href=\"https://stackoverflow.com/q/47698194/155423\">Can I make an object public for integration tests and/or benchmarks only?</a></li>\n<li><a href=\"https://stackoverflow.com/q/46867652/155423\">Cannot import a module in an integration test</a></li>\n</ul>\n"}], "owner": {"reputation": 964, "user_id": 4200103, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/f0044a7575ce0b9f34649eb380d58a5a?s=128&d=identicon&r=PG&f=1", "display_name": "Anton", "link": "https://stackoverflow.com/users/4200103/anton"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3357, "favorite_count": 2, "accepted_answer_id": 44002428, "answer_count": 1, "score": 17, "last_activity_date": 1552356185, "creation_date": 1494928283, "last_edit_date": 1552356185, "question_id": 43998085, "link": "https://stackoverflow.com/questions/43998085/how-can-i-use-a-module-from-outside-the-src-folder-in-a-binary-project-such-as", "title": "How can I use a module from outside the src folder in a binary project, such as for integration tests or benchmarks?", "body": "<p>My project's path structure is as follows:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>demo\n\u251c\u2500\u2500 benches\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 crypto_bench.rs\n\u251c\u2500\u2500 src\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 main.rs\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 crypto.rs\n\u251c\u2500\u2500 Cargo.lock\n\u2514\u2500\u2500 Cargo.toml\n</code></pre>\n\n<p><code>crypto.rs</code> contains a struct <code>Crypto</code> with implementation.\n<code>crypto.rs</code> is referred to from <code>main.rs</code> using <code>mod crypto;</code></p>\n\n<p>How can I use <code>crypto.rs</code> from <code>crypto_bench.rs</code> inside the benches folder?</p>\n\n<p>I have tried all kinds of variations of <code>extern crate</code>, <code>mod</code>, <code>super</code> and <code>use</code>.\nAll examples I could find online are for library projects with a <code>lib.rs</code> and those \"imports\" don't work when using a project with a <code>main.rs</code> file.</p>\n"}, {"tags": ["rust", "lexer"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1494928835, "post_id": 43997415, "comment_id": 75024929, "body": "I&#39;m afraid there is a significant number of issues in your question: (1) Please try to narrow the code down to a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. (2) You should include the complete, exact error message provided by the compiler, including what line triggered the error. (3) The generic answer of how to manage memory in Rust should hopefully be already answered in The Book. I advise you to read the chapters on <a href=\"https://doc.rust-lang.org/book/ownership.html\" rel=\"nofollow noreferrer\">Ownership</a> and <a href=\"https://doc.rust-lang.org/book/references-and-borrowing.html\" rel=\"nofollow noreferrer\">References and Borrowing</a>."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 2, "creation_date": 1494928874, "post_id": 43997415, "comment_id": 75024964, "body": "Also note that there are many other <a href=\"http://stackoverflow.com/search?tab=votes&amp;q=cannot%20move%20out%20of%20borrowed%20content\">Stack Overflow questions with that title</a> than the one you linked, and these may help you understand the problem."}, {"owner": {"reputation": 179, "user_id": 1942596, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/b45240a758f27ff95040ff4e36cd884d?s=128&d=identicon&r=PG", "display_name": "Onei", "link": "https://stackoverflow.com/users/1942596/onei"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1494929966, "post_id": 43997415, "comment_id": 75025713, "body": "@E_net4 (1) This was as small I could reasonably make it while keeping the basic functionality. (2) Copied the error from the rust playground output. (3) While I&#39;ve read those chapters and have a grasp of the ideas, the examples seem to generic to be of use to a relative beginner (hence I&#39;m here)."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1494932512, "post_id": 43997415, "comment_id": 75027479, "body": "An MCVE does not have to keep all functionality, but just enough to reproduce the particular issue that you are facing. I highly doubt that we have to observe all that code (including the example in C++) to understand the problem."}], "answers": [{"tags": [], "owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "is_accepted": true, "score": 4, "last_activity_date": 1494944119, "last_edit_date": 1494944119, "creation_date": 1494940063, "answer_id": 44002378, "question_id": 43997415, "link": "https://stackoverflow.com/questions/43997415/errore0507-cannot-move-out-of-borrowed-content/44002378#44002378", "title": "error[E0507]: Cannot move out of borrowed content", "body": "<p>You came very close to getting it right, but there are two problems with your code.</p>\n\n<p>First, as the compiler tells you, the following is prohibited:</p>\n\n<pre><code>self.read_tok = self.peek_tok;\nself.peek_tok = None;\n</code></pre>\n\n<p>The first line attempts to move an <code>Option&lt;Token&gt;</code> object out of <code>self.peek_tok</code>. In Rust, objects can be moved out of variables, but not out of structure fields or slice subscripts. This is because the compiler can check that the variable is not used after the move, as well as arrange that its destructor is not invoked. This is not possible for objects stored in fields of structures or inside slices, at least not without adding overhead to every structure or container.</p>\n\n<p>Moving objects out of structs is possible as long as they are stored in an intermediate container that supports moving. Fortunately, <code>Option</code> is such a container, and its <code>take()</code> method is designed for exactly that purpose:</p>\n\n<pre><code>self.read_tok = self.peek_tok.take()\n</code></pre>\n\n<p><code>Option::take()</code> moves the object from the option, replaces it with <code>None</code>, and returns the object.</p>\n\n<p>Second, once the above is fixed, the compiler complains of \"moving out of borrowed content\" on the <code>return</code> statements of <code>next_token</code> and <code>peek_token</code>, because they attempt to move objects out of the <code>Option</code>. Here you have the choice of cloning the <code>Token</code>, or moving it out of the option using <code>Option::take()</code> as above. The cloning approach requires adding <code>#[derive(Clone)]</code> to <code>TokenType</code> and <code>Token</code>, as well as changing the returns to:</p>\n\n<pre><code>// Use as_ref() to convert Option&lt;Token&gt; to Option&lt;&amp;Token&gt;,\n// which is unwrapped and the Token inside cloned\nself.read_tok.as_ref().unwrap().clone()\n</code></pre>\n\n<p>With these changes, the example compiles, although it still flags the input as illegal.</p>\n"}], "owner": {"reputation": 179, "user_id": 1942596, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/b45240a758f27ff95040ff4e36cd884d?s=128&d=identicon&r=PG", "display_name": "Onei", "link": "https://stackoverflow.com/users/1942596/onei"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1450, "favorite_count": 0, "accepted_answer_id": 44002378, "answer_count": 1, "score": 0, "last_activity_date": 1494944119, "creation_date": 1494926654, "last_edit_date": 1494929480, "question_id": 43997415, "link": "https://stackoverflow.com/questions/43997415/errore0507-cannot-move-out-of-borrowed-content", "title": "error[E0507]: Cannot move out of borrowed content", "body": "<p>I'm trying to make a lexer in Rust while being relatively new to it but with a background in C/C++. I'm having problems with how Rust allocates memory in the following code, which generates the error \"Cannot move out of borrowed content\". I've read <code>cargo --explain E0507</code> which details possible solutions, but I'm struggling to grasp the underlying differences between how Rust and C/C++ manage memory. In essence, I want to understand how to manage dynamic memory in Rust (or a better way to achieve what I'm doing).</p>\n\n<p>The error is:</p>\n\n<pre><code>error[E0507]: cannot move out of borrowed content\n  --&gt; &lt;anon&gt;:65:16\n   |\n65 |         return self.read_tok.unwrap();\n   |                ^^^^ cannot move out of borrowed content\n\nerror[E0507]: cannot move out of borrowed content\n  --&gt; &lt;anon&gt;:73:16\n   |\n73 |         return self.peek_tok.unwrap();\n   |                ^^^^ cannot move out of borrowed content\n\nerror: aborting due to 2 previous errors\n</code></pre>\n\n<p>The code is:</p>\n\n<pre><code>use std::fmt;\n\n#[derive(Debug, PartialEq)]\npub enum TokenType {\n    EndOfFile,\n    Illegal\n}\n\npub struct Token {\n    token_type: TokenType,\n    value: String\n}\n\nimpl Token {\n    pub fn new(token_type: TokenType, value: String) -&gt; Token {\n        return Token {\n            token_type: token_type,\n            value: value\n        };\n    }\n\n    pub fn is_token_type(&amp;self, token_type: TokenType) -&gt; bool {\n        return self.token_type == token_type;\n    }\n}\n\nimpl fmt::Debug for Token {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        write!(f, \"{:?}[{}]\", self.token_type, self.value)\n    }\n}\n\npub struct Lexer {\n    input: String,\n    read_pos: usize,\n    peek_pos: usize,\n    ch: char,\n    read_tok: Option&lt;Token&gt;,\n    peek_tok: Option&lt;Token&gt;\n}\n\nconst EOF: char = 0 as char;\n\nimpl Lexer {\n    pub fn new(input: &amp;str) -&gt; Lexer {\n        return Lexer {\n            input: input.to_string(),\n            read_pos: 0,\n            peek_pos: 1,\n            ch: EOF,\n            read_tok: None,\n            peek_tok: None\n        };\n    }\n\n    pub fn next_token(&amp;mut self) -&gt; Token {\n        if self.peek_tok.is_none() {\n            self.read_tok = Some(self.get_next_token());\n        } else {\n            self.read_tok = self.peek_tok.take();\n        }\n\n        return self.read_tok.unwrap();\n    }\n\n    pub fn peek_token(&amp;mut self) -&gt; Token {\n        if self.peek_tok.is_none() {\n            self.peek_tok = Some(self.get_next_token());\n        }\n\n        return self.peek_tok.unwrap();\n    }\n\n    fn get_next_token(&amp;mut self) -&gt; Token {\n        let ch = self.next_char();\n        let tok: Token;\n\n        match ch {\n            EOF =&gt; { tok = Token::new(TokenType::EndOfFile, \"\".to_string()); }\n            _   =&gt; { tok = Token::new(TokenType::Illegal, ch.to_string()); }\n        }\n\n        return tok;\n    }\n\n    fn next_char(&amp;mut self) -&gt; char {\n        if self.peek_pos &gt;= self.input.len() {\n            self.ch = EOF;\n        } else {\n            self.ch = self.input.chars().nth(self.peek_pos).unwrap();\n        }\n\n        self.read_pos = self.peek_pos;\n        self.peek_pos += 1;\n\n        return self.ch;\n    }\n}\n\n\nfn main() {\n    let input = \"let x = 5;\";\n    let mut l = Lexer::new(input);\n\n    loop {\n        let t = l.next_token();\n        println!(\"{:?}\", t);\n\n        if t.is_token_type(TokenType::EndOfFile) {\n            break;\n        }\n    }\n}\n</code></pre>\n\n<p>Rust playground link: <a href=\"https://play.rust-lang.org/?gist=bc85fafa35a5cbbd5ac4066aef9e333c&amp;version=stable&amp;backtrace=0https://play.rust-lang.org/?gist=21cba64f53488ee0a9389c0191c47134&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?gist=bc85fafa35a5cbbd5ac4066aef9e333c&amp;version=stable&amp;backtrace=0https://play.rust-lang.org/?gist=21cba64f53488ee0a9389c0191c47134&amp;version=stable&amp;backtrace=0</a></p>\n\n<p>I've managed to translate a working implementation in C++ which might give some more info on what I'm trying to achieve:</p>\n\n<pre><code>#include &lt;string&gt;\n#include &lt;iostream&gt;\n\nenum TokenType {\n    ENDOFFILE,\n    ILLEGAL\n};\n\nclass Token {\nprivate:\n    enum TokenType token_type;\n    std::string value;\n\npublic:\n    Token(enum TokenType token_type, std::string value)\n    {\n        this-&gt;token_type = token_type;\n        this-&gt;value = value;\n    }\n\n    bool is_token_type(enum TokenType token_type)\n    {\n        return this-&gt;token_type == token_type;\n    }\n\n    std::string to_string()\n    {\n        std::string tok;\n\n        switch (this-&gt;token_type) {\n        case ENDOFFILE:\n            tok = \"EndOfFile\";\n            break;\n        case ILLEGAL:\n            tok = \"Illegal[\" + this-&gt;value + \"]\";\n            break;\n        }\n\n        return tok;\n    }\n};\n\nclass Lexer {\nprivate:\n    std::string input;\n    int read_pos;\n    int peek_pos;\n    char ch;\n    Token *read_tok;\n    Token *peek_tok;\n\n    Token *get_next_token() {\n        char c = this-&gt;next_char();\n        std::string c_str;\n        Token *t;\n\n        c_str.push_back(c);\n\n        switch (c) {\n        case 0:\n            t = new Token(ENDOFFILE, \"\");\n            break;\n        default:\n            t = new Token(ILLEGAL, c_str);\n        }\n\n        return t;\n    }\n\n    char next_char()\n    {\n        if (this-&gt;peek_pos &gt;= this-&gt;input.length()) {\n            this-&gt;ch = 0;\n        } else {\n            this-&gt;ch = input.at(this-&gt;peek_pos);\n        }\n\n        this-&gt;read_pos = this-&gt;peek_pos;\n        this-&gt;peek_pos += 1;\n\n        return this-&gt;ch;\n    }\n\npublic:\n    Lexer (std::string input)\n    {\n        this-&gt;input = input;\n        this-&gt;read_pos = -1;\n        this-&gt;peek_pos = 0;\n        this-&gt;ch = 0;\n        this-&gt;read_tok = NULL;\n        this-&gt;peek_tok = NULL;\n    }\n\n    Token *next_token()\n    {\n        if (this-&gt;read_tok != NULL) {\n            delete this-&gt;read_tok;\n        }\n\n        if (this-&gt;peek_tok == NULL) {\n            this-&gt;read_tok = this-&gt;get_next_token();\n        } else {\n            this-&gt;read_tok = this-&gt;peek_tok;\n            this-&gt;peek_tok = NULL;\n        }\n\n        return this-&gt;read_tok;\n    }\n\n    Token *peek_token()\n    {\n        if (this-&gt;peek_tok == NULL) {\n            this-&gt;peek_tok = this-&gt;get_next_token();\n        }\n\n        return this-&gt;peek_tok;\n    }\n};\n\nint main(int argc, char **argv)\n{\n    std::string input = \"let x = 5;\";\n    Lexer l = Lexer(input);\n\n    while (1) {\n        Token *t = l.next_token();\n        std::cout &lt;&lt; t-&gt;to_string() &lt;&lt; std::endl;\n\n        if (t-&gt;is_token_type(ENDOFFILE)) {\n            break;\n        }\n    }\n\n    return 0;\n}\n</code></pre>\n"}, {"tags": ["rust", "rust-cargo", "rust-crates"], "answers": [{"comments": [{"owner": {"reputation": 2795, "user_id": 7978068, "user_type": "registered", "accept_rate": 32, "profile_image": "https://www.gravatar.com/avatar/374ccc08f4ce2a4b5f59a0551a5eadee?s=128&d=identicon&r=PG&f=1", "display_name": "Jodimoro", "link": "https://stackoverflow.com/users/7978068/jodimoro"}, "edited": false, "score": 0, "creation_date": 1494913206, "post_id": 43993031, "comment_id": 75015098, "body": "<code>It&#39;s a signal that </code> -- what signal?"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 2795, "user_id": 7978068, "user_type": "registered", "accept_rate": 32, "profile_image": "https://www.gravatar.com/avatar/374ccc08f4ce2a4b5f59a0551a5eadee?s=128&d=identicon&r=PG&f=1", "display_name": "Jodimoro", "link": "https://stackoverflow.com/users/7978068/jodimoro"}, "edited": false, "score": 1, "creation_date": 1494913375, "post_id": 43993031, "comment_id": 75015161, "body": "@Jodimoro Yanking."}, {"owner": {"reputation": 2795, "user_id": 7978068, "user_type": "registered", "accept_rate": 32, "profile_image": "https://www.gravatar.com/avatar/374ccc08f4ce2a4b5f59a0551a5eadee?s=128&d=identicon&r=PG&f=1", "display_name": "Jodimoro", "link": "https://stackoverflow.com/users/7978068/jodimoro"}, "edited": false, "score": 0, "creation_date": 1494916578, "post_id": 43993031, "comment_id": 75016657, "body": "I don&#39;t understand"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 2795, "user_id": 7978068, "user_type": "registered", "accept_rate": 32, "profile_image": "https://www.gravatar.com/avatar/374ccc08f4ce2a4b5f59a0551a5eadee?s=128&d=identicon&r=PG&f=1", "display_name": "Jodimoro", "link": "https://stackoverflow.com/users/7978068/jodimoro"}, "edited": false, "score": 0, "creation_date": 1494916662, "post_id": 43993031, "comment_id": 75016708, "body": "@Jodimoro: That a version of a crate has been yanked is an indication to users that the version in question should not be used, because something is wrong with it."}, {"owner": {"reputation": 2795, "user_id": 7978068, "user_type": "registered", "accept_rate": 32, "profile_image": "https://www.gravatar.com/avatar/374ccc08f4ce2a4b5f59a0551a5eadee?s=128&d=identicon&r=PG&f=1", "display_name": "Jodimoro", "link": "https://stackoverflow.com/users/7978068/jodimoro"}, "edited": false, "score": 0, "creation_date": 1494916965, "post_id": 43993031, "comment_id": 75016866, "body": "What indicator? Does crates install a special red-light led indicator to each user&#39;s computer and flash it when a crate is yanked?"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 2795, "user_id": 7978068, "user_type": "registered", "accept_rate": 32, "profile_image": "https://www.gravatar.com/avatar/374ccc08f4ce2a4b5f59a0551a5eadee?s=128&d=identicon&r=PG&f=1", "display_name": "Jodimoro", "link": "https://stackoverflow.com/users/7978068/jodimoro"}, "edited": false, "score": 1, "creation_date": 1494917123, "post_id": 43993031, "comment_id": 75016961, "body": "@Jodimoro: Yanked crates show up as yanked in a crate&#39;s version history on crates.io."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 8, "last_activity_date": 1494911817, "creation_date": 1494911817, "answer_id": 43993031, "question_id": 43992434, "link": "https://stackoverflow.com/questions/43992434/how-to-use-cargo-yank/43993031#43993031", "title": "How to use &quot;cargo yank&quot;?", "body": "<p>You <em>can't</em> update your crate without publishing a new version.  The crate repository is explicitly designed such that crates are immutable: once published, they never change, <em>period.</em></p>\n\n<p>Yanking is for when there is some serious problem with a published crate, such as a serious security vulnerability, or potential to damage user's data, or yes, because it just straight-up doesn't work.  It's a signal that <em>no one</em> should be using that version of the crate for any reason.  An incomplete <code>README.md</code> does not really meet that standard.</p>\n\n<p>Just publish a new version, or hold off until you would be publishing a new version for some other reason.</p>\n\n<hr>\n\n<p>As for why there are two commands: because one yanks a version, and the other un-yanks it.  Un-yanking is not the same as publishing, it's just restoring the crate that was yanked as though it had never been yanked in the first place.</p>\n"}], "owner": {"reputation": 2795, "user_id": 7978068, "user_type": "registered", "accept_rate": 32, "profile_image": "https://www.gravatar.com/avatar/374ccc08f4ce2a4b5f59a0551a5eadee?s=128&d=identicon&r=PG&f=1", "display_name": "Jodimoro", "link": "https://stackoverflow.com/users/7978068/jodimoro"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 776, "favorite_count": 0, "accepted_answer_id": 43993031, "answer_count": 1, "score": 4, "last_activity_date": 1494919661, "creation_date": 1494908394, "last_edit_date": 1494919661, "question_id": 43992434, "link": "https://stackoverflow.com/questions/43992434/how-to-use-cargo-yank", "title": "How to use &quot;cargo yank&quot;?", "body": "<p>I've published my crate and then realized that I've forgotten to include some small detail in my <code>README.md</code>. I've included that detail into  <code>README.md</code> and did <code>git commit</code> and <code>push</code>. How to update my crate without having to change its version?</p>\n\n<p>From <a href=\"http://doc.crates.io/crates-io.html#cargo-yank\" rel=\"nofollow noreferrer\">the <code>crates.io</code> documentation</a>:</p>\n\n<blockquote>\n  <p><code>cargo yank</code></p>\n  \n  <p>Occasions may arise where you publish a version of a crate that\n  actually ends up being broken for one reason or another (syntax error,\n  forgot to include a file, etc.). For situations such as this, Cargo\n  supports a <code>yank</code> of a version of a crate.</p>\n\n<pre><code>$ cargo yank --vers 1.0.1 \n\n$ cargo yank --vers 1.0.1 --undo\n</code></pre>\n</blockquote>\n\n<p>I don't understand how to use it. Why 2 commands: one with another without <code>--undo</code>? Should I run them both? Or only one? Which?</p>\n\n<p>Should I run <code>crate package &amp;&amp; crate publish</code> after that? Or only <code>cargo yank ...</code>? Will that automatically update my crate?</p>\n"}, {"tags": ["struct", "rust", "method-chaining", "borrow-checker"], "comments": [{"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 1, "creation_date": 1494905261, "post_id": 43991870, "comment_id": 75012791, "body": "You might be interested in this crate <a href=\"https://github.com/colin-kiegel/rust-derive-builder#how-it-works\" rel=\"nofollow noreferrer\">github.com/colin-kiegel/rust-derive-builder#how-it-works</a> :)"}, {"owner": {"reputation": 7076, "user_id": 1610428, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/e6gnk.jpg?s=128&g=1", "display_name": "krishnab", "link": "https://stackoverflow.com/users/1610428/krishnab"}, "reply_to_user": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1494905832, "post_id": 43991870, "comment_id": 75012904, "body": "@kennytm thanks for the tip. Yeah, I saw that crate and was just trying to practice writing my own builders before I started to use shortcuts :). But I will look into that the derive-builder crate a bit more. I just want to make sure I can include the input validation logic that I want to include."}], "answers": [{"comments": [{"owner": {"reputation": 7076, "user_id": 1610428, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/e6gnk.jpg?s=128&g=1", "display_name": "krishnab", "link": "https://stackoverflow.com/users/1610428/krishnab"}, "edited": false, "score": 0, "creation_date": 1494905344, "post_id": 43991971, "comment_id": 75012810, "body": "Okay great. Yeah, I see what you mean by the create, mutate, clone idea when I chain methods before binding. That is why I was wondering about the strange <code>.to_owned()</code> method. Thanks for the tip. I am starting to get the hang of this better than before."}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1494925236, "post_id": 43991971, "comment_id": 75022125, "body": "Wouldn&#39;t it be better to make direct use of the move semantics in setters that consume the object anyway? I.e. define <code>set_run</code> as <code>fn set_run(mut self, run: i32) -&gt; Self { self.run = run; self }</code>, and so on. Although the compiler might be smart enough to optimize both to the exact same output, being explicit about updating a single field feels more efficient and somewhat clearer."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1494905067, "last_edit_date": 1495535471, "creation_date": 1494905067, "answer_id": 43991971, "question_id": 43991870, "link": "https://stackoverflow.com/questions/43991870/is-using-to-owned-the-idiomatic-way-to-update-a-struct-in-place/43991971#43991971", "title": "Is using to_owned() the idiomatic way to update a struct in place?", "body": "<p>Your code \"works\" but doesn't make sense to me. It:</p>\n\n<ul>\n<li>Creates a value</li>\n<li>Mutates the value</li>\n<li>Clones the value</li>\n<li>Throws away the original value</li>\n</ul>\n\n<p>See the inefficiency? In addition, all the \"in-place mutation\" is completely discarded, so there's no benefit to it.</p>\n\n<p>I'd generally introduce a binding to mutate:</p>\n\n<pre><code>let mut data_capture = ModelDataCapture::new();\ndata_capture.set_run(0).set_year(1);\n</code></pre>\n\n<p>Or go all the way and create a builder that has some equivalent of <code>finish</code> or <code>build</code></p>\n\n<pre><code>#[derive(Debug)]\nstruct ModelDataCapture {\n    run: i32,\n    year: i32,\n}\n\n#[derive(Debug, Default)]\nstruct ModelDataCaptureBuilder {\n    run: i32,\n    year: i32,\n}\n\nimpl ModelDataCaptureBuilder {\n    fn set_run(self, run: i32) -&gt; Self {\n        ModelDataCaptureBuilder { run, ..self }\n    }\n\n    fn set_year(self, year: i32) -&gt; Self {\n        ModelDataCaptureBuilder { year, ..self }\n    }\n\n    fn build(self) -&gt; ModelDataCapture {\n        let ModelDataCaptureBuilder { run, year } = self;\n        ModelDataCapture { run, year }\n    }\n}\n\nfn main() {\n    let data_capture = ModelDataCaptureBuilder::default().set_run(0).set_year(1).build();\n\n    println!(\"here is the data capture {:?}\", data_capture);\n}\n</code></pre>\n\n<p>See <a href=\"https://stackoverflow.com/q/43840415/155423\">Do Rust builder patterns have to use redundant struct code?</a> for more examples of builders that mirror the built items.</p>\n\n<p>You could take <code>self</code> by-value in the first example, but that's annoying in most cases, as you always have to remember to bind the result. </p>\n"}], "owner": {"reputation": 7076, "user_id": 1610428, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/e6gnk.jpg?s=128&g=1", "display_name": "krishnab", "link": "https://stackoverflow.com/users/1610428/krishnab"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1125, "favorite_count": 0, "accepted_answer_id": 43991971, "answer_count": 1, "score": 4, "last_activity_date": 1494905067, "creation_date": 1494904208, "last_edit_date": 1494904548, "question_id": 43991870, "link": "https://stackoverflow.com/questions/43991870/is-using-to-owned-the-idiomatic-way-to-update-a-struct-in-place", "title": "Is using to_owned() the idiomatic way to update a struct in place?", "body": "<p>I was playing around with updating a Rust struct in place using chained methods. I found a way to do this, but I was not sure if my code below was idiomatic Rust versus just a workaround. </p>\n\n<p>In particular, I used <code>.to_owned()</code> at the end of the chained method to return the borrowed struct. The code compiles and works just fine. Here is the minimal example.</p>\n\n<pre><code>//struct.rs\n#[derive(Debug, Default, Clone, PartialEq)]\npub struct ModelDataCapture {\n    run: i32,\n    year: i32,\n}\nimpl ModelDataCapture {\n    pub fn new() -&gt; Self {\n        ModelDataCapture::default()\n    }\n    pub fn set_run(&amp;mut self, run: i32) -&gt; &amp;mut ModelDataCapture {\n        self.run = run;\n        self\n    }\n    pub fn set_year(&amp;mut self, year: i32) -&gt; &amp;mut ModelDataCapture {\n        self.year = year;\n        self\n    }\n}\n\n//main.rs\nlet data_capture = ModelDataCapture::new()\n    .set_run(0)\n    .set_year(1)\n    .to_owned(); // &lt;&lt;&lt; QUESTION\n\nprintln!(\"here is the data capture {:?}\", data_capture);\n</code></pre>\n\n<p>Is this the proper way to write this in-place modification of the struct? If I do not include the <code>.to_owned()</code> method at the end of the chain, the compile fails with a message that the temporary variable does not live long enough.</p>\n"}, {"tags": ["audio", "rust"], "comments": [{"owner": {"reputation": 2103, "user_id": 1865694, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bP5UU.jpg?s=128&g=1", "display_name": "Alex Zywicki", "link": "https://stackoverflow.com/users/1865694/alex-zywicki"}, "edited": false, "score": 1, "creation_date": 1494900064, "post_id": 43990790, "comment_id": 75011668, "body": "If I had to take a guess... I would say that it is likely that the soundifle that you are playing back has a nonzero sample value for its first sample. This is causing your speakers to &quot;instantaneously&quot; jump from 0 to whatever that value is. As to why it does no do this when played back in other ways: I would imagine that whatever you are using to play back the file is applying a very small crossfade to the start of playback to avoid such pops and clicks in your playback."}], "answers": [{"tags": [], "owner": {"reputation": 2103, "user_id": 1865694, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bP5UU.jpg?s=128&g=1", "display_name": "Alex Zywicki", "link": "https://stackoverflow.com/users/1865694/alex-zywicki"}, "is_accepted": true, "score": 1, "last_activity_date": 1494964050, "last_edit_date": 1494964050, "creation_date": 1494962149, "answer_id": 44009797, "question_id": 43990790, "link": "https://stackoverflow.com/questions/43990790/connection-noise-in-rodio-when-starting-a-playback/44009797#44009797", "title": "Connection noise in rodio when starting a playback", "body": "<p>The issue is that you are calling <code>set_volume(0.1)</code> which is causing your waveform to be discontinuous. This results in a theoretically instantaneous movement in your speaker cones which will sound like a pop or click. If you remove the <code>set_volume</code> line it should fix your problem.</p>\n"}], "owner": {"reputation": 13014, "user_id": 4140572, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/2uRSa.png?s=128&g=1", "display_name": "Angel Angel", "link": "https://stackoverflow.com/users/4140572/angel-angel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 80, "favorite_count": 0, "accepted_answer_id": 44009797, "answer_count": 1, "score": 1, "last_activity_date": 1494964050, "creation_date": 1494895121, "last_edit_date": 1494897243, "question_id": 43990790, "link": "https://stackoverflow.com/questions/43990790/connection-noise-in-rodio-when-starting-a-playback", "title": "Connection noise in rodio when starting a playback", "body": "<p>I am using <a href=\"https://crates.io/crates/rodio\" rel=\"nofollow noreferrer\">rodio</a> for the reproduction of some file, with this code:</p>\n\n<pre><code>extern crate rodio;\nuse std::io::BufReader;\nuse std::time::Duration;\n//..\nlet endpoint = rodio::get_default_endpoint().unwrap();\n\nlet file = std::fs::File::open(\"./sound/beep2.wav\").unwrap();\nlet mut beep1 = rodio::play_once(&amp;endpoint, BufReader::new(file)).unwrap();\n\nbeep1.set_volume(0.1);\n</code></pre>\n\n<p>When starting playback, I hear a noise like a connection noise at the beginning. This sample file (<a href=\"https://github.com/tomaka/rodio/blob/master/examples/beep2.wav\" rel=\"nofollow noreferrer\">beep2.wav</a>) plays without noise in a normal player program.</p>\n\n<p>I have created alternative code but the noise stays the same:</p>\n\n<pre><code>//test duracion inicio\n\nuse rodio::Sink;\nuse rodio::Source;\n\nlet mut sink = Sink::new(&amp;endpoint);\nlet source = rodio::Decoder::new(BufReader::new(file)).unwrap();\n\nsink.append(source);\nsink.set_volume(0.01);\n</code></pre>\n\n<p>What am I doing wrong? How can I solve this noise at the beginning of the reproduction?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 3, "last_activity_date": 1494894676, "creation_date": 1494894676, "answer_id": 43990729, "question_id": 43990594, "link": "https://stackoverflow.com/questions/43990594/simplify-a-long-namespace-for-impl-when-importing-the-type-would-introduce-ambig/43990729#43990729", "title": "Simplify a long namespace for impl when importing the type would introduce ambiguity?", "body": "<blockquote>\n  <p>as <code>Foo</code> might bring in namespace ambiguity</p>\n</blockquote>\n\n<p>You can rename the type when you import it to avoid ambiguity:</p>\n\n<pre><code>pub mod a {\n    pub mod b {\n        pub mod c {\n            pub mod d {\n                pub struct Foo;\n            }\n        }\n    }\n}\n\nstruct T;\n\nuse a::b::c::d::Foo as UniqueName;\n\nimpl&lt;'a&gt; From&lt;UniqueName&gt; for T {\n    fn from(_: UniqueName) -&gt; Self {\n        T\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>You could also use a <em>type alias</em>:</p>\n\n<pre><code>type UniqueName = a::b::c::d::Foo;\n</code></pre>\n"}], "owner": {"reputation": 17717, "user_id": 691867, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/86cad22e6f9100c801c56c099872bbc2?s=128&d=identicon&r=PG", "display_name": "colinfang", "link": "https://stackoverflow.com/users/691867/colinfang"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 65, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1494929761, "creation_date": 1494893554, "last_edit_date": 1494929761, "question_id": 43990594, "link": "https://stackoverflow.com/questions/43990594/simplify-a-long-namespace-for-impl-when-importing-the-type-would-introduce-ambig", "title": "Simplify a long namespace for impl when importing the type would introduce ambiguity?", "body": "<p>Is there a way to simplify namespace for the following code?</p>\n\n<pre><code>struct T {...}\n\nimpl&lt;'a&gt; From&lt;A::B::C::D::Foo&lt;'a&gt;&gt; for T {\n    fn from(x: A::B::C::D::Foo&lt;'a&gt;) -&gt; Self {\n        T {...}\n    }\n}\n</code></pre>\n\n<p>I don't want to <code>use A::B::C::D::Foo</code> in the current module as <code>Foo</code> might bring in namespace ambiguity.</p>\n\n<p>Is there a way to temporarily/locally <code>use A::B::C::D::Foo</code> for the <code>impl</code>? It seems I can only do that within a function scope, rather than an <code>impl</code> scope.</p>\n\n<p>Currently, my workaround is to use a dummy module.</p>\n\n<pre><code>struct T {...}\nmod abc {\n    use super::T;\n    use A::B::C::D::Foo;\n\n\n    impl&lt;'a&gt; From&lt;Foo&lt;'a&gt;&gt; for T {\n        fn from(x: Foo&lt;'a&gt;) -&gt; Self {\n            T {...}\n        }\n    }\n}\n</code></pre>\n\n<p>If using a nested module is the canonical solution, is it possible to define an anonymous module since the module name is unimportant?</p>\n\n<p>Note, I don't mind writing <code>A::B::C::D::Foo</code> once for <code>impl</code>, but since the type in <code>from</code> is the same as the one in <code>impl From</code>, I am looking for ways to NOT have to write the same <code>A::B::C::D::Foo</code> twice.</p>\n"}, {"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 0, "creation_date": 1494883829, "post_id": 43989065, "comment_id": 75007426, "body": "I think this instance would have to be defined where <code>Rand</code> is..."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1554380753, "last_edit_date": 1554380753, "creation_date": 1494885227, "answer_id": 43989384, "question_id": 43989065, "link": "https://stackoverflow.com/questions/43989065/cant-implement-a-trait-i-dont-own-for-all-types-that-implement-a-trait-i-do-ow/43989384#43989384", "title": "Can&#39;t implement a trait I don&#39;t own for all types that implement a trait I do own", "body": "<blockquote>\n  <p>I should be able to implement <code>Rand</code> for <code>AllValues</code> since <code>AllValues</code> is defined in my crate. </p>\n</blockquote>\n\n<p>No, you are only allowed to implement your own trait <code>AllValues</code> for types you didn't define. You can't make the logical jump to implementing an unrelated trait that you also didn't define.</p>\n\n<p>There are two considerations to remember:</p>\n\n<ul>\n<li>If your trait is public (which it is based on the code you've provided), you aren't the only one that can implement the trait. Consumers of your crate might be able to implement it for their own types, where they might also decide to implement <code>Rand</code>!</li>\n<li>The rand crate might decide to implement <code>Rand</code> for <code>T</code> some time in the future.</li>\n</ul>\n\n<blockquote>\n  <p>What is the right way to implement <code>Rand</code> for things that implement <code>AllValues</code>?</p>\n</blockquote>\n\n<p>I don't believe there is one. I'd just introduce a wrapper type that holds a value or a reference to a value that implements your trait and implement <code>Rand</code> for that.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/25413201/how-do-i-implement-a-trait-i-dont-own-for-a-type-i-dont-own\">How do I implement a trait I don&#39;t own for a type I don&#39;t own?</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 738, "user_id": 4496839, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/050b67773c3fcf861e786289b932daeb?s=128&d=identicon&r=PG&f=1", "display_name": "Ryan1729", "link": "https://stackoverflow.com/users/4496839/ryan1729"}, "is_accepted": false, "score": 1, "last_activity_date": 1494955147, "last_edit_date": 1495540507, "creation_date": 1494955147, "answer_id": 44007802, "question_id": 43989065, "link": "https://stackoverflow.com/questions/43989065/cant-implement-a-trait-i-dont-own-for-all-types-that-implement-a-trait-i-do-ow/44007802#44007802", "title": "Can&#39;t implement a trait I don&#39;t own for all types that implement a trait I do own", "body": "<p>I see now where my mistake in interpretation was. Quoting from the <a href=\"https://doc.rust-lang.org/book/traits.html\" rel=\"nofollow noreferrer\">the traits section of the book</a>:</p>\n\n<blockquote>\n  <p>There\u2019s one more restriction on implementing traits: either the trait\n  or the <strong>type</strong> you\u2019re implementing it for must be defined by you. Or more\n  precisely, one of them must be defined in the same crate as the impl\n  you're writing.</p>\n</blockquote>\n\n<p>(Emphasis added.)</p>\n\n<p>Since I was trying to implement a trait I must have read that as \"either the trait or the <strong>trait you\u2019re implementing it for</strong>\". <a href=\"https://github.com/rust-lang/rust/issues/23086\" rel=\"nofollow noreferrer\">This discussion about an eventually implemented rfc</a> specifically mentions a similar case to the one I presented : <code>impl&lt;T: Copy&gt; Clone for T</code> as something that would not be allowed.</p>\n\n<p>Creating a wrapper type as suggested elsewhere is one solution for this problem. Assuming the ownership of the type implementations allows it, implementing the trait explicitly for each concrete instance, (optionally condensing the code with a macro,) as suggested <a href=\"https://stackoverflow.com/questions/31082179/implementing-a-trait-for-a-trait\">here</a> is another.</p>\n"}], "owner": {"reputation": 738, "user_id": 4496839, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/050b67773c3fcf861e786289b932daeb?s=128&d=identicon&r=PG&f=1", "display_name": "Ryan1729", "link": "https://stackoverflow.com/users/4496839/ryan1729"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 152, "favorite_count": 0, "accepted_answer_id": 43989384, "answer_count": 2, "score": 1, "last_activity_date": 1554380753, "creation_date": 1494883558, "last_edit_date": 1494955023, "question_id": 43989065, "link": "https://stackoverflow.com/questions/43989065/cant-implement-a-trait-i-dont-own-for-all-types-that-implement-a-trait-i-do-ow", "title": "Can&#39;t implement a trait I don&#39;t own for all types that implement a trait I do own", "body": "<pre><code>pub trait AllValues {\n    fn all_values() -&gt; Vec&lt;Self&gt; where Self: std::marker::Sized;\n}\n\nuse rand::Rand;\nuse rand::Rng;\nimpl&lt;T: AllValues + Sized&gt; Rand for T {\n    fn rand&lt;R: Rng, T&gt;(rng: &amp;mut R) -&gt; T {\n        let values = T::all_values();\n\n        let len = values.len();\n\n        if len == 0 {\n            panic!(\"Cannot pick a random value because T::all_values() returned an empty vector!\")\n        } else {\n            let i = rng.gen_range(0, len);\n\n            values[i]\n        }\n    }\n}\n</code></pre>\n\n<p>The preceding code produces the following compile-time error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g. `MyStruct&lt;T&gt;`); only traits defined in the current crate can be implemented for a type parameter\n   --&gt; src/lib.rs:137:1\n    |\n137 | impl&lt;T: AllValues + Sized&gt; Rand for T {\n    | ^\n</code></pre>\n\n<p>According to the restrictions on implementing traits mentioned <a href=\"https://doc.rust-lang.org/book/traits.html\" rel=\"nofollow noreferrer\">here</a> I should be able to implement <code>Rand</code> for <code>AllValues</code> since <code>AllValues</code> is defined in my crate. Is this actually allowed by the coherence/orphan <code>impl</code>s rules? And if so, what is the right way to implement <code>Rand</code> for things that implement <code>AllValues</code>? </p>\n"}, {"tags": ["rust", "gtk-rs"], "comments": [{"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 2, "creation_date": 1494905212, "post_id": 43988417, "comment_id": 75012782, "body": "IIRC the glib objects themselves are already reference-counted, so there is no need to add another layer of Rc on top of it."}, {"owner": {"reputation": 13014, "user_id": 4140572, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/2uRSa.png?s=128&g=1", "display_name": "Angel Angel", "link": "https://stackoverflow.com/users/4140572/angel-angel"}, "reply_to_user": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1494905560, "post_id": 43988417, "comment_id": 75012848, "body": "@kennytm thank you for your comment."}], "answers": [{"tags": [], "owner": {"reputation": 1771, "user_id": 3040948, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2e165e48a46079440f8ae438b0a3ed88?s=128&d=identicon&r=PG", "display_name": "Sebastian Dr&#246;ge", "link": "https://stackoverflow.com/users/3040948/sebastian-dr%c3%b6ge"}, "is_accepted": false, "score": 0, "last_activity_date": 1504688574, "creation_date": 1504688574, "answer_id": 46070971, "question_id": 43988417, "link": "https://stackoverflow.com/questions/43988417/how-safe-is-this-behavior-of-gtk-rs-builderget-object/46070971#46070971", "title": "How safe is this behavior of GTK-rs Builder::get_object?", "body": "<p>GTK/GLib objects (GObject) implement reference counting directly, similar to the Arc type in Rust. You can safely have multiple references to the same object, and once the last one goes out of scope the object will be destroyed.</p>\n\n<p>For mutability, in Rust, gtk-rs uses interior mutability (conceptually). So you can mutate every reference to the same object, even if there are multiple of them. The implementation of the objects has to handle that (and has to anyway because that's how things work in GTK/GLib in C).</p>\n"}], "owner": {"reputation": 13014, "user_id": 4140572, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/2uRSa.png?s=128&g=1", "display_name": "Angel Angel", "link": "https://stackoverflow.com/users/4140572/angel-angel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 149, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1504688574, "creation_date": 1494880649, "last_edit_date": 1494881938, "question_id": 43988417, "link": "https://stackoverflow.com/questions/43988417/how-safe-is-this-behavior-of-gtk-rs-builderget-object", "title": "How safe is this behavior of GTK-rs Builder::get_object?", "body": "<p>In <a href=\"https://doc.rust-lang.org/book/ownership.html#move-semantics\" rel=\"nofollow noreferrer\"><em>The Rust Programming Language</em></a>, it says something like:</p>\n\n<blockquote>\n  <p>Move semantics</p>\n  \n  <p>There\u2019s some more subtlety here, though: Rust ensures that there is\n  exactly one binding to any given resource. For example, if we have a\n  vector, we can assign it to another binding:</p>\n</blockquote>\n\n<p>But I found that I can do this using gtk-rs:</p>\n\n<pre><code>let label1: gtk::Label = builder.get_object(\"label1\").unwrap();\nlet label1_test: gtk::Label = builder.get_object(\"label1\").unwrap();\n</code></pre>\n\n<p>Both now point to the same resource \"or something happens to me.\"</p>\n\n<p><a href=\"https://docs.rs/gtk/0.1.3/gtk/struct.Builder.html#method.get_object\" rel=\"nofollow noreferrer\"><code>Builder::get_object</code></a> is defined as:</p>\n\n<pre><code>pub fn get_object&lt;T: IsA&lt;Object&gt;&gt;(&amp;self, name: &amp;str) -&gt; Option&lt;T&gt; {\n    unsafe {\n        Option::&lt;Object&gt;::from_glib_none(\n            ffi::gtk_builder_get_object(self.to_glib_none().0, name.to_glib_none().0))\n            .and_then(|obj| obj.downcast().ok())\n    }\n}\n</code></pre>\n\n<hr>\n\n<p>Although this is not really something from Rust directly, just from gtk-rs, I was wondering if I am right and how sure is this.</p>\n\n<p>Maybe it could use <code>Rc</code>?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 10434, "user_id": 1007991, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/a1254dabbec32d7cbc502dfd2fd0438d?s=128&d=identicon&r=PG", "display_name": "Renato", "link": "https://stackoverflow.com/users/1007991/renato"}, "edited": false, "score": 0, "creation_date": 1494880900, "post_id": 43988422, "comment_id": 75006080, "body": "But notice that I never asked for a slice back, I asked for a &quot;view&quot; (not sure if <code>Iterator</code> was the right word in Rust for that). So the first part of the answer is not necessary."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 10434, "user_id": 1007991, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/a1254dabbec32d7cbc502dfd2fd0438d?s=128&d=identicon&r=PG", "display_name": "Renato", "link": "https://stackoverflow.com/users/1007991/renato"}, "edited": false, "score": 0, "creation_date": 1494881066, "post_id": 43988422, "comment_id": 75006146, "body": "@Renato questions and answers on Stack Overflow aren&#39;t meant just for you, the asker or me, the answerer. They are meant for <i>every person who comes after us</i>. To that end, answers have to &quot;color a <i>little</i> beyond the edges&quot; to help all those people who are going to find your question through a search engine, read the title, then skip directly to the answer. I agree that I can flip the order of the two sections."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1494881096, "last_edit_date": 1494881096, "creation_date": 1494880660, "answer_id": 43988422, "question_id": 43988231, "link": "https://stackoverflow.com/questions/43988231/how-to-get-a-view-over-a-slice-with-an-added-head-and-tail/43988422#43988422", "title": "How to get a view over a slice with an added head and tail?", "body": "<p>If all you need is an iterator, you can use <a href=\"https://doc.rust-lang.org/std/iter/fn.once.html\" rel=\"nofollow noreferrer\"><code>iter::once</code></a> and <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.chain\" rel=\"nofollow noreferrer\"><code>Iterator::chain</code></a>:</p>\n\n<pre><code>use std::iter;\n\nfn main() {\n    let elements = [\"a\", \"b\"];\n    let head = iter::once(\"head\");\n    let tail = iter::once(\"tail\");\n    let result = head.chain(elements.iter().cloned()).chain(tail);\n\n    assert!([\"head\", \"a\", \"b\", \"tail\"].iter().cloned().eq(result));\n}\n</code></pre>\n\n<p>I also had to use <code>cloned</code> because the <code>Iterator::Item</code> of an array is a reference to the value, thus a <code>&amp;&amp;str</code>. <code>cloned</code> converts back to a <code>&amp;str</code>.</p>\n\n<hr>\n\n<blockquote>\n  <p>Is it possible in Rust?</p>\n</blockquote>\n\n<p>It is absolutely not possible to construct a slice with \"extra\" elements. </p>\n\n<p>A <em>slice</em>, by definition, is a range of values that are <strong>contiguous in memory</strong>. Its literal definition is a pointer to the start of the data and the number of elements. There's simply no location to store an \"extra\" element.</p>\n"}], "owner": {"reputation": 10434, "user_id": 1007991, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/a1254dabbec32d7cbc502dfd2fd0438d?s=128&d=identicon&r=PG", "display_name": "Renato", "link": "https://stackoverflow.com/users/1007991/renato"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 343, "favorite_count": 0, "accepted_answer_id": 43988422, "answer_count": 1, "score": 1, "last_activity_date": 1494881096, "creation_date": 1494879958, "last_edit_date": 1494880704, "question_id": 43988231, "link": "https://stackoverflow.com/questions/43988231/how-to-get-a-view-over-a-slice-with-an-added-head-and-tail", "title": "How to get a view over a slice with an added head and tail?", "body": "<p>I am trying to get a \"view\" of a slice (i.e. no copying) that contains a prepended head element as well as a last element appended to it.</p>\n\n<p>I know how to express this using Groovy (probably Ruby also) syntax:</p>\n\n<pre><code>def elements = [ 'a', 'b' ]\ndef result = [ 'head', *elements, 'tail' ]\nassert result == [ 'head', 'a', 'b', 'tail' ]\n</code></pre>\n\n<p>The <code>*</code> above is the spread operator.</p>\n\n<p>In Rust, this seems a little harder... I can only find solutions where I copy the slice into a mutable vector, then push and insert the tail and head.</p>\n\n<p>I was hoping it would be possible to use an iterable or something that just appears to contain the elements I want as in the example above... Is it possible in Rust? How?</p>\n"}, {"tags": ["rust", "operator-overloading"], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1494918986, "post_id": 43985457, "comment_id": 75018056, "body": "<i>I don&#39;t know how specialization / subtyping will work with const functions.</i> =&gt; That&#39;s the big question, isn&#39;t it? I have no idea how the team is planning to handle that, and without the ability to use common traits such as arithmetic in constant expressions... they&#39;re going to be rather pointless."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1494869200, "creation_date": 1494869200, "answer_id": 43985457, "question_id": 43984358, "link": "https://stackoverflow.com/questions/43984358/can-i-use-const-with-overloading-operators-in-rust/43985457#43985457", "title": "Can I use const with overloading operators in Rust?", "body": "<p>No, you cannot. Namely, the implementation of <code>add</code> could do literally <em>anything</em> that Rust can do, including panicking, printing output, reading files, allocating memory, etc.</p>\n\n<p>You will need to construct your constant \"by hand\":</p>\n\n<pre><code>const B: Foo = Foo(2);\n</code></pre>\n\n<p>You could also utilize a <a href=\"http://doc.crates.io/build-script.html\" rel=\"nofollow noreferrer\">build script</a> which would generate Rust code that you then can include back into your program.</p>\n\n<hr>\n\n<p>As the error message says:</p>\n\n<blockquote>\n  <p>note: a limited form of compile-time function evaluation is available on a nightly compiler via <code>const fn</code></p>\n</blockquote>\n\n<p>However, that won't help you here and now as trait methods cannot currently be made <code>const</code>, and I doubt that <code>Add::add</code> (or any other operator trait) will be marked <code>const</code> as that would be overly restrictive \u2014 preventing implementations of <code>Add</code> from using all the features listed above. I don't know how specialization / subtyping will work with const functions.</p>\n"}], "owner": {"reputation": 23, "user_id": 7854333, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dc5281370ddcda1470f4d166a18783ec?s=128&d=identicon&r=PG&f=1", "display_name": "kazuki matoya", "link": "https://stackoverflow.com/users/7854333/kazuki-matoya"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 292, "favorite_count": 0, "accepted_answer_id": 43985457, "answer_count": 1, "score": 2, "last_activity_date": 1494869200, "creation_date": 1494865064, "last_edit_date": 1494868816, "question_id": 43984358, "link": "https://stackoverflow.com/questions/43984358/can-i-use-const-with-overloading-operators-in-rust", "title": "Can I use const with overloading operators in Rust?", "body": "<p>In this code:</p>\n\n<pre><code>#![allow(dead_code)]\nuse std::ops::Add;\nstruct Foo(i32);\n\nconst X: i32 = 1;\nconst Y: i32 = X + X;\nconst A: Foo = Foo(1);\nconst B: Foo = A + A;\n\nimpl Add for Foo {\n    type Output = Foo;\n    fn add(self, rhs: Foo) -&gt; Foo {\n        Foo(self.0 + rhs.0)\n    }\n}\n</code></pre>\n\n<p>The compiler says:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0015]: calls in constants are limited to struct and enum constructors\n --&gt; src/main.rs:8:16\n  |\n8 | const B: Foo = A + A;\n  |                ^^^^^\n  |\nnote: a limited form of compile-time function evaluation is available on a nightly compiler via `const fn`\n --&gt; src/main.rs:8:16\n  |\n8 | const B: Foo = A + A;\n  |                ^^^^^\n</code></pre>\n\n<p>What is the best substitution?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 1624, "user_id": 6554943, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/732754d4a00e6a8e4a486c097360348b?s=128&d=identicon&r=PG", "display_name": "ritiek", "link": "https://stackoverflow.com/users/6554943/ritiek"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1494862793, "post_id": 43983414, "comment_id": 74996262, "body": "It gives me <code>binary operation + cannot be applied to type char</code>  when I try to add something to it"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1494862842, "post_id": 43983414, "comment_id": 74996292, "body": "If you want to parse the whole integer, all you need is <code>let v: i32 = x.parse()?;</code>. Can you check whether this is not a duplicate of <a href=\"http://stackoverflow.com/questions/27043268/convert-a-string-to-int-in-rust\" title=\"convert a string to int in rust\">stackoverflow.com/questions/27043268/&hellip;</a> ?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1494862857, "post_id": 43983414, "comment_id": 74996302, "body": "Sorry, that may have been confusing. It&#39;s an integral value, but it&#39;s a separate type because it&#39;s not a type you are supposed to do arithmetic on. My question stands: what output do you expect from your program?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1494872214, "post_id": 43983414, "comment_id": 75001691, "body": "@Ritiek: No problem; I also have the same problem when asking a question that the context seems obvious to me since I&#39;ve been working on it for some time :)"}, {"owner": {"reputation": 17424, "user_id": 278842, "user_type": "registered", "accept_rate": 51, "profile_image": "https://www.gravatar.com/avatar/df6877d3f05e542ca5975b4670600f2e?s=128&d=identicon&r=PG", "display_name": "Christopher Oezbek", "link": "https://stackoverflow.com/users/278842/christopher-oezbek"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1560890726, "post_id": 43983414, "comment_id": 99883526, "body": "@shepmaster: Isn&#39;t the <code>+1</code>confusing as the code would print <code>2,3,4</code> (if it would compile)."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 17424, "user_id": 278842, "user_type": "registered", "accept_rate": 51, "profile_image": "https://www.gravatar.com/avatar/df6877d3f05e542ca5975b4670600f2e?s=128&d=identicon&r=PG", "display_name": "Christopher Oezbek", "link": "https://stackoverflow.com/users/278842/christopher-oezbek"}, "edited": false, "score": 0, "creation_date": 1560890991, "post_id": 43983414, "comment_id": 99883634, "body": "@ChristopherOezbek perhaps, but it&#39;s <i>what the OP tried</i>. Presumably they added that to demonstrate that they wanted the ability to use addition on the result, but that&#39;s just guessing on my part."}], "answers": [{"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": false, "score": -1, "last_activity_date": 1494863076, "last_edit_date": 1494863076, "creation_date": 1494862932, "answer_id": 43983653, "question_id": 43983414, "link": "https://stackoverflow.com/questions/43983414/how-to-convert-a-rust-char-to-an-integer-so-that-1-becomes-1/43983653#43983653", "title": "How to convert a Rust char to an integer so that &#39;1&#39; becomes 1?", "body": "<p>The method <a href=\"https://doc.rust-lang.org/stable/std/primitive.str.html#method.parse\" rel=\"nofollow noreferrer\"><code>parse()</code></a> is defined on <code>str</code>, not on <code>char</code>. A <code>char</code> is a Unicode codepoint, which is 32 bits wide. If you cast it to an integer, using <code>u32</code> is preferred over <code>i32</code>.</p>\n\n<p>You can cast it via <code>as</code> or <a href=\"https://doc.rust-lang.org/stable/std/convert/trait.Into.html#tymethod.into\" rel=\"nofollow noreferrer\"><code>into()</code></a>:</p>\n\n<pre><code>let a = '\u2665' as u32;\nlet b: u32 = '\u2665'.into();\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 5, "last_activity_date": 1494870149, "creation_date": 1494870149, "answer_id": 43985705, "question_id": 43983414, "link": "https://stackoverflow.com/questions/43983414/how-to-convert-a-rust-char-to-an-integer-so-that-1-becomes-1/43985705#43985705", "title": "How to convert a Rust char to an integer so that &#39;1&#39; becomes 1?", "body": "<pre><code>my_char as u32 - '0' as u32\n</code></pre>\n\n<p>Now, there's a lot more to unpack about this answer. </p>\n\n<p>It works because the ASCII (and thus UTF-8) encodings have the Arabic numerals 0-9 ordered in ascending order. You can get the scalar values and subtract them.</p>\n\n<p>However, what should it do for values <em>outside</em> this range? What happens if you provide <code>'p'</code>? It returns 64. What about <code>'.'</code>? This will panic. And <code>'\u2665'</code> will return 9781. </p>\n\n<p><strong>Strings are not just bags of bytes</strong>. They are UTF-8 encoded and you cannot just ignore that fact. Every <code>char</code> can hold any Unicode scalar value.</p>\n\n<p>That's why strings are the wrong abstraction for the problem.</p>\n\n<p>From an efficiency perspective, allocating a string seems inefficient. <a href=\"https://rosettacode.org/wiki/Sum_digits_of_an_integer#Rust\" rel=\"noreferrer\">Rosetta Code has an example of using an iterator</a> which only does numeric operations:</p>\n\n<pre><code>struct DigitIter(usize, usize);\n\nimpl Iterator for DigitIter {\n    type Item = usize;\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        if self.0 == 0 {\n            None\n        } else {\n            let ret = self.0 % self.1;\n            self.0 /= self.1;\n            Some(ret)\n        }\n    }\n}\n\nfn main() {\n    println!(\"{}\", DigitIter(1234, 10).sum::&lt;usize&gt;());\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1494872257, "post_id": 43985962, "comment_id": 75001727, "body": "<code>flat_map</code> may be used if you don&#39;t care about the failure to convert."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 986, "user_id": 6819040, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/IJDZr.jpg?s=128&g=1", "display_name": "AurevoirXavier", "link": "https://stackoverflow.com/users/6819040/aurevoirxavier"}, "edited": false, "score": 0, "creation_date": 1511788231, "post_id": 43985962, "comment_id": 81979215, "body": "@AurevoirXavier nope I did not mean that."}, {"owner": {"reputation": 399, "user_id": 8532064, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/74ec4cb855fc0dce8376bbeb11141819?s=128&d=identicon&r=PG", "display_name": "aravk33", "link": "https://stackoverflow.com/users/8532064/aravk33"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1575459261, "post_id": 43985962, "comment_id": 104571763, "body": "@Shepmaster do you mean like <code>x.chars().flat_map(|x| c.to_digit(RADIX))</code>? Is this because flattening a result will either panic or give the value?"}, {"owner": {"reputation": 95, "user_id": 1587961, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/55b0b385d1db6be95aa4832815970e3a?s=128&d=identicon&r=PG", "display_name": "murlakatamenka", "link": "https://stackoverflow.com/users/1587961/murlakatamenka"}, "reply_to_user": {"reputation": 399, "user_id": 8532064, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/74ec4cb855fc0dce8376bbeb11141819?s=128&d=identicon&r=PG", "display_name": "aravk33", "link": "https://stackoverflow.com/users/8532064/aravk33"}, "edited": false, "score": 0, "creation_date": 1575822352, "post_id": 43985962, "comment_id": 104686291, "body": "@aravk33, <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.filter_map\" rel=\"nofollow noreferrer\"><code>filter_map</code></a> is a good fit here since it will uwrap <code>Option&lt;u32&gt;</code>: <code>x.chars().filter_map(|c| c.to_digit(RADIX))</code>. I&#39;ll update the answer."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 95, "user_id": 1587961, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/55b0b385d1db6be95aa4832815970e3a?s=128&d=identicon&r=PG", "display_name": "murlakatamenka", "link": "https://stackoverflow.com/users/1587961/murlakatamenka"}, "edited": false, "score": 1, "creation_date": 1575902777, "post_id": 43985962, "comment_id": 104712217, "body": "@murlakatamenka No, I mean <code>flat_map</code>. See <a href=\"https://stackoverflow.com/q/43285372/155423\">Why does <code>Option</code> support <code>IntoIterator</code>?</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 399, "user_id": 8532064, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/74ec4cb855fc0dce8376bbeb11141819?s=128&d=identicon&r=PG", "display_name": "aravk33", "link": "https://stackoverflow.com/users/8532064/aravk33"}, "edited": false, "score": 0, "creation_date": 1575902787, "post_id": 43985962, "comment_id": 104712225, "body": "@aravk33 no it does not panic. See <a href=\"https://stackoverflow.com/q/43285372/155423\">Why does <code>Option</code> support <code>IntoIterator</code>?</a>"}], "tags": [], "owner": {"reputation": 35314, "user_id": 344347, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/1d83837bce9d9a2656c4f5704d40c430?s=128&d=identicon&r=PG", "display_name": "Pavel Strakhov", "link": "https://stackoverflow.com/users/344347/pavel-strakhov"}, "is_accepted": true, "score": 37, "last_activity_date": 1494872223, "last_edit_date": 1494872223, "creation_date": 1494871131, "answer_id": 43985962, "question_id": 43983414, "link": "https://stackoverflow.com/questions/43983414/how-to-convert-a-rust-char-to-an-integer-so-that-1-becomes-1/43985962#43985962", "title": "How to convert a Rust char to an integer so that &#39;1&#39; becomes 1?", "body": "<p>The method you need is <a href=\"https://doc.rust-lang.org/std/primitive.char.html#method.to_digit\" rel=\"noreferrer\"><code>char::to_digit</code></a>. It converts <code>char</code> to a number it represents in the given radix. </p>\n\n<p>You can also use <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.sum\" rel=\"noreferrer\"><code>Iterator::sum</code></a> to calculate sum of a sequence conveniently:</p>\n\n<pre><code>fn main() {\n    const RADIX: u32 = 10;\n    let x = \"134\";\n    println!(\"{}\", x.chars().map(|c| c.to_digit(RADIX).unwrap()).sum::&lt;u32&gt;());\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 5087, "user_id": 2942471, "user_type": "registered", "accept_rate": 57, "profile_image": "https://graph.facebook.com/100000008666513/picture?type=large", "display_name": "manonthemat", "link": "https://stackoverflow.com/users/2942471/manonthemat"}, "is_accepted": false, "score": 2, "last_activity_date": 1494882059, "creation_date": 1494882059, "answer_id": 43988741, "question_id": 43983414, "link": "https://stackoverflow.com/questions/43983414/how-to-convert-a-rust-char-to-an-integer-so-that-1-becomes-1/43988741#43988741", "title": "How to convert a Rust char to an integer so that &#39;1&#39; becomes 1?", "body": "<p>Another way is to iterate over the characters of your string and convert and add them using <code>fold</code>.</p>\n\n<pre><code>fn sum_of_string(s: &amp;str) -&gt; u32 {\n  s.chars().fold(0, |acc, c| c.to_digit(10).unwrap_or(0) + acc)\n}\n\nfn main() {\n    let x = \"123\";\n    println!(\"{}\", sum_of_string(x));\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 1624, "user_id": 6554943, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/732754d4a00e6a8e4a486c097360348b?s=128&d=identicon&r=PG", "display_name": "ritiek", "link": "https://stackoverflow.com/users/6554943/ritiek"}, "edited": false, "score": 0, "creation_date": 1609336703, "post_id": 65499651, "comment_id": 115815652, "body": "Not my downvote but the question was about converting char to integer (not string to integer)."}], "tags": [], "owner": {"reputation": 1, "user_id": 11649971, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/19oOu.jpg?s=128&g=1", "display_name": "h4ck3r", "link": "https://stackoverflow.com/users/11649971/h4ck3r"}, "is_accepted": false, "score": -1, "last_activity_date": 1609281145, "creation_date": 1609281145, "answer_id": 65499651, "question_id": 43983414, "link": "https://stackoverflow.com/questions/43983414/how-to-convert-a-rust-char-to-an-integer-so-that-1-becomes-1/65499651#65499651", "title": "How to convert a Rust char to an integer so that &#39;1&#39; becomes 1?", "body": "<p>why not just</p>\n<pre><code>fn main() {\n    let x = &quot;123&quot;;\n    let z = x.parse::&lt;i32&gt;().unwrap();\n    println!(&quot;{}&quot;, z + 1);\n}\n</code></pre>\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=745b4fe9dcdd384d5d4b70b483386a1a\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}, {"tags": [], "owner": {"reputation": 5436, "user_id": 3161139, "user_type": "registered", "accept_rate": 12, "profile_image": "https://i.stack.imgur.com/EePWR.jpg?s=128&g=1", "display_name": "Antonin GAVREL", "link": "https://stackoverflow.com/users/3161139/antonin-gavrel"}, "is_accepted": false, "score": 0, "last_activity_date": 1615495838, "creation_date": 1615495838, "answer_id": 66590374, "question_id": 43983414, "link": "https://stackoverflow.com/questions/43983414/how-to-convert-a-rust-char-to-an-integer-so-that-1-becomes-1/66590374#66590374", "title": "How to convert a Rust char to an integer so that &#39;1&#39; becomes 1?", "body": "<p>If <code>c</code> is your character you can just write:</p>\n<pre class=\"lang-rs prettyprint-override\"><code>c as i32 - 0x30;\n</code></pre>\n<p>Test with:</p>\n<pre class=\"lang-rs prettyprint-override\"><code>let c:char = '2';\nlet n:i32 = c as i32 - 0x30;\nprintln!(&quot;{}&quot;, n);\n</code></pre>\n<p>output:</p>\n<pre><code>2\n</code></pre>\n<p><em>NB: 0x30 is '0' in ASCII table, easy enough to remember!</em></p>\n"}], "owner": {"reputation": 1624, "user_id": 6554943, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/732754d4a00e6a8e4a486c097360348b?s=128&d=identicon&r=PG", "display_name": "ritiek", "link": "https://stackoverflow.com/users/6554943/ritiek"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 27171, "favorite_count": 3, "accepted_answer_id": 43985962, "answer_count": 6, "score": 29, "last_activity_date": 1615495838, "creation_date": 1494862319, "last_edit_date": 1560890254, "question_id": 43983414, "link": "https://stackoverflow.com/questions/43983414/how-to-convert-a-rust-char-to-an-integer-so-that-1-becomes-1", "title": "How to convert a Rust char to an integer so that &#39;1&#39; becomes 1?", "body": "<p>I am trying to find the sum of the digits of a given number. For example, <code>134</code> will give <code>8</code>.</p>\n\n<p>My plan is to convert the number into a string using <code>.to_string()</code> and then use <code>.chars()</code> to iterate over the digits as characters. Then I want to convert every <code>char</code> in the iteration into an integer and add it to a variable. I want to get the final value of this variable.</p>\n\n<p>I tried using the code below to convert a <code>char</code> into an integer:</p>\n\n<pre><code>fn main() {\n    let x = \"123\";\n    for y in x.chars() {\n        let z = y.parse::&lt;i32&gt;().unwrap();\n        println!(\"{}\", z + 1);\n    }\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?gist=132027c6a92b20e5d39298ff2d3bdc24&amp;version=stable&amp;backtrace=0\" rel=\"noreferrer\">Playground</a>)</p>\n\n<p>But it results in this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `parse` found for type `char` in the current scope\n --&gt; src/main.rs:4:19\n  |\n4 |         let z = y.parse::&lt;i32&gt;().unwrap();\n  |                   ^^^^^\n</code></pre>\n\n<p>This code does exactly what I want to do, but first I have to convert each <code>char</code> into a string and then into an integer to then increment <code>sum</code> by <code>z</code>.</p>\n\n<pre><code>fn main() {\n    let mut sum = 0;\n    let x = 123;\n    let x = x.to_string();\n    for y in x.chars() {\n        // converting `y` to string and then to integer\n        let z = (y.to_string()).parse::&lt;i32&gt;().unwrap();\n        // incrementing `sum` by `z`\n        sum += z;\n    }\n    println!(\"{}\", sum);\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?gist=8aae5aac5ead131f58633609f272a981&amp;version=stable&amp;backtrace=0\" rel=\"noreferrer\">Playground</a>)</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1494844658, "post_id": 43976787, "comment_id": 74983881, "body": "Have you tried a recursive approach? It&#39;s more natural here (although it&#39;ll run into stack-overflow issues with large lists)."}, {"owner": {"reputation": 20499, "user_id": 446921, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/db9ae27234bc59746a27fd63accabd12?s=128&d=identicon&r=PG", "display_name": "Muhd", "link": "https://stackoverflow.com/users/446921/muhd"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1494845022, "post_id": 43976787, "comment_id": 74984085, "body": "@MatthieuM. yeah, I know. My first implementation was recursive and it sort of worked except it returned the tail of the list and the nodes before it became inaccessible. I switched to an iterative approach so I could have more control if I needed."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1494854632, "post_id": 43976787, "comment_id": 74990406, "body": "Note that <code>return self;</code> should just be <code>self</code>. Clippy will warn you about things like that."}], "answers": [{"tags": [], "owner": {"reputation": 17388, "user_id": 921321, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/3f4c4737cb30134f58cc76f06ef5113a?s=128&d=identicon&r=PG", "display_name": "Lukazoid", "link": "https://stackoverflow.com/users/921321/lukazoid"}, "is_accepted": false, "score": 1, "last_activity_date": 1494855590, "last_edit_date": 1494855590, "creation_date": 1494848649, "answer_id": 43978643, "question_id": 43976787, "link": "https://stackoverflow.com/questions/43976787/adding-an-append-method-to-a-singly-linked-list/43978643#43978643", "title": "Adding an append method to a singly linked list", "body": "<p>As the <code>len</code> method is implemented recursively, I have done the same for the <code>append</code> implementation:</p>\n\n<pre><code>fn append(self, elem: u32) -&gt; List {\n    match self {\n        Cons(current_elem, tail_box) =&gt; {\n            let tail = *tail_box;\n            let new_tail = tail.append(elem);\n\n            new_tail.prepend(current_elem)\n        }\n        Nil =&gt; {\n            List::new().prepend(elem)\n        }\n    }\n}\n</code></pre>\n\n<p>One possible iterative solution would be to implement <code>append</code> in terms of <code>prepend</code> and a reverse function, like so (it won't be as performant but should still only be O(N)):</p>\n\n<pre><code>// Reverses the list\nfn rev(self) -&gt; List {\n    let mut result = List::new();\n    let mut current = self;\n    while let Cons(elem, tail) = current {\n        result = result.prepend(elem);\n        current = *tail;\n    }\n\n    result\n}\n\nfn append(self, elem: u32) -&gt; List {\n    self.rev().prepend(elem).rev()\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1494853243, "post_id": 43980172, "comment_id": 74989385, "body": "<i><code>Box</code> is really missing a destructive take</i> \u2014 it&#39;s <code>*boxed_thing</code>"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1494860230, "post_id": 43980172, "comment_id": 74994481, "body": "@Shepmaster: Which trait does that map to? Or is it another box-specific magic?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1494861042, "post_id": 43980172, "comment_id": 74995105, "body": "Sadly, it&#39;s box-specific magic. I think that the hypothetical <a href=\"https://github.com/rust-lang/rfcs/issues/997\" rel=\"nofollow noreferrer\"><code>DerefMove</code> and friends</a> would extend it to other types."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1494861367, "post_id": 43980172, "comment_id": 74995323, "body": "@Shepmaster: Damned, I searched for it a couple time and I can&#39;t find any mention of it in the documentation of <code>Box</code>. I couldn&#39;t understand how people were doing without it (it&#39;s just that useful)."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 1, "last_activity_date": 1494860283, "last_edit_date": 1494860283, "creation_date": 1494853027, "answer_id": 43980172, "question_id": 43976787, "link": "https://stackoverflow.com/questions/43976787/adding-an-append-method-to-a-singly-linked-list/43980172#43980172", "title": "Adding an append method to a singly linked list", "body": "<p>So, it's actually going to be slightly more difficult than you may think; mostly because <code>Box</code> is <em>really</em> missing a destructive <code>take</code> method which would return its content.</p>\n\n<hr>\n\n<p><strong>Easy way: the recursive way, no return.</strong></p>\n\n<pre><code>fn append_rec(&amp;mut self, elem: u32) {\n    match *self {\n        Cons(_, ref mut tail) =&gt; tail.append_rec(elem),\n        Nil =&gt; *self = Cons(elem, Box::new(Nil)),\n    }\n}\n</code></pre>\n\n<p>This is relatively easy, as mentioned.</p>\n\n<hr>\n\n<p><strong>Harder way: the recursive way, with return.</strong></p>\n\n<pre><code>fn append_rec(self, elem: u32) -&gt; List {\n    match self {\n        Cons(e, tail) =&gt; Cons(e, Box::new((*tail).append_rec(elem))),\n        Nil =&gt; Cons(elem, Box::new(Nil)),\n    }\n}\n</code></pre>\n\n<p>Note that this is <em>grossly</em> inefficient. For a list of size N, we are destroying N boxes <em>and</em> allocating N new ones. In place mutation (the first approach), was <em>much</em> better in this regard.</p>\n\n<hr>\n\n<p><strong>Harder way: the iterative way, with no return.</strong></p>\n\n<pre><code>fn append_iter_mut(&amp;mut self, elem: u32) {\n    let mut current = self;\n    loop {\n        match {current} {\n            &amp;mut Cons(_, ref mut tail) =&gt; current = tail,\n            c @ &amp;mut Nil =&gt; {\n                *c = Cons(elem, Box::new(Nil));\n                return;\n            },\n        }\n    }\n}\n</code></pre>\n\n<p>Okay... so iterating (mutably) over a nested data structure is not THAT easy because ownership and borrow-checking will ensure that:</p>\n\n<ul>\n<li>a mutable reference is never copied, only moved,</li>\n<li>a mutable reference with an outstanding borrow cannot be modified.</li>\n</ul>\n\n<p>This is why here:</p>\n\n<ul>\n<li>we use <code>{current}</code> to move <code>current</code> into the match,</li>\n<li>we use <code>c @ &amp;mut Nil</code> because we need a to name the match of <code>&amp;mut Nil</code> since <code>current</code> has been moved.</li>\n</ul>\n\n<p>Note that thankfully rustc is smart enough to check the execution path and detect that it's okay to continue looping as long as we take the <code>Cons</code> branch since we reinitialize <code>current</code> in that branch, however it's not okay to continue after taking the <code>Nil</code> branch, which forces us to terminate the loop :)</p>\n\n<hr>\n\n<p><strong>Harder way: the iterative way, with return</strong></p>\n\n<pre><code>fn append_iter(self, elem: u32) -&gt; List {\n    let mut stack = List::default();\n    {\n        let mut current = self;\n        while let Cons(elem, tail) = current {\n            stack = stack.prepend(elem);\n            current = take(tail);\n        }\n    }\n\n    let mut result = List::new();\n    result = result.prepend(elem);\n\n    while let Cons(elem, tail) = stack {\n        result = result.prepend(elem);\n        stack = take(tail);\n    }\n\n    result\n}\n</code></pre>\n\n<p>In the recursive way, we were using the stack to keep the items for us, here we use a stack structure instead.</p>\n\n<p>It's even more inefficient than the recursive way with return was; each node cause <em>two</em> deallocations and <em>two</em> allocations.</p>\n\n<hr>\n\n<p><strong>TL;DR</strong>: in-place modifications are generally more efficient, don't be afraid of using them when necessary.</p>\n"}, {"comments": [{"owner": {"reputation": 17388, "user_id": 921321, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/3f4c4737cb30134f58cc76f06ef5113a?s=128&d=identicon&r=PG", "display_name": "Lukazoid", "link": "https://stackoverflow.com/users/921321/lukazoid"}, "edited": false, "score": 1, "creation_date": 1494855439, "post_id": 43980606, "comment_id": 74990986, "body": "I like this answer much more than mine (I gave it a shot), I couldn&#39;t figure out how to implement something like <code>back</code>, the temp variable was the key!"}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 1, "creation_date": 1494954600, "post_id": 43980606, "comment_id": 75043400, "body": "Is it intended that <code>match {node}</code> behave differently than <code>match node</code>, which doesn&#39;t compile? I never would have thought to use the former."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1494955353, "post_id": 43980606, "comment_id": 75043818, "body": "@user4815162342 yes. As described in <a href=\"http://stackoverflow.com/q/37986640/155423\">Obtaining a mutable reference by iterating a recursive structure</a>, you need to transfer ownership of the mutable reference when performing iteration."}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 2, "creation_date": 1494963340, "post_id": 43980606, "comment_id": 75048406, "body": "I see, using <code>match node</code> performs a simple borrow, while <code>match {node}</code> forces a move."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1535487168, "last_edit_date": 1535487168, "creation_date": 1494854166, "answer_id": 43980606, "question_id": 43976787, "link": "https://stackoverflow.com/questions/43976787/adding-an-append-method-to-a-singly-linked-list/43980606#43980606", "title": "Adding an append method to a singly linked list", "body": "<p>As described in <a href=\"https://stackoverflow.com/q/37986640/155423\">Cannot obtain a mutable reference when iterating a recursive structure: cannot borrow as mutable more than once at a time</a>, you need to transfer ownership of the mutable reference when performing iteration. This is needed to ensure you never have two mutable references to the same thing.</p>\n\n<p>We use similar code as that Q&amp;A to get a mutable reference to the last item (<code>back</code>) which will always be the <code>Nil</code> variant. We then call it and set that <code>Nil</code> item to a <code>Cons</code>. We wrap all that with a by-value function because that's what the API wants.</p>\n\n<p>No extra allocation, no risk of running out of stack frames.</p>\n\n<pre><code>use List::*;\n\n#[derive(Debug)]\nenum List {\n    Cons(u32, Box&lt;List&gt;),\n    Nil,\n}\n\nimpl List {\n    fn back(&amp;mut self) -&gt; &amp;mut List {\n        let mut node = self;\n\n        loop {\n            match {node} {\n                &amp;mut Cons(_, ref mut next) =&gt; node = next,\n                other =&gt; return other,\n            }\n        }\n    }\n\n    fn append_ref(&amp;mut self, elem: u32) {        \n        *self.back() = Cons(elem, Box::new(Nil));\n    }\n\n    fn append(mut self, elem: u32) -&gt; Self {\n        self.append_ref(elem);\n        self\n    }\n}\n\nfn main() {\n    let n = Nil;\n    let n = n.append(1);\n    println!(\"{:?}\", n);\n    let n = n.append(2);\n    println!(\"{:?}\", n);\n    let n = n.append(3);\n    println!(\"{:?}\", n);\n}\n</code></pre>\n\n<hr>\n\n<p>When <a href=\"https://stackoverflow.com/questions/50251487/what-are-non-lexical-lifetimes\">non-lexical lifetimes</a> are enabled, this function can be more obvious:</p>\n\n<pre><code>fn back(&amp;mut self) -&gt; &amp;mut List {\n    let mut node = self;\n\n    while let Cons(_, next) = node {\n        node = next;\n    }\n\n    node\n}\n</code></pre>\n"}], "owner": {"reputation": 20499, "user_id": 446921, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/db9ae27234bc59746a27fd63accabd12?s=128&d=identicon&r=PG", "display_name": "Muhd", "link": "https://stackoverflow.com/users/446921/muhd"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 831, "favorite_count": 0, "accepted_answer_id": 43980606, "answer_count": 3, "score": 6, "last_activity_date": 1535487168, "creation_date": 1494843082, "last_edit_date": 1494852585, "question_id": 43976787, "link": "https://stackoverflow.com/questions/43976787/adding-an-append-method-to-a-singly-linked-list", "title": "Adding an append method to a singly linked list", "body": "<p>I was looking through the <a href=\"http://rustbyexample.com/custom_types/enum/testcase_linked_list.html\" rel=\"noreferrer\">singly linked list example on rustbyexample.com</a> and I noticed the implementation had no <code>append</code> method, so I decided to try and implement it:</p>\n\n<pre><code>fn append(self, elem: u32) -&gt; List {\n    let mut node = &amp;self;\n    loop { \n        match *node {\n            Cons(_, ref tail) =&gt; {\n                node = tail;\n            },\n            Nil =&gt; {\n                node.prepend(elem);\n                break;\n            },\n        }\n    }\n    return self;\n}\n</code></pre>\n\n<p>The above is one of many different attempts, but I cannot seem to find a way to iterate down to the tail and modify it, then somehow return the head, without upsetting the borrow checker in some way.</p>\n\n<p>I am trying to figure out a solution that doesn't involve copying data or doing additional bookkeeping outside the <code>append</code> method.</p>\n"}, {"tags": ["rust", "serde"], "comments": [{"owner": {"reputation": 1343, "user_id": 4365239, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/88acc4986ddaf51e21c254fb8c0f11b8?s=128&d=identicon&r=PG&f=1", "display_name": "tafia", "link": "https://stackoverflow.com/users/4365239/tafia"}, "edited": false, "score": 1, "creation_date": 1494835743, "post_id": 43973225, "comment_id": 74978322, "body": "The <code>Map</code> is not  a <code>Value</code>, have you tried <code>Err(Value::Object(obj))</code>?"}, {"owner": {"reputation": 651, "user_id": 5223795, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/ef3abe0f20c34e1325db295fab0c1be9?s=128&d=identicon&r=PG&f=1", "display_name": "Boris", "link": "https://stackoverflow.com/users/5223795/boris"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1494838959, "post_id": 43973225, "comment_id": 74980195, "body": "@LukasKalbertodt I edited my initial post as asked"}, {"owner": {"reputation": 651, "user_id": 5223795, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/ef3abe0f20c34e1325db295fab0c1be9?s=128&d=identicon&r=PG&f=1", "display_name": "Boris", "link": "https://stackoverflow.com/users/5223795/boris"}, "reply_to_user": {"reputation": 1343, "user_id": 4365239, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/88acc4986ddaf51e21c254fb8c0f11b8?s=128&d=identicon&r=PG&f=1", "display_name": "tafia", "link": "https://stackoverflow.com/users/4365239/tafia"}, "edited": false, "score": 0, "creation_date": 1494839213, "post_id": 43973225, "comment_id": 74980357, "body": "@tafia seems to work. I got some more compiler error re moves and borrows which I will look into but at least that compiler issue is gone. Indeed a Map is not a Value but a Value::Object; thanks for pointing it out"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1526665476, "last_edit_date": 1526665476, "creation_date": 1494852181, "answer_id": 43979881, "question_id": 43973225, "link": "https://stackoverflow.com/questions/43973225/is-there-a-way-to-convert-a-serde-map-into-a-value/43979881#43979881", "title": "Is there a way to convert a Serde Map into a Value?", "body": "<blockquote>\n  <p>an <code>Object</code> / <code>Map&lt;String, Value&gt;</code> is a <code>Value</code></p>\n</blockquote>\n\n<p>No, it is not. <code>Value</code> is a type. <code>Map&lt;String, Value&gt;</code> is a type. <code>Value::Object</code> is an <em>enum variant</em>, which is not a separate type. In this case, <code>Value::Object</code> holds another value of type <code>Map&lt;String, Value&gt;</code>. You have to wrap the value in the variant to convert the type:</p>\n\n<pre><code>Err(serde_json::Value::Object(obj))\n</code></pre>\n\n<p>This will lead you to the problem:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:57:55\n   |\n57 |                         Err(serde_json::Value::Object(obj))\n   |                                                       ^^^ expected struct `serde_json::Map`, found reference\n   |\n   = note: expected type `serde_json::Map&lt;std::string::String, serde_json::Value&gt;`\n              found type `&amp;serde_json::Map&lt;std::string::String, serde_json::Value&gt;`\n</code></pre>\n\n<p><code>as_object</code> returns a reference to the contained object (if it's present), not the value itself. You will need to <code>match</code> on it for now:</p>\n\n<pre><code>let converted_json = match json {\n    serde_json::Value::Object(obj) =&gt; {}\n    _ =&gt; {}\n};\n</code></pre>\n\n<p>Something like this:</p>\n\n<pre><code>let converted_json = match json {\n    serde_json::Value::Object(obj) =&gt; {\n        if obj.is_valid_wrapper() {\n            let mut w = Wrapper::ok();\n            w.data(obj[\"data\"].clone());\n            Ok(w.finalize())\n        } else {\n            Err(serde_json::Value::Object(obj))\n        }\n    }\n    other =&gt; Err(other),\n};\n</code></pre>\n"}], "owner": {"reputation": 651, "user_id": 5223795, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/ef3abe0f20c34e1325db295fab0c1be9?s=128&d=identicon&r=PG&f=1", "display_name": "Boris", "link": "https://stackoverflow.com/users/5223795/boris"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1683, "favorite_count": 1, "accepted_answer_id": 43979881, "answer_count": 1, "score": 4, "last_activity_date": 1526665476, "creation_date": 1494831517, "last_edit_date": 1526664918, "question_id": 43973225, "link": "https://stackoverflow.com/questions/43973225/is-there-a-way-to-convert-a-serde-map-into-a-value", "title": "Is there a way to convert a Serde Map into a Value?", "body": "<p>As per the Serde specification, an <code>Object</code> / <code>Map&lt;String, Value&gt;</code> is a <code>Value</code>:</p>\n\n<pre><code>pub enum Value {\n    Null,\n    Bool(bool),\n    Number(Number),\n    String(String),\n    Array(Vec&lt;Value&gt;),\n    Object(Map&lt;String, Value&gt;),\n}\n</code></pre>\n\n<p>Yet when I compile this code:</p>\n\n<pre><code>extern crate serde;\n#[macro_use]\nextern crate serde_json;\n\n#[derive(Debug)]\nstruct Wrapper {\n    ok: bool,\n    data: Option&lt;serde_json::Value&gt;,\n}\n\nimpl Wrapper {\n    fn ok() -&gt; Wrapper {\n        Wrapper {\n            ok: true,\n            data: None,\n        }\n    }\n\n    pub fn data(&amp;mut self, data: serde_json::Value) -&gt; &amp;mut Wrapper {\n        self.data = Some(data);\n        self\n    }\n\n    pub fn finalize(self) -&gt; Wrapper {\n        self\n    }\n}\n\ntrait IsValidWrapper {\n    fn is_valid_wrapper(&amp;self) -&gt; bool;\n}\n\nimpl IsValidWrapper for serde_json::Map&lt;std::string::String, serde_json::Value&gt; {\n    fn is_valid_wrapper(&amp;self) -&gt; bool {\n        self[\"ok\"].as_bool().unwrap_or(false)\n    }\n}\n\nfn main() {\n    let json = json!({\n          \"name\": \"John Doe\",\n          \"age\": 43,\n          \"phones\": [\n            \"+44 1234567\",\n            \"+44 2345678\"\n          ]\n        });\n\n    let converted_json: Wrapper = json\n        .as_object()\n        .map_or_else(\n            || Err(json),\n            |obj| {\n                if obj.is_valid_wrapper() {\n                    Ok(Wrapper::ok().data(obj[\"data\"].clone()).finalize())\n                } else {\n                    Err(*obj as serde_json::Value)\n                }\n            },\n        )\n        .unwrap_or_else(|data| Wrapper::ok().data(data.clone()).finalize());\n    println!(\n        \"org json = {:?} =&gt; converted json = {:?}\",\n        json, converted_json\n    );\n}\n</code></pre>\n\n<p>I get this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0605]: non-primitive cast: `serde_json::Map&lt;std::string::String, serde_json::Value&gt;` as `serde_json::Value`\n  --&gt; src/main.rs:60:25\n   |\n60 |                     Err(*obj as serde_json::Value)\n   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: an `as` expression can only be used to convert between primitive types. Consider using the `From` trait\n</code></pre>\n\n<p>Is there a way to downcast a <code>Map</code> into a <code>Value</code>?</p>\n"}, {"tags": ["security", "rust", "filenames", "sanitization"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1494831903, "post_id": 43973219, "comment_id": 74976342, "body": "Could you elaborate on what exactly this function should do? Decide whether or not a given filename is potentially dangerous? Or something else? Maybe some examples? :)"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 5, "creation_date": 1494832366, "post_id": 43973219, "comment_id": 74976555, "body": "Given the number and breadth of filesystems in use, and how they work, I&#39;m not sure any such code <i>could</i> be written.  For example, <code>nul</code> was not a problem because of Windows, it was a problem because of how Git is written.  Are filenames that would undergo canonicalisation when written on macOS dangerous?  Files that could be interpreted as switches?  On which OSes, with which shells?  Are spaces dangerous?  Invalid characters?  Where do you draw the line?"}, {"owner": {"reputation": 730, "user_id": 3283003, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/969f644f75512332a20f0ea1ff6e64d0?s=128&d=identicon&r=PG&f=1", "display_name": "Squirrel", "link": "https://stackoverflow.com/users/3283003/squirrel"}, "edited": false, "score": 0, "creation_date": 1497992954, "post_id": 43973219, "comment_id": 76311752, "body": "While the OS will tell you if a filename would not be legal, it won&#39;t indicate in which way one should convert the input such that the input is a legal filename. Is there an equivilent to .net&#39;s IO.Path.GetInvalidFileNameChars such that one could know from the OS what would be legitimate?"}], "answers": [{"comments": [{"owner": {"reputation": 730, "user_id": 3283003, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/969f644f75512332a20f0ea1ff6e64d0?s=128&d=identicon&r=PG&f=1", "display_name": "Squirrel", "link": "https://stackoverflow.com/users/3283003/squirrel"}, "edited": false, "score": 1, "creation_date": 1497993207, "post_id": 43979627, "comment_id": 76311864, "body": "Agreed, not unsafe in any way. I was just alluding that striping/changing invalid chars is necessary but not always sufficient for a filename to be valid."}], "tags": [], "owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "is_accepted": false, "score": 5, "last_activity_date": 1494853502, "last_edit_date": 1494853502, "creation_date": 1494851400, "answer_id": 43979627, "question_id": 43973219, "link": "https://stackoverflow.com/questions/43973219/is-there-a-safe-sanitised-filename-function-in-rust/43979627#43979627", "title": "Is there a safe / sanitised filename function in Rust", "body": "<p>\"Safe\" mostly depends on your threat model.</p>\n\n<p>If you simply want to avoid your filesystem from being corrupted through bad filenames, then there's good news, you don't need to do anything since filesystem APIs will reject invalid names with errors. Although if you want <em>file names</em> and not paths you either have to be careful to not use APIs that take <code>AsRef&lt;Path&gt;</code> or strip path separators (see <code>std::path::is_separator</code>), since they will accept absolute or relative paths.</p>\n\n<p>If you need to handle relative paths from untrusted inputs you will at least have to strip <code>..</code> paths to stop directory traversal attacks.</p>\n\n<p>If you want to avoid attacks on the human instead of the software you will have to do a lot of sanitizing, such as removing Unicode text direction overrides which could mislead the user about file extensions.</p>\n\n<blockquote>\n  <p>The recent 'nul' crate demonstrates that there's a few OS-specific gotchas.</p>\n</blockquote>\n\n<p>That was not an issue with things being <em>unsafe</em> on a particular platform. The issue here is one of cross-platform compatibility. Something that works on UNIX systems did not translate nicely to Windows systems. But the Windows systems failed safely, it simply caused an error and Cargo handled that error in a particular way (stopping the update). It could have chosen to handle the failure in a different way, e.g. by skipping that one particular crate or by mangling the filename.</p>\n"}], "owner": {"reputation": 730, "user_id": 3283003, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/969f644f75512332a20f0ea1ff6e64d0?s=128&d=identicon&r=PG&f=1", "display_name": "Squirrel", "link": "https://stackoverflow.com/users/3283003/squirrel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 700, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1494853502, "creation_date": 1494831491, "question_id": 43973219, "link": "https://stackoverflow.com/questions/43973219/is-there-a-safe-sanitised-filename-function-in-rust", "title": "Is there a safe / sanitised filename function in Rust", "body": "<p>Given that rolling one's own is not usually a great security idea, is there a crate or library function in Rust to sanitise a filename? The recent 'nul' crate demonstrates that there's a few OS-specific gotchas.</p>\n"}, {"tags": ["hashmap", "rust", "key"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1494852299, "post_id": 43971538, "comment_id": 74988753, "body": "You don&#39;t need to say <code>HashMap&lt;_, _&gt;</code>; the compiler will infer the types based on what you insert. You can just say <code>let mut map = HashMap::new();</code>"}, {"owner": {"reputation": 651, "user_id": 5223795, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/ef3abe0f20c34e1325db295fab0c1be9?s=128&d=identicon&r=PG&f=1", "display_name": "Boris", "link": "https://stackoverflow.com/users/5223795/boris"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1494889424, "post_id": 43971538, "comment_id": 75009219, "body": "Indeed. Thanks for that @Shepmaster"}], "answers": [{"comments": [{"owner": {"reputation": 651, "user_id": 5223795, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/ef3abe0f20c34e1325db295fab0c1be9?s=128&d=identicon&r=PG&f=1", "display_name": "Boris", "link": "https://stackoverflow.com/users/5223795/boris"}, "edited": false, "score": 0, "creation_date": 1494889253, "post_id": 43973377, "comment_id": 75009170, "body": "thanks @tafia for the solution and indeed the addition of the contraints to K"}], "tags": [], "owner": {"reputation": 1343, "user_id": 4365239, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/88acc4986ddaf51e21c254fb8c0f11b8?s=128&d=identicon&r=PG&f=1", "display_name": "tafia", "link": "https://stackoverflow.com/users/4365239/tafia"}, "is_accepted": true, "score": 0, "last_activity_date": 1494852327, "last_edit_date": 1494852327, "creation_date": 1494832158, "answer_id": 43973377, "question_id": 43971538, "link": "https://stackoverflow.com/questions/43971538/adding-a-generic-contain-keys-method-to-a-hashmap-that-works-with-str-and/43973377#43973377", "title": "Adding a generic &#39;contain_keys&#39; method to a HashMap that works with &amp;[&amp;str] and &amp;[String]", "body": "<p>tl;dr, this is a generic solution which doesn't restrict you to <code>String</code>:</p>\n\n<pre><code>use std::borrow::Borrow;\nuse std::hash::Hash;\nuse std::collections::HashMap;\n\npub trait ContainKeys&lt;K: Hash + Eq&gt; {\n    fn contains_keys&lt;Q: ?Sized&gt;(&amp;self, keys: &amp;[&amp;Q]) -&gt; bool\n        where K: Borrow&lt;Q&gt;,\n              Q: Hash + Eq + Ord;\n}\n\nimpl&lt;V, K: Hash + Eq&gt; ContainKeys&lt;K&gt; for HashMap&lt;K, V&gt; {\n    fn contains_keys&lt;Q: ?Sized&gt;(&amp;self, some_keys: &amp;[&amp;Q]) -&gt; bool\n        where K: Borrow&lt;Q&gt;,\n              Q: Hash + Eq + Ord\n    {\n        some_keys.iter().all(|key| self.contains_key(key))\n    }\n}\n\nfn main() {\n    let mut map: HashMap&lt;String, _&gt; = HashMap::new();\n    map.insert(\"key 1\".to_string(), \"value 1\");\n    map.insert(\"key 2\".to_string(), \"value 2\");\n\n    println!(\"map = {:?}\", map);\n\n    assert_eq!(map.contains_keys(&amp;[\"key 1\", \"key 2\"]), true);\n    assert_eq!(map.contains_keys(&amp;[\"key 1\", \"key 3\"]), false);\n}\n</code></pre>\n\n<p>In the documentation, both <code>K</code> and <code>Q</code> must implement <code>Hash + Eq</code>.</p>\n\n<p>I also had to change the trait signature so <code>Q: &amp;Sized</code> ... which means I had to say: <code>keys: &amp;[&amp;Q]</code> so every key is <code>Sized</code>.</p>\n"}], "owner": {"reputation": 651, "user_id": 5223795, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/ef3abe0f20c34e1325db295fab0c1be9?s=128&d=identicon&r=PG&f=1", "display_name": "Boris", "link": "https://stackoverflow.com/users/5223795/boris"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 374, "favorite_count": 0, "accepted_answer_id": 43973377, "answer_count": 1, "score": 1, "last_activity_date": 1494852327, "creation_date": 1494822185, "last_edit_date": 1494852263, "question_id": 43971538, "link": "https://stackoverflow.com/questions/43971538/adding-a-generic-contain-keys-method-to-a-hashmap-that-works-with-str-and", "title": "Adding a generic &#39;contain_keys&#39; method to a HashMap that works with &amp;[&amp;str] and &amp;[String]", "body": "<p>I would like to add a <code>contain_keys()</code> method to a <code>HashMap</code> to test whether it contains several keys.</p>\n\n<p>I tested the following implementation:</p>\n\n<pre><code>use std::borrow::Borrow;\nuse std::hash::Hash;\nuse std::collections::HashMap;\n\npub trait ContainKeys&lt;K&gt; {\n    fn contains_keys&lt;Q&gt;(&amp;self, keys: &amp;[Q]) -&gt; bool\n        where K: Borrow&lt;Q&gt;,\n              Q: Sized + Hash + Eq + Ord;\n}\n\nimpl&lt;V&gt; ContainKeys&lt;String&gt; for HashMap&lt;String, V&gt; {\n    fn contains_keys&lt;Q&gt;(&amp;self, some_keys: &amp;[Q]) -&gt; bool\n        where String: Borrow&lt;Q&gt;,\n              Q: Sized + Hash + Eq + Ord\n    {\n        some_keys.iter().all(|ref key| self.contains_key(key))\n    }\n}\n\nfn main() {\n    let mut map: HashMap&lt;String, _&gt; = HashMap::new();\n    map.insert(\"key 1\".to_string(), \"value 1\");\n    map.insert(\"key 2\".to_string(), \"value 2\");\n\n    println!(\"map = {:?}\", map);\n\n    assert_eq!(map.contains_keys(&amp;[\"key 1\".to_string(), \"key 2\".to_string()]),\n               true);\n    assert_eq!(map.contains_keys(&amp;[\"key 1\".to_string(), \"key 3\".to_string()]),\n               false);\n}\n</code></pre>\n\n<p>I had to increase to <code>?Sized</code> requirement from the original <code>contain_key()</code> method since I was passing a <code>&amp;[Q]</code>.</p>\n\n<p>It compiles and runs but I find it quite cumbersome to have to add all these <code>to_string()</code> to the keys. </p>\n\n<p>Is there a better (ideally generic) implementation that could work using a syntax like the following:</p>\n\n<pre><code>fn main() {\n    let mut map: HashMap&lt;_, _&gt; = HashMap::new();\n    map.insert(\"key 1\", \"value 1\");\n    map.insert(\"key 2\", \"value 2\");\n\n    println!(\"map = {:?}\", map);\n\n    assert_eq!(map.contains_keys(&amp;[\"key 1\", \"key 2\"]), true);\n    assert_eq!(map.contains_keys(&amp;[\"key 1\", \"key 3\"]), false);\n}\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 35314, "user_id": 344347, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/1d83837bce9d9a2656c4f5704d40c430?s=128&d=identicon&r=PG", "display_name": "Pavel Strakhov", "link": "https://stackoverflow.com/users/344347/pavel-strakhov"}, "is_accepted": true, "score": 1, "last_activity_date": 1494814185, "creation_date": 1494814185, "answer_id": 43970642, "question_id": 43970529, "link": "https://stackoverflow.com/questions/43970529/rust-conflict-with-error-chain-and-websocket-crates/43970642#43970642", "title": "Rust conflict with error-chain and websocket crates", "body": "<p>A simple solution would be to introduce a type alias:</p>\n\n<pre><code>mod errors {\n    type WebSocketError = (::std::net::TcpStream, ::std::io::Error);\n    error_chain! {\n        foreign_links {\n            WebSock(WebSocketError);\n        }\n    }\n}\n</code></pre>\n\n<p>However, this type does not implement traits required by error-chain (such as <code>Error</code> and <code>Display</code>), so it can't be used there.</p>\n\n<p>I think the simplest solution is to convert the error manually using <code>Result::map_err</code> before passing the value to error-chain. For example, the following construction will produce <code>Result&lt;Client&lt;S&gt;, IoError&gt;</code>:</p>\n\n<pre><code>x.accept().map_err(|e| e.1)\n</code></pre>\n"}], "owner": {"reputation": 3662, "user_id": 3126, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/acd5a081214db2b3ad1bb64581d3eeed?s=128&d=identicon&r=PG", "display_name": "newdayrising", "link": "https://stackoverflow.com/users/3126/newdayrising"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 174, "favorite_count": 0, "accepted_answer_id": 43970642, "answer_count": 1, "score": 0, "last_activity_date": 1494814332, "creation_date": 1494813200, "last_edit_date": 1494814332, "question_id": 43970529, "link": "https://stackoverflow.com/questions/43970529/rust-conflict-with-error-chain-and-websocket-crates", "title": "Rust conflict with error-chain and websocket crates", "body": "<p>I'm trying to use error-chain with the websocket crate, but running into an issue that I'm not sure how to resolve. <a href=\"http://cyderize.github.io/rust-websocket/doc/websocket/server/upgrade/struct.WsUpgrade.html#method.accept\" rel=\"nofollow noreferrer\"><code>WsUpgrade::accept</code></a> has the following signature:</p>\n\n<pre><code>fn accept(self) -&gt; Result&lt;Client&lt;S&gt;, (S, IoError)&gt;\n</code></pre>\n\n<p>Note that the <code>Err</code> variant is a tuple. I want to configure error-chain to handle calls to this method, so I tried to do so as follows in the relevant consuming module:</p>\n\n<pre><code>mod errors {\n    error_chain! {\n        foreign_links {\n            WebSock((::std::net::TcpStream, ::std::io::Error));\n        }\n    }\n}\n</code></pre>\n\n<p>This results in the following error, seemingly related to the presence of the tuple.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: expected identifier, found `(`\n  --&gt; src/lib/websock.rs:23:21\n   |\n23 |             WebSock((::std::net::TcpStream, ::std::io::Error));\n   |                     ^\n</code></pre>\n\n<p>How can I resolve this? Hopefully I've missed something simple.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 18468, "user_id": 5249307, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c640cd731ca8e455d79860519b6b208?s=128&d=identicon&r=PG", "display_name": "donkopotamus", "link": "https://stackoverflow.com/users/5249307/donkopotamus"}, "edited": false, "score": 0, "creation_date": 1494803449, "post_id": 43969314, "comment_id": 74969239, "body": "<code>static</code> does not take a pattern"}], "answers": [{"comments": [{"owner": {"reputation": 13014, "user_id": 4140572, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/2uRSa.png?s=128&g=1", "display_name": "Angel Angel", "link": "https://stackoverflow.com/users/4140572/angel-angel"}, "edited": false, "score": 0, "creation_date": 1494804144, "post_id": 43969595, "comment_id": 74969367, "body": "Thanks for your help again, I use mpsc locally, but I wanted to do some tests and I found the previous &quot;error&quot;, but now it becomes clear to me what can be static"}], "tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 2, "last_activity_date": 1494805037, "last_edit_date": 1494805037, "creation_date": 1494803126, "answer_id": 43969595, "question_id": 43969314, "link": "https://stackoverflow.com/questions/43969314/error-when-creating-a-static-variable-expected-identifier-found/43969595#43969595", "title": "Error when creating a static variable: &#39;expected identifier, found `(` &#39;", "body": "<p>As you well found out in your last attempt, the same issue can be reproduced more easily:</p>\n\n<pre><code>static (A, B): (i32, i32) = (1, 2);\n</code></pre>\n\n<p>According to the Rust reference, the grammar for a static binding is defined as thus:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>static_item : \"static\" ident ':' type '=' expr ';' ;\n</code></pre>\n\n<p>Mutable statics, although not included, is most likely defined to include \n<code>mut</code> after <code>static</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>mut_static_item : \"static\" \"mut\" ident ':' type '=' expr ';' ;\n</code></pre>\n\n<p>The compiler fails to parse your statement because it expects an <em>identifier</em>, not a <em>pattern</em>. This contrasts with <code>let</code> binding declarations, which accept a pattern after the keyword <code>let</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>let_decl : \"let\" pat [':' type ] ? [ init ] ? ';' ;\ninit : [ '=' ] expr ;\n</code></pre>\n\n<p>On this end, you have no choice but not to use patterns to declare static or const variables.</p>\n\n<p>In your former case of <code>mpsc</code> channels, even this limitation would not solve your problem, since static bindings contain many other restrictions: consider for instance the declaration of a static <code>Vec</code>:</p>\n\n<pre><code>static moo: Vec&lt;i32&gt; = Vec::with_capacity(10);\n</code></pre>\n\n<p>This would yield the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0015]: calls in statics are limited to struct and enum constructors\n --&gt; src/main.rs:1:24\n  |\n1 | static moo: Vec&lt;i32&gt; = Vec::with_capacity(10);\n  |                        ^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>Channels are meant to be created locally and their endpoints sent to other threads from there. The documentation on the <a href=\"https://doc.rust-lang.org/stable/std/sync/mpsc/index.html\" rel=\"nofollow noreferrer\"><code>mpsc</code></a> module provides some examples.</p>\n"}], "owner": {"reputation": 13014, "user_id": 4140572, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/2uRSa.png?s=128&g=1", "display_name": "Angel Angel", "link": "https://stackoverflow.com/users/4140572/angel-angel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 735, "favorite_count": 0, "accepted_answer_id": 43969595, "answer_count": 1, "score": 0, "last_activity_date": 1494805037, "creation_date": 1494800081, "last_edit_date": 1494804991, "question_id": 43969314, "link": "https://stackoverflow.com/questions/43969314/error-when-creating-a-static-variable-expected-identifier-found", "title": "Error when creating a static variable: &#39;expected identifier, found `(` &#39;", "body": "<p>I am trying to create global variables but I got multiple compilation errors in the process.\nFirst I tried this:</p>\n\n<pre><code>static mut (tx, rx): (mpsc::Sender&lt;bool&gt;, mpsc::Receiver&lt;bool&gt;) = mpsc::channel();\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: expected identifier, found `(`\n\n|\n109 | static mut (tx, rx): (mpsc::Sender&lt;bool&gt;, mpsc::Receiver&lt;bool&gt;) = mpsc::channel();\n                 ^\n|\n</code></pre>\n\n<p>Then I have tried some other forms but it seems that they always give me a similar error:</p>\n\n<pre><code>thread_local!(static mut (tx, rx): (mpsc::Sender&lt;bool&gt;, mpsc::Receiver&lt;bool&gt;) = mpsc::channel());\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: no rules expected the token `(`\n\n|\n109 | thread_local!(static mut (tx, rx): (mpsc::Sender&lt;bool&gt;, mpsc::Receiver&lt;bool&gt;) = mpsc::channel());\n                               ^\n|\n</code></pre>\n\n<p>Finally, and in case this helps others to respond, it also happens with this:</p>\n\n<pre><code>static (x, y, z) = (1, 2, 3);\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: expected identifier, found `(`\n\n    |\n109 | static (x, y, z) = (1, 2, 3);\n    |        ^\n</code></pre>\n\n<p>Maybe it is some error when creating the tuples from a static declaration, but I'm new to Rust, so I do not know if this is true.</p>\n"}, {"tags": ["hash", "cryptography", "rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 2, "creation_date": 1494795571, "post_id": 43968723, "comment_id": 74967405, "body": "Please include why you think that isn&#39;t correct. Have you tested the function? What inputs (possibly with known expected outputs) have you used?"}, {"owner": {"reputation": 729, "user_id": 1229165, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/56b36edf3c8dbf296bee4094376e82c7?s=128&d=identicon&r=PG", "display_name": "Wilfred", "link": "https://stackoverflow.com/users/1229165/wilfred"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1494795859, "post_id": 43968723, "comment_id": 74967477, "body": "It doesn&#39;t compile so I can&#39;t test the function. I don&#39;t know how to convert a <a href=\"https://dnaq.github.io/sodiumoxide/sodiumoxide/crypto/hash/sha256/struct.Digest.html\" rel=\"nofollow noreferrer\">digest</a> into a string."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1494796014, "post_id": 43968723, "comment_id": 74967517, "body": "Assuming that you understand that the hash is simply a vector of bytes, it is fairly clear that interpreting them as a UTF-8 string is wrong. You might want to convert it to a textual representation (hex, Base64, etc.). Again, can you provide an input and expected output?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1494796050, "post_id": 43968723, "comment_id": 74967523, "body": "Could you provide the compiler error?"}, {"owner": {"reputation": 729, "user_id": 1229165, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/56b36edf3c8dbf296bee4094376e82c7?s=128&d=identicon&r=PG", "display_name": "Wilfred", "link": "https://stackoverflow.com/users/1229165/wilfred"}, "edited": false, "score": 0, "creation_date": 1494796433, "post_id": 43968723, "comment_id": 74967625, "body": "I edited the code so that it uses <code>String</code> instead of <code>str</code>. I understand that a hash is a vector of bytes and I would like to convert it to a String which is why I&#39;m using the <a href=\"https://doc.rust-lang.org/std/string/struct.String.html#method.from_utf8\" rel=\"nofollow noreferrer\">from_utf8</a> method. Example input: &quot;hello world&quot;, output: &quot;b94d27b9934d3e08a52e52d7da7dabfac484efe37a5380ee9088f7ace2e&zwnj;&#8203;fcde9&quot;"}, {"owner": {"reputation": 729, "user_id": 1229165, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/56b36edf3c8dbf296bee4094376e82c7?s=128&d=identicon&r=PG", "display_name": "Wilfred", "link": "https://stackoverflow.com/users/1229165/wilfred"}, "edited": false, "score": 0, "creation_date": 1494796597, "post_id": 43968723, "comment_id": 74967672, "body": "Compiler error is : expected struct <code>std::vec::Vec</code>, found struct <code>sodiumoxide::crypto::hash::sha256::Digest</code>.  This makes sense to me but I don&#39;t know how to get the underlying byte array out of the Digest struct."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1494796797, "post_id": 43968723, "comment_id": 74967739, "body": "And how did you arrive at that sequence of characters from a set of bytes? Did you maybe use some algorithm like &quot;(hex, Base64, etc.)&quot;? Perhaps you would be so kind as to <i>share that algorithm with us</i>?"}, {"owner": {"reputation": 729, "user_id": 1229165, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/56b36edf3c8dbf296bee4094376e82c7?s=128&d=identicon&r=PG", "display_name": "Wilfred", "link": "https://stackoverflow.com/users/1229165/wilfred"}, "edited": false, "score": 0, "creation_date": 1494797746, "post_id": 43968723, "comment_id": 74967980, "body": "I did that with with the code I just added to the question."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1494797964, "post_id": 43968723, "comment_id": 74968033, "body": "That function outputs the hash in hexadecimal format. <a href=\"https://docs.rs/rust-crypto/0.2.36/crypto/digest/trait.Digest.html#method.result_str\" rel=\"nofollow noreferrer\">docs.rs/rust-crypto/0.2.36/crypto/digest/&hellip;</a>"}], "answers": [{"comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1494798742, "post_id": 43969047, "comment_id": 74968217, "body": "Note that <code>write!(f, &quot;{:X}&quot;, byte)</code> only writes one digit if the byte&#39;s value is less than 16. When printing hashes as hex, you usually want to print each byte with 2 digits. That&#39;s what the <a href=\"https://crates.io/crates/hex\" rel=\"nofollow noreferrer\"><code>hex</code> crate</a> is doing."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1494799745, "post_id": 43969047, "comment_id": 74968465, "body": "@LukasKalbertodt yep! The linked question/answer discusses such nuances (also upper/lower, padding between bytes, etc.)"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1494814421, "last_edit_date": 1495542867, "creation_date": 1494797965, "answer_id": 43969047, "question_id": 43968723, "link": "https://stackoverflow.com/questions/43968723/how-to-hash-a-string-using-the-sodiumoxide-crate/43969047#43969047", "title": "How to hash a string using the sodiumoxide crate?", "body": "<p>From the documentation you linked, <a href=\"https://dnaq.github.io/sodiumoxide/sodiumoxide/crypto/hash/sha256/struct.Digest.html\" rel=\"nofollow noreferrer\"><code>Digest</code></a> is defined as:</p>\n\n<pre><code>pub struct Digest(pub [u8; 32]);\n</code></pre>\n\n<p>You can get access to those bytes by using the tuple index notation: <code>foo.0</code>. It also implements <code>AsRef&lt;[u8]&gt;</code>.</p>\n\n<p>Then you can just use one of the existing answers to convert a slice to hex, such as those in <a href=\"https://stackoverflow.com/questions/27650312/show-u8-slice-in-hex-representation\">Show u8 slice in hex representation</a>.</p>\n\n<pre><code>extern crate sodiumoxide;\n\nuse sodiumoxide::crypto::hash::sha256;\nuse std::fmt;\n\npub fn hash_string(s: &amp;str) -&gt; String {\n    let digest = sha256::hash(s.as_bytes());\n    format!(\"{:X}\", HexSlice::new(&amp;digest))\n}\n\nstruct HexSlice&lt;'a&gt;(&amp;'a [u8]);\n\nimpl&lt;'a&gt; HexSlice&lt;'a&gt; {\n    fn new&lt;T&gt;(data: &amp;'a T) -&gt; HexSlice&lt;'a&gt;\n        where T: ?Sized + AsRef&lt;[u8]&gt; + 'a\n    {\n        HexSlice(data.as_ref())\n    }\n}\n\nimpl&lt;'a&gt; fmt::UpperHex for HexSlice&lt;'a&gt; {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        for byte in self.0 {\n            // Decide if you want upper- or lowercase results,\n            // padding the values to two characters, spaces\n            // between bytes, etc.\n            write!(f, \"{:X}\", byte)?;\n        }\n        Ok(())\n    }\n}\n\nfn main() {\n    let h = hash_string(\"hello world\");\n    println!(\"{}\", h);\n}\n</code></pre>\n\n<p>Note that there's no benefit to taking an owned <code>String</code>as we don't make use of the allocation.</p>\n"}], "owner": {"reputation": 729, "user_id": 1229165, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/56b36edf3c8dbf296bee4094376e82c7?s=128&d=identicon&r=PG", "display_name": "Wilfred", "link": "https://stackoverflow.com/users/1229165/wilfred"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 426, "favorite_count": 0, "accepted_answer_id": 43969047, "answer_count": 1, "score": 0, "last_activity_date": 1494814421, "creation_date": 1494795489, "last_edit_date": 1494798000, "question_id": 43968723, "link": "https://stackoverflow.com/questions/43968723/how-to-hash-a-string-using-the-sodiumoxide-crate", "title": "How to hash a string using the sodiumoxide crate?", "body": "<p>I'm trying to use the SHA256 hash function provided by <a href=\"https://dnaq.github.io/sodiumoxide/sodiumoxide/index.html\" rel=\"nofollow noreferrer\">sodiumoxide</a> to write a <code>hash_string</code> function. This function should accept a string and return the hash of the string represented as a string.</p>\n\n<p>Here's what I have so far:</p>\n\n<pre><code>extern crate sodiumoxide;\n\nuse std::string::String;\nuse sodiumoxide::crypto::hash::sha256;\n\npub fn hash_string(s: String) -&gt; String {\n    let digest = sha256::hash(&amp;s.into_bytes());\n    String::from_utf8_unchecked(digest).to_owned()\n}\n</code></pre>\n\n<p>Clearly this isn't correct but I don't know how to fix it.</p>\n\n<p>I was able to implement this with the <a href=\"https://github.com/DaGenix/rust-crypto/\" rel=\"nofollow noreferrer\">rust-crypto</a> crate.</p>\n\n<pre><code>pub fn hash_string(input: String) -&gt; String {\n    let mut sha = Sha256::new();\n    sha.input_str(&amp;input);\n    sha.result_str()\n}\n</code></pre>\n\n<p>I want to do exactly the above but using the sodiumoxide crate instead.</p>\n"}, {"tags": ["module", "rust", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 13357, "user_id": 471436, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/ac8bf979af0a8c220805fb61477d7c98?s=128&d=identicon&r=PG", "display_name": "Lanbo", "link": "https://stackoverflow.com/users/471436/lanbo"}, "edited": false, "score": 0, "creation_date": 1494756581, "post_id": 43962643, "comment_id": 74955670, "body": "I was using 1.16. But thanks for the tip, it seems to work now!"}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 3, "last_activity_date": 1494756167, "creation_date": 1494756167, "answer_id": 43962643, "question_id": 43962581, "link": "https://stackoverflow.com/questions/43962581/make-nested-module-public-in-rust/43962643#43962643", "title": "Make nested module public in Rust", "body": "<p>What compiler version do you use? <a href=\"https://github.com/rust-lang/rust/pull/36289\" rel=\"nofollow noreferrer\">Since version 1.13</a>, the error message looks like this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0432]: unresolved import `math::Point`\n  --&gt; &lt;anon&gt;:16:20\n   |\n16 |     pub use math::{Point};\n   |                    ^^^^^ Did you mean `self::math`?\n</code></pre>\n\n<p>And <code>pub use self::math::{Point};</code> is in fact the solution to your question! When you <code>use</code> a path, this path is <em>always</em> an absolute path. This means it is interpreted from the root of your crate. But there is no <code>math</code> module as direct child of the root module, hence the error.</p>\n"}], "owner": {"reputation": 13357, "user_id": 471436, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/ac8bf979af0a8c220805fb61477d7c98?s=128&d=identicon&r=PG", "display_name": "Lanbo", "link": "https://stackoverflow.com/users/471436/lanbo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 108, "favorite_count": 0, "accepted_answer_id": 43962643, "answer_count": 1, "score": 1, "last_activity_date": 1494756167, "creation_date": 1494755738, "question_id": 43962581, "link": "https://stackoverflow.com/questions/43962581/make-nested-module-public-in-rust", "title": "Make nested module public in Rust", "body": "<p>I'm starting a project to learn Rust and I fail at the most basic things, like setting up a proper module structure. My code looks like this:</p>\n\n<pre><code>// src/theorem/math.rs\npub mod theorem {\n    pub mod math {\n        use std::ops::{Add, Sub};\n\n        pub struct Point {\n            x: i32,\n            y: i32,\n        }\n\n        impl Add for Point {\n            // Omitted...\n        }\n    }\n\n    pub use math::{Point};\n}\n\n#[cfg(test)]\nmod tests {\n    use theorem::math::{Point};\n\n    #[test]\n    fn add_point() {\n        let v1 = Point { x: 1, y: 1 };\n        let v2 = Point { x: 2, y: 2 };\n        assert_eq!(v1 + v1, v2);\n    }\n}\n</code></pre>\n\n<p>I tried <code>pub use</code>, and I tried to write <code>pub</code> in front of everything, everywhere, but all I get is the message</p>\n\n<pre><code>error[E0432]: unresolved import `math::Point`\n  --&gt; src/theorem/math.rs:28:20\n   |\n28 |     pub use math::{Point};\n   |                    ^^^^^ no `Point` in `math`\n</code></pre>\n\n<p>Which is a nice insight but does not help me. I read through the docs but there are no real examples for this case, but... it must be possible, right?</p>\n\n<p>I have also tried to have a proper directory structure like <code>src/theorem/math/point.rs</code> but that did not work either.</p>\n"}, {"tags": ["multithreading", "rust"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 2, "creation_date": 1494751267, "post_id": 43961436, "comment_id": 74954368, "body": "I don&#39;t think it&#39;s possible, but <code>sleep()</code> is not supposed to do that anyway. If you want to be woken up, you should do a blocking wait on something like a channel or a mutex. When you say <code>recv()</code> on a channel that is empty, the calling thread will block until the channel is not empty anymore. There is basically no difference between a blocking wait and calling <code>sleep()</code> (except, of course, that the wait might be woken up)."}, {"owner": {"reputation": 13014, "user_id": 4140572, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/2uRSa.png?s=128&g=1", "display_name": "Angel Angel", "link": "https://stackoverflow.com/users/4140572/angel-angel"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1494752756, "post_id": 43961436, "comment_id": 74954719, "body": "@LukasKalbertodt My English is not very good, but if I understand correctly what it says, it is possible that using <code>let mut result = rx.recv().unwrap();</code> Could be an alternative, but could not use <code>thread::sleep</code> In that thread, to determine how long it will be asleep by default, or until an action occurs in my program. But if, I could create a function that controls when sent by the channel, when a certain time elapses, and also that it sends through the channel when the action that activates the thread occurs. If can not wake up a thread, I think that what was commented could be a alternati"}, {"owner": {"reputation": 13014, "user_id": 4140572, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/2uRSa.png?s=128&g=1", "display_name": "Angel Angel", "link": "https://stackoverflow.com/users/4140572/angel-angel"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1494752783, "post_id": 43961436, "comment_id": 74954727, "body": "@LukasKalbertodt thanks for comment"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1494754834, "post_id": 43961436, "comment_id": 74955232, "body": "I added a complete answer with example now. I hope this explains most of your questions ^_^"}], "answers": [{"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 6, "last_activity_date": 1494754795, "creation_date": 1494754795, "answer_id": 43962458, "question_id": 43961436, "link": "https://stackoverflow.com/questions/43961436/is-it-possible-to-force-resume-a-sleeping-thread/43962458#43962458", "title": "Is it possible to force resume a sleeping thread?", "body": "<p>If you want to be woken up by an event, <code>thread::sleep()</code> is not the correct function to use, as it's not supposed to be stopped. </p>\n\n<p>There are other methods of waiting while being able to be woken up by an event (this is usually called <em>blocking</em>). Probably the easiest way is to <strong>use a channel together with <a href=\"https://doc.rust-lang.org/stable/std/sync/mpsc/struct.Receiver.html#method.recv_timeout\" rel=\"noreferrer\"><code>Receiver::recv_timeout()</code></a></strong>. Often it's also sufficient to send <code>()</code> through the channel. That way we just communicate a signal, but don't send actual data.</p>\n\n<p>If you don't want to wake up after a specific timeout, but <em>only</em> when a signal arrives, just use <a href=\"https://doc.rust-lang.org/stable/std/sync/mpsc/struct.Receiver.html#method.recv\" rel=\"noreferrer\"><code>Receiver::recv()</code></a>.</p>\n\n<hr>\n\n<p>Example with timeout:</p>\n\n<pre><code>use std::thread;\nuse std::sync::mpsc::{self, RecvTimeoutError};\nuse std::time::Duration;\nuse std::io;\n\nfn main() {\n    let (sender, receiver) = mpsc::channel();\n\n    thread::spawn(move || {\n        loop {\n            match receiver.recv_timeout(Duration::from_secs(2)) {\n                Err(RecvTimeoutError::Timeout) =&gt; {\n                    println!(\"Still waiting... I'm bored!\");\n                    // we'll try later...\n                }\n                Err(RecvTimeoutError::Disconnected) =&gt; {\n                    // no point in waiting anymore :'(\n                    break;\n                }\n                Ok(_) =&gt; {\n                    println!(\"Finally got a signal! \u2665\u2665\u2665\");\n                    // doing work now...\n                }\n            }\n        }\n    });\n\n    loop {\n        let mut s = String::new();\n        io::stdin().read_line(&amp;mut s).expect(\"reading from stdin failed\");\n        if s.trim() == \"start\" {\n            sender.send(()).unwrap();\n        }\n    }\n}\n</code></pre>\n\n<p>Here, the second thread is woken up at least every two seconds (the timeout), but also earlier once something was sent through the channel.</p>\n"}, {"comments": [{"owner": {"reputation": 158, "user_id": 2340819, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Q8hlX.jpg?s=128&g=1", "display_name": "Juan", "link": "https://stackoverflow.com/users/2340819/juan"}, "edited": false, "score": 0, "creation_date": 1576883243, "post_id": 44024250, "comment_id": 105050183, "body": "Thanks, park was the best choice in my case"}], "tags": [], "owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "is_accepted": false, "score": 1, "last_activity_date": 1495022359, "creation_date": 1495022359, "answer_id": 44024250, "question_id": 43961436, "link": "https://stackoverflow.com/questions/43961436/is-it-possible-to-force-resume-a-sleeping-thread/44024250#44024250", "title": "Is it possible to force resume a sleeping thread?", "body": "<p><code>park_timeout</code> allows timed sleeps with wakeups from <code>unpark</code>, but it can also wake up early.</p>\n\n<p>See <a href=\"https://doc.rust-lang.org/std/thread/index.html#blocking-support-park-and-unpark\" rel=\"nofollow noreferrer\">std::thread module documentation</a></p>\n"}], "owner": {"reputation": 13014, "user_id": 4140572, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/2uRSa.png?s=128&g=1", "display_name": "Angel Angel", "link": "https://stackoverflow.com/users/4140572/angel-angel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 458, "favorite_count": 0, "accepted_answer_id": 43962458, "answer_count": 2, "score": 2, "last_activity_date": 1495022359, "creation_date": 1494746997, "last_edit_date": 1494768603, "question_id": 43961436, "link": "https://stackoverflow.com/questions/43961436/is-it-possible-to-force-resume-a-sleeping-thread", "title": "Is it possible to force resume a sleeping thread?", "body": "<p>Is it possible to force resume a sleeping thread which has been paused? For example, by calling <code>sleep</code>:</p>\n\n<pre><code>std::thread::sleep(std::time::Duration::from_secs(60 * 20));\n</code></pre>\n\n<p>I know that I can communicate between threads using <code>std::sync::mpsc</code> but if the thread is asleep, this does not force it to wake up before the time indicated.</p>\n\n<p>I have thought that using <code>std::sync::mpsc</code> and maybe\n<code>Builder</code> and <code>.name</code> associated with the thread, but I do not know how to get the thread to wake up.</p>\n"}, {"tags": ["pointers", "rust", "polymorphism"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1494712368, "post_id": 43958048, "comment_id": 74947600, "body": "TL;DR: what about when there are multiple supertraits? Implement a method on <code>B</code> that returns an <code>&amp;A</code>."}], "owner": {"reputation": 1258, "user_id": 878951, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/9e067b2b71d17b193cd26e2e4bd282a2?s=128&d=identicon&r=PG", "display_name": "Fabian Schuiki", "link": "https://stackoverflow.com/users/878951/fabian-schuiki"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 30, "favorite_count": 0, "closed_date": 1494712286, "answer_count": 0, "score": 1, "last_activity_date": 1494710063, "creation_date": 1494710063, "question_id": 43958048, "link": "https://stackoverflow.com/questions/43958048/cast-sub-trait-pointer-to-super-trait-pointer", "closed_reason": "Duplicate", "title": "Cast sub-trait pointer to super-trait pointer", "body": "<p>I have a struct <code>Foo</code> that implements traits <code>A</code> and <code>B</code>, where <code>B</code> is a sub-trait of <code>A</code>. I now pass a <code>&amp;Foo</code> to function <code>alpha</code> taking a <code>&amp;B</code>, which works as expected. However, when in function <code>alpha</code> I try to pass the pointer to function <code>beta</code> which takes a <code>&amp;A</code>, the compiler complains that it expected trait <code>A</code>, but got trait <code>B</code>. See the following code:</p>\n\n<pre><code>trait A {}\ntrait B : A {}\n\nstruct Foo {}\nimpl A for Foo {}\nimpl B for Foo {}\n\nfn alpha(x: &amp;B) {\n    beta(x);\n}\n\nfn beta(x: &amp;A) {}\n</code></pre>\n\n<p>I would expect this to work, since the functions in trait <code>B</code> are a superset of the functions in <code>A</code>. So given the vtable of <code>B</code>, I should be able to construct the vtable of <code>A</code> by just picking the right function pointers. Explicit casting (<code>x as &amp;A</code>) does not help either. Why does this not work?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1494673932, "post_id": 43952104, "comment_id": 74936243, "body": "@DK. Although it is a relevant duplicate, it doesn&#39;t cover a solution for this particular case."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1494674408, "post_id": 43952104, "comment_id": 74936399, "body": "@E_net4: it&#39;s a duplicate as the question is posed.  What tipped it over the line for me was &quot;I have a reason to want to see the whole line ... this should be doable&quot; which sounds like any theoretical solution will have to play Unspecified Requirements Tennis.  If the question is modified to not be about storing an iterator, and instead about the <i>actual</i> problem and it&#39;s requirements, ping me and I&#39;ll reopen."}, {"owner": {"reputation": 421, "user_id": 4046512, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Tb3nU.png?s=128&g=1", "display_name": "Neil Roberts", "link": "https://stackoverflow.com/users/4046512/neil-roberts"}, "reply_to_user": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1494676853, "post_id": 43952104, "comment_id": 74937125, "body": "@DK. thanks for the link to the other question. Although it has a lot of helpful information I haven\u2019t been able to deduce a solution for my problem from it. In particular my case doesn\u2019t involve any moving which seems to be the main point in that question. I\u2019ve edited my question to explain the exact problem."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1494676968, "post_id": 43952104, "comment_id": 74937165, "body": "Reopened.  For context, this question was previously marked as a duplicate of: <a href=\"http://stackoverflow.com/questions/32300132/why-cant-i-store-a-value-and-a-reference-to-that-value-in-the-same-struct\" title=\"why cant i store a value and a reference to that value in the same struct\">stackoverflow.com/questions/32300132/&hellip;</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1494684102, "post_id": 43952104, "comment_id": 74939295, "body": "<i>my case doesn\u2019t involve any moving</i> \u2014 Sure it does. <code>read_line(&amp;mut self.input_buf)</code> may reallocate the <code>String</code> to increase the allocation, <b>moving</b> all of the data, invalidating any references into it (aka the <code>Chars</code> iterator)."}, {"owner": {"reputation": 421, "user_id": 4046512, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Tb3nU.png?s=128&g=1", "display_name": "Neil Roberts", "link": "https://stackoverflow.com/users/4046512/neil-roberts"}, "edited": false, "score": 0, "creation_date": 1494693980, "post_id": 43952104, "comment_id": 74942378, "body": "There seems to quite a bit of discussion of this situation here: <a href=\"https://internals.rust-lang.org/t/self-referencing-structs/418\" rel=\"nofollow noreferrer\">internals.rust-lang.org/t/self-referencing-structs/418</a> . Sounds like there isn\u2019t really a solution without adding some overhead."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 7, "last_activity_date": 1603733414, "last_edit_date": 1603733414, "creation_date": 1494713606, "answer_id": 43958470, "question_id": 43952104, "link": "https://stackoverflow.com/questions/43952104/how-can-i-store-a-chars-iterator-in-the-same-struct-as-the-string-it-is-iteratin/43958470#43958470", "title": "How can I store a Chars iterator in the same struct as the String it is iterating on?", "body": "<p>As thoroughly described in <a href=\"https://stackoverflow.com/q/32300132/155423\">Why can&#39;t I store a value and a reference to that value in the same struct?</a>, in general you can't do this because it <strong>truly is unsafe</strong>. When you move memory, you invalidate references. This is why a lot of people use Rust - to not have invalid references which lead to program crashes!</p>\n<p>Let's look at your code:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>io::stdin().read_line(&amp;mut self.input_buf)?;\nself.input_pos = self.input_buf.chars();\n</code></pre>\n<p>Between these two lines, you've left <code>self.input_pos</code> in a bad state. If a panic occurs, then the destructor of the object has the opportunity to access invalid memory! Rust is protecting you from an issue that most people never think about.</p>\n<hr />\n<p>As <em>also</em> described in that answer:</p>\n<blockquote>\n<p>There is a special case where the lifetime tracking is overzealous:\nwhen you have something placed on the heap. This occurs when you use a\n<code>Box&lt;T&gt;</code>, for example. In this case, the structure that is moved\ncontains a pointer into the heap. The pointed-at value will remain\nstable, but the address of the pointer itself will move. In practice,\nthis doesn't matter, as you always follow the pointer.</p>\n<p>Some crates provide ways of representing this case, but they require\nthat the base address <em>never move</em>. This rules out mutating vectors,\nwhich may cause a reallocation and a move of the heap-allocated\nvalues.</p>\n</blockquote>\n<p>Remember that a <code>String</code> is just a vector of bytes with extra preconditions added.</p>\n<p>Instead of using one of those crates, we can also roll our own solution, which means we (read <strong>you</strong>) get to accept all the responsibility for ensuring that we aren't doing anything wrong.</p>\n<p>The trick here is to ensure that the data inside the <code>String</code> never moves and no accidental references are taken.</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use std::{mem, str::Chars};\n\n/// I believe this struct to be safe because the String is\n/// heap-allocated (stable address) and will never be modified\n/// (stable address). `chars` will not outlive the struct, so\n/// lying about the lifetime should be fine.\n///\n/// TODO: What about during destruction?\n///       `Chars` shouldn't have a destructor...\nstruct OwningChars {\n    _s: String,\n    chars: Chars&lt;'static&gt;,\n}\n\nimpl OwningChars {\n    fn new(s: String) -&gt; Self {\n        let chars = unsafe { mem::transmute(s.chars()) };\n        OwningChars { _s: s, chars }\n    }\n}\n\nimpl Iterator for OwningChars {\n    type Item = char;\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        self.chars.next()\n    }\n}\n</code></pre>\n<p>You might even think about putting <em>just</em> this code into a module so that you can't accidentally muck about with the innards.</p>\n<hr />\n<p>Here's the same code using the <a href=\"https://crates.io/crates/ouroboros\" rel=\"nofollow noreferrer\">ouroboros</a> crate to create a self-referential struct containing the <code>String</code> and a <code>Chars</code> iterator:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use ouroboros::self_referencing; // 0.4.1\nuse std::str::Chars;\n\n#[self_referencing]\npub struct IntoChars {\n    string: String,\n    #[borrows(string)]\n    chars: Chars&lt;'this&gt;,\n}\n\n// All these implementations are based on what `Chars` implements itself\n\nimpl Iterator for IntoChars {\n    type Item = char;\n\n    #[inline]\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        self.with_mut(|me| me.chars.next())\n    }\n\n    #[inline]\n    fn count(mut self) -&gt; usize {\n        self.with_mut(|me| me.chars.count())\n    }\n\n    #[inline]\n    fn size_hint(&amp;self) -&gt; (usize, Option&lt;usize&gt;) {\n        self.with(|me| me.chars.size_hint())\n    }\n\n    #[inline]\n    fn last(mut self) -&gt; Option&lt;Self::Item&gt; {\n        self.with_mut(|me| me.chars.last())\n    }\n}\n\nimpl DoubleEndedIterator for IntoChars {\n    #[inline]\n    fn next_back(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        self.with_mut(|me| me.chars.next_back())\n    }\n}\n\nimpl std::iter::FusedIterator for IntoChars {}\n\n// And an extension trait for convenience\n\ntrait IntoCharsExt {\n    fn into_chars(self) -&gt; IntoChars;\n}\n\nimpl IntoCharsExt for String {\n    fn into_chars(self) -&gt; IntoChars {\n        IntoCharsBuilder {\n            string: self,\n            chars_builder: |s| s.chars(),\n        }\n        .build()\n    }\n}\n</code></pre>\n<hr />\n<p>Here's the same code using the <a href=\"https://crates.io/crates/rental\" rel=\"nofollow noreferrer\">rental</a> crate to create a self-referential struct containing the <code>String</code> and a <code>Chars</code> iterator:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>#[macro_use]\nextern crate rental; // 0.5.5\n\nrental! {\n    mod into_chars {\n        pub use std::str::Chars;\n\n        #[rental]\n        pub struct IntoChars {\n            string: String,\n            chars: Chars&lt;'string&gt;,\n        }\n    }\n}\n\nuse into_chars::IntoChars;\n\n// All these implementations are based on what `Chars` implements itself\n\nimpl Iterator for IntoChars {\n    type Item = char;\n\n    #[inline]\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        self.rent_mut(|chars| chars.next())\n    }\n\n    #[inline]\n    fn count(mut self) -&gt; usize {\n        self.rent_mut(|chars| chars.count())\n    }\n\n    #[inline]\n    fn size_hint(&amp;self) -&gt; (usize, Option&lt;usize&gt;) {\n        self.rent(|chars| chars.size_hint())\n    }\n\n    #[inline]\n    fn last(mut self) -&gt; Option&lt;Self::Item&gt; {\n        self.rent_mut(|chars| chars.last())\n    }\n}\n\nimpl DoubleEndedIterator for IntoChars {\n    #[inline]\n    fn next_back(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        self.rent_mut(|chars| chars.next_back())\n    }\n}\n\nimpl std::iter::FusedIterator for IntoChars {}\n\n// And an extension trait for convenience\n\ntrait IntoCharsExt {\n    fn into_chars(self) -&gt; IntoChars;\n}\n\nimpl IntoCharsExt for String {\n    fn into_chars(self) -&gt; IntoChars {\n        IntoChars::new(self, |s| s.chars())\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 421, "user_id": 4046512, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Tb3nU.png?s=128&g=1", "display_name": "Neil Roberts", "link": "https://stackoverflow.com/users/4046512/neil-roberts"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2171, "favorite_count": 1, "answer_count": 1, "score": 9, "last_activity_date": 1603733414, "creation_date": 1494671838, "last_edit_date": 1494693187, "question_id": 43952104, "link": "https://stackoverflow.com/questions/43952104/how-can-i-store-a-chars-iterator-in-the-same-struct-as-the-string-it-is-iteratin", "title": "How can I store a Chars iterator in the same struct as the String it is iterating on?", "body": "<p>I am just beginning to learn Rust and I\u2019m struggling to handle the lifetimes.</p>\n\n<p>I\u2019d like to have a struct with a <code>String</code> in it which will be used to buffer lines from stdin. Then I\u2019d like to have a method on the struct which returns the next character from the buffer, or if all of the characters from the line have been consumed it will read the next line from stdin.</p>\n\n<p>The documentation says that Rust strings aren\u2019t indexable by character because that is inefficient with UTF-8. As I\u2019m accessing the characters sequentially it should be fine to use an iterator. However, as far as I understand, iterators in Rust are tied to the lifetime of the thing they\u2019re iterating and I can\u2019t work out how I could store this iterator in the struct alongside the <code>String</code>.</p>\n\n<p>Here is the pseudo-Rust that I\u2019d like to achieve. Obviously it doesn\u2019t compile.</p>\n\n<pre><code>struct CharGetter {\n    /* Buffer containing one line of input at a time */\n    input_buf: String,\n    /* The position within input_buf of the next character to\n     * return. This needs a lifetime parameter. */\n    input_pos: std::str::Chars\n}\n\nimpl CharGetter {\n    fn next(&amp;mut self) -&gt; Result&lt;char, io::Error&gt; {\n        loop {\n            match self.input_pos.next() {\n                /* If there is still a character left in the input\n                 * buffer then we can just return it immediately. */\n                Some(n) =&gt; return Ok(n),\n                /* Otherwise get the next line */\n                None =&gt; {\n                    io::stdin().read_line(&amp;mut self.input_buf)?;\n                    /* Reset the iterator to the beginning of the\n                     * line. Obviously this doesn\u2019t work because it\u2019s\n                     * not obeying the lifetime of input_buf */\n                    self.input_pos = self.input_buf.chars();\n                }\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>I am trying to do the <a href=\"https://challenge.synacor.com/\" rel=\"noreferrer\">Synacor challenge</a>. This involves implementing a virtual machine where one of the opcodes reads a character from stdin and stores it in a register. I have this part working fine. The documentation states that whenever the program inside the VM reads a character it will keep reading until it reads a whole line. I wanted to take advantage of this to add a \u201csave\u201d command to my implementation. That means that whenever the program asks for a character, I will read a line from the input. If the line is \u201csave\u201d, I will save the state of the VM and then continue to get another line to feed to the VM. Each time the VM executes the input opcode, I need to be able to give it one character at a time from the buffered line until the buffer is depleted.</p>\n\n<p>My current implementation is <a href=\"https://github.com/bpeel/synacor/blob/master/src/synacor.rs\" rel=\"noreferrer\">here</a>. My plan was to add <code>input_buf</code> and <code>input_pos</code> to the <code>Machine</code> struct which represents the state of the VM.</p>\n"}, {"tags": ["rust", "affinity"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1494672581, "post_id": 43951007, "comment_id": 74935867, "body": "Can you provide a program that reproduces this? As far as I understand it, CPU affinity should be inherited by all child processes, even from Cargo to the actual application."}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 4, "creation_date": 1494675504, "post_id": 43951007, "comment_id": 74936743, "body": "Have you tried running your program directly instead of running it via Cargo? <code>taskset -c 16-31 target&#47;...</code> (<code>cargo run</code> should print the path to the executable)"}], "owner": {"reputation": 187, "user_id": 6742624, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/5FTD2.jpg?s=128&g=1", "display_name": "YjyJeff", "link": "https://stackoverflow.com/users/6742624/yjyjeff"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 171, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1494683540, "creation_date": 1494664646, "last_edit_date": 1494683540, "question_id": 43951007, "link": "https://stackoverflow.com/questions/43951007/cpu-affinity-is-not-being-limited-by-taskset", "title": "CPU affinity is not being limited by taskset", "body": "<p>I am using the taskset tool to set CPU affinity for my multithreaded Rust program which queries data from MongoDB:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>taskset -c 16-31 cargo run\n</code></pre>\n\n<p>When I run this command, I find that the program will also run on other CPUs as observed from <code>htop</code>. What went wrong and how to I solve this?</p>\n"}, {"tags": ["process", "io", "rust"], "answers": [{"comments": [{"owner": {"reputation": 1054, "user_id": 4201205, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/7186d11fd2ae12a5da22d2a8e7a684ad?s=128&d=identicon&r=PG&f=1", "display_name": "Constantine", "link": "https://stackoverflow.com/users/4201205/constantine"}, "edited": false, "score": 0, "creation_date": 1494661041, "post_id": 43950252, "comment_id": 74932944, "body": "Thanks,  I already tried <code>io::copy</code> but it is not working for me, looks like I am missing somethings. I am trying to watch log with <code>tail</code> but stays empty"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 1054, "user_id": 4201205, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/7186d11fd2ae12a5da22d2a8e7a684ad?s=128&d=identicon&r=PG&f=1", "display_name": "Constantine", "link": "https://stackoverflow.com/users/4201205/constantine"}, "edited": false, "score": 2, "creation_date": 1494661534, "post_id": 43950252, "comment_id": 74933058, "body": "@KostyaKrivomaz Have you tried <code>tail -f</code>? Otherwise the view won&#39;t update. And I just tried, and it does indeed work for me..."}, {"owner": {"reputation": 1054, "user_id": 4201205, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/7186d11fd2ae12a5da22d2a8e7a684ad?s=128&d=identicon&r=PG&f=1", "display_name": "Constantine", "link": "https://stackoverflow.com/users/4201205/constantine"}, "edited": false, "score": 0, "creation_date": 1494668350, "post_id": 43950252, "comment_id": 74934714, "body": "Yeap, tried with <code>-f</code>. Just executed your example, and still nothing.  There is some problem on my side, down further, will continue searching. Any way, thanks."}, {"owner": {"reputation": 1046, "user_id": 6244047, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/m2Wb7.jpg?s=128&g=1", "display_name": "Thomas Gotwig", "link": "https://stackoverflow.com/users/6244047/thomas-gotwig"}, "edited": false, "score": 0, "creation_date": 1600259134, "post_id": 43950252, "comment_id": 113030422, "body": "I think the right argument for <code>ping</code> is <code>-c</code> instead of <code>-n</code> \ud83e\uddd0"}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": false, "score": 6, "last_activity_date": 1600266416, "last_edit_date": 1600266416, "creation_date": 1494659042, "answer_id": 43950252, "question_id": 43949612, "link": "https://stackoverflow.com/questions/43949612/redirect-output-of-child-process-spawned-from-rust/43950252#43950252", "title": "Redirect output of child process spawned from Rust", "body": "<p>You can't redirect output with <code>&gt;</code> when starting another program like that. Operators like <code>&gt;</code>, <code>&gt;&gt;</code>, <code>|</code> and similar ones are interpreted by your shell and are not a native functionality of starting programs. Since the <code>Command</code> API doesn't emulate a shell, this won't work. So instead of passing it in <code>args</code> you have to use other methods of the <code>process</code> API to achieve what you want.</p>\n<h3>Short lived program</h3>\n<p>If the program to start is usually finished immediately, you might just want to wait until it's done and collect its output then. Then you can simply use the <a href=\"https://doc.rust-lang.org/std/process/struct.Command.html#method.output\" rel=\"nofollow noreferrer\"><code>Command::output()</code></a>:</p>\n<pre><code>use std::process::Command;\nuse std::fs::File;\nuse std::io::Write;\n\nlet output = Command::new(&quot;rustc&quot;)\n    .args(&amp;[&quot;-V&quot;, &quot;--verbose&quot;])\n    .output()?;\n\nlet mut f = File::create(&quot;rustc.log&quot;)?;\nf.write_all(&amp;output.stdout)?;\n</code></pre>\n<p>(<a href=\"https://play.rust-lang.org/?gist=e8e9770e39abf7d4849b02b227239d20&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">Playground</a>)</p>\n<p><em>Note</em>: the code above has to be in a function that returns a <code>Result</code> in order for the <code>?</code> operator to work (it just passes errors up).</p>\n<h3>Long lived program</h3>\n<p>But maybe your program is not short lived and you don't want to wait until it's finished before doing anything with the output. In that case you should capture stdout and call <a href=\"https://doc.rust-lang.org/std/process/struct.Command.html#method.spawn\" rel=\"nofollow noreferrer\"><code>Command::spawn()</code></a>. Then you can access the <a href=\"https://doc.rust-lang.org/std/process/struct.ChildStdout.html\" rel=\"nofollow noreferrer\"><code>ChildStdout</code></a> which implements <code>Read</code>:</p>\n<pre><code>use std::process::{Command, Stdio};\nuse std::fs::File;\nuse std::io;\n\nlet child = Command::new(&quot;ping&quot;)\n    .args(&amp;[&quot;-c&quot;, &quot;10&quot;, &quot;google.com&quot;])\n    .stdout(Stdio::piped())\n    .spawn()?;\n\nlet mut f = File::create(&quot;ping.log&quot;)?;\nio::copy(&amp;mut child.stdout.unwrap(), &amp;mut f)?;\n</code></pre>\n<p>(<a href=\"https://play.rust-lang.org/?gist=76e27831e8c28adccd252d9cb09827e8&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">Playground</a>)</p>\n<p>That way, <code>ping.log</code> is written on the fly every time the command outputs new data.</p>\n"}, {"comments": [{"owner": {"reputation": 1054, "user_id": 4201205, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/7186d11fd2ae12a5da22d2a8e7a684ad?s=128&d=identicon&r=PG&f=1", "display_name": "Constantine", "link": "https://stackoverflow.com/users/4201205/constantine"}, "edited": false, "score": 0, "creation_date": 1495013476, "post_id": 43980093, "comment_id": 75068706, "body": "Is there any way to make this code working on Windows also? From doc, I only found for unix."}, {"owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "reply_to_user": {"reputation": 1054, "user_id": 4201205, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/7186d11fd2ae12a5da22d2a8e7a684ad?s=128&d=identicon&r=PG&f=1", "display_name": "Constantine", "link": "https://stackoverflow.com/users/4201205/constantine"}, "edited": false, "score": 1, "creation_date": 1495014083, "post_id": 43980093, "comment_id": 75069149, "body": "I already said so &quot;but with conditional compilation you can make it work on Windows too.&quot;, just use the <code>handle</code> equivalents instead of <code>fd</code>"}, {"owner": {"reputation": 1054, "user_id": 4201205, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/7186d11fd2ae12a5da22d2a8e7a684ad?s=128&d=identicon&r=PG&f=1", "display_name": "Constantine", "link": "https://stackoverflow.com/users/4201205/constantine"}, "edited": false, "score": 0, "creation_date": 1495015425, "post_id": 43980093, "comment_id": 75070044, "body": "Thanks, just missed windows module in <code>std::os</code>, that is why asked"}], "tags": [], "owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "is_accepted": true, "score": 3, "last_activity_date": 1494854525, "last_edit_date": 1494854525, "creation_date": 1494852793, "answer_id": 43980093, "question_id": 43949612, "link": "https://stackoverflow.com/questions/43949612/redirect-output-of-child-process-spawned-from-rust/43980093#43980093", "title": "Redirect output of child process spawned from Rust", "body": "<p>To directly use a file as output without intermediate copying from a pipe, you have to pass the file descriptor. The code is platform-specific, but with conditional compilation you can make it work on Windows too.</p>\n\n<pre><code>let f = File::create(\"foo.log\").unwrap();\nlet fd = f.as_raw_fd();\n// from_raw_fd is only considered unsafe if the file is used for mmap\nlet out = unsafe {Stdio::from_raw_fd(fd)};\nlet child = Command::new(\"foo\")\n    .stdout(out)\n    .spawn().unwrap();\n</code></pre>\n"}], "owner": {"reputation": 1054, "user_id": 4201205, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/7186d11fd2ae12a5da22d2a8e7a684ad?s=128&d=identicon&r=PG&f=1", "display_name": "Constantine", "link": "https://stackoverflow.com/users/4201205/constantine"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1377, "favorite_count": 1, "accepted_answer_id": 43980093, "answer_count": 2, "score": 4, "last_activity_date": 1600266416, "creation_date": 1494653813, "last_edit_date": 1494659102, "question_id": 43949612, "link": "https://stackoverflow.com/questions/43949612/redirect-output-of-child-process-spawned-from-rust", "title": "Redirect output of child process spawned from Rust", "body": "<p>I need to redirect output of a spawned child process. This is what I tried but it doesn't work:</p>\n\n<pre><code>Command::new(cmd)\n    .args(&amp;[\"--testnet\",\n            \"--fast\",\n            format!(\"&amp;&gt;&gt; {}\", log_path).as_str()])\n    .stdin(Stdio::piped())\n    .stdout(Stdio::inherit())\n    .spawn()\n</code></pre>\n"}, {"tags": ["iterator", "rust"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1494630874, "post_id": 43947577, "comment_id": 74928033, "body": "I&#39;ve opened <a href=\"https://github.com/rust-lang/rust/issues/41964\" rel=\"nofollow noreferrer\">issue 41964</a>, let&#39;s see what happens."}, {"owner": {"reputation": 12420, "user_id": 1224627, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/011b3ee0350155b8827cdc9918d2907c?s=128&d=identicon&r=PG", "display_name": "wingedsubmariner", "link": "https://stackoverflow.com/users/1224627/wingedsubmariner"}, "edited": false, "score": 1, "creation_date": 1494630956, "post_id": 43947577, "comment_id": 74928048, "body": "I thought it had to be a bug, but wasn&#39;t aware of this sort of trait specialization magic, so was stuck looking at the code for <code>Fuse</code> itself which looked fine. Interestingly, the only other Rust question I&#39;ve asked also turned out to be a bug discovery."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 12420, "user_id": 1224627, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/011b3ee0350155b8827cdc9918d2907c?s=128&d=identicon&r=PG", "display_name": "wingedsubmariner", "link": "https://stackoverflow.com/users/1224627/wingedsubmariner"}, "edited": false, "score": 0, "creation_date": 1494631336, "post_id": 43947577, "comment_id": 74928132, "body": "@wingedsubmariner <a href=\"http://stackoverflow.com/search?q=user%3A1224627+%5Brust%5D+is%3Aq\">you&#39;ve asked <i>two</i> others</a>, and counting bugs before Rust 1.0 is practically cheating ^_^"}, {"owner": {"reputation": 12420, "user_id": 1224627, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/011b3ee0350155b8827cdc9918d2907c?s=128&d=identicon&r=PG", "display_name": "wingedsubmariner", "link": "https://stackoverflow.com/users/1224627/wingedsubmariner"}, "edited": false, "score": 0, "creation_date": 1494631584, "post_id": 43947577, "comment_id": 74928173, "body": "Ah you&#39;re right, not sure how I didn&#39;t find that one. ^_^"}, {"owner": {"reputation": 3025, "user_id": 1356047, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/da6592df871c28f69e0480dd4edb5f9a?s=128&d=identicon&r=PG", "display_name": "Jonas Berlin", "link": "https://stackoverflow.com/users/1356047/jonas-berlin"}, "edited": false, "score": 0, "creation_date": 1595687925, "post_id": 43947577, "comment_id": 111564065, "body": "Summary: This was a bug and is fixed in Rust 1.19 and newer."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1595850884, "last_edit_date": 1595850884, "creation_date": 1494630421, "answer_id": 43947577, "question_id": 43947111, "link": "https://stackoverflow.com/questions/43947111/why-does-the-fuse-iterator-adapter-not-work-as-expected/43947577#43947577", "title": "Why does the Fuse iterator adapter not work as expected?", "body": "<p>TL;DR Summary: This <a href=\"https://github.com/rust-lang/rust/issues/41964\" rel=\"nofollow noreferrer\">was a bug</a> and is fixed in Rust 1.19 and newer.</p>\n<p>I'm pretty sure you are doing nothing wrong. This appears to be either a bug (my guess) or a <em>very</em> confusing interaction. Check out this expanded example:</p>\n<pre><code>#![feature(fused)]\n\nfn dump&lt;I: Iterator&lt;Item = i32&gt;&gt;(label: &amp;str, mut iter: I) {\n    println!(&quot;= Running: {}&quot;, label);\n    for _ in 0..10 {\n        println!(&quot;{:?}&quot;, iter.next());\n    }\n    println!(&quot;&quot;);\n}\n\nfn boxed_internal_fuse() -&gt; Box&lt;Iterator&lt;Item = i32&gt;&gt; {\n    Box::new((1..3)\n        .scan(1, |_, x| if x &lt; 2 { None } else { Some(x) })\n        .fuse())\n}\n\nfn boxed_no_fuse() -&gt; Box&lt;Iterator&lt;Item = i32&gt;&gt; {\n    Box::new((1..3)\n        .scan(1, |_, x| if x &lt; 2 { None } else { Some(x) }))\n}\n\nuse std::iter::FusedIterator;\nfn boxed_no_fuse_but_fused() -&gt; Box&lt;FusedIterator&lt;Item = i32&gt;&gt; {\n    Box::new((1..3)\n        .scan(1, |_, x| if x &lt; 2 { None } else { Some(x) }))\n}\n\nfn main() {\n    let i1 = (1..3)\n        .scan(1, |_, x| if x &lt; 2 { None } else { Some(x) });\n    dump(&quot;Scan&quot;, i1);\n    \n    let i2 = (1..3)\n        .scan(1, |_, x| if x &lt; 2 { None } else { Some(x) })\n        .fuse();\n    dump(&quot;Fuse&lt;Scan&gt;&quot;, i2);\n    \n    dump(&quot;Box&lt;Fuse&lt;Scan&gt;&gt;&quot;, boxed_internal_fuse());\n    dump(&quot;Fuse&lt;Box&lt;Iterator&gt;&gt;&quot;, boxed_no_fuse().fuse()); // All `None`s\n    dump(&quot;Fuse&lt;Box&lt;FusedIterator&gt;&gt;&quot;, boxed_no_fuse_but_fused().fuse());\n}\n</code></pre>\n<p>The trick is that <code>FusedIterator</code> is a unstable trait that is aimed at improving the efficiency. It lets <code>Iterator::fuse</code> know that it's a no-op.</p>\n<p>However, in this case, the conditions are necessary but not sufficient:</p>\n<pre><code>impl&lt;B, I, St, F&gt; FusedIterator for Scan&lt;I, St, F&gt;\n    where I: FusedIterator, F: FnMut(&amp;mut St, I::Item) -&gt; Option&lt;B&gt; {}\n</code></pre>\n<p>It's true that if the <em>underlying iterator</em> is <code>FusedIterator</code> and starts returning <code>None</code>, <code>scan</code> will keep returning <code>None</code>. However, that's not the only way to get <code>None</code> \u2014\u00a0the <em>closure</em> can also return <code>None</code>!</p>\n"}], "owner": {"reputation": 12420, "user_id": 1224627, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/011b3ee0350155b8827cdc9918d2907c?s=128&d=identicon&r=PG", "display_name": "wingedsubmariner", "link": "https://stackoverflow.com/users/1224627/wingedsubmariner"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 263, "favorite_count": 0, "accepted_answer_id": 43947577, "answer_count": 1, "score": 5, "last_activity_date": 1595850884, "creation_date": 1494626871, "last_edit_date": 1582439818, "question_id": 43947111, "link": "https://stackoverflow.com/questions/43947111/why-does-the-fuse-iterator-adapter-not-work-as-expected", "title": "Why does the Fuse iterator adapter not work as expected?", "body": "<p>I'm experimenting with the <code>Fuse</code> iterator adapter and am getting unexpected results (<a href=\"https://play.rust-lang.org/?code=fn%20main()%20%7B%0A%20%20%20%20let%20mut%20i1%20%3D%20(1..3).scan(1%2C%20%7C_%2C%20x%7C%20%7B%0A%20%20%20%20%20%20%20%20if%20x%20%3C%202%20%7B%20None%20%7D%20else%20%7B%20Some(x)%20%7D%0A%20%20%20%20%7D)%3B%0A%20%20%20%20println!(%22%7B%3A%3F%7D%22%2C%20i1.next())%3B%0A%20%20%20%20println!(%22%7B%3A%3F%7D%22%2C%20i1.next())%3B%0A%20%20%20%20println!(%22%7B%3A%3F%7D%22%2C%20i1.next())%3B%0A%20%20%20%20println!(%22%22)%3B%0A%0A%20%20%20%20let%20mut%20i2%20%3D%20(1..3).scan(1%2C%20%7C_%2C%20x%7C%20%7B%0A%20%20%20%20%20%20%20%20if%20x%20%3C%202%20%7B%20None%20%7D%20else%20%7B%20Some(x)%20%7D%0A%20%20%20%20%7D).fuse()%3B%0A%20%20%20%20println!(%22%7B%3A%3F%7D%22%2C%20i2.next())%3B%0A%20%20%20%20println!(%22%7B%3A%3F%7D%22%2C%20i2.next())%3B%20%2F%2F%20This%20should%20print%20None%0A%20%20%20%20println!(%22%7B%3A%3F%7D%22%2C%20i2.next())%3B%0A%20%20%20%20println!(%22%22)%3B%0A%7D%0A&amp;version=stable&amp;backtrace=0\" rel=\"noreferrer\">Playground link</a>):</p>\n\n<pre><code>fn main() {\n    let mut i1 = (1..3).scan(1, |_, x| {\n        if x &lt; 2 { None } else { Some(x) }\n    });\n    println!(\"{:?}\", i1.next());\n    println!(\"{:?}\", i1.next());\n    println!(\"{:?}\", i1.next());\n    println!(\"\");\n\n    let mut i2 = (1..3).scan(1, |_, x| {\n        if x &lt; 2 { None } else { Some(x) }\n    }).fuse();\n    println!(\"{:?}\", i2.next());\n    println!(\"{:?}\", i2.next()); // This should print None\n    println!(\"{:?}\", i2.next());\n    println!(\"\");\n}\n</code></pre>\n\n<p>Which prints:</p>\n\n<pre><code>None\nSome(2)\nNone\n\nNone\nSome(2)\nNone\n</code></pre>\n\n<p>Iterator <code>i1</code> is returning what I expect. It returns <code>None</code>, then <code>Some(2)</code>, then <code>None</code>. <code>i2</code> is the same iterator adapted with <code>fuse()</code>. Fuse should make it return <code>None</code> after the first <code>None</code>, and since the first value it returns is <code>None</code> that should be the only value it returns. However, it behaves the same as <code>i1</code>. What am I doing wrong?</p>\n"}, {"tags": ["rust", "rust-cargo", "rls"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1494609991, "post_id": 43943308, "comment_id": 74919206, "body": "What versions of your Rust compiler and RLS are installed?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1494610289, "post_id": 43943308, "comment_id": 74919378, "body": "Why do you think you did something wrong? You are using alpha/beta software which is expected to have bugs. This seems like it should just be a bug report."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1494610339, "post_id": 43943308, "comment_id": 74919406, "body": "In addition to E_net4&#39;s requests, you should probably add what <i>consumer</i> of the language server protocol you are using (VS Code, emacs, etc.)"}, {"owner": {"reputation": 11, "user_id": 5096179, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/046db9054336b1ca163a1222c4752437?s=128&d=identicon&r=PG&f=1", "display_name": "person", "link": "https://stackoverflow.com/users/5096179/person"}, "edited": false, "score": 0, "creation_date": 1494611583, "post_id": 43943308, "comment_id": 74920161, "body": "most recent rustup channels. But now rls will not start I will update later."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1494612099, "post_id": 43943308, "comment_id": 74920449, "body": "This is indeed a bad moment for RLS related questions, if you are using Visual Studio Code. The latest RLS will crash on it: <a href=\"https://github.com/rust-lang-nursery/rls/issues/312\" rel=\"nofollow noreferrer\">github.com/rust-lang-nursery/rls/issues/312</a>"}, {"owner": {"reputation": 11, "user_id": 5096179, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/046db9054336b1ca163a1222c4752437?s=128&d=identicon&r=PG&f=1", "display_name": "person", "link": "https://stackoverflow.com/users/5096179/person"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1494612945, "post_id": 43943308, "comment_id": 74920908, "body": "@E_net4 Thanks for pointing this out I would have kept wasting my time. Begaing to think that My move from swift for stability is not bearing fruits:)"}], "owner": {"reputation": 11, "user_id": 5096179, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/046db9054336b1ca163a1222c4752437?s=128&d=identicon&r=PG&f=1", "display_name": "person", "link": "https://stackoverflow.com/users/5096179/person"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 310, "favorite_count": 1, "answer_count": 0, "score": 1, "last_activity_date": 1499348799, "creation_date": 1494609794, "last_edit_date": 1499348799, "question_id": 43943308, "link": "https://stackoverflow.com/questions/43943308/why-does-the-rust-language-server-not-warn-about-expected-str-found-struct-std", "title": "Why does the Rust Language Server not warn about expected &amp;str, found struct std::string::String?", "body": "<p>The following code raises an error in all channels. The Rust Language Server does not detect this error and says the types are correct. What did I get wrong?</p>\n\n<pre><code>use std::fs::File;\nuse std::io::Read;\nuse std::io::Write;\nuse std::env;\nuse std::string::String;\nuse std::str;\n\nfn main() {\n    if let Some(file_name) = env::args().nth(2) {\n        let mut file_handle = File::open(file_name)\n            .expect(format!(\"Your File is invaild {}\", &amp;file_name as &amp;str));\n        let mut text = String::new();\n        file_handle\n            .read_to_string(&amp;mut text)\n            .expect(\"unable to read file\");\n        text.replace(\"test\", &amp;env::args().nth(2).unwrap() as &amp;str);\n        // file_handle.set_len(text.len() as u64).expect(\"could not resize file\");\n        file_handle\n            .write(&amp;text.as_bytes())\n            .expect(\"could not write to file\");\n    } else {\n        println!(\"you did not give me a file\")\n    }\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:11:21\n   |\n11 |             .expect(format!(\"Your File is invaild {}\", &amp;file_name as &amp;str));\n   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected &amp;str, found struct `std::string::String`\n   |\n   = note: expected type `&amp;str`\n              found type `std::string::String`\n</code></pre>\n"}, {"tags": ["rust", "glium"], "comments": [{"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 2, "creation_date": 1494580610, "post_id": 43933348, "comment_id": 74900057, "body": "Have you had a look at all of the other questions related to <code>type parameter not constrained</code>? There&#39;s around 15 of them: <a href=\"http://stackoverflow.com/search?page=1&amp;tab=Relevance&amp;q=%5brust%5dconstrained%20by%20the%20impl%20trait%2c%20self%20type%2c%20or%20predicates\">stackoverflow.com/&hellip;</a>"}], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 6, "last_activity_date": 1494674555, "creation_date": 1494674555, "answer_id": 43952540, "question_id": 43933348, "link": "https://stackoverflow.com/questions/43933348/unconstrained-type-parameter-error/43952540#43952540", "title": "unconstrained type parameter error", "body": "<p>Imagine I defined a type like this<sup>1</sup>:</p>\n\n<pre><code>struct PolymorphicMatrix;\n\nimpl Into&lt;cgmath::Matrix4&lt;f32&gt;&gt; for PolymorphicMatrix {\n    fn into(self) -&gt; cgmath::Matrix4&lt;f32&gt; {\n        cgmath::Matrix4::new(\n            1.0, 1.0, 1.0, 1.0,\n            1.0, 1.0, 1.0, 1.0,\n            1.0, 1.0, 1.0, 1.0,\n            1.0, 1.0, 1.0, 1.0)\n    }\n}\n\nimpl Into&lt;cgmath::Matrix4&lt;f64&gt;&gt; for PolymorphicMatrix {\n    fn into(self) -&gt; cgmath::Matrix4&lt;f64&gt; {\n        cgmath::Matrix4::new(\n            2.0, 2.0, 2.0, 2.0,\n            2.0, 2.0, 2.0, 2.0,\n            2.0, 2.0, 2.0, 2.0,\n            2.0, 2.0, 2.0, 2.0)\n    }\n}\n</code></pre>\n\n<p>Which of these impls will be used to implement <code>ToArray</code>? Both are applicable, but you can only implement <code>ToArray</code> once for <code>PolymorphicMatrix</code>, because <code>ToArray</code> has no type parameters. That's what the error means: it's not valid because it would cause issues in a situation like this.</p>\n\n<p>Since you control neither <code>Into</code> nor <code>cgmath::Matrix4</code>, the only aspect you can change is <code>ToArray</code>. You can add a type parameter that is not used in the trait definition itself, and implementations can use that type parameter.</p>\n\n<pre><code>pub trait ToArray&lt;S&gt; {\n    type Output;\n    fn to_array(&amp;self) -&gt; Self::Output;\n}\n\nimpl&lt;S: cgmath::BaseFloat, T: Into&lt;cgmath::Matrix4&lt;S&gt;&gt;&gt; ToArray&lt;S&gt; for T {\n    type Output = [[S; 4]; 4];\n    fn to_array(&amp;self) -&gt; Self::Output {\n        cgmath::Matrix4::&lt;S&gt;::from(*self).into()\n    }\n}\n</code></pre>\n\n<p>Naturally, you can't enforce any kind of correlation between <code>S</code> and <code>Output</code>. Also, that type parameter might cause some ambiguities: since it's not used in the trait, the compiler might not be able to infer <code>S</code> from usage in some situations, so you may have to specify it explicitly. If that becomes a problem, you might want to explore using <a href=\"https://crates.io/crates/generic-array\" rel=\"noreferrer\"><code>generic-array</code></a>. It would let you lift the array dimensions to type parameters, so that you could get rid of the associated type and instead use the type parameters directly in the return type of <code>to_array</code>, which would help the compiler's inference.</p>\n\n<hr>\n\n<p><sup>1</sup> Normally, one would implement <code>From</code> rather than <code>Into</code>. I'm using <code>Into</code> here to stay closer to the problem as stated.</p>\n"}], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4153, "favorite_count": 0, "accepted_answer_id": 43952540, "answer_count": 1, "score": 5, "last_activity_date": 1494674555, "creation_date": 1494578989, "last_edit_date": 1495540504, "question_id": 43933348, "link": "https://stackoverflow.com/questions/43933348/unconstrained-type-parameter-error", "title": "unconstrained type parameter error", "body": "<p>I'm trying to interface glium with cgmath. Following <a href=\"https://stackoverflow.com/a/40028032/5397009\">this answer</a>, I have implemented a <code>ToArray</code> trait to convert instances of <code>cgmath::Matrix4</code> into a format usable by glium:</p>\n\n<pre><code>pub trait ToArray {\n    type Output;\n    fn to_array(&amp;self) -&gt; Self::Output;\n}\n\nimpl&lt;S: cgmath::BaseNum&gt; ToArray for cgmath::Matrix4&lt;S&gt; {\n    type Output = [[S; 4]; 4];\n    fn to_array(&amp;self) -&gt; Self::Output {\n        (*self).into()\n    }\n}\n</code></pre>\n\n<p>Since I don't always use <code>Matrix4</code> directly, I need a similar implementation for cgmath transform types. For example for <code>cgmath::Decomposed</code>:</p>\n\n<pre><code>impl&lt;S: cgmath::BaseFloat, R: cgmath::Rotation3&lt;S&gt;&gt; ToArray\n    for cgmath::Decomposed&lt;cgmath::Vector3&lt;S&gt;, R&gt; {\n    type Output = [[S; 4]; 4];\n    fn to_array(&amp;self) -&gt; Self::Output {\n        cgmath::Matrix4::&lt;S&gt;::from(*self).into()\n    }\n}\n</code></pre>\n\n<p>This works, but I'd like to avoid duplicating the code for all transform types, so I thought I would define a generic implementation for anything that can be converted to a <code>Matrix4</code>:</p>\n\n<pre><code>impl&lt;S: cgmath::BaseFloat, T: Into&lt;cgmath::Matrix4&lt;S&gt;&gt;&gt; ToArray for T {\n    type Output = [[S; 4]; 4];\n    fn to_array(&amp;self) -&gt; Self::Output {\n        cgmath::Matrix4::&lt;S&gt;::from(*self).into()\n    }\n}\n</code></pre>\n\n<p>Unfortunately, this doesn't work: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0207]: the type parameter `S` is not constrained by the impl trait, self type, or predicates\n  --&gt; src/main.rs:23:6\n   |\n23 | impl&lt;S: cgmath::BaseFloat, T: Into&lt;cgmath::Matrix4&lt;S&gt;&gt;&gt; ToArray for T {\n   |      ^ unconstrained type parameter\n</code></pre>\n\n<p>I have two questions:</p>\n\n<ul>\n<li>Why doesn't the above code work? From reading the <code>rustc --explain</code> output, I would expect the <code>T: Into&lt;cgmath::Matrix4&lt;S&gt;&gt;</code> to act as a valid constraint on <code>S</code> as well as <code>T</code>.</li>\n<li>How can I write a generic implementation for anything that can be converted into a <code>Matrix4</code>?</li>\n</ul>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 2, "creation_date": 1494534227, "post_id": 43924718, "comment_id": 74883132, "body": "tl;dr: if there is no constant with the given name in scope, rust <i>binds</i> the value you pass into the <code>match</code> (the <code>match</code> discriminant) to the new name. Just like a <code>let name = value;</code> statement! That&#39;s that confused OP in the linked question as well. But now I&#39;m curious why the Rust compiler doesn&#39;t complain about &quot;unreachable pattern&quot; in your case..."}], "answers": [{"tags": [], "owner": {"reputation": 694, "user_id": 7033869, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-qhp8umXBLiA/AAAAAAAAAAI/AAAAAAAAAAA/faBbkZ-N7fw/photo.jpg?sz=128", "display_name": "Francois Mockers", "link": "https://stackoverflow.com/users/7033869/francois-mockers"}, "is_accepted": false, "score": 5, "last_activity_date": 1494535682, "last_edit_date": 1494535682, "creation_date": 1494534391, "answer_id": 43924937, "question_id": 43924718, "link": "https://stackoverflow.com/questions/43924718/rust-match-unexpected-results/43924937#43924937", "title": "Rust match unexpected results", "body": "<p>If you don't use <code>VAR1</code>, <code>VAR2</code>, <code>VAR3</code>, <code>VAR4</code>, they are not in the scope of the match, and the pattern becomes a binding. The remaining patterns become unreachable and you have the following warning:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>  --&gt; src/main.rs:28:13\n   |\n28 |             VAR4 =&gt; {\n   |             ^^^^\n   |\n   = note: #[warn(unused_variables)] on by default\n\nwarning: unreachable pattern\n</code></pre>\n\n<p>If you replaced your print with:</p>\n\n<pre><code>match a {\n    VAR1 =&gt; {\n        println!(\"matched: 1 ({:?})\", VAR1);\n    }\n}\n</code></pre>\n\n<p>as VAR1 now have the value it matched against, it will print </p>\n\n<pre><code>matched: 1 (4)\n</code></pre>\n\n<p>With the <code>use</code>, the four constants are in scope and you can match against them.</p>\n"}], "owner": {"reputation": 51, "user_id": 6864932, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-1sMK6s2HxcA/AAAAAAAAAAI/AAAAAAAAAJQ/2Xu3uqrzw38/photo.jpg?sz=128", "display_name": "Alex Marinenko", "link": "https://stackoverflow.com/users/6864932/alex-marinenko"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 175, "favorite_count": 0, "closed_date": 1494537392, "answer_count": 1, "score": 0, "last_activity_date": 1494537444, "creation_date": 1494533516, "last_edit_date": 1494537444, "question_id": 43924718, "link": "https://stackoverflow.com/questions/43924718/rust-match-unexpected-results", "closed_reason": "Duplicate", "title": "Rust match unexpected results", "body": "<p>Why does this code give me strange results?</p>\n\n<pre><code>const VAR1: u16 = 1;\nconst VAR2: u16 = 2;\nconst VAR3: u16 = 3;\nconst VAR4: u16 = 4;\n\n#[cfg(test)]\nmod tests {\n    // use {VAR1, VAR2, VAR3, VAR4};\n    #[test]\n    fn test_match() {\n        let a = 4;\n        match a {\n            VAR1 =&gt; {\n                println!(\"matched: 1\");\n            }\n            VAR2 =&gt; {\n                println!(\"matched: 2\");\n            }\n            VAR3 =&gt; {\n                println!(\"matched: 3\");\n            }\n            VAR4 =&gt; {\n                println!(\"matched: 4\");\n            }\n            _ =&gt; {\n                println!(\"not matched\");\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>When the line <code>// use {VAR1, VAR2, VAR3, VAR4};</code> is commented, then the result of test execution is <code>matched: 1</code>. When <code>use {VAR1, VAR2, VAR3, VAR4};</code> is not commented, then the result is correct and is <code>matched: 4</code>.    </p>\n\n<p>Why the compiler doesn't fail in the first case ?</p>\n\n<p><code>cargo test -- --nocapture</code></p>\n\n<p><code>rustc --version</code><br>\n<code>rustc 1.16.0-nightly (7e38a89a7 2017-01-06)</code></p>\n\n<p>You can find the test project code here <a href=\"https://github.com/asmsoft/rust-match-test\" rel=\"nofollow noreferrer\">https://github.com/asmsoft/rust-match-test</a></p>\n"}, {"tags": ["apache", "rust", "webserver"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 4, "creation_date": 1494526019, "post_id": 43922509, "comment_id": 74878519, "body": "Although it is a fairly intriguing question, it is mostly opinion-based. It also holds the misconception that <code>cargo run</code> is the server, which is incorrect. The most popular HTTP library is <code>hyper</code>, and that is a library. Like in other technologies such as Node.js, you don&#39;t exactly <i>need</i> a dedicated HTTP server, although some systems in production use them to orchestrate multiple components or add security layers."}, {"owner": {"reputation": 2003, "user_id": 412686, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/03abc3b44ea6b0a912082bbe9a7eb588?s=128&d=identicon&r=PG", "display_name": "LazNiko", "link": "https://stackoverflow.com/users/412686/lazniko"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1494558553, "post_id": 43922509, "comment_id": 74890312, "body": "Thanks for correcting. I&#39;m new to Rust and wasn&#39;t aware the name of the web server program, that&#39;s why I put &quot;Cargo run&quot; in quote. I have corrected it in the question. But why the question is &quot;opinion-based&quot;?"}], "answers": [{"comments": [{"owner": {"reputation": 148712, "user_id": 19750, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/13b41b2620da0b1e630715e0c91a0b03?s=128&d=identicon&r=PG", "display_name": "Josh Lee", "link": "https://stackoverflow.com/users/19750/josh-lee"}, "edited": false, "score": 2, "creation_date": 1494590044, "post_id": 43922691, "comment_id": 74906230, "body": "Another option, somewhat similar to proxying HTTP, is FastCGI <a href=\"https://softwareengineering.stackexchange.com/questions/178698/web-interface-with-fastcgi-or-with-direct-http\" title=\"web interface with fastcgi or with direct http\">softwareengineering.stackexchange.com/questions/178698/&hellip;</a>"}], "tags": [], "owner": {"reputation": 679, "user_id": 5684441, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f97b8a37873e8a4e6a35b0563b2ae411?s=128&d=identicon&r=PG", "display_name": "Luke Hollenback", "link": "https://stackoverflow.com/users/5684441/luke-hollenback"}, "is_accepted": true, "score": 13, "last_activity_date": 1494526992, "last_edit_date": 1494526992, "creation_date": 1494525951, "answer_id": 43922691, "question_id": 43922509, "link": "https://stackoverflow.com/questions/43922509/web-server-for-rust-as-if-apache-to-php/43922691#43922691", "title": "Web server for Rust as if Apache to PHP", "body": "<p>The common approach when writing a web application in something other than PHP is to use either Apache or NGINX as the public-facing server. You then set up a virtual host in either Apache or NGINX to function as a remote proxy which forwards all connections to your web application (Rust, Golang, Python, Node.js, etc...) which is, itself, running its own server bound to a non-80 port on localhost.</p>\n\n<p>For a (rough) visual example:</p>\n\n<pre><code>+++++++++++++++++++++++ SERVER +++++++++++++++++++++++++++++++++++\n+  [Web Application (bound to localhost:8080)]                   +\n+                      /|\\                                       +\n+                       | reverse proxy connection               +\n+                      \\|/                                       +\n+  [NGINX (bound to remote_address::80 and remote_address:443)]  +\n+++++++++++++++++++++++++/|\\+++++++++++/|\\++++++++++++++++++++++++\n                          |             |\n                         \\|/           \\|/\n                     ++++++++++++  ++++++++++++\n                     +  CLIENT  +  +  CLIENT  +\n                     ++++++++++++  ++++++++++++\n</code></pre>\n\n<p>This approach is (generally) more secure, allows you to easily use the features of a mature web server like you are saying (e.g. SSL, load balancing, etc.), and allows you to focus on writing a robust web application rather than on writing a robust web server.</p>\n\n<p>Take a look at <a href=\"https://www.nginx.com/resources/admin-guide/reverse-proxy/\" rel=\"noreferrer\">this article</a> for documentation on how to set up NGINX as a reverse proxy. Although Apache is just as capable, NGINX tends to be the web server of choice when creating a web application and stack like this due to its speed and the fact that it is relatively lightweight.</p>\n\n<p>For what it is worth, the difference between this architecture and what, for example, PHP and Apache look like together is, simply put, that PHP runs as an \"extension module\" to Apache rather than as an \"external component\". Actually, when you use PHP with NGINX, you will have to set it up in a very similar way as described in this post.</p>\n"}], "owner": {"reputation": 2003, "user_id": 412686, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/03abc3b44ea6b0a912082bbe9a7eb588?s=128&d=identicon&r=PG", "display_name": "LazNiko", "link": "https://stackoverflow.com/users/412686/lazniko"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2930, "favorite_count": 2, "closed_date": 1532539450, "accepted_answer_id": 43922691, "answer_count": 1, "score": 5, "last_activity_date": 1532533856, "creation_date": 1494525290, "last_edit_date": 1494559535, "question_id": 43922509, "link": "https://stackoverflow.com/questions/43922509/web-server-for-rust-as-if-apache-to-php", "closed_reason": "Opinion-based", "title": "Web server for Rust as if Apache to PHP", "body": "<p>In PHP, we have Apache (or Nginx) as the HTTP server. They are also the de-facto standard set up for PHP web development.</p>\n\n<p>In Rust nearly all examples on the web are to run its own HTTP server (or \"hyper\" library) by \"Cargo run\" command and then go to localhost in a browser to see the result. It seems nobody would deploy it on Apache/Nginx.</p>\n\n<p>Why are Rust programs not deployed in the existing HTTP servers which provide so many useful and mature features (e.g. VirtualHost, Alias, SSL, mod_rewrite etc.)? </p>\n\n<p>Also, what're the benefits of using this web server over Apache/Nginx?</p>\n\n<p>In a production environment, do you also use hyper library as the web server for Rust?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1494544286, "post_id": 43921436, "comment_id": 74887099, "body": "Returning 0 as the mean of an empty set is a bit... arbitrary."}], "answers": [{"tags": [], "owner": {"reputation": 35314, "user_id": 344347, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/1d83837bce9d9a2656c4f5704d40c430?s=128&d=identicon&r=PG", "display_name": "Pavel Strakhov", "link": "https://stackoverflow.com/users/344347/pavel-strakhov"}, "is_accepted": false, "score": 2, "last_activity_date": 1494537587, "last_edit_date": 1494537587, "creation_date": 1494536351, "answer_id": 43925422, "question_id": 43921436, "link": "https://stackoverflow.com/questions/43921436/extend-iterator-with-a-mean-method/43925422#43925422", "title": "Extend Iterator with a &quot;mean&quot; method", "body": "<p>You can do it like this, for example:</p>\n\n<pre><code>pub trait Mean {\n    fn mean(self) -&gt; f64;\n}\n\nimpl&lt;F, T&gt; Mean for T\n    where T: Iterator&lt;Item = F&gt;,\n          F: std::borrow::Borrow&lt;f64&gt;\n{\n    fn mean(self) -&gt; f64 {\n        self.zip((1..))\n            .fold(0.,\n                  |s, (e, i)| (*e.borrow() + s * (i - 1) as f64) / i as f64)\n    }\n}\n\nfn main() {\n    assert_eq!([1f64, 2f64, 3f64, 4f64, 5f64].iter().mean(), 3.);\n    assert_eq!(vec![1f64, 2f64, 3f64, 4f64, 5f64].iter().mean(), 3.);\n    assert_eq!(vec![1f64, 2f64, 3f64, 4f64, 5f64].into_iter().mean(), 3.);\n}\n</code></pre>\n\n<p>I used <code>Borrow</code> trait to support iterators over <code>f64</code> and <code>&amp;f64</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1494538751, "creation_date": 1494538751, "answer_id": 43926007, "question_id": 43921436, "link": "https://stackoverflow.com/questions/43921436/extend-iterator-with-a-mean-method/43926007#43926007", "title": "Extend Iterator with a &quot;mean&quot; method", "body": "<blockquote>\n  <p>like it is done with <code>sum</code></p>\n</blockquote>\n\n<p>Let's review how <code>sum</code> works:</p>\n\n<pre><code>fn sum&lt;S&gt;(self) -&gt; S\n    where Self: Sized,\n          S: Sum&lt;Self::Item&gt;,\n</code></pre>\n\n<p><code>sum</code> is implemented on any iterator, so long as the result type <code>S</code> implements <code>Sum</code> for the iterated value. The <em>caller</em> gets to pick the result type. <code>Sum</code> is defined as:</p>\n\n<pre><code>pub trait Sum&lt;A = Self&gt; {\n    fn sum&lt;I&gt;(iter: I) -&gt; Self \n        where I: Iterator&lt;Item = A&gt;;\n}\n</code></pre>\n\n<p><code>Sum::sum</code> takes an iterator of <code>A</code> and produces a value of the type it is implemented from. </p>\n\n<p>We simply copy-paste the structure, changing <code>Sum</code> for <code>Mean</code> and put the straightforward implementations:</p>\n\n<pre><code>trait MeanExt: Iterator {\n    fn mean&lt;M&gt;(self) -&gt; M\n        where M: Mean&lt;Self::Item&gt;,\n              Self: Sized,\n    {\n        M::mean(self)        \n    }\n}\n\nimpl&lt;I: Iterator&gt; MeanExt for I {}\n\ntrait Mean&lt;A = Self&gt; {\n    fn mean&lt;I&gt;(iter: I) -&gt; Self \n        where I: Iterator&lt;Item = A&gt;;\n}\n\nimpl Mean for f64 {\n    fn mean&lt;I&gt;(iter: I) -&gt; Self\n        where I: Iterator&lt;Item = f64&gt;\n    {\n        let mut sum = 0.0;\n        let mut count: usize = 0;\n\n        for v in iter {\n            sum += v;\n            count += 1;\n        }\n\n        if count &gt; 0 {\n            sum / (count as f64)\n        } else {\n            0.0\n        }\n    }\n}\n\nimpl&lt;'a&gt; Mean&lt;&amp;'a f64&gt; for f64 {\n    fn mean&lt;I&gt;(iter: I) -&gt; Self\n        where I: Iterator&lt;Item = &amp;'a f64&gt;\n    {\n        iter.cloned().mean()\n    }\n}\n\nfn main() {\n    let mean: f64 = [1.0, 2.0, 3.0].iter().mean();\n    println!(\"{:?}\", mean);\n    let mean: f64 = vec![-1.0, 2.0, 1.0].into_iter().mean();\n    println!(\"{:?}\", mean);\n}\n</code></pre>\n"}], "owner": {"reputation": 317, "user_id": 7286194, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b346026acd028b9e61ebdf12468c477a?s=128&d=identicon&r=PG&f=1", "display_name": "fantom", "link": "https://stackoverflow.com/users/7286194/fantom"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 416, "favorite_count": 0, "accepted_answer_id": 43926007, "answer_count": 2, "score": 1, "last_activity_date": 1494538751, "creation_date": 1494521469, "last_edit_date": 1494537568, "question_id": 43921436, "link": "https://stackoverflow.com/questions/43921436/extend-iterator-with-a-mean-method", "title": "Extend Iterator with a &quot;mean&quot; method", "body": "<p>I'm trying to implement a <code>mean</code> method for Iterator, like it is done with <code>sum</code>.\nHowever, <code>sum</code> is <code>Iterator</code> method, so I decided to implement trait for any type that implements <code>Iterator</code>:</p>\n\n<pre><code>pub trait Mean&lt;A = Self&gt;: Sized {\n    fn mean&lt;I: Iterator&lt;Item = A&gt;&gt;(iter: I) -&gt; f64;\n}\n\nimpl Mean for u64 {\n    fn mean&lt;I: Iterator&lt;Item = u64&gt;&gt;(iter: I) -&gt; f64 {\n        //use zip to start enumeration from 1, not 0\n        iter.zip((1..))\n            .fold(0., |s, (e, i)| (e as f64 + s * (i - 1) as f64) / i as f64)\n    }\n}\n\nimpl&lt;'a&gt; Mean&lt;&amp;'a u64&gt; for u64 {\n    fn mean&lt;I: Iterator&lt;Item = &amp;'a u64&gt;&gt;(iter: I) -&gt; f64 {\n        iter.zip((1..))\n            .fold(0., |s, (&amp;e, i)| (e as f64 + s * (i - 1) as f64) / i as f64)\n    }\n}\n\ntrait MeanIterator: Iterator {\n    fn mean(self) -&gt; f64;\n}\n\nimpl&lt;T: Iterator&gt; MeanIterator for T {\n    fn mean(self) -&gt; f64 {\n        Mean::mean(self)\n    }\n}\n\nfn main() {\n    assert_eq!([1, 2, 3, 4, 5].iter().mean(), 3.);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=fbe6fa701486f0dc02f2ce80f2d03cb0&amp;version=stable&amp;backtrace=1\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>The error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0282]: type annotations needed\n  --&gt; src/main.rs:26:9\n   |\n26 |         Mean::mean(self)\n   |         ^^^^^^^^^^ cannot infer type for `Self`\n</code></pre>\n\n<p>Is there any way to fix the code, or it is impossible in Rust?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 111, "user_id": 7679205, "user_type": "registered", "accept_rate": 50, "profile_image": "https://graph.facebook.com/1785230388414883/picture?type=large", "display_name": "Atsuki Takahashi", "link": "https://stackoverflow.com/users/7679205/atsuki-takahashi"}, "edited": false, "score": 0, "creation_date": 1494502973, "post_id": 43914327, "comment_id": 74861959, "body": "Thanks for nice answer. But what makes this problem difficult is I can&#39;t write <code>Struct</code> simply. Because <code>Struct</code> has so big generic parameter that I can&#39;t write simply. Do you have any ideas ?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 111, "user_id": 7679205, "user_type": "registered", "accept_rate": 50, "profile_image": "https://graph.facebook.com/1785230388414883/picture?type=large", "display_name": "Atsuki Takahashi", "link": "https://stackoverflow.com/users/7679205/atsuki-takahashi"}, "edited": false, "score": 1, "creation_date": 1494533346, "post_id": 43914327, "comment_id": 74882595, "body": "@AtsukiTakahashi If typing is your primary concern, you may be able to just make a <a href=\"https://doc.rust-lang.org/book/type-aliases.html\" rel=\"nofollow noreferrer\">type alias</a> (e.g. <code>type Short&lt;T&gt; = Long&lt;&#39;a, T, Box&lt;Trait + &#39;static&gt;&gt;</code> or what have you, and then use <code>Short&lt;T&gt;</code> instead of the long version."}], "tags": [], "owner": {"reputation": 22050, "user_id": 497364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8fd4eb2ae966a16e698b3e61217a7e1?s=128&d=identicon&r=PG", "display_name": "Paolo Falabella", "link": "https://stackoverflow.com/users/497364/paolo-falabella"}, "is_accepted": false, "score": 1, "last_activity_date": 1494502591, "last_edit_date": 1495542364, "creation_date": 1494502591, "answer_id": 43914327, "question_id": 43913009, "link": "https://stackoverflow.com/questions/43913009/how-can-i-specify-sized-for-boxed-value/43914327#43914327", "title": "How can I specify `Sized` for boxed value", "body": "<p>I think you need to be able to change either <code>func</code> or <code>need_sized</code> for this to work. As they are, <code>func</code> returns a <a href=\"https://doc.rust-lang.org/book/trait-objects.html\" rel=\"nofollow noreferrer\">trait object</a> which is unsized, while <code>need_sized</code> requires a concrete type (more than that, it requires full ownership of its parameter <code>item</code>, not just a reference).</p>\n\n<p>Approach 1: if you control and can change <code>func()</code>, you can change it to return a <code>Box&lt;Struct&gt;</code> instead of <code>Box&lt;Trait&gt;</code>:</p>\n\n<pre><code>fn func() -&gt; Box&lt;Struct&gt; {\n    Box::new(Struct{})\n}\n\nfn main() {\n    let s1 = func(); // Box&lt;Struct&gt;, needs dereferencing with *\n                     // to become a Struct\n    need_sized(*s1); // this now works\n}\n</code></pre>\n\n<p>Approach 2: if you don't control <code>func()</code> but do control <code>need_sized</code> and <code>Trait</code> you can downcast the Box back to a Struct as in this answer: <a href=\"https://stackoverflow.com/a/33687996/497364\">https://stackoverflow.com/a/33687996/497364</a> </p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=4de7e0ccdabff976c25b932a13f9bbb9&amp;version=nightly&amp;backtrace=0\" rel=\"nofollow noreferrer\">playground</a> </p>\n\n<pre><code>use std::any::Any; // needed for downcast\n\ntrait Trait {\n    fn as_any(&amp;self) -&gt; &amp;Any;\n}\n\nstruct Struct{}\nimpl Trait for Struct {\n    fn as_any(&amp;self) -&gt; &amp;Any {\n        self\n    }\n}\n\nfn func() -&gt; Box&lt;Trait&gt; {\n    Box::new(Struct{})\n}\n\n\n// changed to accept a &amp;T\nfn need_sized&lt;T: Trait + Sized&gt;(_item: &amp;T) { \n    println!(\"ok\");\n}\n\nfn main() {\n    let s2 = func(); \n    if let Some(st) = s2.as_any().downcast_ref::&lt;Struct&gt;() {\n        need_sized(st);\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 111, "user_id": 7679205, "user_type": "registered", "accept_rate": 50, "profile_image": "https://graph.facebook.com/1785230388414883/picture?type=large", "display_name": "Atsuki Takahashi", "link": "https://stackoverflow.com/users/7679205/atsuki-takahashi"}, "edited": false, "score": 0, "creation_date": 1494503742, "post_id": 43914584, "comment_id": 74862487, "body": "Thanks for answered. So in case we can&#39;t <code>impl Trait for Box&lt;Trait&gt;</code> (ex. <code>Trait</code> is not our code), how do we do?"}, {"owner": {"reputation": 11, "user_id": 7997243, "user_type": "unregistered", "profile_image": "https://www.gravatar.com/avatar/cc41e2ed04f54682239e84933ce835e0?s=128&d=identicon&r=PG", "display_name": "kvsari", "link": "https://stackoverflow.com/users/7997243/kvsari"}, "reply_to_user": {"reputation": 111, "user_id": 7679205, "user_type": "registered", "accept_rate": 50, "profile_image": "https://graph.facebook.com/1785230388414883/picture?type=large", "display_name": "Atsuki Takahashi", "link": "https://stackoverflow.com/users/7679205/atsuki-takahashi"}, "edited": false, "score": 0, "creation_date": 1494503919, "post_id": 43914584, "comment_id": 74862615, "body": "Try using a newtype struct."}, {"owner": {"reputation": 11, "user_id": 7997243, "user_type": "unregistered", "profile_image": "https://www.gravatar.com/avatar/cc41e2ed04f54682239e84933ce835e0?s=128&d=identicon&r=PG", "display_name": "kvsari", "link": "https://stackoverflow.com/users/7997243/kvsari"}, "reply_to_user": {"reputation": 111, "user_id": 7679205, "user_type": "registered", "accept_rate": 50, "profile_image": "https://graph.facebook.com/1785230388414883/picture?type=large", "display_name": "Atsuki Takahashi", "link": "https://stackoverflow.com/users/7679205/atsuki-takahashi"}, "edited": false, "score": 0, "creation_date": 1494504364, "post_id": 43914584, "comment_id": 74862954, "body": "I think this <a href=\"https://doc.rust-lang.org/nightly/book/second-edition/ch19-03-advanced-traits.html#the-newtype-pattern-to-implement-external-traits-on-external-types\" rel=\"nofollow noreferrer\">here</a> explains what you may need to do."}], "tags": [], "owner": {"reputation": 11, "user_id": 7997243, "user_type": "unregistered", "profile_image": "https://www.gravatar.com/avatar/cc41e2ed04f54682239e84933ce835e0?s=128&d=identicon&r=PG", "display_name": "kvsari", "link": "https://stackoverflow.com/users/7997243/kvsari"}, "is_accepted": false, "score": 1, "last_activity_date": 1494503308, "creation_date": 1494503308, "answer_id": 43914584, "question_id": 43913009, "link": "https://stackoverflow.com/questions/43913009/how-can-i-specify-sized-for-boxed-value/43914584#43914584", "title": "How can I specify `Sized` for boxed value", "body": "<p>The error message is; </p>\n\n<blockquote>\n  <p>error[E0277]: the trait bound <code>std::boxed::Box&lt;Trait&gt;: Trait</code> is not satisfied</p>\n</blockquote>\n\n<p>So adding;\n<code>impl Trait for Box&lt;Trait&gt; {}</code>\nafter line three lets it compile.</p>\n"}, {"comments": [{"owner": {"reputation": 111, "user_id": 7679205, "user_type": "registered", "accept_rate": 50, "profile_image": "https://graph.facebook.com/1785230388414883/picture?type=large", "display_name": "Atsuki Takahashi", "link": "https://stackoverflow.com/users/7679205/atsuki-takahashi"}, "edited": false, "score": 0, "creation_date": 1494509810, "post_id": 43915326, "comment_id": 74867196, "body": "Thanks for your help!"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1494533428, "post_id": 43915326, "comment_id": 74882631, "body": "A <a href=\"https://doc.rust-lang.org/book/type-aliases.html\" rel=\"nofollow noreferrer\">type alias</a> may also work with less verbosity (and less flexibility)."}], "tags": [], "owner": {"reputation": 11388, "user_id": 220485, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bTrsL.jpg?s=128&g=1", "display_name": "Daniel Fath", "link": "https://stackoverflow.com/users/220485/daniel-fath"}, "is_accepted": true, "score": 1, "last_activity_date": 1494505766, "last_edit_date": 1494505766, "creation_date": 1494505410, "answer_id": 43915326, "question_id": 43913009, "link": "https://stackoverflow.com/questions/43913009/how-can-i-specify-sized-for-boxed-value/43915326#43915326", "title": "How can I specify `Sized` for boxed value", "body": "<p>Given the specification the only way you can bypass this is to make <a href=\"https://doc.rust-lang.org/nightly/book/second-edition/ch19-03-advanced-traits.html#the-newtype-pattern-to-implement-external-traits-on-external-types\" rel=\"nofollow noreferrer\">newtype wrapper</a>. </p>\n\n<pre><code>// I can't edit these trait and struct.\ntrait Trait {}\nstruct Struct();\nimpl Trait for Struct {}\n\n\n// This is my code.\nstruct MyStruct(Struct);\nimpl Trait for Box&lt;MyStruct&gt; { /* if there is code here delegate to inner `Struct` */}\n\nfn func() -&gt; Box&lt;MyStruct&gt; {\n    Box::new(MyStruct(Struct{}))\n}\n\n// This is not my code.\nfn need_sized&lt;T: Trait + Sized&gt;(item: T) {\n    println!(\"ok\");\n}\n\nfn main() {\n    // This can not be compiled!\n    need_sized(func());\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=4de7e0ccdabff976c25b932a13f9bbb9&amp;version=nightly&amp;backtrace=0\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>Why other approaches won't solve your issues:</p>\n\n<ol>\n<li><p>Monomorphisized trait</p>\n\n<p><code>fn func&lt;T: Trait&gt;() -&gt; Box&lt;T&gt; { ... }</code></p></li>\n</ol>\n\n<p>You want to pass <code>func</code> to <code>need_size</code>. More specifically, you want to pass <code>Box</code> to the <code>need_size</code> function.</p>\n\n<ol start=\"2\">\n<li>Changing function signature to <code>Box&lt;Struct&gt;</code></li>\n</ol>\n\n<blockquote>\n  <p>error[E0277]: the trait bound <code>std::boxed::Box&lt;Struct&gt;: Trait</code> is not satisfied</p>\n\n<pre><code>--&gt; &lt;anon&gt;:22:5\n  |\n22|     need_sized(func());\n  |     ^^^^^^^^^^ the trait `Trait` is not implemented for   `std::boxed::Box&lt;Struct&gt;`\n  |= help: the following implementations were found:\n         &lt;std::boxed::Box&lt;MyStruct&gt; as Trait&gt;\n   = note: required by `need_sized`\n</code></pre>\n</blockquote>\n\n<p>This won't work because you can't control either <code>Box</code> or <code>Struct</code> since they aren't defined in you crate, and it would mess up with coherence rules. In future this might be solved using special coherence rules.</p>\n"}], "owner": {"reputation": 111, "user_id": 7679205, "user_type": "registered", "accept_rate": 50, "profile_image": "https://graph.facebook.com/1785230388414883/picture?type=large", "display_name": "Atsuki Takahashi", "link": "https://stackoverflow.com/users/7679205/atsuki-takahashi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 603, "favorite_count": 0, "accepted_answer_id": 43915326, "answer_count": 3, "score": 2, "last_activity_date": 1494505766, "creation_date": 1494498990, "last_edit_date": 1494503589, "question_id": 43913009, "link": "https://stackoverflow.com/questions/43913009/how-can-i-specify-sized-for-boxed-value", "title": "How can I specify `Sized` for boxed value", "body": "<p>I want to notify that \"this method will return boxed <code>Struct</code> which implements <code>Trait</code> and <code>Sized</code>\".\nSimple resolution is just put <code>Struct</code> into <code>Box</code> but I can't because <code>Struct</code> has so big generic parameter that I can't write manually.</p>\n\n<pre><code>// I can't edit these trait and struct.\ntrait Trait {}\nstruct Struct();\nimpl Trait for Struct {}\n\n// This is my code.\nfn func() -&gt; Box&lt;Trait&gt; {\n    Box::new(Struct{})\n}\n\n// This is not my code.\nfn need_sized&lt;T: Trait + Sized&gt;(item: T) {\n    println!(\"ok\");\n}\n\nfn main() {\n    // This can not be compiled!\n    need_sized(func());\n}\n</code></pre>\n\n<p>I can edit <code>func</code> function but I can't others.</p>\n\n<p>How can I specify that Trait implements Sized?\nIs it something kind like below?</p>\n\n<pre><code>fn func() -&gt; Box&lt;Trait + Sized&gt;\n</code></pre>\n"}]