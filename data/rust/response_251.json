[{"tags": ["rust"], "comments": [{"owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 2, "creation_date": 1572501481, "post_id": 58634589, "comment_id": 103581453, "body": "Why does your <code>intersect</code> method consume the <code>Intersectable</code> (i.e. takes <code>self</code> and not <code>&amp;self</code>)? Is it necessary for your use case?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1572502432, "post_id": 58634589, "comment_id": 103581735, "body": "it&#39;s just too hard to do, why make life complicated ? <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=0fb3faf9cd6b5b4aa9f851f1717e4f64\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 562, "user_id": 1922722, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/39fbebb5bebce94df3a38e3e44649f57?s=128&d=identicon&r=PG", "display_name": "nwn", "link": "https://stackoverflow.com/users/1922722/nwn"}, "reply_to_user": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 0, "creation_date": 1572535439, "post_id": 58634589, "comment_id": 103598141, "body": "@Cerberus I did initially have it take <code>&amp;self</code>, but changed that so it can consume the <code>Iterator</code> without it being <code>Copy</code>. There&#39;s no reason it couldn&#39;t take <code>&amp;self</code> for the primitives."}, {"owner": {"reputation": 562, "user_id": 1922722, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/39fbebb5bebce94df3a38e3e44649f57?s=128&d=identicon&r=PG", "display_name": "nwn", "link": "https://stackoverflow.com/users/1922722/nwn"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1572535556, "post_id": 58634589, "comment_id": 103598207, "body": "@Stargateur I did consider that. Ultimately, I&#39;ll be returning the closest intersection point to the ray origin, but I could still use <code>fold</code> for that. The real problem is that I want to be able to pass around the iterator as an <code>Intersectable</code> type."}], "owner": {"reputation": 562, "user_id": 1922722, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/39fbebb5bebce94df3a38e3e44649f57?s=128&d=identicon&r=PG", "display_name": "nwn", "link": "https://stackoverflow.com/users/1922722/nwn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 80, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1572475318, "creation_date": 1572475318, "question_id": 58634589, "link": "https://stackoverflow.com/questions/58634589/how-to-implement-a-trait-for-iterators-over-implementors-of-that-trait", "title": "How to implement a trait for iterators over implementors of that trait", "body": "<p>Say I have a trait, <code>Intersectable</code>, that is implemented for various geometric primitives. I wish to implement <code>Intersectable</code> for iterators over a list of these primitives.</p>\n\n<p>I have the code (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a6d1d06b06daeb0d887feb6b5c927632\" rel=\"nofollow noreferrer\">playground</a>):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::borrow::Borrow;\n\nstruct Ray {}\ntrait Intersectable {\n    fn intersect(self, ray: &amp;Ray) -&gt; bool;\n}\n\nstruct Circle {}\nimpl Intersectable for Circle {\n    fn intersect(self, _ray: &amp;Ray) -&gt; bool {\n        true\n    }\n}\nimpl Intersectable for &amp;Circle {\n    fn intersect(self, _ray: &amp;Ray) -&gt; bool {\n        true\n    }\n}\n\nimpl&lt;'a, T&gt; Intersectable for T\n    where T: Iterator&lt;Item = &amp;'a dyn Intersectable&gt; {\n    fn intersect(self, ray: &amp;Ray) -&gt; bool {\n        for obj in self {\n            if obj.intersect(ray) {        // Error occurs here\n                return true;\n            }\n        }\n        return false;\n    }\n}\n\nfn main() {\n    let objects: [Box&lt;dyn Intersectable&gt;; 2] = [\n        Box::new(Circle {}),\n        Box::new(Circle {}),\n    ];\n    let ray = Ray {};\n\n    // I wish to call intersect on the iterator as follows:\n    println!(\"Intersection: {}\", objects.iter().map(|b| b.borrow()).intersect(&amp;ray));\n}\n</code></pre>\n\n<p>This yields the error:</p>\n\n<pre><code>error[E0161]: cannot move a value of type dyn Intersectable: the size of dyn Intersectable cannot be statically determined\n  --&gt; src/main.rs:24:16\n   |\n24 |             if obj.intersect(ray) {\n   |                ^^^\n\nerror[E0507]: cannot move out of `*obj` which is behind a shared reference\n  --&gt; src/main.rs:24:16\n   |\n24 |             if obj.intersect(ray) {\n   |                ^^^ move occurs because `*obj` has type `dyn Intersectable`, which does not implement the `Copy` trait\n</code></pre>\n\n<p>To fix this, I tried replacing the erroneous call to <code>intersect</code> with <code>&lt;T::Item&gt;::intersect(obj, ray)</code> and add the following implementation (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b6a4bf1e4fb915834570d7d5b8a00d56\" rel=\"nofollow noreferrer\">playground</a>):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>\nimpl Intersectable for &amp;dyn Intersectable {\n    fn intersect(self, ray: &amp;Ray) -&gt; bool {\n        (*self).intersect(ray)             // Error now occurs here\n    }\n}\n</code></pre>\n\n<p>I get the same error in the new code. Yet another attempt yielded <code>error[E0119]: conflicting implementations of trait</code> as I tried implementing it on a reference type.</p>\n\n<hr />\n\n<p>So is it possible to implement <code>Intersectable</code> for <code>Iterator&lt;Item = &amp;dyn Intersectable&gt;</code>?</p>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"tags": [], "owner": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "is_accepted": true, "score": 9, "last_activity_date": 1598808859, "last_edit_date": 1598808859, "creation_date": 1572457765, "answer_id": 58631125, "question_id": 58627230, "link": "https://stackoverflow.com/questions/58627230/can-i-include-debug-information-only-for-my-code-without-packages/58631125#58631125", "title": "Can I include debug information only for my code without packages?", "body": "<p>Edit: This functionality is now stabilized and can be used on the stable toolchain without the <code>cargo-features</code> manifest key. This functionality is documented <a href=\"https://doc.rust-lang.org/cargo/reference/profiles.html#overrides\" rel=\"nofollow noreferrer\">in the Cargo reference</a>.</p>\n<hr />\n<p>If you're willing to use unstable cargo features with a nightly toolchain, this is possible through the <a href=\"https://github.com/rust-lang/rust/issues/48683\" rel=\"nofollow noreferrer\">cargo profile dependencies</a> feature, like so:</p>\n<pre><code>cargo-features = [&quot;profile-overrides&quot;]\n\n[package]\nname = &quot;app&quot;\nversion = &quot;0.7.1&quot;\nedition = &quot;2018&quot;\n\n[dependencies]\nactix = &quot;*&quot;\nactix-web = {version = &quot;1.0&quot;, features = [&quot;ssl&quot;]}\n...\ntokio-core = &quot;*&quot;\ntokio = &quot;*&quot;\n\n[profile.release]\ndebug = true\n\n// disable debug symbols for all packages except this one\n[profile.release.package.&quot;*&quot;]\ndebug = false\n\n</code></pre>\n"}], "owner": {"reputation": 135, "user_id": 1129880, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b61fd74af61f75e54a113044e7475790?s=128&d=identicon&r=PG", "display_name": "anatol", "link": "https://stackoverflow.com/users/1129880/anatol"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 184, "favorite_count": 1, "accepted_answer_id": 58631125, "answer_count": 1, "score": 13, "last_activity_date": 1598808859, "creation_date": 1572444527, "question_id": 58627230, "link": "https://stackoverflow.com/questions/58627230/can-i-include-debug-information-only-for-my-code-without-packages", "title": "Can I include debug information only for my code without packages?", "body": "<p>With included debug info, my binary becomes 400 MB about. This happens because Rust includes debug info for all dependencies. Is there any way to include debug info only for my code?</p>\n\n<pre><code>[package]\nname = \"app\"\nversion = \"0.7.1\"\nedition = \"2018\"\n\n[dependencies]\nactix = \"*\"\nactix-web = {version = \"1.0\", features = [\"ssl\"]}\n...\ntokio-core = \"*\"\ntokio = \"*\"\n\n[profile.release]\ndebug = true\n</code></pre>\n"}, {"tags": ["rust", "linux-df"], "comments": [{"owner": {"reputation": 20521, "user_id": 1135424, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/rvwBS.jpg?s=128&g=1", "display_name": "nbari", "link": "https://stackoverflow.com/users/1135424/nbari"}, "edited": false, "score": 1, "creation_date": 1572439535, "post_id": 58624622, "comment_id": 103558923, "body": "probably related: <a href=\"https://github.com/giampaolo/psutil/issues/829\" rel=\"nofollow noreferrer\">github.com/giampaolo/psutil/issues/829</a>"}], "owner": {"reputation": 20521, "user_id": 1135424, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/rvwBS.jpg?s=128&g=1", "display_name": "nbari", "link": "https://stackoverflow.com/users/1135424/nbari"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 687, "favorite_count": 1, "answer_count": 0, "score": 3, "last_activity_date": 1572456882, "creation_date": 1572435784, "last_edit_date": 1572456882, "question_id": 58624622, "link": "https://stackoverflow.com/questions/58624622/calculate-disk-usage-percentage-to-match-df-use-output", "title": "calculate disk usage percentage to match df Use% output", "body": "<p>I am trying to calculate and display in percentage the current disk usage with this:</p>\n\n<pre><code>use nix::sys::statvfs::statvfs;\n\nmacro_rules! cast {\n    ($x:expr) =&gt; {\n        u64::from($x)\n    };\n}\n\nfn main() {\n    let stat = statvfs(\"/var/db\".as_bytes()).unwrap();\n    // f_frsize\n    // let total_space = cast!(stat.fragment_size()) * cast!(stat.blocks());\n    // let avail_space = cast!(stat.fragment_size()) * cast!(stat.blocks_available());\n    // f_bsize\n    let total_space = cast!(stat.block_size()) * cast!(stat.blocks());\n    let avail_space = cast!(stat.block_size()) * cast!(stat.blocks_available());\n    let used = total_space - avail_space;\n    let usage = used * 100 / total_space;\n    println!(\"total: {}\", total_space);\n    println!(\"avail: {}\", avail_space);\n    println!(\"used:  {}\", used);\n    println!(\"use%:  {}%\", usage);\n}\n</code></pre>\n\n<p>The output on my current test system is:</p>\n\n<pre><code>total: 6779424768\navail: 3697811456\nused:  3081613312\nuse%:  45%\n</code></pre>\n\n<p>Output of <code>df -B 1 /var/db</code></p>\n\n<pre><code># df -B 1 /var/db\nFilesystem      1B-blocks       Used  Available Use% Mounted on\n/dev/loop3     6779424768 2713636864 3697811456  43% /var/db\n</code></pre>\n\n<p><code>Used</code> field not matching <code>2713636864</code> I am calculating it by doing <code>6779424768-3697811456 = 3081613312</code></p>\n\n<p>Output of <code>df -h /var/db</code>:</p>\n\n<pre><code># df -h /var/db\nFilesystem      Size  Used Avail Use% Mounted on\n/dev/loop3      6.4G  2.6G  3.5G  43% /var/db\n</code></pre>\n\n<p>I think I am missing something probably converting the units, I tried already using <code>f_frsize</code> instead of <code>f_bsize</code> and result still the same, the code above returns <code>45</code> and df <code>43</code>.</p>\n\n<p>Any ideas?</p>\n"}, {"tags": ["logging", "rust", "actix-web"], "answers": [{"tags": [], "owner": {"reputation": 4459, "user_id": 127251, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9b6273d6505f5cead55793f95dbe7873?s=128&d=identicon&r=PG", "display_name": "Paul Chernoch", "link": "https://stackoverflow.com/users/127251/paul-chernoch"}, "is_accepted": true, "score": 2, "last_activity_date": 1572469360, "last_edit_date": 1572469360, "creation_date": 1572468914, "answer_id": 58633515, "question_id": 58618394, "link": "https://stackoverflow.com/questions/58618394/how-do-you-tackle-the-distinct-tasks-of-logging-http-requests-and-outputting-tra/58633515#58633515", "title": "How do you tackle the distinct tasks of logging HTTP requests and outputting trace and error messages deeper in your code?", "body": "<p>You can use the same logger for Actix-web and the rest of your application. The key is to distinguish the calls to the macros (trace!, debug!, info!, warn! and error!) by including the optional parameter <code>target</code>. Then you have to set the RUST_LOG environment variable.</p>\n\n<p>Example invocation:</p>\n\n<pre><code>RUST_LOG=\"info,parser::expression=trace,actix_web=info\" cargo run\n</code></pre>\n\n<ul>\n<li>The <code>actix_web</code> targets their code and prints the info and higher level messages.</li>\n<li>The <code>parser::expression</code> targets a portion of my code and enables trace level messages.</li>\n</ul>\n\n<p>In my code, here is a sample trace message:</p>\n\n<pre><code>    trace!(target: \"parser::expression\", \"Tracing: {}\", self.expression_source);\n\n</code></pre>\n\n<p>If you omit the <code>target</code> parameter, your module path becomes the default target, or so the docs say, but every spelling I have used for the module path, including more and fewer pieces, including the class name, etc, all fail, so I do not understand the docs. Specifying it manually does work, so that is what I do.</p>\n\n<p>It is also important to setup the crate import correctly in the Cargo.toml file:</p>\n\n<pre><code>[dependencies]\nlog = { version = \"0.4\", features = [\"max_level_trace\", \"release_max_level_warn\", \"std\", \"serde\"] }\n</code></pre>\n\n<p>The above permits trace messages on the dev build, but only warnings on the release build. The compiler will discard the code at compile time, so changing the environment variable at run time will have no effect on this kind of change.</p>\n\n<p>Here is some useful documentation:</p>\n\n<p><a href=\"https://rust-lang-nursery.github.io/rust-cookbook/development_tools/debugging/config_log.html\" rel=\"nofollow noreferrer\">https://rust-lang-nursery.github.io/rust-cookbook/development_tools/debugging/config_log.html</a></p>\n"}], "owner": {"reputation": 4459, "user_id": 127251, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9b6273d6505f5cead55793f95dbe7873?s=128&d=identicon&r=PG", "display_name": "Paul Chernoch", "link": "https://stackoverflow.com/users/127251/paul-chernoch"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 574, "favorite_count": 0, "accepted_answer_id": 58633515, "answer_count": 1, "score": 2, "last_activity_date": 1572469360, "creation_date": 1572406598, "question_id": 58618394, "link": "https://stackoverflow.com/questions/58618394/how-do-you-tackle-the-distinct-tasks-of-logging-http-requests-and-outputting-tra", "title": "How do you tackle the distinct tasks of logging HTTP requests and outputting trace and error messages deeper in your code?", "body": "<p>I read this about how to perform logging of HTTP requests in Actix using logging middleware:</p>\n\n<p><a href=\"https://docs.rs/actix-web/1.0.0/actix_web/middleware/struct.Logger.html\" rel=\"nofollow noreferrer\">https://docs.rs/actix-web/1.0.0/actix_web/middleware/struct.Logger.html</a></p>\n\n<p>Now say that I want to also add logging deep within my application using the log crate's framework. For example, I need detailed traces for debugging and a good place to output panic messages before the actual panic stops the world. Since only one logger can be configured via log, will this cause problems? If I want to also log the current username or session id down deep, do I have to pass it down all the way, or does Actix have a way to get at that globally?</p>\n"}, {"tags": ["generics", "rust"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1572403564, "post_id": 58617995, "comment_id": 103545283, "body": "Isn&#39;t it less than ideal that <code>calc</code> would return <code>-1234</code>?"}, {"owner": {"reputation": 2854, "user_id": 6923555, "user_type": "registered", "accept_rate": 62, "profile_image": "https://lh3.googleusercontent.com/-N8FUb3l8l44/AAAAAAAAAAI/AAAAAAAAAio/1HlhcKxsTPo/photo.jpg?sz=128", "display_name": "rodrigocfd", "link": "https://stackoverflow.com/users/6923555/rodrigocfd"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1572404027, "post_id": 58617995, "comment_id": 103545376, "body": "@loganfsmyth The <code>-1</code> is just an example, the real number will probably be a <a href=\"https://en.wikipedia.org/wiki/Rational_number\" rel=\"nofollow noreferrer\">rational number</a>."}, {"owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "edited": false, "score": 2, "creation_date": 1572424375, "post_id": 58617995, "comment_id": 103550802, "body": "@Rodrigo: What exactly is the problem with <code>extract</code>? In which way should it be generic? (If it is working on <code>Num</code> and <code>Num</code> always wraps <code>i32</code>, where does it need to be generic?)"}], "answers": [{"tags": [], "owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "is_accepted": false, "score": 2, "last_activity_date": 1572405666, "creation_date": 1572405666, "answer_id": 58618301, "question_id": 58617995, "link": "https://stackoverflow.com/questions/58617995/newtype-as-generic-parameter-in-rust/58618301#58618301", "title": "Newtype as generic parameter in Rust?", "body": "<p>Such a function would generally be unsafe since the internals might be private (and hence have restricted access). For example, suppose we have a newtype and implement <code>Drop</code> for it.</p>\n\n<pre><code>struct NewType(String);\n\nimpl Drop for NewType {\n    fn drop(&amp;mut self) {\n        println!(\"{}\", self.0)\n    }\n}\n\nfn main() {\n    let x = NewType(\"abc\".to_string());\n    let y = Some(x);\n\n    // this causes a compiler error\n    // let s = match y {\n    //     Some(s) =&gt; s.0,\n    //     None =&gt; panic!(),\n    // };\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=91f7d29aa8f1411c7cf263a2d76d88a5\" rel=\"nofollow noreferrer\">(playground)</a></p>\n\n<p>If your function worked, you'd be able to move the inner string out of the newtype. Then when the struct is dropped, it's able to access invalid memory.</p>\n\n<p>Nonetheless, you can write a macro that implements something along those lines. If you try to use the macro on something implementing <code>Drop</code>, the compiler will complain, but otherwise, this should work.</p>\n\n<pre><code>macro_rules! extract_impl {\n    (struct $struct_name: ident($type_name: ty);) =&gt; {\n        struct $struct_name($type_name);\n        impl $struct_name {\n            fn extract(item: Option&lt;Self&gt;) -&gt; $type_name {\n                match item {\n                    Some(item) =&gt; item.0,\n                    None =&gt; panic!(), // not sure what you want here\n                }\n            }\n        }\n    };\n}\n\nextract_impl! {\n    struct Num(i32);\n}\n\nimpl Num {\n    fn other_fun(&amp;self) {}\n}\n\nfn main() {\n    let x = Num(5);\n    println!(\"{}\", Num::extract(Some(x)));\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=5d07e096e541effdb14f0e58c25044df\" rel=\"nofollow noreferrer\">(playground)</a></p>\n\n<p>Having an <code>impl</code> block in the output of the macro doesn't cause any problems since you can have as many <code>impl</code> blocks for a single type as you need (in the original module).</p>\n\n<p>A better API would be to have <code>extract</code> return an option, rather than some meaningless value or panicking. Then the any error can easily be handled by the caller.</p>\n\n<pre><code>macro_rules! extract_impl {\n    (struct $struct_name: ident($type_name: ty);) =&gt; {\n        struct $struct_name($type_name);\n        impl $struct_name {\n            fn extract(item: Option&lt;Self&gt;) -&gt; Option&lt;$type_name&gt; {\n                item.map(|item| item.0)\n            }\n        }\n    };\n}\n\nextract_impl! {\n    struct Num(i32);\n}\n\nimpl Num {\n    fn other_fun(&amp;self) {}\n}\n\nfn main() {\n    let x = Num(5);\n    println!(\"{:?}\", Num::extract(Some(x)));\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=168c64e171acafa5d29c24a812464f20\" rel=\"nofollow noreferrer\">(playground)</a></p>\n"}, {"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 1, "last_activity_date": 1572433108, "creation_date": 1572433108, "answer_id": 58623874, "question_id": 58617995, "link": "https://stackoverflow.com/questions/58617995/newtype-as-generic-parameter-in-rust/58623874#58623874", "title": "Newtype as generic parameter in Rust?", "body": "<p>There are two main missing pieces here:</p>\n\n<ol>\n<li>You need to abstract the structure of <code>Num</code>, providing a way to extract the inner value without knowing the outer type.</li>\n<li>You need to constrain <code>R</code> to have number-like properties, so that you can express the idea of <code>-1</code> for it.</li>\n</ol>\n\n<p>The first can be solved by implementing <code>Deref</code> for <code>Num</code> and then using it as a trait bound. This will let you access the \"inner\" value. There are also other traits that have similar capabilities, but <code>Deref</code> is likely the one you want here:</p>\n\n<p>The second can be solved by implementing the <code>One</code> trait imported from the <code>num-traits</code> crate (to get the idea of a <code>1</code> value) and by implementing <code>std::ops::Neg</code> to be able to negate it to get <code>-1</code>. You will also need to require that <code>R</code> is <code>Copy</code>  or <code>Clone</code> so you can move it out of the reference.</p>\n\n<pre><code>use num_traits::One;\nuse std::ops::{Deref, Neg}; // 0.2.8\n\npub struct Num(pub i32);\n\nimpl Deref for Num {\n    type Target = i32;\n    fn deref(&amp;self) -&gt; &amp;i32 {\n        &amp;self.0\n    }\n}\n\npub fn extract&lt;T, R&gt;(val: Option&lt;T&gt;) -&gt; R\nwhere\n    T: Deref&lt;Target = R&gt;,\n    R: Neg&lt;Output = R&gt; + One + Copy,\n{\n    match val {\n        Some(val) =&gt; *val,\n        None =&gt; -R::one(),\n    }\n}\n</code></pre>\n\n<p>Depending on how you intend to use this, you might want to get rid of <code>R</code>, since it is always determined by <code>T</code>. As-is, the function is told by the caller the concrete types of <code>T</code> and <code>R</code>, and will make sure that <code>R</code> is <code>T</code>'s deref target. But it might be better if the caller only needs to provide <code>T</code> and let <code>R</code> be deduced from <code>T</code>.</p>\n\n<pre><code>pub fn extract&lt;T&gt;(val: Option&lt;T&gt;) -&gt; T::Target\nwhere\n    T: Deref,\n    &lt;T as Deref&gt;::Target: Neg&lt;Output = T::Target&gt; + One + Copy,\n{\n    match val {\n        Some(val) =&gt; *val,\n        None =&gt; -T::Target::one(),\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 2854, "user_id": 6923555, "user_type": "registered", "accept_rate": 62, "profile_image": "https://lh3.googleusercontent.com/-N8FUb3l8l44/AAAAAAAAAAI/AAAAAAAAAio/1HlhcKxsTPo/photo.jpg?sz=128", "display_name": "rodrigocfd", "link": "https://stackoverflow.com/users/6923555/rodrigocfd"}, "is_accepted": true, "score": 0, "last_activity_date": 1572546367, "creation_date": 1572546367, "answer_id": 58649318, "question_id": 58617995, "link": "https://stackoverflow.com/questions/58617995/newtype-as-generic-parameter-in-rust/58649318#58649318", "title": "Newtype as generic parameter in Rust?", "body": "<p>Turns out I figured out a much easier and elegant way to accomplish this. First, implement <code>Default</code> trait for my newtype:</p>\n\n<pre><code>use std::default::Default;\n\npub struct Num(pub i32);\n\nimpl Default for Num {\n    fn default() -&gt; Self {\n        Self(-1)\n    }\n}\n</code></pre>\n\n<p>And then, when needed, just use <code>unwrap_or_default</code> accessing first newtype tuple element:</p>\n\n<pre><code>pub fn calc(nu: Option&lt;Num&gt;) -&gt; i32 {\n    // do a lot of complicated calculations...\n    nu.unwrap_or_default().0 * 1234\n}\n</code></pre>\n"}], "owner": {"reputation": 2854, "user_id": 6923555, "user_type": "registered", "accept_rate": 62, "profile_image": "https://lh3.googleusercontent.com/-N8FUb3l8l44/AAAAAAAAAAI/AAAAAAAAAio/1HlhcKxsTPo/photo.jpg?sz=128", "display_name": "rodrigocfd", "link": "https://stackoverflow.com/users/6923555/rodrigocfd"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 224, "favorite_count": 0, "accepted_answer_id": 58649318, "answer_count": 3, "score": 0, "last_activity_date": 1572546367, "creation_date": 1572403026, "question_id": 58617995, "link": "https://stackoverflow.com/questions/58617995/newtype-as-generic-parameter-in-rust", "title": "Newtype as generic parameter in Rust?", "body": "<p>Suppose I have the following newtype:</p>\n\n<pre><code>pub struct Num(pub i32);\n</code></pre>\n\n<p>Now, I have a function which accepts an optional <code>Num</code>:</p>\n\n<pre><code>pub fn calc(nu: Option&lt;Num&gt;) -&gt; i32 {\n    let real_nu = match nu { // extract the value inside Num\n        Some(nu) =&gt; nu.0,\n        None     =&gt; -1\n    };\n    // performs lots of complicated calculations...\n    real_nu * 1234\n}\n</code></pre>\n\n<p>What I want to write is a generic <code>extract</code> function like the one below (which won't compile):</p>\n\n<pre><code>// T here would be \"Num\" newtype\n// R would be \"i32\", which is wrapped by \"Num\"\n\npub fn extract&lt;T, R&gt;(val: Option&lt;T&gt;) -&gt; R {\n    match val {\n        Some(val) =&gt; val.0, // return inner number\n        None      =&gt; -1 as R\n    }\n}\n</code></pre>\n\n<p>So that I can bypass the <code>match</code> inside my calc function:</p>\n\n<pre><code>pub fn calc(nu: Option&lt;Num&gt;) -&gt; i32 {\n    // do a lot of complicated calculations...\n    extract(nu) * 1234 // automatically extract i32 or -1\n}\n</code></pre>\n\n<p>How can I write <code>extract</code>?</p>\n\n<p><strong>Motivation:</strong> in the program I'm writing, there are several newtypes like <code>Num</code>, and they wrap <code>i8</code>, <code>i16</code> and <code>i32</code>. And there are many different <code>calc</code> functions. It's getting very repetitive to write all these <code>match</code>es at the begining of each <code>calc</code> function.</p>\n"}, {"tags": ["rust", "iterator", "equality"], "comments": [{"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 3, "creation_date": 1572386845, "post_id": 58615910, "comment_id": 103541777, "body": "Not an answer, but you should probably test the sizes first so that you won&#39;t waste time comparing the keys if the lengths are different."}, {"owner": {"reputation": 1602, "user_id": 265932, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/856fe019eb54d302ac5de3c0ebb94366?s=128&d=identicon&r=PG", "display_name": "Jemenake", "link": "https://stackoverflow.com/users/265932/jemenake"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1572387512, "post_id": 58615910, "comment_id": 103541946, "body": "Great suggestion. I think I got a little caught up in trying to limit early returns and limit the size of the code, but you&#39;re right, provided that HashMap::len() doesn&#39;t, itself, iterate over the keys (and depending upon whether your use case tends to mostly test same-sized-yet-different sets), testing the length first is an important consideration."}], "answers": [{"comments": [{"owner": {"reputation": 1602, "user_id": 265932, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/856fe019eb54d302ac5de3c0ebb94366?s=128&d=identicon&r=PG", "display_name": "Jemenake", "link": "https://stackoverflow.com/users/265932/jemenake"}, "edited": false, "score": 0, "creation_date": 1572387981, "post_id": 58616090, "comment_id": 103542066, "body": "I had never come across the .all() function (nor the .any()) for iterators. I&#39;ll now know to look for this in other iterator-supporting languages."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 1602, "user_id": 265932, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/856fe019eb54d302ac5de3c0ebb94366?s=128&d=identicon&r=PG", "display_name": "Jemenake", "link": "https://stackoverflow.com/users/265932/jemenake"}, "edited": false, "score": 0, "creation_date": 1572388063, "post_id": 58616090, "comment_id": 103542089, "body": "@Jemenake Yeah, many methods of <code>Iterator</code> are just great and can really shorten your code. And make it more readable IMO :)"}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": false, "score": 9, "last_activity_date": 1572387089, "creation_date": 1572387089, "answer_id": 58616090, "question_id": 58615910, "link": "https://stackoverflow.com/questions/58615910/checking-two-hashmaps-for-identical-keyset-in-rust/58616090#58616090", "title": "Checking two HashMaps for identical keyset in Rust", "body": "<blockquote>\n  <p>Is there a more-terse way of doing this in Rust?</p>\n</blockquote>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn keys_match&lt;T: Eq + Hash, U, V&gt;(\n    map1: &amp;HashMap&lt;T, U&gt;, \n    map2: &amp;HashMap&lt;T, V&gt;,\n) -&gt; bool {\n    map1.len() == map2.len() &amp;&amp; map1.keys().all(|k| map2.contains_key(k))\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=99dff5fa7496b06a09895d34cbf07ed6\" rel=\"noreferrer\"><strong>Playground</strong></a>)</p>\n\n<p>This code has three improvements over your code:</p>\n\n<ul>\n<li>Using <a href=\"https://doc.rust-lang.org/stable/std/iter/trait.Iterator.html#method.all\" rel=\"noreferrer\"><code>Iterator::all</code></a> shortens the code quite a bit.</li>\n<li>Using <a href=\"https://doc.rust-lang.org/stable/std/collections/struct.HashMap.html#method.contains_key\" rel=\"noreferrer\"><code>HashMap::contains_key</code></a> is better than checking the result of <code>HashMap::get</code>.</li>\n<li>This checks the length first, as this is a cheap test and should be done first.</li>\n</ul>\n"}], "owner": {"reputation": 1602, "user_id": 265932, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/856fe019eb54d302ac5de3c0ebb94366?s=128&d=identicon&r=PG", "display_name": "Jemenake", "link": "https://stackoverflow.com/users/265932/jemenake"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1502, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1572387113, "creation_date": 1572385914, "question_id": 58615910, "link": "https://stackoverflow.com/questions/58615910/checking-two-hashmaps-for-identical-keyset-in-rust", "title": "Checking two HashMaps for identical keyset in Rust", "body": "<p>Suppose I have two HashMaps (or, <em>any</em> map structure that has keys mapping to something else), map1 and map2, and I want to ensure that they have an identical set of keys. Note that the <em>keys</em> are the same type in the maps, but the <em>values</em> are <em>not</em>.</p>\n\n<p>My initial attempt at this was just:</p>\n\n<pre><code>map1.keys().eq(map2.keys())\n</code></pre>\n\n<p>and, although this worked the <em>first</em> time, the <em>eq</em> function for iterators (understandably) seems to compare the keys <em>in the order produced by the iterator, not by checking for the existence of a key anywhere in the second iterator</em>. This, combined with the fact that HashMap::keys() produces an iterator where the <em>order of the keys is non-deterministic</em> means that the equality function will often fail even if the sets (in the set-theory sense) of the keys are identical.</p>\n\n<p>So, my next attempt was to make a function which did this:</p>\n\n<pre><code>fn keys_match&lt;T:std::cmp::Eq + std::hash::Hash,U,V&gt;(map1:&amp;HashMap&lt;T,U&gt;, map2:&amp;HashMap&lt;T,V&gt;) -&gt; bool {\n  // Make sure that map1.keys() \u2286 map2.keys()\n  for key in map1.keys() {\n    match map2.get(key) {\n      None =&gt; return false,\n      Some(_) =&gt; {}\n    }\n  }\n  // If map1.keys() \u2286 map2.keys() and their sizes equal, then the sets are equal\n  map1.len() == map2.len()\n}\n</code></pre>\n\n<p>Note for Rust beginners: My first try at this was actually with the knowledge that the keys in the maps were of type String, so my function signature was:</p>\n\n<pre><code>fn keys_match&lt;T,U&gt;(map1:&amp;HashMap&lt;String,T&gt;, map2:&amp;HashMap&lt;String,U&gt;) -&gt; bool\n</code></pre>\n\n<p>until I realized that I could even genericize the <em>common key type</em> by requiring them to have the Eq and Hash traits.</p>\n\n<p><strong>Question: Is there a more-terse way of doing this in Rust?</strong></p>\n"}, {"tags": ["types", "rust", "channels"], "answers": [{"comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 1, "creation_date": 1572435196, "post_id": 58616291, "comment_id": 103556552, "body": "<code>Enum</code> might be a problem if it&#39;s variants have considerable gap on memory size. Rust will allocate the largest size for the minimal variant also."}, {"owner": {"reputation": 1767, "user_id": 2809078, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yeGjr.jpg?s=128&g=1", "display_name": "ggovan", "link": "https://stackoverflow.com/users/2809078/ggovan"}, "edited": false, "score": 2, "creation_date": 1572447994, "post_id": 58616291, "comment_id": 103564093, "body": "Yes, if there is a big discrepancy in sizes then you can <code>Box</code> the content of the message."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "reply_to_user": {"reputation": 1767, "user_id": 2809078, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yeGjr.jpg?s=128&g=1", "display_name": "ggovan", "link": "https://stackoverflow.com/users/2809078/ggovan"}, "edited": false, "score": 0, "creation_date": 1572452572, "post_id": 58616291, "comment_id": 103566751, "body": "@ggovan That\u2019s a good approach also, but probably i would go with Any."}, {"owner": {"reputation": 93, "user_id": 4575286, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a2e101ccb4f6aaf6986f26c39869b808?s=128&d=identicon&r=PG&f=1", "display_name": "Vinnie", "link": "https://stackoverflow.com/users/4575286/vinnie"}, "edited": false, "score": 1, "creation_date": 1572473334, "post_id": 58616291, "comment_id": 103575513, "body": "Thanks for your replies, If I get you correctly I should just create an enum called, for example, MessageTypes and have 2 variants called MessageA and MessageB. Each variant is assigned to a single integer value by Rust and so every variant has the same size. But, how can I then use my 2 variants in functions? I need to get to the String or Vec&lt;MyStruct&gt; values within these enums. Do I have to write some methods with impl on this enum so I am able to interact with the underlying data? Would be great to have an example.."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 93, "user_id": 4575286, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a2e101ccb4f6aaf6986f26c39869b808?s=128&d=identicon&r=PG&f=1", "display_name": "Vinnie", "link": "https://stackoverflow.com/users/4575286/vinnie"}, "edited": false, "score": 1, "creation_date": 1572474813, "post_id": 58616291, "comment_id": 103575939, "body": "@Vinnie You would simply use <code>match</code> to match on the enum. Then you get access to the enclosed data. Not to be lazy, but <a href=\"https://doc.rust-lang.org/book/ch06-02-match.html\" rel=\"nofollow noreferrer\">the book has a nice chapter on that</a>. I hope this helps!"}, {"owner": {"reputation": 93, "user_id": 4575286, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a2e101ccb4f6aaf6986f26c39869b808?s=128&d=identicon&r=PG&f=1", "display_name": "Vinnie", "link": "https://stackoverflow.com/users/4575286/vinnie"}, "edited": false, "score": 1, "creation_date": 1572514806, "post_id": 58616291, "comment_id": 103586461, "body": "Thanks, that did the trick, I was overthinking this one. For future references, I&#39;ve wrapped my types (String, Vec&lt;MyStruct&gt;) into 2 enum variants. I use match on the receiving site to unwrap the enum and on the sending side I am creating batches of data that I wrap within an MessageType like so: <code>pub fn create_batch(timeseries: Vec&lt;String&gt;) -&gt; Option&lt;MessageType&gt;</code>"}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": false, "score": 3, "last_activity_date": 1572388419, "creation_date": 1572388419, "answer_id": 58616291, "question_id": 58615697, "link": "https://stackoverflow.com/questions/58615697/sending-different-types-using-same-rust-channel-mpsc/58616291#58616291", "title": "Sending different types using same Rust channel (mpsc)", "body": "<p><strong>One particular channel can only send one type of data.</strong> As you noticed, your sender has the type <code>Sender&lt;String&gt;</code> and the receiver has the type <code>Receiver&lt;String&gt;</code>. So both are fixed on <code>String</code>. There is no way around this (for good reasons!)</p>\n\n<p><strong>The preferred solution is actually to use an enum</strong>, yes. In fact, you try to emulate what an enum would do for you: you have a <em>tag</em> that describes what kind of data to expect. In your attempt you use strings as tags. But that's a bad idea for a multitude of reasons. When you use an enum, integer tags (much better) are used and Rust handles them for you. Much more robust solution.</p>\n\n<p>One suggestion: you might find it more useful to think of your enum type as message. As that's what it is: you send a message to another thread. And this message could be one of many different types. The receiving thread has to check which kind of message arrived and can then handle it. </p>\n"}, {"tags": [], "owner": {"reputation": 996, "user_id": 5266767, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/852b19120d60f4852964889f5a6dc01e?s=128&d=identicon&r=PG&f=1", "display_name": "d9ngle", "link": "https://stackoverflow.com/users/5266767/d9ngle"}, "is_accepted": false, "score": 4, "last_activity_date": 1595150312, "creation_date": 1595150312, "answer_id": 62978396, "question_id": 58615697, "link": "https://stackoverflow.com/questions/58615697/sending-different-types-using-same-rust-channel-mpsc/62978396#62978396", "title": "Sending different types using same Rust channel (mpsc)", "body": "<p>Here's an example with enum:</p>\n<pre><code>use std::sync::mpsc::{self, Receiver, Sender};\n\nenum Fruit {\n    Apple(u8),\n    Orange(String)\n}\n\nfn main() {\n    let (tx, rx): (Sender&lt;Fruit&gt;, Receiver&lt;Fruit&gt;) = mpsc::channel();\n\n    tx.send(Fruit::Orange(&quot;sweet&quot;.to_string())).unwrap();\n    tx.send(Fruit::Apple(2)).unwrap();\n\n    for _ in 0..2 {\n        match rx.recv().unwrap() {\n            Fruit::Apple(count) =&gt; println!(&quot;received {} apples&quot;, count),\n            Fruit::Orange(flavor) =&gt; println!(&quot;received {} oranges&quot;, flavor),\n        }\n    }\n}\n\n// output:\n// received sweet oranges\n// received 2 apples\n\n</code></pre>\n"}], "owner": {"reputation": 93, "user_id": 4575286, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a2e101ccb4f6aaf6986f26c39869b808?s=128&d=identicon&r=PG&f=1", "display_name": "Vinnie", "link": "https://stackoverflow.com/users/4575286/vinnie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1118, "favorite_count": 1, "answer_count": 2, "score": 4, "last_activity_date": 1595150312, "creation_date": 1572384603, "last_edit_date": 1572425988, "question_id": 58615697, "link": "https://stackoverflow.com/questions/58615697/sending-different-types-using-same-rust-channel-mpsc", "title": "Sending different types using same Rust channel (mpsc)", "body": "<p>I've got a situation where I am setting up channel with multiple senders that need to be able to send different types of data to a receiving thread.</p>\n\n<p>A receiving thread is created to handle these messages using the following match expression.</p>\n\n<pre><code>let receiver_thread = match config.style.as_str() {\n    \"Type1\" =&gt; start_recv_type1(receiver, config.clone(), log.clone()),\n    \"Type2\" =&gt; start_recv_type2(receiver, config.clone(), log.clone()),\n    \"Type3\" =&gt; start_recv_type3(receiver, log.clone()),\n    _ =&gt; panic!(\"Wrong type!\"),\n};\n</code></pre>\n\n<p>One possible type that can be send is a String while the other is a struct I've defined. However, the compiler is complaining about mismatched types on the receiving thread. Looking at how my receiver and sender is defined I can see why this is incorrect because it has the following type: <code>std::sync::mpsc::Receiver&lt;std::string::String&gt;</code>.</p>\n\n<p>Looking at my match expression, I think it's wiser to create a more generic function to initialize my receiving thread but how can I send different types of data over the same channel? I've searched and found a possible solution by using an enum that has my struct and a string as fields but does that mean I will have to change all my function definitions to use use this enum syntax? I.e. change my functions to use <code>ChannelTypes(StringMessage(String))</code> or <code>ChannelTypes(StructMessage(factory::datatype::MyStruct))</code></p>\n\n<pre><code>enum ChannelTypes {\n    StructMessage(factory::datatype::MyStruct),\n    StringMessage(String),\n}\n</code></pre>\n"}, {"tags": ["generics", "rust", "traits", "lifetime", "box"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1572378224, "post_id": 58614336, "comment_id": 103538611, "body": "Your question may be answered by the answers of <a href=\"https://stackoverflow.com/q/40053550/155423\">The compiler suggests I add a &#39;static lifetime because the parameter type may not live long enough, but I don&#39;t think that&#39;s what I want</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/58614336/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}], "owner": {"reputation": 763, "user_id": 3799609, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3143d9049a55a963685c987503743964?s=128&d=identicon&r=PG&f=1", "display_name": "Ten", "link": "https://stackoverflow.com/users/3799609/ten"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 188, "favorite_count": 0, "answer_count": 0, "score": 3, "last_activity_date": 1572387342, "creation_date": 1572378123, "last_edit_date": 1572387342, "question_id": 58614336, "link": "https://stackoverflow.com/questions/58614336/why-is-a-lifetime-bound-required-on-a-generic-return-type-of-a-boxed-trait-objec", "title": "Why is a lifetime bound required on a generic return type of a boxed trait object closure?", "body": "<p>I'm having an issue with the compiler complaining that <code>Box&lt;dyn 'f + FnMut(A)&gt;</code> does not implement <code>'f + FnMut(A)</code> if <code>A</code> isn't bound to the lifetime <code>'t</code>. I've reduced it to this minimal example, where <code>FnMut(A)</code> is replaced by <code>Foo&lt;A&gt;</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait Foo&lt;A&gt; {}\nimpl&lt;'a, A&gt; Foo&lt;A&gt; for &amp;'a () {}\nimpl&lt;'a, A&gt; Foo&lt;A&gt; for Box&lt;dyn 'a + Foo&lt;A&gt;&gt; {}\n\nfn through_box&lt;'a, A&gt;(x: &amp;'a ()) -&gt; impl 'a + Foo&lt;A&gt;\nwhere\n    //A: 'static,\n{\n    let box_: Box&lt;dyn 'a + Foo&lt;A&gt;&gt; = Box::new(x);\n    box_\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0309]: the parameter type `A` may not live long enough\n --&gt; src/main.rs:5:37\n  |\n5 | fn through_box&lt;'a, A&gt;(x: &amp;'a ()) -&gt; impl 'a + Foo&lt;A&gt;\n  |                    -                ^^^^^^^^^^^^^^^^\n  |                    |\n  |                    help: consider adding an explicit lifetime bound `A: 'a`...\n  |\nnote: ...so that the type `std::boxed::Box&lt;dyn Foo&lt;A&gt;&gt;` will meet its required lifetime bounds\n --&gt; src/main.rs:5:37\n  |\n5 | fn through_box&lt;'a, A&gt;(x: &amp;'a ()) -&gt; impl 'a + Foo&lt;A&gt;\n  |                                     ^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>This does not compile while it does by uncommenting the lifetime constraint on <code>A</code>.</p>\n\n<p>The following also compiles:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait Foo {}\nimpl&lt;'a&gt; Foo for &amp;'a () {}\nimpl&lt;'a&gt; Foo for Box&lt;dyn 'a + Foo&gt; {}\n\nfn through_box&lt;'a&gt;(x: &amp;'a ()) -&gt; impl 'a + Foo {\n    let box_: Box&lt;dyn 'a + Foo&gt; = Box::new(x);\n    box_\n}\n</code></pre>\n\n<p>I do not understand why the first program requires that bound on <code>A</code>.</p>\n\n<p>Note that my issue is not boxing the function in a <code>Box&lt;dyn 'a + Foo&lt;A&gt;&gt;</code>, which does work, but the fact that this <code>Box&lt;dyn 'a + Foo&lt;A&gt;&gt;</code> seems to be itself not of lifetime <code>'a</code>, hence the error on the return type and not when initializing <code>box_</code>.</p>\n"}, {"tags": ["function", "rust", "arguments"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1572374818, "post_id": 58613581, "comment_id": 103537349, "body": "You will be well-served to completely read <a href=\"https://doc.rust-lang.org/book/\" rel=\"nofollow noreferrer\"><i>The Rust Programming Language</i></a>. For example, <a href=\"https://doc.rust-lang.org/book/ch10-00-generics.html\" rel=\"nofollow noreferrer\">chapter 10</a>."}, {"owner": {"reputation": 71, "user_id": 7738333, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-mjVhxcD-E4c/AAAAAAAAAAI/AAAAAAAAKO4/qlDg4Th7AjY/photo.jpg?sz=128", "display_name": "Col", "link": "https://stackoverflow.com/users/7738333/col"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1572375430, "post_id": 58613581, "comment_id": 103537580, "body": "Yeap I know the book and I read it but rust is a complexe language and it&#39;s easy to forget some syntax rules. Anyway thanks for this reminder."}], "answers": [{"comments": [{"owner": {"reputation": 71, "user_id": 7738333, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-mjVhxcD-E4c/AAAAAAAAAAI/AAAAAAAAKO4/qlDg4Th7AjY/photo.jpg?sz=128", "display_name": "Col", "link": "https://stackoverflow.com/users/7738333/col"}, "edited": false, "score": 1, "creation_date": 1572375206, "post_id": 58613666, "comment_id": 103537491, "body": "Thx I tried that! but, what I didn&#39;t get was the &lt;T&gt; before the (a_list: Vec&lt;T&gt;) ."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1572375365, "last_edit_date": 1572375365, "creation_date": 1572374932, "answer_id": 58613666, "question_id": 58613581, "link": "https://stackoverflow.com/questions/58613581/how-to-use-an-arbitrary-type-as-a-function-argument/58613666#58613666", "title": "How to use an arbitrary type as a function argument?", "body": "<p>Generic types specific to a function are declared using the <code>&lt;&gt;</code> syntax on the function definition:</p>\n\n<pre><code>fn print_a_random_element&lt;T&gt;(a_list: Vec&lt;T&gt;) {\n    // do some stuff\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://doc.rust-lang.org/book/ch10-00-generics.html\" rel=\"nofollow noreferrer\">Generic Types, Traits, and Lifetimes in <em>The Rust Programming Language</em></a></li>\n<li><a href=\"https://stackoverflow.com/q/52129713/155423\">Generic function to take struct as parameter in rust</a></li>\n<li><a href=\"https://stackoverflow.com/q/35525505/155423\">How to restrict generic implementation of a trait in Rust?</a></li>\n<li><a href=\"https://stackoverflow.com/q/40776020/155423\">Is there any way to restrict a generic type to one of several types?</a></li>\n</ul>\n"}], "owner": {"reputation": 71, "user_id": 7738333, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-mjVhxcD-E4c/AAAAAAAAAAI/AAAAAAAAKO4/qlDg4Th7AjY/photo.jpg?sz=128", "display_name": "Col", "link": "https://stackoverflow.com/users/7738333/col"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 113, "favorite_count": 0, "accepted_answer_id": 58613666, "answer_count": 1, "score": 0, "last_activity_date": 1572375365, "creation_date": 1572374548, "last_edit_date": 1572374696, "question_id": 58613581, "link": "https://stackoverflow.com/questions/58613581/how-to-use-an-arbitrary-type-as-a-function-argument", "title": "How to use an arbitrary type as a function argument?", "body": "<p>I am trying to write a generic function to pick up a random element in a vector of any kind. How can I specify an arbitrary vector type?</p>\n\n<p>For example:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let list1: Vec&lt;u32&gt; = vec![1, 2, 3];\nlet list2: Vec&lt;&amp;str&gt; = vec![\"foo\", \"bar\"];\n\nfn print_a_random_element(a_list: Vec&lt;?????&gt;) {\n    // do some stuff\n}\n\nprint_a_random_element(list1); // get error\nprint_a_random_element(list2); // get error\n</code></pre>\n"}, {"tags": ["rust", "graph-theory"], "answers": [{"tags": [], "owner": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "is_accepted": true, "score": 2, "last_activity_date": 1572376295, "last_edit_date": 1572376295, "creation_date": 1572368757, "answer_id": 58612273, "question_id": 58611896, "link": "https://stackoverflow.com/questions/58611896/how-to-return-an-iterator-over-the-keys-of-a-hashmap-from-a-trait-implementation/58612273#58612273", "title": "How to return an iterator over the keys of a HashMap from a trait implementation?", "body": "<p>It works if you explicitly specify that the trait object (<code>dyn Iterator</code>) that you are returning contains references that are tied to the lifetime of <code>self</code>.</p>\n\n<p>Without adding this bound, the compiler cannot infer from the function signature that the iterator cannot be used after <code>self</code> is moved or destroyed. Because the compiler cannot infer this, it cannot safely use <code>self.map.keys()</code> in the function's output.</p>\n\n<p>Working example with this bound added:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub trait Graph&lt;N&gt; {\n    fn nodes&lt;'a&gt;(&amp;'a self) -&gt; Box&lt;dyn Iterator&lt;Item = &amp;N&gt; + 'a&gt;;\n}\n\nuse std::collections::HashMap;\n\npub struct MapGraph&lt;N&gt; {\n    map: HashMap&lt;N, HashMap&lt;N, ()&gt;&gt;,\n}\n\nimpl&lt;N&gt; MapGraph&lt;N&gt; {\n    pub fn new(map: HashMap&lt;N, HashMap&lt;N, ()&gt;&gt;) -&gt; Self {\n        MapGraph { map }\n    }\n}\n\nimpl&lt;N&gt; Graph&lt;N&gt; for MapGraph&lt;N&gt; {\n    fn nodes&lt;'a&gt;(&amp;'a self) -&gt; Box&lt;dyn Iterator&lt;Item = &amp;N&gt; + 'a&gt; {\n        let keys = self.map.keys();\n\n        Box::new(keys)\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=97b471c1655a578f61892e6683b76c18\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>I had thought that a bound of <code>Item = &amp;'a N</code> would also be required, but I guess that's already covered by the \"<code>+ 'a</code>\"...</p>\n\n<hr>\n\n<p>N.B. that to make sense of an error like:</p>\n\n<pre><code>expected std::boxed::Box&lt;(dyn std::iter::Iterator&lt;Item = &amp;N&gt; + 'static)&gt;\n   found std::boxed::Box&lt;dyn std::iter::Iterator&lt;Item = &amp;N&gt;&gt;\n</code></pre>\n\n<p>you have to understand that the compiler, for ergonomic reasons, automatically adds a <code>+ 'static</code> lifetime qualifier to any unqualified trait object. This means that an unqualified <code>Box&lt;dyn MyTrait&gt;</code> is transformed by the compiler into a <code>Box&lt;(dyn MyTrait + 'static)&gt;</code>, which in turn means that the object cannot contain <em>any</em> references except those that last for the lifetime of the entire program.\nWith this in mind you can see why <code>self.map.keys()</code> does not fit this strict bound, and a more specific explicit bound is required.</p>\n"}], "owner": {"reputation": 25639, "user_id": 54426, "user_type": "registered", "accept_rate": 66, "profile_image": "https://i.stack.imgur.com/dYp2m.png?s=128&g=1", "display_name": "Rich Apodaca", "link": "https://stackoverflow.com/users/54426/rich-apodaca"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 397, "favorite_count": 0, "accepted_answer_id": 58612273, "answer_count": 1, "score": 1, "last_activity_date": 1572376295, "creation_date": 1572367383, "last_edit_date": 1572370352, "question_id": 58611896, "link": "https://stackoverflow.com/questions/58611896/how-to-return-an-iterator-over-the-keys-of-a-hashmap-from-a-trait-implementation", "title": "How to return an iterator over the keys of a HashMap from a trait implementation?", "body": "<p>I'm trying to build a simple graph library in Rust. There is a trait <code>Graph</code> that any graph must implement. This trait has only one function at the moment, <code>nodes</code>, which allows iteration of the graph's nodes using a for-in loop.</p>\n\n<p>An implementation of <code>Graph</code>, <code>MapGraph</code>, is a lightweight wrapper around a <code>HashMap</code>. <code>MapGraph</code> must implement the <code>Graph</code> trait method <code>nodes</code>. I'm having problems getting this to work.</p>\n\n<p>Here's the code for <code>Graph</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub trait Graph&lt;N&gt; {\n    fn nodes(&amp;self) -&gt; Box&lt;dyn Iterator&lt;Item = &amp;N&gt;&gt;;\n}\n</code></pre>\n\n<p>And here's the code for <code>MapGraph</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::collections::HashMap;\n\nuse crate::rep::Graph;\n\npub struct MapGraph&lt;N&gt; {\n    map: HashMap&lt;N, HashMap&lt;N, ()&gt;&gt;\n}\n\nimpl&lt;N&gt; MapGraph&lt;N&gt; {\n    pub fn new(map: HashMap&lt;N, HashMap&lt;N, ()&gt;&gt;) -&gt; Self {\n        MapGraph { map }\n    }\n}\n\nimpl&lt;N&gt; Graph&lt;N&gt; for MapGraph&lt;N&gt; {\n    fn nodes(&amp;self) -&gt; Box&lt;dyn Iterator&lt;Item=&amp;N&gt;&gt; {\n        let keys = self.map.keys();\n\n        Box::new(keys)\n    }\n}\n</code></pre>\n\n<p>The compiler gives this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for autoref due to conflicting requirements\n  --&gt; src/lib.rs:19:29\n   |\n19 |         let keys = self.map.keys();\n   |                             ^^^^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 18:5...\n  --&gt; src/lib.rs:18:5\n   |\n18 | /     fn nodes(&amp;self) -&gt; Box&lt;dyn Iterator&lt;Item = &amp;N&gt;&gt; {\n19 | |         let keys = self.map.keys();\n20 | |\n21 | |         Box::new(keys)\n22 | |     }\n   | |_____^\nnote: ...so that reference does not outlive borrowed content\n  --&gt; src/lib.rs:19:20\n   |\n19 |         let keys = self.map.keys();\n   |                    ^^^^^^^^\n   = note: but, the lifetime must be valid for the static lifetime...\n   = note: ...so that the expression is assignable:\n           expected std::boxed::Box&lt;(dyn std::iter::Iterator&lt;Item = &amp;N&gt; + 'static)&gt;\n              found std::boxed::Box&lt;dyn std::iter::Iterator&lt;Item = &amp;N&gt;&gt;\n\n</code></pre>\n\n<p>I've found other references to this error, but those cases don't seem to look like the one I have here.</p>\n\n<p>I'm using <code>Box</code> because the <code>Graph</code> trait has a function that itself returns a trait. <a href=\"https://stackoverflow.com/questions/27535289/what-is-the-correct-way-to-return-an-iterator-or-any-other-trait\">What is the correct way to return an Iterator (or any other trait)?</a> gives this approach as one option, and I haven't been able to implement any of the the others. If there's another way to do this, that would be fine.</p>\n\n<p>What are my options for resolving this specific problem?</p>\n"}, {"tags": ["rust", "future"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1588903883, "last_edit_date": 1588903883, "creation_date": 1572369641, "answer_id": 58612508, "question_id": 58611380, "link": "https://stackoverflow.com/questions/58611380/is-there-a-way-that-we-can-convert-from-futures-0-1-to-the-standard-library-futu/58612508#58612508", "title": "Is there a way that we can convert from futures 0.1 to the standard library futures?", "body": "<p>Use the <code>Future01CompatExt</code> trait: </p>\n\n<pre><code>use futures01::future as future01;\nuse futures03::compat::Future01CompatExt;\n\nfn make_future_01() -&gt; impl future01::Future&lt;Item = i32, Error = ()&gt; {\n    future01::ok(2)\n}\n\nasync fn example_03_uses_01() -&gt; Result&lt;i32, ()&gt; {\n    let v = make_future_01().compat().await?;\n    Ok(v)\n}\n</code></pre>\n\n<pre><code>[dependencies]\nfutures03 = { package = \"futures\", version = \"0.3\", features = [\"compat\"] }\nfutures01 = { package = \"futures\", version = \"0.1\" }\n</code></pre>\n"}], "owner": {"reputation": 53, "user_id": 2716926, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/105af8b63fb01adc1ec059c1222721dd?s=128&d=identicon&r=PG&f=1", "display_name": "raul", "link": "https://stackoverflow.com/users/2716926/raul"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 209, "favorite_count": 0, "accepted_answer_id": 58612508, "answer_count": 1, "score": 2, "last_activity_date": 1588903883, "creation_date": 1572365586, "last_edit_date": 1572368534, "question_id": 58611380, "link": "https://stackoverflow.com/questions/58611380/is-there-a-way-that-we-can-convert-from-futures-0-1-to-the-standard-library-futu", "title": "Is there a way that we can convert from futures 0.1 to the standard library futures?", "body": "<p>The <code>async</code>/<code>await</code> feature is coming soon, but there are a lot of libraries still using futures 0.1. How do we convert between the two?</p>\n\n<p><a href=\"https://stackoverflow.com/questions/57785707/convert-an-async-future-to-0-1-future\">Convert an async future to 0.1 future</a> covers converting an async future to 0.1 future.</p>\n\n<p><a href=\"https://stackoverflow.com/questions/54452339/how-do-i-erase-the-type-of-future-in-the-new-future-api\">How do I erase the type of future in the new future API?</a> talks about an <code>async</code> function that calls an 0.1 future and gets the result, but where is the <code>await!()</code> macro I can import? It seems it no longer compiles.</p>\n\n<pre><code>struct A_future01;\n\nimpl A_future01 {\n    pub fn exec1() -&gt; Box&lt;dyn Future&lt;Item=String, Error=()&gt;&gt; {\n        Box::new(futures::future::result(\"ok\"))\n    }\n\n    pub fn exec2() -&gt; Box&lt;dyn Future&lt;Item=String, Error=()&gt;&gt; {\n        Box::new(call().unit_error().boxed().compat()) //Like this## Heading ##?\n    }\n}\n\nasync fn call() -&gt; Result&lt;(), Box&lt;dyn std::error::Error&gt;&gt; {\n    let result_from_a = A_future01::exec().await(); //how can I achieve this ?\n    Ok(())\n}\n</code></pre>\n"}, {"tags": ["rust", "dynamic-memory-allocation"], "comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1572366794, "post_id": 58611262, "comment_id": 103533722, "body": "the &quot;single expression&quot; form should probably be a fold and not use a collect"}, {"owner": {"reputation": 2106, "user_id": 7191047, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EWSwl.png?s=128&g=1", "display_name": "Danila Kiver", "link": "https://stackoverflow.com/users/7191047/danila-kiver"}, "edited": false, "score": 0, "creation_date": 1572367253, "post_id": 58611262, "comment_id": 103533999, "body": "Iterator implementation for <code>Graphemes</code> has <code>size_hint()</code>, which is being used by <code>String</code> for buffer size estimation in its <code>FromIterator</code> implementation, so I don&#39;t think there will be huge overhead due to use of <code>collect()</code>."}, {"owner": {"reputation": 27478, "user_id": 183120, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/fc147f814e1473bb6105db3d924fb590?s=128&d=identicon&r=PG", "display_name": "legends2k", "link": "https://stackoverflow.com/users/183120/legends2k"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1572367540, "post_id": 58611262, "comment_id": 103534148, "body": "@DenysS&#233;guret You mean like <code>.fold(String::with_capacity(input.len()), |result, gc| result + gc)</code> instead of <code>.collect::&lt;Vec&lt;&amp;str&gt;&gt;().concat()</code>?"}, {"owner": {"reputation": 27478, "user_id": 183120, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/fc147f814e1473bb6105db3d924fb590?s=128&d=identicon&r=PG", "display_name": "legends2k", "link": "https://stackoverflow.com/users/183120/legends2k"}, "reply_to_user": {"reputation": 2106, "user_id": 7191047, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EWSwl.png?s=128&g=1", "display_name": "Danila Kiver", "link": "https://stackoverflow.com/users/7191047/danila-kiver"}, "edited": false, "score": 0, "creation_date": 1572367771, "post_id": 58611262, "comment_id": 103534273, "body": "@DanilaKiver Thanks for commenting about <code>size_hint</code>; didn&#39;t know about it. Would the number of memory allocation requests/calls be one like in the first approach? I think for every grapheme-cluster there&#39;ll be one allocation due to the corresponding <code>Vec::push</code> and then a final allocation for <code>concat</code>. The reason I ask isn&#39;t specific to this toy example, I&#39;m trying to understand how the second approach works.  Knowing it will be helpful in a larger project."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1572367981, "post_id": 58611262, "comment_id": 103534386, "body": "@legends2k yes, in order to avoid collecting into an intermediate vector. But at this point I&#39;d need to do some benchmarks before I&#39;d go as far as recommending it."}, {"owner": {"reputation": 2106, "user_id": 7191047, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EWSwl.png?s=128&g=1", "display_name": "Danila Kiver", "link": "https://stackoverflow.com/users/7191047/danila-kiver"}, "edited": false, "score": 1, "creation_date": 1572368543, "post_id": 58611262, "comment_id": 103534663, "body": "@legends2k, after re-reading <code>size_hint()</code> implementation I realized that it uses <code>1</code> as the <i>lower</i> bound, and the code which reserves the space based on the hint relies on the <i>lower</i> bound too (both for <code>String</code> and <code>Vec</code>), so it feels like there actually <i>will</i> be problems with excessive allocations with this particular type (<code>Graphemes</code>)."}, {"owner": {"reputation": 14722, "user_id": 401137, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/j25bf.png?s=128&g=1", "display_name": "Some Guy", "link": "https://stackoverflow.com/users/401137/some-guy"}, "edited": false, "score": 0, "creation_date": 1572368961, "post_id": 58611262, "comment_id": 103534868, "body": "Or the single expression form could have <code>.collect::&lt;String&gt;()</code> instead of <code>.collect::&lt;Vec&lt;&amp;str&gt;&gt;().concat()</code>"}, {"owner": {"reputation": 27478, "user_id": 183120, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/fc147f814e1473bb6105db3d924fb590?s=128&d=identicon&r=PG", "display_name": "legends2k", "link": "https://stackoverflow.com/users/183120/legends2k"}, "reply_to_user": {"reputation": 14722, "user_id": 401137, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/j25bf.png?s=128&g=1", "display_name": "Some Guy", "link": "https://stackoverflow.com/users/401137/some-guy"}, "edited": false, "score": 0, "creation_date": 1572369051, "post_id": 58611262, "comment_id": 103534911, "body": "@SomeGuy Or simply <code>.collect()</code> like in trentcl&#39;s answer."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1572370503, "post_id": 58612253, "comment_id": 103535558, "body": "I&#39;m a big fan of the <code>extend</code> version, and that&#39;s what I&#39;d pick."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1572435471, "post_id": 58612253, "comment_id": 103556698, "body": "I think what I like about <code>extend</code> is that it fronts both the verb and the object being affected. You don&#39;t have to understand the whole line to see what side effect it has: it <code>extend</code>s <code>result</code>. Using <code>collect</code> or <code>fold</code> fronts <code>input</code>, so you see what&#39;s being iterated over first, then the form of iteration, and the &quot;most important&quot; bit -- allocating and filling the string -- is &quot;buried&quot; at the very end of the expression."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1572621704, "post_id": 58612253, "comment_id": 103626478, "body": "I would note that if the function is used <i>multiple times</i>, such as in a loop, it may be beneficial to provide a version which takes a <code>&amp;mut String</code> out parameter. This may, in certain circumstances, allow reusing the buffer over and over."}], "tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 7, "last_activity_date": 1572371074, "last_edit_date": 1572371074, "creation_date": 1572368642, "answer_id": 58612253, "question_id": 58611262, "link": "https://stackoverflow.com/questions/58611262/does-iteratorcollect-allocate-the-same-amount-of-memory-as-stringwith-capaci/58612253#58612253", "title": "Does Iterator::collect allocate the same amount of memory as String::with_capacity?", "body": "<p>Your original code is fine and I do not recommend changing it.</p>\n\n<p>The original version allocates once: inside <code>String::with_capacity</code>.</p>\n\n<p>The second version allocates <em>at least</em> twice: first, it creates a <code>Vec&lt;&amp;str&gt;</code> and grows it by <code>push</code>ing <code>&amp;str</code>s onto it. Then, it counts the total size of all the <code>&amp;str</code>s and creates a new <code>String</code> with the correct size. (The code for this is in <a href=\"https://github.com/rust-lang/rust/blob/1.38.0/src/liballoc/str.rs\" rel=\"nofollow noreferrer\">the <code>join_generic_copy</code> method in <code>str.rs</code></a>.) This is bad for several reasons:</p>\n\n<ol>\n<li>It allocates unnecessarily, obviously.</li>\n<li>Grapheme clusters can be arbitrarily large, so the intermediate <code>Vec</code> can't be usefully sized in advance -- it just starts at size 1 and grows from there.</li>\n<li>For typical strings, it allocates <em>way more space</em> than would actually be needed just to store the end result, because <code>&amp;str</code> is usually 16 bytes in size while a UTF-8 grapheme cluster is typically much less than that.</li>\n<li>It wastes time iterating over the intermediate <code>Vec</code> to get the final size where you could just take it from the original <code>&amp;str</code>.</li>\n</ol>\n\n<p>On top of all this, I wouldn't even consider this version idiomatic, because it <code>collect</code>s into a temporary <code>Vec</code> in order to iterate over it, instead of just <code>collect</code>ing the original iterator, as you had in an earlier version of your answer. This version fixes problem #3 and makes #4 irrelevant but doesn't satisfactorily address #2:</p>\n\n<pre><code>input.graphemes(true).rev().collect()\n</code></pre>\n\n<p><code>collect</code> uses <code>FromIterator</code> for <code>String</code>, which will <a href=\"https://github.com/rust-lang/rust/blob/1.38.0/src/liballoc/vec.rs#L1921\" rel=\"nofollow noreferrer\">try to use</a> the lower bound of the <code>size_hint</code> from the <code>Iterator</code> implementation for <code>Graphemes</code>. However, as I mentioned earlier, extended grapheme clusters can be arbitrarily long, so the lower bound can't be any greater than 1. Worse, <code>&amp;str</code>s may be empty, so <code>FromIterator&lt;&amp;str&gt;</code> for <code>String</code> doesn't know <em>anything</em> about the size of the result in bytes. This code just creates an empty <code>String</code> and calls <code>push_str</code> on it repeatedly.</p>\n\n<p>Which, to be clear, is not bad! <code>String</code> has a growth strategy that guarantees amortized O(1) insertion, so if you have mostly tiny strings that won't need to be reallocated often, or you don't believe the cost of allocation is a bottleneck, using <code>collect::&lt;String&gt;()</code> here may be justified if you find it more readable and easier to reason about.</p>\n\n<p>Let's go back to your original code.</p>\n\n<pre><code>let mut result = String::with_capacity(input.len());\nfor gc in input.graphemes(true).rev() {\n    result.push_str(gc);\n}\n</code></pre>\n\n<p>This <em>is idiomatic</em>. <code>collect</code> is also idiomatic, but all <code>collect</code> does is basically the above, with a less accurate initial capacity. Since <code>collect</code> doesn't do what you want, it's not unidiomatic to write the code yourself.</p>\n\n<p>There is a slightly more concise, iterator-y version that still makes only one allocation. Use the <code>extend</code> method, which is part of <code>Extend&lt;&amp;str&gt;</code> for <code>String</code>:</p>\n\n<pre><code>fn reverse(input: &amp;str) -&gt; String {\n    let mut result = String::with_capacity(input.len());\n    result.extend(input.graphemes(true).rev());\n    result\n}\n</code></pre>\n\n<p>I have a vague feeling that <code>extend</code> is nicer, but both of these are perfectly idiomatic ways of writing the same code. You should not rewrite it to use <code>collect</code>, unless you feel that expresses the intent better <em>and</em> you don't care about the extra allocation.</p>\n\n<h2>Related</h2>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/58571612/efficiency-of-flattening-and-collecting-slices\">Efficiency of flattening and collecting slices</a></li>\n</ul>\n"}], "owner": {"reputation": 27478, "user_id": 183120, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/fc147f814e1473bb6105db3d924fb590?s=128&d=identicon&r=PG", "display_name": "legends2k", "link": "https://stackoverflow.com/users/183120/legends2k"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 445, "favorite_count": 1, "accepted_answer_id": 58612253, "answer_count": 1, "score": 4, "last_activity_date": 1572371074, "creation_date": 1572365200, "last_edit_date": 1572370123, "question_id": 58611262, "link": "https://stackoverflow.com/questions/58611262/does-iteratorcollect-allocate-the-same-amount-of-memory-as-stringwith-capaci", "title": "Does Iterator::collect allocate the same amount of memory as String::with_capacity?", "body": "<p>In C++ when joining a bunch of strings (where each element's size is known roughly), it's common to pre-allocate memory to avoid multiple re-allocations and moves:</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>std::vector&lt;std::string&gt; words;\nconstexpr size_t APPROX_SIZE = 20;\n\nstd::string phrase;\nphrase.reserve((words.size() + 5) * APPROX_SIZE);  // &lt;-- avoid multiple allocations\nfor (const auto &amp;w : words)\n  phrase.append(w);\n</code></pre>\n\n<p>Similarly, I did this in Rust (this chunk needs the <a href=\"https://crates.io/crates/unicode-segmentation\" rel=\"nofollow noreferrer\">unicode-segmentation</a> crate)</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn reverse(input: &amp;str) -&gt; String {\n    let mut result = String::with_capacity(input.len());\n    for gc in input.graphemes(true /*extended*/).rev() {\n        result.push_str(gc)\n    }\n    result\n}\n</code></pre>\n\n<p>I was told that the idiomatic way of doing it is a single expression</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn reverse(input: &amp;str) -&gt; String {\n  input\n      .graphemes(true /*extended*/)\n      .rev()\n      .collect::&lt;Vec&lt;&amp;str&gt;&gt;()\n      .concat()\n}\n</code></pre>\n\n<p>While I really like it and want to use it, from a memory allocation point of view, would the former allocate less chunks than the latter?</p>\n\n<p>I disassembled this with <code>cargo rustc --release -- --emit asm -C \"llvm-args=-x86-asm-syntax=intel\"</code> but it doesn't have source code interspersed, so I'm at a loss.</p>\n"}, {"tags": ["rust", "doctest", "rust-macros", "rust-proc-macros"], "answers": [{"comments": [{"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 1, "creation_date": 1572349485, "post_id": 58606750, "comment_id": 103524422, "body": "<a href=\"https://doc.rust-lang.org/std/macro.module_path.html\" rel=\"nofollow noreferrer\"><code>std::module_path</code></a> may also be a path forward."}, {"owner": {"reputation": 7630, "user_id": 709852, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/bf402f309d40d607a369395e32a984fc?s=128&d=identicon&r=PG", "display_name": "Henry Gomersall", "link": "https://stackoverflow.com/users/709852/henry-gomersall"}, "reply_to_user": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1572350885, "post_id": 58606750, "comment_id": 103525103, "body": "@S&#233;bastienRenauld <code>module_path</code> expands to the macro name."}, {"owner": {"reputation": 7630, "user_id": 709852, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/bf402f309d40d607a369395e32a984fc?s=128&d=identicon&r=PG", "display_name": "Henry Gomersall", "link": "https://stackoverflow.com/users/709852/henry-gomersall"}, "edited": false, "score": 0, "creation_date": 1572351045, "post_id": 58606750, "comment_id": 103525180, "body": "@LukasKalbertodt Limiting access of the macro to certain stuff would be severely limiting. I suppose it might be that users are required to grant access to macro (much like one can opt out of the hygiene rules). It could easily become one of those things one has to do to use certain macros."}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 4, "last_activity_date": 1572350083, "last_edit_date": 1572350083, "creation_date": 1572349226, "answer_id": 58606750, "question_id": 58606481, "link": "https://stackoverflow.com/questions/58606481/infer-the-name-of-the-calling-crate-to-populate-a-doctest-in-a-procedural-macro/58606750#58606750", "title": "Infer the name of the calling crate to populate a doctest in a procedural macro", "body": "<p>You can obtain the name of the crate that is using your macro by reading the <code>CARGO_PKG_NAME</code> environment variable. Note that you have to read it via \n<a href=\"https://doc.rust-lang.org/stable/std/env/index.html\" rel=\"nofollow noreferrer\"><code>std::env</code></a> (at \"runtime\" of your macro) and <em>not</em> via <a href=\"https://doc.rust-lang.org/stable/std/macro.env.html\" rel=\"nofollow noreferrer\"><code>env!</code></a> (which would be when your proc macro crate is compiled).</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[proc_macro]\npub fn hello(input: TokenStream) -&gt; TokenStream {\n    let crate_name = std::env::var(\"CARGO_PKG_NAME\").unwrap();\n    let use_statement = format!(\"use {}::foo;\", crate_name);\n\n    let output = quote! {\n        /// `foo` will always return `true`\n        /// ```\n        #[doc = #use_statement]\n        /// assert!(foo());\n        /// ```\n        pub fn foo() -&gt; bool {\n            true\n        }\n    };\n\n    output.into()\n}\n</code></pre>\n\n<p>There are a few complications here regarding interpolating things in doc comments. Interpolating like <code>/// #an_ident</code> does not work as doc comments are parsed in a special way. The only way we can do this is to create a string and using the <code>#[doc = ...]</code> syntax. It's a bit annoying because you have to create strings before the <code>quote!</code> invocation, but it works.</p>\n\n<p><strong>However</strong>, I don't think it is guaranteed that this works. Currently proc macros can access all of the environment (including the file system, network, ...). To my knowledge, proc macros aren't guaranteed this access and proc macros might be sandboxed in the future. So this solution is not perfect yet, but it works for now (and probably for quite some time still).</p>\n\n<hr>\n\n<p>An alternative would be to just let the user pass the crate name to your macro:</p>\n\n<pre><code>hello!(my_lib);\n</code></pre>\n\n<p>If your macro is only invoked once per crate, this is probably the preferred solution. If your macro is invoked a lot, then repeating the crate name might be annoying.</p>\n"}], "owner": {"reputation": 7630, "user_id": 709852, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/bf402f309d40d607a369395e32a984fc?s=128&d=identicon&r=PG", "display_name": "Henry Gomersall", "link": "https://stackoverflow.com/users/709852/henry-gomersall"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 208, "favorite_count": 0, "accepted_answer_id": 58606750, "answer_count": 1, "score": 3, "last_activity_date": 1572350419, "creation_date": 1572348155, "last_edit_date": 1572350419, "question_id": 58606481, "link": "https://stackoverflow.com/questions/58606481/infer-the-name-of-the-calling-crate-to-populate-a-doctest-in-a-procedural-macro", "title": "Infer the name of the calling crate to populate a doctest in a procedural macro", "body": "<p>I'm creating a procedural macro that auto-generates a library from some configuration file (it's a register layout, but that's not important for the question).</p>\n\n<p>I would like the library to auto-generate the documentation accompanying the auto-library and include doc tests that should run with <code>cargo test</code>. Now, I've implemented most of this, but there is one issue I can't see a solution to.</p>\n\n<p>Say we have a library called <code>my_lib</code> in which we invoke the macro to populate it:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use my_macro_lib::hello;\n\nhello!();\n</code></pre>\n\n<p>which expands to something like:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>/// `foo` will always return `true`\n/// ```\n/// use my_lib;\n/// assert!(my_lib::foo());\n/// ```\npub fn foo() -&gt; bool {\n    true\n}\n</code></pre>\n\n<p>This will run as expected - <code>cargo doc</code> will do the right thing and <code>cargo test</code> will run the doctests as expected.</p>\n\n<p>The problem is that in this example, <code>use my_lib</code> is hard-coded into the <code>my_macro_lib</code> which is clearly undesirable.</p>\n\n<p>How can I create a macro which infers the name of crate that is doing the calling?</p>\n\n<p>I tried using a <code>macro_rules!</code> inside the procedural macro to expand <code>$crate</code>, but this breaks the hygiene rules.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1572361479, "post_id": 58606663, "comment_id": 103530803, "body": "The OP may have wanted to declare <code>respuesta</code> outside of the loop to re-use the buffer without reallocating, in which case it would be fine to do so but needs a <code>respuesta.clear()</code> at the end of the loop. See <a href=\"https://stackoverflow.com/questions/45232943/weird-behaviour-when-using-read-line-in-a-loop\">Weird behaviour when using read_line in a loop</a>"}], "tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": false, "score": 2, "last_activity_date": 1572357575, "last_edit_date": 1572357575, "creation_date": 1572348837, "answer_id": 58606663, "question_id": 58605384, "link": "https://stackoverflow.com/questions/58605384/cannot-borrow-as-mutable-because-it-is-also-borrowed-as-immutable/58606663#58606663", "title": "cannot borrow `...` as mutable because it is also borrowed as immutable", "body": "<p>In the loop you're filling a buffer, which you share between connections. And at each connection you're splitting it again.</p>\n\n<p>You want to split only for the current connection:</p>\n\n<pre><code>fn inicializar(receptor: TcpListener) {\n    for recibido in receptor.incoming() {\n        let recibido = recibido.expect(\"Unable to accept\");\n        let mut lector_buffer = BufReader::new(recibido);\n        let mut respuesta = String::new();\n        lector_buffer\n            .read_line(&amp;mut respuesta)\n            .expect(\"could not read\");\n        let peticion: Vec&lt;&amp;str&gt; = respuesta.split_whitespace().collect();\n        println!(\"quote es {}\", peticion[0]);\n    }\n}\n</code></pre>\n\n<p>If you want to keep the string outside the loop, you probably want to use instances of <code>String</code> rather than just <code>&amp;str</code> (because they're pointers and they have to point to something which is kept).</p>\n\n<p>This can be something like</p>\n\n<pre><code>fn inicializar(receptor: TcpListener) {\n    let mut peticions: Vec&lt;Vec&lt;String&gt;&gt; = Vec::new();\n    for recibido in receptor.incoming() {\n        let recibido = recibido.expect(\"Unable to accept\");\n        let mut lector_buffer = BufReader::new(recibido);\n        let mut respuesta = String::new();\n        lector_buffer\n            .read_line(&amp;mut respuesta)\n            .expect(\"could not read\");\n        let peticion: Vec&lt;String&gt; = respuesta\n            .split_whitespace()\n            .map(|s| s.to_string())\n            .collect();\n        println!(\"quote es {}\", peticion[0]);\n        peticions.push(peticion);\n    }\n    // you can use peticions here, or even return it\n}\n</code></pre>\n\n<p>At this point you need to structure your program by defining structs to avoid dealing with <code>Vec</code>s of <code>Vec</code>s.</p>\n"}], "owner": {"reputation": 31, "user_id": 12290762, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/a-/AAuE7mBvy6VxLD7KJx4JXCsszccNCjC-vmv-5VqnmKjQIw=k-s128", "display_name": "Manuel herrera", "link": "https://stackoverflow.com/users/12290762/manuel-herrera"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 390, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1572357575, "creation_date": 1572344211, "last_edit_date": 1572353920, "question_id": 58605384, "link": "https://stackoverflow.com/questions/58605384/cannot-borrow-as-mutable-because-it-is-also-borrowed-as-immutable", "title": "cannot borrow `...` as mutable because it is also borrowed as immutable", "body": "<p>Using the following code:</p>\n\n<pre><code>use std::{\n    io::{BufRead, BufReader},\n    net::TcpListener,\n};\n\nfn inicializar(receptor: TcpListener) {\n    let mut peticion: Vec&lt;&amp;str&gt; = Vec::new();\n    let mut respuesta = String::new();\n    let mut lector_buffer;\n\n    for recibido in receptor.incoming() {\n        let recibido = recibido.expect(\"Unable to accept\");\n        lector_buffer = BufReader::new(recibido);\n        lector_buffer\n            .read_line(&amp;mut respuesta)\n            .expect(\"could not read\");\n        peticion = respuesta.split_whitespace().collect();\n\n        println!(\"quote es {}\", peticion[0]);\n    }\n}\n</code></pre>\n\n<p>Yields this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `respuesta` as mutable because it is also borrowed as immutable\n  --&gt; src/lib.rs:12:24\n   |\n12 |             .read_line(&amp;mut respuesta)\n   |                        ^^^^^^^^^^^^^^ mutable borrow occurs here\n13 |             .expect(\"could not read\");\n14 |         peticion = respuesta.split_whitespace().collect();\n   |         --------   --------- immutable borrow occurs here\n   |         |\n   |         immutable borrow might be used here, when `peticion` is dropped and runs the `Drop` code for type `std::vec::Vec`\n</code></pre>\n\n<p>How can I make it work?</p>\n"}, {"tags": ["rust", "attributes", "conditional-compilation"], "comments": [{"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 1, "creation_date": 1572331089, "post_id": 58602358, "comment_id": 103516504, "body": "Well, in this case, you can merge those imports into to one line: <code>use termion::{coloe, style, screen::*}</code>. But it may not answer your Q in general."}, {"owner": {"reputation": 148602, "user_id": 24545, "user_type": "registered", "accept_rate": 99, "profile_image": "https://i.stack.imgur.com/omB1R.jpg?s=128&g=1", "display_name": "Yuval Adam", "link": "https://stackoverflow.com/users/24545/yuval-adam"}, "reply_to_user": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 0, "creation_date": 1572331569, "post_id": 58602358, "comment_id": 103516644, "body": "@edwardw, true, I&#39;m looking for a more general answer"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 1, "creation_date": 1572333564, "post_id": 58602358, "comment_id": 103517201, "body": "Side note: there&#39;a at least <a href=\"https://github.com/crossterm-rs/crossterm/\" rel=\"nofollow noreferrer\">one crate</a> tackling the problem of cross-platform use of the terminal."}, {"owner": {"reputation": 148602, "user_id": 24545, "user_type": "registered", "accept_rate": 99, "profile_image": "https://i.stack.imgur.com/omB1R.jpg?s=128&g=1", "display_name": "Yuval Adam", "link": "https://stackoverflow.com/users/24545/yuval-adam"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1572345213, "post_id": 58602358, "comment_id": 103522370, "body": "@DenysS&#233;guret thanks I wasn&#39;t aware of it!"}], "answers": [{"tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": true, "score": 6, "last_activity_date": 1572333160, "last_edit_date": 1572333160, "creation_date": 1572332805, "answer_id": 58602716, "question_id": 58602358, "link": "https://stackoverflow.com/questions/58602358/applying-a-rust-attribute-to-more-than-one-line/58602716#58602716", "title": "Applying a Rust attribute to more than one line", "body": "<p>There's no general grouping answer to my knowledge but there are specific solutions.</p>\n\n<p>Most often, you can just use a block:</p>\n\n<pre><code>#[cfg(target_family = \"unix\")]\n{\n    // some code\n}\n</code></pre>\n\n<p><code>use</code> statements can always be grouped together, even when there's no common root:</p>\n\n<pre><code>#[cfg(target_family = \"unix\")]\nuse {\n    termion::{color, style},\n    std::io,\n};\n</code></pre>\n\n<blockquote>\n  <p>attributes are applied only to the line directly following an attribute</p>\n</blockquote>\n\n<p>Not really. They're applied to the following \"thing\". There's a list of supported \"things\" <a href=\"https://doc.rust-lang.org/reference/attributes.html\" rel=\"noreferrer\">in the documentation</a>. It's not all what you'd probably want (it's not an <code>if</code> expression for example) but there's already a lot of covered ground.</p>\n"}], "owner": {"reputation": 148602, "user_id": 24545, "user_type": "registered", "accept_rate": 99, "profile_image": "https://i.stack.imgur.com/omB1R.jpg?s=128&g=1", "display_name": "Yuval Adam", "link": "https://stackoverflow.com/users/24545/yuval-adam"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 353, "favorite_count": 0, "accepted_answer_id": 58602716, "answer_count": 1, "score": 3, "last_activity_date": 1572352828, "creation_date": 1572330564, "last_edit_date": 1572352828, "question_id": 58602358, "link": "https://stackoverflow.com/questions/58602358/applying-a-rust-attribute-to-more-than-one-line", "title": "Applying a Rust attribute to more than one line", "body": "<p>To the best of my understanding of <a href=\"https://doc.rust-lang.org/reference/attributes.html\" rel=\"nofollow noreferrer\">the Rust documentation</a>, attributes are applied only to the line directly following an attribute. So, if I want to <a href=\"https://doc.rust-lang.org/reference/conditional-compilation.html#the-cfg-attribute\" rel=\"nofollow noreferrer\">conditionally compile</a> a line I can do this:</p>\n\n<pre><code>#[cfg(target_family = \"unix\")]\nuse termion::{color, style};\n</code></pre>\n\n<p>What happens when I want to conditionally compile two lines?</p>\n\n<pre><code>#[cfg(target_family = \"unix\")]\nuse termion::{color, style};\n#[cfg(target_family = \"unix\")]\nuse termion::screen::*;\n</code></pre>\n\n<p>Is there a cleaner way for doing this?</p>\n"}, {"tags": ["multithreading", "process", "rust", "lifetime"], "answers": [{"tags": [], "owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "is_accepted": false, "score": 1, "last_activity_date": 1572572921, "creation_date": 1572572921, "answer_id": 58653198, "question_id": 58600530, "link": "https://stackoverflow.com/questions/58600530/multi-threaded-communication-with-an-external-process-in-rust/58653198#58653198", "title": "Multi-threaded communication with an external process in Rust", "body": "<p>You can't pass <code>&amp;self</code> (a temporary borrow) to a thread, because the thread may keep running after the reference is no longer valid.</p>\n\n<p>For using data from threads you have only two options:</p>\n\n<ul>\n<li><p>Give ownership (which is exclusive) of the object to the thread, i.e. use <code>move ||</code> closure, and don't try to use that object afterwards from the main thread, or any other thread.</p></li>\n<li><p>Wrap the object in <code>Arc</code> to get shared thread-safe ownership, and send a clone to the thread (with <code>Arc::clone</code> it's cheap and the underlying data is shared).</p></li>\n</ul>\n\n<p>When the compiler says that you need a \"static lifetime\", ignore that. For all practical purposes, it means \"references are not allowed\".</p>\n"}], "owner": {"reputation": 2295, "user_id": 954570, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d99ee3ff4c19463d9ad0e2fb37582278?s=128&d=identicon&r=PG", "display_name": "vitaly", "link": "https://stackoverflow.com/users/954570/vitaly"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 291, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1572572921, "creation_date": 1572314042, "last_edit_date": 1572314791, "question_id": 58600530, "link": "https://stackoverflow.com/questions/58600530/multi-threaded-communication-with-an-external-process-in-rust", "title": "Multi-threaded communication with an external process in Rust", "body": "<p>A rust newbie here.</p>\n\n<p>I would like to launch an external long-running process and talk with it over pipes from multiple threads in Rust.</p>\n\n<p>I am getting lifetime errors and can't figure the proper way to please the lifetimes checker. What are the ways to restructure this?</p>\n\n<p>Consider the following example:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::process::{Command, Stdio, ChildStdin};\nuse std::sync::Mutex;\nuse std::io::{Write};\nuse std::thread;\n\nstruct Element {\n    sink: Mutex&lt;Option&lt;ChildStdin&gt;&gt;\n}\n\nimpl Element {\n    fn launch_process(&amp;self) {\n        let child =\n            Command::new(\"sed\").args(&amp;[\"s/foo/bar/g\"])\n                .stdin(Stdio::piped())\n                .spawn()\n                .unwrap();\n\n        let mut sink = self.sink.lock().unwrap();\n        *sink = child.stdin;\n    }\n\n    fn tx(&amp;self, content: &amp;[u8]) {\n        let mut sink = self.sink.lock().unwrap();\n        sink.as_mut().unwrap().write(content);\n    }\n\n    fn start_tx(&amp;self) {\n        thread::spawn( || {\n            self.tx(b\"foo fighters\");\n        });\n    }\n}\n\nfn main() {\n    let e = Element {\n        sink: Mutex::new(None)\n    };\n\n    e.launch_process();\n    e.start_tx();\n}\n</code></pre>\n\n<p>If I remove the <code>thread::spawn</code> bit then everything works as expected. With <code>thread::spawn</code> in place, I get the error:</p>\n\n<pre><code>error[E0495]: cannot infer an appropriate lifetime due to conflicting requirements\n  --&gt; src/main.rs:28:24\n   |\n28 |           thread::spawn( || {\n   |  ________________________^\n29 | |             self.tx(b\"foo fighters\");\n30 | |         });\n   | |_________^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 27:5...\n  --&gt; src/main.rs:27:5\n   |\n27 | /     fn start_tx(&amp;self) {\n28 | |         thread::spawn( || {\n29 | |             self.tx(b\"foo fighters\");\n30 | |         });\n31 | |     }\n   | |_____^\n   = note: ...so that the types are compatible:\n           expected &amp;&amp;Element\n              found &amp;&amp;Element\n   = note: but, the lifetime must be valid for the static lifetime...\nnote: ...so that the type `[closure@src/main.rs:28:24: 30:10 self:&amp;&amp;Element]` will meet its required lifetime bounds\n  --&gt; src/main.rs:28:9\n   |\n28 |         thread::spawn( || {\n   |         ^^^^^^^^^^^^^\n\nerror: aborting due to previous error\n</code></pre>\n"}, {"tags": ["rust", "borrowing", "actix-web"], "answers": [{"comments": [{"owner": {"reputation": 615, "user_id": 1745729, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/cec3cc3e84d3be5c3e8785fbbac61e07?s=128&d=identicon&r=PG", "display_name": "Andrea Mucci", "link": "https://stackoverflow.com/users/1745729/andrea-mucci"}, "edited": false, "score": 0, "creation_date": 1572390990, "post_id": 58599995, "comment_id": 103542758, "body": "Thank you so much for your help, i will update the most during next days with the solution :-)"}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": true, "score": 11, "last_activity_date": 1572308550, "creation_date": 1572308550, "answer_id": 58599995, "question_id": 58599539, "link": "https://stackoverflow.com/questions/58599539/cannot-borrow-in-a-rc-as-mutable/58599995#58599995", "title": "Cannot borrow in a Rc as mutable", "body": "<p>You cannot borrow a reference-counting pointer as mutable; this is because one of the guarantees it provides is only possible if the structure is read-only.</p>\n\n<p>You can, however, get around it, but it will require some signature changes.</p>\n\n<h1>Enter interior mutability</h1>\n\n<p>Interior mutability is a concept you may know from other programming languages in the form of mutexes, atomics and synchronization primitives. In practice, those structures allow you to temporarily guarantee that you are the <em>only</em> accessor of a given variable.</p>\n\n<p>In Rust, this is particularly good, as it allows us to extract a mutable reference to an interior member from a structure that only requires immutable references to itself to function. Perfect to fit in <code>Rc</code>.</p>\n\n<p>Depending on what you need for your needs, you will find the <a href=\"https://doc.rust-lang.org/std/cell/struct.Cell.html\" rel=\"noreferrer\"><code>Cell</code></a> and <a href=\"https://doc.rust-lang.org/std/cell/struct.RefCell.html\" rel=\"noreferrer\"><code>RefCell</code></a> structures to be exactly what you need for this. These are not thread-safe, but then again, neither is <code>Rc</code> so it's not exactly a deal-breaker.</p>\n\n<p>In practice, it works very simply:</p>\n\n<pre><code>let data = Rc::new(RefCell::new(true));\n{\n  let mut reference = data.borrow_mut();\n  *reference = false;\n}\nprintln!(\"{:?}\", data);\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=dca128696b2f7d51caa6240d21cf1d83\" rel=\"noreferrer\"><strong>playground</strong></a></p>\n\n<p>(If you ever want the threaded versions, <code>Arc</code> replaces <code>Rc</code> and <code>Mutex</code> or <code>RwLock</code> replaces <code>Cell</code>/<code>RefCell</code>)</p>\n"}], "owner": {"reputation": 615, "user_id": 1745729, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/cec3cc3e84d3be5c3e8785fbbac61e07?s=128&d=identicon&r=PG", "display_name": "Andrea Mucci", "link": "https://stackoverflow.com/users/1745729/andrea-mucci"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3450, "favorite_count": 1, "accepted_answer_id": 58599995, "answer_count": 1, "score": 4, "last_activity_date": 1572308550, "creation_date": 1572304467, "question_id": 58599539, "link": "https://stackoverflow.com/questions/58599539/cannot-borrow-in-a-rc-as-mutable", "title": "Cannot borrow in a Rc as mutable", "body": "<p>First of all I'm new with Rust :-)</p>\n\n<p>The problem:\nI want to create a module called RestServer that contain the methods ( actix-web ) to add routes and start the server.</p>\n\n<pre><code>struct Route\n{\n   url: String,\n   request: String,\n   handler: Box&lt;dyn Fn(HttpRequest) -&gt; HttpResponse&gt;\n}\n\n\nimpl PartialEq for Route {\n   fn eq(&amp;self, other: &amp;Self) -&gt; bool {\n     self.url == other.url\n   }\n}\n\nimpl Eq for Route {}\n\nimpl Hash for Route {\n   fn hash&lt;H: Hasher&gt;(&amp;self, hasher: &amp;mut H) {\n      self.url.hash(hasher);\n   }\n}\n</code></pre>\n\n<p>this is the route structure, this structure containe the the route url, the request type ( GET, POST etc ) and hanlder is the function that have to catch the request and return a HTTPResponse</p>\n\n<pre><code>pub struct RestServer\n{\n   scopes: HashMap&lt;String, Rc&lt;HashSet&lt;Route&gt;&gt;&gt;,\n   routes: HashSet&lt;Route&gt;,\n   host: String,\n}\n\nimpl RestServer {\n\n   pub fn add_route(self, req: &amp;str, funct: impl Fn(HttpRequest) -&gt; HttpResponse + 'static,\n                 route: &amp;str, scope: Option&lt;&amp;str&gt;) -&gt; RestServer\n   {\n       let mut routes_end = self.routes;\n       let mut scopes_end = self.scopes;\n       let url = self.host;\n       let route = Route {\n          url: String::from(route),\n          request: String::from(req),\n          handler: Box::new(funct)\n    };\n\n    if let Some(x) = scope {\n        if let Some(y) = scopes_end.get(x) {\n            let mut cloned_y = Rc::clone(y);\n            cloned_y.insert(route);\n            scopes_end.insert(String::from(x), cloned_y);\n        }else {\n            let mut hash_scopes = HashSet::new();\n            hash_scopes.insert(route);\n            scopes_end.insert(String::from(x), Rc::new(hash_scopes));\n        }\n    } else {\n        routes_end.insert(route);\n    }\n\n    RestServer {\n        scopes: scopes_end,\n        routes: routes_end,\n        host: String::from(url)\n    }\n  }\n</code></pre>\n\n<p>the latest code is the implementation of RestServer. \nThe most important part is the <strong>add_route</strong> function, this function receive as paramente the route that is a string, the function handler, the request string and the scope.\nFirst i create the route object.\nI check if the scope exist into the HashMap, if yes i have to take the actual scope and update the HashSet.</p>\n\n<p>When i build the code i get the following error</p>\n\n<pre><code>   error[E0596]: cannot borrow data in an `Rc` as mutable\n   --&gt; interface/src/rest/mod.rs:60:17\n   |\n60 |                 cloned_y.insert(route);\n   |                 ^^^^^^^^ cannot borrow as mutable\n   |\n   = help: trait `DerefMut` is required to modify through a dereference, but it is not \n     implemented for `std::rc::Rc&lt;std::collections::HashSet&lt;rest::Route&gt;&gt;`\n</code></pre>\n\n<p>I know that the compiler give me some help but honestly i have no idea how to do that or if i can do with some easy solution.\nAfter a large search in google i found a solution in RefCell, but is not so much clear</p>\n\n<p>Thanks in advance for your help</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1572295955, "post_id": 58598242, "comment_id": 103509016, "body": "What&#39;s the temporary value you see and how is it returned?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1572296066, "post_id": 58598242, "comment_id": 103509052, "body": "<code>&amp;self.buildings[&amp;pos]</code> is not a temporary"}, {"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 0, "creation_date": 1572296116, "post_id": 58598242, "comment_id": 103509076, "body": "Try saying <code>self.buildings[&amp;pos]</code> instead, and you&#39;ll see you cannot do that. <code>&amp;</code> in what you&#39;ve written <i>borrows the value at</i> <code>self.buildings[&amp;pos]</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1572296269, "post_id": 58598242, "comment_id": 103509134, "body": "You may be interested in <a href=\"https://stackoverflow.com/q/27879161/155423\">What is the return type of the indexing operation?</a>; <a href=\"https://stackoverflow.com/q/32682876/155423\">Is there any way to return a reference to a variable created in a function?</a>; <a href=\"https://stackoverflow.com/q/47662253/155423\">Why is it legal to borrow a temporary?</a>; <a href=\"https://stackoverflow.com/q/50345139/155423\">Why can I return a reference to a local literal but not a variable?</a>"}, {"owner": {"reputation": 893, "user_id": 381561, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/52db682f9a668b4731f4aba72fb21f16?s=128&d=identicon&r=PG", "display_name": "Kill KRT", "link": "https://stackoverflow.com/users/381561/kill-krt"}, "edited": false, "score": 0, "creation_date": 1572375116, "post_id": 58598242, "comment_id": 103537460, "body": "I was thinking that is a temporary value since operator [] returns a reference that is automatically deferenced by the compiler itself, so the &amp; in front of self.building[pos] is taking a reference to a temporary value that is on the stack of the function, but maybe I have some confusion about the * works"}], "answers": [{"tags": [], "owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "is_accepted": false, "score": 0, "last_activity_date": 1572574275, "last_edit_date": 1572574275, "creation_date": 1572573947, "answer_id": 58653285, "question_id": 58598242, "link": "https://stackoverflow.com/questions/58598242/why-does-the-index-trait-allow-returning-a-reference-to-a-temporary-value/58653285#58653285", "title": "Why does the Index trait allow returning a reference to a temporary value?", "body": "<p>You example looks fine.</p>\n\n<p>The <code>Index</code> trait is only able to \"view\" what is in the object already, and it's not usable for returning arbitrary dynamically-generated data.</p>\n\n<p>It's not possible in Rust to return a reference to a value created inside a function, if that value isn't stored somewhere permanently (references don't exist on their own, they always borrow some value owned somewhere). </p>\n\n<p>The reference can't be borrowed from a variable inside the function, because all variables will be destroyed before the function returns. Lifetimes only describe what the program does, and can't \"make\" something live longer than it already does.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn index(&amp;self) -&gt; &amp;u32 {\n   let tmp = 1;\n   &amp;tmp  // not valid, because tmp isn't stored anywhere\n}\n</code></pre>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn index(&amp;self) -&gt; &amp;u32 {\n   // ok, because the value is stored in self,\n   // which existed before this function has been called\n   &amp;self.tmp \n}\n</code></pre>\n\n<p>You may find that returning <code>&amp;1</code> works. That's because <code>1</code> is stored in your program's executable which, as far as the program is concerned, is permanent storage. But <code>'static</code> is an exception for literals and leaked memory, so it's not something you can rely on in most cases.</p>\n"}], "owner": {"reputation": 893, "user_id": 381561, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/52db682f9a668b4731f4aba72fb21f16?s=128&d=identicon&r=PG", "display_name": "Kill KRT", "link": "https://stackoverflow.com/users/381561/kill-krt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 77, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1572574275, "creation_date": 1572295897, "last_edit_date": 1572295991, "question_id": 58598242, "link": "https://stackoverflow.com/questions/58598242/why-does-the-index-trait-allow-returning-a-reference-to-a-temporary-value", "title": "Why does the Index trait allow returning a reference to a temporary value?", "body": "<p>Consider this simple <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=4c0e3cdb2e2761e4b5f038b8603dfeb9\" rel=\"nofollow noreferrer\">code</a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::ops::Index;\nuse std::collections::HashMap;\n\nenum BuildingType {\n    Shop,\n    House,\n}\n\nstruct Street {\n    buildings: HashMap&lt;u32, BuildingType&gt;,\n}\n\nimpl Index&lt;u32&gt; for Street {\n    type Output = BuildingType;\n\n    fn index(&amp;self, pos: u32) -&gt; &amp;Self::Output {\n        &amp;self.buildings[&amp;pos]\n    }\n}\n</code></pre>\n\n<p>It compiles with no issues, but I cannot understand why the borrow checker is not complaining about returning a reference to temporary value in the <code>index</code> function.</p>\n\n<p>Why is it working?</p>\n"}, {"tags": ["rust"], "owner": {"reputation": 11, "user_id": 10622611, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/485b19d2afb55f7693cb34e6795ac64d?s=128&d=identicon&r=PG&f=1", "display_name": "TrucMuche", "link": "https://stackoverflow.com/users/10622611/trucmuche"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 27, "favorite_count": 0, "closed_date": 1572288095, "answer_count": 0, "score": 1, "last_activity_date": 1572288236, "creation_date": 1572288046, "last_edit_date": 1572288236, "question_id": 58596644, "link": "https://stackoverflow.com/questions/58596644/trait-in-return-type", "closed_reason": "Duplicate", "title": "Trait in return type", "body": "<p>I wrote a function which can return struct <code>A</code> or struct <code>B</code> and those structs implement a <code>Common</code> trait. I used the syntax <code>-&gt; impl Common</code> for the return type of the function, but the code does not compile because of incompatible types:</p>\n\n<pre><code>trait Common {\n    fn foo();\n}\n\nstruct A;\n\nimpl Common for A {\n    fn foo() {\n        println!(\"Struct A\");\n    }\n}\n\nstruct B;\n\nimpl Common for B {\n    fn foo() {\n        println!(\"Struct B\");\n    }\n}\n\nfn bar(param: &amp;str) -&gt; impl Common {\n    if param == \"A\" {\n        return A;\n    } else {\n        return B;\n    }\n}\n\nfn main() {\n    bar(\"A\");\n    bar(\"B\");\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d6f24e162a6da66dd8b2583218a03071\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>The error is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:25:16\n   |\n21 | fn bar(param: &amp;str) -&gt; impl Common {\n   |                        ----------- expected because this return type...\n22 |     if param == \"A\" {\n23 |         return A;\n   |                - ...is found to be `A` here\n24 |     } else {\n25 |         return B;\n   |                ^ expected struct `A`, found struct `B`\n   |\n   = note: expected type `A`\n              found type `B`\n</code></pre>\n\n<p>In my first implementation I tried to use pattern matching in the function to be more idiomatic, but the error remains:</p>\n\n<pre><code>match param {\n    \"A\" =&gt; A,\n    \"B\" =&gt; B,\n    _ =&gt; panic!(\"Invalid param\"),\n}\n</code></pre>\n\n<p>How can I deal with such kind of generic issue?</p>\n"}, {"tags": ["rust", "stm32ldiscovery"], "comments": [{"owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "edited": false, "score": 0, "creation_date": 1572574396, "post_id": 58596233, "comment_id": 103611210, "body": "Make sure you&#39;re online, with access to GitHub, and that you don&#39;t have a virus/antivirus or other malware that intercepts HTTPS connections. This looks like either a network error, or some bug/corruption in Cargo or your system&#39;s zlib library. Try running <code>cargo update</code> again. If that doesn&#39;t help, reinstall Rust/Cargo. If that doesn&#39;t help, file bugs."}], "owner": {"reputation": 337, "user_id": 10869513, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/mWqRi.jpg?s=128&g=1", "display_name": "Muhammad Umer", "link": "https://stackoverflow.com/users/10869513/muhammad-umer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 691, "favorite_count": 0, "answer_count": 0, "score": 3, "last_activity_date": 1572286163, "creation_date": 1572286163, "question_id": 58596233, "link": "https://stackoverflow.com/questions/58596233/failed-to-fetch-https-github-com-rust-lang-crates-io-index", "title": "failed to fetch `https://github.com/rust-lang/crates.io-index`", "body": "<p>I'm following this <code>https://docs.rust-embedded.org/discovery/03-setup/index.html</code> while installing <code>itmdump</code> through <code>cargo install itm --vers 0.3.1</code>  , it throws an error <code>error: failed to fetch https://github.com/rust-lang/crates.io-index  Caused by:\n  error inflating zlib stream; class=Zlib (5)</code>\nHow could this error be resolved ? </p>\n"}, {"tags": ["node.js", "debugging", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1572285265, "post_id": 58595477, "comment_id": 103504850, "body": "<i>The dataset that is failing is quite large</i> \u2014 perhaps you are simply running out of memory? Using some process monitoring tools, how much RAM is used by the process?"}, {"owner": {"reputation": 23927, "user_id": 1427161, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/JMUU0.png?s=128&g=1", "display_name": "doublesharp", "link": "https://stackoverflow.com/users/1427161/doublesharp"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1572287924, "post_id": 58595477, "comment_id": 103505970, "body": "@Shepmaster - not running out of memory, there was some missing info in the question that I forgot. The error is being swallowed by the async code from <a href=\"https://github.com/neon-bindings/examples/blob/master/async/native/src/lib.rs\" rel=\"nofollow noreferrer\">this example</a>, if I run it synchronously i get a JavaScript error <code>UnhandledPromiseRejectionWarning: Error: internal error in Neon module: called `Option::unwrap()` on a `None` value</code> which does help narrow it down, but it seems like Neon is what is blocking the stack traces."}], "answers": [{"tags": [], "owner": {"reputation": 11, "user_id": 2706459, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d1ebe911e0921f8ad3b187a583337db2?s=128&d=identicon&r=PG", "display_name": "lhr0909", "link": "https://stackoverflow.com/users/2706459/lhr0909"}, "is_accepted": false, "score": 1, "last_activity_date": 1589339205, "creation_date": 1589339205, "answer_id": 61765686, "question_id": 58595477, "link": "https://stackoverflow.com/questions/58595477/how-do-i-get-a-backtrace-or-otherwise-debug-failed-to-initiate-panic-when-usin/61765686#61765686", "title": "How do I get a backtrace or otherwise debug &quot;failed to initiate panic&quot; when using Rust with Neon bindings?", "body": "<p>I ran into the same issue as you do, and for me I got it resolved by processing the result properly by using the <code>match</code> clause and use <a href=\"https://neon-bindings.com/docs/async#handling-failing-tasks\" rel=\"nofollow noreferrer\">this method</a> to handle the error results, so the callback will properly generate a NodeJS error on my side.</p>\n\n<p>some of my snippet:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::sync::{Arc, Mutex};\n\nuse crate::utils::convert_uids_map;\n\nuse neon::prelude::*;\n\nuse dgraph_tonic::{DgraphError, Mutation, MutationResponse};\nuse dgraph_tonic::sync::{Mutate};\n\npub struct MutateTask&lt;M&gt; where M: Mutate {\n  pub txn: Arc&lt;Mutex&lt;Option&lt;M&gt;&gt;&gt;,\n  pub mu: Mutation,\n}\n\nimpl&lt;M&gt; Task for MutateTask&lt;M&gt; where M: Mutate + 'static {\n  type Output = MutationResponse;\n  type Error = DgraphError;\n  type JsEvent = JsValue;\n\n  fn perform(&amp;self) -&gt; Result&lt;Self::Output, Self::Error&gt; {\n    let mut mutex_guard = self.txn.lock().unwrap();\n    let txn = mutex_guard.as_mut();\n    match txn {\n      Some(t) =&gt; t.mutate(self.mu.clone()),\n      None =&gt; Err(DgraphError::EmptyTxn)\n    }\n  }\n\n  fn complete(self, mut ctx: TaskContext, result: Result&lt;Self::Output, Self::Error&gt;) -&gt; JsResult&lt;Self::JsEvent&gt; {\n    match result {\n      Ok(x) =&gt; Ok(convert_uids_map(&amp;mut ctx, &amp;x.uids).unwrap().upcast()),\n      Err(e) =&gt; ctx.throw_error(format!(\"MutateTask Error - {:?}\", e))\n    }\n  }\n}\n</code></pre>\n\n<p>and then I got meaningful error to proceed:</p>\n\n<pre><code>(node:50781) UnhandledPromiseRejectionWarning: Error: MutateTask Error - GrpcError(CannotDoRequest(Status { code: Unknown, message: \"key error: subject:\\\"_:dg.1759080630.67\\\" predicate:\\\"@timestamp\\\" object_value:&lt;str_val:\\\"2020-04-28T02:22:19.570Z\\\" &gt; : predicate \\\"@timestamp\\\": Has invalid characters\" }))\n(node:50781) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 1)\n(node:50781) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.\n</code></pre>\n"}], "owner": {"reputation": 23927, "user_id": 1427161, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/JMUU0.png?s=128&g=1", "display_name": "doublesharp", "link": "https://stackoverflow.com/users/1427161/doublesharp"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 629, "favorite_count": 1, "answer_count": 1, "score": 2, "last_activity_date": 1589339205, "creation_date": 1572282876, "last_edit_date": 1572288303, "question_id": 58595477, "link": "https://stackoverflow.com/questions/58595477/how-do-i-get-a-backtrace-or-otherwise-debug-failed-to-initiate-panic-when-usin", "title": "How do I get a backtrace or otherwise debug &quot;failed to initiate panic&quot; when using Rust with Neon bindings?", "body": "<p>I have written a native Node module using Rust + <a href=\"https://neon-bindings.com\" rel=\"nofollow noreferrer\">Neon Bindings</a>. The general purpose is to query a database, decrypt the results, and return a JSON array to Node. For some datasets this is working as expected, however for others it is causing a panic. I am attempting to debug it, however I can't figure out how to get a stacktrace. The only output is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>fatal runtime error: failed to initiate panic, error 5\n    Abort trap: 6\n</code></pre>\n\n<p>My attempts to debug include:</p>\n\n<ul>\n<li>including \"backtrace\" in the Cargo.toml</li>\n<li>compiling without \"--release\"</li>\n<li>setting <code>RUST_BACKTRACE=1</code> and <code>DEBUG=true</code></li>\n<li>creating a <code>test.js</code> file to print the output from the module</li>\n</ul>\n\n<p>Build output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>&gt; neon build\nneon info running cargo\n  ... all the compilation steps.\n  Finished dev [unoptimized + debuginfo] target(s) in 2m 17s\nneon info generating native/index.node\n</code></pre>\n\n<p>Test file:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>const Addon = require('./lib');\nconst addon = new Addon();\n(async function() {\n  console.log(`process.env.RUST_BACKTRACE = ${process.env.RUST_BACKTRACE}`);\n  const i = await addon.getData(237);\n  console.log(i, i.length)\n}());\n</code></pre>\n\n<p>Test output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>&gt; RUST_BACKTRACE=1 DEBUG=true node test.js \nprocess.env.RUST_BACKTRACE = 1\nfatal runtime error: failed to initiate panic, error 5\nAbort trap: 6\n</code></pre>\n\n<p>For other values passed to <code>addon.getData()</code> I get back the JSON array of data as expected. The dataset that is failing is quite large so I haven't been able to determine any differences.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>&gt; rustc --version\nrustc 1.38.0 (625451e37 2019-09-23)\n&gt; cargo --version\ncargo 1.38.0 (23ef9a4ef 2019-08-20)\n&gt; node --version\nv11.15.0\n&gt; neon version\n0.3.1\n</code></pre>\n\n<p>I have implemented a synchronous version of the code, as well as asynchronous using <a href=\"https://github.com/neon-bindings/examples/blob/71e66cb66bafbf660690ffa2fc6d2fe5e3be2a41/async/native/src/lib.rs\" rel=\"nofollow noreferrer\">this example</a>. The async callback is converted into a Promise in <code>./lib/index.js</code>. After updating the <code>test.js</code> to use the synchronous version of the code, I got the following output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>(node:45229) UnhandledPromiseRejectionWarning: Error: internal error in Neon module: called `Option::unwrap()` on a `None` value\n</code></pre>\n\n<p>I added a bunch of <code>println!()</code>s to my code and was able to find the error (a missing required property on a decrypted JSON object), but was never able to get a proper stack trace. It seems like Neon must be swallowing them in the async code.</p>\n"}, {"tags": ["rust", "rust-tokio"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1572284854, "post_id": 58595434, "comment_id": 103504665, "body": "It&#39;s hard to answer your question because it doesn&#39;t include a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. We can&#39;t tell what crates (and their versions), types, traits, fields, etc. are present in the code. It would make it easier for us to help you if you try to reproduce your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> if possible, otherwise in a brand new Cargo project, then <a href=\"https://stackoverflow.com/posts/58595434/edit\">edit</a> your question to include the additional info. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MRE tips</a> you can use to reduce your original code for posting here. Thanks!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1572284994, "post_id": 58595434, "comment_id": 103504724, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/52521201/155423\">How do I synchronously return a value calculated in an asynchronous Future in stable Rust?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/58595434/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}], "owner": {"reputation": 116, "user_id": 2327063, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bde3efc111da54a2acaf8b6d69549d0d?s=128&d=identicon&r=PG", "display_name": "user2327063", "link": "https://stackoverflow.com/users/2327063/user2327063"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 36, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1572284707, "creation_date": 1572282662, "last_edit_date": 1572284707, "question_id": 58595434, "link": "https://stackoverflow.com/questions/58595434/how-can-i-stop-all-running-containers-using-shiplift", "title": "How can I stop all running containers using shiplift?", "body": "<p>I can use shiplift to get a list of the running containers but I have found it very difficult to stop them. After much trial and error, it seems I can create a vector of futures and then join them all in order to create a single future to return. This joined future does not seem to be called and the containers are never stopped. Is there a better way to run all these futures and then return the result?</p>\n\n<pre><code>let docker = connection.clone();\ndocker\n    .containers()\n    .list(&amp;Default::default())\n    .map(move |list| {\n        let mut futures = Vec::new();\n        for container in list {\n            let cont = connection.containers().get(&amp;container.id);\n            println!(\"Stopping {}\", cont.id());\n            futures.push(cont.stop(Some(std::time::Duration::from_secs(1))));\n            // futures.push(connection.containers().get(&amp;container.id).stop(None).map_err(|_| println!(\"error\")));\n        }\n        join_all(futures)\n    })\n    .map(|_| println!(\"Stopped all\"))\n    .map_err(|e| eprintln!(\"Error: {}\", e))\n</code></pre>\n"}, {"tags": ["generics", "rust", "traits", "option"], "comments": [{"owner": {"reputation": 63, "user_id": 5815651, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/afeb43719b203a87ac578f9c2ec63ec0?s=128&d=identicon&r=PG&f=1", "display_name": "MasterOfDeath", "link": "https://stackoverflow.com/users/5815651/masterofdeath"}, "edited": false, "score": 0, "creation_date": 1572274555, "post_id": 58593042, "comment_id": 103499398, "body": "This should be part of a library and it is used as some kind of flag. If the user does not want to provide an input, it is handy to use the literal <code>None</code> instead of defining a typed variable first."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 1, "creation_date": 1572344116, "post_id": 58593042, "comment_id": 103521790, "body": "Since <code>Option</code> is an <code>IntoIterator</code> you can send an empty iterator for your case like this : <code>print_iter(Some(None))</code> , <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018\" rel=\"nofollow noreferrer\">Playground</a>"}], "answers": [{"tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": false, "score": 3, "last_activity_date": 1572339483, "last_edit_date": 1572339483, "creation_date": 1572274394, "answer_id": 58593193, "question_id": 58593042, "link": "https://stackoverflow.com/questions/58593042/is-there-a-way-to-hint-to-the-compiler-to-use-some-kind-of-default-generic-type/58593193#58593193", "title": "Is there a way to hint to the compiler to use some kind of default generic type when using Option::None?", "body": "<p>There's no problem with the value <code>None</code>.</p>\n\n<p>There's just a problem when your variable type can't be inferred which doesn't usually occur. The only case where there's a problem is when you directly pass <code>None</code>, and have no typed variable.</p>\n\n<p>You can specify the type using the turbo fish:</p>\n\n<pre><code>print_iter::&lt;Vec&lt;i32&gt;&gt;(None);\n</code></pre>\n\n<p>But you don't usually need to; your normal cases would rather be like this:</p>\n\n<pre><code>let a: Option&lt;Vec&lt;i32&gt;&gt; = None;\nprint_iter(a);\n</code></pre>\n\n<p>or </p>\n\n<pre><code>print_iter(my_options.a);\n</code></pre>\n\n<p>and both constructs are without problem. </p>\n\n<p><strong>Now</strong> (following question edit), if you really want to be able to pass <code>None</code> without precising the type, for example as a literal flag, then you can define a macro:</p>\n\n<pre><code>macro_rules! pi {\n    (None) =&gt; {\n         // here we handle the call as a nop but\n         //  other behaviors are possible, like\n         //  calling the function with a type\n         //  specified with a turbofish\n    };\n    ($a:expr) =&gt; {\n        print_iter($a)\n    };\n}\n\nfn main() {\n    let v = vec![1i32, 2, 3];\n    pi!(Some(v));\n    pi!(None);\n}\n\nfn print_iter&lt;T: IntoIterator&lt;Item = i32&gt;&gt;(v: Option&lt;T&gt;) {\n    for e in v.unwrap() {\n        println!(\"{}\", e);\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1572276186, "post_id": 58593658, "comment_id": 103500330, "body": "This is probably a better answer than mine."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 1, "creation_date": 1572276595, "post_id": 58593658, "comment_id": 103500557, "body": "OP question makes sense only because the <code>print_iter</code> function, in fact, takes several parameters (which wasn&#39;t obvious before edit and comment). And options rarely come alone (and you don&#39;t want to pass several flags to a function). So it&#39;s possible the real convenient solution is to build a more complex struct holding several options. But this answer is probably a sensible first step to the undescribed real question."}, {"owner": {"reputation": 63, "user_id": 5815651, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/afeb43719b203a87ac578f9c2ec63ec0?s=128&d=identicon&r=PG&f=1", "display_name": "MasterOfDeath", "link": "https://stackoverflow.com/users/5815651/masterofdeath"}, "edited": false, "score": 1, "creation_date": 1572278989, "post_id": 58593658, "comment_id": 103501841, "body": "@user4815162342, DenysS&#233;guret Thanks to both of you for the fast response! Sorry for not having a clear question in the beginning. I&#39;m new to rust so nomenclature and phrasing my problems is still a struggle for me."}], "tags": [], "owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "is_accepted": true, "score": 5, "last_activity_date": 1572287206, "last_edit_date": 1572287206, "creation_date": 1572276066, "answer_id": 58593658, "question_id": 58593042, "link": "https://stackoverflow.com/questions/58593042/is-there-a-way-to-hint-to-the-compiler-to-use-some-kind-of-default-generic-type/58593658#58593658", "title": "Is there a way to hint to the compiler to use some kind of default generic type when using Option::None?", "body": "<blockquote>\n  <p>Is there any way to hint to the compiler that I don't care for <code>None</code> or use some kind of default?</p>\n</blockquote>\n\n<p>You can implement your own non-generic value to serve as the default. For starters, let's assume <code>print_iter</code> didn't accept <code>Option&lt;T&gt;</code>, but an enum of its own:</p>\n\n<pre><code>enum PrintArg&lt;T&gt; {\n    Ignore,\n    Use(T),\n}\n\nfn print_iter&lt;T: IntoIterator&lt;Item = i32&gt;&gt;(v: PrintArg&lt;T&gt;) {\n    if let PrintArg::Use(v) = v {\n        for e in v {\n            println!(\"{}\", e);\n        }\n    }\n}\n</code></pre>\n\n<p>This doesn't solve the problem yet, because if you pass <code>PrintArg::Ignore</code> to <code>print_iter()</code>, you are back at square one - the compiler is unable to to infer the <code>T</code>. But with your own type, you can easily change <code>print_iter</code> to accept anything that can be <em>converted</em> <a href=\"https://doc.rust-lang.org/std/convert/trait.Into.html\" rel=\"nofollow noreferrer\">into</a> <code>PrintArg</code>:</p>\n\n<pre><code>fn print_iter&lt;T, V&gt;(v: T)\nwhere\n    T: Into&lt;PrintArg&lt;V&gt;&gt;,\n    V: IntoIterator&lt;Item = i32&gt;,\n{\n    if let PrintArg::Use(v) = v.into() {\n        for e in v {\n            println!(\"{}\", e);\n        }\n    }\n}\n</code></pre>\n\n<p>With this modification, you can create a dummy non-generic <code>Ignore</code> value and use the <a href=\"https://doc.rust-lang.org/std/convert/trait.From.html?search=\" rel=\"nofollow noreferrer\"><code>From</code></a> trait to define its conversion to a <code>PrintArg::Ignore&lt;T&gt;</code> with <code>T</code> of your choice - for example:</p>\n\n<pre><code>struct Ignore;\n\nimpl From&lt;Ignore&gt; for PrintArg&lt;Vec&lt;i32&gt;&gt; {\n    fn from(_v: Ignore) -&gt; Self {\n        PrintArg::Ignore\n    }\n}\n</code></pre>\n\n<p>As <code>Ignore</code> is non-generic, its use doesn't require (or accept) a <code>&lt;T&gt;</code>. While we did have to invent a type for <code>PrintArg&lt;T&gt;</code> in the <code>From</code> trait implementation, we never construct it, so it's irrelevant which one we choose, as long as it satisfies the <code>IntoIterator</code> bound.</p>\n\n<p>Of course, you'll still want to be able to invoke <code>print_iter()</code> with <code>Some(...)</code>, so you'll also define a conversion of <code>Option&lt;T&gt;</code> to <code>PrintArg&lt;T&gt;</code>:</p>\n\n<pre><code>impl&lt;T&gt; From&lt;Option&lt;T&gt;&gt; for PrintArg&lt;T&gt; {\n    fn from(v: Option&lt;T&gt;) -&gt; Self {\n        match v {\n            Some(v) =&gt; PrintArg::Use(v),\n            None =&gt; PrintArg::Ignore,\n        }\n    }\n}\n</code></pre>\n\n<p>With these in place, your API is clean, allowing <code>main()</code> to look like this (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e2df16413dd187d24dc0cec84975f221\" rel=\"nofollow noreferrer\">playground</a>):</p>\n\n<pre><code>fn main() {\n    let v = vec![1i32, 2, 3];\n    print_iter(Some(v));\n    print_iter(Ignore);\n}\n</code></pre>\n"}], "owner": {"reputation": 63, "user_id": 5815651, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/afeb43719b203a87ac578f9c2ec63ec0?s=128&d=identicon&r=PG&f=1", "display_name": "MasterOfDeath", "link": "https://stackoverflow.com/users/5815651/masterofdeath"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 303, "favorite_count": 0, "accepted_answer_id": 58593658, "answer_count": 2, "score": 4, "last_activity_date": 1572339483, "creation_date": 1572273911, "last_edit_date": 1572288539, "question_id": 58593042, "link": "https://stackoverflow.com/questions/58593042/is-there-a-way-to-hint-to-the-compiler-to-use-some-kind-of-default-generic-type", "title": "Is there a way to hint to the compiler to use some kind of default generic type when using Option::None?", "body": "<p>I need a function that gets an <code>Option</code> of an generic type <code>T</code> that implements the trait <code>std::iter::IntoIterator</code>.\nA naive implementation could look like the following (yes, the unwrap would panic on <code>None</code>):</p>\n\n<pre><code>fn main() {\n    let v = vec![1i32, 2, 3];\n    print_iter(Some(v));\n    print_iter(None);\n}\n\nfn print_iter&lt;T: IntoIterator&lt;Item = i32&gt;&gt;(v: Option&lt;T&gt;) {\n    for e in v.unwrap() {\n        println!(\"{}\", e);\n    }\n}\n</code></pre>\n\n<p>Test on <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d7f70d95df7327100e96b3c17ffcb5ce\" rel=\"nofollow noreferrer\">playground</a>.</p>\n\n<p>This works as expected for <code>Some(...)</code>, but fails for <code>None</code> with:</p>\n\n<pre><code>error[E0282]: type annotations needed\n --&gt; src/main.rs:4:5\n  |\n4 |     print_iter(None);\n  |     ^^^^^^^^^^ cannot infer type for `T`\n</code></pre>\n\n<p>Obviously the type of <code>T</code> is unknown in those cases. One could use <code>print_iter::&lt;Vec&lt;i32&gt;&gt;(None);</code> but this does not feel really idiomatic, because this gives some arbitrary type that isn't based on anything...</p>\n\n<p>Is there any way to hint to the compiler that I don't care for <code>None</code> or use some kind of default?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 3, "creation_date": 1572263933, "post_id": 58590521, "comment_id": 103494062, "body": "Hi there! I&#39;m pretty sure your question is answered by the Q&amp;A I linked. I hope it helps ^_^"}], "owner": {"reputation": 55, "user_id": 9456807, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-VmfUND8ueP4/AAAAAAAAAAI/AAAAAAAAAAs/nrFN7FF0-dY/photo.jpg?sz=128", "display_name": "Riton Elion", "link": "https://stackoverflow.com/users/9456807/riton-elion"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 37, "favorite_count": 0, "closed_date": 1572263907, "answer_count": 0, "score": 1, "last_activity_date": 1572263790, "creation_date": 1572263790, "question_id": 58590521, "link": "https://stackoverflow.com/questions/58590521/how-to-make-a-struct-as-a-owner-of-an-string-at-the-same-time-storing-a-referenc", "closed_reason": "Duplicate", "title": "How to make a struct as a owner of an string at the same time storing a reference of this string?", "body": "<p>Like this:</p>\n\n<pre><code>    struct S&lt;'a&gt; {\n        content : String,\n        reference : Option&lt;&amp;'a String&gt;\n\n    }\n\n    impl &lt;'a&gt; S&lt;'a&gt; {\n        fn new(content: String) -&gt; S&lt;'a&gt; {\n            let mut s = S {\n                content,\n                reference : None\n            };\n            s.reference.replace(&amp;s.content);\n            s\n        }\n    }\n</code></pre>\n\n<p>Where reference stored a reference of its content.</p>\n\n<p>If it's impossible, why?</p>\n\n<p>And is there anything works similar to it?</p>\n"}, {"tags": ["function", "rust", "borrow-checker"], "comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 1, "creation_date": 1572261346, "post_id": 58589033, "comment_id": 103492932, "body": "Your working version has so many mistakes, please add <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">Minimal, Reproducible Example</a>"}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1572261789, "post_id": 58589033, "comment_id": 103493099, "body": "And probably the answer is, you are moving <code>stop_receiver</code> with <code>async move</code>, you need to borrow( this is the difference with the first one )"}, {"owner": {"reputation": 77, "user_id": 4409029, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/180a3a92dbaf9cd07205d0bb2abb3177?s=128&d=identicon&r=PG&f=1", "display_name": "Daniel Schaadt", "link": "https://stackoverflow.com/users/4409029/daniel-schaadt"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1572267767, "post_id": 58589033, "comment_id": 103495850, "body": "I&#39;ve added two complete code examples. I still do not understand since in both versions I use async move. Especially if I remove the timeout in version a, it does not work anymore, but why?"}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1572293982, "post_id": 58589033, "comment_id": 103508287, "body": "Can you please also tell how do you remove timeout? No need to modify question you can just add on playground."}, {"owner": {"reputation": 77, "user_id": 4409029, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/180a3a92dbaf9cd07205d0bb2abb3177?s=128&d=identicon&r=PG&f=1", "display_name": "Daniel Schaadt", "link": "https://stackoverflow.com/users/4409029/daniel-schaadt"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1572383741, "post_id": 58589033, "comment_id": 103540819, "body": "Here&#39;s the function without the timeout: <code>rust async fn listen(stop_receiver: &amp;mut oneshot::Receiver&lt;bool&gt;) {     loop {         match stop_receiver.await {                 Ok(stop) =&gt;                     if stop {                         println!(&quot;stop signal true received&quot;);                         break;                     },                 Err =&gt; (), &#47;&#47; don&#39;t stop             },         }     } } </code>"}], "owner": {"reputation": 77, "user_id": 4409029, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/180a3a92dbaf9cd07205d0bb2abb3177?s=128&d=identicon&r=PG&f=1", "display_name": "Daniel Schaadt", "link": "https://stackoverflow.com/users/4409029/daniel-schaadt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 352, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1572267556, "creation_date": 1572257523, "last_edit_date": 1572267556, "question_id": 58589033, "link": "https://stackoverflow.com/questions/58589033/why-does-a-value-live-long-enough-in-loop-in-a-function-but-not-in-direct-code-i", "title": "Why does a value live long enough in loop in a function but not in direct code in tokio::spawn?", "body": "<p>I have some trouble understanding with moved values in loop using tokio:spawn in tokio 0.2. I try to pass a oneshot receiver to a listen function which checks it periodically with a timeout in a loop. </p>\n\n<p>Strangely, this works when I use a separate function <code>listen</code> in <code>tokio::spawn</code>. However, when I copy the code from that function inside the <code>tokio::spawn</code> closure, it does not compile complaining that the value is moved in the previous loop (which I kind of understand). So, why does it work in the function version?</p>\n\n<p>Here is an example for the working version:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::time::Duration;\nuse tokio::{sync::oneshot, future::FutureExt, timer::delay_for};\n\npub async fn a() {\n    let (stop_sender, mut stop_receiver) = oneshot::channel::&lt;bool&gt;();\n    tokio::spawn(async move {\n        listen(&amp;mut stop_receiver).await;\n    });\n    delay_for(Duration::new(1,0)).await;\n    stop_sender.send(true).unwrap();\n}    \n\nasync fn listen(stop_receiver: &amp;mut oneshot::Receiver&lt;bool&gt;) {\n    loop {\n        match stop_receiver.timeout(Duration::from_secs(1)).await {\n            Ok(no_timeout) =&gt; match no_timeout {\n                Ok(stop) =&gt;\n                    if stop {\n                        println!(\"stop signal true received\");\n                        break;\n                    },\n                Err(_) =&gt; (), // don't stop\n            },\n            Err(_) =&gt; (), // timeout\n        }\n    }\n}\n\n#[tokio::main]\nasync fn main() {\n    a().await;\n    delay_for(Duration::new(2,0)).await;\n}\n</code></pre>\n\n<p>The following does not work:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::time::Duration;\nuse tokio::{sync::oneshot, future::FutureExt, timer::delay_for};\n\npub async fn b() {\n    let (stop_sender, mut stop_receiver) = oneshot::channel::&lt;bool&gt;();\n    tokio::spawn(async move {\n        loop {\n            match stop_receiver.timeout(Duration::from_secs(1)).await {\n                Ok(no_timeout) =&gt; match no_timeout {\n                    Ok(stop) =&gt;\n                        if stop {\n                            println!(\"stop signal true received\");\n                            break;\n                        },\n                    Err(_) =&gt; (), // don't stop\n                },\n                Err(_) =&gt; (), // timeout\n            }\n        }\n    });\n    delay_for(Duration::new(1,0)).await;\n    stop_sender.send(true).unwrap();\n}    \n\n#[tokio::main]\nasync fn main() {\n    b().await;\n    delay_for(Duration::new(2,0)).await;\n}\n</code></pre>\n\n<p>When I remove the timeout, it also does not work in the function version (error: moved value in previous iteration of loop). Why is this, i.e. why does it actually work at all in the function version with timeout?\nUnfortunately, I cannot figure out an explanation with previous answers on moved values in a loop. Maybe, somebody can explain this. Thanks!</p>\n"}, {"tags": ["rust", "crud", "rust-diesel"], "answers": [{"tags": [], "owner": {"reputation": 83, "user_id": 11386119, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/TBXJb.jpg?s=128&g=1", "display_name": "codearm", "link": "https://stackoverflow.com/users/11386119/codearm"}, "is_accepted": true, "score": 3, "last_activity_date": 1572265340, "creation_date": 1572265340, "answer_id": 58590875, "question_id": 58589018, "link": "https://stackoverflow.com/questions/58589018/writing-diesel-crud-operations-for-generic-types/58590875#58590875", "title": "Writing Diesel CRUD operations for generic types", "body": "<p>I've finally solved by defining the following trait bounds!</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn create&lt;C, T&gt;(model: C, pool: DBPool)\nwhere\n    T: diesel::associations::HasTable,\n    &lt;T::Table as diesel::QuerySource&gt;::FromClause:\n        diesel::query_builder::QueryFragment&lt;diesel::pg::Pg&gt;,\n    C: diesel::Insertable&lt;T::Table&gt;,\n    C::Values: diesel::insertable::CanInsertInSingleQuery&lt;diesel::pg::Pg&gt;\n        + diesel::query_builder::QueryFragment&lt;diesel::pg::Pg&gt;,\n{\n    let conn = pool.get().unwrap();\n\n    diesel::insert_into(T::table())\n        .values(model)\n        .execute(&amp;conn);\n}\n\ncreate::&lt;UserCreate, users::table&gt;(user, pool);\n</code></pre>\n\n<p>Basically, you need a pair of extra bounds for the <code>Table</code> and the <code>Insertable</code>. It would be nice if it was possible to get the table directly from the <code>Insertable</code>, to avoid using another type in the function definition, but I can work with that :)</p>\n"}, {"tags": [], "owner": {"reputation": 51, "user_id": 10509723, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/X70VY.jpg?s=128&g=1", "display_name": "Roman Akash", "link": "https://stackoverflow.com/users/10509723/roman-akash"}, "is_accepted": false, "score": 0, "last_activity_date": 1599348082, "creation_date": 1599348082, "answer_id": 63759354, "question_id": 58589018, "link": "https://stackoverflow.com/questions/58589018/writing-diesel-crud-operations-for-generic-types/63759354#63759354", "title": "Writing Diesel CRUD operations for generic types", "body": "<p>The accepted answer is correct but can be made less verbose by using higher bounds</p>\n<pre><code>use diesel::query_builder::{InsertStatement};\nuse diesel::query_dsl::methods::{ExecuteDsl};\n\npub fn insert_into_table&lt;T, M&gt;(conn: &amp;Pgconnection, table: T, records: M)\nwhere\n    T: Table,\n    M: diesel::Insertable&lt;T&gt;,\n    InsertStatement&lt;T, M::Values&gt;: ExecuteDsl&lt;PgConnection&gt;,\n{\n    diesel::insert_into(table)\n        .values(records)\n        .execute(conn);\n}\n</code></pre>\n"}], "owner": {"reputation": 83, "user_id": 11386119, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/TBXJb.jpg?s=128&g=1", "display_name": "codearm", "link": "https://stackoverflow.com/users/11386119/codearm"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 438, "favorite_count": 2, "accepted_answer_id": 58590875, "answer_count": 2, "score": 3, "last_activity_date": 1599348082, "creation_date": 1572257468, "last_edit_date": 1572257793, "question_id": 58589018, "link": "https://stackoverflow.com/questions/58589018/writing-diesel-crud-operations-for-generic-types", "title": "Writing Diesel CRUD operations for generic types", "body": "<p>I am trying to write a Rust crate which removes some boilerplate code from the user when creating simple CRUD operations with <a href=\"http://diesel.rs/\" rel=\"nofollow noreferrer\">Diesel</a></p>\n\n<p>For instance, if you have a Diesel <code>Insertable</code> like this one:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Insertable)]\n#[table_name = \"users\"]\npub struct UserCreate&lt;'a&gt; {\n    pub email: String,\n    pub hash: &amp;'a [u8],\n    pub first_name: Option&lt;String&gt;,\n    pub family_name: Option&lt;String&gt;,\n}\n</code></pre>\n\n<p>I want the crate user to just write <code>create&lt;UserCreate&gt;(model, pool)</code>, to insert the struct fields into a database row.</p>\n\n<p>To do so, I've written the following function signature (simplified for example):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn create&lt;'a, C: 'a&gt;(model: C, pool: DBPool)\nwhere\n    C: diesel::Identifiable,\n    &amp;'a C: diesel::Insertable&lt;C::Table&gt;,\n{\n    let conn = pool.get().unwrap();\n    diesel::insert_into(C::table())\n        .values(&amp;model)\n        .execute(&amp;conn);\n}\n</code></pre>\n\n<p>The issue is that the compiler complains about some missing trait bounds for <code>C</code> and <code>&amp;C</code> at <code>.execute(&amp;conn)</code> and I am not quite sure how to place them in the <code>where</code> clause, there may be also a simpler way of doing this which I am not aware of. Any hint is very welcome!</p>\n\n<p>Compiler output:</p>\n\n<pre><code>error[E0277]: the trait bound `&lt;&lt;C as diesel::associations::HasTable&gt;::Table as diesel::QuerySource&gt;::FromClause: diesel::query_builder::QueryFragment&lt;_&gt;` is not satisfied\n  --&gt; database/src/users/models.rs:46:10\n   |\n46 |         .execute(&amp;conn);\n   |          ^^^^^^^ the trait `diesel::query_builder::QueryFragment&lt;_&gt;` is not implemented for `&lt;&lt;C as diesel::associations::HasTable&gt;::Table as diesel::QuerySource&gt;::FromClause`\n   |\n   = help: the following implementations were found:\n             &lt;&amp;'a T as diesel::query_builder::QueryFragment&lt;DB&gt;&gt;\n   = note: required because of the requirements on the impl of `diesel::query_builder::QueryFragment&lt;_&gt;` for `diesel::query_builder::InsertStatement&lt;&lt;C as diesel::associations::HasTable&gt;::Table, &lt;&amp;C as diesel::Insertable&lt;&lt;C as diesel::associations::HasTable&gt;::Table&gt;&gt;::Values&gt;`\n   = note: required because of the requirements on the impl of `diesel::query_dsl::load_dsl::ExecuteDsl&lt;_, _&gt;` for `diesel::query_builder::InsertStatement&lt;&lt;C as diesel::associations::HasTable&gt;::Table, &lt;&amp;C as diesel::Insertable&lt;&lt;C as diesel::associations::HasTable&gt;::Table&gt;&gt;::Values&gt;`\n\nerror[E0277]: the trait bound `&lt;&amp;C as diesel::Insertable&lt;&lt;C as diesel::associations::HasTable&gt;::Table&gt;&gt;::Values: diesel::query_builder::QueryFragment&lt;_&gt;` is not satisfied\n  --&gt; database/src/users/models.rs:46:10\n   |\n46 |         .execute(&amp;conn);\n   |          ^^^^^^^ the trait `diesel::query_builder::QueryFragment&lt;_&gt;` is not implemented for `&lt;&amp;C as diesel::Insertable&lt;&lt;C as diesel::associations::HasTable&gt;::Table&gt;&gt;::Values`\n   |\n   = help: the following implementations were found:\n             &lt;&amp;'a T as diesel::query_builder::QueryFragment&lt;DB&gt;&gt;\n   = note: required because of the requirements on the impl of `diesel::query_builder::QueryFragment&lt;_&gt;` for `diesel::query_builder::InsertStatement&lt;&lt;C as diesel::associations::HasTable&gt;::Table, &lt;&amp;C as diesel::Insertable&lt;&lt;C as diesel::associations::HasTable&gt;::Table&gt;&gt;::Values&gt;`\n   = note: required because of the requirements on the impl of `diesel::query_dsl::load_dsl::ExecuteDsl&lt;_, _&gt;` for `diesel::query_builder::InsertStatement&lt;&lt;C as diesel::associations::HasTable&gt;::Table, &lt;&amp;C as diesel::Insertable&lt;&lt;C as diesel::associations::HasTable&gt;::Table&gt;&gt;::Values&gt;`\n\nerror[E0277]: the trait bound `&lt;&amp;C as diesel::Insertable&lt;&lt;C as diesel::associations::HasTable&gt;::Table&gt;&gt;::Values: diesel::insertable::CanInsertInSingleQuery&lt;_&gt;` is not satisfied\n  --&gt; database/src/users/models.rs:46:10\n   |\n46 |         .execute(&amp;conn);\n   |          ^^^^^^^ the trait `diesel::insertable::CanInsertInSingleQuery&lt;_&gt;` is not implemented for `&lt;&amp;C as diesel::Insertable&lt;&lt;C as diesel::associations::HasTable&gt;::Table&gt;&gt;::Values`\n   |\n   = help: the following implementations were found:\n             &lt;&amp;'a T as diesel::insertable::CanInsertInSingleQuery&lt;DB&gt;&gt;\n   = note: required because of the requirements on the impl of `diesel::query_builder::QueryFragment&lt;_&gt;` for `diesel::query_builder::InsertStatement&lt;&lt;C as diesel::associations::HasTable&gt;::Table, &lt;&amp;C as diesel::Insertable&lt;&lt;C as diesel::associations::HasTable&gt;::Table&gt;&gt;::Values&gt;`\n   = note: required because of the requirements on the impl of `diesel::query_dsl::load_dsl::ExecuteDsl&lt;_, _&gt;` for `diesel::query_builder::InsertStatement&lt;&lt;C as diesel::associations::HasTable&gt;::Table, &lt;&amp;C as diesel::Insertable&lt;&lt;C as diesel::associations::HasTable&gt;::Table&gt;&gt;::Values&gt;`\n\nerror: aborting due to 3 previous errors\n</code></pre>\n\n<p>Thank you very much!</p>\n"}, {"tags": ["linux", "bash", "rust"], "answers": [{"comments": [{"owner": {"reputation": 103, "user_id": 11503367, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/db0251dd7aed309d94157778eaa12292?s=128&d=identicon&r=PG&f=1", "display_name": "Rozar Natrim", "link": "https://stackoverflow.com/users/11503367/rozar-natrim"}, "edited": false, "score": 1, "creation_date": 1572411989, "post_id": 58586686, "comment_id": 103546905, "body": "Thank you this was the exact answer and beyond the caliber I hoped to receive. You are a good person"}], "tags": [], "owner": {"reputation": 8841, "user_id": 8208215, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/QXD4t.png?s=128&g=1", "display_name": "wasmup", "link": "https://stackoverflow.com/users/8208215/wasmup"}, "is_accepted": false, "score": 1, "last_activity_date": 1572245556, "last_edit_date": 1572245556, "creation_date": 1572245253, "answer_id": 58586686, "question_id": 58585566, "link": "https://stackoverflow.com/questions/58585566/how-to-get-the-exit-code-of-a-bash-script-running-from-inside-a-rust-program/58586686#58586686", "title": "How to get the exit code of a Bash script running from inside a Rust program?", "body": "<p>If you need <a href=\"https://doc.rust-lang.org/std/process/struct.ExitStatus.html\" rel=\"nofollow noreferrer\">the exit code</a> <code>4</code> use <code>status.code()</code> :  </p>\n\n<pre><code>use std::process::Command;\n\nfn main() {\n    let status = Command::new(\"./script.sh\")\n        .status()\n        .expect(\"failed to execute process\");\n    println!(\"{}\", status.code().unwrap()); // 4\n}\n</code></pre>\n\n<p>My <code>script.sh</code> file:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>#!/bin/bash\n\n# Will exit with status of last command.\n# exit $?\n# echo $?\n\n# Will return 4 to shell.\nexit 4\n</code></pre>\n\n<hr>\n\n<p>And see this too:</p>\n\n<pre><code>use std::process::Command;\n\nlet status = Command::new(\"mkdir\")\n                     .arg(\"projects\")\n                     .status()\n                     .expect(\"failed to execute mkdir\");\n\nmatch status.code() {\n    Some(code) =&gt; println!(\"Exited with status code: {}\", code),\n    None       =&gt; println!(\"Process terminated by signal\")\n}\n</code></pre>\n"}], "owner": {"reputation": 103, "user_id": 11503367, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/db0251dd7aed309d94157778eaa12292?s=128&d=identicon&r=PG&f=1", "display_name": "Rozar Natrim", "link": "https://stackoverflow.com/users/11503367/rozar-natrim"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 138, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1572459240, "creation_date": 1572234422, "last_edit_date": 1572459240, "question_id": 58585566, "link": "https://stackoverflow.com/questions/58585566/how-to-get-the-exit-code-of-a-bash-script-running-from-inside-a-rust-program", "title": "How to get the exit code of a Bash script running from inside a Rust program?", "body": "<p>I've been trying to wrap my head around a few simple implementations of systems programming involving the ability to call Bash from C and Rust. I was curious if there was a way to modify the following statement, in Rust specifically, to allow me to get a return value of <code>4</code> from a Bash script that runs in the following manner:</p>\n\n<p><code>let status = Command::new(\"pathtoscript\").status().expect(\"failed to execute process\");</code></p>\n\n<p>Rust String stuff confuses me initially, but any combination of actions that leads to status granting me access to the value of <code>4</code> being returned to the parent process would be <strong>great</strong>. Thank you so much in advance for helping me. I have checked the Rust documentation but I haven't found anything for getting things BACK to the parent process, only to the child process.</p>\n\n<p>I should say it goes without saying for my application writing to a file and reading from that file is not sufficient or secure enough. </p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 2, "last_activity_date": 1572233689, "creation_date": 1572233689, "answer_id": 58585505, "question_id": 58585153, "link": "https://stackoverflow.com/questions/58585153/type-mismatch-for-stdop-trait-not/58585505#58585505", "title": "Type mismatch for std::op trait &quot;Not&quot;", "body": "<p>In Rust, <code>!</code> serves as both logical NOT and bitwise NOT, depending on the argument type. It performs a logical NOT when the argument is a <code>bool</code> and a bitwise NOT when the argument is an integer type. The only built-in type that implements <code>Not&lt;Output = bool&gt;</code> is <code>bool</code>.</p>\n\n<p>You should stick to <code>if mat.data[j][i] != T::zero() {</code>. <code>!=</code> is provided by the <code>PartialEq</code> trait. Instead of the <code>T: Not&lt;Output = bool&gt;</code> bound, you'll want <code>T: PartialEq&lt;T&gt;</code> or simply <code>T: Eq</code>.</p>\n"}], "owner": {"reputation": 705, "user_id": 6789568, "user_type": "registered", "accept_rate": 41, "profile_image": "https://lh6.googleusercontent.com/-j1lrq2J0T3k/AAAAAAAAAAI/AAAAAAAAANs/f67R64q2G-0/photo.jpg?sz=128", "display_name": "Jarred Parr", "link": "https://stackoverflow.com/users/6789568/jarred-parr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 52, "favorite_count": 0, "accepted_answer_id": 58585505, "answer_count": 1, "score": 0, "last_activity_date": 1572233689, "creation_date": 1572230036, "last_edit_date": 1572230588, "question_id": 58585153, "link": "https://stackoverflow.com/questions/58585153/type-mismatch-for-stdop-trait-not", "title": "Type mismatch for std::op trait &quot;Not&quot;", "body": "<p>I am implementing a general matrix solver. In doing so I make use of the \"Not\" operator to get around another issue which I'll explain below. However, when invoking the function in my tests, I get the following error:</p>\n\n<pre><code>error[E0271]: type mismatch resolving `&lt;i32 as std::ops::Not&gt;::Output == bool`                                                                                                                                                                                                                                                                                                                                                                                                           \n   --&gt; src/matrix.rs:223:15                                                                                                                                                                                                                                                                                                                                                                                                                                                              \n    |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    \n90  | pub fn reduce&lt;T&gt;(mat: &amp;mut Matrix&lt;T&gt;) -&gt; Result&lt;Matrix&lt;T&gt;, &amp;'static str&gt;                                                                                                                                                                                                                                                                                                                                                                                                     \n    |        ------                                                                                                                                                                                                                                                                                                                                                                                                                                                                      \n...                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      \n97  |         + Not&lt;Output = bool&gt;                                                                                                                                                                                                                                                                                                                                                                                                                                                       \n    |               ------------- required by this bound in `matrix::reduce`                                                                                                                                                                                                                                                                                                                                                                                                             \n...                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      \n223 |     let res = reduce(&amp;mut mat).unwrap();                                                                                                                                                                                                                                                                                                                                                                                                                                           \n    |               ^^^^^^ expected i32, found bool                                                                                                                                                                                                                                                                                                                                                                                                                                      \n\nerror: aborting due to previous error  \n</code></pre>\n\n<p>This is particularly confusing because I am not sure how else I would implement the <code>Not</code> trait and have it function properly. When bool is the output type, it compiles just fine but seems to bark during execution.</p>\n\n<p>Here's my code:</p>\n\n<pre><code>/// Performs a reduction operation on a given matrix, giving the reduced row echelon form                                                                                                                                                                                                                                                                                                                                                                                                \npub fn reduce&lt;T&gt;(mat: &amp;mut Matrix&lt;T&gt;) -&gt; Result&lt;Matrix&lt;T&gt;, &amp;'static str&gt;                                                                                                                                                                                                                                                                                                                                                                                                                 \nwhere                                                                                                                                                                                                                         \n    T: num_traits::Zero                                                                                                                                                                                                       \n        + num_traits::One                                                                                                                                                                                                     \n        + Mul&lt;T, Output = T&gt;                                                                                                                                                                                                  \n        + Add&lt;T, Output = T&gt;                                                                                                                                                                                                  \n        + Sub&lt;T, Output = T&gt;                                                                                                                                                                                                  \n        + Not&lt;Output = bool&gt;                                                                                                                                                                                                  \n        + Neg&lt;Output = T&gt;                                                                                                                                                                                                     \n        + Div&lt;T, Output = T&gt;                                                                                                                                                                                                  \n        + Copy,                                                                                                                                                                                                               \n{                                                                                                                                                                                                                             \n    let exchange = |matrix: &amp;mut Matrix&lt;T&gt;, i: usize, j: usize| {                                                                                                                                                             \n        matrix.data.swap(i, j);                                                                                                                                                                                               \n    };                                                                                                                                                                                                                        \n\n    let scale = |matrix: &amp;mut Matrix&lt;T&gt;, row: usize, factor: T| {                                                                                                                                                             \n        for i in 0..matrix.data[row].len() {                                                                                                                                                                                  \n            matrix.data[row][i] = matrix.data[row][i] * factor;                                                                                                                                                               \n        }                                                                                                                                                                                                                     \n    };                                                                                                                                                                                                                        \n\n    let row_replace = |matrix: &amp;mut Matrix&lt;T&gt;, i: usize, j: usize, factor: T| {                                                                                                                                               \n        for k in 0..matrix.data[j].len() {                                                                                                                                                                                    \n            matrix.data[j][k] = matrix.data[j][k] + (matrix.data[i][k] * factor);                                                                                                                                             \n        }                                                                                                                                                                                                                     \n    };                                                                                                                                                                                                                        \n\n    // Reduction steps                                                                                                                                                                                                        \n    let n = mat.data.len();                                                                                                                                                                                                   \n\n    for i in 0..n {                                                                                                                                                                                                           \n        // Find a pivot point                                                                                                                                                                                                 \n        for j in i..n {                                                                                                                                                                                                       \n            if !mat.data[j][i] { // &lt;------- Error Here *********                                                                                                                                                                                             \n                if i != j {                                                                                                                                                                                                   \n                    exchange(mat, i, j);                                                                                                                                                                                      \n                    break;                                                                                                                                                                                                    \n                }                                                                                                                                                                                                             \n            }                                                                                                                                                                                                                 \n\n            if j == n - 1 {                                                                                                                                                                                                   \n                return Err(\"No pivot found\")                                                                                                                                                                                  \n            }                                                                                                                                                                                                                 \n        }                                                                                                                                                                                                                     \n\n        // Put zeros below diagonal                                                                                                                                                                                           \n        for j in i + 1..n {                                                                                                                                                                                                   \n            row_replace(mat, i, j, -mat.data[j][i] / mat.data[i][i]);                                                                                                                                                         \n        }                                                                                                                                                                                                                     \n    }                                                                                                                                                                                                                         \n\n    // Back substitution (bottom up)                                                                                                                                                                                          \n    for i in (0..n - 1).rev() {                                                                                                                                                                                               \n        for j in 0..i {                                                                                                                                                                                                       \n            row_replace(mat, i, j, -mat.data[j][i] / mat.data[i][i]);                                                                                                                                                         \n        }                                                                                                                                                                                                                     \n    }                                                                                                                                                                                                                         \n\n    // Add 1's to the diagonal                                                                                                                                                                                                \n    for i in 0..n {                                                                                                                                                                                                           \n        scale(mat, i, T::one() / mat.data[i][i]);\n    }\n\n    Ok(mat.clone())\n}\n\n#[test]\nfn it_row_reduces() {\n    let mat = Matrix {\n        data: vec![vec![2, 1, 4], vec![1, 2, 5]],\n        nrows: 2,\n        ncols: 3,\n    };\n\n    let comp = Matrix {\n        data: vec![vec![1, 0, 1], vec![0, 1, 2]],\n        nrows: 2,\n        ncols: 3,\n    };\n\n    let res = reduce(&amp;mut mat).unwrap();\n    assert_eq!(res.data, comp.data);\n}\n</code></pre>\n\n<p>Originally, the code looked like the following:</p>\n\n<pre><code>if mat.data[j][i] != T::zero() {                                                                                                                                                                                             \n   if i != j {                                                                                                                                                                                                   \n       exchange(mat, i, j);                                                                                                                                                                                      \n       break;                                                                                                                                                                                                    \n   }                                                                                                                                                                                                             \n} \n</code></pre>\n\n<p>But it seems that even with the Not trait added to the function signature, this operation would never work, giving the following error:</p>\n\n<pre><code>binary operation `!=` cannot be applied to type `T`: T \n</code></pre>\n\n<p>I'm looking to figure out where I'm going wrong with this code and if my use of generics for this comparison is the most idiomatic way to do it in rust. Any additional feedback is appreciated. I can provide the struct as well, I just wanted to keep the question as brief as possible.</p>\n"}, {"tags": ["curl", "rust"], "comments": [{"owner": {"reputation": 221, "user_id": 7039144, "user_type": "registered", "profile_image": "https://graph.facebook.com/1824254821119702/picture?type=large", "display_name": "Asya Corbeau", "link": "https://stackoverflow.com/users/7039144/asya-corbeau"}, "edited": false, "score": 0, "creation_date": 1572221689, "post_id": 58584118, "comment_id": 103483076, "body": "Its working because of FnMut, i hightly reccomande you to read <a href=\"https://doc.rust-lang.org/std/ops/trait.FnMut.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/ops/trait.FnMut.html</a> and improve you&#39;re konledges about different closure types (Fn, FnOnce, FnMut) that can make your code a lot more clear."}], "answers": [{"tags": [], "owner": {"reputation": 98, "user_id": 8835688, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/128a375c457d13fa5c5b68d12b1eb821?s=128&d=identicon&r=PG&f=1", "display_name": "snake_case", "link": "https://stackoverflow.com/users/8835688/snake-case"}, "is_accepted": false, "score": 1, "last_activity_date": 1572221406, "creation_date": 1572221406, "answer_id": 58584462, "question_id": 58584118, "link": "https://stackoverflow.com/questions/58584118/why-doesnt-this-stack-variable-need-to-be-moved-into-the-closure/58584462#58584462", "title": "Why doesn&#39;t this stack variable need to be moved into the closure?", "body": "<p>In your first example, rust takes <code>&amp;mut data</code> through the stack, and continues to let <code>&lt;main&gt;</code> own <code>data</code>.</p>\n\n<p>In your second example, rust gives <code>handle.write_function(move |new_data| {</code> the ownership of <code>data</code> through the <code>move</code> keyword, then the insides write to <code>data</code>, and drops at the end of scope <code>}).unwrap();</code>, then at the bottom you tried to read <code>data</code> again through <code>println!</code>, which is asking rust to retrieve something that's you've already asked it to be dropped.</p>\n"}, {"tags": [], "owner": {"reputation": 22505, "user_id": 1411457, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/XqssD.png?s=128&g=1", "display_name": "harmic", "link": "https://stackoverflow.com/users/1411457/harmic"}, "is_accepted": true, "score": 2, "last_activity_date": 1572234783, "creation_date": 1572234783, "answer_id": 58585600, "question_id": 58584118, "link": "https://stackoverflow.com/questions/58584118/why-doesnt-this-stack-variable-need-to-be-moved-into-the-closure/58585600#58585600", "title": "Why doesn&#39;t this stack variable need to be moved into the closure?", "body": "<p>The curl documentation you are quoting comes from the <code>curl::easy::Easy::write_function</code> method. As described, this function takes a closure which has a <code>'static</code> lifetime bound - in other words, it must last for the duration of the program. </p>\n\n<p>This means that any values borrowed by such a closure can never be returned, because the closure never goes out of scope. </p>\n\n<p>This is tied in with the fact that the curl rust library wraps the curl C library, and the C library works be allowing the caller to register callback functions for various events. The rust compiler is unable to track the lifetime of closures after they have been passed as callback functions to the C library, so the only safe lifetime to use is <code>'static</code>.</p>\n\n<p>To work around this, the <code>curl</code> module provides a <a href=\"https://docs.rs/curl/0.4.6/curl/easy/struct.Transfer.html\" rel=\"nofollow noreferrer\"><code>Transfer</code></a> object, to which you can register closures that have less than <code>'static</code> lifetime. The <code>Transfer</code> object takes care of registering and de-registering the callbacks with the underlying C library, respecting their lifetimes.</p>\n\n<p>Having learnt this, consider your example code:</p>\n\n<pre><code>{\n    let mut transfer = handle.transfer();\n    transfer.write_function(|new_data| {\n        data.extend_from_slice(new_data);\n        Ok(new_data.len())\n    }).unwrap();\n    transfer.perform().unwrap();\n}\n</code></pre>\n\n<p>Here, the closure mutably borrows <code>data</code>. The closure is passed to <code>transfer.write_function</code>, which requires it to last as long as the transfer object itself. Therefore, <code>data</code> is borrowed until the end of the block in which <code>transfer</code> was declared.</p>\n"}], "owner": {"reputation": 42740, "user_id": 1031569, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/MTZr2.png?s=128&g=1", "display_name": "Reactgular", "link": "https://stackoverflow.com/users/1031569/reactgular"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 77, "favorite_count": 0, "accepted_answer_id": 58585600, "answer_count": 2, "score": 2, "last_activity_date": 1572234783, "creation_date": 1572217570, "question_id": 58584118, "link": "https://stackoverflow.com/questions/58584118/why-doesnt-this-stack-variable-need-to-be-moved-into-the-closure", "title": "Why doesn&#39;t this stack variable need to be moved into the closure?", "body": "<p>I would like to understand why the outer stack variable <code>data</code> in the below example does not require the <code>move</code> keyword to be used with the closure.</p>\n\n<p>The example is taken from the <a href=\"https://crates.io/crates/curl\" rel=\"nofollow noreferrer\">Curl crate</a>, and the <a href=\"https://docs.rs/curl/0.4.25/curl/\" rel=\"nofollow noreferrer\">documentation</a> states the the lifetime of the <code>write_function</code> is taken from the <code>transfer</code> variable, and because of this the closure can access the stack variable <code>data</code> without moving it.</p>\n\n<p>Here is an quote from the documentation:</p>\n\n<blockquote>\n  <p>Note that the lifetime bound on this function is 'static, but that is often too restrictive. To use stack data consider calling the transfer method and then using write_function to configure a callback that can reference stack-local data.</p>\n</blockquote>\n\n<p>See: <a href=\"https://docs.rs/curl/0.4.6/curl/easy/struct.Easy.html#method.write_function\" rel=\"nofollow noreferrer\">https://docs.rs/curl/0.4.6/curl/easy/struct.Easy.html#method.write_function</a></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use curl::easy::Easy;\n\nlet mut data = Vec::new();\nlet mut handle = Easy::new();\nhandle.url(\"https://www.rust-lang.org/\").unwrap();\n{\n    let mut transfer = handle.transfer();\n    transfer.write_function(|new_data| {\n        data.extend_from_slice(new_data);\n        Ok(new_data.len())\n    }).unwrap();\n    transfer.perform().unwrap();\n}\nprintln!(\"{:?}\", data);\n</code></pre>\n\n<p>Why does this work?</p>\n\n<p>Alternatively, if I try to use the <code>write_function</code> from the <code>handle</code> directly, then I get a borrowing error that <code>data</code> has been moved.</p>\n\n<p>Here is an example that does not work, and I understand why it doesn't work. I'm confused why the above works instead.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use curl::easy::Easy;\n\nlet mut data = Vec::new();\nlet mut handle = Easy::new();\nhandle.url(\"https://www.rust-lang.org/\").unwrap();\nhandle.write_function(move |new_data| {\n   data.extend_from_slice(new_data);\n   Ok(new_data.len())\n}).unwrap();\nhandle.perform().unwrap();\nprintln!(\"{:?}\", data);\n//               ^^^^ error because it was moved\n</code></pre>\n"}, {"tags": ["arrays", "rust", "constants"], "comments": [{"owner": {"reputation": 938, "user_id": 3894179, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8c6b1c2c08d1075995cb780ee8a2e36e?s=128&d=identicon&r=PG", "display_name": "Andra", "link": "https://stackoverflow.com/users/3894179/andra"}, "edited": false, "score": 1, "creation_date": 1572224596, "post_id": 58583379, "comment_id": 103483474, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/34684261/how-to-set-a-rust-array-length-dynamically\">How to set a Rust array length dynamically?</a>"}], "answers": [{"tags": [], "owner": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "is_accepted": false, "score": 0, "last_activity_date": 1572211281, "creation_date": 1572211281, "answer_id": 58583474, "question_id": 58583379, "link": "https://stackoverflow.com/questions/58583379/is-it-possible-to-define-a-constant-value-from-the-terminal/58583474#58583474", "title": "Is it possible to define a constant value from the terminal?", "body": "<p>Arrays must have a size known at compile time. If you want a dynamically sized array, try using a <a href=\"https://doc.rust-lang.org/stable/std/vec/struct.Vec.html\" rel=\"nofollow noreferrer\">Vec</a> instead, which can have an arbitrary size and can also be grown/shrunk as necessary.</p>\n"}], "owner": {"reputation": 1114, "user_id": 10111567, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Miguel", "link": "https://stackoverflow.com/users/10111567/miguel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 174, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1572211281, "creation_date": 1572210418, "question_id": 58583379, "link": "https://stackoverflow.com/questions/58583379/is-it-possible-to-define-a-constant-value-from-the-terminal", "title": "Is it possible to define a constant value from the terminal?", "body": "<p>In order to create an array in rust it needs to have a predefined size:</p>\n\n<pre><code>arr = [u32; 4];\n</code></pre>\n\n<p>If instead of 4 I use a variable, it gives an error, unless it is a constant defined for example as:</p>\n\n<pre><code>const SIZE: usize = 4;\n</code></pre>\n\n<p>The question: <strong>is there a way to define the size of the array according to input from the terminal (command line arguments) when running the program?</strong> \nMy assumption is that the const has to be defined in compile time, so not using a const. Maybe using a slice this is possible? </p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1572214901, "post_id": 58583346, "comment_id": 103481992, "body": "tl;dr the duplicate: cross-casting between traits is not supported because trying to do so raises a lot of questions about vtable layout and so on; however, you can add a method that does so on a trait by trait basis."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1572215366, "post_id": 58583346, "comment_id": 103482058, "body": "Speculatively, I think you might be trying to translate a class-based design into Rust. There are a lot of cases where in say Java you might use inheritance but in Rust, which has a more expressive type system and more flexible generics (but no inheritance), are better suited for another approach. <a href=\"https://users.rust-lang.org/t/how-to-model-inheritance-hierarchy/33380\" rel=\"nofollow noreferrer\">Here&#39;s a recent users.rust-lang.org thread that lists some ideas you might find interesting.</a>"}, {"owner": {"reputation": 88, "user_id": 6878447, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/402477633a9bdc129430365e15061bdb?s=128&d=identicon&r=PG&f=1", "display_name": "Knokko", "link": "https://stackoverflow.com/users/6878447/knokko"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1572285410, "post_id": 58583346, "comment_id": 103504922, "body": "@trentcl You mentioned that I could add a method that does so on a trait by trait basis. How would you go on about doing this? Unlike the other question, the child value is not just behind an &amp;-reference, but wrapped inside Rc and RefCell. I can&#39;t just take the child value out and put it in a new wrapper because it is not Sized and its might already be (mutably) borrowed."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1572400824, "post_id": 58583346, "comment_id": 103544755, "body": "I&#39;m really not sure. You may have to change <code>use_parent</code> as well as <code>use_child</code>. I&#39;ll try to take a deeper look into it. Some more information about how you&#39;re using <code>Super</code> and <code>Child</code> might help; maybe you&#39;re trying to express something that just doesn&#39;t map to traits very well, but it&#39;s hard to say."}, {"owner": {"reputation": 88, "user_id": 6878447, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/402477633a9bdc129430365e15061bdb?s=128&d=identicon&r=PG&f=1", "display_name": "Knokko", "link": "https://stackoverflow.com/users/6878447/knokko"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1572457007, "post_id": 58583346, "comment_id": 103568953, "body": "@trentcl I must have misunderstood your first comment, I thought you meant that it could easily be done on trait-by-trait basis but that I failed to find it. But if that is not the case, there is 1 work-around I came up with: I can give the use_child function 2 parameters: 1 for Rc&lt;RefCell&lt;dyn Child&gt;&gt; and the other one for the Super cell. When calling the function, I would just let the second parameter be a clone of the first one. This solution can easily be translated to my real situation and it allows me to split Child from Super later on if I would want to."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1572457242, "post_id": 58583346, "comment_id": 103569046, "body": "You&#39;re right, my earlier comment was misleading. I still think this can probably be done in some other way similar to the other question; however, I haven&#39;t really dug into it. Do you think this question should be reopened or do the answers to the linked duplicate sufficiently answer your original question?"}, {"owner": {"reputation": 88, "user_id": 6878447, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/402477633a9bdc129430365e15061bdb?s=128&d=identicon&r=PG&f=1", "display_name": "Knokko", "link": "https://stackoverflow.com/users/6878447/knokko"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1572461407, "post_id": 58583346, "comment_id": 103570946, "body": "@trentcl I&#39;m not sure whether or not this should be re-opened. This question is almost the same as the other question, except that the work-arounds are much harder due to the Rc&lt;RefCell&lt;T&gt;&gt; wrapping. Also, I am still thinking about your comment about the class-based design. Even though Rust is the first language I&#39;m implementing this pattern in and there aren&#39;t really classes, this is some kind of interface inheritance. On the other hand, this approach is currently only blocked by a vtable imlementation problem rather than the language design of Rust."}, {"owner": {"reputation": 88, "user_id": 6878447, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/402477633a9bdc129430365e15061bdb?s=128&d=identicon&r=PG&f=1", "display_name": "Knokko", "link": "https://stackoverflow.com/users/6878447/knokko"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1572898876, "post_id": 58583346, "comment_id": 103697048, "body": "@trentcl Yes, I would like this question to be reopened and edited the question to explain how it is different from the related question. However, I don&#39;t have the reputation to (request to) reopen questions. From what I have read, it should automatically be put in some review queue, but I don&#39;t have the reputation to see those either."}], "owner": {"reputation": 88, "user_id": 6878447, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/402477633a9bdc129430365e15061bdb?s=128&d=identicon&r=PG&f=1", "display_name": "Knokko", "link": "https://stackoverflow.com/users/6878447/knokko"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 85, "favorite_count": 0, "closed_date": 1572256592, "answer_count": 0, "score": 1, "last_activity_date": 1572707437, "creation_date": 1572210098, "last_edit_date": 1572707437, "question_id": 58583346, "link": "https://stackoverflow.com/questions/58583346/how-can-i-use-rcrefcelldyn-child-as-rcrefcelldyn-super", "closed_reason": "Duplicate", "title": "How can I use Rc&lt;RefCell&lt;dyn Child&gt;&gt; as Rc&lt;RefCell&lt;dyn Super&gt;&gt;?", "body": "<p>I have traits <code>Child</code> and <code>Super</code> where <code>Super</code> is a supertrait of <code>Child</code>. I have a function that will get an instance of <code>Rc&lt;RefCell&lt;dyn Child&gt;&gt;</code> as a parameter, but I need to pass it to a function that needs a <code>Rc&lt;RefCell&lt;dyn Super&gt;&gt;</code> as parameter. The following code should illustrate the situation: (I'm trying to implement the <code>use_child</code> function such that it will call the <code>use_parent</code> function):</p>\n\n<pre><code>use std::{rc::Rc, cell::RefCell};\n\nfn use_parent(parent: Rc&lt;RefCell&lt;dyn Super&gt;&gt;) {\n    // Use the parent functionality\n}\n\nfn use_child(child: Rc&lt;RefCell&lt;dyn Child&gt;&gt;) {\n    // I tried this, but it won't compile\n    use_parent(child as Rc&lt;RefCell&lt;dyn Super&gt;&gt;);\n}\n\ntrait Super {}\n\ntrait Child: Super {}\n</code></pre>\n\n<p>The compiler gives the following complaint:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0605]: non-primitive cast: `std::rc::Rc&lt;std::cell::RefCell&lt;(dyn Child + 'static)&gt;&gt;` as `std::rc::Rc&lt;std::cell::RefCell&lt;dyn Super&gt;&gt;`\n --&gt; src/lib.rs:9:16\n  |\n9 |     use_parent(child as Rc&lt;RefCell&lt;dyn Super&gt;&gt;);\n  |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: an `as` expression can only be used to convert between primitive types. Consider using the `From` trait\n</code></pre>\n\n<p>I read the suggestion of the compiler, but could only come up with <code>use_parent(Rc::from(child))</code>, which won't compile either.</p>\n\n<p>From the answers of the related question (<a href=\"https://stackoverflow.com/questions/28632968/why-doesnt-rust-support-trait-object-upcasting\">Why doesn&#39;t Rust support trait object upcasting?</a>), it appears that doing what I'm trying is not (directly?) possible due to vtable problems. Another answer of that question also showed the following work-around:</p>\n\n<pre><code>trait Base: AsBase {\n    // ...\n}\n\ntrait AsBase {\n    fn as_base(&amp;self) -&gt; &amp;Base;\n}\n\nimpl&lt;T: Base&gt; AsBase for T {\n    fn as_base(&amp;self) -&gt; &amp;Base {\n        self\n    }\n}\n</code></pre>\n\n<p>Unfortunately, I can't just use this work-around because everything is wrapped inside <code>Rc</code> and <code>RefCell</code>, which makes my question different from the other question.</p>\n\n<p>The best work-around I could come up with was passing both a <code>Rc&lt;RefCell&lt;dyn Child&gt;&gt;</code> and a <code>Rc&lt;RefCell&lt;dyn Super&gt;&gt;</code> to the use_child function where both <code>Rc</code>'s point to the exact same cell. This would solve the problem, but requires me to always keep an extra <code>Rc</code>. Besides, this feels quite dirty.</p>\n\n<p>So does anybody know a better solution?</p>\n"}, {"tags": ["performance", "rust"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 3, "creation_date": 1572450275, "post_id": 58583031, "comment_id": 103565395, "body": "I believe this should be <a href=\"https://github.com/rust-lang/rust/issues\" rel=\"nofollow noreferrer\">reported to the Rust lang team</a>."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1572523040, "post_id": 58583031, "comment_id": 103590977, "body": "Thanks for improving your question in response to feedback. You really turned it around! I hope you get an answer."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1572526932, "post_id": 58583031, "comment_id": 103593168, "body": "I did a little digging: 1.37.0 is fast like 1.36.0; nightly is slow. The generated MIR of 1.37 and 1.38 look the same to me if you disregard the comments and relative ordering of functions, which implies either: rustc changed the number / order / kind of LLVM passes, or the version of LLVM used by rustc changed between 1.37 and 1.38, in which case this is an LLVM regression as well as a rustc regression. I don&#39;t know how to tell which, unfortunately."}, {"owner": {"reputation": 22505, "user_id": 1411457, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/XqssD.png?s=128&g=1", "display_name": "harmic", "link": "https://stackoverflow.com/users/1411457/harmic"}, "edited": false, "score": 0, "creation_date": 1572644040, "post_id": 58583031, "comment_id": 103635301, "body": "<a href=\"https://github.com/rust-lang/rust/issues/65970\" rel=\"nofollow noreferrer\">Here</a> is the bug report that @Miguel filed"}], "answers": [{"comments": [{"owner": {"reputation": 1114, "user_id": 10111567, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Miguel", "link": "https://stackoverflow.com/users/10111567/miguel"}, "edited": false, "score": 1, "creation_date": 1572615711, "post_id": 58653585, "comment_id": 103623604, "body": "I&#39;ve already reported it to rust as @Peter Hall suggested as well."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 4, "creation_date": 1572812442, "post_id": 58653585, "comment_id": 103667811, "body": "For the curious: <a href=\"https://github.com/rust-lang/rust/issues/65970\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/65970</a>"}], "tags": [], "owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "is_accepted": false, "score": 2, "last_activity_date": 1572577229, "creation_date": 1572577229, "answer_id": 58653585, "question_id": 58583031, "link": "https://stackoverflow.com/questions/58583031/why-does-vecretain-run-slower-after-updating-to-rust-1-38-0/58653585#58653585", "title": "Why does Vec::retain run slower after updating to Rust 1.38.0?", "body": "<p>In general, <a href=\"https://rust.godbolt.org\" rel=\"nofollow noreferrer\">rust.godbolt.org</a> is useful for checking quality of the generated code (but don't forget to add optimization flags!)</p>\n\n<p>In your case code generated for <code>retain</code> has clearly changed for worse: <a href=\"https://rust.godbolt.org/z/ZhVCDg\" rel=\"nofollow noreferrer\">https://rust.godbolt.org/z/ZhVCDg</a></p>\n\n<p>So you should <a href=\"https://github.com/rust-lang/rust/issues\" rel=\"nofollow noreferrer\">report that to Rust</a> as a performance regression.</p>\n"}], "owner": {"reputation": 1114, "user_id": 10111567, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Miguel", "link": "https://stackoverflow.com/users/10111567/miguel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 305, "favorite_count": 2, "answer_count": 1, "score": 8, "last_activity_date": 1573009098, "creation_date": 1572207673, "last_edit_date": 1573009098, "question_id": 58583031, "link": "https://stackoverflow.com/questions/58583031/why-does-vecretain-run-slower-after-updating-to-rust-1-38-0", "title": "Why does Vec::retain run slower after updating to Rust 1.38.0?", "body": "<p>After updating Rust to version 1.38.0 from 1.36.0, I noticed that my program runs slower \u2014 by about 50%.</p>\n\n<p>Using <code>perf</code>, I discovered that half of the program time is spent in <code>alloc::vec::Vec&lt;T&gt;::retain</code> in the new version. In the older version, this function does not even show up. Why would <code>retain</code> take so much longer in 1.38.0?</p>\n\n<p>The call to <code>retain</code> is done like this:</p>\n\n<pre><code>some_vec.retain(|&amp;x| x &lt; DEADLINE);\n</code></pre>\n\n<p><code>deadline</code> is a constant <code>u32</code> and <code>some_vec</code> is a <code>Vec&lt;u32&gt;</code>.</p>\n\n<p>I ran the program without the <code>retain</code> calls in both versions. In this case, 1.38.0 was still slower on average, but only by ~10% instead of the > 50% seen before.</p>\n\n<p>To recap what happened in the tests:</p>\n\n<p><strong>Version 1.36.0</strong></p>\n\n<ul>\n<li>with <code>retain</code>: ~18sec</li>\n<li>without <code>retain</code>: ~11sec</li>\n</ul>\n\n<p><strong>Version 1.38.0</strong></p>\n\n<ul>\n<li>with <code>retain</code>: ~28sec</li>\n<li>without <code>retain</code>: ~12sec</li>\n</ul>\n\n<p>For a reproducible example, you can try:</p>\n\n<pre><code>use std::time::Instant;\n\nfn main() {\n    let start = Instant::now();\n    let mut my_vec: Vec&lt;u32&gt;;\n    for _ in 0..100_000 {\n        my_vec = (0..10_000).collect();\n        my_vec.retain(|&amp;x| x &lt; 9000);\n        my_vec.retain(|&amp;x| x &lt; 8000);\n        my_vec.retain(|&amp;x| x &lt; 7000);\n        my_vec.retain(|&amp;x| x &lt; 6000);\n        my_vec.retain(|&amp;x| x &lt; 5000);\n        my_vec.retain(|&amp;x| (x &lt; 5) &amp; (x &gt; 2));\n    }\n    let duration = start.elapsed();\n    println!(\"Program took: {:?}\", duration);\n}\n</code></pre>\n\n<p>With <code>cargo +1.36.0 run --release</code> and then <code>cargo +1.38.0 run --release</code>.</p>\n\n<p>For this small example, I got:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo +1.36.0 run --release\nProgram took: 4.624297719s\n\n$ cargo +1.38.0 run --release\nProgram took: 8.293383522s\n</code></pre>\n"}, {"tags": ["rust", "gtk-rs"], "comments": [{"owner": {"reputation": 938, "user_id": 3894179, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8c6b1c2c08d1075995cb780ee8a2e36e?s=128&d=identicon&r=PG", "display_name": "Andra", "link": "https://stackoverflow.com/users/3894179/andra"}, "edited": false, "score": 0, "creation_date": 1572227428, "post_id": 58582777, "comment_id": 103483874, "body": "This might help you <a href=\"https://stackoverflow.com/questions/30559073/cannot-borrow-captured-outer-variable-in-an-fn-closure-as-mutable\" title=\"cannot borrow captured outer variable in an fn closure as mutable\">stackoverflow.com/questions/30559073/&hellip;</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1572285448, "post_id": 58582777, "comment_id": 103504936, "body": "Your question may be answered by the answers of <a href=\"https://stackoverflow.com/q/45702112/155423\">How to set a variable inside a gtk-rs closure?</a>; <a href=\"https://stackoverflow.com/q/31966497/155423\">HOWTO: Idiomatic Rust for callbacks with gtk (rust-gnome)</a>; <a href=\"https://stackoverflow.com/q/40516510/155423\">Alternative way to handle GTK+ events in Rust</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/58582777/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 11, "user_id": 12107873, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6c7d219fec1f20aa9111f053768a6cd7?s=128&d=identicon&r=PG&f=1", "display_name": "jonryan", "link": "https://stackoverflow.com/users/12107873/jonryan"}, "edited": false, "score": 0, "creation_date": 1572339726, "post_id": 58582777, "comment_id": 103519421, "body": "In my research I didn&#39;t find the thread &quot;How to set a variable inside a gtk-rs closure?&quot;, but this also answers my question."}], "answers": [{"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": true, "score": 1, "last_activity_date": 1572285512, "last_edit_date": 1572285512, "creation_date": 1572284931, "answer_id": 58595970, "question_id": 58582777, "link": "https://stackoverflow.com/questions/58582777/how-do-i-get-information-from-an-entry-on-button-click/58595970#58595970", "title": "How do I get information from an entry on button click?", "body": "<p>Once your string has been moved inside the closures, the compiler can no longer check statically that your are not mixing read and write accesses to it. You need to use a <a href=\"https://doc.rust-lang.org/std/cell/struct.RefCell.html\" rel=\"nofollow noreferrer\"><code>RefCell</code></a> to enable runtime selection of read/write accesses, probably combined with <a href=\"https://doc.rust-lang.org/std/rc/struct.Rc.html\" rel=\"nofollow noreferrer\"><code>Rc</code></a> for proper memory management:</p>\n\n<pre><code>let firstname = Rc::new(RefCell::new(String::new()));\nlet firstname_clone = firstname.clone();\n// ...\nbuttonSubmit.connect_clicked(move |_| {\n    firstname.replace(entryFirstname.get_buffer().get_text());\n});\n// ...\nbuttonShow.connect_clicked(move |_| {\n    println!(\"Firstname: {}\", firstname_clone.borrow());\n});\n</code></pre>\n"}], "owner": {"reputation": 11, "user_id": 12107873, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6c7d219fec1f20aa9111f053768a6cd7?s=128&d=identicon&r=PG&f=1", "display_name": "jonryan", "link": "https://stackoverflow.com/users/12107873/jonryan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 214, "favorite_count": 1, "accepted_answer_id": 58595970, "answer_count": 1, "score": -1, "last_activity_date": 1572285512, "creation_date": 1572205635, "last_edit_date": 1572285361, "question_id": 58582777, "link": "https://stackoverflow.com/questions/58582777/how-do-i-get-information-from-an-entry-on-button-click", "title": "How do I get information from an entry on button click?", "body": "<p>I want to get an input from an entry on a button click and display that information when another button is clicked. This gives me an error because the closure takes ownership of my <code>firstname</code> variable, in which I want to store the information.</p>\n\n<p>How do I get the information out of the entry and reuse it?</p>\n\n<pre><code>// import gtk libs\nextern crate gio;\nextern crate gtk;\n\n// declare use of gtk\nuse gtk::prelude::*;\n\nfn main() {\n    let mut firstname = String::new();\n\n    if gtk::init().is_err() {\n        println!(\"Failed to initialize GTK.\");\n        return;\n    }\n    let glade_src = include_str!(\"builder.glade\");\n    let builder = gtk::Builder::new_from_string(glade_src);\n\n    let window: gtk::Window = builder.get_object(\"window1\").unwrap();\n    let buttonSubmit: gtk::Button = builder.get_object(\"buttonSubmit\").unwrap();\n    let buttonShow: gtk::Button = builder.get_object(\"buttonShow\").unwrap();\n    let entryFirstname: gtk::Entry = builder.get_object(\"entryFirstname\").unwrap();\n\n    // get information from entry\n    buttonSubmit.connect_clicked(move |_| {\n        firstname = entryFirstname.get_buffer().get_text();\n    });\n\n    // output information\n    let firstname_clone = firstname.clone();\n    buttonShow.connect_clicked(move |_| {\n        println!(\"Firstname: {}\", firstname_clone);\n    });\n\n    window.show_all();\n\n    gtk::main();\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1572206580, "post_id": 58582130, "comment_id": 103480186, "body": "Sure, <code>build.rs</code> is a Rust program, so it can certainly call <code>rustfmt</code> on any file. Have you tried just doing that? Did it work? If not, what went wrong? I currently don&#39;t fully understand what exactly your problem is."}, {"owner": {"reputation": 1019, "user_id": 684562, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4T5zR.jpg?s=128&g=1", "display_name": "Augusto", "link": "https://stackoverflow.com/users/684562/augusto"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1572245287, "post_id": 58582130, "comment_id": 103486877, "body": "Ohh... checking the code from Bindgen I see that it is exactly what it does. I thought there was some way to call it like a library or something. Thanks"}, {"owner": {"reputation": 321, "user_id": 7562670, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/lyaYy.jpg?s=128&g=1", "display_name": "Seiichi Uchida", "link": "https://stackoverflow.com/users/7562670/seiichi-uchida"}, "edited": false, "score": 1, "creation_date": 1572267523, "post_id": 58582130, "comment_id": 103495723, "body": "Using rustfmt as a library is possible, though I won&#39;t  recommend it if you just want to format a file. You need to use the latest nightly to build it, and it will add many dependencies (you are essentially building a parser for the rustc + more)."}], "answers": [{"tags": [], "owner": {"reputation": 1019, "user_id": 684562, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4T5zR.jpg?s=128&g=1", "display_name": "Augusto", "link": "https://stackoverflow.com/users/684562/augusto"}, "is_accepted": true, "score": 1, "last_activity_date": 1572252783, "creation_date": 1572252783, "answer_id": 58587962, "question_id": 58582130, "link": "https://stackoverflow.com/questions/58582130/how-to-call-rustfmt-in-manually-generated-code/58587962#58587962", "title": "How to call rustfmt in manually generated code?", "body": "<p>I found out that rust bindgen uses a regular command call. I thought it was doing through some kind of rustfmt library.\nReference: <a href=\"https://docs.rs/bindgen/0.51.1/src/bindgen/lib.rs.html#1945\" rel=\"nofollow noreferrer\">https://docs.rs/bindgen/0.51.1/src/bindgen/lib.rs.html#1945</a></p>\n"}], "owner": {"reputation": 1019, "user_id": 684562, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4T5zR.jpg?s=128&g=1", "display_name": "Augusto", "link": "https://stackoverflow.com/users/684562/augusto"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 223, "favorite_count": 0, "accepted_answer_id": 58587962, "answer_count": 1, "score": 1, "last_activity_date": 1572252783, "creation_date": 1572200657, "question_id": 58582130, "link": "https://stackoverflow.com/questions/58582130/how-to-call-rustfmt-in-manually-generated-code", "title": "How to call rustfmt in manually generated code?", "body": "<p>So I am generating bindings for a library and on top of that I'm generating most of the safe wrappers for that library.</p>\n\n<p>The way I'm doing is simply generating a String with all the contents and writing to the file with the <code>File</code> trait...</p>\n\n<p>I know the bindings crate supports formatting the generated code, but this particular one is not generated by it. Is there a way to make the <code>build.rs</code> call rustfmt on that generated file?</p>\n"}, {"tags": ["struct", "rust", "closures"], "comments": [{"owner": {"reputation": 84, "user_id": 12277291, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/a-/AAuE7mCt0nYtmG6ri6EXsV4UeB9VMvDJ8DuEdRwNYlPw=k-s128", "display_name": "Entcraft44", "link": "https://stackoverflow.com/users/12277291/entcraft44"}, "edited": false, "score": 2, "creation_date": 1572256988, "post_id": 58582117, "comment_id": 103491109, "body": "Why can&#39;t you add a property to builder? You&#39;d have to change the struct from a tuple Struct to a c style Struct of course."}], "answers": [{"comments": [{"owner": {"reputation": 690, "user_id": 7568091, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/10104d32279b46d29c56531c88c8644e?s=128&d=identicon&r=PG&f=1", "display_name": "John Frazer", "link": "https://stackoverflow.com/users/7568091/john-frazer"}, "edited": false, "score": 0, "creation_date": 1572353698, "post_id": 58589908, "comment_id": 103526474, "body": "Thanks a bunch, this is what I did after reading one more sample code from the same source."}], "tags": [], "owner": {"reputation": 22505, "user_id": 1411457, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/XqssD.png?s=128&g=1", "display_name": "harmic", "link": "https://stackoverflow.com/users/1411457/harmic"}, "is_accepted": true, "score": 2, "last_activity_date": 1572262118, "last_edit_date": 1572262118, "creation_date": 1572261114, "answer_id": 58589908, "question_id": 58582117, "link": "https://stackoverflow.com/questions/58582117/rust-how-to-write-an-impl-with-callbacks-that-refers-to-external-values/58589908#58589908", "title": "rust: how to write an `impl` with callbacks that refers to external values", "body": "<blockquote>\n  <p>Would it be possible to perhaps declare a new kind of structure that accepts an additional parameter</p>\n</blockquote>\n\n<p>Yes, it would! The sample code defines <code>Builder</code> as a <a href=\"https://doc.rust-lang.org/1.9.0/book/structs.html#tuple-structs\" rel=\"nofollow noreferrer\">Tuple Struct</a>, kind of like a struct with unnamed fields. While you can add another element to this, which you would refer to as <code>self.1</code>, it is probably best to switch to a normal struct:</p>\n\n<pre><code>struct Builder&lt;'a&gt; {\n    path: &amp;'a svgtypes::Path, \n    scale: f32\n};\n</code></pre>\n\n<p>Then you can access the scale as <code>self.scale</code>:</p>\n\n<pre><code>impl ttf::OutlineBuilder for Builder&lt;'_&gt; {\n    fn move_to( &amp;mut self, x: f32, y: f32 ) { self.path.push_move_to(\n    ( x  * self.scale ) as f64,\n    ( y  * self.scale ) as f64 ); }\n... }\n</code></pre>\n"}], "owner": {"reputation": 690, "user_id": 7568091, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/10104d32279b46d29c56531c88c8644e?s=128&d=identicon&r=PG&f=1", "display_name": "John Frazer", "link": "https://stackoverflow.com/users/7568091/john-frazer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 116, "favorite_count": 0, "accepted_answer_id": 58589908, "answer_count": 1, "score": -1, "last_activity_date": 1572262118, "creation_date": 1572200588, "question_id": 58582117, "link": "https://stackoverflow.com/questions/58582117/rust-how-to-write-an-impl-with-callbacks-that-refers-to-external-values", "title": "rust: how to write an `impl` with callbacks that refers to external values", "body": "<p>I've started dabbling in Rust days ago and have come across the following problem: I have discovered <a href=\"https://github.com/RazrFalcon/ttf-parser\" rel=\"nofollow noreferrer\">a library</a> that allows me to turn font outlines to SVG; on the user side, part of the code looks like the below; \nobserve that I have added a constant <code>SCALE</code> here that is not present in the original example code that came with said library:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>const SCALE: f32 = 0.5;\nstruct Builder&lt;'a&gt;(&amp;'a mut svgtypes::Path);\nimpl ttf::OutlineBuilder for Builder&lt;'_&gt; {\n  fn move_to( &amp;mut self, x: f32, y: f32 ) { self.0.push_move_to(\n    ( x  * SCALE ) as f64,\n    ( y  * SCALE ) as f64 ); }\n  ... }\n\n...\n\nlet mut builder = Builder(path_buf);\n</code></pre>\n\n<p>the <code>builder</code> object is then passed to a function that does the heavy lifting and calls back into the implementation's method. So far, so good: I'd like to scale the paths, and the above code does that. BUT as it stands, I need to define a <code>const</code> to do that because Rust doesn't allow methods to refer to outside values. However, I'd like to make the scaling factor dynamic based on properties of the font in question.</p>\n\n<p>Now, say, in JavaScript, I'd maybe use a factory function with a closure over <code>scale</code> to do that, or one could just add a property to the object identified as <code>self</code>\u2014there's any number of ways to solve this in scripting languages. None of the above seems to be straightforward in Rust. Would it be possible to perhaps declare a new kind of structure that accepts an additional parameter, as in </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Builder&lt;'a&gt;(&amp;'a mut svgtypes::Path, scale: f32 );\nimpl ttf::OutlineBuilder for Builder&lt;'_&gt; {\n  fn move_to( &amp;mut self, x: f32, y: f32 ) { self.0.push_move_to(\n    ( x  * self.scale ) as f64,\n    ( y  * self.scale ) as f64 ); }\n  ... }\n</code></pre>\n\n<p>? Needless to say the above code won't compile.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 2, "creation_date": 1572193135, "post_id": 58581124, "comment_id": 103476760, "body": "Try to really write the code you&#39;re hinting at. You&#39;ll see you can&#39;t compile it."}, {"owner": {"reputation": 1615, "user_id": 2779792, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/gHE8l.png?s=128&g=1", "display_name": "Matthew James Briggs", "link": "https://stackoverflow.com/users/2779792/matthew-james-briggs"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 1, "creation_date": 1572194205, "post_id": 58581124, "comment_id": 103477042, "body": "You mean the Rust version?  That\u2019s probably the answer, i.e. I haven\u2019t got far enough in the book yet."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1572270301, "post_id": 58581124, "comment_id": 103497117, "body": "Just to be clear, the Rust code you <i>actually posted</i> does not compile, either, so your presumption that Rust allows it is wrong. This is why in the book it&#39;s printed with a pink background and a confused crab: to show that it is code that <i>does not compile</i>, for the purpose of illustration."}, {"owner": {"reputation": 1615, "user_id": 2779792, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/gHE8l.png?s=128&g=1", "display_name": "Matthew James Briggs", "link": "https://stackoverflow.com/users/2779792/matthew-james-briggs"}, "edited": false, "score": 1, "creation_date": 1572274044, "post_id": 58581124, "comment_id": 103499105, "body": "The mutable borrow in the Rust code I posted was not necessary for illustrating the question, and you&#39;re right, it was a compilation error. I removed the mutable borrow from the example code which should improve the question. The concept I was unaware of, explained by @Optimistic Peach is that the compiler will prevent me from using an immutable reference if the original variable has been mutated. I don&#39;t think this was explained in The Rust Book Chapter 4."}, {"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 0, "creation_date": 1572377410, "post_id": 58581124, "comment_id": 103538305, "body": "<i>&quot;the compiler will prevent me from using an immutable reference if the original variable has been mutated&quot;</i>, not quite, you&#39;re reading that incorrectly. The NLL (non lexical lifetimes) allow an object&#39;s lifetime to be cut short until its last use which <i>is different</i> than not being permitted to use it should the value it points to be mutated. The compiler simply drops the shared reference when you mutate the value. What the compiler <i>does prevent</i> is the <i>mutation of a value when there are live (not implicitly dropped) shared references to it</i>."}], "answers": [{"tags": [], "owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "is_accepted": true, "score": 4, "last_activity_date": 1572295774, "last_edit_date": 1572295774, "creation_date": 1572196561, "answer_id": 58581631, "question_id": 58581124, "link": "https://stackoverflow.com/questions/58581124/why-does-rust-allow-an-immutable-reference-to-a-mutable-variable/58581631#58581631", "title": "Why Does Rust Allow an Immutable Reference to a Mutable Variable?", "body": "<p>An item's mutability is essentially part of the name of the variable in rust. Take for example this code:</p>\n\n<pre><code>let mut foo = String::new();\nlet foo = foo;\nlet mut foo = foo;\n</code></pre>\n\n<p><code>foo</code> suddenly becomes immutable, but it does not mean that the first two <code>foo</code>s don't exist.</p>\n\n<p>On the other hand, <em>a mutable reference</em> is attached to the lifetime of the object and is therefore type-bound, and will exist for its own lifetime, disallowing any kind of access to the original object if it is not through the reference.</p>\n\n<pre><code>let mut my_string = String::new();\nmy_string.push_str(\"This is ok! \");\nlet foo: &amp;mut String = &amp;mut my_string;\nfoo.push_str(\"This goes through the mutable reference, and is therefore ok! \");\nmy_string.push_str(\"This is not ok, and will not compile because `foo` still exists\");\nprintln!(\"We use foo here because of non lexical lifetimes: {:?}\", foo);\n</code></pre>\n\n<p>The second call to <code>my_string.push_str</code> will not compile because <code>foo</code> can (in this case it is guaranteed to) be used afterwards. </p>\n\n<p>Your specific question asks something similar to the following, but you don't even need multithreading to test this:</p>\n\n<pre><code>fn immutably_use_value(x: &amp;str) {\n    println!(\"{:?}\", x);\n}\n\nlet mut foo = String::new();\nlet bar = &amp;foo; //This now has immutable access to the mutable object.\nlet baz = &amp;foo; //Two points are allowed to observe a value at the same time. (Ignoring `Sync`)\nimmutably_use_value(bar); //Ok, we can observe it immutably\nfoo.push_str(\"Hello world!\"); //This would be ok... but we use the immutable references later!\nimmutably_use_value(baz);\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c62c6b6a110772c5b377b064caee3f1b\" rel=\"nofollow noreferrer\">This does not compile.</a> If you could annotate the lifetimes, they'd look something similar to this:</p>\n\n<pre><code>let mut foo = String::new();  //Has lifetime 'foo\nlet bar: &amp;'foo String = &amp;foo; //Has lifetime 'bar: 'foo\nlet baz: &amp;'foo String = &amp;foo; //Has lifetime 'baz: 'foo\n//On the other hand:\nlet mut foo = String::new();          //Has lifetime 'foo\nlet bar: &amp;'foo mut String = &amp;mut foo; //Has lifetime 'bar: mut 'foo\nlet baz: &amp;'foo mut String = &amp;mut foo; //Error, we cannot have overlapping mutable borrows for the same object!\n</code></pre>\n\n<hr>\n\n<p>A few extra notes:</p>\n\n<ul>\n<li><p>Due to NLL (Non Lexical Lifetimes), the following code will compile:</p>\n\n<pre><code>let mut foo = String::new();\nlet bar = &amp;foo;\nfoo.push_str(\"Abc\");\n</code></pre>\n\n<p>Because <code>bar</code> is not used after the mutable use of <code>foo</code>.</p></li>\n<li><p>You mention threading, which has its own constraints and traits involved:</p>\n\n<p>The <a href=\"https://doc.rust-lang.org/std/marker/trait.Send.html\" rel=\"nofollow noreferrer\"><code>Send</code></a> trait will allow you to give ownership of a variable across a thread.</p>\n\n<p>The <a href=\"https://doc.rust-lang.org/std/marker/trait.Sync.html\" rel=\"nofollow noreferrer\"><code>Sync</code></a> trait will allow you to share a reference to a variable across a thread. This includes mutable references, as long as the original thread does not use the object for the duration of the borrow.</p>\n\n<p>A few examples:</p>\n\n<ul>\n<li>Type <code>T</code> is <code>Send + Sync</code>, it can be sent across threads and be shared between them </li>\n<li>Type <code>T</code> is <code>!Send + Sync</code>, it can be shared across threads, but not sent between them. An example is a window handle that can only be destroyed on the original thread.</li>\n<li>Type <code>T</code> is <code>Send + !Sync</code>, it can be sent across threads, but not shared between them. An example is <a href=\"https://doc.rust-lang.org/std/cell/struct.RefCell.html\" rel=\"nofollow noreferrer\"><code>RefCell</code></a>, which will can only use its runtime borrow-checking on a single thread due to it not using atomics (Multithreading safe components).</li>\n<li>Type <code>T</code> is <code>!Send + !Sync</code>, it can only live on the thread it was created on. An example is <a href=\"https://doc.rust-lang.org/std/rc/struct.Rc.html\" rel=\"nofollow noreferrer\"><code>Rc</code></a>, which cannot send a copy of itself across threads because it cannot count references atomically (Look at <a href=\"https://doc.rust-lang.org/std/sync/struct.Arc.html\" rel=\"nofollow noreferrer\"><code>Arc</code></a> to do that) and since it carries no lifetimes to force a single copy of itself to exist when sending across a thread boundary, it therefore cannot be sent across threads. </li>\n</ul></li>\n<li>I use <code>&amp;str</code> instead of <code>&amp;String</code> in my third example, this is because <a href=\"https://doc.rust-lang.org/std/string/struct.String.html#impl-Deref\" rel=\"nofollow noreferrer\"><code>String: Deref&lt;str&gt;</code></a> (You may need to scroll down to see it), and therefore anywhere I need a <code>&amp;str</code> I can chuck a <code>&amp;String</code> in because the compiler will autoderef.</li>\n</ul>\n"}], "owner": {"reputation": 1615, "user_id": 2779792, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/gHE8l.png?s=128&g=1", "display_name": "Matthew James Briggs", "link": "https://stackoverflow.com/users/2779792/matthew-james-briggs"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 491, "favorite_count": 1, "accepted_answer_id": 58581631, "answer_count": 1, "score": 1, "last_activity_date": 1572295774, "creation_date": 1572192748, "last_edit_date": 1572273887, "question_id": 58581124, "link": "https://stackoverflow.com/questions/58581124/why-does-rust-allow-an-immutable-reference-to-a-mutable-variable", "title": "Why Does Rust Allow an Immutable Reference to a Mutable Variable?", "body": "<p>I'm working on the Rust Book (Chapter 4) and I am surprised that code like this <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=75257fc1fdde37f7d5189e75c033f878\" rel=\"nofollow noreferrer\">compiles</a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let mut s = String::from(\"hello\");\n\n    let r1 = &amp;s;\n    let r2 = &amp;s;\n    println!(\"{}, {}\", r1, r2);\n\n    // this line silences the warning: 'variable does not need to be mutable'\n    s.push_str(\" world\");\n}\n</code></pre>\n\n<p>Why does Rust allow an immutable reference to a mutable variable? This would seem to weaken the safety guarantees. If I have a mutable variable, and I pass immutable references to some threads, those threads are assuming the value will not change, but I could mutate the value through the original variable.</p>\n\n<p>I haven't reached threading yet, but found this strange, and in this case, no different from C++:</p>\n\n<pre><code>void doNotChangeMyString(const std::string&amp; myConstString) {\n  // ... assume that myConstString cannot change and use it on a thread\n  // return immediately even though some worker thread is still\n  // using myConstString\n}\n\nvoid main() {\n    std::string s = \"hello\" // not const!\n    doNotChangeMyString(s);\n    s = \"world\"; // oops\n}\n</code></pre>\n\n<p>Edit: I fixed the Rust code so that it compiles. Please reconsider the downvotes and close votes. The accepted answer explains a concept that I did not get from Rust Book's chapter on borrowing, was very helpful to me, and could help others who are at the same point in learning Rust.</p>\n"}, {"tags": ["php", "regex", "performance", "optimization", "rust"], "comments": [{"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1572219931, "post_id": 58580753, "comment_id": 103482807, "body": "Did you build/run the Rust program with <code>--release</code>?"}, {"owner": {"reputation": 17225, "user_id": 2823719, "user_type": "registered", "accept_rate": 11, "profile_image": "https://i.stack.imgur.com/TWgf9.jpg?s=128&g=1", "display_name": "Booboo", "link": "https://stackoverflow.com/users/2823719/booboo"}, "edited": false, "score": 0, "creation_date": 1572264544, "post_id": 58580753, "comment_id": 103494332, "body": "<code>preg_replace_callback</code> is supposed to return the replacement string. Why aren&#39;t you just returning <code>&quot;&lt;!--$c_id--&gt;&quot;</code> instead of calling <code>str_replace</code>, which presumably ends up with the same result but in a more costly fashion?"}, {"owner": {"reputation": 308, "user_id": 984561, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f3435b5b4cce672872c59e8b93ca4e8e?s=128&d=identicon&r=PG", "display_name": "edo888", "link": "https://stackoverflow.com/users/984561/edo888"}, "edited": false, "score": 0, "creation_date": 1572285122, "post_id": 58580753, "comment_id": 103504775, "body": "Yes, but it is an example specific case. If your regex is different, then that will not work."}, {"owner": {"reputation": 308, "user_id": 984561, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f3435b5b4cce672872c59e8b93ca4e8e?s=128&d=identicon&r=PG", "display_name": "edo888", "link": "https://stackoverflow.com/users/984561/edo888"}, "edited": false, "score": 0, "creation_date": 1572285168, "post_id": 58580753, "comment_id": 103504807, "body": "Yes, it is compiled with release mode."}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 1, "creation_date": 1572290185, "post_id": 58580753, "comment_id": 103506842, "body": "You haven&#39;t provided a reproducible benchmark, so it is effectively impossible to answer this question. Please provide all inputs, including your corpus."}], "answers": [{"tags": [], "owner": {"reputation": 308, "user_id": 984561, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f3435b5b4cce672872c59e8b93ca4e8e?s=128&d=identicon&r=PG", "display_name": "edo888", "link": "https://stackoverflow.com/users/984561/edo888"}, "is_accepted": true, "score": 0, "last_activity_date": 1572376202, "creation_date": 1572376202, "answer_id": 58613945, "question_id": 58580753, "link": "https://stackoverflow.com/questions/58580753/rust-regex-replace-all-slower-than-php-regex-preg-replace-callback-how-to-optim/58613945#58613945", "title": "Rust regex replace_all slower than PHP regex preg_replace_callback, how to optimize?", "body": "<p>The answer is to use pcre2 crate instead of regex crate in rust.</p>\n\n<p>More info can be found here: <a href=\"https://users.rust-lang.org/t/rust-regex-replace-all-slower-than-php-regex-preg-replace-callback-how-to-optimize/34036/20\" rel=\"nofollow noreferrer\">https://users.rust-lang.org/t/rust-regex-replace-all-slower-than-php-regex-preg-replace-callback-how-to-optimize/34036/20</a></p>\n"}], "owner": {"reputation": 308, "user_id": 984561, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f3435b5b4cce672872c59e8b93ca4e8e?s=128&d=identicon&r=PG", "display_name": "edo888", "link": "https://stackoverflow.com/users/984561/edo888"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 242, "favorite_count": 1, "accepted_answer_id": 58613945, "answer_count": 1, "score": 1, "last_activity_date": 1572376202, "creation_date": 1572189956, "question_id": 58580753, "link": "https://stackoverflow.com/questions/58580753/rust-regex-replace-all-slower-than-php-regex-preg-replace-callback-how-to-optim", "title": "Rust regex replace_all slower than PHP regex preg_replace_callback, how to optimize?", "body": "<p>PHP 5.5 times faster than Rust in the example below.</p>\n\n<p>Am I doing something fundamentally wrong?</p>\n\n<p>To me it seems that the regex engine in Rust is simply slower than it is in PHP.</p>\n\n<p>PHP code:</p>\n\n<pre><code>$html = file_get_contents('/path_to/test.html');\n\nglobal $c_id;\n$c_id = 0;\n\necho 'len with comments: ', strlen($html), \"\\n\";\n\n$time_start = microtime(true);\n\n$html = preg_replace_callback('/&lt;!--(.*?)--&gt;/s', function($matches) {\n    global $c_id;\n    $c_id++;\n    return str_replace($matches[1], $c_id, $matches[0]);\n}, $html);\n\necho (microtime(true) - $time_start), \" seconds for removing comments.\\n\";\n\necho 'len without comments: ', strlen($html), \"\\n\";\n</code></pre>\n\n<p>Rust code:</p>\n\n<pre><code>use regex::Regex;\nuse std::io::prelude::*;\nuse std::fs::File;\n\nfn main() {\n    let mut file = File::open(\"/path_to/test.html\").expect(\"Unable to open the file\");\n    let mut html = String::new();\n    file.read_to_string(&amp;mut html).expect(\"Unable to read the file\");\n    let mut c_id: usize = 0;\n\n    println!(\"len with comments: {}\", html.len());\n\n    let start = PreciseTime::now();\n\n    let re = Regex::new(r\"(?s)&lt;!--(.*?)--&gt;\").unwrap();\n    html = re.replace_all(&amp;html, |captures: &amp;regex::Captures| {\n        c_id += 1;\n        captures[0].replace(&amp;captures[1], &amp;c_id.to_string())\n    }).to_string();\n\n    println!(\"{} seconds for removing comments.\", start.to(PreciseTime::now()));\n\n    println!(\"len without comments: {}\", html.len());\n}\n</code></pre>\n\n<p>Rust dependencies:</p>\n\n<pre><code>regex = \"1\"\ntime = \"*\"\n</code></pre>\n\n<p><strong>Results</strong></p>\n\n<p>PHP:</p>\n\n<pre><code>len with comments: 76968\n0.00019717216491699 seconds for removing comments.\nlen without comments: 76622\n</code></pre>\n\n<p>Rust:</p>\n\n<pre><code>len with comments: 76968\nPT0.001093365S seconds for removing comments.\nlen without comments: 76622\n</code></pre>\n\n<p>Thanks!</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 13, "user_id": 12274924, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c9c06be840b89635aca5cfecb2dd2887?s=128&d=identicon&r=PG&f=1", "display_name": "saamir", "link": "https://stackoverflow.com/users/12274924/saamir"}, "edited": false, "score": 0, "creation_date": 1572256713, "post_id": 58581455, "comment_id": 103490988, "body": "I&#39;m now sending a <code>Vec&lt;u8&gt;</code> instead of the <code>&amp;[u8]</code> in the channel and now it works. Thanks !"}], "tags": [], "owner": {"reputation": 71, "user_id": 12228694, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-ITbG79AIaxU/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rfKqd18sTKqQ-oeNOUo8X4Z3HkgyA/photo.jpg?sz=128", "display_name": "Mubelotix", "link": "https://stackoverflow.com/users/12228694/mubelotix"}, "is_accepted": true, "score": 0, "last_activity_date": 1572195179, "creation_date": 1572195179, "answer_id": 58581455, "question_id": 58580583, "link": "https://stackoverflow.com/questions/58580583/rust-send-data-from-function-argument-from-a-thread-into-mpsc-channel/58581455#58581455", "title": "rust - Send data from function argument (from a thread) into mpsc channel", "body": "<p>Uuid does not affect msg because format macro creates a clean new String. You are trying to send a &amp;[u8] (this is what as_bytes() return). You need to find a way to remove this reference. (maybe this something like <a href=\"https://stackoverflow.com/questions/47980023/how-to-convert-from-u8-to-vecu8\">How to convert from &amp;[u8] to Vec&lt;u8&gt;?</a>) You can also share references with Rc.</p>\n\n<p>PS: this more a comment than an answer but I can't post answers</p>\n"}], "owner": {"reputation": 13, "user_id": 12274924, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c9c06be840b89635aca5cfecb2dd2887?s=128&d=identicon&r=PG&f=1", "display_name": "saamir", "link": "https://stackoverflow.com/users/12274924/saamir"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 348, "favorite_count": 0, "accepted_answer_id": 58581455, "answer_count": 1, "score": 1, "last_activity_date": 1572195179, "creation_date": 1572188834, "question_id": 58580583, "link": "https://stackoverflow.com/questions/58580583/rust-send-data-from-function-argument-from-a-thread-into-mpsc-channel", "title": "rust - Send data from function argument (from a thread) into mpsc channel", "body": "<p>I'm trying to handle <code>TcpStream</code> using threads in a Rust program (a tcp server). I want to keep tracks of currents clients connections in a <code>HashMap</code> using an <code>Arc&lt;Mutex&lt;HashMap&gt;&gt;</code>.</p>\n\n<p>When a thread is finished, to remove the connection from the HashMap, I thought about using an <code>uuid</code>, passed to the function used to handle the stream. Like this it could be send inside a mpsc channel to the main thread and then remove the connection from the <code>HashMap</code>. </p>\n\n<p>The code from the main thread :</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let clients_streams = Arc::new(Mutex::new(HashMap::new()));\n\n// Server thread. Create channel\nlet (server_sender, server_receiver) = mpsc::channel();\n\nloop {\n    for stream in server_socket.incoming() {\n        let clients_streams = Arc::clone(&amp;clients_streams);\n        let server_sender = server_sender.clone();\n        let mut cs = clients_streams.lock().unwrap();\n\n        match stream {\n            Ok(stream) =&gt; {\n                let mut cs = clients_streams.lock().unwrap();\n                let uuid = Uuid::new_v4().to_string();\n                cs.insert(uuid.clone(), stream.try_clone());\n\n                thread::spawn(move || {\n                    handle_client(stream, server_sender.clone(), uuid.clone());\n                })\n            }\n            Err(err) =&gt; thread::spawn(move || {\n                println!(\"Connection failed : {}\", err);\n            }),\n        };\n    }\n</code></pre>\n\n<p>The <code>handle_client</code> function :</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn handle_client&lt;'a&gt;(stream: TcpStream, sender: mpsc::Sender&lt;&amp;'a [u8]&gt;, uuid: String) {\n    let mut reader = BufReader::new(&amp;stream);\n    let mut writer = BufWriter::new(&amp;stream);\n\n    writer.write(b\"Hello\\n\").unwrap();\n    writer.flush().unwrap();\n\n    // Read from client\n    loop {\n        let mut resp = Vec::new();\n        let read_bytes = reader.read_until(b'\\n', &amp;mut resp);\n        match read_bytes {\n            Ok(read_bytes) =&gt; {\n                if read_bytes == 0 {\n                    let msg = format!(\"end of {}\", uuid);\n                    println!(\"connection closed by remote\");\n                    sender.send(msg.as_bytes()).unwrap();\n                    break;\n                };\n            }\n            Err(err) =&gt; match err.kind() {\n                io::ErrorKind::Interrupted =&gt; continue,\n                _ =&gt; break,\n            },\n        }\n    }\n}\n</code></pre>\n\n<p>This code doesn't compile, it shows this error but I don't understand how to resolve it. The variable <code>msg</code> doesn't live long enough, because of the <code>uuid</code> inside of it, but why ? I had to add the lifetime because I'm sending <code>uuid</code> inside the channel.</p>\n\n<pre><code> fn handle_client&lt;'a&gt;(stream: TcpStream, sender: mpsc::Sender&lt;&amp;'a [u8]&gt;, uuid: String) {\n             -- lifetime `'a` defined here\n\n                sender.send(msg.as_bytes()).unwrap();\n                ------------^^^------------\n                |           |\n                |           borrowed value does not live long enough\n                argument requires that `msg` is borrowed for `'a`\n                break;\n            };\n            - `msg` dropped here while still borrowed\n</code></pre>\n"}, {"tags": ["data-structures", "struct", "enums", "rust", "traits"], "answers": [{"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 3, "last_activity_date": 1572181660, "creation_date": 1572181660, "answer_id": 58579694, "question_id": 58579565, "link": "https://stackoverflow.com/questions/58579565/how-to-send-different-structs-in-a-function-of-a-trait/58579694#58579694", "title": "How to send different structs in a function of a trait?", "body": "<p>This looks like a use case for an <em>associated type</em>:</p>\n\n<pre><code>trait Shape {\n    type Property;\n    fn do_magic(&amp;self, p: Self::Property) -&gt; u64;\n}\n\nimpl Shape for Triangle {\n    type Property = TriangleProperty;\n    fn do_magic(&amp;self, p: Self::Property) -&gt; u64 {\n        /* do something with p */\n    }\n}\n\nimpl Shape for Square {\n    type Property = SquareProperty;\n    fn do_magic(&amp;self, p: Self::Property) -&gt; u64 {\n        /* do something with p */\n    }\n}\n</code></pre>\n\n<p>When you implement <code>Shape</code> you choose what type <code>Self::Property</code> will be, and within the <code>impl</code> you can use it as the concrete type. The compiler will not allow you to pass a <code>SquareProperty</code> to <code>Triangle::do_magic</code> or vice versa.</p>\n"}], "owner": {"reputation": 897, "user_id": 4528728, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/48b7aeab16c3e50657c88ac3542a502b?s=128&d=identicon&r=PG&f=1", "display_name": "Slim Shady", "link": "https://stackoverflow.com/users/4528728/slim-shady"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 54, "favorite_count": 0, "accepted_answer_id": 58579694, "answer_count": 1, "score": 2, "last_activity_date": 1572181660, "creation_date": 1572180690, "last_edit_date": 1572181633, "question_id": 58579565, "link": "https://stackoverflow.com/questions/58579565/how-to-send-different-structs-in-a-function-of-a-trait", "title": "How to send different structs in a function of a trait?", "body": "<pre><code>enum Property {\n    Triangle(TriangleProperty),\n    Square(SquareProperty),\n}\n\nstruct Triangle {\n    x: u8,\n    y: Vec&lt;u8&gt;,\n}\n\nstruct Square {\n    x: u8,\n    y: String,\n}\n\nstruct TriangleProperty {\n    a: u8,\n    b: u8,\n    c: u8,\n}\n\nstruct SquareProperty {\n    a: u8,\n    b: u8,\n    c: u8,\n    d: u8,\n}\n\ntrait Shape {\n    fn do_magic(&amp;self, p: Property) -&gt; u64;\n}\n\nimpl Shape for Triangle {\n    fn do_magic(&amp;self, p: Property) -&gt; u64 {\n        match (p) {\n            Triangle(x) =&gt; { /* do something with x */ }\n            _ =&gt; panic(\"this wont happen\"),\n        }\n    }\n}\n\nimpl Shape for Square {\n    fn do_magic(&amp;self, p: Property) -&gt; u64 {\n        match (p) {\n            Square(x) =&gt; { /* do something with x */ }\n            _ =&gt; panic(\"this wont happen\"),\n        }\n    }\n}\n</code></pre>\n\n<p>As you can see I'm calling <code>panic</code> which i don't think is good way to deal with this. </p>\n\n<p>This is just an example but I cannot have <code>TriangleProperty</code> inside the <code>Triangle</code> struct. Because I'm using <code>TriangleProperty</code> as an input in the function <code>do_magic</code> that uses a constant immutable <code>Triangle</code> struct. So the only option i can think of is wrapping in an <code>enum</code>. But is there any better way to do this ?</p>\n"}, {"tags": ["module", "rust", "traits"], "answers": [{"tags": [], "owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "is_accepted": false, "score": 0, "last_activity_date": 1572236437, "creation_date": 1572236437, "answer_id": 58585757, "question_id": 58578579, "link": "https://stackoverflow.com/questions/58578579/using-rust-traits-within-module-that-is-declared-in-library-root-of-project/58585757#58585757", "title": "Using Rust traits within module that is declared in library root of project", "body": "<p>The items from other modules are not visible by default, even if this other module is the parent of current one. You must explicitly <code>use</code> them.</p>\n\n<p>For such cases, there are two ways to do it conveniently:</p>\n\n<ul>\n<li><code>use crate::Batch</code>, if you want to keep this trait in the root;</li>\n<li><code>use super::Batch</code>, if you want to be able to move the whole hierarchy (with trait and its implementrations) somewhere else.</li>\n</ul>\n"}], "owner": {"reputation": 93, "user_id": 4575286, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a2e101ccb4f6aaf6986f26c39869b808?s=128&d=identicon&r=PG&f=1", "display_name": "Vinnie", "link": "https://stackoverflow.com/users/4575286/vinnie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 140, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1572236437, "creation_date": 1572172482, "question_id": 58578579, "link": "https://stackoverflow.com/questions/58578579/using-rust-traits-within-module-that-is-declared-in-library-root-of-project", "title": "Using Rust traits within module that is declared in library root of project", "body": "<p>I'm building a tool in Rust that is able to generate dummy time series data for testing different systems we have in place. I am trying to implement a trait called 'Batch' that is declared within my lib.rs which is in the root of the project. However, within my modules Rust is complaining this trait is not in scope, how can I access declarations on a higher namespace from within my modules?</p>\n\n<p>This is how my project looks like:</p>\n\n<pre><code> - main.rs\n - lib.rs\n - factory\n     - cassandra.rs\n     - jboss.rs\n     - mod.rs\n - drain\n    - http.rs\n    - cqlsh.rs\n    - mod.rs\n</code></pre>\n\n<p>lib.rs contains:</p>\n\n<pre><code>pub trait Batch&lt;T&gt; {\n  fn create(&amp;self) -&gt; Option&lt;T&gt;\n}\n</code></pre>\n\n<p>And within cassandra.rs and jboss.rs I have structs for which I am trying to implement Batch.\nWithin lib.rs I've declared both modules using:</p>\n\n<pre><code>pub mod drains;\npub mod factory;\n</code></pre>\n\n<p>Is this even the right approach or should I just combine cassandra.rs &amp; jboss.rs in one file and declare the trait there?</p>\n"}, {"tags": ["rust", "wasm-bindgen"], "answers": [{"comments": [{"owner": {"reputation": 2925, "user_id": 2544873, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/1B6wh.png?s=128&g=1", "display_name": "Tinmarino", "link": "https://stackoverflow.com/users/2544873/tinmarino"}, "edited": false, "score": 0, "creation_date": 1614344213, "post_id": 58586617, "comment_id": 117363761, "body": "&quot;Forgot to put &amp; symbol &quot;. It worked instantly, Thanks for sharing."}], "tags": [], "owner": {"reputation": 191, "user_id": 2120162, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/awszn.jpg?s=128&g=1", "display_name": "Shimul Chowdhury", "link": "https://stackoverflow.com/users/2120162/shimul-chowdhury"}, "is_accepted": true, "score": 2, "last_activity_date": 1572244727, "creation_date": 1572244727, "answer_id": 58586617, "question_id": 58578044, "link": "https://stackoverflow.com/questions/58578044/rust-buildgen-requestanimationframeloop-unable-to-use-struct-method-inside-closu/58586617#58586617", "title": "rust-buildgen requestAnimationFrameLoop unable to use struct method inside closure", "body": "<p>I found the issue. The Game struct would be like - </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl Game {\n    fn render(self: &amp;Game) {\n        self.ctx.begin_path();\n        self.ctx.arc(self.state.x, 50.0, 40.0, 0.0, 2.0 * std::f64::consts::PI);\n        self.ctx.stroke();\n    }\n}\n</code></pre>\n\n<p>Forgot to put <code>&amp;</code> symbol for <code>self</code>. Thanks Pauan#6666 from Discord channel #wg-wasm for pointing that out. </p>\n"}, {"tags": [], "owner": {"reputation": 2925, "user_id": 2544873, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/1B6wh.png?s=128&g=1", "display_name": "Tinmarino", "link": "https://stackoverflow.com/users/2544873/tinmarino"}, "is_accepted": false, "score": 0, "last_activity_date": 1614344392, "creation_date": 1614344392, "answer_id": 66386267, "question_id": 58578044, "link": "https://stackoverflow.com/questions/58578044/rust-buildgen-requestanimationframeloop-unable-to-use-struct-method-inside-closu/66386267#66386267", "title": "rust-buildgen requestAnimationFrameLoop unable to use struct method inside closure", "body": "<p><a href=\"https://stackoverflow.com/a/58586617/2544873\">Shimul comment</a> worked for me.\nI share here my game start_loop blocking function.</p>\n<p>where the insteresting line is at the end:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>draw_scene(&amp;self.state, &amp;self.gl_context).unwrap();\n</code></pre>\n<pre class=\"lang-rust prettyprint-override\"><code>impl GameGl { pub fn start_loop(mut self) -&gt; Result&lt;(), JsValue&gt; {\n    // Render loop\n    // Dont ask me\n    let f = Rc::new(RefCell::new(None));\n    let g = f.clone();\n    const FPS_THROTTLE: f64 = 1000.0 / 60.0; // milliseconds / frames\n    let mut previous: f64 = js_sys::Date::now();\n    *g.borrow_mut() = Some(Closure::wrap(Box::new(move || {\n        request_animation_frame(f.borrow().as_ref().unwrap());\n\n        // Get time (miliseconds)\n        let now = js_sys::Date::now();\n\n        // Clause: must work or sleeep ?\n        // The current rotation angle 1 rad/sec\n        if now &lt; previous + FPS_THROTTLE {\n           return ();\n        }\n\n        // Update time\n        let delta_time = now - previous;\n        previous = now;\n\n        // Update game\n        self.state.cube_rotation += delta_time as f32 * 0.001;\n\n        // Draw\n        draw_scene(&amp;self.state, &amp;self.gl_context).unwrap();\n            //&amp;self.gl, &amp;self.program_info, &amp;self.texture, &amp;buffers, &amp;state).unwrap();\n\n    }) as Box&lt;dyn FnMut()&gt;));\n\n    console::log_1(&amp;&quot;Requesting animation frame&quot;.into());\n    request_animation_frame(g.borrow().as_ref().unwrap());\n    //let program_info = \n    Ok(())\n}}\n</code></pre>\n"}], "owner": {"reputation": 191, "user_id": 2120162, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/awszn.jpg?s=128&g=1", "display_name": "Shimul Chowdhury", "link": "https://stackoverflow.com/users/2120162/shimul-chowdhury"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 161, "favorite_count": 0, "accepted_answer_id": 58586617, "answer_count": 2, "score": 1, "last_activity_date": 1614344392, "creation_date": 1572167991, "question_id": 58578044, "link": "https://stackoverflow.com/questions/58578044/rust-buildgen-requestanimationframeloop-unable-to-use-struct-method-inside-closu", "title": "rust-buildgen requestAnimationFrameLoop unable to use struct method inside closure", "body": "<p>I am trying to create a requestAnimationFrame loop, which will call <code>game.render()</code> for every frame. I am following this tutorial - <a href=\"https://rustwasm.github.io/wasm-bindgen/examples/request-animation-frame.html\" rel=\"nofollow noreferrer\">https://rustwasm.github.io/wasm-bindgen/examples/request-animation-frame.html</a></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>\nstruct Game {\n    state: GameState,\n    ctx: web_sys::CanvasRenderingContext2d\n}\n\nimpl Game {\n    fn render(self: Game) {\n        self.ctx.begin_path();\n        self.ctx.arc(self.state.x, 50.0, 40.0, 0.0, 2.0 * std::f64::consts::PI);\n        self.ctx.stroke();\n    }\n}\n\n#[wasm_bindgen(start)]\npub fn run() -&gt; Result&lt;(), JsValue&gt; {\n\n    let game = init();\n\n    let f = Rc::new(RefCell::new(None));\n    let g = f.clone();\n\n\n    *g.borrow_mut() = Some(Closure::wrap(Box::new(move || {\n        game.render();\n        request_animation_frame(f.borrow().as_ref().unwrap());\n    }) as Box&lt;dyn FnMut()&gt;));\n\n    request_animation_frame(g.borrow().as_ref().unwrap());\n    Ok(())\n}\n\n\nfn init() -&gt; Game {\n    let doc = document();\n    let canvas = doc.create_element(\"canvas\").unwrap();\n    canvas.set_attribute(\"width\", \"800px\").unwrap();\n    canvas.set_attribute(\"height\", \"800px\").unwrap();\n    canvas.set_id(\"fp-canvas\");\n    body().append_child(&amp;canvas).expect(\"Could not attach canvas\");\n\n    Game {\n        ctx: context(),\n        state: GameState {\n            x: 3.0\n        }\n    }\n}\n</code></pre>\n\n<p>But it gives following error -</p>\n\n<pre><code>\nerror[E0277]: expected a `std::ops::FnMut&lt;()&gt;` closure, found `[closure@src/lib.rs:89:51: 92:6 game:Game, f:std::rc::Rc&lt;std::cell::RefCell&lt;std::option::Option&lt;wasm_bindgen::closure::Closure&lt;dyn std::ops::FnMut()&gt;&gt;&gt;&gt;]`\n  --&gt; src/lib.rs:89:42\n   |\n89 |       *g.borrow_mut() = Some(Closure::wrap(Box::new(move || {\n   |  __________________________________________^\n90 | |         game.render();\n91 | |         request_animation_frame(f.borrow().as_ref().unwrap());\n92 | |     }) as Box&lt;dyn FnMut()&gt;));\n   | |______^ expected an `FnMut&lt;()&gt;` closure, found `[closure@src/lib.rs:89:51: 92:6 game:Game, f:std::rc::Rc&lt;std::cell::RefCell&lt;std::option::Option&lt;wasm_bindgen::closure::Closure&lt;dyn std::ops::FnMut()&gt;&gt;&gt;&gt;]`\n   |\n   = help: the trait `std::ops::FnMut&lt;()&gt;` is not implemented for `[closure@src/lib.rs:89:51: 92:6 game:Game, f:std::rc::Rc&lt;std::cell::RefCell&lt;std::option::Option&lt;wasm_bindgen::closure::Closure&lt;dyn std::ops::FnMut()&gt;&gt;&gt;&gt;]`\n   = note: wrap the `[closure@src/lib.rs:89:51: 92:6 game:Game, f:std::rc::Rc&lt;std::cell::RefCell&lt;std::option::Option&lt;wasm_bindgen::closure::Closure&lt;dyn std::ops::FnMut()&gt;&gt;&gt;&gt;]` in a closure with no arguments: `|| { /* code */ }\n   = note: required for the cast to the object type `dyn std::ops::FnMut()`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0277`.\nerror: could not compile `fighting-pixel`.\n\nTo learn more, run the command again with --verbose.\n</code></pre>\n\n<p>If I comment out <code>game.render()</code> it compiles. But I want to keep a state which will be updated to create an animation. What I am doing wrong? Why Closure doesn't allow to call struct methods?</p>\n\n<p>Thanks in advance for your help.</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "is_accepted": true, "score": 1, "last_activity_date": 1572577609, "creation_date": 1572577609, "answer_id": 58653618, "question_id": 58577957, "link": "https://stackoverflow.com/questions/58577957/what-is-the-correct-way-to-reference-memory-in-structs/58653618#58653618", "title": "What is the correct way to reference memory in structs", "body": "<p>If <code>Topping</code> is small (e.g. an <code>enum</code>), then you can just copy it (e.g. into <code>Vec&lt;Topping&gt;</code>).</p>\n\n<p>If <code>Topping</code> is large and you want only one copy in memory, the easiest to work with is to use <code>Arc&lt;Topping&gt;</code> which is a shared pointer, and can be cheaply cloned and easily passed around (e.g. into <code>Vec&lt;Arc&lt;Topping&gt;&gt;</code>).</p>\n\n<p>If both <code>Pizza</code> and <code>Topping</code> are used only in a specific statically-known scope (e.g. you create all toppings in <code>main()</code> and don't change them later, or you use a memory pool), you may get away with using <code>&amp;'a Topping</code> in <code>Pizza&lt;'a&gt;</code>, but this is likely to be unnoticeably small performance improvement compared to <code>Rc</code>/<code>Arc</code>, and keeping track of the temporary lifetime will be annoying.</p>\n"}], "owner": {"reputation": 131, "user_id": 2080539, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/ee4a32ab9cd6aa3fe6c935875ae223da?s=128&d=identicon&r=PG", "display_name": "Przemek Hugh Kaznowski", "link": "https://stackoverflow.com/users/2080539/przemek-hugh-kaznowski"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 51, "favorite_count": 0, "accepted_answer_id": 58653618, "answer_count": 1, "score": 0, "last_activity_date": 1572577609, "creation_date": 1572167299, "question_id": 58577957, "link": "https://stackoverflow.com/questions/58577957/what-is-the-correct-way-to-reference-memory-in-structs", "title": "What is the correct way to reference memory in structs", "body": "<p>I have a struct called <em>Pizza</em>. It contains a single <em>Base</em> struct and a vector of <em>Topping</em> structs.</p>\n\n<p>I have a helper method that returns a <em>Pizza</em>. In the (near) future, I see the toppings being a collection somewhere and <em>Pizza</em>s being dynamically created from this collection of <em>Topping</em>s (mix and match style).</p>\n\n<p>My question is about how the struct should reference Bases and Toppings. If I give ownership to the struct, then it makes it easy to handle it (no lifetime declarations, helper methods are also easier since they no longer need to create the memory outside of scope). However by having <em>Topping</em>s outside of scope of my helper method and declaring lifetimes I get less repetition in memory.</p>\n\n<p>How do people reason about these problems? Is there a recommended rule of thumb to follow? Is it possible to have both?</p>\n"}, {"tags": ["rust", "borrow-checker", "raii"], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 3, "last_activity_date": 1572252313, "creation_date": 1572252313, "answer_id": 58587870, "question_id": 58577762, "link": "https://stackoverflow.com/questions/58577762/why-does-rust-borrow-checker-ignores-the-mutable-pointer-among-the-function-para/58587870#58587870", "title": "Why does Rust borrow checker ignores the mutable pointer among the function parameters?", "body": "<p>In order to perform the call to <code>get_mut</code>, Rust performs an implicit <em>reborrow</em>.</p>\n\n<p>A <em>reborrow</em> is equivalent to borrowing from a mutable reference and then flattening the references. That is, given a mutable reference of type <code>&amp;'a T</code>, borrowing from it yields a <code>&amp;'b &amp;'a T</code> (note that there are two distinct lifetimes; <code>'b</code> is shorter than <code>'a</code>), and flattening the references yields <code>&amp;'b T</code>.</p>\n\n<p>Rust understands that the borrow with lifetime <code>'b</code> was derived from the borrow with lifetime <code>'a</code>. Thus, borrow <code>'a</code> will be frozen for as long as borrow <code>'b</code> is alive.</p>\n\n<p>Before NLL, the borrow obtained for the call to <code>get_mut</code> would live for the whole <code>match</code> block because <code>get_mut</code> returns a value that keeps the borrow active. <code>map.insert(...)</code> also tries to reborrow from <code>map</code>, but since the first reborrow from <code>map</code> is still active, that's an error.</p>\n"}], "owner": {"reputation": 268, "user_id": 2899392, "user_type": "registered", "accept_rate": 36, "profile_image": "https://i.stack.imgur.com/urKeq.jpg?s=128&g=1", "display_name": "streethacker", "link": "https://stackoverflow.com/users/2899392/streethacker"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 119, "favorite_count": 0, "accepted_answer_id": 58587870, "answer_count": 1, "score": 1, "last_activity_date": 1572252313, "creation_date": 1572165392, "last_edit_date": 1572237959, "question_id": 58577762, "link": "https://stackoverflow.com/questions/58577762/why-does-rust-borrow-checker-ignores-the-mutable-pointer-among-the-function-para", "title": "Why does Rust borrow checker ignores the mutable pointer among the function parameters?", "body": "<p>I just got confused by the rust compile error about lifetime.</p>\n\n<p>Suppose the code snippet looks like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn process(map: &amp;mut HashMap&lt;String, String&gt;, key: String) {\n    match map.get_mut(&amp;key) {\n        Some(value) =&gt; println!(\"value: {}\", value),\n        None =&gt; {\n            map.insert(key, String::new());\n        }\n    }\n}\n</code></pre>\n\n<p>And I called it as follows:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let mut map = HashMap::&lt;String, String&gt;::new();\n    let key = String::from(\"name\");\n    process(&amp;mut map, key);\n}\n</code></pre>\n\n<p>As far as I know(ignore the <strong>NLL</strong> feature), <code>map.get_mut</code> returns a <code>Option&lt;&amp;mut String&gt;</code> type in which <code>&amp;mut String</code> is a borrow pointer which points to part of the map, and the pointer lives through the whole <code>match</code> block. Then inside the <code>None</code> branch, <code>map.insert(key, String::new())</code> creates another <code>&amp;mut HashMap&lt;String, String&gt;</code> pointer automatically, which also points to the map. The two pointers borrow the same map as mutable twice, so it causes:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>error[E0499]: cannot borrow `*map` as mutable more than once at a time\n --&gt; test.rs:7:13\n  |\n4 |     match map.get_mut(&amp;key) {\n  |           --- first mutable borrow occurs here\n...\n7 |             map.insert(key, String::new());\n  |             ^^^ second mutable borrow occurs here\n8 |         }\n9 |     }\n  |     - first borrow ends here\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0499`.\n</code></pre>\n\n<p>But my question is :</p>\n\n<p>The first parameter of function <code>fn process</code> is a mutable pointer itself(<code>&amp;mut HashMap&lt;String, String&gt;</code>), which also points to the map. According to the rule above, when the next line calls <code>map.get_mut(&amp;key)</code>, the second mutable borrow occurs. Why the compiler doesn't throws a error like this(any risk of memory safe?):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn process(map: &amp;mut HashMap&lt;String, String&gt;, key: String)\n           --- first mutable borrow occurs here\n    match map.get_mut(&amp;key)\n    ^^^ second mutable borrow occurs here // the return value of type Option&lt;&amp;mut String&gt;\n</code></pre>\n\n<p>I'm newcomer to rust, any tips would be appreciated.</p>\n"}, {"tags": ["arrays", "static", "rust", "compile-time-constant"], "answers": [{"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1572529295, "post_id": 58643438, "comment_id": 103594461, "body": "<a href=\"https://doc.rust-lang.org/std/mem/fn.size_of_val.html\" rel=\"nofollow noreferrer\"><code>mem::size_of_val</code></a>?"}, {"owner": {"reputation": 2818, "user_id": 1172350, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/757373ec5a9f3631247eb0c3c8fdd44c?s=128&d=identicon&r=PG", "display_name": "dcoles", "link": "https://stackoverflow.com/users/1172350/dcoles"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1572546326, "post_id": 58643438, "comment_id": 103603243, "body": "@trentcl Unfortunately <a href=\"https://doc.rust-lang.org/std/mem/fn.size_of_val.html\" rel=\"nofollow noreferrer\"><code>mem::size_of_val</code></a> is not a constant function, so can&#39;t be used for const or static values (but basically it&#39;s the same function)."}, {"owner": {"reputation": 2818, "user_id": 1172350, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/757373ec5a9f3631247eb0c3c8fdd44c?s=128&d=identicon&r=PG", "display_name": "dcoles", "link": "https://stackoverflow.com/users/1172350/dcoles"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1572559264, "post_id": 58643438, "comment_id": 103608069, "body": "Another reason <code>size_of_val(unsafe { &amp;*$x.as_ptr() })</code> is a bad idea is that for a zero-sized array <code>*$x.as_ptr()</code> technically dereferences an invalid pointer (since the zeroth element doesn&#39;t exist)."}, {"owner": {"reputation": 2818, "user_id": 1172350, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/757373ec5a9f3631247eb0c3c8fdd44c?s=128&d=identicon&r=PG", "display_name": "dcoles", "link": "https://stackoverflow.com/users/1172350/dcoles"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1573152897, "post_id": 58643438, "comment_id": 103798218, "body": "It&#39;s probably possible to simplify this now that <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.len\" rel=\"nofollow noreferrer\"><code>[T]::len</code></a> is a const function in <a href=\"https://blog.rust-lang.org/2019/11/07/Rust-1.39.0.html#more-const-fns-in-the-standard-library\" rel=\"nofollow noreferrer\">Rust 1.39.0</a>."}], "tags": [], "owner": {"reputation": 2818, "user_id": 1172350, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/757373ec5a9f3631247eb0c3c8fdd44c?s=128&d=identicon&r=PG", "display_name": "dcoles", "link": "https://stackoverflow.com/users/1172350/dcoles"}, "is_accepted": true, "score": 3, "last_activity_date": 1573153895, "last_edit_date": 1573153895, "creation_date": 1572525207, "answer_id": 58643438, "question_id": 58576850, "link": "https://stackoverflow.com/questions/58576850/how-do-i-determine-the-size-of-an-array-at-compile-time-in-rust/58643438#58643438", "title": "How do I determine the size of an array at compile time in Rust?", "body": "<p>In Rust 1.39.0 <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.len\" rel=\"nofollow noreferrer\"><code>[T]::len</code></a> was <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.len\" rel=\"nofollow noreferrer\">stabilised as a const function</a>, now making this straight forward:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>const ARRAY: [i32; 3] = [1, 2, 3];\nconst ARRAY_SIZE: usize = ARRAY.len();\n\nfn main() {\n    assert_eq!(3, ARRAY_SIZE);\n}\n</code></pre>\n\n<hr>\n\n<p>In earlier versions of Rust, here's one way based on the common C <code>ARRAY_SIZE</code> macro:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>macro_rules! array_size {\n    ($x:expr) =&gt; (\n        (size_of_val($x) / size_of_val(&amp;$x[0]))\n    )\n}\n\nconst fn size_of_val&lt;T&gt;(_: &amp;T) -&gt; usize {\n    std::mem::size_of::&lt;T&gt;()\n}\n\nfn main() {\n    assert_eq!(3, array_size!(&amp;[1, 2, 3]));\n    assert_eq!(13, array_size!(b\"Hello, world!\"));\n}\n</code></pre>\n\n<p>It uses a const generic function <code>size_of_val&lt;T&gt;</code> to determine the type and thus the size of a value passed by reference (the built-in <a href=\"https://doc.rust-lang.org/std/mem/fn.size_of_val.html\" rel=\"nofollow noreferrer\"><code>std::mem::size_of_val</code></a> isn't const).</p>\n\n<p><strong>Note</strong>: This doesn't work for arrays of size 0. This can be fixed by using <code>size_of_val($x) / size_of_val(unsafe { &amp;*$x.as_ptr() })</code> at the cost of wrongly accepting non-array types (e.g. <code>&amp;String</code>).</p>\n"}], "owner": {"reputation": 2818, "user_id": 1172350, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/757373ec5a9f3631247eb0c3c8fdd44c?s=128&d=identicon&r=PG", "display_name": "dcoles", "link": "https://stackoverflow.com/users/1172350/dcoles"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1394, "favorite_count": 0, "accepted_answer_id": 58643438, "answer_count": 1, "score": 6, "last_activity_date": 1573153895, "creation_date": 1572153966, "last_edit_date": 1573152772, "question_id": 58576850, "link": "https://stackoverflow.com/questions/58576850/how-do-i-determine-the-size-of-an-array-at-compile-time-in-rust", "title": "How do I determine the size of an array at compile time in Rust?", "body": "<p>I have a C library that expects string type that explicitly defines the string length:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[repr(C)]\npub struct FFIStr {\n    len: usize,\n    data: *const u8,\n}\n</code></pre>\n\n<p>Because this type is used as a static, I'd like a way to safely declare it using a const function or macro (instead of manually setting <code>len</code>).</p>\n\n<p>My first attempt was to use a macro and <code>len()</code>, however in <a href=\"https://blog.rust-lang.org/2019/11/07/Rust-1.39.0.html#more-const-fns-in-the-standard-library\" rel=\"nofollow noreferrer\">versions before 1.39.0</a>, it is not possible to get the <a href=\"https://doc.rust-lang.org/unstable-book/library-features/const-slice-len.html\" rel=\"nofollow noreferrer\">length of a slice as a const fn</a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>macro_rules! ffi_string {\n    ($x:expr) =&gt; {\n        FFIStr { len: $x.len(), data: $x as *const u8 }\n    };\n}\n\n#[no_mangle]\npub static mut HELLO_WORLD: FFIStr = ffi_string!(b\"Hello, world!\");\n</code></pre>\n\n<p><code>error: core::slice::&lt;impl [T]&gt;::len` is not yet stable as a const function</code></p>\n\n<p>My second attempt was to use <a href=\"https://doc.rust-lang.org/std/mem/fn.size_of.html\" rel=\"nofollow noreferrer\"><code>std::mem::size_of&lt;T&gt;</code></a>, but there doesn't appear to be a way to get the type of the static array short of using generics:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>const fn ffi_string&lt;T&gt;(s: &amp;'static T) -&gt; FFIStr {\n    FFIStr { len: ::std::mem::size_of::&lt;T&gt;(), data: s as *const _ as *const _ }\n}\n\n#[no_mangle]\npub static mut HELLO_WORLD: FFIStr = ffi_string(b\"Hello, world!\");\n</code></pre>\n\n<p>While this works (surprisingly), it's horribly prone to misuse as it wildly casts whatever you pass it to a <code>*const u8</code>.</p>\n\n<p>It seems like <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2000-const-generics.md\" rel=\"nofollow noreferrer\">const_generics</a> would be a nice solution to this, but they're currently unstable:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>const fn ffi_string&lt;const SIZE: usize&gt;(s: &amp;'static [u8; SIZE]) -&gt; FFIStr {\n    FFIStr { len: SIZE, data: s as *const u8 }\n}\n\n#[no_mangle]\npub static mut X: FFIStr = ffi_string(b\"Hello, world!\");\n</code></pre>\n\n<p><code>error[E0658]: const generics are unstable</code></p>\n\n<p>Is there a better way of determining the size of a static array at compile time?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "is_accepted": false, "score": 2, "last_activity_date": 1572576967, "last_edit_date": 1572576967, "creation_date": 1572575506, "answer_id": 58653420, "question_id": 58576717, "link": "https://stackoverflow.com/questions/58576717/how-can-i-change-a-mut-peekablei-into-a-u8/58653420#58653420", "title": "How can I change a &amp;mut Peekable&lt;I&gt; into a &amp;[u8]?", "body": "<p><code>Peekable&lt;I&gt;</code> is an iterator that gives elements from an iterator that it wraps (with a twist that you can peek one ahead, but that is not relevant here).</p>\n\n<p><code>&amp;[u8]</code> is a slice of bytes laid out contiguously in memory.</p>\n\n<p>So you have two problems:</p>\n\n<ol>\n<li><p>The iterator <code>I</code> could be anything. Assuming you got <code>I</code> from a generic context, like <code>foo&lt;I: Iterator&gt;()</code>, you need to ensure that the iterator gives <code>u8</code>, or something convertible to <code>u8</code>.</p></li>\n<li><p>The data behind <code>Peekable</code> doesn't have to exist in memory. It could be created from a range for example <code>(0..1000)</code> or iterating over a <code>HashMap</code> which has data scattered in a random fashion. You need to copy it to a vector that guarantees contiguous layout.</p></li>\n</ol>\n\n<p>First, you'll need to declare you want <code>u8</code> with <code>where I: Iterator&lt;Item=u8&gt;</code>, or require that the type is convertible to <code>u8</code> with <code>where I: Iterator&lt;Item=impl Into&lt;u8&gt;&gt;</code>. Then you'll be able to do <code>let iterator = iterator.map(|el| el.into())</code> to get an iterator of <code>u8</code> elements. </p>\n\n<p>And once you have that, you can collect them into a vector, and get a slice of the vector:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let vec: Vec&lt;u8&gt; = iterator.collect();\nlet slice = &amp;vec[..];\n</code></pre>\n"}], "owner": {"reputation": 29, "user_id": 8356190, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae8cf21c51a7e52eb6f64c1d7881c44d?s=128&d=identicon&r=PG&f=1", "display_name": "blueviolet", "link": "https://stackoverflow.com/users/8356190/blueviolet"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 85, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1593018928, "creation_date": 1572151816, "last_edit_date": 1593018928, "question_id": 58576717, "link": "https://stackoverflow.com/questions/58576717/how-can-i-change-a-mut-peekablei-into-a-u8", "title": "How can I change a &amp;mut Peekable&lt;I&gt; into a &amp;[u8]?", "body": "<p>I have a value with type <code>&amp;mut Peekable&lt;I&gt;</code> and I want to use it for input value for other function which gets the value with type <code>&amp;[u8]</code>. How can I change the type of it?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 0, "creation_date": 1572143997, "post_id": 58576230, "comment_id": 103468218, "body": "Do you mean something akin to <code>#[cfg(os)]</code> constraints on modules? Take for example <a href=\"https://doc.rust-lang.org/beta/src/std/os/mod.rs.html#41-56\" rel=\"nofollow noreferrer\"><code>std::os</code>&#39;s implementation</a> which declares modules depending on the OS. Naming the modules the same name would effectively make them a compile-time switch case."}, {"owner": {"reputation": 85, "user_id": 11656443, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-3dYXp68drtE/AAAAAAAAAAI/AAAAAAAAAAg/V5l4vW-82qY/photo.jpg?sz=128", "display_name": "alexa griffin", "link": "https://stackoverflow.com/users/11656443/alexa-griffin"}, "reply_to_user": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 1, "creation_date": 1572144111, "post_id": 58576230, "comment_id": 103468232, "body": "Unfortunately I am required to make that choice at run-time. Otherwise this would be quite a bit easier :)"}, {"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 1, "creation_date": 1572144337, "post_id": 58576230, "comment_id": 103468258, "body": "Then why not have a trait which summarizes the module, including the name of it, functions, types, etc. and implement it for a unit struct. This will be similar to <a href=\"https://docs.rs/gfx-hal/0.4.0/gfx_hal/trait.Backend.html\" rel=\"nofollow noreferrer\"><code>gfx-rs</code>&#39;s <code>Backend</code> trait</a>. Note that you will need to have generic functions everywhere. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=84295b481fb966733eef2e20fac58c85\" rel=\"nofollow noreferrer\">Here is an example</a>."}, {"owner": {"reputation": 85, "user_id": 11656443, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-3dYXp68drtE/AAAAAAAAAAI/AAAAAAAAAAg/V5l4vW-82qY/photo.jpg?sz=128", "display_name": "alexa griffin", "link": "https://stackoverflow.com/users/11656443/alexa-griffin"}, "reply_to_user": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 0, "creation_date": 1572144483, "post_id": 58576230, "comment_id": 103468285, "body": "coincidentally I am trying to switch between gfx-hal&#39;s various backends, I completely blanked and forgot to put that in the original question"}, {"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 1, "creation_date": 1572144720, "post_id": 58576230, "comment_id": 103468313, "body": "Ah, then my suggestion will be to have some kind of <code>enum</code> describing the various types you could have or a single entrypoint function which initializes based on a generic. In the example I gave in my edit to my previous comment, the <code>print_module</code> function would be the entrypoint function."}, {"owner": {"reputation": 85, "user_id": 11656443, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-3dYXp68drtE/AAAAAAAAAAI/AAAAAAAAAAg/V5l4vW-82qY/photo.jpg?sz=128", "display_name": "alexa griffin", "link": "https://stackoverflow.com/users/11656443/alexa-griffin"}, "reply_to_user": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 0, "creation_date": 1572144968, "post_id": 58576230, "comment_id": 103468336, "body": "Yep that looks like exactly what I was looking for. Thanks so much."}], "answers": [{"tags": [], "owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "is_accepted": true, "score": 2, "last_activity_date": 1572145359, "creation_date": 1572145359, "answer_id": 58576329, "question_id": 58576230, "link": "https://stackoverflow.com/questions/58576230/storing-a-module-as-a-variable-in-rust/58576329#58576329", "title": "Storing a module as a variable in rust", "body": "<p>You could do this by turning each of your modules into its own trait implementation, similar to how <a href=\"https://docs.rs/gfx-hal/0.4.0/gfx_hal/trait.Backend.html\" rel=\"nofollow noreferrer\"><code>gfx-rs</code></a> does things. </p>\n\n<p>Your \"<code>trait</code>\" would in actuality never be implemented with state, and instead be a collection of associated items like functions, other types, etc.</p>\n\n<p>You could package it up like <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d7af97b523217a03cba9ca9444935aa2\" rel=\"nofollow noreferrer\">so</a>:</p>\n\n<pre><code>#![allow(dead_code)]\nmod foo {\n    pub fn print() { println!(\"hello from foo\") }\n}\n\nmod bar {\n    pub fn print() { println!(\"hello from bar\"); }\n}\n\nmod zam { // this may not exist depending on the platform, one will always exist\n    pub fn print() { println!(\"hello from zam\"); }\n}\n\nstruct FOO;\nstruct BAR;\nstruct ZAM;\n\ntrait RuntimeModule {\n    fn print();\n}\n\nimpl RuntimeModule for FOO {\n    fn print() { foo::print(); }\n}\n\nimpl RuntimeModule for BAR {\n    fn print() { bar::print(); }\n}\n\nimpl RuntimeModule for ZAM {\n    fn print() { zam::print(); }\n}\n\nfn main() {\n    // Here we decide which to use\n    print_module::&lt;FOO&gt;();\n}\n// This is our \"entrypoint\"\nfn print_module&lt;T: RuntimeModule&gt;() {\n    T::print();\n}\n</code></pre>\n\n<p>If we decide which to use at runtime (in this case in <code>main</code>), we can then call a generic function which will use the associated types/functions to make decisions.</p>\n\n<p>Note that <strong>you would not be able to use <code>Box&lt;dyn RuntimeModule&gt;</code></strong> if <code>RuntimeModule</code> contained associated types that were different for each implementation. </p>\n"}], "owner": {"reputation": 85, "user_id": 11656443, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-3dYXp68drtE/AAAAAAAAAAI/AAAAAAAAAAg/V5l4vW-82qY/photo.jpg?sz=128", "display_name": "alexa griffin", "link": "https://stackoverflow.com/users/11656443/alexa-griffin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 192, "favorite_count": 1, "accepted_answer_id": 58576329, "answer_count": 1, "score": 2, "last_activity_date": 1572145359, "creation_date": 1572143714, "last_edit_date": 1572144596, "question_id": 58576230, "link": "https://stackoverflow.com/questions/58576230/storing-a-module-as-a-variable-in-rust", "title": "Storing a module as a variable in rust", "body": "<p>I have 2 different modules with precisely the same implementation, same functions, types, etc. They just do different things. I would like to be able to choose one of these modules at runtime and use it exclusively. Furthermore, there are several of these modules that may or may not exist at compile-time based on platform, features, etc. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=5eaf67fd25855b8ffcef040b8bb16ec6\" rel=\"nofollow noreferrer\">this</a> is a link to a super stripped-down version of what I want. I am trying to choose between the various <a href=\"https://docs.rs/gfx-hal/0.4.0/gfx_hal\" rel=\"nofollow noreferrer\">gfx-hal</a> backends. The best I have been able to come up with is a macro that creates an if statement for each possible module then fires that if statement whenever a function in a module is run. However, this doesn't really seem elegant or at all good. So is there a way to store the modules in a variable and access it, or some way to do this that mimics that?</p>\n\n<p>Thanks in advance</p>\n"}, {"tags": ["parsing", "rust", "nom"], "answers": [{"comments": [{"owner": {"reputation": 2141, "user_id": 1644471, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/cc67b23ba788b61fc17fdf4af314c378?s=128&d=identicon&r=PG", "display_name": "mottosson", "link": "https://stackoverflow.com/users/1644471/mottosson"}, "edited": false, "score": 0, "creation_date": 1572247700, "post_id": 58584330, "comment_id": 103487489, "body": "You are correct that I didn&#39;t really want the open and closing /* ... */. I just wanted the parser to consume the comment and discard it for all I care. Thank you!"}], "tags": [], "owner": {"reputation": 22505, "user_id": 1411457, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/XqssD.png?s=128&g=1", "display_name": "harmic", "link": "https://stackoverflow.com/users/1411457/harmic"}, "is_accepted": true, "score": 1, "last_activity_date": 1572219672, "creation_date": 1572219672, "answer_id": 58584330, "question_id": 58572819, "link": "https://stackoverflow.com/questions/58572819/parse-multiline-comment-with-nom/58584330#58584330", "title": "Parse multiline comment with nom", "body": "<p>I am assuming that you don't really want the returned string to have both preceding <code>/*</code> and closing <code>*/</code> intact - since <code>preceded</code> always discards the match from the first parser, you are never going to get that using <code>preceded</code>. I assume your main concern is ensuring that the closing <code>*/</code> is actually consumed.</p>\n\n<p>For this you can use <code>delimited</code> rather than <code>preceded</code>:</p>\n\n<pre><code>fn multiline_comment&lt;'a, E: ParseError&lt;&amp;'a str&gt;&gt;(i: &amp;'a str) -&gt; IResult&lt;&amp;'a str, &amp;'a str, E&gt; {\n    delimited(tag(\"/*\"), is_not(\"*/\"), tag(\"*/\"))(i)\n}\n</code></pre>\n\n<p>This passes this test:</p>\n\n<pre><code>assert_eq!(\n    multiline_comment1::&lt;(&amp;str, ErrorKind)&gt;(\"/*abc\\n\\ndef*/\"),\n    Ok((\"\", \"abc\\n\\ndef\"))\n);\n</code></pre>\n\n<p>so you can be sure that the closing <code>*/</code> has been consumed.</p>\n"}], "owner": {"reputation": 2141, "user_id": 1644471, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/cc67b23ba788b61fc17fdf4af314c378?s=128&d=identicon&r=PG", "display_name": "mottosson", "link": "https://stackoverflow.com/users/1644471/mottosson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 310, "favorite_count": 0, "accepted_answer_id": 58584330, "answer_count": 1, "score": 1, "last_activity_date": 1572248141, "creation_date": 1572109027, "last_edit_date": 1572248141, "question_id": 58572819, "link": "https://stackoverflow.com/questions/58572819/parse-multiline-comment-with-nom", "title": "Parse multiline comment with nom", "body": "<p>I'm trying to write a nom parser that recognizes multiline comments...</p>\n\n<pre><code>/*\nyo!\n*/\n</code></pre>\n\n<p>...and consumes/discards (same thing, right?) the result:</p>\n\n<pre><code>use nom::{\n  bytes::complete::{tag, take_until},\n  error::{ErrorKind, ParseError},\n  sequence::preceded,\n  IResult,\n};\n\nfn multiline_comment&lt;'a, E: ParseError&lt;&amp;'a str&gt;&gt;(i: &amp;'a str) -&gt; IResult&lt;&amp;'a str, &amp;'a str, E&gt; {\n    preceded(tag(\"/*\"), take_until(\"*/\"))(i)\n}\n</code></pre>\n\n<p>This almost works. I know the take_until stops just before the <code>*/</code>, but I don't know what to do to make it include it.</p>\n\n<pre><code>#[test]\nfn should_consume_multiline_comments() {\n    assert_eq!(\n        multiline_comment::&lt;(&amp;str, ErrorKind)&gt;(\"/*abc\\n\\ndef*/\"),\n        Ok((\"\", \"/*abc\\n\\ndef*/\"))\n    );\n}\n</code></pre>\n\n<p>gives the result</p>\n\n<pre><code>thread 'should_consume_multiline_comments' panicked at 'assertion failed: `(left == right)`\nleft: `Ok((\"*/\", \"abc\\n\\ndef\"))`,\nright: `Ok((\"\", \"/*abc\\n\\ndef*/\"))`'\n</code></pre>\n\n<p>So my question is, how do I get the full comment, including the ending <code>*/</code></p>\n\n<p>Thanks!</p>\n"}, {"tags": ["xml", "serialization", "rust", "deserialization", "serde"], "owner": {"reputation": 53, "user_id": 12278286, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2c6d7fe7e5f784c3be3de3cc463da0dd?s=128&d=identicon&r=PG&f=1", "display_name": "Jacko Jackonelli", "link": "https://stackoverflow.com/users/12278286/jacko-jackonelli"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 429, "favorite_count": 0, "answer_count": 0, "score": 4, "last_activity_date": 1572102048, "creation_date": 1572101640, "last_edit_date": 1572102048, "question_id": 58571896, "link": "https://stackoverflow.com/questions/58571896/rust-serde-deserialize-xml-directly-to-vect", "title": "Rust Serde: Deserialize XML directly to Vec&lt;T&gt;", "body": "<p>I need to use <code>serde</code> to serialize some XML data.\nThe data has a pattern where a tag name in plural (e.g. CATS, DOGS) will contain multiple instances of subtags of the tag in singular (CAT, DOG), like below:</p>\n\n<pre class=\"lang-xml prettyprint-override\"><code>&lt;pets&gt;\n  &lt;cats&gt;\n    &lt;cat&gt;\n      &lt;name&gt;\n          cat 1\n      &lt;/name&gt;\n    &lt;/cat&gt;\n    &lt;cat&gt;\n      &lt;name&gt;\n          cat 2\n      &lt;/name&gt;\n    &lt;/cat&gt;\n  &lt;/cats&gt;\n  &lt;dogs&gt;\n    &lt;dog&gt;\n      &lt;name&gt;\n          dog 1\n      &lt;/name&gt;\n    &lt;/dog&gt;\n    &lt;dog&gt;\n      &lt;name&gt;\n          dog 2\n      &lt;/name&gt;\n    &lt;/dog&gt;\n  &lt;/dogs&gt;\n&lt;/pets&gt;\n</code></pre>\n\n<p>Now, I can deserialize this with <code>serde</code> and <code>serde-xml-rs</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use serde::{Serialize, Deserialize};\nuse serde_xml_rs;\n\n#[derive(Debug, Serialize, Deserialize)]\nstruct Pets {\n    pub cats: Cats,\n    pub dogs: Dogs,\n}\n\n#[derive(Debug, Serialize, Deserialize)]\nstruct Cats {\n    pub cat: Vec&lt;Cat&gt;,\n}\n\n#[derive(Debug, Serialize, Deserialize)]\nstruct Dogs {\n    pub dog: Vec&lt;Dog&gt;,\n}\n\n#[derive(Debug, Serialize, Deserialize)]\nstruct Cat {\n    name: String,\n}\n\n#[derive(Debug, Serialize, Deserialize)]\nstruct Dog {\n    name: String,\n}\n\n\nfn main() {\n    let s = xml_string_from_above;\n    let pets: Pets = serde_xml_rs::from_str(s).unwrap();\n    println!(\"{:#?}\", pets);\n}\n</code></pre>\n\n<p><strong>The question:</strong> Can I use some serde hack to remove the intermediate structs <code>Cats</code> and <code>Dogs</code> and simply get the multiple instances in a vector?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Debug, Serialize, Deserialize)]\nstruct SlimmedPets {\n    pub cats: Vec&lt;Cat&gt;,\n    pub dogs: Vec&lt;Dog&gt;,\n}\n</code></pre>\n\n<p>while still getting the same XML back when serializing a <code>SlimmedPets</code> struct?</p>\n"}, {"tags": ["rust", "iterator", "slice", "flatten", "memory-efficient"], "comments": [{"owner": {"reputation": 97521, "user_id": 565635, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7b4b3e7c9ac68b7d2c93ad02d0b9c79d?s=128&d=identicon&r=PG", "display_name": "orlp", "link": "https://stackoverflow.com/users/565635/orlp"}, "edited": false, "score": 1, "creation_date": 1572102634, "post_id": 58571612, "comment_id": 103460633, "body": "Do you mean <code>.flatten().copied().collect::&lt;Box&lt;[T]&gt;&gt;()</code>?"}], "answers": [{"comments": [{"owner": {"reputation": 112511, "user_id": 623041, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/pIG3S.png?s=128&g=1", "display_name": "eggyal", "link": "https://stackoverflow.com/users/623041/eggyal"}, "edited": false, "score": 0, "creation_date": 1572109899, "post_id": 58572203, "comment_id": 103462385, "body": "Awesome answer!  I was already doing exactly what you suggested in your final para, but on review wondered whether flattening and collecting would be a more eloquent way of achieving the same; alas, I shall leave as-is.  Thank you."}], "tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 3, "last_activity_date": 1572104028, "creation_date": 1572104028, "answer_id": 58572203, "question_id": 58571612, "link": "https://stackoverflow.com/questions/58571612/efficiency-of-flattening-and-collecting-slices/58572203#58572203", "title": "Efficiency of flattening and collecting slices", "body": "<p><code>Box&lt;[T]&gt;</code> does not implement <code>FromIterator&lt;&amp;T&gt;</code>, so I'll assume your actual inner iterator is something that yields owned <code>T</code>s.</p>\n\n<p><code>FromIterator&lt;T&gt;</code> for <code>Box&lt;[T]&gt;</code> <a href=\"https://doc.rust-lang.org/src/alloc/boxed.rs.html#812-816\" rel=\"nofollow noreferrer\">forwards to</a> <code>Vec&lt;T&gt;</code>, which <a href=\"https://doc.rust-lang.org/src/alloc/vec.rs.html#1921\" rel=\"nofollow noreferrer\">uses <code>size_hint()</code></a> to reserve space for <code>lower</code> + 1 items, and reallocates as it grows beyond that (moving elements as necessary). So the question is, what does <code>Flatten&lt;I&gt;</code> return for <code>size_hint</code>?</p>\n\n<p>The implementation of <code>Iterator::size_hint</code> for <code>Flatten&lt;I&gt;</code> <a href=\"https://doc.rust-lang.org/src/core/iter/adapters/flatten.rs.html#155\" rel=\"nofollow noreferrer\">forwards to the internal struct <code>FlattenCompat&lt;I&gt;</code></a>, which is a little complicated because it supports double-ended iteration, but ultimately <a href=\"https://doc.rust-lang.org/src/core/iter/adapters/flatten.rs.html#245\" rel=\"nofollow noreferrer\">returns <code>(0, None)</code> if the outer iterator has not been advanced or exhausted</a>.</p>\n\n<p>So the answer to your question is: it does something less efficient. Namely, (unless you have already called <code>next</code> or <code>next_back</code> on the iterator at least once) it creates an empty <code>Vec&lt;T&gt;</code> and grows it progressively according to whatever growth strategy <code>Vec</code> uses (which is unspecified, but <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html\" rel=\"nofollow noreferrer\">guaranteed by the documentation to result in <code>O(1)</code> amortized <code>push</code></a>).</p>\n\n<p>This isn't an artificial limitation; it is fundamental to the way <code>Flatten</code> works. The only way you could pre-calculate the size of the flattened iterator is by exhausting the outer iterator and adding up all the inner <code>size_hint</code>s. This is a bad idea both because it doesn't always work (the inner iterators may not return useful <code>size_hint</code>s) and because you also have to find a way to keep the inner iterators around after exhausting the outer one; there's no solution that would be acceptable for a general purpose iterator adapter.</p>\n\n<p>If you know something about your particular iterator that enables you to know what the final size should be, you can reserve the allocation yourself by calling <code>Vec::with_capacity</code> and use <a href=\"https://doc.rust-lang.org/std/iter/trait.Extend.html#tymethod.extend\" rel=\"nofollow noreferrer\"><code>Extend</code></a> to fill it from the <code>flatten</code>ed iterator, rather than using <code>collect</code>.</p>\n"}], "owner": {"reputation": 112511, "user_id": 623041, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/pIG3S.png?s=128&g=1", "display_name": "eggyal", "link": "https://stackoverflow.com/users/623041/eggyal"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 135, "favorite_count": 1, "accepted_answer_id": 58572203, "answer_count": 1, "score": 2, "last_activity_date": 1572104028, "creation_date": 1572099678, "question_id": 58571612, "link": "https://stackoverflow.com/questions/58571612/efficiency-of-flattening-and-collecting-slices", "title": "Efficiency of flattening and collecting slices", "body": "\n\n<p>If one uses the standard <code>.flatten().collect::&lt;Box&lt;[T]&gt;&gt;()</code> on an <code>Iterator&lt;Item=&amp;[T]&gt; where T: Copy</code>, does it:</p>\n\n<ul>\n<li>perform a single allocation; and</li>\n<li>use <code>memcpy</code> to copy each item to the destination</li>\n</ul>\n\n<p>or does it do something less efficient?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 1, "creation_date": 1572092252, "post_id": 58570505, "comment_id": 103458334, "body": "Use <code>into_iter()</code> instead <code>iter()</code> to get ownership of name so you can move it."}], "answers": [{"tags": [], "owner": {"reputation": 84, "user_id": 12277291, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/a-/AAuE7mCt0nYtmG6ri6EXsV4UeB9VMvDJ8DuEdRwNYlPw=k-s128", "display_name": "Entcraft44", "link": "https://stackoverflow.com/users/12277291/entcraft44"}, "is_accepted": true, "score": 2, "last_activity_date": 1593020860, "last_edit_date": 1593020860, "creation_date": 1572093335, "answer_id": 58570811, "question_id": 58570505, "link": "https://stackoverflow.com/questions/58570505/how-to-insert-into-hashmap-dereferenced-iterator-of-linkedlist/58570811#58570811", "title": "How to insert into HashMap dereferenced iterator of LinkedList?", "body": "<p>Are you sure you want a <code>LinkedList</code> and not a <code>Vec</code> as output from your JSON parser? From the <a href=\"https://doc.rust-lang.org/std/collections/struct.LinkedList.html\" rel=\"nofollow noreferrer\"><code>LinkedList</code></a> docs:</p>\n<blockquote>\n<p>It is almost always better to use <code>Vec</code> or <code>VecDeque</code> because array-based containers are generally faster, more memory efficient, and make better use of CPU cache.</p>\n</blockquote>\n<p>To solve your problem, you should loop over <code>names</code> instead of <code>names.iter()</code>. This will make the list unusable after the <code>for</code> loop.\nYou will then have to remove the dereferences in your code, i.e. write <code>&amp;name</code> instead of &quot;<code>&amp;*name</code>&quot; and <code>name</code> instead of <code>*name</code>. However, you shouldn't have written <code>&amp;*name</code> at all because the <code>&amp;</code> and <code>*</code> in <code>&amp;*name</code> are cancelling each other out.</p>\n"}], "owner": {"reputation": 55, "user_id": 11874867, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/30e904ebd882d6918f5f54cc13f59ca1?s=128&d=identicon&r=PG&f=1", "display_name": "Neuroborus", "link": "https://stackoverflow.com/users/11874867/neuroborus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 72, "favorite_count": 0, "accepted_answer_id": 58570811, "answer_count": 1, "score": -2, "last_activity_date": 1593020860, "creation_date": 1572090708, "last_edit_date": 1593020069, "question_id": 58570505, "link": "https://stackoverflow.com/questions/58570505/how-to-insert-into-hashmap-dereferenced-iterator-of-linkedlist", "title": "How to insert into HashMap dereferenced iterator of LinkedList?", "body": "<p>How to fix issue on a screenshot? I already tried to make it mutable, but that is not the point. What can it be, how to get rid of it? I will be thankful for the changes in the code.</p>\n<p>screenshot:\n<img src=\"https://i.ibb.co/cczp2QM/Untitled.png\" alt=\"scr\" title=\"scr\" /></p>\n<pre><code>let mut buf = vec![0 as u8; 4096];\nfor stream in listener.incoming() {\n    match stream {\n        Ok(mut stream) =&gt; {\n            match stream.read(&amp;mut buf) {\n                Ok(size) =&gt; {\n                    //Get List of names\n                    let names: LinkedList&lt;String&gt; = serde_json::from_slice(&amp;buf[..size])?;\n                    for name in names.iter() {\n                        if (*data).available.contains_key(&amp;*name) {\n                            //If file already exist just update Vec of IP\n                            (*data)\n                                .available\n                                .get_mut(&amp;*name)\n                                .unwrap()\n                                .push(stream.peer_addr().unwrap());\n                        } else {\n                            //In another case - adding file with first IP that share it\n                            let mut v: Vec&lt;SocketAddr&gt; = Vec::new();\n                            v.push(stream.peer_addr().unwrap());\n                            (*data).available.insert(*name, v);\n                        }\n                    }\n                }\n                Err(_) =&gt; {\n                    println!(&quot;An error occurred, {}&quot;, stream.peer_addr().unwrap());\n                }\n            }\n        }\n        Err(e) =&gt; {\n            println!(&quot;Error: {}&quot;, e);\n        }\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "macros"], "owner": {"reputation": 31, "user_id": 12277715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4ef90db626c102db61a2f41fe397113f?s=128&d=identicon&r=PG&f=1", "display_name": "koqizhao", "link": "https://stackoverflow.com/users/12277715/koqizhao"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 58, "favorite_count": 0, "answer_count": 0, "score": 3, "last_activity_date": 1572088379, "creation_date": 1572087732, "last_edit_date": 1572088379, "question_id": 58570167, "link": "https://stackoverflow.com/questions/58570167/how-rust-macros-use-separator", "title": "how rust macros use + separator?", "body": "<p>I wrote a macro:</p>\n\n<pre><code>macro_rules! test {\n    ($trait:tt&lt;$($param:literal)+&gt;) =&gt; {\n        {\n            println!(\"{}\", stringify!($($param)++));\n        }\n    };\n}\n</code></pre>\n\n<p>for the <code>$param</code> repeat separator, I couldn't use the <code>+</code> char which is the repeat 'op'.</p>\n\n<p>The output looks like <code>1 2 3 +</code> but how can I make it be <code>1 + 2 + 3</code> instead?</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 0, "creation_date": 1572070303, "post_id": 58568015, "comment_id": 103454634, "body": "It may very well be that <code>op.execute(self.pending...);</code> borrows the <code>req</code> so that you can&#39;t consume it later on by calling <code>req.sync()</code>. But without <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal, reproducible example</a>, it&#39;s hard to tell."}], "answers": [{"tags": [], "owner": {"reputation": 84, "user_id": 12277291, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/a-/AAuE7mCt0nYtmG6ri6EXsV4UeB9VMvDJ8DuEdRwNYlPw=k-s128", "display_name": "Entcraft44", "link": "https://stackoverflow.com/users/12277291/entcraft44"}, "is_accepted": false, "score": 1, "last_activity_date": 1572079096, "creation_date": 1572079096, "answer_id": 58569284, "question_id": 58568015, "link": "https://stackoverflow.com/questions/58568015/moving-object-around-and-later-calling-a-method-that-consumes-the-objects-self/58569284#58569284", "title": "Moving object around and later calling a method that consumes the object&#39;s self yields &quot;cannot move out of borrowed content&quot;", "body": "<p>The signature consumes itself because it doesn't make that much sense to keep a Future after it has resolved. So you shouldn't be calling sync on a reference. But it isn't clear from your question what is calling what:</p>\n\n<pre><code>let result = req.sync().expect(\"could not download\");\nlet result = req.sync().expect(\"could not head\");\n         ^^^ cannot move out of borrowed content\n</code></pre>\n\n<p>Are those the same line and you changed the string or are they different lines e.t.c?</p>\n\n<p>But I can still try to answer.</p>\n\n<pre><code>let dl = s3.get_object(GetObjectRequest{\n    ...\n    ..Default::default()\n});\n</code></pre>\n\n<p>the <code>RusotoFuture</code> returned by <code>get_object</code> is not a reference, so</p>\n\n<pre><code>fn handle_op(&amp;mut self, input: u64) {\n   ...\n   let (sz, dl) = op.execute( &amp;self.s3.as_ref().unwrap() );\n   self.pending = Some(dl);\n</code></pre>\n\n<p>has a consumable d1, even if it takes <code>&amp;mut self</code> as an argument.\nSo you should change the execute function from</p>\n\n<pre><code>fn execute(&amp;mut self, req: &amp;mut RusotoFuture&lt;GetObjectOutput, GetObjectError&gt;) {...}\n</code></pre>\n\n<p>to</p>\n\n<pre><code>fn execute(&amp;mut self, req: RusotoFuture&lt;GetObjectOutput, GetObjectError&gt;) {...}\n</code></pre>\n\n<p>and then call it as</p>\n\n<pre><code>op.execute( self.pending.take() );\n</code></pre>\n\n<p>Is there any reason that isn't possible in your setup?</p>\n"}], "owner": {"reputation": 1788, "user_id": 481232, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/Lh1e2.jpg?s=128&g=1", "display_name": "hfingler", "link": "https://stackoverflow.com/users/481232/hfingler"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 57, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1572079096, "creation_date": 1572063650, "question_id": 58568015, "link": "https://stackoverflow.com/questions/58568015/moving-object-around-and-later-calling-a-method-that-consumes-the-objects-self", "title": "Moving object around and later calling a method that consumes the object&#39;s self yields &quot;cannot move out of borrowed content&quot;", "body": "<p>I know there are 1000 questions about this, but it seems none of the ones I read fit this issue.</p>\n\n<p>What I'm doing is, at a certain function I'm creating a RusotoFuture (from the rusoto_s3 crate):</p>\n\n<pre><code>fn execute(&amp;mut self, s3: &amp;S3Client) -&gt; (i64, RusotoFuture&lt;GetObjectOutput, GetObjectError&gt;) {\n   ...\n   let dl = s3.get_object(GetObjectRequest{\n        ...\n        ..Default::default()\n    });\n   return (sz, dl);\n</code></pre>\n\n<p>I return this object, and store it:</p>\n\n<pre><code>fn handle_op(&amp;mut self, input: u64) {\n   ...\n   let (sz, dl) = op.execute( &amp;self.s3.as_ref().unwrap() );\n   self.pending = Some(dl);\n</code></pre>\n\n<p>Later I want to call sync on this object from the handle_op function, the problem is the signature consumes self (<a href=\"https://rusoto.github.io/rusoto/rusoto_core/struct.RusotoFuture.html#method.sync\" rel=\"nofollow noreferrer\">https://rusoto.github.io/rusoto/rusoto_core/struct.RusotoFuture.html#method.sync</a>):</p>\n\n<pre><code>pub fn sync(self) -&gt; RusotoResult&lt;T, E&gt;\n</code></pre>\n\n<p>And handle_op takes <code>&amp;mut self</code>, so I don't have the ownership of the RusotoFuture.</p>\n\n<pre><code>fn execute(&amp;mut self, req: &amp;mut RusotoFuture&lt;GetObjectOutput, GetObjectError&gt;) {\n   ...\n   let result = req.sync().expect(\"could not download\");\n</code></pre>\n\n<p>Calling with:</p>\n\n<pre><code>op.execute(self.pending.as_mut().unwrap() );\n</code></pre>\n\n<p>And the error:</p>\n\n<pre><code>let result = req.sync().expect(\"could not head\");\n             ^^^ cannot move out of borrowed content\n</code></pre>\n\n<p>How can I achieve this? Is there anyway I can force some unsafe mechanism to take ownership of it?\nI'm also looking at Box, but I'm getting the same error. It's likely I'm not using it correctly, though.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 2058, "user_id": 3958875, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f6149ddd4636bcab17c52b751d79f7fd?s=128&d=identicon&r=PG&f=1", "display_name": "Prime_Aqasix", "link": "https://stackoverflow.com/users/3958875/prime-aqasix"}, "edited": false, "score": 0, "creation_date": 1572056684, "post_id": 58567517, "comment_id": 103453128, "body": "&gt; <code>sa</code> is a reference to heap so it points to the same address in heap as v.   Do you mean <code>sv</code> here?"}, {"owner": {"reputation": 1017, "user_id": 2078863, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/hvKKp.png?s=128&g=1", "display_name": "fairjm", "link": "https://stackoverflow.com/users/2078863/fairjm"}, "reply_to_user": {"reputation": 2058, "user_id": 3958875, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f6149ddd4636bcab17c52b751d79f7fd?s=128&d=identicon&r=PG&f=1", "display_name": "Prime_Aqasix", "link": "https://stackoverflow.com/users/3958875/prime-aqasix"}, "edited": false, "score": 0, "creation_date": 1572056838, "post_id": 58567517, "comment_id": 103453143, "body": "@Prime_Aqasix oh, my bad, I will fix it thx~"}, {"owner": {"reputation": 1017, "user_id": 2078863, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/hvKKp.png?s=128&g=1", "display_name": "fairjm", "link": "https://stackoverflow.com/users/2078863/fairjm"}, "reply_to_user": {"reputation": 2058, "user_id": 3958875, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f6149ddd4636bcab17c52b751d79f7fd?s=128&d=identicon&r=PG&f=1", "display_name": "Prime_Aqasix", "link": "https://stackoverflow.com/users/3958875/prime-aqasix"}, "edited": false, "score": 0, "creation_date": 1572058427, "post_id": 58567517, "comment_id": 103453312, "body": "I checked the book ch4 and the note I took for the first picture, it&#39;s all about slice, I just miss the prerequisite. What a silly question \ud83d\ude25\ud83d\ude25\ud83d\ude25\ud83d\ude25"}], "answers": [{"comments": [{"owner": {"reputation": 1017, "user_id": 2078863, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/hvKKp.png?s=128&g=1", "display_name": "fairjm", "link": "https://stackoverflow.com/users/2078863/fairjm"}, "edited": false, "score": 0, "creation_date": 1572057337, "post_id": 58567576, "comment_id": 103453193, "body": "Oh I just missed the type is a slice, your answer makes good sense. Thx. :)"}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 5, "last_activity_date": 1572056780, "creation_date": 1572056780, "answer_id": 58567576, "question_id": 58567517, "link": "https://stackoverflow.com/questions/58567517/which-reference-to-heap-allocated-point-is-right/58567576#58567576", "title": "which reference to heap allocated point is right?", "body": "<p>They are both correct in their own way.</p>\n\n<p>A <code>Vec&lt;T&gt;</code> can be borrowed either as a <code>&amp;Vec&lt;T&gt;</code> or as a <code>&amp;[T]</code>. Likewise, a <code>String</code> can be borrowed either as a <code>&amp;String</code> or as a <code>&amp;str</code>. Rust will automatically coerce (via <a href=\"https://doc.rust-lang.org/stable/std/ops/trait.Deref.html\" rel=\"noreferrer\"><code>Deref</code></a>) the first to the second when the second is expected.</p>\n\n<p>In the first code sample, <code>sv</code> is explicitly declared as a slice. <code>&amp;v</code> initially produces a <code>&amp;Vec&lt;f64&gt;</code>, but this reference is implicitly coerced to a slice so that it can be assigned to <code>sv</code>.</p>\n\n<p>However, in the second code sample, the type of <code>r</code> is not specified. Rust will therefore infer its type to be <code>&amp;String</code>, because coercions don't happen unless they are necessary.</p>\n\n<p>A <code>&amp;Vec&lt;T&gt;</code> and a <code>&amp;String</code> both look like the second picture. A <code>&amp;[T]</code> and a <code>&amp;str</code> that refer to the interior of a <code>Vec&lt;T&gt;</code> or <code>String</code> both look like the first picture.</p>\n"}], "owner": {"reputation": 1017, "user_id": 2078863, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/hvKKp.png?s=128&g=1", "display_name": "fairjm", "link": "https://stackoverflow.com/users/2078863/fairjm"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 71, "favorite_count": 0, "accepted_answer_id": 58567576, "answer_count": 1, "score": 2, "last_activity_date": 1572056857, "creation_date": 1572055925, "last_edit_date": 1572056857, "question_id": 58567517, "link": "https://stackoverflow.com/questions/58567517/which-reference-to-heap-allocated-point-is-right", "title": "which reference to heap allocated point is right?", "body": "<p>Before I read the book, the reference to the heap is like:  </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let v: Vec&lt;f64&gt; = vec![0.0,  0.707,  1.0,  0.707];\nlet a: [f64; 4] =     [0.0, -0.707, -1.0, -0.707];\n\nlet sv: &amp;[f64] = &amp;v;\nlet sa: &amp;[f64] = &amp;a;\n</code></pre>\n\n<p><a href=\"https://i.stack.imgur.com/tCAyA.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/tCAyA.png\" alt=\"enter image description here\"></a>  </p>\n\n<p>(from Programming Rust)<br>\nsv is a reference to heap so it points to the same address in heap as v.  </p>\n\n<p>But I read a article from <a href=\"https://www.net.in.tum.de/fileadmin/bibtex/publications/theses/2018-ixy-rust.pdf\" rel=\"nofollow noreferrer\">https://www.net.in.tum.de/fileadmin/bibtex/publications/theses/2018-ixy-rust.pdf</a> .  </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main(){\n    let s = String ::from(\"hello\");\n    let r = &amp;s;\n    let t = s;\n    println!(\"{}\", r);\n}\n</code></pre>\n\n<p>(the code can't be run cause it use reference after move)<br>\n<a href=\"https://i.stack.imgur.com/XxrJ8.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/XxrJ8.png\" alt=\"enter image description here\"></a><br>\nemmmm, r just point to the address in stack.Yeah, it is a truly reference but reference in rust is pointer (right?).<br>\nThis image is the same as the above if the value is stack allocated.And it's more nature explaining why can't use borrow later after move.  </p>\n\n<p>So, which is corrent?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "edited": false, "score": 1, "creation_date": 1572059700, "post_id": 58567431, "comment_id": 103453447, "body": "<a href=\"https://www.reddit.com/r/rust/comments/46qwjv/why_can_i_use_an_mut_reference_twice/\" rel=\"nofollow noreferrer\">Relevant Reddit thread</a>."}], "answers": [{"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 2, "last_activity_date": 1591873499, "last_edit_date": 1591873499, "creation_date": 1572062750, "answer_id": 58567954, "question_id": 58567431, "link": "https://stackoverflow.com/questions/58567431/is-it-possible-to-create-a-wrapper-around-an-mut-that-acts-like-an-mut/58567954#58567954", "title": "Is it possible to create a wrapper around an &amp;mut that acts like an &amp;mut", "body": "<p>No.</p>\n\n<p>The name for this feature is \"implicit reborrowing\" and it happens when you pass a <code>&amp;mut</code> reference where the compiler expects a <code>&amp;mut</code> reference of a possibly different lifetime. The compiler only implicitly reborrows when the actual type and the expected type are both <code>&amp;mut</code> references. It does not work with <a href=\"https://stackoverflow.com/questions/48143889/retaking-ownership-of-a-mutable-reference-passed-to-a-function-accepting-a-gener\">generic arguments</a> or structs that contain <code>&amp;mut</code> references. There is no way in current Rust to make a custom type that can be implicitly reborrowed.</p>\n\n<p>However, you can implement your own method to <em>explicitly</em> reborrow:</p>\n\n<pre><code>impl&lt;'a&gt; MutRef&lt;'a&gt; {\n    // equivalent to fn reborrow(&amp;mut self) -&gt; MutRef&lt;'_&gt;\n    fn reborrow&lt;'b&gt;(&amp;'b mut self) -&gt; MutRef&lt;'b&gt; {\n        MutRef {v: self.v}\n    }\n}\n\nfn wrapper() {\n    let mut s: i32 = 9;\n    let mut q = MutRef{ v: &amp;mut s };\n    wrapper_use(q.reborrow());  // does not move q\n    wrapper_use(q);             // moves q\n}\n</code></pre>\n\n<h3>See also</h3>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/32154387/why-is-the-mutable-reference-not-moved-here\">Why is the mutable reference not moved here?</a></li>\n<li><a href=\"https://stackoverflow.com/questions/33067664/type-inference-and-borrowing-vs-ownership-transfer\">Type inference and borrowing vs ownership transfer</a></li>\n</ul>\n"}], "owner": {"reputation": 350, "user_id": 7471004, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/da100e0f41655a2a27967c91f34ab332?s=128&d=identicon&r=PG&f=1", "display_name": "Jeff Muizelaar", "link": "https://stackoverflow.com/users/7471004/jeff-muizelaar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 130, "favorite_count": 1, "accepted_answer_id": 58567954, "answer_count": 1, "score": 2, "last_activity_date": 1591873499, "creation_date": 1572054654, "question_id": 58567431, "link": "https://stackoverflow.com/questions/58567431/is-it-possible-to-create-a-wrapper-around-an-mut-that-acts-like-an-mut", "title": "Is it possible to create a wrapper around an &amp;mut that acts like an &amp;mut", "body": "<p>The following code fails to compile because MutRef is not <code>Copy</code>. It can not be made copy because <code>&amp;'a mut i32</code> is not Copy. Is there any way give MutRef similar semantics to <code>&amp;'a mut i32</code>?</p>\n\n<p>The motivation for this is being able to package up a large set of function parameters into a struct so that they can be passed as a group instead of needing to be passed individually.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct MutRef&lt;'a&gt; {\n    v: &amp;'a mut i32\n}\n\nfn wrapper_use(s: MutRef) {\n}\n\nfn raw_use(s: &amp;mut i32) {\n}\n\nfn raw_ref() {\n    let mut s: i32 = 9;\n    let q = &amp;mut s;\n    raw_use(q);\n    raw_use(q);\n\n}\n\nfn wrapper() {\n    let mut s: i32 = 9;\n    let q = MutRef{ v: &amp;mut s };\n    wrapper_use(q);\n    wrapper_use(q);\n}\n</code></pre>\n"}, {"tags": ["casting", "rust", "floating-point", "type-conversion"], "comments": [{"owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "edited": false, "score": 0, "creation_date": 1572049616, "post_id": 58567077, "comment_id": 103452341, "body": "Does the input have a trailing newline? You may need to strip that out."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1572050114, "post_id": 58567077, "comment_id": 103452401, "body": "&quot;Is there a good way to prevent the panic?&quot; don&#39;t call method that can panic ? <code>unwrap()</code> is not a good thing to use in a real program."}], "answers": [{"tags": [], "owner": {"reputation": 350, "user_id": 7471004, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/da100e0f41655a2a27967c91f34ab332?s=128&d=identicon&r=PG&f=1", "display_name": "Jeff Muizelaar", "link": "https://stackoverflow.com/users/7471004/jeff-muizelaar"}, "is_accepted": true, "score": 4, "last_activity_date": 1572055006, "creation_date": 1572055006, "answer_id": 58567455, "question_id": 58567077, "link": "https://stackoverflow.com/questions/58567077/cant-parse-string-from-stdin-to-floating-point-rust/58567455#58567455", "title": "Can&#39;t parse String from stdin to floating-point - Rust", "body": "<p>As suggested by SCappella the new line needs to be removed.\nThe following will work:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let user_input: f64 = s.trim().parse().unwrap();\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 169, "user_id": 5083635, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/y7eLk.jpg?s=128&g=1", "display_name": "Joseph", "link": "https://stackoverflow.com/users/5083635/joseph"}, "is_accepted": false, "score": 0, "last_activity_date": 1572115145, "creation_date": 1572115145, "answer_id": 58573631, "question_id": 58567077, "link": "https://stackoverflow.com/questions/58567077/cant-parse-string-from-stdin-to-floating-point-rust/58573631#58573631", "title": "Can&#39;t parse String from stdin to floating-point - Rust", "body": "<p>Much thanks to Jeff Muizelaar and SCappella!</p>\n\n<p>SCappella pointed out that there is a newline character causing the type conversion to fail, and Jeff Muizelaar pointed out that adding a trim() method to the String, \"s,\" would remove the newline, resolving the issue.</p>\n\n<p>After realizing that was the issue, I was able to do some more accurate Googling and found <a href=\"https://doc.rust-lang.org/std/io/trait.BufRead.html#method.read_line\" rel=\"nofollow noreferrer\">this bit of Rust documentation</a>. It explains that the read_line() method </p>\n\n<blockquote>\n  <p>\"read[s] all bytes until a newline (the 0xA byte) is reached...Once found, all\n  bytes up to, <strong>and including</strong>, the delimiter (if found) will be\n  appended...\"</p>\n</blockquote>\n"}], "owner": {"reputation": 169, "user_id": 5083635, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/y7eLk.jpg?s=128&g=1", "display_name": "Joseph", "link": "https://stackoverflow.com/users/5083635/joseph"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 559, "favorite_count": 0, "closed_date": 1612990149, "accepted_answer_id": 58567455, "answer_count": 2, "score": 2, "last_activity_date": 1612990179, "creation_date": 1572049226, "question_id": 58567077, "link": "https://stackoverflow.com/questions/58567077/cant-parse-string-from-stdin-to-floating-point-rust", "closed_reason": "Duplicate", "title": "Can&#39;t parse String from stdin to floating-point - Rust", "body": "<p>When parsing a String type value to a floating-point type value in Rust, everything works fine with<br /><code>\"let pi: f64 = 3.14\".parse().unwrap();</code>.</p>\n\n<p>However, when parsing a String type value that comes from standard input, even if it's the exact same value, the program panics and throws:</p>\n\n<blockquote>\n  <p>thread 'main' panicked at 'called <code>Result::unwrap()</code> on an <code>Err</code>\n  value: ParseFloatError { kind: Invalid }', src/libcore/result.rs:999:5\n  note: run with <code>RUST_BACKTRACE=1</code> environment variable to display a\n  backtrace.</p>\n</blockquote>\n\n<p>I checked the value's type, and it <em>is</em> a String, so I don't understand what the error is about, and I haven't been able to find anything related specifically to standard input (stdin) and this issue. Has anyone else come across this? Is there a good way to prevent the panic?</p>\n\n<p>Here is some code to replicate the issue:</p>\n\n<pre><code>use std::io::{stdin,stdout,Write};\n\nfn main() {\n    let mut s = String::new();\n\n    println!(\"Give a number \");\n\n    stdin().read_line(&amp;mut s)\n        .expect(\"Did not enter a correct string\");\n\n    let user_input: f64 = s.parse().unwrap();\n\n    println!(\"{:?}\", user_input)\n}\n</code></pre>\n\n<p>Thanks in advance!</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 13, "user_id": 12276222, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-kbBj4uFKqSw/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rfgJrHzZINZ0bioTpASfaUAHHyVUA/photo.jpg?sz=128", "display_name": "David Fogelson", "link": "https://stackoverflow.com/users/12276222/david-fogelson"}, "edited": false, "score": 0, "creation_date": 1572207807, "post_id": 58569433, "comment_id": 103480497, "body": "Thanks, changing that worked, I didn&#39;t think to look into the re-exports. I was using the IDE to get the type returned by the instantiation, which shows the private types instead of the public alias."}], "tags": [], "owner": {"reputation": 84, "user_id": 12277291, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/a-/AAuE7mCt0nYtmG6ri6EXsV4UeB9VMvDJ8DuEdRwNYlPw=k-s128", "display_name": "Entcraft44", "link": "https://stackoverflow.com/users/12277291/entcraft44"}, "is_accepted": true, "score": 0, "last_activity_date": 1572080567, "creation_date": 1572080567, "answer_id": 58569433, "question_id": 58566737, "link": "https://stackoverflow.com/questions/58566737/defining-a-struct-member-with-private-module-types/58569433#58569433", "title": "Defining a struct member with private module types", "body": "<p>I'm not sure what you want to do, but you can use the public re-export <code>hyper_rustls::HttpsConnector</code> instead of the private <code>hyper_rustls::connector::HttpsConnector</code> and the public re-export <code>hyper::client::HttpConnector</code> instead of the private <code>hyper::client::connect::http::HttpConnector</code>.\nYou can read about re-exports here: <a href=\"https://doc.rust-lang.org/book/ch07-04-bringing-paths-into-scope-with-the-use-keyword.html#re-exporting-names-with-pub-use\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/book/ch07-04-bringing-paths-into-scope-with-the-use-keyword.html#re-exporting-names-with-pub-use</a></p>\n"}], "owner": {"reputation": 13, "user_id": 12276222, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-kbBj4uFKqSw/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rfgJrHzZINZ0bioTpASfaUAHHyVUA/photo.jpg?sz=128", "display_name": "David Fogelson", "link": "https://stackoverflow.com/users/12276222/david-fogelson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 176, "favorite_count": 0, "accepted_answer_id": 58569433, "answer_count": 1, "score": 0, "last_activity_date": 1572080567, "creation_date": 1572045155, "question_id": 58566737, "link": "https://stackoverflow.com/questions/58566737/defining-a-struct-member-with-private-module-types", "title": "Defining a struct member with private module types", "body": "<p>I've been using a bunch of modules that have a build() function which returns a struct. However, when I try to create my own \"super\" struct to bundle them together, I run into the error <code>module `xxx` is private  rustc(E0603)</code>. If there is a trait I can pass the individual variable as a parameter but cannot figure out how to define/box it up for a struct.</p>\n\n<p>The current example of this I'm hitting is when creating a hyper client. </p>\n\n<pre><code>// Error due to privacy and cannot use the trait to define the member type\n// Both the \"hyper_rustls::connector\" and \"hyper::client::connect::http\" modules are private.\nstruct SecureClient {\n    client: hyper::client::Client&lt;\n                hyper_rustls::connector::HttpsConnector&lt;hyper::client::connect::http::HttpConnector&gt;&gt; \n}\n\n// Works, but passing the client everywhere as an individual variable is not realistic.\nfn use_client(client: hyper::client::Client&lt;impl hyper::client::connect::Connect&gt;) -&gt; () {\n    ()\n}\n\nlet https_conn = hyper_rustls::HttpsConnector::new(4);\nlet client: hyper::client::Client&lt;_, hyper::Body&gt; = hyper::Client::builder().build(https_conn);\n</code></pre>\n\n<p>Being newish to Rust, I'm struggling to figure out what the proper jargon is for what I'm trying to do, let alone make it work. Links to any docs or code examples about this would be appreciated.</p>\n\n<p>Thanks</p>\n"}, {"tags": ["rust", "formatting", "number-formatting"], "answers": [{"tags": [], "owner": {"reputation": 66560, "user_id": 9072753, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EPmGy.jpg?s=128&g=1", "display_name": "KamilCuk", "link": "https://stackoverflow.com/users/9072753/kamilcuk"}, "is_accepted": false, "score": 1, "last_activity_date": 1572035431, "last_edit_date": 1572035431, "creation_date": 1572035079, "answer_id": 58565298, "question_id": 58565226, "link": "https://stackoverflow.com/questions/58565226/is-there-a-way-to-right-justify-a-hexadecimal-number-with-0x-in-rust/58565298#58565298", "title": "Is there a way to right justify a hexadecimal number with &quot;0x&quot; in Rust?", "body": "<pre><code>println!(\"Base: {:&gt;#10x}, length: {}\", 0x40, 900);\n</code></pre>\n\n<p>You need to put the <code>#</code> before the width to set the alternate form. See the <a href=\"https://doc.rust-lang.org/std/fmt/#syntax\" rel=\"nofollow noreferrer\"><code>std::fmt</code> syntax</a> for an explanation of formatting.</p>\n\n<p>With <code>width</code> passed as an argument, that would be:</p>\n\n<pre><code>println!(\"Base: {:&gt;#width$x}, length: {}\", 67106, 301, width=10);\n</code></pre>\n"}], "owner": {"reputation": 4815, "user_id": 5464, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/fcfb92ad2a467a95166bb464e584bd34?s=128&d=identicon&r=PG", "display_name": "Brad", "link": "https://stackoverflow.com/users/5464/brad"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 119, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1572035431, "creation_date": 1572034682, "last_edit_date": 1572034866, "question_id": 58565226, "link": "https://stackoverflow.com/questions/58565226/is-there-a-way-to-right-justify-a-hexadecimal-number-with-0x-in-rust", "title": "Is there a way to right justify a hexadecimal number with &quot;0x&quot; in Rust?", "body": "<p>I'm trying to print something like this with Rust:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Base:       0x40, length: 900\nBase:     0x5500, length: 301\n</code></pre>\n\n<p>Right now I have:</p>\n\n<pre><code>println!(\"Base: {:&gt;width$x}, length: {}\", 67106, 54, width=10);\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>Base:      10622, length: 54\n</code></pre>\n\n<p>Is there a way to get Rust to include the \"0x\" prefix? These two don't compile:</p>\n\n<pre><code>println!(\"Base: {:&gt;width#$x}, length: {}\", 67106, 54, width=10);\nprintln!(\"Base: {:&gt;width$#x}, length: {}\", 67106, 54, width=10);\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: invalid format string: expected `'}'`, found `'#'`\n --&gt; src/main.rs:2:29\n  |\n2 |     println!(\"Base: {:&gt;width#$x}, length: {}\", 67106, 54, width=10);\n  |                     -       ^ expected `}` in format string\n  |                     |\n  |                     because of this opening brace\n  |\n  = note: if you intended to print `{`, you can escape it using `{{`\n\nerror: invalid format string: expected `'}'`, found `'#'`\n --&gt; src/main.rs:3:30\n  |\n3 |     println!(\"Base: {:&gt;width$#x}, length: {}\", 67106, 54, width=10);\n  |                     -        ^ expected `}` in format string\n  |                     |\n  |                     because of this opening brace\n  |\n  = note: if you intended to print `{`, you can escape it using `{{`\n</code></pre>\n\n<p>The best I have is:</p>\n\n<pre><code>println!(\"Base: 0x{:0&gt;8x}, length: {}\", 67106, 54);\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>Base: 0x00010622, length: 54\n</code></pre>\n\n<p>Which is probably fine, but I'm curious if there is a way to do this. Also, I thought maybe this would work, but no such luck:</p>\n\n<pre><code>println!(\"Base: {:&gt;10}, length: {}\", format_args!(\"{:#x}\", 67106), 54);\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>Base: 0x10622, length: 54\n</code></pre>\n"}, {"tags": ["rust", "serde"], "comments": [{"owner": {"reputation": 2012, "user_id": 5987669, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1be176d2b1a1b2a5d648abdb75dc1b15?s=128&d=identicon&r=PG&f=1", "display_name": "Locke", "link": "https://stackoverflow.com/users/5987669/locke"}, "edited": false, "score": 0, "creation_date": 1572031762, "post_id": 58564545, "comment_id": 103447859, "body": "Is that data format required? You might run into issues with determining if a space is continuing a String or separating fields. But on the other hand if you are able to change the formatting, why not use an existing format like CBOR, JSON, or RON?"}, {"owner": {"reputation": 13, "user_id": 9358283, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/286a9f2ac6aa0afaf604b3c340eda1b9?s=128&d=identicon&r=PG&f=1", "display_name": "bhat", "link": "https://stackoverflow.com/users/9358283/bhat"}, "reply_to_user": {"reputation": 2012, "user_id": 5987669, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1be176d2b1a1b2a5d648abdb75dc1b15?s=128&d=identicon&r=PG&f=1", "display_name": "Locke", "link": "https://stackoverflow.com/users/5987669/locke"}, "edited": false, "score": 0, "creation_date": 1572031944, "post_id": 58564545, "comment_id": 103447927, "body": "Yeah it&#39;s required, and it&#39;s probably better to just parse it manually"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1572034598, "post_id": 58564545, "comment_id": 103448903, "body": "The <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=1fa2d598fead8fab9d8c48fe169e4477\" rel=\"nofollow noreferrer\">duplicate applied to your case</a>"}], "owner": {"reputation": 13, "user_id": 9358283, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/286a9f2ac6aa0afaf604b3c340eda1b9?s=128&d=identicon&r=PG&f=1", "display_name": "bhat", "link": "https://stackoverflow.com/users/9358283/bhat"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 190, "favorite_count": 0, "closed_date": 1572034103, "answer_count": 0, "score": 0, "last_activity_date": 1572034111, "creation_date": 1572031272, "last_edit_date": 1572034099, "question_id": 58564545, "link": "https://stackoverflow.com/questions/58564545/how-to-serialize-deserialize-space-separated-string-into-data-struct", "closed_reason": "Duplicate", "title": "How to serialize/deserialize space-separated string into data struct?", "body": "<p>For example, I have a string <code>dog 5 true</code> and want to serialize it into a Rust data struct using serde:</p>\n\n<pre><code>struct Pet {\n    pub name: String,\n    pub age: u32,\n    pub alive: bool,\n}\n</code></pre>\n\n<p>Is it possible? If it is, how to accomplish that with Serde custom deserializer?</p>\n"}, {"tags": ["vector", "rust"], "comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1572031415, "post_id": 58564112, "comment_id": 103447710, "body": "How your <code>Question</code> structs are produced ?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1572031938, "post_id": 58564112, "comment_id": 103447920, "body": "Is it important that <code>v</code> be a <code>Vec&lt;&amp;mut Question&gt;</code> with references to local variables? Why not just <code>Vec&lt;Question&gt;</code>?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1572034721, "post_id": 58564112, "comment_id": 103448945, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/48021408/155423\">How to init a Rust vector with a generator function?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/58564112/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1572036931, "post_id": 58564112, "comment_id": 103449685, "body": "Is something like <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=51b8c9eea25b603a18347691a4c05745\" rel=\"nofollow noreferrer\">this</a> what you&#39;re looking for?"}, {"owner": {"reputation": 23, "user_id": 9761366, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/K5580.jpg?s=128&g=1", "display_name": "mh8", "link": "https://stackoverflow.com/users/9761366/mh8"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1572113170, "post_id": 58564112, "comment_id": 103463148, "body": "@&#214;merErden my <code>Question</code> structs are hardcoded into the program. They contain a question and multiple possible answers and a field that takes a user&#39;s answer. They cannot be created by a function. My example (over)simplified how they look since they contain longer strings than things like <code>&quot;Q1&quot;</code>  @trentcl The structs are hardcoded inside the main loop which is why <code>v</code> is a vector of references to the questions. Your example program works but I oversimplified my sample code for comprehension&#39;s sake. Image each question has up to 8 String fields filled with blobs of text unique to each."}, {"owner": {"reputation": 23, "user_id": 9761366, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/K5580.jpg?s=128&g=1", "display_name": "mh8", "link": "https://stackoverflow.com/users/9761366/mh8"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1572113626, "post_id": 58564112, "comment_id": 103463246, "body": "@Shepmaster Thank you for pointing towards that post. Using a range might be a solution but I don&#39;t understand how. To be more specific on my problem, I have to create each <code>Question</code> struct myself inside the program because they contain many String fields that only I can fill in. However, the number of structs in the program may vary over time and I&#39;m trying to find a way to store in a variable the total number of structs so that i only have to use that variable as an iterator cap to always load the <code>v</code> vector without having to paste <code>.push(&amp;mut q###)</code> lines"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1572114595, "post_id": 58564112, "comment_id": 103463493, "body": "I don&#39;t understand why you say you need <code>Vec&lt;&amp;mut Question&gt;</code>. This complicates things because <i>some</i>thing has to own the <code>Question</code>s. What&#39;s wrong with just <code>Vec&lt;Question&gt;</code>?"}, {"owner": {"reputation": 23, "user_id": 9761366, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/K5580.jpg?s=128&g=1", "display_name": "mh8", "link": "https://stackoverflow.com/users/9761366/mh8"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1572115419, "post_id": 58564112, "comment_id": 103463667, "body": "Thank you @trentcl you are right. Since all the structs are hardcoded in the program I can include that inside the creation of a <code>Vec&lt;Question&gt;</code> instead of creating mutable structs and then pushing references of them in a Vec&lt;&amp;mut Question&gt;. This eliminates my problem altogether. Sorry I didn&#39;t see that the first time you commented it. I have tested it and it seems to work in a simplified version of my program. If if works on the full version I will mark the question as answered ;)"}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 2, "creation_date": 1572115516, "post_id": 58564112, "comment_id": 103463692, "body": "Maybe you should focus on creating <code>Question</code> structs without hardcoding. You can use json format(load external JSON file or embed as JSON string) then deserialize as <code>Vec&lt;Question&gt;</code>. If you still want to write as hardcoded then you can create your struct with a constructor, you can push the question while it constructs like <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=cc5c3dee3c92ae87dcc11a3418966e84\" rel=\"nofollow noreferrer\">this</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1572117197, "post_id": 58564112, "comment_id": 103464092, "body": "I wrote an answer based on my suggestion so you can accept it if it did answer your question. Glad to help!"}], "answers": [{"tags": [], "owner": {"reputation": 8075, "user_id": 2169853, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/68b89009f4066d3e1adbe72d4329c8d3?s=128&d=identicon&r=PG", "display_name": "Jens", "link": "https://stackoverflow.com/users/2169853/jens"}, "is_accepted": false, "score": 0, "last_activity_date": 1572034394, "last_edit_date": 1572034394, "creation_date": 1572032744, "answer_id": 58564831, "question_id": 58564112, "link": "https://stackoverflow.com/questions/58564112/fill-a-vector-of-struct-elements-by-iteration-rather-than-using-push-one-by-o/58564831#58564831", "title": "Fill a vector of struct elements by iteration rather than using .push() one by one", "body": "<p>If you can generate your <code>Question</code> object with a function you can use an iterator. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=f41c1628e45355ef63689610a347009a\" rel=\"nofollow noreferrer\">Here</a> is an example which just generates numbered <code>Question</code> objects out of a numeric range:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Question {\n    id: usize,\n    question: String,\n}\n\nfn main() {\n    let v: Vec&lt;Question&gt; = (0..10)\n        .map(|x| Question {\n            id: x,\n            question: \"Q\".to_string() + &amp;x.to_string(),\n        })\n        .collect();\n\n    for x in &amp;v {\n        println!(\"{}: {}\", x.id, x.question);\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=7b11d46cf08521f8f13024477bbf0c86\" rel=\"nofollow noreferrer\">Here</a> is an example where you get the strings from an array of strings:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Question&lt;'a&gt; {\n    id: usize,\n    question: &amp;'a str,\n}\n\nconst QUESTIONS: [&amp;str; 3] = [\"A\", \"B\", \"C\"];\n\nfn main() {\n    let v: Vec&lt;Question&gt; = (0..questions.len())\n        .map(|x| Question {\n            id: x,\n            question: questions[x],\n        })\n        .collect();\n\n    for x in &amp;v {\n        println!(\"{}: {}\", x.id, x.question);\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 2, "last_activity_date": 1572117040, "last_edit_date": 1572117040, "creation_date": 1572116896, "answer_id": 58573867, "question_id": 58564112, "link": "https://stackoverflow.com/questions/58564112/fill-a-vector-of-struct-elements-by-iteration-rather-than-using-push-one-by-o/58573867#58573867", "title": "Fill a vector of struct elements by iteration rather than using .push() one by one", "body": "<p>The problem is because you don't have any data structure that contains the <code>Question</code>s -- you just have 100+ independent local variables -- it's not possible to iterate over them to fill the <code>Vec</code>. You can fix this by putting all the <code>Question</code>s in a <code>Vec&lt;Question&gt;</code> as you create them. Here's an example:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut v: Vec&lt;Question&gt; = vec![\n    Question {\n        id: 0,\n        question: String::from(\"Q0\"),\n    },\n    // ...\n    Question {\n        id: 100,\n        question: String::from(\"Q100\"),\n    },\n];\n</code></pre>\n\n<p>In fact, once you do this you probably don't need the <code>Vec&lt;&amp;mut Question&gt;</code> at all, since you can mutate the questions directly by indexing <code>v</code>. However, if you do need the vector of references for some reason, you can create it by collecting an iterator:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let v_refs: Vec&lt;&amp;mut Question&gt; = v.iter_mut().collect();\n</code></pre>\n"}], "owner": {"reputation": 23, "user_id": 9761366, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/K5580.jpg?s=128&g=1", "display_name": "mh8", "link": "https://stackoverflow.com/users/9761366/mh8"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1399, "favorite_count": 0, "accepted_answer_id": 58573867, "answer_count": 2, "score": 1, "last_activity_date": 1572117040, "creation_date": 1572029148, "last_edit_date": 1572114612, "question_id": 58564112, "link": "https://stackoverflow.com/questions/58564112/fill-a-vector-of-struct-elements-by-iteration-rather-than-using-push-one-by-o", "title": "Fill a vector of struct elements by iteration rather than using .push() one by one", "body": "<p>I am trying to find an elegant way to fill a vector of struct elements with a loop or logic instead of writing one <code>.push()</code> for every element I create.</p>\n\n<p>The <code>struct</code> element is a question with many more fields than in the following example and the instances need to be mutable because they are modified by user input :</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Question {\n    id: usize,\n    question: String,\n}\n\nfn main() {\n    //A large and growing list of questions\n    let mut q0 = Question {\n        id: 0,\n        question: String::from(\"A field I fill in manually\"),\n    };\n    //  .\n    //  .\n    //  .\n    let mut q100 = Question {\n        id: 100,\n        question: String::from(\"Another field, each one is different\"),\n    };\n\n    let total_questions: usize = 100;\n\n    let mut w: Vec&lt;String&gt; = Vec::new();\n    for a in 0..total_questions {\n        let s = format!(\"q{}\", a);\n        w.push(s);\n    }\n    //w contains [\"q0\", \"q1\", ..., \"q100\"] but is of type std::string::String\n\n    let mut v: Vec&lt;&amp;mut Question&gt; = Vec::new();\n    //Expects type struct `main::Question`\n\n    //I would like to avoid :\n    v.push(&amp;mut q0);\n    v.push(&amp;mut q1);\n    //  .\n    //  .\n    //  .\n    v.push(&amp;mut q100);\n}\n\n</code></pre>\n\n<p>I am not sure that in my example the <code>w: Vec&lt;String&gt;</code> is of any use.</p>\n\n<p>I have looked into <code>.collect()</code> but could not understand how to utilize it in my case.</p>\n\n<p>I'd be happy to be pointed towards a similar question if this is a duplicate I have not found one.</p>\n\n<p>Edit : I have changed the structs string content as it was misleading. They each contain Strings that are unique and cannot be generated. I also realized that Stack Overflow automatically included this in a <code>some_fn()</code> function when we are actually inside <code>main()</code></p>\n"}, {"tags": ["rust", "reference", "conditional-statements", "default-value"], "comments": [{"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1572012058, "post_id": 58559969, "comment_id": 103439015, "body": "You&#39;re trying to paper over a misunderstanding either in your implementation or in your knowledge of Rust. If you have a method that requires pre-processing of an argument, you should be splitting this up into two calls, and inline the pre-processor, for example. This leaves your &quot;inner&quot; code sane, and leaves the data sanitization to the outside call."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1572012918, "post_id": 58559969, "comment_id": 103439504, "body": "You need to add an appropriately scoped local variable to own the <code>Vec</code> for as long as the reference lives, as in <a href=\"https://stackoverflow.com/q/54222905/3650362\">How do I make format! return a &amp;str from a conditional expression?</a> This is what the compiler is trying to suggest by <code>consider using a `let` binding to create a longer lived value</code>.  <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=962fef993b0eb7138956c2d59ac9aea0\" rel=\"nofollow noreferrer\">Here&#39;s a working version</a>. Does this help?"}, {"owner": {"reputation": 2684, "user_id": 3171100, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/457ebc3fdf64f6b24e968e3d6a1316db?s=128&d=identicon&r=PG", "display_name": "Chris Smith", "link": "https://stackoverflow.com/users/3171100/chris-smith"}, "reply_to_user": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1572012948, "post_id": 58559969, "comment_id": 103439523, "body": "@S&#233;bastienRenauld Ok, well in reality this &quot;function&quot; is a match arm part of a much larger algorithm. Only this arm does this type of sanitization to the outer variables.  Still, though. What if the &quot;outer&quot; code was also only provided a reference? You&#39;d still have the same issue. I don&#39;t feel it&#39;s right to be propagating these values up the call stack to their actual creation when the condition may be dependant on local state."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 3, "creation_date": 1572013058, "post_id": 58559969, "comment_id": 103439592, "body": "I imagine the <code>&amp;Vec</code> was only for the purpose of illustration, but if it&#39;s in your actual code, perhaps you should also read <a href=\"https://stackoverflow.com/questions/40006219/why-is-it-discouraged-to-accept-a-reference-to-a-string-string-vec-vec-o\">Why is it discouraged to accept a reference to a String (&amp;String), Vec (&amp;Vec), or Box (&amp;Box) as a function argument?</a>"}], "answers": [{"tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": true, "score": 7, "last_activity_date": 1576748896, "last_edit_date": 1576748896, "creation_date": 1572012164, "answer_id": 58560084, "question_id": 58559969, "link": "https://stackoverflow.com/questions/58559969/how-can-i-conditionally-provide-a-default-reference-without-performing-unnecessa/58560084#58560084", "title": "How can I conditionally provide a default reference without performing unnecessary computation when it isn&#39;t used?", "body": "<p>You don't have to create the default vector if you don't use it. You just have to ensure the declaration is done outside the <code>if</code> block.</p>\n\n<pre><code>fn accept(input: &amp;Vec&lt;String&gt;) {\n    let def;\n    let vec = if input.is_empty() {\n        def = vec![\"empty\".to_string()];\n        &amp;def\n    } else {\n        input\n    };\n    // ... do something with `vec`\n}\n</code></pre>\n\n<p>Note that you don't have to build a new default vector every time you receive an empty one. You can create it the first time this happens using <a href=\"https://docs.rs/lazy_static/\" rel=\"nofollow noreferrer\">lazy_static</a> or <a href=\"https://docs.rs/once_cell/\" rel=\"nofollow noreferrer\">once_cell</a>:</p>\n\n<pre><code>#[macro_use]\nextern crate lazy_static;\n\nfn accept(input: &amp;[String]) {\n    let vec = if input.is_empty() {\n        lazy_static! {\n            static ref DEFAULT: Vec&lt;String&gt; = vec![\"empty\".to_string()];\n        }\n        &amp;DEFAULT\n    } else {\n        input\n    };\n    // use vec\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 1587, "user_id": 956856, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/64eec6ff41ec4774fa9db39daf8c386b?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner-Hall", "link": "https://stackoverflow.com/users/956856/daniel-wagner-hall"}, "is_accepted": false, "score": 0, "last_activity_date": 1613496888, "last_edit_date": 1613496888, "creation_date": 1572067715, "answer_id": 58568318, "question_id": 58559969, "link": "https://stackoverflow.com/questions/58559969/how-can-i-conditionally-provide-a-default-reference-without-performing-unnecessa/58568318#58568318", "title": "How can I conditionally provide a default reference without performing unnecessary computation when it isn&#39;t used?", "body": "<p>It sounds like you may be looking for <a href=\"https://doc.rust-lang.org/std/borrow/enum.Cow.html\" rel=\"nofollow noreferrer\"><code>std::borrow::Cow</code></a>, depending on how you're going to use it.</p>\n"}], "owner": {"reputation": 2684, "user_id": 3171100, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/457ebc3fdf64f6b24e968e3d6a1316db?s=128&d=identicon&r=PG", "display_name": "Chris Smith", "link": "https://stackoverflow.com/users/3171100/chris-smith"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 154, "favorite_count": 0, "accepted_answer_id": 58560084, "answer_count": 2, "score": 3, "last_activity_date": 1613497415, "creation_date": 1572011790, "last_edit_date": 1613497415, "question_id": 58559969, "link": "https://stackoverflow.com/questions/58559969/how-can-i-conditionally-provide-a-default-reference-without-performing-unnecessa", "title": "How can I conditionally provide a default reference without performing unnecessary computation when it isn&#39;t used?", "body": "<p>I have some variable passed into my function by reference. I don't need to mutate it or transfer ownership, I just look at its contents. If the contents are in some state, I want to replace the value with a default value.</p>\n<p>For instance, my function accepts a <code>&amp;Vec&lt;String&gt;</code> and if the <code>Vec</code> is empty, replace it with <code>vec![&quot;empty&quot;]</code>:</p>\n<pre><code>fn accept(mut vec: &amp;Vec&lt;String&gt;) {\n    if vec.len() == 0 {\n        vec = &amp;vec![&quot;empty&quot;.to_string()];\n    }\n    // ... do something with `vec`, like looping over it\n}\n</code></pre>\n<p>But this gives the error:</p>\n<pre class=\"lang-none prettyprint-override\"><code>error[E0716]: temporary value dropped while borrowed\n --&gt; src/lib.rs:3:16\n  |\n1 | fn accept(mut vec: &amp;Vec&lt;String&gt;) {\n  |                    - let's call the lifetime of this reference `'1`\n2 |     if vec.len() == 0 {\n3 |         vec = &amp;vec![&quot;empty&quot;.to_string()];\n  |         -------^^^^^^^^^^^^^^^^^^^^^^^^^- temporary value is freed at the end of this statement\n  |         |      |\n  |         |      creates a temporary which is freed while still in use\n  |         assignment requires that borrow lasts for `'1````\n</code></pre>\n<p>Preventing the <code>mut</code> results in the same error as the previous example:</p>\n<pre><code>fn accept(input: &amp;Vec&lt;String&gt;) {\n    let vec = if input.len() == 0 {\n        &amp;vec![&quot;empty&quot;.to_string()]\n    } else {\n        input\n    };\n    // ... do something with `vec`, like looping over it\n}\n</code></pre>\n<p>The only solution I've come up with is to extract the default value outside the <code>if</code> and reference the value:</p>\n<pre><code>fn accept(input: &amp;Vec&lt;String&gt;) {\n    let default = vec![&quot;empty&quot;.to_string()];\n    let vec = if input.len() == 0 {\n        &amp;default\n    } else {\n        input\n    };\n    // ... do something with `vec`\n}\n</code></pre>\n<p>This results in less clean code and also <em>unnecessarily doing that computation</em>.</p>\n<p>I know and understand the error... you're borrowing the default value inside the body of the <code>if</code>, but that value you're borrowing from doesn't exist outside the <code>if</code>. That's not my question.</p>\n<p>Is there any cleaner way to write out this pattern?</p>\n<p>I don't believe this is a duplicate of <a href=\"https://stackoverflow.com/questions/32682876/is-there-any-way-to-return-a-reference-to-a-variable-created-in-a-function\">Is there any way to return a reference to a variable created in a function?</a> because I have a reference I'd like to use <em>first</em> if possible. I don't want to dereference the reference or <code>clone()</code> it because <em>that would perform unnecessary computation</em>.</p>\n<p>Can I store either a value or a reference in a variable at the same time?</p>\n"}, {"tags": ["json", "rust", "handlebars.js"], "comments": [{"owner": {"reputation": 4491, "user_id": 1264974, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/6558cf06df3ccf1c49329f38fd843b7d?s=128&d=identicon&r=PG", "display_name": "justinas", "link": "https://stackoverflow.com/users/1264974/justinas"}, "edited": false, "score": 0, "creation_date": 1571988701, "post_id": 58553796, "comment_id": 103427792, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/43079077/proper-way-to-return-a-new-string-in-rust\">Proper way to return a new string in Rust</a>"}, {"owner": {"reputation": 4881, "user_id": 140823, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/f3dc06f587d1ff4c7366b102bfda9204?s=128&d=identicon&r=PG", "display_name": "monch1962", "link": "https://stackoverflow.com/users/140823/monch1962"}, "reply_to_user": {"reputation": 4491, "user_id": 1264974, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/6558cf06df3ccf1c49329f38fd843b7d?s=128&d=identicon&r=PG", "display_name": "justinas", "link": "https://stackoverflow.com/users/1264974/justinas"}, "edited": false, "score": 0, "creation_date": 1571989910, "post_id": 58553796, "comment_id": 103428299, "body": "Thanks @justinas for helping out this newby... From what I can see in your link, I need to return a (long lived) String. That makes sense, but I&#39;m using a macro function call (handlebars_helper!) so I don&#39;t think I can allocate a String::new() inside the macro"}, {"owner": {"reputation": 4491, "user_id": 1264974, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/6558cf06df3ccf1c49329f38fd843b7d?s=128&d=identicon&r=PG", "display_name": "justinas", "link": "https://stackoverflow.com/users/1264974/justinas"}, "edited": false, "score": 0, "creation_date": 1571993027, "post_id": 58553796, "comment_id": 103429668, "body": "Having looked at the <a href=\"https://docs.rs/handlebars/1.1.0/src/handlebars/macros.rs.html#24-73\" rel=\"nofollow noreferrer\">source of handlebars_helper</a> all it does with your <code>if .. else .. {}</code> is bind it to variable and then return it. All of this happens inside the body of a function generated by the macro. So you should absolutely be able to allocate."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 1, "creation_date": 1572005254, "post_id": 58553796, "comment_id": 103435534, "body": "The only point is you need to allocate in both branches of the <code>if</code>, so you also need to change <code>&quot;{}&quot;</code> into <code>&quot;{}&quot;.into()</code>"}], "answers": [{"comments": [{"owner": {"reputation": 4881, "user_id": 140823, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/f3dc06f587d1ff4c7366b102bfda9204?s=128&d=identicon&r=PG", "display_name": "monch1962", "link": "https://stackoverflow.com/users/140823/monch1962"}, "edited": false, "score": 0, "creation_date": 1572655151, "post_id": 58653493, "comment_id": 103637565, "body": "Thanks @Kornel - this led me to my eventual solution"}], "tags": [], "owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "is_accepted": true, "score": 1, "last_activity_date": 1572576231, "creation_date": 1572576231, "answer_id": 58653493, "question_id": 58553796, "link": "https://stackoverflow.com/questions/58553796/in-rust-how-can-i-get-handlebars-helper-to-handle-a-json-object/58653493#58653493", "title": "In Rust, how can I get handlebars_helper! to handle a JSON object", "body": "<p>Code like:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>{\n   let s = something;\n   &amp;s\n}\n</code></pre>\n\n<p>is almost always a mistake in Rust. References always borrow from something, and references can't exist after that thing is destroyed. Local variables are destroyed at the end of their scope.</p>\n\n<p>So what this means is:</p>\n\n<ol>\n<li>Make <code>s</code></li>\n<li>Borrow from <code>s</code></li>\n<li>Destroy <code>s</code> and its content</li>\n<li>Return a reference to that thing, which has just been destroyed</li>\n</ol>\n\n<p>So you need to pass ownership:</p>\n\n<pre><code>{\n   let s = something;\n   s // not borrowed!\n}\n</code></pre>\n\n<p>or ensure that <code>s</code> isn't destroyed to soon by moving <code>let</code> to a scope level up:</p>\n\n<pre><code>let s;\n{\n   s = something;\n   &amp;s\n   // `s` isn't destroyed here, because `let s` was outside `{}`\n}\n// `s` and `&amp;s` are destroyed now\n</code></pre>\n\n<p>If you mix it with string literals in <code>if/else</code>, Rust will complain that <code>String</code> and <code>&amp;str</code> are different. Use <code>String::from(\"\")</code> for the literal, or see <code>Cow</code> type that holds both. Rust needs to know which strings to free (<code>String</code>) and which it must never free (<code>&amp;str</code>), that's why there are two types.</p>\n"}, {"tags": [], "owner": {"reputation": 4881, "user_id": 140823, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/f3dc06f587d1ff4c7366b102bfda9204?s=128&d=identicon&r=PG", "display_name": "monch1962", "link": "https://stackoverflow.com/users/140823/monch1962"}, "is_accepted": false, "score": 0, "last_activity_date": 1572655097, "creation_date": 1572655097, "answer_id": 58667327, "question_id": 58553796, "link": "https://stackoverflow.com/questions/58553796/in-rust-how-can-i-get-handlebars-helper-to-handle-a-json-object/58667327#58667327", "title": "In Rust, how can I get handlebars_helper! to handle a JSON object", "body": "<p>Just to wrap this up, I eventually got it working as follows:</p>\n\n<pre><code>handlebars_helper!(toJSON: |json_obj_or_none: object|\nif json_obj_or_none.is_empty() {\n    \"{}\".into()\n} else {\n    let s = serde_json::to_string_pretty(&amp;json_obj_or_none).unwrap_or_else(|_| \"{}\".to_string());\n    s\n});\n</code></pre>\n"}], "owner": {"reputation": 4881, "user_id": 140823, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/f3dc06f587d1ff4c7366b102bfda9204?s=128&d=identicon&r=PG", "display_name": "monch1962", "link": "https://stackoverflow.com/users/140823/monch1962"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 134, "favorite_count": 0, "accepted_answer_id": 58653493, "answer_count": 2, "score": 0, "last_activity_date": 1572655097, "creation_date": 1571987267, "last_edit_date": 1571987696, "question_id": 58553796, "link": "https://stackoverflow.com/questions/58553796/in-rust-how-can-i-get-handlebars-helper-to-handle-a-json-object", "title": "In Rust, how can I get handlebars_helper! to handle a JSON object", "body": "<p>Hopefully this is enough context for the question...</p>\n\n<p>Using Handlebars with Rust, I'm trying to implement a handler to handle this input:</p>\n\n<pre><code> {{toJSON JSON_OBJ_OR_NONE}}\n</code></pre>\n\n<p>where JSON_OBJ_OR_NONE is either a valid fragment of JSON like</p>\n\n<pre><code>{\n   \"abc\": 123,\n   \"def\": [\"g\", \"h\", \"i\"],\n   \"jkl\": {\n     \"m\": 1,\n     \"n\": \"op\"\n   }\n}\n</code></pre>\n\n<p>or nothing (an empty string).</p>\n\n<p>What it should return is either a pretty-printed version of the supplied JSON, or \"{}\" if JSON_OBJ_OR_NONE is empty.</p>\n\n<p>The supplied JSON fragment is completely arbitrary; it could contain any valid JSON, or an empty string. Output should be pretty-printed.</p>\n\n<p>I've tried to implement this in a bunch of different ways, and I'm currently at</p>\n\n<pre><code>handlebars_helper!(toJSON: |json_obj_or_none: str|\nif json_obj_or_none.is_empty() {\n    \"{}\"\n} else {\n    let s = serde_json::to_string_pretty(&amp;json_obj_or_none).is_ok().to_string();\n    &amp;s[..]\n});\n</code></pre>\n\n<p>This looks close, but I'm seeing</p>\n\n<pre><code>error[E0597]: `s` does not live long enough\n   --&gt; src/main.rs:145:10\n    |\n145 |         &amp;s[..]\n    |         -^----\n    |         ||\n    |         |borrowed value does not live long enough\n    |         borrow later used here\n146 |     });\n    |     - `s` dropped here while still borrowed\n</code></pre>\n\n<p>when I compile it</p>\n\n<p>While this seems to be close to a working solution, I suspect there's a much more elegant way of coding it.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1571979791, "post_id": 58552141, "comment_id": 103424985, "body": "<a href=\"https://docs.rs/num/0.2.0/num/cast/trait.ToPrimitive.html#method.to_f64\" rel=\"nofollow noreferrer\">docs.rs/num/0.2.0/num/cast/trait.ToPrimitive.html#method.to_&zwnj;&#8203;f64</a>, but note there is no good reason to do this, you should not mix float precision. You will run to unexpected result"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1571979958, "post_id": 58552141, "comment_id": 103425021, "body": "see: <a href=\"https://stackoverflow.com/q/56348835/7076153\">stackoverflow.com/q/56348835/7076153</a>"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1571980086, "post_id": 58552141, "comment_id": 103425043, "body": "see: <a href=\"https://github.com/rust-lang/rust/issues/62231\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/62231</a>"}], "owner": {"reputation": 379, "user_id": 6676972, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-TotvU8qdfQA/AAAAAAAAAAI/AAAAAAAAABE/-Kg59N1l4D8/photo.jpg?sz=128", "display_name": "\u8042\u5c0f\u6d9b", "link": "https://stackoverflow.com/users/6676972/%e8%81%82%e5%b0%8f%e6%b6%9b"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 62, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1571979737, "creation_date": 1571977138, "last_edit_date": 1571979737, "question_id": 58552141, "link": "https://stackoverflow.com/questions/58552141/problem-when-write-a-set-of-general-math-tool-functions-for-f64-f32-i32-i64-arra", "title": "Problem when write a set of general math tool functions for f64\\f32\\i32\\i64 array", "body": "<p>Now I want to write a set of general math tool functions for f64\\f32\\i32\\i64 array</p>\n\n<p>Some functions are simple to write, such as addition functions\uff1a</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn add_val&lt;T: std::ops::Add&lt;Output=T&gt; + Copy&gt;(val1: &amp;[T; 2], val2: &amp;[T; 2]) -&gt; [T; 2]{\n    [val1[0] + val2[0], val1[1] + val2[1]]\n}\n</code></pre>\n\n<p>But I have encountered some problems when implementing some functions. For example, there is a normalize function:</p>\n\n<pre><code>pub fn normalize(val: &amp;[f64; 2], len: &amp;f64) -&gt; [f64; 2] {\n  let real_length = (val[0] * val[0] + val[1] * val[1]).sqrt();\n  if real_length == 0.0 { // fix: NaN when 0\n    return [val[0], val[1]]\n  } else {\n    let scale = len / real_length;\n    [val[0] * scale, val[1] * scale]\n  }\n}\n</code></pre>\n\n<p>it is easy to understand\uff0cNow I want it to support more data types.</p>\n\n<p>One of my attempts\uff1a</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn normalize&lt;T: std::ops::Add&lt;Output=T&gt; + std::ops::Mul&lt;Output=T&gt; + std::ops::Div&lt;Output=T&gt; + std::convert::From&lt;f32&gt; + std::convert::Into&lt;f32&gt; + Copy + std::cmp::PartialEq&gt;(val: &amp;[T; 2], len: &amp;T) -&gt; [T; 2] {\n    let pow_num: f32 = (val[0] * val[0] + val[1] * val[1]).into();\n    let real_length: f32 = (pow_num).sqrt();\n    if real_length == 0.0 { // fix: \u4e0d\u7279\u5224 0 \u53ef\u80fd\u4f1a\u8fd4\u56de NaN\n        return [val[0], val[1]]\n    } else {\n        let scale = *len / T::from(real_length);\n        [val[0] * scale, val[1] * scale]\n    }\n}\n</code></pre>\n\n<p>This is an error :</p>\n\n<pre><code>58 |     let c = normalize(&amp;a, &amp;3.0);\n   |             ^^^^^^^^^ the trait `std::convert::From&lt;f64&gt;` is not implemented for `f32`\n   |\n   = help: the following implementations were found:\n             &lt;f32 as std::convert::From&lt;i16&gt;&gt;\n             &lt;f32 as std::convert::From&lt;i8&gt;&gt;\n             &lt;f32 as std::convert::From&lt;u16&gt;&gt;\n             &lt;f32 as std::convert::From&lt;u8&gt;&gt;\n   = note: required because of the requirements on\n</code></pre>\n\n<p>The <a href=\"https://users.rust-lang.org/t/why-is-i32-from-f-not-allowed-but-f-as-i32-is/28151/4\" rel=\"nofollow noreferrer\">reason</a> for this error</p>\n\n<p>I also try to use <code>as</code> But was told that as can only be used in the primitive type\u3002</p>\n\n<p>I found that Primitive trait <a href=\"https://stackoverflow.com/questions/30044026/what-happened-to-stdnumprimitive\">has been removed</a> so I don't know how to qualify...</p>\n\n<p>If you have good ideas I hope you can share with me, thank you very much.</p>\n"}, {"tags": ["string", "rust", "escaping"], "comments": [{"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1571968982, "post_id": 58551211, "comment_id": 103423144, "body": "Should every backslash + some character in the string be replaced with that character, or do different escape sequences mean different things? (Or, if you\u2019d like to answer something that addresses a lot of potential questions at once: where did you get the string/which format is it in?)"}, {"owner": {"reputation": 139, "user_id": 10798480, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/87dc3efd17e54a8da800585ac7725654?s=128&d=identicon&r=PG&f=1", "display_name": "kkeey", "link": "https://stackoverflow.com/users/10798480/kkeey"}, "reply_to_user": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1571970106, "post_id": 58551211, "comment_id": 103423333, "body": "@Ry- Same meaning as in Rust&#39;s own strings, i.e. <code>&quot;\\n&quot;</code> gives a newline character, etc."}], "answers": [{"comments": [{"owner": {"reputation": 139, "user_id": 10798480, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/87dc3efd17e54a8da800585ac7725654?s=128&d=identicon&r=PG&f=1", "display_name": "kkeey", "link": "https://stackoverflow.com/users/10798480/kkeey"}, "edited": false, "score": 0, "creation_date": 1572029217, "post_id": 58555097, "comment_id": 103446855, "body": "No way to get all escaped characters? i.e. <code>\\&quot;</code>, <code>\\`, </code>\\t<code>, </code>\\n`, etc.? Or do we have to manually put them in the match statement? Close enough either way I suppose, but still leaves a bad taste in my mouth."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 139, "user_id": 10798480, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/87dc3efd17e54a8da800585ac7725654?s=128&d=identicon&r=PG&f=1", "display_name": "kkeey", "link": "https://stackoverflow.com/users/10798480/kkeey"}, "edited": false, "score": 1, "creation_date": 1572431466, "post_id": 58555097, "comment_id": 103554568, "body": "@kkeey There&#39;s no reason that would be in the std lib. That&#39;s an information internal to the compiler."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 2, "last_activity_date": 1572432288, "last_edit_date": 1572432288, "creation_date": 1571993005, "answer_id": 58555097, "question_id": 58551211, "link": "https://stackoverflow.com/questions/58551211/how-do-i-interpret-escaped-characters-in-a-string/58555097#58555097", "title": "How do I &quot;interpret&quot; escaped characters in a string?", "body": "<p>I like using iterators in Rust, and I think that's a perfect usecase:</p>\n\n<pre><code>#[derive(Debug, PartialEq)]\nenum MyError {\n    EscapeAtEndOfString,\n    InvalidEscapedChar(char),\n}\n\nstruct InterpretEscapedString&lt;'a&gt; {\n    s: std::str::Chars&lt;'a&gt;,\n}\n\nimpl&lt;'a&gt; Iterator for InterpretEscapedString&lt;'a&gt; {\n    type Item = Result&lt;char, MyError&gt;;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        self.s.next().map(|c| match c {\n            '\\\\' =&gt; match self.s.next() {\n                None =&gt; Err(MyError::EscapeAtEndOfString),\n                Some('n') =&gt; Ok('\\n'),\n                Some('\\\\') =&gt; Ok('\\\\'),\n                // etc.\n                Some(c) =&gt; Err(MyError::InvalidEscapedChar(c)),\n            },\n            c =&gt; Ok(c),\n        })\n    }\n}\n\nfn interpret_escaped_string(s: &amp;str) -&gt; Result&lt;String, MyError&gt; {\n    (InterpretEscapedString { s: s.chars() }).collect()\n}\n\nfn main() {\n    assert_eq!(interpret_escaped_string(r#\"\"#), Ok(\"\".into()));\n    assert_eq!(interpret_escaped_string(r#\"a\"#), Ok(\"a\".into()));\n    assert_eq!(interpret_escaped_string(r#\"\\\"#), Err(MyError::EscapeAtEndOfString));\n    assert_eq!(interpret_escaped_string(r#\"\\\\\"#), Ok(\"\\\\\".into()));\n    assert_eq!(interpret_escaped_string(r#\"a\\n\"#), Ok(\"a\\n\".into()));\n    assert_eq!(interpret_escaped_string(r#\"a\\.\"#), Err(MyError::InvalidEscapedChar('.')));\n}\n</code></pre>\n\n<p>More complete implementation of such a module <a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=434f9de2a5d921e104cae9bd2d8bcdb8\" rel=\"nofollow noreferrer\">in the playground</a>.</p>\n"}], "owner": {"reputation": 139, "user_id": 10798480, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/87dc3efd17e54a8da800585ac7725654?s=128&d=identicon&r=PG&f=1", "display_name": "kkeey", "link": "https://stackoverflow.com/users/10798480/kkeey"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 533, "favorite_count": 0, "accepted_answer_id": 58555097, "answer_count": 1, "score": 2, "last_activity_date": 1572432288, "creation_date": 1571968601, "last_edit_date": 1571993140, "question_id": 58551211, "link": "https://stackoverflow.com/questions/58551211/how-do-i-interpret-escaped-characters-in-a-string", "title": "How do I &quot;interpret&quot; escaped characters in a string?", "body": "<p>I want to process a string containing a backslash followed by an escapable character as if they were one character.</p>\n\n<pre><code>let raw = r#\"\\\"\"#;\nlet cooked = raw.process_escape_character_magic();\n</code></pre>\n\n<p>Right now, <code>raw</code> has 2 characters: <code>\\</code> and <code>\"</code>. But what I actually want is <code>cooked</code>, which only has one character: <code>\"</code>.</p>\n\n<p>How do I get <code>cooked</code>?</p>\n\n<p>I was thinking about using regex, but I feel like there should probably be a better way.</p>\n"}, {"tags": ["string", "rust"], "comments": [{"owner": {"reputation": 229185, "user_id": 251311, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/b6b0ca5d4ef200ec8e3cd1fa2aefd836?s=128&d=identicon&r=PG", "display_name": "zerkms", "link": "https://stackoverflow.com/users/251311/zerkms"}, "edited": false, "score": 0, "creation_date": 1571968148, "post_id": 58551133, "comment_id": 103422989, "body": "It should be <code>.map(|w| {w.matches(ch)})</code>"}, {"owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 0, "creation_date": 1571968236, "post_id": 58551133, "comment_id": 103423007, "body": "Please show the code (and probably the error) in the question itself. The link-only questions, like the link-only answers, are generally discouraged."}, {"owner": {"reputation": 229185, "user_id": 251311, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/b6b0ca5d4ef200ec8e3cd1fa2aefd836?s=128&d=identicon&r=PG", "display_name": "zerkms", "link": "https://stackoverflow.com/users/251311/zerkms"}, "edited": false, "score": 0, "creation_date": 1571968547, "post_id": 58551133, "comment_id": 103423069, "body": "... from the other hand you need <code>filter</code>, not <code>map</code> and <code>str.contains</code>"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1571968628, "post_id": 58551133, "comment_id": 103423084, "body": "Please next time take more time to format your question, read <a href=\"https://stackoverflow.com/questions/how-to-ask\">How to Ask</a>, it&#39;s totally good to have a playground link but always include the code in the question, also don&#39;t forget to use format tool of playground and include the error in the question itself. Also, be more precise, &quot;an external crate to perform parallel iteration&quot;, just put a link to the crate you are using, &quot;that i found in the standard str documentation&quot;, link to the doc."}], "answers": [{"tags": [], "owner": {"reputation": 2427, "user_id": 4983398, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fbc9ed33d775a17d6965fd2efbfe4b52?s=128&d=identicon&r=PG", "display_name": "Gardener", "link": "https://stackoverflow.com/users/4983398/gardener"}, "is_accepted": false, "score": 0, "last_activity_date": 1571976466, "creation_date": 1571976466, "answer_id": 58552065, "question_id": 58551133, "link": "https://stackoverflow.com/questions/58551133/matches-method-of-str-not-found/58552065#58552065", "title": "matches method of str not found", "body": "<p>As suggested by @zerkms, filter() would be a good function to use to solve this.</p>\n\n<p>The filter works on an iterator. split_whitespace() creates the iterator, which can then be passed to filter(). </p>\n\n<pre><code>fn main() {\n    let text =\n        \"Some are born great, some achieve greatness, and some have greatness thrust upon them.\"\n            .to_string();\n    check(text, 's');\n}\n\nfn check(text: String, ch: char) {\n    let words_with_ch: Vec&lt;_&gt; = text\n        .split_whitespace()\n        .filter(|w| w.contains(ch))\n        .collect();\n    println!(\n        \"The following words contain the letter {:?}: {:?}\",\n        ch, words_with_ch\n    );\n}\n</code></pre>\n"}], "owner": {"reputation": 1, "user_id": 12254150, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e36aa9d5dcd41b040c9d47abad222ae5?s=128&d=identicon&r=PG&f=1", "display_name": "damieme", "link": "https://stackoverflow.com/users/12254150/damieme"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 55, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1571976466, "creation_date": 1571967839, "last_edit_date": 1571968403, "question_id": 58551133, "link": "https://stackoverflow.com/questions/58551133/matches-method-of-str-not-found", "title": "matches method of str not found", "body": "<p>I am using <a href=\"https://crates.io/crates/rayon\" rel=\"nofollow noreferrer\">rayon</a> to perform parallel iteration on a text and trying to output strings that contains a particular character. I am using the <a href=\"https://doc.rust-lang.org/std/primitive.str.html#method.matches\" rel=\"nofollow noreferrer\"><code>matches()</code></a>: \n<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ecf30a516803f8968a6da22b34201c6b\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use rayon::prelude::*;\n\nfn main() {\n    let text =\n        \"Some are born great, some achieve greatness, and some have greatness thrust upon them.\"\n            .to_string();\n    check(text, 's');\n}\n\nfn check(text: String, ch: char) {\n    let words: Vec&lt;_&gt; = text.split_whitespace().collect();\n    let words_with_ch: Vec&lt;_&gt; = words.par_iter().map(|ch| words.matches(ch)).collect();\n    println!(\n        \"The following words contain the letter {:?}: {:?}\",\n        ch, words_with_ch\n    );\n}\n</code></pre>\n\n<p>but its showing an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `matches` found for type `std::vec::Vec&lt;&amp;str&gt;` in the current scope\n  --&gt; src/main.rs:12:65\n   |\n12 |     let words_with_ch: Vec&lt;_&gt; = words.par_iter().map(|ch| words.matches(ch)).collect();\n   |                                                                 ^^^^^^^\n</code></pre>\n\n<p>How can I solve this compile error?</p>\n"}, {"tags": ["rust", "iterator", "traits", "dynamic-dispatch"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1571962148, "post_id": 58541495, "comment_id": 103421949, "body": "Have you seen <a href=\"https://github.com/rayon-rs/rayon/issues/628#issuecomment-456921893\" rel=\"nofollow noreferrer\">this comment</a> by Niko? If so, is there anything unclear about it?"}, {"owner": {"reputation": 4605, "user_id": 1067339, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/3479b6831ccaa6263ed5ca7dab3ba972?s=128&d=identicon&r=PG", "display_name": "Qqwy", "link": "https://stackoverflow.com/users/1067339/qqwy"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1571976385, "post_id": 58541495, "comment_id": 103424392, "body": "@LukasKalbertodt Most definitely; see my response two replies down in that thread. I was unable to get the  proposed wrapping to work; possibly because I do not understand well enough how to set it up."}], "owner": {"reputation": 4605, "user_id": 1067339, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/3479b6831ccaa6263ed5ca7dab3ba972?s=128&d=identicon&r=PG", "display_name": "Qqwy", "link": "https://stackoverflow.com/users/1067339/qqwy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 108, "favorite_count": 1, "answer_count": 0, "score": 5, "last_activity_date": 1571920411, "creation_date": 1571920411, "question_id": 58541495, "link": "https://stackoverflow.com/questions/58541495/how-to-wrap-a-non-object-safe-trait-in-an-object-safe-one", "title": "How to wrap a non-object-safe Trait in an object-safe one?", "body": "<p>I originally encountered this issue when attempting to create a Rayon ParallelIterator that a <code>flat_map</code> operation was applied to a dynamic number of times <a href=\"https://github.com/rayon-rs/rayon/issues/628#issuecomment-545091260\" rel=\"noreferrer\">see this post on the Rayon issue tracker</a>.</p>\n\n<p><em>Note: I asked the same question on the Rust User forum as well (<a href=\"https://users.rust-lang.org/t/how-to-wrap-a-non-object-safe-trait-in-an-object-safe-one/33904\" rel=\"noreferrer\">see here</a>), but StackOverflow might be a better venue for this question.</em></p>\n\n<p>For standard (i.e. that execute serially) <code>Iterator</code>s the following works:</p>\n\n<pre><code>fn fancy&lt;Input, Output, Item&gt;(input: Input, depth: usize) -&gt; Output\nwhere\n    Input : IntoIterator&lt;Item = Item&gt;,\n    Output : std::iter::FromIterator&lt;Item&gt;,\n    Item : Copy + std::ops::Add&lt;Output = Item&gt;,\n{\n    let mut iter: Box&lt;dyn Iterator&lt;Item = Item&gt;&gt; = Box::new(input.into_iter());\n    for _ in 0..depth {\n        iter = Box::new(iter.flat_map(|x| vec![x, x + x].into_iter()));\n    }\n    iter.collect()\n}\n</code></pre>\n\n<p>When working with Rayon's <code>ParallelIterator</code>s, however, things get iffy: <code>ParallelIterator</code> requires types that implement it to be <code>Sized</code>, making them non-object safe and thus impossible to pass around as trait object. Thus the following straight translation does not work:</p>\n\n<pre><code>use rayon::prelude::*;\nfn fancy2&lt;Input, Output, Item&gt;(input: Input, depth: usize) -&gt; Output\nwhere\n    Input : IntoParallelIterator&lt;Item = Item&gt;,\n    Output : FromParallelIterator&lt;Item&gt;,\n    Item : Copy + std::ops::Add&lt;Output = Item&gt; + Send,\n{\n    let mut iter: Box&lt;dyn rayon::iter::ParallelIterator&lt;Item = Item&gt;&gt; = Box::new(input.into_par_iter());\n    for _ in 0..depth {\n        iter = Box::new(iter.flat_map(|x| vec![x, x + x].into_par_iter()));\n    }\n    iter.collect()\n}\n</code></pre>\n\n<hr>\n\n<p>My question is: How can we wrap a non-object-safe trait like <code>ParallelIterator</code> in a new trait that is object-safe, so we can e.g. perform a dynamic operation on it like in above example?</p>\n"}, {"tags": ["linux", "windows", "rust", "rust-cargo"], "comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 1, "creation_date": 1571919821, "post_id": 58541276, "comment_id": 103404292, "body": "There are several libraries providing XDG paths like the ones normally relevant for user configuration, for example <a href=\"https://github.com/soc/directories-rs\" rel=\"nofollow noreferrer\">github.com/soc/directories-rs</a>. Is this what you&#39;re looking for ?"}, {"owner": {"reputation": 663, "user_id": 5585130, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qPxXw.png?s=128&g=1", "display_name": "Mario Codes", "link": "https://stackoverflow.com/users/5585130/mario-codes"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1571921037, "post_id": 58541276, "comment_id": 103404895, "body": "If there is no standard place in Rust I would use it, but I would prefer to manage them myself and not depend on another library for it."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 1, "creation_date": 1571921102, "post_id": 58541276, "comment_id": 103404925, "body": "There&#39;s no reason for another standard just because the application is written in Rust. If you don&#39;t want to use a lib, then you just have to read the <code>$XDG_CONFIG_HOME</code> env var. The libraries are mostly useful for fallbacks, windows compatibility, etc."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1571923350, "post_id": 58541276, "comment_id": 103406159, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/1024114/location-of-ini-config-files-in-linux-unix\">Location of ini/config files in linux/unix?</a>"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1571924666, "post_id": 58541276, "comment_id": 103406989, "body": "I added the linux tag as the question is obviously related to this OS. OP feel free to revert if you were looking for an OS independent answer."}, {"owner": {"reputation": 663, "user_id": 5585130, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qPxXw.png?s=128&g=1", "display_name": "Mario Codes", "link": "https://stackoverflow.com/users/5585130/mario-codes"}, "edited": false, "score": 0, "creation_date": 1571924908, "post_id": 58541276, "comment_id": 103407126, "body": "Added also Windows tag as my question was directed towards Linux, but I&#39;d be also interested on the answer for Windows for future reference."}, {"owner": {"reputation": 574, "user_id": 1545888, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/CSfE8.png?s=128&g=1", "display_name": "Sty", "link": "https://stackoverflow.com/users/1545888/sty"}, "edited": false, "score": 0, "creation_date": 1571925063, "post_id": 58541276, "comment_id": 103407219, "body": "If you develop a cross-platform application, you should in all cases consider using libraries like <a href=\"https://crates.io/crates/dirs\" rel=\"nofollow noreferrer\">dirs</a> that platform-independently provide standard folder paths"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1571928063, "post_id": 58541276, "comment_id": 103408926, "body": "See also: <a href=\"https://stackoverflow.com/q/2243895/3650362\">Location to put user configuration files in windows</a>, <a href=\"https://stackoverflow.com/q/2384933/3650362\">Program configuration data in Unix/Linux</a>, <a href=\"https://stackoverflow.com/q/6607/3650362\">Registry vs. INI file for storing user configurable application settings</a>, <a href=\"https://stackoverflow.com/q/882490/3650362\">How to decide where to store per-user state? Registry? AppData? Isolated Storage?</a> As other commenters have observed, choice of language is orthogonal to where config files should go."}], "answers": [{"comments": [{"owner": {"reputation": 574, "user_id": 1545888, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/CSfE8.png?s=128&g=1", "display_name": "Sty", "link": "https://stackoverflow.com/users/1545888/sty"}, "edited": false, "score": 0, "creation_date": 1571924925, "post_id": 58541871, "comment_id": 103407140, "body": "I&#39;d add that this applies even to cargo extensions or cargo-distributed binaries (which are the only ones I would expect to be placed in <code>~.&#47;cargo&#47;bin&#47;</code>). One can compare to how e.g. <a href=\"https://github.com/BurntSushi/ripgrep/blob/master/GUIDE.md#configuration-file\" rel=\"nofollow noreferrer\">ripgrep</a> or <a href=\"https://github.com/rust-lang/rustfmt/blob/master/Configurations.md\" rel=\"nofollow noreferrer\">rustfmt</a> approach this"}], "tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": true, "score": 10, "last_activity_date": 1571925173, "last_edit_date": 1571925173, "creation_date": 1571921700, "answer_id": 58541871, "question_id": 58541276, "link": "https://stackoverflow.com/questions/58541276/where-should-i-save-my-config-files-in-rust/58541871#58541871", "title": "Where should I save my config files in Rust", "body": "<p>There's nothing special for applications written in Rust. Contrary to other solutions coming with a runtime, Rust builds normal applications relying on the standard env and practices. The normal rules of the system apply for configuration locations. </p>\n\n<p>On linux you should first query the <a href=\"https://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html\" rel=\"noreferrer\">XDG</a> paths then use <code>$HOME</code> as fallback when it's not available.</p>\n\n<p>Here's how you can do it:</p>\n\n<pre><code>use std::env::var;\n\nfn main() {\n    let config_home = var(\"XDG_CONFIG_HOME\")\n        .or_else(|_| var(\"HOME\").map(|home|format!(\"{}/.config\", home)));\n    println!(\"{:?}\", config_home);\n}\n</code></pre>\n\n<p>Note that several libraries do this job for you and take care of supporting alternate operating systems.</p>\n\n<p>I won't link to them because they are many of them and they often change but your favourite search engine will direct you to the most popular ones if you search for \"rust configuration directory\".</p>\n"}], "owner": {"reputation": 663, "user_id": 5585130, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qPxXw.png?s=128&g=1", "display_name": "Mario Codes", "link": "https://stackoverflow.com/users/5585130/mario-codes"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 943, "favorite_count": 1, "accepted_answer_id": 58541871, "answer_count": 1, "score": 2, "last_activity_date": 1571925173, "creation_date": 1571919615, "last_edit_date": 1571924831, "question_id": 58541276, "link": "https://stackoverflow.com/questions/58541276/where-should-i-save-my-config-files-in-rust", "title": "Where should I save my config files in Rust", "body": "<p>I need to persist information, such as the user's configuration for my program and their input. Where would the best place be to save this files on Linux and Windows?</p>\n\n<p>This is for a <em>rust-cargo</em> program, which will be installed into <code>~/.cargo/bin</code> for its usage. I have tried to save my files into <code>~/.cargo</code> but I don't know if this is appropiate, as I am new into <em>Rust</em>.</p>\n"}, {"tags": ["json", "parsing", "rust", "serde-json"], "answers": [{"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": true, "score": 0, "last_activity_date": 1571898859, "creation_date": 1571898859, "answer_id": 58535433, "question_id": 58534591, "link": "https://stackoverflow.com/questions/58534591/parsing-json-from-an-api-result/58535433#58535433", "title": "Parsing JSON from an API Result", "body": "<p>Your string as a whole is not valid JSON because it contains more than one object. You can get around it by using a <a href=\"https://docs.serde.rs/serde_json/struct.StreamDeserializer.html\" rel=\"nofollow noreferrer\"><code>StreamDeserializer</code></a> to extract the objects one by one:</p>\n\n<pre><code>for value in Deserializer::from_str (data).into_iter::&lt;Value&gt;() {\n    println!(\"value: {:?}\", value.unwrap());\n}\n</code></pre>\n\n<p><a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=4e588b5b05b42341b8a3185052f1b659\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}], "owner": {"reputation": 3, "user_id": 10616092, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-RUSIwSBPjYc/AAAAAAAAAAI/AAAAAAAAAEs/s6eyKtem2fY/photo.jpg?sz=128", "display_name": "simwilso", "link": "https://stackoverflow.com/users/10616092/simwilso"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 134, "favorite_count": 0, "accepted_answer_id": 58535433, "answer_count": 1, "score": 0, "last_activity_date": 1571898859, "creation_date": 1571894366, "question_id": 58534591, "link": "https://stackoverflow.com/questions/58534591/parsing-json-from-an-api-result", "title": "Parsing JSON from an API Result", "body": "<p>I'm using RUST and Reqwest to call the following Response from an API:</p>\n\n<p>Shell:</p>\n\n<pre><code>Ok(\"{\\\"SETTLEMENTDATE\\\":\\\"2019-10-24T12:50:00Z\\\",\\\"REGIONID\\\":\\\"VIC1\\\",\\\"RRP.DISPATCHPRICE0\\\":68.0464}\\n\"{\\\"SETTLEMENTDATE\\\":\\\"2019-10-24T12:55:00Z\\\",\\\"REGIONID\\\":\\\"VIC1\\\",\\\"RRP.DISPATCHPRICE0\\\":67.4408}\\n\n{\\\"SETTLEMENTDATE\\\":\\\"2019-10-24T13:00:00Z\\\",\\\"REGIONID\\\":\\\"VIC1\\\",\\\"RRP.DISPATCHPRICE0\\\":87.2918}\\n\n{\\\"SETTLEMENTDATE\\\":\\\"2019-10-24T13:05:00Z\\\",\\\"REGIONID\\\":\\\"VIC1\\\",\\\"RRP.DISPATCHPRICE0\\\":98.1406}\\n\n{\\\"SETTLEMENTDATE\\\":\\\"2019-10-24T13:10:00Z\\\",\\\"REGIONID\\\":\\\"VIC1\\\",\\\"RRP.DISPATCHPRICE0\\\":87.4789}\\n\n{\\\"SETTLEMENTDATE\\\":\\\"2019-10-24T13:15:00Z\\\",\\\"REGIONID\\\":\\\"VIC1\\\",\\\"RRP.DISPATCHPRICE0\\\":90.2434}\\n\n{\\\"SETTLEMENTDATE\\\":\\\"2019-10-24T13:20:00Z\\\",\\\"REGIONID\\\":\\\"VIC1\\\",\\\"RRP.DISPATCHPRICE0\\\":89.8617}\\n\n{\\\"SETTLEMENTDATE\\\":\\\"2019-10-24T13:25:00Z\\\",\\\"REGIONID\\\":\\\"VIC1\\\",\\\"RRP.DISPATCHPRICE0\\\":97.2639}\\n\n{\\\"SETTLEMENTDATE\\\":\\\"2019-10-24T13:30:00Z\\\",\\\"REGIONID\\\":\\\"VIC1\\\",\\\"RRP.DISPATCHPRICE0\\\":100.493}\\n\n{\\\"SETTLEMENTDATE\\\":\\\"2019-10-24T13:35:00Z\\\",\\\"REGIONID\\\":\\\"VIC1\\\",\\\"RRP.DISPATCHPRICE0\\\":93.7984}\\n\n{\\\"SETTLEMENTDATE\\\":\\\"2019-10-24T13:40:00Z\\\",\\\"REGIONID\\\":\\\"VIC1\\\",\\\"RRP.DISPATCHPRICE0\\\":85.1182}\\n\n{\\\"SETTLEMENTDATE\\\":\\\"2019-10-24T13:45:00Z\\\",\\\"REGIONID\\\":\\\"VIC1\\\",\\\"RRP.DISPATCHPRICE0\\\":91.4173}\\n\\n\",\n)\n</code></pre>\n\n<p>I want to parse this output and only print the 'RRP.DISPATCHPRICE0' value in the first array (the figure in <strong>BOLD</strong> below) that I recieve from the call:</p>\n\n<p>Ok(\"{\\\"SETTLEMENTDATE\\\":\\\"2019-10-24T12:50:00Z\\\",\\\"REGIONID\\\":\\\"VIC1\\\",\\\"RRP.DISPATCHPRICE0\\\":<strong>68.0464</strong>}\\n\"\n...</p>\n\n<p>I'm still very new to RUST and trying to work out how I should best achieve this.\nCould anyone in the community here help with some recommendations/help.</p>\n\n<p><strong>What have I tried:</strong></p>\n\n<p>I've been working with the following code:</p>\n\n<pre><code>extern crate serde_json;\n\nuse serde_json::Value;\n\nfn main() {\n    let data: Value = serde_json::from_str(\n//          Ok(\n           \"{\\\"SETTLEMENTDATE\\\":\\\"2019-10-24T12:50:00Z\\\",\\\"REGIONID\\\":\\\"VIC1\\\",\\\"RRP.DISPATCHPRICE0\\\":68.0464}\\n\"\n//           {\\\"SETTLEMENTDATE\\\":\\\"2019-10-24T12:55:00Z\\\",\\\"REGIONID\\\":\\\"VIC1\\\",\\\"RRP.DISPATCHPRICE0\\\":67.4408}\\n\n//            {\\\"SETTLEMENTDATE\\\":\\\"2019-10-24T13:00:00Z\\\",\\\"REGIONID\\\":\\\"VIC1\\\",\\\"RRP.DISPATCHPRICE0\\\":87.2918}\\n\n//            {\\\"SETTLEMENTDATE\\\":\\\"2019-10-24T13:05:00Z\\\",\\\"REGIONID\\\":\\\"VIC1\\\",\\\"RRP.DISPATCHPRICE0\\\":98.1406}\\n\n//            {\\\"SETTLEMENTDATE\\\":\\\"2019-10-24T13:10:00Z\\\",\\\"REGIONID\\\":\\\"VIC1\\\",\\\"RRP.DISPATCHPRICE0\\\":87.4789}\\n\n//            {\\\"SETTLEMENTDATE\\\":\\\"2019-10-24T13:15:00Z\\\",\\\"REGIONID\\\":\\\"VIC1\\\",\\\"RRP.DISPATCHPRICE0\\\":90.2434}\\n\n//            {\\\"SETTLEMENTDATE\\\":\\\"2019-10-24T13:20:00Z\\\",\\\"REGIONID\\\":\\\"VIC1\\\",\\\"RRP.DISPATCHPRICE0\\\":89.8617}\\n\n//            {\\\"SETTLEMENTDATE\\\":\\\"2019-10-24T13:25:00Z\\\",\\\"REGIONID\\\":\\\"VIC1\\\",\\\"RRP.DISPATCHPRICE0\\\":97.2639}\\n\n//            {\\\"SETTLEMENTDATE\\\":\\\"2019-10-24T13:30:00Z\\\",\\\"REGIONID\\\":\\\"VIC1\\\",\\\"RRP.DISPATCHPRICE0\\\":100.493}\\n\n//            {\\\"SETTLEMENTDATE\\\":\\\"2019-10-24T13:35:00Z\\\",\\\"REGIONID\\\":\\\"VIC1\\\",\\\"RRP.DISPATCHPRICE0\\\":93.7984}\\n\n//            {\\\"SETTLEMENTDATE\\\":\\\"2019-10-24T13:40:00Z\\\",\\\"REGIONID\\\":\\\"VIC1\\\",\\\"RRP.DISPATCHPRICE0\\\":85.1182}\\n\n//            {\\\"SETTLEMENTDATE\\\":\\\"2019-10-24T13:45:00Z\\\",\\\"REGIONID\\\":\\\"VIC1\\\",\\\"RRP.DISPATCHPRICE0\\\":91.4173}\\n\\n\",\n//            )\n    )\n    .unwrap();\n\n\n\n    println!(\"data: {:?}\", data);\n    let obj = data.as_object().unwrap();\n    let RRP = obj.get(\"RRP.DISPATCHPRICE0\").unwrap();\n\n    println!(\"Value: {}\", RRP);\n}\n</code></pre>\n\n<p>The above prints out the Number I want and works nicely but I can't get it to work when I comment in the rest of the 'Response'.</p>\n\n<p>Please help! :)</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 1058, "user_id": 2797757, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/4db8a84f0f567cc5df66a9a480ce5b08?s=128&d=identicon&r=PG&f=1", "display_name": "hydradon", "link": "https://stackoverflow.com/users/2797757/hydradon"}, "edited": false, "score": 0, "creation_date": 1571933876, "post_id": 58535646, "comment_id": 103411957, "body": "i got this error in my IDE <code>T cannot be sent between threads safely</code>. It underlies at <code>spawn</code>. Additional message: <code>help: within [T], the trait std::marker::Send is not implemented for T help: consider adding a where T: std::marker::Send bound</code>"}, {"owner": {"reputation": 1058, "user_id": 2797757, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/4db8a84f0f567cc5df66a9a480ce5b08?s=128&d=identicon&r=PG&f=1", "display_name": "hydradon", "link": "https://stackoverflow.com/users/2797757/hydradon"}, "edited": false, "score": 0, "creation_date": 1571938880, "post_id": 58535646, "comment_id": 103414128, "body": "how do I use it with generic type array?"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "reply_to_user": {"reputation": 1058, "user_id": 2797757, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/4db8a84f0f567cc5df66a9a480ce5b08?s=128&d=identicon&r=PG&f=1", "display_name": "hydradon", "link": "https://stackoverflow.com/users/2797757/hydradon"}, "edited": false, "score": 1, "creation_date": 1571983898, "post_id": 58535646, "comment_id": 103425952, "body": "Do what the error message suggests: add <code>where T: std::marker::Send</code> to your generic declaration."}], "tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": true, "score": 2, "last_activity_date": 1571911518, "last_edit_date": 1571911518, "creation_date": 1571899647, "answer_id": 58535646, "question_id": 58533740, "link": "https://stackoverflow.com/questions/58533740/parallel-iterating-and-processing-a-tuples-fields/58535646#58535646", "title": "Parallel iterating and processing a tuple&#39;s fields", "body": "<p>The easiest way to do it is probably not to use <code>par_iter</code>, but instead to call <a href=\"https://docs.rs/rayon/1.2.0/rayon/fn.spawn.html\" rel=\"nofollow noreferrer\"><code>spawn</code></a> twice, possibly inside a <a href=\"https://docs.rs/rayon/1.2.0/rayon/fn.scope.html\" rel=\"nofollow noreferrer\"><code>scope</code></a>:</p>\n\n<pre><code>fn doit(v: &amp;mut [i32]) {\n    for x in v.iter_mut() {\n        *x *= 2;\n    }\n}\n\nfn main() {\n    let mut data = vec![1, 2, 3, 4];\n    rayon::scope(|s| {\n        let mid = data.len() / 2;\n        let (a, b) = data.split_at_mut(mid);\n        s.spawn(move |_| doit(a));\n        s.spawn(move |_| doit(b));\n    });\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=9704dcc0f1982a2a08e9faad76877467\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}], "owner": {"reputation": 1058, "user_id": 2797757, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/4db8a84f0f567cc5df66a9a480ce5b08?s=128&d=identicon&r=PG&f=1", "display_name": "hydradon", "link": "https://stackoverflow.com/users/2797757/hydradon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 76, "favorite_count": 0, "accepted_answer_id": 58535646, "answer_count": 1, "score": 0, "last_activity_date": 1593019348, "creation_date": 1571887867, "last_edit_date": 1593019348, "question_id": 58533740, "link": "https://stackoverflow.com/questions/58533740/parallel-iterating-and-processing-a-tuples-fields", "title": "Parallel iterating and processing a tuple&#39;s fields", "body": "<p>The slice method <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.split_at_mut\" rel=\"nofollow noreferrer\"><code>split_at_mut</code></a> returns a tuple of 2 sub-slices. I want to process them in parallel using the <a href=\"https://crates.io/crates/rayon\" rel=\"nofollow noreferrer\">Rayon</a> crate's <code>par_iter()</code> but that iterator does not support tuple iteration.</p>\n<p>I thought of converting the tuple of 2 to a list and then applying <code>par_iter()</code>, but I have not found any syntax to convert a tuple into a slice or vector. So how do I process the tuple in parallel?</p>\n"}]