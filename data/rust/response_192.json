[{"tags": ["rust", "channel"], "answers": [{"comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1536785932, "post_id": 52303269, "comment_id": 91554421, "body": "&quot;there isn&#39;t one&quot; Well, how about <a href=\"https://doc.rust-lang.org/std/sync/mpsc/struct.Receiver.html#method.recv_timeout\" rel=\"nofollow noreferrer\"><code>recv_timeout</code></a>? We don&#39;t need a special syntax or macro if it can be implemented in a library."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1536786179, "post_id": 52303269, "comment_id": 91554501, "body": "@mcarton I think an answer showing that would be useful! I don&#39;t know enough about Go to truly know if Go&#39;s <code>select</code> can be (trivially?) implemented in Rust."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 2, "creation_date": 1536786407, "post_id": 52303269, "comment_id": 91554576, "body": "<code>crossbeam_channel</code> also seems to have something similar to Go&#39;s channel and select. But my knowledge of Go basically stops at <a href=\"https://www.reddit.com/r/gobashing/\" rel=\"nofollow noreferrer\">&quot;lol no generics&quot;</a>."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1536822268, "post_id": 52303269, "comment_id": 91563660, "body": "@mcarton: Then you&#39;ll be pleased to know that for Go 2.0 the Go team is looking into syntactic sugar for error handling and generics :)"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 5, "last_activity_date": 1580413550, "last_edit_date": 1580413550, "creation_date": 1536785326, "answer_id": 52303269, "question_id": 52302371, "link": "https://stackoverflow.com/questions/52302371/what-is-the-equivalent-of-gos-select-case-paradigm-for-channels-in-rust/52303269#52303269", "title": "What is the equivalent of Go&#39;s select case paradigm for channels in Rust?", "body": "<p>For the channels in the standard library, the most useful answer is \"there isn't one\".</p>\n\n<p>The technically correct answer is the <a href=\"https://doc.rust-lang.org/std/macro.select.html\" rel=\"nofollow noreferrer\"><code>select!</code></a> macro:</p>\n\n<pre><code>select! {\n    r = result.recv() =&gt; {\n        // do something\n    }\n    _ = something_that_waits_a_second.recv() =&gt; {\n        // timeout\n    }\n}\n</code></pre>\n\n<p>(Note that this is the equivalent of <a href=\"https://stackoverflow.com/revisions/52302371/2\">OP's original example</a>, before it was drastically changed).</p>\n\n<p>It's unstable, which is why I classify it as not useful.</p>\n\n<p>Beyond the stability of <code>select!</code> there's other concerns. For example, in your Go example, you create something that will magically submit into a channel after some time (<code>time.After(time.Second)</code>). Rust has no always-running runtime to drive these things. That means you would need to spawn an OS-level thread to wait for a while and push a value into the channel to perform that timeout! This is pretty inefficient.</p>\n\n<hr>\n\n<p>If you are really looking for something closer to Go's green threads, I'd advocate looking into futures instead:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use futures::{prelude::*, stream}; // 0.3.1\nuse std::time::Duration;\nuse tokio::time; // 0.2.10\n\nfn example() -&gt; impl Stream&lt;Item = Result&lt;String, &amp;'static str&gt;&gt; {\n    let searches = stream::select(google_search(), bing_search());\n    let deadline = time::delay_for(Duration::from_secs(1)).into_stream();\n\n    stream::select(searches.map(Ok), deadline.map(|_| Err(\"timeout\")))\n}\n\n#[tokio::main]\nasync fn main() {\n    let result = example()\n        .try_for_each(|r| async move {\n            println!(\"Search result: {}\", r);\n            Ok(())\n        })\n        .await;\n\n    if let Err(e) = result {\n        println!(\"Had an error: {}\", e);\n    }\n}\n\nfn google_search() -&gt; impl Stream&lt;Item = String&gt; {\n    let results = (0..10).map(|x| format!(\"goog{}\", x));\n    let results = stream::iter(results);\n\n    // Fake some delay between results\n    let delay = time::interval(Duration::from_millis(75));\n    results.zip(delay).map(|(r, _)| r)\n}\n\nfn bing_search() -&gt; impl Stream&lt;Item = String&gt; {\n    let results = (0..10).map(|x| format!(\"bing{}\", x));\n    let results = stream::iter(results);\n\n    // Fake some delay between results\n    let delay = time::interval(Duration::from_millis(200));\n    results.zip(delay).map(|(r, _)| r)\n}\n</code></pre>\n\n<p>The <code>#[tokio::main]</code> annotation is implicit in every Go program; that's starting an asynchronous reactor and running it \"to completion\".</p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1536788556, "post_id": 52303644, "comment_id": 91555395, "body": "I think that <code>try_recv</code> would need to be stuck in a loop of some sort, trying each channel in turn until one has data. I believe this would cause 100% processor usage."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1536788678, "post_id": 52303644, "comment_id": 91555436, "body": "The <a href=\"https://docs.rs/crossbeam-channel/0.2.5/src/crossbeam_channel/internal/select.rs.html#589-1614\" rel=\"nofollow noreferrer\">implementation of crossbeam&#39;s <code>select</code></a> is wild."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1536789170, "post_id": 52303644, "comment_id": 91555570, "body": "@Shepmaster the <code>try_recv</code> is more about replacing the first use of select in <a href=\"https://gobyexample.com/non-blocking-channel-operations\" rel=\"nofollow noreferrer\">this example</a>. And I expected no less from a macro such as <code>select</code> :D"}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": false, "score": 5, "last_activity_date": 1536788566, "last_edit_date": 1536788566, "creation_date": 1536787275, "answer_id": 52303644, "question_id": 52302371, "link": "https://stackoverflow.com/questions/52302371/what-is-the-equivalent-of-gos-select-case-paradigm-for-channels-in-rust/52303644#52303644", "title": "What is the equivalent of Go&#39;s select case paradigm for channels in Rust?", "body": "<p>If you just want to receive with a timeout, the <a href=\"https://doc.rust-lang.org/std/sync/mpsc/struct.Receiver.html#method.recv_timeout\" rel=\"nofollow noreferrer\"><code>recv_timeout</code></a> method is what you are looking for.</p>\n\n<p>There is also a <a href=\"https://doc.rust-lang.org/std/sync/mpsc/struct.Receiver.html#method.try_recv\" rel=\"nofollow noreferrer\"><code>try_recv</code></a> method, if you want to receive without blocking.</p>\n\n<p>If you want to mix several channels, then <a href=\"https://stackoverflow.com/a/52303269/2733851\">@Shepmaster's answer</a> describes the only way I know of in the standard library.</p>\n\n<p>However Rust's standard library is much more lightweight than Go's, and in Rust it is common to use crates for this kind of thing. The <a href=\"https://crates.io/crates/crossbeam-channel\" rel=\"nofollow noreferrer\"><code>crossbeam_channel</code></a> crate does have a <a href=\"https://docs.rs/crossbeam-channel/0.2.5/crossbeam_channel/#select\" rel=\"nofollow noreferrer\"><code>select</code></a> that is stable and can be used to wait on different channels.</p>\n"}], "owner": {"reputation": 73, "user_id": 8778808, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-K4AKBp0ISFk/AAAAAAAAAAI/AAAAAAAAACg/tYnp9zrXYZE/photo.jpg?sz=128", "display_name": "Kian Ostad", "link": "https://stackoverflow.com/users/8778808/kian-ostad"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 737, "favorite_count": 2, "answer_count": 2, "score": 4, "last_activity_date": 1580413550, "creation_date": 1536781526, "last_edit_date": 1536840320, "question_id": 52302371, "link": "https://stackoverflow.com/questions/52302371/what-is-the-equivalent-of-gos-select-case-paradigm-for-channels-in-rust", "title": "What is the equivalent of Go&#39;s select case paradigm for channels in Rust?", "body": "<p>Is there is a way to use Rust's channels like Go? I couldn't find any.</p>\n\n<p>For those who are not familiar with select  statement in Go (from <a href=\"https://golang.org/ref/spec#Select_statements\" rel=\"nofollow noreferrer\">the documentation</a>):</p>\n\n<blockquote>\n  <p>A \"select\" statement chooses which of a set of possible send or receive operations will proceed. It looks similar to a \"switch\" statement but with the cases all referring to communication operations.\n  A case with a RecvStmt may assign the result of a RecvExpr to one or two variables, which may be declared using a short variable declaration. The RecvExpr must be a (possibly parenthesized) receive operation. There can be at most one default case and it may appear anywhere in the list of cases.</p>\n  \n  <p>Execution of a \"select\" statement proceeds in several steps:</p>\n  \n  <ol>\n  <li>For all the cases in the statement, the channel operands of receive operations and the channel and right-hand-side expressions of send statements are evaluated exactly once, in source order, upon entering the \"select\" statement. The result is a set of channels to receive from or send to, and the corresponding values to send. Any side effects in that evaluation will occur irrespective of which (if any) communication operation is selected to proceed. Expressions on the left-hand side of a RecvStmt with a short variable declaration or assignment are not yet evaluated.</li>\n  <li>If one or more of the communications can proceed, a single one that can proceed is chosen via a uniform pseudo-random selection. Otherwise, if there is a default case, that case is chosen. If there is no default case, the \"select\" statement blocks until at least one of the communications can proceed.</li>\n  <li>Unless the selected case is the default case, the respective communication operation is executed.</li>\n  <li>If the selected case is a RecvStmt with a short variable declaration or an assignment, the left-hand side expressions are evaluated and the received value (or values) are assigned.</li>\n  <li>The statement list of the selected case is executed.</li>\n  </ol>\n  \n  <p>Since communication on nil channels can never proceed, a select with only nil channels and no default case blocks forever.</p>\n</blockquote>\n\n<p>For example, how can I write this in Rust?</p>\n\n<pre class=\"lang-golang prettyprint-override\"><code>func search(ctx context.Context, result chan IResult, q string) error {\n    // googleSearch and bingSearch will return IResult interface channel\n    google := googleSearch(q)\n    bing := bingSearch(q)\n    t := time.After(time.Second)\n\n    for {\n        select {\n           // at any point if caller cancel the operation we return\n           case &lt;- ctx.Done():\n               return nil\n           case r, ok := &lt;- google:\n               if !ok { // check if channel is closed\n                  google = nil\n                  if bing == nil { // we are done\n                     return nil\n                  }\n                  continue\n               }\n               // sending the google search result to result channel. ( channel to channel )\n               result &lt;- r\n           case r, ok := &lt;- bing:\n               if !ok {\n                  bing = nil\n                  if google == nil {\n                     return nil\n                  }\n                  continue\n               }\n               result &lt;- r\n           case &lt;- t:\n               // this function never lives for more then 1 second\n               return fmt.Errorf(\"timeout\")\n        }\n    }\n    return nil\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1536782351, "post_id": 52302346, "comment_id": 91552987, "body": "Have you seen <a href=\"https://stackoverflow.com/q/33461772/155423\">How to idiomatically / efficiently pipe data from Read+Seek to Write?</a>"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1536782556, "post_id": 52302346, "comment_id": 91553061, "body": "What you say don&#39;t make sense, you use read_to_end on the result of your get on yours URLs, that nothing to do with your file."}, {"owner": {"reputation": 51, "user_id": 9327122, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/16ca1b745abf1d052a2349b1c829e836?s=128&d=identicon&r=PG&f=1", "display_name": "k0shinus", "link": "https://stackoverflow.com/users/9327122/k0shinus"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1536783200, "post_id": 52302346, "comment_id": 91553328, "body": "@Shepmaster It doesn&#39;t look like <code>io::copy</code> or <code>io::SeekFrom</code> can work with net files. I am wrong?"}, {"owner": {"reputation": 51, "user_id": 9327122, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/16ca1b745abf1d052a2349b1c829e836?s=128&d=identicon&r=PG&f=1", "display_name": "k0shinus", "link": "https://stackoverflow.com/users/9327122/k0shinus"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1536784047, "post_id": 52302346, "comment_id": 91553672, "body": "@Stargateur But it works almost exactly as i want: i gave the URL&#39;s and got the correct files on my computer."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1536784911, "post_id": 52302346, "comment_id": 91554011, "body": "<i>It doesn&#39;t look like io::copy or io::SeekFrom can work with net files. I am wrong?</i> \u2014 yes, <a href=\"https://play.rust-lang.org/?gist=c97a4bb7c66a03a6f84597bce7e6c033&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">I believe you are wrong</a>."}, {"owner": {"reputation": 51, "user_id": 9327122, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/16ca1b745abf1d052a2349b1c829e836?s=128&d=identicon&r=PG&f=1", "display_name": "k0shinus", "link": "https://stackoverflow.com/users/9327122/k0shinus"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1536845246, "post_id": 52302346, "comment_id": 91576679, "body": "@Shepmaster <code>reqwest::get</code> get the full net file content and then write it in parts with <code>io::copy</code> to file on my machine?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1536845584, "post_id": 52302346, "comment_id": 91576896, "body": "I would expect that it will transfer the file from the remote server in chunks (including OS socket buffers and probably some framework buffers) and write those chunks to a file, yes. For example, if you downloaded a file that was 1 GB, I would not expect more than a few MB of RAM to be used at a time."}], "owner": {"reputation": 51, "user_id": 9327122, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/16ca1b745abf1d052a2349b1c829e836?s=128&d=identicon&r=PG&f=1", "display_name": "k0shinus", "link": "https://stackoverflow.com/users/9327122/k0shinus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 120, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1536784991, "creation_date": 1536781433, "last_edit_date": 1536784991, "question_id": 52302346, "link": "https://stackoverflow.com/questions/52302346/how-can-i-download-a-file-in-parts-using-a-fixed-size-array", "title": "How can I download a file in parts using a fixed-size array?", "body": "<p>I want to download a file from a URL. The code below works fine, but when I replace <code>Vec</code> with <code>[u8; 4 * 1024]</code> and <code>read_to_end</code> with <code>read</code> within the <code>loop</code>, I get infinite reading of the same information. How should I change my code to get the file downloaded in parts using a fixed-size array?</p>\n\n<pre><code>use std::env;\nuse std::fs::{File, OpenOptions};\nuse std::io::{BufRead, BufReader, BufWriter, Read, Result, Write};\n\n//[dependencies]\n//reqwest = \"0.8.0\"\nextern crate reqwest;\n\nfn main() -&gt; Result&lt;()&gt; {\n    // All URL's are stored in file passed as a command line argument\n    let args: Vec&lt;String&gt; = env::args().collect();\n    let fin = File::open(&amp;args[1])?;\n\n    let buf: &amp;mut Vec&lt;u8&gt; = &amp;mut Vec::new();\n    let mut readed: usize;\n    for line in BufReader::new(fin).lines() {\n        let unwrapped = &amp;line.unwrap();\n        let mut options = OpenOptions::new();\n\n        // Create an output file with a name equal to the last domain\n        let fout = options\n            .write(true)\n            .create(true)\n            .open(&amp;unwrapped[unwrapped.rfind('/').unwrap() + 1..])?;\n        let mut writer = BufWriter::new(&amp;fout);\n\n        readed = reqwest::get(unwrapped).unwrap().read_to_end(buf).unwrap();\n        println!(\"{}\", readed); // Just to know how many read\n        writer.write(buf)?;\n\n        // Close the file and clear \"buf\" to ensure that\n        // the subsequent reading is correct\n        writer.flush()?;\n        buf.clear();\n    }\n    Ok(())\n}\n</code></pre>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1536778041, "post_id": 52301531, "comment_id": 91551023, "body": "Have you looked at <a href=\"https://doc.rust-lang.org/cargo/reference/manifest.html#the-workspace-section\" rel=\"nofollow noreferrer\">workspaces</a>?"}, {"owner": {"reputation": 961, "user_id": 5920297, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/80fc64c0293ff9460b4a8f127afdb8b2?s=128&d=identicon&r=PG&f=1", "display_name": "phodina", "link": "https://stackoverflow.com/users/5920297/phodina"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1536933306, "post_id": 52301531, "comment_id": 91613867, "body": "Thanks. That&#39;s exactly what I was looking for."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1536934858, "post_id": 52301531, "comment_id": 91614785, "body": "You should go ahead and self-answer with an example of how it can be used in that case."}], "answers": [{"tags": [], "owner": {"reputation": 961, "user_id": 5920297, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/80fc64c0293ff9460b4a8f127afdb8b2?s=128&d=identicon&r=PG&f=1", "display_name": "phodina", "link": "https://stackoverflow.com/users/5920297/phodina"}, "is_accepted": false, "score": 2, "last_activity_date": 1537015691, "last_edit_date": 1537015691, "creation_date": 1537014336, "answer_id": 52344668, "question_id": 52301531, "link": "https://stackoverflow.com/questions/52301531/can-i-specify-a-repository-structure-with-a-single-cargo-toml-but-multiple-versi/52344668#52344668", "title": "Can I specify a repository structure with a single Cargo.toml but multiple versions of the code, each with separate main.rs files?", "body": "<p>The exact solution can be found in the <a href=\"https://doc.rust-lang.org/book/second-edition/ch14-03-cargo-workspaces.html\" rel=\"nofollow noreferrer\">second edition of the Rust book</a> with an example.</p>\n\n<p>I restructured the repository like this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>\u251c\u2500\u2500 aarch64-unknown-none.json\n\u251c\u2500\u2500 Cargo.lock\n\u251c\u2500\u2500 Cargo.toml\n\u251c\u2500\u2500 layout.ld\n\u251c\u2500\u2500 Readme.md\n\u251c\u2500\u2500 chapter1\n\u2502   \u251c\u2500\u2500 Cargo.toml\n\u2502   \u2514\u2500\u2500 main.rs\n\u251c\u2500\u2500 chapter2\n\u2502   \u251c\u2500\u2500 boot.rs\n\u2502   \u251c\u2500\u2500 Cargo.toml\n\u2502   \u2514\u2500\u2500 main.rs\n\u2514\u2500\u2500 chapter3\n    \u251c\u2500\u2500 boot.rs\n    \u251c\u2500\u2500 Cargo.toml\n    \u251c\u2500\u2500 console.rs\n    \u2514\u2500\u2500 main.rs\n</code></pre>\n\n<p><code>Cargo.toml</code> files in the <em>chapter</em> directories remain without any modification. Only the <code>Cargo.toml</code> in the root is modified to contain the following:</p>\n\n<pre><code>[workspace]\nmembers = [\"chapter1\", \"chapter2\", \"chapter3\"]\n</code></pre>\n\n<p>One small drawback to this solution is that the members must have different crate names in their <code>Cargo.toml</code> as the output of all members is stored in the <code>target</code> dir in the root of the workspace. This is only a small issue and I appreciate the flexibility Cargo offers.</p>\n"}], "owner": {"reputation": 961, "user_id": 5920297, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/80fc64c0293ff9460b4a8f127afdb8b2?s=128&d=identicon&r=PG&f=1", "display_name": "phodina", "link": "https://stackoverflow.com/users/5920297/phodina"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 112, "favorite_count": 1, "answer_count": 1, "score": 0, "last_activity_date": 1537015691, "creation_date": 1536777614, "last_edit_date": 1536777957, "question_id": 52301531, "link": "https://stackoverflow.com/questions/52301531/can-i-specify-a-repository-structure-with-a-single-cargo-toml-but-multiple-versi", "title": "Can I specify a repository structure with a single Cargo.toml but multiple versions of the code, each with separate main.rs files?", "body": "<p>I'm writing a book about embedded Rust using <code>mdbook</code> as one git repository and then I have another repository created by <code>cargo</code> where I place the code.</p>\n\n<p>I'd like to structure the code so it corresponds with the chapters in the book and therefore is in separate directory.</p>\n\n<p>The structure for the book:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>\u251c\u2500\u2500 book\n\u251c\u2500\u2500 book.toml\n\u2514\u2500\u2500 src\n    \u251c\u2500\u2500 chapter_1.md\n    \u251c\u2500\u2500 chapter_2.md\n    \u251c\u2500\u2500 chapter_3.md\n    \u251c\u2500\u2500 chapter_4.md\n    \u251c\u2500\u2500 chapter_5.md\n    \u251c\u2500\u2500 chapter_6.md\n    \u2514\u2500\u2500 SUMMARY.md\n</code></pre>\n\n<p>And the structure for the code:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>\u251c\u2500\u2500 aarch64-unknown-none.json\n\u251c\u2500\u2500 Cargo.lock\n\u251c\u2500\u2500 Cargo.toml\n\u251c\u2500\u2500 layout.ld\n\u251c\u2500\u2500 Readme.md\n\u251c\u2500\u2500 chapter1\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 main.rs\n\u251c\u2500\u2500 chapter2\n\u2502   \u251c\u2500\u2500 boot.rs\n\u2502   \u2514\u2500\u2500 main.rs\n\u2514\u2500\u2500 chapter3\n    \u251c\u2500\u2500 boot.rs\n    \u251c\u2500\u2500 console.rs\n    \u2514\u2500\u2500 main.rs\n</code></pre>\n\n<p>I'd prefer this structure as the reader can then look directly at the code for the chapter and not search git commits. I also sometimes need to modify something later therefore git commits are not a solution.</p>\n\n<p>Is there a way to specify this format in Cargo.toml? To either build all the directories or specify which one on the command line.</p>\n"}, {"tags": ["rust", "ffi"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1536773427, "post_id": 52300517, "comment_id": 91548908, "body": "It is preferred to post separate questions instead of combining your questions into one. That way, it helps the people answering your question as well as others hunting for one of your questions. Your first 3 questions are fairly intertwined, but &quot;How would I wrap just the Option&lt;i32&gt;?&quot; is distinct. Please ask it separately."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1536774628, "post_id": 52300517, "comment_id": 91549450, "body": "It&#39;s not more simple to ask to the compiler to abort instead of panic ?"}], "answers": [{"comments": [{"owner": {"reputation": 898, "user_id": 1633026, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2e1ad7e90b16b09cf026e49c24d148ba?s=128&d=identicon&r=PG", "display_name": "Andrew Straw", "link": "https://stackoverflow.com/users/1633026/andrew-straw"}, "edited": false, "score": 0, "creation_date": 1536794932, "post_id": 52300765, "comment_id": 91556931, "body": "Your seeming aside (&quot;I&#39;d write your code as this, for what it&#39;s worth&quot;) actually indeed achieves exactly what I was looking for, thank you. (I&#39;m not sure how I missed that <code>catch_unwind()</code> returns the result of the closure on success.)"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1536774384, "last_edit_date": 1536774384, "creation_date": 1536774068, "answer_id": 52300765, "question_id": 52300517, "link": "https://stackoverflow.com/questions/52300517/is-optioni32-unwind-safe/52300765#52300765", "title": "Is Option&lt;i32&gt; unwind safe?", "body": "<blockquote>\n  <p>Is <code>Option&lt;i32&gt;</code> unwind safe?</p>\n</blockquote>\n\n<p>Yes. There's no reason to ask a human this question when you can ask the compiler:</p>\n\n<pre><code>fn implements&lt;T: std::panic::UnwindSafe&gt;() {}\n\nfn main() {\n    implements::&lt;Option&lt;i32&gt;&gt;();\n}\n</code></pre>\n\n<p>Your <em>real</em> question should be:</p>\n\n<blockquote>\n  <p>Is <code>&amp;mut Option&lt;i32&gt;</code> unwind safe?</p>\n</blockquote>\n\n<p>This is not, but you probably already knew that. I'm guessing that you got this compiler error before you added <code>AssertUnwindSafe</code> which tells you it isn't safe:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `&amp;mut std::option::Option&lt;i32&gt;: std::panic::UnwindSafe` is not satisfied in `[closure@src/main.rs:12:44: 14:6 result:&amp;mut std::option::Option&lt;i32&gt;, a:&amp;i32]`\n  --&gt; src/main.rs:12:24\n   |\n12 |     let unwind_state = panic::catch_unwind(|| {\n   |                        ^^^^^^^^^^^^^^^^^^^ the type &amp;mut std::option::Option&lt;i32&gt; may not be safely transferred across an unwind boundary\n   |\n   = help: within `[closure@src/main.rs:12:44: 14:6 result:&amp;mut std::option::Option&lt;i32&gt;, a:&amp;i32]`, the trait `std::panic::UnwindSafe` is not implemented for `&amp;mut std::option::Option&lt;i32&gt;`\n   = note: required because it appears within the type `[closure@src/main.rs:12:44: 14:6 result:&amp;mut std::option::Option&lt;i32&gt;, a:&amp;i32]`\n   = note: required by `std::panic::catch_unwind`\n</code></pre>\n\n<hr>\n\n<p>I'd write your code as this, for what it's worth:</p>\n\n<pre><code>fn do_not_panic(a: i32) {\n    let result = panic::catch_unwind(|| random_function_that_might_panic(a)).ok();\n\n    match result {\n        Some(value) =&gt; {\n            println!(\"Result: {:?}\", value);\n        }\n        None =&gt; {\n            println!(\"caught panic\");\n        }\n    }\n}\n</code></pre>\n\n<p>No mutable variables, no extra nesting, no \"this should never happen\" comments.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://doc.rust-lang.org/std/panic/trait.UnwindSafe.html\" rel=\"nofollow noreferrer\">The documentation for <code>UnwindUnsafe</code></a></li>\n<li><a href=\"https://stackoverflow.com/q/50081239/155423\">Is there a way to tell the Rust compiler to call drop on partially-initialized array elements when handling a panic?</a></li>\n</ul>\n"}], "owner": {"reputation": 898, "user_id": 1633026, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2e1ad7e90b16b09cf026e49c24d148ba?s=128&d=identicon&r=PG", "display_name": "Andrew Straw", "link": "https://stackoverflow.com/users/1633026/andrew-straw"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 479, "favorite_count": 0, "accepted_answer_id": 52300765, "answer_count": 1, "score": 1, "last_activity_date": 1536774384, "creation_date": 1536773035, "last_edit_date": 1536773354, "question_id": 52300517, "link": "https://stackoverflow.com/questions/52300517/is-optioni32-unwind-safe", "title": "Is Option&lt;i32&gt; unwind safe?", "body": "<p>I am implementing a wrapper of a C library which takes callbacks and the callbacks will be implemented in Rust. Given that <a href=\"https://doc.rust-lang.org/stable/std/panic/fn.catch_unwind.html\" rel=\"nofollow noreferrer\">panicking in Rust when calling from C is undefined behavior</a>, I want to  catch any potential Rust panics before they get into C. </p>\n\n<p>I have been reading about <code>std::panic::catch_unwind</code>.  The wrapper is performance sensitive and I would prefer to avoid using types like <code>Mutex</code>. I would like to hold my result in an <code>Option&lt;i32&gt;</code> and set this to <code>Some(value)</code> in the case where there is no panic. <code>None</code> will indicate that the function did not execute successfully and thus, a panic must have occurred.</p>\n\n<p>Is <code>Option&lt;i32&gt;</code> unwind safe? If not, under what conditions would there be a problem? Can I wrap it in <code>std::panic::AssertUnwindSafe</code>?</p>\n\n<p>Here is an example where I used <code>AssertUnwindSafe</code> to wrap the entire closure.</p>\n\n<pre><code>use std::panic::{self, AssertUnwindSafe};\n\nfn random_function_that_might_panic(a: i32) -&gt; i32 {\n    if a == 42 {\n        panic!(\"did you forget a towel?\");\n    }\n    a * 2\n}\n\nfn do_not_panic(a: i32) {\n    let mut result = None;\n    let unwind_state = panic::catch_unwind(AssertUnwindSafe(|| {\n        result = Some(random_function_that_might_panic(a)); // get result, but this could panic\n    }));\n    match unwind_state {\n        Ok(()) =&gt; {\n            match result {\n                Some(value) =&gt; {\n                    println!(\"Result: {:?}\", value);\n                }\n                None =&gt; {\n                    // this should never happen...\n                    println!(\"No result but no panic?\");\n                }\n            }\n        }\n        Err(e) =&gt; {\n            println!(\"caught panic: {:?}\", e);\n        }\n    }\n}\n\nfn main() {\n    do_not_panic(1);\n    do_not_panic(2);\n    do_not_panic(3);\n    do_not_panic(42);\n}\n</code></pre>\n\n<p>(See the above on the <a href=\"https://play.rust-lang.org/?gist=9c3392df4e553603075e680cc93b1076&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a>.)</p>\n\n<p>I could not figure out how to wrap just <code>Option&lt;i32&gt;</code> in <code>AssertUnwindSafe</code>, so here I wrapped the whole closure. How would I wrap just the <code>Option&lt;i32&gt;</code>?</p>\n"}, {"tags": ["rust", "compiler-optimization", "lto"], "comments": [{"owner": {"reputation": 939, "user_id": 2870802, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-lHzULJklIJg/AAAAAAAAAAI/AAAAAAAABwk/_pJZF95FiAY/photo.jpg?sz=128", "display_name": "ozkriff", "link": "https://stackoverflow.com/users/2870802/ozkriff"}, "edited": false, "score": 2, "creation_date": 1536744138, "post_id": 52291006, "comment_id": 91531288, "body": "you may be interested in <a href=\"https://internals.rust-lang.org/t/rust-staticlibs-and-optimizing-for-size/5746\" rel=\"nofollow noreferrer\">this IRLO thread</a>"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 3, "creation_date": 1536754566, "post_id": 52291006, "comment_id": 91537445, "body": "Why do yo expect the binary size to go down?"}, {"owner": {"reputation": 617, "user_id": 3473012, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/goi2u.png?s=128&g=1", "display_name": "PEAR", "link": "https://stackoverflow.com/users/3473012/pear"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1536755028, "post_id": 52291006, "comment_id": 91537705, "body": "@MatthieuM. In fact, because of <a href=\"https://lifthrasiir.github.io/rustlog/why-is-a-rust-executable-large.html\" rel=\"nofollow noreferrer\">this</a>. I didn&#39;t know that LTO doesn&#39;t just optimize binary size but performance, too."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1536762423, "post_id": 52291006, "comment_id": 91542941, "body": "@PEAR: I see! It&#39;s a bit more complicated than that, actually."}], "answers": [{"comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1536743469, "post_id": 52291043, "comment_id": 91530857, "body": "Is LTO actually able to inline functions? Because that needs a recompilation of that particular function. Can you please provide some documentation?"}, {"owner": {"reputation": 789, "user_id": 12291742, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/V1ofq.png?s=128&g=1", "display_name": "Ekrem Din&#231;el", "link": "https://stackoverflow.com/users/12291742/ekrem-din%c3%a7el"}, "edited": false, "score": 0, "creation_date": 1611338911, "post_id": 52291043, "comment_id": 116428867, "body": "What do you mean by recompilation? It is possible to cache generated object files of external crates and optimize every inlined function one by on every calling site."}, {"owner": {"reputation": 188404, "user_id": 541686, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/f2d0d2c0f7a83e2f8797a5ae79a324b6?s=128&d=identicon&r=PG", "display_name": "user541686", "link": "https://stackoverflow.com/users/541686/user541686"}, "reply_to_user": {"reputation": 789, "user_id": 12291742, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/V1ofq.png?s=128&g=1", "display_name": "Ekrem Din&#231;el", "link": "https://stackoverflow.com/users/12291742/ekrem-din%c3%a7el"}, "edited": false, "score": 0, "creation_date": 1611357107, "post_id": 52291043, "comment_id": 116435061, "body": "@EkremDin&#231;el: I think &quot;recompilation&quot; means &quot;code generation&quot; here. But yes, inlining is one of the very purposes of LTO. <a href=\"https://eklitzke.org/how-gcc-lto-works\" rel=\"nofollow noreferrer\">eklitzke.org/how-gcc-lto-works</a>"}], "tags": [], "owner": {"reputation": 188404, "user_id": 541686, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/f2d0d2c0f7a83e2f8797a5ae79a324b6?s=128&d=identicon&r=PG", "display_name": "user541686", "link": "https://stackoverflow.com/users/541686/user541686"}, "is_accepted": false, "score": 4, "last_activity_date": 1536741895, "creation_date": 1536741895, "answer_id": 52291043, "question_id": 52291006, "link": "https://stackoverflow.com/questions/52291006/why-does-using-lto-increase-the-size-of-my-rust-binary/52291043#52291043", "title": "Why does using LTO increase the size of my Rust binary?", "body": "<p>Probably because of inlining, which can increase code size to increase speed.</p>\n"}, {"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 28, "last_activity_date": 1536763273, "last_edit_date": 1536763273, "creation_date": 1536763120, "answer_id": 52297790, "question_id": 52291006, "link": "https://stackoverflow.com/questions/52291006/why-does-using-lto-increase-the-size-of-my-rust-binary/52297790#52297790", "title": "Why does using LTO increase the size of my Rust binary?", "body": "<h2>What is LTO?</h2>\n\n<p>LTO means Link-Time Optimization. It is generally set up to use the regular optimization passes used to produce object files... at link time instead, or in addition.</p>\n\n<h2>Why does it matter?</h2>\n\n<p>A compiler does not inherently optimize for speed over size or size over speed; and therefore neither does LTO.</p>\n\n<p>Instead, when invoking the compiler, the user selects a profile. For <code>rustc</code>:</p>\n\n<ul>\n<li><code>O0</code>, <code>O1</code>, <code>O2</code> and <code>O3</code> are optimizing for speed.</li>\n<li><code>Os</code> and <code>Oz</code> are optimizing for size.</li>\n</ul>\n\n<p>LTO can be combined on top of any optimization level, and will follow the selected profile.</p>\n\n<h2>So why did the size increase?</h2>\n\n<p>By default, the <code>[release]</code> profile instructs <code>cargo</code> to invoke <code>rustc</code> with <code>O2</code> or <code>O3</code>, which <em>attempts</em> to optimize for speed over size.</p>\n\n<p>In particular, <code>O3</code> can rely quite heavily on inlining. Inlining is all about giving more context to the optimizer, and therefore more optimization opportunities... LTO offers more chances to apply inlining (more known functions), and here it appears that more inlining happened.</p>\n\n<h2>So why did <a href=\"https://lifthrasiir.github.io/rustlog/why-is-a-rust-executable-large.html\" rel=\"noreferrer\">this blog post</a> claim it reduced size?</h2>\n\n<p>It also reduces size. Possibly.</p>\n\n<p>By giving more context, the optimizer/linker can realize that some portion of the code or dependencies are not used at all, and therefore can be elided.</p>\n\n<p>If using <code>Os</code> or <code>Oz</code>, the size is near certain to go down.</p>\n\n<p>If using <code>O2</code> or <code>O3</code>, unused code is removed while inlining adds more code, so it's quite unpredictable whether the end result is bigger or smaller.</p>\n\n<h2>So, LTO?</h2>\n\n<p>LTO gives the optimizer a better opportunity at optimizing, so it's a good default for Releases.</p>\n\n<p>Just remember that <code>cargo</code> leans toward speed over size by default, and if this does not suit you, you may want to select another optimization direction.</p>\n"}], "owner": {"reputation": 617, "user_id": 3473012, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/goi2u.png?s=128&g=1", "display_name": "PEAR", "link": "https://stackoverflow.com/users/3473012/pear"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4558, "favorite_count": 3, "accepted_answer_id": 52297790, "answer_count": 2, "score": 17, "last_activity_date": 1536763273, "creation_date": 1536741790, "last_edit_date": 1536761792, "question_id": 52291006, "link": "https://stackoverflow.com/questions/52291006/why-does-using-lto-increase-the-size-of-my-rust-binary", "title": "Why does using LTO increase the size of my Rust binary?", "body": "<h2>Introduction</h2>\n\n<p>I finished a small Rust project (about 300 lines of code) with the following dependencies:</p>\n\n<ul>\n<li><a href=\"https://crates.io/crates/rumqtt\" rel=\"noreferrer\" title=\"rumqtt\">rumqtt</a></li>\n<li><a href=\"https://crates.io/crates/signal\" rel=\"noreferrer\" title=\"signal\">signal</a></li>\n<li><a href=\"https://crates.io/crates/log\" rel=\"noreferrer\" title=\"log\">log</a></li>\n<li><a href=\"https://crates.io/crates/env_logger\" rel=\"noreferrer\" title=\"env_logger\">env_logger</a></li>\n</ul>\n\n<h2>Problem</h2>\n\n<p>When using <code>cargo build --release</code> without further configuration, a 2.942.744 bytes (= 2,8 MiB) binary is generated. I tried to optimize this by enabling Link Time Optimization (LTO) in my <code>Cargo.toml</code>:</p>\n\n<pre><code>[profile.release]\nlto = true\n</code></pre>\n\n<p>To my surprise, the binary grows, with a new size of 3.848.288 bytes (= 3,7 MiB). </p>\n\n<p>How can this be explained? Is there any mistake I made configuring Cargo?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 68198, "user_id": 98038, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/716b5b6ad050ab528046c96e324bd0cd?s=128&d=identicon&r=PG", "display_name": "molf", "link": "https://stackoverflow.com/users/98038/molf"}, "edited": false, "score": 2, "creation_date": 1536760473, "post_id": 52290738, "comment_id": 91541600, "body": "If you wish to implement a future, the underlying primitives should be asynchronous (non-blocking). File I/O in Rust currently is blocking, presumably because it is difficult to implement cross-platform. So unfortunately, this approach will not work, regardless of your specific question regarding lifetimes."}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "reply_to_user": {"reputation": 68198, "user_id": 98038, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/716b5b6ad050ab528046c96e324bd0cd?s=128&d=identicon&r=PG", "display_name": "molf", "link": "https://stackoverflow.com/users/98038/molf"}, "edited": false, "score": 0, "creation_date": 1536760808, "post_id": 52290738, "comment_id": 91541825, "body": "This is why I want to queue the task at the spawner <code>cx.spawner().spawn_obj()</code>"}, {"owner": {"reputation": 68198, "user_id": 98038, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/716b5b6ad050ab528046c96e324bd0cd?s=128&d=identicon&r=PG", "display_name": "molf", "link": "https://stackoverflow.com/users/98038/molf"}, "edited": false, "score": 1, "creation_date": 1536761202, "post_id": 52290738, "comment_id": 91542065, "body": "Spawning refers to spawning a <i>future</i>; you can define a future in terms of one or more other futures (and even then spawning as you are attempting here is usually not needed). But you don&#39;t have a future to work with; you only have a blocking method call. That&#39;s it \u2013 there is no other option but to make (this part of) your program blocking since there is no alternative (async) implementation right now AFAIK. If you deal with many thousands of these blocking file operations you may consider thread pools instead."}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "reply_to_user": {"reputation": 68198, "user_id": 98038, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/716b5b6ad050ab528046c96e324bd0cd?s=128&d=identicon&r=PG", "display_name": "molf", "link": "https://stackoverflow.com/users/98038/molf"}, "edited": false, "score": 0, "creation_date": 1536762003, "post_id": 52290738, "comment_id": 91542627, "body": "Hmm, I see your point. I basically wrapping a <code>Future</code> in another <code>Future</code>..."}], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 806, "favorite_count": 1, "answer_count": 0, "score": 2, "last_activity_date": 1539561501, "creation_date": 1536740867, "last_edit_date": 1539561501, "question_id": 52290738, "link": "https://stackoverflow.com/questions/52290738/how-to-implement-poll-on-a-future-in-a-non-blocking-manner-in-futures-0-3", "title": "How to implement poll on a Future in a non-blocking manner in futures 0.3?", "body": "<p><strong>Update</strong>: This question is not relevant anymore since <code>Context</code> <a href=\"https://github.com/rust-lang/rust/pull/54339\" rel=\"nofollow noreferrer\">got removed</a> from the <code>poll()</code> signature.</p>\n\n<hr>\n\n<p>I'm trying to implement a simple <a href=\"https://doc.rust-lang.org/nightly/std/future/trait.Future.html\" rel=\"nofollow noreferrer\"><code>Future</code></a> with the <a href=\"https://github.com/rust-lang-nursery/futures-rs\" rel=\"nofollow noreferrer\">futures crate</a> v0.3:  opening a <code>File</code>.</p>\n\n<p>My future currently looks like this:</p>\n\n<pre><code>struct OpenFuture {\n    options: OpenOptions,\n    path:    PathBuf,\n    output:  Option&lt;io::Result&lt;File&gt;&gt;,\n}\n</code></pre>\n\n<p>To implement <code>Future</code>, I came up with this:</p>\n\n<pre><code>impl Future for OpenFuture {\n    type Output = io::Result&lt;File&gt;;\n\n    fn poll(mut self: PinMut&lt;Self&gt;, cx: &amp;mut Context) -&gt; Poll&lt;Self::Output&gt; {\n        if let Some(file) = self.file.take() {\n            Poll::Ready(file)\n        } else {\n            let waker = cx.waker().clone();\n            cx.spawner().spawn_obj(\n                Box::new(lazy(move |_| {\n                    // self.file = Some(self.options.open(&amp;self.path));\n                    waker.wake();\n                })).into(),\n            );\n            Poll::Pending\n        }\n    }\n}\n</code></pre>\n\n<p>If the output is <code>Option::Some</code>, it can be taken and the future is ready, this is straightforward. But if it's not ready, I don't want to block the thread as mentioned in the Documentation:</p>\n\n<blockquote>\n  <p>An implementation of <code>poll</code> should strive to return quickly, and must never block. Returning quickly prevents unnecessarily clogging up threads or event loops. If it is known ahead of time that a call to <code>poll</code> may end up taking awhile, the work should be offloaded to a thread pool (or something similar) to ensure that <code>poll</code> can return quickly.</p>\n</blockquote>\n\n<p>So I want to offload the work. Since I have a <a href=\"https://doc.rust-lang.org/nightly/std/task/struct.Context.html\" rel=\"nofollow noreferrer\"><code>Context</code></a> passed to the <code>poll</code> method, I have access to a <a href=\"https://doc.rust-lang.org/nightly/std/task/trait.Spawn.html\" rel=\"nofollow noreferrer\"><code>Spawn</code></a> and a <a href=\"https://doc.rust-lang.org/nightly/std/task/struct.Waker.html\" rel=\"nofollow noreferrer\"><code>Waker</code></a>. The <code>Spawn</code> should take a task, that opens the file. After the file is open, it notifies with <code>waker.wake()</code>.</p>\n\n<p>The provided code doesn't work when uncommenting the line due to a lifetime error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime due to conflicting requirements\n    |\n    |                           Box::new(lazy(move |_| {\n    |  _______________________________________^\n    | |                             self.file = Some(self.options.open(&amp;self.path));\n    | |                             waker.wake();\n    | |                         })).into(),\n    | |_________________________^\n    |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body...\n    |\n    |               fn poll(mut self: PinMut&lt;Self&gt;, cx: &amp;mut Context) -&gt; Poll&lt;Self::Output&gt; {\n    |  _____________^\n    | |                 if let Some(file) = self.file.take() {\n    | |                     Poll::Ready(file)\n    | |                 } else {\n...   |\n    | |                 }\n    | |             }\n    | |_____________^\n    = note: ...so that the types are compatible:\n            expected std::pin::PinMut&lt;'_, _&gt;\n               found std::pin::PinMut&lt;'_, _&gt;\n    = note: but, the lifetime must be valid for the static lifetime...\n    = note: ...so that the expression is assignable:\n            expected std::future::FutureObj&lt;'static, _&gt;\n               found std::future::FutureObj&lt;'_, _&gt;\n</code></pre>\n\n<p>How this can be solved?</p>\n\n<p>Additionally, <a href=\"https://doc.rust-lang.org/nightly/std/task/trait.Spawn.html#tymethod.spawn_obj\" rel=\"nofollow noreferrer\"><code>Spawn::spawn_obj</code></a> returns a <code>Result</code>. How this result can be handled? Is it recommended to just return <code>io::ErrorKind::Other</code>?</p>\n"}, {"tags": ["rust", "polymorphism", "traits", "boxing", "representation"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1536736045, "post_id": 52288980, "comment_id": 91526506, "body": "I ask myself, why you want to have a <code>Box&lt;Fooer&gt;</code>. I think you don&#39;t quite understand, how traits work in Rust. Try to call <code>.foo()</code> on every variable (<code>a..e</code>) and see, what happens."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1536736133, "post_id": 52288980, "comment_id": 91526552, "body": "The compiler tells you the exact reason, why <code>c</code> does not work: <code>the method &#39;new&#39; exists but the following trait bounds were not satisfied:            &#39;Fooer : std::marker::Sized&#39;</code>"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1536737532, "post_id": 52288980, "comment_id": 91527319, "body": "This is another question about variance. I am sorry, but I cannot help: this kind of stuff still triggers me :P"}, {"owner": {"reputation": 5327, "user_id": 1753601, "user_type": "registered", "accept_rate": 51, "profile_image": "https://www.gravatar.com/avatar/8a535b9a62aff350b3b62bc2f2edc384?s=128&d=identicon&r=PG", "display_name": "Askaga", "link": "https://stackoverflow.com/users/1753601/askaga"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1536739028, "post_id": 52288980, "comment_id": 91528161, "body": "@hellow: Not sure what you&#39;re getting at. I&#39;m just experimenting/learning so there is no particular reason why i &quot;want to have&quot; a <code>Box&lt;Fooer&gt;</code>. Surely there are plenty of sensible applications for it otherwise the functionality wouldn&#39;t exist. Also what do you mean by &quot;try to call <code>.foo()</code> on every variable <code>a..e</code>&quot;? It always prints the same thing, as expected."}, {"owner": {"reputation": 5327, "user_id": 1753601, "user_type": "registered", "accept_rate": 51, "profile_image": "https://www.gravatar.com/avatar/8a535b9a62aff350b3b62bc2f2edc384?s=128&d=identicon&r=PG", "display_name": "Askaga", "link": "https://stackoverflow.com/users/1753601/askaga"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1536739341, "post_id": 52288980, "comment_id": 91528337, "body": "@hellow: about the error message: it seems to imply that it actually cannot call <code>Box::&lt;Fooer&gt;::new</code> since the given type parameter must have as size known at compile time which is not the case since <code>Fooer</code> is a trait, right? So my assumption is correct that you must construct a Box of a sized type first, than convert it to Box of the trait type somehow, which would leave me with my original question: how/by what mechanism is that conversion happening?"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1536739353, "post_id": 52288980, "comment_id": 91528345, "body": "I wanted to say, that there is no need to have an explicit <code>Box&lt;Fooer&gt;</code>, because it doesn&#39;t matter. There is no offense in my comment at all. As you say yourself, they all print the same thing, so there is no difference whether you have a <code>Box&lt;i32&gt;</code> or whatever, you can call the trait method on it, nevertheless."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1536739447, "post_id": 52288980, "comment_id": 91528406, "body": "Maybe <a href=\"https://doc.rust-lang.org/1.8.0/book/trait-objects.html\" rel=\"nofollow noreferrer\">the book</a> can help you to understand trait-objects and how dispatching in rust works."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1536739933, "post_id": 52288980, "comment_id": 91528685, "body": "<a href=\"https://doc.rust-lang.org/beta/nomicon/subtyping.html\" rel=\"nofollow noreferrer\">The Rustonomicon</a> has a good section about variance as well."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1536744696, "post_id": 52288980, "comment_id": 91531637, "body": "And this <a href=\"https://doc.rust-lang.org/nomicon/coercions.html\" rel=\"nofollow noreferrer\">other chapter in the Rustonomicon</a> talks about unsized coertions, that I think are at play here."}, {"owner": {"reputation": 2673, "user_id": 7274990, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6819319104c8dbd5f1612d86ea8d9216?s=128&d=identicon&r=PG&f=1", "display_name": "Calculator", "link": "https://stackoverflow.com/users/7274990/calculator"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1536759731, "post_id": 52288980, "comment_id": 91541130, "body": "@Boiethios AFAIU Variance is confined to lifetimes in Rust, since there is no subtyping relationship between a trait and an implementing struct. There is no &quot;structural inheritance&quot;. Otherwise, given that <code>Box&lt;T&gt;</code> is variant over <code>T</code> I could cast a <code>Box&lt;Box&lt;i32&gt;&gt;</code> to <code>Box&lt;Box&lt;Fooer&gt;&gt;</code>. On the other hand, casting a <code>Box&lt;Box&lt;&amp;&#39;a i32&gt;&gt;</code> to <code>Box&lt;Box&lt;&amp;&#39;b Fooer&gt;&gt;</code> where <code>&#39;a : &#39;b</code> is possible, because <code>&#39;a : &#39;b</code> is an actual subtyping relationship unlike <code>i32: Fooer</code> and an immutable borrow <code>&amp;&#39;x T</code> is not only variant over <code>T</code> but also over <code>&#39;x</code> ."}, {"owner": {"reputation": 2673, "user_id": 7274990, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6819319104c8dbd5f1612d86ea8d9216?s=128&d=identicon&r=PG&f=1", "display_name": "Calculator", "link": "https://stackoverflow.com/users/7274990/calculator"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1536762273, "post_id": 52288980, "comment_id": 91542842, "body": "@Boiethios Sorry, I made a typo. Casting <code>Box&lt;Box&lt;&amp;&#39;a i32&gt;&gt;</code> to <code>Box&lt;Box&lt;&amp;&#39;b i32&gt;&gt;</code> is possible. <code>Box&lt;Box&lt;&amp;&#39;a i32&gt;&gt;</code> to <code>Box&lt;Box&lt;&amp;&#39;b Fooer&gt;&gt;</code> is of course not possible for the same reason <code>Box&lt;Box&lt;i32&gt;&gt;</code> to <code>Box&lt;Box&lt;Fooer&gt;&gt;</code> is not possible."}], "answers": [{"tags": [], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "is_accepted": false, "score": 11, "last_activity_date": 1554332566, "last_edit_date": 1554332566, "creation_date": 1536758250, "answer_id": 52296187, "question_id": 52288980, "link": "https://stackoverflow.com/questions/52288980/how-does-the-mechanism-behind-the-creation-of-boxed-traits-work/52296187#52296187", "title": "How does the mechanism behind the creation of boxed traits work?", "body": "<p>I'll try to explain what conversions (coercions) happen in your code.</p>\n\n<p>There is a marker trait named <a href=\"https://doc.rust-lang.org/std/marker/trait.Unsize.html\" rel=\"noreferrer\"><code>Unsize</code></a> that, between others:</p>\n\n<blockquote>\n  <p>Unsize is implemented for:</p>\n  \n  <ul>\n  <li><code>T</code> is <code>Unsize&lt;Trait&gt;</code> when <code>T: Trait</code>.</li>\n  <li>[...]</li>\n  </ul>\n</blockquote>\n\n<p>This trait, AFAIK, is not used directly for coercions. Instead, <a href=\"https://doc.rust-lang.org/std/ops/trait.CoerceUnsized.html\" rel=\"noreferrer\"><code>CoerceUnsized</code></a> is used. This trait is implemented in a lot of cases, some of them are quite expected, such as:</p>\n\n<pre><code>impl&lt;'a, 'b, T, U&gt; CoerceUnsized&lt;&amp;'a U&gt; for &amp;'b T \nwhere\n    'b: 'a,\n    T: Unsize&lt;U&gt; + ?Sized,\n    U: ?Sized\n</code></pre>\n\n<p>that is used to coerce <code>&amp;i32</code> into <code>&amp;Fooer</code>.</p>\n\n<p>The interesting, not so obvious implementation for this trait, that affects your code is:</p>\n\n<pre><code>impl&lt;T, U&gt; CoerceUnsized&lt;Box&lt;U&gt;&gt; for Box&lt;T&gt; \nwhere\n    T: Unsize&lt;U&gt; + ?Sized,\n    U: ?Sized\n</code></pre>\n\n<p>This, together with the definition of the <code>Unsize</code> marker, can be somewhat read as: <em>if <code>U</code> is a trait and <code>T</code> implements <code>U</code>, then <code>Box&lt;T&gt;</code> can be coerced into <code>Box&lt;U&gt;</code></em>.</p>\n\n<p>About your last question:</p>\n\n<blockquote>\n  <p>Is there a way to create a <code>Box&lt;Fooer&gt;</code> directly from an <code>i32</code>? If not: why not?</p>\n</blockquote>\n\n<p>Not that I know of. The problem is that <code>Box::new(T)</code> requires a sized value, since the value passed is moved into the box, and unsized values cannot be moved.</p>\n\n<p>In my opinion, the easiest way to do that is to simply write:</p>\n\n<pre><code>let c = Box::new(42) as Box&lt;Fooer&gt;;\n</code></pre>\n\n<p>That is, you create a <code>Box</code> of the proper type and then coerce to the unsized one (note it looks quite similar to your <code>d</code> example).</p>\n"}, {"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 20, "last_activity_date": 1613310298, "last_edit_date": 1613310298, "creation_date": 1536758287, "answer_id": 52296200, "question_id": 52288980, "link": "https://stackoverflow.com/questions/52288980/how-does-the-mechanism-behind-the-creation-of-boxed-traits-work/52296200#52296200", "title": "How does the mechanism behind the creation of boxed traits work?", "body": "<blockquote>\n<p>However, variant c does not, probably because the <code>new</code> function takes only values of the same type which is not the case since <code>Fooer != i32</code>.</p>\n</blockquote>\n<p>No, it's because there <em>is</em> no <code>new</code> function for <code>Box&lt;dyn Fooer&gt;</code>. In the <a href=\"https://doc.rust-lang.org/std/boxed/struct.Box.html#method.new\" rel=\"nofollow noreferrer\">documentation</a>:</p>\n<blockquote>\n<h3><code>impl&lt;T&gt; Box&lt;T&gt;</code></h3>\n<code>pub fn new(x: T) -&gt; Box&lt;T&gt;</code>\n</blockquote>\n<p>Most methods on <code>Box&lt;T&gt;</code> allow <code>T: ?Sized</code>, but <code>new</code> is defined in an <code>impl</code> <em>without</em> a <code>T: ?Sized</code> bound. That <a href=\"https://stackoverflow.com/questions/28044231/what-does-sized-is-not-implemented-mean\">means</a> you can only call <code>Box::&lt;T&gt;::new</code> when <code>T</code> is a type with a known size. <code>dyn Fooer</code> is unsized, so there simply isn't a <code>new</code> function to call.</p>\n<p>In fact, that function <em>can't</em> exist in today's Rust. <code>Box&lt;T&gt;::new</code> needs to know the concrete type <code>T</code> so that it can allocate memory of the right size and alignment. Therefore, you can't erase <code>T</code> <em>before</em> you send it to <code>Box::new</code>. (It's conceivable that <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1909-unsized-rvalues.md\" rel=\"nofollow noreferrer\">future language extensions</a> may allow functions to accept unsized parameters; however, it's unclear whether even <code>unsized_locals</code> would actually enable <code>Box&lt;T&gt;::new</code> to accept unsized <code>T</code>.)</p>\n<p>For the time being, unsized types like <code>dyn Fooer</code> can only exist behind a &quot;fat pointer&quot;, that is, a pointer to the object <em>and</em> a pointer to the implementation of <code>Fooer</code> for that object. How do you get a fat pointer? You start with a thin pointer and <strong>coerce</strong> it. That's what's happening in these two lines:</p>\n<pre><code>let d: Box&lt;Fooer&gt; = Box::new(32);        // works, creates a Box&lt;Fooer&gt;\nlet e: Box&lt;Fooer&gt; = Box::&lt;i32&gt;::new(32); // works, creates a Box&lt;Fooer&gt;\n</code></pre>\n<p><code>Box::new</code> returns a <code>Box&lt;i32&gt;</code>, which is then <a href=\"https://doc.rust-lang.org/nomicon/coercions.html\" rel=\"nofollow noreferrer\">coerced</a> to <code>Box&lt;Fooer&gt;</code>. You could consider this a conversion, but the <code>Box</code> isn't changed; all the compiler does is stick an extra pointer on it and forget its original type. <a href=\"https://stackoverflow.com/a/52296187/3650362\">rodrigo's answer</a> goes into more detail about the language-level mechanics of this coercion.</p>\n<p>Hopefully all of this goes to explain why the answer to</p>\n<blockquote>\n<p>Is there a way to create a <code>Box&lt;Fooer&gt;</code> directly from an <code>i32</code>?</p>\n</blockquote>\n<p>is &quot;no&quot;: the <code>i32</code> has to be boxed <em>before</em> you can erase its type. It's the same reason you can't write <code>let x: Fooer = 10i32</code>.</p>\n<h3>Related</h3>\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/40580978/why-cant-i-write-a-function-with-the-same-type-as-boxnew\">Why can&#39;t I write a function with the same type as Box::new?</a></li>\n<li><a href=\"https://stackoverflow.com/questions/28219519/are-polymorphic-variables-allowed\">Are polymorphic variables allowed?</a></li>\n<li><a href=\"https://stackoverflow.com/questions/25740916/how-do-you-actually-use-dynamically-sized-types-in-rust\">How do you actually use dynamically sized types in Rust?</a></li>\n<li><a href=\"https://stackoverflow.com/questions/36057645/why-is-let-ref-a-trait-struct-forbidden\">Why is `let ref a: Trait = Struct` forbidden?</a></li>\n</ul>\n"}], "owner": {"reputation": 5327, "user_id": 1753601, "user_type": "registered", "accept_rate": 51, "profile_image": "https://www.gravatar.com/avatar/8a535b9a62aff350b3b62bc2f2edc384?s=128&d=identicon&r=PG", "display_name": "Askaga", "link": "https://stackoverflow.com/users/1753601/askaga"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 382, "favorite_count": 2, "accepted_answer_id": 52296200, "answer_count": 2, "score": 12, "last_activity_date": 1613311431, "creation_date": 1536734723, "last_edit_date": 1613311431, "question_id": 52288980, "link": "https://stackoverflow.com/questions/52288980/how-does-the-mechanism-behind-the-creation-of-boxed-traits-work", "title": "How does the mechanism behind the creation of boxed traits work?", "body": "<p>I'm having trouble understanding how values of boxed traits come into existence. Consider the following code:</p>\n<pre><code>trait Fooer {\n    fn foo(&amp;self);\n}\n\nimpl Fooer for i32 {\n    fn foo(&amp;self) { println!(&quot;Fooer on i32!&quot;); }\n}\n\nfn main() {\n    let a = Box::new(32);                        // works, creates a Box&lt;i32&gt;\n    let b = Box::&lt;i32&gt;::new(32);                 // works, creates a Box&lt;i32&gt;\n    let c = Box::&lt;dyn Fooer&gt;::new(32);           // doesn't work\n    let d: Box&lt;dyn Fooer&gt; = Box::new(32);        // works, creates a Box&lt;Fooer&gt;\n    let e: Box&lt;dyn Fooer&gt; = Box::&lt;i32&gt;::new(32); // works, creates a Box&lt;Fooer&gt;\n}\n</code></pre>\n<p>Obviously, variant a and b work, trivially. However, variant c does not, probably because the <code>new</code> function takes only values of the same type which is not the case since <code>Fooer != i32</code>. Variant d and e work, which lets me suspect that some kind of automatic conversion from <code>Box&lt;i32&gt;</code> to <code>Box&lt;dyn Fooer&gt;</code> is being performed.</p>\n<p>So my questions are:</p>\n<ul>\n<li>Does some kind of conversion happen here?</li>\n<li>If so, what the mechanism behind it and how does it work? (I'm also interested in the low level details, i.e. how stuff is represented under the hood)</li>\n<li>Is there a way to create a <code>Box&lt;dyn Fooer&gt;</code> directly from an <code>i32</code>? If not: why not?</li>\n</ul>\n"}, {"tags": ["python", "rust", "rust-actix", "pyo3"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1536734685, "post_id": 52288565, "comment_id": 91525709, "body": "Any reason for using version 0.5.1 instead of the newest (0.7.4)?"}, {"owner": {"reputation": 13, "user_id": 9592649, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-H7wEe_m3Kf4/AAAAAAAAAAI/AAAAAAAAAIc/WcSbet4tRto/photo.jpg?sz=128", "display_name": "Yasu-umi Nishikawa", "link": "https://stackoverflow.com/users/9592649/yasu-umi-nishikawa"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1536735346, "post_id": 52288565, "comment_id": 91526085, "body": "thx notice ! I add version info."}], "answers": [{"comments": [{"owner": {"reputation": 13, "user_id": 9592649, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-H7wEe_m3Kf4/AAAAAAAAAAI/AAAAAAAAAIc/WcSbet4tRto/photo.jpg?sz=128", "display_name": "Yasu-umi Nishikawa", "link": "https://stackoverflow.com/users/9592649/yasu-umi-nishikawa"}, "edited": false, "score": 0, "creation_date": 1536736217, "post_id": 52289118, "comment_id": 91526586, "body": "Thanks for static lifetime explanation."}, {"owner": {"reputation": 13, "user_id": 9592649, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-H7wEe_m3Kf4/AAAAAAAAAAI/AAAAAAAAAIc/WcSbet4tRto/photo.jpg?sz=128", "display_name": "Yasu-umi Nishikawa", "link": "https://stackoverflow.com/users/9592649/yasu-umi-nishikawa"}, "edited": false, "score": 0, "creation_date": 1536736853, "post_id": 52289118, "comment_id": 91526904, "body": "This mean Actor can&#39;t have object require life parameter ?"}, {"owner": {"reputation": 13, "user_id": 9592649, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-H7wEe_m3Kf4/AAAAAAAAAAI/AAAAAAAAAIc/WcSbet4tRto/photo.jpg?sz=128", "display_name": "Yasu-umi Nishikawa", "link": "https://stackoverflow.com/users/9592649/yasu-umi-nishikawa"}, "edited": false, "score": 0, "creation_date": 1536736970, "post_id": 52289118, "comment_id": 91526984, "body": "If so, is there any way to manage python interpreter in actix web ?"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 13, "user_id": 9592649, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-H7wEe_m3Kf4/AAAAAAAAAAI/AAAAAAAAAIc/WcSbet4tRto/photo.jpg?sz=128", "display_name": "Yasu-umi Nishikawa", "link": "https://stackoverflow.com/users/9592649/yasu-umi-nishikawa"}, "edited": false, "score": 0, "creation_date": 1536737611, "post_id": 52289118, "comment_id": 91527364, "body": "I can&#39;t tell you for sure, because I haven&#39;t looked in pyo3. I think you have to figure that out by yourself :/"}, {"owner": {"reputation": 13, "user_id": 9592649, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-H7wEe_m3Kf4/AAAAAAAAAAI/AAAAAAAAAIc/WcSbet4tRto/photo.jpg?sz=128", "display_name": "Yasu-umi Nishikawa", "link": "https://stackoverflow.com/users/9592649/yasu-umi-nishikawa"}, "edited": false, "score": 0, "creation_date": 1536738583, "post_id": 52289118, "comment_id": 91527912, "body": "Now I try to create static lifetime actor. But Python interpreter object is borrowed value. So rust compiler show this error. <code>error[E0597]: gil does not live long enough borrowed value must be valid for the static lifetime...</code> GILGuard has Rc, so it can be static value... <a href=\"https://github.com/PyO3/pyo3/blob/master/src/pythonrun.rs#L105\" rel=\"nofollow noreferrer\">github.com/PyO3/pyo3/blob/master/src/pythonrun.rs#L105</a>"}, {"owner": {"reputation": 154, "user_id": 7526741, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f9e7fc59fd903158f3127f1384139cf0?s=128&d=identicon&r=PG", "display_name": "Nikolay Kim", "link": "https://stackoverflow.com/users/7526741/nikolay-kim"}, "edited": false, "score": 1, "creation_date": 1536753175, "post_id": 52289118, "comment_id": 91536581, "body": "You have to acquire gil inside actor\u2019s handler. You can store python object references in actor as Py&lt;T&gt; or PyObject"}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": false, "score": 0, "last_activity_date": 1536736413, "last_edit_date": 1536736413, "creation_date": 1536735263, "answer_id": 52289118, "question_id": 52288565, "link": "https://stackoverflow.com/questions/52288565/how-can-actix-actor-have-pyo3-python/52289118#52289118", "title": "How can actix Actor have PyO3 Python?", "body": "<p>The definition of the <a href=\"https://docs.rs/actix/0.7.4/actix/trait.Actor.html\" rel=\"nofollow noreferrer\">Actor trait</a> is</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub trait Actor: Sized + 'static { ... }\n</code></pre>\n\n<p>which means, your lifetime <code>'a</code> must be <code>'static</code>. </p>\n\n<p>Here's a little <a href=\"https://play.rust-lang.org/?gist=b5ccde9f5eb5ed694db629fdb1df8b2b&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">example</a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::marker::PhantomData;\n\ntrait Foo: Sized + 'static {\n    fn foo();\n}\n\nstruct Bar&lt;'a&gt; {\n    _marker: PhantomData&lt;&amp;'a i32&gt;,\n}\nimpl&lt;'a&gt; Foo for Bar&lt;'a&gt; { //not possible\n    fn foo() {}\n}\n\nstruct Baz&lt;'a&gt; {\n    _marker: PhantomData&lt;&amp;'a i32&gt;,\n}\nimpl Foo for Baz&lt;'static&gt; { //possible\n    fn foo() {}\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 205, "user_id": 8554666, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c0d80205451b80f1cf78061ae20608bd?s=128&d=identicon&r=PG&f=1", "display_name": "pandaman", "link": "https://stackoverflow.com/users/8554666/pandaman"}, "is_accepted": true, "score": 0, "last_activity_date": 1537179278, "creation_date": 1537179278, "answer_id": 52365425, "question_id": 52288565, "link": "https://stackoverflow.com/questions/52288565/how-can-actix-actor-have-pyo3-python/52365425#52365425", "title": "How can actix Actor have PyO3 Python?", "body": "<p>As <a href=\"https://stackoverflow.com/questions/52288565/how-can-actix-actor-have-pyo3-python#comment91536581_52289118\">Nikolay</a> says, you can store <code>Py&lt;PyList&gt;</code> object in <code>WsActor</code>.\nTo restore <code>PyList</code>, you can acquire GIL again and call <code>.as_ref(python)</code> method of <code>AsPyRef</code> trait (which <code>Py&lt;T&gt;</code> implements).\nAn example is as follows:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate actix;\nextern crate actix_web;\nextern crate pyo3;\n\nuse actix::prelude::*;\nuse actix_web::{http, server, ws, App, HttpRequest, HttpResponse, Error};\nuse pyo3::{Python, PyList, Py, AsPyRef};\n\nstruct WsActor {\n    // addr: Addr&lt;PyActor&gt;,\n    pylist: Py&lt;PyList&gt;,\n}\nimpl Actor for WsActor {\n    type Context = ws::WebsocketContext&lt;Self&gt;;\n}\nimpl StreamHandler&lt;ws::Message, ws::ProtocolError&gt; for WsActor {\n    fn handle(&amp;mut self, _: ws::Message, _: &amp;mut Self::Context) {\n        let gil = Python::acquire_gil();\n        let python = gil.python();\n        let list = self.pylist.as_ref(python);\n        println!(\"{}\", list.len());\n    }\n}\n\nfn attach_ws_actor(req: &amp;HttpRequest&lt;()&gt;) -&gt; Result&lt;HttpResponse, Error&gt; {\n    let gil = Python::acquire_gil();\n    let python = gil.python();\n    let pylist = PyList::empty(python);\n    let actor = WsActor {\n        pylist: pylist.into()\n    };\n    ws::start(req, actor)\n}\n\nfn main() {\n    let sys = actix::System::new(\"example\");\n\n    server::new(move || {\n        App::new()\n            .resource(\"/ws/\", |r| r.method(http::Method::GET).f(attach_ws_actor))\n    }).bind(\"0.0.0.0:9999\")\n    .unwrap()\n        .start();\n}\n</code></pre>\n"}], "owner": {"reputation": 13, "user_id": 9592649, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-H7wEe_m3Kf4/AAAAAAAAAAI/AAAAAAAAAIc/WcSbet4tRto/photo.jpg?sz=128", "display_name": "Yasu-umi Nishikawa", "link": "https://stackoverflow.com/users/9592649/yasu-umi-nishikawa"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 413, "favorite_count": 0, "accepted_answer_id": 52365425, "answer_count": 2, "score": 1, "last_activity_date": 1538055842, "creation_date": 1536732827, "last_edit_date": 1538055842, "question_id": 52288565, "link": "https://stackoverflow.com/questions/52288565/how-can-actix-actor-have-pyo3-python", "title": "How can actix Actor have PyO3 Python?", "body": "<p>I'm trying to create Actix Actor which has PyO3 Python interpreter &amp; Py objects.</p>\n\n<p>Question is what is the correct way to create python interpreter actor?</p>\n\n<p>I think err caused by Actor trait defined static.\n<a href=\"https://docs.rs/actix/0.7.4/actix/trait.Actor.html\" rel=\"nofollow noreferrer\">https://docs.rs/actix/0.7.4/actix/trait.Actor.html</a></p>\n\n<p>Is there the way of Actor or Context have object require life parameter?</p>\n\n<p>rust version: nightly-2018-09-04, actix version: 0.7.4</p>\n\n<p>This is current code.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate actix;\nextern crate actix_web;\nextern crate pyo3;\n\nuse actix::prelude::*;\nuse actix_web::{http, server, ws, App, HttpRequest, HttpResponse, Error};\nuse pyo3::{Python, GILGuard, PyList};\n\nstruct WsActor&lt;'a&gt; {\n    // addr: Addr&lt;PyActor&gt;,\n    gil: GILGuard,\n    python: Python&lt;'a&gt;,\n    pylist: &amp;'a PyList,\n}\nimpl&lt;'a&gt; Actor for WsActor&lt;'a&gt; {\n    type Context = ws::WebsocketContext&lt;Self&gt;;\n}\nfn attach_ws_actor(req: &amp;HttpRequest&lt;()&gt;) -&gt; Result&lt;HttpResponse, Error&gt; {\n    let gil = Python::acquire_gil();\n    let python = gil.python();\n    let pylist = PyList::empty(python);\n    let actor = WsActor {gil, python, pylist};\n    ws::start(req, actor)\n}\nfn main() {\n    let sys = actix::System::new(\"example\");\n\n    server::new(move || {\n        App::new()\n            .resource(\"/ws/\", |r| r.method(http::Method::GET).f(attach_ws_actor))\n    }).bind(\"0.0.0.0:9999\")\n    .unwrap()\n        .start();\n}\n</code></pre>\n\n<p>This code can't compile with this err.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0478]: lifetime bound not satisfied\n  --&gt; src/main.rs:15:10\n   |\n15 | impl&lt;'a&gt; Actor for WsActor&lt;'a&gt; {\n   |          ^^^^^\n   |\nnote: lifetime parameter instantiated with the lifetime 'a as defined on the impl at 15:6\n  --&gt; src/main.rs:15:6\n   |\n15 | impl&lt;'a&gt; Actor for WsActor&lt;'a&gt; {\n   |      ^^\n   = note: but lifetime parameter must outlive the static lifetime\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 1, "creation_date": 1536712293, "post_id": 52285828, "comment_id": 91519924, "body": "Are your values actually integers? If so, it seems like you&#39;d be better served by not using references to begin with. e.g. <a href=\"https://play.rust-lang.org/?gist=9e6af44a5bc1c335664c779a4b1586ca&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1536712846, "post_id": 52285828, "comment_id": 91520049, "body": "<i>How are they being borrowed if I am loading in a reference to them</i> \u2014 that&#39;s what borrowing <b>is</b>: taking a reference to a value."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1536712927, "post_id": 52285828, "comment_id": 91520066, "body": "Perhaps you could <a href=\"https://stackoverflow.com/posts/52285828/edit\">edit</a> your question to expand on what part of the error message you are having trouble with? &quot;values in a scope are dropped in the opposite order they are created&quot; feels clear to me."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1536712969, "post_id": 52285828, "comment_id": 91520077, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/44987555/155423\">How do I add references to a vector when the borrowed values are created after the vector?</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/52285828/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1536722550, "post_id": 52285828, "comment_id": 91521933, "body": "The combination of <code>h.contains(&amp;(&amp;a, &amp;b))</code> and <code>h.insert(&amp;(&amp;a, &amp;b))</code> is suspicious. Normally you would call <code>insert</code> with a <code>T</code> and <code>contains</code> with a reference-to-<code>T</code>. It still works the way you wrote it (well, it would, if you follow the answer to the question Shepmaster linked) but the compiler infers that you want a <code>HashSet&lt;&amp;(&amp;i32, &amp;i32)&gt;</code> when you probably wanted a <code>HashSet&lt;(&amp;i32, &amp;i32)&gt;</code>. (Or if loganfsmyth is correct, you really want <code>HashSet&lt;(i32, i32)&gt;</code> and no references at all.)"}], "answers": [{"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1536768173, "post_id": 52288529, "comment_id": 91546363, "body": "@Shepmaster <a href=\"https://play.rust-lang.org/?gist=353742ca6fc1b8d4fcf63eb6af92ff9f&amp;version=nightly&amp;mode=debug&amp;edition=2018\" rel=\"nofollow noreferrer\">With NLLs, the compiler can shorten the lifetime of <code>h</code> so that it doesn&#39;t outlive <code>a</code> and <code>b</code>.</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1536769511, "post_id": 52288529, "comment_id": 91547051, "body": "@trentcl hmm. I&#39;ll investigate more into the why on that and update the linked question. Thanks for pointing that out! I&#39;ll remove my incorrect comment."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1536778990, "post_id": 52288529, "comment_id": 91551518, "body": "@trentcl I updated the linked question. Pedantically, <code>h</code> still outlives <code>a</code> and <code>b</code> (and it always &quot;could&quot;). Compiler nuances are tough."}], "tags": [], "owner": {"reputation": 709, "user_id": 10126273, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6trXt.png?s=128&g=1", "display_name": "Tenders McChiken", "link": "https://stackoverflow.com/users/10126273/tenders-mcchiken"}, "is_accepted": false, "score": 2, "last_activity_date": 1536762054, "last_edit_date": 1536762054, "creation_date": 1536732661, "answer_id": 52288529, "question_id": 52285828, "link": "https://stackoverflow.com/questions/52285828/inserting-references-to-variables-into-hashset-then-using-variables-afterwards/52288529#52288529", "title": "Inserting references to variables into HashSet then using variables afterwards", "body": "<p>Leaving \"why\"s aside for a moment, the example as presented has three issues:</p>\n\n<ol>\n<li><p>The tuple <code>&amp;(...)</code> <em>ceases to exist</em> once the function call ends. So inserting a reference to something that will not exist once <code>HashSet::insert</code> returns is an error, and one that the compiler thankfully catches.</p></li>\n<li><p>You declared the <code>HashSet</code> before the variables you want to reference, which the compiler sees as an error (likely due to the fact that, at some point in the <code>HashSet</code>'s scope, the variables <code>a</code> and <code>b</code> do not exist). This is something I've been burnt by on numerous occasions and is a limitation you should keep in mind until the compiler improves.</p></li>\n<li><p>As pointed out in the comments above, <code>HashSet</code>s take <code>T</code> when inserting and <code>&amp;T</code> when accessing. Your code uses <code>T</code> for both.</p></li>\n</ol>\n\n<p>The following code fixes these issues:</p>\n\n<pre><code>use std::collections::HashSet;\n\nfn main() {\n    let a = 1;\n    let b = 2;\n    let mut h = HashSet::new();\n    if h.contains(&amp;(&amp;a, &amp;b)) {\n        println!(\"fail\");\n    }\n    h.insert((&amp;a, &amp;b));\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=4d2a2150f719a92f0eed105a92e3d227&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>Compare the lines that declare the <code>HashSet</code> and insert the tuple.</p>\n"}], "owner": {"reputation": 2479, "user_id": 2370863, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/1A5At.jpg?s=128&g=1", "display_name": "Ian Fiddes", "link": "https://stackoverflow.com/users/2370863/ian-fiddes"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 213, "favorite_count": 0, "closed_date": 1536761949, "answer_count": 1, "score": 0, "last_activity_date": 1536762054, "creation_date": 1536712131, "last_edit_date": 1536712882, "question_id": 52285828, "link": "https://stackoverflow.com/questions/52285828/inserting-references-to-variables-into-hashset-then-using-variables-afterwards", "closed_reason": "Duplicate", "title": "Inserting references to variables into HashSet then using variables afterwards", "body": "<p>I am trying insert pairs of a variable into a <code>HashSet</code>, after checking if the pair is present already. I then need to do downstream work with the pair, within the same context. Here is a playground reproducing my problem:</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=5eecfa9c1e54b468d79955aab916dd84&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?gist=5eecfa9c1e54b468d79955aab916dd84&amp;version=stable&amp;mode=debug&amp;edition=2015</a></p>\n\n<pre><code>use std::collections::HashSet;\n\nfn main() {\n    let mut h = HashSet::new();\n    let a = 1;\n    let b = 2;\n    if h.contains(&amp;(&amp;a, &amp;b)) {\n        println!(\"fail\");\n    }\n    h.insert(&amp;(&amp;a, &amp;b));\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: borrowed value does not live long enough\n  --&gt; src/main.rs:10:15\n   |\n10 |     h.insert(&amp;(&amp;a, &amp;b));\n   |               ^^^^^^^^ - temporary value dropped here while still borrowed\n   |               |\n   |               temporary value does not live long enough\n11 | }\n   | - temporary value needs to live until here\n   |\n   = note: consider using a `let` binding to increase its lifetime\n\nerror[E0597]: `a` does not live long enough\n  --&gt; src/main.rs:10:17\n   |\n10 |     h.insert(&amp;(&amp;a, &amp;b));\n   |                 ^ borrowed value does not live long enough\n11 | }\n   | - `a` dropped here while still borrowed\n   |\n   = note: values in a scope are dropped in the opposite order they are created\n\nerror[E0597]: `b` does not live long enough\n  --&gt; src/main.rs:10:21\n   |\n10 |     h.insert(&amp;(&amp;a, &amp;b));\n   |                     ^ borrowed value does not live long enough\n11 | }\n   | - `b` dropped here while still borrowed\n   |\n   = note: values in a scope are dropped in the opposite order they are created\n</code></pre>\n\n<p>How can I check if <code>a</code> and <code>b</code> are in the set, then insert them afterwards if they are not, and then do other things with them? How are they being borrowed if I am loading in a reference to them within the same scope?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1536707913, "post_id": 52285333, "comment_id": 91518980, "body": "Welcome to Stack Overflow! I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/26070559/155423\">Is there any way to create a type alias for multiple traits?</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/52285333/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1536708080, "post_id": 52285333, "comment_id": 91519026, "body": "<a href=\"https://play.rust-lang.org/?gist=cc2af870e849aa5cf17b68d4252cc5b2&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">The duplicate applied to your question</a>."}, {"owner": {"reputation": 1, "user_id": 10343739, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edecd31d03c4f64ab0a2b0802e1c1497?s=128&d=identicon&r=PG&f=1", "display_name": "S. Chana", "link": "https://stackoverflow.com/users/10343739/s-chana"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1536709771, "post_id": 52285333, "comment_id": 91519410, "body": "Yes, that solves my problem. Thanks!"}], "owner": {"reputation": 1, "user_id": 10343739, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edecd31d03c4f64ab0a2b0802e1c1497?s=128&d=identicon&r=PG&f=1", "display_name": "S. Chana", "link": "https://stackoverflow.com/users/10343739/s-chana"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 31, "favorite_count": 0, "closed_date": 1536712741, "answer_count": 0, "score": 0, "last_activity_date": 1536707842, "creation_date": 1536707710, "last_edit_date": 1536707842, "question_id": 52285333, "link": "https://stackoverflow.com/questions/52285333/is-there-some-way-to-define-an-alias-for-a-trait-bound", "closed_reason": "Duplicate", "title": "Is there some way to define an alias for a trait bound?", "body": "<p>I have a struct which holds a callback:</p>\n\n<pre><code>struct MyStruct&lt;F&gt;\nwhere\n    F: Fn(u32) -&gt; u32,\n{\n    cb: F,\n}\n\nimpl&lt;F&gt; MyStruct&lt;F&gt;\nwhere\n    F: Fn(u32) -&gt; u32,\n{\n    fn invoke(&amp;self, val: u32) -&gt; u32 {\n        (self.cb)(val)\n    }\n}\n\nfn callback(val: u32) -&gt; u32 {\n    val + 1\n}\n\nfn main() {\n    let s = MyStruct { cb: callback };\n    s.invoke(0);\n}\n</code></pre>\n\n<p>I would like to avoid typing the <code>Fn(u32) -&gt; u32</code> repeatedly, particularly if it's a more complex signature or I need to store several callbacks with the same signature. Is there some way to define an alias for the trait bound? I tried to do this by deriving a trait, like so:</p>\n\n<pre><code>pub trait CallbackFn: Fn(u32) -&gt; u32 {}\n\nstruct MyStruct&lt;F&gt;\nwhere\n    F: CallbackFn,\n{\n    cb: F,\n}\n\nimpl&lt;F&gt; MyStruct&lt;F&gt;\nwhere\n    F: CallbackFn,\n{\n    fn invoke(&amp;self, val: u32) -&gt; u32 {\n        (self.cb)(val)\n    }\n}\n\nfn callback(val: u32) -&gt; u32 {\n    val + 1\n}\n\nfn main() {\n    let s = MyStruct { cb: callback };\n    s.invoke(0);\n}\n</code></pre>\n\n<p>but this fails to compile:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `fn(u32) -&gt; u32 {callback}: CallbackFn` is not satisfied\n  --&gt; src/main.rs:24:13\n   |\n24 |     let s = MyStruct { cb: callback };\n   |             ^^^^^^^^ the trait `CallbackFn` is not implemented for `fn(u32) -&gt; u32 {callback}`\n   |\nnote: required by `MyStruct`\n  --&gt; src/main.rs:3:1\n   |\n3  | / struct MyStruct&lt;F&gt;\n4  | | where\n5  | |     F: CallbackFn,\n6  | | {\n7  | |     cb: F,\n8  | | }\n   | |_^\n\nerror[E0599]: no method named `invoke` found for type `MyStruct&lt;fn(u32) -&gt; u32 {callback}&gt;` in the current scope\n  --&gt; src/main.rs:25:7\n   |\n3  | / struct MyStruct&lt;F&gt;\n4  | | where\n5  | |     F: CallbackFn,\n6  | | {\n7  | |     cb: F,\n8  | | }\n   | |_- method `invoke` not found for this\n...\n25 |       s.invoke(0);\n   |         ^^^^^^\n   |\n   = note: the method `invoke` exists but the following trait bounds were not satisfied:\n           `fn(u32) -&gt; u32 {callback} : CallbackFn`\n</code></pre>\n\n<p>A type alias doesn't quite cut it, because it doesn't allow a closure to be passed, just a bare function pointer - e.g.:</p>\n\n<pre><code>type F = fn(u32) -&gt; u32;\n\nstruct MyStruct {\n    cb: F,\n}\n\nimpl MyStruct {\n    fn invoke(&amp;self, val: u32) -&gt; u32 {\n        (self.cb)(val)\n    }\n}\n\nfn main() {\n    let s = MyStruct { cb: |x| x + 1 }; // works\n    let v = 5u32;\n    let t = MyStruct { cb: |x| (x + v) }; // fails\n    s.invoke(0);\n    t.invoke(1);\n}\n</code></pre>\n"}, {"tags": ["string", "rust", "type-conversion", "polymorphism", "borrowing"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1536688226, "post_id": 52281496, "comment_id": 91511089, "body": "<i>but return the reference</i> \u2014 what variant of <code>Value</code> would allow you to return a reference?"}, {"owner": {"reputation": 215, "user_id": 920950, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/e61beb2e9d96561e29adc76f37b9d6cd?s=128&d=identicon&r=PG", "display_name": "Hellagot", "link": "https://stackoverflow.com/users/920950/hellagot"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1536689065, "post_id": 52281496, "comment_id": 91511527, "body": "The issue that i have is a) i don&#39;t know if this is a good approach in Rust in general, but even if it is, b) the to_string() implementation has to clone the String, if it is already a String, which could be megabytes of data copied useless."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 5, "creation_date": 1536690110, "post_id": 52281496, "comment_id": 91512040, "body": "Implement <code>Into&lt;Cow&lt;str&gt;&gt;</code> perhaps, instead of  <code>ToString</code>. That way, it can return a new <code>String</code> from a <code>Float</code> and a <code>&amp;str</code> from a <code>Text</code>."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1536691749, "post_id": 52281496, "comment_id": 91512954, "body": "I don&#39;t understand the point, that very unclear, why don&#39;t you just match <code>Value</code> and do your operation without use a string. String are very flexible but clearly not a efficiente way to do operation, this look like a javascript feature that you want use in Rust. You loose in every aspect."}, {"owner": {"reputation": 215, "user_id": 920950, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/e61beb2e9d96561e29adc76f37b9d6cd?s=128&d=identicon&r=PG", "display_name": "Hellagot", "link": "https://stackoverflow.com/users/920950/hellagot"}, "edited": false, "score": 0, "creation_date": 1536698746, "post_id": 52281496, "comment_id": 91516072, "body": "You mean &#39;just match &quot;value&quot;&#39; in the &quot;do_something&quot; function? That&#39;s not an option, there will be 100 if not 1000 of functions like this, as soon as i introduce a new type (e.g. Int) i will have to adapt them all. The Cow thing sounds good until now, i am new to Rust, i will see if something better comes up, but it is an option i guess."}, {"owner": {"reputation": 215, "user_id": 920950, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/e61beb2e9d96561e29adc76f37b9d6cd?s=128&d=identicon&r=PG", "display_name": "Hellagot", "link": "https://stackoverflow.com/users/920950/hellagot"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1536726353, "post_id": 52281496, "comment_id": 91522716, "body": "@PeterHall after looking a bit into it, i think the Into&lt;Cow&lt;str&gt;&gt; thing is exactly what i was looking for. Thank you very much. Do you want to add it as answer so i can accept it?"}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 5, "last_activity_date": 1536749738, "last_edit_date": 1536749738, "creation_date": 1536739914, "answer_id": 52290465, "question_id": 52281496, "link": "https://stackoverflow.com/questions/52281496/how-to-build-a-flexible-multiple-type-data-system-in-rust-without-cloning-string/52290465#52290465", "title": "How to build a flexible multiple type data system in Rust without cloning strings?", "body": "<p>The \"standard\" way to deal with the possibility of either a <code>String</code> or a <code>&amp;str</code> is to use a <code>Cow&lt;str&gt;</code>. COW stands for clone-on-write (or <em>copy</em>-on-write) and you can use it for other types besides strings. A <code>Cow</code> lets you hold either a reference or an owned value, and only clone a reference into an owned value when you need to mutate it.</p>\n\n<p>There are a couple of ways you can apply this to your code:</p>\n\n<ol>\n<li>You can just add an <code>Into&lt;Cow&lt;str&gt;&gt;</code> implementation and keep the rest the same.</li>\n<li>Change your types to hold <code>Cow&lt;str&gt;</code>s throughout, to allow <code>Text</code> objects to hold either an owned <code>String</code> or a <code>&amp;str</code>.</li>\n</ol>\n\n<p>The first option is easiest. You can just implement the trait. Note that the <code>Into::into</code> accepts <code>self</code>, so you need to implement this for <code>&amp;Value</code> not <code>Value</code>, otherwise the borrowed values would be referencing owned values that have been consumed by <code>into</code> and are already invalid.</p>\n\n<pre><code>impl&lt;'a&gt; Into&lt;Cow&lt;'a, str&gt;&gt; for &amp;'a Value {\n    fn into(self) -&gt; Cow&lt;'a, str&gt; {\n        match self {\n            Value::Float(f) =&gt; Cow::from(format!(\"{}\", f.value).to_string()),\n            Value::Text(t) =&gt; Cow::from(&amp;t.value),\n        }\n    }\n}\n</code></pre>\n\n<p>Implementing this for <code>&amp;'a Value</code> lets us tie the lifetime in the <code>Cow&lt;'a, str&gt;</code> back to the source of the data. This wouldn't be possible if we implemented just for <code>Value</code> which is good because the data would be gone!</p>\n\n<hr>\n\n<p>An even better solution might be to use <code>Cow</code> in your <code>Text</code> enum too:</p>\n\n<pre><code>use std::borrow::Cow;\n\npub struct Text&lt;'a&gt; {\n    pub value: Cow&lt;'a, str&gt;,\n}\n</code></pre>\n\n<p>This will let you hold a borrowed <code>&amp;str</code>:</p>\n\n<pre><code>let string = String::From(\"hello\");\n\n// same as Cow::Borrowed(&amp;string)\nlet text = Text { value: Cow::from(&amp;string) };\n</code></pre>\n\n<p>Or a <code>String</code>:</p>\n\n<pre><code>// same as Cow::Owned(string)\nlet text = Text { value: Cow::from(string) };\n</code></pre>\n\n<p>Since <code>Value</code> now can indirectly hold a reference, it will need a lifetime parameter of its own:</p>\n\n<pre><code>pub enum Value&lt;'a&gt; {\n    Float(Float),\n    Text(Text&lt;'a&gt;),\n}\n</code></pre>\n\n<p>Now the <code>Into&lt;Cow&lt;str&gt;&gt;</code> implementation can be for <code>Value</code> itself because referenced values can be moved:</p>\n\n<pre><code>impl&lt;'a&gt; Into&lt;Cow&lt;'a, str&gt;&gt; for Value&lt;'a&gt; {\n    fn into(self) -&gt; Cow&lt;'a, str&gt; {\n        match self {\n            Value::Float(f) =&gt; Cow::from(format!(\"{}\", f.value).to_string()),\n            Value::Text(t) =&gt; t.value,\n        }\n    }\n}\n</code></pre>\n\n<p>Just like <code>String</code>, <code>Cow&lt;str&gt;</code> satisfies <code>Deref&lt;Target = str&gt;</code> so it can be used anywhere that a <code>&amp;str</code> is expected, by just passing a reference. This is another reason <a href=\"https://stackoverflow.com/a/40006220/493729\">why you should always try accept <code>&amp;str</code> in a function argument</a>, rather than <code>String</code> or <code>&amp;String</code>.</p>\n\n<hr>\n\n<p>Generally, you can use <code>Cow</code>s as conveniently as <code>String</code>s, because they have many of the same <code>impl</code>s. For example:</p>\n\n<pre><code>let input = String::from(\"12.0\");\n{\n    // This one is borrowed (same as Cow::Borrowed(&amp;input))\n    let text = Cow::from(&amp;input);\n}\n// This one is owned (same as Cow::Owned(input))\nlet text = Cow::from(input);\n\n// Most of the usual String/&amp;str trait implementations are also there for Cow\nlet num: f64 = text.parse().unwrap();\n</code></pre>\n"}], "owner": {"reputation": 215, "user_id": 920950, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/e61beb2e9d96561e29adc76f37b9d6cd?s=128&d=identicon&r=PG", "display_name": "Hellagot", "link": "https://stackoverflow.com/users/920950/hellagot"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 413, "favorite_count": 0, "accepted_answer_id": 52290465, "answer_count": 1, "score": 2, "last_activity_date": 1547055125, "creation_date": 1536687847, "last_edit_date": 1547055125, "question_id": 52281496, "link": "https://stackoverflow.com/questions/52281496/how-to-build-a-flexible-multiple-type-data-system-in-rust-without-cloning-string", "title": "How to build a flexible multiple type data system in Rust without cloning strings?", "body": "<p>I want to build a system where data of different types (<code>i32</code>, <code>String</code>, ...) flows between functions that modify the data. For example, I want to have an <code>add</code> function that gets \"some\" data and adds it.</p>\n\n<p>The <code>add</code> function gets something of type <code>Value</code> and if <code>Value</code> is an <code>i32</code>, it adds the two <code>i32</code> values, if it is of type <code>String</code>, it returns a string that combines both strings.</p>\n\n<p>I know that this would be almost perfect for template programming (or whatever this is called in Rust, I'm coming from C++) but in my case I want to have small code blocks that handle the stuff.</p>\n\n<p>As an example, with <code>f64</code> and <code>String</code>, using <code>Float</code> and <code>Text</code> as the names, I have:</p>\n\n<pre><code>pub struct Float {\n    pub min: f64,\n    pub max: f64,\n    pub value: f64,\n}\n\npub struct Text {\n    pub value: String,\n}\n\npub enum Value {\n    Float(Float),\n    Text(Text),\n}\n</code></pre>\n\n<p>Now I want to implement a function that gets a value that is supposed to be a string and does something to it, so I implement the <code>to_string()</code> method for <code>Value</code>:</p>\n\n<pre><code>impl std::string::ToString for Value {\n    fn to_string(&amp;self) -&gt; String {\n        match self {\n            Value::Float(f) =&gt; format!(\"{}\", f.value).to_string(),\n            Value::Text(t) =&gt; t.value.clone(),\n        }\n    }\n}\n</code></pre>\n\n<p>Now the function would do something like:</p>\n\n<pre><code>fn do_something(value: Value) -&gt; Value {\n    let s = value.to_string();\n    // do something with s, which probably leads to creating a new string\n\n    let new_value = Text(new_string);\n    Value::Text(new_value)\n}\n</code></pre>\n\n<p>In the case of a <code>Value::Float</code> this would create a new <code>String</code>, then a new <code>String</code> with the result and return it, but in the case of a <code>Value::Text</code> this would clone the string, which is an unnecessary step, and then create the new one.</p>\n\n<p>Is there a way where the <code>to_string()</code> implementation could create a new <code>String</code> on <code>Value::Float</code> but return the reference of <code>Value::Text</code>'s value?</p>\n"}, {"tags": ["generics", "rust", "traits"], "comments": [{"owner": {"reputation": 36902, "user_id": 223424, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e97c628a88337b15e76a4690e916a2cd?s=128&d=identicon&r=PG", "display_name": "9000", "link": "https://stackoverflow.com/users/223424/9000"}, "edited": false, "score": 0, "creation_date": 1536686969, "post_id": 52281091, "comment_id": 91510499, "body": "Can a single implementation be even chosen in your example? You ask for two implementations of the same trait for the same class, they overlap, and neither looks more specific than the other. Am I missing anything?"}, {"owner": {"reputation": 1915, "user_id": 2682729, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/PZlkg.gif?s=128&g=1", "display_name": "typesanitizer", "link": "https://stackoverflow.com/users/2682729/typesanitizer"}, "reply_to_user": {"reputation": 36902, "user_id": 223424, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e97c628a88337b15e76a4690e916a2cd?s=128&d=identicon&r=PG", "display_name": "9000", "link": "https://stackoverflow.com/users/223424/9000"}, "edited": false, "score": 0, "creation_date": 1536687200, "post_id": 52281091, "comment_id": 91510604, "body": "@9000 Suppose <code>V</code> and <code>K</code> have some concrete types such that (a) there is no <code>Into&lt;K_&gt;</code> for <code>K</code> and (b) there is a unique <code>V_</code> such that <code>V: Into&lt;V_&gt;</code>, then the second one should be picked."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1536697212, "post_id": 52281091, "comment_id": 91515478, "body": "Can you provide an example of how this would be used? I know there are workarounds for some problems like this one, but I don&#39;t know whether they would work for your case or not."}, {"owner": {"reputation": 1915, "user_id": 2682729, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/PZlkg.gif?s=128&g=1", "display_name": "typesanitizer", "link": "https://stackoverflow.com/users/2682729/typesanitizer"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1536705175, "post_id": 52281091, "comment_id": 91518341, "body": "@trentcl I was playing around with coercions, where you may want to &quot;coerce through&quot; either parameter. The code is quite similar to this (well not now, because this doesn&#39;t work), except with a bunch of more trait constraints. If it doesn&#39;t work here, then it won&#39;t work there."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1536719826, "post_id": 52281091, "comment_id": 91521384, "body": "Maybe I should rephrase. In your ideal situation, where the code here is replaced with (some workaround), what does the call site look like? Can you write a test that would pass if this code did compile?"}], "answers": [{"comments": [{"owner": {"reputation": 1915, "user_id": 2682729, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/PZlkg.gif?s=128&g=1", "display_name": "typesanitizer", "link": "https://stackoverflow.com/users/2682729/typesanitizer"}, "edited": false, "score": 0, "creation_date": 1536687896, "post_id": 52281253, "comment_id": 91510941, "body": "Are there any particular soundness/modularity related issues with this? Some educated guesses would be very helpful in understanding the status quo. I had a look at the linked questions but I fail to see how the points made there apply here. My question doesn&#39;t involve overlapping impls, and no one downstream can define <code>impl&lt;..&gt; Foo&lt;..&gt; for HashMap&lt;..&gt;</code>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 3, "last_activity_date": 1536686892, "creation_date": 1536686892, "answer_id": 52281253, "question_id": 52281091, "link": "https://stackoverflow.com/questions/52281091/can-i-avoid-eager-ambiguity-resolution-for-trait-implementations-with-generics/52281253#52281253", "title": "Can I avoid eager ambiguity resolution for trait implementations with generics?", "body": "<blockquote>\n  <p>Can I avoid eager ambiguity resolution for trait implementations with generics?</p>\n</blockquote>\n\n<p>No.</p>\n\n<blockquote>\n  <p>Is it possible to have [ambiguity resolution to be done at the call site, rather than at the definition site]?</p>\n</blockquote>\n\n<p>No.</p>\n\n<hr>\n\n<p>There's a (long-delayed) <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1210-impl-specialization.md\" rel=\"nofollow noreferrer\">RFC for <em>specialization</em></a> that will allow overlapping trait implementations, but only when one of them is more specific than the others. I don't believe this is true for your case, so it would not help.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/39159226/155423\">Conflicting implementations of trait in Rust</a></li>\n<li><a href=\"https://stackoverflow.com/q/45033704/155423\">Why do I get &quot;conflicting implementations of trait&quot; for f32 which does not implement Ord?</a></li>\n<li><a href=\"https://stackoverflow.com/q/45873736/155423\">Why do I get a conflicting implementations error when specializing a trait?</a></li>\n<li><a href=\"https://stackoverflow.com/q/37347311/155423\">How is there a conflicting implementation of `From` when using a generic type?</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": false, "score": 3, "last_activity_date": 1538944621, "last_edit_date": 1538944621, "creation_date": 1538943961, "answer_id": 52692592, "question_id": 52281091, "link": "https://stackoverflow.com/questions/52281091/can-i-avoid-eager-ambiguity-resolution-for-trait-implementations-with-generics/52692592#52692592", "title": "Can I avoid eager ambiguity resolution for trait implementations with generics?", "body": "<p>There is, in fact, a trick you may be able to apply here.</p>\n\n<p>In order for the compiler to <em>pick</em> an <code>impl</code> for you, it has to be attached to a type parameter that can be inferred. You can add a type parameter to <code>trait Foo</code> and create marker structs so that the <code>impl</code>s no longer overlap:</p>\n\n<pre><code>trait Foo&lt;K, U&gt; {\n    const FOO: i32;\n}\n\nstruct ByKeyInto;\nimpl&lt;K, K_, V&gt; Foo&lt;HashMap&lt;K_, V&gt;, ByKeyInto&gt; for HashMap&lt;K, V&gt;\nwhere\n    K: Hash + Eq + Into&lt;K_&gt;,\n{\n    const FOO: i32 = 1;\n}\n\nstruct ByValInto;\nimpl&lt;K, V, V_&gt; Foo&lt;HashMap&lt;K, V_&gt;, ByValInto&gt; for HashMap&lt;K, V&gt;\nwhere\n    K: Hash + Eq,\n    V: Into&lt;V_&gt;,\n{\n    const FOO: i32 = 2;\n}\n</code></pre>\n\n<p>Since <code>Foo&lt;_, ByKeyInto&gt;</code> and <code>Foo&lt;_, ByValInto&gt;</code> are different traits, the <code>impl</code>s no longer overlap. When you use a generic function that requires <code>Foo&lt;_, U&gt;</code> for some <code>U</code>, the compiler can go looking for a type that works, and it <em>does</em> resolve to a concrete type if there is provably only one possibility.</p>\n\n<p>Here's an example of code that compiles and infers the correct <code>impl</code> at each call site by picking <code>ByKeyInto</code> or <code>ByValInto</code> for <code>U</code>:</p>\n\n<pre><code>fn call_me&lt;T, U&gt;(_: T)\nwhere\n    T: Foo&lt;HashMap&lt;String, i32&gt;, U&gt;,\n{\n    println!(\"{}\", T::FOO);\n}\n\nfn main() {\n    let x: HashMap&lt;&amp;str, i32&gt; = HashMap::new();\n    call_me(x);\n    let y: HashMap&lt;String, bool&gt; = HashMap::new();\n    call_me(y);\n}\n</code></pre>\n\n<p>This prints (<a href=\"https://play.rust-lang.org/?gist=4edbd2b88f21047aaaa9d364176000d8&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a>):</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>1\n2\n</code></pre>\n\n<hr>\n\n<p>However, since <code>Into</code> is reflexive (that is, <code>T</code> implements <code>Into&lt;T&gt;</code> for all <code>T</code>), this is awkward if you want to use <code>Foo&lt;HashMap&lt;K, V&gt;&gt;</code> for <code>HashMap&lt;K, V&gt;</code>. Since there <em>are</em> overlapping <code>impl</code>s in this case, you have to choose one by turbofish (<code>::&lt;&gt;</code>).</p>\n\n<pre><code>let z: HashMap&lt;String, i32&gt; = HashMap::new();\ncall_me::&lt;_, ByKeyInto&gt;(z);  // prints 1\ncall_me::&lt;_, ByValInto&gt;(z);  // prints 2\n</code></pre>\n"}], "owner": {"reputation": 1915, "user_id": 2682729, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/PZlkg.gif?s=128&g=1", "display_name": "typesanitizer", "link": "https://stackoverflow.com/users/2682729/typesanitizer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 361, "favorite_count": 2, "answer_count": 2, "score": 4, "last_activity_date": 1538944621, "creation_date": 1536686265, "last_edit_date": 1536686799, "question_id": 52281091, "link": "https://stackoverflow.com/questions/52281091/can-i-avoid-eager-ambiguity-resolution-for-trait-implementations-with-generics", "title": "Can I avoid eager ambiguity resolution for trait implementations with generics?", "body": "<p>Consider the following Rust code [<a href=\"https://play.rust-lang.org/?gist=5dade8b8dc00c48aef79be8ae74eb73b&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a>]:</p>\n\n<pre><code>use std::collections::HashMap;\nuse std::hash::Hash;\n\ntrait Foo&lt;K&gt; {\n    const FOO: i32;\n}\n\nimpl&lt;K, K_, V&gt; Foo&lt;HashMap&lt;K_, V&gt;&gt; for HashMap&lt;K, V&gt;\nwhere\n    K: Hash + Eq + Into&lt;K_&gt;,\n{\n    const FOO: i32 = 1;\n}\n\nimpl&lt;K, V, V_&gt; Foo&lt;HashMap&lt;K, V_&gt;&gt; for HashMap&lt;K, V&gt;\nwhere\n    K: Hash + Eq,\n    V: Into&lt;V_&gt;,\n{\n    const FOO: i32 = 2;\n}\n\nfn main() {}\n</code></pre>\n\n<p>(The <code>const</code> is not relevant, I'd like the code to compile with <code>fn</code>s too).</p>\n\n<p>It fails to compile with the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0119]: conflicting implementations of trait `Foo&lt;std::collections::HashMap&lt;_, _&gt;&gt;` for type `std::collections::HashMap&lt;_, _&gt;`:\n  --&gt; src/main.rs:15:1\n   |\n8  | / impl&lt;K, K_, V&gt; Foo&lt;HashMap&lt;K_, V&gt;&gt; for HashMap&lt;K, V&gt;\n9  | | where\n10 | |     K: Hash + Eq + Into&lt;K_&gt;,\n11 | | {\n12 | |     const FOO: i32 = 1;\n13 | | }\n   | |_- first implementation here\n14 | \n15 | / impl&lt;K, V, V_&gt; Foo&lt;HashMap&lt;K, V_&gt;&gt; for HashMap&lt;K, V&gt;\n16 | | where\n17 | |     K: Hash + Eq,\n18 | |     V: Into&lt;V_&gt;,\n19 | | {\n20 | |     const FOO: i32 = 2;\n21 | | }\n   | |_^ conflicting implementation for `std::collections::HashMap&lt;_, _&gt;`\n</code></pre>\n\n<p>As I understand it, the problem is that there is an ambiguity here - which implementation should be picked <em>if</em> both are legal? Ideally I'd like to have the following:</p>\n\n<ol>\n<li>The above code (or some work around) should compile fine.</li>\n<li>At the call site, if there is only one <code>impl</code> possible for the given type, then that one is picked.</li>\n<li>At the call site, if there are multiple <code>impl</code>s possible, then it is an error (coherence issues).</li>\n</ol>\n\n<p>More succinctly, I want ambiguity resolution to be done at the call site, rather than at the definition site. Is it possible to have this behavior?</p>\n"}, {"tags": ["rust", "rust-diesel"], "comments": [{"owner": {"reputation": 2089, "user_id": 1291118, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5347088e8b4e042e3ed3717051455f94?s=128&d=identicon&r=PG", "display_name": "vasilakisfil", "link": "https://stackoverflow.com/users/1291118/vasilakisfil"}, "edited": false, "score": 0, "creation_date": 1568116289, "post_id": 52279553, "comment_id": 102165226, "body": "I am stumble across the same problem today, and still haven&#39;t found any solution. The only thing I can suggest to you is to consider running everything into a single transaction, so that you don&#39;t have inconsistent data in case one insert fails."}], "answers": [{"tags": [], "owner": {"reputation": 32543, "user_id": 528726, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/6307569a99dd77fff0463032051d7e39?s=128&d=identicon&r=PG", "display_name": "joelparkerhenderson", "link": "https://stackoverflow.com/users/528726/joelparkerhenderson"}, "is_accepted": false, "score": 14, "last_activity_date": 1570643269, "last_edit_date": 1570643269, "creation_date": 1569528630, "answer_id": 58124082, "question_id": 52279553, "link": "https://stackoverflow.com/questions/52279553/what-is-the-standard-pattern-to-relate-three-tables-many-to-many-relation-with/58124082#58124082", "title": "What is the standard pattern to relate three tables (many-to-many relation) within Diesel?", "body": "<p>This answer is from <a href=\"https://gitter.im/diesel-rs/diesel\" rel=\"noreferrer\">the Diesel chat</a> by @SRugina and @weiznich (edited and adapted for the question).</p>\n\n<h3>How do I write a many-to-many relationship with Diesel?</h3>\n\n<p>I normally combine <code>belonging_to</code> and <code>join</code>, so something like:</p>\n\n<pre><code>UserOrganization::belonging_to(&amp;organizations)\n    .inner_join(user::table)\n</code></pre>\n\n<h3>Is there anything akin to <code>belonging_to_many</code>?</h3>\n\n<p>No, <code>belonging_to_many</code> does not exist because Diesel does not try to hide the database from you. Doing that would cause issues as soon as you want to do complex or non-standard things. Depending on your exact use case, joining all three tables could also be an option.</p>\n\n<h3>How do I use <code>inner_join</code> in this scenario?</h3>\n\n<p>You have three tables: <code>users</code>, <code>organizations</code> and <code>user_organizations</code> and you want to get all organizations for a specific user.</p>\n\n<p>There are two variants doing that. The first variant is only one query, but may not match your required data layout if you want to do that for all users:</p>\n\n<pre><code>users::table\n    .inner_join(user_organizations::table.inner_join(organizations::table))\n    .filter(users::id.eq(user_id))\n    .select(organizations::all_columns)\n    .load::&lt;Organization&gt;(conn)?;\n</code></pre>\n\n<p>The second variant allows grouping the results for each user using the built-in associations API:</p>\n\n<pre><code>let user = users::table\n    .find(user_id)\n    .first::&lt;User&gt;(conn)?;\n\nUserOrganization::belonging_to(&amp;user)\n    .inner_join(organizations::table)\n    .select(organizations::all_columns)\n    .load::&lt;Organization&gt;(conn)?;\n</code></pre>\n\n<p>Inserting requires three separate inserts. We do not try to hide that because in the end it's a user choice how to handle data consistency in case of a failed insert there. Using a transaction is a common choice.</p>\n"}], "owner": {"reputation": 322, "user_id": 4136594, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/278b274cf6cf002b38d1174b1a2d60a7?s=128&d=identicon&r=PG&f=1", "display_name": "ivan_ochc", "link": "https://stackoverflow.com/users/4136594/ivan-ochc"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1528, "favorite_count": 3, "answer_count": 1, "score": 9, "last_activity_date": 1570643269, "creation_date": 1536680129, "last_edit_date": 1536681677, "question_id": 52279553, "link": "https://stackoverflow.com/questions/52279553/what-is-the-standard-pattern-to-relate-three-tables-many-to-many-relation-with", "title": "What is the standard pattern to relate three tables (many-to-many relation) within Diesel?", "body": "<p>Database - Postgres</p>\n\n<p>I have the following relation:</p>\n\n<pre><code>users &lt;\u2014&gt;&gt; users_organizations &lt;&lt;\u2014&gt; organizations\n</code></pre>\n\n<p>Schema:</p>\n\n<pre><code>table! {\n    organizations (id) {\n        id -&gt; Int4,\n        name -&gt; Varchar,\n    }\n}\n\ntable! {\n    users (id) {\n        id -&gt; Int4,\n        name -&gt; Varchar,\n        email -&gt; Varchar,\n        password -&gt; Varchar,\n    }\n}\n\ntable! {\n    users_organizations (id, user_id, organization_id) {\n        id -&gt; Int4,\n        user_id -&gt; Int4,\n        organization_id -&gt; Int4,\n    }\n}\n</code></pre>\n\n<p>Models:</p>\n\n<pre><code>#[derive(Identifiable, Queryable, Debug, Serialize, Deserialize)]\npub struct Organization {\n    pub id: i32,\n    pub name: String,\n}\n\n\n#[derive(Identifiable, Queryable, PartialEq, Debug, Serialize, Deserialize)]\npub struct User {\n    pub id: i32,\n    pub name: String,\n    pub email: String,\n    pub password: String,\n}\n\n\n#[derive(Identifiable, Queryable, Debug, Associations, Serialize, Deserialize)]\n#[belongs_to(User)]\n#[belongs_to(Organization)]\n#[table_name = \"users_organizations\"]\npub struct UserOrganization {\n    pub id: i32,\n    pub user_id: i32,\n    pub organization_id: i32,\n}\n</code></pre>\n\n<p>I want to create an organization. To support such relation, I have to manually add ids of user and organization to the users_organizations table. Is there any better approach to implement such relation?</p>\n\n<pre><code>let new_organization = NewOrganization { name: &amp;msg.name };\nlet organization = insert_into(organizations::table)\n    .values(&amp;new_organization)\n    .get_result::(conn)\n    .map_err(|_| error::ErrorInternalServerError(\u201cError creating organization\u201d))?;\n\nlet new_user_org = NewUserOrganizationIDs {\n    user_id: msg.user_id,\n    organization_id: organization.id,\n};\n\ninsert_into(users_organizations::table)\n    .values(&amp;new_user_org)\n    .get_result::&lt;UserOrganization&gt;(conn)\n    .map_err(|_| error::ErrorInternalServerError(\"Error creating user-organization data\"))\n</code></pre>\n\n<p>Same question here. In case of selecting all organizations that relate to user (and vice verse) I came up with the following code:</p>\n\n<pre><code>let user = users::table.filter(users::id.eq(&amp;msg.user_id))\n        .get_result::&lt;User&gt;(conn)\n        .map_err(|_| error::ErrorNotFound(\"User doesn't exist\"))?;\n\nlet user_organizations = UserOrganization::belonging_to(&amp;user)\n    .get_results::&lt;UserOrganization&gt;(conn)\n    .map_err(|_| error::ErrorNotFound(\"User doesn't have any organization\"))?;\n\nlet mut organization_ids = vec![];\nfor user_org in &amp;user_organizations {\n    organization_ids.push(user_org.organization_id);    \n}\n\norganizations::table.filter(organizations::id.eq_any(organization_ids))\n    .get_results::&lt;Organization&gt;(conn)\n    .map_err(|_| error::ErrorNotFound(\"Organizations don't exist\"))\n</code></pre>\n"}, {"tags": ["casting", "rust", "type-conversion"], "comments": [{"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 5, "creation_date": 1536680837, "post_id": 52279538, "comment_id": 91507467, "body": "Why are you try to <i>cast</i> a string to an <code>u8</code>? Wouldn&#39;t you rather have to <i>parse</i> it?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1536682260, "post_id": 52279538, "comment_id": 91508238, "body": "Rust doesn&#39;t really have &quot;primitive types&quot;, not in the same way Java uses the term. For example, arrays, slices, references, tuples, <code>str</code>, and closures are all primitive-ish. The closest thing you get to a Java-like &quot;primitive type vs. reference type&quot; distinction is <code>Copy</code> vs. non-<code>Copy</code>."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 9, "creation_date": 1536680696, "post_id": 52279690, "comment_id": 91507378, "body": "This is useful <i>but doesn&#39;t answer the posed question</i>."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1536680770, "post_id": 52279690, "comment_id": 91507436, "body": "@Shepmaster <i>I&#39;m trying to verify an IP address in Rust</i>: this is the real question."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1536681030, "post_id": 52279690, "comment_id": 91507585, "body": "Then edit the OP&#39;s question to make it what you think it should be, communicate with the OP to clarify the question, etc."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1536681067, "post_id": 52279690, "comment_id": 91507607, "body": "@Shepmaster I added a line in my answer."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 1, "last_activity_date": 1536680738, "last_edit_date": 1536680738, "creation_date": 1536680667, "answer_id": 52279690, "question_id": 52279538, "link": "https://stackoverflow.com/questions/52279538/non-primitive-to-primitive-cast-in-rust/52279690#52279690", "title": "Non-primitive to primitive cast in Rust?", "body": "<p>Please reread the chapter about <a href=\"https://doc.rust-lang.org/book/second-edition/ch09-00-error-handling.html?highlight=error,handling#error-handling\" rel=\"nofollow noreferrer\">error handling</a>. You do not need all this:</p>\n\n<pre><code>use std::net::Ipv4Addr;\n\nfn main() {\n    let ip = \"127.0.0.1\".parse::&lt;Ipv4Addr&gt;();\n\n    match ip {\n        Ok(ip) =&gt; println!(\"valid\"),\n        Err(e) =&gt; println!(\"invalid\"),\n    }\n}\n</code></pre>\n\n<hr>\n\n<p>About your question, you can use primitive cast for... primitive types only. You must use <code>From</code> and <code>Into</code>, or <code>parse</code> if you convert a <code>&amp;str</code> into another type.</p>\n"}], "owner": {"reputation": 145, "user_id": 9159340, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/5NmP6.jpg?s=128&g=1", "display_name": "Dialvive", "link": "https://stackoverflow.com/users/9159340/dialvive"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2274, "favorite_count": 0, "accepted_answer_id": 52279690, "answer_count": 1, "score": 1, "last_activity_date": 1536680738, "creation_date": 1536680092, "last_edit_date": 1536680713, "question_id": 52279538, "link": "https://stackoverflow.com/questions/52279538/non-primitive-to-primitive-cast-in-rust", "title": "Non-primitive to primitive cast in Rust?", "body": "<p>I'm trying to verify an IP address in Rust, but I can't find a solution casting a <code>str</code> into a <code>u8</code> that doesn't involve using nightly Rust:</p>\n\n<pre><code>use std::net::{IpAddr, Ipv4Addr};\n\nfn verify_address(address: String) -&gt; bool {\n    let v: Vec&lt;&amp;str&gt; = address.split('.').collect();\n\n    let v_u8: Vec&lt;u8&gt; = v.iter().map(|c| *c.to_owned() as u8).collect();\n\n    let addr = IpAddr::V4(Ipv4Addr::new(v_u8[0], v_u8[1], v_u8[2], v_u8[3]));\n        //.expect(\"ERR: Error parsing IPv4 address!\");\n\n    if !addr.is_ipv4()  {\n        return false;\n    }\n    return true;\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0605]: non-primitive cast: `str` as `u8`\n --&gt; src/lib.rs:6:42\n  |\n6 |     let v_u8: Vec&lt;u8&gt; = v.iter().map(|c| *c.to_owned() as u8).collect();\n  |                                          ^^^^^^^^^^^^^^^^^^^\n  |\n  = note: an `as` expression can only be used to convert between primitive types. Consider using the `From` trait\n</code></pre>\n"}, {"tags": ["networking", "rust", "udp"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1536663875, "post_id": 52274312, "comment_id": 91496137, "body": "Does this work in <code>C</code>? If yes, then you may convert your socket into a <a href=\"https://doc.rust-lang.org/std/os/unix/io/trait.AsRawFd.html#tymethod.as_raw_fd\" rel=\"nofollow noreferrer\"><code>raw_fd</code></a> and use C functions to obtain. I don&#39;t see an obvisous way to achieve this in pure rust, except opening two different sockets on each interface."}, {"owner": {"reputation": 206047, "user_id": 126769, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/zBsgn.png?s=128&g=1", "display_name": "nos", "link": "https://stackoverflow.com/users/126769/nos"}, "edited": false, "score": 1, "creation_date": 1536668399, "post_id": 52274312, "comment_id": 91499056, "body": "No, there&#39;s no C API to do that either in such a setup. The &quot;workaround&quot; is to create one socket per interface, that way you know which socket the datagram arrived on. (Or to set up the networking such that packets that goes out on eth0 can communicate with the wireless network  - which it should when both eth0 and wlan are on the same subnet)"}, {"owner": {"reputation": 11, "user_id": 10346925, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dc181c9a2fe9f22ac27cc8626e08f04d?s=128&d=identicon&r=PG&f=1", "display_name": "James", "link": "https://stackoverflow.com/users/10346925/james"}, "reply_to_user": {"reputation": 206047, "user_id": 126769, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/zBsgn.png?s=128&g=1", "display_name": "nos", "link": "https://stackoverflow.com/users/126769/nos"}, "edited": false, "score": 0, "creation_date": 1536669995, "post_id": 52274312, "comment_id": 91500114, "body": "Thanks. @nos - the networking is set up correctly, the packet will arrive at the remote computer, however the client program will not read it because it contacted different IP."}], "owner": {"reputation": 11, "user_id": 10346925, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dc181c9a2fe9f22ac27cc8626e08f04d?s=128&d=identicon&r=PG&f=1", "display_name": "James", "link": "https://stackoverflow.com/users/10346925/james"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 64, "favorite_count": 1, "answer_count": 0, "score": 1, "last_activity_date": 1536667650, "creation_date": 1536663318, "last_edit_date": 1536667650, "question_id": 52274312, "link": "https://stackoverflow.com/questions/52274312/how-to-get-the-destination-ip-when-accepting-a-connection-with-a-udpsocket", "title": "How to get the destination IP when accepting a connection with a UdpSocket?", "body": "<p>I am using <code>UdpSocket</code> to create a server, binding to <code>0.0.0.0:serverport</code>. I can get the source IP when a datagram arrives by using <a href=\"https://doc.rust-lang.org/std/net/struct.UdpSocket.html#method.recv_from\" rel=\"nofollow noreferrer\"><code>recv_from</code></a>.\nHowever, I need to get my local server's IP (destination IP) which the remote client contacted. I can see it in Wireshark but cannot obtain it via the API.</p>\n\n<p>Motivation: I have 2 IPs from same network, <code>eth</code> and <code>wlan</code>. When a client contacts me on my <code>wlan</code> IP, in Wireshark I see the response UDP packet will have the correct port (same as request), but the source IP is the IP of my <code>eth</code> interface, thus the client will not receive the answer. Listening on just my <code>wlan</code> IP does solve the issue, but I want to listen on all interfaces.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1536658978, "post_id": 52272867, "comment_id": 91493330, "body": "It looks like you think that <code>&#39;static</code> here means that the boxed value will live forever, but that is when it refers to references. Here, it constraints a type, it just means that <code>U</code> will not contain non-static references."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1536668307, "post_id": 52272867, "comment_id": 91499006, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/40053550/155423\">The compiler suggests I add a &#39;static lifetime because the parameter type may not live long enough, but I don&#39;t think that&#39;s what I want</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/52272867/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1536668464, "post_id": 52272867, "comment_id": 91499093, "body": "<a href=\"https://play.rust-lang.org/?gist=149b51e36b4be4956e9a9ad9c382fd96&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">The duplicate applied to your question</a>"}, {"owner": {"reputation": 922, "user_id": 3402665, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/08Ff2.jpg?s=128&g=1", "display_name": "Oli", "link": "https://stackoverflow.com/users/3402665/oli"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1536670036, "post_id": 52272867, "comment_id": 91500151, "body": "@Shepmaster it looks like your rust example does the trick, now I just have to read up on this syntax:  <code>dyn Observable&lt;U&gt; + &#39;a</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1536670252, "post_id": 52272867, "comment_id": 91500287, "body": "@Oli I added a duplicate Q for what the syntax is: <a href=\"https://stackoverflow.com/q/42028470/155423\">Why is adding a lifetime to a trait with the plus operator (Iterator&lt;Item = &amp;Foo&gt; + &#39;a) needed?</a>."}], "owner": {"reputation": 922, "user_id": 3402665, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/08Ff2.jpg?s=128&g=1", "display_name": "Oli", "link": "https://stackoverflow.com/users/3402665/oli"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 89, "favorite_count": 0, "closed_date": 1536670193, "answer_count": 0, "score": 3, "last_activity_date": 1536670203, "creation_date": 1536658179, "last_edit_date": 1536668282, "question_id": 52272867, "link": "https://stackoverflow.com/questions/52272867/lifetime-of-returned-boxed-value-does-not-live-long-enough", "closed_reason": "Duplicate", "title": "Lifetime of returned Boxed value does not live long enough", "body": "<p>I'm learning Rust and thought I'd try to make a very simple reactive stream library. A sample of the code is below:</p>\n\n<pre><code>trait Observable&lt;T&gt; {\n    // some stuff for emitting values when requested\n}\n\ntrait Mappable&lt;T, U&gt; {\n    fn map(self, f: fn(&amp;T) -&gt; U) -&gt; Box&lt;dyn Observable&lt;U&gt;&gt;;\n}\n\nstruct Just&lt;T&gt; {\n    value: T\n}\n\nimpl&lt;T&gt; Observable&lt;T&gt; for Just&lt;T&gt; {}\n\nimpl&lt;T, U: 'static&gt; Mappable&lt;T, U&gt; for Just&lt;T&gt; {\n    fn map(self, f: fn(&amp;T) -&gt; U) -&gt; Box&lt;dyn Observable&lt;U&gt;&gt; {\n        Box::new(Just { value: f(&amp;self.value) })\n    }\n}\n</code></pre>\n\n<p>In order to make it work, I need to give a <code>'static</code> lifetime to the <code>U</code> type in the implementation of <code>Mappable</code> for <code>Just</code>. Without it, the compiler complains:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0310]: the parameter type `U` may not live long enough\n  --&gt; src/lib.rs:17:9\n   |\n15 |   impl&lt;T, U&gt; Mappable&lt;T, U&gt; for Just&lt;T&gt; {\n   |           - help: consider adding an explicit lifetime bound `U: 'static`...\n16 |       fn map(self, f: fn(&amp;T) -&gt; U) -&gt; Box&lt;dyn Observable&lt;U&gt;&gt; {\n17 | /         Box::new(Just {\n18 | |             value: f(&amp;self.value),\n19 | |         })\n   | |__________^\n   |\nnote: ...so that the type `Just&lt;U&gt;` will meet its required lifetime bounds\n  --&gt; src/lib.rs:17:9\n   |\n17 | /         Box::new(Just {\n18 | |             value: f(&amp;self.value),\n19 | |         })\n   | |__________^\n</code></pre>\n\n<p>I don't understand why the compiler is complaining about this because the value is placed inside a <code>Box</code>.</p>\n\n<p>Providing the <code>'static</code> lifetime obviously works but I'm concerned that it would create a memory leak as intermediate stages in the stream would not be free'd until the program exits.</p>\n\n<p>I think the solution is to make the lifetime of <code>U</code> be the same as <code>T</code>. But all my attempts at doing this have failed.</p>\n\n<p>How can I express the above code without using <code>'static</code>?</p>\n"}, {"tags": ["rust", "lifetime"], "answers": [{"comments": [{"owner": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "edited": false, "score": 0, "creation_date": 1536705187, "post_id": 52278730, "comment_id": 91518347, "body": "This depend on the fact that <code>fn(&amp;&#39;_ Foo)</code> is always desugared to <code>for&lt;&#39;a&gt; fn(&amp;&#39;a Foo)</code>, not <code>fn(&amp;&#39;somelifetime Foo)</code> where <code>&#39;somelifetime</code> is in scope. This is where my confusion came from."}, {"owner": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "edited": false, "score": 0, "creation_date": 1536707063, "post_id": 52278730, "comment_id": 91518778, "body": "In general, I expect in <code>fn(&amp;&#39;_ Foo)</code> the anonymous lifetime <code>&#39;_</code> to be lower bounded like in this case <code>for&lt;&#39;a&gt; fn(&amp;&#39;a Foo) where &#39;a: &#39;static</code>, which effectively eliminate confusions like this."}, {"owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "reply_to_user": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "edited": false, "score": 0, "creation_date": 1536731388, "post_id": 52278730, "comment_id": 91524127, "body": "If so then it seems that <code>&#39;static</code> is not included in the lifetime set defined by <code>for&lt;&#39;a&gt; fn(&amp;&#39;a Foo)</code>. am I wrong?"}, {"owner": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "edited": false, "score": 0, "creation_date": 1536734908, "post_id": 52278730, "comment_id": 91525841, "body": "Right now, Rust do not support those things. We can have either <code>for&lt;&#39;a&gt; fn(&amp;&#39;a Foo)</code> or <code>fn(&amp;&#39;a Foo)</code> where <code>&#39;a</code> is in scope. But there is no way to include the lifetime bound like I wrote above..."}, {"owner": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "edited": false, "score": 0, "creation_date": 1536735297, "post_id": 52278730, "comment_id": 91526066, "body": "<code>&#39;static</code> IS included in <code>for&lt;&#39;a&gt; fn(&amp;&#39;a Foo)</code>, but the problem is that <code>fn(&amp;&#39;static Foo)</code> accepts ONLY <code>&amp;&#39;static</code>, so it accepts only a subset of <code>for&lt;&#39;a&gt; fn(&amp;&#39;a Foo)</code> allows. That is the problem. What I expected is the type inference to be able to restrict the set <code>fn(&amp;&#39;_ Foo)</code> accepts, so they can match."}, {"owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "reply_to_user": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "edited": false, "score": 0, "creation_date": 1536737339, "post_id": 52278730, "comment_id": 91527218, "body": "For sure I missing something. If <code>&#39;static</code> is included in <code>for&lt;&#39;a&gt;</code> why <a href=\"https://play.rust-lang.org/?gist=00a29ef2b0f50d050176b59ce256ee83&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">this</a> does not compile?"}, {"owner": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "edited": false, "score": 0, "creation_date": 1536745932, "post_id": 52278730, "comment_id": 91532399, "body": "This is because to cast the right hand side value to the left hand side type, the function type in right hand MUST accept a wider range of input, not narrower, to ensure you can never pass an argument to the function that it cannot handle. In this case, <code>for&lt;&#39;a&gt;</code> is wider, and <code>&#39;static</code> is narrower..."}], "tags": [], "owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "is_accepted": false, "score": 1, "last_activity_date": 1536677551, "creation_date": 1536677551, "answer_id": 52278730, "question_id": 52267575, "link": "https://stackoverflow.com/questions/52267575/why-can-this-lifetime-not-outlive-the-closure/52278730#52278730", "title": "Why can this lifetime not outlive the closure?", "body": "<p>The code fragments below are a semplification of your case, it helped me to understand\nthe issue about the compilation error when using the <code>'static</code> lifetime declaration in your code.</p>\n\n<pre><code>struct Foo {\n}\n\nfn _test_ok() {\n\n    // myf is declared as a function pointer that accepts\n    // a reference with some generic lifetime  \n    let myf: fn(&amp;'_ Foo);\n\n    // with this definition ...\n    myf = |_arg: &amp;'_ Foo| {};\n\n    // this local value works as expected\n    let local_foo: Foo = Foo {};\n\n    myf(&amp;local_foo);\n}\n\nfn _test_static_fail() {\n\n    let myf: fn(&amp;'_ Foo);\n\n    // suppose this myf() definition ...\n    myf = |_arg: &amp;'static Foo| {};\n\n    // this local value is compatible with myf() declaration ...\n    let local_foo: Foo = Foo {};\n\n    // so theoretically it is usable here: \n    myf(&amp;local_foo);\n\n    // but this is clearly not possible because the anomymous lifetime region where \n    // local_foo lives does not outlive the 'static lifetime required\n    // when defining myf()   \n}\n\n\nstatic FOO: Foo = Foo {};\n\nfn _test_static_flipped() {\n\n    // As you have already discovered\n    let myf: fn(&amp;'static Foo) = |arg: &amp;'_ Foo| {};\n\n    // this works because ...\n    // 1. FOO is a static value and it is compatible with myf() definition and\n    // 2. 'static lifetime outlives every other lifetime  \n    myf(&amp;FOO);\n}\n\nfn main() {}\n</code></pre>\n"}], "owner": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 339, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1536677551, "creation_date": 1536630087, "last_edit_date": 1536630932, "question_id": 52267575, "link": "https://stackoverflow.com/questions/52267575/why-can-this-lifetime-not-outlive-the-closure", "title": "Why can this lifetime not outlive the closure?", "body": "<p>I am chasing <a href=\"https://github.com/rust-lang/rust/issues/53420\" rel=\"nofollow noreferrer\">a compiler bug</a> and found the following <a href=\"https://play.rust-lang.org/?gist=0bac77f145c4ebfc5e3079947c58de77&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">example</a></p>\n\n<pre><code>trait Lt&lt;'a&gt; {\n    type T;\n}\n\nimpl&lt;'a&gt; Lt&lt;'a&gt; for () {\n    type T = &amp;'a ();\n}\n\nfn test() {\n    let _: fn(&lt;() as Lt&lt;'_&gt;&gt;::T) = |_: &amp;'static ()| {};\n}\n\nfn main() {\n    test();\n}\n</code></pre>\n\n<p>I expect the above to compile as I gave a hint for <code>Lt&lt;'_&gt;</code> to be <code>Lt&lt;'static&gt;</code> and so everything should be fine, but I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for lifetime parameter `'a` due to conflicting requirements\n  --&gt; src/main.rs:10:53\n   |\n10 |     let _: fn(&lt;() as Lt&lt;'_&gt;&gt;::T) = |_: &amp;'static ()| {};\n   |                                                     ^^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #2 defined on the body at 10:36...\n  --&gt; src/main.rs:10:36\n   |\n10 |     let _: fn(&lt;() as Lt&lt;'_&gt;&gt;::T) = |_: &amp;'static ()| {};\n   |                                    ^^^^^^^^^^^^^^^^^^^\n   = note: ...so that the types are compatible:\n           expected Lt&lt;'_&gt;\n              found Lt&lt;'_&gt;\n   = note: but, the lifetime must be valid for the static lifetime...\n   = note: ...so that the types are compatible:\n           expected &amp;()\n              found &amp;'static ()\n</code></pre>\n\n<p>What is the logic behind \"first, the lifetime cannot outlive the anonymous lifetime #2\"?  As I am looking at a variation of a bug, if the reason is not solid we can attempt to fix it.</p>\n\n<h1>Working variation</h1>\n\n<pre><code>fn test() {\n    let _: fn(&lt;() as Lt&lt;'static&gt;&gt;::T) = |_: &amp;'_ ()| {};\n}\n</code></pre>\n"}, {"tags": ["memory", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1536628778, "post_id": 52267429, "comment_id": 91482603, "body": "Idiomatic Rust does not use the <code>return</code> keyword at the end of a block. Instead, you leave off the <code>return</code> and the semicolon."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1536628976, "post_id": 52267429, "comment_id": 91482637, "body": "&quot;is a reference returned or is the entire vector copied?&quot;, that depend of what you mean by the entire vector, your function create a vec and give the ownership to the caller, it&#39;s a move, don&#39;t worry this should be fine, without any problem of performance."}, {"owner": {"reputation": 73, "user_id": 7920609, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b356fd7f6287ca2e20b6cee660950758?s=128&d=identicon&r=PG&f=1", "display_name": "tnibbles", "link": "https://stackoverflow.com/users/7920609/tnibbles"}, "edited": false, "score": 0, "creation_date": 1536629372, "post_id": 52267429, "comment_id": 91482706, "body": "Question updated"}], "answers": [{"comments": [{"owner": {"reputation": 73, "user_id": 7920609, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b356fd7f6287ca2e20b6cee660950758?s=128&d=identicon&r=PG&f=1", "display_name": "tnibbles", "link": "https://stackoverflow.com/users/7920609/tnibbles"}, "edited": false, "score": 0, "creation_date": 1536630846, "post_id": 52267613, "comment_id": 91482927, "body": "Thank you for the explanation. I can make sense of the linked question with this extra information."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 8, "last_activity_date": 1536630472, "creation_date": 1536630472, "answer_id": 52267613, "question_id": 52267429, "link": "https://stackoverflow.com/questions/52267429/under-the-hood-are-vectors-in-rust-returned-by-reference-or-value/52267613#52267613", "title": "Under the hood, are vectors in Rust returned by reference or value?", "body": "<blockquote>\n  <p>is a reference returned </p>\n</blockquote>\n\n<p>No. It cannot be because there's <em>nothing to reference</em> once the function ends. This is covered in detail in <a href=\"https://stackoverflow.com/q/32682876/155423\">Is there any way to return a reference to a variable created in a function?</a>.</p>\n\n<blockquote>\n  <p>is the entire vector copied</p>\n</blockquote>\n\n<p>Yes, but probably not how you mean it. A <code>Vec</code> is <em>basically</em> defined as</p>\n\n<pre><code>struct Vec&lt;T&gt; {\n    capacity: usize,\n    length: usize,\n    data: *mut T,\n}\n</code></pre>\n\n<p>Semantically, these 3 pointer-sized fields are <em>moved</em> from the function to the caller. The N elements contained  by the vector are not copied.</p>\n\n<p>Implementation-wise, the compiler/optimizer can pick from a large bag of tricks:</p>\n\n<ul>\n<li>Actually copy all three fields</li>\n<li>Pass in a secret mutable reference and have the function write directly to it</li>\n<li>Inline the function where it's called</li>\n<li>Perform dead-code removal and never call the function in the first place</li>\n<li>Probably others...</li>\n</ul>\n\n<p>The only way to know which it picks is to look at the MIR / LLVM IR / assembly.</p>\n\n<blockquote>\n  <p>Will the return behavior here also be the same for all other non-primitive data types?</p>\n</blockquote>\n\n<p>Yes. Rust's data types are all treated the same. Primitive vs. non-primitive means nothing for the semantics of the language.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/27835375/155423\">Can I efficiently return an object by value in Rust?</a></li>\n<li><a href=\"https://stackoverflow.com/q/27534422/155423\">Inefficient instance construction?</a></li>\n<li><a href=\"https://stackoverflow.com/q/35201250/155423\">What the difference is between using the box keyword and Box::new?</a></li>\n<li><a href=\"https://stackoverflow.com/q/30288782/155423\">What are move semantics in Rust?</a></li>\n<li><a href=\"https://stackoverflow.com/q/29490670/155423\">How does Rust provide move semantics?</a></li>\n</ul>\n"}], "owner": {"reputation": 73, "user_id": 7920609, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b356fd7f6287ca2e20b6cee660950758?s=128&d=identicon&r=PG&f=1", "display_name": "tnibbles", "link": "https://stackoverflow.com/users/7920609/tnibbles"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 815, "favorite_count": 0, "accepted_answer_id": 52267613, "answer_count": 1, "score": 3, "last_activity_date": 1536630472, "creation_date": 1536628609, "last_edit_date": 1536629860, "question_id": 52267429, "link": "https://stackoverflow.com/questions/52267429/under-the-hood-are-vectors-in-rust-returned-by-reference-or-value", "title": "Under the hood, are vectors in Rust returned by reference or value?", "body": "<p>I am trying to learn the ins and outs of memory in Rust. When a vector is created inside a function and then returned, is a reference returned or is the entire vector copied?</p>\n\n<p>Example:</p>\n\n<pre><code>use std::io;\n\nfn line_to_ints() -&gt; Vec&lt;u32&gt; {\n    let mut line = String::new();\n\n    io::stdin()\n        .read_line(&amp;mut line)\n        .expect(\"Failed to read line\");\n\n    return line\n        .split(\" \")\n        .map(|x| x.parse().expect(\"Not an integer!\"))\n        .collect();\n}\n</code></pre>\n\n<p>Will the return behavior here also be the same for all other non-primitive data types?</p>\n\n<p>Unlike <a href=\"https://stackoverflow.com/q/32682876/155423\">Is there any way to return a reference to a variable created in a function?</a>, I would like to know a bit more about what is happening under the hood. The answers to that question do not provide clarity as to whether or not the vector is created and then copied to a new location, or ownership of the pointer is returned I understand vectors are created on the heap so I imagine a pointer is involved.</p>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"tags": [], "owner": {"reputation": 51, "user_id": 7252635, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c1fb14883546962956afee0689e5a4e3?s=128&d=identicon&r=PG&f=1", "display_name": "David Queen", "link": "https://stackoverflow.com/users/7252635/david-queen"}, "is_accepted": false, "score": 4, "last_activity_date": 1536618218, "creation_date": 1536618218, "answer_id": 52266280, "question_id": 52266221, "link": "https://stackoverflow.com/questions/52266221/cargo-clone-and-cargo-edit-don-t-build-on-my-windows-10-pc/52266280#52266280", "title": "cargo-clone and cargo-edit don\u2019t build on my Windows 10 PC", "body": "<p>Thanks to help from the IRC #rust-beginners channel I found out that I needed to install cmake from cmake.org. Make sure you have it add itself to the path and restart your command prompt. </p>\n\n<p><a href=\"https://cmake.org/download/\" rel=\"nofollow noreferrer\">Cmake download </a></p>\n"}], "owner": {"reputation": 51, "user_id": 7252635, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c1fb14883546962956afee0689e5a4e3?s=128&d=identicon&r=PG&f=1", "display_name": "David Queen", "link": "https://stackoverflow.com/users/7252635/david-queen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 31, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1537385372, "creation_date": 1536617853, "last_edit_date": 1537385372, "question_id": 52266221, "link": "https://stackoverflow.com/questions/52266221/cargo-clone-and-cargo-edit-don-t-build-on-my-windows-10-pc", "title": "cargo-clone and cargo-edit don\u2019t build on my Windows 10 PC", "body": "<p>I installed Visual Studio C++ and Rust. Most things work fine, but building cargo-edit and cargo-clone fail. The error code hints at cmake missing but it's one of the items built ok. Windows 10 specific issue.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 2, "creation_date": 1536651029, "post_id": 52266231, "comment_id": 91488789, "body": "This looks like an abuse of stderr. Asking for a password is not an error. What if a user wants to redirect stderr to a log file? On Linux, you should be able to write directly to <code>&#47;dev&#47;tty</code> and have this shown on the terminal, no matter whether you are piping or not."}, {"owner": {"reputation": 48006, "user_id": 96588, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/425fed56a46504d37ec907d99b09ecde?s=128&d=identicon&r=PG", "display_name": "l0b0", "link": "https://stackoverflow.com/users/96588/l0b0"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1538383701, "post_id": 52266231, "comment_id": 92109963, "body": "Seconding @mcarton, this is one of the rare cases where writing directly to <code>&#47;dev&#47;tty</code> is the right thing to do."}], "tags": [], "owner": {"reputation": 769, "user_id": 5433623, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-0jplvxnVu04/AAAAAAAAAAI/AAAAAAAAGvQ/VLbN9V7SMJ8/photo.jpg?sz=128", "display_name": "Matt Brubeck", "link": "https://stackoverflow.com/users/5433623/matt-brubeck"}, "is_accepted": true, "score": 0, "last_activity_date": 1536617906, "creation_date": 1536617906, "answer_id": 52266231, "question_id": 52266092, "link": "https://stackoverflow.com/questions/52266092/how-can-i-prompt-a-user-for-input-in-a-cli-tool-while-being-able-to-pipe-the-out/52266231#52266231", "title": "How can I prompt a user for input in a CLI tool while being able to pipe the output of the tool to another program?", "body": "<p>You can use the <code>eprint!</code> or <code>eprintln!</code> macro to print the prompt to stderr instead of stdout.  Then it will still go the terminal even if stdout is redirected to a pipe.</p>\n"}], "owner": {"reputation": 175, "user_id": 1560763, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/36a0195c26ea8335fd536b1221b0322c?s=128&d=identicon&r=PG", "display_name": "mietzekotze", "link": "https://stackoverflow.com/users/1560763/mietzekotze"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 77, "favorite_count": 0, "accepted_answer_id": 52266231, "answer_count": 1, "score": 0, "last_activity_date": 1536626422, "creation_date": 1536616980, "last_edit_date": 1536626422, "question_id": 52266092, "link": "https://stackoverflow.com/questions/52266092/how-can-i-prompt-a-user-for-input-in-a-cli-tool-while-being-able-to-pipe-the-out", "title": "How can I prompt a user for input in a CLI tool while being able to pipe the output of the tool to another program?", "body": "<p>I'm writing a CLI tool to encrypt &amp; embed secrets in docker-compose files. I require the user to interactively input the password for the decryption  through stdin. </p>\n\n<p>Unfortunately, this means I'm not able to do something like this since I won't get the dialog asking me for the password:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>myfancytool decrypt docker-compose.yml | docker-compose -f - up -d\n</code></pre>\n\n<p>Is there any way to get the desired behavior?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1536628471, "post_id": 52265867, "comment_id": 91482555, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/52265867/edit\">edit</a> your question to include it. Specifically, there&#39;s no mention of what <code>mod parser</code> corresponds to. Even better, don&#39;t include code that isn&#39;t relevant to reproducing the problem. You probably only need 2 (maybe 3) files to demonstrate."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 3, "last_activity_date": 1536628612, "creation_date": 1536628612, "answer_id": 52267430, "question_id": 52265867, "link": "https://stackoverflow.com/questions/52265867/why-do-i-need-use-statements-in-a-submodule-but-not-in-main-rs/52267430#52267430", "title": "Why do I need `use` statements in a submodule but not in main.rs?", "body": "<p>First things first, go back and re-read <a href=\"https://doc.rust-lang.org/book/second-edition/ch07-01-mod-and-the-filesystem.html\" rel=\"nofollow noreferrer\"><code>mod</code> and the Filesystem</a>. Then read it <em>again</em>. For whatever reason, many people have trouble with the module system. A ton of good information is contained in <a href=\"https://doc.rust-lang.org/book/second-edition/\" rel=\"nofollow noreferrer\"><em>The Rust Programming Language</em></a>.</p>\n\n<blockquote>\n  <p>I suppose that <code>mod</code> will import files into the project and <code>use</code> will use them.</p>\n</blockquote>\n\n<p><code>mod foo</code> \"attaches\" some code to the crate hierarchy, relative to the current module.</p>\n\n<p><code>use bar</code> avoids needing to type out the full path to something in the crate hierarchy. The path <code>bar</code> starts <em>from the root of the crate</em>.</p>\n\n<hr>\n\n<p>When you have <code>mod parser</code> in <em>main.rs</em>, you are saying</p>\n\n<blockquote>\n  <p>go find the file <em>parser.rs</em><sup>1</sup> and put all the code in that file in the hierarchy relative to the crate root<sup>2</sup>.</p>\n</blockquote>\n\n<p>When you try to then add <code>use parser</code> in <em>main.rs</em>, you are saying</p>\n\n<blockquote>\n  <p>go to the root of the hierarchy, find the module <code>parser</code>, and make it available here (at the crate root) as the name <code>parser</code>.</p>\n</blockquote>\n\n<p>This already exists (because that's where the module is defined!), so you get an error.</p>\n\n<p>When you have <code>use sort</code> is <em>list.rs</em>, you are saying</p>\n\n<blockquote>\n  <p>go to the root of the hierarchy, find the module <code>sort</code>, and make it available here (inside the module <code>list</code>) as the name <code>sort</code>.</p>\n</blockquote>\n\n<p>This works fine.</p>\n\n<p><sup><strong>1</strong></sup> Or <em>parser/mod.rs</em>.</p>\n\n<p><sup><strong>2</strong></sup> Because <em>main.rs</em> (or <em>lib.rs</em>) are the crate roots.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/32814653/155423\">Why is there a mod keyword in Rust?</a></li>\n<li><a href=\"https://stackoverflow.com/q/22596920/155423\">Split a module across several files</a></li>\n<li><a href=\"https://stackoverflow.com/q/26388861/155423\">How to include module from another file from the same project?</a></li>\n</ul>\n"}], "owner": {"reputation": 41, "user_id": 10015287, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/oZPsm.png?s=128&g=1", "display_name": "elfryskai", "link": "https://stackoverflow.com/users/10015287/elfryskai"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 553, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1536628612, "creation_date": 1536615628, "last_edit_date": 1536627323, "question_id": 52265867, "link": "https://stackoverflow.com/questions/52265867/why-do-i-need-use-statements-in-a-submodule-but-not-in-main-rs", "title": "Why do I need `use` statements in a submodule but not in main.rs?", "body": "<p>I don't understand <code>mod</code> or <code>use</code>; I suppose that <code>mod</code> will import files into the project and <code>use</code> will use them.</p>\n\n<p>I have a project with this hierarchy:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>.  \n|-- Cargo.lock  \n|-- Cargo.toml  \n|-- src  \n|  |-- display.rs  \n|  |-- list.rs  \n|  |-- main.rs  \n|  |-- parser.rs  \n|  |-- sort.rs  \n</code></pre>\n\n<p>Why do I need <code>use</code> in <em>list.rs</em> and not in <em>main.rs</em>? I use the function <code>sorting()</code> and <code>print_files()</code> in <em>list.rs</em> like I use the function <code>parse()</code> and <code>listing()</code> in <em>main.rs</em>.</p>\n\n<p><strong>main.rs</strong></p>\n\n<pre><code>mod parser;   // Ok\nmod list;     // Ok\nmod sort;     // Ok\nmod display;  // Ok\n// use parser;// The name `parser` is defined multiple times\n\nfn main() {  \n    parser::parse();\n    list::listing();  \n}\n</code></pre>\n\n<p><strong>list.rs</strong></p>\n\n<pre><code>//mod sort;    // file not found in module `sort`\n//mod display; // file not found in module `display`\nuse sort;      // Ok\nuse display;   // Ok\n\npub fn listing() {\n    parcours_elements();\n    sort::sorting();\n    display::print_files();\n}\n\nfn parcours_elements() {\n\n}\n</code></pre>\n\n<p><strong>sort.rs</strong></p>\n\n<pre><code>pub fn sorting() {\n\n}\n</code></pre>\n\n<p><strong>display.rs</strong></p>\n\n<pre><code>pub fn print_files() {\n\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1536620794, "post_id": 52265686, "comment_id": 91481045, "body": "Why do you use raw pointer, your question is not clear please do a proper <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>, <code>self</code> is a <code>Sphere</code> not a <code>Box&lt;dyn Intersector&gt;</code> so why did you expect ?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1536621169, "post_id": 52265686, "comment_id": 91481130, "body": "Maybe you want <code>pub fn some_function&lt;T&gt;(&amp;self, intersector: &amp;T) where T: Intersector</code> ?"}, {"owner": {"reputation": 7540, "user_id": 4474230, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/713c7ce18010e541853962264a719d83?s=128&d=identicon&r=PG&f=1", "display_name": "Jeffrey", "link": "https://stackoverflow.com/users/4474230/jeffrey"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1536678903, "post_id": 52265686, "comment_id": 91506235, "body": "@Shepmaster thanks. Rewritten in MCVE form. I have diffuclty understanding the answers you linked to. Is there a simpler answer with this now clear question?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1536686356, "post_id": 52265686, "comment_id": 91510195, "body": "Based on your latest changes, <a href=\"https://stackoverflow.com/q/25339603/155423\">How to test for equality between trait objects?</a> appears to be the duplicate."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1536687127, "post_id": 52265686, "comment_id": 91510579, "body": "Does <code>plane1 == plane2</code>?"}, {"owner": {"reputation": 7540, "user_id": 4474230, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/713c7ce18010e541853962264a719d83?s=128&d=identicon&r=PG&f=1", "display_name": "Jeffrey", "link": "https://stackoverflow.com/users/4474230/jeffrey"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1536690585, "post_id": 52265686, "comment_id": 91512304, "body": "@Shepmaster thanks! Please mark as duplicate."}], "answers": [{"comments": [{"owner": {"reputation": 7540, "user_id": 4474230, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/713c7ce18010e541853962264a719d83?s=128&d=identicon&r=PG&f=1", "display_name": "Jeffrey", "link": "https://stackoverflow.com/users/4474230/jeffrey"}, "edited": false, "score": 0, "creation_date": 1536680974, "post_id": 52270140, "comment_id": 91507551, "body": "I&#39;d rather understand how to do it with the boxed object than restart with a different architecture. And in C++, you can easily do if (scene[0].get() == sphere)"}], "tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 1, "last_activity_date": 1536648364, "creation_date": 1536648364, "answer_id": 52270140, "question_id": 52265686, "link": "https://stackoverflow.com/questions/52265686/how-can-i-test-equality-to-a-given-boxed-object-implementing-a-trait/52270140#52270140", "title": "How can I test equality to a given boxed object implementing a trait?", "body": "<p>In C++, you can convert from a pointer to a <code>Sphere</code> to a pointer to an <code>Intersector</code> (ie. from a <code>Sphere*</code> to an <code>Intersector*</code>). It also works with references although this is less idiomatic for C++.</p>\n\n<p>This is exactly the same in Rust, except that in Rust it is more idiomatic to use references rather than raw pointers:</p>\n\n<pre><code>impl Scene {\n    pub fn some_function(&amp;self, intersector: &amp;Intersector) {\n        for object in &amp;self.objects {\n            if intersector == object {}\n        }\n    }\n}\n</code></pre>\n\n<p>Note that your original code used <code>*const Box&lt;dyn Intersector&gt;</code> which is a pointer to a box containing an <code>Intersector</code> and translates roughly to <code>smart_pointer&lt;Intersector&gt;*</code> in C++, so your Rust code would be equivalent to passing an <code>Intersector*</code> to a function expecting a <code>smart_pointer&lt;Intersector&gt;*</code>, which doesn't work in C++ either.</p>\n"}], "owner": {"reputation": 7540, "user_id": 4474230, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/713c7ce18010e541853962264a719d83?s=128&d=identicon&r=PG&f=1", "display_name": "Jeffrey", "link": "https://stackoverflow.com/users/4474230/jeffrey"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 321, "favorite_count": 1, "closed_date": 1536693737, "answer_count": 1, "score": 3, "last_activity_date": 1536686279, "creation_date": 1536614704, "last_edit_date": 1536686279, "question_id": 52265686, "link": "https://stackoverflow.com/questions/52265686/how-can-i-test-equality-to-a-given-boxed-object-implementing-a-trait", "closed_reason": "Duplicate", "title": "How can I test equality to a given boxed object implementing a trait?", "body": "<p>I'm writing a ray-tracer to learn Rust. I've got a <code>Scene</code> which contains <code>Shape</code>s, shapes that can intersect rays. Minimally, it is akin to:</p>\n\n<pre><code>pub trait Shape {\n    fn draw(&amp;self);\n}\n\npub struct Plane {}\n\nimpl Shape for Plane {\n    fn draw(&amp;self) {}\n}\n\npub struct Sphere {}\n\nimpl Shape for Sphere {\n    fn draw(&amp;self) {}\n}\n\npub struct Scene {\n    objects: Vec&lt;Box&lt;dyn Shape&gt;&gt;,\n}\n\nfn main() {\n    let mut scene = Scene { objects: vec![] };\n\n    let plane1 = Box::new(Plane {});\n    let plane2 = Box::new(Plane {});\n    let sphere = Box::new(Sphere {});\n\n    scene.objects.push(plane1);\n    scene.objects.push(plane2);\n    scene.objects.push(sphere);\n\n    for object in scene.objects {\n        // I want to test if a given object in the scene is the same as another\n        if object == plane2 {}\n    }\n}\n</code></pre>\n\n<p>Given a shape stored in <code>Vec&lt;Box&lt;dyn Shape&gt;&gt;</code> how can I test equality to a given boxed object implementing the Shape trait?</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0369]: binary operation `==` cannot be applied to type `std::boxed::Box&lt;Shape&gt;`\n  --&gt; src/main.rs:34:12\n   |\n34 |         if object == plane2 {}\n   |            ^^^^^^^^^^^^^^^^\n   |\n   = note: an implementation of `std::cmp::PartialEq` might be missing for `std::boxed::Box&lt;Shape&gt;`\n</code></pre>\n\n<p>The test will be done in a <code>Sphere</code> or <code>Plane</code> member function, testing against <code>self</code>.</p>\n"}, {"tags": ["rust", "pattern-matching", "keyword"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 3, "creation_date": 1536603680, "post_id": 52263319, "comment_id": 91474602, "body": "No. Just don&#39;t."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1536604395, "post_id": 52263319, "comment_id": 91474983, "body": "@trentcl Agree. But there&#39;s no harm in testing the limits of a language to see what it will or won&#39;t let you do, and try to understand why."}, {"owner": {"reputation": 5061, "user_id": 288457, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/83bb558b24a36e9506573d558a6e19a1?s=128&d=identicon&r=PG", "display_name": "Armando P&#233;rez Marqu&#233;s", "link": "https://stackoverflow.com/users/288457/armando-p%c3%a9rez-marqu%c3%a9s"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1536605544, "post_id": 52263319, "comment_id": 91475515, "body": "@trentcl Like @PeterHall says, I&#39;m just pushing the limits, to see how the language/platform behaves in those weird cases, trying to fully understand what I&#39;m trying to learn. Of course this is plain wrong, stupid, etc in real-life code, this is just for educational purposes. As important is to communicate &quot;Don&#39;t&quot;, also important to communicate &quot;Why not&quot;. The initial motivation of why I was trying to do that is because in Go <code>true := false</code> works (see <a href=\"https://play.golang.org/p/IYePvGlA1w0\" rel=\"nofollow noreferrer\">play.golang.org/p/IYePvGlA1w0</a>)"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1536605763, "post_id": 52263319, "comment_id": 91475610, "body": "It seems to me you know the answer. You can&#39;t do it because <code>true</code> is a keyword. Go is a different language and it can permit whatever, but Rust doesn&#39;t. What do you hope to learn from the answers that you didn&#39;t know already?"}, {"owner": {"reputation": 5061, "user_id": 288457, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/83bb558b24a36e9506573d558a6e19a1?s=128&d=identicon&r=PG", "display_name": "Armando P&#233;rez Marqu&#233;s", "link": "https://stackoverflow.com/users/288457/armando-p%c3%a9rez-marqu%c3%a9s"}, "edited": false, "score": 0, "creation_date": 1536606011, "post_id": 52263319, "comment_id": 91475697, "body": "Since I later found out that <code>true</code> is a keyword, the question is really about pattern matching, and the true answer lies in the link provided by @yorodm answer."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1536606079, "post_id": 52263319, "comment_id": 91475736, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/51000263/what-are-the-use-cases-of-raw-identifiers-besides-new-keywords\">What are the use cases of raw identifiers besides new keywords?</a> =&gt; <a href=\"https://play.rust-lang.org/?gist=33698417766c4b3b3a18429f27a3fc30&amp;version=nightly&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">easy</a>"}], "answers": [{"comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1536604384, "post_id": 52263453, "comment_id": 91474978, "body": "When I was learning Rust and learned about <code>enum</code>, I actually expected <code>bool</code> to be a regular <code>enum</code>, so rebinding <code>true</code> would have been perfectly fine. This would in my opinion have been a little neater. Also python is perfectly fine with redefining <code>True</code> for example: <code>True = 42; print(True)</code>, this doesn&#39;t change the truethiness of the built-in <code>True</code> value, as shown by a subsequent <code>print([] == [])</code>."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1536604991, "post_id": 52263453, "comment_id": 91475268, "body": "You can&#39;t rebind enum variants either though? And in Python 2, <code>True = 42</code> doesn&#39;t rebind <code>True</code>, it just shadows it with a local variable definition. (In Python 3 <code>True</code> and <code>False</code> have been made keywords, so <code>True = 42</code> is just a <code>SyntaxError</code>.)"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1536605370, "post_id": 52263453, "comment_id": 91475416, "body": "@mcarton Other than the variants being keywords, what about <code>bool</code> tells you that it&#39;s not an <code>enum</code>? Maybe that you can coerce to integer types with <code>as</code>?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1536605430, "post_id": 52263453, "comment_id": 91475454, "body": "I guess maybe I&#39;m being unnecessarily pedantic about the meaning of &quot;rebind&quot;. If you consider shadowing a variable to be rebinding the name, then I guess <code>True = 42</code> does rebind <code>True</code>."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1536607342, "post_id": 52263453, "comment_id": 91476277, "body": "@trentcl I <i>think</i> Haskell&#39;s built-in <code>Bool</code> actually is just an ordinary <code>data</code> type with two constructors."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1536609973, "post_id": 52263453, "comment_id": 91477499, "body": "TIL <code>let None = 42;</code> is an error. I imagined this would have worked, because the actual variant is <code>Option::&lt;T&gt;::None</code> just imported as <code>None</code>. But hey, as long as I can <code>type bool = u32</code>, everything is fine"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 3, "last_activity_date": 1546960900, "last_edit_date": 1546960900, "creation_date": 1536603818, "answer_id": 52263453, "question_id": 52263319, "link": "https://stackoverflow.com/questions/52263319/why-does-let-true-false-fail-and-is-it-really-possible-to-do-it/52263453#52263453", "title": "Why does `let true = false` fail, and is it really possible to do it?", "body": "<p>I'm not sure what you're trying to do or why you'd <em>want</em> to do it! Most people would consider it a design flaw if a language permitted you to redefine <code>true</code> and <code>false</code> and I'm sure this has been the topic of at least one installment of <a href=\"https://thedailywtf.com\" rel=\"nofollow noreferrer\">The Daily WTF</a>.</p>\n\n<blockquote>\n  <p>Is it possible to \"fix\" the patterns error and get the \"you-can't-assign-to-a-keyword-error\"?</p>\n</blockquote>\n\n<p>Constant definitions don't allow patterns, so you can get a different error by attempting to redefine <code>true</code> as a <code>const</code>:</p>\n\n<pre><code>const true: bool = false;\n</code></pre>\n\n<p>Which produces an error more similar to what you were after:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: expected identifier, found keyword `true`\n  --&gt; src/main.rs:1:7 \n  | \n1 | const true: bool = false;\n  | ^^^^ expected identifier, found keyword \n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 5061, "user_id": 288457, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/83bb558b24a36e9506573d558a6e19a1?s=128&d=identicon&r=PG", "display_name": "Armando P&#233;rez Marqu&#233;s", "link": "https://stackoverflow.com/users/288457/armando-p%c3%a9rez-marqu%c3%a9s"}, "edited": false, "score": 1, "creation_date": 1536605874, "post_id": 52263485, "comment_id": 91475644, "body": "Thanks for the documentation link, that&#39;s exactly what I needed. Fun fact, using <code>if let</code> compiles, and even better, the condition is only executed if the variants on both sides are the same (<code>if let true = true</code> or <code>if let false = false</code>) so apparently there&#39;s no way to shoot myself in the foot even when directly aiming at it."}], "tags": [], "owner": {"reputation": 3467, "user_id": 3393308, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9a3f30f7c191e8d556c70c951fe3d9af?s=128&d=identicon&r=PG", "display_name": "yorodm", "link": "https://stackoverflow.com/users/3393308/yorodm"}, "is_accepted": true, "score": 5, "last_activity_date": 1536603940, "creation_date": 1536603940, "answer_id": 52263485, "question_id": 52263319, "link": "https://stackoverflow.com/questions/52263319/why-does-let-true-false-fail-and-is-it-really-possible-to-do-it/52263485#52263485", "title": "Why does `let true = false` fail, and is it really possible to do it?", "body": "<p>There's nothing wrong with the error message. You're using an <a href=\"https://doc.rust-lang.org/book/second-edition/ch18-02-refutability.html\" rel=\"noreferrer\">refutable pattern</a> in a <code>let</code> binding and <code>let</code> only allows for irrefutable patterns.</p>\n\n<p>In other words, when you do this:</p>\n\n<pre><code>let variable = value\n</code></pre>\n\n<p>You are not assigning a value to the variable. You're creating a binding where the left side matches something on the right side. It should be an irrefutable pattern because the match must always succeed.</p>\n"}], "owner": {"reputation": 5061, "user_id": 288457, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/83bb558b24a36e9506573d558a6e19a1?s=128&d=identicon&r=PG", "display_name": "Armando P&#233;rez Marqu&#233;s", "link": "https://stackoverflow.com/users/288457/armando-p%c3%a9rez-marqu%c3%a9s"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 458, "favorite_count": 0, "accepted_answer_id": 52263485, "answer_count": 2, "score": 1, "last_activity_date": 1546960900, "creation_date": 1536603112, "last_edit_date": 1536625245, "question_id": 52263319, "link": "https://stackoverflow.com/questions/52263319/why-does-let-true-false-fail-and-is-it-really-possible-to-do-it", "title": "Why does `let true = false` fail, and is it really possible to do it?", "body": "<p>Is it possible to make this work? I originally wanted to see if <code>true</code> could be redefined, then I saw <code>true</code> is actually a keyword.</p>\n\n<p>Is it possible to \"fix\" the patterns error and get the \"you-can't-assign-to-a-keyword-error\"?</p>\n\n<pre><code>fn main() {\n    let true = false;\n}\n</code></pre>\n\n<p>I get:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0005]: refutable pattern in local binding: `false` not covered\n --&gt; src/main.rs:2:9\n  |\n2 |     let true = false;\n  |         ^^^^ pattern `false` not covered\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=efab0cac40756221cc9d056107149208&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}, {"tags": ["linux", "rust", "gateway"], "comments": [{"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 1, "creation_date": 1536580314, "post_id": 52257027, "comment_id": 91461447, "body": "See <a href=\"https://stackoverflow.com/questions/50408040/how-to-send-a-udp-packet-from-a-specific-interface-under-linux\" title=\"how to send a udp packet from a specific interface under linux\">stackoverflow.com/questions/50408040/&hellip;</a> ."}, {"owner": {"reputation": 488, "user_id": 2904507, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/89fa3cf087339a65c4cc8389134b0252?s=128&d=identicon&r=PG", "display_name": "Gedweb", "link": "https://stackoverflow.com/users/2904507/gedweb"}, "reply_to_user": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 0, "creation_date": 1536580866, "post_id": 52257027, "comment_id": 91461795, "body": "@starblue, I saw it. Issue was not accepted as resolved and is little bit other question."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1536584023, "post_id": 52257027, "comment_id": 91463704, "body": "rust don&#39;t have api at such low level networking, see your OS documentation."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1536668006, "post_id": 52258021, "comment_id": 91498800, "body": "Since this answer is the same as the answer to <a href=\"https://stackoverflow.com/q/50408040/155423\">How to send a UDP packet from a specific interface under Linux?</a>, it&#39;s safe to assume you agree the questions are duplicates?"}, {"owner": {"reputation": 4710, "user_id": 2281274, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/sHobc.gif?s=128&g=1", "display_name": "George Shuklin", "link": "https://stackoverflow.com/users/2281274/george-shuklin"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1536669172, "post_id": 52258021, "comment_id": 91499557, "body": "May be. To be honest, this topic requires some extensive operator-level explanation, including <code>gai.conf</code>, routing tables, policy-based routing, etc. Multihoming is a tricky topic, especially in ipv4 world."}], "tags": [], "owner": {"reputation": 4710, "user_id": 2281274, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/sHobc.gif?s=128&g=1", "display_name": "George Shuklin", "link": "https://stackoverflow.com/users/2281274/george-shuklin"}, "is_accepted": false, "score": 0, "last_activity_date": 1536668040, "last_edit_date": 1536668040, "creation_date": 1536583159, "answer_id": 52258021, "question_id": 52257027, "link": "https://stackoverflow.com/questions/52257027/how-can-i-send-through-a-specific-network-interface/52258021#52258021", "title": "How can I send through a specific network interface?", "body": "<p>You can use a different source IPs. I assume that you have your system configured to route different source IPs into different gateways  (if not, it's an operator problem, not a programmer). You can specify different source IP in <code>bind</code> function for socket. Normally you pass their 'default' value (0.0.0.0) which means 'anything OS find reasonable', but you can specify exact source IP for your task.</p>\n\n<p>A C <code>bind</code> signature:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>int bind(int sockfd, const struct sockaddr *addr, socklen_t addrlen);\n</code></pre>\n\n<p><code>addr</code> may contain the specific address.</p>\n"}, {"tags": [], "owner": {"reputation": 488, "user_id": 2904507, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/89fa3cf087339a65c4cc8389134b0252?s=128&d=identicon&r=PG", "display_name": "Gedweb", "link": "https://stackoverflow.com/users/2904507/gedweb"}, "is_accepted": true, "score": 1, "last_activity_date": 1536772646, "creation_date": 1536772646, "answer_id": 52300436, "question_id": 52257027, "link": "https://stackoverflow.com/questions/52257027/how-can-i-send-through-a-specific-network-interface/52300436#52300436", "title": "How can I send through a specific network interface?", "body": "<p>As suggested in a comment we must use <code>SO_BINDTODEVICE</code>, and no way to escape FFI cause it used internally. \nHere working example:</p>\n\n\n\n<pre><code>extern crate libc;\n\nuse libc as c;\nuse std::ffi::CString;\nuse std::net::{TcpStream, SocketAddr};\nuse std::io::{self, Write};\nuse std::os::unix::io::FromRawFd;\nuse std::mem;\n\n#[cfg(any(target_os = \"linux\"))]\nfn connect_dev(addr: SocketAddr, link: &amp;str) -&gt; io::Result&lt;TcpStream&gt; {\n    let (addr_raw, addr_len) = match addr {\n        SocketAddr::V4(ref a) =&gt;\n            (a as *const _ as *const _, mem::size_of_val(a) as c::socklen_t),\n        SocketAddr::V6(ref a) =&gt;\n            (a as *const _ as *const _, mem::size_of_val(a) as c::socklen_t),\n    };\n\n    unsafe {\n        let fd = check_os_error(c::socket(c::AF_INET, c::SOCK_STREAM, 0))?;\n        check_os_error(c::setsockopt(\n            fd,\n            c::SOL_SOCKET,\n            c::SO_BINDTODEVICE,\n            CString::new(link).expect(\"device name\").as_ptr() as *const c::c_void,\n            mem::size_of::&lt;CString&gt;() as c::socklen_t,\n        ))?;\n        check_os_error(c::connect(fd, addr_raw, addr_len))?;\n\n        Ok(TcpStream::from_raw_fd(fd))\n    }\n}\n\n#[cfg(any(target_os = \"linux\"))]\npub fn check_os_error(res: c::c_int) -&gt; io::Result&lt;c::c_int&gt; {\n    if res == -1 {\n        Err(io::Error::from_raw_os_error(unsafe { *c::__errno_location()  as i32 }))\n    } else {\n        Ok(res)\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 488, "user_id": 2904507, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/89fa3cf087339a65c4cc8389134b0252?s=128&d=identicon&r=PG", "display_name": "Gedweb", "link": "https://stackoverflow.com/users/2904507/gedweb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 690, "favorite_count": 0, "accepted_answer_id": 52300436, "answer_count": 2, "score": 2, "last_activity_date": 1553380537, "creation_date": 1536579710, "last_edit_date": 1553380537, "question_id": 52257027, "link": "https://stackoverflow.com/questions/52257027/how-can-i-send-through-a-specific-network-interface", "title": "How can I send through a specific network interface?", "body": "<p>I need send messages through different gateways dynamically. How do that and what must be my first step in this direction?</p>\n\n<p>On my server I have two connections: one-direct, and secondary over VPN. Default route is direct connection, but i need dynamically change connection to VPN. </p>\n\n<p>At current time I try build socket from <code>libc::bind()</code> it's work, but have not expected effect. </p>\n\n<p><a href=\"https://unix.stackexchange.com/a/368707/166275\">Changing the outgoing IP</a> is not a solution to define the interface.</p>\n"}, {"tags": ["struct", "rust"], "answers": [{"comments": [{"owner": {"reputation": 2512, "user_id": 5808553, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/6be8254e63e22cc820bb14938d532814?s=128&d=identicon&r=PG&f=1", "display_name": "Rajeev Ranjan", "link": "https://stackoverflow.com/users/5808553/rajeev-ranjan"}, "edited": false, "score": 0, "creation_date": 1536577461, "post_id": 52256188, "comment_id": 91459991, "body": "Yes @filmor, I was expecting similar thing to work but what if this definition was part of an API? Is there some other workaround?"}, {"owner": {"reputation": 26037, "user_id": 542190, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c3bb1f122c476561bb9a98a1523e8b5e?s=128&d=identicon&r=PG", "display_name": "filmor", "link": "https://stackoverflow.com/users/542190/filmor"}, "reply_to_user": {"reputation": 2512, "user_id": 5808553, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/6be8254e63e22cc820bb14938d532814?s=128&d=identicon&r=PG&f=1", "display_name": "Rajeev Ranjan", "link": "https://stackoverflow.com/users/5808553/rajeev-ranjan"}, "edited": false, "score": 3, "creation_date": 1536577621, "post_id": 52256188, "comment_id": 91460067, "body": "Not in safe code, no. If the API decides that you should not have access to the value and doesn&#39;t provide a separate constructor, that&#39;s it."}], "tags": [], "owner": {"reputation": 26037, "user_id": 542190, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c3bb1f122c476561bb9a98a1523e8b5e?s=128&d=identicon&r=PG", "display_name": "filmor", "link": "https://stackoverflow.com/users/542190/filmor"}, "is_accepted": true, "score": 8, "last_activity_date": 1536576588, "creation_date": 1536576588, "answer_id": 52256188, "question_id": 52256104, "link": "https://stackoverflow.com/questions/52256104/how-to-instantiate-a-public-tuple-structwith-private-field-from-a-different-mo/52256188#52256188", "title": "How to instantiate a public tuple struct(with private field) from a different module?", "body": "<p>The field <code>0</code> is private, you can either make it public like this</p>\n\n<pre><code>pub struct Id(pub Vec&lt;u8&gt;);\n</code></pre>\n\n<p>or you add an explicit constructor like this</p>\n\n<pre><code>impl Id {\n    pub fn new(param: Vec&lt;u8&gt;) -&gt; Id {\n        Id(param)\n    }\n}\n</code></pre>\n\n<p>and call it like</p>\n\n<pre><code>let mut id = Id::new(\"newId\".as_bytes().to_vec());\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 2512, "user_id": 5808553, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/6be8254e63e22cc820bb14938d532814?s=128&d=identicon&r=PG&f=1", "display_name": "Rajeev Ranjan", "link": "https://stackoverflow.com/users/5808553/rajeev-ranjan"}, "edited": false, "score": 0, "creation_date": 1536584898, "post_id": 52257179, "comment_id": 91464296, "body": "Thanks @Masaki, good to learn this new thing. But as I told, I do not have the liberty to change the definition."}], "tags": [], "owner": {"reputation": 2645, "user_id": 5254193, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-PTHapBqhSQM/AAAAAAAAAAI/AAAAAAAABA4/r5mrExVuDgU/photo.jpg?sz=128", "display_name": "Masaki Hara", "link": "https://stackoverflow.com/users/5254193/masaki-hara"}, "is_accepted": false, "score": 2, "last_activity_date": 1536580262, "creation_date": 1536580262, "answer_id": 52257179, "question_id": 52256104, "link": "https://stackoverflow.com/questions/52256104/how-to-instantiate-a-public-tuple-structwith-private-field-from-a-different-mo/52257179#52257179", "title": "How to instantiate a public tuple struct(with private field) from a different module?", "body": "<p>If you don't want to make something public to worldwide, but want to make it visible within a certain module, you can use <a href=\"https://doc.rust-lang.org/reference/visibility-and-privacy.html\" rel=\"nofollow noreferrer\">visibility qualifiers</a>. Example:</p>\n\n<pre><code>pub struct Id(pub(crate) Vec&lt;u8&gt;);\n</code></pre>\n"}], "owner": {"reputation": 2512, "user_id": 5808553, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/6be8254e63e22cc820bb14938d532814?s=128&d=identicon&r=PG&f=1", "display_name": "Rajeev Ranjan", "link": "https://stackoverflow.com/users/5808553/rajeev-ranjan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1850, "favorite_count": 1, "accepted_answer_id": 52256188, "answer_count": 2, "score": 4, "last_activity_date": 1536599889, "creation_date": 1536576301, "last_edit_date": 1536599889, "question_id": 52256104, "link": "https://stackoverflow.com/questions/52256104/how-to-instantiate-a-public-tuple-structwith-private-field-from-a-different-mo", "title": "How to instantiate a public tuple struct(with private field) from a different module?", "body": "<p>I have a module where a tuple struct is defined as:</p>\n\n<pre><code>#[derive(Clone, Default, Eq, Hash, PartialEq, PartialOrd)]\npub struct Id(Vec&lt;u8&gt;);\n</code></pre>\n\n<p>I make use of this struct in another module which needs to be imported there. But when I try to instantiate this struct <code>Id</code> as:</p>\n\n<pre><code>let mut id = Id(newId.as_bytes().to_vec()); //newId is a String\n</code></pre>\n\n<p>it throws an error saying:</p>\n\n<blockquote>\n  <p>constructor is not visible here due to private fields</p>\n</blockquote>\n\n<p>How do I make the unnamed field public (though I cannot in my case as this is part of an API)? Or is there a different way to initialize this struct ?  </p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 6, "creation_date": 1536556226, "post_id": 52250069, "comment_id": 91450317, "body": "And what is the error?"}, {"owner": {"reputation": 23, "user_id": 9617199, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/zLims.jpg?s=128&g=1", "display_name": "Nicholas Lawrence", "link": "https://stackoverflow.com/users/9617199/nicholas-lawrence"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1536599822, "post_id": 52250069, "comment_id": 91472892, "body": "@Boiethios almost always some version of mutability. You can see I can flailing trying to fix this with all my &amp;mut in the rust code. Turns out I just needed .last_mut()"}], "answers": [{"comments": [{"owner": {"reputation": 23, "user_id": 9617199, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/zLims.jpg?s=128&g=1", "display_name": "Nicholas Lawrence", "link": "https://stackoverflow.com/users/9617199/nicholas-lawrence"}, "edited": false, "score": 1, "creation_date": 1536599681, "post_id": 52251574, "comment_id": 91472823, "body": "thank you very much. Theres a few things here I didn&#39;t know:  I learned about the last_mut method, I never would have tried if let (Ok)..., and I was definitely calling the &#39;new&#39; method wrong the entire time. Thank you"}], "tags": [], "owner": {"reputation": 939, "user_id": 2870802, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-lHzULJklIJg/AAAAAAAAAAI/AAAAAAAABwk/_pJZF95FiAY/photo.jpg?sz=128", "display_name": "ozkriff", "link": "https://stackoverflow.com/users/2870802/ozkriff"}, "is_accepted": true, "score": 2, "last_activity_date": 1536625115, "last_edit_date": 1536625115, "creation_date": 1536557088, "answer_id": 52251574, "question_id": 52250069, "link": "https://stackoverflow.com/questions/52250069/how-do-i-port-python-code-that-discerns-which-csv-header-a-value-belongs-by-aski/52251574#52251574", "title": "How do I port Python code that discerns which CSV header a value belongs by asking &quot;can it be turned into a number&quot;?", "body": "<p>A literal port of your Python code to Rust:</p>\n\n<pre><code>#[derive(Debug)]\nstruct Treatment {\n    name: String,\n    data: Vec&lt;i32&gt;,\n}\n\nimpl Treatment {\n    fn new(name: String) -&gt; Self {\n        Self {\n            name,\n            data: Vec::new(),\n        }\n    }\n}\n\nfn main() {\n    let data = [\"a\", \"1\", \"2\", \"3\", \"b\", \"4\", \"5\", \"6\", \"c\", \"7\", \"8\", \"9\"];\n    let mut results: Vec&lt;Treatment&gt; = Vec::new();\n    for d in &amp;data {\n        if let Ok(n) = d.parse::&lt;i32&gt;() {\n            let last = results\n                .last_mut()\n                .expect(\"Some header must come before the values\");\n            last.data.push(n);\n        } else {\n            results.push(Treatment::new(d.to_string()))\n        }\n    }\n    println!(\"results = {:#?}\", results);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=3c2d8abc8682bf564b2e6ccde1866b28&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}, {"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1536590161, "post_id": 52255114, "comment_id": 91467770, "body": "I think you understood wrong; I think all lines in the CSV have been catenated into a single line, and the letters (a, b, c) represent the beginning of a CSV row. At least, that&#39;s what I get from reverse-engineering the Python code."}, {"owner": {"reputation": 23, "user_id": 9617199, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/zLims.jpg?s=128&g=1", "display_name": "Nicholas Lawrence", "link": "https://stackoverflow.com/users/9617199/nicholas-lawrence"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1536599944, "post_id": 52255114, "comment_id": 91472959, "body": "@Matthieu M. yes - I had solved for the .get(0) aspect so I didn&#39;t reflect that part in the Python code. Thank you by the way, it turns out the largest contributor to my mutability errors was me not employing .last_mut() as these two wonderful examples show. Thank you very much!"}], "tags": [], "owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "is_accepted": false, "score": 1, "last_activity_date": 1536625158, "last_edit_date": 1536625158, "creation_date": 1536572963, "answer_id": 52255114, "question_id": 52250069, "link": "https://stackoverflow.com/questions/52250069/how-do-i-port-python-code-that-discerns-which-csv-header-a-value-belongs-by-aski/52255114#52255114", "title": "How do I port Python code that discerns which CSV header a value belongs by asking &quot;can it be turned into a number&quot;?", "body": "<p>Supposing <code>file.csv</code> is formatted like a single column containing stacked columns:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>a\n1\n2\nb\n2\n3\n</code></pre>\n\n<p>This is a snippet that reads from such a CSV file and replicates the Python logic.</p>\n\n<p>It uses an iterator based approach using the <code>fold</code> combinator to accumulate treatments data:</p>\n\n<pre><code>extern crate csv;\n\n#[derive(Debug)]\nstruct Treatment {\n    name: String,\n    data: Vec&lt;i32&gt;,\n}\n\nimpl Treatment {\n    fn new(name: String) -&gt; Self {\n        Self {\n            name,\n            data: Vec::new(),\n        }\n    }\n}\n\nfn read_csv(file_path: String) -&gt; Vec&lt;Treatment&gt; {\n    let mut reader = csv::ReaderBuilder::new()\n        .has_headers(false)\n        .from_path(file_path)\n        .expect(\"error reading csv file\");\n\n    reader\n        .records()\n        .fold(Vec::new(), |mut treatments: Vec&lt;Treatment&gt;, item| {\n            match item {\n                Ok(str_record) =&gt; {\n                    let item = str_record.get(0).expect(\"missing column value\");\n                    match item.parse::&lt;i32&gt;() {\n                        Ok(n) =&gt; treatments\n                            .last_mut()\n                            .expect(\"expected a header in the first row\")\n                            .data\n                            .push(n),\n                        Err(_) =&gt; treatments\n                            .push(Treatment::new(item.to_string())),\n                    }\n               }\n               Err(err) =&gt; panic!(\"error: {}\", err),\n            }\n            treatments\n        })\n}\n\nfn main() {\n    let treatments = read_csv(\"./file.csv\".to_string());\n    println!(\"got: {:?}\", treatments);\n}\n</code></pre>\n"}], "owner": {"reputation": 23, "user_id": 9617199, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/zLims.jpg?s=128&g=1", "display_name": "Nicholas Lawrence", "link": "https://stackoverflow.com/users/9617199/nicholas-lawrence"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 116, "favorite_count": 1, "accepted_answer_id": 52251574, "answer_count": 2, "score": -2, "last_activity_date": 1536625158, "creation_date": 1536544087, "last_edit_date": 1536625089, "question_id": 52250069, "link": "https://stackoverflow.com/questions/52250069/how-do-i-port-python-code-that-discerns-which-csv-header-a-value-belongs-by-aski", "title": "How do I port Python code that discerns which CSV header a value belongs by asking &quot;can it be turned into a number&quot;?", "body": "<p>The values are essentially stacked columns in a CSV that all appear in the same column. For me to discern which header a value belongs to I pretty much just say \"can it be turned into a number\". </p>\n\n<p>The most simple example of what I am trying to do in Python in:</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>data = [\"a\",\"1\",\"2\",\"3\",\"b\",\"4\",\"5\",\"6\",\"c\",\"7\",\"8\",\"9\"]\n\nclass treatment:\n    def __init__(self, name):\n        self.name = name\n        self.data = []\n\nresults = []\n\nfor d in data:\n    try:\n        int(d)\n    except ValueError:\n        results.append(treatment(name=d))\n    else:\n        results[-1].data.append(d)\n</code></pre>\n\n<p>This is what I have in Rust, not functional after the parsing however:</p>\n\n<pre><code>extern crate csv;\n\nuse std::error::Error;\nuse std::fs::File;\nuse std::io;\nuse std::prelude::v1::Option;\nuse std::process;\nuse std::vec::Vec;\n\nstruct Treatment {\n    raw_name: String,\n    channel: String,\n    data: Vec&lt;i64&gt;,\n}\n\nimpl Treatment {\n    fn observe(&amp;mut self, observation: i64) {\n        &amp;mut self.data.push(observation);\n    }\n}\n\nstruct Experiment {\n    treatments: Vec&lt;Treatment&gt;,\n}\n\nimpl Experiment {\n    fn add_treatment(&amp;mut self, treatment_name: &amp;str, channel: &amp;str) {\n        &amp;mut self.treatments.push(Treatment {\n            raw_name: treatment_name.to_string(),\n            channel: channel.to_string(),\n            data: Vec::new(),\n        });\n    }\n\n    fn get_current_experiment(&amp;mut self) -&gt; &amp;Treatment {\n        self.treatments.last().unwrap()\n    }\n}\n\nfn deserialize_csv(file_path: String) -&gt; csv::Reader&lt;File&gt; {\n    csv::ReaderBuilder::new()\n        .has_headers(false)\n        .from_path(file_path)\n        .expect(\"Experienced issues reading csv file\")\n}\n\nfn vectorize_string_records(mut csv_reader: csv::Reader&lt;File&gt;) {\n    let mut experiments: Experiment = Experiment {\n        treatments: Vec::new(),\n    };\n\n    for row in csv_reader.records() {\n        // for these datasets we only care about data in the first cell\n        let datapoint = match &amp;row {\n            Ok(T) =&gt; T.get(0),\n            Err(E) =&gt; Some(\"\"),\n        }.unwrap();\n\n        let val_as_int = datapoint.parse::&lt;i64&gt;();\n\n        let current_treatment = experiments.get_current_experiment();\n\n        // discern if value is header or datapoint\n        match val_as_int {\n            Ok(int_val) =&gt; &amp;current_treatment.observe(int_val),\n            Err(new_header) =&gt; &amp;experiments.add_treatment(datapoint, &amp;\"ch=1\".to_string()),\n        };\n\n        println!(\"{}\", datapoint);\n    }\n}\n\nfn main() {\n    let i = deserialize_csv(\"/home/file.csv\".to_string());\n    vectorize_string_records(i);\n}\n</code></pre>\n\n<p>I'm struggling with a few concepts while trying to implement this in Rust.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 4, "creation_date": 1536522814, "post_id": 52247927, "comment_id": 91444146, "body": "&quot;After playing around with some things, I think this is correct?&quot; this is not really how I will call this kind of thing in rust. But yes this will &quot;compile&quot;"}, {"owner": {"reputation": 1756, "user_id": 8492116, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/22358b8a44a83a98115de7b8c6092529?s=128&d=identicon&r=PG&f=1", "display_name": "Aankhen", "link": "https://stackoverflow.com/users/8492116/aankhen"}, "edited": false, "score": 0, "creation_date": 1536523922, "post_id": 52247927, "comment_id": 91444462, "body": "Maybe if you added a bit of the code that produces the <code>A</code> we could find a way around the problem."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1536529053, "post_id": 52247927, "comment_id": 91445727, "body": "If you have an <code>&amp;A</code>, and you <i>know</i> it is an instance of <code>B</code>, why can&#39;t you prove that it is -- i.e., use <code>&amp;B</code>?"}, {"owner": {"reputation": 13004, "user_id": 887128, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/21dfdd82b179972af12332a8db35ac64?s=128&d=identicon&r=PG", "display_name": "Max", "link": "https://stackoverflow.com/users/887128/max"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1536545833, "post_id": 52247927, "comment_id": 91448512, "body": "@trentcl my code would be provable with tagged unions, but Rust doesn&#39;t have such functionality. I could probably use an enum, but that seems like a less fun way to write the code."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 5, "creation_date": 1536548475, "post_id": 52247927, "comment_id": 91448864, "body": "Sure, &quot;fun&quot; is one way to describe undefined behavior."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 6, "creation_date": 1536563960, "post_id": 52247927, "comment_id": 91452994, "body": "<code>enum</code> is what Rust calls a tagged union\u2026"}], "answers": [{"tags": [], "owner": {"reputation": 6357, "user_id": 6086311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb99289473f6393b89474785f2d294d1?s=128&d=identicon&r=PG", "display_name": "dtolnay", "link": "https://stackoverflow.com/users/6086311/dtolnay"}, "is_accepted": true, "score": 1, "last_activity_date": 1538939828, "creation_date": 1538939828, "answer_id": 52691992, "question_id": 52247927, "link": "https://stackoverflow.com/questions/52247927/convert-between-a-reference-to-a-trait-and-a-struct-that-implements-that-trait-i/52691992#52691992", "title": "Convert between a reference to a trait and a struct that implements that trait in Rust", "body": "<p>One way to do this safely is by adding a method <code>fn any(&amp;self) -&gt; &amp;Any</code> to your trait, which carries type information and makes it possible to perform a checked downcast to an arbitrary type (in this case <code>B</code>).</p>\n\n<pre><code>use std::any::Any;\n\ntrait A {\n    fn something(&amp;self);\n    fn any(&amp;self) -&gt; &amp;Any;\n}\n\nstruct B {\n    some_field: i32,\n}\n\nimpl A for B {\n    fn something(&amp;self) {}\n    fn any(&amp;self) -&gt; &amp;Any {\n        self\n    }\n}\n\nfn some_func(a: &amp;dyn A) {\n    let b: &amp;B = a.any().downcast_ref().unwrap();\n}\n</code></pre>\n"}], "owner": {"reputation": 13004, "user_id": 887128, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/21dfdd82b179972af12332a8db35ac64?s=128&d=identicon&r=PG", "display_name": "Max", "link": "https://stackoverflow.com/users/887128/max"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 316, "favorite_count": 0, "closed_date": 1538940822, "accepted_answer_id": 52691992, "answer_count": 1, "score": 0, "last_activity_date": 1538940812, "creation_date": 1536521065, "last_edit_date": 1538940812, "question_id": 52247927, "link": "https://stackoverflow.com/questions/52247927/convert-between-a-reference-to-a-trait-and-a-struct-that-implements-that-trait-i", "closed_reason": "Duplicate", "title": "Convert between a reference to a trait and a struct that implements that trait in Rust", "body": "<p>I have a trait and a struct that implements that trait:</p>\n\n<pre><code>trait A {\n    fn something(&amp;self);\n}\n\nstruct B {\n    some_field: i32,\n}\n\nimpl A for B {\n    fn something(&amp;self) {}\n}\n</code></pre>\n\n<p>There is a part of my code where I have an <code>&amp;A</code>, and I know it is an instance of <code>B</code>, I would like to cast <code>&amp;A</code> to <code>&amp;B</code>. How can I accomplish this? So far, I have tried first casting to <code>*const A</code> and then casting to <code>*const B</code>, but I can't figure out how to go from <code>*const B</code> to <code>&amp;B</code>. </p>\n\n<p>After playing around with some things, I think this is correct?</p>\n\n<pre><code>fn some_func(a: &amp;dyn A) {\n    let a_ptr = a as *const A;\n    let b_ptr = a_ptr as *const B;\n    unsafe { let b = &amp;*b_ptr as &amp;B; }\n}\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 13004, "user_id": 887128, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/21dfdd82b179972af12332a8db35ac64?s=128&d=identicon&r=PG", "display_name": "Max", "link": "https://stackoverflow.com/users/887128/max"}, "edited": false, "score": 0, "creation_date": 1536509927, "post_id": 52246365, "comment_id": 91440861, "body": "Hmm interesting. Does that have any performance costs associated with it?"}, {"owner": {"reputation": 13004, "user_id": 887128, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/21dfdd82b179972af12332a8db35ac64?s=128&d=identicon&r=PG", "display_name": "Max", "link": "https://stackoverflow.com/users/887128/max"}, "edited": false, "score": 0, "creation_date": 1536510389, "post_id": 52246365, "comment_id": 91440990, "body": "Also, is this safe? What happens if the instance of <code>C</code> is deallocated? It owns the <code>Box</code>, so the reference will no longer be valid, right?"}, {"owner": {"reputation": 8813, "user_id": 389119, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/05241abffd72dcdcd1dc9d6833706ba9?s=128&d=identicon&r=PG", "display_name": "antoyo", "link": "https://stackoverflow.com/users/389119/antoyo"}, "reply_to_user": {"reputation": 13004, "user_id": 887128, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/21dfdd82b179972af12332a8db35ac64?s=128&d=identicon&r=PG", "display_name": "Max", "link": "https://stackoverflow.com/users/887128/max"}, "edited": false, "score": 1, "creation_date": 1536510520, "post_id": 52246365, "comment_id": 91441022, "body": "Yes, this is safe thanks to the Rust borrow checker. Please read about <a href=\"https://doc.rust-lang.org/stable/book/second-edition/ch10-03-lifetime-syntax.html\" rel=\"nofollow noreferrer\">lifetimes</a> to understand how it works."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 13004, "user_id": 887128, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/21dfdd82b179972af12332a8db35ac64?s=128&d=identicon&r=PG", "display_name": "Max", "link": "https://stackoverflow.com/users/887128/max"}, "edited": false, "score": 0, "creation_date": 1536511781, "post_id": 52246365, "comment_id": 91441379, "body": "@Max The <code>Box</code> is still owned by the HashMap. The reason it needs to be dereferenced twice is: once to access the Box from the Box reference returned from <code>get</code> and once to get the data <i>inside</i> the <code>Box</code>. Then a reference to the inner data is returned. This is fine as long as the Box (which owns the data) lives longer than the reference. As antoyo says, this is enforced by lifetimes: The inferred lifetimes are actually: <code>fn get&lt;&#39;a&gt;(&amp;&#39;a self, key: &amp;&#39;static str) -&gt; Option&lt;&amp;&#39;a A&gt;</code>, which means that the returned reference cannot outlive <code>self</code>, which owns the HashMap, which owns the data."}], "tags": [], "owner": {"reputation": 8813, "user_id": 389119, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/05241abffd72dcdcd1dc9d6833706ba9?s=128&d=identicon&r=PG", "display_name": "antoyo", "link": "https://stackoverflow.com/users/389119/antoyo"}, "is_accepted": true, "score": 3, "last_activity_date": 1536509642, "creation_date": 1536509642, "answer_id": 52246365, "question_id": 52246336, "link": "https://stackoverflow.com/questions/52246336/box-not-automatically-converted-to-reference/52246365#52246365", "title": "Box not automatically converted to reference", "body": "<p>You can dereference the box and create a reference to it:</p>\n\n<pre><code>impl B for C {\n    fn get(&amp;self, key: &amp;'static str) -&gt; Option&lt;&amp;A&gt; {\n        return self.map.get(key).map(|value| &amp;**value)\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 13004, "user_id": 887128, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/21dfdd82b179972af12332a8db35ac64?s=128&d=identicon&r=PG", "display_name": "Max", "link": "https://stackoverflow.com/users/887128/max"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 421, "favorite_count": 0, "accepted_answer_id": 52246365, "answer_count": 1, "score": 4, "last_activity_date": 1536511118, "creation_date": 1536509442, "last_edit_date": 1536511118, "question_id": 52246336, "link": "https://stackoverflow.com/questions/52246336/box-not-automatically-converted-to-reference", "title": "Box not automatically converted to reference", "body": "<p>I am storing a <code>Box</code> in a <code>HashMap</code>. I would like to retrieve those values and convert them into references to the boxed type. My code looks like this:</p>\n\n<pre><code>use std::collections::HashMap;\n\ntrait A {}\n\ntrait B {\n    fn get(&amp;self, key: &amp;'static str) -&gt; Option&lt;&amp;A&gt;;\n}\n\nstruct C {\n    map: HashMap&lt;&amp;'static str, Box&lt;A&gt;&gt;,\n}\n\nimpl B for C {\n    fn get(&amp;self, key: &amp;'static str) -&gt; Option&lt;&amp;A&gt; {\n        return self.map.get(key)\n    }\n}\n</code></pre>\n\n<p>The error I get is: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>expected trait A, found struct `std::boxed::Box`\n</code></pre>\n\n<p>What is the proper way to convert <code>Option&lt;&amp;Box&lt;&amp;A&gt;&gt;</code> to <code>Option&lt;&amp;A&gt;</code>? </p>\n"}, {"tags": ["reflection", "rust", "ffi"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1536509639, "post_id": 52246271, "comment_id": 91440793, "body": "What the difference between called and invoked for you ?"}, {"owner": {"reputation": 11, "user_id": 10143606, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-Pb7WA_x_IFs/AAAAAAAAAAI/AAAAAAAAAAA/AAnnY7p3vo-c2Zml6Uxg_3OdCIK5-GzZMA/mo/photo.jpg?sz=128", "display_name": "cdeee", "link": "https://stackoverflow.com/users/10143606/cdeee"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1536511283, "post_id": 52246271, "comment_id": 91441256, "body": "called is like: foo(); invoked is invoke by using reflections xD"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1536511360, "post_id": 52246271, "comment_id": 91441269, "body": "There is no reflection like this in Rust."}, {"owner": {"reputation": 11, "user_id": 10143606, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-Pb7WA_x_IFs/AAAAAAAAAAI/AAAAAAAAAAA/AAnnY7p3vo-c2Zml6Uxg_3OdCIK5-GzZMA/mo/photo.jpg?sz=128", "display_name": "cdeee", "link": "https://stackoverflow.com/users/10143606/cdeee"}, "edited": false, "score": 0, "creation_date": 1536511393, "post_id": 52246271, "comment_id": 91441276, "body": "like calling a rust fn with p/invoke in .NET and invoking the rust fn with reflections in .NET"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 3, "creation_date": 1536511585, "post_id": 52246271, "comment_id": 91441323, "body": "There is no difference from the point of view of a function in rust, both call it. Better question why do you need to know ?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1536512140, "post_id": 52246271, "comment_id": 91441480, "body": "Please add example code which demonstrates calling a function vs and invoking it, to help explain what you mean by these terms (to me, they are the same, but obviously you have something in mind about how they are different)."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1536512239, "post_id": 52246271, "comment_id": 91441500, "body": "Also read <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>, which gives some good advice to new users on how to ask questions that are easy for others to answer."}, {"owner": {"reputation": 11, "user_id": 10143606, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-Pb7WA_x_IFs/AAAAAAAAAAI/AAAAAAAAAAA/AAnnY7p3vo-c2Zml6Uxg_3OdCIK5-GzZMA/mo/photo.jpg?sz=128", "display_name": "cdeee", "link": "https://stackoverflow.com/users/10143606/cdeee"}, "edited": false, "score": 1, "creation_date": 1536514681, "post_id": 52246271, "comment_id": 91442075, "body": "i have added an example"}, {"owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "edited": false, "score": 4, "creation_date": 1536516969, "post_id": 52246271, "comment_id": 91442642, "body": "Would you be able to detect this if the DLL was written in C, rather than Rust? If so, then use the same interface from Rust. However, I don&#39;t think .Net exposes that information in any reliable way."}], "answers": [{"comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 2, "creation_date": 1536521113, "post_id": 52247495, "comment_id": 91443662, "body": "Always be careful when giving a negative answer. You could get this information from the call stack for example. No saying it is a good idea. Not saying it would be reliable. But it could work."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 2, "last_activity_date": 1536522537, "last_edit_date": 1536522537, "creation_date": 1536517954, "answer_id": 52247495, "question_id": 52246271, "link": "https://stackoverflow.com/questions/52246271/how-to-check-from-within-a-rust-function-if-it-is-called-directly-or-by-invoke/52247495#52247495", "title": "How to check from within a Rust function if it is called directly or by Invoke() from C# code?", "body": "<p>No, this is not possible, without doing something very weird, which definitely would not portable, futureproof or in any way robust.</p>\n\n<p>From inside Rust, a function call is a function call, no matter which foreign API was used to call it.</p>\n"}], "owner": {"reputation": 11, "user_id": 10143606, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-Pb7WA_x_IFs/AAAAAAAAAAI/AAAAAAAAAAA/AAnnY7p3vo-c2Zml6Uxg_3OdCIK5-GzZMA/mo/photo.jpg?sz=128", "display_name": "cdeee", "link": "https://stackoverflow.com/users/10143606/cdeee"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 97, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1536522537, "creation_date": 1536508998, "last_edit_date": 1536520044, "question_id": 52246271, "link": "https://stackoverflow.com/questions/52246271/how-to-check-from-within-a-rust-function-if-it-is-called-directly-or-by-invoke", "title": "How to check from within a Rust function if it is called directly or by Invoke() from C# code?", "body": "<p>I am calling a Rust function in a native DLL from C# like this:</p>\n\n<pre class=\"lang-cs prettyprint-override\"><code>[DLLImport(\"rust.dll\")]\npublic static int Foo(int i);\npublic static void Invoke() {\n    typeof(Program).GetMethod(\"Foo\").Invoke(new object[] {null}, new object[] {1});\n}\npublic static void Call() {\n    Foo(1);\n}\n</code></pre>\n\n<p>I want to check if a the method is called directly or by using <code>Invoke</code>. If it's invoked the method should print <code>\"Invoked\"</code>, if not it should print <code>\"Called\"</code>. I'm not really sure if you can differentiate between these two things.</p>\n"}, {"tags": ["rust", "rust-cargo", "rust-piston"], "answers": [{"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 1, "last_activity_date": 1536506395, "creation_date": 1536506395, "answer_id": 52245890, "question_id": 52245678, "link": "https://stackoverflow.com/questions/52245678/cannot-compile-stb-truetype-0-2-4-because-slice-pattern-syntax-is-experimental/52245890#52245890", "title": "Cannot compile stb_truetype 0.2.4 because &quot;slice pattern syntax is experimental&quot;", "body": "<p><a href=\"https://github.com/rust-lang/rust/blob/master/RELEASES.md#version-1260-2018-05-10\" rel=\"nofollow noreferrer\">Slices patterns have been stabilized in rustc 1.26.0 (2018-05-10)</a>.</p>\n\n<p>On older compilers, they were only available experimentally, that is: 1) requiring a nightly compiler, 2) requiring the using crate to explicitly enable them with <code>#![feature(slice_patterns)]</code>, which newer versions of piston do not do.</p>\n\n<p>You will have to update your compiler to use this version of piston.</p>\n"}], "owner": {"reputation": 3, "user_id": 8617219, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3e02fdea37282852a72e1f2ab362ee80?s=128&d=identicon&r=PG&f=1", "display_name": "Alexander Berntsson", "link": "https://stackoverflow.com/users/8617219/alexander-berntsson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 168, "favorite_count": 0, "accepted_answer_id": 52245890, "answer_count": 1, "score": 0, "last_activity_date": 1537385280, "creation_date": 1536504793, "last_edit_date": 1537385280, "question_id": 52245678, "link": "https://stackoverflow.com/questions/52245678/cannot-compile-stb-truetype-0-2-4-because-slice-pattern-syntax-is-experimental", "title": "Cannot compile stb_truetype 0.2.4 because &quot;slice pattern syntax is experimental&quot;", "body": "<p>I was following <a href=\"https://github.com/PistonDevelopers/Piston-Tutorials/tree/master/getting-started\" rel=\"nofollow noreferrer\">a tutorial on how to setup the piston library</a>, but when I tried to compile it I got the following error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0658]: slice pattern syntax is experimental (see issue #23121)\n   --&gt; /home/alexander/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.2.4/src/lib.rs:606:13\n    |\n606 |         let [g1, g2] = if self.index_to_loc_format == 0 {\n    |             ^^^^^^^^\n</code></pre>\n\n<p>I am using the same versions of all the libraries and the same code, what did I do wrong?</p>\n"}, {"tags": ["rust", "future", "theory", "coroutine", "event-loop"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1536501159, "post_id": 52244749, "comment_id": 91438577, "body": "Look like &quot;What is the meaning of life&quot; ?"}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 1, "last_activity_date": 1536514339, "creation_date": 1536514339, "answer_id": 52247025, "question_id": 52244749, "link": "https://stackoverflow.com/questions/52244749/why-do-coroutines-have-futures/52247025#52247025", "title": "Why do coroutines have futures?", "body": "<p>These are all different (though related) ideas with different amounts of power.</p>\n\n<ul>\n<li><p>A <strong>future</strong> is an abstraction that lets you begin a process and then yield back to a handler, that is chosen by the original caller, when the process is done.</p></li>\n<li><p>A <strong>generator</strong> is more powerful than a future because it can yield multiple times. You can implement futures on top of generators.</p></li>\n<li><p>A <strong>coroutine</strong> is more powerful than a generator because it can choose who to yield to, instead of only to the caller. For example it can yield to another coroutine. You can implement generators on top of coroutines.</p></li>\n</ul>\n\n<p>Why would you use the less powerful tool, when more powerful ones are available? Sometimes the less powerful tool is the right tool for the job. It's useful to statically encode your program's invariants using types, because it can give you certainty about what something <em>can't</em> do.</p>\n\n<p>For example, when making a REST call to  a remote server, a future is probably sufficient. If the REST client exposed a generator, you'd have to deal with the possibility that it could yield multiple times, even though you know there is only going to be one result. If it exposed a coroutine, you'd have to consult the documentation to work out exactly how you're supposed to interact with it - even though you actually only need to do one thing, which is obvious when you're dealing with a future.</p>\n"}], "owner": {"reputation": 1329, "user_id": 2626865, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/87b0bb4bfa092d80332688146d14f703?s=128&d=identicon&r=PG", "display_name": "user19087", "link": "https://stackoverflow.com/users/2626865/user19087"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 595, "favorite_count": 1, "answer_count": 1, "score": 1, "last_activity_date": 1536598657, "creation_date": 1536497787, "last_edit_date": 1536598657, "question_id": 52244749, "link": "https://stackoverflow.com/questions/52244749/why-do-coroutines-have-futures", "title": "Why do coroutines have futures?", "body": "<p>Once you have coroutines you can create pipelines (haskell: pipes, conduits; python: generators) or cooperative event loops (python: curio). Once you have futures, it appears you can do the same; pipelines (rust: futures-rs) and event loops (rust: tokio). Since futures aren't cooperative they require a callback-based (even poll-based futures require callbacks) scheduler to execute blocking tasks within a thread or process pool. What benefits are there to combining futures (library-level) with coroutines (language-level) as these languages do: (python: asyncio), (rust: rfc), (ecmascript 6+). Fundamentally they seem to be conflicting solutions to the same problem.</p>\n\n<p>I'm not looking for a pro/con comparison, and I don't buy the argument that futures are \"one-shot\" coroutines. Just look at rust, which built an entire state-machine-based event framework using just futures. I want to know why python/asyncio and javascript both require coroutines together with futures. Why rust is planning on adding coroutines to its futures? Does it have to do with composability of events? Or the implicit stack of coroutines versus the explicit stack of continuation-passing futures? Not that I completely understand this argument, as both futures and coroutines are implemented using continuations... Or does it have something to do with direct vs indirect style?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 2, "creation_date": 1536457341, "post_id": 52240490, "comment_id": 91430031, "body": "Why do you think you need references as keys of your map? Neither <code>HashMap&lt;&amp;str, T</code> nor <code>Vec&lt;&amp;str&gt;</code> are very useful/convenient types. You most likely want owned <code>String</code> instead."}], "answers": [{"comments": [{"owner": {"reputation": 2326, "user_id": 2066849, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/e267705ea2720ff3b801db4c6b5adccf?s=128&d=identicon&r=PG", "display_name": "Jaza", "link": "https://stackoverflow.com/users/2066849/jaza"}, "edited": false, "score": 0, "creation_date": 1536559701, "post_id": 52243070, "comment_id": 91451299, "body": "As easy as that... just use <code>String</code> instead of <code>&amp;str</code>... yes, works fine with that change! I clearly still haven&#39;t got my head around Rust&#39;s ownership system, nor about the difference between <code>String</code> and <code>&amp;str</code>. Anyway, I&#39;m just getting started, hopefully it will sink in for me soon."}], "tags": [], "owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "is_accepted": true, "score": 3, "last_activity_date": 1536484867, "creation_date": 1536484867, "answer_id": 52243070, "question_id": 52240490, "link": "https://stackoverflow.com/questions/52240490/re-captures-error-borrowed-value-does-not-live-long-enough/52243070#52243070", "title": "re.captures error: borrowed value does not live long enough", "body": "<p>Rust memory safety rules prevents this type of approach: your HashMap value outlives the inserted items.</p>\n\n<p>See embedded comments below but especially the <a href=\"https://doc.rust-lang.org/book/2018-edition/ch04-00-understanding-ownership.html\" rel=\"nofollow noreferrer\">Ownership chapter</a> of the book.</p>\n\n<pre><code>fn main() {\n    let mut employees_by_dept: HashMap&lt;&amp;str, Vec&lt;&amp;str&gt;&gt; = HashMap::new();\n\n    let add_to_dept_re = Regex::new(\"^Add ([A-Za-z]+) to ([A-Za-z]+)$\").unwrap();\n    let list_in_dept_re = Regex::new(\"^List everyone in ([A-Za-z]+)$\").unwrap();\n    let list_all_re = Regex::new(\"^List everyone$\").unwrap();\n\n    loop {\n        let input_cmd = get_command();\n        let caps = add_to_dept_re.captures(&amp;input_cmd).unwrap();// &lt;--- input_cmd \n                                                                //is borrowed here\n\n        // ... code for getting dept_name and employee_name references\n        //     and inserting into HashMap omitted\n\n    } // &lt;----- The String input_cmd is dropped here (memory is freed)\n      // this implies that dept_name and employee_name references \n      // points to deallocated memory\n\n    // ... At this point you will have a live employees_by_dept HashMap\n    //     that contains references to deallocated memory\n\n    println!(\"Bye!\");\n}\n</code></pre>\n\n<p>Make instead the HashMap take ownership of the keys/items values:</p>\n\n<pre><code>fn main() {\n    println!(\"Add someone by typing e.g. \\\"Add Sally to Engineering\\\", list everyone in a department by typing e.g. \\\"List everyone in     Sales\\\", or list everyone by typing \\\"List everyone\\\". To quit, type \\\"Quit\\\".\");\n\n    let mut employees_by_dept: HashMap&lt;String, Vec&lt;String&gt;&gt; = HashMap::new();\n\n    let add_to_dept_re = Regex::new(\"^Add ([A-Za-z]+) to ([A-Za-z]+)$\").unwrap();\n    let list_in_dept_re = Regex::new(\"^List everyone in ([A-Za-z]+)$\").unwrap();\n    let list_all_re = Regex::new(\"^List everyone$\").unwrap();\n\n    loop {\n        let input_cmd = get_command();\n        let caps = add_to_dept_re.captures(&amp;input_cmd).unwrap();\n\n        if add_to_dept_re.is_match(&amp;input_cmd) {\n            let dept_name = caps.get(2).unwrap().as_str();\n            let employee_name = caps.get(1).unwrap().as_str();\n\n            println!(\"Adding person\");\n\n            employees_by_dept\n                .entry(dept_name.to_string())\n                .or_insert_with(Vec::new)\n                .push(employee_name.to_string());\n        } else if list_in_dept_re.is_match(&amp;input_cmd) {\n            println!(\"Listing people\");\n        } else if list_all_re.is_match(&amp;input_cmd) {\n            println!(\"Listing everyone\");\n        } else if input_cmd == \"Quit\" {\n            break;\n        } else {\n            println!(\"Invalid command\");\n            break;\n        }\n    }\n    println!(\"Bye!\");\n}\n</code></pre>\n"}], "owner": {"reputation": 2326, "user_id": 2066849, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/e267705ea2720ff3b801db4c6b5adccf?s=128&d=identicon&r=PG", "display_name": "Jaza", "link": "https://stackoverflow.com/users/2066849/jaza"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 182, "favorite_count": 1, "accepted_answer_id": 52243070, "answer_count": 1, "score": 0, "last_activity_date": 1536484867, "creation_date": 1536454400, "question_id": 52240490, "link": "https://stackoverflow.com/questions/52240490/re-captures-error-borrowed-value-does-not-live-long-enough", "title": "re.captures error: borrowed value does not live long enough", "body": "<p>Trying to complete the \"Hash Maps\" chapter of the Rust book at <a href=\"https://doc.rust-lang.org/book/2018-edition/ch08-03-hash-maps.html\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/book/2018-edition/ch08-03-hash-maps.html</a> , with this code:</p>\n\n<pre><code>extern crate regex;\n\nuse std::collections::HashMap;\nuse std::io;\nuse regex::Regex;\n\nfn get_command() -&gt; String {\n    let mut input_cmd = String::new();\n\n    io::stdin().read_line(&amp;mut input_cmd)\n        .expect(\"Failed to read command\");\n    let input_cmd = input_cmd.trim();\n\n    input_cmd.to_string()\n}\n\nfn main() {\n    println!(\"Add someone by typing e.g. \\\"Add Sally to Engineering\\\", list everyone in a department by typing e.g. \\\"List everyone in Sales\\\", or list everyone by typing \\\"List everyone\\\". To quit, type \\\"Quit\\\".\");\n\n    let mut employees_by_dept: HashMap&lt;&amp;str, Vec&lt;&amp;str&gt;&gt; = HashMap::new();\n\n    let add_to_dept_re = Regex::new(\"^Add ([A-Za-z]+) to ([A-Za-z]+)$\").unwrap();\n    let list_in_dept_re = Regex::new(\"^List everyone in ([A-Za-z]+)$\").unwrap();\n    let list_all_re = Regex::new(\"^List everyone$\").unwrap();\n\n    loop {\n        let input_cmd = get_command();\n        let caps = add_to_dept_re.captures(&amp;input_cmd).unwrap();\n\n        if add_to_dept_re.is_match(&amp;input_cmd) {\n            let dept_name = caps.get(2).unwrap().as_str();\n            let employee_name = caps.get(1).unwrap().as_str();\n\n            println!(\"Adding person\");\n            employees_by_dept.entry(&amp;dept_name)\n                .or_insert_with(Vec::new)\n                .push(employee_name);\n        } else if list_in_dept_re.is_match(&amp;input_cmd) {\n            println!(\"Listing people\");\n        } else if list_all_re.is_match(&amp;input_cmd) {\n            println!(\"Listing everyone\");\n        } else if input_cmd == \"Quit\" {\n            break;\n        } else {\n            println!(\"Invalid command\");\n            break;\n        }\n    }\n\n    println!(\"Bye!\");\n}\n</code></pre>\n\n<p>But I get this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `input_cmd` does not live long enough\n  --&gt; src/main.rs:28:45\n   |\n28 |         let caps = add_to_dept_re.captures(&amp;input_cmd).unwrap();\n   |                                             ^^^^^^^^^ borrowed value does not live long enough\n...\n48 |     }\n   |     - `input_cmd` dropped here while still borrowed\n...\n51 | }\n   | - borrowed value needs to live until here\n</code></pre>\n\n<p>Have tried <code>.captures(&amp;input_cmd.clone())</code> and various other things, but doesn't help. Any ideas?</p>\n"}, {"tags": ["enums", "rust", "polymorphism"], "comments": [{"owner": {"reputation": 2513, "user_id": 4725625, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/YwH49.png?s=128&g=1", "display_name": "Kwarrtz", "link": "https://stackoverflow.com/users/4725625/kwarrtz"}, "edited": false, "score": 0, "creation_date": 1536478931, "post_id": 52240099, "comment_id": 91433099, "body": "Unrelated to your question, but in Rust, functions, fields and variables are almost always lowercase. Other programmers might be confused reading your code if you capitalize things this way. Of course, that&#39;s only a problem if you plan to have other programmers read your code. :)"}, {"owner": {"reputation": 2509, "user_id": 3719101, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/Z4L8i.jpg?s=128&g=1", "display_name": "iago-lito &#39;considering leaving", "link": "https://stackoverflow.com/users/3719101/iago-lito-considering-leaving"}, "edited": false, "score": 0, "creation_date": 1559979777, "post_id": 52240099, "comment_id": 99596924, "body": "Find interesting points about this topic <a href=\"https://users.rust-lang.org/t/performance-implications-of-box-trait-vs-enum-delegation/11957/4\" rel=\"nofollow noreferrer\">there</a> :)"}], "answers": [{"tags": [], "owner": {"reputation": 2513, "user_id": 4725625, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/YwH49.png?s=128&g=1", "display_name": "Kwarrtz", "link": "https://stackoverflow.com/users/4725625/kwarrtz"}, "is_accepted": true, "score": 8, "last_activity_date": 1536478721, "creation_date": 1536478721, "answer_id": 52242376, "question_id": 52240099, "link": "https://stackoverflow.com/questions/52240099/should-i-use-enums-or-boxed-trait-objects-to-emulate-polymorphism/52242376#52242376", "title": "Should I use enums or boxed trait objects to emulate polymorphism?", "body": "<p>One of the big differences between using traits and enums for your situation is their extensibility. If you make <code>Axes</code> an enum, then the two options are hardcoded into the type. If you want to add some third form of axis, you'll have to modify the type itself, which will probably involve a lot of modifications to the code with uses <code>Axes</code> (e.g. anywhere you match on an <code>Axes</code> will probably need to be changed). On the other hand, if you make <code>Axes</code> a trait, you can add other types of axes by just defining a new type and writing an appropriate implementation, without modifying existing code at all. This could even be done from outside of the library, e.g. by a user.</p>\n\n<p>The other important thing to consider is how much access you need to the internals of the structs. With an enum, you get full access to all the data stored within the struct. If you want to write a function which can operate on both <code>Coordinate</code> and <code>Quaternion</code> using a trait, then the only operations you will be able to perform are those described in the <code>Axes</code> trait (in this case <code>Shift</code> and <code>Fold</code>). For instance, giving the implementation of <code>Axes</code> you gave, there would be no way for you to simply retrieve the <code>(X,Y,Z)</code> tuple via the <code>Axes</code> interface. If you needed to do that at some point, you would have to add a new method.</p>\n\n<p>Without knowing more about how you plan to use these types it's difficult to say for sure which of these options is the better choice, but if it were me I would probably use an enum. Ultimately, it comes down largely to preference, but hopefully this will give you some idea of the sorts of things to be thinking about when making your decision.</p>\n"}, {"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 4, "creation_date": 1537887759, "post_id": 52244253, "comment_id": 91943193, "body": "Just for completeness, if you box just the array inside <code>BigVariant</code>, the vector ends up the same size as the boxed trait version, but you still get the other advantages of <code>enum</code> aside from stack allocation."}, {"owner": {"reputation": 14809, "user_id": 53185, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/021d0d3a0676561486d5ec92339e3bb4?s=128&d=identicon&r=PG", "display_name": "mamcx", "link": "https://stackoverflow.com/users/53185/mamcx"}, "edited": false, "score": 0, "creation_date": 1538144911, "post_id": 52244253, "comment_id": 92053485, "body": "If a enum store in the stack, what happened if I put something like String?"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 14809, "user_id": 53185, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/021d0d3a0676561486d5ec92339e3bb4?s=128&d=identicon&r=PG", "display_name": "mamcx", "link": "https://stackoverflow.com/users/53185/mamcx"}, "edited": false, "score": 0, "creation_date": 1538146123, "post_id": 52244253, "comment_id": 92054177, "body": "@mamcx the <code>String</code> itself always has to allocate its internal buffer on the heap, but putting this into an <code>enum</code> won&#39;t box it any further, while a <code>Box&lt;SomeTraitImplementedByString&gt;</code> will have to indirections."}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": false, "score": 9, "last_activity_date": 1536493875, "creation_date": 1536493875, "answer_id": 52244253, "question_id": 52240099, "link": "https://stackoverflow.com/questions/52240099/should-i-use-enums-or-boxed-trait-objects-to-emulate-polymorphism/52244253#52244253", "title": "Should I use enums or boxed trait objects to emulate polymorphism?", "body": "<p>Another difference not mentioned in @Kwarrtz's answer is memory related.</p>\n\n<ul>\n<li><code>enum</code>s can be stored directly on the stack, while a boxed trait will always require the heap. That is, <code>enum</code>s are cheap to create, but boxed traits are not.</li>\n<li><p>an <code>enum</code> instance will always be as big as its biggest variant (plus a discriminant in most cases), even if you store mostly small variants. This would be a problem in a case like this:</p>\n\n<pre><code>enum Foo {\n    SmallVariant(bool),\n    BigVariant([u64; 100]),\n}\n</code></pre>\n\n<p>If you were to store N instances of this type in an vector, the vector would always need <code>N*(100*sizeof::&lt;u64&gt; + sizeOfDiscriminant)</code> bytes of memory, even when the vector only contains <code>SmallVariant</code>s.</p>\n\n<p>If you were using a boxed trait, the vector would use <code>N * sizeOfFatPointer == N * 2 * sizeof::&lt;usize&gt;</code>.</p></li>\n</ul>\n"}], "owner": {"reputation": 133, "user_id": 9275725, "user_type": "registered", "profile_image": "https://graph.facebook.com/1942386262693680/picture?type=large", "display_name": "Chaffon Liu", "link": "https://stackoverflow.com/users/9275725/chaffon-liu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2180, "favorite_count": 3, "accepted_answer_id": 52242376, "answer_count": 2, "score": 12, "last_activity_date": 1599002018, "creation_date": 1536448305, "last_edit_date": 1599002018, "question_id": 52240099, "link": "https://stackoverflow.com/questions/52240099/should-i-use-enums-or-boxed-trait-objects-to-emulate-polymorphism", "title": "Should I use enums or boxed trait objects to emulate polymorphism?", "body": "<p>Using the enum <code>Axes</code> to confine <code>Coordinate</code> and <code>Quaternion</code>:</p>\n<pre><code>#[derive(Clone)]\npub enum Axes {\n    Coordinate {\n        x: f64,\n        y: f64,\n        z: f64,\n        reserve: Vec&lt;f64&gt;,\n    },\n    Quaternion {\n        x: f64,\n        y: f64,\n        z: f64,\n    },\n}\n\nimpl Axes {\n    pub fn shift(&amp;mut self, Sample: &amp;Axes) -&gt; () {\n        let Dup: Axes = self.clone();\n        match Dup {\n            Axes::Coordinate { x, y, z, reserve } =&gt; match &amp;Sample {\n                Axes::Coordinate { x, y, z, reserve } =&gt; {\n                    *self = Axes::Coordinate {\n                        x: *x,\n                        y: *y,\n                        z: *z,\n                        reserve: reserve.to_vec(),\n                    };\n                }\n                _ =&gt; panic!(),\n            },\n            Axes::Quaternion { x, y, z } =&gt; match &amp;Sample {\n                Axes::Quaternion { x, y, z } =&gt; {\n                    *self = Axes::Quaternion {\n                        x: *x,\n                        y: *y,\n                        z: *z,\n                    };\n                }\n                _ =&gt; panic!(),\n            },\n        }\n    }\n}\n</code></pre>\n<p>Using the trait <code>Axes</code> to link the <code>Coordinate</code> and <code>Quaternion</code> structs:</p>\n<pre><code>pub trait Axes {\n    fn shift(&amp;mut self, Sample: &amp;Axes) -&gt; ();\n    fn fold(&amp;mut self, Sample: &amp;Axes) -&gt; ();\n}\n\npub struct Coordinate {\n    pub x: f64,\n    pub y: f64,\n    pub z: f64,\n    pub reserve: Vec&lt;f64&gt;,\n}\n\npub struct Quaternion {\n    pub x: f64,\n    pub y: f64,\n    pub z: f64,\n}\n\nimpl Axes for Coordinate {\n    fn shift(&amp;mut self, Sample: &amp;Axes) -&gt; () {}\n    fn fold(&amp;mut self, Sample: &amp;Axes) -&gt; () {}\n}\n\nimpl Axes for Quaternion {\n    fn shift(&amp;mut self, Sample: &amp;Axes) -&gt; () {}\n    fn fold(&amp;mut self, Sample: &amp;Axes) -&gt; () {}\n}\n</code></pre>\n<p>Is a trait implemented on structs more accessible and more efficient in this case? I am confused of which to use and in what cases.</p>\n"}, {"tags": ["javascript", "rust", "streaming", "fetch", "webassembly"], "comments": [{"owner": {"reputation": 1686, "user_id": 2998414, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/541072f1542f014d831f0f2e68f6daee?s=128&d=identicon&r=PG", "display_name": "snek", "link": "https://stackoverflow.com/users/2998414/snek"}, "edited": false, "score": 0, "creation_date": 1536456945, "post_id": 52239924, "comment_id": 91429984, "body": "Discussion in ##javascript on freenode revealed that OP is using golang&#39;s http <code>ServeFile</code> method."}, {"owner": {"reputation": 1569, "user_id": 7268968, "user_type": "registered", "accept_rate": 27, "profile_image": "https://graph.facebook.com/10107185465206940/picture?type=large", "display_name": "Peter Weyand", "link": "https://stackoverflow.com/users/7268968/peter-weyand"}, "reply_to_user": {"reputation": 1686, "user_id": 2998414, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/541072f1542f014d831f0f2e68f6daee?s=128&d=identicon&r=PG", "display_name": "snek", "link": "https://stackoverflow.com/users/2998414/snek"}, "edited": false, "score": 0, "creation_date": 1536456999, "post_id": 52239924, "comment_id": 91429991, "body": "thanks buddy! Yes, if anyone knows how to change the headers for the MIME type on ServeFile please let me know - I&#39;m looking into it now."}, {"owner": {"reputation": 1569, "user_id": 7268968, "user_type": "registered", "accept_rate": 27, "profile_image": "https://graph.facebook.com/10107185465206940/picture?type=large", "display_name": "Peter Weyand", "link": "https://stackoverflow.com/users/7268968/peter-weyand"}, "reply_to_user": {"reputation": 1686, "user_id": 2998414, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/541072f1542f014d831f0f2e68f6daee?s=128&d=identicon&r=PG", "display_name": "snek", "link": "https://stackoverflow.com/users/2998414/snek"}, "edited": false, "score": 0, "creation_date": 1536459536, "post_id": 52239924, "comment_id": 91430311, "body": "got it - answer was what snek said. Thanks snek."}], "answers": [{"comments": [{"owner": {"reputation": 191, "user_id": 1912383, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/461ce7eaa37a7dbe996472e4d4af0701?s=128&d=identicon&r=PG", "display_name": "user1912383", "link": "https://stackoverflow.com/users/1912383/user1912383"}, "edited": false, "score": 1, "creation_date": 1557397718, "post_id": 52732080, "comment_id": 98755326, "body": "thanks for the workaround..but i get this: CompileError: &quot;wasm validation error: at offset 4: failed to match magic number&quot;"}, {"owner": {"reputation": 13237, "user_id": 778272, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/bf138947e7290724a00b290ba461a205?s=128&d=identicon&r=PG", "display_name": "Lucio Paiva", "link": "https://stackoverflow.com/users/778272/lucio-paiva"}, "reply_to_user": {"reputation": 191, "user_id": 1912383, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/461ce7eaa37a7dbe996472e4d4af0701?s=128&d=identicon&r=PG", "display_name": "user1912383", "link": "https://stackoverflow.com/users/1912383/user1912383"}, "edited": false, "score": 0, "creation_date": 1557409800, "post_id": 52732080, "comment_id": 98762103, "body": "Not sure what could be wrong. What MIME type is the server sending? I suggest making the request using Postman and analyzing the response. It will probably give you some clue."}, {"owner": {"reputation": 348, "user_id": 10372825, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/99bf2356e7883fa7b3464cfee9324559?s=128&d=identicon&r=PG", "display_name": "Exr0n", "link": "https://stackoverflow.com/users/10372825/exr0n"}, "edited": false, "score": 0, "creation_date": 1587614638, "post_id": 52732080, "comment_id": 108581876, "body": "For some reason, I&#39;m getting <code>TypeError: WebAssembly.instantiate(): Imports argument must be present and must be an object.</code> However, the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/instantiate\" rel=\"nofollow noreferrer\">docs</a> say that it should be optional?"}, {"owner": {"reputation": 525, "user_id": 4656851, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/253bba0205d35f1c940f74ebffb2e533?s=128&d=identicon&r=PG", "display_name": "Alex", "link": "https://stackoverflow.com/users/4656851/alex"}, "reply_to_user": {"reputation": 348, "user_id": 10372825, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/99bf2356e7883fa7b3464cfee9324559?s=128&d=identicon&r=PG", "display_name": "Exr0n", "link": "https://stackoverflow.com/users/10372825/exr0n"}, "edited": false, "score": 0, "creation_date": 1592521479, "post_id": 52732080, "comment_id": 110463913, "body": "@Exr0n If for example you&#39;re using Golang WASM, you would add go.importObject after the buffer argument in the WebAssembly.instantiate() call."}, {"owner": {"reputation": 348, "user_id": 10372825, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/99bf2356e7883fa7b3464cfee9324559?s=128&d=identicon&r=PG", "display_name": "Exr0n", "link": "https://stackoverflow.com/users/10372825/exr0n"}, "reply_to_user": {"reputation": 525, "user_id": 4656851, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/253bba0205d35f1c940f74ebffb2e533?s=128&d=identicon&r=PG", "display_name": "Alex", "link": "https://stackoverflow.com/users/4656851/alex"}, "edited": false, "score": 0, "creation_date": 1592611370, "post_id": 52732080, "comment_id": 110496918, "body": "@Alex Do you know how it&#39;s done in rust? Thank you so much :)"}, {"owner": {"reputation": 525, "user_id": 4656851, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/253bba0205d35f1c940f74ebffb2e533?s=128&d=identicon&r=PG", "display_name": "Alex", "link": "https://stackoverflow.com/users/4656851/alex"}, "reply_to_user": {"reputation": 348, "user_id": 10372825, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/99bf2356e7883fa7b3464cfee9324559?s=128&d=identicon&r=PG", "display_name": "Exr0n", "link": "https://stackoverflow.com/users/10372825/exr0n"}, "edited": false, "score": 0, "creation_date": 1592705084, "post_id": 52732080, "comment_id": 110519693, "body": "@Exr0n I would reference wasm_exec.js that Go&#39;s wasm environment uses (<a href=\"https://github.com/golang/go/blob/b2fcfc1a50fbd46556f7075f7f1fbf600b5c9e5d/misc/wasm/wasm_exec.js#L176\" rel=\"nofollow noreferrer\">github.com/golang/go/blob/&hellip;</a>). Also check out Rust examples using either WebAssembly&#39;s instantiate or instantiateStreaming."}], "tags": [], "owner": {"reputation": 13237, "user_id": 778272, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/bf138947e7290724a00b290ba461a205?s=128&d=identicon&r=PG", "display_name": "Lucio Paiva", "link": "https://stackoverflow.com/users/778272/lucio-paiva"}, "is_accepted": false, "score": 8, "last_activity_date": 1539141252, "creation_date": 1539141252, "answer_id": 52732080, "question_id": 52239924, "link": "https://stackoverflow.com/questions/52239924/webassembly-instantiatestreaming-wrong-mime-type/52732080#52732080", "title": "WebAssembly InstantiateStreaming Wrong MIME type", "body": "<p>Considering you can't change the server to properly return <code>application/wasm</code> for <code>.wasm</code> file requests for any reason, you can work around the issue by changing the way you instantiate the WebAssembly module. Instead of doing this:</p>\n\n<pre><code>WebAssembly.instantiateStreaming(fetch(\"./add.wasm\")).then(obj =&gt; /* ... */)\n</code></pre>\n\n<p>Do this:</p>\n\n<pre><code>const response = await fetch(\"add.wasm\");\nconst buffer = await response.arrayBuffer();\nconst obj = await WebAssembly.instantiate(buffer);\nobj.instance.exports.exported_func();\n</code></pre>\n\n<p>Or the equivalent using <code>then()</code> if you cannot use <code>async/await</code>.</p>\n\n<p>In practice, what my workaround does is to avoid calling <code>instantiateStreaming()</code>, which must check the MIME type returned by the server before proceeding (according to <a href=\"https://www.w3.org/TR/wasm-web-api-1/#streaming-modules\" rel=\"noreferrer\">this specification</a>). Instead, I call <code>instantiate()</code> passing an <code>ArrayBuffer</code> and avoid the check altogether.</p>\n"}, {"tags": [], "owner": {"reputation": 51, "user_id": 8710484, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/108619920e40a64afae03bddee88ecf0?s=128&d=identicon&r=PG&f=1", "display_name": "StashOfCode", "link": "https://stackoverflow.com/users/8710484/stashofcode"}, "is_accepted": false, "score": 0, "last_activity_date": 1544779499, "creation_date": 1544779499, "answer_id": 53776765, "question_id": 52239924, "link": "https://stackoverflow.com/questions/52239924/webassembly-instantiatestreaming-wrong-mime-type/53776765#53776765", "title": "WebAssembly InstantiateStreaming Wrong MIME type", "body": "<p>A snippet of code for a workaround has been published on the WebAssembly Git <a href=\"https://github.com/mdn/webassembly-examples/issues/5\" rel=\"nofollow noreferrer\">here</a>. Unfortunately, this is a workaround, and this defeats the purpose of <code>instantiateStreaming()</code> which is told <a href=\"https://developer.mozilla.org/en-US/docs/WebAssembly/Loading_and_running\" rel=\"nofollow noreferrer\">here</a> to be \"a lot more efficient\", since the workaround needs an ArrayBuffer that <code>instantiateStreaming()</code> helps to avoid. </p>\n"}, {"comments": [{"owner": {"reputation": 35, "user_id": 4999254, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Y3sIn.jpg?s=128&g=1", "display_name": "iankit3", "link": "https://stackoverflow.com/users/4999254/iankit3"}, "edited": false, "score": 0, "creation_date": 1563652920, "post_id": 57128131, "comment_id": 100772784, "body": "Please let me know if this works for you. @peter-weyand"}], "tags": [], "owner": {"reputation": 35, "user_id": 4999254, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Y3sIn.jpg?s=128&g=1", "display_name": "iankit3", "link": "https://stackoverflow.com/users/4999254/iankit3"}, "is_accepted": false, "score": 2, "last_activity_date": 1563653171, "last_edit_date": 1563653171, "creation_date": 1563652751, "answer_id": 57128131, "question_id": 52239924, "link": "https://stackoverflow.com/questions/52239924/webassembly-instantiatestreaming-wrong-mime-type/57128131#57128131", "title": "WebAssembly InstantiateStreaming Wrong MIME type", "body": "<blockquote>\n  <p><code>there was some error;  TypeError: \"Response has unsupported MIME type\"</code>\n  The Web server you are running does not understands/serves a MIME type <code>application/wasm</code>.</p>\n</blockquote>\n\n<p>You can use a <a href=\"https://crates.io/crates/https\" rel=\"nofollow noreferrer\">rust based http server</a>, it knows about wasm MIME type.</p>\n\n<h2>Installation</h2>\n\n<p>Simply use curl</p>\n\n<pre><code>curl -SsL https://cdn.rawgit.com/thecoshman/http/master/install.sh | sh\n</code></pre>\n\n<p>and execute the downloaded script or you can explorer other ways to do the same at <a href=\"https://crates.io/crates/https\" rel=\"nofollow noreferrer\">https://crates.io/crates/https</a>.</p>\n\n<hr>\n\n<h2>Running</h2>\n\n<p>Please use the downloaded server to server your Web Application(index.html).\ne.g</p>\n\n<pre><code>cd ${YOUR_APPS_PATH}\n\nhttp\n</code></pre>\n"}], "owner": {"reputation": 1569, "user_id": 7268968, "user_type": "registered", "accept_rate": 27, "profile_image": "https://graph.facebook.com/10107185465206940/picture?type=large", "display_name": "Peter Weyand", "link": "https://stackoverflow.com/users/7268968/peter-weyand"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 9993, "favorite_count": 3, "answer_count": 3, "score": 10, "last_activity_date": 1563653171, "creation_date": 1536446113, "last_edit_date": 1536456458, "question_id": 52239924, "link": "https://stackoverflow.com/questions/52239924/webassembly-instantiatestreaming-wrong-mime-type", "title": "WebAssembly InstantiateStreaming Wrong MIME type", "body": "<p>I am attempting to get this tutorial (here: <a href=\"https://www.hellorust.com/demos/add/index.html\" rel=\"noreferrer\">https://www.hellorust.com/demos/add/index.html</a>) to work, and it seems that whatever I do, I cannot get the WebAssembly MDN reserved function to properly work. </p>\n\n<p>So, I followed the instructions on the link above and got an <code>add.wasm</code> file. As far as I can tell this should be fairly simple and should work. After a little digging I found that the newest WebAssembly module is to instantiate streaming - the documentation for which can be found here: (<a href=\"https://developer.mozilla.org/en-US/docs/WebAssembly/Using_the_JavaScript_API\" rel=\"noreferrer\">https://developer.mozilla.org/en-US/docs/WebAssembly/Using_the_JavaScript_API</a>). </p>\n\n<p>The MDN example says to do the following: </p>\n\n<pre><code>var importObject = {\n  imports: { imported_func: arg =&gt; console.log(arg) }\n};\n</code></pre>\n\n<p>then </p>\n\n<pre><code>WebAssembly.instantiateStreaming(fetch('simple.wasm'), importObject)\n.then(obj =&gt; obj.instance.exports.exported_func());\n</code></pre>\n\n<p>According to MDN the importObject is to unwrap the nested argument. Weird, but OK. </p>\n\n<p>To make this as simple as possible I put the <code>add.wasm</code> file and the <code>js</code> file that would import it in the same directory and then did then following (<strong>NOTE</strong>: I am using Vue.js, but for anyone familiar with SPA like libraries this should be similar):</p>\n\n<pre><code>window.WebAssembly.instantiateStreaming(fetch('./add.wasm', {\n  headers: {\n    \"Content-Type\": \"application/wasm\",\n  },\n}), importObject)\n.then(obj =&gt; {\n  console.log('inside return obj from WebAssembly initiateStreaming')\n  obj =&gt; obj.instance.exports.exported_func() \n})\n.catch(error=&gt;{\n  console.log('there was some error; ', error)\n});\n</code></pre>\n\n<p>The error I get back is: </p>\n\n<pre><code>there was some error;  TypeError: \"Response has unsupported MIME type\"\n</code></pre>\n\n<p>I've tried not adding the header to the fetch request, using <code>fetch(add.wasm)</code>, dropping the <code>window.</code>, dropping the <code>importObject</code> entirely and simple logging <code>obj</code> to console. Nothing appears to work. </p>\n\n<p>It may be that I have to add the <code>application/wasm</code> field to webpack somehow if it is not widely supported, but I'm not sure and I haven't seen any examples online. </p>\n\n<p>Does anyone know how to get this to work?</p>\n\n<p>EDIT: </p>\n\n<p>Someone suggested that since this was a fetch request it had to be making the request from a backend server. This made sense to me, so I did the following: </p>\n\n<pre><code>    WebAssembly.instantiateStreaming(fetch('http://localhost:8000/files/add.wasm'), importObject)\n    .then(obj =&gt; {\n      console.log('inside return obj from WebAssembly initiateStreaming')\n      obj =&gt; obj.instance.exports.exported_func()\n    })\n    .catch(error=&gt;{\n      console.log('there was some error; ', error)\n    });\n</code></pre>\n\n<p>Where <code>http://localhost:8000/files/{someFile}</code> is a backend route that serves my files (which I made sure to put <code>add.wasm</code> in of course). Unfortunately, I get the same error (i.e. <code>unrecognized MIME type</code>) and I'm not sure why.</p>\n"}, {"tags": ["join", "rust", "nested-loops", "relational-algebra", "relational"], "comments": [{"owner": {"reputation": 13920, "user_id": 3404097, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6e38747633941acae3957fd99b5ebe20?s=128&d=identicon&r=PG&f=1", "display_name": "philipxy", "link": "https://stackoverflow.com/users/3404097/philipxy"}, "edited": false, "score": 0, "creation_date": 1536445868, "post_id": 52239451, "comment_id": 91428500, "body": "Dozens of published database textbooks are free online in pdf. Where did you learn what you know of relational join implementation/optimization? Please always google many clear, concise &amp; specific versions/phrasings of your question/problem/goal with &amp; without your particular strings/names &amp; read many answers. Add relevant keywords you discover to your searches. If you don&#39;t find an answer then post, using one variant search for your title &amp; keywords for your tags. See the downvote arrow mouseover text."}, {"owner": {"reputation": 13920, "user_id": 3404097, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6e38747633941acae3957fd99b5ebe20?s=128&d=identicon&r=PG&f=1", "display_name": "philipxy", "link": "https://stackoverflow.com/users/3404097/philipxy"}, "edited": false, "score": 0, "creation_date": 1536476157, "post_id": 52239451, "comment_id": 91432677, "body": "It&#39;s not clear exactly what you are trying to ask. Do you want to know only about variations of a nested loops algorithm? If so, is storing data &amp; looping over it a &quot;pass&quot;? (And why do you even care about one more pass, since you already pass over the right table for every left table row?) Are you asking about <i>any</i> algorithm? We can join by sorting with one &quot;pass&quot; per input then &quot;merging&quot; in one &quot;pass&quot; per sorted structure--is this &quot;single pass&quot;? PS  What exactly are your input &amp; output structures? What is your cost model? Please read &amp; act on <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. Please tag with your language."}, {"owner": {"reputation": 14809, "user_id": 53185, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/021d0d3a0676561486d5ec92339e3bb4?s=128&d=identicon&r=PG", "display_name": "mamcx", "link": "https://stackoverflow.com/users/53185/mamcx"}, "reply_to_user": {"reputation": 13920, "user_id": 3404097, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6e38747633941acae3957fd99b5ebe20?s=128&d=identicon&r=PG&f=1", "display_name": "philipxy", "link": "https://stackoverflow.com/users/3404097/philipxy"}, "edited": false, "score": 0, "creation_date": 1536516056, "post_id": 52239451, "comment_id": 91442384, "body": "I asking exactly what the title say. How run the full outer join and if is possible to do it in a single pass (ie: comparing only once per row). The example is done in the Input/Result part. Was a mistake to put the rust code I have?"}, {"owner": {"reputation": 13920, "user_id": 3404097, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6e38747633941acae3957fd99b5ebe20?s=128&d=identicon&r=PG&f=1", "display_name": "philipxy", "link": "https://stackoverflow.com/users/3404097/philipxy"}, "edited": false, "score": 0, "creation_date": 1536524962, "post_id": 52239451, "comment_id": 91444756, "body": "Re &quot;Was it a mistake to include the rust code&quot;: Your question is about an algorithm so it is good that you give code &amp; language. But we should be able to cut &amp; paste &amp; run code, including declarations &amp; example input, and preferably cut &amp; paste &amp; compare output &amp; desired output. And it should have a clear specification &amp; explanation. (That is the essence of what the MCVE link says.)"}], "answers": [{"comments": [{"owner": {"reputation": 13920, "user_id": 3404097, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6e38747633941acae3957fd99b5ebe20?s=128&d=identicon&r=PG&f=1", "display_name": "philipxy", "link": "https://stackoverflow.com/users/3404097/philipxy"}, "reply_to_user": {"reputation": 14809, "user_id": 53185, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/021d0d3a0676561486d5ec92339e3bb4?s=128&d=identicon&r=PG", "display_name": "mamcx", "link": "https://stackoverflow.com/users/53185/mamcx"}, "edited": false, "score": 0, "creation_date": 1536476458, "post_id": 52239906, "comment_id": 91432728, "body": "I corrected &amp; simplified my answer. But maybe I don&#39;t understand the question--see my comment on it."}], "tags": [], "owner": {"reputation": 13920, "user_id": 3404097, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6e38747633941acae3957fd99b5ebe20?s=128&d=identicon&r=PG&f=1", "display_name": "philipxy", "link": "https://stackoverflow.com/users/3404097/philipxy"}, "is_accepted": true, "score": 1, "last_activity_date": 1536476586, "last_edit_date": 1536476586, "creation_date": 1536445935, "answer_id": 52239906, "question_id": 52239451, "link": "https://stackoverflow.com/questions/52239451/is-possible-in-a-single-pass-build-a-full-join-for-a-in-memory-structure-not-us/52239906#52239906", "title": "Is possible in a single pass build a FULL JOIN for a in-memory structure (not using sql!)", "body": "<p>Full join returns inner join tuples union unmatched left table tuples extended by nulls union unmatched right table tuples extended by nulls.</p>\n\n<p>Currently your code outputs left join tuples. Each iteration of the outer loop outputs more tuples that are in the inner join or it outputs the null-extension of a left table tuple that did not match any right table tuple. To output full join tuples you must also output the null-extension of each right table tuple that did not match any left table tuple. You can do this as follows: Define a set variable before the loops. It will eventually contain all positions/indices for right table tuples that did not match any left table tuple. Immediately before the <code>if compare</code>, if it is the first iteration of the outer loop then insert the right tuple position/index into the set. Inside the <code>if  compare</code>'s nested block remove the right tuple position/index from the set.</p>\n"}], "owner": {"reputation": 14809, "user_id": 53185, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/021d0d3a0676561486d5ec92339e3bb4?s=128&d=identicon&r=PG", "display_name": "mamcx", "link": "https://stackoverflow.com/users/53185/mamcx"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 61, "favorite_count": 0, "accepted_answer_id": 52239906, "answer_count": 1, "score": 0, "last_activity_date": 1536517700, "creation_date": 1536441138, "last_edit_date": 1536517700, "question_id": 52239451, "link": "https://stackoverflow.com/questions/52239451/is-possible-in-a-single-pass-build-a-full-join-for-a-in-memory-structure-not-us", "title": "Is possible in a single pass build a FULL JOIN for a in-memory structure (not using sql!)", "body": "<p>I'm building a in-memory columnar relational engine. For extract the values I want to do late materialization where I collect the positions/indices where a match was found and at the end collect the values.</p>\n\n<p>Now implementing joins I fail to see how do a general join algorithm that cover all the other cases. Left, Right &amp; Inner are easy, but FULL/Outer not. This is my naive implementation with nested-loops:</p>\n\n<pre><code>pub fn join(&amp;self, compare:&amp;BoolExpr) -&gt; JoinPos\n{\n    //Allocate at least for inner joins...\n    let total = cmp::max(self.left.len(), self.right.len());\n\n    let mut cols_left  = Vec::with_capacity(total);\n    let mut cols_right = Vec::with_capacity(total);\n    let mut found = false;\n\n    while !self.left.eof() {\n        let left = self.left.tuple();\n        while !self.right.eof() {\n            let right = self.right.tuple();\n            if compare(&amp;left, &amp;right) {\n                //A match found. Record positions of both cursors\n                cols_left.push(self.left.pos() as isize);\n                cols_right.push(self.right.pos() as isize);\n                found = true;\n            }\n            self.right.next();\n        }\n        //Not found a single match at the right cursor..\n        if !found {\n            cols_left.push(self.left.pos() as isize);\n            cols_right.push(-1);\n        }\n        found = false;\n        self.left.next();\n        self.right.first();\n    }\n\n    JoinPos {\n        left:cols_left,\n        right:cols_right,\n    }\n}\n</code></pre>\n\n<p>Now, the problem is that I can find when the left was not found in the right but not the opposite without another pass:</p>\n\n<pre><code>Input:\nL= [1, 2, 3]\nR= [2, 3, 4]\n\nResult. It capture the positions that match. -1 if not found\nL | R\n======\n1   -1\n2   1\n3   2\n-1  3\n</code></pre>\n\n<p>Thanks to @philipxy I have a working solution:</p>\n\n<pre><code>pub fn join(&amp;self, compare:&amp;BoolExpr) -&gt; JoinPos\n{\n    let total = cmp::max(self.left.len(), self.right.len());\n\n    let mut right_not_founds = HashSet::new();\n    let mut cols_left  = Vec::with_capacity(total);\n    let mut cols_right = Vec::with_capacity(total);\n    let mut found = false;\n    let mut first = true;\n\n    while !self.left.eof() {\n        let left = self.left.tuple(&amp;self.cols_left);\n        while !self.right.eof() {\n            let right = self.right.tuple(&amp;self.cols_right);\n            if first {\n                right_not_founds.insert(self.right.pos());\n            }\n\n            if compare(&amp;left, &amp;right) {\n                cols_left.push(self.left.pos() as isize);\n                cols_right.push(self.right.pos() as isize);\n                right_not_founds.remove(&amp;self.right.pos());\n\n                found = true;\n            }\n            self.right.next();\n        }\n        if !found {\n            cols_left.push(self.left.pos() as isize);\n            cols_right.push(-1);\n        }\n        found = false;\n        first = false;\n        self.left.next();\n        self.right.first();\n    }\n\n    for pos in right_not_founds {\n        cols_left.push(-1);\n        cols_right.push(pos as isize);\n    }\n\n    JoinPos {\n        left:cols_left,\n        right:cols_right,\n    }\n}\n</code></pre>\n"}, {"tags": ["reference", "rust", "lifetime", "mutable"], "answers": [{"comments": [{"owner": {"reputation": 3480, "user_id": 2686821, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/5dd46afe4f5a75f2667569582b20ac9b?s=128&d=identicon&r=PG&f=1", "display_name": "soupybionics", "link": "https://stackoverflow.com/users/2686821/soupybionics"}, "edited": false, "score": 0, "creation_date": 1537348478, "post_id": 52241021, "comment_id": 91748325, "body": "Thanks. If Version 2 and Version 3 are basically the same, then why are the error messages different? What does it mean for &quot;data to flow&quot; in Version 3?"}, {"owner": {"reputation": 2673, "user_id": 7274990, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6819319104c8dbd5f1612d86ea8d9216?s=128&d=identicon&r=PG&f=1", "display_name": "Calculator", "link": "https://stackoverflow.com/users/7274990/calculator"}, "reply_to_user": {"reputation": 3480, "user_id": 2686821, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/5dd46afe4f5a75f2667569582b20ac9b?s=128&d=identicon&r=PG&f=1", "display_name": "soupybionics", "link": "https://stackoverflow.com/users/2686821/soupybionics"}, "edited": false, "score": 0, "creation_date": 1537439570, "post_id": 52241021, "comment_id": 91789036, "body": "@soupybionics I don&#39;t know for sure why they are different, but when you remove the return value on version 2 and assign to a variable instead you also get the &quot;data flows&quot; message which has the same error code: <a href=\"https://play.rust-lang.org/?gist=371448f8a442ebf8c238cf32222d1f60&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a> Lifetime error messages are not always perfectly on point. I included an example in the playground link, where <code>&amp;&#39;a &amp;&#39;b mut i32</code> is divided into a vec of slices and a slice, which should make it clear where the meaning of &quot;data flows&quot; derives from."}], "tags": [], "owner": {"reputation": 2673, "user_id": 7274990, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6819319104c8dbd5f1612d86ea8d9216?s=128&d=identicon&r=PG&f=1", "display_name": "Calculator", "link": "https://stackoverflow.com/users/7274990/calculator"}, "is_accepted": true, "score": 3, "last_activity_date": 1536591101, "last_edit_date": 1536591101, "creation_date": 1536462705, "answer_id": 52241021, "question_id": 52239075, "link": "https://stackoverflow.com/questions/52239075/lifetimes-handling-when-returning-inner-reference-from-a-reference-passed-as-an/52241021#52241021", "title": "Lifetimes&#39; handling when returning inner reference from a reference passed as an argument to the function", "body": "<blockquote>\n  <p>What is the reason it gives the above error?. Does it consider it's\n  ownership over mutable reference and it sees that something (from <code>Foo</code>)\n  is being taken out (with an independent lifetime), which is not\n  possible, hence the error ?</p>\n</blockquote>\n\n<p>The mutable borrow indeed cannot be moved out of Foo since mutable borrows are not <code>Copy</code>. It is implicitly immutably reborrowed:</p>\n\n<pre><code>fn func &lt;'a, 'b&gt; (x:&amp;'a Foo&lt;'b&gt;) -&gt; &amp;'b i32 {\n    &amp;*x.i\n}\n</code></pre>\n\n<p>However, this is not the source of the problem. First, here is a summary of the four versions of <code>func</code> (struct <code>Foo</code> has no relevance in my explanation):</p>\n\n<p>version 1 (compiles):</p>\n\n<pre><code>fn func&lt;'a, 'b&gt;(x: &amp;'a &amp;'b i32) -&gt; &amp;'b i32 {\n    x\n}\n</code></pre>\n\n<p>version 2 (fails to compile):</p>\n\n<pre><code>fn func&lt;'a, 'b&gt;(x: &amp;'a &amp;'b mut i32) -&gt; &amp;'b i32 {\n    x\n}\n</code></pre>\n\n<p>version 3 (fails to compile):</p>\n\n<pre><code>fn func&lt;'a, 'b: 'a&gt;(x: &amp;'a &amp;'b mut i32) -&gt; &amp;'b i32 {\n    x\n}\n</code></pre>\n\n<p>version 4 (compiles):</p>\n\n<pre><code>fn func&lt;'a: 'b, 'b&gt;(x: &amp;'a &amp;'b mut i32) -&gt; &amp;'b i32 {\n    x\n}\n</code></pre>\n\n<p>Version 2 and 3 fail, because they violate the no-aliasing rule which forbids to have a mutable reference and an immutable reference to a resource at the same time. In both versions <code>'b</code> may <em>strictly</em> outlive <code>'a</code>. Therefore, <code>&amp;'b mut i32</code> and <code>&amp;'b i32</code> could coexist. Version 1 compiles, because the aliasing rules allow multiple immutable references to a resource at the same time. Therefore, <code>&amp;'b i32</code> may legally coexist with anothor <code>&amp;'b i32</code>. </p>\n\n<p>At first sight, it looks like version 4 should fail since there are again a mutable borrow and an immutable borrow of the same lifetime. The difference to version 2 and 3 is that this time <code>'a</code> lives at least as long as <code>'b</code> due to the requirement <code>'a: 'b</code>, which implies that <code>'b</code> may <em>not</em> strictly outlive <code>'a</code>. As long as lifetime <code>'a</code> lasts the referenced <code>i32</code> cannot be mutably borrowed a second time (mutable references are not <code>Copy</code>) - the <code>i32</code> is already mutably borrowed for the <code>func</code> call.</p>\n\n<p>Here is an example demonstrating, how version 2 and 3 could lead to undefined behavior:</p>\n\n<pre><code>fn func&lt;'a, 'b: 'a&gt;(x: &amp;'a &amp;'b mut String) -&gt; &amp;'b str {\n    unsafe { std::mem::transmute(&amp;**x as &amp;str) } // force compilation\n}\n\nfn main() {\n    let mut s = String::from(\"s\");\n    let mutref_s = &amp;mut s;\n    let ref_s = {\n        let ref_mutref_s = &amp;mutref_s;\n        func(ref_mutref_s)\n    };\n    // use the mutable reference to invalidate the string slice       \n    mutref_s.clear();\n    mutref_s.shrink_to_fit();\n    // use the invalidated string slice\n    println!(\"{:?}\", ref_s);\n}\n</code></pre>\n\n<p>Swapping version 3 with version 4 shows how the in this case still active outer immutable borrow prevents the second mutable borrow. Lifetime <code>'a</code> on the outer immutable borrow is forced by the new requirement <code>'a: 'b</code> to be expanded to be equal to lifetime <code>'b</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `*mutref_s` as mutable because `mutref_s` is also borrowed as immutable\n  --&gt; src/main.rs:20:5\n   |\n17 |         let ref_mutref_s = &amp;mutref_s;\n   |                             -------- immutable borrow occurs here\n...\n20 |     mutref_s.clear();\n   |     ^^^^^^^^ mutable borrow occurs here\n...\n23 | }\n   | - immutable borrow ends here\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 28156, "user_id": 1026, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/ea331e778d54effc15b5fbc694bc8232?s=128&d=identicon&r=PG", "display_name": "Nickolay", "link": "https://stackoverflow.com/users/1026/nickolay"}, "edited": false, "score": 0, "creation_date": 1552892735, "post_id": 52247097, "comment_id": 97167251, "body": "Thanks, this helped! I was trying to understand what language mechanisms dictate that <i>&quot;the reference is still &quot;through&quot; the variable x&quot;</i>, and I think that no <a href=\"https://doc.rust-lang.org/book/ch04-01-what-is-ownership.html#ways-variables-and-data-interact-move\" rel=\"nofollow noreferrer\">moving</a> actually happens here..."}, {"owner": {"reputation": 28156, "user_id": 1026, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/ea331e778d54effc15b5fbc694bc8232?s=128&d=identicon&r=PG", "display_name": "Nickolay", "link": "https://stackoverflow.com/users/1026/nickolay"}, "edited": false, "score": 0, "creation_date": 1552892742, "post_id": 52247097, "comment_id": 97167253, "body": "What I think happens is that an &quot;<a href=\"https://users.rust-lang.org/t/reborrow-vs-move/4796/5\" rel=\"nofollow noreferrer\">implicit reborrow</a>&quot; (<code>&amp;*x.i</code>) is inserted (couldn&#39;t find any documentation), which is the thing that <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2094-nll.md#reborrow-constraints\" rel=\"nofollow noreferrer\">requires the <code>x</code> reference to be live for at least the same time as the result</a>."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 4, "last_activity_date": 1536517132, "last_edit_date": 1592644375, "creation_date": 1536514994, "answer_id": 52247097, "question_id": 52239075, "link": "https://stackoverflow.com/questions/52239075/lifetimes-handling-when-returning-inner-reference-from-a-reference-passed-as-an/52247097#52247097", "title": "Lifetimes&#39; handling when returning inner reference from a reference passed as an argument to the function", "body": "<blockquote>\n<p>What is the reason the following code compiles fine, despite both the lifetimes <code>'a</code> and <code>'b</code> being independent of each other?</p>\n<pre><code>fn func&lt;'a, 'b&gt;(x: &amp;'a Foo&lt;'b&gt;) -&gt; &amp;'b i32 {\n    x.i\n}\n</code></pre>\n</blockquote>\n<p>The reason is that they are <em>not</em> independent of each other.</p>\n<p>The type <code>&amp;'a Foo&lt;'b&gt;</code> would be impossible if <code>'a</code> outlived <code>'b</code>. So, implicitly the Rust borrow-checker is inferring that you <em>must have</em> intended that <code>'b: 'a</code> (<code>'b</code> outlives <code>'a</code>). So the code above is semantically the same as this:</p>\n<pre><code>fn func&lt;'a, 'b: 'a&gt;(x: &amp;'a Foo&lt;'b&gt;) -&gt; &amp;'b i32 {\n    x.i\n}\n</code></pre>\n\n<blockquote>\n<p>If I make the reference <code>i</code> in <code>Foo</code> mutable, it gives the following error.</p>\n<pre class=\"lang-none prettyprint-override\"><code>5 | fn func&lt;'a, 'b&gt;(x: &amp;'a Foo&lt;'b&gt;) -&gt; &amp;'b i32 {\n  |                    -----------     -------\n  |                    |\n  |                    this parameter and the return type are declared with different lifetimes...\n6 |     x.i\n  |     ^^^ ...but data from `x` is returned here\n</code></pre>\n<p>What is the reason it gives the above error?</p>\n</blockquote>\n<p>When you pass around an <em>immutable</em> reference, it gets <em>copied</em>. In the above example, that means that the <code>&amp;'b i32</code> can be moved around by itself, and its liveness is not tied to where you got it from. This copied reference always points back to the original address of the data. And that's why the first example works - even if <code>x</code> was dropped, the original reference would still be valid.</p>\n<p>When you pass around a <em>mutable</em> reference, it gets <em>moved</em>. A consequence of that is this case is that the reference is still &quot;through&quot; the variable <code>x</code>. If this wasn't the case, <code>x</code>'s mutable reference to the contents of <code>Foo</code> could be live at the same time as this new immutable reference - which is not allowed. So, in this case the reference cannot outlive <code>'a</code> - or put another way: <code>'a: 'b</code>.</p>\n<p>But didn't we already say <code>'b: 'a</code>? The only conclusion here is that <code>'a</code> and <code>'b</code> must be the <em>same lifetime</em>, which is what your previous error message was demanding.</p>\n"}, {"tags": [], "owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "is_accepted": false, "score": 0, "last_activity_date": 1536591523, "creation_date": 1536591523, "answer_id": 52260581, "question_id": 52239075, "link": "https://stackoverflow.com/questions/52239075/lifetimes-handling-when-returning-inner-reference-from-a-reference-passed-as-an/52260581#52260581", "title": "Lifetimes&#39; handling when returning inner reference from a reference passed as an argument to the function", "body": "<p>Just to add a suggestion (see the other answers for a detailed explanation of your question):</p>\n\n<p><strong>Whenever</strong> possible do not overdesign with lifetimes.</p>\n\n<p>In this case being explicit about all lifetimes implies 4 cases (and quite a lot of thinking!). </p>\n\n<p>Case 1 (compile)</p>\n\n<pre><code>fn func&lt;'a, 'b: 'a&gt;(x: &amp;'a Foo&lt;'b&gt;) -&gt; &amp;'a i32 {\n    x.i\n}\n</code></pre>\n\n<p>Case 2 (compile)</p>\n\n<pre><code>fn func&lt;'a: 'b, 'b&gt;(x: &amp;'a Foo&lt;'b&gt;) -&gt; &amp;'a i32 {\n    x.i\n}\n</code></pre>\n\n<p>Case 3 (compile)</p>\n\n<pre><code>fn func&lt;'a: 'b, 'b&gt;(x: &amp;'a Foo&lt;'b&gt;) -&gt; &amp;'b i32 {\n    x.i\n}\n</code></pre>\n\n<p>Case 4 (do not compile)</p>\n\n<pre><code>fn func&lt;'a, 'b: 'a&gt;(x: &amp;'a Foo&lt;'b&gt;) -&gt; &amp;'b i32 {\n    x.i\n}\n</code></pre>\n\n<p>If you use anonymous lifetimes and let the compiler build the dependencies between lifetime regions it is as simple as:</p>\n\n<pre><code>fn func&lt;'a&gt;(x: &amp;'a Foo) -&gt; &amp;'a i32 {\n    x.i\n}\n</code></pre>\n"}], "owner": {"reputation": 3480, "user_id": 2686821, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/5dd46afe4f5a75f2667569582b20ac9b?s=128&d=identicon&r=PG&f=1", "display_name": "soupybionics", "link": "https://stackoverflow.com/users/2686821/soupybionics"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 255, "favorite_count": 1, "accepted_answer_id": 52241021, "answer_count": 3, "score": 4, "last_activity_date": 1536591523, "creation_date": 1536437855, "last_edit_date": 1536515514, "question_id": 52239075, "link": "https://stackoverflow.com/questions/52239075/lifetimes-handling-when-returning-inner-reference-from-a-reference-passed-as-an", "title": "Lifetimes&#39; handling when returning inner reference from a reference passed as an argument to the function", "body": "<p>What is the reason the following code compiles fine, despite both the lifetimes <code>'a</code> and <code>'b</code> being independent of each other?</p>\n\n<pre><code>struct Foo&lt;'a&gt; {\n    i: &amp;'a i32\n}\n\nfn func&lt;'a, 'b&gt;(x: &amp;'a Foo&lt;'b&gt;) -&gt; &amp;'b i32 {\n    x.i\n}\n\nfn main() {}\n</code></pre>\n\n<p>If I make the reference <code>i</code> in <code>Foo</code> mutable, it gives the following error.</p>\n\n<pre><code>5 | fn func&lt;'a, 'b&gt;(x: &amp;'a Foo&lt;'b&gt;) -&gt; &amp;'b i32 {\n  |                    -----------     -------\n  |                    |\n  |                    this parameter and the return type are declared with different lifetimes...\n6 |     x.i\n  |     ^^^ ...but data from `x` is returned here\n</code></pre>\n\n<p>What is the reason it gives the above error?. Does it consider it's ownership over  mutable reference and it sees that something (from <code>Foo</code>) is being taken out (with an independent lifetime), which is not possible, hence the error ?</p>\n\n<p>This code (which I thought would pass) fails too:</p>\n\n<pre><code>struct Foo&lt;'a&gt; {\n    i: &amp;'a mut i32\n}\n\nfn func&lt;'a, 'b: 'a&gt;(x: &amp;'a Foo&lt;'b&gt;) -&gt; &amp;'b i32 {\n    x.i\n}\n\nfn main() {}\n</code></pre>\n\n<p>fails with error:</p>\n\n<pre><code> error[E0623]: lifetime mismatch\n --&gt; src/main.rs:6:5\n  |\n5 | fn func&lt;'a, 'b: 'a&gt;(x: &amp;'a Foo&lt;'b&gt;) -&gt; &amp;'b i32 {\n  |                        -----------\n  |                        |\n  |                        these two types are declared with different lifetimes...\n6 |     x.i\n  |     ^^^ ...but data from `x` flows into `x` here\n</code></pre>\n\n<p>But this one passes:</p>\n\n<pre><code>struct Foo&lt;'a&gt; {\n    i: &amp;'a mut i32\n}\n\nfn func&lt;'a: 'b, 'b&gt;(x: &amp;'a Foo&lt;'b&gt;) -&gt; &amp;'b i32 {\n    x.i\n}\n\nfn main() {}\n</code></pre>\n\n<p>This seems a bit counter-intuitive to me. Here, the outer lifetime (<code>'a</code>) may outlive the inner lifetime (<code>'b</code>). Why  is this not an error? </p>\n"}, {"tags": ["rust", "lifetime", "borrowing"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 3, "creation_date": 1536435523, "post_id": 52238680, "comment_id": 91426092, "body": "Without knowing all the types and with only the partial error message you have given, it can be hard to say what goes wrong. To help us help you, you might want to include the list of crates and <code>use</code> statement that you use, and ideally add a link to <a href=\"https://play.rust-lang.org/\" rel=\"nofollow noreferrer\">the playground</a>. See also <a href=\"https://stackoverflow.com/tags/rust/info\">Producing a Minimal, Complete, Verifiable example for Rust code</a>."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1536484203, "post_id": 52238680, "comment_id": 91434252, "body": "As mcarton says, it&#39;s impossible to answer this without knowing all of the types. What are <code>DesktopEntry</code> and <code>Ini</code>? Are they your own types or from a 3rd party crate? Presumably <code>DesktopEntry</code> contains references to something, but we don&#39;t know how to tell you how to move or copy the underlying data without knowing what those types actually are."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1536487086, "post_id": 52238680, "comment_id": 91434988, "body": "As a quick observation, it looks as though <code>DesktopEntry</code> borrows a string slice from <code>Ini</code>. If that&#39;s the case, the type of <code>convert_ini_to_desktop_entry</code> needs to reflect that in its lifetimes annotations."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1536487252, "post_id": 52238680, "comment_id": 91435030, "body": "As a second observation, the type of <code>get_all</code> is actually impossible (unless the lifetime <code>&#39;a</code> is <code>&#39;static</code>). You can&#39;t create a reference out of nothing - it has to be a reference to something <i>outside</i> the function (either static or an argument to the function), otherwise it can&#39;t live long enough for the function to return it."}, {"owner": {"reputation": 79, "user_id": 10335637, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/pnstP.jpg?s=128&g=1", "display_name": "J. Doe", "link": "https://stackoverflow.com/users/10335637/j-doe"}, "edited": false, "score": 0, "creation_date": 1536489606, "post_id": 52238680, "comment_id": 91435654, "body": "Thanks a lot! Yes, DesktopEntry borrows a string slice from Ini."}], "owner": {"reputation": 79, "user_id": 10335637, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/pnstP.jpg?s=128&g=1", "display_name": "J. Doe", "link": "https://stackoverflow.com/users/10335637/j-doe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 54, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1536435215, "creation_date": 1536434722, "last_edit_date": 1536435215, "question_id": 52238680, "link": "https://stackoverflow.com/questions/52238680/how-to-use-owned-data-in-my-code-borrowed-value-does-not-live-enough", "title": "How to use owned data in my code. Borrowed value does not live enough", "body": "<p>I'm stuck with the following code :</p>\n\n<pre><code>pub fn get_all&lt;'a&gt;() -&gt; Vec&lt;DesktopEntry&lt;'a&gt;&gt; {\n    let all_desktop_files = filesystem::get_all_desktop_files();\n\n    all_desktop_files\n        .into_iter()\n        .filter_map(|desktop_file| {\n            let ini_option = load_ini(desktop_file);\n\n            match ini_option {\n                Some(ini) =&gt; convert_ini_to_desktop_entry(&amp;ini), // &lt;--\n                None =&gt; None,\n            }\n        }).collect::&lt;Vec&lt;DesktopEntry&gt;&gt;()\n}\n\nfn convert_ini_to_desktop_entry&lt;'a&gt;(ini: &amp;'a Ini) -&gt; Option&lt;DesktopEntry&gt; {\n    let section = match ini.section(Some(\"Desktop Entry\")) {\n        Some(s) =&gt; Some(s),\n        None =&gt; None,\n    };\n\n    let name = match section {\n        Some(s) =&gt; match s.get(\"Name\") {\n            Some(p) =&gt; Some(p),\n            None =&gt; None,\n        },\n        None =&gt; None,\n    };\n\n    Some(DesktopEntry {\n        name: name.unwrap(),\n    })\n}\n</code></pre>\n\n<p>And the error on a <code>&amp;ini</code> lifetime: </p>\n\n<pre><code>borrowed value does not live long enough\n...note: borrowed value must be valid for the lifetime 'a as defined on the function body at 10:5...\n</code></pre>\n\n<p>I understand, that the <code>&amp;ini</code> is not live so long as needed. But I really do not understand, how to fix it. In the book there is a recommendation how to fix:</p>\n\n<pre><code>the best fix would be to return an owned data type rather than a reference\n</code></pre>\n\n<p>But <code>convert_ini_to_desktop_entry</code> function needed a lifetime for its result and parameter. And i don't understand, why <code>ini</code> in this function can't be owned value.</p>\n"}, {"tags": ["ssl", "openssl", "rust", "reqwest"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1536433269, "post_id": 52238397, "comment_id": 91425515, "body": "<code>cargo</code> takes care of <i>Rust</i> dependencies. OpenSSL is a C library."}], "answers": [{"comments": [{"owner": {"reputation": 939, "user_id": 2870802, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-lHzULJklIJg/AAAAAAAAAAI/AAAAAAAABwk/_pJZF95FiAY/photo.jpg?sz=128", "display_name": "ozkriff", "link": "https://stackoverflow.com/users/2870802/ozkriff"}, "edited": false, "score": 0, "creation_date": 1536446937, "post_id": 52238675, "comment_id": 91428673, "body": "Note that <code>openssl</code> (and <code>openssl-sys</code>) crate has a <a href=\"https://github.com/sfackler/rust-openssl#vendored\" rel=\"nofollow noreferrer\"><code>vendor</code></a> feature."}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": false, "score": 3, "last_activity_date": 1536434715, "creation_date": 1536434715, "answer_id": 52238675, "question_id": 52238397, "link": "https://stackoverflow.com/questions/52238397/why-does-reqwest-require-an-openssl-installation/52238675#52238675", "title": "Why does reqwest require an OpenSSL installation?", "body": "<p><code>reqwest</code> <a href=\"https://github.com/seanmonstar/reqwest/blob/a205128f038431e37bfff25ade4ff04d20e7dd32/Cargo.toml#L27\" rel=\"nofollow noreferrer\">depends on <code>rust-native-tls</code></a>, which <a href=\"https://github.com/sfackler/rust-native-tls/blob/master/Cargo.toml#L25\" rel=\"nofollow noreferrer\">on Linux depends on <code>openssl-sys</code></a>, which is <a href=\"https://github.com/sfackler/rust-openssl/blob/ea18d84de3ff5a6bc374fb954f05a8629648a37e/openssl-sys/build/main.rs#L181-L191\" rel=\"nofollow noreferrer\">where this message comes from</a>.\nSo <code>cargo</code> did do its job, taking care of Rust dependencies.</p>\n\n<p>However, <code>openssl-sys</code> depends on a C library (OpenSSL), at which point <code>cargo</code> stops caring.</p>\n"}], "owner": {"reputation": 1047, "user_id": 5271460, "user_type": "registered", "accept_rate": 43, "profile_image": "https://i.stack.imgur.com/sDo4j.jpg?s=128&g=1", "display_name": "Sebastian Oberhoff", "link": "https://stackoverflow.com/users/5271460/sebastian-oberhoff"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 967, "favorite_count": 4, "answer_count": 1, "score": 4, "last_activity_date": 1536490331, "creation_date": 1536432710, "last_edit_date": 1536490331, "question_id": 52238397, "link": "https://stackoverflow.com/questions/52238397/why-does-reqwest-require-an-openssl-installation", "title": "Why does reqwest require an OpenSSL installation?", "body": "<p>I was trying to get an elementary <code>reqwest</code> http-request going like so</p>\n\n<pre><code>extern crate reqwest;\nextern crate url;\n\nuse url::Url;\n\nfn main() {\n    let resp = reqwest::get(\"http://google.com\".parse::&lt;Url&gt;().unwrap());\n    println!(\"{:?}\", resp.unwrap())\n}\n</code></pre>\n\n<p>However, this produces the error </p>\n\n<blockquote>\n  <p>Could not find directory of OpenSSL installation, and this <code>-sys</code> crate cannot\n  proceed without this knowledge. If OpenSSL is installed and this crate had\n  trouble finding it,  you can set the <code>OPENSSL_DIR</code> environment variable for the\n  compilation process.</p>\n  \n  <p>Make sure you also have the development packages of openssl installed.\n  For example, <code>libssl-dev</code> on Ubuntu or <code>openssl-devel</code> on Fedora.</p>\n  \n  <p>...</p>\n</blockquote>\n\n<p>Well, this was easy enough to fix. One call to <code>sudo apt install libssl-dev</code> and <code>sudo apt install pkg-config</code> and it's working. But I still don't understand what exactly went wrong here. I thought <code>cargo</code> was supposed to take care of dependencies. Why am I now hunting them manually with <code>apt</code>?</p>\n"}, {"tags": ["rust", "newtype"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1536434285, "post_id": 52238154, "comment_id": 91425758, "body": "<a href=\"https://play.rust-lang.org/?gist=69993f69b0214dbe71031af5a2ba018f&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">I don&#39;t think but I just try to read mir for the first time</a>"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1536435011, "post_id": 52238154, "comment_id": 91425939, "body": "@Stargateur I was looking at the assembly, rather than MIR, and it surprisingly looked like it did. I know that <code>clang</code> has learned to optimize away some operations on C++&#39;s <code>std::vector</code> related to memory allocation, this would be implemented in LLVM, and Rust could benefit from it as well. But the code was quite inlined, so I might just have missed something. In any case, I would certainly not rely on it being an no-op."}], "answers": [{"tags": [], "owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "is_accepted": false, "score": 2, "last_activity_date": 1536436416, "creation_date": 1536436416, "answer_id": 52238904, "question_id": 52238154, "link": "https://stackoverflow.com/questions/52238154/rust-free-unwrap-for-vec-of-newtypes/52238904#52238904", "title": "Rust free unwrap for vec of newtypes", "body": "<p>No, I doubt your function would result in an identity function(I looked at the generated assembly and there was definitely an allocation). This would though:</p>\n\n<pre><code>fn unwrap_bars(mut bars : Vec&lt;Bar&gt;) -&gt; Vec&lt;Foo&gt; {\n    unsafe {\n        let ptr = bars.as_mut_ptr() as *mut Foo;\n        let len = bars.len();\n        let cap = bars.capacity();\n        std::mem::forget(bars);     // to prevent destructor being called\n        Vec::from_raw_parts(ptr, len, cap)\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 2197, "user_id": 1568890, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e1743a48fc43aeab957da6d5d53e36c5?s=128&d=identicon&r=PG", "display_name": "Calebmer", "link": "https://stackoverflow.com/users/1568890/calebmer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 280, "favorite_count": 1, "answer_count": 1, "score": 4, "last_activity_date": 1536436416, "creation_date": 1536430768, "question_id": 52238154, "link": "https://stackoverflow.com/questions/52238154/rust-free-unwrap-for-vec-of-newtypes", "title": "Rust free unwrap for vec of newtypes", "body": "<p>If I have the following program:</p>\n\n<pre><code>struct Foo {\n    a: usize,\n    b: usize,\n}\n\nstruct Bar(Foo);\n\nfn unwrap_bars(bars: Vec&lt;Bar&gt;) -&gt; Vec&lt;Foo&gt; {\n  bars.into_iter().map(|b| b.0).collect()\n}\n</code></pre>\n\n<p>Will <code>unwrap_bars</code> be compiled to an identity function? If it is not compiled to an identity function then how could I write <code>unwrap_bars</code> so that I keep the newtype abstraction while allowing free unwrapping of a collection of <code>Bar</code>s?</p>\n\n<p>I assume that a newtype wrapper like <code>Bar</code> compiles directly to <code>Foo</code> without adding any extra memory indirection.</p>\n"}, {"tags": ["pointers", "optimization", "rust", "ocaml", "union-types"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1536392046, "post_id": 52232836, "comment_id": 91415205, "body": "&quot;If you shift the bits in your integer one space to the left and set the lowest bit of your integer to 1 then you\u2019re using that bit as a tag at the cost of one bit of integer precision.&quot;, yes but that not the purpose of usize, plus, do this with a address would be totally implementation defined. This is AFAIK not recommended with Rust because totally unsafe to do."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1536392059, "post_id": 52232836, "comment_id": 91415210, "body": "Plus this come with a runtime cost: &quot;An even more alert reader will be wondering about the performance implications are for integer arithmetic using this tagged representation. Since the bottom bit is set, any operation on the integer has to shift the bottom bit right to recover the &quot;native&quot; value. The native code OCaml compiler generates efficient x86 assembly code in this case, taking advantage of modern processor instructions to hide the extra shifts where possible. Addition is a single LEA x86 instruction, subtraction can be two instructions, and multiplication is only a few more.&quot;"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1536392162, "post_id": 52232836, "comment_id": 91415231, "body": "But I think it&#39;s possible if you use raw pointer and raw enum (aka C enum) but as I said this will not be very portable, and I think that unless you work on an embedded system, &quot;safe&quot; a little of memory space like this is not worth it."}, {"owner": {"reputation": 2197, "user_id": 1568890, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e1743a48fc43aeab957da6d5d53e36c5?s=128&d=identicon&r=PG", "display_name": "Calebmer", "link": "https://stackoverflow.com/users/1568890/calebmer"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1536416557, "post_id": 52232836, "comment_id": 91420912, "body": "I understand the safety/runtime implications. I wanted to know how it could be done to see if this optimization works well for my program. But you\u2019re probably right in that I\u2019m trying to optimize. Thanks for providing some reason."}], "answers": [{"comments": [{"owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "edited": false, "score": 0, "creation_date": 1536407222, "post_id": 52233835, "comment_id": 91418575, "body": "Alignment can be checked with <code>std::mem::align_of()</code>, so that could be used as an assertion."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "edited": false, "score": 0, "creation_date": 1536407290, "post_id": 52233835, "comment_id": 91418596, "body": "@Kornel Yep. But I&#39;m not sure how to restrict the alignment on the struct itself, without picking a fixed value."}, {"owner": {"reputation": 2197, "user_id": 1568890, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e1743a48fc43aeab957da6d5d53e36c5?s=128&d=identicon&r=PG", "display_name": "Calebmer", "link": "https://stackoverflow.com/users/1568890/calebmer"}, "edited": false, "score": 0, "creation_date": 1536416804, "post_id": 52233835, "comment_id": 91420971, "body": "I tried an approach like this but ran into two questions: 1) am I breaking any guarantees of the borrow checker? Will ConstructedType be dropped leaving me with a dangling pointer? 2) can I implement Copy on my union? Since I\u2019m migrating code from the previous implementation which heavily relies on Copy."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 2197, "user_id": 1568890, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e1743a48fc43aeab957da6d5d53e36c5?s=128&d=identicon&r=PG", "display_name": "Calebmer", "link": "https://stackoverflow.com/users/1568890/calebmer"}, "edited": false, "score": 1, "creation_date": 1536424416, "post_id": 52233835, "comment_id": 91423014, "body": "@Calebmer As far as I can tell, there is no need to do anything about dropping the values since you do not own any data except a <code>usize</code>. (It is not yet stabilised for unions to implement <code>Drop</code> anyway)."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1536425216, "post_id": 52233835, "comment_id": 91423249, "body": "I can&#39;t see a problem with implementing <code>Copy</code>. What is your concern?"}, {"owner": {"reputation": 2197, "user_id": 1568890, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e1743a48fc43aeab957da6d5d53e36c5?s=128&d=identicon&r=PG", "display_name": "Calebmer", "link": "https://stackoverflow.com/users/1568890/calebmer"}, "edited": false, "score": 0, "creation_date": 1536465831, "post_id": 52233835, "comment_id": 91431038, "body": "At least when I tried <code>#[derive(Copy)]</code> I could not then copy the union value. Is this a known limitation?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 2197, "user_id": 1568890, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e1743a48fc43aeab957da6d5d53e36c5?s=128&d=identicon&r=PG", "display_name": "Calebmer", "link": "https://stackoverflow.com/users/1568890/calebmer"}, "edited": false, "score": 0, "creation_date": 1536483407, "post_id": 52233835, "comment_id": 91434077, "body": "@Calebmer I don&#39;t know of a limitation like that. See this <a href=\"https://play.rust-lang.org/?gist=f65cdb3c20121a6b48c6290989e2001b&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">more complete code</a>. It has a value being copied near the end (commented)."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555024247, "post_id": 52233835, "comment_id": 97974935, "body": "<code>TryFrom</code> is stable \u2014 care to show how it might be used? (Feel free to flag this comment once you&#39;ve addressed it)."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 4, "last_activity_date": 1536485950, "last_edit_date": 1536485950, "creation_date": 1536398491, "answer_id": 52233835, "question_id": 52232836, "link": "https://stackoverflow.com/questions/52232836/how-to-create-a-rust-type-that-can-hold-either-an-integer-or-a-pointer-within-th/52233835#52233835", "title": "How to create a Rust type that can hold either an integer or a pointer within the size of a single word?", "body": "<p>I may not be following <em>everything</em> you are saying, but I think you need a <code>union</code>.</p>\n\n<pre><code>#[derive(Clone, Copy, Debug, PartialEq)]\nenum Type&lt;'ts&gt; {\n    TVar(usize),\n    Constructed(&amp;'ts ConstructedType&lt;'ts&gt;),\n}\n\nunion CompactType&lt;'ts&gt; {\n    num: usize,\n    ptr: &amp;'ts ConstructedType&lt;'ts&gt;\n}\n\nimpl&lt;'ts&gt; From&lt;CompactType&lt;'ts&gt;&gt; for Type&lt;'ts&gt; {\n    fn from(compact: CompactType&lt;'ts&gt;) -&gt; Type&lt;'ts&gt; {\n        unsafe {\n            if compact.num &amp; 1 == 1 {\n                Type::TVar(compact.num &gt;&gt; 1)\n            } else {\n                Type::Constructed(compact.ptr)\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>Note that accessing members of a <code>union</code> is unsafe, and you have to make sure that all invariants are enforced. For example, you have to explicitly check that the <code>CompactType</code>s are correctly created with the values within range, and prevent the possibility of the objects being constructed without being subject to those checks.</p>\n\n<p>I would suggest adding constructor functions to <code>CompactType</code>, which return a <code>Result</code> or an <code>Option</code>, in case you try to use a number that is too large or a pointer to a type that is not properly aligned. When the <a href=\"https://doc.rust-lang.org/std/convert/trait.TryFrom.html\" rel=\"nofollow noreferrer\"><code>TryFrom</code> feature</a> stabilizes, you could use that, but in the meantime:</p>\n\n<pre><code>enum CompactConvertError {\n    NumTooBig(String),\n    PtrNotAligned(String),\n}\n\nimpl&lt;'ts&gt; Type&lt;'ts&gt; {\n    fn to_compact(&amp;self) -&gt; Result&lt;CompactType&lt;'ts&gt;, CompactConvertError&gt; {\n        match self {\n            Type::TVar(num) =&gt; {\n                if num &gt;&gt; (mem::size_of::&lt;usize&gt;() * 8 - 1) == 1 {\n                    Err(CompactConvertError::NumTooBig(\n                        String::from(\"The last bit of the usize cannot be used here\"))\n                    )\n                } else {\n                    Ok(CompactType { num: num &lt;&lt; 1 | 1usize })\n                }   \n            },\n            Type::Constructed(c) =&gt; {\n                if mem::align_of_val(*c) % 2 == 1 {\n                    Err(CompactConvertError::PtrNotAligned(\n                        String::from(\"The pointer must be to a type with even alignment\"))\n                    )\n                } else {\n                    Ok(CompactType { ptr: c })\n                }\n            }\n        }\n    } \n}\n</code></pre>\n\n<p>This should be flexible enough to replace <code>ConstructedType</code> with a generic type parameter. The only restriction is that you shouldn't change it from a reference to an owned value, or else you'll have to worry about dropping it correctly \u2014 which cannot yet be done for a <code>union</code> type in stable Rust.</p>\n\n<p>As for alignment, if <code>ConstructedType</code> is only 1 byte in size, you will need to add an alignment to it, to make sure it is only on an even byte, otherwise Rust may choose to pack them more tightly:</p>\n\n<pre><code>#[align(2)]\nstruct ConstructedType&lt;'ts&gt; { \n    // ...\n}\n</code></pre>\n\n<p>Definitely don't add <code>#[align(2)]</code> if the size is larger than 2 bytes. Perhaps someone else can offer advice on making that part more robust.</p>\n"}], "owner": {"reputation": 2197, "user_id": 1568890, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e1743a48fc43aeab957da6d5d53e36c5?s=128&d=identicon&r=PG", "display_name": "Calebmer", "link": "https://stackoverflow.com/users/1568890/calebmer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 436, "favorite_count": 1, "accepted_answer_id": 52233835, "answer_count": 1, "score": 1, "last_activity_date": 1545502797, "creation_date": 1536389957, "last_edit_date": 1545502797, "question_id": 52232836, "link": "https://stackoverflow.com/questions/52232836/how-to-create-a-rust-type-that-can-hold-either-an-integer-or-a-pointer-within-th", "title": "How to create a Rust type that can hold either an integer or a pointer within the size of a single word?", "body": "<p>(I\u2019m referring to boxing as a way to distinguish integers and pointers at runtime. A technique used some programming languages to aid GC like <a href=\"https://v1.realworldocaml.org/v1/en/html/memory-representation-of-values.html#distinguishing-integer-and-pointers-at-runtime\" rel=\"nofollow noreferrer\">OCaml</a>. Not the Rust <code>Box&lt;T&gt;</code> type.)</p>\n\n<p>I have a Rust enum that looks like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Clone, Copy, Debug, PartialEq)]\nenum Type&lt;'ts&gt; {\n    TVar(usize),\n    Constructed(&amp;'ts ConstructedType&lt;'ts&gt;),\n}\n</code></pre>\n\n<p>As I understand it the memory layout for this enum will be two words. One for the tag and one for the payload. I would like to fit the memory in a single word if possible.</p>\n\n<p>Languages like <a href=\"https://v1.realworldocaml.org/v1/en/html/memory-representation-of-values.html#distinguishing-integer-and-pointers-at-runtime\" rel=\"nofollow noreferrer\">OCaml</a> use a technique called \u201cinteger boxing\u201d which takes advantage of the fact that pointers are aligned. This means that the lowest bit will be 0. If you shift the bits in your integer one space to the left and set the lowest bit of your integer to 1 then you\u2019re using that bit as a tag at the cost of one bit of integer precision.</p>\n\n<p>Are Rust pointers guaranteed to be aligned? How would I implement this technique for my type in Rust?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 5321, "user_id": 157726, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/PY0sR.png?s=128&g=1", "display_name": "Juan Leni", "link": "https://stackoverflow.com/users/157726/juan-leni"}, "edited": false, "score": 0, "creation_date": 1536357662, "post_id": 52229986, "comment_id": 91409821, "body": "sorry about the last sentence. What I meant is: &quot;I can use the types but not any method or nix calls&quot;. Anyway, I tested and it is not possible"}, {"owner": {"reputation": 5321, "user_id": 157726, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/PY0sR.png?s=128&g=1", "display_name": "Juan Leni", "link": "https://stackoverflow.com/users/157726/juan-leni"}, "edited": false, "score": 0, "creation_date": 1536357701, "post_id": 52229986, "comment_id": 91409833, "body": "With respect to conditional compilation, it does not work inside the struct.. maybe it is because of the quickerror macro?"}, {"owner": {"reputation": 5321, "user_id": 157726, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/PY0sR.png?s=128&g=1", "display_name": "Juan Leni", "link": "https://stackoverflow.com/users/157726/juan-leni"}, "edited": false, "score": 0, "creation_date": 1536402721, "post_id": 52229986, "comment_id": 91417511, "body": "I have updated the question and added a playground link. There is some tiny difference that makes things fail. It seems to be connected to the <code>from()</code> statement"}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": false, "score": 0, "last_activity_date": 1536406862, "last_edit_date": 1536406862, "creation_date": 1536356833, "answer_id": 52229986, "question_id": 52229131, "link": "https://stackoverflow.com/questions/52229131/conditional-compilation-inside-an-enum/52229986#52229986", "title": "conditional compilation inside an enum", "body": "<blockquote>\n  <p>How can I make Ioctl conditional to linux?</p>\n</blockquote>\n\n<p>Normally, you could just put <code>#[cfg(target_os = \"linux\")]</code> in front:</p>\n\n<pre><code>#[cfg(target_os = \"linux\")]\nIoctl(err: nix::Error) {\n    from()\n    description(\"ioctl error\")\n    display(\"ioctl error: {}\", err)\n    cause(err)\n}\n</code></pre>\n\n<p>But it's look like <code>quick_error</code> doesn't support it, so you could open a request feature on <a href=\"https://github.com/tailhook/quick-error/issues\" rel=\"nofollow noreferrer\">github</a> but the crate is not very active (no offence) or you could just don't use this crate and do your Error type \"manually\".</p>\n\n<blockquote>\n  <p>I wonder what is the recommended approach in Rust.</p>\n</blockquote>\n\n<p>It's opinion based, do as you like.</p>\n\n<blockquote>\n  <p>An alternative is: can I use the nix crate types even in Windows as long as I dont use any function/method? In that case, I would not need to make this conditional.</p>\n</blockquote>\n\n<p>No, you can't use a crate that doesn't compile.</p>\n"}, {"comments": [{"owner": {"reputation": 5321, "user_id": 157726, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/PY0sR.png?s=128&g=1", "display_name": "Juan Leni", "link": "https://stackoverflow.com/users/157726/juan-leni"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1536408977, "post_id": 52230442, "comment_id": 91419012, "body": "Yes, I completely agree! I dont like it much.. I still dont get why adding from() makes the cfg not to work. I would definitely prefer to do something similar to what you proposed"}], "tags": [], "owner": {"reputation": 5321, "user_id": 157726, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/PY0sR.png?s=128&g=1", "display_name": "Juan Leni", "link": "https://stackoverflow.com/users/157726/juan-leni"}, "is_accepted": true, "score": 0, "last_activity_date": 1536360448, "creation_date": 1536360448, "answer_id": 52230442, "question_id": 52229131, "link": "https://stackoverflow.com/questions/52229131/conditional-compilation-inside-an-enum/52230442#52230442", "title": "conditional compilation inside an enum", "body": "<p>So using conditional compilation inside quickerror was not possible. After some experimentation I came up with the idea of just mocking the type in platforms where is does not exist:</p>\n\n<pre><code>#[macro_use]\nextern crate quick_error;\n#[macro_use]\nextern crate cfg_if;\n\ncfg_if! {\n    if #[cfg(target_os = \"linux\")] {\n        extern crate nix;\n    } else {\n        // Mock the type in other target_os\n        mod nix {\n            quick_error! {\n                #[derive(Debug)]\n                pub enum Error {}\n            }\n        }\n    }\n}\n\nquick_error! {\n    #[derive(Debug)]\n    pub enum Error {\n        DeviceNotFound{\n            description(\"Could not find a ledger device\")\n        }\n        Ioctl ( err: nix::Error ) {\n            from()\n            description(\"ioctl error\")\n            display(\"ioctl error: {}\", err)\n            cause(err)\n        }\n    }\n }\n</code></pre>\n"}], "owner": {"reputation": 5321, "user_id": 157726, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/PY0sR.png?s=128&g=1", "display_name": "Juan Leni", "link": "https://stackoverflow.com/users/157726/juan-leni"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 159, "favorite_count": 2, "accepted_answer_id": 52230442, "answer_count": 2, "score": 0, "last_activity_date": 1536406862, "creation_date": 1536351382, "last_edit_date": 1536402676, "question_id": 52229131, "link": "https://stackoverflow.com/questions/52229131/conditional-compilation-inside-an-enum", "title": "conditional compilation inside an enum", "body": "<p>I have something like this:</p>\n\n<pre><code>#[macro_use]\nextern crate quick_error;\n\n#[cfg(target_os = \"linux\")]\n#[macro_use]\nextern crate nix;\n\nquick_error! {\n    #[derive(Debug)]\n    pub enum Error {\n        DeviceNotFound{\n            description(\"Could not find a ledger device\")\n        }\n        Ioctl ( err: nix::Error ) {\n            from()\n            description(\"ioctl error\")\n            display(\"ioctl error: {}\", err)\n            cause(err)\n        }\n    }\n }\n</code></pre>\n\n<p>The issue I have is that <code>nix</code> is only available in linux. </p>\n\n<p>How can I make <code>Ioctl</code> conditional to linux? Or that is a bad idea?</p>\n\n<p>I wonder what is the recommended approach in Rust. </p>\n\n<p>An alternative is: can I use the nix crate types even in Windows as long as I dont use any function/method? In that case, I would not need to make this conditional.</p>\n\n<hr>\n\n<p><strong>Update:</strong>\nIt seems that the <code>from()</code> line is connected to the problem. </p>\n\n<p>@Stargateur definitely works for most cases, but not for my specific question. I am adding a here <a href=\"https://play.rust-lang.org/?gist=7b38b0be26d2a6e0ff0777d7bc24b6f4&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Example code</a>. </p>\n\n<pre><code>#[macro_use]\nextern crate quick_error;\n\nquick_error! {\n    #[derive(Debug)]\n    pub enum Error {\n        DeviceNotFound{\n            description(\"Could not find a ledger device\")\n        }\n        #[cfg(target_os = \"windows\")]\n        Ioctl ( err: nix::Error ) {\n            from()\n            description(\"ioctl error\")\n            display(\"ioctl error: {}\", err)\n            cause(err)\n        }\n    }\n }\n\n fn main() {\n    let _ = Error::DeviceNotFound;\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1536333716, "post_id": 52225498, "comment_id": 91400309, "body": "<code>version</code> isn&#39;t the function you&#39;re trying to use <code>?</code> in."}, {"owner": {"reputation": 133611, "user_id": 152602, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f370b4bd787fc68f9f62d9c6781cb79?s=128&d=identicon&r=PG", "display_name": "Lee", "link": "https://stackoverflow.com/users/152602/lee"}, "edited": false, "score": 3, "creation_date": 1536333726, "post_id": 52225498, "comment_id": 91400318, "body": "<code>main</code> returns <code>()</code> which is where the error is."}, {"owner": {"reputation": 5321, "user_id": 157726, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/PY0sR.png?s=128&g=1", "display_name": "Juan Leni", "link": "https://stackoverflow.com/users/157726/juan-leni"}, "edited": false, "score": 0, "creation_date": 1536333773, "post_id": 52225498, "comment_id": 91400340, "body": "OMG!! :) silly me. Thanks!"}], "answers": [{"comments": [{"owner": {"reputation": 5321, "user_id": 157726, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/PY0sR.png?s=128&g=1", "display_name": "Juan Leni", "link": "https://stackoverflow.com/users/157726/juan-leni"}, "edited": false, "score": 0, "creation_date": 1536334156, "post_id": 52225585, "comment_id": 91400548, "body": "Thanks! yes, I have just realized I was misreading the error message :) haha!"}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 16, "last_activity_date": 1536333895, "creation_date": 1536333895, "answer_id": 52225585, "question_id": 52225498, "link": "https://stackoverflow.com/questions/52225498/strange-error-cannot-use-the-operator-in-a-function-that-returns/52225585#52225585", "title": "Strange error: cannot use the `?` operator in a function that returns `()`", "body": "<p>You misunderstand the function that the operator is talking about:</p>\n\n<blockquote>\n  <p>cannot use the <code>?</code> operator in a function that returns <code>()</code></p>\n</blockquote>\n\n<p>Is about <em>the function in which the expression appears</em> and not <em>the expression on which <code>?</code> is applied</em>:</p>\n\n<ul>\n<li>the function in which the expression appears is <code>main</code>.</li>\n<li>the expression to which <code>?</code> is applied is <code>Bar::version()?</code>.</li>\n</ul>\n\n<p>Therefore, the compiler is complaining that you cannot use <code>?</code> in <code>main</code> because the return type of <code>main</code> is <code>()</code>.</p>\n\n<hr>\n\n<p>If you switch to the nightly channel, you can use <code>-&gt; Result&lt;(), Error&gt;</code> as a return type for <code>main</code>:</p>\n\n<pre><code>fn main() -&gt; Result&lt;(), Error&gt; {\n    let tmp = Bar::version()?;\n    Ok(())\n}\n</code></pre>\n\n<p>On stable, however, this is not yet available (as of 1.28), and so you cannot use <code>?</code> in <code>main</code>.</p>\n"}], "owner": {"reputation": 5321, "user_id": 157726, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/PY0sR.png?s=128&g=1", "display_name": "Juan Leni", "link": "https://stackoverflow.com/users/157726/juan-leni"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3083, "favorite_count": 0, "closed_date": 1536334585, "accepted_answer_id": 52225585, "answer_count": 1, "score": 3, "last_activity_date": 1536333895, "creation_date": 1536333577, "question_id": 52225498, "link": "https://stackoverflow.com/questions/52225498/strange-error-cannot-use-the-operator-in-a-function-that-returns", "closed_reason": "Duplicate", "title": "Strange error: cannot use the `?` operator in a function that returns `()`", "body": "<p>I have tried to reproduce the problem in a very tiny program (you can find it here <a href=\"https://play.rust-lang.org/?gist=d0ee2e0f10ff6cd3023635ecf5f6f75d&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Rust REPL</a>)</p>\n\n<pre><code>#[macro_use]\nextern crate quick_error;\n\nquick_error! {\n    #[derive(Debug)]\n    pub enum Error {\n        SomeError{\n            description(\"SomeError\")\n        }\n    }\n}\n\n\npub struct Version {\n    foo: u8,\n}\n\npub struct Bar();\n\nimpl Bar {\n    pub fn version() -&gt; Result&lt;Version, Error&gt; {\n        Ok(Version{foo: 1})\n    }\n}\n\nfn main() {\n    let tmp = Bar::version()?;\n}\n</code></pre>\n\n<p>when trying to compile, I get the following:</p>\n\n<pre><code>error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)\n  --&gt; src/main.rs:27:15\n   |\n27 |     let tmp = Bar::version()?;\n   |               ^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `()`\n</code></pre>\n\n<p>HOWEVER, version is returning <code>Result&lt;Version, Error&gt;</code>. What is going on?</p>\n"}, {"tags": ["syntax", "rust", "traits", "type-bounds"], "comments": [{"owner": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 0, "creation_date": 1536332199, "post_id": 52225073, "comment_id": 91399334, "body": "You mean that <code>W</code> implements both <code>Clone</code> and <code>BorrowMut</code>. so <code>&lt;W: Clone + BorrowMut&lt;Write&gt;&gt;</code>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1536332760, "post_id": 52225073, "comment_id": 91399691, "body": "<code>RefCell::borrow_mut</code> is not related to the <code>BorrowMut</code> trait."}], "answers": [{"comments": [{"owner": {"reputation": 2307, "user_id": 744276, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/d93af7ba58088a39d04c7da13fc176ee?s=128&d=identicon&r=PG", "display_name": "Motiejus Jak\u0161tys", "link": "https://stackoverflow.com/users/744276/motiejus-jak%c5%a1tys"}, "edited": false, "score": 0, "creation_date": 1536351807, "post_id": 52226521, "comment_id": 91407973, "body": "Thanks, that works! I also think one can remove the <code>+ Clone</code> from the W definition."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 3, "last_activity_date": 1536361532, "last_edit_date": 1536361532, "creation_date": 1536338096, "answer_id": 52226521, "question_id": 52225073, "link": "https://stackoverflow.com/questions/52225073/wrapping-refcell-and-rc-in-a-struct-type/52226521#52226521", "title": "Wrapping RefCell and Rc in a struct type", "body": "<p>This isn't how you apply multiple constraints to a type parameter. Instead you use the <code>+</code> operator, like this: <code>&lt;W: Clone + Write + BorrowMut&gt;</code></p>\n\n<p>But, if you want <code>BorrowMut</code> to be an abstraction for <code>RefCell</code>, it won't work. The <code>borrow_mut</code> method of <code>RefCell</code> is not part of any trait so you will need to depend on <code>RefCell</code> directly in your data structure:</p>\n\n<pre><code>struct App&lt;W: Clone + Write&gt; {\n    stdout: Rc&lt;RefCell&lt;W&gt;&gt;,\n}\n</code></pre>\n\n<p>Having said that, it's considered best practice not to put unneeded constraints on a struct. You can actually leave them off here, and just mention them on the <code>impl</code> later.</p>\n\n<pre><code>struct App&lt;W&gt; {\n    stdout: Rc&lt;RefCell&lt;W&gt;&gt;,\n}\n</code></pre>\n\n<p>In order to access the contents of a <code>Rc</code>, you need to dereference with <code>*</code>. This can be a bit tricky in your case because there is a blanket  <code>impl</code> of <code>BorrowMut</code>, which means that <code>Rc</code> has a <em>different</em> <code>borrow_mut</code>, which you definitely don't want.</p>\n\n<pre><code>impl&lt;W: Clone + Write&gt; App&lt;W&gt; {\n    fn hello(&amp;mut self) -&gt; Result&lt;()&gt; {\n        (*self.stdout).borrow_mut().write(b\"world\\n\")?;\n        Ok(())\n    }\n}\n</code></pre>\n\n<p>Again, when you use this, you'll need to dereference the <code>Rc</code>:</p>\n\n<pre><code>let cursor = Rc::new(RefCell::new(Cursor::new(vec![0])));\nlet mut app = App { stdout: cursor.clone() };\napp.hello().expect(\"failed to write\");\n\nlet mut line = String::new();\n\nlet mut cursor = (&amp;*cursor).borrow_mut();\n// move to the beginning or else there's nothing to read\ncursor.set_position(0);\ncursor.read_line(&amp;mut line).unwrap();\n\nprintln!(\"result = {:?}\", line);\n</code></pre>\n\n<p>Also, notice that the <code>Rc</code> was cloned into the cursor. Otherwise it would be moved and you couldn't use it again later.</p>\n"}], "owner": {"reputation": 2307, "user_id": 744276, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/d93af7ba58088a39d04c7da13fc176ee?s=128&d=identicon&r=PG", "display_name": "Motiejus Jak\u0161tys", "link": "https://stackoverflow.com/users/744276/motiejus-jak%c5%a1tys"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 504, "favorite_count": 0, "accepted_answer_id": 52226521, "answer_count": 1, "score": 1, "last_activity_date": 1551269362, "creation_date": 1536332038, "last_edit_date": 1551269362, "question_id": 52225073, "link": "https://stackoverflow.com/questions/52225073/wrapping-refcell-and-rc-in-a-struct-type", "title": "Wrapping RefCell and Rc in a struct type", "body": "<p>I would like to have a struct which has a writable field, but explicitly borrowable:</p>\n\n<pre><code>struct App&lt;W: Clone&lt;BorrowMut&lt;Write&gt;&gt;&gt; {\n    stdout: W,\n}\n</code></pre>\n\n<p>... so it can internally use it:</p>\n\n<pre><code>impl&lt;W: Clone&lt;BorrowMut&lt;Write&gt;&gt;&gt; App&lt;W&gt; {\n    fn hello(&amp;mut self) -&gt; Result&lt;()&gt; {\n        Rc::clone(&amp;self.stdout).borrow_mut().write(b\"world\\n\")?;\n        Ok(())\n    }\n}\n</code></pre>\n\n<p>I tried to pass it a cursor and then use it:</p>\n\n<pre><code>let mut cursor = Rc::new(RefCell::new(Cursor::new(vec![0])));\nlet mut app = App { stdout: cursor };\napp.hello().expect(\"failed to write\");\n\nlet mut line = String::new();\nRc::clone(&amp;cursor).borrow_mut().read_line(&amp;mut line).unwrap();\n</code></pre>\n\n<p>Rust barks:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0107]: wrong number of type arguments: expected 0, found 1\n --&gt; src/bin/play.rs:6:21\n  |\n6 | struct App&lt;W: Clone&lt;BorrowMut&lt;Write&gt;&gt;&gt; {\n  |                     ^^^^^^^^^^^^^^^^ unexpected type argument\n</code></pre>\n\n<p>My end goal: pass <code>stdin</code>, <code>stdout</code> and <code>stderr</code> to an <code>App</code> struct. In <code>fn main</code>, these would be real stdin/stdout/stderr. In tests, these could be cursors. Since I need to access these outside of <code>App</code> (e.g. in tests), I need multiple owners (thus <code>Rc</code>) and runtime mutable borrow (thus <code>RefCount</code>).</p>\n\n<p>How can I implement this?</p>\n"}, {"tags": ["arrays", "rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 2, "creation_date": 1536331898, "post_id": 52224873, "comment_id": 91399166, "body": "Since you are not the owner of the slice type <code>&amp;[T]</code>, you cannot implement <code>io::Read</code> for it. Creating your own type around a slice might be a reasonable alternative."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1536331965, "post_id": 52224873, "comment_id": 91399209, "body": "Moreover, you are advised to checkout <a href=\"https://rust-lang-nursery.github.io/api-guidelines/naming.html\" rel=\"nofollow noreferrer\">Rust&#39;s naming guidelines</a>. Struct names should be in UpperCamelCase (so: <code>MyType</code>)."}], "owner": {"reputation": 33, "user_id": 2349012, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4cfb133211beba39d7bfe9daf32c22a2?s=128&d=identicon&r=PG", "display_name": "Wishwesh Gandhi", "link": "https://stackoverflow.com/users/2349012/wishwesh-gandhi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 288, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1536331802, "creation_date": 1536331349, "last_edit_date": 1536331802, "question_id": 52224873, "link": "https://stackoverflow.com/questions/52224873/trait-implementation-of-ioread-on-new-type", "title": "Trait implementation of io::Read on new type", "body": "<p>I have implemented a struct inside a module. I am trying to implement the io::Read trait for a reference slice of the struct. </p>\n\n<p>Here is a simplified version of my code. For now the new trait implementation is inefficient. I am trying different things to make it work.</p>\n\n<pre><code>struct mytype {\n    inner: f32,\n}\nimpl io::Read for mytype {\n    fn read(&amp;mut self, buf: &amp;mut [u8]) -&gt; io::Result&lt;usize&gt; {\n        buf.write_u32::&lt;LittleEndian&gt;(self.inner.to_bits()).unwrap();\n        Ok(4)\n    }\n}    \nimpl&lt;'a&gt; io::Read for &amp;'a [mytype] {\n    fn read(&amp;mut self, buf: &amp;mut [u8]) -&gt; io::Result&lt;usize&gt; {\n        let mut vec8: Vec&lt;u8&gt; = vec![];\n        for t in self.iter() {\n            match (*t).read_u32::&lt;LittleEndian&gt;() {\n                Ok(u) =&gt; vec8.write_u32::&lt;LittleEndian&gt;(u).unwrap(),\n                Err(x) =&gt; (),\n            }\n        }\n        for (ind, it) in vec8.iter().enumerate() {\n            buf[ind] = *it;\n        }\n        Ok(vec8.len())\n    }\n}\n</code></pre>\n\n<p>The rust compiler keeps complaining about the code with this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n  --&gt; src\\lib.rs:37:1\n   |\n37 | impl&lt;'a&gt; io::Read for &amp;'a [mytype] {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n   |\n   = note: the impl does not reference any types defined in this crate\n   = note: define and implement a trait or new type instead\n</code></pre>\n\n<p>Just implementing io::Read for <code>mytype</code> works correctly. </p>\n"}, {"tags": ["arrays", "vector", "rust"], "answers": [{"comments": [{"owner": {"reputation": 622, "user_id": 1710501, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/e308decda9992832f6c0634f134fb7b1?s=128&d=identicon&r=PG", "display_name": "camccar", "link": "https://stackoverflow.com/users/1710501/camccar"}, "edited": false, "score": 0, "creation_date": 1536326178, "post_id": 52223333, "comment_id": 91395617, "body": "Very clean I like it"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 4, "creation_date": 1536327786, "post_id": 52223333, "comment_id": 91396728, "body": "You only need to say that it is a vector. No need to write the full type: <code>let s: Vec&lt;_&gt;</code>."}], "tags": [], "owner": {"reputation": 497, "user_id": 9499193, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a205ab60584733c5a84aa4c6e780d106?s=128&d=identicon&r=PG&f=1", "display_name": "JayJamesJay", "link": "https://stackoverflow.com/users/9499193/jayjamesjay"}, "is_accepted": true, "score": 6, "last_activity_date": 1536344259, "last_edit_date": 1536344259, "creation_date": 1536325988, "answer_id": 52223333, "question_id": 52223042, "link": "https://stackoverflow.com/questions/52223042/using-rust-how-can-i-convert-a-2d-array-into-a-2d-vector/52223333#52223333", "title": "Using rust how can I convert a 2d array into a 2d vector?", "body": "<p>2d array is <code>array</code> of <code>array</code>s, so to create 2d Vector you need to create <code>Vec</code> of <code>Vec</code>s. One way to do that is to iterate over the array and convert every item using <code>to_vec()</code> method, then <code>collect()</code> to <code>Vec</code>. </p>\n\n<pre><code>let s: Vec&lt;_&gt; = s.iter().map(|&amp;e| e.to_vec()).collect();\n</code></pre>\n"}], "owner": {"reputation": 622, "user_id": 1710501, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/e308decda9992832f6c0634f134fb7b1?s=128&d=identicon&r=PG", "display_name": "camccar", "link": "https://stackoverflow.com/users/1710501/camccar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 192, "favorite_count": 0, "accepted_answer_id": 52223333, "answer_count": 1, "score": 1, "last_activity_date": 1536344259, "creation_date": 1536324898, "last_edit_date": 1536329670, "question_id": 52223042, "link": "https://stackoverflow.com/questions/52223042/using-rust-how-can-i-convert-a-2d-array-into-a-2d-vector", "title": "Using rust how can I convert a 2d array into a 2d vector?", "body": "<p>Given a 2d array such as </p>\n\n<pre><code>let S = [\n        [0,0,1,0,0],\n        [0,0,1,0,0],\n        [0,0,1,0,0],\n        [0,0,1,0,0]];\n</code></pre>\n\n<p>How can I convert it into a 2d Vector?</p>\n\n<pre><code>Vec&lt;Vec&lt;i32&gt;&gt;\n</code></pre>\n"}, {"tags": ["neo4j", "rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1536323694, "post_id": 52218237, "comment_id": 91394051, "body": "It&#39;s probably neo4j who crash, try to get the log. No <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>, why so much upvote ?"}], "owner": {"reputation": 29, "user_id": 10329461, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-l9o4DzsyYes/AAAAAAAAAAI/AAAAAAAAAFo/2szG22E24XQ/photo.jpg?sz=128", "display_name": "di_hardt", "link": "https://stackoverflow.com/users/10329461/di-hardt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 136, "favorite_count": 1, "answer_count": 0, "score": 2, "last_activity_date": 1536322998, "creation_date": 1536308139, "last_edit_date": 1536322998, "question_id": 52218237, "link": "https://stackoverflow.com/questions/52218237/got-connection-timeout-with-rusted-cypher-after-60-seconds", "title": "Got connection timeout with rusted-cypher after 60 seconds", "body": "<p>For the first step of my master thesis I have to compare some databases. Currently I play around with Neo4J. The job is to insert millions of records into the database. Therefore I used Rust and <a href=\"https://docs.rs/rusted_cypher/1.1.0/rusted_cypher/\" rel=\"nofollow noreferrer\">rusted-cypher</a>. I decided to use a transaction of 250000 create statements. But I got the following error exactly after 60 seconds:</p>\n\n<p><code>Hyper(Io(Os { code: 104, kind: ConnectionReset, message: \"Connection reset by peer\" }))</code></p>\n\n<p>First I thought Neo4J cuts the connection, so I raise the transaction timeouts in <code>neo4j.conf</code>:</p>\n\n<pre><code>dbms.transaction.timeout=300s\ndbms.rest.transaction.idle_timeout=300s\ndbms.lock.acquisition.timeout=300s\n</code></pre>\n\n<p>But the error continues to appear. I tested with a lower transaction size of only 1000 create statements, which worked.</p>\n\n<p>I searched in the code of 'rusted-cypher' and 'hyper'. The only timeout I found is located in <a href=\"https://docs.rs/hyper/0.12.9/hyper/client/struct.Builder.html#method.keep_alive_timeout\" rel=\"nofollow noreferrer\">hyper::client::Builder</a> but it is actually 90 seconds not 60.</p>\n\n<p>Why does the connection get reset after 60 seconds?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 939, "user_id": 2870802, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-lHzULJklIJg/AAAAAAAAAAI/AAAAAAAABwk/_pJZF95FiAY/photo.jpg?sz=128", "display_name": "ozkriff", "link": "https://stackoverflow.com/users/2870802/ozkriff"}, "is_accepted": true, "score": 5, "last_activity_date": 1536302084, "last_edit_date": 1536302084, "creation_date": 1536301740, "answer_id": 52216545, "question_id": 52216426, "link": "https://stackoverflow.com/questions/52216426/access-to-external-crates-from-module/52216545#52216545", "title": "Access to external crates from module", "body": "<p><code>extern crate</code> item brings crate's name into the namespace. The module has its own namespace so you need to import <code>rand</code> itself - <code>use rand::{self, Rng};</code> - because you're calling <code>rand::thread_rng()</code>:</p>\n\n<pre><code>extern crate rand;\n\nmod foo {\n    use rand::{self, Rng};\n\n    #[derive(Debug)]\n    pub struct Foo { bar: bool }\n\n    impl Foo {\n        pub fn new() -&gt; Foo {\n            Foo { bar: rand::thread_rng().gen_bool(0.5) }\n        }\n    }\n}\n\nuse foo::Foo;\n\nfn main() {\n    println!(\"{:#?}\", Foo::new());\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=3d924c7cd4710332de30987edcb3e3a4&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"noreferrer\">Playground</a></p>\n\n<p>Or you can import <code>use rand::{thread_rng, Rng};</code> and change the call to</p>\n\n<pre><code>Foo { bar: thread_rng().gen_bool(0.5) }\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=154616719d8904142348a48aa6f94f58&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"noreferrer\">Playground</a></p>\n"}], "owner": {"reputation": 986, "user_id": 5098391, "user_type": "registered", "accept_rate": 68, "profile_image": "https://lh3.googleusercontent.com/-T1xSe6F16Lo/AAAAAAAAAAI/AAAAAAAAACA/yysNIMuatno/photo.jpg?sz=128", "display_name": "Louis Etienne", "link": "https://stackoverflow.com/users/5098391/louis-etienne"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1148, "favorite_count": 0, "accepted_answer_id": 52216545, "answer_count": 1, "score": 2, "last_activity_date": 1536302084, "creation_date": 1536301249, "question_id": 52216426, "link": "https://stackoverflow.com/questions/52216426/access-to-external-crates-from-module", "title": "Access to external crates from module", "body": "<p>I added the dependency <code>rand</code> to my project:</p>\n\n<pre><code>[dependencies]\nrand = \"0.5\"\n</code></pre>\n\n<p>In my <code>main.rs</code>, I have the following:</p>\n\n<pre><code>extern crate rand;\n\npub mod foo;\nuse foo::Foo;\n\nfn main() {\n    println!(\"{:#?}\", Foo::new());\n}\n</code></pre>\n\n<p>And in the file <code>foo.rs</code>:</p>\n\n<pre><code>use rand::Rng;\n\n#[derive(Debug)]\npub struct Foo { bar: bool }\n\nimpl Foo {\n    pub fn new() -&gt; Foo {\n        Foo { bar: rand::thread_rng().gen_bool(0.5) }\n    }\n}\n</code></pre>\n\n<p>And when I try to compile it, I have the following error:</p>\n\n<pre><code>error[E0658]: access to extern crates through prelude is experimental (see issue #44660)\n  --&gt; src\\foo.rs:11:18\n   |\n11 |             bar: rand::thread_rng().gen_bool(0.5)\n   |                  ^^^^\n</code></pre>\n\n<p>How can I use external crates from modules?</p>\n"}, {"tags": ["rust", "undefined-behavior", "simd", "memory-alignment"], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1536266728, "post_id": 52211545, "comment_id": 91373168, "body": "&quot;Thus implementations that provide the intrinsics API must define the behaviour&quot; =&gt; can ? If ISO said UB it&#39;s UB, not implemented defined."}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1536269498, "post_id": 52211545, "comment_id": 91374241, "body": "@Stargateur: If ISO C++ says &quot;implementation defined&quot;, every implementation <i>must</i> define the behaviour (in one way or another).  If ISO C++ says something is UB, implementations <i>can</i> define the behaviour if they choose, and then code written to depend on such behaviour is no longer correct ISO C++.  e.g. <code>gcc -fwrapv</code> defines the behaviour of signed-integer overflow as 2&#39;s complement wraparound, like you get in assembly language.  But code that depends on <code>__m128i</code> being available in the first place can only work on the same limited set of implementations, so there&#39;s no downside."}], "tags": [], "owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "is_accepted": false, "score": 3, "last_activity_date": 1536264919, "creation_date": 1536264919, "answer_id": 52211545, "question_id": 52211472, "link": "https://stackoverflow.com/questions/52211472/how-to-correctly-use-stdarch-mm-loadu-si128-mm-storeu-si128/52211545#52211545", "title": "How to correctly use std::arch::_mm_loadu_si128 / _mm_storeu_si128", "body": "<p>I think this is a cross-language duplicate of <a href=\"https://stackoverflow.com/q/52112605\">Is `reinterpret_cast`ing between hardware vector pointer and the corresponding type an undefined behavior?</a>.</p>\n\n<p>As I explained over there, Intel defined the C/C++ intrinsics API such that <code>loadu</code> / <code>storeu</code> can safely dereference an under-aligned pointer, and that it's safe to create such pointers, even though it's UB in ISO C++ even to create under-aligned pointers.  (Thus implementations that provide the intrinsics API must define the behaviour).</p>\n\n<p>The Rust version should work identically.  Implementations that provide it must make it safe to create under-aligned <code>__m128i*</code> pointers, as long as you don't dereference them \"manually\".</p>\n\n<p>The other API-design option would be to have another version of the type that doesn't imply 16-byte alignment, like a <code>__m128i_u</code> or something.  GNU C does this with their native vector syntax, but that's way off topic for Rust.</p>\n"}], "owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 366, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1536270752, "creation_date": 1536264518, "last_edit_date": 1536270752, "question_id": 52211472, "link": "https://stackoverflow.com/questions/52211472/how-to-correctly-use-stdarch-mm-loadu-si128-mm-storeu-si128", "title": "How to correctly use std::arch::_mm_loadu_si128 / _mm_storeu_si128", "body": "<p>Usually one should be wary of transmuting (or casting) pointers to a higher alignment. Yet the interface to the above functions require <code>*const _m128i</code> and <code>*mut _m128i</code> pointers, respectively. Both are SIMD-aligned, which means I'd need to keep my arrays SIMD-aligned, too. On the other hand, the intrinsics are explicitly designed to load/store <em>unaligned</em> data.</p>\n\n<p>Is this safe? Shouldn't we change the interface? Or at least document this fact?</p>\n"}, {"tags": ["macros", "rust", "expansion"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1536254582, "post_id": 52207704, "comment_id": 91367917, "body": "For the record why do you need this ? What is the use case ?"}, {"owner": {"reputation": 2105, "user_id": 1500195, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/Tc5kv.png?s=128&g=1", "display_name": "6ft Dan", "link": "https://stackoverflow.com/users/1500195/6ft-dan"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1536254893, "post_id": 52207704, "comment_id": 91368053, "body": "To generate forward-tables and reverse-tables to be hardcoded in a binary for AES 256 bit encryption/decryption.  See <a href=\"https://github.com/paulej/AESCrypt/blob/17e557fc5c263ac1a8488a0339a4177e7e583743/Linux/src/aes.c#L182-L267\" rel=\"nofollow noreferrer\">github.com/paulej/AESCrypt/blob/&hellip;</a> for the C version."}, {"owner": {"reputation": 2105, "user_id": 1500195, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/Tc5kv.png?s=128&g=1", "display_name": "6ft Dan", "link": "https://stackoverflow.com/users/1500195/6ft-dan"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1536269430, "post_id": 52207704, "comment_id": 91374219, "body": "For the record I was mistaken about how the C macro worked.  The output is a u32 number like <code>0x7BB0B0CD</code>.  But the answer given still shows me what I need to know."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1536272134, "post_id": 52207704, "comment_id": 91375026, "body": "I was thinking the same but I was too lazy to verify ;) as you said it doesn&#39;t change anything"}], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1536302602, "post_id": 52208535, "comment_id": 91382105, "body": "I&#39;d put the numeric literals up front; readability is the only reason to use a macro in C that I can see."}, {"owner": {"reputation": 2105, "user_id": 1500195, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/Tc5kv.png?s=128&g=1", "display_name": "6ft Dan", "link": "https://stackoverflow.com/users/1500195/6ft-dan"}, "edited": false, "score": 0, "creation_date": 1536450139, "post_id": 52208535, "comment_id": 91429190, "body": "Actually it is needed for much more than being readable.  There are four patterns for the for parts of hex in abcd, dabc, cdab, and bcda.  Then each of these orders are used for generating both forward and reverse tables.  So with the above number <code>0x7BB0B0CD</code> being the <code>abcd</code> form the <code>0xCD7BB0B0</code> would be the <code>dabc</code> pattern.  I created the code example here for hex generating as individual macros for each of the 4 variations and another macro for the hex numbers which takes just the macro name <code>$mcro:ident</code> of any one of the 4 macros to be called for all 256 hex numbers for each table."}], "tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 7, "last_activity_date": 1536332047, "last_edit_date": 1536332047, "creation_date": 1536251290, "answer_id": 52208535, "question_id": 52207704, "link": "https://stackoverflow.com/questions/52207704/can-rust-macros-expand-like-c-preprocessor-macros-for-hex-numbers/52208535#52208535", "title": "Can Rust macros expand like C preprocessor macros for hex numbers?", "body": "<p>Nope.</p>\n\n<p>Rust macros can only process and generate whole tokens, not token fragments. Something like <code>7b</code> is not a token, so you won't be able to write a macro that would match it.</p>\n\n<p>It seems like the main reason to use this macro in C is to make the number more readable. That isn't really necessary in Rust, because underscores are allowed in numeric literals. So you can just write <code>0x7b_b0_b0_cb</code> instead.</p>\n\n<p>You can approximate the original macro by accepting numbers and doing math, something like the following:</p>\n\n<pre><code>macro_rules! gen_hex_num {\n    ($a:expr, $b:expr, $c:expr, $d:expr) =&gt; {\n        ($a &lt;&lt; 24) | ($b &lt;&lt; 16) | ($c &lt;&lt; 8) | ($d)\n    }\n}\n</code></pre>\n\n<p>But you have to call it like <code>gen_hex_num!(0x7B, 0xB0, 0xB0, 0xCB)</code>, which probably defeats the purpose.</p>\n"}], "owner": {"reputation": 2105, "user_id": 1500195, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/Tc5kv.png?s=128&g=1", "display_name": "6ft Dan", "link": "https://stackoverflow.com/users/1500195/6ft-dan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 363, "favorite_count": 1, "accepted_answer_id": 52208535, "answer_count": 1, "score": 3, "last_activity_date": 1536332047, "creation_date": 1536248235, "question_id": 52207704, "link": "https://stackoverflow.com/questions/52207704/can-rust-macros-expand-like-c-preprocessor-macros-for-hex-numbers", "title": "Can Rust macros expand like C preprocessor macros for hex numbers?", "body": "<p>I'm looking to create a Rust macro that can do what this does in C.</p>\n\n<pre><code>#define V(a,b,c,d) 0x##a##b##c##d\n</code></pre>\n\n<p>Which when called with:</p>\n\n<pre><code>V(7B,B0,B0,CB)\n</code></pre>\n\n<p>Will simply have the following hexadecimal number placed in the code at compile time:</p>\n\n<pre><code>0x7BaB0bB0cCDd\n</code></pre>\n\n<p>Trying something like this:</p>\n\n<pre><code>macro_rules! gen_hex_num {\n    ($a:expr , $b:expr , $c:expr , $d:expr) =&gt; (\n        0x($a)a($b)b($c)c($d)d\n    )\n}\n</code></pre>\n\n<p>Produces an error:</p>\n\n<pre><code>error: macro expansion ignores token `a` and any following\n --&gt; src/main.rs:3:16\n  |\n3 |         0x($a)a($b)b($c)c($d)d\n  |               ^\n  |\nnote: caused by the macro expansion here; the usage of `gen_hex_num!` is \nlikely invalid in expression context\n</code></pre>\n\n<p>Documentation and other questions don't seem to cover this scenario.</p>\n"}, {"tags": ["testing", "rust", "command-line-interface"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1536242493, "post_id": 52205295, "comment_id": 91360745, "body": "Do you absolutely need a Rust program to be invoked to check the inputs, or would a simple script (bash/python) suffice?"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1536242704, "post_id": 52205295, "comment_id": 91360895, "body": "This is not the indented way for <code>tests&#47;</code> tests. Please see the links i provided. &quot;<i>Tests in your src files should be unit tests, and tests in tests/ should be integration-style tests</i>&quot;"}, {"owner": {"reputation": 1756, "user_id": 8492116, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/22358b8a44a83a98115de7b8c6092529?s=128&d=identicon&r=PG&f=1", "display_name": "Aankhen", "link": "https://stackoverflow.com/users/8492116/aankhen"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1536242934, "post_id": 52205295, "comment_id": 91361056, "body": "@MatthieuM., as long as it\u2019s portable, I\u2019m fine with using anything. It needs to work on Windows, Linux, and OS X that I know of. I wouldn\u2019t want to add an external dependency like Python, though\u2014that\u2019s a lot for this one test. I figured Rust would be the one thing I could assume the user has."}, {"owner": {"reputation": 1756, "user_id": 8492116, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/22358b8a44a83a98115de7b8c6092529?s=128&d=identicon&r=PG&f=1", "display_name": "Aankhen", "link": "https://stackoverflow.com/users/8492116/aankhen"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1536243066, "post_id": 52205295, "comment_id": 91361159, "body": "@hellow, could you explain how this is incorrect and what the correct method would be?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1536243521, "post_id": 52205295, "comment_id": 91361461, "body": "@hellow: Isn&#39;t checking how a call to another program works <i>exactly</i> an integration test?"}], "answers": [{"comments": [{"owner": {"reputation": 1756, "user_id": 8492116, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/22358b8a44a83a98115de7b8c6092529?s=128&d=identicon&r=PG&f=1", "display_name": "Aankhen", "link": "https://stackoverflow.com/users/8492116/aankhen"}, "edited": false, "score": 0, "creation_date": 1536270304, "post_id": 52208604, "comment_id": 91374501, "body": "This sounds promising, but if I make it a binary crate then the binary is never built during compilation or testing of the main crate, and with a library crate I only get a <code>.d</code> file in <code>target&#47;debug&#47;</code>. Is there a way around that?"}, {"owner": {"reputation": 12979, "user_id": 5883, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5c761536d66f497e45ba8de2267b9ead?s=128&d=identicon&r=PG", "display_name": "hwiechers", "link": "https://stackoverflow.com/users/5883/hwiechers"}, "reply_to_user": {"reputation": 1756, "user_id": 8492116, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/22358b8a44a83a98115de7b8c6092529?s=128&d=identicon&r=PG&f=1", "display_name": "Aankhen", "link": "https://stackoverflow.com/users/8492116/aankhen"}, "edited": false, "score": 0, "creation_date": 1536295935, "post_id": 52208604, "comment_id": 91379867, "body": "Keep it a binary crate but add a <code>lib.rs</code> file to it. Does it build now?"}, {"owner": {"reputation": 12979, "user_id": 5883, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5c761536d66f497e45ba8de2267b9ead?s=128&d=identicon&r=PG", "display_name": "hwiechers", "link": "https://stackoverflow.com/users/5883/hwiechers"}, "reply_to_user": {"reputation": 1756, "user_id": 8492116, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/22358b8a44a83a98115de7b8c6092529?s=128&d=identicon&r=PG&f=1", "display_name": "Aankhen", "link": "https://stackoverflow.com/users/8492116/aankhen"}, "edited": false, "score": 0, "creation_date": 1536297736, "post_id": 52208604, "comment_id": 91380352, "body": "Looks like it might not be possible <a href=\"https://github.com/rust-lang/cargo/issues/2267\" rel=\"nofollow noreferrer\">github.com/rust-lang/cargo/issues/2267</a>. I guess you could try invoking the compiler from your tests."}, {"owner": {"reputation": 1756, "user_id": 8492116, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/22358b8a44a83a98115de7b8c6092529?s=128&d=identicon&r=PG&f=1", "display_name": "Aankhen", "link": "https://stackoverflow.com/users/8492116/aankhen"}, "edited": false, "score": 0, "creation_date": 1536300052, "post_id": 52208604, "comment_id": 91381072, "body": "Blast\u2026 I was hoping to avoid that, since I have no knowledge of the compiler, but I guess I don\u2019t have a choice in this case. (I tried adding a <code>lib.rs</code> to a binary crate before I commented. It just ignores the binary.)"}], "tags": [], "owner": {"reputation": 12979, "user_id": 5883, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5c761536d66f497e45ba8de2267b9ead?s=128&d=identicon&r=PG", "display_name": "hwiechers", "link": "https://stackoverflow.com/users/5883/hwiechers"}, "is_accepted": false, "score": 0, "last_activity_date": 1536251522, "creation_date": 1536251522, "answer_id": 52208604, "question_id": 52205295, "link": "https://stackoverflow.com/questions/52205295/how-can-i-test-the-arguments-a-rust-program-passes-to-another-program/52208604#52208604", "title": "How can I test the arguments a Rust program passes to another program?", "body": "<p>Make your test binary a new Cargo project under <code>src</code> and then reference it in your main projects as a dev dependency using a relative path.</p>\n\n<p><code>\n[dev-dependencies]\ntest_binary = { path = \"src/test_binary\", version = \"0.1\" }\n</code></p>\n"}], "owner": {"reputation": 1756, "user_id": 8492116, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/22358b8a44a83a98115de7b8c6092529?s=128&d=identicon&r=PG&f=1", "display_name": "Aankhen", "link": "https://stackoverflow.com/users/8492116/aankhen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 591, "favorite_count": 1, "answer_count": 1, "score": 1, "last_activity_date": 1536251522, "creation_date": 1536240815, "last_edit_date": 1536243033, "question_id": 52205295, "link": "https://stackoverflow.com/questions/52205295/how-can-i-test-the-arguments-a-rust-program-passes-to-another-program", "title": "How can I test the arguments a Rust program passes to another program?", "body": "<p>I\u2019m writing tests for a command-line tool which lets you specify a pager. I want to test that the tool passes the right arguments. I figured I\u2019d write a single-line binary that checks the arguments and exits with a non-zero status code (plus some STDERR output) if they\u2019re not right, then put a test under <code>tests/</code> that runs this binary and checks its output, which I can run as usual using <code>cargo test</code>. This setup works if I place the binary under <code>src/bin</code>, but then the test binary is also installed when using <code>cargo install</code>.</p>\n\n<p>When I placed the <code>.rs</code> file for the binary under <code>tests/</code>, it simply wasn\u2019t compiled into a binary.</p>\n\n<p>I tried putting it under a crate in the same workspace, but then it\u2019s not built when running <code>cargo build</code> in the root crate\u2026 unless I specify it as a default member, in which case we\u2019re back to it being installed when using <code>cargo install</code>.</p>\n\n<p>For example, given code like this:</p>\n\n<pre><code>use std::process::Command;\n\nfn run_pager(pager: &amp;str) {\n    let output = Command::new(&amp;pager)\n        .env(\"SOME_VAR\", \"FOO\")\n        .spawn()\n        .expect(\"failed to run pager\");\n\n    // do something with the command\n}\n</code></pre>\n\n<p>And a stub <code>test-binary.rs</code> that looks like this:</p>\n\n<pre><code>use std::env;\n\nfn main() {\n    assert_eq!(env::var(\"SOME_VAR\").unwrap(), \"FOO\");\n\n    // \u2026produce output with special markers\u2026\n}\n</code></pre>\n\n<p>How can I write <code>tests/passes-correct-args.rs</code>:</p>\n\n<pre><code>#[test]\nfn runs_pager_with_args() {\n    // pass `test-binary` to `run_pager` and verify output\n}\n</code></pre>\n"}, {"tags": ["syntax", "reference", "rust", "pattern-matching"], "answers": [{"tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": false, "score": 3, "last_activity_date": 1536235489, "last_edit_date": 1536235489, "creation_date": 1536234492, "answer_id": 52203428, "question_id": 52203375, "link": "https://stackoverflow.com/questions/52203375/referencing-dereferencing-a-vector-element-in-a-for-loop/52203428#52203428", "title": "Referencing / dereferencing a vector element in a for loop", "body": "<p>As apart from other languages (C++), <code>&amp;n</code> in this case isn't a reference, but pattern matching, which means that this is expecting a reference.<br>\nThe opposite of this would be <code>ref n</code> which would give you <code>&amp;&amp;i32</code> as a type.</p>\n\n<p>This is also the case for closures, e.g.</p>\n\n<pre><code>(0..).filter(|&amp;idx| idx &lt; 10)...\n</code></pre>\n\n<p>Please note, that this will move the variable, e.g. you cannot do this with types, that don't implement the <code>Copy</code> trait.</p>\n"}, {"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 8, "last_activity_date": 1536238159, "last_edit_date": 1536238159, "creation_date": 1536235408, "answer_id": 52203694, "question_id": 52203375, "link": "https://stackoverflow.com/questions/52203375/referencing-dereferencing-a-vector-element-in-a-for-loop/52203694#52203694", "title": "Referencing / dereferencing a vector element in a for loop", "body": "<p>It can help to think of a reference as a kind of container. For comparison, consider <code>Option</code>, where we can \"unwrap\" the value using pattern-matching, for example in an <code>if let</code> statement:</p>\n\n<pre><code>let n = 100;\nlet opt = Some(n);\n\nif let Some(p) = opt {\n    // do something with p\n}\n</code></pre>\n\n<p>We call <code>Some</code> and <code>None</code> <em>constructors</em> for <code>Option</code>, because they each produce a value of type <code>Option</code>. In the same way, you can think of <code>&amp;</code> as a constructor for a reference. And the syntax is symmetric:</p>\n\n<pre><code>let n = 100;\nlet reference = &amp;n;\n\nif let &amp;p = reference {\n    // do something with p\n}\n</code></pre>\n\n<p>You can use this feature in any place where you are binding a value to a variable, which happens all over the place. For example:</p>\n\n<ol>\n<li><p><code>if let</code>, as above</p></li>\n<li><p><code>match</code> expressions:</p>\n\n<pre><code>match opt {\n    Some(1) =&gt; { ... },\n    Some(p) =&gt; { ... },\n    None    =&gt; { ... },\n}\nmatch reference {\n    &amp;1 =&gt; { ... },\n    &amp;p =&gt; { ... },\n}\n</code></pre></li>\n<li><p>In function arguments:</p>\n\n<pre><code>fn foo(&amp;p: &amp;i32) { ... }\n</code></pre></li>\n<li><p>Loops:</p>\n\n<pre><code>for &amp;p in iter_of_i32_refs {\n    ...\n}\n</code></pre></li>\n</ol>\n\n<p>And probably <a href=\"https://doc.rust-lang.org/book/second-edition/ch18-01-all-the-places-for-patterns.html\" rel=\"nofollow noreferrer\">more</a>.</p>\n\n<p>Note that the last two won't work for <code>Option</code> because they would panic if a <code>None</code> was found instead of a <code>Some</code>, but that can't happen with references because they only have one constructor, <code>&amp;</code>.</p>\n\n<blockquote>\n  <p>does the meaning of <code>&amp;</code> differ depending on context?</p>\n</blockquote>\n\n<p>Hopefully, if you can interpret <code>&amp;</code> as a constructor instead of an operator, then you'll see that its meaning doesn't change. It's a pretty cool feature of Rust that you can use constructors on the right hand side of an expression for creating values and on the left hand side for taking them apart (destructuring).</p>\n"}, {"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 2, "last_activity_date": 1536236833, "creation_date": 1536236833, "answer_id": 52204102, "question_id": 52203375, "link": "https://stackoverflow.com/questions/52203375/referencing-dereferencing-a-vector-element-in-a-for-loop/52204102#52204102", "title": "Referencing / dereferencing a vector element in a for loop", "body": "<blockquote>\n  <p>My confusion (and bear in mind I haven't covered patterns) is that I would expect that since n: &amp;i32, then &amp;n: &amp;&amp;i32 rather than it resolving to the value (if a double ref is even possible). Why does this happen, and does the meaning of &amp; differ depending on context?</p>\n</blockquote>\n\n<p>When you do pattern matching (for example when you write <code>for &amp;n in &amp;number_list</code>), you're not saying that <code>n</code> is an <code>&amp;i32</code>, instead you are saying that <code>&amp;n</code> (the pattern) is an <code>&amp;i32</code> (the expression) from which the compiler infers that <code>n</code> is an <code>i32</code>.</p>\n\n<p>Similar things happen for all kinds of pattern, for example when pattern-matching in <code>if let Some (x) = Some (42) { /* \u2026 */ }</code> we are saying that <code>Some (x)</code> is <code>Some (42)</code>, therefore <code>x</code> is 42.</p>\n"}], "owner": {"reputation": 635, "user_id": 1448924, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/onuBO.png?s=128&g=1", "display_name": "njp", "link": "https://stackoverflow.com/users/1448924/njp"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 878, "favorite_count": 1, "accepted_answer_id": 52203694, "answer_count": 3, "score": 4, "last_activity_date": 1536238159, "creation_date": 1536234317, "last_edit_date": 1536237555, "question_id": 52203375, "link": "https://stackoverflow.com/questions/52203375/referencing-dereferencing-a-vector-element-in-a-for-loop", "title": "Referencing / dereferencing a vector element in a for loop", "body": "<p>In the code below, I want to retain <code>number_list</code>, after iterating over it, since the <code>.into_iter()</code> that <code>for</code> uses by default will consume. Thus, I am assuming that <code>n: &amp;i32</code> and I can get the value of <code>n</code> by dereferencing.</p>\n\n<pre><code>fn main() {\n    let number_list = vec![24, 34, 100, 65];\n    let mut largest = number_list[0];\n\n    for n in &amp;number_list {\n        if *n &gt; largest {\n            largest = *n;\n        }\n    }\n\n    println!(\"{}\", largest);\n}\n</code></pre>\n\n<p>It was revealed to me that instead of this, we can use <code>&amp;n</code> as a 'pattern':</p>\n\n<pre><code>fn main() {\n    let number_list = vec![24, 34, 100, 65];\n    let mut largest = number_list[0];\n\n    for &amp;n in &amp;number_list {\n        if n &gt; largest {\n            largest = n;\n        }\n    }\n\n    println!(\"{}\", largest);\n    number_list;\n}\n</code></pre>\n\n<p>My confusion (and bear in mind I haven't covered patterns) is that I would expect that since <code>n: &amp;i32</code>, then <code>&amp;n: &amp;&amp;i32</code> rather than it resolving to the value (if a double ref is even possible). Why does this happen, and does the meaning of <code>&amp;</code> differ depending on context?</p>\n"}, {"tags": ["reference", "rust", "immutability", "mutable"], "comments": [{"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 2, "creation_date": 1536218410, "post_id": 52197812, "comment_id": 91346142, "body": "If this were allowed, you could use two shared references to create two mutable references."}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 7, "last_activity_date": 1536222647, "last_edit_date": 1536222647, "creation_date": 1536216129, "answer_id": 52197950, "question_id": 52197812, "link": "https://stackoverflow.com/questions/52197812/returning-a-mutable-reference-that-is-behind-an-immutable-reference-passed-to-t/52197950#52197950", "title": "Returning a mutable reference that is behind an immutable reference, passed to the function", "body": "<p>You can't create a mutable reference from an immutable one. This means that you need to change <code>&amp;self</code> into <code>&amp;mut self</code>:</p>\n\n<pre><code>impl&lt;'a: 'b, 'b&gt; Bar&lt;'b&gt; {\n    fn func(&amp;'a mut self) -&gt; &amp;'b mut Foo {\n         self.f\n    }\n}\n</code></pre>\n\n<p>And now the your variable needs to be mutable so that you can take a mutable reference to it for the method:</p>\n\n<pre><code>let mut bar = Bar { f: &amp;mut foo };\nbar.func(); \n</code></pre>\n\n<blockquote>\n  <p>What exactly is being assigned into self (or inside of <code>self.x</code>?) ?</p>\n</blockquote>\n\n<p>The error message might be a little off. There is no assignment in your code, but you are returning a <em>mutable</em> reference. The only extra thing that a mutable reference would let you do here is to assign <code>self.f</code> or <code>self.f.i</code>.</p>\n\n<p>Definitely this error message can be improved, but it does include a hint to make the <code>&amp;'a self</code> mutable to fix the problem.</p>\n\n<p>Now, your original question:</p>\n\n<blockquote>\n  <p>How is returning a mutable reference that is behind an immutable reference, passed as an argument to the function, handled?</p>\n</blockquote>\n\n<p>Rust provides a variety of container types for interior mutability, such as <code>Cell</code> and <code>RefCell</code>. These types take the responsibility for ensuring correctness away from the compiler and make it a runtime check. One way of applying a <code>RefCell</code> to your code might be like this:</p>\n\n<pre><code>use std::cell::RefCell;\nuse std::ops::DerefMut;\n\nstruct Foo { i: i32 }\n\nstruct Bar&lt;'b&gt; {\n    // store the data in a RefCell for interior mutability\n    f: &amp;'b RefCell&lt;Foo&gt;\n}\n\nimpl&lt;'a: 'b, 'b&gt; Bar&lt;'b&gt; {\n    // Return a RefMut smart pointer instead of mutable ref, but hide the implementation,\n    // just exposing it as something that can be mutably dereferenced as a Foo\n    fn func(&amp;'a self) -&gt; impl DerefMut&lt;Target = Foo&gt; + 'b {\n         self.f.borrow_mut()\n    }\n}\n\nfn main() {\n    let foo = RefCell::new(Foo { i: 1 });\n    let bar = Bar { f: &amp;foo };\n\n    let mut f = bar.func(); \n    f.i = 3;\n}\n</code></pre>\n"}], "owner": {"reputation": 3480, "user_id": 2686821, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/5dd46afe4f5a75f2667569582b20ac9b?s=128&d=identicon&r=PG&f=1", "display_name": "soupybionics", "link": "https://stackoverflow.com/users/2686821/soupybionics"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3619, "favorite_count": 0, "accepted_answer_id": 52197950, "answer_count": 1, "score": 4, "last_activity_date": 1536259861, "creation_date": 1536215477, "last_edit_date": 1536259861, "question_id": 52197812, "link": "https://stackoverflow.com/questions/52197812/returning-a-mutable-reference-that-is-behind-an-immutable-reference-passed-to-t", "title": "Returning a mutable reference that is behind an immutable reference, passed to the function", "body": "<p>How is returning a mutable reference that is behind an immutable reference, passed as an argument to the function, handled?</p>\n\n<pre><code>struct Foo { i: i32 }\n\nstruct Bar&lt;'b&gt; {\n    f: &amp;'b mut Foo\n}\n\nimpl&lt;'a: 'b, 'b&gt; Bar&lt;'b&gt; {\n    fn func(&amp;'a self) -&gt; &amp;'b mut Foo {\n         self.f\n    }\n}\n\nfn main() {\n    let mut foo = Foo { i: 1 };\n\n    let bar = Bar { f: &amp;mut foo };\n    bar.func(); \n}\n</code></pre>\n\n<p>gives the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0389]: cannot borrow data mutably in a `&amp;` reference\n --&gt; src/main.rs:9:14\n  |\n8 |         fn func(&amp;'a self) -&gt; &amp;'b mut Foo {\n  |                 -------- use `&amp;'a mut self` here to make mutable\n9 |              self.f\n  |              ^^^^^^ assignment into an immutable reference\n</code></pre>\n\n<p>I (sort of) understand what the compiler is trying to prevent here. But I am confused with the error message <code>assignment into an immutable reference</code> . What exactly is being assigned into <code>self</code> (or inside of<code>self.f</code>?) ?</p>\n\n<p>I wrote the following code to simulate this problem and got the same error message, which unlike the above one, I am able to understand. Here's the code:</p>\n\n<pre><code>fn main() {\n    let mut foo = Foo { i: 1 };\n\n    let bar = Bar { f: &amp;mut foo };\n    let pbar = &amp;bar;\n\n    pbar.f.i = 2; // assignment into an immutable reference\n}\n</code></pre>\n\n<p>In the first example,  is it trying to move the mutable reference <code>f</code> out of <code>self</code> (since <code>&amp;mut</code> is not a <code>Copy</code> type), treating it as a mutation inside the immutable reference <code>self</code>, hence the error message <code>assignment into an immutable reference</code>?</p>\n"}]