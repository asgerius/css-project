[{"tags": ["vector", "rust", "iterator"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1550748007, "post_id": 54795989, "comment_id": 96387940, "body": "Picking Rust as a first language may be a bit tough, as most of the learning resources assume one already knows how to &quot;program&quot;. I&#39;d advise you to hop onto the <a href=\"https://chat.stackoverflow.com/rooms/62927/rust\">Rust chat</a> for more interactive help, especially when a concept doesn&#39;t seem to make sense to you!"}, {"owner": {"reputation": 23, "user_id": 11002310, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-BQTZ5P5Jk-U/AAAAAAAAAAI/AAAAAAAAACo/3qXjsFWNY60/photo.jpg?sz=128", "display_name": "Nadia", "link": "https://stackoverflow.com/users/11002310/nadia"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1551369985, "post_id": 54795989, "comment_id": 96624116, "body": "Thanks @MatthieuM."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1551021561, "post_id": 54796159, "comment_id": 96478301, "body": "This may be correct, but doesn&#39;t fit the code that OP is starting from. Directly using the indexing operator is also non-idiomatic when it&#39;s not required."}], "tags": [], "owner": {"reputation": 5661, "user_id": 2541276, "user_type": "registered", "accept_rate": 55, "profile_image": "https://graph.facebook.com/100001587714573/picture?type=large", "display_name": "Rajkumar Natarajan", "link": "https://stackoverflow.com/users/2541276/rajkumar-natarajan"}, "is_accepted": false, "score": 0, "last_activity_date": 1551021498, "last_edit_date": 1551021498, "creation_date": 1550701363, "answer_id": 54796159, "question_id": 54795989, "link": "https://stackoverflow.com/questions/54795989/how-to-print-both-the-index-and-value-for-every-element-in-a-vec/54796159#54796159", "title": "How to print both the index and value for every element in a Vec?", "body": "<p>This is a simple example to print the index and value of a vector:</p>\n\n<pre><code>fn main() {\n    let vec1 = vec![1, 2, 3, 4, 5];\n\n    println!(\"length is {}\", vec1.len());\n    for x in 0..vec1.len() {\n        println!(\"{} {}\", x, vec1[x]);\n    }\n}\n</code></pre>\n\n<p>This program output is -</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>length is 5\n0 1\n1 2\n2 3\n3 4\n4 5\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 23, "user_id": 11002310, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-BQTZ5P5Jk-U/AAAAAAAAAAI/AAAAAAAAACo/3qXjsFWNY60/photo.jpg?sz=128", "display_name": "Nadia", "link": "https://stackoverflow.com/users/11002310/nadia"}, "edited": false, "score": 0, "creation_date": 1551088347, "post_id": 54796452, "comment_id": 96497515, "body": "Brilliant. Thanks for your help."}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 10, "last_activity_date": 1551021134, "last_edit_date": 1592644375, "creation_date": 1550702712, "answer_id": 54796452, "question_id": 54795989, "link": "https://stackoverflow.com/questions/54795989/how-to-print-both-the-index-and-value-for-every-element-in-a-vec/54796452#54796452", "title": "How to print both the index and value for every element in a Vec?", "body": "<p>In the book you can see this line:</p>\n<pre><code>for (count, v) in vec.iter().enumerate()\n</code></pre>\n<p>If you look at the documentation, you can see a lot of useful functions for <code>Iterator</code> and <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.enumerate\" rel=\"noreferrer\"><code>enumerate</code></a>'s description states:</p>\n<blockquote>\n<p>Creates an iterator which gives the current iteration count as well as the next value.</p>\n<p>The iterator returned yields pairs <code>(i, val)</code>, where i is the current index of iteration and val is the value returned by the iterator.</p>\n<p><code>enumerate()</code> keeps its count as a <code>usize</code>. If you want to count by a different sized integer, the zip function provides similar functionality.</p>\n</blockquote>\n<p>With this, you have the index of each element in your vector. The simple way to do what you want is to use <code>count</code>:</p>\n<pre><code>write!(f, &quot;{}: {}&quot;, count, v)?;\n</code></pre>\n"}], "owner": {"reputation": 23, "user_id": 11002310, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-BQTZ5P5Jk-U/AAAAAAAAAAI/AAAAAAAAACo/3qXjsFWNY60/photo.jpg?sz=128", "display_name": "Nadia", "link": "https://stackoverflow.com/users/11002310/nadia"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2256, "favorite_count": 1, "accepted_answer_id": 54796452, "answer_count": 2, "score": 2, "last_activity_date": 1551021498, "creation_date": 1550700540, "last_edit_date": 1551021444, "question_id": 54795989, "link": "https://stackoverflow.com/questions/54795989/how-to-print-both-the-index-and-value-for-every-element-in-a-vec", "title": "How to print both the index and value for every element in a Vec?", "body": "<p>I'm trying to complete the activity at the bottom of <a href=\"https://doc.rust-lang.org/rust-by-example/hello/print/print_display/testcase_list.html\" rel=\"nofollow noreferrer\">this page</a>, where I need to print the index of each element as well as the value. I'm starting from the code</p>\n\n<pre><code>use std::fmt; // Import the `fmt` module.\n\n// Define a structure named `List` containing a `Vec`.\nstruct List(Vec&lt;i32&gt;);\n\nimpl fmt::Display for List {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        // Extract the value using tuple indexing\n        // and create a reference to `vec`.\n        let vec = &amp;self.0;\n\n        write!(f, \"[\")?;\n\n        // Iterate over `vec` in `v` while enumerating the iteration\n        // count in `count`.\n        for (count, v) in vec.iter().enumerate() {\n            // For every element except the first, add a comma.\n            // Use the ? operator, or try!, to return on errors.\n            if count != 0 { write!(f, \", \")?; }\n            write!(f, \"{}\", v)?;\n        }\n\n        // Close the opened bracket and return a fmt::Result value\n        write!(f, \"]\")\n    }\n}\n\nfn main() {\n    let v = List(vec![1, 2, 3]);\n    println!(\"{}\", v);\n}\n</code></pre>\n\n<p>I'm brand new to coding and I'm learning Rust by working my way through the Rust docs and Rust by Example. I'm totally stuck on this.</p>\n"}, {"tags": ["docker", "ubuntu", "rust", "ethereum", "arm64"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1550698312, "post_id": 54795503, "comment_id": 96369162, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/54795503/edit\">edit</a> your question to include it. <i>Questions seeking debugging help (&quot;why isn&#39;t this code working?&quot;) must include the desired behavior, a specific problem or error and <b>the shortest code necessary</b> to reproduce it <b>in the question itself</b>.</i> For Docker, I&#39;d expect that you&#39;d include the entire Dockerfile <i>in your question</i> (links are not good enough by themselves), but only after you&#39;ve removed all lines from it that don&#39;t cause the error."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1550698726, "post_id": 54795503, "comment_id": 96369320, "body": "<i>tried a few different suggestions from other Stack Overflow posts</i> \u2014 please tell us <b>what</b> you have tried so that we don&#39;t waste our time and yours by repeating something you&#39;ve already tried."}, {"owner": {"reputation": 939, "user_id": 6040245, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/62e4d268140d408beb7b69417990478a?s=128&d=identicon&r=PG&f=1", "display_name": "mattblack", "link": "https://stackoverflow.com/users/6040245/mattblack"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1550699285, "post_id": 54795503, "comment_id": 96369550, "body": "@Shepmaster thanks for your feedback. I have made some changes. Hopefully this is now a more detailed question. Thanks again."}, {"owner": {"reputation": 2106, "user_id": 7191047, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EWSwl.png?s=128&g=1", "display_name": "Danila Kiver", "link": "https://stackoverflow.com/users/7191047/danila-kiver"}, "edited": false, "score": 0, "creation_date": 1550705897, "post_id": 54795503, "comment_id": 96371761, "body": "@mattblak you still did not provide <i>minimal</i> (without useless steps) and <i>full</i> (usable via copy-paste) <code>Dockerfile</code> which fails for you. Just a suggestion for improvement. Anyway, I have few ideas/checks for troubleshooting."}, {"owner": {"reputation": 2106, "user_id": 7191047, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EWSwl.png?s=128&g=1", "display_name": "Danila Kiver", "link": "https://stackoverflow.com/users/7191047/danila-kiver"}, "edited": false, "score": 1, "creation_date": 1550705946, "post_id": 54795503, "comment_id": 96371768, "body": "(1) check that <code>docker inspect -f &#39;{{.Architecture}}&#39; ubuntu:14.04</code> matches your architecture. Just to be sure."}, {"owner": {"reputation": 2106, "user_id": 7191047, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EWSwl.png?s=128&g=1", "display_name": "Danila Kiver", "link": "https://stackoverflow.com/users/7191047/danila-kiver"}, "edited": false, "score": 1, "creation_date": 1550706096, "post_id": 54795503, "comment_id": 96371807, "body": "(2) before <code>RUN rustup target add</code>, add <code>RUN echo $PATH</code> and <code>RUN file &#47;root&#47;.cargo&#47;bin&#47;rustup</code>. Check that first command prints correct value of <code>PATH</code> (which should include <code>&#47;root&#47;.cargo&#47;bin</code>). If it does, please post the full output of the second command here."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 1, "creation_date": 1550734521, "post_id": 54795503, "comment_id": 96379817, "body": "Not related to your problem, but there is a discrepancy between <code>RUST_TARGETS</code> which targets <code>arm</code> machines and your <code>rustup</code> command line which tries to install an <code>armv7</code> target."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1550762504, "post_id": 54795503, "comment_id": 96397720, "body": "FWIW I have had issues building Parity in the past, and I found the devs on <a href=\"https://gitter.im/paritytech/parity\" rel=\"nofollow noreferrer\">their Gitter channel</a> to be very helpful."}, {"owner": {"reputation": 939, "user_id": 6040245, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/62e4d268140d408beb7b69417990478a?s=128&d=identicon&r=PG&f=1", "display_name": "mattblack", "link": "https://stackoverflow.com/users/6040245/mattblack"}, "reply_to_user": {"reputation": 2106, "user_id": 7191047, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EWSwl.png?s=128&g=1", "display_name": "Danila Kiver", "link": "https://stackoverflow.com/users/7191047/danila-kiver"}, "edited": false, "score": 0, "creation_date": 1550772733, "post_id": 54795503, "comment_id": 96403805, "body": "@DanilaKiver thanks for the feedback and your time helping me with this. This is the output:  Step 8/13 : RUN file /root/.cargo/bin/rustup  ---&gt; Running in f084cfdb7bde /root/.cargo/bin/rustup: ERROR: cannot open `/root/.cargo/bin/rustup&#39; (No such file or directory) The command &#39;/bin/sh -c file /root/.cargo/bin/rustup&#39; returned a non-zero code: 1"}, {"owner": {"reputation": 939, "user_id": 6040245, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/62e4d268140d408beb7b69417990478a?s=128&d=identicon&r=PG&f=1", "display_name": "mattblack", "link": "https://stackoverflow.com/users/6040245/mattblack"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1550775550, "post_id": 54795503, "comment_id": 96405182, "body": "Thanks @E4_net_or_something_like_that, I&#39;ll check it out. At this stage though I think the issue is rust/docker specific."}, {"owner": {"reputation": 2106, "user_id": 7191047, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EWSwl.png?s=128&g=1", "display_name": "Danila Kiver", "link": "https://stackoverflow.com/users/7191047/danila-kiver"}, "edited": false, "score": 0, "creation_date": 1550847883, "post_id": 54795503, "comment_id": 96434643, "body": "@mattblack probably in this case it would be a good idea to play with installer from <code>sh.rustup.rs</code> manually (run the image and perform the same installation process in the shell) to see what really happens and how (any failures or error messages, etc). It could be even better to run the installer script with <code>-x</code> option to have the precise information about the execution flow."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1551021902, "post_id": 54795503, "comment_id": 96478384, "body": "The Dockerfile that is <b>in your question</b> still is not a valid one. Dockerfiles that I have dealt with all start with <code>FROM</code> \u2014 it is not possible to copy and paste the code <b>in the question</b> and build it with Docker."}], "owner": {"reputation": 939, "user_id": 6040245, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/62e4d268140d408beb7b69417990478a?s=128&d=identicon&r=PG&f=1", "display_name": "mattblack", "link": "https://stackoverflow.com/users/6040245/mattblack"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 175, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1550699033, "creation_date": 1550698081, "last_edit_date": 1550699033, "question_id": 54795503, "link": "https://stackoverflow.com/questions/54795503/rust-issue-when-installing-parity-with-docker", "title": "Rust issue when installing Parity with Docker", "body": "<p>Currently getting the below error when trying to install Parity with Docker on Ubuntu/ARM64:</p>\n\n<blockquote>\n  <p>Step 7/11 : RUN rustup target add armv7-unknown-linux-gnueabihf  --->\n  Running in 277ab1234a23 /bin/sh: 1: rustup: not found The command\n  '/bin/sh -c rustup target add armv7-unknown-linux-gnueabihf' returned\n  a non-zero code: 127</p>\n</blockquote>\n\n<p>I can't figure out how to resolve this issue and it is stopping the Dockerfile from being setup.</p>\n\n<p>This is the Dockerfile I am using: <a href=\"https://github.com/paritytech/parity-snappy/blob/master/Dockerfile\" rel=\"nofollow noreferrer\">https://github.com/paritytech/parity-snappy/blob/master/Dockerfile</a></p>\n\n<p>The exact lines of code that lead to this error are following. It errors on the last line.</p>\n\n<pre><code># install rustup\nRUN curl https://sh.rustup.rs -sSf | sh -s -- -y\n\n# rustup directory\nENV PATH /root/.cargo/bin:$PATH\n\nENV RUST_TARGETS=\"arm-unknown-linux-gnueabihf\"\n\n# multirust add arm--linux-gnuabhf toolchain\nRUN rustup target add armv7-unknown-linux-gnueabihf\n</code></pre>\n\n<p>I have tried a few different suggestions from other Stack Overflow posts (such as <a href=\"https://stackoverflow.com/questions/49676490/when-installing-rust-toolchain-in-docker-bash-source-command-doesnt-work\">When installing Rust toolchain in Docker, Bash `source` command doesn&#39;t work</a>), but have had no luck.</p>\n\n<p>I have Docker for linux/arm64.<br>\nSystem architecture below:</p>\n\n<blockquote>\n  <p>Linux jetson-0423318029408 4.9.108-tegra #1 SMP PREEMPT Wed Oct 31 15:17:21 PDT 2018 aarch64 aarch64 aarch64 GNU/Linux</p>\n</blockquote>\n\n<p>Any help resolving this would be appreciated.</p>\n\n<p>Thanks.</p>\n"}, {"tags": ["generics", "rust", "generic-programming"], "answers": [{"comments": [{"owner": {"reputation": 975, "user_id": 7687388, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Xhm3T.png?s=128&g=1", "display_name": "CodeSandwich", "link": "https://stackoverflow.com/users/7687388/codesandwich"}, "edited": false, "score": 0, "creation_date": 1550686822, "post_id": 54792178, "comment_id": 96363767, "body": "This makes &quot;regular&quot; generics just a syntax sugar over generic associated type, doesn&#39;t it? I&#39;m slightly surprised that Rust is trying to introduce a second way to express the same thing, it&#39;s usually avoided wherever possible."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 975, "user_id": 7687388, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Xhm3T.png?s=128&g=1", "display_name": "CodeSandwich", "link": "https://stackoverflow.com/users/7687388/codesandwich"}, "edited": false, "score": 1, "creation_date": 1550687099, "post_id": 54792178, "comment_id": 96363926, "body": "@CodeSandwich I&#39;m not sure I follow. Is <code>struct Foo</code> &quot;syntax sugar&quot; over <code>struct Foo&lt;T&gt;</code>?"}, {"owner": {"reputation": 975, "user_id": 7687388, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Xhm3T.png?s=128&g=1", "display_name": "CodeSandwich", "link": "https://stackoverflow.com/users/7687388/codesandwich"}, "edited": false, "score": 0, "creation_date": 1550687410, "post_id": 54792178, "comment_id": 96364099, "body": "<code>trait Foo&lt;T&gt; {}</code> is syntax sugar over <code>trait Foo { type T; }</code> when GATs are implemented in the final form"}, {"owner": {"reputation": 1101, "user_id": 8715470, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Dlyj0.jpg?s=128&g=1", "display_name": "Zarenor", "link": "https://stackoverflow.com/users/8715470/zarenor"}, "edited": false, "score": 1, "creation_date": 1550689357, "post_id": 54792178, "comment_id": 96365055, "body": "That&#39;s... not quite accurate. Associated types allow the <i>trait implementor</i> to choose a type, which the trait then operates over. Generic types allow the <i>callee</i> to choose a type, which the trait operates over. The distinction about who chooses, and when, is core to the difference here. See the Q&amp;A <a href=\"https://stackoverflow.com/questions/32059370/when-is-it-appropriate-to-use-an-associated-type-versus-a-generic-type\">here</a> for more"}, {"owner": {"reputation": 1101, "user_id": 8715470, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Dlyj0.jpg?s=128&g=1", "display_name": "Zarenor", "link": "https://stackoverflow.com/users/8715470/zarenor"}, "edited": false, "score": 1, "creation_date": 1550689591, "post_id": 54792178, "comment_id": 96365163, "body": "GAT&#39;s allow <i>trait author</i> to require <i>implementors</i> to choose a <i>generic</i> type which meets certain constraints - this solves a number of issues that have come up as limitations of the current system - two examples are discussed in the answer."}, {"owner": {"reputation": 975, "user_id": 7687388, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Xhm3T.png?s=128&g=1", "display_name": "CodeSandwich", "link": "https://stackoverflow.com/users/7687388/codesandwich"}, "edited": false, "score": 0, "creation_date": 1550713898, "post_id": 54792178, "comment_id": 96373555, "body": "But if trait author requires implementor to choose generic type which meets no constraints (e.g. <code>trait Foo { type T; }</code>) then implementor is free to allow callee to choose a type (e.g. <code>impl&lt;T&gt; Foo for Bar { type T = T; }</code>), which behaves same as regular generics (e.g. <code>trait Foo&lt;T&gt; {}</code>). It makes regular generics an edge case of GATs. Is this reasoning correct?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 975, "user_id": 7687388, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Xhm3T.png?s=128&g=1", "display_name": "CodeSandwich", "link": "https://stackoverflow.com/users/7687388/codesandwich"}, "edited": false, "score": 2, "creation_date": 1550753846, "post_id": 54792178, "comment_id": 96391636, "body": "@CodeSandwich <code>impl&lt;T&gt; Foo for Bar { ... }</code> is always incorrect and there is nothing, GAT-related or otherwise, that you can put in the <code>...</code> to make it compile. Lukas&#39;s answer explains why. In GATs the <code>impl</code> is <i>not</i> generic, the associated type <i>itself</i> is."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 10, "last_activity_date": 1550686201, "last_edit_date": 1550686201, "creation_date": 1550683850, "answer_id": 54792178, "question_id": 54791718, "link": "https://stackoverflow.com/questions/54791718/whats-the-difference-between-a-traits-generic-type-and-a-generic-associated-ty/54792178#54792178", "title": "What&#39;s the difference between a trait&#39;s generic type and a generic associated type?", "body": "<h1>What's the difference?</h1>\n\n<p>Generic Associate Types (GATs) are <em>associated types</em> which are themselves <em>generic</em>. The RFC starts with a <a href=\"https://rust-lang.github.io/rfcs/1598-generic_associated_types.html#motivation\" rel=\"noreferrer\">motivating example</a>, emphasis mine:</p>\n\n<blockquote>\n  <p>Consider the following trait as a representative motivating example:</p>\n\n<pre><code>trait StreamingIterator {\n    type Item&lt;'a&gt;;\n    fn next&lt;'a&gt;(&amp;'a mut self) -&gt; Option&lt;Self::Item&lt;'a&gt;&gt;;\n}\n</code></pre>\n  \n  <p>This trait is very useful - it allows for a kind of Iterator which\n  yields values which have a lifetime tied to the lifetime of the\n  reference passed to <code>next</code>. A particular obvious use case for this\n  trait would be an iterator over a vector which yields overlapping,\n  mutable subslices with each iteration. Using the standard <code>Iterator</code>\n  interface, such an implementation would be invalid, because each\n  slice would be required to exist for as long as the iterator, rather\n  than for as long as the borrow initiated by <code>next</code>.</p>\n  \n  <p><strong>This trait cannot be expressed in Rust as it exists today</strong>, because\n  it depends on a sort of higher-kinded polymorphism. This RFC would\n  extend Rust to include that specific form of higher-kinded\n  polymorphism, which is refered to here as associated type\n  constructors. This feature has a number of applications, but the\n  primary application is along the same lines as the\n  <code>StreamingIterator</code> trait: defining traits which yield types which have\n  a lifetime tied to the local borrowing of the receiver type.</p>\n</blockquote>\n\n<p>Note how the associated type <code>Item</code> has a generic lifetime <code>'a</code>. Most examples in the RFC use lifetimes, but there's also <a href=\"https://rust-lang.github.io/rfcs/1598-generic_associated_types.html#associated-type-constructors-of-type-arguments\" rel=\"noreferrer\">an example using a generic type</a>:</p>\n\n<blockquote>\n<pre><code>trait PointerFamily {\n    type Pointer&lt;T&gt;: Deref&lt;Target = T&gt;;\n    fn new&lt;T&gt;(value: T) -&gt; Self::Pointer&lt;T&gt;;\n}\n</code></pre>\n</blockquote>\n\n<p>Note how the associated type <code>Pointer</code> has a generic type <code>T</code>.</p>\n\n<h1>Your specific example</h1>\n\n<blockquote>\n  <p>what is the difference between <code>Generic</code> from the previous example and this generic associated type</p>\n</blockquote>\n\n<p>There may be none, and the existence of GATs would not help your case, which does not seem to require an associated type which is itself generic.</p>\n"}, {"comments": [{"owner": {"reputation": 429, "user_id": 5081997, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-GmesG-HGk2A/AAAAAAAAAAI/AAAAAAAACLI/lmInTd8OR3A/photo.jpg?sz=128", "display_name": "cotigao", "link": "https://stackoverflow.com/users/5081997/cotigao"}, "edited": false, "score": 0, "creation_date": 1578649200, "post_id": 54803174, "comment_id": 105515456, "body": "about the second point that you mentioned <code>fn count&lt;I: for&lt;&#39;a&gt; Iterator&lt;&#39;a&gt;&gt;(it: I)</code> \u2014 Could you please provide an example on how it would fail for being restrictive (i.e secret <code>&#39;static</code> bound)?"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 429, "user_id": 5081997, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-GmesG-HGk2A/AAAAAAAAAAI/AAAAAAAACLI/lmInTd8OR3A/photo.jpg?sz=128", "display_name": "cotigao", "link": "https://stackoverflow.com/users/5081997/cotigao"}, "edited": false, "score": 0, "creation_date": 1578649861, "post_id": 54803174, "comment_id": 105515821, "body": "@cotigao I describe the limitation in more detail <a href=\"http://lukaskalbertodt.github.io/2018/08/03/solving-the-generalized-streaming-iterator-problem-without-gats.html#disadvantages\" rel=\"nofollow noreferrer\">in this blog post</a> (link has an anchor to the correct section). In short: if you want to have your item be a reference to a generic with the iterator lifetime (i.e. <code>impl&lt;&#39;s, T&gt; Iterator&lt;&#39;s&gt; for ... { type Item = &amp;&#39;s T; }</code>), you have to bound <code>T: &#39;s</code>. Otherwise Rust won&#39;t let you write that reference type. And the bounds <code>for&lt;&#39;a&gt; I: Iterator&lt;&#39;a&gt;</code> plus <code>T: &#39;s</code> lead to <code>T: &#39;static</code>. I hope that helps!"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 429, "user_id": 5081997, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-GmesG-HGk2A/AAAAAAAAAAI/AAAAAAAACLI/lmInTd8OR3A/photo.jpg?sz=128", "display_name": "cotigao", "link": "https://stackoverflow.com/users/5081997/cotigao"}, "edited": false, "score": 0, "creation_date": 1578650330, "post_id": 54803174, "comment_id": 105516078, "body": "@cotigao Oh and you can see a concrete example <a href=\"https://play.rust-lang.org/?gist=b366685a47e465b1baa4d25df9c0dadd&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">in this playground</a> (also linked in the blog post). At the very bottom we cannot pass the <code>WindowMut</code> iterator to <code>count</code> because <code>T</code> is not <code>&#39;static</code>."}, {"owner": {"reputation": 429, "user_id": 5081997, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-GmesG-HGk2A/AAAAAAAAAAI/AAAAAAAACLI/lmInTd8OR3A/photo.jpg?sz=128", "display_name": "cotigao", "link": "https://stackoverflow.com/users/5081997/cotigao"}, "edited": false, "score": 0, "creation_date": 1578662306, "post_id": 54803174, "comment_id": 105521829, "body": "Thanks for the post!  One question: Quoting from your article; &quot; <code>for&lt;&#39;s&gt; T: &#39;s</code> <i>which is equivalent to</i> <code>T:&#39;static</code> &quot; \u2e3a Is it equal because the iterator borrows  <code>T</code> indirectly  (i.e via the slice that itself borrows the elements with a lifetime of <code>&#39;a</code>) ?"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 429, "user_id": 5081997, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-GmesG-HGk2A/AAAAAAAAAAI/AAAAAAAACLI/lmInTd8OR3A/photo.jpg?sz=128", "display_name": "cotigao", "link": "https://stackoverflow.com/users/5081997/cotigao"}, "edited": false, "score": 0, "creation_date": 1578665045, "post_id": 54803174, "comment_id": 105523283, "body": "@cotigao I&#39;m not sure I understand your question. <code>for&lt;&#39;s&gt; B</code> means &quot;for all possible lifetimes, the bound B has to hold&quot;. This statement also includes &quot;B has to hold for <code>&#39;static</code>&quot;, right? Because that is &quot;a possible lifetime&quot;. And since <code>&#39;static</code> in a sense &quot;includes&quot; all other lifetimes, the two bounds are equivalent."}, {"owner": {"reputation": 429, "user_id": 5081997, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-GmesG-HGk2A/AAAAAAAAAAI/AAAAAAAACLI/lmInTd8OR3A/photo.jpg?sz=128", "display_name": "cotigao", "link": "https://stackoverflow.com/users/5081997/cotigao"}, "edited": false, "score": 0, "creation_date": 1578755819, "post_id": 54803174, "comment_id": 105546315, "body": "I have tried to come up with a minimal <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=579672382ad2565a8f299eea144d1818\" rel=\"nofollow noreferrer\">version</a>.  What is the difference between <code>test</code> and <code>test2</code> ? The former expects that the concrete type <b>has to have only</b> <code>&#39;static</code> references, where as the latter says that the trait <code>Trait&lt;&#39;s&gt;</code> is implemented for all possible (i.e <code>&#39;s</code>) lifetimes and accordingly anyone is picked ?  I am a bit confused, as I thought of them the same."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 429, "user_id": 5081997, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-GmesG-HGk2A/AAAAAAAAAAI/AAAAAAAACLI/lmInTd8OR3A/photo.jpg?sz=128", "display_name": "cotigao", "link": "https://stackoverflow.com/users/5081997/cotigao"}, "edited": false, "score": 0, "creation_date": 1578756529, "post_id": 54803174, "comment_id": 105546500, "body": "@cotigao That&#39;s a good question. I&#39;d be great if you could ask a &quot;proper&quot; (i.e. a post) question here on SO, as this comment section is likely too small for a full explanation. But to be clear: I&#39;m not sure of the explanation right now. HRTBs are not trivial."}, {"owner": {"reputation": 429, "user_id": 5081997, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-GmesG-HGk2A/AAAAAAAAAAI/AAAAAAAACLI/lmInTd8OR3A/photo.jpg?sz=128", "display_name": "cotigao", "link": "https://stackoverflow.com/users/5081997/cotigao"}, "edited": false, "score": 0, "creation_date": 1578811293, "post_id": 54803174, "comment_id": 105556465, "body": "Thanks! I have <a href=\"https://stackoverflow.com/questions/59701560/hrtb-concrete-type-bounded-by-a-trait-containing-lifetime-type-parameter-vs-bou\">posted</a> a separate question"}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 12, "last_activity_date": 1550740220, "creation_date": 1550740220, "answer_id": 54803174, "question_id": 54791718, "link": "https://stackoverflow.com/questions/54791718/whats-the-difference-between-a-traits-generic-type-and-a-generic-associated-ty/54803174#54803174", "title": "What&#39;s the difference between a trait&#39;s generic type and a generic associated type?", "body": "<p>Let's take a look at your last example again (shortened by me):</p>\n\n<pre><code>trait GenericAssociated {\n    type GenericAssociated;\n}\n\nimpl&lt;G&gt; GenericAssociated for Struct {\n    type GenericAssociated = G;\n}\n</code></pre>\n\n<p>This does <strong>not</strong> feature generic associated types! You are just having a generic type on your <code>impl</code> block which you assign to the associated type. Mh, ok, I can see where the confusion comes from.</p>\n\n<p>Your example errors with \"the type parameter <code>G</code> is not constrained by the impl trait, self type, or predicates\". This won't change when GATs are implemented, because, again, this has nothing to do with GATs. </p>\n\n<p>Using GATs in your example could look like this:</p>\n\n<pre><code>trait Associated {\n    type Associated&lt;T&gt;; // &lt;-- note the `&lt;T&gt;`! The type itself is \n                        //     generic over another type!\n\n    // Here we can use our GAT with different concrete types \n    fn user_choosen&lt;X&gt;(&amp;self, v: X) -&gt; Self::Associated&lt;X&gt;;\n    fn fixed(&amp;self, b: bool) -&gt; Self::Associated&lt;bool&gt;;\n}\n\nimpl Associated for Struct {\n    // When assigning a type, we can use that generic parameter `T`. So in fact,\n    // we are only assigning a type constructor.\n    type Associated&lt;T&gt; = Option&lt;T&gt;;\n\n    fn user_choosen&lt;X&gt;(&amp;self, v: X) -&gt; Self::Associated&lt;X&gt; {\n        Some(x)\n    }\n    fn fixed(&amp;self, b: bool) -&gt; Self::Associated&lt;bool&gt; {\n        Some(b)\n    }\n}\n\nfn main() {\n    Struct.user_choosen(1);    // results in `Option&lt;i32&gt;`\n    Struct.user_choosen(\"a\");  // results in `Option&lt;&amp;str&gt;`\n    Struct.fixed(true);        // results in `Option&lt;bool&gt;`\n    Struct.fixed(1);           // error\n}\n</code></pre>\n\n<hr>\n\n<p>But to answer you main question:</p>\n\n<blockquote>\n  <p>What's the difference between a trait's generic type and a generic associated type?</p>\n</blockquote>\n\n<p>In short: <strong>they allow to delay the application of the concrete type (or lifetime) which makes the whole type system more powerful.</strong></p>\n\n<p>There are many motivational examples in <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1598-generic_associated_types.md\" rel=\"noreferrer\">the RFC</a>, most notably the streaming iterator and the pointer family example. Let's quickly see why the streaming iterator cannot be implemented with generics on the trait.</p>\n\n<p>The GAT version of the streaming iterator looks like this:</p>\n\n<pre><code>trait Iterator {\n    type Item&lt;'a&gt;;\n    fn next(&amp;self) -&gt; Option&lt;Self::Item&lt;'_&gt;&gt;;\n}\n</code></pre>\n\n<p>In current Rust, we could put the lifetime parameter on the trait instead of the associated type:</p>\n\n<pre><code>trait Iterator&lt;'a&gt; {\n    type Item;\n    fn next(&amp;'a self) -&gt; Option&lt;Self::Item&gt;;\n}\n</code></pre>\n\n<p>So far so good: all iterators can implement this trait as before. But what if we want to use it?</p>\n\n<pre><code>fn count&lt;I: Iterator&lt;'???&gt;&gt;(it: I) -&gt; usize {\n    let mut count = 0;\n    while let Some(_) = it.next() {\n        count += 1;\n    }\n    count\n}\n</code></pre>\n\n<p>What lifetime are we supposed to annotate? Apart from annotating the <code>'static</code> lifetime, we have two choices:</p>\n\n<ul>\n<li><code>fn count&lt;'a, I: Iterator&lt;'a&gt;&gt;(it: I)</code>: this won't work because generic types of a function are choosen by the caller. But the <code>it</code> (which will become <code>self</code> in the <code>next</code> call) lives in <em>our</em> stack frame. This means that the lifetime of <code>it</code> is not known to the caller. Thus we get a compiler (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=74d2e5b037c73470b0c5fb6a03ab4451\" rel=\"noreferrer\">Playground</a>). This is not an option.</li>\n<li><code>fn count&lt;I: for&lt;'a&gt; Iterator&lt;'a&gt;&gt;(it: I)</code> (using HRTBs): this seems to work, but it has subtle problems. Now we require <code>I</code> to implement <code>Iterator</code> for <em>any</em> lifetime <code>'a</code>. This is not a problem with many iterators, but some iterators return items that don't life forever and thus they cannot implement <code>Iterator</code> for <em>any</em> lifetime -- just lifetimes shorter than their item. Using these higher ranked trait bounds often leads to secret <code>'static</code> bounds which are very restricting. So this also doesn't always work.</li>\n</ul>\n\n<p>As you can see: we cannot properly write down the bound of <code>I</code>. And actually, we don't even want to mention the lifetime in the <code>count</code> function's signature! It shouldn't be necessary. And that's exactly what GATs allow us to do (among other things). With GATs we could write:</p>\n\n<pre><code>fn count&lt;I: Iterator&gt;(it: I) { ... }\n</code></pre>\n\n<p>And it would work. Because the \"application of a concrete lifetime\" only happens when we call <code>next</code>.</p>\n\n<p>If you are interested in even more information, you can take a look at <a href=\"http://lukaskalbertodt.github.io/2018/08/03/solving-the-generalized-streaming-iterator-problem-without-gats.html\" rel=\"noreferrer\">my blog post \u201c\u2009Solving the Generalized Streaming Iterator Problem without GATs\u201d</a> where I try using generic types on traits to work around the lack of GATs. And (spoiler): it usually doesn't work.</p>\n"}], "owner": {"reputation": 975, "user_id": 7687388, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Xhm3T.png?s=128&g=1", "display_name": "CodeSandwich", "link": "https://stackoverflow.com/users/7687388/codesandwich"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1484, "favorite_count": 1, "accepted_answer_id": 54803174, "answer_count": 2, "score": 8, "last_activity_date": 1550740220, "creation_date": 1550682072, "last_edit_date": 1550683930, "question_id": 54791718, "link": "https://stackoverflow.com/questions/54791718/whats-the-difference-between-a-traits-generic-type-and-a-generic-associated-ty", "title": "What&#39;s the difference between a trait&#39;s generic type and a generic associated type?", "body": "<p>This question is asked before generic associated types are available in Rust, although they are <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1598-generic_associated_types.md\" rel=\"nofollow noreferrer\">proposed</a> and <a href=\"https://github.com/rust-lang/rust/issues/44265\" rel=\"nofollow noreferrer\">developed</a>.</p>\n\n<p>My understanding is that trait generics and associated types differ in the number of types which they can bind to a struct.</p>\n\n<p><strong>Generics</strong> can bind any number of types:</p>\n\n<pre><code>struct Struct;\n\ntrait Generic&lt;G&gt; {\n    fn generic(&amp;self, generic: G);\n}\n\nimpl&lt;G&gt; Generic&lt;G&gt; for Struct {\n    fn generic(&amp;self, _: G) {}\n}\n\nfn main() {\n    Struct.generic(1);\n    Struct.generic(\"a\");\n}\n</code></pre>\n\n<p><strong>Associated types</strong> bind exactly 1 type:</p>\n\n<pre><code>struct Struct;\n\ntrait Associated {\n    type Associated;\n\n    fn associated(&amp;self, associated: Self::Associated);\n}\n\nimpl Associated for Struct {\n    type Associated = u32;\n\n    fn associated(&amp;self, _: Self::Associated) {}\n}\n\nfn main() {\n    Struct.associated(1);\n    // Struct.associated(\"a\"); // `expected u32, found reference`\n}\n</code></pre>\n\n<p><strong>Generic associated types</strong> are a mix of these two. They bind to a type exactly 1 associated generator, which in turn can associate any number of types. Then what is the difference between <code>Generic</code> from the previous example and this generic associated type?</p>\n\n<pre><code>struct Struct;\n\ntrait GenericAssociated {\n    type GenericAssociated;\n\n    fn associated(&amp;self, associated: Self::GenericAssociated);\n}\n\nimpl&lt;G&gt; GenericAssociated for Struct {\n    type GenericAssociated = G;\n\n    fn associated(&amp;self, _: Self::GenericAssociated) {}\n}\n</code></pre>\n"}, {"tags": ["rust", "nom"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1550679536, "post_id": 54790503, "comment_id": 96359908, "body": "Why not just use an existing Redis crate?"}, {"owner": {"reputation": 13, "user_id": 11091076, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-Py0dDW2FYHc/AAAAAAAAAAI/AAAAAAAAAAA/ccHmdfR0llI/photo.jpg?sz=128", "display_name": "Chuanlei Ni", "link": "https://stackoverflow.com/users/11091076/chuanlei-ni"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1550721782, "post_id": 54790503, "comment_id": 96375447, "body": "just for learn how to write a parser using nom"}], "answers": [{"tags": [], "owner": {"reputation": 8789, "user_id": 539465, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/2acba600ecfbe1cc2e7f3c94b686ac84?s=128&d=identicon&r=PG", "display_name": "Valentin Lorentz", "link": "https://stackoverflow.com/users/539465/valentin-lorentz"}, "is_accepted": true, "score": 1, "last_activity_date": 1550680615, "last_edit_date": 1550680615, "creation_date": 1550680352, "answer_id": 54791163, "question_id": 54790503, "link": "https://stackoverflow.com/questions/54790503/how-to-parse-the-redis-resp-bulk-string-using-nom/54791163#54791163", "title": "How to parse the Redis RESP bulk string using nom?", "body": "<p>Macros like <code>take!</code> need an \"implicit\" argument in the first position: the string to be parsed. Usually you don't see it, because it is passed implicitly when it's nested inside another nom macro.</p>\n\n<p>However, here, you're \"calling\" it directly, so it needs this argument explicitly.</p>\n\n<p>Instead you could do something like this:</p>\n\n<pre><code>named!(get_bulk_string&lt;&amp;str, &amp;str&gt;,\n   do_parse!(\n      tag!(\"$\") &gt;&gt;\n      len: signed_integer &gt;&gt;\n      string: take!(len) &gt;&gt;\n      tag!(\"\\r\\n\") &gt;&gt;\n      (string)\n   )\n);\n</code></pre>\n\n<p>Of course, this ignores the <code>-1</code> case, which you can handle with a switch:</p>\n\n<pre><code>named!(get_bulk_string&lt;&amp;str, Option&lt;&amp;str&gt;&gt;,\n   do_parse!(\n      tag!(\"$\") &gt;&gt;\n      string: switch!(signed_integer,\n        -1 =&gt; map!(take!(0), |_| None) |\n        _ =&gt; map!(take!(42), |s| Some(s))\n      ) &gt;&gt;\n      tag!(\"\\r\\n\") &gt;&gt;\n      (string)\n   )\n);\n</code></pre>\n"}], "owner": {"reputation": 13, "user_id": 11091076, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-Py0dDW2FYHc/AAAAAAAAAAI/AAAAAAAAAAA/ccHmdfR0llI/photo.jpg?sz=128", "display_name": "Chuanlei Ni", "link": "https://stackoverflow.com/users/11091076/chuanlei-ni"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 156, "favorite_count": 0, "accepted_answer_id": 54791163, "answer_count": 1, "score": 1, "last_activity_date": 1550680779, "creation_date": 1550678408, "last_edit_date": 1550680779, "question_id": 54790503, "link": "https://stackoverflow.com/questions/54790503/how-to-parse-the-redis-resp-bulk-string-using-nom", "title": "How to parse the Redis RESP bulk string using nom?", "body": "<p>I need use nom to parse a <a href=\"https://redis.io/topics/protocol\" rel=\"nofollow noreferrer\">RESP</a>  request/reply. When I come to bulk-string, such as </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>\"$6\\r\\nfoobar\\r\\n\"\n</code></pre>\n\n<p>or </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$-1\\r\\n\n</code></pre>\n\n<p>First, I write functions to extract the <strong>len</strong> from the data.</p>\n\n<pre><code>named!(signed_digits&lt;&amp;str, (Option&lt;&amp;str&gt;, &amp;str)&gt;,\n   pair!(\n      opt!(alt!(tag!(\"+\") | tag!(\"-\"))),\n      nom::digit\n   )\n);\n\nnamed!(signed_integer&lt;&amp;str, i64&gt;,\n   map_res!(recognize!(signed_digits), FromStr::from_str)\n);\n\nnamed!(get_len_in_bulk_string&lt;&amp;str, i64&gt;,\n   do_parse!(\n      tag!(\"$\") &gt;&gt;\n      len: signed_integer &gt;&gt;\n      tag!(\"\\r\\n\") &gt;&gt;\n      (len)\n   )\n);\n</code></pre>\n\n<p>Then I get the raw string according to the <strong>len</strong>:</p>\n\n<pre><code>named!(parse_bulk_string&lt;&amp;str, Record&gt;,\n  map_res!(gen_len_in_bulk_string, |n|{\n    if n &lt; 0 {\n        Record::BulkString(None)\n    } else {\n        Record::BulkString(Some(take!(n)))\n    }\n  })\n);\n</code></pre>\n\n<p>But I get a compile error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Record::BulkString(Some(take!(n)))\n                             ^ missing tokens in macro arguments\n</code></pre>\n\n<p>How can I get the raw string according the <strong>len</strong> which is extracted from the text before? It seems like I cannot use <code>take!</code> in my own closure.</p>\n"}, {"tags": ["rust", "hyper", "xz"], "answers": [{"comments": [{"owner": {"reputation": 275, "user_id": 3832536, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/57952d51e8c2c0b7b93392a1775a534b?s=128&d=identicon&r=PG&f=1", "display_name": "mephi42", "link": "https://stackoverflow.com/users/3832536/mephi42"}, "edited": false, "score": 0, "creation_date": 1550800047, "post_id": 54810306, "comment_id": 96413426, "body": "Thanks, this worked! <a href=\"https://github.com/mephi42/index-repo/blob/2da8bbf6143c9013b906c059284dd09b83b258d1/src/decoders.rs#L61-L91\" rel=\"nofollow noreferrer\">Here</a> is what I ended up with."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 275, "user_id": 3832536, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/57952d51e8c2c0b7b93392a1775a534b?s=128&d=identicon&r=PG&f=1", "display_name": "mephi42", "link": "https://stackoverflow.com/users/3832536/mephi42"}, "edited": false, "score": 1, "creation_date": 1551021595, "post_id": 54810306, "comment_id": 96478307, "body": "@mephi42 Please post that code as a separate answer. Comments are extremely transient."}], "tags": [], "owner": {"reputation": 1291, "user_id": 6331045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/189f94db303d16b891800f11846bd753?s=128&d=identicon&r=PG&f=1", "display_name": "Laney", "link": "https://stackoverflow.com/users/6331045/laney"}, "is_accepted": true, "score": 1, "last_activity_date": 1551021613, "last_edit_date": 1551021613, "creation_date": 1550761860, "answer_id": 54810306, "question_id": 54789749, "link": "https://stackoverflow.com/questions/54789749/how-to-decompress-xz-data-from-a-hyperresponse-on-the-fly/54810306#54810306", "title": "How to decompress XZ data from a hyper::Response on the fly?", "body": "<blockquote>\n  <p><code>XzDecoder</code> does not seem to support a Python-like decompressobj model, where a caller repeatedly feeds partial input and gets partial output  </p>\n</blockquote>\n\n<p>there's <a href=\"https://docs.rs/xz2/0.1.6/xz2/stream/struct.Stream.html\" rel=\"nofollow noreferrer\"><code>xz2::stream::Stream</code></a> which does exactly what you want. Very rough untested code, needs proper error handling, etc, but I hope you'll get the idea:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn process(body: hyper::body::Body) {\n    let mut decoder = xz2::stream::Stream::new_stream_decoder(1000, 0).unwrap();\n    body.for_each(|chunk| {\n        let mut buf: Vec&lt;u8&gt; = Vec::new();\n        if let Ok(_) = decoder.process_vec(&amp;chunk, &amp;mut buf, Action::Run) {\n            // write buf to disk\n        }\n        Ok(())\n    }).wait().unwrap();\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 275, "user_id": 3832536, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/57952d51e8c2c0b7b93392a1775a534b?s=128&d=identicon&r=PG&f=1", "display_name": "mephi42", "link": "https://stackoverflow.com/users/3832536/mephi42"}, "is_accepted": false, "score": 1, "last_activity_date": 1551038185, "creation_date": 1551038185, "answer_id": 54855912, "question_id": 54789749, "link": "https://stackoverflow.com/questions/54789749/how-to-decompress-xz-data-from-a-hyperresponse-on-the-fly/54855912#54855912", "title": "How to decompress XZ data from a hyper::Response on the fly?", "body": "<p>Based on <a href=\"https://stackoverflow.com/a/54810306/3832536\">@Laney's answer</a>, I came up with the following working code:</p>\n\n<pre><code>extern crate failure;\nextern crate hyper;\nextern crate tokio;\nextern crate xz2;\n\nuse std::fs::File;\nuse std::io::Write;\nuse std::u64;\n\nuse failure::Error;\nuse futures::future::done;\nuse futures::stream::Stream;\nuse hyper::{Body, Chunk, Response};\nuse hyper::rt::Future;\nuse hyper_tls::HttpsConnector;\nuse tokio::runtime::Runtime;\n\nfn decode_chunk(file: &amp;mut File, xz: &amp;mut xz2::stream::Stream, chunk: &amp;Chunk)\n                -&gt; Result&lt;(), Error&gt; {\n    let end = xz.total_in() as usize + chunk.len();\n    let mut buf = Vec::with_capacity(8192);\n    while (xz.total_in() as usize) &lt; end {\n        buf.clear();\n        xz.process_vec(\n            &amp;chunk[chunk.len() - (end - xz.total_in() as usize)..],\n            &amp;mut buf,\n            xz2::stream::Action::Run)?;\n        file.write_all(&amp;buf)?;\n    }\n    Ok(())\n}\n\nfn decode_response(mut file: File, response: Response&lt;Body&gt;)\n                   -&gt; impl Future&lt;Item=(), Error=Error&gt; {\n    done(xz2::stream::Stream::new_stream_decoder(u64::MAX, 0)\n        .map_err(Error::from))\n        .and_then(|mut xz| response\n            .into_body()\n            .map_err(Error::from)\n            .for_each(move |chunk| done(\n                decode_chunk(&amp;mut file, &amp;mut xz, &amp;chunk))))\n}\n\nfn main() -&gt; Result&lt;(), Error&gt; {\n    let client = hyper::Client::builder().build::&lt;_, hyper::Body&gt;(\n        HttpsConnector::new(1)?);\n    let file = File::create(\"hello-2.7.tar\")?;\n    let mut runtime = Runtime::new()?;\n    runtime.block_on(client\n        .get(\"https://ftp.gnu.org/gnu/hello/hello-2.7.tar.xz\".parse()?)\n        .map_err(Error::from)\n        .and_then(|response| decode_response(file, response)))?;\n    runtime.shutdown_now();\n    Ok(())\n}\n</code></pre>\n"}], "owner": {"reputation": 275, "user_id": 3832536, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/57952d51e8c2c0b7b93392a1775a534b?s=128&d=identicon&r=PG&f=1", "display_name": "mephi42", "link": "https://stackoverflow.com/users/3832536/mephi42"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 221, "favorite_count": 0, "accepted_answer_id": 54810306, "answer_count": 2, "score": 2, "last_activity_date": 1551038185, "creation_date": 1550676227, "last_edit_date": 1550679921, "question_id": 54789749, "link": "https://stackoverflow.com/questions/54789749/how-to-decompress-xz-data-from-a-hyperresponse-on-the-fly", "title": "How to decompress XZ data from a hyper::Response on the fly?", "body": "<p>I'm downloading an XZ file with <a href=\"https://crates.io/crates/hyper\" rel=\"nofollow noreferrer\">hyper</a>, and I would like to save it to disk in decompressed form by extracting as much as possible from each incoming <a href=\"https://docs.rs/hyper/0.12.24/hyper/struct.Chunk.html\" rel=\"nofollow noreferrer\"><code>Chunk</code></a> and writing results to disk immediately, as opposed to first downloading the entire file and then decompressing.</p>\n\n<p>There is the <a href=\"https://crates.io/crates/xz2\" rel=\"nofollow noreferrer\">xz2</a> crate that implements the XZ format. However, its <a href=\"https://docs.rs/xz2/0.1.6/xz2/read/struct.XzDecoder.html\" rel=\"nofollow noreferrer\"><code>XzDecoder</code></a> does not seem to support a <a href=\"https://docs.python.org/2/library/zlib.html#zlib.Decompress.decompress\" rel=\"nofollow noreferrer\">Python-like <code>decompressobj</code></a> model, where a caller repeatedly feeds partial input and gets partial output.</p>\n\n<p>Instead, <code>XzDecoder</code> receives input bytes via a <a href=\"https://doc.rust-lang.org/std/io/trait.Read.html\" rel=\"nofollow noreferrer\"><code>Read</code></a> parameter, and I'm not sure how to glue these two things together. Is there a way to feed a <a href=\"https://docs.rs/hyper/0.12.24/hyper/struct.Response.html\" rel=\"nofollow noreferrer\"><code>Response</code></a> to <code>XzDecoder</code>?</p>\n\n<p>The only clue I found so far is this <a href=\"https://github.com/hyperium/hyper/issues/1364\" rel=\"nofollow noreferrer\">issue</a>, which contains a reference to a private <a href=\"https://github.com/seanmonstar/reqwest/blob/5deb5705f5fde6d5efecef9b82af7141d82ac895/src/async_impl/decoder.rs#L364-L403\" rel=\"nofollow noreferrer\"><code>ReadableChunks</code></a> type, which I could in theory replicate in my code - but maybe there is an easier way?</p>\n"}, {"tags": ["rust", "refactoring"], "answers": [{"tags": [], "owner": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "is_accepted": false, "score": 3, "last_activity_date": 1550674792, "last_edit_date": 1550674792, "creation_date": 1550674266, "answer_id": 54789082, "question_id": 54788973, "link": "https://stackoverflow.com/questions/54788973/how-to-refactor-an-if-statement-inside-of-a-match-arm/54789082#54789082", "title": "How to refactor an if statement inside of a match arm?", "body": "<p>Match arms can include <code>if</code> expressions, so you can simplify the code like so:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn get_error_id(err: CustomError) -&gt; i64 {\n    match err {\n        CustomError::Unknown(ref r) if r.status == StatusCode::NOT_FOUND =&gt; 404,\n        _ =&gt; 0, // default_id\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 353, "user_id": 10960558, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8d5aaf5ed61d757fe83b72ac88a6fdb0?s=128&d=identicon&r=PG&f=1", "display_name": "H. Desane", "link": "https://stackoverflow.com/users/10960558/h-desane"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 41, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1550678472, "creation_date": 1550673941, "last_edit_date": 1550678472, "question_id": 54788973, "link": "https://stackoverflow.com/questions/54788973/how-to-refactor-an-if-statement-inside-of-a-match-arm", "title": "How to refactor an if statement inside of a match arm?", "body": "<p>I've got the following method:</p>\n\n<pre><code>fn get_error_id(err: CustomError) -&gt; i64 {\n    let default_id = 0;\n    match err {\n        CustomError::Unknown(response) =&gt; {\n            if response.status == StatusCode::NOT_FOUND {\n                404\n            } else {\n                default_id\n            }\n        }\n        _ =&gt; default_id,\n    }\n}\n</code></pre>\n\n<p>Is there any way to refactor it to inline <code>default_id</code>?</p>\n"}, {"tags": ["pointers", "vector", "rust", "traits", "lifetime"], "comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1550674427, "post_id": 54788384, "comment_id": 96356627, "body": "Without static lifetime you can solve this issue by just expecting boxed BaseStuff : <code>fn register(&amp;mut self, data: Box&lt;BaseStuff&gt; )</code> , please check the <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=7d6ee9c38004e9a5eb07e3c39076d288\" rel=\"nofollow noreferrer\">playground</a>."}], "answers": [{"comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1550674236, "post_id": 54788788, "comment_id": 96356494, "body": "Simply  this would also work : <code>data: impl BaseStuff + &#39;static </code>. But the question is why vec.push requires static lifetime. <code>data</code> must have already moved ?"}, {"owner": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1550674395, "post_id": 54788788, "comment_id": 96356598, "body": "@&#214;merErden the static lifetime is required because the data being added to the vector may itself be a reference. <code>BaseStuff</code> can be implemented for any type - for example, <code>impl BaseStuff for &amp;SomeType</code> would allow you to pass a reference like <code>&amp;SomeType</code> to the method. This then triggers the lifetime checks, because the reference itself is being stored in the box, not the value the reference referes to."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1550674694, "post_id": 54788788, "comment_id": 96356783, "body": "Oh i should have check the explanation first,  thanks. But i would prefer sending boxed data to holder"}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1550675011, "post_id": 54788788, "comment_id": 96356986, "body": "But what will happen if i would Box a reference of a type then send it to the push ?"}, {"owner": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1550675091, "post_id": 54788788, "comment_id": 96357042, "body": "@&#214;merErden could you show me an example of what you mean? Boxing a reference (<code>Box&lt;&amp;SomeType&gt;</code>) seems like a weird use case, but it should work if the reference has a <code>&#39;static</code> lifetime, and fail otherwise."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1550675385, "post_id": 54788788, "comment_id": 96357231, "body": "Yes it&#39;s a weird use case, you can box it without static lifetime but you cannot send the box inside to a register fn, please check the last line in main() - <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=555d9e38008bef8ec831bbddcb9587fb\" rel=\"nofollow noreferrer\">playground</a>"}, {"owner": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1550675659, "post_id": 54788788, "comment_id": 96357417, "body": "@&#214;merErden In that case you can create a named lifetime to ensure that all references live at least as long as the struct itself - <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=2f0ed81fb697b2dc2a52ae35ec19e6bc\" rel=\"nofollow noreferrer\">playground</a>"}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1550675841, "post_id": 54788788, "comment_id": 96357551, "body": "Yes, adding lifetime will solve the issue, actually i was wondering if we can trick the compiler by sending the boxed reference , looks like it is not possible, anyway thanks .)"}], "tags": [], "owner": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "is_accepted": true, "score": 4, "last_activity_date": 1550674485, "last_edit_date": 1550674485, "creation_date": 1550673342, "answer_id": 54788788, "question_id": 54788384, "link": "https://stackoverflow.com/questions/54788384/store-data-that-implements-a-trait-in-a-vector/54788788#54788788", "title": "Store data that implements a trait in a vector", "body": "<p>You <em>almost</em> got it - the issue here is that the type for which <code>BaseStuff</code> is implemented may be a reference (e.g. <code>impl BaseStuff for &amp;SomeType</code>). This means that even though you're passing <code>data</code> by value, the value may be a reference that will be outlived by your <code>Box</code>.</p>\n\n<p>The way to fix this is to add a constraint such that the object has a <code>'static</code> lifetime, meaning it will either be a value type or a static reference. You can apply this constraint to the trait or the method accepting the trait, depending on your use case.</p>\n\n<p>Applying the constraint to the trait:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait BaseStuff: 'static {}\n</code></pre>\n\n<p>Applying the constraint to the method:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl Holder {\n    fn register(&amp;mut self, data: impl BaseStuff + 'static) {\n        self.stuff.push(Box::new(data));\n    }\n}\n</code></pre>\n\n<p>If you add the <code>'static</code> constraint to the method, I would recommend also adding it to the <code>Vec</code> to avoid losing type information, like so:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Holder {\n    stuff: Vec&lt;Box&lt;dyn BaseStuff + 'static&gt;&gt;,\n}\n</code></pre>\n"}], "owner": {"reputation": 1262, "user_id": 2686092, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/05c7bb05132e2621c3a0864d641f0b3f?s=128&d=identicon&r=PG&f=1", "display_name": "createproblem", "link": "https://stackoverflow.com/users/2686092/createproblem"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 375, "favorite_count": 0, "accepted_answer_id": 54788788, "answer_count": 1, "score": 2, "last_activity_date": 1550674485, "creation_date": 1550671997, "last_edit_date": 1550674149, "question_id": 54788384, "link": "https://stackoverflow.com/questions/54788384/store-data-that-implements-a-trait-in-a-vector", "title": "Store data that implements a trait in a vector", "body": "<p>I'm very new to Rust and system languages in general. And I'm currently playing around with Rust to explore the language. I've a problem that I cannot fix by myself. And I think I've understanding problem whats going on.</p>\n\n<p>I wan't to store objects that implements the <code>trait BaseStuff</code> in a vector. In Rust not a simple task for me :-).</p>\n\n<p>Here is my example code that won't compile.</p>\n\n<pre><code>trait BaseStuff {}\n\nstruct MyStuff {\n    value: i32,\n}\n\nstruct AwesomeStuff {\n    value: f32,\n    text: String,\n}\n\nimpl BaseStuff for MyStuff {}\n\nimpl BaseStuff for AwesomeStuff {}\n\nstruct Holder {\n    stuff: Vec&lt;BaseStuff&gt;,\n}\n\nimpl Holder {\n    fn register(&amp;mut self, data: impl BaseStuff) {\n        self.stuff.push(data);\n    }\n}\n\nfn main() {\n    let my_stuff = MyStuff { value: 100 };\n\n    let awesome_stuff = AwesomeStuff {\n        value: 100.0,\n        text: String::from(\"I'm so awesome!\"),\n    };\n\n    let mut holder = Holder { stuff: vec![] };\n\n    holder.register(my_stuff);\n}\n</code></pre>\n\n<blockquote>\n  <p>error[E0277]: the size for values of type <code>(dyn BaseStuff + 'static)</code>\n  cannot be known at compilation time   --> src\\main.rs:17:5    | 17 |<br>\n  stuff: Vec, // unknown size    |     ^^^^^^^^^^^^^^^^^^^^^\n  doesn't have a size known at compile-time    |    = help: the trait\n  <code>std::marker::Sized</code> is not implemented for <code>(dyn BaseStuff +\n  'static)</code>    = note: to learn more, visit\n  <a href=\"https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait</a>\n  = note: required by <code>std::vec::Vec</code></p>\n  \n  <p>error: aborting due to previous error</p>\n  \n  <p>For more information about this error, try <code>rustc --explain E0277</code>.\n  error: Could not compile <code>playground</code>.</p>\n  \n  <p>The compiler message is clear and I understand the message. I can\n  implement the trait BaseStuff in any struct I want't so its unclear\n  which size it is. Btw the link isn't helpful because its pointing to\n  outdated site...</p>\n</blockquote>\n\n<p>The size of String is also unknown, but the String implements the trait <code>std::marker::Sized</code> and that's why a <code>Vec&lt;String&gt;</code> will work without problems. Is that correct?</p>\n\n<p>In the rust book I read for data types with unknown size I've to store these data on the heap instead of the stack. I changed my code as follows.</p>\n\n<pre><code>struct Holder {\n    stuff: Vec&lt;Box&lt;BaseStuff&gt;&gt;,\n}\n\nimpl Holder {\n    fn register(&amp;mut self, data: impl BaseStuff) {\n        self.stuff.push(Box::new(data));\n    }\n}\n</code></pre>\n\n<p>Now I'm hitting a new compiler issue:</p>\n\n<blockquote>\n  <p>error[E0310]: the parameter type <code>impl BaseStuff</code> may not live long\n  enough   --> src\\main.rs:22:25    | 21 |     fn register(&amp;mut self,\n  data: impl BaseStuff) {    |<br>\n  --------------- help: consider adding an explicit lifetime bound <code>impl BaseStuff: 'static</code>... 22 |         self.stuff.push(Box::new(data));<br>\n  |                         ^^^^^^^^^^^^^^    | note: ...so that the\n  type <code>impl BaseStuff</code> will meet its required lifetime bounds   -->\n  src\\main.rs:22:25    | 22 |         self.stuff.push(Box::new(data));<br>\n  |                         ^^^^^^^^^^^^^^</p>\n  \n  <p>error: aborting due to previous error</p>\n  \n  <p>For more information about this error, try <code>rustc --explain E0310</code>.\n  error: Could not compile <code>playground</code>.</p>\n</blockquote>\n\n<p>And know I'm out... I read in the book about lifetimes and changed my code a lot with <code>'a</code> here and <code>'a</code> in any combination but without luck... I don't want to write down any lifetime definition combination I tried.\nI don't understand why I need the lifetime definition. The ownership is moved in any step so for my understanding its clear that Holder struct is the owner for all data. Is it?</p>\n\n<p>How can I correct my code to compile?</p>\n\n<p>Thanks for help.</p>\n"}, {"tags": ["rust", "floating-point", "ieee-754"], "comments": [{"owner": {"reputation": 230, "user_id": 5639737, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/3rBEx.png?s=128&g=1", "display_name": "Jojonete", "link": "https://stackoverflow.com/users/5639737/jojonete"}, "edited": false, "score": 3, "creation_date": 1550655739, "post_id": 54782405, "comment_id": 96344835, "body": "Here&#39;s a test that will &quot;almost always&quot; work, though it needs refining: You start with two arbitrarily large integers representing an irreductible fraction <code>a&#47;b</code>. If <code>b</code> is not an exact power of 2 (i.e. <code>b</code> is not 1,2,4,8,...), then your number will not be exactly representable. If <code>a</code> is more than about 2^23 then it will not be exactly representable. Otherwise (i.e. if <code>a&lt;2^23</code> and <code>b</code> is an exact power of 2), most likely it will be representable. However, I&#39;ve skipped lots of quirks and it would be far from trivial to take everything into account."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 230, "user_id": 5639737, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/3rBEx.png?s=128&g=1", "display_name": "Jojonete", "link": "https://stackoverflow.com/users/5639737/jojonete"}, "edited": false, "score": 0, "creation_date": 1550658158, "post_id": 54782405, "comment_id": 96346362, "body": "@Jojonete That&#39;s very few values. Maybe f32 is not the encoding to use in this situation."}, {"owner": {"reputation": 27437, "user_id": 95954, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/iD0qO.png?s=128&g=1", "display_name": "Rudy Velthuis", "link": "https://stackoverflow.com/users/95954/rudy-velthuis"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1550697430, "post_id": 54782405, "comment_id": 96368777, "body": "@Darth: why <i>very few values</i>? You have a numerator and a denominator. Only the denominator must be a power of 2, not the numerator, and then you have the possibility of using the exponent, so you have almost 2^32 possible values."}, {"owner": {"reputation": 20517, "user_id": 8344060, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/1UbPk.png?s=128&g=1", "display_name": "kvantour", "link": "https://stackoverflow.com/users/8344060/kvantour"}, "reply_to_user": {"reputation": 230, "user_id": 5639737, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/3rBEx.png?s=128&g=1", "display_name": "Jojonete", "link": "https://stackoverflow.com/users/5639737/jojonete"}, "edited": false, "score": 0, "creation_date": 1550767182, "post_id": 54782405, "comment_id": 96400886, "body": "Some extra information to the comment of @Jojonete: (1) reduce <code>A&#47;B</code> to an irreducible fraction is done using the greatest common divisor (<code>A&#47;B =a&#47;b</code> with <code>a=A&#47;gcd(A,B)</code> and <code>b=B&#47;gcd(A,B)</code>). (2) <a href=\"https://stackoverflow.com/questions/600293\">check if <code>b</code> is a power of two</a>. (3) you have to fiddle around a bit with the exponent to figure out the range of <code>b</code>"}, {"owner": {"reputation": 20517, "user_id": 8344060, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/1UbPk.png?s=128&g=1", "display_name": "kvantour", "link": "https://stackoverflow.com/users/8344060/kvantour"}, "edited": false, "score": 0, "creation_date": 1550767392, "post_id": 54782405, "comment_id": 96400988, "body": "related: <a href=\"https://stackoverflow.com/questions/12124936/what-types-of-numbers-are-representable-in-binary-floating-point\" title=\"what types of numbers are representable in binary floating point\">stackoverflow.com/questions/12124936/&hellip;</a>"}], "answers": [{"comments": [{"owner": {"reputation": 230, "user_id": 5639737, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/3rBEx.png?s=128&g=1", "display_name": "Jojonete", "link": "https://stackoverflow.com/users/5639737/jojonete"}, "edited": false, "score": 2, "creation_date": 1550655065, "post_id": 54782919, "comment_id": 96344416, "body": "This won&#39;t always work. Higher precision is not exact precision, so a number close enough to a f32 value will give a false positive. Say, <code>5 + 1E-1000</code> will give a false positive."}, {"owner": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "reply_to_user": {"reputation": 230, "user_id": 5639737, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/3rBEx.png?s=128&g=1", "display_name": "Jojonete", "link": "https://stackoverflow.com/users/5639737/jojonete"}, "edited": false, "score": 0, "creation_date": 1550655373, "post_id": 54782919, "comment_id": 96344623, "body": "Yes, I should have clarified the limitation (though with <code>BigDecimal</code> this example should work)."}, {"owner": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "reply_to_user": {"reputation": 230, "user_id": 5639737, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/3rBEx.png?s=128&g=1", "display_name": "Jojonete", "link": "https://stackoverflow.com/users/5639737/jojonete"}, "edited": false, "score": 0, "creation_date": 1550656119, "post_id": 54782919, "comment_id": 96345056, "body": "Edited the answer."}], "tags": [], "owner": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "is_accepted": false, "score": 0, "last_activity_date": 1550656112, "last_edit_date": 1550656112, "creation_date": 1550654934, "answer_id": 54782919, "question_id": 54782405, "link": "https://stackoverflow.com/questions/54782405/check-if-a-number-is-exactly-representable-as-f32/54782919#54782919", "title": "Check if a number is exactly representable as `f32`", "body": "<p>Do the calculations you want with higher precision (<code>f64</code> is the obvious and fastest, but there are alternatives: e.g. <a href=\"https://docs.rs/f128/0.2.2/f128/\" rel=\"nofollow noreferrer\"><code>f128</code></a>, <a href=\"https://docs.diesel.rs/bigdecimal/index.html\" rel=\"nofollow noreferrer\"><code>BigDecimal</code></a>, <a href=\"https://docs.rs/rug/0.6.0/rug/\" rel=\"nofollow noreferrer\"><code>rug</code>'s</a> <code>rational</code> or <code>float</code>, <a href=\"https://www.reddit.com/r/rust/comments/77x3m8/whats_the_best_crate_for_arbitrary_precision/\" rel=\"nofollow noreferrer\">etc.</a>), and then check that the result is equal to itself converted to <code>f32</code> and back. </p>\n\n<p>Assuming <code>f64</code> for the sake of example</p>\n\n<pre><code>d.is_finite() &amp;&amp; (d as f32) as f64 == d\n</code></pre>\n\n<p>Of course, the result of these calculations may end up exactly representable as <code>f32</code> even if the exact result wouldn't be, as Jojonete's comment points out. So the datatype you want will depend on the calculations. E.g. for </p>\n\n<blockquote>\n  <p>1/256, 2/256, 3/256, ... 254/256 and 255/256</p>\n</blockquote>\n\n<p><code>rug::rational</code> would certainly be exact (so would <code>f64</code>, but then you need to \"think about how floating point numbers work and find out that way\" at least a bit). </p>\n"}, {"comments": [{"owner": {"reputation": 8425, "user_id": 1396822, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/f2e818842b0436e98b279af7f69997cb?s=128&d=identicon&r=PG", "display_name": "aka.nice", "link": "https://stackoverflow.com/users/1396822/aka-nice"}, "edited": false, "score": 0, "creation_date": 1551042846, "post_id": 54784778, "comment_id": 96484717, "body": "Power-of-2 denominator is one rule. The other two rules are: the numerator has not too many bits (or it won&#39;t be representable in float significand) and the denominator power is not too high (causing float underflow). If denominator is 1, then numerator can have trailing 0 bits, but not too many (float overflow). See it implemented in Squeak Smalltalk <a href=\"http://source.squeak.org/trunk/Kernel-nice.853.diff\" rel=\"nofollow noreferrer\">source.squeak.org/trunk/Kernel-nice.853.diff</a>. Here float are 64 bits, but that does not matter and is not hardcoded in the implementation of isAnExactFloat."}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 4, "last_activity_date": 1550660580, "creation_date": 1550660580, "answer_id": 54784778, "question_id": 54782405, "link": "https://stackoverflow.com/questions/54782405/check-if-a-number-is-exactly-representable-as-f32/54784778#54784778", "title": "Check if a number is exactly representable as `f32`", "body": "<p>The type <a href=\"https://docs.rs/rug/1.3.0/rug/struct.Rational.html\" rel=\"nofollow noreferrer\"><code>Rational</code></a> from the <a href=\"https://crates.io/crates/rug\" rel=\"nofollow noreferrer\"><code>rug</code> crate</a> can represent fractions exactly. It also implements <code>PartialEq&lt;f32&gt;</code> so you can compare the exact representation with your <code>f32</code> directly to check if they are equal. </p>\n\n<pre><code>for n in 1u8..=255u8 {\n    let rat = Rational::from((n, 256));\n    let f = (n as f32) / 256.0;\n    println!(\"{}/256 -&gt; {}\", n, rat == f);\n}\n</code></pre>\n\n<p>And as you can see from the output, the numbers you want to test are indeed exactly representable as <code>f32</code>. </p>\n\n<p>To get more a more interesting output, try <code>1 / n</code>:</p>\n\n<pre><code>for n in 1u8..=255u8 {\n    let rat = Rational::from((1, n));\n    let f = 1.0 / (n as f32);\n    println!(\"1/{} -&gt; {}\", n, rat == f);\n}\n</code></pre>\n\n<p>This shows that only fractions with a power-of-2 denominator are exactly representable.</p>\n"}], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 396, "favorite_count": 0, "accepted_answer_id": 54784778, "answer_count": 2, "score": 6, "last_activity_date": 1550660602, "creation_date": 1550653330, "last_edit_date": 1550660602, "question_id": 54782405, "link": "https://stackoverflow.com/questions/54782405/check-if-a-number-is-exactly-representable-as-f32", "title": "Check if a number is exactly representable as `f32`", "body": "<p>I wondered whether the values 1/256, 2/256, 3/256, ... 254/256 and 255/256 are exactly representable as <code>f32</code>. Now, someone smart would think about how floating point numbers work and find out that way. But I would like to check that in a program. All numbers I want to check are fractions and I control the values (i.e. no user input).</p>\n\n<p>I started with this:</p>\n\n<pre><code>for n in 1u8..=255 {\n    let f = (n as f32) / 256.0;\n    println!(\"{}\", f);\n}\n</code></pre>\n\n<p>But now what? I tried printing the number to see if there were a large number of recurring digits, but that doesn't always work. For example,  0.4 which is not exactly representable:</p>\n\n<pre><code>println!(\"{}\", 0.4);     // prints \"0.4\"\nprintln!(\"{:.20}\", 0.4); // prints \"0.40000000000000002220\"\n</code></pre>\n\n<p>Here we have to manually crank up the precision to see the problems. And in any case, looking at the string output seems like a suboptimal solution anyway.</p>\n\n<p>First I thought that there might be a method on <code>f32</code>, but this wouldn't make much sense, would it? Because when a <code>f32</code> already exists, there is no way to know if its value was intended or not. So we somehow have to find out when creating the float value and compare to the \"idealized\" value? </p>\n\n<p><strong>Is there any way to check if a value can be exactly represented as <code>f32</code>?</strong></p>\n"}, {"tags": ["rust", "iron"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1550647061, "post_id": 54780057, "comment_id": 96340246, "body": "<code>if headers::UserAgent == &quot;curl&quot; { ... }</code> <a href=\"https://docs.rs/iron/0.6.0/iron/headers/struct.UserAgent.html\" rel=\"nofollow noreferrer\">docs.rs/iron/0.6.0/iron/headers/struct.UserAgent.html</a>"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1550647174, "post_id": 54780057, "comment_id": 96340293, "body": "Or you could try to write a middlefiddle <a href=\"https://docs.rs/iron-middlefiddle/0.1.1/iron_middlefiddle/\" rel=\"nofollow noreferrer\">docs.rs/iron-middlefiddle/0.1.1/iron_middlefiddle</a>"}], "owner": {"reputation": 63413, "user_id": 193619, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/11e74c6cb64be4d24fdee076ddb374b0?s=128&d=identicon&r=PG", "display_name": "Nathan Osman", "link": "https://stackoverflow.com/users/193619/nathan-osman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 48, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1550643837, "creation_date": 1550643837, "question_id": 54780057, "link": "https://stackoverflow.com/questions/54780057/how-to-route-a-request-differently-with-iron-router-based-on-the-user-agent", "title": "How to route a request differently with iron/router based on the user agent?", "body": "<p>I would like my Rust application to serve different content to clients depending on the user agent they provide. (I want to return plaintext for cURL clients and HTML for everything else.)</p>\n\n<p>I am using <a href=\"https://github.com/iron/router\" rel=\"nofollow noreferrer\">iron/router</a> and I have <code>index.html</code> in the <code>static</code> directory:</p>\n\n<pre><code>let mut mount = Mount::new();\nmount.mount(\"/\", Static::new(Path::new(\"static\")));\n</code></pre>\n\n<p>How would I go about keeping the existing behavior (serving the HTML file) when a web browser requests the page, but serving a plaintext string (generated by a function) when the user agent belongs to cURL?</p>\n"}, {"tags": ["design-patterns", "rust", "decorator"], "comments": [{"owner": {"reputation": 765, "user_id": 7246614, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/83eccd212e4687fc66e13aad21796b0b?s=128&d=identicon&r=PG", "display_name": "timotree", "link": "https://stackoverflow.com/users/7246614/timotree"}, "edited": false, "score": 0, "creation_date": 1550640102, "post_id": 54778910, "comment_id": 96337555, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/28158738/cannot-move-out-of-borrowed-content\">Cannot move out of borrowed content</a>"}], "answers": [{"tags": [], "owner": {"reputation": 765, "user_id": 7246614, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/83eccd212e4687fc66e13aad21796b0b?s=128&d=identicon&r=PG", "display_name": "timotree", "link": "https://stackoverflow.com/users/7246614/timotree"}, "is_accepted": true, "score": 2, "last_activity_date": 1550640040, "creation_date": 1550640040, "answer_id": 54779324, "question_id": 54778910, "link": "https://stackoverflow.com/questions/54778910/how-to-use-lifetime-specifier-in-decorator-pattern-in-rust/54779324#54779324", "title": "How to use lifetime specifier in decorator pattern in Rust?", "body": "<p>Ignoring the first error about unsized types, both of the second two errors are about the same problem: \"cannot move out of borrowed content\"</p>\n\n<p>This smaller example triggers the same error:</p>\n\n<pre><code>struct Inner {}\n\nimpl Inner {\n    // consumes self. requires ownership\n    fn foo(self) -&gt; u64 {\n        42\n    }\n}\n\nfn main() {\n    let my_inner = Inner {};\n    let borrow = &amp;my_inner;\n    let answer = borrow.foo(); // oops! we are using a borrowed version that we don't own\n    println!(\"meaning of life {}\", answer);\n}\n</code></pre>\n\n<p>For more information see <a href=\"https://stackoverflow.com/a/28159407/7246614\">this answer</a>, specifically the part about ownership or see <a href=\"https://doc.rust-lang.org/stable/book/ch04-00-understanding-ownership.html\" rel=\"nofollow noreferrer\">chapter four of the rust book</a>.</p>\n\n<p>With your problem specifically, one fix is to change <code>trait T</code> so that it only borrows its argument:</p>\n\n<pre><code>trait T {\n    fn foo(&amp;self) -&gt; u64; // notice the change: `self` -&gt; `&amp;self`\n}\n\n// ...\n\nimpl T for Inner {\n    fn foo(&amp;self) -&gt; u64 { // notice the change: `self` -&gt; `&amp;self`\n        42\n    }\n}\n\n// ...\n\nimpl&lt;'a&gt; T for Outer&lt;'a&gt; {\n    fn foo(&amp;self) -&gt; u64 { // notice the change: `self` -&gt; `&amp;self`\n        self.delegate.foo()\n    }\n}\n\n// ...\n</code></pre>\n"}], "owner": {"reputation": 47, "user_id": 2583880, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ec86947714c794f3aedc27748457eb24?s=128&d=identicon&r=PG", "display_name": "Jockbert", "link": "https://stackoverflow.com/users/2583880/jockbert"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 234, "favorite_count": 0, "accepted_answer_id": 54779324, "answer_count": 1, "score": 0, "last_activity_date": 1550652676, "creation_date": 1550637226, "last_edit_date": 1550652676, "question_id": 54778910, "link": "https://stackoverflow.com/questions/54778910/how-to-use-lifetime-specifier-in-decorator-pattern-in-rust", "title": "How to use lifetime specifier in decorator pattern in Rust?", "body": "<p>I'm new to rust and have not got the lifetime specifier things yet. In order to separate different concerns into different stucts, I try to do something similar to the decorator pattern. However, the following code does not compile:</p>\n\n<pre><code>trait T {\n    fn foo(self) -&gt; u64;\n}\n\nstruct Inner {}\n\nimpl T for Inner {\n    fn foo(self) -&gt; u64 {\n        42\n    }\n}\n\nstruct Outer&lt;'a&gt; {\n    delegate: &amp;'a T,\n}\n\nimpl&lt;'a&gt; T for Outer&lt;'a&gt; {\n    fn foo(self) -&gt; u64 {\n        self.delegate.foo()\n    }\n}\n\npub fn dec_test() {\n    let inner = &amp;Inner {};\n    let outer = Outer{delegate:inner};\n\n    println!(\"Meaning of life: {}\", outer.foo());\n}\n</code></pre>\n\n<p>I get the following error </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0161]: cannot move a value of type dyn T: the size of dyn T cannot be statically determined\n  --&gt; src/lib.rs:19:9\n   |\n19 |         self.delegate.foo()\n   |         ^^^^^^^^^^^^^\n\nerror[E0507]: cannot move out of borrowed content\n  --&gt; src/lib.rs:19:9\n   |\n19 |         self.delegate.foo()\n   |         ^^^^^^^^^^^^^ cannot move out of borrowed content\n\nerror: aborting due to 2 previous errors\n</code></pre>\n"}, {"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1550679006, "post_id": 54777670, "comment_id": 96359575, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/54777670/edit\">edit</a> your question to include it. We cannot tell what types, traits, fields, etc. are present in the code. Try to reproduce your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> or in a brand new Cargo project. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> you can use to reduce your original code for posting here."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1550679203, "post_id": 54777670, "comment_id": 96359696, "body": "<i>from the second implementation of <code>Trait</code></i> \u2014 There&#39;s only <b>one</b> implementation of <code>Trait</code> here."}], "answers": [{"comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1550652969, "post_id": 54777883, "comment_id": 96343185, "body": "@WeslyWiser Please feel free to rollback my change if you feel that it goes against your actual answer. I just wanted to provide additional resources regatrdint the turbofish syntax"}], "tags": [], "owner": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "is_accepted": true, "score": 3, "last_activity_date": 1550679062, "last_edit_date": 1550679062, "creation_date": 1550629154, "answer_id": 54777883, "question_id": 54777670, "link": "https://stackoverflow.com/questions/54777670/how-to-call-an-associated-function-on-a-generic-type/54777883#54777883", "title": "How to call an associated function on a generic type?", "body": "<p>You need to use turbofish (<code>::&lt;&gt;</code>) syntax:</p>\n\n<pre><code>Module::&lt;T&gt;::first_function()\n</code></pre>\n\n<p>complete example:</p>\n\n<pre><code>struct Module&lt;T&gt; {\n    i: T,\n}\n\ntrait Trait {\n    type SomeType;\n}\n\ntrait Second&lt;T&gt; {\n    fn second_function();\n}\n\nimpl&lt;T: Trait&gt; Module&lt;T&gt; {\n    fn first_function() {\n        // some code here\n    }\n}\n\nimpl&lt;T: Trait&gt; Second&lt;T::SomeType&gt; for Module&lt;T&gt; {\n    fn second_function() {\n        Module::&lt;T&gt;::first_function();\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a1b71fafd22a92d914267d981dddb0ec\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>Also see this related question about the turbofish syntax:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/52360464/what-is-the-syntax-instance-methodsomething\">What is the syntax: `instance.method::&lt;SomeThing&gt;()`?</a></li>\n</ul>\n"}], "owner": {"reputation": 15332, "user_id": 1004875, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/9e995748f7d73110eb07dcd8ff81b85a?s=128&d=identicon&r=PG&f=1", "display_name": "co2f2e", "link": "https://stackoverflow.com/users/1004875/co2f2e"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 631, "favorite_count": 0, "accepted_answer_id": 54777883, "answer_count": 1, "score": 0, "last_activity_date": 1550679153, "creation_date": 1550627569, "last_edit_date": 1550679153, "question_id": 54777670, "link": "https://stackoverflow.com/questions/54777670/how-to-call-an-associated-function-on-a-generic-type", "title": "How to call an associated function on a generic type?", "body": "<p>I have 2 trait implementations in a file. How can I call the <code>first_function</code> from the second implementation of <code>Trait</code>?</p>\n\n<pre><code>impl&lt;T: Trait&gt; Module&lt;T&gt; {\n    pub fn first_function() {\n        // some code here\n    }\n}\n\nimpl&lt;T: Trait&gt; Second&lt;T::SomeType&gt; for Module&lt;T&gt; {\n    pub fn second_function() {\n        // Needs to call the first function available in first trait implementation.\n    }\n}\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1550625776, "post_id": 54777289, "comment_id": 96334318, "body": "Note that there is an implementation for Result too."}], "tags": [], "owner": {"reputation": 765, "user_id": 7246614, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/83eccd212e4687fc66e13aad21796b0b?s=128&d=identicon&r=PG", "display_name": "timotree", "link": "https://stackoverflow.com/users/7246614/timotree"}, "is_accepted": true, "score": 12, "last_activity_date": 1590692337, "last_edit_date": 1590692337, "creation_date": 1550624695, "answer_id": 54777289, "question_id": 54777288, "link": "https://stackoverflow.com/questions/54777288/how-can-i-convert-a-vecoptiont-to-an-optionvect/54777289#54777289", "title": "How can I convert a Vec&lt;Option&lt;T&gt;&gt; to an Option&lt;Vec&lt;T&gt;&gt;", "body": "<p>Convert it into an iterator and use <code>.collect::&lt;Option&lt;Vec&lt;_&gt;&gt;&gt;()</code>.</p>\n\n<pre><code>let output = vec.into_iter().collect::&lt;Option&lt;Vec&lt;_&gt;&gt;&gt;();\n</code></pre>\n\n<p>or using type annotations</p>\n\n<pre><code>let output: Option&lt;Vec&lt;_&gt;&gt; = vec.into_iter().collect();\n</code></pre>\n\n<p>See <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.collect\" rel=\"nofollow noreferrer\"><code>collect()</code></a> and the <a href=\"https://doc.rust-lang.org/std/iter/trait.FromIterator.html#method.from_iter-13\" rel=\"nofollow noreferrer\"><code>FromIterator</code> trait implentation</a> it uses for <code>Option</code>s.</p>\n"}], "owner": {"reputation": 765, "user_id": 7246614, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/83eccd212e4687fc66e13aad21796b0b?s=128&d=identicon&r=PG", "display_name": "timotree", "link": "https://stackoverflow.com/users/7246614/timotree"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1340, "favorite_count": 0, "accepted_answer_id": 54777289, "answer_count": 1, "score": 6, "last_activity_date": 1590692337, "creation_date": 1550624695, "question_id": 54777288, "link": "https://stackoverflow.com/questions/54777288/how-can-i-convert-a-vecoptiont-to-an-optionvect", "title": "How can I convert a Vec&lt;Option&lt;T&gt;&gt; to an Option&lt;Vec&lt;T&gt;&gt;", "body": "<p>I have some vectors like this</p>\n\n<pre><code>let example1: Vec&lt;Option&lt;u64&gt;&gt; = vec![None, None, Some(2), Some(35)];\nlet example2: Vec&lt;Option&lt;u64&gt;&gt; = vec![Some(5), Some(19), Some(4), Some(6)];\n</code></pre>\n\n<p>and I want a function that would return <code>None</code> for <code>example1</code> but would return <code>Some([5, 19, 4, 6])</code> for <code>example2</code>.</p>\n\n<p>In other words, I want a function that returns <code>None</code> if any of the options are <code>None</code>, but if all the options are <code>Some</code> it unwraps them all and returns <code>Some</code>.</p>\n"}, {"tags": ["rust", "cross-compiling", "grpc"], "comments": [{"owner": {"reputation": 1823, "user_id": 868540, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/82d71d3e4512f325a6a0c5b3eef16719?s=128&d=identicon&r=PG", "display_name": "Pumphouse", "link": "https://stackoverflow.com/users/868540/pumphouse"}, "edited": false, "score": 0, "creation_date": 1570306303, "post_id": 54775076, "comment_id": 102874145, "body": "Just adding my comment that there needs to be a better solution for this"}], "answers": [{"tags": [], "owner": {"reputation": 93, "user_id": 10960543, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-2HzwlE_ed1Q/AAAAAAAAAAI/AAAAAAAAC94/cRKOwCvFKkw/photo.jpg?sz=128", "display_name": "Pawan Bisht", "link": "https://stackoverflow.com/users/10960543/pawan-bisht"}, "is_accepted": false, "score": 0, "last_activity_date": 1558073265, "creation_date": 1558073265, "answer_id": 56180534, "question_id": 54775076, "link": "https://stackoverflow.com/questions/54775076/how-to-cross-compile-a-rust-project-with-openssl/56180534#56180534", "title": "How to cross compile a rust project with openssl?", "body": "<p>You can't cross-compile your rust program with every feature of <strong>Openssl</strong>, because some version of OpenSSL doesn't support (feature as Vendored) which helps for cross-compilation. So you can use that version of OpenSSL which supports this feature. like openssl = { version = \"0.10\", features = [\"vendored\"] }</p>\n"}, {"tags": [], "owner": {"reputation": 42073, "user_id": 113632, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/f0aa6977c75f54ca9033d4f4d0244023?s=128&d=identicon&r=PG", "display_name": "dimo414", "link": "https://stackoverflow.com/users/113632/dimo414"}, "is_accepted": false, "score": 0, "last_activity_date": 1612172906, "creation_date": 1612172906, "answer_id": 65990456, "question_id": 54775076, "link": "https://stackoverflow.com/questions/54775076/how-to-cross-compile-a-rust-project-with-openssl/65990456#65990456", "title": "How to cross compile a rust project with openssl?", "body": "<p>It took me a while to find, but I believe nowadays there's an easy option for OpenSSL cross-compilation - enabling the <a href=\"https://docs.rs/openssl/#vendored\" rel=\"nofollow noreferrer\"><code>vendored</code> feature</a>.</p>\n<p>This causes OpenSSL to be compiled from source as part of your project's build (and therefore against the same target architecture as the rest of the project) instead of expecting it to already be installed on your system.</p>\n<p>You can propagate the feature into your own project to optionally depend on <code>vendored</code> by adding something like this to your <code>Cargo.toml</code>:</p>\n<pre><code>[features]\n...\n\n# If compiling on a system without OpenSSL installed, or cross-compiling for a different\n# architecture, enable this feature to compile OpenSSL as part of the build.\n# See https://docs.rs/openssl/#vendored for more.\nstatic_ssl = ['openssl/vendored']\n\n[dependencies]\n...\n\n[dependencies.openssl]\noptional = true\nversion = ...\n</code></pre>\n<p>Enabling the <code>static_ssl</code> feature when building your project will then compile OpenSSL at the same time.</p>\n<p>For <code>grpcio</code> in particular see <a href=\"https://crates.io/crates/grpcio#feature-openssl-and-openssl-vendored\" rel=\"nofollow noreferrer\">their documentation</a>, which indicates they provide an <a href=\"https://github.com/tikv/grpc-rs/blob/b9ddf27/grpc-sys/Cargo.toml#L59\" rel=\"nofollow noreferrer\"><code>openssl-vendored</code> feature</a> for this purpose. So you can add <code>grpcio = { version = &quot;0.7&quot;, features = [&quot;openssl-vendored&quot;] }</code> to your <code>Cargo.toml</code> to unconditionally compile OpenSSL, or use the same pattern as above (just don't mark the <code>grpcio</code> package as <code>optional</code>).</p>\n<p><a href=\"https://github.com/rust-embedded/cross/issues/229#issuecomment-597898074\" rel=\"nofollow noreferrer\">This post</a> goes into some more details about different ways of compiling with OpenSSL.</p>\n"}], "owner": {"reputation": 351, "user_id": 10946826, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/55ebee3f352a4b3f8d5bca9c2e4b13da?s=128&d=identicon&r=PG&f=1", "display_name": "James Larkin", "link": "https://stackoverflow.com/users/10946826/james-larkin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 412, "favorite_count": 0, "answer_count": 2, "score": 5, "last_activity_date": 1612172906, "creation_date": 1550611151, "last_edit_date": 1550611872, "question_id": 54775076, "link": "https://stackoverflow.com/questions/54775076/how-to-cross-compile-a-rust-project-with-openssl", "title": "How to cross compile a rust project with openssl?", "body": "<p>My project is written in Rust (<code>Ubuntu 16.04, CMake 3.5.1</code>).</p>\n\n<p>Previously it used <code>grpcio = \"0.4.0\"</code> as a dependency in <code>Cargo.toml</code> and I could successfully cross-compile (i.e., create a static binary) it (using <code>cross</code>). However, after I changed my dependency to <code>grpcio = { version = \"0.4.2\", features = [\"openssl\"] }</code> I can't cross-compile it anymore: it says that it couldn't compile <code>grpcio-sys = \"0.4.2\"</code> and displays a few CMake errors (and I can't continue to use <code>0.4.0</code> because it doesn't support <code>features=[\"openssl\"]</code>):</p>\n\n<ol>\n<li>Couldn't find some enviroments flags for OpenSSL (even though I installed <code>sudo apt-get install libssl-dev</code>) for <code>Ubuntu 16.04</code>.</li>\n<li><code>gRPC_PROTOBUF_PROVIDER is \"module\" but PROTOBUF_ROOT_DIR is wrong</code>.</li>\n</ol>\n\n<p>How can I fix it? <a href=\"https://www.andrew-thorburn.com/cross-compiling-a-simple-rust-web-app/#openssl\" rel=\"noreferrer\">This</a> post says I should avoid OpenSSL completely. And here's another <a href=\"http://timryan.org/2018/07/27/cross-compiling-linux-binaries-from-macos.html\" rel=\"noreferrer\">post</a> about cross compiling with OpenSSL.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1550611830, "post_id": 54774837, "comment_id": 96330466, "body": "What behavior do you want for a vector of zero items?"}, {"owner": {"reputation": 1643, "user_id": 434165, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e9b02731158194defd855684bfd313ac?s=128&d=identicon&r=PG", "display_name": "kentwait", "link": "https://stackoverflow.com/users/434165/kentwait"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1550612720, "post_id": 54774837, "comment_id": 96330809, "body": "@Shepmaster assuming there is always at least 1 vector present"}], "answers": [{"comments": [{"owner": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 1, "creation_date": 1550611775, "post_id": 54775189, "comment_id": 96330442, "body": "Also, there&#39;s <code>all_equal</code> in itertools crate - map <code>Vec</code>s to their lengths, then run it. But it requires an external dependency."}, {"owner": {"reputation": 1643, "user_id": 434165, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e9b02731158194defd855684bfd313ac?s=128&d=identicon&r=PG", "display_name": "kentwait", "link": "https://stackoverflow.com/users/434165/kentwait"}, "reply_to_user": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 0, "creation_date": 1550612954, "post_id": 54775189, "comment_id": 96330894, "body": "Thanks @Michail, I am aware of it <code>itertools</code>. Let&#39;s assume no external deps (updated question)"}, {"owner": {"reputation": 14905, "user_id": 931303, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1798bf4504775c89be6686fa6fc74e3?s=128&d=identicon&r=PG", "display_name": "Jorge Leitao", "link": "https://stackoverflow.com/users/931303/jorge-leitao"}, "edited": false, "score": 0, "creation_date": 1607246988, "post_id": 54775189, "comment_id": 115207698, "body": "This panics when <code>vec_of_vecs</code> is empty, though."}], "tags": [], "owner": {"reputation": 28753, "user_id": 371184, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/cebee1b08fb960edf79a359af330391a?s=128&d=identicon&r=PG", "display_name": "Mike Cluck", "link": "https://stackoverflow.com/users/371184/mike-cluck"}, "is_accepted": true, "score": 5, "last_activity_date": 1550611656, "creation_date": 1550611656, "answer_id": 54775189, "question_id": 54774837, "link": "https://stackoverflow.com/questions/54774837/check-if-length-of-all-vectors-is-the-same-in-rust/54775189#54775189", "title": "Check if length of all vectors is the same in Rust", "body": "<p>You can use the <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.all\" rel=\"noreferrer\"><code>all</code></a> method to check if all elements of an iterator match a predicate. Then just compare against the first element in the list.</p>\n\n<pre><code>fn main() {\n    let vec_of_vecs = vec![\n        vec![1, 2, 3],\n        vec![1, 2, 3],\n        vec![1, 2, 3],\n        vec![1, 2, 3],\n        vec![1, 2, 3],\n        vec![1, 2, 3, 4], // remove this to prove that it works for both cases\n    ];\n    let all_same_length = vec_of_vecs\n        .iter()\n        .all(|ref v| v.len() == vec_of_vecs[0].len());\n\n    if all_same_length {\n        println!(\"They're all the same\");\n    } else {\n        println!(\"They are not the same\");\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": false, "score": 2, "last_activity_date": 1550616765, "creation_date": 1550616765, "answer_id": 54776151, "question_id": 54774837, "link": "https://stackoverflow.com/questions/54774837/check-if-length-of-all-vectors-is-the-same-in-rust/54776151#54776151", "title": "Check if length of all vectors is the same in Rust", "body": "<p>An other solution more generic and idiomatic in my opinion:</p>\n\n<pre><code>fn all_eq_len&lt;'a, T, E: 'a&gt;(collection: T) -&gt; bool\nwhere\n    T: IntoIterator&lt;Item = &amp;'a Vec&lt;E&gt;&gt;,\n{\n    let mut iter = collection.into_iter();\n    if let Some(first) = iter.next() {\n        let len = first.len();\n        iter.all(|v| v.len() == len)\n    } else {\n        true\n    }\n}\n</code></pre>\n\n<p>And of course using itertools:</p>\n\n<pre><code>use itertools::Itertools;\n\nvec_of_vecs.iter().map(|v| v.len()).all_equal()\n</code></pre>\n"}], "owner": {"reputation": 1643, "user_id": 434165, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e9b02731158194defd855684bfd313ac?s=128&d=identicon&r=PG", "display_name": "kentwait", "link": "https://stackoverflow.com/users/434165/kentwait"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 993, "favorite_count": 0, "accepted_answer_id": 54775189, "answer_count": 2, "score": 4, "last_activity_date": 1550616765, "creation_date": 1550610060, "last_edit_date": 1550612817, "question_id": 54774837, "link": "https://stackoverflow.com/questions/54774837/check-if-length-of-all-vectors-is-the-same-in-rust", "title": "Check if length of all vectors is the same in Rust", "body": "<p>Given a vector of vectors of some value <code>T</code>, ie. <code>Vec&lt;Vec&lt;T&gt;&gt;</code>.</p>\n\n<p>What's the idiomatic way to check if the inner vectors have the same length? (without external dependencies)</p>\n\n<p>That is, <code>true</code> if all the inner vectors have the same length, and <code>false</code> otherwise.</p>\n"}, {"tags": ["python", "rust", "garbage-collection", "pyo3"], "answers": [{"tags": [], "owner": {"reputation": 388, "user_id": 3549270, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1a4f7b5ad4e34ec42f3dfeb6961f911a?s=128&d=identicon&r=PG&f=1", "display_name": "konstin", "link": "https://stackoverflow.com/users/3549270/konstin"}, "is_accepted": true, "score": 2, "last_activity_date": 1563555696, "creation_date": 1563555696, "answer_id": 57116799, "question_id": 54773323, "link": "https://stackoverflow.com/questions/54773323/garbage-collection-for-vector-of-object-in-pyo3/57116799#57116799", "title": "Garbage collection for vector of object in PyO3", "body": "<p>In this case, <code>Block</code> and <code>Vec&lt;Block&gt;</code> respectively are part of rust's memory and not python's memory, so you don't need to worry about garbage collection. A object in python's memory would e.g. be <code>Py&lt;Block&gt;</code>. </p>\n"}], "owner": {"reputation": 1643, "user_id": 434165, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e9b02731158194defd855684bfd313ac?s=128&d=identicon&r=PG", "display_name": "kentwait", "link": "https://stackoverflow.com/users/434165/kentwait"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 135, "favorite_count": 0, "accepted_answer_id": 57116799, "answer_count": 1, "score": 2, "last_activity_date": 1563555696, "creation_date": 1550603291, "question_id": 54773323, "link": "https://stackoverflow.com/questions/54773323/garbage-collection-for-vector-of-object-in-pyo3", "title": "Garbage collection for vector of object in PyO3", "body": "<p>I have 2 pyclasses <code>Block</code> and <code>BlockGroup</code>.</p>\n\n<pre><code>#[pyclass]\nstruct Block {\n    start: i32,\n    stop: i32,\n}\n\n#[pyclass]\nstruct BlockGroup {\n    blocks: Vec&lt;Block&gt;\n}\n</code></pre>\n\n<p>I'm new to PyO3 and I have read the <a href=\"https://pyo3.rs/master/class.html#garbage-collector-integration\" rel=\"nofollow noreferrer\">documentation</a> about garbage collection but I don't completely grok it.</p>\n\n<blockquote>\n  <p>If your type owns references to other python objects, you will need to\n  integrate with Python's garbage collector so that the GC is aware of\n  those references.</p>\n</blockquote>\n\n<p>Given that <code>BlockGroup</code> owns concrete <code>Block</code> objects, do I need to implement custom garbage collection?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1550591859, "post_id": 54770222, "comment_id": 96320560, "body": "You can use <code>std::any::TypeId</code> as a map key. Does that help?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 4, "creation_date": 1550592169, "post_id": 54770222, "comment_id": 96320748, "body": "It might help to explain the problem if you wrote some more complete code of how you expect a client of this library to interact with it."}, {"owner": {"reputation": 160, "user_id": 7512448, "user_type": "registered", "accept_rate": 0, "profile_image": "https://i.stack.imgur.com/OgLAI.png?s=128&g=1", "display_name": "Zonico", "link": "https://stackoverflow.com/users/7512448/zonico"}, "edited": false, "score": 1, "creation_date": 1550601330, "post_id": 54770222, "comment_id": 96325775, "body": "From <a href=\"https://stackoverflow.com/a/25247480/7512448\">this</a> answer: &quot;Such is the nature of the type IDs being used internally: unlike in a dynamic or VM-based language, the type system is purely a compile-time construct; there is no such thing as the type system at runtime.&quot;."}], "answers": [{"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1550603005, "post_id": 54772669, "comment_id": 96326566, "body": "<i>a function that directly takes an array of TypeIds and looks up the associated values of these ids and returns them</i> -- returns them as <i>what</i>? A massive <code>enum</code>? <code>&amp;Any</code>? Accumulating them in a <code>Vec&lt;T&gt;</code> has the same problem: what is <code>T</code>?"}, {"owner": {"reputation": 160, "user_id": 7512448, "user_type": "registered", "accept_rate": 0, "profile_image": "https://i.stack.imgur.com/OgLAI.png?s=128&g=1", "display_name": "Zonico", "link": "https://stackoverflow.com/users/7512448/zonico"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1550682656, "post_id": 54772669, "comment_id": 96361780, "body": "You&#39;d have to return them as some pointers to Any in the same order as the <code>TypeId</code>s came in. I think this problem can&#39;t be circumvented and is inert to the asked question."}], "tags": [], "owner": {"reputation": 160, "user_id": 7512448, "user_type": "registered", "accept_rate": 0, "profile_image": "https://i.stack.imgur.com/OgLAI.png?s=128&g=1", "display_name": "Zonico", "link": "https://stackoverflow.com/users/7512448/zonico"}, "is_accepted": false, "score": 0, "last_activity_date": 1550600834, "last_edit_date": 1550600834, "creation_date": 1550600596, "answer_id": 54772669, "question_id": 54770222, "link": "https://stackoverflow.com/questions/54770222/can-you-store-arbitrary-types-that-can-be-used-to-access-an-anymap/54772669#54772669", "title": "Can you store arbitrary types that can be used to access an AnyMap?", "body": "<p>As suggested in the comments, I would check out <a href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" rel=\"nofollow noreferrer\"><code>core::any::TypeId</code></a>.</p>\n\n<p>I am not sure though what you are trying to accomplish. From what I understood, you want to supply a list of types and get the associated values.</p>\n\n<p>I don't think that there is a way in Rust to supply a variable number of type arguments, but I can think of two ways how you could do it:</p>\n\n<p>The first but more difficult/complicated one is that you write a macro which takes a list of types and, for every supplied type, takes the value of this type and accumulates those values in a <code>Vec</code>.</p>\n\n<p>A simpler solution would be writing a function that directly takes an array of <code>TypeId</code>s and looks up the associated values of these ids and returns them. This is basically the above solution but the user has to take care of the boilerplate and the obtaining of the types' <code>TypeId</code>s so there is more friction.</p>\n\n<p>There is also a crate called <a href=\"https://crates.io/crates/shred\" rel=\"nofollow noreferrer\">shred</a> that you could use to get some help. It includes a type <a href=\"https://docs.rs/shred/0.7.1/shred/struct.Resources.html\" rel=\"nofollow noreferrer\"><code>Resources</code></a> which contains a map of some <code>TypeId</code> and maps to a value of the respective type. I think this is approximately what you want to do.</p>\n\n<p>If you struggle implementing your project, I would suggest you take a look at how they implemented their <code>Resources</code> type in the source code.</p>\n"}], "owner": {"reputation": 1, "user_id": 11085321, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e48822f26e44f5b01eb131f75108a9b4?s=128&d=identicon&r=PG&f=1", "display_name": "MantaRoll", "link": "https://stackoverflow.com/users/11085321/mantaroll"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 153, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1550600834, "creation_date": 1550591583, "last_edit_date": 1550591986, "question_id": 54770222, "link": "https://stackoverflow.com/questions/54770222/can-you-store-arbitrary-types-that-can-be-used-to-access-an-anymap", "title": "Can you store arbitrary types that can be used to access an AnyMap?", "body": "<p>I'm attempting to write a library that allows the implementor to add a single instance of an arbitrary type to a list of similar type instances. I would like for the implementor to be able to retrieve this instance by type. For example: <code>list_of_types.get::&lt;MyType&gt;()</code>. </p>\n\n<p>I have achieved this with an <code>AnyMap</code>, but the next thing I want to do is give the implementor the ability to define a list of types that can be looped through and used to access elements of this <code>AnyMap</code>. Does Rust have a way to store types themselves rather than instances? Does it change anything if these arbitrary types implement the same trait? Is there a better way to handle a list accessible by element type?</p>\n"}, {"tags": ["rust", "deserialization", "serde", "toml"], "answers": [{"tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 1, "last_activity_date": 1550573840, "creation_date": 1550573840, "answer_id": 54764617, "question_id": 54761790, "link": "https://stackoverflow.com/questions/54761790/how-to-deserialize-with-for-a-container-using-serde-in-rust/54764617#54764617", "title": "How to &quot;deserialize with&quot; for a container using serde in Rust", "body": "<p>First, we need another struct to use <code>deserialize_with</code> for our HashMap:</p>\n\n<pre><code>#[derive(Debug, Deserialize)]\nstruct Flatten {\n    #[serde(deserialize_with = \"string_or_struct\", flatten)]\n    obj: Obj,\n}\n</code></pre>\n\n<p>So we can write:</p>\n\n<pre><code>#[derive(Debug, Deserialize)]\nstruct InsideHashMap {\n    objs: HashMap&lt;String, Flatten&gt;,\n}\n</code></pre>\n\n<p>This should work but it's not because (I don't really know why yet, look like flatten and <code>deserialize_with</code> doesn't work together, it's seem that it doesn't use <code>deserialize_with</code> implementation)</p>\n\n<p>So, we must use the hard way, let implement it:</p>\n\n<pre><code>use std::collections::HashMap;\nuse std::fmt;\nuse std::str::FromStr;\n\nuse serde; // 1.0.85\nuse serde::de::{self, Deserialize, MapAccess, Visitor}; // 1.0.85\nuse serde::Deserializer;\nuse serde_derive::Deserialize; // 1.0.85\nuse toml; // 0.4.10\nuse void::Void; // 1.0.2\n\n#[derive(Debug)]\nstruct Obj {\n    x: isize,\n    y: String,\n}\n\nstruct ObjVisitor;\n\n// OjbAux is here to avoid implement the deserialiser of the map by hand we can't use\n// Obj cause it will cause infinite recursion\n#[derive(Debug, Deserialize)]\nstruct ObjAux {\n    x: isize,\n    y: String,\n}\n\nimpl&lt;'de&gt; Visitor&lt;'de&gt; for ObjVisitor {\n    type Value = Obj;\n\n    fn expecting(&amp;self, formatter: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        formatter.write_str(\"string or map\")\n    }\n\n    fn visit_str&lt;E&gt;(self, value: &amp;str) -&gt; Result&lt;Self::Value, E&gt;\n    where\n        E: de::Error,\n    {\n        Ok(FromStr::from_str(value).unwrap())\n    }\n\n    fn visit_map&lt;M&gt;(self, visitor: M) -&gt; Result&lt;Self::Value, M::Error&gt;\n    where\n        M: MapAccess&lt;'de&gt;,\n    {\n        let aux: ObjAux = Deserialize::deserialize(de::value::MapAccessDeserializer::new(visitor))?;\n        Ok(Obj { x: aux.x, y: aux.y })\n    }\n}\n\nimpl&lt;'de&gt; Deserialize&lt;'de&gt; for Obj {\n    fn deserialize&lt;D&gt;(deserializer: D) -&gt; Result&lt;Obj, D::Error&gt;\n    where\n        D: Deserializer&lt;'de&gt;,\n    {\n        deserializer.deserialize_any(ObjVisitor)\n    }\n}\n\nimpl FromStr for Obj {\n    type Err = Void;\n\n    fn from_str(s: &amp;str) -&gt; Result&lt;Self, Self::Err&gt; {\n        Ok(Obj {\n            x: 0,\n            y: s.to_owned(),\n        })\n    }\n}\n\n#[derive(Debug, Deserialize)]\nstruct Simple {\n    obj: Obj,\n}\n\n#[derive(Debug, Deserialize)]\nstruct InsideHashMap {\n    objs: HashMap&lt;String, Obj&gt;,\n}\n\nfn main() {\n    // Basic deserialization of Obj\n    let toml = r#\"\n        x = 5\n        y = \"hello\"\n    \"#;\n    let obj: Obj = toml::from_str(toml).unwrap();\n    println!(\"{:?}\", obj);\n\n    // Basic deserialization of Obj as a field in a struct\n    let toml = r#\"\n        [obj]\n        x = 5\n        y = \"hello\"\n    \"#;\n    let simple: Simple = toml::from_str(toml).unwrap();\n    println!(\"{:?}\", simple);\n\n    // Basic deserialization of Obj as a field in a struct as a string or struct\n    let toml = r#\"\n        obj = \"hello\"\n    \"#;\n    let simple: Simple = toml::from_str(toml).unwrap();\n    println!(\"{:?}\", simple);\n\n    // Deserialization of an Obj inside a HashMap\n    let toml = r#\"\n        [objs]\n        a = { x = 5, y = \"hello\" }\n    \"#;\n    let working: InsideHashMap = toml::from_str(toml).unwrap();\n    println!(\"{:?}\", working);\n\n    // Deserialization of Obj inside a HashMap field as a string or struct\n    let toml = r#\"\n        [objs]\n        a = \"hello\"\n    \"#;\n    let not_working: InsideHashMap = toml::from_str(toml).unwrap();\n    println!(\"{:?}\", not_working);\n}\n</code></pre>\n\n<p>This work as expected.</p>\n"}], "owner": {"reputation": 2434, "user_id": 4591251, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/22ad6242d3ca1d772c46a5d00389d925?s=128&d=identicon&r=PG", "display_name": "Ross MacArthur", "link": "https://stackoverflow.com/users/4591251/ross-macarthur"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1535, "favorite_count": 0, "accepted_answer_id": 54764617, "answer_count": 1, "score": 4, "last_activity_date": 1550573840, "creation_date": 1550565013, "last_edit_date": 1550567463, "question_id": 54761790, "link": "https://stackoverflow.com/questions/54761790/how-to-deserialize-with-for-a-container-using-serde-in-rust", "title": "How to &quot;deserialize with&quot; for a container using serde in Rust", "body": "<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=643f03e664d902f97bc024b3c09d7d82\" rel=\"nofollow noreferrer\">MVCE</a>:</p>\n\n<pre><code>use std::collections::HashMap;\nuse std::fmt;\nuse std::marker::PhantomData;\nuse std::str::FromStr;\n\nuse serde; // 1.0.85\nuse serde::de::{self, MapAccess, Visitor}; // 1.0.85\nuse serde_derive::Deserialize; // 1.0.85\nuse toml; // 0.4.10\nuse void::Void; // 1.0.2\n\n// See: https://serde.rs/string-or-struct.html\nfn string_or_struct&lt;'de, T, D&gt;(deserializer: D) -&gt; Result&lt;T, D::Error&gt;\nwhere\n    T: serde::Deserialize&lt;'de&gt; + FromStr&lt;Err = Void&gt;,\n    D: serde::Deserializer&lt;'de&gt;,\n{\n    // This is a Visitor that forwards string types to T's `FromStr` impl and\n    // forwards map types to T's `Deserialize` impl. The `PhantomData` is to\n    // keep the compiler from complaining about T being an unused generic type\n    // parameter. We need T in order to know the Value type for the Visitor\n    // impl.\n    struct StringOrStruct&lt;T&gt;(PhantomData&lt;fn() -&gt; T&gt;);\n\n    impl&lt;'de, T&gt; Visitor&lt;'de&gt; for StringOrStruct&lt;T&gt;\n    where\n        T: serde::Deserialize&lt;'de&gt; + FromStr&lt;Err = Void&gt;,\n    {\n        type Value = T;\n\n        fn expecting(&amp;self, formatter: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n            formatter.write_str(\"string or map\")\n        }\n\n        fn visit_str&lt;E&gt;(self, value: &amp;str) -&gt; Result&lt;T, E&gt;\n        where\n            E: de::Error,\n        {\n            Ok(FromStr::from_str(value).unwrap())\n        }\n\n        fn visit_map&lt;M&gt;(self, visitor: M) -&gt; Result&lt;T, M::Error&gt;\n        where\n            M: MapAccess&lt;'de&gt;,\n        {\n            // `MapAccessDeserializer` is a wrapper that turns a `MapAccess`\n            // into a `Deserializer`, allowing it to be used as the input to T's\n            // `Deserialize` implementation. T then deserializes itself using\n            // the entries from the map visitor.\n            serde::Deserialize::deserialize(de::value::MapAccessDeserializer::new(visitor))\n        }\n    }\n\n    deserializer.deserialize_any(StringOrStruct(PhantomData))\n}\n\nimpl FromStr for Obj {\n    type Err = Void;\n\n    fn from_str(s: &amp;str) -&gt; Result&lt;Self, Self::Err&gt; {\n        Ok(Obj {\n            x: 0,\n            y: s.to_owned(),\n        })\n    }\n}\n\n// ----------------------------------------------------------------------------\n\n#[derive(Debug, Deserialize)]\nstruct Obj {\n    x: isize,\n    y: String,\n}\n\n#[derive(Debug, Deserialize)]\nstruct Simple {\n    #[serde(deserialize_with = \"string_or_struct\")]\n    obj: Obj,\n}\n\n#[derive(Debug, Deserialize)]\nstruct InsideHashMap {\n    objs: HashMap&lt;String, Obj&gt;,\n}\n\nfn main() {\n    // Basic deserialization of Obj\n    let toml = r#\"\n        x = 5\n        y = \"hello\"\n    \"#;\n    let obj: Obj = toml::from_str(toml).unwrap();\n    println!(\"{:?}\", obj);\n\n    // Basic deserialization of Obj as a field in a struct\n    let toml = r#\"\n        [obj]\n        x = 5\n        y = \"hello\"\n    \"#;\n    let simple: Simple = toml::from_str(toml).unwrap();\n    println!(\"{:?}\", simple);\n\n    // Basic deserialization of Obj as a field in a struct as a string or struct\n    let toml = r#\"\n        obj = \"hello\"\n    \"#;\n    let simple: Simple = toml::from_str(toml).unwrap();\n    println!(\"{:?}\", simple);\n\n    // Deserialization of an Obj inside a HashMap\n    let toml = r#\"\n        [objs]\n        a = { x = 5, y = \"hello\" }\n    \"#;\n    let working: InsideHashMap = toml::from_str(toml).unwrap();\n    println!(\"{:?}\", working);\n\n    // Deserialization of Obj inside a HashMap field as a string or struct\n    let toml = r#\"\n        [objs]\n        a = \"hello\"\n    \"#;\n    let not_working: InsideHashMap = toml::from_str(toml).unwrap();\n    println!(\"{:?}\", not_working);\n}\n</code></pre>\n\n<p>I want to use serde to deserialize a TOML format where a struct can be specified as string or the normal struct specification</p>\n\n<pre><code>a = \"a string\"\nb = { x = 5, y = \"another string\" }\n</code></pre>\n\n<p>In this example I would end up with a HashMap that looks like</p>\n\n<pre><code>{\n   \"a\": Obj { x: 0, y: \"a string\" },\n   \"b\": Obj { x: 5, y: \"another string\" }\n}\n</code></pre>\n\n<p>I have read <a href=\"https://serde.rs/string-or-struct.html\" rel=\"nofollow noreferrer\">https://serde.rs/string-or-struct.html</a> on how to use the \"deserialize_with\" attribute on a struct field. But how do I go about this when the struct is inside a container like a HashMap?</p>\n\n<pre><code>#[derive(Debug, Deserialize)]\nstruct Obj {\n    x: isize,\n    y: String\n}\n\n#[derive(Debug, Deserialize)]\nstruct Simple {\n    #[serde(deserialize_with = \"string_or_struct\")]\n    obj: Obj\n}\n\n#[derive(Debug, Deserialize)]\nstruct InsideHashMap { \n    objs: HashMap&lt;String, Obj&gt; // &lt;-- how can I use \"deserialize_with\" on Obj here\n}\n</code></pre>\n"}, {"tags": ["image", "rust", "qr-code"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1550559810, "post_id": 54760369, "comment_id": 96301692, "body": "What do you mean by &quot;error here&quot;? What is the exact error message?"}], "answers": [{"tags": [], "owner": {"reputation": 1, "user_id": 8642222, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/98c21730a9bcc1f50dc9d51f15c89852?s=128&d=identicon&r=PG&f=1", "display_name": "henky", "link": "https://stackoverflow.com/users/8642222/henky"}, "is_accepted": false, "score": 0, "last_activity_date": 1550587192, "last_edit_date": 1550587192, "creation_date": 1550559869, "answer_id": 54760481, "question_id": 54760369, "link": "https://stackoverflow.com/questions/54760369/rust-image-post-request/54760481#54760481", "title": "rust image post request", "body": "<p>I copied an answer from <a href=\"https://stackoverflow.com/questions/50731636/how-do-i-encode-a-rust-piston-image-and-get-the-result-in-memory\">How do I encode a Rust Piston image and get the result in memory?</a> and changed </p>\n\n<pre><code>image::png::PNGEncoder::new(buf.by_ref()))\n    .encode(\n         &amp;images.into_raw(), \n         dims.0, \n         dims.1, \n         ColorType::Gray(8),\n    ).expect(\"Error on encoding to png\");\n</code></pre>\n\n<p>And everything works now.</p>\n"}], "owner": {"reputation": 1, "user_id": 8642222, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/98c21730a9bcc1f50dc9d51f15c89852?s=128&d=identicon&r=PG&f=1", "display_name": "henky", "link": "https://stackoverflow.com/users/8642222/henky"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 103, "favorite_count": 0, "closed_date": 1550587168, "answer_count": 1, "score": 0, "last_activity_date": 1550587192, "creation_date": 1550559304, "last_edit_date": 1550559776, "question_id": 54760369, "link": "https://stackoverflow.com/questions/54760369/rust-image-post-request", "closed_reason": "Duplicate", "title": "rust image post request", "body": "<p>I use qrcode-rust which returns its result as image::ImageBuffer. I need to post the png result to thumbor server. How to convert this image buffer to Vec  ?.</p>\n\n<p>I try code below but my <code>buf</code> moved and I can do nothing about it.</p>\n\n<pre><code>let code = QrCode::new(arg1.as_bytes()).unwrap();\nlet images = code.render::&lt;Luma&lt;u8&gt;&gt;().build();\nlet mut buf: Vec&lt;u8&gt; = Vec::new();\nlet dims = images.dimensions();\nlet mut headers = HeaderMap::new();\n\nimage::png::PNGEncoder::new(buf)\n    .encode(&amp;images.into_raw(), dims.0, dims.1, ColorType::Gray(8))\n    .expect(\"Error on encoding to png\");\n\nlet len = buf.len(); //error here\nheaders.insert(CONTENT_TYPE, \"image/png\".parse().unwrap());\nheaders.insert(\"Slug\", \"photo.jpg\".parse().unwrap());\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 35470, "user_id": 6348498, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/0zu4m.jpg?s=128&g=1", "display_name": "Gurwinder Singh", "link": "https://stackoverflow.com/users/6348498/gurwinder-singh"}, "edited": false, "score": 1, "creation_date": 1550543779, "post_id": 54758052, "comment_id": 96297468, "body": "The randomly generated value needs to outlive function body. May be store owned string in the expression instead of slice?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1550545757, "post_id": 54758052, "comment_id": 96297895, "body": "Idiomatic Rust uses <code>snake_case</code> for variables, methods, macros, and fields; <code>UpperCamelCase</code> for types and enum variants; and <code>SCREAMING_SNAKE_CASE</code> for statics and constants. Use <code>ExpressionNode</code> and <code>create_expression</code> instead, please."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1550545975, "post_id": 54758052, "comment_id": 96297933, "body": "There is no reason to use <code>std::option::Option</code> or <code>std::boxed::Box</code> \u2014 these are in the prelude and don&#39;t need to be fully qualified (and indeed you didn&#39;t qualify them everywhere). Using an explicit <code>return</code> at the end of a block is also non-idiomatic."}], "answers": [{"tags": [], "owner": {"reputation": 60850, "user_id": 221955, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0bc09e1bd45610fc85274cd7bb002c56?s=128&d=identicon&r=PG", "display_name": "Michael Anderson", "link": "https://stackoverflow.com/users/221955/michael-anderson"}, "is_accepted": true, "score": 8, "last_activity_date": 1550553306, "last_edit_date": 1550553306, "creation_date": 1550544992, "answer_id": 54758225, "question_id": 54758052, "link": "https://stackoverflow.com/questions/54758052/how-to-solve-returns-a-value-referencing-data-owned-by-the-current-function-er/54758225#54758225", "title": "How to solve &quot;returns a value referencing data owned by the current function&quot; error in Rust?", "body": "<p>The biggest problem with the code is the use of <code>&amp;str</code> in the <code>ExpressionNode</code>.\nThe simplest fix is to change it to <code>String</code>. You can see the fix for that below.\nThis also allows removal of all the lifetime annotations.</p>\n\n<p>There's also a second fix in that code that is important.</p>\n\n<pre><code>let value: &amp;str = *rand::thread_rng().choose(&amp;operators).unwrap();\nif value == \"ELEM\"{\n    let value = rand::thread_rng().gen::&lt;f64&gt;().to_string();\n}\n</code></pre>\n\n<p>should be updating <code>value</code>, so the assignment within the if should not contain <code>let</code>, and the first assignment should be <code>let mut value</code>.</p>\n\n<p>If you're not happy with all the assignments that are happening when switching to a <code>String</code>, you have two other options - use a <a href=\"https://doc.rust-lang.org/std/borrow/enum.Cow.html\" rel=\"noreferrer\"><code>Cow</code></a> string or use a enum for the contained value type so that it can contain a string or a float, something like - <code>val: Either&lt;&amp;str, f64&gt;</code> (There's a version using this at the end of this answer).</p>\n\n<p>The string based version:</p>\n\n<pre><code>use rand::Rng;\n\n#[derive(Debug)]\nstruct ExpressionNode {\n    val: String,\n    left: Option&lt;Box&lt;ExpressionNode&gt;&gt;,\n    right: Option&lt;Box&lt;ExpressionNode&gt;&gt;,\n}\n\nfn create_expression(operators: &amp;[&amp;str], p: i32) -&gt; Option&lt;Box&lt;ExpressionNode&gt;&gt; {\n    if p == 0 {\n        let value = String::from(rand::thread_rng().gen::&lt;f64&gt;().to_string());\n        let new_node = ExpressionNode {\n            val: value,\n            left: None,\n            right: None,\n        };\n        return Some(Box::new(new_node));\n    }\n    let mut value = rand::thread_rng().choose(&amp;operators).unwrap().to_string();\n    if value == \"ELEM\" {\n        value = rand::thread_rng().gen::&lt;f64&gt;().to_string();\n    }\n\n    let new_node = ExpressionNode {\n        val: value,\n        left: create_expression(operators.clone(), p - 1),\n        right: create_expression(operators.clone(), p - 1),\n    };\n    Some(Box::new(new_node))\n}\n\nfn main() {\n    let v = vec![\"a\", \"b\", \"c\", \"ELEM\"];\n    let tree = create_expression(&amp;v, 3);\n    println!(\"tree = {:?}\", tree)\n}\n</code></pre>\n\n<p>For comparison, here's a version using <code>Either&lt;&amp;str, f64&gt;</code>:</p>\n\n<pre><code>use either::Either;\nuse rand::Rng;\n\n#[derive(Debug)]\nstruct ExpressionNode&lt;'a&gt; {\n    val: Either&lt;&amp;'a str, f64&gt;,\n    left: Option&lt;Box&lt;ExpressionNode&lt;'a&gt;&gt;&gt;,\n    right: Option&lt;Box&lt;ExpressionNode&lt;'a&gt;&gt;&gt;,\n}\n\nfn create_expression&lt;'a&gt;(operators: &amp;[&amp;'a str], p: i32) -&gt; Option&lt;Box&lt;ExpressionNode&lt;'a&gt;&gt;&gt; {\n    if p == 0 {\n        let value = rand::thread_rng().gen::&lt;f64&gt;();\n        let new_node = ExpressionNode {\n            val: Either::Right(value),\n            left: None,\n            right: None,\n        };\n        return Some(Box::new(new_node));\n    }\n    let v = *rand::thread_rng().choose(&amp;operators).unwrap();\n    let value = if v == \"ELEM\" {\n        Either::Right(rand::thread_rng().gen::&lt;f64&gt;())\n    } else {\n        Either::Left(v)\n    };\n\n    let new_node = ExpressionNode {\n        val: value,\n        left: create_expression(operators.clone(), p - 1),\n        right: create_expression(operators.clone(), p - 1),\n    };\n    Some(Box::new(new_node))\n}\n\nfn main() {\n    let v = vec![\"a\", \"b\", \"c\", \"ELEM\"];\n    let tree = create_expression(&amp;v, 3);\n    println!(\"tree = {:?}\", tree)\n}\n</code></pre>\n"}], "owner": {"reputation": 391, "user_id": 9546425, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-iyh8LtJD6J0/AAAAAAAAAAI/AAAAAAAAAtg/Wgk60jpfgmY/photo.jpg?sz=128", "display_name": "MMagueta", "link": "https://stackoverflow.com/users/9546425/mmagueta"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 21749, "favorite_count": 4, "closed_date": 1550545674, "accepted_answer_id": 54758225, "answer_count": 1, "score": 23, "last_activity_date": 1550553306, "creation_date": 1550543538, "last_edit_date": 1550545668, "question_id": 54758052, "link": "https://stackoverflow.com/questions/54758052/how-to-solve-returns-a-value-referencing-data-owned-by-the-current-function-er", "closed_reason": "Duplicate", "title": "How to solve &quot;returns a value referencing data owned by the current function&quot; error in Rust?", "body": "<p>I'm trying to code a binary tree that generates random expressions. I need random numbers and a set of functions. I receive a vector with the functions and the depth for the expression in the tree. In the operators vector, I also include a \"ELEM\" string, this is used to choose a random element from the vector and then change it for a float.</p>\n\n<p>It seems I still do not understand the exact use for borrows, moving and ownership, since it is a recursive function, it shows the error saying that value has been borrowed and cannot return a local variable.</p>\n\n<pre><code>use rand::Rng;\n\nstruct Expression_Node&lt;'a&gt; {\n    val: &amp;'a str,\n    left: Option&lt;Box&lt;Expression_Node&lt;'a&gt;&gt;&gt;,\n    right: Option&lt;Box&lt;Expression_Node&lt;'a&gt;&gt;&gt;,\n}\n\nfn Create_Expression(\n    operators: Vec&lt;&amp;str&gt;,\n    p: i32,\n) -&gt; std::option::Option&lt;std::boxed::Box&lt;Expression_Node&lt;'_&gt;&gt;&gt; {\n    if p == 0 {\n        let value = String::from(rand::thread_rng().gen::&lt;f64&gt;().to_string());\n        let value2: &amp;str = value.as_ref();\n        //println!(\"{:?}\", value);\n        let new_node = Expression_Node {\n            val: value2,\n            left: None,\n            right: None,\n        };\n        return Some(Box::new(new_node));\n    }\n    let value: &amp;str = *rand::thread_rng().choose(&amp;operators).unwrap();\n    println!(\"VAL: {:?}\", value);\n    if value == \"ELEM\" {\n        let value = rand::thread_rng().gen::&lt;f64&gt;().to_string();\n    }\n\n    let new_node = Expression_Node {\n        val: value,\n        left: Create_Expression(operators.clone(), p - 1),\n        right: Create_Expression(operators.clone(), p - 1),\n    };\n    return Some(Box::new(new_node));\n}\n</code></pre>\n\n<p>The error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0515]: cannot return value referencing local variable `value`\n  --&gt; src/lib.rs:22:16\n   |\n15 |         let value2: &amp;str = value.as_ref();\n   |                            ----- `value` is borrowed here\n...\n22 |         return Some(Box::new(new_node));\n   |                ^^^^^^^^^^^^^^^^^^^^^^^^ returns a value referencing data owned by the current function\n</code></pre>\n"}, {"tags": ["rust", "pattern-matching", "lifetime"], "answers": [{"comments": [{"owner": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "edited": false, "score": 0, "creation_date": 1550542049, "post_id": 54757855, "comment_id": 96297151, "body": "Ahh. So this works! Now I can have trait objects for all clonable things. Nice."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1550542254, "last_edit_date": 1550542254, "creation_date": 1550541874, "answer_id": 54757855, "question_id": 54757677, "link": "https://stackoverflow.com/questions/54757677/why-cant-i-call-a-method-after-destructuring-a-variable-but-i-can-if-i-access-t/54757855#54757855", "title": "Why can&#39;t I call a method after destructuring a variable but I can if I access the field directly?", "body": "<p>TL;DR: Dereference the value before calling the method:</p>\n\n<pre><code>Foo((*b).clone_box())\n</code></pre>\n\n<hr>\n\n<p>With <code>let Foo(b) = self</code>, the type of <code>b</code> is <code>&amp;Box&lt;(dyn CloneBox + 'static)&gt;</code>. The method call is effectively</p>\n\n<pre><code>Foo(&lt;&amp;Box&lt;dyn CloneBox + 'static&gt; as CloneBox&gt;::clone_box(&amp;b))\n</code></pre>\n\n<p>This value cannot be made into the trait object <code>Box&lt;dyn CloneBox + 'static&gt;</code> because of the local reference. Amusingly, I believe this would be recursively using the blanket implementation if the compiler allowed it. </p>\n\n<p>With <code>self.0.clone_box()</code>, the method call is effectively:</p>\n\n<pre><code>Foo(&lt;dyn CloneBox as CloneBox&gt;::clone_box(&amp;**b)\n</code></pre>\n\n<p>We could write this as <code>Foo((&amp;**b).clone_box())</code> to be explicit, but since there's no intermediate implementations, <code>Foo((*b).clone_box())</code> is sufficient.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/28519997/155423\">What are Rust&#39;s exact auto-dereferencing rules?</a></li>\n</ul>\n"}], "owner": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 79, "favorite_count": 0, "accepted_answer_id": 54757855, "answer_count": 1, "score": 2, "last_activity_date": 1550542343, "creation_date": 1550540236, "last_edit_date": 1550542343, "question_id": 54757677, "link": "https://stackoverflow.com/questions/54757677/why-cant-i-call-a-method-after-destructuring-a-variable-but-i-can-if-i-access-t", "title": "Why can&#39;t I call a method after destructuring a variable but I can if I access the field directly?", "body": "<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=76b2bf5a01338bf1c9dac391d4939707\" rel=\"nofollow noreferrer\">The following</a> didn't compile:</p>\n\n<pre><code>use std::any::Any;\n\npub trait CloneBox: Any {\n    fn clone_box(&amp;self) -&gt; Box&lt;dyn CloneBox&gt;;\n}\n\nimpl&lt;T&gt; CloneBox for T\nwhere\n    T: Any + Clone,\n{\n    fn clone_box(&amp;self) -&gt; Box&lt;dyn CloneBox&gt; {\n        Box::new(self.clone())\n    }\n}\n\nstruct Foo(Box&lt;dyn CloneBox&gt;);\n\nimpl Clone for Foo {\n    fn clone(&amp;self) -&gt; Self {\n        let Foo(b) = self;\n        Foo(b.clone_box())\n    }\n}\n</code></pre>\n\n<p>Error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for pattern due to conflicting requirements\n  --&gt; src/lib.rs:20:17\n   |\n20 |         let Foo(b) = self;\n   |                 ^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 19:5...\n  --&gt; src/lib.rs:19:5\n   |\n19 | /     fn clone(&amp;self) -&gt; Self {\n20 | |         let Foo(b) = self;\n21 | |         Foo(b.clone_box())\n22 | |     }\n   | |_____^\nnote: ...so that reference does not outlive borrowed content\n  --&gt; src/lib.rs:20:17\n   |\n20 |         let Foo(b) = self;\n   |                 ^\n   = note: but, the lifetime must be valid for the static lifetime...\nnote: ...so that the type `&amp;std::boxed::Box&lt;dyn CloneBox&gt;` will meet its required lifetime bounds\n  --&gt; src/lib.rs:21:15\n   |\n21 |         Foo(b.clone_box())\n   |  \n</code></pre>\n\n<p>However if change the code in <code>clone()</code> from <code>Foo(b.clone_box())</code> to <code>Foo(self.0.clone_box())</code>, it compiles without problem. In theory, field access should be the same as pattern matching, but why does pattern matching have lifetime issues?</p>\n\n<p>In my real code, the data is in an enum, not a struct, so pattern matching is the only option.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1550529257, "post_id": 54756166, "comment_id": 96294191, "body": "I think you confuse between row and column, also see <a href=\"https://docs.rs/ndarray/0.12.1/ndarray/struct.ArrayBase.html\" rel=\"nofollow noreferrer\">docs.rs/ndarray/0.12.1/ndarray/struct.ArrayBase.html</a>"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1550529709, "post_id": 54756166, "comment_id": 96294327, "body": "I don&#39;t think there is a smart way to do this, if your vector of vector is big, even transform it into a one vector will not improve cache performance, it would be better to change your algo to not need this feature or to inverse your row and column in your data. Without precise real situation is impossible to advice a correct solution."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1550535949, "post_id": 54756166, "comment_id": 96295951, "body": "See also the blog post <a href=\"https://eli.thegreenplace.net/2015/memory-layout-of-multi-dimensional-arrays/\" rel=\"nofollow noreferrer\">Memory layout of multi-dimensional arrays</a> or the Q&amp;A <a href=\"https://stackoverflow.com/q/21778374/155423\">What is the recommended way to iterate a matrix over rows?</a>."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1550582220, "post_id": 54756166, "comment_id": 96314457, "body": "Seems like maybe you could do something with <code>Itertools::kmerge_by</code>?"}, {"owner": {"reputation": 505, "user_id": 4731971, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e60ab9e7a02af85398cc7b7da4dafe9?s=128&d=identicon&r=PG", "display_name": "lucatrv", "link": "https://stackoverflow.com/users/4731971/lucatrv"}, "edited": false, "score": 0, "creation_date": 1550614825, "post_id": 54756166, "comment_id": 96331568, "body": "Once I have defined <code>iterators</code> as a vector of iterators, is there a smart way to convert it into an iterator of vectors?"}], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1550625879, "post_id": 54777360, "comment_id": 96334344, "body": "That not more efficient."}, {"owner": {"reputation": 505, "user_id": 4731971, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e60ab9e7a02af85398cc7b7da4dafe9?s=128&d=identicon&r=PG", "display_name": "lucatrv", "link": "https://stackoverflow.com/users/4731971/lucatrv"}, "edited": false, "score": 0, "creation_date": 1550674612, "post_id": 54777360, "comment_id": 96356732, "body": "Clarified that with my data model there is nothing better I can do regarding efficiency, I am going to use this solution for my code. IMHO <code>dynamiczip</code> could be considered for addition to the <code>itertools</code> crate besides <code>multizip</code>."}], "tags": [], "owner": {"reputation": 765, "user_id": 7246614, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/83eccd212e4687fc66e13aad21796b0b?s=128&d=identicon&r=PG", "display_name": "timotree", "link": "https://stackoverflow.com/users/7246614/timotree"}, "is_accepted": true, "score": 3, "last_activity_date": 1550625295, "creation_date": 1550625295, "answer_id": 54777360, "question_id": 54756166, "link": "https://stackoverflow.com/questions/54756166/how-do-i-efficiently-iterate-through-a-vecvect-row-by-row/54777360#54777360", "title": "How do I efficiently iterate through a `Vec&lt;Vec&lt;T&gt;&gt;` row by row?", "body": "<h2>Once I have a vector of iterators, how can I convert it to an iterator of vectors?</h2>\n\n<p>There are two ways to create an Iterator: to use an existing iterator adapter or to implement a custom Iterator.</p>\n\n<p>Let's take the second approach and define a custom Iterator type that takes a vector of iterators: </p>\n\n<pre><code>struct DynamicZip&lt;I&gt;\nwhere I: Iterator {\n    iterators: Vec&lt;I&gt;\n}\n</code></pre>\n\n<p>and let's provide an Iterator implementation:</p>\n\n<pre><code>impl&lt;I, T&gt; Iterator for DynamicZip&lt;I&gt;\nwhere I: Iterator&lt;Item = T&gt; {\n    type Item = Vec&lt;T&gt;;\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        let output: Option&lt;Vec&lt;T&gt;&gt; = self.iterators.iter_mut().map(|iter| iter.next()).collect()\n        output\n    }\n}\n</code></pre>\n\n<p>and we're done!</p>\n\n<h2>Going back to the original example</h2>\n\n<pre><code>fn main() {\n    let array = vec![vec![1, 2, 3], vec![4, 5, 6], vec![7, 8, 9]];\n    let iterators: Vec&lt;_&gt; = array.into_iter().map(|v| v.into_iter()).collect();\n    let dz = DynamicZip { iterators: iterators };\n    // use the Iterator type we just defined\n    for column in dz {\n        println!(\"{:?}\", column)\n    }\n}\n</code></pre>\n\n<p>will produce the output</p>\n\n<pre><code>[1, 4, 7]\n[2, 5, 8]\n[3, 6, 9]\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 2920, "user_id": 210304, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/3c70d1833ed67198b6e364834b13c770?s=128&d=identicon&r=PG", "display_name": "Caio", "link": "https://stackoverflow.com/users/210304/caio"}, "is_accepted": false, "score": 0, "last_activity_date": 1550666350, "creation_date": 1550666350, "answer_id": 54786594, "question_id": 54756166, "link": "https://stackoverflow.com/questions/54756166/how-do-i-efficiently-iterate-through-a-vecvect-row-by-row/54786594#54786594", "title": "How do I efficiently iterate through a `Vec&lt;Vec&lt;T&gt;&gt;` row by row?", "body": "<p>Your <code>Vec&lt;Vec&lt;T&gt;&gt;</code> is a column oriented matrix where each inner <code>Vec</code> is a column, threfore, it is possible to know the number of columns <strong>at run-time</strong> by simply performing an <code>array.len()</code> operation.</p>\n\n<p>With both rows and columns, it is easier to create an <code>Iterator</code>. Here is an example:</p>\n\n<pre><code>fn main() {\n    let matrix = vec![vec![1, 2, 3], vec![4, 5, 6], vec![7, 8, 9]];\n\n    let columns = matrix.len();\n    let rows = matrix[0].len();\n    // If you know the number of rows in advance. E.g.: In some constructor\n    // let rows = 3;\n\n    let iter = (0..rows).map(|row_idx| matrix.iter().flatten().skip(row_idx).step_by(columns));\n\n    for (row_idx, row_values) in iter.enumerate() {\n        for (column_idx, value) in row_values.enumerate() {\n            println!(\"[{}, {}] = {}\", row_idx, column_idx, value);\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 505, "user_id": 4731971, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e60ab9e7a02af85398cc7b7da4dafe9?s=128&d=identicon&r=PG", "display_name": "lucatrv", "link": "https://stackoverflow.com/users/4731971/lucatrv"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 791, "favorite_count": 1, "accepted_answer_id": 54777360, "answer_count": 2, "score": 3, "last_activity_date": 1550666350, "creation_date": 1550528070, "last_edit_date": 1550585921, "question_id": 54756166, "link": "https://stackoverflow.com/questions/54756166/how-do-i-efficiently-iterate-through-a-vecvect-row-by-row", "title": "How do I efficiently iterate through a `Vec&lt;Vec&lt;T&gt;&gt;` row by row?", "body": "<p>I am writing a library which employs a <code>Vec&lt;Vec&lt;T&gt;&gt;</code> type to store data in column-major order (each inner <code>Vec</code> represents a column). The user can create a <code>Vec&lt;Vec&lt;T&gt;&gt;</code> with any row and column length but all columns are constrained to be the same length. </p>\n\n<p>I need to sometimes efficiently iterate through the <code>Vec&lt;Vec&lt;T&gt;&gt;</code> by row. I would like to not change the array type because most of the time  I need to iterate \"by column vector\" (one full column vector at a time).</p>\n\n<p>Unless I am missing something, <code>Iterator::zip</code> is not an option because I do not know the number of column vectors in advance. <code>Itertools::izip</code> and <code>Itertools::multizip</code> are also not viable.</p>\n\n<p>This is my sample code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let array = vec![vec![1, 2, 3], vec![4, 5, 6], vec![7, 8, 9]];\nlet mut iterators: Vec&lt;_&gt; = array.iter().map(|x| x.iter()).collect();\nfor _ in 0..array[0].len() {\n    let values: Vec&lt;_&gt; = iterators.iter_mut().map(|x| x.next().unwrap()).collect();\n    dbg!(values);\n}\n</code></pre>\n\n<p>Should I define a mutable <code>values</code> vector before starting the iterations to avoid allocations at each cycle, or will the compiler take care of this optimization anyway? What is the easiest method to find it myself?</p>\n\n<p>Are there more efficient / idiomatic solutions?</p>\n"}, {"tags": ["rust", "destructor", "traits"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1550520605, "post_id": 54754534, "comment_id": 96290849, "body": "Asking &quot;where something is documented&quot; \u2014 is very close to being closed: <i>Questions asking us to recommend or find a book, tool, software library, tutorial or other off-site resource are off-topic for Stack Overflow as they tend to attract opinionated answers and spam</i>."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1550520715, "post_id": 54754534, "comment_id": 96290906, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=release&amp;edition=2018&amp;gist=6897112ae5fd197a8ca45f4f83ce77ca\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>, ..., ..., ..., it doesn&#39;t"}], "answers": [{"comments": [{"owner": {"reputation": 1936, "user_id": 1584012, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/382084cea852ce1fd7c613db8e3bfcbe?s=128&d=identicon&r=PG", "display_name": "wigy", "link": "https://stackoverflow.com/users/1584012/wigy"}, "edited": false, "score": 0, "creation_date": 1550521454, "post_id": 54754647, "comment_id": 96291217, "body": "Great answer, thank you. So this is pure compiler magic, like I have expected."}, {"owner": {"reputation": 138, "user_id": 1144858, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b3cba17cd5c6e976d2a58ff135587aec?s=128&d=identicon&r=PG", "display_name": "David Brown", "link": "https://stackoverflow.com/users/1144858/david-brown"}, "edited": false, "score": 1, "creation_date": 1550706622, "post_id": 54754647, "comment_id": 96371930, "body": "Not sure I&#39;d call it magic. The compiler will still (recursively) call drop when structures containing fields that implement <code>Drop</code> go out of scope. A type that doesn&#39;t itself implement drop may still have drop calls made when it goes out of scope."}, {"owner": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "reply_to_user": {"reputation": 138, "user_id": 1144858, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b3cba17cd5c6e976d2a58ff135587aec?s=128&d=identicon&r=PG", "display_name": "David Brown", "link": "https://stackoverflow.com/users/1144858/david-brown"}, "edited": false, "score": 0, "creation_date": 1550774418, "post_id": 54754647, "comment_id": 96404629, "body": "@DavidBrown I wouldn&#39;t personally consider it too magic either, but the whole magic issue is a bit muddy, so I didn&#39;t want to comment on it in the answer."}], "tags": [], "owner": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "is_accepted": true, "score": 5, "last_activity_date": 1550601236, "last_edit_date": 1550601236, "creation_date": 1550520629, "answer_id": 54754647, "question_id": 54754534, "link": "https://stackoverflow.com/questions/54754534/where-is-it-documented-that-optiont-is-drop/54754647#54754647", "title": "Where is it documented that Option&lt;T&gt; is Drop?", "body": "<p>The docs don't mention <code>Option&lt;T&gt;</code> implementing <code>Drop</code> because it doesn't implement it.</p>\n\n<p>The <code>Drop</code> trait is only needed when you want your struct or enum to have some <em>special</em> behaviour. If the only thing you need is to free the memory and run child elements' destructors, the compiler will do so on its own. From the relevant page in the <a href=\"https://doc.rust-lang.org/nomicon/destructors.html\" rel=\"nofollow noreferrer\">Rustonomicon</a>:</p>\n\n<blockquote>\n  <p>If a struct has no special logic for being dropped other than dropping its children, then it means <code>Drop</code> doesn't need to be implemented at all!</p>\n</blockquote>\n\n<p><code>Option</code> has no <code>Drop</code> implementation because there's no special logic involved in its destruction, unlike with <code>Rc</code> (which decrements the reference counter), or with a <code>MutexGuard</code> (which unlocks the parent mutex). You can observe the same behaviour with your own types, <code>Bar</code>s in a <code>struct Thingie(Bar, Bar)</code> will be dropped the same as if wrapped in <code>Some</code>.</p>\n\n<p>Note that everywhere above \"X has no <code>Drop</code> implementation\" really means no implementation - the compiler will not make one implicitly.</p>\n\n<p>You can also directly test if a type implements <code>Drop</code> or not:</p>\n\n<pre><code>fn test_for_drop&lt;T: Drop&gt;() { }\n\nfn main() {\n    test_for_drop::&lt;Option&lt;i32&gt;();\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=1347fbe02bd9dedd4cbbdb0820211a92\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>This produces an error:</p>\n\n<blockquote>\n  <pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `std::option::Option&lt;i32&gt;: std::ops::Drop` &gt; is not satisfied\n --&gt; src/main.rs:4:5\n  |\n4 |     test_for_drop::&lt;Option&lt;i32&gt;&gt;();\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::ops::Drop` is not implemented for `std::option::Option&lt;i32&gt;`\n  |\nnote: required by `test_for_drop`\n --&gt; src/main.rs:1:1\n  |\n1 | fn test_for_drop&lt;T: Drop&gt;() {}\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n</blockquote>\n"}], "owner": {"reputation": 1936, "user_id": 1584012, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/382084cea852ce1fd7c613db8e3bfcbe?s=128&d=identicon&r=PG", "display_name": "wigy", "link": "https://stackoverflow.com/users/1584012/wigy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 288, "favorite_count": 0, "accepted_answer_id": 54754647, "answer_count": 1, "score": 1, "last_activity_date": 1550601236, "creation_date": 1550520032, "last_edit_date": 1550520561, "question_id": 54754534, "link": "https://stackoverflow.com/questions/54754534/where-is-it-documented-that-optiont-is-drop", "title": "Where is it documented that Option&lt;T&gt; is Drop?", "body": "<p>I was hoping that if I wrap a <code>Box&lt;T&gt;</code> into an <code>Option</code>, drop just does its thing. And this program indeed outputs \"dropped\":</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait Foo {}\n\nstruct Bar {}\n\nimpl Foo for Bar {}\n\nimpl Drop for Bar {\n    fn drop(&amp;mut self) {\n        println!(\"dropped\")\n    }\n}\n\nfn main() {\n    let x = Box::new( Bar {} ) as Box&lt;Foo&gt;;\n    let _y = Option::Some(x);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=release&amp;edition=2018&amp;gist=25e52859266a238825ca3b6a7f12ff57\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>I checked the documentation of both <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html\" rel=\"nofollow noreferrer\"><code>Option</code></a> and <a href=\"https://doc.rust-lang.org/std/ops/trait.Drop.html\" rel=\"nofollow noreferrer\"><code>Drop</code></a> and I could not find a description of this behavior. Did I miss some compiler magic, or am I right that it cannot be implemented elsewhere, just in the trait declaration or implementor definition?</p>\n\n<p>How does <code>Option</code> implement <code>Drop</code> and why is it missing from the documentation?</p>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 11860, "user_id": 574815, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/81d70aa644c3cb5895eb11ee25c6a987?s=128&d=identicon&r=PG", "display_name": "Dylan", "link": "https://stackoverflow.com/users/574815/dylan"}, "edited": false, "score": 1, "creation_date": 1550526475, "post_id": 54754551, "comment_id": 96293234, "body": "I dug a bit more, and it looks like in the case of Amethyst, its <code>InputSystem</code> is responsible for taking events from <code>winit</code> and translating them to Amethyst&#39;s own <code>InputEvent</code> type, which I was able to use without fiddling with my Cargo.toml."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 11860, "user_id": 574815, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/81d70aa644c3cb5895eb11ee25c6a987?s=128&d=identicon&r=PG", "display_name": "Dylan", "link": "https://stackoverflow.com/users/574815/dylan"}, "edited": false, "score": 1, "creation_date": 1550586188, "post_id": 54754551, "comment_id": 96316960, "body": "@Dylan I would encourage you to make an answer to that effect; even if it doesn&#39;t suit the general case, it may help other people who come across the same problem with Amethyst."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1550520112, "creation_date": 1550520112, "answer_id": 54754551, "question_id": 54754402, "link": "https://stackoverflow.com/questions/54754402/how-to-properly-reference-the-same-code-as-a-dependency-of-a-dependency/54754551#54754551", "title": "How to properly reference the same code as a dependency of a dependency?", "body": "<p>There is currently no great solution to this problem. The best workaround is to add a direct dependency on the same version of the transitive dependency:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[dependencies]\nfoo = \"0.1\" \nbar = \"0.2\" # `foo` depends on bar 0.2 and we need to keep these in sync\n</code></pre>\n\n<p>You can use tools like <code>cargo tree</code> to <em>manually</em> identify the versions needed by <code>foo</code> and keep your Cargo.toml up to date. I highly recommend adding a comment specifying why you've picked a specific version.</p>\n\n<p>If the crate is very difficult to use without also using the underlying dependency alongside it, I'd also encourage you to file an issue with the parent crate to request that they re-export what is needed. A good example of this is the Tokio crate, which <a href=\"https://docs.rs/tokio/0.1.15/tokio/prelude/index.html\" rel=\"nofollow noreferrer\">re-exports large chunks of the futures crate</a>. </p>\n\n<hr>\n\n<p>Similar to your idea, <a href=\"https://github.com/rust-lang/cargo/issues/1636#issuecomment-165811714\" rel=\"nofollow noreferrer\">I proposed</a> having a way to use the same version as a dependency. Instead, the Cargo team opted to add the distinction of <a href=\"https://rust-lang.github.io/rfcs/1977-public-private-dependencies.html\" rel=\"nofollow noreferrer\">public and private dependencies</a>. While this will be a better solution from an engineering point of view, very little progress has been made on the implementation of it.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/44437123/155423\">Why is a trait not implemented for a type that clearly has it implemented?</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 11860, "user_id": 574815, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/81d70aa644c3cb5895eb11ee25c6a987?s=128&d=identicon&r=PG", "display_name": "Dylan", "link": "https://stackoverflow.com/users/574815/dylan"}, "is_accepted": false, "score": 1, "last_activity_date": 1550721159, "creation_date": 1550721159, "answer_id": 54798982, "question_id": 54754402, "link": "https://stackoverflow.com/questions/54754402/how-to-properly-reference-the-same-code-as-a-dependency-of-a-dependency/54798982#54798982", "title": "How to properly reference the same code as a dependency of a dependency?", "body": "<p>I'm leaving @Shepmaster's answer as the accepted one, as it answers the general question I was going for. But thanks to a gentle push from @trentcl, in case anyone found this question specifically for its relation to Amethyst, here's what I ended up doing.</p>\n\n<p><strong>Don't try to get the <code>winit::Events</code> at all.</strong></p>\n\n<p>When you attach an <code>InputBundle&lt;AX, AC&gt;</code> to your GameData, it sets up an <code>InputSystem&lt;AX, AC&gt;</code>, which re-publishes <code>winit::Events</code> in the form of <code>InputEvent&lt;AC&gt;</code>. </p>\n\n<p>It does this by setting up an <code>EventChannel&lt;InputEvent&lt;AC&gt;&gt;</code> as a Resource, which you can access via the <code>Read</code> type in the ECS system. EventChannels and their usage are explained <a href=\"https://www.amethyst.rs/book/master/concepts/event-channel.html\" rel=\"nofollow noreferrer\">in the Amethyst Book</a>. </p>\n\n<p>I've since switched to a different approach for handling my user input, but here's roughly what it looked like (note: Amethyst <a href=\"https://github.com/amethyst/amethyst/tree/a66d27b367980d175b2e98d5bb6794e8584eb1c2\" rel=\"nofollow noreferrer\">a little after v0.10.0</a>):</p>\n\n<pre><code>pub struct MouseMovementSystem {\n    reader: Option&lt;ReaderId&lt;InputEvent&lt;()&gt;&gt;&gt;, // AC = () \n}\n\nimpl&lt;'s&gt; System&lt;'s&gt; for MouseMovementSystem {\n    type SystemData = (\n        Read&lt;'s, EventChannel&lt;InputEvent&lt;()&gt;&gt;&gt;,\n        /* and others */\n    }\n\n    fn run(&amp;mut self, (events, /* and others */): Self::SystemData) {\n        let foo = events.read(self.reader.as_mut().unwrap())\n            .yadda_yadda(/* ... */); // event processing logic\n        do_stuff(foo);\n    }\n\n    fn setup(&amp;mut self, res: &amp;mut Resources) {\n        use amethyst::core::specs::prelude::SystemData;\n        Self::SystemData::setup(res);\n        self.reader = Some(res.fetch_mut::&lt;EventChannel&lt;InputEvent&lt;()&gt;&gt;&gt;().register_reader());\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 11860, "user_id": 574815, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/81d70aa644c3cb5895eb11ee25c6a987?s=128&d=identicon&r=PG", "display_name": "Dylan", "link": "https://stackoverflow.com/users/574815/dylan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 69, "favorite_count": 0, "accepted_answer_id": 54754551, "answer_count": 2, "score": 2, "last_activity_date": 1550721159, "creation_date": 1550519528, "last_edit_date": 1550519672, "question_id": 54754402, "link": "https://stackoverflow.com/questions/54754402/how-to-properly-reference-the-same-code-as-a-dependency-of-a-dependency", "title": "How to properly reference the same code as a dependency of a dependency?", "body": "<p>I've got a toy project that's using the <a href=\"https://github.com/amethyst/amethyst\" rel=\"nofollow noreferrer\">Amethyst game engine</a>. I'm trying to write my own <code>System</code> for collecting user input, similar to the <code>FlyMovementSystem</code> and <code>ArcBallRotationSystem</code> they have implemented <a href=\"https://github.com/amethyst/amethyst/blob/fbc2d6d6ca53c081ce86ae93a501d3ff1a2f640a/amethyst_controls/src/systems.rs\" rel=\"nofollow noreferrer\">here</a>.</p>\n\n<p>It appears the right way to go about collecting mouse movements is via an <code>EventChannel&lt;Event&gt;</code>, where <code>Event</code> comes from the <code>winit</code> crate, which Amethyst depends on, but does not re-export.</p>\n\n<p><strong>What's the \"right\" way to reference the same <code>winit::Event</code> that Amethyst does?</strong></p>\n\n<ul>\n<li>Should I add <code>winit</code> to my <code>Cargo.toml</code> file? If so, what is the recommended way to specify the version? (Is there some keyword I can use instead of a specific version number, to allow me to \"inherit\" the dependency from Amethyst?)</li>\n<li>Is referencing sub-dependencies actually discouraged? If so, what should I be doing instead?</li>\n</ul>\n"}, {"tags": ["rust", "borrow-checker", "borrowing"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1550504392, "post_id": 54750696, "comment_id": 96283574, "body": "Why do you want to put a reference into a HashMap? It is likely a bad idea."}, {"owner": {"reputation": 3, "user_id": 11079810, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-2vSFVWD45vc/AAAAAAAAAAI/AAAAAAAAAAA/ACevoQOB6yiRALKuyt7z37jlFMUsrlEbuQ/mo/photo.jpg?sz=128", "display_name": "Suns Flower", "link": "https://stackoverflow.com/users/11079810/suns-flower"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1550504562, "post_id": 54750696, "comment_id": 96283691, "body": "@DarthBoiethios I was storing some pages in a linked list and would like to store references to the pages in a hash table for faster access... I&#39;m not sure if that&#39;s ok.."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1550504598, "post_id": 54750696, "comment_id": 96283707, "body": "BTW, the issue is with your <code>Storage</code>, not the hashmap. Just borrow it immutably: <code>&amp;self</code>"}, {"owner": {"reputation": 3, "user_id": 11079810, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-2vSFVWD45vc/AAAAAAAAAAI/AAAAAAAAAAA/ACevoQOB6yiRALKuyt7z37jlFMUsrlEbuQ/mo/photo.jpg?sz=128", "display_name": "Suns Flower", "link": "https://stackoverflow.com/users/11079810/suns-flower"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1550504727, "post_id": 54750696, "comment_id": 96283783, "body": "But when I comment this line - &quot;m.insert(i as i32, p);&quot;  out, the error goes away"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1550504758, "post_id": 54750696, "comment_id": 96283798, "body": "Your code cannot be proven safe because the mutation done in <code>get</code> might invalidate the reference previously returned, allowing memory unsafety and breaking the rules of references. It might also modify the <i>immutable</i> reference returned, breaking a different rules of references."}, {"owner": {"reputation": 3, "user_id": 11079810, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-2vSFVWD45vc/AAAAAAAAAAI/AAAAAAAAAAA/ACevoQOB6yiRALKuyt7z37jlFMUsrlEbuQ/mo/photo.jpg?sz=128", "display_name": "Suns Flower", "link": "https://stackoverflow.com/users/11079810/suns-flower"}, "edited": false, "score": 0, "creation_date": 1550504792, "post_id": 54750696, "comment_id": 96283816, "body": "I can&#39;t borrow it immutably, I need to mutate self in that method.."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1550504907, "post_id": 54750696, "comment_id": 96283888, "body": "Well, then you cannot do that. Use an <code>Rc&lt;RefCell&lt;Data&gt;&gt;</code>"}, {"owner": {"reputation": 3, "user_id": 11079810, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-2vSFVWD45vc/AAAAAAAAAAI/AAAAAAAAAAA/ACevoQOB6yiRALKuyt7z37jlFMUsrlEbuQ/mo/photo.jpg?sz=128", "display_name": "Suns Flower", "link": "https://stackoverflow.com/users/11079810/suns-flower"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1550504928, "post_id": 54750696, "comment_id": 96283899, "body": "@Shepmaster Oh I see... so store references in a collection is really a bad idea I guess"}, {"owner": {"reputation": 3, "user_id": 11079810, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-2vSFVWD45vc/AAAAAAAAAAI/AAAAAAAAAAA/ACevoQOB6yiRALKuyt7z37jlFMUsrlEbuQ/mo/photo.jpg?sz=128", "display_name": "Suns Flower", "link": "https://stackoverflow.com/users/11079810/suns-flower"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1550504956, "post_id": 54750696, "comment_id": 96283922, "body": "@DarthBoiethios I&#39;ll give it a try, thanks"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1550505287, "post_id": 54750696, "comment_id": 96284138, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=4f9ece7bbb0d9776240ba1ce95f3ab0d\" rel=\"nofollow noreferrer\">The duplicate as applied to your situation</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1550505490, "post_id": 54750696, "comment_id": 96284253, "body": "<i>store references in a collection is really a bad idea I guess</i> \u2014 it&#39;s not a <b>bad</b> idea, it just comes with tradeoffs. This also has nothing to do with a collection; <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=846e360e5544e556d7bad958d8e54cee\" rel=\"nofollow noreferrer\">storing references at all</a> has the same problem."}], "owner": {"reputation": 3, "user_id": 11079810, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-2vSFVWD45vc/AAAAAAAAAAI/AAAAAAAAAAA/ACevoQOB6yiRALKuyt7z37jlFMUsrlEbuQ/mo/photo.jpg?sz=128", "display_name": "Suns Flower", "link": "https://stackoverflow.com/users/11079810/suns-flower"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 122, "favorite_count": 0, "closed_date": 1550504698, "answer_count": 0, "score": 0, "last_activity_date": 1550505272, "creation_date": 1550504317, "last_edit_date": 1550504601, "question_id": 54750696, "link": "https://stackoverflow.com/questions/54750696/cannot-store-references-in-hashmap-because-of-multiple-mutable-borrows", "closed_reason": "Duplicate", "title": "Cannot store references in hashmap because of multiple mutable borrows?", "body": "<p>I have a <code>Storage</code> struct with a <code>Box</code> pointing to some data on the heap. This storage struct has a method where it mutates itself and returns an immutable reference to its data on the heap. I tried to get these references in a loop and store them in a hash map (or any other collection), but it won't compile.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::collections::HashMap;\n\n#[derive(Copy, Clone)]\nstruct Data {\n    x: i32,\n    y: i32,\n}\n\nstruct Storage {\n    ds: Box&lt;[Data; 10]&gt;,\n}\n\nimpl Storage {\n    fn new() -&gt; Storage {\n        Storage {\n            ds: Box::new([Data { x: 8, y: 6 }; 10]),\n        }\n    }\n\n    // &amp;mut self is necessary because I need to mutate some fields in\n    // the actual code\n    fn get(&amp;mut self, i: usize) -&gt; &amp;Data {\n        &amp;self.ds[i]\n    }\n}\n\nfn main() {\n    let mut s = Storage::new();\n    let mut m: HashMap&lt;i32, &amp;Data&gt; = HashMap::new();\n\n    // get the reference and insert it into hashmap\n    for i in 0..10usize {\n        let p = s.get(i);\n        m.insert(i as i32, p);\n    }\n}\n</code></pre>\n\n<p>The compiler complains:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `s` as mutable more than once at a time\n  --&gt; src/main.rs:33:17\n   |\n33 |         let p = s.get(i);\n   |                 ^ mutable borrow starts here in previous iteration of loop\n</code></pre>\n\n<p>But <code>p</code> is an immutable reference and the mutable reference in method call should end as the method returns.</p>\n"}, {"tags": ["rust", "traits", "lifetime", "borrowing"], "comments": [{"owner": {"reputation": 112511, "user_id": 623041, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/pIG3S.png?s=128&g=1", "display_name": "eggyal", "link": "https://stackoverflow.com/users/623041/eggyal"}, "edited": false, "score": 0, "creation_date": 1550498919, "post_id": 54738085, "comment_id": 96280239, "body": "Must <code>WorkspaceController::get_log</code> borrow self, or can it take ownership?"}, {"owner": {"reputation": 101, "user_id": 11047410, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e90c9c10d22c03c5e209a238a4ca7335?s=128&d=identicon&r=PG&f=1", "display_name": "darkwisebear", "link": "https://stackoverflow.com/users/11047410/darkwisebear"}, "reply_to_user": {"reputation": 112511, "user_id": 623041, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/pIG3S.png?s=128&g=1", "display_name": "eggyal", "link": "https://stackoverflow.com/users/623041/eggyal"}, "edited": false, "score": 0, "creation_date": 1550513794, "post_id": 54738085, "comment_id": 96288211, "body": "Thanks @eggyal for the suggestion! Yes, this will lead to a usable version of the code (something along <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=1f0f5d2d6e41d5687098e5030e81437f\" rel=\"nofollow noreferrer\">these</a> lines) but requires a change of an already-existing trait plus all call sites which is something I&#39;d rather like to avoid. However, I&#39;ll give it a try in my project, maybe this leads to even better code!"}], "answers": [{"tags": [], "owner": {"reputation": 101, "user_id": 11047410, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e90c9c10d22c03c5e209a238a4ca7335?s=128&d=identicon&r=PG&f=1", "display_name": "darkwisebear", "link": "https://stackoverflow.com/users/11047410/darkwisebear"}, "is_accepted": true, "score": 0, "last_activity_date": 1551638670, "creation_date": 1551638670, "answer_id": 54972392, "question_id": 54738085, "link": "https://stackoverflow.com/questions/54738085/how-to-write-a-proper-generic-function-signature-when-borrowing-data-across-mult/54972392#54972392", "title": "How to write a proper generic function signature when borrowing data across multiple traits", "body": "<p>With the help of a nice and knowing person on GitHub I was able to create a working version of the code, see <a href=\"https://github.com/rust-lang/rust/issues/58868\" rel=\"nofollow noreferrer\">https://github.com/rust-lang/rust/issues/58868</a>. The key was to use a free lifetime bound on the type declaration of <code>Controller</code> inside <code>AsWorkspaceController</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait AsWorkspaceController&lt;'a&gt; {\n    type Controller: for&lt;'b&gt; WorkspaceController&lt;'b&gt;+'a;\n\n    fn get_controller(&amp;'a mut self) -&gt; Self::Controller;\n}\n</code></pre>\n\n<p>See the full code on the <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=33dd6ea59255870d5db57054140b4e2f\" rel=\"nofollow noreferrer\">playground</a>. </p>\n"}], "owner": {"reputation": 101, "user_id": 11047410, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e90c9c10d22c03c5e209a238a4ca7335?s=128&d=identicon&r=PG&f=1", "display_name": "darkwisebear", "link": "https://stackoverflow.com/users/11047410/darkwisebear"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 167, "favorite_count": 1, "accepted_answer_id": 54972392, "answer_count": 1, "score": 0, "last_activity_date": 1551638670, "creation_date": 1550440708, "last_edit_date": 1550996669, "question_id": 54738085, "link": "https://stackoverflow.com/questions/54738085/how-to-write-a-proper-generic-function-signature-when-borrowing-data-across-mult", "title": "How to write a proper generic function signature when borrowing data across multiple traits", "body": "<p>While developing on a private project I ran into a lifetime problem related to borrowing the same object over multiple structs and traits. This is a bunch of stripped-down definitions I used:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait WorkspaceLog {\n    fn get(&amp;self) -&gt; usize;\n}\n\nstruct TheLog&lt;'a&gt;(&amp;'a FilesystemOverlay);\n\nimpl&lt;'a&gt; WorkspaceLog for TheLog&lt;'a&gt; {\n    fn get(&amp;self) -&gt; usize {\n        (self.0).0\n    }\n}\n\ntrait WorkspaceController&lt;'a&gt; {\n    type Log: WorkspaceLog;\n    fn get_log(&amp;'a self) -&gt; Self::Log;\n}\n\nstruct FilesystemOverlay(usize);\n\nstruct FSWorkspaceController&lt;'a&gt;(&amp;'a mut FilesystemOverlay);\n\nimpl&lt;'a&gt; WorkspaceController&lt;'a&gt; for FSWorkspaceController&lt;'a&gt; {\n    type Log = TheLog&lt;'a&gt;;\n\n    fn get_log(&amp;'a self) -&gt; Self::Log {\n        TheLog(&amp;*self.0)\n    }\n}\n\ntrait AsWorkspaceController&lt;'a&gt; {\n    type Controller: WorkspaceController&lt;'a&gt;;\n\n    fn get_controller(self) -&gt; Self::Controller;\n}\n\nimpl&lt;'a&gt; AsWorkspaceController&lt;'a&gt; for &amp;'a mut FilesystemOverlay {\n    type Controller = FSWorkspaceController&lt;'a&gt;;\n\n    fn get_controller(self) -&gt; FSWorkspaceController&lt;'a&gt; {\n        FSWorkspaceController(self)\n    }\n}\n</code></pre>\n\n<p>So far, so good. This basically enables me to borrow a mut ref of FilesystemOverlay as some other interface, providing additional functionality. This interface, in turn, allows me to borrow essentially the same thing as yet another thing that provides the final data. This works as long a I directly use FilesystemOverlay:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn init1(control_dir: &amp;mut FilesystemOverlay) -&gt; usize {\n    let controller = control_dir.get_controller();\n    let log = controller.get_log();\n    log.get()\n}\n</code></pre>\n\n<p>However, if I replace the concrete reference with a type parameter, the compilation fails, telling me that controller doesn't live long enough since it, for reasons I don't understand, thinks that get_log borrows controller beyond the end of the function and thus way longer than the program logic\nrequires:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn init2&lt;'a: 'b, 'b, O&gt;(control_dir: O) -&gt; usize\n    where O: AsWorkspaceController&lt;'b&gt;+'a {\n    let controller = control_dir.get_controller();\n    let log = controller.get_log();\n    log.get()\n}\n\nfn main() {\n    let mut control_dir = FilesystemOverlay(5);\n    dbg!(init1(&amp;mut control_dir));\n    dbg!(init2(&amp;mut control_dir));\n}\n</code></pre>\n\n<p>I tried several approaches but I so far were unable to figure out the proper signature of init2. This is the error I get:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `controller` does not live long enough\n  --&gt; test.rs:53:15\n   |\n53 |     let log = controller.get_log();\n   |               ^^^^^^^^^^ borrowed value does not live long enough\n54 |     log.get()\n55 | }\n   | - borrowed value only lives until here\n   |\nnote: borrowed value must be valid for the lifetime 'b as defined on the function body at 50:18...\n  --&gt; test.rs:50:18\n   |\n50 | fn init2&lt;'a: 'b, 'b, O&gt;(control_dir: O) -&gt; usize\n   |                  ^^\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0597`.\n</code></pre>\n\n<p>This is the full code on the <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a2ef98efb581a6819f41eeb391d822f9\" rel=\"nofollow noreferrer\">rust playground</a>.</p>\n\n<p>So, how do I need to change the signature of init2 so that the compiler understands that controller may be dropped after the call to log.get()? Do I need other changes in the above types as well?</p>\n\n<p><strong>Edit:</strong> I've made some additional experiments and <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=deb828422637e1f9cbca4fa573425ef0\" rel=\"nofollow noreferrer\">this</a> is the closest I could manage to create. This one has two lifetimes and a signature that late-binds, but it still gives a warning about UB. Does anyone understand why?</p>\n"}, {"tags": ["docker", "rust", "32-bit", "musl"], "comments": [{"owner": {"reputation": 2106, "user_id": 7191047, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EWSwl.png?s=128&g=1", "display_name": "Danila Kiver", "link": "https://stackoverflow.com/users/7191047/danila-kiver"}, "edited": false, "score": 1, "creation_date": 1550496611, "post_id": 54738013, "comment_id": 96278730, "body": "<code>(os error 2)</code> is <code>ENOENT</code>, which, per <code>man 2 execve</code>, may be returned not only when file is actually not found, but also when it <b>can not be executed for some reason</b> (binary format is not supported by the kernel, etc.). That is 99% your case, but I can&#39;t spot the exact reason from first glance. Can you share full <code>Dockerfile</code> (or at least the base image you use) and the output of <code>uname -a</code> at your host?"}, {"owner": {"reputation": 2106, "user_id": 7191047, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EWSwl.png?s=128&g=1", "display_name": "Danila Kiver", "link": "https://stackoverflow.com/users/7191047/danila-kiver"}, "edited": false, "score": 1, "creation_date": 1550497122, "post_id": 54738013, "comment_id": 96279057, "body": "Also, it looks like the problem is not in the <code>cargo</code> binary itself, because <code>os error 2</code> seems to be a Rust standard library output, and this means that <code>cargo</code> itself <i>gets successfully started</i>, but some <i>subsequent</i> <code>execve()</code> fails. Try to install <code>strace</code> and run: <code>strace -f -e trace=execve cargo</code>, then look for the call which returns <code>-ENOENT</code>. This will show which binary causes the failure."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1550504101, "post_id": 54738013, "comment_id": 96283368, "body": "Let&#39;s pretend that not everyone has memorized what the &quot;old&quot; and &quot;new&quot; URLs are for rustup \u2014 can you share <b>what you actually changed</b>?"}, {"owner": {"reputation": 4229, "user_id": 327702, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/FEzyr.jpg?s=128&g=1", "display_name": "opensourcegeek", "link": "https://stackoverflow.com/users/327702/opensourcegeek"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1550510273, "post_id": 54738013, "comment_id": 96286785, "body": "@Shepmaster thanks/sorry - I&#39;m at day job currently, I&#39;ll get to replying these messages tonight. Not sure about down votes but fair enough"}, {"owner": {"reputation": 4229, "user_id": 327702, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/FEzyr.jpg?s=128&g=1", "display_name": "opensourcegeek", "link": "https://stackoverflow.com/users/327702/opensourcegeek"}, "reply_to_user": {"reputation": 2106, "user_id": 7191047, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EWSwl.png?s=128&g=1", "display_name": "Danila Kiver", "link": "https://stackoverflow.com/users/7191047/danila-kiver"}, "edited": false, "score": 0, "creation_date": 1550510287, "post_id": 54738013, "comment_id": 96286793, "body": "Sorry @DanilaKiver I&#39;ll get to it tonight"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1550516976, "post_id": 54738013, "comment_id": 96289507, "body": "Remember that downvotes are directed at the <i>question</i>, not the person behind the question. A downvoted question is an indicator to people that it isn&#39;t currently in a good state to be answered (among other possibilities). When the question is editied, votes can be revisited and changed."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1550517078, "post_id": 54738013, "comment_id": 96289541, "body": "One thing that strikes me is <code>ELF 32-bit LSB shared object</code> \u2014 does your Docker container have the ability to run 32-bit applications? How and why did you choose to install a 32-bit binary?"}, {"owner": {"reputation": 4229, "user_id": 327702, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/FEzyr.jpg?s=128&g=1", "display_name": "opensourcegeek", "link": "https://stackoverflow.com/users/327702/opensourcegeek"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1550531155, "post_id": 54738013, "comment_id": 96294803, "body": "@Shepmaster docker container doesn&#39;t looks like it does at the moment, I need to check where it&#39;s gone wrong - I&#39;ve used it in the past to build 32-bit stand alone binaries by using this container. Main purpose is, my target machine is 32-bit. thanks"}, {"owner": {"reputation": 4229, "user_id": 327702, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/FEzyr.jpg?s=128&g=1", "display_name": "opensourcegeek", "link": "https://stackoverflow.com/users/327702/opensourcegeek"}, "reply_to_user": {"reputation": 2106, "user_id": 7191047, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EWSwl.png?s=128&g=1", "display_name": "Danila Kiver", "link": "https://stackoverflow.com/users/7191047/danila-kiver"}, "edited": false, "score": 0, "creation_date": 1550531437, "post_id": 54738013, "comment_id": 96294880, "body": "@DanilaKiver I&#39;ve updated the question with Dockerfile and strace as well - running <code>uname -a</code> shows it&#39;s 64-bit kernel (host?). Running <code>file &#47;bin&#47;bash</code> shows  <code>&#47;bin&#47;bash: ELF 32-bit LSB  executable, Intel 80386, version 1 (SYSV), dynamically linked (uses shared libs), for GNU&#47;Linux 2.6.24, BuildID[sha1]=dc05f677715b7c5526272815f4f663d15924f737, stripped </code>. Thanks"}, {"owner": {"reputation": 2106, "user_id": 7191047, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EWSwl.png?s=128&g=1", "display_name": "Danila Kiver", "link": "https://stackoverflow.com/users/7191047/danila-kiver"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1550544325, "post_id": 54738013, "comment_id": 96297598, "body": "@Shepmaster sorry, but the problem is a bit of different plane. Running containers with i386 environment and binaries on x86_64 kernels is perfectly OK (you can easily check it by playing with <code>docker run -it i386&#47;ubuntu</code> on x86_64 box). However, what I see from the updated question and from local tests on my 64-bit machine is that <i>in 32-bit container with 32-bit linker and libraries 32-bit rustup tries to run 64-bit (!) cargo</i>, thus it fails."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2106, "user_id": 7191047, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EWSwl.png?s=128&g=1", "display_name": "Danila Kiver", "link": "https://stackoverflow.com/users/7191047/danila-kiver"}, "edited": false, "score": 0, "creation_date": 1550544575, "post_id": 54738013, "comment_id": 96297649, "body": "@DanilaKiver Running x86 on x86_64 depends on the correct kernel options and having the correct libraries installed; it may be true that the original image has this support (the fact that bash is 32-bit seems to be a dead giveaway...). I will rewrite my comment to be more accurate."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1550544612, "post_id": 54738013, "comment_id": 96297657, "body": "<i>Ever since I updated it</i> \u2014 you still haven&#39;t told us what you <b>changed</b>.  What was it <b>before</b>, and what was it <b>after</b>?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2106, "user_id": 7191047, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EWSwl.png?s=128&g=1", "display_name": "Danila Kiver", "link": "https://stackoverflow.com/users/7191047/danila-kiver"}, "edited": false, "score": 0, "creation_date": 1550544754, "post_id": 54738013, "comment_id": 96297687, "body": "@DanilaKiver your findings seem like enough of an answer to me though."}, {"owner": {"reputation": 2106, "user_id": 7191047, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EWSwl.png?s=128&g=1", "display_name": "Danila Kiver", "link": "https://stackoverflow.com/users/7191047/danila-kiver"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1550545382, "post_id": 54738013, "comment_id": 96297819, "body": "@Shepmaster The question is how 64-bit <code>cargo</code> got into this 32-bit env. What I see is that the installer script sees <code>x86_64</code> from <code>uname -m</code> but then recognizes that it is &quot;i686 env on 64-bit Linux&quot; (see <code>get_bitness()</code> function in the script). It downloads 32-bit <code>rustup-init</code>, which then suddenly decides that it runs on x86_64 (probably because of <code>uname</code> again - looks like it gets called before the <code>execve</code>), hence the 64-bit <code>cargo</code>. It seems to be a bit inconsistent behavior of <code>rustup</code> installer. The workaround is to use <code>setarch linux32</code> before the installation."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2106, "user_id": 7191047, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EWSwl.png?s=128&g=1", "display_name": "Danila Kiver", "link": "https://stackoverflow.com/users/7191047/danila-kiver"}, "edited": false, "score": 0, "creation_date": 1550545423, "post_id": 54738013, "comment_id": 96297827, "body": "@DanilaKiver see <a href=\"https://gist.github.com/shepmaster/688160ccecc7ac6bd28bb7761326df9c\" rel=\"nofollow noreferrer\">my (now deleted) answer</a> with another workaround. Either way, you should answer."}, {"owner": {"reputation": 2106, "user_id": 7191047, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EWSwl.png?s=128&g=1", "display_name": "Danila Kiver", "link": "https://stackoverflow.com/users/7191047/danila-kiver"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1550545501, "post_id": 54738013, "comment_id": 96297846, "body": "@Shepmaster I will write the detailed answer with explanations a bit later, thanks."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2106, "user_id": 7191047, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EWSwl.png?s=128&g=1", "display_name": "Danila Kiver", "link": "https://stackoverflow.com/users/7191047/danila-kiver"}, "edited": false, "score": 0, "creation_date": 1550545515, "post_id": 54738013, "comment_id": 96297849, "body": "@DanilaKiver The shell script just downloads a Rust binary that does the real work of installing things. I&#39;d bet that the Rust code doesn&#39;t account for a 32-on-64 situation."}, {"owner": {"reputation": 4229, "user_id": 327702, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/FEzyr.jpg?s=128&g=1", "display_name": "opensourcegeek", "link": "https://stackoverflow.com/users/327702/opensourcegeek"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1550562980, "post_id": 54738013, "comment_id": 96303130, "body": "@Shepmaster The change was update to the rustup URL and I used to be able to do <code>--with-target=i686-unknown-linux-musl</code> which didn&#39;t work for some reason and I presumed that option is gone in new installer so I started doing this as a separate step now <code>rustup target add</code>. Could this have caused the rustup installer to behave differently?"}, {"owner": {"reputation": 4229, "user_id": 327702, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/FEzyr.jpg?s=128&g=1", "display_name": "opensourcegeek", "link": "https://stackoverflow.com/users/327702/opensourcegeek"}, "reply_to_user": {"reputation": 2106, "user_id": 7191047, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EWSwl.png?s=128&g=1", "display_name": "Danila Kiver", "link": "https://stackoverflow.com/users/7191047/danila-kiver"}, "edited": false, "score": 0, "creation_date": 1550563097, "post_id": 54738013, "comment_id": 96303186, "body": "@DanilaKiver Thanks - that explains the odd behavior."}], "answers": [{"tags": [], "owner": {"reputation": 2106, "user_id": 7191047, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EWSwl.png?s=128&g=1", "display_name": "Danila Kiver", "link": "https://stackoverflow.com/users/7191047/danila-kiver"}, "is_accepted": true, "score": 3, "last_activity_date": 1550572147, "creation_date": 1550572147, "answer_id": 54764047, "question_id": 54738013, "link": "https://stackoverflow.com/questions/54738013/rust-musl-docker-image-cannot-find-cargo/54764047#54764047", "title": "Rust musl Docker image cannot find Cargo", "body": "<p>So, here is the summary of our investigations.</p>\n\n<p>The base image used for build is <code>i386/ubuntu</code> with 32-bit environment inside, however, this image does nothing to appropriately mask the results of <code>uname(2)</code> calls (by having something like <code>setarch linux32</code> as entrypoint), so, when running on 64-bit system (your case), any process inside the build container calling <code>uname(2)</code> or <code>uname(1)</code> sees <code>x86_64</code> instead of <code>i686</code>. This is the root of the problem.</p>\n\n<p>When you install <code>cargo</code>, you download and run the installation script, which detects the platform it runs on and downloads the appropriate version of <code>rustup-init</code>. The platform detection in this script recognizes correctly that it runs in 32-bit environment but on 64-bit kernel, so the script downloads 32-bit version of <code>rustup-init</code>. However, <code>rustup-init</code> decides that it runs on <code>x86_64</code> (probably it sees <code>x86_64</code> returned by <code>uname(2)</code>, but does not perform the check for \"32-bit environment on 64-bit kernel\" case, like the installer script does). You can see it during the installation without <code>-y</code>:</p>\n\n<pre><code>Current installation options:\n\n    default host triple: x86_64-unknown-linux-gnu\n    default toolchain: stable\n    modify PATH variable: yes\n</code></pre>\n\n<p>So, <code>rustup</code> installs 64-bit toolchain, and you end up with situation when calling <code>cargo</code> results in running <em>64-bit binary in 32-bit environment</em>, so you see the error.</p>\n\n<p>I still feel some sort of inconsistent behavior here, because both the installation script and <code>rustup-init</code> are <a href=\"https://github.com/rust-lang/rustup.rs\" rel=\"nofollow noreferrer\">parts of the same project</a> and I don't really see the reason why should they detect the platform <em>differently</em> in the same environment (why can't <code>rustup-init</code> just be as smart as the installation script is?).</p>\n\n<p>As @Shepmaster noticed, this is a known issue (<a href=\"https://github.com/rust-lang/rustup.rs/issues/1282\" rel=\"nofollow noreferrer\">Rustup installs 64bit compiler on a 32bit Docker instance</a>). There are two workarounds possible:</p>\n\n<ul>\n<li>force the platform for the default toolchain by passing <code>--default-host i686-unknown-linux-gnu</code> to the installer;</li>\n<li>fool the installer by running it under <code>setarch linux32</code> so that its call to <code>uname(2)</code> will see <code>i686</code> instead of <code>x86_64</code>.</li>\n</ul>\n\n<p>Personally, I would choose the first option, as it seems to be less hacky.</p>\n"}], "owner": {"reputation": 4229, "user_id": 327702, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/FEzyr.jpg?s=128&g=1", "display_name": "opensourcegeek", "link": "https://stackoverflow.com/users/327702/opensourcegeek"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1264, "favorite_count": 0, "accepted_answer_id": 54764047, "answer_count": 1, "score": 0, "last_activity_date": 1550572147, "creation_date": 1550440064, "last_edit_date": 1550534237, "question_id": 54738013, "link": "https://stackoverflow.com/questions/54738013/rust-musl-docker-image-cannot-find-cargo", "title": "Rust musl Docker image cannot find Cargo", "body": "<p>I'm trying to get Rust running in Docker to use it for 32-bit musl builds. Ever since I updated it to use the new URL to pull rustup, I'm hitting this issue when running the container interactively using bash:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>root@2c3549fe3169:/sample# cargo\nerror: command failed: 'cargo'\ninfo: caused by: No such file or directory (os error 2)\n</code></pre>\n\n<p>The weird thing is, I can see the executables </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>root@2c3549fe3169:/sample# ls -l /root/.cargo/bin/\ntotal 101440\n-rwxr-xr-x 10 root root 10383380 Feb 17 21:34 cargo\n-rwxr-xr-x 10 root root 10383380 Feb 17 21:34 cargo-clippy\n-rwxr-xr-x 10 root root 10383380 Feb 17 21:34 cargo-fmt\n-rwxr-xr-x 10 root root 10383380 Feb 17 21:34 rls\n-rwxr-xr-x 10 root root 10383380 Feb 17 21:34 rust-gdb\n-rwxr-xr-x 10 root root 10383380 Feb 17 21:34 rust-lldb\n-rwxr-xr-x 10 root root 10383380 Feb 17 21:34 rustc\n-rwxr-xr-x 10 root root 10383380 Feb 17 21:34 rustdoc\n-rwxr-xr-x 10 root root 10383380 Feb 17 21:34 rustfmt\n-rwxr-xr-x 10 root root 10383380 Feb 17 21:34 rustup\nroot@2c3549fe3169:/sample# date\nSun Feb 17 21:34:21 UTC 2019\nroot@2c3549fe3169:/sample# file /root/.cargo/bin/cargo\n/root/.cargo/bin/cargo: ELF 32-bit LSB shared object, Intel 80386, version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux.so.2, for GNU/Linux 2.6.9, with debug_info, not stripped\nroot@2c3549fe3169:/sample# cargo\nerror: command failed: 'cargo'\ninfo: caused by: No such file or directory (os error 2)\n</code></pre>\n\n<p>It is installed via:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>RUN curl https://sh.rustup.rs -sSf | sh -s -- \\\n--default-toolchain 1.32.0 \\\n-y &amp;&amp; \\\n~/.cargo/bin/rustup target add i686-unknown-linux-musl &amp;&amp; \\\necho \"[build]\\ntarget = \\\"i686-unknown-linux-musl\\\"\" &gt; ~/.cargo/config\n</code></pre>\n\n<p>I can see the file but I cannot seem to run it, even when I switch into that directory:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>root@2c3549fe3169:~/.cargo/bin# ./cargo\nerror: command failed: 'cargo'\ninfo: caused by: No such file or directory (os error 2)\n</code></pre>\n\n<p>This is what I see when running <code>ldd</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>root@4e21c8d37266:/volume# ldd /root/.cargo/bin/cargo\nlinux-gate.so.1 (0xf7f41000)\nlibdl.so.2 =&gt; /lib/i386-linux-gnu/libdl.so.2 (0xf774c000)\nlibrt.so.1 =&gt; /lib/i386-linux-gnu/librt.so.1 (0xf7742000)\nlibpthread.so.0 =&gt; /lib/i386-linux-gnu/libpthread.so.0 (0xf7723000)\nlibgcc_s.so.1 =&gt; /lib/i386-linux-gnu/libgcc_s.so.1 (0xf7705000)\nlibc.so.6 =&gt; /lib/i386-linux-gnu/libc.so.6 (0xf7529000)\nlibm.so.6 =&gt; /lib/i386-linux-gnu/libm.so.6 (0xf7427000)\n/lib/ld-linux.so.2 (0xf7f43000)\n</code></pre>\n\n<p>This is my complete Dockerfile</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>FROM i386/ubuntu\n\nRUN apt-get update &amp;&amp; apt-get install -y \\\n  cmake \\\n  curl \\\n  file \\\n  git \\\n  g++ \\\n  python \\\n  make \\\n  nano \\\n  ca-certificates \\\n  xz-utils \\\n  musl-tools \\\n  pkg-config \\\n  apt-file \\\n  xutils-dev \\\n  --no-install-recommends &amp;&amp; \\\n  rm -rf /var/lib/apt/lists/*\n\n\nRUN curl https://sh.rustup.rs -sSf | sh -s -- \\\n  --default-toolchain 1.32.0 \\\n  -y &amp;&amp; \\\n  ~/.cargo/bin/rustup target add i686-unknown-linux-musl &amp;&amp; \\\n  echo \"[build]\\ntarget = \\\"i686-unknown-linux-musl\\\"\" &gt; ~/.cargo/config\n\n\n# Compile C libraries with musl-gcc\nENV SSL_VER=1.0.2j \\\n    CURL_VER=7.52.1 \\\n    CC=musl-gcc \\\n    PREFIX=/usr/local \\\n    PATH=/usr/local/bin:$PATH \\\n    PKG_CONFIG_PATH=/usr/local/lib/pkgconfig\n\nRUN curl -sL http://www.openssl.org/source/openssl-$SSL_VER.tar.gz | tar xz &amp;&amp; \\\n    cd openssl-$SSL_VER &amp;&amp; \\\n    ./Configure no-shared --prefix=$PREFIX --openssldir=$PREFIX/ssl no-zlib -m32 linux-elf -fPIC -fno-stack-protector &amp;&amp; \\\n    make depend 2&gt; /dev/null &amp;&amp; make -j$(nproc) &amp;&amp; make install &amp;&amp; \\\n    cd .. &amp;&amp; rm -rf openssl-$SSL_VER\n\nRUN curl https://curl.haxx.se/download/curl-$CURL_VER.tar.gz | tar xz &amp;&amp; \\\n    cd curl-$CURL_VER &amp;&amp; \\\n    ./configure --enable-shared=no --enable-static=ssl --enable-optimize --prefix=$PREFIX --host=i686-pc-linux-gnu CFLAGS=-m32 \\\n      --with-ca-path=/etc/ssl/certs/ --with-ca-bundle=/etc/ssl/certs/ca-certificates.crt --without-ca-fallback &amp;&amp; \\\n    make -j$(nproc) &amp;&amp; make install &amp;&amp; \\\n    cd .. &amp;&amp; rm -rf curl-$CURL_VER\n\nENV SSL_CERT_FILE=/etc/ssl/certs/ca-certificates.crt \\\n    SSL_CERT_DIR=/etc/ssl/certs \\\n    OPENSSL_LIB_DIR=$PREFIX/lib \\\n    OPENSSL_INCLUDE_DIR=$PREFIX/include \\\n    OPENSSL_DIR=$PREFIX \\\n    OPENSSL_STATIC=1 \\\n    PATH=/usr/local/bin:/root/.cargo/bin:$PATH\n\nRUN echo $PATH\n\n</code></pre>\n\n<p>And strace'ing the <code>cargo</code> binary as per comments:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>root@156da6108ff8:~/.cargo/bin# strace -f -e trace=execve cargo               \nexecve(\"/root/.cargo/bin/cargo\", [\"cargo\"], 0xfffdd8fc /* 20 vars */) = 0\nexecve(\"/root/.rustup/toolchains/1.32.0-x86_64-unknown-linux-gnu/bin/cargo\", [\"/root/.rustup/toolchains/1.32.0-\"...], 0x57d95620 /* 25 vars */) = -1 ENOENT (No such file or directory)\nerror: command failed: 'cargo'\ninfo: caused by: No such file or directory (os error 2)\n+++ exited with 1 +++\n</code></pre>\n"}, {"tags": ["parsing", "rust", "nom"], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1550427521, "post_id": 54735914, "comment_id": 96254792, "body": "&quot;alt!(char!(&#39;-&#39;) | nom::digit) &quot;returns&quot; a char, so your lambda needs to accept a char as argument. And it is possibly &#39;-&#39;, so calling i32::from_str on it will fail at runtime.&quot;, the code will not compile, what are you saying ? rust is a strong type language. Just use <code>take_while</code> combinator from nom and this code will not &quot;fail at runtime&quot;"}], "tags": [], "owner": {"reputation": 8789, "user_id": 539465, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/2acba600ecfbe1cc2e7f3c94b686ac84?s=128&d=identicon&r=PG", "display_name": "Valentin Lorentz", "link": "https://stackoverflow.com/users/539465/valentin-lorentz"}, "is_accepted": false, "score": 1, "last_activity_date": 1550425611, "creation_date": 1550425611, "answer_id": 54735914, "question_id": 54735672, "link": "https://stackoverflow.com/questions/54735672/how-do-i-use-nom-to-parse-a-string-with-sign-into-an-i32/54735914#54735914", "title": "How do I use nom to parse a string with sign into an i32?", "body": "<p><code>alt!(char!('-') | nom::digit)</code> \"returns\" a char, so your lambda needs to accept a char as argument. And it is possibly <code>'-'</code>, so calling <code>i32::from_str</code> on it will fail at runtime.</p>\n\n<p>Instead of handle both the sign and digits in a single step, you should decompose your problem in two, eg. using <code>do_parse</code>.</p>\n\n<pre><code>named!(\n    i32_parser&lt;CompleteStr, i32&gt;,\n    do_parse!(\n        minus: opt!(char!('-')) &gt;&gt;\n        digits: many1!(digit) &gt;&gt;\n        ({\n            let sign = if minus.is_some() { -1 } else { 1 };\n            let mut number = 0;\n            for digit in digits {\n                number = number*10 + i32::from_str(digit.0).unwrap();\n            }\n            sign * number\n        })\n    )\n);\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 2384, "user_id": 102315, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/c8b935f2e5d916f361ffe33fe94a3d10?s=128&d=identicon&r=PG", "display_name": "Alper", "link": "https://stackoverflow.com/users/102315/alper"}, "edited": false, "score": 0, "creation_date": 1607164737, "post_id": 54738034, "comment_id": 115189789, "body": "Isn&#39;t it kinda weird that there are so many functions to parse numbers but nothing for something so basic as this? <a href=\"https://docs.rs/nom/6.0.1/nom/number/complete/index.html\" rel=\"nofollow noreferrer\">docs.rs/nom/6.0.1/nom/number/complete/index.html</a>"}], "tags": [], "owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "is_accepted": true, "score": 5, "last_activity_date": 1550440262, "creation_date": 1550440262, "answer_id": 54738034, "question_id": 54735672, "link": "https://stackoverflow.com/questions/54735672/how-do-i-use-nom-to-parse-a-string-with-sign-into-an-i32/54738034#54738034", "title": "How do I use nom to parse a string with sign into an i32?", "body": "<p>The <code>recognize!</code> macro can help you. It returns the parsed input string instead of the parser output, which can then be converted as usual. For example:</p>\n\n<pre><code>named!(i32_parser&lt;&amp;str, i32&gt;,\n    map_res!(\n        recognize!(tuple!(opt!(char!('-')), digit)),\n        FromStr::from_str)\n);\n</code></pre>\n"}], "owner": {"reputation": 1396, "user_id": 2454665, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/f8f3a867ea13690c5ec16669197640a5?s=128&d=identicon&r=PG", "display_name": "Nicolas C", "link": "https://stackoverflow.com/users/2454665/nicolas-c"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 922, "favorite_count": 0, "accepted_answer_id": 54738034, "answer_count": 2, "score": 4, "last_activity_date": 1550503762, "creation_date": 1550423792, "last_edit_date": 1550503762, "question_id": 54735672, "link": "https://stackoverflow.com/questions/54735672/how-do-i-use-nom-to-parse-a-string-with-sign-into-an-i32", "title": "How do I use nom to parse a string with sign into an i32?", "body": "<p>Using the <a href=\"https://crates.io/crates/nom\" rel=\"nofollow noreferrer\">nom</a> crate, I'm trying to write a parser that can recognize signed <code>i32</code> number from a <code>String</code>, i.e. can transform the string <code>-42</code> into the <code>i32</code> representation.</p>\n\n<p>So far I've come up with the following, but I'm failing to parse negative numbers:</p>\n\n<pre><code>use nom::types::CompleteStr;\nuse std::str::FromStr;\n\nnamed!(\n    i32_parser&lt;CompleteStr, i32&gt;,\n    map_res!(nom::digit, |CompleteStr(s)| i32::from_str(s))\n);\n\n#[test]\nfn parse_i32_positive() {\n    assert_eq!(\n        i32_parser(CompleteStr::from(\"42\")),\n        Ok((CompleteStr::from(\"\"), 42))\n    );\n}\n\n#[test]\nfn parse_i32_negative() {\n    assert_eq!(\n        i32_parser(CompleteStr::from(\"-42\")),\n        Ok((CompleteStr::from(\"\"), -42))\n    );\n}\n</code></pre>\n\n<p>I've also tried the following, but with a cryptic compilation error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>named!(\n     i32_parser&lt;CompleteStr, i32&gt;,\n     map_res!(alt!(char!('-') | nom::digit), |CompleteStr(s)| i32::from_str(s))\n );\n^ expected char, found struct `nom::types::CompleteStr`\n</code></pre>\n\n<p>Any suggestion on how to fix it? Or a simpler way to achieve that with nom?</p>\n\n<p>I'm explicitly looking to implement this with nom because I'm trying to parse a more complex structure. <code>i32::from_str(s)</code> works for simple strings but it's not what I'm looking for.</p>\n"}, {"tags": ["rust", "enumerate"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1550423089, "post_id": 54734956, "comment_id": 96253392, "body": "This is probably a closer duplicate: <a href=\"https://stackoverflow.com/a/29860499/493729\">stackoverflow.com/a/29860499/493729</a>"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1550423237, "post_id": 54734956, "comment_id": 96253433, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=971c037b9722cb11a75cabbf03f11701\" rel=\"nofollow noreferrer\">The above answer applied to your code</a>. By avoiding borrowing the vector for the iteration itself you can do as you please with the vector in the loop body."}, {"owner": {"reputation": 13, "user_id": 10747101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0aece84215e4e4600590a61cf7e363d8?s=128&d=identicon&r=PG", "display_name": "SharpBit", "link": "https://stackoverflow.com/users/10747101/sharpbit"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1550429320, "post_id": 54734956, "comment_id": 96255352, "body": "Thank you for the explanation!"}], "owner": {"reputation": 13, "user_id": 10747101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0aece84215e4e4600590a61cf7e363d8?s=128&d=identicon&r=PG", "display_name": "SharpBit", "link": "https://stackoverflow.com/users/10747101/sharpbit"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 104, "favorite_count": 0, "closed_date": 1550503638, "answer_count": 0, "score": 0, "last_activity_date": 1550418959, "creation_date": 1550418959, "question_id": 54734956, "link": "https://stackoverflow.com/questions/54734956/how-can-i-use-iter-mut-on-a-2d-vector-to-modify-the-next-value-in-the-vector", "closed_reason": "Duplicate", "title": "How can I use iter_mut() on a 2d vector to modify the next value in the vector?", "body": "<p>I'm trying to make an adder in Rust, and I'm coming into a problem where I can't set the value for the next digit's cin because of more than 1 mutable borrows</p>\n\n<p>This is my code</p>\n\n<pre><code>let mut digits = vec![vec![0; 3]; 5];  // [[a, b, cin], ..., [a, b, cin]]\n// ... some code here\nlet mut ans = String::new();\nfor (i, j) in digits.iter_mut().enumerate() {\n    let [sum, cout] = adder(j[0], j[1], j[2]);\n    if i &lt; 4 {\n        digits[i+1][2] = cout;\n    }\n    ans += &amp;sum.to_string();\n}\nans = ans.chars().rev().collect::&lt;String&gt;();\n</code></pre>\n\n<p>It should put the carry out result into the next digit's carry in, but instead I get this error:</p>\n\n<pre><code>error[E0499]: cannot borrow `digits` as mutable more than once at a time\n  --&gt; src\\main.rs:26:13\n   |\n23 |     for (i, j) in digits.iter_mut().enumerate() {\n   |                   -----------------------------\n   |                   |\n   |                   first mutable borrow occurs here\n   |                   first borrow used here, in later iteration of loop\n...\n26 |             digits[i+1][2] = cout;\n   |             ^^^^^^ second mutable borrow occurs here\n</code></pre>\n\n<p>Is there any way to fix this/get around this?</p>\n"}, {"tags": ["syntax", "rust", "reqwest", "rust-2018"], "answers": [{"comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 2, "creation_date": 1550418564, "post_id": 54733804, "comment_id": 96252076, "body": "You can also &quot;fix&quot; this by not opting in to Edition 2018 in your <code>Cargo.toml</code>. 2015 is the default and <code>asyn</code> is not reserved there."}], "tags": [], "owner": {"reputation": 491, "user_id": 3816796, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/BsnxI.jpg?s=128&g=1", "display_name": "taryn", "link": "https://stackoverflow.com/users/3816796/taryn"}, "is_accepted": true, "score": 5, "last_activity_date": 1550410529, "creation_date": 1550410529, "answer_id": 54733804, "question_id": 54733766, "link": "https://stackoverflow.com/questions/54733766/attempting-to-import-reqwestasync-errors-stating-that-async-is-a-reserved/54733804#54733804", "title": "Attempting to import `reqwest::async` errors stating that `async` is a reserved keyword", "body": "<p>Since <code>reqwest::async</code> was created before <code>async</code> was a reserved keyword (which happened in Rust 2018, I believe) previously this Just Worked\u2122.</p>\n\n<p>Now that <code>async</code> is a reserved keyword you need to use the <a href=\"https://rust-lang-nursery.github.io/edition-guide/rust-2018/module-system/raw-identifiers.html\" rel=\"noreferrer\">raw identifier</a> syntax:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use request::r#async::Client;\n</code></pre>\n"}], "owner": {"reputation": 491, "user_id": 3816796, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/BsnxI.jpg?s=128&g=1", "display_name": "taryn", "link": "https://stackoverflow.com/users/3816796/taryn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 253, "favorite_count": 0, "accepted_answer_id": 54733804, "answer_count": 1, "score": 4, "last_activity_date": 1550503304, "creation_date": 1550410309, "last_edit_date": 1550503304, "question_id": 54733766, "link": "https://stackoverflow.com/questions/54733766/attempting-to-import-reqwestasync-errors-stating-that-async-is-a-reserved", "title": "Attempting to import `reqwest::async` errors stating that `async` is a reserved keyword", "body": "<p>I want to make asynchronous HTTP requests using the <a href=\"https://crates.io/crates/reqwest\" rel=\"nofollow noreferrer\"><code>reqwest</code></a> crate. I have the following code:</p>\n\n<pre><code>// see https://docs.rs/reqwest/*/reqwest/async/index.html\nuse reqwest::async::Client;\n</code></pre>\n\n<p>When I attempt to compile my code I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: expected identifier, found reserved keyword `async`\n --&gt; src/main.rs:1:14\n  |\n1 | use reqwest::async::Client;\n  |              ^^^^^ expected identifier, found reserved keyword\n</code></pre>\n\n<p>How do I import from the <code>async</code> module?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 2, "creation_date": 1550367480, "post_id": 54729102, "comment_id": 96242219, "body": "The duplicate applied to your question: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=71cacc37311341bdffe6ed58bbbcb6f6\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 2, "creation_date": 1550367657, "post_id": 54729102, "comment_id": 96242240, "body": "Also, <code>get</code> never returns a mutable reference. If you would want that, you would need <code>get_mut</code>, but in that case 1) the borrow checker wouldn&#39;t be happy because you would hold 2 mutable references to the map, and 2) this would look-up in the map twice for each new key, which would be inefficient. This entry API solves both these problems."}], "owner": {"reputation": 350, "user_id": 3995501, "user_type": "registered", "accept_rate": 50, "profile_image": "https://graph.facebook.com/699717874/picture?type=large", "display_name": "Craig Harley", "link": "https://stackoverflow.com/users/3995501/craig-harley"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 26, "favorite_count": 0, "closed_date": 1550367853, "answer_count": 0, "score": 0, "last_activity_date": 1550364508, "creation_date": 1550364508, "question_id": 54729102, "link": "https://stackoverflow.com/questions/54729102/accessing-a-non-mutable-hash-map-inside-another-hashmap", "closed_reason": "Duplicate", "title": "Accessing a non-mutable hash map inside another hashmap", "body": "<p>Basically what I've got is a hash map which has another hashmap as it's value.</p>\n\n<p>I'm new to rust so what I'm trying to do is insert into an already existing hashmap, when I try that the compiler complains that <code>neighbors</code> is not mutable. </p>\n\n<p>But if I make it mutable by doing <code>Some(mut neighbors) =&gt; {</code> then I get another error:</p>\n\n<pre><code>error[E0596]: cannot borrow `*neighbors` as mutable, as it is behind a `&amp;` reference\n  --&gt; src\\main.rs:24:13\n   |\n23 |         Some(mut neighbors) =&gt; {\n   |              ------------- help: consider changing this to be a mutable reference: `&amp;mut std::collections::HashMap&lt;u32, bool&gt;`\n24 |             neighbors.insert(j, true);\n   |             ^^^^^^^^^ `neighbors` is a `&amp;` reference, so the data it refers to cannot be borrowed as mutable\n</code></pre>\n\n<p>What's confusing is that I'm inserting a mutable reference so I would expect it to stay mutable.</p>\n\n<p>Here's the complete bit of code:</p>\n\n<pre><code>use std::collections::HashMap;\n\nfn main() {\n    let matrix = HashMap::new();\n    let step1 = add_edge(matrix, 1, 2);\n    let step2 = add_edge(step1, 5, 1);\n    let step3 = add_edge(step2, 5, 2);\n    let step4 = add_edge(step3, 2, 6);\n\n    for (&amp;i, secondLevel) in step4.iter() {\n        for (&amp;j, &amp;value) in secondLevel.iter() {\n            println!(\"Calling {}, {}: {}\", i, j, value);\n        }\n    }\n}\n\nfn add_edge(\n    mut matrix: HashMap&lt;u32, HashMap&lt;u32, bool&gt;&gt;,\n    i: u32,\n    j: u32,\n) -&gt; HashMap&lt;u32, HashMap&lt;u32, bool&gt;&gt; {\n    match matrix.get(&amp;i) {\n        Some(neighbors) =&gt; {\n            neighbors.insert(j, true);\n        }\n        _ =&gt; {\n            let mut neighbors = HashMap::new();\n            neighbors.insert(j, true);\n            matrix.insert(i, neighbors);\n        }\n    }\n\n    match matrix.get(&amp;j) {\n        Some(neighbors) =&gt; {\n            neighbors.insert(i, true);\n        }\n        _ =&gt; {\n            let mut neighbors = HashMap::new();\n            neighbors.insert(i, true);\n            matrix.insert(j, neighbors);\n        }\n    }\n\n    return matrix;\n}\n</code></pre>\n"}, {"tags": ["json", "rust", "serde", "hyper"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1550343220, "post_id": 54726065, "comment_id": 96236965, "body": "what is the problem ?"}, {"owner": {"reputation": 6293, "user_id": 907981, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/kOThB.jpg?s=128&g=1", "display_name": "GTF", "link": "https://stackoverflow.com/users/907981/gtf"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1550446883, "post_id": 54726065, "comment_id": 96259899, "body": "That I want to parse JSON from the request body, add a field, and then parse it into a <code>Status</code> struct, and I&#39;m not quite sure how to go about it."}, {"owner": {"reputation": 5090, "user_id": 491770, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/I2mn1.png?s=128&g=1", "display_name": "Justin Thomas", "link": "https://stackoverflow.com/users/491770/justin-thomas"}, "edited": false, "score": 0, "creation_date": 1557376327, "post_id": 54726065, "comment_id": 98745336, "body": "Did you ever figure it out?"}, {"owner": {"reputation": 6293, "user_id": 907981, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/kOThB.jpg?s=128&g=1", "display_name": "GTF", "link": "https://stackoverflow.com/users/907981/gtf"}, "reply_to_user": {"reputation": 5090, "user_id": 491770, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/I2mn1.png?s=128&g=1", "display_name": "Justin Thomas", "link": "https://stackoverflow.com/users/491770/justin-thomas"}, "edited": false, "score": 0, "creation_date": 1558632554, "post_id": 54726065, "comment_id": 99174553, "body": "@JustinThomas: I didn&#39;t not :("}], "answers": [{"comments": [{"owner": {"reputation": 6293, "user_id": 907981, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/kOThB.jpg?s=128&g=1", "display_name": "GTF", "link": "https://stackoverflow.com/users/907981/gtf"}, "edited": false, "score": 0, "creation_date": 1550405518, "post_id": 54730548, "comment_id": 96248648, "body": "Thanks, that is definitely better but I\u2019m still not sure how to go about adding this extra timestamp field which is not an <code>Option</code> (because a <code>Status</code> isn\u2019t valid without one) since it isn\u2019t included in the request body."}, {"owner": {"reputation": 5090, "user_id": 491770, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/I2mn1.png?s=128&g=1", "display_name": "Justin Thomas", "link": "https://stackoverflow.com/users/491770/justin-thomas"}, "edited": false, "score": 3, "creation_date": 1557408653, "post_id": 54730548, "comment_id": 98761436, "body": "calling wait blocks indefinitely for me since it&#39;s in the hyper request handler."}], "tags": [], "owner": {"reputation": 1291, "user_id": 6331045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/189f94db303d16b891800f11846bd753?s=128&d=identicon&r=PG&f=1", "display_name": "Laney", "link": "https://stackoverflow.com/users/6331045/laney"}, "is_accepted": false, "score": 2, "last_activity_date": 1550382785, "creation_date": 1550382785, "answer_id": 54730548, "question_id": 54726065, "link": "https://stackoverflow.com/questions/54726065/getting-a-request-from-hyper-parsing-the-json-and-turning-it-into-a-struct-in/54730548#54730548", "title": "Getting a request from Hyper, parsing the JSON, and turning it into a struct in rust", "body": "<p>You're trying to convert body to byte slice, then to string, then to <code>serde_json::Value</code>, then to <code>Status</code>. Quite a lot of unnecessary intermediate steps, right? Just read the docs:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let body = req.into_body().concat2().wait().unwrap().into_bytes();\nlet s: Status = serde_json::from_slice(&amp;body).unwrap();\n\n</code></pre>\n"}], "owner": {"reputation": 6293, "user_id": 907981, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/kOThB.jpg?s=128&g=1", "display_name": "GTF", "link": "https://stackoverflow.com/users/907981/gtf"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1895, "favorite_count": 0, "answer_count": 1, "score": 4, "last_activity_date": 1550382785, "creation_date": 1550339987, "question_id": 54726065, "link": "https://stackoverflow.com/questions/54726065/getting-a-request-from-hyper-parsing-the-json-and-turning-it-into-a-struct-in", "title": "Getting a request from Hyper, parsing the JSON, and turning it into a struct in rust", "body": "<p>I'm trying to make a webserver that accepts some parameters as JSON, and turns them into a struct which I'll then store somewhere else in my app.</p>\n\n<p>I have this data struct in a file called status.rs:</p>\n\n<pre><code>use serde::{Serialize, Deserialize};\n\n#[derive(Debug, Clone, Serialize, Deserialize)]\npub struct Status {\n    pub id: String,\n    pub rssi: Option&lt;i8&gt;,\n    pub carrier: Option&lt;String&gt;,\n    pub timestamp: u64,\n}\n</code></pre>\n\n<p>I am then using the following code inside a service in Hyper to try to parse the body of the request and turn it into my struct. The only difference is that I want to add the timestamp field according to the timestamp on the server, not on the client:</p>\n\n<pre><code>let timestamp: u64 = SystemTime::now()\n    .duration_since(UNIX_EPOCH)\n    .expect(\"PANIC! Time is running backwards!\")\n    .as_secs();\n\nBox::new(req.into_body().concat2().map(|body| {\n    let body_bytes = body.into_bytes();\n    let body_str = match str::from_utf8(&amp;body_bytes) {\n        Ok(v) =&gt; v,\n        Err(e) =&gt; {\n            // TODO: this is shitty error handling\n            panic!(\"Unable to read UTF8 input: {}\", e);\n        }\n    };\n    let input_data: Value = serde_json::from_str(body_str).unwrap();\n    let data = Status {\n        id: input_data.get(\"id\").unwrap(),\n        timestamp: timestamp,\n        rssi: input_data.get(\"rssi\"),\n        carrier: input_data.get(\"carrier\"),\n    };\n\n    update(data);\n}));\n</code></pre>\n\n<p>The update function just inserts it into a data storage structure.</p>\n\n<p>I have tried doing this in several different ways, but this way gives me the problem that each one of these fields is of type <code>Option&lt;&amp;Value&gt;</code> (I think).</p>\n\n<p>Hopefully the outcome I'm trying to achieve is clear enough, I just have no idea how to take the request body, parse the JSON, add in a timestamp, and package it up in a struct which I then store in my database.</p>\n\n<p>How should I go about this?</p>\n"}, {"tags": ["github", "rust", "release", "rust-cargo"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1550339530, "post_id": 54725802, "comment_id": 96235934, "body": "look more like a request than a question."}, {"owner": {"reputation": 21030, "user_id": 15619, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/2f169a510b7cba5a57e86d520b268447?s=128&d=identicon&r=PG", "display_name": "Riduidel", "link": "https://stackoverflow.com/users/15619/riduidel"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1550340067, "post_id": 54725802, "comment_id": 96236088, "body": "@Stargateur well, prior to enter an issue, I would prefer to ask if a solution already exists."}, {"owner": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 2, "creation_date": 1550356279, "post_id": 54725802, "comment_id": 96240211, "body": "Are you sure you really want that? AFAIKT, Maven is mostly used for Java and its offspring, which means that the compiled thing is some bytecode and is usable wherever JVM is ported to. But Rust&#39;s compiler makes native binaries, so you&#39;ll have to cross-compile to a number of architectures to have a decent coverage. Nevertheless, it is interesting to see if this can be done."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 3, "creation_date": 1550398756, "post_id": 54725802, "comment_id": 96247115, "body": "There are projects that do release binaries to Github, so maybe take a look at how they are doing it? <a href=\"https://github.com/BurntSushi/ripgrep\" rel=\"nofollow noreferrer\">Ripgrep</a> is one of them. If you can&#39;t figure out how the release process works, just file an issue and ask \u2013 BurntSushi is usually very repsonsive and happy to answer questions."}], "owner": {"reputation": 21030, "user_id": 15619, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/2f169a510b7cba5a57e86d520b268447?s=128&d=identicon&r=PG", "display_name": "Riduidel", "link": "https://stackoverflow.com/users/15619/riduidel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 77, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1550504252, "creation_date": 1550338290, "last_edit_date": 1550504252, "question_id": 54725802, "link": "https://stackoverflow.com/questions/54725802/how-to-have-the-result-of-cargo-release-also-pushed-to-a-github-release", "title": "How to have the result of &quot;cargo release&quot; also pushed to a GitHub release?", "body": "<p>I'm writing a <a href=\"https://github.com/Riduidel/rrss2imap\" rel=\"nofollow noreferrer\">command line program</a> using Rust and Cargo. To manage releases, I've found the excellent <a href=\"https://github.com/sunng87/cargo-release\" rel=\"nofollow noreferrer\">release</a> Cargo plugin.</p>\n\n<p>I want, in a Maven release fashion, to have the compiled versions of my crate available in a GitHub release. How can I do that? As a bonus, if I can have the <a href=\"https://github.com/saschagrunert/git-journal\" rel=\"nofollow noreferrer\">git journal</a> release notes published, it would be excellent.</p>\n"}, {"tags": ["assembly", "x86", "rust", "keyboard", "bios"], "comments": [{"owner": {"reputation": 23944, "user_id": 1305969, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wlo8z.png?s=128&g=1", "display_name": "zx485", "link": "https://stackoverflow.com/users/1305969/zx485"}, "edited": false, "score": 0, "creation_date": 1550334530, "post_id": 54725069, "comment_id": 96234415, "body": "You are creating an x86_64 file, but try to debug it as i386."}, {"owner": {"reputation": 8608, "user_id": 1091116, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/15098b2b940cacd8b4d07026e01e3102?s=128&d=identicon&r=PG", "display_name": "d33tah", "link": "https://stackoverflow.com/users/1091116/d33tah"}, "reply_to_user": {"reputation": 23944, "user_id": 1305969, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wlo8z.png?s=128&g=1", "display_name": "zx485", "link": "https://stackoverflow.com/users/1305969/zx485"}, "edited": false, "score": 0, "creation_date": 1550334673, "post_id": 54725069, "comment_id": 96234456, "body": "@zx485 is it cause of the problem or does it just mean that my debugging efforts are wrong?"}, {"owner": {"reputation": 23944, "user_id": 1305969, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wlo8z.png?s=128&g=1", "display_name": "zx485", "link": "https://stackoverflow.com/users/1305969/zx485"}, "edited": false, "score": 0, "creation_date": 1550334710, "post_id": 54725069, "comment_id": 96234466, "body": "It just affects your debugging code display. But this way it&#39;s impossible to spot the bug (in the assembly)"}, {"owner": {"reputation": 8608, "user_id": 1091116, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/15098b2b940cacd8b4d07026e01e3102?s=128&d=identicon&r=PG", "display_name": "d33tah", "link": "https://stackoverflow.com/users/1091116/d33tah"}, "reply_to_user": {"reputation": 23944, "user_id": 1305969, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wlo8z.png?s=128&g=1", "display_name": "zx485", "link": "https://stackoverflow.com/users/1305969/zx485"}, "edited": false, "score": 0, "creation_date": 1550334899, "post_id": 54725069, "comment_id": 96234522, "body": "@zx485 is it better now?"}, {"owner": {"reputation": 23944, "user_id": 1305969, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wlo8z.png?s=128&g=1", "display_name": "zx485", "link": "https://stackoverflow.com/users/1305969/zx485"}, "edited": false, "score": 3, "creation_date": 1550335919, "post_id": 54725069, "comment_id": 96234821, "body": "If the bootloader puts your processor in <i>long mode</i>, you cannot BIOS interrupts like <code>int 16h</code>. They only work in <i>real mode</i>."}, {"owner": {"reputation": 35113, "user_id": 3826372, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/P0peM.png?s=128&g=1", "display_name": "Ross Ridge", "link": "https://stackoverflow.com/users/3826372/ross-ridge"}, "edited": false, "score": 3, "creation_date": 1550343926, "post_id": 54725069, "comment_id": 96237169, "body": "If you want to add keyboard support to your kernel you&#39;ll need to access the hardware directly. For a PS/2 keyboard that&#39;s relatively easily, for a USB keyboard you&#39;ll either have to depend on the motherboard emulating a PS/2 keyboard or write your own USB stack."}], "answers": [{"tags": [], "owner": {"reputation": 14659, "user_id": 2705055, "user_type": "registered", "accept_rate": 20, "profile_image": "https://www.gravatar.com/avatar/b1d5dfaf239229501a184c8858fbc954?s=128&d=identicon&r=PG&f=1", "display_name": "Martin Rosenau", "link": "https://stackoverflow.com/users/2705055/martin-rosenau"}, "is_accepted": true, "score": 4, "last_activity_date": 1550387588, "creation_date": 1550387588, "answer_id": 54731000, "question_id": 54725069, "link": "https://stackoverflow.com/questions/54725069/attempt-to-read-key-via-int-16h-ends-in-vm-reboot/54731000#54731000", "title": "Attempt to read key via int 16h ends in VM reboot", "body": "<p>I'd like to explain <em>zx485</em>'s comment in more detail:</p>\n\n<p>I've often seen that assembly language beginners are confused about what instructions like <code>int</code> (x86), <code>syscall</code> (MIPS) or <code>SWI</code> (ARM) actually do.</p>\n\n<p>Actually, these instructions are a special form of <code>call</code> instruction: They call some sub-routine which is typically located in the operating system.</p>\n\n<p>64-bit x86 CPUs have different operating modes. One of them is named \"real mode\". In this mode the CPU can only execute 16-bit code.</p>\n\n<p>The BIOS sub-routine that can be called using <code>int 0x16</code> only works when the PC is operating in \"real mode\".</p>\n\n<p>The fact that your program is a 64-bit program (registers like <code>rax</code> are used) tells us that your CPU is not running in real mode.</p>\n\n<p>If you are writing your own operating system, you can define own sub-routines that are called by certain <code>int</code> instructions:</p>\n\n<p>You can define a sub-routine that is called by <code>int 0x16</code> which reads the keyboard and another one called by <code>int 0x10</code> writing to the screen.</p>\n\n<p>However, you are also free to define that <code>int 0x16</code> is used for writing to the screen and <code>int 0x10</code> is used for hard disk access in your operating system.</p>\n\n<p>And in every case you'll have to write the sub-routines yourself because the existing sub-routines in the BIOS cannot be used in any other operating mode than \"real mode\". (This is what <em>Ross Ridge</em> is indicating in his comment.)</p>\n"}], "owner": {"reputation": 8608, "user_id": 1091116, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/15098b2b940cacd8b4d07026e01e3102?s=128&d=identicon&r=PG", "display_name": "d33tah", "link": "https://stackoverflow.com/users/1091116/d33tah"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 99, "favorite_count": 0, "accepted_answer_id": 54731000, "answer_count": 1, "score": 4, "last_activity_date": 1550387588, "creation_date": 1550333744, "last_edit_date": 1550334890, "question_id": 54725069, "link": "https://stackoverflow.com/questions/54725069/attempt-to-read-key-via-int-16h-ends-in-vm-reboot", "title": "Attempt to read key via int 16h ends in VM reboot", "body": "<p>I was trying to add keyboard interaction to code from <a href=\"https://os.phil-opp.com/minimal-rust-kernel/\" rel=\"nofollow noreferrer\">this example</a>. Consider the following files:</p>\n\n<blockquote>\n  <p>Cargo.toml</p>\n</blockquote>\n\n<pre><code>[package]\nname = \"kernelhello\"\nversion = \"0.0.1\"\n\n[dependencies]\nbootloader = \"0.3.12\"\n\n[package.metadata.bootimage]\ndefault-target = \"build.json\"\n</code></pre>\n\n<blockquote>\n  <p>build.json</p>\n</blockquote>\n\n<pre><code>{\n  \"llvm-target\": \"x86_64-unknown-none\",\n  \"data-layout\": \"e-m:e-i64:64-f80:128-n8:16:32:64-S128\",\n  \"arch\": \"x86_64\",\n  \"target-endian\": \"little\",\n  \"target-pointer-width\": \"64\",\n  \"target-c-int-width\": \"32\",\n  \"os\": \"none\",\n  \"executables\": true,\n  \"linker-flavor\": \"ld.lld\",\n  \"linker\": \"rust-lld\",\n  \"panic-strategy\": \"abort\",\n  \"disable-redzone\": true,\n  \"features\": \"-mmx,-sse,+soft-float\"\n}\n</code></pre>\n\n<blockquote>\n  <p>src/main.rs</p>\n</blockquote>\n\n<pre><code>// src/main.rs\n#![feature(asm)]\n\n#![no_std] // don't link the Rust standard library\n#![no_main] // disable all Rust-level entry points\n\nuse core::panic::PanicInfo;\n\n/// This function is called on panic.\n#[panic_handler]\nfn panic(_info: &amp;PanicInfo) -&gt; ! {\n    loop {}\n}\n\n\n#[no_mangle]\npub extern \"C\" fn _start() -&gt; ! {\n    let mut HELLO: &amp;mut [u8] = &amp;mut b\"Hello World!\".clone();\n    let vga_buffer = 0xb8000 as *mut u8;\n\n    let mut z = 0;\n    loop {\n        for (i, byte) in HELLO.iter_mut().enumerate() {\n            unsafe {\n                z += 14;\n                z %= 4000;\n                *vga_buffer.offset(z + i as isize * 2) = *byte;\n                *vga_buffer.offset(z + i as isize * 2 + 1) = 0xa;\n                asm!(\"mov $$0, %ah\\nint $$0x16\");\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>Unfortunately,  an attempt to do <code>bootimage run</code> ends with an image that is stuck in a reboot loop - which doesn't happen if I comment out the <code>asm!</code> call. Here's a disassembly:</p>\n\n<pre><code>\u279c  rust-kernel-hello objdump -D -b binary -Mintel,x86-64  -m i386 target/build/debug/bootimage-kernelhello.bin | grep -C5 'ef01'\n    eef0:       00 \n    eef1:       48 8b 84 24 d0 00 00    mov    rax,QWORD PTR [rsp+0xd0]\n    eef8:       00 \n    eef9:       48 89 84 24 00 01 00    mov    QWORD PTR [rsp+0x100],rax\n    ef00:       00 \n    ef01:       48 8d bc 24 f0 00 00    lea    rdi,[rsp+0xf0]\n    ef08:       00 \n    ef09:       e8 72 fe ff ff          call   0xed80\n    ef0e:       48 89 94 24 20 01 00    mov    QWORD PTR [rsp+0x120],rdx\n    ef15:       00 \n    ef16:       48 89 84 24 18 01 00    mov    QWORD PTR [rsp+0x118],rax\n--\n    f119:       48 89 04 24             mov    QWORD PTR [rsp],rax\n    f11d:       48 8b 04 24             mov    rax,QWORD PTR [rsp]\n    f121:       c6 00 0a                mov    BYTE PTR [rax],0xa\n    f124:       b4 00                   mov    ah,0x0\n    f126:       cd 16                   int    0x16\n    f128:       e9 d4 fd ff ff          jmp    0xef01\n    f12d:       48 8d 3d cc 0a 00 00    lea    rdi,[rip+0xacc]        # 0xfc00\n    f134:       e8 07 04 00 00          call   0xf540\n    f139:       0f 0b                   ud2    \n    f13b:       48 8d 3d e6 0a 00 00    lea    rdi,[rip+0xae6]        # 0xfc28\n    f142:       e8 f9 03 00 00          call   0xf540\n</code></pre>\n\n<p>What am I doing wrong?</p>\n"}, {"tags": ["rust", "command-line-arguments", "structopt"], "comments": [{"owner": {"reputation": 3201, "user_id": 5986907, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/0521ce05a7fcb2580e4f513990a5a8c8?s=128&d=identicon&r=PG&f=1", "display_name": "joel", "link": "https://stackoverflow.com/users/5986907/joel"}, "edited": false, "score": 0, "creation_date": 1550268588, "post_id": 54716285, "comment_id": 96221151, "body": "what&#39;s wrong with using <code>--</code>?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1550279217, "post_id": 54716285, "comment_id": 96223418, "body": "How do <b>you</b>, the programmer, know that ` this/is/a/path` isn&#39;t part of the <code>-s</code> option? There&#39;s nothing blindingly obvious. Equally importantly, how will a user of your program know?"}], "answers": [{"tags": [], "owner": {"user_type": "does_not_exist", "display_name": "user11069095"}, "is_accepted": false, "score": 1, "last_activity_date": 1550311075, "creation_date": 1550311075, "answer_id": 54721864, "question_id": 54716285, "link": "https://stackoverflow.com/questions/54716285/how-can-i-distinguish-a-multi-occurence-option-from-a-subsequent-optional-argume/54721864#54721864", "title": "How can I distinguish a multi-occurence option from a subsequent optional argument with structopt?", "body": "<p>So I found the following solution: </p>\n\n<pre><code>use std::path::PathBuf;\nuse structopt::StructOpt;\n\n#[derive(StructOpt, Debug)]\nstruct CLIArgs {\n    #[structopt(short = \"s\", long = \"str\", raw(number_of_values = \"1\"))]\n    strings: Vec&lt;String&gt;,\n\n    #[structopt(name = \"PATH\", parse(from_os_str))]\n    path: Option&lt;PathBuf&gt;,\n}\n\nfn main() {\n    let args = CLIArgs::from_args();\n    println!(\"{:?}\", args);\n}\n</code></pre>\n\n<p>Note that it forces the user to use the program this way:</p>\n\n<pre><code>$ mfe -s foo -s bar -s baz /this/is/a/path\n</code></pre>\n\n<p>which my be inconvenient, depending on your use case.</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user11069095"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 244, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1550311075, "creation_date": 1550260873, "last_edit_date": 1550279107, "question_id": 54716285, "link": "https://stackoverflow.com/questions/54716285/how-can-i-distinguish-a-multi-occurence-option-from-a-subsequent-optional-argume", "title": "How can I distinguish a multi-occurence option from a subsequent optional argument with structopt?", "body": "<p>I am using structopt to define arguments that can be used</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>mfe -s opt1 -s opt2 -s opt2 this_is_an_argument\n</code></pre>\n\n<p>or</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>mfe -s opt1 opt2 opt3 this_is_an_argument\n</code></pre>\n\n<p>The problem is that the <code>this_is_an_argument</code> argument is parsed as an option. I know I could use <code>--</code> before the argument, but is there a better solution?</p>\n\n<pre><code>use std::path::PathBuf;\nuse structopt::StructOpt;\n\n#[derive(StructOpt, Debug)]\nstruct CLIArgs {\n    #[structopt(short = \"s\", long = \"str\")]\n    strings: Vec&lt;String&gt;,\n\n    #[structopt(name = \"PATH\", parse(from_os_str))]\n    path: Option&lt;PathBuf&gt;,\n}\n\nfn main() {\n    let args = CLIArgs::from_args();\n    println!(\"{:?}\", args);\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ mfe -s foo bar baz /this/is/a/path\nCLIArgs { strings: [\"foo\", \"bar\", \"baz\", \"/this/is/a/path\"], path: None }\n</code></pre>\n\n<p>I would like <code>/this/is/a/path</code> to be parsed as <code>path</code>, without being forced to use <code>--</code>. Maybe do something with the order of the arguments or something? </p>\n"}, {"tags": ["reference", "rust", "iterator", "borrow-checker", "ownership"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 1, "creation_date": 1550257953, "post_id": 54715300, "comment_id": 96217118, "body": "What does your <code>foo</code> method actually do with the <code>str</code>? If it needs a string that lives as long as <code>f</code>, wouldn&#39;t it make sense for <code>foo</code> to accept a <code>String</code> instead of <code>&amp;str</code>?"}, {"owner": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1550260202, "post_id": 54715300, "comment_id": 96218020, "body": "For the sake of the argument, let&#39;s assume I have no control over the trait Foo here. (full disclosure: in my reall situation, I do have control, so I may indeed consider your solution... but I&#39;m expecting this kind of problem in the future with somebody else&#39;s trait)"}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1550261099, "post_id": 54715300, "comment_id": 96218414, "body": "If the trait requires that <code>txt</code> live just as long as <code>self</code>, there is no way to create a <i>new</i> string inside <code>foo_int</code> and have it satisfy that lifetime.  By definiton, <code>f</code> already exists by the time <code>foo_int</code> is called, so there is nothing you can do in <code>foo_int</code> to create something with that lifetime."}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1550261329, "post_id": 54715300, "comment_id": 96218500, "body": "In a context like this, the only <code>&amp;str</code> that would satisfy the constraint would be a <code>&amp;&#39;static str</code> pretty much."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1550262019, "post_id": 54715300, "comment_id": 96218758, "body": "@Pierre-Antoine did you consider using macros ?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1550262254, "post_id": 54715300, "comment_id": 96218849, "body": "&quot;After all, that&#39;s what closure (with the move keyword) do: they take ownership of the values they need to &quot;take away with them&quot;.&quot; yeah closure copy the pointer, but the pointer need to refer to something valid. It&#39;s impossible to do what you want with this definition of <code>foo()</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1550265297, "post_id": 54715300, "comment_id": 96220031, "body": "The first duplicate explains why you cannot, in general, have the <code>String</code> and a reference to it (the iterator from <code>foo</code>) inside the same struct (the iterator from <code>foo_int</code>). It also explains that there are cases where such a thing is possible: as you pointed out, a <code>String</code> has a stable memory address. The other two Q&amp;A show various tools in the Rust ecosystem that hide the required <code>unsafe</code> code for you."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1550265621, "post_id": 54715300, "comment_id": 96220120, "body": "<i>After all, that&#39;s what closures [...] do</i> \u2014 <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=349a494afb18dd2ce4665f36f42d34c0\" rel=\"nofollow noreferrer\">closures have the exact same problem</a>."}, {"owner": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1550267587, "post_id": 54715300, "comment_id": 96220829, "body": "@loganfsmyth &quot;the trait requires that txt live just as long as self&quot; No, not exactly. It requires that both <code>self</code> and <code>txt</code> are borrowed as long as the returned iterator lives, which is quite different. The total life durations of <code>self</code> and <code>txt</code> can still be different. As you suggest, one solution is to have <code>txt</code> live for the <code>static</code> lifetime, even if <code>self</code> does not."}], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1550262106, "post_id": 54715476, "comment_id": 96218788, "body": "&quot;So any better solution is still welcome...&quot; I would say better design, here the solution is obvious <code>foo()</code>, should take a String, period."}, {"owner": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1550426002, "post_id": 54715476, "comment_id": 96254247, "body": "@Stargateur I respectfully disagree. Any situation where the iterator is consumed in place (e.g. a <code>for</code> loop) works perfectly with a <code>&amp;str</code> parameters. Forcing the user to copy the data by requiring a <code>String</code> would induce a cost that is not strictly required in those situations..."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1550428914, "post_id": 54715476, "comment_id": 96255217, "body": "I didn&#39;t fully understand your use case. But this look like a exception, how rust is suppose to know if the reference is valid ? In C you could do that but not in Rust because it&#39;s unsafe so compiler disallow it by default. Also, I don&#39;t think in your example, that the cost of one extra copy matter, O(n) to O(n + 1) for safe behavior. also if your function take a String, you can avoid the extra copy if you don&#39;t clone the string you give and so you don&#39;t have any extra copy. <code>f.foo(format!(&quot;{}&quot;, val))</code> will not perform extra copy."}, {"owner": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1550434207, "post_id": 54715476, "comment_id": 96256907, "body": "@Stargateur granted, <i>in my minimal example</i>, the best solution would be to change the signature of <code>foo</code>. My real situation is a bit too specific to explain on SO, but please trust me that it makes sense to expect a reference as a parameter. Also, I agree that I&#39;m pushing the Rust compiler outside of its comfort zone. As Shepmaster pointed out, an <code>unsafe</code> block is inevitable here."}], "tags": [], "owner": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "is_accepted": false, "score": 1, "last_activity_date": 1550268565, "last_edit_date": 1550268565, "creation_date": 1550256783, "answer_id": 54715476, "question_id": 54715300, "link": "https://stackoverflow.com/questions/54715300/can-i-transfer-ownership-of-local-variables-and-references-to-them-to-a-returned/54715476#54715476", "title": "Can I transfer ownership of local variables and references to them to a returned iterator?", "body": "<p>Actually, while working my minimal example, I came up with an idea that (kind of) solves the problem. It is available <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=6e3cdb2e3c6c8c7884405704c57e95a0\" rel=\"nofollow noreferrer\">in the playground</a>.</p>\n\n<p>The idea is to wrap the parameter of <code>foo</code> and the returned iterator in a dedicated type, which itself implements the <code>Iterator</code> trait by delegating to the inner iterator.</p>\n\n<pre><code>pub struct Bar&lt;'a&gt;(String, Box&lt;Iterator&lt;Item = String&gt; + 'a&gt;);\n\nimpl&lt;'a&gt; Bar&lt;'a&gt; {\n    fn new&lt;F: Foo&gt;(foo: &amp;'a F, txt: String) -&gt; Bar&lt;'a&gt; {\n        let itr = foo.foo(unsafe { &amp;*(&amp;txt[..] as *const str) });\n        Bar(txt, itr)\n    }\n}\n\nimpl&lt;'a&gt; Iterator for Bar&lt;'a&gt; {\n    type Item = String;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        self.1.next()\n    }\n}\n\nfn foo_int&lt;'a, F: Foo&gt;(f: &amp;'a F, val: i32) -&gt; impl Iterator&lt;Item = String&gt; + 'a {\n    Bar::new(f, format!(\"{}\", val))\n}\n</code></pre>\n\n<p>I'm not entirely satisfied with that solution, though, because of the following reasons.</p>\n\n<ul>\n<li><p>It is rather specific to this particular method; for another method with other parameters, I would need a different wrapper type.</p></li>\n<li><p>It uses unsafe code. I believe this one is ok (because the inner <code>&amp;str</code> of <code>String</code> is stable through move), but it might be harder (if not impossible) to achieve with other types.</p></li>\n<li><p>It forces me to re-implement <code>Iterator</code>. While this minimal version works, it is suboptimal because the underlying iterator may have optimized implementations of some methods, which I \"loose\" here by relying on the default implementations. Implementing all methods of <code>Iterator</code> by hand (to pass them through to <code>self.1</code>) is tedious, and brittle (if further versions add new methods, I would have to add them as well).</p></li>\n</ul>\n\n<p>So any better solution is still welcome...</p>\n\n<p><strong>edit</strong>: @Shepmaster's arguments convinced me; this is actually the same old problem of storing a value and a reference to it. So it <em>is</em> unsafe, and my solution is not general, because in general, it may not work :-/</p>\n"}], "owner": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 841, "favorite_count": 1, "closed_date": 1550262037, "answer_count": 1, "score": 2, "last_activity_date": 1550268565, "creation_date": 1550255979, "last_edit_date": 1550265446, "question_id": 54715300, "link": "https://stackoverflow.com/questions/54715300/can-i-transfer-ownership-of-local-variables-and-references-to-them-to-a-returned", "closed_reason": "Duplicate", "title": "Can I transfer ownership of local variables and references to them to a returned iterator?", "body": "<p>I am using a trait with a method that returns an boxed iterator. Since the iterator will use <code>self</code> and the parameters of <code>foo</code>, all are constrained to the same lifetime:</p>\n\n<pre><code>pub trait Foo {\n    fn foo&lt;'a&gt;(&amp;'a self, txt: &amp;'a str) -&gt; Box&lt;Iterator&lt;Item = String&gt; + 'a&gt;;\n}\n</code></pre>\n\n<p>I would like to build a function around this method:</p>\n\n<pre><code>fn foo_int&lt;'a, F: Foo&gt;(f: &amp;'a F, val: i32) -&gt; impl Iterator&lt;Item = String&gt; + 'a {\n    let txt = format!(\"{}\", val);\n    f.foo(&amp;txt)\n}\n</code></pre>\n\n<p>But that does not compile, because:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0515]: cannot return value referencing local variable `txt`\n --&gt; src/lib.rs:7:5\n  |\n7 |     f.foo(&amp;txt)\n  |     ^^^^^^----^\n  |     |     |\n  |     |     `txt` is borrowed here\n  |     returns a value referencing data owned by the current function\n</code></pre>\n\n<p>I understand why this happens, and it makes sense, but it seems to be that there should be a way to get around it. After all, that's what closures (with the <code>move</code> keyword) do: they take ownership of the values they need to \"take away with them\".</p>\n\n<p>Is there a clever way to rewrite the <code>foo_int</code> function, using a closure or something else?</p>\n"}, {"tags": ["rust", "xcb", "pixmap"], "comments": [{"owner": {"reputation": 600, "user_id": 3754495, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/65fff37f6d10b64ca1676adcc33f5ffb?s=128&d=identicon&r=PG", "display_name": "notriddle", "link": "https://stackoverflow.com/users/3754495/notriddle"}, "edited": false, "score": 0, "creation_date": 1550868364, "post_id": 54712690, "comment_id": 96444542, "body": "One thing that looks wrong about your code: you&#39;re not checking your cookies. Tacking <code>.request_check().unwrap_or_else(|e| panic!(&quot;{}&quot;, e))</code> onto the end of your calls will help get you an error code if something goes wrong."}], "answers": [{"comments": [{"owner": {"reputation": 174, "user_id": 4307853, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-4vX7FADvQ-o/AAAAAAAAAAI/AAAAAAAAAbk/nJiM1TiqBrs/photo.jpg?sz=128", "display_name": "YangKeao", "link": "https://stackoverflow.com/users/4307853/yangkeao"}, "edited": false, "score": 0, "creation_date": 1550750187, "post_id": 54777662, "comment_id": 96389253, "body": "Actually, I use <code>image</code> library to decode image files and got raw pixel arrays (in rgb format). I have added my code in question description. Could you help me find where the bug is?"}], "tags": [], "owner": {"reputation": 600, "user_id": 3754495, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/65fff37f6d10b64ca1676adcc33f5ffb?s=128&d=identicon&r=PG", "display_name": "notriddle", "link": "https://stackoverflow.com/users/3754495/notriddle"}, "is_accepted": false, "score": 0, "last_activity_date": 1550627533, "creation_date": 1550627533, "answer_id": 54777662, "question_id": 54712690, "link": "https://stackoverflow.com/questions/54712690/is-there-a-way-for-xcb-to-load-a-file-into-a-pixmap/54777662#54777662", "title": "Is there a way for xcb to load a file into a pixmap?", "body": "<p>According to the XCB documentation, pixmaps and windows are both drawables: <a href=\"https://xcb.freedesktop.org/colorsandpixmaps/\" rel=\"nofollow noreferrer\">https://xcb.freedesktop.org/colorsandpixmaps/</a> (\"The operations that work the same on a window or a pixmap take an xcb_drawable_t argument\")</p>\n\n<p>So, once you've <a href=\"https://docs.rs/xcb/0.8.2/xcb/xproto/fn.create_pixmap.html\" rel=\"nofollow noreferrer\">created</a> your Pixmap, you pass it as the third parameter to <a href=\"https://docs.rs/xcb/0.8.2/xcb/xproto/fn.put_image.html\" rel=\"nofollow noreferrer\"><code>put_image</code></a>. No need to worry about converting the Pixmap into a Drawable; they're both just type aliases for <code>u32</code> on your end, and they both use the same ID space on the X server's end (as the same docs put it, \"a pixmap is basically a window that isn't shown on the screen\").</p>\n\n<p>To generate the stuff that goes in the <code>data</code> parameter, probably just do the same thing as the <a href=\"http://cr.yp.to/2004-494/libpng/libpng-1.2.5/contrib/gregbook/rpng-x.c\" rel=\"nofollow noreferrer\">libpng</a> source does, but in Rust instead of C.</p>\n"}], "owner": {"reputation": 174, "user_id": 4307853, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-4vX7FADvQ-o/AAAAAAAAAAI/AAAAAAAAAbk/nJiM1TiqBrs/photo.jpg?sz=128", "display_name": "YangKeao", "link": "https://stackoverflow.com/users/4307853/yangkeao"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 382, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1550750175, "creation_date": 1550245503, "last_edit_date": 1550750175, "question_id": 54712690, "link": "https://stackoverflow.com/questions/54712690/is-there-a-way-for-xcb-to-load-a-file-into-a-pixmap", "title": "Is there a way for xcb to load a file into a pixmap?", "body": "<p>I'm writing an application with <code>rust-xcb</code>. However, when I try to load a file into a pixmap I cannot find any way to do it. I also use <code>image</code> library to load image files (jpg).</p>\n\n<p>But I am not familiar with xcb, is there a way for xcb to load pixel buffers or files into pixmap? Or I can find another library to do this?</p>\n\n<p>I have searched for it. Some document of xcb pixmap and bitmap is full of TODO.\nI have tried <code>xcb-util-image</code>, but didn't find what I need.</p>\n\n<p>My code is below:</p>\n\n<pre><code>let foreground = self.connection.generate_id();\n    xcb::create_gc(\n    &amp;self.connection,\n    foreground,\n    screen.root(),\n    &amp;[\n        (xcb::GC_FOREGROUND, screen.white_pixel()),\n        (xcb::GC_GRAPHICS_EXPOSURES, 0),\n     ],\n);\nlet mut img = image::open(background_src).unwrap();\nlet img_width = img.width();\nlet img_height = img.height();\n\nxcb::create_pixmap(\n    &amp;self.connection,\n    24,\n    pixmap,\n    self.window_id,\n    img_width as u16,\n    img_height as u16,\n);\nlet img_buffer = img.to_rgb().into_raw();\nxcb::put_image(\n    &amp;self.connection,\n    xcb::IMAGE_FORMAT_Z_PIXMAP as u8,\n    pixmap,\n    foreground,\n    img_width as u16,\n    img_height as u16,\n    0,\n    0,\n    0,\n    24,\n    &amp;img_buffer,\n);\nself.flush(); // Flush the connection\n</code></pre>\n"}, {"tags": ["rust", "hashset"], "comments": [{"owner": {"reputation": 1287, "user_id": 106275, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/43vfP.png?s=128&g=1", "display_name": "Stein", "link": "https://stackoverflow.com/users/106275/stein"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1550247120, "post_id": 54712618, "comment_id": 96211946, "body": "Note that the set I&#39;m using has integers, so I haven&#39;t considering memory management - I guess no cloning is necessary at all to move an element out of a set."}, {"owner": {"reputation": 1287, "user_id": 106275, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/43vfP.png?s=128&g=1", "display_name": "Stein", "link": "https://stackoverflow.com/users/106275/stein"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1550247224, "post_id": 54712618, "comment_id": 96212007, "body": "@LukasKalbertodt I tried to explain a bit more"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1550248185, "post_id": 54712618, "comment_id": 96212504, "body": "Running benchmarks on the playground is a pretty terrible idea. It&#39;s a single shared EC2 instance for everyone. There are a number of reasons that any numbers from there are suspect."}, {"owner": {"reputation": 1287, "user_id": 106275, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/43vfP.png?s=128&g=1", "display_name": "Stein", "link": "https://stackoverflow.com/users/106275/stein"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1550248926, "post_id": 54712618, "comment_id": 96212865, "body": "@Shepmaster that&#39;s why it takes a few samples; nevertheless the result is quite consistent in my experience"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1550249441, "post_id": 54712618, "comment_id": 96213155, "body": "&quot;This turns out to be a performance bottleneck compared to the other languages.&quot; you didn&#39;t prove that. And I really doubt of that too."}, {"owner": {"reputation": 1287, "user_id": 106275, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/43vfP.png?s=128&g=1", "display_name": "Stein", "link": "https://stackoverflow.com/users/106275/stein"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1550250214, "post_id": 54712618, "comment_id": 96213531, "body": "@Stargateur I didn&#39;t prove it because I don&#39;t know if I&#39;m doing it right, but I do have evidence at <a href=\"https://github.com/ssomers/Bron-Kerbosch\" rel=\"nofollow noreferrer\">github.com/ssomers/Bron-Kerbosch</a>."}], "answers": [{"tags": [], "owner": {"reputation": 1287, "user_id": 106275, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/43vfP.png?s=128&g=1", "display_name": "Stein", "link": "https://stackoverflow.com/users/106275/stein"}, "is_accepted": false, "score": 2, "last_activity_date": 1550247929, "last_edit_date": 1550247929, "creation_date": 1550245261, "answer_id": 54712619, "question_id": 54712618, "link": "https://stackoverflow.com/questions/54712618/can-i-pop-from-a-hashset-efficiently/54712619#54712619", "title": "Can I pop from a HashSet efficiently?", "body": "<p>I guess the same advice applies as in <a href=\"https://stackoverflow.com/questions/53755017/can-i-randomly-sample-from-a-hashset-efficiently\">Can I randomly sample from a HashSet efficiently?</a>: copy the set as a vector just to iterate over it as shown in the <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=release&amp;edition=2018&amp;gist=78a860fcc8daf780755fb34547056231\" rel=\"nofollow noreferrer\">\"sequenced\" solution in the benchmark</a>:</p>\n\n<pre><code>let seq: Vec&lt;u32&gt; = set.iter().cloned().collect();\nfor elt in seq {\n    set.remove(&amp;elt);\n</code></pre>\n\n<p>That means this answer is not applicable if you need to shrink the set (pick an arbitrary element) only once or a few times, or if the set contents cannot be cheaply cloned.</p>\n"}, {"comments": [{"owner": {"reputation": 1287, "user_id": 106275, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/43vfP.png?s=128&g=1", "display_name": "Stein", "link": "https://stackoverflow.com/users/106275/stein"}, "edited": false, "score": 0, "creation_date": 1550264814, "post_id": 54713595, "comment_id": 96219881, "body": "Unforunately I&#39;m not seeing better performance replacing HashSet with BTreeSet. In the benchmark above, that only shrinks the set, BTreeSet is a champion indeed. But the complete algorithm is worse off on small sets and orders of magnitude slower on big sets (of a million integers). Profiling suggests it&#39;s the intersections done every iteration. Maybe because the sets intersected are typically very asymmetric: HashSet.intersection does the intersection of a small set with a big set quite efficiently."}, {"owner": {"reputation": 1287, "user_id": 106275, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/43vfP.png?s=128&g=1", "display_name": "Stein", "link": "https://stackoverflow.com/users/106275/stein"}, "edited": false, "score": 0, "creation_date": 1550403855, "post_id": 54713595, "comment_id": 96248259, "body": "WIth a performance-savvier implementation of intersection, BTreeSet  scales as good as HashSet, and better, for some uses at least. Still up to 50% slower for small sets, but faster on huge sets for some algorithms. The intersection implementation is <a href=\"https://github.com/ssomers/Bron-Kerbosch/blob/master/rust/bron_kerbosch/src/util.rs\" rel=\"nofollow noreferrer\">on github</a> and hopefully one day in Rust itself."}, {"owner": {"reputation": 1287, "user_id": 106275, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/43vfP.png?s=128&g=1", "display_name": "Stein", "link": "https://stackoverflow.com/users/106275/stein"}, "edited": false, "score": 1, "creation_date": 1554281237, "post_id": 54713595, "comment_id": 97689196, "body": "An even more performance-savvy implementation of BTreeSet intersection <a href=\"https://github.com/rust-lang/rust/pull/59186\" rel=\"nofollow noreferrer\">has been merged in</a>"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 6, "last_activity_date": 1550248910, "creation_date": 1550248910, "answer_id": 54713595, "question_id": 54712618, "link": "https://stackoverflow.com/questions/54712618/can-i-pop-from-a-hashset-efficiently/54713595#54713595", "title": "Can I pop from a HashSet efficiently?", "body": "<blockquote>\n  <p>the set I'm using has integers</p>\n</blockquote>\n\n<p>Don't use a <code>HashSet</code>; A <code>BTreeSet</code> has better and more consistent performance.</p>\n\n<p>For <code>N</code> = 100000...</p>\n\n<p><strong><code>BTreeSet</code></strong></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>sequenced : 3065.098\u00b5s\npop_1     : 2941.876\u00b5s\npop_2     : 2927.429\u00b5s\n</code></pre>\n\n<p><strong><code>HashSet</code></strong></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>sequenced : 3091.454\u00b5s\npop_1     : 172547.080\u00b5s\npop_2     : 807182.085\u00b5s\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 1287, "user_id": 106275, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/43vfP.png?s=128&g=1", "display_name": "Stein", "link": "https://stackoverflow.com/users/106275/stein"}, "edited": false, "score": 1, "creation_date": 1550328587, "post_id": 54720668, "comment_id": 96232611, "body": "drain does not allow using the shrinking set, right? It immediately makes the set inaccessible and/or empty."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1550503071, "post_id": 54720668, "comment_id": 96282688, "body": "<i>is not that fast</i> \u2014 this is an very misleading statement. The insinuation is that the current implementation of <code>HashMap</code> is always <i>slow</i>, but the new implementation in hashbrown just happens to be fast<i>er</i>. There&#39;s even work to replace the standard library implementation with that from hashbrown, which will likely make this point moot eventually."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1550503229, "post_id": 54720668, "comment_id": 96282798, "body": "I disagree that the proposed code is any simpler. It now has two potential panics as opposed to the original one."}, {"owner": {"reputation": 1287, "user_id": 106275, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/43vfP.png?s=128&g=1", "display_name": "Stein", "link": "https://stackoverflow.com/users/106275/stein"}, "edited": false, "score": 0, "creation_date": 1552399089, "post_id": 54720668, "comment_id": 96987936, "body": "The proposed code isn&#39;t simpler because the code I listed also panics on an empty set, unlike the &quot;better&quot; alternatives on the playground comparison. In proper Rust style, returning an Option, and once you&#39;re familiar with it, it is indeed a bit simpler. I wondered if there is a runtime performance difference but <a href=\"https://github.com/ssomers/rust_bench_sets_compared\" rel=\"nofollow noreferrer\">my benchmark on github</a> says they&#39;re the same."}, {"owner": {"reputation": 1287, "user_id": 106275, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/43vfP.png?s=128&g=1", "display_name": "Stein", "link": "https://stackoverflow.com/users/106275/stein"}, "edited": false, "score": 0, "creation_date": 1554386659, "post_id": 54720668, "comment_id": 97740525, "body": "For the use in the question here, the hashbron implementation is better than the standard <code>HashSet</code> and than the fnv crate&#39;s <code>FnvHashSet</code>, but still much less scalable than the standard <code>BTreeSet</code>. For the other set usage I evaluated (mainly intersection), they&#39;re all equally scalable, hashbrown being the slowest and <code>FnvHashSet</code> the fastest."}], "tags": [], "owner": {"reputation": 1291, "user_id": 6331045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/189f94db303d16b891800f11846bd753?s=128&d=identicon&r=PG&f=1", "display_name": "Laney", "link": "https://stackoverflow.com/users/6331045/laney"}, "is_accepted": false, "score": 1, "last_activity_date": 1550503148, "last_edit_date": 1550503148, "creation_date": 1550300253, "answer_id": 54720668, "question_id": 54712618, "link": "https://stackoverflow.com/questions/54712618/can-i-pop-from-a-hashset-efficiently/54720668#54720668", "title": "Can I pop from a HashSet efficiently?", "body": "<p>Your code can be simplified a bit:</p>\n\n<pre><code>let elt = set.iter().next().cloned().unwrap();\nset.take(&amp;elt).unwrap()\n</code></pre>\n\n<p>If you want to remove all elements from a <code>HashSet</code> then you should use the <a href=\"https://doc.rust-lang.org/stable/std/collections/struct.HashSet.html#method.drain\" rel=\"nofollow noreferrer\"><code>drain</code></a> iterator - it is very efficient.</p>\n\n<p><code>HashSet</code> from the Rust standard library is not that fast. Try replacing it with one from the <a href=\"https://crates.io/crates/hashbrown\" rel=\"nofollow noreferrer\">hashbrown</a> crate.</p>\n"}], "owner": {"reputation": 1287, "user_id": 106275, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/43vfP.png?s=128&g=1", "display_name": "Stein", "link": "https://stackoverflow.com/users/106275/stein"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1815, "favorite_count": 1, "answer_count": 3, "score": 8, "last_activity_date": 1571681133, "creation_date": 1550245261, "last_edit_date": 1571681133, "question_id": 54712618, "link": "https://stackoverflow.com/questions/54712618/can-i-pop-from-a-hashset-efficiently", "title": "Can I pop from a HashSet efficiently?", "body": "<p>My algorithm needs to iteratively shrink a set by removing an element, and do something with the element removed and with the shrinking set in each iteration. And:</p>\n\n<ul>\n<li>I need a genuine set with fast lookup, not just a vector containing unique elements.</li>\n<li>The choice of element is arbitrary: the outcome of the algorithm doesn't depend on the order visited. The performance probably varies greatly with that choice, but let's say I want the simplest code and leave it up to the set itself to pick the element it can remove efficiently.</li>\n<li>My algorithm is <a href=\"https://en.wikipedia.org/wiki/Bron%E2%80%93Kerbosch_algorithm\" rel=\"nofollow noreferrer\">the basic form of the Bron\u2013Kerbosch algorithm</a>. Smarter versions of that algorithm work faster (mostly) because they don't leave the choice of element arbitrary and I'd like to learn how much that effort pays off.</li>\n</ul>\n\n<p>Python sets have a <code>pop</code> member that pretty much does that. In Scala and Go, picking and removing the \"first\" element of a hash set seems to work fine (where \"first\" corresponds to the iterator). In Rust, that is something like:</p>\n\n<pre><code>// split off an arbitrary element from a (non-empty) set\npub fn pop&lt;T&gt;(set: &amp;mut HashSet&lt;T&gt;) -&gt; T\nwhere\n    T: Eq + Clone + std::hash::Hash,\n{\n    let elt = set.iter().next().cloned().unwrap();\n    set.remove(&amp;elt);\n    elt\n}\n</code></pre>\n\n<p>This seems to be a performance bottleneck compared to the other languages. I <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=release&amp;edition=2018&amp;gist=78a860fcc8daf780755fb34547056231\" rel=\"nofollow noreferrer\">benchmarked some implementations of a pop-like function on the playground</a> but none perform well. Apparently removing an element is not expensive, but picking one is: <code>iter().next()</code> costs a fortune (*). Avoiding that with <code>retain</code> understandably doesn't help: it always iterates the whole set. Are there any alternatives?</p>\n\n<p>(*) On closer examination, <code>iter().next()</code> is quite cheap, as far as microbenchmarking can be trusted. <a href=\"https://github.com/ssomers/rust_bench_sets_compared\" rel=\"nofollow noreferrer\">Separate microbenchmarks</a> say that picking an arbitrary element from a set costs (in nanoseconds on my system):</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>| Type of set      | Number of elements in set instance\n|                  | 100 | 10,000 | 1,000,000\n| Rust HashSet     |   2 |      2 |         2\n| Rust BTreeSet    |  11 |     12 |        13\n| Go map[]struct{} |  27 |     31 |        94\n| Python set       | 125 |    125 |       125\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 2301, "user_id": 1168212, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/oayHK.jpg?s=128&g=1", "display_name": "Alex Yu", "link": "https://stackoverflow.com/users/1168212/alex-yu"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1550239981, "post_id": 54710817, "comment_id": 96207647, "body": "@E_net4  OP mentioned <a href=\"https://docs.rs/sprs/0.2.0/sprs/sparse/vec/struct.CsVec.html\" rel=\"nofollow noreferrer\">sprs   crate where CsVec structure is defined</a>"}, {"owner": {"reputation": 61, "user_id": 2245517, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b97f99747b77f3ac9bce0a80fe204e14?s=128&d=identicon&r=PG", "display_name": "garypen", "link": "https://stackoverflow.com/users/2245517/garypen"}, "edited": false, "score": 2, "creation_date": 1550240143, "post_id": 54710817, "comment_id": 96207751, "body": "I believe the question does meet the MCVE standards. I did note that CsVec was part of the sprs crate (someone has kindly edited my question to add a link to the crate) and expected that anyone wanting to know the implementation of CsVec would look at the sprs documentation. Apart from that, I believed that all the information required was present."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1550240913, "post_id": 54710817, "comment_id": 96208201, "body": "After answering, I found this question: <a href=\"https://stackoverflow.com/q/29184358/3650362\">How do I require a generic type implement an operation like Add, Sub, Mul, or Div in a generic function?</a> Is this close enough to flag as a duplicate?"}, {"owner": {"reputation": 61, "user_id": 2245517, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b97f99747b77f3ac9bce0a80fe204e14?s=128&d=identicon&r=PG", "display_name": "garypen", "link": "https://stackoverflow.com/users/2245517/garypen"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1550241670, "post_id": 54710817, "comment_id": 96208624, "body": "@trentcl I did search and failed to find that. That is close enough to flag as duplicate."}], "answers": [{"comments": [{"owner": {"reputation": 61, "user_id": 2245517, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b97f99747b77f3ac9bce0a80fe204e14?s=128&d=identicon&r=PG", "display_name": "garypen", "link": "https://stackoverflow.com/users/2245517/garypen"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1550241894, "post_id": 54711300, "comment_id": 96208782, "body": "@LukasKalbertodt: Thanks to both of you! That makes lifetimes and their usage a lot clearer for me."}], "tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": false, "score": 4, "last_activity_date": 1550251617, "last_edit_date": 1550251617, "creation_date": 1550240492, "answer_id": 54711300, "question_id": 54710817, "link": "https://stackoverflow.com/questions/54710817/how-do-i-declare-a-generic-function-which-can-add-together-references-to-sparse/54711300#54711300", "title": "How do I declare a generic function which can add together references to sparse vectors?", "body": "<p>Be sure that the trait bounds <em>defined on</em> the function match the behavior <em>used in</em> the function.</p>\n\n<p><code>first</code> and <code>second</code> are not <code>CsVec&lt;T&gt;</code>, but <code>&amp;CsVec&lt;T&gt;</code>. In Rust, <code>&amp;X</code> is a different type from <code>X</code>. You need a trait bound that says that you can add two <code>&amp;CsVec&lt;T&gt;</code>s and get a <code>CsVec&lt;T&gt;</code> as output:</p>\n\n<pre><code>fn adder2&lt;'a, T&gt;(first: &amp;'a CsVec&lt;T&gt;, second: &amp;'a CsVec&lt;T&gt;) -&gt; CsVec&lt;T&gt;\nwhere\n    &amp;'a CsVec&lt;T&gt;: Add&lt;Output = CsVec&lt;T&gt;&gt;,\n{\n    first + second\n}\n</code></pre>\n\n<p>No bounds on <code>T</code> are needed in this example.</p>\n\n<p>The <code>'a</code> lifetime parameter in this case was passed in to the function. Sometimes it is useful to define a trait bound on a reference <em>inside</em> the function, for example, to use <code>+</code> on references to local variables. In that case you would want to use the <em>higher-ranked trait bound</em> <code>for&lt;'a&gt; &amp;'a CsVec&lt;T&gt;: Add&lt;Output = CsVec&lt;T&gt;&gt;</code> instead. See the linked questions below for more information.</p>\n\n<p>Lukas Kalbertodt points out that it may sometimes be more flexible to say \"I just want to add two <code>&amp;CsVec&lt;T&gt;</code>s, and I will return whatever type that operation gives me\", which you can do by returning <code>&lt;&amp;'a CsVec&lt;T&gt; as Add&gt;::Output</code>:</p>\n\n<pre><code>fn adder2&lt;'a, T&gt;(first: &amp;'a CsVec&lt;T&gt;, second: &amp;'a CsVec&lt;T&gt;) -&gt; &lt;&amp;'a CsVec&lt;T&gt; as Add&gt;::Output\nwhere\n    &amp;'a CsVec&lt;T&gt;: Add,\n{\n    first + second\n}\n</code></pre>\n\n<p>In this case the output type does not have to be exactly <code>CsVec&lt;T&gt;</code>, but when it is, it works the same way as the first version.</p>\n\n<h2>Related</h2>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/34630695/3650362\">How to write a trait bound for adding two references of a generic type?</a></li>\n<li><a href=\"https://stackoverflow.com/q/29184358/3650362\">How do I require a generic type implement an operation like Add, Sub, Mul, or Div in a generic function?</a></li>\n</ul>\n"}], "owner": {"reputation": 61, "user_id": 2245517, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b97f99747b77f3ac9bce0a80fe204e14?s=128&d=identicon&r=PG", "display_name": "garypen", "link": "https://stackoverflow.com/users/2245517/garypen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 85, "favorite_count": 0, "closed_date": 1550249427, "answer_count": 1, "score": 3, "last_activity_date": 1550251617, "creation_date": 1550238807, "last_edit_date": 1550249059, "question_id": 54710817, "link": "https://stackoverflow.com/questions/54710817/how-do-i-declare-a-generic-function-which-can-add-together-references-to-sparse", "closed_reason": "Duplicate", "title": "How do I declare a generic function which can add together references to sparse vectors?", "body": "<p>I'm trying to use <a href=\"https://crates.io/crates/sprs\" rel=\"nofollow noreferrer\">the <code>sprs</code> crate</a> (version <code>0.6.3</code>) to manipulate sparse vectors. I'd like to add two vectors together.\nI started off with an implementation of the <code>Add</code> trait, then simplified this to an implementation function. Finally, I've boiled down the problem to a simple generic function.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// This works: the scalar type `u64` is fixed here\nfn adder(first: &amp;CsVec&lt;u64&gt;, second: &amp;CsVec&lt;u64&gt;) -&gt; CsVec&lt;u64&gt; {\n    first + second\n}\n\n// When I try to make the scalar type generic, it doesn't work\nfn adder2&lt;T&gt;(first: &amp;CsVec&lt;T&gt;, second: &amp;CsVec&lt;T&gt;) -&gt; CsVec&lt;T&gt;\nwhere\n    CsVec&lt;T&gt;: Add,\n    T: Add + Debug,\n{\n    first + second\n}\n</code></pre>\n\n<p>The first version compiles fine, but I'd like to know why the second version won't compile. I get this error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0369]: binary operation `+` cannot be applied to type `&amp;sprs::sparse::CsVecBase&lt;std::vec::Vec&lt;usize&gt;, std::vec::Vec&lt;T&gt;&gt;`\n  --&gt; libp3prime/src/lib/datacache.rs:62:5\n   |\n62 |     first + second\n   |     ^^^^^^^^^^^^^^\n   |\n   = note: an implementation of `std::ops::Add` might be missing for `&amp;sprs::sparse::CsVecBase&lt;std::vec::Vec&lt;usize&gt;, std::vec::Vec&lt;T&gt;&gt;`\n</code></pre>\n\n<p>I don't really understand the error message. I know that you can add two <code>CsVecs</code> together, since <code>adder()</code> compiles, so I am a bit lost.</p>\n\n<p>The two vectors should add together.</p>\n"}, {"tags": ["rust", "compiler-warnings", "rust-macros"], "comments": [{"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1550240561, "post_id": 54710797, "comment_id": 96207999, "body": "I guess it seems like an open issue since it slips from <code>deny(warnings)</code> and also <code>allow(warnings)</code>. Here is the <a href=\"https://github.com/rust-lang/rust/issues/58055\" rel=\"nofollow noreferrer\">open_issue</a>"}], "answers": [{"tags": [], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "is_accepted": true, "score": 2, "last_activity_date": 1550241873, "creation_date": 1550241873, "answer_id": 54711694, "question_id": 54710797, "link": "https://stackoverflow.com/questions/54710797/how-to-disable-unnecessary-path-disambiguator-warning/54711694#54711694", "title": "How to disable &quot;unnecessary path disambiguator&quot; warning?", "body": "<p>It is an open issue currently. </p>\n\n<p>This lint is currently slipping these attributes like <code>#![allow(warnings)]</code></p>\n\n<p><a href=\"https://github.com/rust-lang/rust/issues/58055\" rel=\"nofollow noreferrer\">Reference</a></p>\n"}], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 123, "favorite_count": 1, "accepted_answer_id": 54711694, "answer_count": 1, "score": 5, "last_activity_date": 1550241873, "creation_date": 1550238746, "question_id": 54710797, "link": "https://stackoverflow.com/questions/54710797/how-to-disable-unnecessary-path-disambiguator-warning", "title": "How to disable &quot;unnecessary path disambiguator&quot; warning?", "body": "<p>I am generating code with a macro, which contains fully qualified type paths like this:</p>\n\n<pre><code>let vec: Vec::&lt;String&gt;;\n</code></pre>\n\n<p>Note the extra <code>::</code> before <code>&lt;String&gt;</code>. This is necessary so that the same input token can be also be used for the constructor, by appending <code>::new()</code>:</p>\n\n<pre><code>Vec::&lt;String&gt;::new()\n</code></pre>\n\n<p>However, this produces warnings:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning: unnecessary path disambiguator\n --&gt; src/main.rs:4:17\n  |\n4 |     let vec: Vec::&lt;String&gt;;\n  |                 ^^ try removing `::`\n</code></pre>\n\n<p>I can't remove the <code>::</code> because then I get an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: chained comparison operators require parentheses\n --&gt; src/main.rs:6:14\n  |\n6 |     vec = Vec&lt;String&gt;::new();\n  |              ^^^^^^^^^^\n  |\n  = help: use `::&lt;...&gt;` instead of `&lt;...&gt;` if you meant to specify type arguments\n  = help: or use `(...)` if you meant to specify fn arguments\n\nerror[E0423]: expected value, found struct `Vec`\n --&gt; src/main.rs:6:11\n  |\n6 |     vec = Vec&lt;String&gt;::new();\n  |           ^^^\n  |           |\n  |           did you mean `vec`?\n  |           did you mean `Vec { /* fields */ }`?\n\n</code></pre>\n\n<p>How can I disable the warning just for this one line?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1550502836, "post_id": 54709076, "comment_id": 96282566, "body": "@trentcl do you think, once reopened, this will be a duplicate of <a href=\"https://stackoverflow.com/q/29760668/155423\">Conditionally iterate over one of several possible iterators</a>?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1550503278, "post_id": 54709076, "comment_id": 96282829, "body": "@Shepmaster Yeah, probably so"}, {"owner": {"reputation": 505, "user_id": 4731971, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e60ab9e7a02af85398cc7b7da4dafe9?s=128&d=identicon&r=PG", "display_name": "lucatrv", "link": "https://stackoverflow.com/users/4731971/lucatrv"}, "edited": false, "score": 0, "creation_date": 1550523315, "post_id": 54709076, "comment_id": 96292032, "body": "The difference is that I need to convert all different types to a common type (in this example to <code>String</code>), I guess it is a common case every time one need to store different <code>Vec</code> types in the same <code>Vec</code> using an <code>enum</code>. If it gets reopened I can post an answer, otherwise if you think it is a duplicate please go ahead and delete it."}], "answers": [{"tags": [], "owner": {"reputation": 1602, "user_id": 5947247, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f5212b96ae435bb73b9980f34b2913e8?s=128&d=identicon&r=PG&f=1", "display_name": "Isaac van Bakel", "link": "https://stackoverflow.com/users/5947247/isaac-van-bakel"}, "is_accepted": true, "score": 1, "last_activity_date": 1557936692, "creation_date": 1557936692, "answer_id": 56153609, "question_id": 54709076, "link": "https://stackoverflow.com/questions/54709076/how-can-i-implement-an-iterator-over-an-enum-which-contains-slice-values-of-diff/56153609#56153609", "title": "How can I implement an iterator over an enum which contains slice values of different types converting all values to String?", "body": "<p>You have two options:</p>\n\n<ol>\n<li>Dynamic dispatch</li>\n<li>A non-lazy iterator</li>\n</ol>\n\n<p>You can't have both static dispatch and a lazy iterator, because that requires the compiler to produce the code path for <code>to_string()</code> at compile time where the correct choice is only known at runtime.</p>\n\n<h2>Dynamic dispatch</h2>\n\n<p>To use dynamic dispatch, you can create an iterator over trait objects.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::fmt::Display;\n\nstruct DisplayIter&lt;'iter&gt; {\n  inner_iter: Box&lt;Iterator&lt;Item=&amp;'iter dyn Display&gt; + 'iter&gt;,\n}\n\nimpl&lt;'iter&gt; Iterator for DisplayIter&lt;'iter&gt; {\n  type Item = String;\n\n  fn next(&amp;mut self) -&gt; Option&lt;String&gt; {\n    self.inner_iter.next().map(|val| format!(\"{}\", val))\n  }\n}\n</code></pre>\n\n<p>In order to use it on a slice iterator, though, you'll need to transform each reference into a trait object reference, such as</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>data.iter().map(|x| x as &amp;dyn Display)\n</code></pre>\n\n<h2>Non-lazy iterator</h2>\n\n<p>Just collect the results of the <code>map</code> you're already doing, and return a owned iterator over the result. This has the downside of allocating, but it solves the issue of needing to choose the code path at compile-time.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>data.iter().map(|&amp;x| x.to_string()).collect::&lt;Vec&lt;_&gt;&gt;().into_iter()\n</code></pre>\n"}], "owner": {"reputation": 505, "user_id": 4731971, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e60ab9e7a02af85398cc7b7da4dafe9?s=128&d=identicon&r=PG", "display_name": "lucatrv", "link": "https://stackoverflow.com/users/4731971/lucatrv"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 654, "favorite_count": 0, "accepted_answer_id": 56153609, "answer_count": 1, "score": 1, "last_activity_date": 1593114530, "creation_date": 1550232592, "last_edit_date": 1593114530, "question_id": 54709076, "link": "https://stackoverflow.com/questions/54709076/how-can-i-implement-an-iterator-over-an-enum-which-contains-slice-values-of-diff", "title": "How can I implement an iterator over an enum which contains slice values of different types converting all values to String?", "body": "<p>This is a simplified example of my <code>enum</code>:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Debug, Clone, Copy)]\nenum Data&lt;'a&gt; {\n    I32(&amp;'a [i32]),\n    F64(&amp;'a [f64]),\n}\n</code></pre>\n<p>I use the <code>enum</code> to store different slice types (not only <code>&amp;[i32]</code> and <code>&amp;[f64]</code> as in the example above, but many more) to the same vector <code>Vec&lt;Data&lt;'a&gt;&gt;</code>. I need a way to iterate through the slice values (either <code>&amp;[i32]</code> or <code>&amp;[f64]</code>, whatever is stored in the <code>enum</code>) converting all values to <code>String</code>. The following code shows what in principle I would like to achieve, but it does not work:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>impl&lt;'a&gt; Data&lt;'a&gt; {\n    fn iter_to_string(&amp;self) -&gt; impl Iterator&lt;Item = String&gt; {\n        match self {\n            Data::I32(data) =&gt; data.iter().map(|&amp;x| x.to_string()),\n            Data::F64(data) =&gt; data.iter().map(|&amp;x| x.to_string()),\n        }\n    }\n}\n</code></pre>\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: match arms have incompatible types\n  --&gt; src/main.rs:9:9\n   |\n9  | /         match self {\n10 | |             Data::I32(data) =&gt; data.iter().map(|&amp;x| x.to_string()),\n11 | |             Data::F64(data) =&gt; data.iter().map(|&amp;x| x.to_string()),\n   | |                                ----------------------------------- match arm with an incompatible type\n12 | |         }\n   | |_________^ expected i32, found f64\n   |\n   = note: expected type `std::iter::Map&lt;std::slice::Iter&lt;'_, i32&gt;, [closure@src/main.rs:10:48: 10:66]&gt;`\n              found type `std::iter::Map&lt;std::slice::Iter&lt;'_, f64&gt;, [closure@src/main.rs:11:48: 11:66]&gt;`\n</code></pre>\n"}, {"tags": ["c#", "string", "dll", "utf-8", "rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 4, "creation_date": 1550227707, "post_id": 54707579, "comment_id": 96200916, "body": "The <a href=\"http://jakegoulding.com/rust-ffi-omnibus/string_return/\" rel=\"nofollow noreferrer\">Rust FFI Omnibus</a> also recommends performing the conversion on the C# side."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 2, "creation_date": 1550227710, "post_id": 54707579, "comment_id": 96200917, "body": "There is also <a href=\"https://docs.microsoft.com/en-us/dotnet/api/system.runtime.interopservices.marshal.ptrtostringutf8?view=netcore-2.2\" rel=\"nofollow noreferrer\"><code>Marshal.PtrToStringUTF8</code></a>. (I have no idea about C# though!) (Br&#246;tchen &lt;3)"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1550228042, "post_id": 54707579, "comment_id": 96201117, "body": "I don&#39;t get your edit. Can you explain what&#39;s wrong with the answer and why it doesn&#39;t suit your needs?"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1550228463, "post_id": 54707579, "comment_id": 96201365, "body": "I don&#39;t think this question is a dupe of the linked one. This one has to go from a pointer to a string whereas the linked question already has a string. So some information is still missing and thus it&#39;s not a dupe IMO."}, {"owner": {"reputation": 18759, "user_id": 2226988, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c6fbec3a71b2e95e4a6e41478deb379?s=128&d=identicon&r=PG", "display_name": "Tom Blodget", "link": "https://stackoverflow.com/users/2226988/tom-blodget"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1550448095, "post_id": 54707579, "comment_id": 96260185, "body": "I think there is a very relevant comment by @Shepmaster in a deleted answer. The setup in Rust makes a satisfactory solution unnecessarily challenging. &quot;Who is responsible for freeing the pointer returned by the Rust function? In the OP&#39;s example, ownership of the pointer is transferred from Rust to C# and it needs to be transferred back in order to properly deallocate it&quot;."}, {"owner": {"reputation": 191, "user_id": 8970885, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a038c6bb13e9c15b5313728b43241d31?s=128&d=identicon&r=PG&f=1", "display_name": "valerius21", "link": "https://stackoverflow.com/users/8970885/valerius21"}, "reply_to_user": {"reputation": 18759, "user_id": 2226988, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c6fbec3a71b2e95e4a6e41478deb379?s=128&d=identicon&r=PG", "display_name": "Tom Blodget", "link": "https://stackoverflow.com/users/2226988/tom-blodget"}, "edited": false, "score": 0, "creation_date": 1550484539, "post_id": 54707579, "comment_id": 96271650, "body": "@TomBlodget I have a method that does free the string; I did not include it, because I think its irrelevant, since freeing the string is not the issue."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1550502254, "post_id": 54745272, "comment_id": 96282227, "body": "Does this answer do anything <i>different</i> from what the Omnibus shows?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1550502415, "post_id": 54745272, "comment_id": 96282318, "body": "<i>I am still unsure what causes the wrong decoding</i> \u2014 Rust strings are UTF-8. An &quot;ANSI&quot; string is not UTF-8 (ANSI may be ASCII, or it might be one of a number of code pages that varies depending on system locale). In Windows world, a &quot;Unicode&quot; string usually means something encoded with UCS-2 or UTF-16 (similar but different), neither of which are UTF-8. Namely, they use 16-byte values."}], "tags": [], "owner": {"reputation": 191, "user_id": 8970885, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a038c6bb13e9c15b5313728b43241d31?s=128&d=identicon&r=PG&f=1", "display_name": "valerius21", "link": "https://stackoverflow.com/users/8970885/valerius21"}, "is_accepted": false, "score": 2, "last_activity_date": 1550502218, "last_edit_date": 1550502218, "creation_date": 1550486053, "answer_id": 54745272, "question_id": 54707579, "link": "https://stackoverflow.com/questions/54707579/getting-a-utf-8-encoded-string-from-a-rust-dll-in-c/54745272#54745272", "title": "Getting a UTF-8 encoded String from a Rust DLL in C#", "body": "<p>Thanks to <a href=\"https://stackoverflow.com/questions/54707579/getting-a-utf-8-encoded-string-from-a-rust-dll-in-c-sharp#comment96200916_54707579\">@E_net4's comment</a> recommending to read the <a href=\"https://jakegoulding.com/rust-ffi-omnibus/basics/\" rel=\"nofollow noreferrer\">Rust FFI Omnibus</a>, I came to an answer that is rather complicated but works.</p>\n\n<p>I figured that I have to rewrite the classes I am using. Furthermore, I am using the <a href=\"https://crates.io/crates/libc\" rel=\"nofollow noreferrer\">libc</a> library and <a href=\"https://doc.rust-lang.org/std/ffi/struct.CString.html\" rel=\"nofollow noreferrer\"><code>CString</code></a>.</p>\n\n<p>Cargo.toml</p>\n\n<pre><code>[package]\nname = \"testlib\"\nversion = \"0.1.0\"\nauthors = [\"John Doe &lt;jdoe@doe.com&gt;\"]\nedition = \"2018\"\n\n[lib]\ncrate-type = [\"cdylib\"]\n\n[dependencies]\nlibc = \"0.2.48\"\n</code></pre>\n\n<p>src/lib.rs</p>\n\n<pre><code>extern crate libc;\n\nuse libc::{c_char, uint32_t};\nuse std::ffi::{CStr, CString};\nuse std::str;\n\n// Takes foreign C# string as input, converts it to Rust String\nfn mkstr(s: *const c_char) -&gt; String {\n    let c_str = unsafe {\n        assert!(!s.is_null());\n\n        CStr::from_ptr(s)\n    };\n\n    let r_str = c_str.to_str()\n        .expect(\"Could not successfully convert string form foreign code!\");\n\n    String::from(r_str)\n}\n\n\n// frees string from ram, takes string pointer as input\n#[no_mangle]\npub extern fn free_string(s: *mut c_char) {\n    unsafe {\n        if s.is_null() { return }\n        CString::from_raw(s)\n    };\n}\n\n// method, that takes the foreign C# string as input, \n// converts it to a rust string, and returns it as a raw CString.\n#[no_mangle]\npub extern fn result(istr: *const c_char) -&gt; *mut c_char {\n    let s = mkstr(istr);\n    let cex = CString::new(s)\n        .expect(\"Failed to create CString!\");\n\n    cex.into_raw()\n}\n</code></pre>\n\n<p>C# Class</p>\n\n<pre class=\"lang-cs prettyprint-override\"><code>using System;\nusing System.Text;\nusing System.Runtime.InteropServices;\n\n\nnamespace Testclass\n{\n    internal class Native\n    {\n        [DllImport(\"testlib.dll\")]\n        internal static extern void free_string(IntPtr str);\n\n        [DllImport(\"testlib.dll\")]\n        internal static extern StringHandle result(string inputstr);\n    }\n\n    internal class StringHandle : SafeHandle\n    {\n        public StringHandle() : base(IntPtr.Zero, true) { }\n\n        public override bool IsInvalid\n        {\n            get { return false; }\n        }\n\n        public string AsString()\n        {\n            int len = 0;\n            while (Marshal.ReadByte(handle,len) != 0) { ++len; }\n            byte[] buffer = new byte[len];\n            Marshal.Copy(handle, buffer, 0, buffer.Length);\n            return Encoding.UTF8.GetString(buffer);\n        }\n\n        protected override bool ReleaseHandle()\n        {\n            Native.free_string(handle);\n            return true;\n        }\n    }\n\n    internal class StringTesting: IDisposable\n    {\n        private StringHandle str;\n        private string resString;\n        public StringTesting(string word)\n        {\n            str = Native.result(word);\n        }\n        public override string ToString()\n        {\n            if (resString == null)\n            {\n                resString = str.AsString();\n            }\n            return resString;\n        }\n        public void Dispose()\n        {\n            str.Dispose();\n        }\n    }\n\n    class Testclass\n    {\n        public static string Testclass(string inputstr)\n        {\n            return new StringTesting(inputstr).ToString();\n        }\n\n        public static Main()\n        {\n            Console.WriteLine(new Testclass(\"Br\u00f6tchen\")); // output: Br\u00f6tchen \n        }\n    }\n}\n</code></pre>\n\n<p>While this archives the desired result, I am still unsure what causes the wrong decoding in the code provided by the question.</p>\n"}], "owner": {"reputation": 191, "user_id": 8970885, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a038c6bb13e9c15b5313728b43241d31?s=128&d=identicon&r=PG&f=1", "display_name": "valerius21", "link": "https://stackoverflow.com/users/8970885/valerius21"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 762, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1550502218, "creation_date": 1550227358, "last_edit_date": 1550249720, "question_id": 54707579, "link": "https://stackoverflow.com/questions/54707579/getting-a-utf-8-encoded-string-from-a-rust-dll-in-c", "title": "Getting a UTF-8 encoded String from a Rust DLL in C#", "body": "<p>I found a lot of information on US-ANSI strings for a Rust DLL implementation in C#, but this does not solve any issues for UTF-8 encoded strings.</p>\n\n<p>For example, <code>\"Br\u00f6tchen\"</code>, once called in C#, results in <code>\"Br\u00c3\u00b6tchen\"</code>.</p>\n\n<p>Rust</p>\n\n<pre><code>use std::os::raw::c_char;\nuse std::ffi::CString;\n\n#[no_mangle]\npub extern fn string_test() -&gt; *mut c_char {\n    let c_to_print = CString::new(\"Br\u00f6tchen\")\n        .expect(\"CString::new failed!\");\n    let r = c_to_print;\n    r.into_raw()  \n}\n</code></pre>\n\n<p>C#</p>\n\n<pre><code>[DllImport(@\"C:\\Users\\User\\source\\repos\\testlib\\target\\debug\\testlib.dll\")]\nprivate static extern IntPtr string_test();\n\npublic static void run()\n{\n    var s = string_test();\n    var res = Marshal.PtrToStringAnsi(s);\n    // var res = Marshal.PtrToStringUni(s);\n    // var res = Marshal.PtrToStringAuto(s);\n    // Are resulting in: ????n\n    Console.WriteLine(res); // prints \"Br\u00c3\u00b6tchen\", expected \"Br\u00f6tchen\"\n}\n</code></pre>\n\n<p>How do I get the desired result?</p>\n\n<p>I do not think this is a duplicate of <a href=\"https://stackoverflow.com/questions/14057434/how-can-i-transform-string-to-utf-8-in-c\">How can I transform string to UTF-8 in C#?</a> because its answers resulting in the same manner as <code>Marshal.PtrToStringAuto(s)</code> and <code>Marshal.PtrToStringUni(s)</code>.</p>\n"}, {"tags": ["sorting", "rust", "generator"], "comments": [{"owner": {"reputation": 992, "user_id": 3089519, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e1dc4dfcc798a49c1de0b2dcca4dee3c?s=128&d=identicon&r=PG", "display_name": "swalladge", "link": "https://stackoverflow.com/users/3089519/swalladge"}, "edited": false, "score": 4, "creation_date": 1550194815, "post_id": 54701548, "comment_id": 96189650, "body": "By definition, a sort needs to work on all the data at once surely? You can&#39;t just stream it through in O(n) time."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1550195090, "post_id": 54701548, "comment_id": 96189710, "body": "&quot;Now, I know how sort a vector/slice, but how sort form a incoming stream/iterator without put all in a vector? alike:&quot; magic ?"}, {"owner": {"reputation": 14809, "user_id": 53185, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/021d0d3a0676561486d5ec92339e3bb4?s=128&d=identicon&r=PG", "display_name": "mamcx", "link": "https://stackoverflow.com/users/53185/mamcx"}, "edited": false, "score": 0, "creation_date": 1550195697, "post_id": 54701548, "comment_id": 96189841, "body": "Not magic. This is a common problem with databases, where is not wise to load all the data then sort. The thing is I not see apply a sort algorithm like merge sort without put first on a vector."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1550195930, "post_id": 54701548, "comment_id": 96189892, "body": "@mamcx I know many way of sort thing, in place without use more memory that needed is possible, but at some point you need to stock the data somewhere. There is no algorithm that can do what you want, even it&#39;s a common problem I doubt there is a common solution, except add more memory to your server."}, {"owner": {"reputation": 14809, "user_id": 53185, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/021d0d3a0676561486d5ec92339e3bb4?s=128&d=identicon&r=PG", "display_name": "mamcx", "link": "https://stackoverflow.com/users/53185/mamcx"}, "edited": false, "score": 0, "creation_date": 1550196038, "post_id": 54701548, "comment_id": 96189917, "body": "I have not problem with storing the results. I know I need that. What I don&#39;t know is how in rust &quot;plug-play&quot; the sorting to my storage."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1550200930, "post_id": 54701548, "comment_id": 96190764, "body": "Reminds me of <a href=\"https://stackoverflow.com/q/12748246/3650362\">Sorting 1 million 8-digit numbers in 1 MB of RAM</a>. You can perhaps apply some clever (domain-specific) tricks, but it sounds like that&#39;s not what you want"}], "answers": [{"comments": [{"owner": {"reputation": 992, "user_id": 3089519, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e1dc4dfcc798a49c1de0b2dcca4dee3c?s=128&d=identicon&r=PG", "display_name": "swalladge", "link": "https://stackoverflow.com/users/3089519/swalladge"}, "edited": false, "score": 0, "creation_date": 1550200848, "post_id": 54702184, "comment_id": 96190749, "body": "I think the key to OP&#39;s problem will be <code>FromIterator</code> and <code>IntoIterator</code> - then a module in the chain can simply accept iterators and output iterators. Hard without seeing how OP has implemented things so far though."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 992, "user_id": 3089519, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e1dc4dfcc798a49c1de0b2dcca4dee3c?s=128&d=identicon&r=PG", "display_name": "swalladge", "link": "https://stackoverflow.com/users/3089519/swalladge"}, "edited": false, "score": 0, "creation_date": 1550200978, "post_id": 54702184, "comment_id": 96190774, "body": "@swalladge Indeed. If OP is just using method chaining, then something closer to <code>Itertools::sorted</code> will be relevant."}, {"owner": {"reputation": 14809, "user_id": 53185, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/021d0d3a0676561486d5ec92339e3bb4?s=128&d=identicon&r=PG", "display_name": "mamcx", "link": "https://stackoverflow.com/users/53185/mamcx"}, "edited": false, "score": 0, "creation_date": 1550202139, "post_id": 54702184, "comment_id": 96191000, "body": "@ Shepmaster Looking how itertools do it is enough for me. I need to adapt to a streaming interface I&#39;m doing. With relation to databases, I&#39;m building a relational lang (thing like python but everything is a relation) so everything is in-memory, only need to worry for loading from external sources and implement a few core collections."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 16, "last_activity_date": 1550201530, "last_edit_date": 1550201530, "creation_date": 1550200144, "answer_id": 54702184, "question_id": 54701548, "link": "https://stackoverflow.com/questions/54701548/how-can-i-sort-an-iterator-without-putting-it-all-in-a-vector/54702184#54702184", "title": "How can I sort an iterator without putting it all in a vector?", "body": "<p>It is literally impossible to sort a set of values <em>without</em> having all of the data. For example, if the iterator had 1 billion instances of <code>1</code> followed by a single <code>0</code>, you simply wouldn't know that the zero needed to go first until you got there. You may wish to re-acquaint yourself with the concept of <a href=\"https://en.wikipedia.org/wiki/Online_algorithm\" rel=\"noreferrer\">on- and offline algorithms</a>.</p>\n\n<blockquote>\n  <p>without putting it all in a vector</p>\n</blockquote>\n\n<p>That's easy: don't use a vector, use any type that implements <a href=\"https://doc.rust-lang.org/std/iter/trait.FromIterator.html\" rel=\"noreferrer\"><code>FromIterator</code></a>. For example, you could collect into a <code>BinaryHeap</code>:</p>\n\n<pre><code>use std::{collections::BinaryHeap, iter};\n\nfn main() {\n    let a_lot_of_numbers = iter::repeat(1).take(100).chain(iter::once(0));\n    let data: BinaryHeap&lt;_&gt; = a_lot_of_numbers.collect();\n}\n</code></pre>\n\n<p>Whether this is a good idea or not depends entirely on your case.</p>\n\n<p>If you just don't want to <em>see</em> the vector or just wish to preserve the chaining, then I'd suggest using <a href=\"https://docs.rs/itertools/0.8.0/itertools/trait.Itertools.html#method.sorted\" rel=\"noreferrer\"><code>Itertools::sorted</code></a>. This uses a <code>Vec</code> internally, meaning that <strong>all of the data is stored in memory</strong> before the first value is returned:</p>\n\n<pre><code>use itertools::Itertools; // 0.8.0\nuse std::iter;\n\nfn main() {\n    let a_lot_of_numbers = iter::repeat(1).take(100).chain(iter::once(0));\n\n    for v in a_lot_of_numbers.sorted() {\n        println!(\"{}\", v);\n    }\n}\n</code></pre>\n\n<blockquote>\n  <p>This is a common problem with databases, where is not wise to load all the data then sort</p>\n</blockquote>\n\n<p>Databases are amazingly complex pieces of software with years of effort put into them considering carefully weighed tradeoffs. You won't find that grade of algorithm lying about in a package manager. Even if you could, databases don't always get it right, requiring skilled programmers to tweak queries to perform better. <a href=\"https://madusudanan.com/blog/all-you-need-to-know-about-sorting-in-postgres/\" rel=\"noreferrer\">All you need to know about sorting in Postgres</a> covers a good set of what Postgres can do.</p>\n\n<p>It should be theoretically possible to write an iterator adapter that writes all of the data to disk, performs sorting there, then re-reads the data from the disk. This is called <a href=\"https://en.wikipedia.org/wiki/External_sorting\" rel=\"noreferrer\">external sorting</a>.</p>\n"}], "owner": {"reputation": 14809, "user_id": 53185, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/021d0d3a0676561486d5ec92339e3bb4?s=128&d=identicon&r=PG", "display_name": "mamcx", "link": "https://stackoverflow.com/users/53185/mamcx"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 8739, "favorite_count": 1, "accepted_answer_id": 54702184, "answer_count": 1, "score": 4, "last_activity_date": 1607351185, "creation_date": 1550194409, "last_edit_date": 1607351185, "question_id": 54701548, "link": "https://stackoverflow.com/questions/54701548/how-can-i-sort-an-iterator-without-putting-it-all-in-a-vector", "title": "How can I sort an iterator without putting it all in a vector?", "body": "<p>I'm building a generic interface similar to generators that stream data from a stream to another, to eventually do things like:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>file |&gt; toCsv |&gt; filter |&gt; sort |&gt; filter...\n</code></pre>\n\n<p>I know how to sort a vector/slice, but how can I sort from an incoming stream/iterator without putting it all in a vector?</p>\n\n<pre><code>stream.iter().collect_sorted()\n</code></pre>\n\n<p>I need to fuse vectors, trees, files, databases, etc., so sometimes I don't know how large the incoming data is without consuming it all.</p>\n\n<p>I'm not against storing the results. The problem is that sorting is tied to slices/vector. I need to be able to do:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>datasource |&gt; Algo.sort |&gt; next...\n</code></pre>\n\n<p>instead of:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>let data = datasource |&gt; into_vec\ndata.sort()\ndata |&gt; next...\n</code></pre>\n\n<p>Different sorting algorithms exist for different use cases, so eventually I wish to apply the best for the data at hand:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>datasource |&gt; Algo.MergeSort |&gt; next...\ndatasource |&gt; Algo.BubbleSort |&gt; next...\n</code></pre>\n"}, {"tags": ["rust", "webgl", "webassembly", "webgl-extensions"], "comments": [{"owner": {"reputation": 291, "user_id": 6748328, "user_type": "registered", "accept_rate": 75, "profile_image": "https://lh6.googleusercontent.com/-ZRBq2EMA69E/AAAAAAAAAAI/AAAAAAAAAFM/7qP0Uau0MXc/photo.jpg?sz=128", "display_name": "Zachary Burns", "link": "https://stackoverflow.com/users/6748328/zachary-burns"}, "edited": false, "score": 0, "creation_date": 1550181288, "post_id": 54699650, "comment_id": 96186264, "body": "I could not add the web-sys tag for lack of reputation. If someone wants to add that, it would be appreciated."}], "answers": [{"tags": [], "owner": {"reputation": 61, "user_id": 4465228, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/DDp2V.jpg?s=128&g=1", "display_name": "Wolfie Wolf", "link": "https://stackoverflow.com/users/4465228/wolfie-wolf"}, "is_accepted": false, "score": 1, "last_activity_date": 1555967364, "creation_date": 1555967364, "answer_id": 55801162, "question_id": 54699650, "link": "https://stackoverflow.com/questions/54699650/how-can-i-use-webgl-extensions-from-web-sys-in-rust/55801162#55801162", "title": "How can I use WebGL extensions from web_sys in Rust", "body": "<p>I noticed that you also posted your question on the wasm-bindgen issues log where they provided some useful information.  For other people who come across this I thought I would share the link.</p>\n\n<p><a href=\"https://github.com/rustwasm/wasm-bindgen/issues/1257\" rel=\"nofollow noreferrer\">https://github.com/rustwasm/wasm-bindgen/issues/1257</a></p>\n"}, {"tags": [], "owner": {"reputation": 291, "user_id": 6748328, "user_type": "registered", "accept_rate": 75, "profile_image": "https://lh6.googleusercontent.com/-ZRBq2EMA69E/AAAAAAAAAAI/AAAAAAAAAFM/7qP0Uau0MXc/photo.jpg?sz=128", "display_name": "Zachary Burns", "link": "https://stackoverflow.com/users/6748328/zachary-burns"}, "is_accepted": true, "score": 0, "last_activity_date": 1556119483, "creation_date": 1556119483, "answer_id": 55833605, "question_id": 54699650, "link": "https://stackoverflow.com/questions/54699650/how-can-i-use-webgl-extensions-from-web-sys-in-rust/55833605#55833605", "title": "How can I use WebGL extensions from web_sys in Rust", "body": "<p>As per this issue: <a href=\"https://github.com/rustwasm/wasm-bindgen/issues/893\" rel=\"nofollow noreferrer\">wasm-bindgen issue 893 - Figure out how to support interfaces with <code>NoInterfaceObject</code> attribute</a> The WebGL extensions should be available in the next release.</p>\n"}], "owner": {"reputation": 291, "user_id": 6748328, "user_type": "registered", "accept_rate": 75, "profile_image": "https://lh6.googleusercontent.com/-ZRBq2EMA69E/AAAAAAAAAAI/AAAAAAAAAFM/7qP0Uau0MXc/photo.jpg?sz=128", "display_name": "Zachary Burns", "link": "https://stackoverflow.com/users/6748328/zachary-burns"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 403, "favorite_count": 0, "accepted_answer_id": 55833605, "answer_count": 2, "score": 0, "last_activity_date": 1556119483, "creation_date": 1550181263, "last_edit_date": 1550181720, "question_id": 54699650, "link": "https://stackoverflow.com/questions/54699650/how-can-i-use-webgl-extensions-from-web-sys-in-rust", "title": "How can I use WebGL extensions from web_sys in Rust", "body": "<p>I'd like to use <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Using_Extensions\" rel=\"nofollow noreferrer\">WebGL Extensions</a> from within Rust code that is compiled to WebAssembly. The <code>web_sys::WebGlRenderingContext</code> has a method <a href=\"https://rustwasm.github.io/wasm-bindgen/api/web_sys/struct.WebGlRenderingContext.html#method.get_extension\" rel=\"nofollow noreferrer\"><code>get_extension</code></a> which returns a <code>JsValue</code>.</p>\n\n<p>I expect there is a way to either use the <code>dyn_into</code> method to get an <code>ANGLE_instanced_arrays</code> interface, which according to <a href=\"https://github.com/rustwasm/wasm-bindgen/blob/master/crates/web-sys/webidls/enabled/WebGLRenderingContext.webidl\" rel=\"nofollow noreferrer\">this webidl</a> may be included in  <code>web_sys</code> somewhere, but I can't seem to get at it. If it's not possible to get to the <code>ANGLE_instanced_arrays</code> interface, is it possible to call known methods and properties using the <code>JsValue</code> directly?</p>\n"}, {"tags": ["generics", "rust", "traits"], "answers": [{"comments": [{"owner": {"reputation": 592, "user_id": 6672815, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ee6c8d74588b5dbf028aeed0e33b8ee5?s=128&d=identicon&r=PG&f=1", "display_name": "virgesmith", "link": "https://stackoverflow.com/users/6672815/virgesmith"}, "edited": false, "score": 0, "creation_date": 1550178640, "post_id": 54698576, "comment_id": 96185118, "body": "Solves both my problems thanks. I agree that reinventing the wheel is a bad idea generally, but I find it useful for learning stuff. After all I could have just done `-128i8.abs() to get an error"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1550218966, "post_id": 54698576, "comment_id": 96196060, "body": "I would recomend to return an <code>Option&lt;T&gt;</code> instead, because there is no real error here, but instead a valid computation or not. It&#39;s similar to <a href=\"https://doc.rust-lang.org/std/primitive.i32.html#method.checked_add\" rel=\"nofollow noreferrer\"><code>checked_add</code></a>"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1550224792, "post_id": 54698576, "comment_id": 96199193, "body": "@hellow Yes I agree. But I&#39;ve answered with the signature that OP asked for."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 2, "last_activity_date": 1550178572, "last_edit_date": 1550178572, "creation_date": 1550176136, "answer_id": 54698576, "question_id": 54698373, "link": "https://stackoverflow.com/questions/54698373/how-do-i-make-a-generic-absolute-value-function/54698576#54698576", "title": "How do I make a generic absolute value function?", "body": "<blockquote>\n  <p>How do I determine generically the minimum value? Basically the Rust equivalent of the C++ <code>std::numeric_limits&lt;T&gt;::min()</code>?</p>\n</blockquote>\n\n<p>You want the <a href=\"https://rust-num.github.io/num/num_traits/bounds/trait.Bounded.html\" rel=\"nofollow noreferrer\"><code>Bounded</code> trait</a> from the <code>num-traits</code> or <code>num</code> crates, which gives you a <code>min_value</code> method:</p>\n\n<pre><code>pub fn abs&lt;T&gt;(x: T) -&gt; Result&lt;T, String&gt;\nwhere\n    T: Signed + Integer + Zero + Neg + Bounded + Copy,\n{\n    match x {\n        x if x == T::min_value() =&gt; Err(\"Overflow\".to_string()),\n        x if x &lt; T::zero() =&gt; Ok(-x),\n        _ =&gt; Ok(x),\n    }\n}\n</code></pre>\n\n<blockquote>\n  <p>My generic implementation errors on the match arm for negative values with \"cannot bind by-move into a pattern guard\" (yet the non-generic version doesn't.)</p>\n</blockquote>\n\n<p>I added a <code>Copy</code> bound, to avoid the issue of moving the values in the pattern guard. Most numeric types should be <code>Copy</code>.</p>\n\n<p>Perhaps better though would be to use a \"checked\" operator variant, e.g. <code>CheckedSub</code>:</p>\n\n<pre><code>pub fn abs&lt;T&gt;(x: T) -&gt; Result&lt;T, String&gt;\nwhere\n    T: Signed + Integer + Zero + Neg + CheckedSub,\n{\n    if x &lt; T::zero() {\n        T::zero()\n            .checked_sub(&amp;x)\n            .ok_or_else(|| String::from(\"Overflow\"))\n    } else {\n        Ok(x)\n    }\n}\n</code></pre>\n\n<p>This delegates the \"meat\" of the function to existing code that does exactly what you want, so you have less room for mistakes. </p>\n"}], "owner": {"reputation": 592, "user_id": 6672815, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ee6c8d74588b5dbf028aeed0e33b8ee5?s=128&d=identicon&r=PG&f=1", "display_name": "virgesmith", "link": "https://stackoverflow.com/users/6672815/virgesmith"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 381, "favorite_count": 0, "accepted_answer_id": 54698576, "answer_count": 1, "score": 1, "last_activity_date": 1550247459, "creation_date": 1550175215, "last_edit_date": 1550247459, "question_id": 54698373, "link": "https://stackoverflow.com/questions/54698373/how-do-i-make-a-generic-absolute-value-function", "title": "How do I make a generic absolute value function?", "body": "<p>I'm attempting to write a generic function that calculates the absolute value of any signed integer type. It should return an error when the value is the lowest possible negative value, e.g for 8 bits <code>abs(-128)</code> cannot be represented. </p>\n\n<p>I got this working for <code>i8</code>:</p>\n\n<pre><code>pub fn abs(x: i8) -&gt; Result&lt;i8, String&gt; {\n    match x {\n        x if x == -128i8 =&gt; Err(\"Overflow\".to_string()),\n        // I know could just use x.abs() now but this illustrates a problem in the generic version below...\n        x if x &lt; 0i8 =&gt; Ok(-x),\n        _ =&gt; Ok(x),\n    }\n}\n\nfn main() {\n    println!(\"{:?}\", abs(-127i8));\n    println!(\"{:?}\", abs(-128i8));\n}\n</code></pre>\n\n<p>I can't get the generic version to work. Specifically I've two problems:</p>\n\n<ul>\n<li>How do I generically determine the minimum value? What is the Rust equivalent of the C++ <code>std::numeric_limits&lt;T&gt;::min()</code>? There is e.g. <code>std::i32::MIN</code> but I can't write <code>std::T::MIN</code>.</li>\n<li>My generic implementation errors on the match arm for negative values with \"cannot bind by-move into a pattern guard\" (yet the non-generic version doesn't.)</li>\n</ul>\n\n<pre><code>use num::{traits::Zero, Integer, Signed}; // 0.2.0\n\npub fn abs&lt;T&gt;(x: T) -&gt; Result&lt;T, String&gt;\nwhere\n    T: Signed + Integer + Zero,\n{\n    match x {\n        //x if x == ***rust equivalent of std::numeric_limits&lt;T&gt;::min()** =&gt; Err(\"Overflow\".to_string()),\n        x if x &lt; T::zero() =&gt; Ok(-x),\n        _ =&gt; Ok(x),\n    }\n}\n\nfn main() {\n    println!(\"{:?}\", abs(-127i8));\n    println!(\"{:?}\", abs(-128i8));\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0008]: cannot bind by-move into a pattern guard\n --&gt; src/main.rs:9:9\n  |\n9 |         x if x &lt; T::zero() =&gt; Ok(-x),\n  |         ^ moves value into pattern guard\n</code></pre>\n"}, {"tags": ["collections", "module", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1550174233, "post_id": 54697274, "comment_id": 96183233, "body": "What led you to use <code>into_iter</code> / <code>map</code> / <code>collect</code> here?"}, {"owner": {"reputation": 490, "user_id": 5322506, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/706cb330de139e4f5423ee1702c3167d?s=128&d=identicon&r=PG&f=1", "display_name": "my-", "link": "https://stackoverflow.com/users/5322506/my"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1550175762, "post_id": 54697274, "comment_id": 96183893, "body": "@Shepmaster Curiosity. I&#39;m learning Rust at moment and I was reading about <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.collect\" rel=\"nofollow noreferrer\">Iterrator</a> and I&#39;m fan of Java 8+ streams. So tried to do I thought &quot;simple thing&quot;."}], "answers": [{"comments": [{"owner": {"reputation": 490, "user_id": 5322506, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/706cb330de139e4f5423ee1702c3167d?s=128&d=identicon&r=PG&f=1", "display_name": "my-", "link": "https://stackoverflow.com/users/5322506/my"}, "edited": false, "score": 0, "creation_date": 1550174956, "post_id": 54697558, "comment_id": 96183512, "body": "Is here a way to edit code to make it work with BTreeSet?  I need uniqueness and order. Say somehow to change getter or change how update code works?? I have feeling it should be possible. What I thing is probably something like this: get collection reference &gt; create new <code>TreeSet</code> from it &gt; assign newly created <code>TreeSet</code> to reference. But how to do it in Rust.. I don&#39;t have much experience."}, {"owner": {"reputation": 490, "user_id": 5322506, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/706cb330de139e4f5423ee1702c3167d?s=128&d=identicon&r=PG&f=1", "display_name": "my-", "link": "https://stackoverflow.com/users/5322506/my"}, "edited": false, "score": 0, "creation_date": 1550175169, "post_id": 54697558, "comment_id": 96183610, "body": "Or maybe even: get collection (borrow it) &gt; take (remove from collection) each element &gt; update it &gt; insert back to collection updated element. In that case tree wont be broken."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 490, "user_id": 5322506, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/706cb330de139e4f5423ee1702c3167d?s=128&d=identicon&r=PG&f=1", "display_name": "my-", "link": "https://stackoverflow.com/users/5322506/my"}, "edited": false, "score": 0, "creation_date": 1550175884, "post_id": 54697558, "comment_id": 96183955, "body": "@my- see other answer but if you need to mutate all your elements frequently, maybe you are not using the good collection. But without more context I can&#39;t advise you more."}, {"owner": {"reputation": 490, "user_id": 5322506, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/706cb330de139e4f5423ee1702c3167d?s=128&d=identicon&r=PG&f=1", "display_name": "my-", "link": "https://stackoverflow.com/users/5322506/my"}, "edited": false, "score": 0, "creation_date": 1550176501, "post_id": 54697558, "comment_id": 96184192, "body": "I doubt updates would be frequent. Well in worst case scenario - yes, but I think it is only on the edge cases. I&#39;m doing coding challenge in some site."}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": false, "score": 2, "last_activity_date": 1550174035, "last_edit_date": 1550174035, "creation_date": 1550171648, "answer_id": 54697558, "question_id": 54697274, "link": "https://stackoverflow.com/questions/54697274/how-to-update-all-the-values-in-a-btreeset/54697558#54697558", "title": "How to update all the values in a BTreeSet?", "body": "<p><code>BTreeSet</code> doesn't implement <a href=\"https://doc.rust-lang.org/std/iter/trait.IntoIterator.html\" rel=\"nofollow noreferrer\"><code>impl&lt;'a, T&gt; IntoIterator for &amp;'a mut BTreeSet&lt;T&gt;</code></a> (that would break the tree).</p>\n\n<p>You can only do this with types that implement <code>IntoIterator</code> with <code>mut</code> like <code>impl&lt;'a, T&gt; IntoIterator for &amp;'a mut Vec&lt;T&gt;</code>, <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=6e64b54962878e492f70746c8803e272\" rel=\"nofollow noreferrer\">example</a>.</p>\n"}, {"comments": [{"owner": {"reputation": 490, "user_id": 5322506, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/706cb330de139e4f5423ee1702c3167d?s=128&d=identicon&r=PG&f=1", "display_name": "my-", "link": "https://stackoverflow.com/users/5322506/my"}, "edited": false, "score": 0, "creation_date": 1550176141, "post_id": 54698395, "comment_id": 96184043, "body": "Is here would be possible to do smth like: get collection (borrow it) &gt; take (remove from collection) each element &gt; update it &gt; insert back to collection updated element. In that case tree wont be broken. I assume hash will be recalculated on insert. Am I right?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 490, "user_id": 5322506, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/706cb330de139e4f5423ee1702c3167d?s=128&d=identicon&r=PG&f=1", "display_name": "my-", "link": "https://stackoverflow.com/users/5322506/my"}, "edited": false, "score": 1, "creation_date": 1550176281, "post_id": 54698395, "comment_id": 96184092, "body": "That&#39;s correct. However, it is likely to be less efficient than just rebuilding the entire set, since <code>insert</code> and <code>remove</code> are <i>both</i> O(log n) complexity."}, {"owner": {"reputation": 490, "user_id": 5322506, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/706cb330de139e4f5423ee1702c3167d?s=128&d=identicon&r=PG&f=1", "display_name": "my-", "link": "https://stackoverflow.com/users/5322506/my"}, "edited": false, "score": 0, "creation_date": 1550177426, "post_id": 54698395, "comment_id": 96184580, "body": "Yes you right. It would be nice if collections had method <code>update_all()</code> which would take closure to update each element individually. That would be handy. Could you update your answer to include code for replacing elements? Because I was looking for the ways it could be done. Anyway I accept your answer."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 490, "user_id": 5322506, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/706cb330de139e4f5423ee1702c3167d?s=128&d=identicon&r=PG&f=1", "display_name": "my-", "link": "https://stackoverflow.com/users/5322506/my"}, "edited": false, "score": 1, "creation_date": 1550177801, "post_id": 54698395, "comment_id": 96184749, "body": "@my- Using a <code>HashSet</code> instead, you can <code>drain</code> the collection and rebuild with modified values: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ab03d053e58dd9ad8afc07e10c2859ef\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> . But <code>drain</code> is not available (yet) for  <code>BTreeSet</code>."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 2, "last_activity_date": 1550175324, "creation_date": 1550175324, "answer_id": 54698395, "question_id": 54697274, "link": "https://stackoverflow.com/questions/54697274/how-to-update-all-the-values-in-a-btreeset/54698395#54698395", "title": "How to update all the values in a BTreeSet?", "body": "<p>You can't mutate items that are part of a <code>HashSet</code> or <code>BTreeSet</code> because the <em>value</em> of the items determines how they are stored and accessed. If you mutate them then, as <a href=\"https://stackoverflow.com/a/54697558/493729\">Stargateur mentioned</a>, you would break the mechanics of the collection. In the case of a <code>HashSet</code>, you would change the hash of the item, which determines the location where the data is stored. In the case of a <code>BTreeSet</code>, the algorithm is based on how the items are sorted.</p>\n\n<p>You are able to do it by taking ownership because you consume the original set and produce a new, well-formed one. You can't take ownership of a borrowed value because that would leave behind a dangling pointer, which Rust will not let you do.</p>\n\n<p>One possible solution is to temporarily replace the original set with an empty one. Then you can take ownership of its contents, as in your working code, and finally write the newly updated set over the original:</p>\n\n<pre><code>let set = std::mem::replace(&amp;mut data_in_some_strct, BTreeSet::new());\n\ndata_in_some_strct = set.into_iter()\n    .map(|mut p| p.offset(&amp;Pos::of(1,0)))\n    .inspect(|p| println!(\"{:?}\", *p))\n    .collect();\n</code></pre>\n"}], "owner": {"reputation": 490, "user_id": 5322506, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/706cb330de139e4f5423ee1702c3167d?s=128&d=identicon&r=PG&f=1", "display_name": "my-", "link": "https://stackoverflow.com/users/5322506/my"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 159, "favorite_count": 0, "accepted_answer_id": 54698395, "answer_count": 2, "score": 0, "last_activity_date": 1550175324, "creation_date": 1550170397, "last_edit_date": 1550174210, "question_id": 54697274, "link": "https://stackoverflow.com/questions/54697274/how-to-update-all-the-values-in-a-btreeset", "title": "How to update all the values in a BTreeSet?", "body": "<p>I have collection which is a field in a struct in some module. I want to update all the values in the collection from another module.</p>\n\n<p>I wrote some code to mimic what I want to achieve. It's shortened a bit, but I think it has all needed parts. There is no struct holding the collection in this code, but imagine this is a getter which returns the collection. I added in comments how I think it should look.</p>\n\n<pre><code>pub mod pos {\n    use std::cmp::{Ordering, PartialEq};\n\n    #[derive(PartialOrd, PartialEq, Eq, Hash, Debug, Copy, Clone)]\n    pub struct Pos {\n        pub x: i32,\n        pub y: i32,\n    }\n\n    #[allow(dead_code)]\n    impl Pos {\n        pub fn of(x: i32, y: i32) -&gt; Self {\n            Self { x, y }\n        }\n\n        pub fn offset(&amp;mut self, pos: &amp;Self) -&gt; Self {\n            self.x += pos.x;\n            self.y += pos.y;\n\n            *self\n        }\n    }\n\n    impl Ord for Pos {\n        fn cmp(&amp;self, other: &amp;Self) -&gt; Ordering {\n            if self.x &lt; other.x {\n                Ordering::Less\n            } else if self.eq(other) {\n                Ordering::Equal\n            } else {\n                Ordering::Greater\n            }\n        }\n    }\n}\n\nmod test {\n    use crate::pos::Pos;\n    use std::collections::BTreeSet;\n\n    #[test]\n    fn test_iterators() {\n        let mut data_in_some_strct: BTreeSet&lt;Pos&gt; = BTreeSet::new();\n\n        data_in_some_strct.insert(Pos::of(1, 1));\n        data_in_some_strct.insert(Pos::of(2, 2));\n        data_in_some_strct.insert(Pos::of(3, 3));\n        data_in_some_strct.insert(Pos::of(4, 4));\n\n        // mimic getter call ( get_data(&amp;mut self) -&gt; &amp;BTreeSet&lt;Pos&gt; {...}\n        //    let set = data_in_some_strct;   // works, but not a reference\n        let set = &amp;data_in_some_strct; // doesn't work, How to adjust code to make it work??\n\n        data_in_some_strct = set\n            .into_iter()\n            .map(|mut p| p.offset(&amp;Pos::of(1, 0)))\n            .inspect(|p| println!(\"{:?}\", *p))\n            .collect();\n\n        assert_eq!(data_in_some_strct.contains(&amp;Pos::of(2, 1)), true);\n        assert_eq!(data_in_some_strct.contains(&amp;Pos::of(3, 2)), true);\n        assert_eq!(data_in_some_strct.contains(&amp;Pos::of(4, 3)), true);\n        assert_eq!(data_in_some_strct.contains(&amp;Pos::of(5, 4)), true);\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=276b701a244612798b185a444b12d2aa\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0596]: cannot borrow `*p` as mutable, as it is behind a `&amp;` reference\n  --&gt; src/lib.rs:56:26\n   |\n56 |             .map(|mut p| p.offset(&amp;Pos::of(1, 0)))\n   |                       -  ^ `p` is a `&amp;` reference, so the data it refers to cannot be borrowed as mutable\n   |                       |\n   |                       help: consider changing this to be a mutable reference: `&amp;mut pos::Pos`\n</code></pre>\n\n<p>I managed to make it work without borrowing, but I would like to make it work with borrowing. I guess there is more then one way to achieve it. Comments to help my Rust <a href=\"https://en.wikipedia.org/wiki/Dendrite\" rel=\"nofollow noreferrer\">brain dendrites</a> connect are welcome.</p>\n"}, {"tags": ["enums", "rust", "command-line-arguments", "structopt"], "answers": [{"comments": [{"owner": {"reputation": 4877, "user_id": 1924257, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/31d8a68147c1d5a6b07b9c0743903ea2?s=128&d=identicon&r=PG", "display_name": "wegry", "link": "https://stackoverflow.com/users/1924257/wegry"}, "edited": false, "score": 0, "creation_date": 1601853789, "post_id": 54687863, "comment_id": 113527114, "body": "At least with Rust 1.46, <code>ParseError</code> doesn&#39;t look like it exists(?)."}], "tags": [], "owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "is_accepted": true, "score": 21, "last_activity_date": 1550157500, "last_edit_date": 1550157500, "creation_date": 1550138989, "answer_id": 54687863, "question_id": 54687403, "link": "https://stackoverflow.com/questions/54687403/how-can-i-use-enums-in-structopt/54687863#54687863", "title": "How can I use enums in structopt?", "body": "<p>Struct-opt accepts any type which implements <a href=\"https://doc.rust-lang.org/std/str/trait.FromStr.html\" rel=\"noreferrer\"><code>FromStr</code></a>, which is not far away from your <code>parse_day</code> function:</p>\n\n<pre><code>use std::str::FromStr;\n\nimpl FromStr for Day {\n    type Err = ParseError;\n    fn from_str(day: &amp;str) -&gt; Result&lt;Self, Self::Err&gt; {\n        match day {\n            \"sunday\" =&gt; Ok(Day::Sunday),\n            \"monday\" =&gt; Ok(Day::Monday),\n            _ =&gt; Err(\"Could not parse a day\"),\n        }\n    }\n}\n</code></pre>\n\n<p>Additionally, the <code>default_value</code> should be a string, which will be interpreted into a <code>Day</code> using <code>from_str</code>.</p>\n\n<pre><code>#[structopt(short = \"d\", long = \"day\", default_value = \"monday\")]\nday: Day,\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 743, "user_id": 409461, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/d792b8d5a8caa2e8de80a0bd87bc8f44?s=128&d=identicon&r=PG", "display_name": "decades", "link": "https://stackoverflow.com/users/409461/decades"}, "edited": false, "score": 0, "creation_date": 1602078708, "post_id": 54687882, "comment_id": 113606575, "body": "Best answer of all! Just missing case-insensivity :)"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 743, "user_id": 409461, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/d792b8d5a8caa2e8de80a0bd87bc8f44?s=128&d=identicon&r=PG", "display_name": "decades", "link": "https://stackoverflow.com/users/409461/decades"}, "edited": false, "score": 0, "creation_date": 1602088935, "post_id": 54687882, "comment_id": 113612025, "body": "@decades case-insensitivity wasn&#39;t mentioned in the question and it&#39;s just one extra attribute to enable that."}, {"owner": {"reputation": 743, "user_id": 409461, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/d792b8d5a8caa2e8de80a0bd87bc8f44?s=128&d=identicon&r=PG", "display_name": "decades", "link": "https://stackoverflow.com/users/409461/decades"}, "edited": false, "score": 0, "creation_date": 1602176786, "post_id": 54687882, "comment_id": 113644977, "body": "I solved it like so: match src.to_lowercase().as_ref() {..."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 6, "last_activity_date": 1550139038, "creation_date": 1550139038, "answer_id": 54687882, "question_id": 54687403, "link": "https://stackoverflow.com/questions/54687403/how-can-i-use-enums-in-structopt/54687882#54687882", "title": "How can I use enums in structopt?", "body": "<p>The error message is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `Day: std::str::FromStr` is not satisfied\n  --&gt; src/main.rs:22:17\n   |\n22 | #[derive(Debug, StructOpt)]\n   |                 ^^^^^^^^^ the trait `std::str::FromStr` is not implemented for `Day`\n   |\n   = note: required by `std::str::FromStr::from_str`\n</code></pre>\n\n<p>You can fix that either by implementing <code>FromStr</code> for <code>Day</code> (see <a href=\"https://stackoverflow.com/a/54687863/493729\">kennytm's answer</a>), as the message suggests, or by defining a parse function for <code>Day</code>:</p>\n\n<pre><code>fn parse_day(src: &amp;str) -&gt; Result&lt;Day, String&gt; {\n    match src {\n        \"sunday\" =&gt; Ok(Day::Sunday),\n        \"monday\" =&gt; Ok(Day::Monday),\n        _ =&gt; Err(format!(\"Invalid day: {}\", src))\n    }\n}\n</code></pre>\n\n<p>And specifying it with the <code>try_from_str</code> attribute:</p>\n\n<pre><code>/// Day of the week\n#[structopt(short = \"d\", long = \"day\", parse(try_from_str = \"parse_day\"), default_value = \"monday\")]\nday: Day,\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 5534, "user_id": 1484555, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/9ede0b6ed1e9d2f7037ff60242dd7561?s=128&d=identicon&r=PG", "display_name": "almel", "link": "https://stackoverflow.com/users/1484555/almel"}, "is_accepted": false, "score": 15, "last_activity_date": 1569860862, "last_edit_date": 1569860862, "creation_date": 1569859079, "answer_id": 58171404, "question_id": 54687403, "link": "https://stackoverflow.com/questions/54687403/how-can-i-use-enums-in-structopt/58171404#58171404", "title": "How can I use enums in structopt?", "body": "<p><a href=\"https://stackoverflow.com/a/54687863/155423\">@kennytm's approach</a> works, but the <code>arg_enum!</code> macro is a more concise way of doing it, as demonstrated in <a href=\"https://github.com/TeXitoi/structopt/blob/0c888e962d842f2c90c6c290d3a2a40947b37005/examples/enum_in_args.rs\" rel=\"noreferrer\">this example from <code>structopt</code></a>:</p>\n\n<pre><code>arg_enum! {\n    #[derive(Debug)]\n    enum Day {\n        Sunday,\n        Monday\n    }\n}\n\n#[derive(StructOpt, Debug)]\nstruct Opt {\n    /// Important argument.\n    #[structopt(possible_values = &amp;Day::variants(), case_insensitive = true)]\n    i: Day,\n}\n\nfn main() {\n    let opt = Opt::from_args();\n    println!(\"{:?}\", opt);\n}\n</code></pre>\n\n<p>This will let you parse weekdays as <code>Sunday</code> or <code>sunday</code>.</p>\n"}], "owner": {"reputation": 353, "user_id": 10960558, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8d5aaf5ed61d757fe83b72ac88a6fdb0?s=128&d=identicon&r=PG&f=1", "display_name": "H. Desane", "link": "https://stackoverflow.com/users/10960558/h-desane"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3223, "favorite_count": 3, "accepted_answer_id": 54687863, "answer_count": 3, "score": 8, "last_activity_date": 1610032550, "creation_date": 1550137596, "last_edit_date": 1610032550, "question_id": 54687403, "link": "https://stackoverflow.com/questions/54687403/how-can-i-use-enums-in-structopt", "title": "How can I use enums in structopt?", "body": "<p>I'd like to make <code>StructOpt</code> work with enums such that every time a user passes <code>-d sunday</code> it'd parsed as a <code>Day::Sunday</code>:</p>\n\n<pre><code>#[macro_use]\nextern crate structopt;\n\nuse std::path::PathBuf;\nuse structopt::StructOpt;\n\n// My enum\nenum Day {\n    Sunday, Monday\n}\n\n#[derive(Debug, StructOpt)]\n#[structopt(name = \"example\", about = \"An example of StructOpt usage.\")]\nstruct Opt {\n    /// Set speed\n    #[structopt(short = \"s\", long = \"speed\", default_value = \"42\")]\n    speed: f64,\n    /// Input file\n    #[structopt(parse(from_os_str))]\n    input: PathBuf,\n    /// Day of the week\n    #[structopt(short = \"d\", long = \"day\", default_value = Day::Monday)]\n    day: Day,\n}\n\nfn main() {\n    let opt = Opt::from_args();\n    println!(\"{:?}\", opt);\n}\n</code></pre>\n\n<p>My current <em>best</em> solution is to use <code>Option&lt;String&gt;</code> as a type and pass a custom <code>parse_day()</code>:</p>\n\n<pre><code>fn parse_day(day: &amp;str) -&gt; Result&lt;Day, ParseError&gt; {\n    match day {\n        \"sunday\" =&gt; Ok(Day::Sunday),\n        _ =&gt; Ok(Day::Monday)\n    }\n    Err(\"Could not parse a day\")\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 167, "user_id": 2981708, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/23a0effaf0d929b16eb1c58b7922c416?s=128&d=identicon&r=PG&f=1", "display_name": "user2981708", "link": "https://stackoverflow.com/users/2981708/user2981708"}, "edited": false, "score": 0, "creation_date": 1550163057, "post_id": 54685599, "comment_id": 96178208, "body": "Crucially the answer to the question marked as duplicate relies on runtime borrow checking to enforce the fact that the two values borrowed from INSIDE the container are different.  The issue here is that the current structure forces a mutable borrow of the container itself after it has already been borrowed to retrieve the stored object."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1550173163, "post_id": 54685599, "comment_id": 96182803, "body": "I&#39;ve added additional duplicates that talk more about why what you want to do cannot be safe, such as <a href=\"https://stackoverflow.com/a/52857223/155423\">this specific answer</a>. <i>the current structure forces a mutable borrow of the container itself</i> \u2014 yes, which you then attempt to use to get a second value (<code>storage.get_mut(&amp;friend_id)</code>). You cannot have a mutable reference to the container and a value in the container at the same time because the former would allow you to invalidate the latter (e.g. via <code>storage.clear()</code>). This cannot be checked at compile time, but only at runtime."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1550173325, "post_id": 54685599, "comment_id": 96182871, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=4ed231b5262850314af9b29ef4c77465\" rel=\"nofollow noreferrer\">The duplicates applied to your specific case</a>."}, {"owner": {"reputation": 167, "user_id": 2981708, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/23a0effaf0d929b16eb1c58b7922c416?s=128&d=identicon&r=PG&f=1", "display_name": "user2981708", "link": "https://stackoverflow.com/users/2981708/user2981708"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1550204975, "post_id": 54685599, "comment_id": 96191583, "body": "These were very helpful, thank you."}], "owner": {"reputation": 167, "user_id": 2981708, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/23a0effaf0d929b16eb1c58b7922c416?s=128&d=identicon&r=PG&f=1", "display_name": "user2981708", "link": "https://stackoverflow.com/users/2981708/user2981708"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 91, "favorite_count": 0, "closed_date": 1550152882, "answer_count": 0, "score": 0, "last_activity_date": 1550172904, "creation_date": 1550131173, "last_edit_date": 1550162780, "question_id": 54685599, "link": "https://stackoverflow.com/questions/54685599/how-to-store-and-retrieve-objects-in-a-container-that-mutate-themselves-the-co", "closed_reason": "Duplicate", "title": "How to store and retrieve objects in a container that mutate themselves &amp; the container", "body": "<p>I have some objects that are constructed, stored in a single data structure, and updated during a run of my binary.  Sometimes they get lonely and need friends, so they need to be able to search through the storage, locate a friend, remember the friend's identity, and tell the friend who they are.</p>\n\n<pre><code>struct Obj {\n    id: i32,\n    friend: Option&lt;i32&gt;,\n}\n\nimpl Obj {\n    fn find_friend(&amp;mut self, storage: &amp;mut HashMap&lt;i32, Obj&gt;) {\n        // let's pretend we found this friend in storage\n        let friend_id = 1;\n        let new_friend = storage.get_mut(&amp;friend_id).unwrap();\n        self.friend = Some(new_friend.id);\n        new_friend.friend = Some(self.id);\n    }\n}\n\nfn main() {\n    let mut storage: HashMap&lt;i32, Obj&gt; = HashMap::new();\n    let obj = Obj {\n        id: 0,\n        friend: None,\n    };\n    let id = obj.id;\n    storage.insert(id, obj);\n\n    // time passes\n    let obj_again = storage.get_mut(&amp;id).unwrap();\n    obj_again.find_friend(&amp;mut storage);\n}\n</code></pre>\n\n<p>Unfortunately I get in fights with the borrow checker:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `storage` as mutable more than once at a time\n   --&gt; src\\main.rs:190:22\n    |\n189 |   let obj_again = storage.get_mut(&amp;id).unwrap();\n    |           ------- first mutable borrow occurs here\n190 |   obj_again.find_friend(&amp;mut storage);\n    |                      ^^^^^^^ second mutable borrow occurs here\n191 | }\n    | - first borrow ends here\n\nerror: aborting due to previous error\n</code></pre>\n\n<p>How can I structure this code such that I can fetch a reference to an object out of storage and then allow it to mutate itself, its compatriots, and the data structure that contains them?</p>\n\n<p>Edit: I'm not sure that this is a duplicate of the question \"How do I get two mutable references into a container?\" This is \"How can an object inside a container  mutate itself if it also needs to be able to mutate its container?\".  Sorry if that wasn't clear.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1550126662, "post_id": 54684455, "comment_id": 96157405, "body": "Please provide us an <a href=\"https://stackoverflow.com/help/mcve\">MCVE</a> e.g. by using <a href=\"https://play.rust-lang.org/\" rel=\"nofollow noreferrer\">the playground</a>. The struct <code>OtherStruct</code> is missing in this context. Try to reduce your example to a minimum so the problem stands for itself. Also please include the error in your question so we don&#39;t have to execute the code to see what&#39;s wrong."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1550155014, "post_id": 54684455, "comment_id": 96173105, "body": "<i>throwing a fit</i> \u2014 this is useless hyperbole. What <i>specific error(s)</i> do you get? Searching for an error message is one of the best ways to find solutions to a problem, but that only works when people <i>include those errors</i>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1550155092, "post_id": 54684455, "comment_id": 96173159, "body": "<code>pub foo: bar[]</code> \u2014 this is not valid Rust code. You cannot make up syntax and hope that the compiler will figure it out."}], "answers": [{"tags": [], "owner": {"reputation": 2058, "user_id": 3958875, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f6149ddd4636bcab17c52b751d79f7fd?s=128&d=identicon&r=PG&f=1", "display_name": "Prime_Aqasix", "link": "https://stackoverflow.com/users/3958875/prime-aqasix"}, "is_accepted": false, "score": 1, "last_activity_date": 1550154930, "last_edit_date": 1550154930, "creation_date": 1550127799, "answer_id": 54684818, "question_id": 54684455, "link": "https://stackoverflow.com/questions/54684455/how-to-reference-self-inside-a-closure/54684818#54684818", "title": "How to reference self inside a closure", "body": "<p>You can pass <code>self</code> into <code>action</code> as a parameter:</p>\n\n<pre><code>impl App {\n    pub fn access&lt;F: Fn(&amp;App, &amp;mut OtherStruct)&gt;(&amp;mut self, action: F) {\n        if let OtherStruct(baz) = &amp;mut self.foo[self.bar_index] {\n            action(&amp;self, baz);\n        }\n    }\n}\n</code></pre>\n\n<pre><code>app.access(|app, baz| {\n    if app.true_false {\n        unimplemented!()\n    }\n});\n</code></pre>\n"}], "owner": {"reputation": 858, "user_id": 4669171, "user_type": "registered", "accept_rate": 80, "profile_image": "https://lh3.googleusercontent.com/-XxCGb9qLTQo/AAAAAAAAAAI/AAAAAAAAAFY/AwR2YIoqnxw/photo.jpg?sz=128", "display_name": "Sam Perlmutter", "link": "https://stackoverflow.com/users/4669171/sam-perlmutter"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 290, "favorite_count": 0, "closed_date": 1563892547, "answer_count": 1, "score": 0, "last_activity_date": 1550154930, "creation_date": 1550126007, "question_id": 54684455, "link": "https://stackoverflow.com/questions/54684455/how-to-reference-self-inside-a-closure", "closed_reason": "Duplicate", "title": "How to reference self inside a closure", "body": "<p>If I have a struct like</p>\n\n<pre><code>// In app.rs\npub struct App {\n    pub foo: bar[],\n    pub bar_index: i32,\n    pub true_false: bool\n}\n\nimpl App {\n    pub fn access&lt;F: Fn(&amp;mut OtherStruct)&gt; (&amp;mut self, action: F) {\n        if let OtherStruct(baz) = &amp;mut self.foo[self.bar_index] {\n            action(baz);\n        }\n    }\n}\n\n// In main.rs\n// `app` is a mutable variable defined elsewhere\napp.access(|baz| {\n    if app.true_false {\n        // do something\n    });\n</code></pre>\n\n<p>Running this <code>app.access</code> results in the borrow checker throwing a fit. I think it's because I'm referencing <code>app</code> within the closure, but I'm not sure how to fix it. Is there a solution to this?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1550108102, "post_id": 54681971, "comment_id": 96152846, "body": "Your code is rejected by the compiler because it would introduce memory unsafety. The second call to <code>get_or_compute</code> could easily add a new value to the <code>HashMap</code>, causing it to reallocate, which would invalidate the memory address stored in <code>a</code> \u2014 this code cannot be safe. If you had written this in C or C++, you would have introduced a <i>very</i> hard to find bug."}, {"owner": {"reputation": 35470, "user_id": 6348498, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/0zu4m.jpg?s=128&g=1", "display_name": "Gurwinder Singh", "link": "https://stackoverflow.com/users/6348498/gurwinder-singh"}, "edited": false, "score": 0, "creation_date": 1550108224, "post_id": 54681971, "comment_id": 96152874, "body": "You can either move the second get after you drop &quot;a&quot; or check out the interior mutability pattern using refcell to wrap the map"}], "owner": {"reputation": 13558, "user_id": 1578, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/13025a7ce7409a9f4c137bdb32245ff7?s=128&d=identicon&r=PG", "display_name": "Steve Gury", "link": "https://stackoverflow.com/users/1578/steve-gury"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 38, "favorite_count": 0, "closed_date": 1550108184, "answer_count": 0, "score": 0, "last_activity_date": 1550108303, "creation_date": 1550107958, "last_edit_date": 1550108267, "question_id": 54681971, "link": "https://stackoverflow.com/questions/54681971/how-to-use-the-ref-values-of-a-hashmap-without-having-the-compiler-complaining-a", "closed_reason": "Duplicate", "title": "How to use the ref values of a HashMap without having the compiler complaining about borrowing the map", "body": "<p>How do I use an <code>HashMap</code> as a cache correctly? Accessing the value needs to borrow the <code>HashMap</code> (as mutable in my case) which restricts my ability to access more than one value, and restrict the usage of one value at the same time (and the cache itself).</p>\n\n<p>Hypothetical example below:</p>\n\n<pre><code>use std::collections::HashMap;\n\nstruct Cache {\n    storage: HashMap&lt;i32, String&gt;,\n}\n\nimpl Cache {\n    fn new() -&gt; Self {\n        Cache {\n            storage: HashMap::new(),\n        }\n    }\n\n    fn get_or_compute(&amp;mut self, x: i32) -&gt; &amp;mut String {\n        self.storage.entry(x).or_insert(x.to_string())\n    }\n}\n\nfn do_something(cache: &amp;mut Cache, s: &amp;String) {\n    println!(\"Cache value:{}, s:{}\", cache.get_or_compute(23), s)\n}\n\nfn main() {\n    let mut cache = Cache::new();\n    let a = cache.get_or_compute(1);\n    let _b = cache.get_or_compute(2);\n\n    do_something(&amp;mut cache, a)\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=959db5fc5f294199c2e6e55bb4e01c99\" rel=\"nofollow noreferrer\">Rust Playground</a></p>\n\n<p>The compiler (rightfully) complains with:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `cache` as mutable more than once at a time\n  --&gt; src/main.rs:30:14\n   |\n29 |     let a = cache.get_or_compute(1);\n   |             ----- first mutable borrow occurs here\n30 |     let _b = cache.get_or_compute(2);\n   |              ^^^^^ second mutable borrow occurs here\n31 | \n32 |     do_something(&amp;mut cache, a)\n   |                              - first borrow later used here\n\nerror[E0499]: cannot borrow `cache` as mutable more than once at a time\n  --&gt; src/main.rs:32:18\n   |\n29 |     let a = cache.get_or_compute(1);\n   |             ----- first mutable borrow occurs here\n...\n32 |     do_something(&amp;mut cache, a)\n   |                  ^^^^^^^^^^  - first borrow later used here\n   |                  |\n   |                  second mutable borrow occurs here\n</code></pre>\n\n<p>I suppose it has to do with some missing lifetime annotation, but I'm too noob to see how to fix the issue.</p>\n"}]