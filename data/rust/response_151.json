[{"tags": ["rust", "global-variables", "global"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1511996246, "post_id": 47563106, "comment_id": 82084375, "body": "Just remove the &quot;mutable&quot; part of the linked duplicates: <code>lazy_static! { static ref DATA: Vec&lt;u8&gt; = create_data_fn(); }</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1511996463, "post_id": 47563106, "comment_id": 82084461, "body": "FWIW, I think that actually creating the value in <code>main</code> and passing down references is a very reasonable solution. Rust&#39;s lifetimes prevent you from shooting yourself in the foot and you can optionally avoid all multithreaded synchronization issues."}, {"owner": {"reputation": 727, "user_id": 6860744, "user_type": "registered", "accept_rate": 79, "profile_image": "https://lh5.googleusercontent.com/-3_2Ewze_gI8/AAAAAAAAAAI/AAAAAAAAACQ/fz_BqGtzSd4/photo.jpg?sz=128", "display_name": "Darius Duesentrieb", "link": "https://stackoverflow.com/users/6860744/darius-duesentrieb"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1511998674, "post_id": 47563106, "comment_id": 82085233, "body": "Actually, i have maybe 10 different arrays that are like the <code>DATA</code>-array. Isn&#39;t this a performance issue if I call these function (<code>foo()1, foo()2, foo()3</code>) very often because I always have to copy the reference-pointer?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1511998706, "post_id": 47563106, "comment_id": 82085239, "body": "You could also generate the constant by running a function in a build script and then importing the generated code (the 3rd duplicate I added)."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1511998947, "post_id": 47563106, "comment_id": 82085313, "body": "Accessing the <code>DATA</code> variables requires an atomic variable check (to ensure that they have been initialized) and then you get a reference to (in this case) the <code>Vec</code> which can be dereferenced to get to the data. I don&#39;t believe either of those are really that much overhead, but you can &quot;cache&quot; that by doing something like <code>let data = &amp;**DATA</code>, which will set <code>data</code> to an <code>&amp;[u8]</code> and then pass that down to the pieces you need."}], "owner": {"reputation": 727, "user_id": 6860744, "user_type": "registered", "accept_rate": 79, "profile_image": "https://lh5.googleusercontent.com/-3_2Ewze_gI8/AAAAAAAAAAI/AAAAAAAAACQ/fz_BqGtzSd4/photo.jpg?sz=128", "display_name": "Darius Duesentrieb", "link": "https://stackoverflow.com/users/6860744/darius-duesentrieb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1318, "favorite_count": 0, "closed_date": 1511996168, "answer_count": 0, "score": 2, "last_activity_date": 1511998644, "creation_date": 1511995476, "last_edit_date": 1511996129, "question_id": 47563106, "link": "https://stackoverflow.com/questions/47563106/initialize-immutable-global-variable-with-a-function-in-rust", "closed_reason": "Duplicate", "title": "Initialize immutable global variable with a function in Rust", "body": "<p>I need to have a lot of data stored as an immutable variable that can be accessed by every function.</p>\n\n<p>The optimal way would be to use a <code>const DATA: [u64; 1000] = [ 1, 110101, ... ]</code> and that is possible because I know how this data looks like. Due to the huge amount of data that needs to be created, the only practical way is to initialize the constant with a function. That does not currently work in Rust, and it maybe will never, because I need to run loops in the initializer function which  isn't even supported in the nightly build.</p>\n\n<p>It should be possible to initialize the data in the <code>main</code> function as ordinary <code>let DATA: [u64; 1000] = ini_fn();</code>. Then I would need to give all subfunctions a reference to this data. That's kinda inconvenient; if a function <code>foo3()</code> were to need the <code>DATA</code> but gets called by <code>foo2()</code> which gets called by <code>foo1()</code> which gets called by main(), I would need to borrow the <code>DATA</code> three times and really using it just once.</p>\n\n<p>I am searching a more reasonable solution for this problem / some equivalent to this C code:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>std::array&lt;int, 64&gt;  ini_data()\n{\n  std::array&lt;int, 64&gt; ret;\n  for(int i = 0; i &lt; 64; i++)\n  {\n    ret[i] = i;\n  }\n  return ret;\n}\n\nconst std::array&lt;int, 64&gt; DATA = ini_data();\n\nvoid main()\n{\n  print(DATA);\n}\n</code></pre>\n\n<p>It would be better to have this data on the stack because speed is important, but I hope that the data gets cached so this is not a priority.</p>\n"}, {"tags": ["multithreading", "concurrency", "rust", "mutex", "condition-variable"], "answers": [{"comments": [{"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1511963896, "post_id": 47554383, "comment_id": 82065764, "body": "Why only one <code>Condvar</code>? If you call <code>insert</code> twice, the second <code>insert</code> will get a wakeup for the <code>CondVar</code> notify from the first <code>insert</code>.  I think two <code>CondVar</code>s are not obviously bad (maybe I&#39;m missing something here)."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1511964477, "post_id": 47554383, "comment_id": 82066156, "body": "@Stefan mostly for simplicity. With only one <code>Condvar</code>, the space needed to reason about is much smaller. Added the alternative, look like what you want?"}, {"owner": {"reputation": 604, "user_id": 3884974, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/a1f5eca7d4c975bd4ad5886c04a942fc?s=128&d=identicon&r=PG", "display_name": "Adri&#225;n Arroyo Calle", "link": "https://stackoverflow.com/users/3884974/adri%c3%a1n-arroyo-calle"}, "edited": false, "score": 0, "creation_date": 1511965635, "post_id": 47554383, "comment_id": 82066958, "body": "Thanks for the fast answer. The code is also Rusty, which is something I need to improve"}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1511973434, "post_id": 47554383, "comment_id": 82072620, "body": "Yup, looks nice."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1511964454, "last_edit_date": 1511964454, "creation_date": 1511963386, "answer_id": 47554383, "question_id": 47554092, "link": "https://stackoverflow.com/questions/47554092/buffer-in-rust-with-mutex-and-condvar/47554383#47554383", "title": "Buffer in Rust with Mutex and Condvar", "body": "<p>I would encourage you to create smaller methods and reuse existing Rust types such as <code>Option</code>. This will allow you to simplify your code quite a bit \u2014 only one <code>Mutex</code> and one <code>Condvar</code>:</p>\n\n<pre><code>use std::thread;\nuse std::sync::{Arc, Condvar, Mutex};\n\n#[derive(Debug, Default)]\nstruct Buffer {\n    data: Mutex&lt;Option&lt;i32&gt;&gt;,\n    data_cv: Condvar,\n}\n\nimpl Buffer {\n    fn insert(&amp;self, val: i32) {\n        let mut lock = self.data.lock().expect(\"Can't lock\");\n        while lock.is_some() {\n            lock = self.data_cv.wait(lock).expect(\"Can't wait\");\n        }\n        *lock = Some(val);\n        self.data_cv.notify_one();\n    }\n\n    fn remove(&amp;self) -&gt; i32 {\n        let mut lock = self.data.lock().expect(\"Can't lock\");\n        while lock.is_none() {\n            lock = self.data_cv.wait(lock).expect(\"Can't wait\");\n        }\n        let val = lock.take().unwrap();\n        self.data_cv.notify_one();\n        val\n    }\n}\n\nfn producer(buffer: &amp;Buffer) {\n    for i in 0..50 {\n        println!(\"p: {}\", i);\n        buffer.insert(i);\n    }\n}\n\nfn consumer(buffer: &amp;Buffer) {\n    for _ in 0..50 {\n        let val = buffer.remove();\n        println!(\"c: {}\", val);\n    }\n}\n\nfn main() {\n    let buffer = Arc::new(Buffer::default());\n\n    let b = buffer.clone();\n    let p = thread::spawn(move || {\n        producer(&amp;b);\n    });\n\n    let b = buffer.clone();\n    let c = thread::spawn(move || {\n        consumer(&amp;b);\n    });\n\n    c.join().expect(\"Consumer had an error\");\n    p.join().expect(\"Producer had an error\");\n}\n</code></pre>\n\n<hr>\n\n<p>If you wanted to have a bit more performance (benchmark to see if it's worth it), you could have <code>Condvar</code>s for the \"empty\" and \"full\" conditions separately:</p>\n\n<pre><code>#[derive(Debug, Default)]\nstruct Buffer {\n    data: Mutex&lt;Option&lt;i32&gt;&gt;,\n    is_empty: Condvar,\n    is_full: Condvar,\n}\n\nimpl Buffer {\n    fn insert(&amp;self, val: i32) {\n        let mut lock = self.data.lock().expect(\"Can't lock\");\n        while lock.is_some() {\n            lock = self.is_empty.wait(lock).expect(\"Can't wait\");\n        }\n        *lock = Some(val);\n        self.is_full.notify_one();\n    }\n\n    fn remove(&amp;self) -&gt; i32 {\n        let mut lock = self.data.lock().expect(\"Can't lock\");\n        while lock.is_none() {\n            lock = self.is_full.wait(lock).expect(\"Can't wait\");\n        }\n        let val = lock.take().unwrap();\n        self.is_empty.notify_one();\n        val\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 604, "user_id": 3884974, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/a1f5eca7d4c975bd4ad5886c04a942fc?s=128&d=identicon&r=PG", "display_name": "Adri&#225;n Arroyo Calle", "link": "https://stackoverflow.com/users/3884974/adri%c3%a1n-arroyo-calle"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 908, "favorite_count": 0, "accepted_answer_id": 47554383, "answer_count": 1, "score": 1, "last_activity_date": 1601426231, "creation_date": 1511962363, "last_edit_date": 1601426231, "question_id": 47554092, "link": "https://stackoverflow.com/questions/47554092/buffer-in-rust-with-mutex-and-condvar", "title": "Buffer in Rust with Mutex and Condvar", "body": "<p>I'm trying to implement a buffer with a single consumer and a single producer. I have only used POSIX Semaphores, however, they're not available in Rust and I'm trying to implement a trivial semaphore problem with Rust sync primitives (<code>Mutex</code>, <code>Condvar</code>, <code>Barrier</code>, ...) but I don't want to use channels. </p>\n\n<p>My code behaves too irregularly, with some cases going well and other times it just stops at some number and in other cases it just doesn't start counting.</p>\n\n<p>Things appear to work better if I wait 1 second in the main thread till I send the <code>Condvar</code> notification but it doesn't guarantee that it's not going to enter a deadlock.</p>\n\n<p>How can this program be fixed? Am I understanding <code>Condvar</code>s wrong?</p>\n\n<pre><code>use std::thread;\nuse std::sync::{Arc, Condvar, Mutex};\n\nstruct Buffer {\n    is_data: Mutex&lt;bool&gt;,\n    is_data_cv: Condvar,\n    is_space: Mutex&lt;bool&gt;,\n    is_space_cv: Condvar,\n    buffer: Mutex&lt;i32&gt;,\n}\n\nfn producer(buffer: Arc&lt;Buffer&gt;) {\n    for i in 0..50 {\n        loop {\n            let mut is_space = buffer\n                .is_space_cv\n                .wait(buffer.is_space.lock().unwrap())\n                .unwrap();\n            if *is_space {\n                {\n                    let mut hueco = buffer.buffer.lock().unwrap();\n                    *hueco = i;\n                }\n\n                *is_space = false;\n                {\n                    let mut is_data = buffer.is_data.lock().unwrap();\n                    *is_data = true;\n                }\n                buffer.is_data_cv.notify_one();\n                break;\n            }\n        }\n    }\n}\n\nfn consumer(buffer: Arc&lt;Buffer&gt;) {\n    for i in 0..50 {\n        loop {\n            let mut is_data = buffer\n                .is_data_cv\n                .wait(buffer.is_data.lock().unwrap())\n                .unwrap();\n            if *is_data {\n                {\n                    let hueco = buffer.buffer.lock().unwrap();\n                    println!(\"{}\", *hueco);\n                }\n                *is_data = false;\n                {\n                    let mut is_space = buffer.is_space.lock().unwrap();\n                    *is_space = true;\n                }\n                buffer.is_space_cv.notify_one();\n                break;\n            }\n        }\n    }\n}\n\nfn main() {\n    let buffer = Arc::new(Buffer {\n        is_data: Mutex::new(false),\n        is_data_cv: Condvar::new(),\n        is_space: Mutex::new(true),\n        is_space_cv: Condvar::new(),\n        buffer: Mutex::new(0),\n    });\n    let b = buffer.clone();\n    let p = thread::spawn(move || {\n        producer(b);\n    });\n    let b = buffer.clone();\n    let c = thread::spawn(move || {\n        consumer(b);\n    });\n\n    //thread::sleep_ms(1000);\n\n    buffer.is_space_cv.notify_one();\n    c.join();\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 1, "creation_date": 1511947087, "post_id": 47547978, "comment_id": 82054602, "body": "I think in the current form this question is not useful for others.  Could you perhaps provide a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and remove the unneeded context? And edit the title to reflect the &quot;unexpected&quot; <code>&amp;Box&lt;T&gt;</code> -&gt; <code>&amp;T</code> conversion (because I can&#39;t see how this relates to &quot;generic constraint&quot;)?"}], "answers": [{"comments": [{"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "reply_to_user": {"reputation": 4324, "user_id": 1045510, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/abde71672c5b271c778d3ed312347866?s=128&d=identicon&r=PG", "display_name": "Kroltan", "link": "https://stackoverflow.com/users/1045510/kroltan"}, "edited": false, "score": 0, "creation_date": 1512052273, "post_id": 47548521, "comment_id": 82108521, "body": "@Kroltan As far as I can tell only references are coerced with Deref; maybe you&#39;re talking about <a href=\"https://doc.rust-lang.org/nomicon/dot-operator.html\" rel=\"nofollow noreferrer\">&quot;The Dot Operator&quot;</a> (also see <a href=\"https://stackoverflow.com/questions/28519997/what-are-rusts-exact-auto-dereferencing-rules/28552082#28552082\" title=\"what are rusts exact auto dereferencing rules\">stackoverflow.com/questions/28519997/&hellip;</a>)?"}], "tags": [], "owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "is_accepted": false, "score": 4, "last_activity_date": 1511945307, "creation_date": 1511945307, "answer_id": 47548521, "question_id": 47547978, "link": "https://stackoverflow.com/questions/47547978/to-what-extent-does-rust-compiler-auto-match-generic-constraint/47548521#47548521", "title": "To what extent does rust compiler auto match generic constraint?", "body": "<p>This is a \"Deref coercion\", see <a href=\"https://doc.rust-lang.org/nomicon/coercions.html\" rel=\"nofollow noreferrer\">nomicon Coercions</a>:</p>\n\n<blockquote>\n  <p>Coercion is allowed between the following types:</p>\n  \n  <ul>\n  <li>[...]</li>\n  <li>Deref coercion: Expression <code>&amp;x</code> of type <code>&amp;T</code> to <code>&amp;*x</code> of type <code>&amp;U</code> if <code>T</code> derefs to <code>U</code> (i.e. <code>T: Deref&lt;Target=U&gt;</code>)</li>\n  </ul>\n</blockquote>\n\n<p><code>Box&lt;T&gt;</code> implements <code>Deref&lt;Target=T&gt;</code>, so <code>&amp;Box&lt;T&gt;</code> coerces automatically to <code>&amp;T</code> like you'd have written <code>&amp;*node</code>.</p>\n\n<p>(I'm not sure what the <code>&amp;</code> in \"Expression <code>&amp;x</code>\" part is for, because we don't have a <code>&amp;</code> at coercion site and it still works - could be a typo or a bug)</p>\n\n<p>Also works from <code>&amp;String</code> to <code>&amp;str</code>: <a href=\"https://play.rust-lang.org/?gist=b3d4bc58f26d8453c8fd3f0f2b1ade93&amp;version=stable\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<pre><code>fn foo&lt;T&gt;(_v: T) {}\n\nfn main() {\n    {\n        let v: &amp;Box&lt;i32&gt; = &amp;Box::new(5i32);\n        foo::&lt;&amp;i32&gt;(v);\n        foo::&lt;&amp;i32&gt;(&amp;*v);\n    }\n\n    {\n        let v: &amp;String = &amp;String::from(\"abc\");\n        foo::&lt;&amp;str&gt;(v);\n        foo::&lt;&amp;str&gt;(&amp;*v);\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 1674, "user_id": 5420686, "user_type": "registered", "accept_rate": 49, "profile_image": "https://www.gravatar.com/avatar/2c318e16c4b5f17dd1375df8cb1425e5?s=128&d=identicon&r=PG&f=1", "display_name": "Jal", "link": "https://stackoverflow.com/users/5420686/jal"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 105, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1511945307, "creation_date": 1511943370, "question_id": 47547978, "link": "https://stackoverflow.com/questions/47547978/to-what-extent-does-rust-compiler-auto-match-generic-constraint", "title": "To what extent does rust compiler auto match generic constraint?", "body": "<p>Consider the following code for binary tree</p>\n\n<pre><code>#[derive(Debug)]\nstruct Binary_Tree_Node&lt;T: PartialOrd + Clone&gt; {\n    left: Binary_Tree&lt;T&gt;,\n    value: T,\n    right: Binary_Tree&lt;T&gt;\n}\n\n#[derive(Debug)]\nstruct Binary_Tree&lt;T: PartialOrd + Clone&gt; {\n    node: Option&lt;Box&lt;Binary_Tree_Node&lt;T&gt;&gt;&gt; \n}\n\nimpl &lt;T: PartialOrd + Clone&gt;Binary_Tree&lt;T&gt; {\n    fn new(value_to_insert: T) -&gt; Binary_Tree&lt;T&gt; {\n        Binary_Tree{node: \n            Some(\n                Box::new(\n                    Binary_Tree_Node{\n                        left: Binary_Tree{node: None}, \n                        value: value_to_insert, \n                        right: Binary_Tree{node: None}\n                    }\n                )\n            )\n        }\n    }\n\n    fn map&lt;F, U&gt;(&amp;self, f: F) -&gt; Option&lt;U&gt; \n    where F: FnOnce(&amp;Binary_Tree_Node&lt;T&gt;) -&gt; U {\n        self.node.as_ref().map(|node| f(&amp;**node))\n        // equivalent \n        //self.node.as_ref().map(|node| f(node))\n    }\n}\nlet mut test1 = Binary_Tree::new(10);\nprintln!(\"{:#?}\", test1.map(|node| node.value &lt; 2));\n</code></pre>\n\n<p>This line confuses me </p>\n\n<pre><code>self.node.as_ref().map(|node| f(node))\n</code></pre>\n\n<p>as I expect rust to throw compiler error</p>\n\n<p><code>self.node</code> is of type <code>Option&lt;Box&lt;Binary_Tree_Node&lt;T&gt;&gt;&gt;</code></p>\n\n<p><code>self.node.as_ref()</code> is of type <code>Option&lt;&amp;Box&lt;Binary_Tree_Node&lt;T&gt;&gt;&gt;</code></p>\n\n<p><code>node</code> in <code>self.node.as_ref().map(|node| f(node))</code> is of type <code>&amp;Box&lt;Binary_Tree_Node&lt;T&gt;&gt;</code></p>\n\n<p><code>&amp;Box&lt;Binary_Tree_Node&lt;T&gt;&gt;</code> is not equivalent to the generic constraint <code>&amp;Binary_Tree_Node&lt;T&gt;</code></p>\n\n<p>The question is why both <code>self.node.as_ref().map(|node| f(&amp;**node))</code> and <code>self.node.as_ref().map(|node| f(node))</code> work? </p>\n"}, {"tags": ["arrays", "performance", "rust", "benchmarking"], "comments": [{"owner": {"reputation": 5397, "user_id": 2193020, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/aa10d01a3d48851073bd61877a56b5a7?s=128&d=identicon&r=PG", "display_name": "hnefatl", "link": "https://stackoverflow.com/users/2193020/hnefatl"}, "edited": false, "score": 8, "creation_date": 1511910483, "post_id": 47542438, "comment_id": 82042008, "body": "Why not benchmark it yourself on your machine, where the results will be most accurate for you? In general, it&#39;s pointless worrying about really low-level performance impacts until you absolutely have to. Trying to pre-optimise usually leads to complicated code that has no real performance benefit. <i>Benchmarks can&#39;t simulate and don&#39;t reflect real usage</i>."}, {"owner": {"reputation": 573, "user_id": 6551168, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2dc01ebcf4928f369dcc46d52479c49e?s=128&d=identicon&r=PG&f=1", "display_name": "Jounathaen", "link": "https://stackoverflow.com/users/6551168/jounathaen"}, "reply_to_user": {"reputation": 5397, "user_id": 2193020, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/aa10d01a3d48851073bd61877a56b5a7?s=128&d=identicon&r=PG", "display_name": "hnefatl", "link": "https://stackoverflow.com/users/2193020/hnefatl"}, "edited": false, "score": 3, "creation_date": 1511910829, "post_id": 47542438, "comment_id": 82042141, "body": "I&#39;ll maybe benchmark it later and answer this question myself, but first I have to learn the basics (how does time measurement in rust work? :-D ). I just thought this might be interesting for theory, as I came across this topic in my studies with other languages like C or C++ in HPC."}, {"owner": {"reputation": 35314, "user_id": 344347, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/1d83837bce9d9a2656c4f5704d40c430?s=128&d=identicon&r=PG", "display_name": "Pavel Strakhov", "link": "https://stackoverflow.com/users/344347/pavel-strakhov"}, "edited": false, "score": 2, "creation_date": 1511911328, "post_id": 47542438, "comment_id": 82042265, "body": "Rust doesn&#39;t always perform a bounds check. I think iterating over an array doesn&#39;t result in bounds check for every item. And if you need to access individual items by index, there are unsafe functions for unchecked access."}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "reply_to_user": {"reputation": 5397, "user_id": 2193020, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/aa10d01a3d48851073bd61877a56b5a7?s=128&d=identicon&r=PG", "display_name": "hnefatl", "link": "https://stackoverflow.com/users/2193020/hnefatl"}, "edited": false, "score": 6, "creation_date": 1511926864, "post_id": 47542438, "comment_id": 82046258, "body": "@hnefatl: if you don&#39;t know a lot of details about how something might work, you can&#39;t design a benchmark that actually measures what you want to measure.  It&#39;s <i>very</i> easy for microbenchmarks to end up measuring something totally different from what the author intended.  &quot;Just benchmark&quot; replies aren&#39;t as helpful as most people seem to think, especially when we&#39;re talking about a microbenchmark.  e.g. you might pick a case where there happened to be no overhead for bounds checking, and miss the fact that there is overhead in other cases that look similar, or that are very different."}, {"owner": {"reputation": 5397, "user_id": 2193020, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/aa10d01a3d48851073bd61877a56b5a7?s=128&d=identicon&r=PG", "display_name": "hnefatl", "link": "https://stackoverflow.com/users/2193020/hnefatl"}, "reply_to_user": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 0, "creation_date": 1511945313, "post_id": 47542438, "comment_id": 82053507, "body": "@PeterCordes Yeah, the last part of my comment in italics was meant to be a bit of a &quot;disclaimer&quot; about that, implying that &quot;invented&quot; benchmarks in general don&#39;t catch the cases that occur production code."}], "answers": [{"comments": [{"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 2, "creation_date": 1511926371, "post_id": 47543246, "comment_id": 82046113, "body": "&quot;saturate the core&#39;s functional units&quot;: usually you bottleneck on the front-end&#39;s ability to decode instructions and feed them to the out-of-order core: &quot;issue/rename&quot; throughput is usually the narrowest part of the pipe, and the bottleneck you&#39;re most likely to hit in code with a mix of loads, stores, and ALU.  (And if you need bounds checks, there must be some loads and/or stores).  I guess you could bottleneck on load ports throughput in code with lots of loads that also need bounds checks, but hit in L1D cache."}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 4, "creation_date": 1511926443, "post_id": 47543246, "comment_id": 82046141, "body": "More branches (even ones that always go the same way) may have a small negative impact on branch-prediction rates.  They dilute the branch history for the interesting branches.  Anyway, +1 nice answer.  As always, the answer to performance questions is &quot;it depends on context&quot; :P  (And the target hardware.  Modern x86 is fantastic at plowing through fluff, especially off the critical path, but low-power CPUs have narrower pipes.  Even Xeon Phi / Silvermont could see more impact from bounds checking.)"}, {"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "reply_to_user": {"reputation": 33597, "user_id": 2445184, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/0b51ece74c2314ba345a862c4b00d804?s=128&d=identicon&r=PG", "display_name": "cmaster - reinstate monica", "link": "https://stackoverflow.com/users/2445184/cmaster-reinstate-monica"}, "edited": false, "score": 1, "creation_date": 1511951544, "post_id": 47543246, "comment_id": 82057734, "body": "@cmaster Rust uses <code>usize</code> indices, so you don&#39;t need to check for <code>&gt;= 0</code>, and the bounds to check against are going to be loaded already in almost every throughput-bound situation (because you&#39;re probably in a tight loop, and the load was hoisted)."}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 3, "creation_date": 1511972773, "post_id": 47543246, "comment_id": 82072235, "body": "Oh that&#39;s an interesting point.  If you ever compile for obsolete 32-bit x86, the extra register pressure from array bounds is problematic (7 GP regs + stack pointer).  Fortunately x86 has fast L1D caches (2 loads per clock on big-core CPUs (not Atom/Xeon Phi), so comparing a register against memory is almost exactly as cheap as reg,reg (you can copy the bound to the stack outside the tight loop so you don&#39;t need a pointer to the container control-block in a register inside the loop).  But register pressure is non-trivial on x86-64 (15 GP regs + RSP) and ARM32 (14 GP regs + stack + PC)."}, {"owner": {"reputation": 18645, "user_id": 50385, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/2faf0c72f6a7f65431e7df489878be24?s=128&d=identicon&r=PG", "display_name": "Joseph Garvin", "link": "https://stackoverflow.com/users/50385/joseph-garvin"}, "edited": false, "score": 0, "creation_date": 1607117715, "post_id": 47543246, "comment_id": 115181500, "body": "what does it mean to &quot;absorb&quot; bounds checks without removing them? if I stick to built in iteration methods like map filter etc do I avoid checks?"}, {"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "reply_to_user": {"reputation": 18645, "user_id": 50385, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/2faf0c72f6a7f65431e7df489878be24?s=128&d=identicon&r=PG", "display_name": "Joseph Garvin", "link": "https://stackoverflow.com/users/50385/joseph-garvin"}, "edited": false, "score": 0, "creation_date": 1607169996, "post_id": 47543246, "comment_id": 115190894, "body": "@JosephGarvin The iterator <code>next()</code> is itself a bounds check. A loop <code>for i in 0..x.len() { x[i]; }</code> is in effect doing a bounds check twice; once when checking <code>i &lt; x.len()</code> in the loop, and again with <code>x[i]</code>, checking the same <code>i &lt; x.len()</code>. An iterator combines these checks into one."}], "tags": [], "owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "is_accepted": true, "score": 55, "last_activity_date": 1511950505, "last_edit_date": 1511950505, "creation_date": 1511915895, "answer_id": 47543246, "question_id": 47542438, "link": "https://stackoverflow.com/questions/47542438/does-rusts-array-bounds-checking-affect-performance/47543246#47543246", "title": "Does Rust&#39;s array bounds checking affect performance?", "body": "<p>Unfortunately, the cost of a bounds check is not a straightforward thing to estimate. It's certainly not \"one cycle per check\", or any such easy to guess cost. It <em>will</em> have nonzero impact, but it <em>might</em> be insignificant.</p>\n\n<p>In theory, it would be possible to measure the cost of bounds checking on basic types like <code>Vec</code> by modifying Rust to disable them and running a large-scale ecosystem test. This would give some kind of rule of thumb, but without doing it, it's quite hard to know whether this will be closer to a ten percent or a tenth of a percent overhead.</p>\n\n<p>There are some ways you can do better than timing and guessing, though. These rules of thumb apply mostly to desktop-class hardware; lower end hardware or something that targets a different niche will have different characteristics.</p>\n\n<p><strong>If your indices are derived from the container size,</strong> there is a good chance that the compiler <em>might</em> be able to eliminate the bounds checks entirely. At this point the only cost of the bounds checks in a release build is that it intermittently interferes with optimizations, which <em>could</em>, but normally doesn't, impede other optimizations.</p>\n\n<p><strong>If your code is branchy, memory access heavy or otherwise hard to optimise, and the bounds to check are easy to access,</strong> there is a good chance that bounds checking will manage to happen mostly in the CPU's spare bandwidth, with branch prediction helping out specifically, in which case the overall cost will be particularly small, especially compared to the cost of the rest of the code.</p>\n\n<p><strong>If your bounds to check are behind several layers of pointers,</strong> it is  <em>plausible</em> that you will hit issues with memory latency, and will suffer correspondingly. However, it is also plausible that speculation and prediction machinery in the CPU will manage to hide this; this is very context-dependent. If you are taking references to the data inside, rather than dereferencing it at the same time as the bounds check, this risk magnifies.</p>\n\n<p><strong>If your bounds checks are in a tight arithmetic loop that doesn't saturate the core,</strong> you aren't likely to hurt throughput directly except by impeding other compiler optimisations. However, impeding other compiler optimisations can be arbitrarily bad, anywhere from no difference to preventing SIMD and causing a factor-10 slowdown.</p>\n\n<p><strong>If your bounds checks are in a tight arithmetic loop that <em>does</em> saturate the core,</strong> you take on the above risk <em>and</em> have a direct execution penalty of roughly half a cycle per bounds check.</p>\n\n<p><strong>If your code is large enough to stress the instruction cache,</strong> then you need to worry about the impact on code size. This is normally modest, but is particularly hard to measure the runtime impact of.</p>\n\n<p>Peter Cordes adds some further points in comments. First, bounds checks imply loads and stores, so you're going to be running a mixed load which is most likely to bottleneck on issue/rename. Second, even predicted branches executed in parallel take resources from the predictor, which can cause other branches to predict worse.</p>\n\n<p>This might seem intimidating, and it is. That is why it's important to measure and understand your performance at the level that is relevant for you and your code.</p>\n\n<p>It is also the case that since Rust was \"born\" with bounds checking, it has produced means to reduce their cost, such as pervasive zero-cost references, iterators (which absorb, but don't actually remove, bounds checks), and an unusual set of nice utility functions. If you find yourself hitting a pathological case, Rust also offers unsafe escape hatches.</p>\n"}], "owner": {"reputation": 573, "user_id": 6551168, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2dc01ebcf4928f369dcc46d52479c49e?s=128&d=identicon&r=PG&f=1", "display_name": "Jounathaen", "link": "https://stackoverflow.com/users/6551168/jounathaen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 6405, "favorite_count": 5, "accepted_answer_id": 47543246, "answer_count": 1, "score": 31, "last_activity_date": 1511950505, "creation_date": 1511910399, "last_edit_date": 1511912200, "question_id": 47542438, "link": "https://stackoverflow.com/questions/47542438/does-rusts-array-bounds-checking-affect-performance", "title": "Does Rust&#39;s array bounds checking affect performance?", "body": "<p>I'm coming from C and I wonder whether Rust's bounds checking affects performance. It probably needs some additional assembly instructions for every access, which could hurt when processing lots of data. </p>\n\n<p>On the other hand, the costly thing in processor performance is memory, so more arithmetic assembler instructions might not hurt, but then it might matter that after a cache line is loaded, sequential access should be very fast.</p>\n\n<p>Has somebody benchmarked this?</p>\n"}, {"tags": ["rust", "hyper"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1512315892, "creation_date": 1512315892, "answer_id": 47620068, "question_id": 47542326, "link": "https://stackoverflow.com/questions/47542326/can-i-reuse-a-tokio-core-and-a-hyper-client-in-rocket/47620068#47620068", "title": "Can I reuse a Tokio Core and a Hyper Client in Rocket?", "body": "<p>No, you cannot share a <code>hyper::Client</code> between threads. However, you can share a tokio_core <a href=\"https://docs.rs/tokio-core/0.1.10/tokio_core/reactor/struct.Remote.html\" rel=\"nofollow noreferrer\"><code>Remote</code></a>:</p>\n\n<pre><code>#![feature(plugin, decl_macro)]\n#![plugin(rocket_codegen)]\nextern crate futures;\nextern crate hyper;\nextern crate rocket;\nextern crate tokio_core;\n\nuse rocket::State;\nuse futures::{Future, Stream};\nuse tokio_core::reactor::Core;\n\nfn main() {\n    let core = Core::new().unwrap();\n    rocket::ignite()\n        .mount(\"/\", routes![index])\n        .manage(core.remote())\n        .launch();\n}\n\n#[post(\"/\", data = \"&lt;var&gt;\")]\nfn index(var: String, remote: State&lt;tokio_core::reactor::Remote&gt;) -&gt; String {\n    remote.spawn(|handle| {\n        use hyper::{Client, Request, Method};\n        use hyper::header::{ContentLength, ContentType};\n\n        let client = Client::new(handle);\n\n        let json = r#\"{\"library\":\"hyper\"}\"#;\n        let uri = \"http://xxx.xxx.xxx.xxx\".parse().unwrap();\n        let mut req = Request::new(Method::Post, uri);\n        req.headers_mut().set(ContentType::json());\n        req.headers_mut().set(ContentLength(json.len() as u64));\n        req.set_body(json);\n\n        client.request(req)\n            .and_then(|res| res.body().concat2())\n            .map(|_| ())\n            .map_err(|_| ())\n    });\n\n    var\n}\n</code></pre>\n\n<p>Then the question turns to your other assertion:</p>\n\n<blockquote>\n  <p>I would have to create them each time Rocket ignites a request. This would take too many resources in an high performance environment</p>\n</blockquote>\n\n<p>I'm not sure what you are basing such a decision on. <a href=\"https://github.com/hyperium/hyper/blob/v0.11.7/src/client/mod.rs#L51-L57\" rel=\"nofollow noreferrer\">Constructing a <code>Client</code> doesn't do much</a>.</p>\n"}], "owner": {"reputation": 147, "user_id": 5953251, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/aHaAz.jpg?s=128&g=1", "display_name": "Kilian Hertel", "link": "https://stackoverflow.com/users/5953251/kilian-hertel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 682, "favorite_count": 0, "accepted_answer_id": 47620068, "answer_count": 1, "score": 0, "last_activity_date": 1512315892, "creation_date": 1511909785, "last_edit_date": 1511962376, "question_id": 47542326, "link": "https://stackoverflow.com/questions/47542326/can-i-reuse-a-tokio-core-and-a-hyper-client-in-rocket", "title": "Can I reuse a Tokio Core and a Hyper Client in Rocket?", "body": "<p>I want to make a client request with Hyper 0.11 after I get an incoming request from a user which I handle with rocket and use as few resources as possible. If I can't reuse the <code>Core</code> or the <code>Client</code>, I would have to create them each time Rocket ignites a request. This would take too many resources in an high performance environment to create a <code>Core</code> and a <code>Client</code> each time the server answers a request.  so I am using the <code>State</code> to make the object available to all 'ignitions'. In Hyper 0.10.13 it works, but in Hyper 0.11 with Tokio I am getting massive error messages.</p>\n\n<p>Cargo.toml:</p>\n\n<pre><code>rocket = \"0.3.3\"\nrocket_codegen = \"0.3.3\"\nhyper = \"0.11\"\nfutures = \"0.1\"\ntokio-core = \"0.1\"\n</code></pre>\n\n<p>main.rs</p>\n\n<pre><code>#![feature(plugin, decl_macro)]\n#![plugin(rocket_codegen)]\nextern crate futures;\nextern crate hyper;\nextern crate rocket;\nextern crate tokio_core;\nuse rocket::State;\nuse hyper::*;\nuse hyper::header::{ContentLength, ContentType};\nuse futures::{Future, Stream};\nuse tokio_core::reactor::Core;\n\nfn main() {\n    let mut core = Core::new().unwrap();\n    let client = Client::new(&amp;core.handle());\n    rocket::ignite()\n        .mount(\"/\", routes![index])\n        .manage(client.clone())\n        .launch();\n}\n\n#[post(\"/\", data = \"&lt;var&gt;\")]\nfn index(var: String, client: State&lt;hyper::Client&lt;tokio_core::reactor::Handle&gt;&gt;) -&gt; &amp;'static str {\n    let json = r#\"{\"library\":\"hyper\"}\"#;\n    let uri = \"http://xxx.xxx.xxx.xxx\".parse().unwrap();\n    let mut req = Request::new(Method::Post, uri);\n    req.headers_mut().set(ContentType::json());\n    req.headers_mut().set(ContentLength(json.len() as u64));\n    req.set_body(json);\n    let post = client.request(req).and_then(|res| {\n        //println!(\"POST: {}\", res.status());\n        res.body().concat2()\n    });\n}\n</code></pre>\n\n<p>I am getting error messages like:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `std::rc::Weak&lt;std::cell::RefCell&lt;tokio_core::reactor::Inner&gt;&gt;: std::marker::Send` is not satisfied in `hyper::Client&lt;tokio_core::reactor::Handle&gt;`\n  --&gt; src/main.rs:23:1\n   |\n23 | / fn index(var: String, client: State&lt;hyper::Client&lt;tokio_core::reactor::Handle&gt;&gt;) -&gt; &amp;'static str {\n24 | |     let json = r#\"{\"library\":\"hyper\"}\"#;\n25 | |     let uri = \"http://xxx.xxx.xxx.xxx\".parse().unwrap();\n26 | |     let mut req = Request::new(Method::Post, uri);\n...  |\n33 | |     });\n34 | | }\n   | |_^ `std::rc::Weak&lt;std::cell::RefCell&lt;tokio_core::reactor::Inner&gt;&gt;` cannot be sent between threads safely\n   |\n   = help: within `hyper::Client&lt;tokio_core::reactor::Handle&gt;`, the trait `std::marker::Send` is not implemented for `std::rc::Weak&lt;std::cell::RefCell&lt;tokio_core::reactor::Inner&gt;&gt;`\n   = note: required because it appears within the type `tokio_core::reactor::Handle`\n   = note: required because it appears within the type `hyper::Client&lt;tokio_core::reactor::Handle&gt;`\n   = note: required by `rocket::State`\n\nerror[E0277]: the trait bound `std::rc::Weak&lt;std::cell::RefCell&lt;tokio_core::reactor::Inner&gt;&gt;: std::marker::Sync` is not satisfied in `hyper::Client&lt;tokio_core::reactor::Handle&gt;`\n  --&gt; src/main.rs:23:1\n   |\n23 | / fn index(var: String, client: State&lt;hyper::Client&lt;tokio_core::reactor::Handle&gt;&gt;) -&gt; &amp;'static str {\n24 | |     let json = r#\"{\"library\":\"hyper\"}\"#;\n25 | |     let uri = \"http://xxx.xxx.xxx.xxx\".parse().unwrap();\n26 | |     let mut req = Request::new(Method::Post, uri);\n...  |\n33 | |     });\n34 | | }\n   | |_^ `std::rc::Weak&lt;std::cell::RefCell&lt;tokio_core::reactor::Inner&gt;&gt;` cannot be shared between threads safely\n   |\n   = help: within `hyper::Client&lt;tokio_core::reactor::Handle&gt;`, the trait `std::marker::Sync` is not implemented for `std::rc::Weak&lt;std::cell::RefCell&lt;tokio_core::reactor::Inner&gt;&gt;`\n   = note: required because it appears within the type `tokio_core::reactor::Handle`\n   = note: required because it appears within the type `hyper::Client&lt;tokio_core::reactor::Handle&gt;`\n   = note: required by `rocket::State`\n\nerror[E0277]: the trait bound `std::rc::Rc&lt;std::cell::RefCell&lt;hyper::client::pool::PoolInner&lt;tokio_proto::util::client_proxy::ClientProxy&lt;tokio_proto::streaming::message::Message&lt;hyper::proto::MessageHead&lt;hyper::proto::RequestLine&gt;, hyper::Body&gt;, tokio_proto::streaming::message::Message&lt;hyper::proto::MessageHead&lt;hyper::proto::RawStatus&gt;, tokio_proto::streaming::body::Body&lt;hyper::Chunk, hyper::Error&gt;&gt;, hyper::Error&gt;&gt;&gt;&gt;: std::marker::Send` is not satisfied in `hyper::Client&lt;tokio_core::reactor::Handle&gt;`\n  --&gt; src/main.rs:23:1\n   |\n23 | / fn index(var: String, client: State&lt;hyper::Client&lt;tokio_core::reactor::Handle&gt;&gt;) -&gt; &amp;'static str {\n24 | |     let json = r#\"{\"library\":\"hyper\"}\"#;\n25 | |     let uri = \"http://xxx.xxx.xxx.xxx\".parse().unwrap();\n26 | |     let mut req = Request::new(Method::Post, uri);\n...  |\n33 | |     });\n34 | | }\n   | |_^ `std::rc::Rc&lt;std::cell::RefCell&lt;hyper::client::pool::PoolInner&lt;tokio_proto::util::client_proxy::ClientProxy&lt;tokio_proto::streaming::message::Message&lt;hyper::proto::MessageHead&lt;hyper::proto::RequestLine&gt;, hyper::Body&gt;, tokio_proto::streaming::message::Message&lt;hyper::proto::MessageHead&lt;hyper::proto::RawStatus&gt;, tokio_proto::streaming::body::Body&lt;hyper::Chunk, hyper::Error&gt;&gt;, hyper::Error&gt;&gt;&gt;&gt;` cannot be sent between threads safely\n   |\n   = help: within `hyper::Client&lt;tokio_core::reactor::Handle&gt;`, the trait `std::marker::Send` is not implemented for `std::rc::Rc&lt;std::cell::RefCell&lt;hyper::client::pool::PoolInner&lt;tokio_proto::util::client_proxy::ClientProxy&lt;tokio_proto::streaming::message::Message&lt;hyper::proto::MessageHead&lt;hyper::proto::RequestLine&gt;, hyper::Body&gt;, tokio_proto::streaming::message::Message&lt;hyper::proto::MessageHead&lt;hyper::proto::RawStatus&gt;, tokio_proto::streaming::body::Body&lt;hyper::Chunk, hyper::Error&gt;&gt;, hyper::Error&gt;&gt;&gt;&gt;`\n   = note: required because it appears within the type `hyper::client::pool::Pool&lt;tokio_proto::util::client_proxy::ClientProxy&lt;tokio_proto::streaming::message::Message&lt;hyper::proto::MessageHead&lt;hyper::proto::RequestLine&gt;, hyper::Body&gt;, tokio_proto::streaming::message::Message&lt;hyper::proto::MessageHead&lt;hyper::proto::RawStatus&gt;, tokio_proto::streaming::body::Body&lt;hyper::Chunk, hyper::Error&gt;&gt;, hyper::Error&gt;&gt;`\n   = note: required because it appears within the type `hyper::client::Dispatch&lt;hyper::Body&gt;`\n   = note: required because it appears within the type `hyper::Client&lt;tokio_core::reactor::Handle&gt;`\n   = note: required by `rocket::State`\n\nerror[E0277]: the trait bound `std::rc::Rc&lt;std::cell::RefCell&lt;hyper::client::pool::PoolInner&lt;std::cell::RefCell&lt;futures::sync::mpsc::Sender&lt;(hyper::proto::MessageHead&lt;hyper::proto::RequestLine&gt;, std::option::Option&lt;hyper::Body&gt;, futures::Sender&lt;std::result::Result&lt;hyper::Response, hyper::Error&gt;&gt;)&gt;&gt;&gt;&gt;&gt;: std::marker::Send` is not satisfied in `hyper::Client&lt;tokio_core::reactor::Handle&gt;`\n  --&gt; src/main.rs:23:1\n   |\n23 | / fn index(var: String, client: State&lt;hyper::Client&lt;tokio_core::reactor::Handle&gt;&gt;) -&gt; &amp;'static str {\n24 | |     let json = r#\"{\"library\":\"hyper\"}\"#;\n25 | |     let uri = \"http://xxx.xxx.xxx.xxx\".parse().unwrap();\n26 | |     let mut req = Request::new(Method::Post, uri);\n...  |\n33 | |     });\n34 | | }\n   | |_^ `std::rc::Rc&lt;std::cell::RefCell&lt;hyper::client::pool::PoolInner&lt;std::cell::RefCell&lt;futures::sync::mpsc::Sender&lt;(hyper::proto::MessageHead&lt;hyper::proto::RequestLine&gt;, std::option::Option&lt;hyper::Body&gt;, futures::Sender&lt;std::result::Result&lt;hyper::Response, hyper::Error&gt;&gt;)&gt;&gt;&gt;&gt;&gt;` cannot be sent between threads safely\n   |\n   = help: within `hyper::Client&lt;tokio_core::reactor::Handle&gt;`, the trait `std::marker::Send` is not implemented for `std::rc::Rc&lt;std::cell::RefCell&lt;hyper::client::pool::PoolInner&lt;std::cell::RefCell&lt;futures::sync::mpsc::Sender&lt;(hyper::proto::MessageHead&lt;hyper::proto::RequestLine&gt;, std::option::Option&lt;hyper::Body&gt;, futures::Sender&lt;std::result::Result&lt;hyper::Response, hyper::Error&gt;&gt;)&gt;&gt;&gt;&gt;&gt;`\n   = note: required because it appears within the type `hyper::client::pool::Pool&lt;std::cell::RefCell&lt;futures::sync::mpsc::Sender&lt;(hyper::proto::MessageHead&lt;hyper::proto::RequestLine&gt;, std::option::Option&lt;hyper::Body&gt;, futures::Sender&lt;std::result::Result&lt;hyper::Response, hyper::Error&gt;&gt;)&gt;&gt;&gt;`\n   = note: required because it appears within the type `hyper::client::Dispatch&lt;hyper::Body&gt;`\n   = note: required because it appears within the type `hyper::Client&lt;tokio_core::reactor::Handle&gt;`\n   = note: required by `rocket::State`\n\nerror[E0277]: the trait bound `std::rc::Rc&lt;std::cell::RefCell&lt;hyper::client::pool::PoolInner&lt;tokio_proto::util::client_proxy::ClientProxy&lt;tokio_proto::streaming::message::Message&lt;hyper::proto::MessageHead&lt;hyper::proto::RequestLine&gt;, hyper::Body&gt;, tokio_proto::streaming::message::Message&lt;hyper::proto::MessageHead&lt;hyper::proto::RawStatus&gt;, tokio_proto::streaming::body::Body&lt;hyper::Chunk, hyper::Error&gt;&gt;, hyper::Error&gt;&gt;&gt;&gt;: std::marker::Sync` is not satisfied in `hyper::Client&lt;tokio_core::reactor::Handle&gt;`\n  --&gt; src/main.rs:23:1\n   |\n23 | / fn index(var: String, client: State&lt;hyper::Client&lt;tokio_core::reactor::Handle&gt;&gt;) -&gt; &amp;'static str {\n24 | |     let json = r#\"{\"library\":\"hyper\"}\"#;\n25 | |     let uri = \"http://xxx.xxx.xxx.xxx\".parse().unwrap();\n26 | |     let mut req = Request::new(Method::Post, uri);\n...  |\n33 | |     });\n34 | | }\n   | |_^ `std::rc::Rc&lt;std::cell::RefCell&lt;hyper::client::pool::PoolInner&lt;tokio_proto::util::client_proxy::ClientProxy&lt;tokio_proto::streaming::message::Message&lt;hyper::proto::MessageHead&lt;hyper::proto::RequestLine&gt;, hyper::Body&gt;, tokio_proto::streaming::message::Message&lt;hyper::proto::MessageHead&lt;hyper::proto::RawStatus&gt;, tokio_proto::streaming::body::Body&lt;hyper::Chunk, hyper::Error&gt;&gt;, hyper::Error&gt;&gt;&gt;&gt;` cannot be shared between threads safely\n   |\n   = help: within `hyper::Client&lt;tokio_core::reactor::Handle&gt;`, the trait `std::marker::Sync` is not implemented for `std::rc::Rc&lt;std::cell::RefCell&lt;hyper::client::pool::PoolInner&lt;tokio_proto::util::client_proxy::ClientProxy&lt;tokio_proto::streaming::message::Message&lt;hyper::proto::MessageHead&lt;hyper::proto::RequestLine&gt;, hyper::Body&gt;, tokio_proto::streaming::message::Message&lt;hyper::proto::MessageHead&lt;hyper::proto::RawStatus&gt;, tokio_proto::streaming::body::Body&lt;hyper::Chunk, hyper::Error&gt;&gt;, hyper::Error&gt;&gt;&gt;&gt;`\n   = note: required because it appears within the type `hyper::client::pool::Pool&lt;tokio_proto::util::client_proxy::ClientProxy&lt;tokio_proto::streaming::message::Message&lt;hyper::proto::MessageHead&lt;hyper::proto::RequestLine&gt;, hyper::Body&gt;, tokio_proto::streaming::message::Message&lt;hyper::proto::MessageHead&lt;hyper::proto::RawStatus&gt;, tokio_proto::streaming::body::Body&lt;hyper::Chunk, hyper::Error&gt;&gt;, hyper::Error&gt;&gt;`\n   = note: required because it appears within the type `hyper::client::Dispatch&lt;hyper::Body&gt;`\n   = note: required because it appears within the type `hyper::Client&lt;tokio_core::reactor::Handle&gt;`\n   = note: required by `rocket::State`\n\nerror[E0277]: the trait bound `std::rc::Rc&lt;std::cell::RefCell&lt;hyper::client::pool::PoolInner&lt;std::cell::RefCell&lt;futures::sync::mpsc::Sender&lt;(hyper::proto::MessageHead&lt;hyper::proto::RequestLine&gt;, std::option::Option&lt;hyper::Body&gt;, futures::Sender&lt;std::result::Result&lt;hyper::Response, hyper::Error&gt;&gt;)&gt;&gt;&gt;&gt;&gt;: std::marker::Sync` is not satisfied in `hyper::Client&lt;tokio_core::reactor::Handle&gt;`\n  --&gt; src/main.rs:23:1\n   |\n23 | / fn index(var: String, client: State&lt;hyper::Client&lt;tokio_core::reactor::Handle&gt;&gt;) -&gt; &amp;'static str {\n24 | |     let json = r#\"{\"library\":\"hyper\"}\"#;\n25 | |     let uri = \"http://xxx.xxx.xxx.xxx\".parse().unwrap();\n26 | |     let mut req = Request::new(Method::Post, uri);\n...  |\n33 | |     });\n34 | | }\n   | |_^ `std::rc::Rc&lt;std::cell::RefCell&lt;hyper::client::pool::PoolInner&lt;std::cell::RefCell&lt;futures::sync::mpsc::Sender&lt;(hyper::proto::MessageHead&lt;hyper::proto::RequestLine&gt;, std::option::Option&lt;hyper::Body&gt;, futures::Sender&lt;std::result::Result&lt;hyper::Response, hyper::Error&gt;&gt;)&gt;&gt;&gt;&gt;&gt;` cannot be shared between threads safely\n   |\n   = help: within `hyper::Client&lt;tokio_core::reactor::Handle&gt;`, the trait `std::marker::Sync` is not implemented for `std::rc::Rc&lt;std::cell::RefCell&lt;hyper::client::pool::PoolInner&lt;std::cell::RefCell&lt;futures::sync::mpsc::Sender&lt;(hyper::proto::MessageHead&lt;hyper::proto::RequestLine&gt;, std::option::Option&lt;hyper::Body&gt;, futures::Sender&lt;std::result::Result&lt;hyper::Response, hyper::Error&gt;&gt;)&gt;&gt;&gt;&gt;&gt;`\n   = note: required because it appears within the type `hyper::client::pool::Pool&lt;std::cell::RefCell&lt;futures::sync::mpsc::Sender&lt;(hyper::proto::MessageHead&lt;hyper::proto::RequestLine&gt;, std::option::Option&lt;hyper::Body&gt;, futures::Sender&lt;std::result::Result&lt;hyper::Response, hyper::Error&gt;&gt;)&gt;&gt;&gt;`\n   = note: required because it appears within the type `hyper::client::Dispatch&lt;hyper::Body&gt;`\n   = note: required because it appears within the type `hyper::Client&lt;tokio_core::reactor::Handle&gt;`\n   = note: required by `rocket::State`\n</code></pre>\n\n<p>Is there something wrong with my state? Please don't take too much effort for the answer. If you can point me in the right direction I can work myself. Another solution how to solve this with another setup is very welcome as well. </p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 3265, "user_id": 2406296, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/e78eae73ba48e6c306bcdb11d026e839?s=128&d=identicon&r=PG", "display_name": "mmmm", "link": "https://stackoverflow.com/users/2406296/mmmm"}, "edited": false, "score": 0, "creation_date": 1511909775, "post_id": 47542108, "comment_id": 82041740, "body": "lol. So simple. I don&#39;t know why it was so hard :D much thanks!"}, {"owner": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "reply_to_user": {"reputation": 3265, "user_id": 2406296, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/e78eae73ba48e6c306bcdb11d026e839?s=128&d=identicon&r=PG", "display_name": "mmmm", "link": "https://stackoverflow.com/users/2406296/mmmm"}, "edited": false, "score": 1, "creation_date": 1511909823, "post_id": 47542108, "comment_id": 82041761, "body": "Pointers can be hard sometimes. Having some knowledge of C helps as well!"}], "tags": [], "owner": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "is_accepted": true, "score": 9, "last_activity_date": 1547233018, "last_edit_date": 1547233018, "creation_date": 1511908662, "answer_id": 47542108, "question_id": 47542053, "link": "https://stackoverflow.com/questions/47542053/why-do-we-need-to-dereference-a-mutable-reference-in-a-match-to-change-it/47542108#47542108", "title": "Why do we need to dereference a mutable reference in a match to change it?", "body": "<p>A reference is an address pointer. If you were to just do <code>m += 10</code>, you'd be changing the memory address (Rust doesn't let you do this without <code>unsafe</code>). What you want to do is change the <em>value</em> at <code>m</code>. So where's the value? Follow the pointer! You do this by dereferencing.</p>\n"}], "owner": {"reputation": 3265, "user_id": 2406296, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/e78eae73ba48e6c306bcdb11d026e839?s=128&d=identicon&r=PG", "display_name": "mmmm", "link": "https://stackoverflow.com/users/2406296/mmmm"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1028, "favorite_count": 0, "accepted_answer_id": 47542108, "answer_count": 1, "score": 4, "last_activity_date": 1547233018, "creation_date": 1511908351, "last_edit_date": 1511908483, "question_id": 47542053, "link": "https://stackoverflow.com/questions/47542053/why-do-we-need-to-dereference-a-mutable-reference-in-a-match-to-change-it", "title": "Why do we need to dereference a mutable reference in a match to change it?", "body": "<p>I'm reading <a href=\"https://doc.rust-lang.org/stable/book/second-edition/\" rel=\"nofollow noreferrer\"><em>The Rust Programming Language</em></a> and one thing is not clear:</p>\n\n<pre><code>let mut mut_value = 6;\nmatch mut_value {\n    ref mut m =&gt; {\n        *m += 10;\n        println!(\"We added 10. `mut_value`: {:?}\", m);\n    },\n}\n</code></pre>\n\n<p>Why do we need to dereference it to change it? We already have a mutable reference.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 7, "creation_date": 1511960286, "post_id": 47541878, "comment_id": 82063394, "body": "Nice answer, except for one nit: there <i>is</i> such a thing as a native line ending for the platform, and a program that creates local text files that need to be viewed and edited should respect it. At least I know I hate programs that create files with CRLF endings on Unix."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 3, "creation_date": 1511961237, "post_id": 47541878, "comment_id": 82063973, "body": "@user4815162342 You make a good point, although I&#39;d argue that programs that create local text files for human viewing should unconditionally use <code>\\n</code> and users should just use, oh, <i>any program other than Notepad</i> to view them on Windows."}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1511980056, "post_id": 47541878, "comment_id": 82076480, "body": "I understand where you&#39;re coming from :) but unconditionally using <code>\\n</code> does seem a bit Unix-centric. There are situations where the OP&#39;s question makes perfect sense, although I concede that they are much rarer than they&#39;re made out to be."}, {"owner": {"reputation": 5143, "user_id": 600351, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/7a2a3b9fd62972fa271deb3d0e31256c?s=128&d=identicon&r=PG", "display_name": "Geob-o-matic", "link": "https://stackoverflow.com/users/600351/geob-o-matic"}, "edited": false, "score": 0, "creation_date": 1511980402, "post_id": 47541878, "comment_id": 82076647, "body": "Thanks I was gathering info to solve a bug in cobalt : <a href=\"https://github.com/cobalt-org/cobalt.rs/issues/241\" rel=\"nofollow noreferrer\">github.com/cobalt-org/cobalt.rs/issues/241</a>"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 1, "creation_date": 1567777710, "post_id": 47541878, "comment_id": 102076706, "body": "Note: even MS Notepad supports \\n now: <a href=\"https://devblogs.microsoft.com/commandline/extended-eol-in-notepad/\" rel=\"nofollow noreferrer\">devblogs.microsoft.com/commandline/extended-eol-in-notepad</a>"}, {"owner": {"reputation": 730, "user_id": 3283003, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/969f644f75512332a20f0ea1ff6e64d0?s=128&d=identicon&r=PG&f=1", "display_name": "Squirrel", "link": "https://stackoverflow.com/users/3283003/squirrel"}, "edited": false, "score": 0, "creation_date": 1607000153, "post_id": 47541878, "comment_id": 115137740, "body": "This should just be defined in std somewhere like path separater is. It&#39;s inconsistent and annoying not to have the native line ending available where needed. E.g. <a href=\"https://doc.rust-lang.org/std/path/constant.MAIN_SEPARATOR.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/path/constant.MAIN_SEPARATOR.html</a>"}], "tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 10, "last_activity_date": 1511961271, "last_edit_date": 1592644375, "creation_date": 1511907582, "answer_id": 47541878, "question_id": 47541191, "link": "https://stackoverflow.com/questions/47541191/how-to-get-current-platform-end-of-line-character-sequence-in-rust/47541878#47541878", "title": "How to get current platform end of line character sequence in Rust?", "body": "<p>I don't believe there is any feature that does this specifically. Even the line-aware features of the standard library don't: <a href=\"https://doc.rust-lang.org/std/io/trait.BufRead.html#method.read_line\" rel=\"nofollow noreferrer\"><code>BufRead::read_line</code></a> is documented to only recognize <code>\\n</code>, and <a href=\"https://doc.rust-lang.org/src/std/io/mod.rs.html#2105-2120\" rel=\"nofollow noreferrer\"><code>BufRead::lines</code> (source)</a>, which strips end-of-line characters, only does so for <code>\\n</code> and <code>\\r\\n</code>, indiscriminate of what platform it's invoked on.</p>\n<p>&quot;Platform line ending&quot; is really a category error, though. Files are sent across networks and copied from one computer to another. If your program writes files that need to be opened on Windows in Notepad, it doesn't matter whether the program that generates them is running on Windows or Linux; it needs to emit <code>\\r\\n</code>. Similarly if the program is writing a specific file format or implementing some network protocol; the format or protocol should tell you what line separator to use. If the format allows either and there is no convention, pick the one you prefer; just use it consistently.</p>\n<p>If you're <em>reading</em> line endings, you should probably tolerate either one, like <code>BufRead::lines</code> does.</p>\n<p>However, should you <em>really need</em> to, like if your output will be read by a poorly written program that expects different line endings on different platforms, you can use <a href=\"https://stackoverflow.com/questions/41742046/is-there-a-list-of-all-cfg-features\">conditional compilation</a> attributes to achieve this effect:</p>\n<pre><code>#[cfg(windows)]\nconst LINE_ENDING: &amp;'static str = &quot;\\r\\n&quot;;\n#[cfg(not(windows))]\nconst LINE_ENDING: &amp;'static str = &quot;\\n&quot;;\n</code></pre>\n"}], "owner": {"reputation": 5143, "user_id": 600351, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/7a2a3b9fd62972fa271deb3d0e31256c?s=128&d=identicon&r=PG", "display_name": "Geob-o-matic", "link": "https://stackoverflow.com/users/600351/geob-o-matic"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1803, "favorite_count": 1, "accepted_answer_id": 47541878, "answer_count": 1, "score": 10, "last_activity_date": 1511961271, "creation_date": 1511904477, "last_edit_date": 1511907298, "question_id": 47541191, "link": "https://stackoverflow.com/questions/47541191/how-to-get-current-platform-end-of-line-character-sequence-in-rust", "title": "How to get current platform end of line character sequence in Rust?", "body": "<p>I'm looking for a way to get the platform end of line character sequence (CRLF\u00a0for Windows, LF for Linux/macOS) at runtime.</p>\n"}, {"tags": ["winapi", "rust"], "comments": [{"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 2, "creation_date": 1511869807, "post_id": 47530786, "comment_id": 82018082, "body": "I&#39;d pass the buffers directly from <code>Vec&lt;i8&gt;</code> / <code>Vec&lt;u16&gt;</code> allocations (or arrays on the stack...); convert them to strings <b>after</b> they were filled."}, {"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 2, "creation_date": 1511875176, "post_id": 47530786, "comment_id": 82021619, "body": "@Ronnie Please post the answer as a proper answer, thanks."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1511881760, "post_id": 47530786, "comment_id": 82026306, "body": "<b>You</b> asked <a href=\"https://stackoverflow.com/q/44709780/155423\">Calling the GetUserName WinAPI function with a mutable string doesn&#39;t populate the string</a>, thus one would expect you to remember the answer."}, {"owner": {"reputation": 2439, "user_id": 2294472, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/231b9fba4257295e39e1484a410d246d?s=128&d=identicon&r=PG", "display_name": "Delta_Fore", "link": "https://stackoverflow.com/users/2294472/delta-fore"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1511888211, "post_id": 47530786, "comment_id": 82030690, "body": "@Shepmaster For some reason didn&#39;t appear in the search. Please delete this question if you wish. Thanks"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1511881656, "post_id": 47534628, "comment_id": 82026233, "body": "This code fails to check the return value of <code>GetUserNameW</code> and thus is terribly unsafe."}], "tags": [], "owner": {"reputation": 2439, "user_id": 2294472, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/231b9fba4257295e39e1484a410d246d?s=128&d=identicon&r=PG", "display_name": "Delta_Fore", "link": "https://stackoverflow.com/users/2294472/delta-fore"}, "is_accepted": false, "score": 0, "last_activity_date": 1511881635, "last_edit_date": 1511881635, "creation_date": 1511881196, "answer_id": 47534628, "question_id": 47530786, "link": "https://stackoverflow.com/questions/47530786/calling-winapi-with-osstring-and-converting-back-to-string/47534628#47534628", "title": "Calling winapi with OsString and converting back to String", "body": "<p>From comments, using a <code>Vec</code> directly is the simplest approach.</p>\n\n<pre><code>fn get_user_name() -&gt; String {\n    // for windows\n    let mut sz: u32 = 64;\n    let mut username: Vec&lt;u16&gt; = vec![0; sz as usize];\n    unsafe {\n        advapi32::GetUserNameW(username.as_mut_ptr() as *mut u16, &amp;mut sz as *mut u32);\n    }\n    String::from_utf16(&amp;username[..sz as usize]).unwrap()\n}\n</code></pre>\n"}], "owner": {"reputation": 2439, "user_id": 2294472, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/231b9fba4257295e39e1484a410d246d?s=128&d=identicon&r=PG", "display_name": "Delta_Fore", "link": "https://stackoverflow.com/users/2294472/delta-fore"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 855, "favorite_count": 0, "closed_date": 1511881579, "answer_count": 1, "score": -1, "last_activity_date": 1547577637, "creation_date": 1511869513, "last_edit_date": 1547577637, "question_id": 47530786, "link": "https://stackoverflow.com/questions/47530786/calling-winapi-with-osstring-and-converting-back-to-string", "closed_reason": "Duplicate", "title": "Calling winapi with OsString and converting back to String", "body": "<p>I'm struggling with calling the wide-char version of <code>GetUserName</code>. The UTF-8 call works, though there might be a better way to do this:</p>\n\n<pre><code>#[cfg(windows)] extern crate advapi32;\n#[cfg(windows)] extern crate winapi;\n\nuse std::ffi::CString;\n\nfn get_user_name() -&gt; String {\n    let mut sz: u32 = 64;\n    unsafe {\n        let mut username = CString::from_vec_unchecked(vec![0; sz as usize]);\n        let ptr = username.into_raw();\n        advapi32::GetUserNameA(ptr as *mut i8, &amp;mut sz as *mut u32);\n        CString::from_raw(ptr).to_str().unwrap().to_owned()\n    }\n}\n</code></pre>\n\n<p>Then I tried the UTF-16 version. This works but looks wrong as I have to create this blank string for <code>OsStr::new()</code>:</p>\n\n<pre><code>fn get_user_name() -&gt; String {\n    // for windows\n    use std::ffi::OsStr;\n    let mut sz: u32 = 64;\n    let mut username = OsStr::new(\"                            \")\n        .encode_wide()\n        .collect::&lt;Vec&lt;u16&gt;&gt;();\n    unsafe {\n        advapi32::GetUserNameW(username.as_mut_ptr() as *mut u16, &amp;mut sz as *mut u32);\n    }\n    String::from_utf16(&amp;username[..sz as usize]).unwrap()\n}\n</code></pre>\n\n<p>I also tried using <code>OsString::with_capacity()</code>, but this crashes:</p>\n\n<pre><code>fn get_user_name() -&gt; String {\n    // for windows\n    use std::ffi::OsStr;\n    let mut sz: u32 = 64;\n    let mut username = OsString::with_capacity(sz as usize)\n        .as_os_str()\n        .encode_wide()\n        .collect::&lt;Vec&lt;u16&gt;&gt;();\n    unsafe {\n        advapi32::GetUserNameW(username.as_mut_ptr() as *mut u16, &amp;mut sz as *mut u32);\n    }\n    String::from_utf16(&amp;username[..sz as usize]).unwrap()\n}\n</code></pre>\n\n<p>There are other answers on Stack Overflow where Rust creates a string to pass into a function (e.g. <code>MessageBoxW</code>), but none where the size is determined by Windows and Rust has to allocate space to be populated later.</p>\n\n<p>What is the correct way of calling a wide char function on Windows where Rust has to preallocate a buffer and then convert back (eventually) to a standard UTF-8 string?</p>\n"}, {"tags": ["rust", "webassembly"], "comments": [{"owner": {"reputation": 22928, "user_id": 978690, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/lNUl6.png?s=128&g=1", "display_name": "rap-2-h", "link": "https://stackoverflow.com/users/978690/rap-2-h"}, "reply_to_user": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 0, "creation_date": 1511868469, "post_id": 47529643, "comment_id": 82017272, "body": "<code>pub fn hello() -&gt; String {     &quot;hello from rust&quot;.to_string() }</code> returns the same &quot;undefined&quot;"}, {"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 4, "creation_date": 1511869133, "post_id": 47529643, "comment_id": 82017675, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/41353389/how-can-i-return-a-javascript-string-from-a-webassembly-function\">How can I return a JavaScript string from a WebAssembly function</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 4, "creation_date": 1511876672, "post_id": 47529643, "comment_id": 82022665, "body": "Never, <b>ever</b> return Rust types across an FFI boundary. Check out my <a href=\"http://jakegoulding.com/rust-ffi-omnibus/\" rel=\"nofollow noreferrer\">Rust FFI Omnibus</a>. While it doesn&#39;t have anything for WebAssembly (yet), the concepts are all still valid."}], "answers": [{"comments": [{"owner": {"reputation": 435, "user_id": 4344645, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Y9sfR.jpg?s=128&g=1", "display_name": "Arkadiy Kuznetsov", "link": "https://stackoverflow.com/users/4344645/arkadiy-kuznetsov"}, "edited": false, "score": 0, "creation_date": 1512462057, "post_id": 47555021, "comment_id": 82256219, "body": "One more example <a href=\"https://arkada38.github.io/2017/12/04/rust-wasm-string-to-uppercase/\" rel=\"nofollow noreferrer\">arkada38.github.io/2017/12/04/rust-wasm-string-to-uppercase</a>"}], "tags": [], "owner": {"reputation": 1356, "user_id": 4129373, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9c876091f11a4f9580e69a23ef9f7f08?s=128&d=identicon&r=PG", "display_name": "letmutx", "link": "https://stackoverflow.com/users/4129373/letmutx"}, "is_accepted": false, "score": 5, "last_activity_date": 1511965360, "creation_date": 1511965360, "answer_id": 47555021, "question_id": 47529643, "link": "https://stackoverflow.com/questions/47529643/how-to-return-a-string-or-similar-from-rust-in-webassembly/47555021#47555021", "title": "How to return a string (or similar) from Rust in WebAssembly?", "body": "<p>You cannot directly return a Rust <code>String</code> or an <code>&amp;str</code>. Instead allocate and return a raw byte pointer containing the data which has to be then encoded as a JS string on the JavaScript side.</p>\n\n<p>You can take a look at the SHA1 example <a href=\"https://github.com/badboy/hellorust/tree/master/demos\" rel=\"noreferrer\">here</a>.</p>\n\n<p>The functions of interest are in </p>\n\n<ul>\n<li><code>demos/bundle.js</code> - <code>copyCStr</code></li>\n<li><code>demos/sha1/sha1-digest.rs</code> - <code>digest</code></li>\n</ul>\n\n<p>For more examples: <a href=\"https://www.hellorust.com/demos/sha1/index.html\" rel=\"noreferrer\">https://www.hellorust.com/demos/sha1/index.html</a></p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1512571243, "post_id": 47676844, "comment_id": 82312647, "body": "Thank you for posting an answer that contains actual code, as opposed to just links saying &quot;go elsewhere and read this&quot;."}, {"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 6, "creation_date": 1526590501, "post_id": 47676844, "comment_id": 87816632, "body": "It should be noted that <code>CString::new</code> allocates memory on the WASM heap (in order to generate a null-terminated copy of the string). <code>CString::into_raw</code> transfers the &quot;ownership&quot; of this memory out, but the memory can not be readily freed by anything other than the Rust allocator. The given example provides no ways to free that memory, so if used &quot;as is&quot; it will memory-leak."}, {"owner": {"reputation": 1376, "user_id": 5368759, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-EUB19ZQqehM/AAAAAAAAAAI/AAAAAAAAAkQ/t8XfIKGPO34/photo.jpg?sz=128", "display_name": "Fuyang Liu", "link": "https://stackoverflow.com/users/5368759/fuyang-liu"}, "edited": false, "score": 0, "creation_date": 1581030586, "post_id": 47676844, "comment_id": 106303814, "body": "I heard this is outdated?"}], "tags": [], "owner": {"reputation": 64343, "user_id": 249933, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/458f2e0d08d4114f8b323798cfea141d?s=128&d=identicon&r=PG", "display_name": "ColinE", "link": "https://stackoverflow.com/users/249933/coline"}, "is_accepted": true, "score": 20, "last_activity_date": 1512571117, "last_edit_date": 1512571117, "creation_date": 1512570994, "answer_id": 47676844, "question_id": 47529643, "link": "https://stackoverflow.com/questions/47529643/how-to-return-a-string-or-similar-from-rust-in-webassembly/47676844#47676844", "title": "How to return a string (or similar) from Rust in WebAssembly?", "body": "<p>WebAssembly only supports a few <a href=\"https://github.com/WebAssembly/design/blob/master/Semantics.md#types\" rel=\"noreferrer\">numeric types</a>, which is all that can be returned via an exported function. </p>\n\n<p>When you compile to WebAssembly, your string will be held in the module's linear memory. In order to read this string from the hosting JavaScript, you need to return a reference to its location in memory, and the length of the string, i.e. two integers. This allows you to read the string from memory.</p>\n\n<p>You use this same technique regardless of whichever language you are compiling to WebAssembly. <a href=\"https://stackoverflow.com/questions/41353389/how-can-i-return-a-javascript-string-from-a-webassembly-function\">How can I return a JavaScript string from a WebAssembly function</a> provides a detailed background to the problem.</p>\n\n<p>With Rust specifically, you need to make use of the Foreign Function Interface (FFI), using the <code>CString</code> type as follows:</p>\n\n<pre><code>use std::ffi::CString;\nuse std::os::raw::c_char;\n\nstatic HELLO: &amp;'static str = \"hello from rust\";\n\n#[no_mangle]\npub fn get_hello() -&gt; *mut c_char {\n    let s = CString::new(HELLO).unwrap();\n    s.into_raw()\n}\n\n#[no_mangle]\npub fn get_hello_len() -&gt; usize {\n    HELLO.len()\n}\n</code></pre>\n\n<p>The above code exports two functions, <code>get_hello</code> which returns a reference to the string, and <code>get_hello_len</code> which returns its length.</p>\n\n<p>With the above code compiled to a wasm module, the string can be accessed as follows:</p>\n\n<pre><code>const res = await fetch('chip8.wasm');\nconst buffer = await res.arrayBuffer();\nconst module = await WebAssembly.compile(buffer);\nconst instance = await WebAssembly.instantiate(module);\n\n// obtain the module memory\nconst linearMemory = instance.exports.memory;\n\n// create a buffer starting at the reference to the exported string\nconst offset = instance.exports.get_hello();\nconst stringBuffer = new Uint8Array(linearMemory.buffer, offset,\n  instance.exports.get_hello_len());\n\n// create a string from this buffer\nlet str = '';\nfor (let i=0; i&lt;stringBuffer.length; i++) {\n  str += String.fromCharCode(stringBuffer[i]);\n}\n\nconsole.log(str);\n</code></pre>\n\n<p>The C equivalent <a href=\"https://wasdk.github.io/WasmFiddle//?w590f\" rel=\"noreferrer\">can be seen in action in a WasmFiddle</a>.</p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1520801457, "post_id": 49222154, "comment_id": 85453518, "body": "Similar ideas can be found in <a href=\"https://stackoverflow.com/a/49020435/155423\">the converse of this question</a>."}], "tags": [], "owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "is_accepted": false, "score": 3, "last_activity_date": 1562879638, "last_edit_date": 1562879638, "creation_date": 1520784918, "answer_id": 49222154, "question_id": 47529643, "link": "https://stackoverflow.com/questions/47529643/how-to-return-a-string-or-similar-from-rust-in-webassembly/49222154#49222154", "title": "How to return a string (or similar) from Rust in WebAssembly?", "body": "<p>Most examples I saw copy the string twice. First on the WASM side, into <code>CString</code> or by shrinking the <code>Vec</code> to its capacity, and then on the JS side while decoding the UTF-8.</p>\n\n<p>Given that we often use WASM for the sake of the speed, I sought to implement a version that would reuse the Rust vector.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::collections::HashMap;\n\n/// Byte vectors shared with JavaScript.\n///\n/// A map from payload's memory location to `Vec&lt;u8&gt;`.\n///\n/// In order to deallocate memory in Rust we need not just the memory location but also it's size.\n/// In case of strings and vectors the freed size is capacity.\n/// Keeping the vector around allows us not to change it's capacity.\n///\n/// Not thread-safe (assuming that we're running WASM from the single JavaScript thread).\nstatic mut SHARED_VECS: Option&lt;HashMap&lt;u32, Vec&lt;u8&gt;&gt;&gt; = None;\n\nextern \"C\" {\n    fn console_log(rs: *const u8);\n    fn console_log_8859_1(rs: *const u8);\n}\n\n#[no_mangle]\npub fn init() {\n    unsafe { SHARED_VECS = Some(HashMap::new()) }\n}\n\n#[no_mangle]\npub fn vec_len(payload: *const u8) -&gt; u32 {\n    unsafe {\n        SHARED_VECS\n            .as_ref()\n            .unwrap()\n            .get(&amp;(payload as u32))\n            .unwrap()\n            .len() as u32\n    }\n}\n\npub fn vec2js&lt;V: Into&lt;Vec&lt;u8&gt;&gt;&gt;(v: V) -&gt; *const u8 {\n    let v = v.into();\n    let payload = v.as_ptr();\n    unsafe {\n        SHARED_VECS.as_mut().unwrap().insert(payload as u32, v);\n    }\n    payload\n}\n\n#[no_mangle]\npub extern \"C\" fn free_vec(payload: *const u8) {\n    unsafe {\n        SHARED_VECS.as_mut().unwrap().remove(&amp;(payload as u32));\n    }\n}\n\n#[no_mangle]\npub fn start() {\n    unsafe {\n        console_log(vec2js(format!(\"Hello again!\")));\n        console_log_8859_1(vec2js(b\"ASCII string.\" as &amp;[u8]));\n    }\n}\n</code></pre>\n\n<p>And the JavaScript part:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>(function (iif) {\n\n  function rs2js (mod, rs, utfLabel = 'utf-8') {\n    const view = new Uint8Array (mod.memory.buffer, rs, mod.vec_len (rs))\n    const utf8dec = new TextDecoder (utfLabel)\n    const utf8 = utf8dec.decode (view)\n    mod.free_vec (rs)\n    return utf8}\n\n  function loadWasm (cache) {\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/instantiateStreaming\n    WebAssembly.instantiateStreaming (fetch ('main.wasm', {cache: cache ? \"default\" : \"no-cache\"}), {env: {\n      console_log: function (rs) {if (window.console) console.log ('main]', rs2js (iif.main, rs))},\n      console_log_8859_1: function (rs) {if (window.console) console.log ('main]', rs2js (iif.main, rs, 'iso-8859-1'))}\n    }}) .then (results =&gt; {\n      const exports = results.instance.exports\n      exports.init()\n      iif.main = exports\n      iif.main.start()})}\n\n  // Hot code reloading.\n  if (window.location.hostname == '127.0.0.1' &amp;&amp; window.location.port == '43080') {\n    window.setInterval (\n      function() {\n        // Check if the WASM was updated.\n        fetch ('main.wasm.lm', {cache: \"no-cache\"}) .then (r =&gt; r.text()) .then (lm =&gt; {\n          lm = lm.trim()\n          if (/^\\d+$/.test (lm) &amp;&amp; lm != iif.lm) {\n            iif.lm = lm\n            loadWasm (false)}})},\n      200)\n  } else loadWasm (true)\n\n} (window.iif = window.iif || {}))\n</code></pre>\n\n<p>The trade-off here is that we're using <code>HashMap</code> in the WASM which might increase the size unless <code>HashMap</code> is already required.</p>\n\n<p>An interesting alternative would be to use the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/Table\" rel=\"nofollow noreferrer\">tables</a> to share the (payload, length, capacity) triplet with the JavaScript and get it back when it is time to free the string. But I don't know how to use the tables yet.</p>\n\n<p>P.S. Sometimes we don't want to allocate the <code>Vec</code> in the first place.<br>\nIn this case we can move the memory tracking to JavaScript:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern \"C\" {\n    fn new_js_string(utf8: *const u8, len: i32) -&gt; i32;\n    fn console_log(js: i32);\n}\n\nfn rs2js(rs: &amp;str) -&gt; i32 {\n    assert!(rs.len() &lt; i32::max_value() as usize);\n    unsafe { new_js_string(rs.as_ptr(), rs.len() as i32) }\n}\n\n#[no_mangle]\npub fn start() {\n    unsafe {\n        console_log(rs2js(\"Hello again!\"));\n    }\n}\n</code></pre>\n\n<pre class=\"lang-js prettyprint-override\"><code>(function (iif) {\n  function loadWasm (cache) {\n    WebAssembly.instantiateStreaming (fetch ('main.wasm', {cache: cache ? \"default\" : \"no-cache\"}), {env: {\n      new_js_string: function (utf8, len) {\n        const view = new Uint8Array (iif.main.memory.buffer, utf8, len)\n        const utf8dec = new TextDecoder ('utf-8')\n        const decoded = utf8dec.decode (view)\n        let stringId = iif.lastStringId\n        while (typeof iif.strings[stringId] !== 'undefined') stringId += 1\n        if (stringId &gt; 2147483647) {  // Can't easily pass more than that through WASM.\n          stringId = -2147483648\n          while (typeof iif.strings[stringId] !== 'undefined') stringId += 1\n          if (stringId &gt; 2147483647) throw new Error ('Out of string IDs!')}\n        iif.strings[stringId] = decoded\n        return iif.lastStringId = stringId},\n      console_log: function (js) {\n        if (window.console) console.log ('main]', iif.strings[js])\n        delete iif.strings[js]}\n    }}) .then (results =&gt; {\n      iif.main = results.instance.exports\n      iif.main.start()})}\n\n  loadWasm (true)\n} (window.iif = window.iif || {strings: {}, lastStringId: 1}))\n</code></pre>\n"}], "owner": {"reputation": 22928, "user_id": 978690, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/lNUl6.png?s=128&g=1", "display_name": "rap-2-h", "link": "https://stackoverflow.com/users/978690/rap-2-h"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 7618, "favorite_count": 9, "accepted_answer_id": 47676844, "answer_count": 3, "score": 20, "last_activity_date": 1563042853, "creation_date": 1511866069, "last_edit_date": 1563042853, "question_id": 47529643, "link": "https://stackoverflow.com/questions/47529643/how-to-return-a-string-or-similar-from-rust-in-webassembly", "title": "How to return a string (or similar) from Rust in WebAssembly?", "body": "<p>I created a small Wasm file from this Rust code:</p>\n\n<pre><code>#[no_mangle]\npub fn hello() -&gt; &amp;'static str {\n    \"hello from rust\"\n}\n</code></pre>\n\n<p>It builds and the <code>hello</code> function can be called from JS:</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;body&gt;\n  &lt;script&gt;\n    fetch('main.wasm')\n    .then(response =&gt; response.arrayBuffer())\n    .then(bytes =&gt; WebAssembly.instantiate(bytes, {}))\n    .then(results =&gt; {\n      alert(results.instance.exports.hello());\n    });\n  &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>My problem is that the <code>alert</code> displays \"undefined\". If I return a <code>i32</code>, it works and displays the <code>i32</code>. I also tried to return a <code>String</code> but it does not work (it still displays \"undefined\").</p>\n\n<p>Is there a way to return a string from Rust in WebAssembly? What type should I use?</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1511862233, "post_id": 47528244, "comment_id": 82012871, "body": "Please post your project&#39;s Cargo.toml file."}, {"owner": {"reputation": 499, "user_id": 8550523, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6UROd.jpg?s=128&g=1", "display_name": "pepsighan", "link": "https://stackoverflow.com/users/8550523/pepsighan"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1511862971, "post_id": 47528244, "comment_id": 82013394, "body": "I also have <code>rlibs</code> in <code>target&#47;release&#47;deps</code>."}, {"owner": {"reputation": 3984, "user_id": 4121573, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/kxnXk.png?s=128&g=1", "display_name": "Adonis", "link": "https://stackoverflow.com/users/4121573/adonis"}, "edited": false, "score": 1, "creation_date": 1511871140, "post_id": 47528244, "comment_id": 82018919, "body": "I believe this &quot;bunch&quot; of other files are mainly used by <code>cargo</code> to avoid redoing operations on subsequent builds. For instance &quot;deps&quot; contains dependencies used for the build of the executable. And there are probably other metadatas of the project to allow cargo to do incremental builds instead of rebuilding everything everytime (e.g. .fingerprint folder). Unfortunately I&#39;m unable to locate any relevant doc on the topic"}], "answers": [{"comments": [{"owner": {"reputation": 3984, "user_id": 4121573, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/kxnXk.png?s=128&g=1", "display_name": "Adonis", "link": "https://stackoverflow.com/users/4121573/adonis"}, "edited": false, "score": 0, "creation_date": 1511885143, "post_id": 47533016, "comment_id": 82028699, "body": "Nice answer, just out of curiosity do you have a link to a documentation mentioning all this?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 3984, "user_id": 4121573, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/kxnXk.png?s=128&g=1", "display_name": "Adonis", "link": "https://stackoverflow.com/users/4121573/adonis"}, "edited": false, "score": 1, "creation_date": 1511885843, "post_id": 47533016, "comment_id": 82029155, "body": "@Adonis not really, but there&#39;s a bit of information in the source (which I&#39;ve now linked). I don&#39;t think that the specific file layout is considered a &quot;public API&quot;, so I wouldn&#39;t really expect public documentation."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 20, "last_activity_date": 1580755638, "last_edit_date": 1580755638, "creation_date": 1511876398, "answer_id": 47533016, "question_id": 47528244, "link": "https://stackoverflow.com/questions/47528244/which-files-from-the-target-directory-are-actually-required-by-the-executable/47533016#47533016", "title": "Which files from the target directory are actually required by the executable?", "body": "<blockquote>\n  <p>Which files from the target directory are actually required by the executable</p>\n</blockquote>\n\n<p>None of them, other than the executable itself. By default, Rust produces <strong>statically-linked binaries</strong>. </p>\n\n<p>The other files are merely build artifacts maintained by Cargo in order to make rebuilding your code more efficient. They include things like your dependencies.</p>\n\n<p>A non-exhaustive sampling of some of the files you might find:</p>\n\n<ul>\n<li><code>*.d</code> \u2014 Makefile-compatible dependency lists</li>\n<li><code>*.rlib</code> \u2014 Rust library files. Contain the compiled code of a dependency</li>\n<li><code>build</code> \u2014 Directories for build scripts to use as scratch space</li>\n<li><code>deps</code> \u2014 Your compiled dependencies</li>\n<li><code>examples</code> \u2014 Binaries from the <code>examples</code> directory</li>\n<li><code>incremental</code> \u2014 A directory for the incremental compilation cache</li>\n<li><code>*-{hash}</code> \u2014 Binaries from <code>cargo test</code></li>\n<li>executables \u2014 Your target binaries</li>\n</ul>\n\n<p>Some of this is documented <a href=\"https://github.com/rust-lang/cargo/blob/972b9f55a72e3eae21c826b2f806c753696ef2ec/src/cargo/core/compiler/layout.rs\" rel=\"nofollow noreferrer\">in the Cargo source code</a>.</p>\n"}], "owner": {"reputation": 499, "user_id": 8550523, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6UROd.jpg?s=128&g=1", "display_name": "pepsighan", "link": "https://stackoverflow.com/users/8550523/pepsighan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2130, "favorite_count": 1, "accepted_answer_id": 47533016, "answer_count": 1, "score": 14, "last_activity_date": 1580755638, "creation_date": 1511862036, "last_edit_date": 1511876251, "question_id": 47528244, "link": "https://stackoverflow.com/questions/47528244/which-files-from-the-target-directory-are-actually-required-by-the-executable", "title": "Which files from the target directory are actually required by the executable?", "body": "<p>After compiling my program 'zagir', the release folder has the size of more than 200MiB, which is ridiculous for the program I have written. So, I tried to check whether only the 'zagir' executable runs in isolation and it did.</p>\n\n<p>But the confusion is that, release folder also includes libzagir.rlib file along with .d files and a bunch of other folders.</p>\n\n<ol>\n<li>What exactly are they?  </li>\n<li>Are they really required?</li>\n<li>Am I going to get error during execution when those files are ignored?</li>\n<li>What are the files I should bundle for a complete executable?</li>\n</ol>\n\n<p><code>Cargo.toml</code></p>\n\n<pre><code>[package]\nauthors = [\"Sharad Chand\"]\nname = \"zagir\"\nversion = \"0.1.0\"\n\n[dependencies]\nbcrypt = \"0.1.3\"\ndotenv = \"0.10.1\"\nimage = \"0.17.0\"\nlog = \"0.3.8\"\nr2d2 = \"0.7.3\"\nr2d2-diesel = \"0.16.0\"\nrand = \"0.3.16\"\nrocket = \"0.3.2\"\nrocket_codegen = \"0.3.2\"\nserde = \"1.0.11\"\nserde_derive = \"1.0.11\"\nserde_json = \"1.0.2\"\nvalidator = \"0.6.0\"\nvalidator_derive = \"0.6.0\"\n\n[dependencies.bigdecimal]\nfeatures = [\"serde\"]\nversion = \"0.0.10\"\n\n[dependencies.chrono]\nfeatures = [\"serde\"]\nversion = \"0.4.0\"\n\n[dependencies.diesel]\nfeatures = [\n    \"mysql\",\n    \"chrono\",\n    \"unstable\",\n    \"numeric\",\n    \"huge-tables\",\n]\nversion = \"0.16.0\"\n\n[dependencies.diesel_codegen]\nfeatures = [\"mysql\"]\nversion = \"0.16.0\"\n\n[dependencies.rocket_contrib]\nfeatures = [\"handlebars_templates\"]\nversion = \"0.3.2\"\n\n[dependencies.uuid]\nfeatures = [\"v4\"]\nversion = \"0.4\"\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 1, "creation_date": 1511855034, "post_id": 47525802, "comment_id": 82008526, "body": "Have you seen the obligatory <a href=\"http://cglab.ca/~abeinges/blah/too-many-lists/book/\" rel=\"nofollow noreferrer\">Learning Rust With Entirely Too Many Linked Lists</a>?"}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1511855171, "post_id": 47525802, "comment_id": 82008603, "body": "<code>mem::replace</code> is simply a shorthand for assignment that also returns the old value. If you don&#39;t need the old value, you can use an assignment, <code>*self = None</code>. Since <code>self</code> does not refer to an option, neither the assignment nor <code>mem::replace</code> make sense, and they wouldn&#39;t make sense in other typed languages either (<code>*this = NULL</code> in C++ doesn&#39;t make sense, and neither does <code>this = null</code> in Java.)"}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 2, "creation_date": 1511861704, "post_id": 47525802, "comment_id": 82012543, "body": "@Jal, you&#39;ll have many more stumbling blocks down the road. For reference: <a href=\"https://play.rust-lang.org/?gist=ccbec2e7e38906ba7b3c84aa5eeef330&amp;version=stable\" rel=\"nofollow noreferrer\">this is what end result could be like</a>. Absence of bugs and stylistic perfection are not guarantied."}], "answers": [{"tags": [], "owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "is_accepted": false, "score": 0, "last_activity_date": 1511876752, "last_edit_date": 1511876752, "creation_date": 1511855281, "answer_id": 47526458, "question_id": 47525802, "link": "https://stackoverflow.com/questions/47525802/how-to-memreplace-self-with-an-option-if-the-type-of-self-is-not-option/47526458#47526458", "title": "How to mem::replace self with an Option if the type of self is not Option?", "body": "<p>You need to pass <code>tree: &amp;mut Option&lt;Self&gt;</code> instead of <code>&amp;mut self</code>; you cannot call it as a method anymore, but <code>Self::delete(left, value_to_delete)</code> should still work fine.</p>\n\n<p>Your current <code>Tree</code> type should probably be called <code>Node</code> - a <code>Tree</code> can consist of no node, and your current <code>Tree</code> always is at least one node.  You should then provide a <code>pub struct Tree(Option&lt;Node&gt;)</code>; <code>Option&lt;Node&gt;</code> wouldn't be very user friendly.</p>\n\n<blockquote>\n  <p>I feel like I am missing something important since both solutions should work in other language.</p>\n</blockquote>\n\n<p>Some languages pass objects always by a shared and nullable pointer.  In Rust you need to be explicit about this.</p>\n\n<p>Your comment <code>// This should never go here</code> in the second solution is simply a wrong assumption.  You could match <code>*left.take()</code> instead of <code>**left*, then</code>left` isn't borrowed (but empty; so you need to restore it if it shouldn't be).</p>\n\n<p>Given that borrow-checking is a rather unique feature it should be obvious that certain patterns don't work in Rust, even if they are safe and would work in other languages.</p>\n"}], "owner": {"reputation": 1674, "user_id": 5420686, "user_type": "registered", "accept_rate": 49, "profile_image": "https://www.gravatar.com/avatar/2c318e16c4b5f17dd1375df8cb1425e5?s=128&d=identicon&r=PG&f=1", "display_name": "Jal", "link": "https://stackoverflow.com/users/5420686/jal"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 380, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1511878000, "creation_date": 1511852779, "last_edit_date": 1511878000, "question_id": 47525802, "link": "https://stackoverflow.com/questions/47525802/how-to-memreplace-self-with-an-option-if-the-type-of-self-is-not-option", "title": "How to mem::replace self with an Option if the type of self is not Option?", "body": "<p>I am attempting to implementing <code>delete</code> for a binary tree:</p>\n\n<pre><code>#[derive(Debug)]\nstruct Binary_Tree&lt;T: PartialOrd + Clone&gt; {\n    left: Box&lt;Option&lt;Binary_Tree&lt;T&gt;&gt;&gt;,\n    value: T,\n    right: Box&lt;Option&lt;Binary_Tree&lt;T&gt;&gt;&gt;,\n}\n\nimpl&lt;T: PartialOrd + Clone&gt; Binary_Tree&lt;T&gt; {\n    fn new(value: T) -&gt; Binary_Tree&lt;T&gt; {\n        Binary_Tree {\n            left: Box::new(None),\n            value: value,\n            right: Box::new(None),\n        }\n    }\n\n    fn delete(&amp;mut self, value_to_delete: T) -&gt; bool {\n        use std::mem;\n        match self {\n            &amp;mut Binary_Tree {\n                ref mut left,\n                ref mut value,\n                ref mut right,\n            } =&gt; if value_to_delete &lt; *value {\n                if let None = **left {\n                    return false;\n                } else {\n                    return (**left).as_mut().unwrap().delete(value_to_delete);\n                }\n            } else if value_to_delete &gt; *value {\n                if let None = **right {\n                    return false;\n                } else {\n                    return (**right).as_mut().unwrap().delete(value_to_delete);\n                }\n            } else {\n                if let Some(ref mut left_content) = **left {\n                    *value = (*left_content).value.clone();\n                    let temp = (*left_content).value.clone();\n                    return (*left_content).delete(temp);\n                } else if let Some(ref mut right_content) = **right {\n                    *value = (*right_content).value.clone();\n                    let temp = (*right_content).value.clone();\n                    return (*right_content).delete(temp);\n                } else {\n                    mem::replace(self, None);\n                    return true;\n                }\n            },\n        }\n    }\n}\n</code></pre>\n\n<p>The place that is causing trouble is <code>mem::replace(self, None);</code> since <code>self</code> is of <code>Binary_Tree</code> type and not <code>Option</code>.</p>\n\n<p>I implemented another solution but it ran into other issues as well:</p>\n\n<pre><code>fn delete(&amp;mut self, value_to_delete: T) -&gt; bool {\n    match self {\n        &amp;mut Binary_Tree {\n            ref mut left,\n            ref mut value,\n            ref mut right,\n        } =&gt; {\n            if value_to_delete &lt; *value {\n                if let None = **left {\n                    return false;\n                } else {\n                    return (**left).as_mut().unwrap().delete(value_to_delete);\n                }\n            } else if value_to_delete &gt; *value {\n                if let None = **right {\n                    return false;\n                } else {\n                    return (**right).as_mut().unwrap().delete(value_to_delete);\n                }\n            } else {\n                if let Some(ref mut left_content) = **left {\n                    *value = (*left_content).value.clone();\n                    let temp = (*left_content).value.clone();\n\n                    if let None = *left_content.left {\n                        if let None = *left_content.right {\n                            //**left = None;\n                            return true;\n                        } else {\n                            return (*left_content).delete(temp);\n                        }\n                    } else {\n                        return (*left_content).delete(temp);\n                    }\n                } else if let Some(ref mut right_content) = **right {\n                    *value = (*right_content).value.clone();\n                    let temp = (*right_content).value.clone();\n\n                    if let None = *right_content.left {\n                        if let None = *right_content.right {\n                            //**right = None;\n                            return true;\n                        } else {\n                            return (*right_content).delete(temp);\n                        }\n                    } else {\n                        return (*right_content).delete(temp);\n                    }\n                } else {\n                    // This should never go here\n                    return true;\n                }\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>The problem with this solution is that both <code>**right = None;</code> and <code>**left = None;</code> are borrowed out to do checks.</p>\n\n<p>I feel like I am missing something important since both solutions should work in other language.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 5308, "user_id": 4038191, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/10ec10e81b5315fe2147c38bf3e15e9e?s=128&d=identicon&r=PG", "display_name": "EvilTak", "link": "https://stackoverflow.com/users/4038191/eviltak"}, "edited": false, "score": 1, "creation_date": 1511845679, "post_id": 47523675, "comment_id": 82004824, "body": "The <code>std::op</code> traits aren&#39;t a particularly good example of using move semantics (<code>self</code>) over references (<code>&amp;self</code>) since most (if not all) types implementing them derive <code>Copy</code> and use copy semantics over move semantics. A better example would be an <code>into</code> conversion like <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.into_boxed_slice\" rel=\"nofollow noreferrer\"><code>Vec::into_boxed_slice</code></a>. For your <code>Point</code> structure, you could use a <code>Point</code> to tuple conversion like <code>fn into_tuple(self) -&gt; (i32, i32) { (self.x, self.y) }</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 5308, "user_id": 4038191, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/10ec10e81b5315fe2147c38bf3e15e9e?s=128&d=identicon&r=PG", "display_name": "EvilTak", "link": "https://stackoverflow.com/users/4038191/eviltak"}, "edited": false, "score": 1, "creation_date": 1511877498, "post_id": 47523675, "comment_id": 82023216, "body": "@EvilTak I disagree about your dismissal of <code>std::ops::*</code>. Taking by value allows types to reuse existing memory. For example, <code>String</code> and <code>Vec</code> both implement <code>Add</code>."}], "tags": [], "owner": {"reputation": 5469, "user_id": 7083401, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/eA15o.png?s=128&g=1", "display_name": "ice1000", "link": "https://stackoverflow.com/users/7083401/ice1000"}, "is_accepted": true, "score": 2, "last_activity_date": 1511846156, "last_edit_date": 1511846156, "creation_date": 1511840898, "answer_id": 47523675, "question_id": 47523626, "link": "https://stackoverflow.com/questions/47523626/when-to-pass-self-as-a-reference-for-methods/47523675#47523675", "title": "When to pass self as a reference for methods?", "body": "<p>Don't think too much. If we <strong>ignore subtyping polymorphism</strong>, we can tread all the object-oriented style \"method invocation\" as a \"function invocation\", by converting <code>a.b(c)</code> into <code>b(a, c)</code> inside your brain.</p>\n\n<p>So, since you have</p>\n\n<pre><code>struct Test { }\nimpl Test { fn my_method(&amp;self) { } }\n</code></pre>\n\n<p><code>my_method</code> is simply a function that takes one argument, and when you invoke it like <code>testInstance.my_method()</code>, it's actually <code>my_method(testInstance)</code>, and <code>testInstance</code> is passed as <code>self</code>.</p>\n\n<p>So <strong>it's all the same with other functions.</strong><br>\nThink about when do you want a simple function parameter not to be a reference, and that's the question to your answer.</p>\n\n<h2>Example</h2>\n\n<p>for <code>std::vec::Vec</code>:</p>\n\n<pre><code>fn into_boxed_slice(self) -&gt; Box&lt;[T]&gt;\n</code></pre>\n"}], "owner": {"reputation": 1785, "user_id": 1932934, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/73ceb0d823c0168b55045d7ffaaf2364?s=128&d=identicon&r=PG", "display_name": "Taztingo", "link": "https://stackoverflow.com/users/1932934/taztingo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 735, "favorite_count": 1, "accepted_answer_id": 47523675, "answer_count": 1, "score": 2, "last_activity_date": 1511877333, "creation_date": 1511840462, "last_edit_date": 1511877333, "question_id": 47523626, "link": "https://stackoverflow.com/questions/47523626/when-to-pass-self-as-a-reference-for-methods", "title": "When to pass self as a reference for methods?", "body": "<p>I understand the ownership differences that come with passing by value vs passing by reference, but I'm struggling with this when passing around <code>self</code>. When do I want <code>self</code> to not be a reference?</p>\n\n<pre><code>struct Test {}\n\nimpl Test {\n    fn my_method(&amp;self) {}\n}\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": false, "score": 6, "last_activity_date": 1549595659, "last_edit_date": 1549595659, "creation_date": 1511799652, "answer_id": 47515427, "question_id": 47514930, "link": "https://stackoverflow.com/questions/47514930/what-are-the-differences-between-an-impl-trait-argument-and-generic-function-par/47515427#47515427", "title": "What are the differences between an impl trait argument and generic function parameter?", "body": "<p>Both produce identical assembly, at least with the following simple test case:</p>\n\n<pre><code>trait Foo {}\n\nstruct Bar;\n\nimpl Foo for Bar {}\n\nfn func1(_: impl Foo) {}\n\nfn func2&lt;T: Foo&gt;(_: T) {}\n\nfn main() {\n    let x = Bar;\n\n    let y = func1(x); // or func2(x);\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1511800867, "post_id": 47515540, "comment_id": 81987406, "body": "Hm, thanks. I did not read the RFC; I only saw the link to the github issue from &quot;this week in Rust&quot;."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1511808225, "post_id": 47515540, "comment_id": 81991581, "body": "@Boiethios RFCs, even merged RFCs, aren&#39;t always accurate to the current version of Rust -- they may be not-yet-implemented, implemented-with-changes, or superseded -- so it&#39;s still a fair question. However, in this case the RFC is accurate."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1511808333, "post_id": 47515540, "comment_id": 81991634, "body": "(When changes have been made since the RFC was merged, you&#39;d hope to find that in the tracking issue for the RFC.)"}], "tags": [], "owner": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "is_accepted": true, "score": 18, "last_activity_date": 1549595522, "last_edit_date": 1549595522, "creation_date": 1511799999, "answer_id": 47515540, "question_id": 47514930, "link": "https://stackoverflow.com/questions/47514930/what-are-the-differences-between-an-impl-trait-argument-and-generic-function-par/47515540#47515540", "title": "What are the differences between an impl trait argument and generic function parameter?", "body": "<p><code>impl Trait</code>s as function arguments are desugared to an anonymous generic parameter. See the <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1951-expand-impl-trait.md#the-proposal-in-a-nutshell\" rel=\"noreferrer\">RFC</a>, which says:</p>\n\n<blockquote>\n  <p>Expand <code>impl Trait</code> to allow use in arguments, where it behaves like an anonymous generic parameter.</p>\n</blockquote>\n\n<p>There's also an example in the RFC:</p>\n\n<pre><code>// These two are equivalent\nfn map&lt;U&gt;(self, f: impl FnOnce(T) -&gt; U) -&gt; Option&lt;U&gt;\nfn map&lt;U, F&gt;(self, f: F) -&gt; Option&lt;U&gt; where F: FnOnce(T) -&gt; U\n</code></pre>\n\n<p>However, one difference is that <code>impl Trait</code> arguments cannot have their types explicitly specified:</p>\n\n<pre><code>fn foo&lt;T: Trait&gt;(t: T)\nfn bar(t: impl Trait)\n\nfoo::&lt;u32&gt;(0) // this is allowed\nbar::&lt;u32&gt;(0) // this is not\n</code></pre>\n\n<p>The <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1951-expand-impl-trait.md#motivation-for-expanding-to-argument-position\" rel=\"noreferrer\">Motivation for expanding to argument position</a> section explains why additional syntax was added for an existing feature. In short, it's for having similar syntax as <code>impl</code> traits in function return position, which improves learnability, and to improve ergonomics.</p>\n"}], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2057, "favorite_count": 4, "accepted_answer_id": 47515540, "answer_count": 2, "score": 22, "last_activity_date": 1549595659, "creation_date": 1511798022, "last_edit_date": 1549595393, "question_id": 47514930, "link": "https://stackoverflow.com/questions/47514930/what-are-the-differences-between-an-impl-trait-argument-and-generic-function-par", "title": "What are the differences between an impl trait argument and generic function parameter?", "body": "<p><a href=\"https://doc.rust-lang.org/edition-guide/rust-2018/trait-system/impl-trait-for-returning-complex-types-with-ease.html\" rel=\"noreferrer\"><code>impl Trait</code>s can be used as function arguments</a>. Are there differences between this and a generic function with a trait constraint?</p>\n\n<pre><code>trait Foo {}\n\nfn func1(_: impl Foo) {}\n\nfn func2&lt;T: Foo&gt;(_: T) {}\n</code></pre>\n"}, {"tags": ["rust", "lifetime"], "owner": {"reputation": 594, "user_id": 605455, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/03f0f7ff3c3e5b38f27360a6443624e9?s=128&d=identicon&r=PG", "display_name": "bombela", "link": "https://stackoverflow.com/users/605455/bombela"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 40, "favorite_count": 0, "closed_date": 1511768878, "answer_count": 0, "score": 1, "last_activity_date": 1511763123, "creation_date": 1511763123, "question_id": 47504915, "link": "https://stackoverflow.com/questions/47504915/how-to-store-stdin-lock-guard-inside-struct", "closed_reason": "Duplicate", "title": "How to store stdin.lock() guard inside struct", "body": "<p>Here I have a working example. I take a new <code>stdin</code> handle in main. I pass it to the function parse_something. In this function <code>stdin.lock()</code> returns a lockguard which I store into a struct that is finally returned. Picture the struct being some sort of iterator. And I would like this iterator to keep <code>stdin</code> locked as long as it is live. So far so good. The lockguard is linked to the lifetime <code>'a</code>. Which started at the new <code>stdin</code> handle in main.</p>\n\n<pre><code>use std::io::BufRead;\n\nstruct SomeIterator&lt;B: BufRead&gt; {\n    buffer: B,\n}\n\nfn parse_something&lt;'a&gt;(stdin: &amp;'a std::io::Stdin) -&gt; SomeIterator&lt;std::io::StdinLock&lt;'a&gt;&gt; {\n    let r = SomeIterator {\n        buffer: stdin.lock(),\n    };\n    r\n}\n\nfn main() {\n    let stdin = std::io::stdin();\n    parse_something(&amp;stdin);\n}\n</code></pre>\n\n<p>Let's now try to move the <code>stdin</code> handle instantiation inside the <code>parse_something</code> function.</p>\n\n<pre><code>use std::io::BufRead;\n\nstruct SomeIterator&lt;B: BufRead&gt; {\n    buffer: B,\n}\n\nfn parse_something&lt;'a&gt;() -&gt; SomeIterator&lt;std::io::StdinLock&lt;'a&gt;&gt; {\n    let stdin = std::io::stdin();\n    let r = SomeIterator {\n        buffer: stdin.lock(),\n    };\n    r\n}\n\nfn main() {\n    parse_something();\n}\n</code></pre>\n\n<p>I get the error <code>error[E0597]: `stdin` does not live long enough</code>. So far so good. stdin must live as long as <code>'a</code>. And for that, I should probably store the stdin handler inside <code>SomeIterator</code>.</p>\n\n<p>The catch is I also must take a <code>.lock()</code> on the <code>stdin</code> handle with the same lifetime <code>'a</code>. I cannot figure out how.</p>\n\n<p>This doesn't work because the lockguard references the <code>let stdin</code> variable, not on the (eventually moved) <code>stdin</code> attribute within <code>SomeIterator</code>.</p>\n\n<pre><code>struct SomeIterator&lt;B: BufRead&gt; {\n    stdin: std::io::Stdin,\n    buffer: B,\n}\n\nfn parse_something&lt;'a&gt;() -&gt; SomeIterator&lt;std::io::StdinLock&lt;'a&gt;&gt; {\n    let stdin = std::io::stdin();\n    let guard = stdin.lock();\n    let r = SomeIterator {\n        stdin: stdin,\n        buffer: guard,\n    };\n    r\n}\n</code></pre>\n\n<p>Eventually, I went all in, and added some random crap in the hope that perhaps I get lucky and stumble on the solution. No luck though. Here, I put <code>stdin</code> in a box. Technically, the content of the box should never be moving around in memory. Only the box \"pointer object\" is. I would hope that <code>r.stdin.lock()</code> actually uses the lifetime of the content within the Box. Which should be <code>'a</code> since the Box is part of <code>SomeIterator</code> which itself is generic over <code>'a</code>.</p>\n\n<p>Sadly everything goes to shit when <code>r.stdin.lock()</code> actually borrows <code>r.stdin</code> before calling <code>.lock()</code>. This borrow only last for the scope of the function. <code>`*r.stdin` does not live long enough</code> hits hard.</p>\n\n<pre><code>struct SomeIterator&lt;'a, B: BufRead + 'a&gt; {\n    stdin: Box&lt;std::io::Stdin&gt;,\n    buffer: Option&lt;B&gt;,\n    _marker: std::marker::PhantomData&lt;&amp;'a B&gt;,\n}\n\nfn parse_something&lt;'a&gt;() -&gt; SomeIterator&lt;'a, std::io::StdinLock&lt;'a&gt;&gt; {\n    let mut r = SomeIterator {\n        stdin: Box::new(std::io::stdin()),\n        buffer: None,\n        _marker: std::marker::PhantomData{},\n    };\n    r.buffer = Some(r.stdin.lock());\n    r\n}\n</code></pre>\n\n<p>I suspect that after weeding out the details, my question ultimately becomes: is it possible in safe Rust to store a reference to a sibling attribute? But I could be wrong.</p>\n"}, {"tags": ["arrays", "rust"], "comments": [{"owner": {"reputation": 49065, "user_id": 13422, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/94b309d78a1253a334e9b82643a8dc97?s=128&d=identicon&r=PG", "display_name": "Zan Lynx", "link": "https://stackoverflow.com/users/13422/zan-lynx"}, "edited": false, "score": 1, "creation_date": 1511746773, "post_id": 47502831, "comment_id": 81961588, "body": "Check the machine code first. I know C and C++ compilers will remove writes that are overwritten by other writes, if it can see the code."}], "answers": [{"comments": [{"owner": {"reputation": 1109, "user_id": 1772476, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/bc3dd034928abd20bb22de44a4846c93?s=128&d=identicon&r=PG", "display_name": "Timidger", "link": "https://stackoverflow.com/users/1772476/timidger"}, "edited": false, "score": 1, "creation_date": 1511975717, "post_id": 47503312, "comment_id": 82074052, "body": "By making <code>buf</code> uninitialized, wouldn&#39;t there be a possibility of buf being freed while still being uninitialized memory (which is UB)? E.g if <code>read_exact</code> failed before writing anything into it, either from a panic or returning an error. If so, I don&#39;t think it should be included in this answer without a disclaimer."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1109, "user_id": 1772476, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/bc3dd034928abd20bb22de44a4846c93?s=128&d=identicon&r=PG", "display_name": "Timidger", "link": "https://stackoverflow.com/users/1772476/timidger"}, "edited": false, "score": 0, "creation_date": 1512100677, "post_id": 47503312, "comment_id": 82130495, "body": "@Timidger fair point \u2014 whenever I see <code>unsafe</code> I treat the code with extreme suspicion, but having an explicit warning is always smart. In this case, I do believe it to be safe for the reasons I&#39;ve added."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1512100605, "last_edit_date": 1512100605, "creation_date": 1511751171, "answer_id": 47503312, "question_id": 47502831, "link": "https://stackoverflow.com/questions/47502831/is-an-array-required-to-be-initialized-if-i-will-read-file-contents-into-it/47503312#47503312", "title": "Is an array required to be initialized if I will read file contents into it?", "body": "<p>Yes, such an initialization is required in safe Rust. The compiler isn't necessarily able to tell that the <em>combination</em> of <code>read_exact</code> <strong>and</strong> <code>?</code> will prevent accesses to any uninitialized data from the array. The optimizing passes may make it better, but that cannot be counted on to work.</p>\n\n<p>You could instead read into a <code>Vec</code>, which internally guarantees to never allow access to the uninitialized memory:</p>\n\n<pre><code>fn parse&lt;R: Read&gt;(r: &amp;mut R) -&gt; io::Result&lt;()&gt; {\n    let mut buf = vec![]; // Can optionally use `Vec::with_capacity`\n    r.take(1024).read_to_end(&amp;mut buf)?;\n    // Do things to buf\n    Ok(())\n}\n</code></pre>\n\n<hr>\n\n<p>In unsafe Rust, you can use <code>mem::uninitialized</code>. Make sure you understand all the terrible little nuances involved before choosing such a situation! Reading uninitialized memory is undefined behavior in Rust, so <strong>you</strong> must make absolutely sure that you prevent it from ever happening.</p>\n\n<p>Here, we rely on:</p>\n\n<ol>\n<li>The fact that <code>read_exact</code> will return an error if it didn't populate all of the bytes.</li>\n<li>The fact that the <em>destructor</em> of <code>[u8; 1024]</code> will not read the bytes. This is important path to consider when an error occurs or if a panic is raised.</li>\n</ol>\n\n\n\n<pre><code>fn parse&lt;R: Read&gt;(r: &amp;mut R) -&gt; io::Result&lt;()&gt; {\n    unsafe {\n        let mut buf: [u8; 1024] = mem::uninitialized();\n        r.read_exact(&amp;mut buf)?;\n        // Do things to buf\n    }\n    Ok(())\n}\n</code></pre>\n\n<p>I wouldn't think this is would be worth it without heavy profiling.</p>\n"}, {"tags": [], "owner": {"reputation": 841, "user_id": 2272506, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/37d910c6f729897b6af6fa867a794001?s=128&d=identicon&r=PG", "display_name": "Jesin", "link": "https://stackoverflow.com/users/2272506/jesin"}, "is_accepted": false, "score": 3, "last_activity_date": 1511753163, "last_edit_date": 1511753163, "creation_date": 1511751852, "answer_id": 47503386, "question_id": 47502831, "link": "https://stackoverflow.com/questions/47502831/is-an-array-required-to-be-initialized-if-i-will-read-file-contents-into-it/47503386#47503386", "title": "Is an array required to be initialized if I will read file contents into it?", "body": "<p>There is currently no way to do this with <code>read_exact</code> in Rust outside of <code>unsafe</code> blocks. However, you can probably get what you want in this particular case by <a href=\"https://doc.rust-lang.org/std/io/struct.BufReader.html#method.with_capacity\" rel=\"nofollow noreferrer\">using <code>std::io::BufReader::with_capacity</code></a> instead of allocating your own <code>mut [u8]</code>.</p>\n\n<p>If you don't care about being able to set the buffer length yourself, you could have your function require <a href=\"https://doc.rust-lang.org/std/io/trait.BufRead.html\" rel=\"nofollow noreferrer\">the <code>std::io::BufRead</code> trait</a> for its argument instead of <code>Read</code>.</p>\n\n<p>Either of the approaches I mentioned will allow you to use <code>fill_buf</code> and <code>consume</code> instead of <code>read_exact</code>, which should give you the performance you want.</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user8370684"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 657, "favorite_count": 1, "accepted_answer_id": 47503312, "answer_count": 2, "score": 5, "last_activity_date": 1512100605, "creation_date": 1511746242, "last_edit_date": 1511750052, "question_id": 47502831, "link": "https://stackoverflow.com/questions/47502831/is-an-array-required-to-be-initialized-if-i-will-read-file-contents-into-it", "title": "Is an array required to be initialized if I will read file contents into it?", "body": "<p>I am initializing <code>buf</code> unnecessarily with all zeros before immediately writing over its contents with <code>read_exact</code>:</p>\n\n<pre><code>fn parse&lt;R: Read&gt;(r: &amp;mut R) -&gt; Result&lt;()&gt; {\n    let mut buf = [0u8; 1024];\n    r.read_exact(&amp;mut buf)?;\n    // Do things to buf\n    Ok(true)\n}\n</code></pre>\n\n<p>While I don't think the 0-initialization is very time-consuming, it doesn't seem necessary. Is there a way around this?</p>\n"}, {"tags": ["git", "rust"], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 4, "last_activity_date": 1511739627, "creation_date": 1511739627, "answer_id": 47502215, "question_id": 47500612, "link": "https://stackoverflow.com/questions/47500612/how-to-check-if-head-is-tagged/47502215#47502215", "title": "How to check if HEAD is tagged", "body": "<p><code>HEAD</code> usually doesn't refer to a tag; it refers to another ref (e.g. <code>refs/heads/master</code>), which refers to a commit, which refers to a tree.</p>\n\n<p><em>Peeling</em>, as I understand it, is the process of dereferencing objects referenced by other objects or by references. However, since <code>HEAD</code> doesn't refer to a tag, you can't peel <code>HEAD</code> and expect to obtain a tag.</p>\n\n<hr>\n\n<p>Git has two separate notions of <em>tags</em>. <em>Tag references</em> are just references under <code>refs/tags/</code>. <em>Annotated tags</em> are objects in the Git database, just like commits, trees and blobs are. Tag references can refer to any kind of object, but usually they'll refer to either commits or tag objects.</p>\n\n<p>Whether you're after annotated tags or just any kind of tag, the first step is the same: you have to iterate on the references in <code>refs/tags/</code> and check if any of them peels to the same commit as <code>HEAD</code> peels to. If you're interested in annotated tags specifically, you can check if the tag reference peels to a tag object.</p>\n"}, {"comments": [{"owner": {"reputation": 10672, "user_id": 321731, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/88e60659e997d36af3ff348b3251e1a6?s=128&d=identicon&r=PG", "display_name": "tshepang", "link": "https://stackoverflow.com/users/321731/tshepang"}, "edited": false, "score": 0, "creation_date": 1511770401, "post_id": 47502432, "comment_id": 81968431, "body": "why choice of BTreeMap, instead of HashMap"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 10672, "user_id": 321731, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/88e60659e997d36af3ff348b3251e1a6?s=128&d=identicon&r=PG", "display_name": "tshepang", "link": "https://stackoverflow.com/users/321731/tshepang"}, "edited": false, "score": 1, "creation_date": 1511788400, "post_id": 47502432, "comment_id": 81979315, "body": "@Tshepang because only <code>BTreeMap</code> compiles. Try it for yourself."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1511789672, "last_edit_date": 1511789672, "creation_date": 1511741924, "answer_id": 47502432, "question_id": 47500612, "link": "https://stackoverflow.com/questions/47500612/how-to-check-if-head-is-tagged/47502432#47502432", "title": "How to check if HEAD is tagged", "body": "<p>As <a href=\"https://stackoverflow.com/a/47502215/155423\">Francis Gagn\u00e9 says</a>, you can't get to a tag from a commit \u2014 you have to go the other way. Additionally, there can be multiple tags for a commit. The appropriate data structure is a mapping of commit references to a list of tag references:</p>\n\n<pre><code>extern crate git2;\n\nuse std::collections::BTreeMap;\nuse git2::Repository;\n\nfn main() {\n    let repo = Repository::open(\"/tmp/foo\").unwrap();\n    let tag_names = repo.tag_names(None).unwrap();\n\n    let tag_and_refs = tag_names.iter()\n        .flat_map(|name| name)\n        .flat_map(|name| {\n            let full_tag = format!(\"refs/tags/{}\", name);\n            repo.find_reference(&amp;full_tag).map(|reference| (name, reference))\n        });\n\n    let mut refs_to_tags = BTreeMap::new();\n    for (name, reference) in tag_and_refs {\n        refs_to_tags.entry(reference).or_insert_with(Vec::new).push(name);\n    }\n\n    let git_ref = repo.head().unwrap();\n\n    let tags = &amp;refs_to_tags[&amp;git_ref];\n    println!(\"tags for HEAD: {:?}\", tags);\n}\n</code></pre>\n\n<p>This only handles lightweight tags, which is what your example uses.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/19808208/155423\">What&#39;s the fastest way to find Tags pointing to Commits?</a></li>\n</ul>\n"}], "owner": {"reputation": 10672, "user_id": 321731, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/88e60659e997d36af3ff348b3251e1a6?s=128&d=identicon&r=PG", "display_name": "tshepang", "link": "https://stackoverflow.com/users/321731/tshepang"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 383, "favorite_count": 0, "accepted_answer_id": 47502432, "answer_count": 2, "score": 1, "last_activity_date": 1511789672, "creation_date": 1511727368, "last_edit_date": 1511728683, "question_id": 47500612, "link": "https://stackoverflow.com/questions/47500612/how-to-check-if-head-is-tagged", "title": "How to check if HEAD is tagged", "body": "<p>Here is an example of what I tried:</p>\n\n<pre><code>cd /tmp\ncargo new --bin foo\ncd foo\ncat &gt; src/main.rs &lt;&lt; EOF\nextern crate git2;\n\nuse git2::{Repository, ObjectType};\n\nfn main() {\n    let repo = Repository::open(\"/tmp/foo\").unwrap();\n    let git_ref = repo.head().unwrap();\n    git_ref.peel(ObjectType::Tag).unwrap();\n}\nEOF\ncargo add git2\ngit add .\ngit commit --message \"foo\"\ngit tag foo\ncargo run\n</code></pre>\n\n<p>I get a panic:</p>\n\n<blockquote>\n  <p>thread 'main' panicked at 'called <code>Result::unwrap()</code> on an <code>Err</code> value: Error { code: -12, klass: 11, message: \"the git_object of id \\'33030777b0a6b61f631be64c3f1cb7d66b8f3082\\' can not be successfully peeled into a tag (git_otype=4).\" }', /checkout/src/libcore/result.rs:906:4</p>\n</blockquote>\n\n<p>What am I missing?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 871364, "user_id": 157247, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/4HovX.jpg?s=128&g=1", "display_name": "T.J. Crowder", "link": "https://stackoverflow.com/users/157247/t-j-crowder"}, "edited": false, "score": 0, "creation_date": 1511707730, "post_id": 47497325, "comment_id": 81949961, "body": "Um....doesn&#39;t your question answer itself? I don&#39;t know Rust, but you&#39;re using <code>std::io::Error</code> in <code>utils.rs</code> and the error is telling you the compiler doesn&#39;t know what that is without the <code>using std;</code>. Presumably <code>using std;</code> would tell it what that is, vaguely like <code>include</code> in C and C++, <code>import</code> in Java, etc. So....?"}, {"owner": {"reputation": 8871, "user_id": 1132871, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/IO6V2.jpg?s=128&g=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/1132871/alex"}, "reply_to_user": {"reputation": 871364, "user_id": 157247, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/4HovX.jpg?s=128&g=1", "display_name": "T.J. Crowder", "link": "https://stackoverflow.com/users/157247/t-j-crowder"}, "edited": false, "score": 0, "creation_date": 1511707770, "post_id": 47497325, "comment_id": 81949982, "body": "Not really, I don&#39;t need to do this in <code>main.rs</code>"}, {"owner": {"reputation": 871364, "user_id": 157247, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/4HovX.jpg?s=128&g=1", "display_name": "T.J. Crowder", "link": "https://stackoverflow.com/users/157247/t-j-crowder"}, "edited": false, "score": 0, "creation_date": 1511707806, "post_id": 47497325, "comment_id": 81949995, "body": "Look at your (second) <code>main.rs</code>: Where do you see <code>std::io::Error</code>? (Or anything else from <code>std</code>?) Answer: You don&#39;t. :-) So the compiler doesn&#39;t need to know what it is when compiling <code>main.rs</code>."}], "owner": {"reputation": 8871, "user_id": 1132871, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/IO6V2.jpg?s=128&g=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/1132871/alex"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 78, "favorite_count": 0, "closed_date": 1511707986, "answer_count": 0, "score": 0, "last_activity_date": 1511707999, "creation_date": 1511707450, "last_edit_date": 1511707999, "question_id": 47497325, "link": "https://stackoverflow.com/questions/47497325/why-do-i-need-to-use-std-in-a-module-but-not-at-the-root-of-my-crate", "closed_reason": "Duplicate", "title": "Why do I need to &quot;use std&quot; in a module but not at the root of my crate?", "body": "<p>I have the following code in <code>main.rs</code></p>\n\n<pre><code>fn util_function() -&gt; Result&lt;String, std::io::Error&gt; {\n    Ok(String::from(\"OK\"))\n}\n\nfn main() {\n    let a = util_function().unwrap();\n}\n</code></pre>\n\n<p>I split <code>main.rs</code> into two files:</p>\n\n<pre><code>// util.rs\nfn util_function() -&gt; Result&lt;String, std::io::Error&gt; {\n    Ok(String::from(\"OK\"))\n}\n</code></pre>\n\n<p>and</p>\n\n<pre><code>// main.rs\n\nmod util;\n\nfn main() {\n    let a = util::util_function().unwrap();\n}\n</code></pre>\n\n<p>The problem that <code>util.rs</code> has a compilation error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>pub fn util_function(mut stream: &amp;TcpStream) -&gt; Result&lt;String, std::io::Error&gt; {\n  |                                                            ^^^ Use of     undeclared type or module `std`\n</code></pre>\n\n<p>So why should I add <code>using std;</code> to the <code>utils.rs</code> while it is not necessary in <code>main.rs</code>?</p>\n"}, {"tags": ["if-statement", "rust", "ownership"], "owner": {"reputation": 21, "user_id": 5478646, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-eVEQXoGuimM/AAAAAAAAAAI/AAAAAAAAAEk/sYXFWAAXfMM/photo.jpg?sz=128", "display_name": "Shantanu Rahman", "link": "https://stackoverflow.com/users/5478646/shantanu-rahman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 102, "favorite_count": 0, "closed_date": 1511707777, "answer_count": 0, "score": 2, "last_activity_date": 1511707868, "creation_date": 1511702497, "last_edit_date": 1511707868, "question_id": 47496601, "link": "https://stackoverflow.com/questions/47496601/cant-move-out-of-borrowed-content-using-unwrap-in-if-statement", "closed_reason": "Duplicate", "title": "Can&#39;t move out of borrowed content using unwrap in if statement", "body": "<p>I am trying to write an interpreter in Rust. I am new to Rust but not new to programming and have some acquaintance with Python. I am trying to translate this piece of Python code to Rust.</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>def eat(self, token_type):\n    # compare the current token type with the passed token\n    # type and if they match then \"eat\" the current token\n    # and assign the next token to the self.current_token,\n    # otherwise raise an exception.\n    if self.current_token.type == token_type:\n        self.current_token = self.get_next_token()\n    else:\n        print(\"Mismatched types!\")\n</code></pre>\n\n<p>And my Rust code is</p>\n\n<pre><code>/// The structs and enums\n#[derive(Debug, Eq, PartialEq)]\nenum TokenType {\n    INTEGER,\n    PLUS,\n    EOF,\n}\n\n#[derive(Debug, Eq, PartialEq)]\nstruct Token {\n    ttype: TokenType,\n    value: Option&lt;char&gt;,\n}\n\n#[derive(Debug)]\nstruct Interpreter {\n    text: String,\n    pos: usize,\n    current_token: Option&lt;Token&gt;,\n}\n\nimpl Interpreter {\n    pub fn get_next_token(&amp;mut self) -&gt; Option&lt;Token&gt; {\n        // lexing, parsing, tokenizing\n    }\n\n\n    // The code I wrote for `eat`\n    pub fn eat(&amp;mut self, ttype: TokenType) {\n        if self.current_token.unwrap().ttype == ttype {\n        // ^^^ can't move out of borrowed content\n            self.current_token = self.get_next_token();\n        } else {\n            // Some error handling\n        }\n     }\n }\n</code></pre>\n\n<p>It didn't work because <code>if</code> <em>moves</em> the value of the borrowed content (the compiler says so). How can I avoid this situation? Why <code>if</code> has to <em>move</em> the value?</p>\n"}, {"tags": ["generics", "rust"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 1, "creation_date": 1511663733, "post_id": 47492192, "comment_id": 81940300, "body": "Why does this need to be stored in a <code>Vec</code>? That seems to be the core of the conflict here. <code>Vec</code> is by definition a list of items with the same type, making it a bad fit for what you want."}, {"owner": {"reputation": 4096, "user_id": 2056979, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/pg0MQ.jpg?s=128&g=1", "display_name": "Keatinge", "link": "https://stackoverflow.com/users/2056979/keatinge"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1511664495, "post_id": 47492192, "comment_id": 81940385, "body": "@loganfsmyth What other type of collection could I use? I want a struct to have a collection of functions"}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 1, "creation_date": 1511664700, "post_id": 47492192, "comment_id": 81940411, "body": "If your goal is to create a chain of functions that feed together, you could for instance return a new function that composes the two functions together, avoiding the collection entirely. A collection is not a good data structure for a composed chain of functions. If your goal is to take the collection and call each function in order, better to just make the structure store an function that will call the chain, so the struct would just know the input and output type of the full chain."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1511666607, "post_id": 47492192, "comment_id": 81940642, "body": "<i>from any type to any other type</i> \u2014 And what happens when the output <b>doesn&#39;t</b> match the subsequent input?"}, {"owner": {"reputation": 4096, "user_id": 2056979, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/pg0MQ.jpg?s=128&g=1", "display_name": "Keatinge", "link": "https://stackoverflow.com/users/2056979/keatinge"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1511668610, "post_id": 47492192, "comment_id": 81940962, "body": "@loganfsmyth The reason I can&#39;t use chained functions is I&#39;m trying to do this chain of functions multithreaded. There is an input of 100 items, and then each all the transformations from one item to the next are done concurrently because some are much faster than others."}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1511669864, "post_id": 47492192, "comment_id": 81941139, "body": "You said <code>output of the 1st function will get piped into the input of the second function</code> though right? So if you&#39;ve got 100 inputs, that means there are 100 full calls to your chain to run, is that right? Can&#39;t you just start N threads with the first N items, and then work your way through the rest of the items as previous ones finish? I&#39;m still not clear on why you&#39;d need the separate steps to be their own items, rather than treating the chain itself as a single item with an input and output type."}, {"owner": {"reputation": 4096, "user_id": 2056979, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/pg0MQ.jpg?s=128&g=1", "display_name": "Keatinge", "link": "https://stackoverflow.com/users/2056979/keatinge"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1511670987, "post_id": 47492192, "comment_id": 81941312, "body": "@loganfsmyth The first step is really quick, so I will only be using 1 thread in practice. The first step is literally iterating numbers. The second step requires making one web request which gives me 10 links. The third step is visiting every single one of the 10 links. The idea was I would have 1 thread for the first step, 2 for the second, and 20 for the third step. Actually building this is not too hard, but I&#39;m trying to build a pipeline abstraction over this proccess."}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 2, "creation_date": 1511731137, "post_id": 47492192, "comment_id": 81957921, "body": "I feel like you might have been better off asking your question with that as the details. This feels like a bit of an <a href=\"https://meta.stackexchange.com/questions/66377/what-is-the-xy-problem\">XY problem</a> to me. I understand the issue you want to solve, but a Vec just isn&#39;t a great way to solve that. You&#39;ve got an answer here for the specific question you asked, using <code>Any</code>, but for a real solution to your problem the answer is don&#39;t use a Vec. I personally find event loops easy to follow which would address your real goal, but there are probably a bunch of ways to think about this."}], "answers": [{"tags": [], "owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "is_accepted": true, "score": 3, "last_activity_date": 1511693167, "creation_date": 1511693167, "answer_id": 47495267, "question_id": 47492192, "link": "https://stackoverflow.com/questions/47492192/create-a-vector-of-closures-from-any-type-to-any-other-type/47495267#47495267", "title": "Create a vector of closures from any type to any other type", "body": "<p>You could use the <a href=\"https://doc.rust-lang.org/std/any/trait.Any.html\" rel=\"nofollow noreferrer\"><code>Any</code></a> trait in a <code>Box</code>, but:</p>\n\n<ul>\n<li>You'll get runtime errors if the types don't match instead of compile time errors</li>\n<li>Performance will probably suck</li>\n</ul>\n\n<p><a href=\"https://play.rust-lang.org/?gist=479dbe1909855d77054381f6cd82b6d9&amp;version=stable\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<pre><code>use std::any::Any;\n\npub type FnAnyToAny = Fn(Box&lt;Any&gt;) -&gt; Box&lt;Any&gt;;\n\npub fn make_any_to_any&lt;I, O, F&gt;(f: F) -&gt; Box&lt;FnAnyToAny&gt;\nwhere\n    I: 'static,\n    O: 'static,\n    F: Fn(I) -&gt; O + 'static,\n{\n    Box::new(move |i: Box&lt;Any&gt;| -&gt; Box&lt;Any&gt; {\n        let i: Box&lt;I&gt; = Box::&lt;Any + 'static&gt;::downcast(i).expect(\"wrong input type\");\n        Box::new(f(*i))\n    })\n}\n\npub fn run_all_any&lt;I, O&gt;(funcs: &amp;Vec&lt;Box&lt;FnAnyToAny&gt;&gt;, i: I) -&gt; O\nwhere\n    I: 'static,\n    O: 'static,\n{\n    let i: Box&lt;Any&gt; = Box::new(i);\n    let o = funcs.iter().fold(i, |acc, f| f(acc));\n    let o: Box&lt;O&gt; = Box::&lt;Any + 'static&gt;::downcast(o).expect(\"wrong output type\");\n    *o\n}\n\nfn main() {\n    let mut funcs: Vec&lt;Box&lt;FnAnyToAny&gt;&gt; = Vec::new();\n\n    funcs.push(make_any_to_any(|a: i32| a * 2));\n    funcs.push(make_any_to_any(|b: i32| b * 3));\n\n    funcs.push(make_any_to_any(|c: i32| format!(\"{}\", c)));\n\n    println!(\"{:?}\", run_all_any::&lt;i32, String&gt;(&amp;funcs, 4));\n}\n</code></pre>\n\n<p>In the comments you mentioned you actually want to process lots of input items and run each function in a separate thread. I think the <a href=\"https://crates.io/crates/rayon\" rel=\"nofollow noreferrer\"><code>rayon</code></a> crate should handle this just fine:</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=4e5adf4745305505c61c121c27eba4de&amp;version=stable\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<pre><code>extern crate rayon;\nuse rayon::prelude::*;\n\nfn main() {\n    let input = vec![1, 2, 3, 4];\n\n    // without parallel processing you'd start with:\n    // let output = input.into_iter()\n    let output = input\n        .into_par_iter()\n        .map(|a| a * 2)\n        .map(|b| b * 3)\n        .map(|c| format!(\"{}\", c))\n        .collect::&lt;Vec&lt;_&gt;&gt;();\n\n    println!(\"{:?}\", output);\n}\n</code></pre>\n\n<p>If you actually wait a lot e.g. for network data (instead of actually requiring CPU time) you might want to take a look at the <a href=\"https://crates.io/crates/futures\" rel=\"nofollow noreferrer\"><code>futures</code></a> crate, especially <a href=\"https://docs.rs/futures/0.1.17/futures/stream/trait.Stream.html\" rel=\"nofollow noreferrer\"><code>futures::stream::Stream</code></a>.</p>\n"}], "owner": {"reputation": 4096, "user_id": 2056979, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/pg0MQ.jpg?s=128&g=1", "display_name": "Keatinge", "link": "https://stackoverflow.com/users/2056979/keatinge"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 277, "favorite_count": 0, "accepted_answer_id": 47495267, "answer_count": 1, "score": 2, "last_activity_date": 1511693167, "creation_date": 1511659927, "last_edit_date": 1511666347, "question_id": 47492192, "link": "https://stackoverflow.com/questions/47492192/create-a-vector-of-closures-from-any-type-to-any-other-type", "title": "Create a vector of closures from any type to any other type", "body": "<p>I'm trying to create a vector of functions, the idea is that the output of the 1st function will get piped into the input of the second function, etc, etc.</p>\n\n<p>I'm having a hard time understanding how (if it's possible) to encode this into the Rust type system. I tried using generics but ran into issues because generics expect that the input and output will always be the same for each element in the vector of functions.</p>\n\n<p>For example, function one may be <code>i32 -&gt; String</code>, function two <code>String -&gt; bool</code> and function three <code>bool -&gt; f64</code>.</p>\n\n<p>My attempt:</p>\n\n<pre><code>fn main() {\n    let mut funcs: Vec&lt;Box&lt;Fn(i32) -&gt; i32&gt;&gt; = Vec::new();\n\n    funcs.push(Box::new(|a| a * 2));\n    funcs.push(Box::new(|b| b * 3));\n\n    // This won't work since it's not a Fn(i32) -&gt; i32\n    funcs.push(Box::new(|c| String::from(c)));\n\n    // How can I create a vec of Fn(anything) -&gt; anything where the anythings can be different for every item in the vector?\n}\n</code></pre>\n\n<p>I'm beginning to think the only way this is possible in Rust would be a struct with a specific amount of elements created with a macro.</p>\n"}, {"tags": ["rust", "rust-diesel"], "comments": [{"owner": {"reputation": 1371, "user_id": 623316, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/aa2761ad1bad1ee4f56dd5c3514dd765?s=128&d=identicon&r=PG", "display_name": "Jon Wolski", "link": "https://stackoverflow.com/users/623316/jon-wolski"}, "edited": false, "score": 0, "creation_date": 1511645891, "post_id": 47489526, "comment_id": 81936816, "body": "I know it is not exactly PostGIS, but I suspect the answer is similar to this one: <a href=\"https://github.com/diesel-rs/diesel/issues/232#issuecomment-193934393\" rel=\"nofollow noreferrer\">github.com/diesel-rs/diesel/issues/232#issuecomment-19393439&zwnj;&#8203;3</a>. I.e. it would require creating an extension to Diesel."}], "answers": [{"tags": [], "owner": {"reputation": 11388, "user_id": 220485, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bTrsL.jpg?s=128&g=1", "display_name": "Daniel Fath", "link": "https://stackoverflow.com/users/220485/daniel-fath"}, "is_accepted": true, "score": 2, "last_activity_date": 1511877229, "last_edit_date": 1511877229, "creation_date": 1511876356, "answer_id": 47533000, "question_id": 47489526, "link": "https://stackoverflow.com/questions/47489526/does-diesel-support-the-postgres-point-type/47533000#47533000", "title": "Does Diesel support the Postgres `point` type?", "body": "<p>Based on <a href=\"https://github.com/diesel-rs/diesel/issues/491\" rel=\"nofollow noreferrer\">this Diesel GitHub issue</a> and the types available in <a href=\"https://docs.diesel.rs/diesel/pg/types/index.html\" rel=\"nofollow noreferrer\"><code>diesel::pg::types</code></a> and <a href=\"https://docs.diesel.rs/diesel/types/index.html\" rel=\"nofollow noreferrer\"><code>diesel::types</code></a>, there doesn't seem to be any support for these types.</p>\n\n<p>To write a model that includes a <code>point</code> column, you would need to make <code>point</code> a value Diesel can understand. This starts by implementing the <code>FromSql</code> trait for a <code>Point</code> type and then implementing all the things needed for that. For such an extension, look at <a href=\"https://github.com/diesel-rs/diesel/pull/1021/files\" rel=\"nofollow noreferrer\">this PR</a>.</p>\n"}], "owner": {"reputation": 4330, "user_id": 3599414, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/ZFtWq.jpg?s=128&g=1", "display_name": "garrettmaring", "link": "https://stackoverflow.com/users/3599414/garrettmaring"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 434, "favorite_count": 0, "accepted_answer_id": 47533000, "answer_count": 1, "score": 3, "last_activity_date": 1511877229, "creation_date": 1511636331, "question_id": 47489526, "link": "https://stackoverflow.com/questions/47489526/does-diesel-support-the-postgres-point-type", "title": "Does Diesel support the Postgres `point` type?", "body": "<p>I'd like to use the <a href=\"https://www.postgresql.org/docs/9.5/static/datatype-geometric.html\" rel=\"nofollow noreferrer\">point</a> Postgres type. I don't see this type listed <a href=\"https://docs.diesel.rs/diesel/types/index.html\" rel=\"nofollow noreferrer\">here</a> in the types list for Diesel.</p>\n\n<p>What is the correct way to write a model that includes a <code>point</code> column?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "edited": false, "score": 0, "creation_date": 1511643899, "post_id": 47490007, "comment_id": 81936326, "body": "Whow. That&#39;s insightful, thank you! Although knowing about fat pointers I didn&#39;t think they were at the root of the issue. I have played with them and it seems <code>IntObject</code>s have different vtables depending on the create in which they are created. This is... unexpected... looks like object identity is not as straight-forward as hoped."}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "reply_to_user": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "edited": false, "score": 5, "creation_date": 1511646900, "post_id": 47490007, "comment_id": 81937050, "body": "@kazemakase You can change <code>as *const _</code> to <code>as *const _ as *const ()</code> to turn the fat pointer into a regular pointer if you only care about the value&#39;s address."}, {"owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "reply_to_user": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1511647993, "post_id": 47490007, "comment_id": 81937302, "body": "@FrancisGagn&#233; Excellent! That should work for my use case."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 25, "last_activity_date": 1561394426, "last_edit_date": 1561394426, "creation_date": 1511640158, "answer_id": 47490007, "question_id": 47489449, "link": "https://stackoverflow.com/questions/47489449/why-can-comparing-two-seemingly-equal-pointers-with-return-false/47490007#47490007", "title": "Why can comparing two seemingly equal pointers with == return false?", "body": "<p>When is a \"pointer\" not a \"pointer\"? When it's a <em>fat pointer</em>. <code>ObjectInterface</code> is a trait, which means that <code>&amp;dyn ObjectInterface</code> is a <em>trait object</em>. Trait objects are composed of <strong>two</strong> machine pointers: one for the concrete data and one for the <em>vtable</em>, a set of the specific implementations of the trait for the concrete value. This double pointer is called a fat pointer.</p>\n\n<p>Using a nightly compiler and <a href=\"https://doc.rust-lang.org/std/raw/struct.TraitObject.html\" rel=\"nofollow noreferrer\"><code>std::raw::TraitObject</code></a>, you can see the differences:</p>\n\n<pre><code>#![feature(raw)]\n\nuse std::{mem, raw};\n\npub fn is_same(left: &amp;Object, right: &amp;Object) -&gt; bool {\n    let a = left.as_ref() as *const _;\n    let b = right.as_ref() as *const _;\n    let r = a == b;\n    println!(\"comparing: {:p} == {:p} -&gt; {}\", a, b, r);\n\n    let raw_object_a: raw::TraitObject = unsafe { mem::transmute(left.as_ref()) };\n    let raw_object_b: raw::TraitObject = unsafe { mem::transmute(right.as_ref()) };\n    println!(\n        \"really comparing: ({:p}, {:p}) == ({:p}, {:p})\",\n        raw_object_a.data, raw_object_a.vtable,\n        raw_object_b.data, raw_object_b.vtable,\n    );\n\n    r\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>comparing: 0x101c0e010 == 0x101c0e010 -&gt; true\nreally comparing: (0x101c0e010, 0x1016753e8) == (0x101c0e010, 0x1016753e8)\ncomparing: 0x101c0e010 == 0x101c0e010 -&gt; false\nreally comparing: (0x101c0e010, 0x101676758) == (0x101c0e010, 0x1016753e8)\n</code></pre>\n\n<p>It turns out that (at least in Rust 1.22.1) each <em>code generation unit</em> creates a separate vtable! This explains why it works when it's all in the same module. There's <a href=\"https://github.com/rust-lang/rust/issues/46139\" rel=\"nofollow noreferrer\">active discussion</a> on if this is a bug or not.</p>\n\n<p>When you annotate the <code>new</code> and <code>run</code> functions with <code>#[inline]</code> the consumers will use that vtable.</p>\n\n<hr>\n\n<p>As <a href=\"https://stackoverflow.com/questions/47489449/why-can-comparing-two-seemingly-equal-pointers-with-return-false/47490007?noredirect=1#comment81937050_47490007\">Francis Gagn\u00e9 said</a>:</p>\n\n<blockquote>\n  <p>You can change <code>as *const _</code> to <code>as *const _ as *const ()</code> to turn the fat pointer into a regular pointer if you only care about the value's address.</p>\n</blockquote>\n\n<p>This can be cleanly expressed using <a href=\"https://doc.rust-lang.org/std/ptr/fn.eq.html\" rel=\"nofollow noreferrer\"><code>std::ptr::eq</code></a>:</p>\n\n<pre><code>use std::ptr;\n\npub fn is_same(left: &amp;Object, right: &amp;Object) -&gt; bool {\n    let r = ptr::eq(left.as_ref(), right.as_ref());\n    println!(\"comparing: {:p} == {:p} -&gt; {}\", left, right, r);\n    r\n}\n</code></pre>\n"}], "owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2715, "favorite_count": 1, "accepted_answer_id": 47490007, "answer_count": 1, "score": 22, "last_activity_date": 1561394426, "creation_date": 1511635809, "last_edit_date": 1561393790, "question_id": 47489449, "link": "https://stackoverflow.com/questions/47489449/why-can-comparing-two-seemingly-equal-pointers-with-return-false", "title": "Why can comparing two seemingly equal pointers with == return false?", "body": "<p>I want to test if two objects of type <code>Rc&lt;Trait&gt;</code> contain the same instance of a concrete type, so I compare pointers to the objects inside <code>Rc</code> for equality. It seems to work correctly if all the code resides in the same crate but fails when multiple crates are involved.</p>\n\n<p>In Rust 1.17 the function <a href=\"https://doc.rust-lang.org/std/rc/struct.Rc.html#method.ptr_eq\" rel=\"nofollow noreferrer\"><code>Rc::ptr_eq</code></a> was added, which as of Rust 1.31, exhibits the same cross-crate issue as the manual pointer comparison used in this question.</p>\n\n<p>This is the implementation of crate <code>mcve</code> (<code>src/lib.rs</code>):</p>\n\n<pre><code>use std::rc::Rc;\n\npub trait ObjectInterface {}\n\npub type Object = Rc&lt;ObjectInterface&gt;;\n\npub type IntObject = Rc&lt;i32&gt;;\n\nimpl ObjectInterface for i32 {}\n\n/// Test if two Objects refer to the same instance\npub fn is_same(left: &amp;Object, right: &amp;Object) -&gt; bool {\n    let a = left.as_ref() as *const _;\n    let b = right.as_ref() as *const _;\n    let r = a == b;\n    println!(\"comparing: {:p} == {:p} -&gt; {}\", a, b, r);\n    r\n}\n\npub struct Engine {\n    pub intval: IntObject,\n}\n\nimpl Engine {\n    pub fn new() -&gt; Engine {\n        Engine {\n            intval: Rc::new(42),\n        }\n    }\n\n    pub fn run(&amp;mut self) -&gt; Object {\n        return self.intval.clone();\n    }\n}\n</code></pre>\n\n<p>I test the implementation with the following code (<code>tests/testcases.rs</code>):</p>\n\n<pre><code>extern crate mcve;\n\nuse mcve::{is_same, Engine, Object};\n\n#[test]\nfn compare() {\n    let mut engine = Engine::new();\n\n    let a: Object = engine.intval.clone();\n    let b = a.clone();\n    assert!(is_same(&amp;a, &amp;b));\n\n    let r = engine.run();\n    assert!(is_same(&amp;r, &amp;a));\n}\n</code></pre>\n\n<p>Running the test results in the following output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>comparing: 0x7fcc5720d070 == 0x7fcc5720d070 -&gt; true\ncomparing: 0x7fcc5720d070 == 0x7fcc5720d070 -&gt; false\nthread 'compare' panicked at 'assertion failed: is_same(&amp;r, &amp;a)'\n</code></pre>\n\n<p>How is it possible that the comparison operator <code>==</code> returns <code>false</code> although the pointers seem to be the same?</p>\n\n<p>A few observations:</p>\n\n<ul>\n<li>The comparison returns <code>true</code> when both objects (<code>a</code> and <code>b</code>) live in the same crate. However, the comparison returns <code>false</code> when one of the objects (<code>r</code>) was returned by the function <code>Engine::run</code>, which is defined in another crate.</li>\n<li>The test correctly passes when I put the test function inside <code>lib.rs</code>.</li>\n<li>The problem can be fixed by defining <code>struct Engine { intval: Object }</code>, but I'm still interested in the <em>why</em>.</li>\n</ul>\n"}, {"tags": ["generics", "rust", "iterator", "traits", "rust-result"], "answers": [{"comments": [{"owner": {"reputation": 3583, "user_id": 1391026, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/af98bdbeea8772f2d90d47d507098256?s=128&d=identicon&r=PG", "display_name": "musicmatze", "link": "https://stackoverflow.com/users/1391026/musicmatze"}, "edited": false, "score": 0, "creation_date": 1511628149, "post_id": 47488169, "comment_id": 81931439, "body": "Thanks for mentioning the book. I&#39;ve been a Rust programmer for two years now and I&#39;ve read it multiple times. I just thought there might be a way to do this with returning <code>Result&lt;B, E&gt;</code> (without the enum helper)."}, {"owner": {"reputation": 3583, "user_id": 1391026, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/af98bdbeea8772f2d90d47d507098256?s=128&d=identicon&r=PG", "display_name": "musicmatze", "link": "https://stackoverflow.com/users/1391026/musicmatze"}, "edited": false, "score": 0, "creation_date": 1511628902, "post_id": 47488169, "comment_id": 81931697, "body": "Thanks, this worked. If you want to see the real code: <a href=\"https://github.com/matthiasbeyer/imag/pull/1163\" rel=\"nofollow noreferrer\">github.com/matthiasbeyer/imag/pull/1163</a>"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1511627280, "creation_date": 1511627280, "answer_id": 47488169, "question_id": 47487756, "link": "https://stackoverflow.com/questions/47487756/extending-all-iteratorsitem-resulttype-e-to-transform-type/47488169#47488169", "title": "Extending all Iterators&lt;Item = Result&lt;Type, E&gt;&gt; to transform type", "body": "<p>I <strong>highly</strong> recommend reading <a href=\"https://doc.rust-lang.org/stable/book/second-edition/\" rel=\"nofollow noreferrer\"><em>The Rust Programming Language</em></a>. It is packed full of information that new Rust programmers should know.</p>\n\n<blockquote>\n  <p>might return <code>E</code> [...] or a concrete error type</p>\n</blockquote>\n\n<p>One of Rust's exciting features are <a href=\"https://doc.rust-lang.org/stable/book/second-edition/ch06-01-defining-an-enum.html\" rel=\"nofollow noreferrer\"><em>enum</em>s</a>. An enum allows you to create a type that can be one of multiple other types. In this case, we can define an enum to be either the underlying error or our own:</p>\n\n<pre><code>pub enum ExtensionError&lt;E&gt; {\n    Original(E),\n    Concrete(ConcreteError),\n}\n</code></pre>\n\n<p>Then it's just a matter of mapping from one type to another:</p>\n\n<pre><code>pub struct A;\npub struct B;\npub struct ConcreteError;\n\nfn transform(_: A) -&gt; Result&lt;B, ConcreteError&gt; {\n    Ok(B {})\n}\n\npub struct ExtensionIter&lt;I&gt;(I);\npub enum ExtensionError&lt;E&gt; {\n    Original(E),\n    Concrete(ConcreteError),\n}\n\nimpl&lt;I, E&gt; Iterator for ExtensionIter&lt;I&gt;\nwhere\n    I: Iterator&lt;Item = Result&lt;A, E&gt;&gt;,\n{\n    type Item = Result&lt;B, ExtensionError&lt;E&gt;&gt;;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        match self.0.next() {\n            Some(Ok(a)) =&gt; Some(transform(a).map_err(ExtensionError::Concrete)),\n            Some(Err(e)) =&gt; Some(Err(ExtensionError::Original(e))),\n            None =&gt; None,\n        }\n    }\n}\n\npub trait Extension: Iterator {\n    fn extend(self) -&gt; ExtensionIter&lt;Self&gt;\n    where\n        Self: Sized,\n    {\n        ExtensionIter(self)\n    }\n}\n\nimpl&lt;I: Iterator&gt; Extension for I {}\n\nfn main() {\n    let v: Vec&lt;Result&lt;A, ()&gt;&gt; = vec![];\n    for element in v.into_iter().extend() {\n        match element {\n            Ok(_) =&gt; {}\n            Err(_) =&gt; {}\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 3583, "user_id": 1391026, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/af98bdbeea8772f2d90d47d507098256?s=128&d=identicon&r=PG", "display_name": "musicmatze", "link": "https://stackoverflow.com/users/1391026/musicmatze"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 93, "favorite_count": 0, "accepted_answer_id": 47488169, "answer_count": 1, "score": 0, "last_activity_date": 1556752855, "creation_date": 1511624969, "last_edit_date": 1556752855, "question_id": 47487756, "link": "https://stackoverflow.com/questions/47487756/extending-all-iteratorsitem-resulttype-e-to-transform-type", "title": "Extending all Iterators&lt;Item = Result&lt;Type, E&gt;&gt; to transform type", "body": "<p>I'm trying to implement an extension trait for all <code>Iterator&lt;Item = Result&lt;Type, E&gt;&gt;</code> where <code>E</code> is generic, to generate another <code>Iterator</code> over <code>Result&lt;OtherType, E&gt;</code>, where the errors from the original are forwarded.</p>\n\n<p>The problem is, that the transformation <code>Type -&gt; OtherType</code> may fail (the function is <code>f(t: Type) -&gt; Result&lt;OtherType, ConcreteError&gt;</code>.</p>\n\n<p>Therefor, the iteration might return <code>E</code> (generic) from the underlying iterator or a concrete error type, which is of course not possible.</p>\n\n<p>How to implement this?</p>\n\n<p>A minimal example:</p>\n\n<pre><code>pub struct A;\npub struct B;\npub struct CongreteError;\n\nfn transform(a: A) -&gt; Result&lt;B, CongreteError&gt; {\n    Ok(B {})\n}\n\npub struct ExtensionIter&lt;E&gt;(Box&lt;Iterator&lt;Item = Result&lt;A, E&gt;&gt;&gt;);\n\nimpl&lt;E&gt; Iterator for ExtensionIter&lt;E&gt; {\n    type Item = Result&lt;B, E&gt;;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        match self.0.next() {\n            Some(Ok(a)) =&gt; Some(transform(a)),\n            Some(Err(e)) =&gt; Some(Err(e)),\n            None =&gt; None,\n        }\n    }\n}\n\npub trait Extension&lt;E&gt; {\n    fn extend(self) -&gt; ExtensionIter&lt;E&gt;;\n}\n\nimpl&lt;E, I&gt; Extension&lt;E&gt; for I\nwhere\n    I: Iterator&lt;Item = Result&lt;A, E&gt;&gt;,\n{\n    fn extend(self) -&gt; ExtensionIter&lt;E&gt; {\n        ExtensionIter(Box::new(self))\n    }\n}\n\nfn main() {\n    let v: Vec&lt;A&gt; = vec![];\n    for element in v.iter().extend() {\n        match element {\n            Ok(b) =&gt; {}\n            Err(e) =&gt; {}\n        }\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=a5ea2f20c1ec88bbfbe7a1dca7d12e69&amp;version=stable\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>Errors:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:16:33\n   |\n16 |             Some(Ok(a)) =&gt; Some(transform(a)),\n   |                                 ^^^^^^^^^^^^ expected type parameter, found struct `CongreteError`\n   |\n   = note: expected type `std::result::Result&lt;_, E&gt;`\n              found type `std::result::Result&lt;_, CongreteError&gt;`\n   = help: here are some functions which might fulfill your needs:\n           - .map_err(...)\n           - .or(...)\n           - .or_else(...)\n\nerror[E0310]: the parameter type `I` may not live long enough\n  --&gt; src/main.rs:32:23\n   |\n27 | impl&lt;E, I&gt; Extension&lt;E&gt; for I\n   |         - help: consider adding an explicit lifetime bound `I: 'static`...\n...\n32 |         ExtensionIter(Box::new(self))\n   |                       ^^^^^^^^^^^^^^\n   |\nnote: ...so that the type `I` will meet its required lifetime bounds\n  --&gt; src/main.rs:32:23\n   |\n32 |         ExtensionIter(Box::new(self))\n   |                       ^^^^^^^^^^^^^^\n\nerror[E0599]: no method named `extend` found for type `std::slice::Iter&lt;'_, A&gt;` in the current scope\n  --&gt; src/main.rs:38:29\n   |\n38 |     for element in v.iter().extend() {\n   |                             ^^^^^^\n   |\n   = note: the method `extend` exists but the following trait bounds were not satisfied:\n           `std::slice::Iter&lt;'_, A&gt; : Extension&lt;_&gt;`\n           `&amp;std::slice::Iter&lt;'_, A&gt; : Extension&lt;_&gt;`\n           `&amp;mut std::slice::Iter&lt;'_, A&gt; : Extension&lt;_&gt;`\n   = help: items from traits can only be used if the trait is implemented and in scope\n   = note: the following trait defines an item `extend`, perhaps you need to implement it:\n           candidate #1: `Extension`\n</code></pre>\n"}, {"tags": ["autocomplete", "rust", "visual-studio-code"], "answers": [{"tags": [], "owner": {"reputation": 1025, "user_id": 6119618, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/105e066892369cf8b3f1c882bbefa862?s=128&d=identicon&r=PG&f=1", "display_name": "Herrgott", "link": "https://stackoverflow.com/users/6119618/herrgott"}, "is_accepted": false, "score": 2, "last_activity_date": 1511623085, "last_edit_date": 1511623085, "creation_date": 1511622629, "answer_id": 47487431, "question_id": 47487094, "link": "https://stackoverflow.com/questions/47487094/rust-autocompletion-not-shown-for-items-from-the-standard-library/47487431#47487431", "title": "Rust autocompletion not shown for items from the standard library", "body": "<p>I didn't have the <code>RUST_SRC_PATH</code> variable set. In my VS Code settings, I added</p>\n\n<pre><code>\"rust.rustLangSrcPath\": \"/home/ilya/.rustup/toolchains/**your_toolchain**/lib/rustlib/src/rust/src/\"\n</code></pre>\n\n<p>and it did the job. This option comes from the <code>kalitaalexey.vscode-rust</code> package.</p>\n"}], "owner": {"reputation": 1025, "user_id": 6119618, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/105e066892369cf8b3f1c882bbefa862?s=128&d=identicon&r=PG&f=1", "display_name": "Herrgott", "link": "https://stackoverflow.com/users/6119618/herrgott"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 626, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1511623085, "creation_date": 1511620268, "last_edit_date": 1511622261, "question_id": 47487094, "link": "https://stackoverflow.com/questions/47487094/rust-autocompletion-not-shown-for-items-from-the-standard-library", "title": "Rust autocompletion not shown for items from the standard library", "body": "<p>I can't get working autocompletion on VS Code on Ubuntu 16.04.</p>\n\n<p>I've installed rustup from <a href=\"https://www.rustup.rs/\" rel=\"nofollow noreferrer\">https://www.rustup.rs/</a> and installed the \"rust-lang.rust\" package. This extension installed <code>rustfmt</code> and tried to use both <code>stable</code> and <code>nightly</code> toolchains.  </p>\n\n<p>If I type <code>std::</code> no suggestions are shown. Suggestions show on local <code>mod</code> import but not with the standard library. I tried to reinstall by removing via <code>uninstall.sh</code> and manually removing <code>~/.multirust</code> and <code>~/.cargo</code> and then installed again, but nothing changed.</p>\n\n<p>What did I do wrong?</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 1, "creation_date": 1511619047, "post_id": 47486841, "comment_id": 81928547, "body": "The error message is about <code>\u2026\\rust\\Cargo.toml</code>, but you only showed us <code>\u2026\\rust\\hello_world\\Cargo.toml</code>.  <code>\u2026\\rust\\Cargo.toml</code> shouldn&#39;t be needed, maybe try deleting (or renaming) it."}, {"owner": {"reputation": 23, "user_id": 5550692, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8618957cb22ffddb918236ec3d94b1b1?s=128&d=identicon&r=PG", "display_name": "Mg Sein", "link": "https://stackoverflow.com/users/5550692/mg-sein"}, "reply_to_user": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1511619964, "post_id": 47486841, "comment_id": 81928863, "body": "I change the name but the error still exists. Here is the error.Caused by:   no targets specified in the manifest   either src/lib.rs, src/main.rs, a [lib] section, or [[bin]] section must be present @Stefan"}], "answers": [{"comments": [{"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1511622696, "post_id": 47487310, "comment_id": 81929734, "body": "This seems wrong on every level.  What is the <code>hello_world</code> folder now for? Everything should be inside that folder, <code>rust</code> doesn&#39;t sound like a sane project folder name. It also seems you didn&#39;t call <code>cargo build</code> in the <code>hello_world</code> folder like you claimed above."}], "tags": [], "owner": {"reputation": 23, "user_id": 5550692, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8618957cb22ffddb918236ec3d94b1b1?s=128&d=identicon&r=PG", "display_name": "Mg Sein", "link": "https://stackoverflow.com/users/5550692/mg-sein"}, "is_accepted": false, "score": -1, "last_activity_date": 1511622100, "last_edit_date": 1511622100, "creation_date": 1511621827, "answer_id": 47487310, "question_id": 47486841, "link": "https://stackoverflow.com/questions/47486841/error-failed-to-parse-manifest-caused-by-no-package-section-found/47487310#47487310", "title": "error: failed to parse manifest caused by: no `package` section found", "body": "<p>I changed from <code>cargo.toml</code> to <code>Cargo.toml</code> directly inside the Rust project folder and changed <code>hello.rs</code> to <code>main.rs</code> directly inside the Rust project folder.</p>\n\n<p>From this,</p>\n\n<p><a href=\"https://i.stack.imgur.com/eMLCu.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/eMLCu.png\" alt=\"before renaming file\"></a></p>\n\n<p>to this,</p>\n\n<p><a href=\"https://i.stack.imgur.com/G4Sns.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/G4Sns.png\" alt=\"after renaming file\"></a></p>\n"}], "owner": {"reputation": 23, "user_id": 5550692, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8618957cb22ffddb918236ec3d94b1b1?s=128&d=identicon&r=PG", "display_name": "Mg Sein", "link": "https://stackoverflow.com/users/5550692/mg-sein"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 428, "favorite_count": 0, "answer_count": 1, "score": -4, "last_activity_date": 1511622100, "creation_date": 1511618690, "last_edit_date": 1511622021, "question_id": 47486841, "link": "https://stackoverflow.com/questions/47486841/error-failed-to-parse-manifest-caused-by-no-package-section-found", "title": "error: failed to parse manifest caused by: no `package` section found", "body": "<p>I have installed <strong>C++ 2015 Tools</strong> from Microsoft as described in the installation section.</p>\n\n<p>I get this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>C:\\Users\\Mg Sein\\Desktop\\rust\\hello_world&gt;cargo build\nerror: failed to parse manifest at `C:\\Users\\Mg Sein\\Desktop\\rust\\Cargo.toml`\n\nCaused by:\n  no `package` section found.\n</code></pre>\n\n<p>This is the directory of project file:</p>\n\n<p><a href=\"https://i.stack.imgur.com/P35Ew.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/P35Ew.png\" alt=\"directory of project file\"></a></p>\n\n<p>I added the path variable for <code>cargo</code>:</p>\n\n<p><a href=\"https://i.stack.imgur.com/6AMmi.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/6AMmi.png\" alt=\"add path variable for cargo\"></a></p>\n\n<p>This is the contents of Cargo.toml:</p>\n\n<pre><code>[package]\nname = \"hello_world\"\nversion = \"0.1.0\"\nauthors = [\"Mg Sein\"]\n[dependencies]\n</code></pre>\n"}, {"tags": ["macros", "rust", "rust-macros"], "answers": [{"tags": [], "owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "is_accepted": true, "score": 2, "last_activity_date": 1511618590, "creation_date": 1511618590, "answer_id": 47486823, "question_id": 47486694, "link": "https://stackoverflow.com/questions/47486694/how-do-i-test-if-a-identifier-in-a-macro-starts-with-an-underscore/47486823#47486823", "title": "How do I test if a identifier in a macro starts with an underscore?", "body": "<p>Macros receive \"tokens\" as input; the leading underscore is not a separate token, and you cannot match partial tokens.</p>\n\n<p>You could <a href=\"https://doc.rust-lang.org/nightly/std/macro.stringify.html\" rel=\"nofollow noreferrer\"><code>stringify!</code></a> the identifier and match the name at runtime.</p>\n"}], "owner": {"reputation": 3, "user_id": 7362464, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/50e45a01b5ce8750fa69025e6c95194a?s=128&d=identicon&r=PG&f=1", "display_name": "Aleksandr", "link": "https://stackoverflow.com/users/7362464/aleksandr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 94, "favorite_count": 0, "accepted_answer_id": 47486823, "answer_count": 1, "score": 0, "last_activity_date": 1511622470, "creation_date": 1511617766, "last_edit_date": 1511622470, "question_id": 47486694, "link": "https://stackoverflow.com/questions/47486694/how-do-i-test-if-a-identifier-in-a-macro-starts-with-an-underscore", "title": "How do I test if a identifier in a macro starts with an underscore?", "body": "<p>I need to check whether the identifier begins with an underscore. This does not work:</p>\n\n<pre><code>#[macro_export]\nmacro_rules! UNDECORED {\n    (_$_i:ident) =&gt; {... do something if underscored};\n    ($_i:ident) =&gt; {... do something else};\n}\n</code></pre>\n\n<p>Where is the mistake?</p>\n"}, {"tags": ["rust", "borrow-checker"], "answers": [{"comments": [{"owner": {"reputation": 549, "user_id": 4275937, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/49b88e050dd8cc0e4dbbe301ccecd40d?s=128&d=identicon&r=PG&f=1", "display_name": "real", "link": "https://stackoverflow.com/users/4275937/real"}, "edited": false, "score": 0, "creation_date": 1511705211, "post_id": 47486415, "comment_id": 81949213, "body": "I thought that a panic is a sort of crashing. Is it possible to recover after a panic ?"}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "reply_to_user": {"reputation": 549, "user_id": 4275937, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/49b88e050dd8cc0e4dbbe301ccecd40d?s=128&d=identicon&r=PG&f=1", "display_name": "real", "link": "https://stackoverflow.com/users/4275937/real"}, "edited": false, "score": 1, "creation_date": 1511709220, "post_id": 47486415, "comment_id": 81950483, "body": "I think the docs for <a href=\"https://doc.rust-lang.org/stable/std/panic/fn.catch_unwind.html\" rel=\"nofollow noreferrer\"><code>catch_unwind</code></a> explain it very well - &quot;This function only catches unwinding panics, not those that abort the process.&quot;"}], "tags": [], "owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "is_accepted": true, "score": 2, "last_activity_date": 1511623662, "last_edit_date": 1511623662, "creation_date": 1511615959, "answer_id": 47486415, "question_id": 47486147, "link": "https://stackoverflow.com/questions/47486147/moving-out-of-borrowed-content-safely/47486415#47486415", "title": "moving out of borrowed content safely", "body": "<p>If <code>do_something</code> panics unwinding is impossible - you cannot restore <code>my_struct_ref</code> to a valid state, but the outer context requires <code>my_struct_ref</code> to be valid.</p>\n\n<p>It would be nice if there was a generic way of saying \"if this panics just crash instead of unwind\", which would make such operation safe as far as I can tell.</p>\n\n<p><a href=\"https://docs.rs/take_mut/0.2.0/take_mut/fn.take.html\" rel=\"nofollow noreferrer\"><code>take</code></a> from the <a href=\"https://crates.io/crates/take_mut\" rel=\"nofollow noreferrer\"><code>take_mut</code></a> crate provides a safe wrapper (it catches an unwinding panic and makes it abort instead, solving the problem with unwinding).</p>\n"}], "owner": {"reputation": 549, "user_id": 4275937, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/49b88e050dd8cc0e4dbbe301ccecd40d?s=128&d=identicon&r=PG&f=1", "display_name": "real", "link": "https://stackoverflow.com/users/4275937/real"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 200, "favorite_count": 0, "closed_date": 1511620986, "accepted_answer_id": 47486415, "answer_count": 1, "score": 0, "last_activity_date": 1511623662, "creation_date": 1511614098, "last_edit_date": 1511620914, "question_id": 47486147, "link": "https://stackoverflow.com/questions/47486147/moving-out-of-borrowed-content-safely", "closed_reason": "Duplicate", "title": "moving out of borrowed content safely", "body": "<p>I have a mutable reference to a structure and I want to change one of its fields by passing it through a function and set the result as the new value of the field. However, I get a \"cannot move out of borrowed content\" compile error. </p>\n\n<p>This is a minimalistic example that demonstrates my issue:</p>\n\n<pre><code>struct InnerStruct {\n    num: usize,\n}\n\nstruct MyStruct {\n    inner_struct: InnerStruct,\n}\n\nfn do_something(inner_struct: InnerStruct) -&gt; InnerStruct {\n    inner_struct\n}\n\nfn main() {\n    let mut my_struct = MyStruct {\n        inner_struct: InnerStruct { num: 0 },\n    };\n\n    let my_struct_ref = &amp;mut my_struct;\n    // This line compiles:\n    // my_struct_ref.inner_struct = InnerStruct { num: 0 };\n    my_struct_ref.inner_struct = do_something(my_struct_ref.inner_struct);\n}\n</code></pre>\n\n<p>This is the compilation error that I get:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n  --&gt; src/main.rs:21:47\n   |\n21 |     my_struct_ref.inner_struct = do_something(my_struct_ref.inner_struct);\n   |                                               ^^^^^^^^^^^^^ cannot move out of borrowed content\n</code></pre>\n\n<p>The function <code>do_something</code> has to take ownership over inner structure to perform its job (In the real source it operates on Tokio futures).</p>\n\n<p>I've  many posts with the same title \"cannot move out of borrowed content\", and the solution to all of them was to clone something or pass a reference instead of move ownership, but I can not apply these solutions to my case.</p>\n\n<p>I can't understand what the Rust compiler is trying to defend against in this case. In every possibility that I can think of <code>my_struct</code> is kept consistent.</p>\n\n<p>Having this line instead compiles successfully:</p>\n\n<pre><code>my_struct_ref.inner_struct = InnerStruct { num: 0 };\n</code></pre>\n\n<p>The following three lines also work:</p>\n\n<pre><code>let inner_struct2 = InnerStruct { num: 0 };\nlet inner_struct = std::mem::replace(&amp;mut my_struct_ref.inner_struct, inner_struct2);\nmy_struct_ref.inner_struct = do_something(inner_struct);\n</code></pre>\n\n<p>How come this is considered safe, while the first code isn't?</p>\n\n<p>I will appreciate any ideas about how to solve this, or explanations about what is wrong/unsafe with what I'm trying to do.</p>\n"}, {"tags": ["c", "rust", "ffi"], "answers": [{"comments": [{"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 3, "creation_date": 1511590630, "post_id": 47483163, "comment_id": 81921092, "body": "Rust avoids ever <i>actually</i> allocating memory for zero-sized types.  Instead, it uses a &quot;placeholder&quot; pointer value.  That&#39;s what&#39;s happening here.  Something similar happens with <code>Vec</code>: if you have a vector of zero-sized values, it never bothers to allocate any memory and just tracks how many elements you&#39;ve pushed."}, {"owner": {"reputation": 60850, "user_id": 221955, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0bc09e1bd45610fc85274cd7bb002c56?s=128&d=identicon&r=PG", "display_name": "Michael Anderson", "link": "https://stackoverflow.com/users/221955/michael-anderson"}, "reply_to_user": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1511591004, "post_id": 47483163, "comment_id": 81921158, "body": "@DK that is what I guessed must be happening (though after much hair pulling). Do you have some official docs or other sources to back this up? ( even a reference to  &quot;the source&quot; would be great). C and C++ avoid doing this since they want the dev to be able to distinguish such objects."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 3, "creation_date": 1511591737, "post_id": 47483163, "comment_id": 81921283, "body": "I don&#39;t think this is documented anywhere because it&#39;s an implementation detail.  There&#39;s <a href=\"https://github.com/rust-lang/rust/blob/b6f554b6dc972608761db93a375bcb0e89155e1d/src/liballoc/heap.rs#L231-L237\" rel=\"nofollow noreferrer\"><code>EMPTY</code></a> and, more recently, <a href=\"https://doc.rust-lang.org/1.19.0/src/core/ptr.rs.html#1011\" rel=\"nofollow noreferrer\"><code>Unique::empty</code></a>.  Using the memory allocator for unique IDs is pretty janky, given the overhead involved."}, {"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 1, "creation_date": 1511622039, "post_id": 47483163, "comment_id": 81929505, "body": "Structs of zero size is a Rust feature and it is not supported in C. Only opaque use of such types (behind a pointer) are possible with ffi to C for this reason."}], "tags": [], "owner": {"reputation": 60850, "user_id": 221955, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0bc09e1bd45610fc85274cd7bb002c56?s=128&d=identicon&r=PG", "display_name": "Michael Anderson", "link": "https://stackoverflow.com/users/221955/michael-anderson"}, "is_accepted": true, "score": 6, "last_activity_date": 1511721152, "last_edit_date": 1511721152, "creation_date": 1511590372, "answer_id": 47483163, "question_id": 47483112, "link": "https://stackoverflow.com/questions/47483112/when-passing-a-rust-pointer-to-c-should-i-get-0x1/47483163#47483163", "title": "When passing a Rust pointer to C should I get 0x1?", "body": "<p>It looks like this is an optimisation by Rust since the <code>SndbDB</code> struct has no state.</p>\n\n<p>Adding an <code>i: u32</code> field to it and plumbing that through to the constructor functions and the C code I then get:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[rust] creating DB 0x7fff2fe00000\n[C] Got db=0x7fff2fe00000\n[rust] destroying DB 0x7fff2fe00000\n[rust] dropping (sndb_db i=123)\n[C] db should be dead by now...\n</code></pre>\n\n<p>However I'd still love to find an official source to back up this guess.</p>\n"}], "owner": {"reputation": 60850, "user_id": 221955, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0bc09e1bd45610fc85274cd7bb002c56?s=128&d=identicon&r=PG", "display_name": "Michael Anderson", "link": "https://stackoverflow.com/users/221955/michael-anderson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 219, "favorite_count": 0, "accepted_answer_id": 47483163, "answer_count": 1, "score": 1, "last_activity_date": 1511721152, "creation_date": 1511589817, "last_edit_date": 1511620708, "question_id": 47483112, "link": "https://stackoverflow.com/questions/47483112/when-passing-a-rust-pointer-to-c-should-i-get-0x1", "title": "When passing a Rust pointer to C should I get 0x1?", "body": "<p>I'm trying to implement a basic library in Rust that creates an object and returns its pointer to C. The pointer I get doesn't look like it is on the heap\u00a0\u2014 when I print it I get <code>0x1</code>:</p>\n\n<pre><code>use std::fmt;\n\npub struct SndbDB {}\n\nimpl SndbDB {\n    fn new() -&gt; SndbDB {\n        SndbDB {}\n    }\n}\n\nimpl fmt::Display for SndbDB {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        write!(f, \"(sndb_db)\")\n    }\n}\n\n// Implement a destructor just so we can see when the object is destroyed.\nimpl Drop for SndbDB {\n    fn drop(&amp;mut self) {\n        println!(\"[rust] dropping {}\", self);\n    }\n}\n\n#[no_mangle]\npub extern \"C\" fn sndb_db_create() -&gt; *mut SndbDB {\n    let _db = Box::into_raw(Box::new(SndbDB::new()));\n    println!(\"[rust] creating DB {:?}\", _db);\n    _db\n}\n\n#[no_mangle]\npub unsafe extern \"C\" fn sndb_db_destroy(ptr: *mut SndbDB) {\n    println!(\"[rust] destroying DB {:?}\", ptr);\n    Box::from_raw(ptr); // Rust drops this for us.\n}\n</code></pre>\n\n<p>The C calling code is trivial too:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>typedef struct sndb_db sndb_db;\n\nsndb_db * sndb_db_create(void);\nvoid sndb_db_destroy(sndb_db* db);\n\nvoid test_baseapi__create_and_destroy_db(void)\n{\n    sndb_db * db = sndb_db_create();\n    printf(\"[C] Got db=%p\\n\",db);\n    sndb_db_destroy(db);\n    printf(\"[C] db should be dead by now...\\n\");\n}\n</code></pre>\n\n<p>And all the output except the pointer location are as I expect:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[rust] creating DB 0x1\n[C] Got db=0x1\n[rust] destroying DB 0x1\n[rust] dropping (sndb_db)\n[C] db should be dead by now...\n</code></pre>\n\n<p>I know that memory allocated in Rust needs to be deallocated by Rust - but I'm still surprised it is using a location of <code>0x1</code> - am I doing something wrong, is something odd happening, or is this all OK?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 321, "user_id": 7562670, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/lyaYy.jpg?s=128&g=1", "display_name": "Seiichi Uchida", "link": "https://stackoverflow.com/users/7562670/seiichi-uchida"}, "is_accepted": true, "score": 1, "last_activity_date": 1511557976, "creation_date": 1511557976, "answer_id": 47480088, "question_id": 47478159, "link": "https://stackoverflow.com/questions/47478159/per-declaration-rustfmt-configuration/47480088#47480088", "title": "Per-declaration rustfmt configuration", "body": "<p>It is not possible. </p>\n\n<p>FWIW you can put <code>#[rustfmt_skip]</code> or <code>#[cfg_attr(rustfmt, rustfmt_skip)]</code> on expressions or items to skip the formatting.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn foo() {\n    #[rustfmt_skip]\n    let x = [1, 2, 3, 4, 5, \n             6, 7, 8, 9, 10];\n}\n</code></pre>\n"}], "owner": {"reputation": 13635, "user_id": 547365, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ddefbca930fdd39846b698bab7ac3146?s=128&d=identicon&r=PG", "display_name": "w.brian", "link": "https://stackoverflow.com/users/547365/w-brian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 60, "favorite_count": 0, "accepted_answer_id": 47480088, "answer_count": 1, "score": 1, "last_activity_date": 1511557976, "creation_date": 1511546231, "question_id": 47478159, "link": "https://stackoverflow.com/questions/47478159/per-declaration-rustfmt-configuration", "title": "Per-declaration rustfmt configuration", "body": "<p>I have a large array of structs that formats poorly using rustfmt's default indent setting. For this particular declaration, <code>Visual</code> indenting is more appropriate.</p>\n\n<p>Is it possible to configure formatting per-declaration using attributes so I can supply an indent setting (or any setting) on a per-need basis? </p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 883, "user_id": 2482947, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/430a6af757fa56045c6bdf2d1a6931db?s=128&d=identicon&r=PG", "display_name": "hadilq", "link": "https://stackoverflow.com/users/2482947/hadilq"}, "edited": false, "score": 0, "creation_date": 1511546965, "post_id": 47478096, "comment_id": 81911228, "body": "Thank you for information :) I read most of these things but I cannot figure it out how to implement them :D BTW, what do you mean by &quot;I&#39;d probably switch to <code>Rc</code> instead of <code>&amp;mut</code>&quot;? I have <code>Rc</code> in my code!  Do you mean just defining the list as <code>list: Rc&lt;RefCell&lt;Vec&lt;Handler&gt;&gt;&gt;</code>? I did that in the first place and ran into this error: &quot;self.list.borrow_mut().push(self) ^^^^ expected struct <code>Handler</code>, found mutable reference&quot;. Also you mentioned that &quot;they all need to have exactly the same lifetime&quot;. Actually I want handlers to have shorter lifetime than the list. Is it possible? Thanks again."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 883, "user_id": 2482947, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/430a6af757fa56045c6bdf2d1a6931db?s=128&d=identicon&r=PG", "display_name": "hadilq", "link": "https://stackoverflow.com/users/2482947/hadilq"}, "edited": false, "score": 2, "creation_date": 1511554741, "post_id": 47478096, "comment_id": 81913881, "body": "@hadilq I mean I wouldn&#39;t use mutable references (<code>&amp;mut</code>), but instead would use <code>Rc&lt;RefCell&lt;T&gt;&gt;</code> <a href=\"https://play.integer32.com/?gist=229b0de1f84cdce9ee02cba26bbe30e5&amp;version=nightly\" rel=\"nofollow noreferrer\">play.integer32.com/&hellip;</a>"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1511545834, "creation_date": 1511545834, "answer_id": 47478096, "question_id": 47477739, "link": "https://stackoverflow.com/questions/47477739/what-is-the-the-anonymous-lifetime-1-and-how-can-i-define-it-in-the-right-way/47478096#47478096", "title": "What is the &quot;the anonymous lifetime #1&quot; and how can I define it in the right way?", "body": "<blockquote>\n  <p>What is the \"the anonymous lifetime #1\" </p>\n</blockquote>\n\n<p>\"Anonymous\" means something without a name. Lifetimes are things associated with references. Where are the references on line 14?</p>\n\n<pre><code>fn push(&amp;mut self)\n//      ^ here\n</code></pre>\n\n<p>Due to <a href=\"https://doc.rust-lang.org/stable/book/second-edition/ch10-03-lifetime-syntax.html#lifetime-elision\" rel=\"nofollow noreferrer\">lifetime elision</a>, you don't have to have an explicit lifetime, allowing it to be implicit (and anonymous).</p>\n\n<p>Your code requires that the <code>Vec</code> contains <code>&amp;'a mut Handler&lt;'a&gt;</code>, but you are trying to put in a <code>&amp;mut Handler&lt;'a&gt;</code> \u2014 the lifetime of the reference has no known relation to the lifetime <code>'a</code>. The error is telling you this is invalid. You can fix <em>this</em> error by relating the lifetimes:</p>\n\n<pre><code>fn push(&amp;'a mut self)\n</code></pre>\n\n<p>This doesn't fix the entire program, however.</p>\n\n<hr>\n\n<p>Your specific code structure will probably never work the way you want it to. You want to have a list of references to handlers that themselves contain references to handlers and all of these need to have <em>exactly</em> the same lifetime. However, you then declare that the list and handlers all live for different durations as they are declared separately.</p>\n\n<p>I don't know why you'd want the structure you show, but if I needed it I'd probably switch to <code>Rc</code> for the handlers instead of <code>&amp;mut</code>.</p>\n"}], "owner": {"reputation": 883, "user_id": 2482947, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/430a6af757fa56045c6bdf2d1a6931db?s=128&d=identicon&r=PG", "display_name": "hadilq", "link": "https://stackoverflow.com/users/2482947/hadilq"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1875, "favorite_count": 0, "accepted_answer_id": 47478096, "answer_count": 1, "score": 2, "last_activity_date": 1511545834, "creation_date": 1511544012, "last_edit_date": 1511545214, "question_id": 47477739, "link": "https://stackoverflow.com/questions/47477739/what-is-the-the-anonymous-lifetime-1-and-how-can-i-define-it-in-the-right-way", "title": "What is the &quot;the anonymous lifetime #1&quot; and how can I define it in the right way?", "body": "<p>I want the <code>Handler</code> below to push itself into the list</p>\n\n<pre><code>use std::vec::Vec;\nuse std::rc::Rc;\nuse std::cell::RefCell;\n\nstruct Handler&lt;'a&gt; {\n    list: Rc&lt;RefCell&lt;Vec&lt;&amp;'a mut Handler&lt;'a&gt;&gt;&gt;&gt;\n}\n\nimpl&lt;'a&gt; Handler&lt;'a&gt; {\n    fn new(list: Rc&lt;RefCell&lt;Vec&lt;&amp;'a mut Handler&lt;'a&gt;&gt;&gt;&gt;) -&gt; Self {\n        Handler { list: list }\n    }\n\n    fn push(&amp;mut self) {\n        self.list.borrow_mut().push(self)\n    }\n}\n\nfn main() {\n    let list = Rc::new(RefCell::new(Vec::new()));\n\n    let mut h1 = Handler::new(list);\n    let mut h2 = Handler::new(list);\n\n    h1.push();\n    h2.push();\n\n    // Here the list should contain both h1 and h2\n\n}\n</code></pre>\n\n<p>but I faced this error and I cannot find a way to pass it!</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0312]: lifetime of reference outlives lifetime of borrowed content...\n  --&gt; src/main.rs:15:37\n   |\n15 |         self.list.borrow_mut().push(self)\n   |                                     ^^^^\n   |\nnote: ...the reference is valid for the lifetime 'a as defined on the impl at 9:1...\n  --&gt; src/main.rs:9:1\n   |\n9  | / impl&lt;'a&gt; Handler&lt;'a&gt; {\n10 | |     fn new(list: Rc&lt;RefCell&lt;Vec&lt;&amp;'a mut Handler&lt;'a&gt;&gt;&gt;&gt;) -&gt; Self {\n11 | |         Handler { list: list }\n12 | |     }\n...  |\n16 | |     }\n17 | | }\n   | |_^\nnote: ...but the borrowed content is only valid for the anonymous lifetime #1 defined on the method body at 14:5\n  --&gt; src/main.rs:14:5\n   |\n14 | /     fn push(&amp;mut self) {\n15 | |         self.list.borrow_mut().push(self)\n16 | |     }\n   | |_____^\n</code></pre>\n\n<p>What is the \"the anonymous lifetime #1\" and how can I define it in the right way? Or even, is my approach correct to this problem in Rust?</p>\n"}, {"tags": ["struct", "nested", "rust", "lifetime"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1511542287, "post_id": 47477301, "comment_id": 81909423, "body": "<code>vector</code> owns a <code>Vec</code>. You take a reference to it, but then transfer ownership of <code>vector</code> to the <code>HashMap</code>. This also changes the address of <code>vector</code>, invalidating any references to it. You&#39;ll either want to split up <code>SuperStruct</code>&#39;s members into two different structures, use <code>Rc</code> or <code>Arc</code>, or maybe one of the crates like rental or owning_ref."}, {"owner": {"reputation": 306, "user_id": 2991833, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/b8a30c9fcd21b61d418bce3deb84fb2e?s=128&d=identicon&r=PG&f=1", "display_name": "sjp", "link": "https://stackoverflow.com/users/2991833/sjp"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1511544254, "post_id": 47477301, "comment_id": 81910237, "body": "After reading the suggested duplicate (which provided an excellent answer to my original question), I have revised the design and edited the question."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1511553927, "post_id": 47477301, "comment_id": 81913624, "body": "Please do not drastically change your question after it has been answered (and a duplicate counts as an answer), especially as you say it &quot;provided an excellent answer to my original question&quot;. Duplicates are not a bad thing on Stack Overflow, they serve as signposts for future searchers having the same problem. You are instead welcome to ask another question on a new topic."}, {"owner": {"reputation": 306, "user_id": 2991833, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/b8a30c9fcd21b61d418bce3deb84fb2e?s=128&d=identicon&r=PG&f=1", "display_name": "sjp", "link": "https://stackoverflow.com/users/2991833/sjp"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1511562646, "post_id": 47477301, "comment_id": 81916282, "body": "Fair enough, thanks for undoing the edit."}], "owner": {"reputation": 306, "user_id": 2991833, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/b8a30c9fcd21b61d418bce3deb84fb2e?s=128&d=identicon&r=PG&f=1", "display_name": "sjp", "link": "https://stackoverflow.com/users/2991833/sjp"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 28, "favorite_count": 0, "closed_date": 1511542051, "answer_count": 0, "score": 0, "last_activity_date": 1511553936, "creation_date": 1511541908, "last_edit_date": 1511553936, "question_id": 47477301, "link": "https://stackoverflow.com/questions/47477301/lifetimes-in-nested-structs", "closed_reason": "Duplicate", "title": "Lifetimes in nested structs", "body": "<p>I have a struct that contains a vector of substructs, each requiring some rather large data structure for computations, which may or may not be shared with other substructs. Thus, it makes sense that the superstruct owns these data structures and the substructs only have references. Attempting to write a constructor for this, I'm running into a lifetime error I can't quite decipher.</p>\n\n<p>Minimal non-working example:</p>\n\n<pre><code>use std::collections::HashMap;\n\nstruct SuperStruct&lt;'a&gt; {\n    hash_map: HashMap&lt;String, Vec&lt;f64&gt;&gt;,\n    substructs: Vec&lt;SubStruct&lt;'a&gt;&gt;,\n}\n\nimpl&lt;'a&gt; SuperStruct&lt;'a&gt; {\n    fn new(vectors: Vec&lt;Vec&lt;f64&gt;&gt;) -&gt; SuperStruct&lt;'a&gt; {\n        let mut substructs = vec![];\n        let mut hash_map = HashMap::new();\n        let mut k = 0;\n\n        for vector in vectors {\n            substructs.push(SubStruct { reference: &amp;vector });\n            hash_map.insert(format!(\"vec_{}\", k), vector);\n            k += 1;\n        }\n        SuperStruct{ hash_map, substructs }\n    }\n}\n\nstruct SubStruct&lt;'a&gt; {\n    reference: &amp;'a Vec&lt;f64&gt;,\n}\n\nfn main() {\n    // println!(\"Hello\");\n}\n</code></pre>\n\n<p>Trying to compile this results in the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `vector` does not live long enough\n  --&gt; moo.rs:15:53\n   |\n15 |             substructs.push(SubStruct { reference: &amp;vector });\n   |                                                     ^^^^^^ does \nnot live long enough\n...\n18 |         }\n   |          - borrowed value only lives until here\n   |\nnote: borrowed value must be valid for the lifetime 'a as defined on \nthe impl at 8:1...\n  --&gt; moo.rs:8:1\n   |\n8  | / impl&lt;'a&gt; SuperStruct&lt;'a&gt; {\n9  | |     fn new(vectors: Vec&lt;Vec&lt;f64&gt;&gt;) -&gt; SuperStruct&lt;'a&gt; {\n10 | |         let mut substructs = vec![];\n11 | |         let mut hash_map = HashMap::new();\n...  |\n20 | |     }\n21 | | }\n   | |_^\n</code></pre>\n\n<p>I bet I'm missing something really obvious, but what is it?</p>\n"}, {"tags": ["rust", "fold"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 3, "creation_date": 1511522225, "post_id": 47471953, "comment_id": 81898577, "body": "<code>|sum x|</code> is not valid Rust syntax. I invite you to write a proper <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> of what you have."}, {"owner": {"reputation": 579, "user_id": 832818, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/5857f550fb66aeaf5912b63c4e9589ce?s=128&d=identicon&r=PG&f=1", "display_name": "Darakian", "link": "https://stackoverflow.com/users/832818/darakian"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1511522745, "post_id": 47471953, "comment_id": 81898856, "body": "Well... it compiles and runs so... ya. As for writing a proper example... I&#39;m asking a question about that every segment of code which I don&#39;t understand. Rewriting something that I don&#39;t understand probably won&#39;t result in a better code segment."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 3, "creation_date": 1511522991, "post_id": 47471953, "comment_id": 81899002, "body": "That&#39;s not how it works. It&#39;s the asker&#39;s job to provide a minimal, yet reproducible example of what you are experiencing. I&#39;m telling you that what you put in the question should not compile, so what you have in the question right now <i>is insufficient</i> for us to understand the problem. Whether you don&#39;t understand it either is usually not relevant, working on a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> is part of the asking process. Also, please include your compiler&#39;s version and toolchain."}], "answers": [{"comments": [{"owner": {"reputation": 579, "user_id": 832818, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/5857f550fb66aeaf5912b63c4e9589ce?s=128&d=identicon&r=PG&f=1", "display_name": "Darakian", "link": "https://stackoverflow.com/users/832818/darakian"}, "edited": false, "score": 1, "creation_date": 1511527835, "post_id": 47472823, "comment_id": 81901869, "body": "Got it. I was unsure if x was itself an element of the tuple or if it was the tuple itself. Thank you!"}], "tags": [], "owner": {"reputation": 3583, "user_id": 1391026, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/af98bdbeea8772f2d90d47d507098256?s=128&d=identicon&r=PG", "display_name": "musicmatze", "link": "https://stackoverflow.com/users/1391026/musicmatze"}, "is_accepted": true, "score": 4, "last_activity_date": 1511529189, "last_edit_date": 1511529189, "creation_date": 1511524595, "answer_id": 47472823, "question_id": 47471953, "link": "https://stackoverflow.com/questions/47471953/rust-folding-a-set-of-tuples/47472823#47472823", "title": "Rust: Folding a set of tuples", "body": "<p>You really should show a minimal, complete, and verifiable example.</p>\n\n<p>First, I'd suggest you read the Rust book. It is really good and will show you the basics of Rust, especially iterators, which seems to be your problem here.</p>\n\n<p>Also, <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.fold\" rel=\"nofollow noreferrer\">the documentation of the <code>fold</code> function</a> might help you a lot.</p>\n\n<p>I simplified your example from above, because I do not know about the <code>generic_array::GenericArray&lt;u8, generic_array::typenum::U32&gt;</code> type, so I removed it, assuming you want to summarize the <code>u64</code> from the tuple:</p>\n\n<pre><code>use std::collections::HashSet;\n\n#[allow(unused_variables)]\nfn main() {\n    let values: HashSet&lt;(String, u64)&gt; = HashSet::new();\n    let sum = values.iter().fold(0, |acc, x| acc + x.1);\n}\n</code></pre>\n\n<p>The <code>x.1</code> syntax accesses the second element (counting starts at zero) of the tuple. That'd be <code>x.2</code> in your case, because you have three elements.\nThe <code>fold</code> method takes an initial value (<code>0</code> in my example`) and a closure.</p>\n\n<p>The closure in your example is not valid Rust code (it is missing the comma between the arguments) and it therefor won't compile. Go ahead and read how the <code>Iterator::fold</code> function works, you'll understand then how this works.</p>\n"}], "owner": {"reputation": 579, "user_id": 832818, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/5857f550fb66aeaf5912b63c4e9589ce?s=128&d=identicon&r=PG&f=1", "display_name": "Darakian", "link": "https://stackoverflow.com/users/832818/darakian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1571, "favorite_count": 0, "accepted_answer_id": 47472823, "answer_count": 1, "score": -5, "last_activity_date": 1511529189, "creation_date": 1511521557, "question_id": 47471953, "link": "https://stackoverflow.com/questions/47471953/rust-folding-a-set-of-tuples", "title": "Rust: Folding a set of tuples", "body": "<p>I'm working on a pet project and I've found myself with a HashSet of tuples. Specifically</p>\n\n<pre><code>HashSet&lt;(String,generic_array::GenericArray&lt;u8,generic_array::typenum::U32&gt;, u64)&gt;\n</code></pre>\n\n<p>I'd like to sum the u64 element and can do so with a for loop without issue</p>\n\n<pre><code>for element in hashset{\n        sum = sum+element.2;\n    }\n</code></pre>\n\n<p>However, I've come across the fold function for sets and I've written </p>\n\n<pre><code>let y = hashset.fold(0, |sum x| sum+x)\n</code></pre>\n\n<p>Which works, but I'm unclear on the syntax of the |sum x|. I can infer that I'm simply naming variables, but I don't understand how I would expand on this. Also how does fold know which element of the tuple to operate on?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 22050, "user_id": 497364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8fd4eb2ae966a16e698b3e61217a7e1?s=128&d=identicon&r=PG", "display_name": "Paolo Falabella", "link": "https://stackoverflow.com/users/497364/paolo-falabella"}, "is_accepted": false, "score": 3, "last_activity_date": 1511530487, "last_edit_date": 1511530487, "creation_date": 1511514700, "answer_id": 47469827, "question_id": 47467936, "link": "https://stackoverflow.com/questions/47467936/what-is-the-ownership-of-self-in-matching-expression-for-impl-of-struct-in-rust/47469827#47469827", "title": "What is the ownership of *self in matching expression for impl of struct in rust", "body": "<p><code>match</code> <em>by itself</em> does not move anything. Moves, copies or borrows happen in the branches of the <code>match</code>.\nExample:</p>\n\n<pre><code>let s = \"test\".to_string();\nlet a = s; // this is a move\n// println!(\"{}\", s); // ... so this is a \"use after move\" compilation error\n</code></pre>\n\n<p>but if we do:</p>\n\n<pre><code>match a { // this is allowed, a does not move anywhere\n    // but in the branch...\n    // this is an error: it would move a to res\n    // res if res == \"test\".to_string() =&gt; \"ok\",\n    // ^^^ moves value into pattern guard\n    ref res if res == \"test\" =&gt; \"ok\", // with ref it's fine (we're\n    // taking a by reference)\n    _ =&gt; \"ko\",\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=21d496bac120342de82e7815430f671c&amp;version=stable\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>Note that you might indeed run into ownership issues in the <code>match</code>, but they are typically due to something you're doing after the <code>match</code> keyword.</p>\n\n<p>For instance this fails:</p>\n\n<pre><code>// let's break the string in two pieces\nmatch a.split_off(2)\n//    ^ cannot borrow mutably\n</code></pre>\n\n<p>but it's because of the <code>split_off</code> that takes <code>&amp;mut self</code>, not the <code>match</code> on the result.</p>\n"}], "owner": {"reputation": 31, "user_id": 9002090, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bbef3146558b21228fd9c8ee3c9861b8?s=128&d=identicon&r=PG&f=1", "display_name": "user9002090", "link": "https://stackoverflow.com/users/9002090/user9002090"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 239, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1511530487, "creation_date": 1511507082, "question_id": 47467936, "link": "https://stackoverflow.com/questions/47467936/what-is-the-ownership-of-self-in-matching-expression-for-impl-of-struct-in-rust", "title": "What is the ownership of *self in matching expression for impl of struct in rust", "body": "<p>I am using example from <a href=\"https://doc.rust-lang.org/book/second-edition/ch15-06-reference-cycles.html\" rel=\"nofollow noreferrer\">here</a></p>\n\n<pre><code>#[derive(Debug)]\nenum List {\n    Cons(i32, RefCell&lt;Rc&lt;List&gt;&gt;),\n    Nil,\n}\n\nimpl List {\n    fn tail(&amp;self) -&gt; Option&lt;&amp;RefCell&lt;Rc&lt;List&gt;&gt;&gt; {\n        match *self {\n            Cons(_, ref item) =&gt; Some(item),\n            Nil =&gt; None,\n        }\n    }\n}\n</code></pre>\n\n<p>Given the function signature is <code>&amp;self</code> ,  <code>self</code> is of reference type pointing at <code>List</code> and <code>*self</code> is the <code>List</code> instance itself.</p>\n\n<p>But I remember <code>match</code> also take ownership of the object it is matching, so doesn't that cause problem to the struct because the <code>List</code> instance is move to <code>match</code> and not give back?</p>\n\n<p>Also isn't <code>&amp;self</code> immutable, why are we able to move <code>self</code> to <code>match</code>? </p>\n"}, {"tags": ["macros", "rust"], "answers": [{"comments": [{"owner": {"reputation": 1565, "user_id": 758801, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/2xIHo.png?s=128&g=1", "display_name": "Mats Kindahl", "link": "https://stackoverflow.com/users/758801/mats-kindahl"}, "edited": false, "score": 0, "creation_date": 1511536825, "post_id": 47468218, "comment_id": 81906775, "body": "I tested your example and it works fine, but when I try to change it into using a separate macro <code>inner!</code> instead of adding the <code>@parse</code> tokens it fails with an error on the <code>=&gt;</code>  after the 0. I checked the code and compared with yours, but I cannot see why it fails to handle the same constructions as input. Do you have any explanation to why?"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 1565, "user_id": 758801, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/2xIHo.png?s=128&g=1", "display_name": "Mats Kindahl", "link": "https://stackoverflow.com/users/758801/mats-kindahl"}, "edited": false, "score": 0, "creation_date": 1511536960, "post_id": 47468218, "comment_id": 81906849, "body": "@MatsKindahl: Well, I&#39;m not psychic, so I don&#39;t know what you changed.  Obviously something important.  Also, I lightly recommend against using two macros; it&#39;s generally cleaner to keep all functionality for a macro in one place."}, {"owner": {"reputation": 1565, "user_id": 758801, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/2xIHo.png?s=128&g=1", "display_name": "Mats Kindahl", "link": "https://stackoverflow.com/users/758801/mats-kindahl"}, "edited": false, "score": 0, "creation_date": 1511537194, "post_id": 47468218, "comment_id": 81906980, "body": "The arguments under <a href=\"https://danielkeep.github.io/tlborm/book/pat-internal-rules.html\" rel=\"nofollow noreferrer\">internal rules</a> is perfectly valid, but I am wondering if there are some semantics of macro parsing that I am missing. If there is nothing special in that respect with adding the <code>@parse</code> I&#39;ll just ascribe it to some mistake I made."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 1565, "user_id": 758801, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/2xIHo.png?s=128&g=1", "display_name": "Mats Kindahl", "link": "https://stackoverflow.com/users/758801/mats-kindahl"}, "edited": false, "score": 0, "creation_date": 1511537291, "post_id": 47468218, "comment_id": 81907027, "body": "@MatsKindahl: If you don&#39;t show me how you changed it, I cannot help you.  I cannot diagnose code I cannot see."}, {"owner": {"reputation": 1565, "user_id": 758801, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/2xIHo.png?s=128&g=1", "display_name": "Mats Kindahl", "link": "https://stackoverflow.com/users/758801/mats-kindahl"}, "edited": false, "score": 0, "creation_date": 1511541234, "post_id": 47468218, "comment_id": 81908962, "body": "It was a stupid error and there are nothing in the semantics that require the use of the keyword, even though I agree on the reasons for doing it this way. Thanks for the help!"}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 7, "last_activity_date": 1511529934, "last_edit_date": 1511529934, "creation_date": 1511508208, "answer_id": 47468218, "question_id": 47467568, "link": "https://stackoverflow.com/questions/47467568/recursive-macro-to-parse-match-arms-in-rust/47468218#47468218", "title": "Recursive macro to parse match arms in Rust", "body": "<p>When you need to branch based on different matches inside repetitions like this, you need to do <a href=\"https://danielkeep.github.io/tlborm/book/pat-incremental-tt-munchers.html\" rel=\"noreferrer\">incremental parsing</a>.</p>\n\n<p>So.</p>\n\n<pre><code>macro_rules! parse {\n</code></pre>\n\n<p>This is the entry point for the macro.  It sets up the outer-most layer, and feeds the input into a general parsing rule.  We pass down <code>chars</code> so the deeper layers can find it.</p>\n\n<pre><code>    ($buf:expr, {$($body:tt)*}) =&gt; {\n        {\n            let mut chars = $buf.chars().peekable();\n            parse! { @parse chars, {}, $($body)* }\n        }\n    };\n</code></pre>\n\n<p>Termination rule: once we run out of input (modulo some commas), dump the accumulated match arm code fragments into a <code>match</code> expression, and append the final catch-all arm.</p>\n\n<pre><code>    (@parse $chars:expr, {$($arms:tt)*}, $(,)*) =&gt; {\n        match $chars.peek() {\n            $($arms)*\n            _ =&gt; None\n        }\n    };\n</code></pre>\n\n<p>Alternately, if the catch-all arm is specified, use that.</p>\n\n<pre><code>    (@parse $chars:expr, {$($arms:tt)*}, _ =&gt; $e:expr $(,)*) =&gt; {\n        match $chars.peek() {\n            $($arms)*\n            _ =&gt; Some($e)\n        }\n    };\n</code></pre>\n\n<p>This handles the recursion.  If we see a block, we advance <code>$chars</code> and parse the contents of the block with an empty code accumulator.  The result of all this is <a href=\"https://danielkeep.github.io/tlborm/book/pat-push-down-accumulation.html\" rel=\"noreferrer\">appended to the current accumulator</a> (<em>i.e.</em> <code>$($arms)</code>).</p>\n\n<pre><code>    (@parse $chars:expr, {$($arms:tt)*}, $p:pat =&gt; { $($block:tt)* }, $($tail:tt)*) =&gt; {\n        parse! {\n            @parse\n            $chars,\n            {\n                $($arms)*\n                Some(&amp;$p) =&gt; {\n                    $chars.next().unwrap();\n                    parse!(@parse $chars, {}, $($block)*)\n                },\n            },\n            $($tail)*\n        }\n    };\n</code></pre>\n\n<p>The non-recursive case.</p>\n\n<pre><code>    (@parse $chars:expr, {$($arms:tt)*}, $p:pat =&gt; $e:expr, $($tail:tt)*) =&gt; {\n        parse! {\n            @parse\n            $chars,\n            {\n                $($arms)*\n                Some(&amp;$p) =&gt; Some($e),\n            },\n            $($tail)*\n        }\n    };\n}\n</code></pre>\n\n<p>And, for completeness, the rest of the test code.  Note that I had to change <code>test1</code>, as it wasn't a valid test.</p>\n\n<pre><code>#[derive(Debug, PartialEq)]\nenum Digit { One, Two, Three, Ten, Eleven }\n\n#[test]\nfn test1() {\n    let buf = \"111\";\n    let token = parse!(buf, {\n        '1' =&gt; Digit::One,\n        '2' =&gt; Digit::Two,\n        '3' =&gt; Digit::Three,\n    });\n    assert_eq!(token, Some(Digit::One));\n}\n\n#[test]\nfn test2() {\n    let buf = \"111\";\n    let token = parse!(buf, {\n        '1' =&gt; {\n            '0' =&gt; Digit::Ten,\n            '1' =&gt; Digit::Eleven,\n            _ =&gt; Digit::One,\n        },\n        '2' =&gt; Digit::Two,\n        '3' =&gt; Digit::Three,\n    });\n    assert_eq!(token, Some(Digit::Eleven));\n}\n</code></pre>\n"}], "owner": {"reputation": 1565, "user_id": 758801, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/2xIHo.png?s=128&g=1", "display_name": "Mats Kindahl", "link": "https://stackoverflow.com/users/758801/mats-kindahl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2068, "favorite_count": 0, "accepted_answer_id": 47468218, "answer_count": 1, "score": 2, "last_activity_date": 1511529934, "creation_date": 1511505244, "last_edit_date": 1511529886, "question_id": 47467568, "link": "https://stackoverflow.com/questions/47467568/recursive-macro-to-parse-match-arms-in-rust", "title": "Recursive macro to parse match arms in Rust", "body": "<p>I am trying to write a macro to expand a set of rules into code that perform token matching, but am unable to generate the proper code without causing macro expansion errors. I know that I can handle this other ways, but the key question here is not how to parse tokens but rather how to write a macro that can recursively expand a token tree with match arms.</p>\n\n<p>The idea is that we want to read a token from the string and print it out. More code need to be added to turn it into something more useful, but this example serves to illustrate the situation:</p>\n\n<pre><code>#[derive(Debug, PartialEq)]\nenum Digit {\n    One,\n    Two,\n    Three,\n    Ten,\n    Eleven,\n}\n\n#[test]\nfn test1(buf: &amp;str) {\n    let buf = \"111\";\n    let token = parse!(buf, {\n        '1' =&gt; Digit::One,\n        '2' =&gt; Digit::Two,\n        '3' =&gt; Digit::Three,\n    });\n    assert_eq!(token, Some(Digit::One));\n}\n</code></pre>\n\n<p>The code we want to generate from this example is:</p>\n\n<pre><code>fn test1(buf: &amp;str) {\n    let token = {\n        let mut chars = buf.chars().peekable();\n        match chars.peek() {\n            Some(&amp;'1') =&gt; {\n                chars.next().unwrap();\n                Digit::One\n            }\n            Some(&amp;'2') =&gt; {\n                chars.next().unwrap();\n                Digit::Two\n            }\n            Some(&amp;'3') =&gt; {\n                chars.next().unwrap();\n                Digit::Three\n            }\n            Some(_) | None =&gt; None,\n        }\n    };\n    assert_eq!(token, Some(Digit::One));\n}\n</code></pre>\n\n<p>Ignore the fact that we do not read more tokens from the string and hence the <code>chars.next().unwrap()</code> is not very useful.  It will be useful later.</p>\n\n<p>The macro for generating the above code is straightforward:</p>\n\n<pre><code>macro_rules! parse {\n    ($e:expr, { $($p:pat =&gt; $t:expr),+ }) =&gt; {\n        {\n            let mut chars = $e.chars().peekable();\n            match chars.peek() {\n                $(Some(&amp;$p) =&gt; {\n                    chars.next().unwrap();\n                    Some($t)\n                },)+\n                Some(_) | None =&gt; None\n            }\n        }\n    };\n}\n</code></pre>\n\n<p>Let us now expand this example to handle a little more advanced matching and allow it to read multiple characters with lookahead, so only if the characters match certain patterns. If not, the extraneous characters should not be read. We create a token tree with match arms in a similar way to the previous example, but here we want to support a recursive structure:</p>\n\n<pre><code>#[test]\nfn test2() {\n    let buf = \"111\";\n    let token = parse!(buf, {\n        '1' =&gt; {\n            '0' =&gt; Digit::Ten,\n            '1' =&gt; Digit::Eleven,\n            _ =&gt; Digit::One,\n        },\n        '2' =&gt; Digit::Two,\n        '3' =&gt; Digit::Three\n    });\n    assert_eq!(token, Some(Digit::Eleven));\n}\n</code></pre>\n\n<p>The code we want to generate from this example is:</p>\n\n<pre><code>fn test2() {\n    let buf = \"111\";\n    let token = {\n        let mut chars = buf.chars().peekable();\n        match chars.peek() {\n            Some(&amp;'1') =&gt; {\n                chars.next().unwrap();\n                match chars.peek() {\n                    Some(&amp;'0') =&gt; {\n                        chars.next().unwrap();\n                        Some(Digit::Ten)\n                    },\n                    Some(&amp;'1') =&gt; {\n                        chars.next().unwrap();\n                        Some(Digit::Eleven)\n                    },\n                    Some(_) | None =&gt; Some(Digit::One)\n                }\n            },\n            Some(&amp;'2') =&gt; {\n                chars.next().unwrap();\n                Some(Digit::Two)\n            },\n            Some(&amp;'3') =&gt; {\n                chars.next().unwrap();\n                Some(Digit::Three)\n            },\n            Some(_) | None =&gt; None,\n        }\n    };\n    assert_eq!(token, Some(Digit::Eleven));\n}\n</code></pre>\n\n<p>Trying to write a macro to handle this could work roughly like this:</p>\n\n<pre><code>macro_rules! expand {\n    ($t:tt) =&gt; {{\n        chars.next().unwrap();\n        inner!($t)\n    }};\n    ($e:expr) =&gt; {{\n        chars.next().unwrap();\n        Some($e)\n    }};\n}\n\nmacro_rules! inner {\n    ($i:ident, { $($p:pat =&gt; ???),+ }) =&gt; {\n        match $i.peek() {\n            $( Some(&amp;$p) =&gt; expand!($i, ???), )+\n            Some(_) | None =&gt; None\n        }\n    };\n}\n\nmacro_rules! parse {\n    ($e:expr, $t:tt) =&gt; {\n        {\n            let mut chars = $e.chars().peekable();\n            inner!(chars, $t)\n        }\n    };\n}\n</code></pre>\n\n<p>However, I am unable to find something to replace the <code>???</code> in the <code>inner!</code>\nmacro with something that matches either an expression or a token tree.</p>\n\n<ul>\n<li><p>Something like <code>$e:expr</code> will not be able to match a token tree at this point.</p></li>\n<li><p>Something like <code>$t:tt</code> does not match the enum constant <code>Digit::Two</code>, which is a perfectly valid expression.</p></li>\n<li><p>Something like <code>$($rest:tt)*</code> as a generic matcher will fail since the Kleene-star closure is greedy and will try to match the following comma.</p></li>\n<li><p>A <a href=\"https://doc.rust-lang.org/book/first-edition/macros.html#recursive-macros\" rel=\"nofollow noreferrer\">recursive macro</a> matching the items one by one, e.g., a pattern along the lines <code>{ $p:pat =&gt; $t:expr, $($rest:tt)* }</code> will not be possible to expand inside the <code>match</code> statement in the <code>inner!</code> macro since that expect something that syntactically looks like <code>... =&gt; ...</code>, so this expansion gives an error claiming that it expect a <code>=&gt;</code> after the macro:</p>\n\n<pre><code>match $e.peek() {\n     Some(&amp;$p) =&gt; ...$t...,\n     inner!($rest)\n                   ^ Expect =&gt; here\n}\n</code></pre></li>\n</ul>\n\n<p>This looks like one of the <a href=\"https://doc.rust-lang.org/book/first-edition/macros.html#syntactic-requirements\" rel=\"nofollow noreferrer\">syntactic requirements</a> mentioned in the book.</p>\n\n<p>Changing the syntax of the matching part does not allow use of the <code>pat</code>\nrequirement since that need to be followed by a <code>=&gt;</code> (according to <a href=\"https://doc.rust-lang.org/book/first-edition/macros.html\" rel=\"nofollow noreferrer\">the macro chapter in the book</a>).</p>\n"}, {"tags": ["rust", "specialization"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1511529713, "post_id": 47470135, "comment_id": 81902914, "body": "<i>What happens if someone were to implement this with It being <code>String</code></i> \u2014 this isn&#39;t the implementation in the <i>trait</i>, it&#39;s a blanket implementation. If you <a href=\"https://play.integer32.com/?gist=bbeb840a5ab82e605c2ad8e35938bc76&amp;version=stable\" rel=\"nofollow noreferrer\">remove the <code>default</code> and the specialized impl</a>, then the code works. What makes the specializable implementation different from a regular implementation?"}, {"owner": {"reputation": 1699, "user_id": 783825, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/cce2622c5ccd49a3cbf2007491ab1075?s=128&d=identicon&r=PG", "display_name": "Neikos", "link": "https://stackoverflow.com/users/783825/neikos"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1511530859, "post_id": 47470135, "comment_id": 81903649, "body": "Because in that case it&#39;s a concrete type.  You only need the <code>default type It = u8;</code> for it to compile. Since with the Default trait bound, that implementation always works.  See here: <a href=\"https://play.rust-lang.org/?gist=0f5da74bbfbbf4f818cefa134d27f4fc&amp;version=nightly\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 321, "user_id": 6193633, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/f642d3c45da4db031e2d41798d1801a5?s=128&d=identicon&r=PG&f=1", "display_name": "kdy", "link": "https://stackoverflow.com/users/6193633/kdy"}, "edited": false, "score": 0, "creation_date": 1511697040, "post_id": 47470135, "comment_id": 81946634, "body": "I don&#39;t want to return something simple which can be cretead from Default::default() but I accepted this answer as my example was wrong, and I will use oibits to solve this. I didn&#39;t want to use oibits because it seems like forever-unstable, but it works, and I expect specialization feature to be improve support that case"}], "tags": [], "owner": {"reputation": 1699, "user_id": 783825, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/cce2622c5ccd49a3cbf2007491ab1075?s=128&d=identicon&r=PG", "display_name": "Neikos", "link": "https://stackoverflow.com/users/783825/neikos"}, "is_accepted": true, "score": 1, "last_activity_date": 1511529263, "last_edit_date": 1511529263, "creation_date": 1511515812, "answer_id": 47470135, "question_id": 47465002, "link": "https://stackoverflow.com/questions/47465002/how-can-i-return-specializable-associated-type-from-default-method/47470135#47470135", "title": "How can I return specializable associated type from default method?", "body": "<p>The problem here is that you are returning <code>Self::It</code> but give it a 0. What happens if someone were to implement this with <code>It</code> being <code>String</code>? Since there is no way to prove that this is always going to be a number, you either need a trait bound or to change the method signature.</p>\n\n<p>A possible way of doing it is like this: </p>\n\n<pre><code>pub trait Tr {\n    type It: Default;\n    fn it(self) -&gt; Self::It;\n}\n\nimpl&lt;T&gt; Tr for T\nwhere\n    T: Debug,\n{\n    default type It = u8;\n\n    default fn it(self) -&gt; Self::It {\n        Default::default()\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=bd3d0dedf37da56792ed636f28f66558&amp;version=undefined\" rel=\"nofollow noreferrer\">Playground Link</a></p>\n"}], "owner": {"reputation": 321, "user_id": 6193633, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/f642d3c45da4db031e2d41798d1801a5?s=128&d=identicon&r=PG&f=1", "display_name": "kdy", "link": "https://stackoverflow.com/users/6193633/kdy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 484, "favorite_count": 0, "accepted_answer_id": 47470135, "answer_count": 1, "score": 2, "last_activity_date": 1511529263, "creation_date": 1511484710, "last_edit_date": 1511485456, "question_id": 47465002, "link": "https://stackoverflow.com/questions/47465002/how-can-i-return-specializable-associated-type-from-default-method", "title": "How can I return specializable associated type from default method?", "body": "<p>I'm <a href=\"https://github.com/kdy1/rust-toys/tree/master/flatten\" rel=\"nofollow noreferrer\">implementing tuple flattening</a> for Rust. It requires converting </p>\n\n<pre><code>((A,B), (C, (D, E)), F)\n</code></pre>\n\n<p>into</p>\n\n<pre><code>Cons[\n    Cons[A, B, Nil],\n    Cons[\n        C, Cons[D, E, Nil], Nil\n    ],\n    F,\n    Nil\n]\n</code></pre>\n\n<p>I tried using specialization, but the compiler doesn't like it:</p>\n\n<pre><code>/// For non-tuple types.\nimpl&lt;T&gt; IntoCons for Val&lt;T&gt; {\n    default type Out = Cons&lt;T, Nil&gt;;\n\n    default fn into_cons(self) -&gt; Cons&lt;T, Nil&gt; {\n        Cons {\n            head: self,\n            tail: Nil,\n        }\n    }\n}\n</code></pre>\n\n<p>How can I do this? Any alternative that doesn't use <code>unsafe</code> is ok.</p>\n\n<p>Complete example:</p>\n\n<pre><code>#![feature(specialization)]\nuse std::fmt::{Debug, Display};\n\npub trait Tr {\n    type It;\n    fn it(self) -&gt; Self::It;\n}\n\nimpl&lt;T&gt; Tr for T\nwhere\n    T: Debug,\n{\n    default type It = u8;\n\n    default fn it(self) -&gt; Self::It {\n        0\n    }\n}\n\nimpl&lt;T&gt; Tr for T\nwhere\n    T: Debug + Display,\n{\n    type It = u16;\n\n    fn it(self) -&gt; Self::It {\n        0\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=fb6be449ccd86605b3e5c5d5a0831d68&amp;version=nightly\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>Compiler output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:17:9\n   |\n16 |     default fn it(self) -&gt; Self::It {\n   |                            -------- expected `&lt;T as Tr&gt;::It` because of return type\n17 |         0\n   |         ^ expected associated type, found integral variable\n   |\n   = note: expected type `&lt;T as Tr&gt;::It`\n              found type `{integer}`\n</code></pre>\n"}, {"tags": ["rust", "concatenation", "reverse", "substr"], "answers": [{"comments": [{"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 1, "creation_date": 1511444726, "post_id": 47456151, "comment_id": 81868346, "body": "Note that this won&#39;t work if the <code>to_rev</code> string appears more than once and you only want to replace one of them."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "reply_to_user": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 0, "creation_date": 1511446334, "post_id": 47456151, "comment_id": 81869403, "body": "@interjay no it doesn&#39;t, both python 2 and 3 fail with combining characters same as all the rust versions so far."}, {"owner": {"reputation": 1873, "user_id": 1725553, "user_type": "registered", "accept_rate": 40, "profile_image": "https://lh3.googleusercontent.com/-CsRuoQmwqLo/AAAAAAAAAAI/AAAAAAAAAFM/hESpKGJTWZo/photo.jpg?sz=128", "display_name": "paddyg", "link": "https://stackoverflow.com/users/1725553/paddyg"}, "edited": false, "score": 0, "creation_date": 1511454856, "post_id": 47456151, "comment_id": 81874498, "body": "@ljedrz, Thanks, this might have been better approach at the out-set, but I became engrossed in the question of reproducing the python style slicing and concatenation in rust. interjay, the python system seems to work ok on this computer (at least for the few japanese characters swapped as above.) Maybe that&#39;s just a fluke - I will try some more experiments."}, {"owner": {"reputation": 1873, "user_id": 1725553, "user_type": "registered", "accept_rate": 40, "profile_image": "https://lh3.googleusercontent.com/-CsRuoQmwqLo/AAAAAAAAAAI/AAAAAAAAAFM/hESpKGJTWZo/photo.jpg?sz=128", "display_name": "paddyg", "link": "https://stackoverflow.com/users/1725553/paddyg"}, "edited": false, "score": 0, "creation_date": 1511460794, "post_id": 47456151, "comment_id": 81877464, "body": "@Jmp (&amp; interjay) - as you say the &#39;working&#39; is illusory and can easily fail in python as well as rust where there are combined unicode characters."}], "tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": false, "score": 1, "last_activity_date": 1511449559, "last_edit_date": 1511449559, "creation_date": 1511441982, "answer_id": 47456151, "question_id": 47456000, "link": "https://stackoverflow.com/questions/47456000/reverse-part-of-a-string/47456151#47456151", "title": "Reverse part of a String", "body": "<p>Assuming a single occurence of the substring (or when you want to reverse all of them):</p>\n\n<pre><code>fn main() {\n    let s = String::from(\"the quick (brown (fox) jumps) over\");\n    let to_rev = &amp;\"fox\";\n    let ss = s.replace(to_rev, &amp;to_rev.chars().rev().collect::&lt;String&gt;());\n\n    println!(\"{}\", ss); // the quick (brown (xof) jumps) over\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1511444060, "post_id": 47456695, "comment_id": 81867922, "body": "I find it weird that one can&#39;t just do <code>.chain(s.chars().skip(f).take(t-f).rev())</code>, i.e. that <code>Take</code> doesn&#39;t implement <code>DoubleEndedIterator</code>."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "reply_to_user": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1511445287, "post_id": 47456695, "comment_id": 81868743, "body": "Well, <code>Take&lt;I&gt;</code> can&#39;t implement <code>DoubleEndedIterator</code> in the general case. You would at least need <code>I</code> to be double ended itself and implement <code>ExactSizeIterator</code> so <code>Take</code> will know how much of the reversed <code>I</code> to skip. However this has suggested to me a way to avoid the allocation. I&#39;ll edit the answer in a minute."}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1511445735, "post_id": 47456695, "comment_id": 81869050, "body": "I see what you did there, clever :)."}, {"owner": {"reputation": 1873, "user_id": 1725553, "user_type": "registered", "accept_rate": 40, "profile_image": "https://lh3.googleusercontent.com/-CsRuoQmwqLo/AAAAAAAAAAI/AAAAAAAAAFM/hESpKGJTWZo/photo.jpg?sz=128", "display_name": "paddyg", "link": "https://stackoverflow.com/users/1725553/paddyg"}, "edited": false, "score": 0, "creation_date": 1511454391, "post_id": 47456695, "comment_id": 81874232, "body": "Excellent, that&#39;s just the kind of pointer I was looking for and gives me (and other searchers on same subject) a pattern to work from. v. 1 works even for &quot;the quick (brown (\u30ad\u30c4\u30cd) \u30b8\u30e3\u30f3\u30d7) over&quot; but v.2 and v.3 don&#39;t. However all work for the original string. The finding of f and t really need the string to iterated char by char which is why I went down the Vec&lt;char&gt; route. Thanks again."}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1511455352, "post_id": 47456695, "comment_id": 81874757, "body": "I guess that&#39;s because <code>s.len()</code> is in bytes, not in characters."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "reply_to_user": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1511512503, "post_id": 47456695, "comment_id": 81892777, "body": "@Stefan true. Replacing <code>s.len()</code> with <code>s.chars().count()</code> should allow v2 to work for unicode."}, {"owner": {"reputation": 1873, "user_id": 1725553, "user_type": "registered", "accept_rate": 40, "profile_image": "https://lh3.googleusercontent.com/-CsRuoQmwqLo/AAAAAAAAAAI/AAAAAAAAAFM/hESpKGJTWZo/photo.jpg?sz=128", "display_name": "paddyg", "link": "https://stackoverflow.com/users/1725553/paddyg"}, "edited": false, "score": 0, "creation_date": 1511518581, "post_id": 47456695, "comment_id": 81896426, "body": "@Jmb, as the calculation of (f, t) involves iterating over the string it&#39;s probably nicer to ensure they are correct unicode char boundaries using <code>let ix: Vec&lt;_&gt; = s.char_indices().collect();</code> then use your option 3. Still confusing result (if correct) if there is a mixture of LtoR and RtoL unicode characters!"}], "tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": true, "score": 5, "last_activity_date": 1511529357, "last_edit_date": 1511529357, "creation_date": 1511443680, "answer_id": 47456695, "question_id": 47456000, "link": "https://stackoverflow.com/questions/47456000/reverse-part-of-a-string/47456695#47456695", "title": "Reverse part of a String", "body": "<p>This should only allocate two times to your 5, I'm not sure if there is a way to get rid of the intermediate allocation:</p>\n\n<pre><code>let ss: String = s.chars()\n                  .take(f)\n                  .chain(s.chars().skip(f).take(t-f).collect::&lt;Vec&lt;_&gt;&gt;().into_iter().rev())\n                  .chain(s.chars().skip(t))\n                  .collect();\n</code></pre>\n\n<p>Note that UTF-8 string manipulation is a lot more complex than the Python code would seem to imply. For example, both solutions will fail to do what you expect in the presence of combining characters (<a href=\"https://play.integer32.com/?gist=6a3e38b9c59c6e3b42eff8c0b0dcbde2&amp;version=stable\" rel=\"nofollow noreferrer\">playground</a>).</p>\n\n<p>The following gets rid of the intermediate allocation:</p>\n\n<pre><code>let ss: String = s.chars()\n                  .take(f)\n                  .chain(s.chars().rev().skip(s.chars().count()-t).take(t-f))\n                  .chain(s.chars().skip(t))\n                  .collect();\n</code></pre>\n\n<p>We need to use <code>s.chars().count()</code> instead of <code>s.len()</code> for Unicode, because <code>s.len()</code> is in code units and we need the length in code points.</p>\n\n<p>This is easier to understand but only works for ASCII or if <code>f</code> and <code>t</code> are indices in code units:</p>\n\n<pre><code>let ss: String = s[..f].chars()\n                       .chain(s[f..t].chars().rev())\n                       .chain(s[t..].chars())\n                       .collect();\n</code></pre>\n"}], "owner": {"reputation": 1873, "user_id": 1725553, "user_type": "registered", "accept_rate": 40, "profile_image": "https://lh3.googleusercontent.com/-CsRuoQmwqLo/AAAAAAAAAAI/AAAAAAAAAFM/hESpKGJTWZo/photo.jpg?sz=128", "display_name": "paddyg", "link": "https://stackoverflow.com/users/1725553/paddyg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 577, "favorite_count": 0, "accepted_answer_id": 47456695, "answer_count": 2, "score": 0, "last_activity_date": 1511529357, "creation_date": 1511441484, "last_edit_date": 1511469703, "question_id": 47456000, "link": "https://stackoverflow.com/questions/47456000/reverse-part-of-a-string", "title": "Reverse part of a String", "body": "<p>I am working my way through the codefights exercises and ended up with some messy code for what, in Python, is relatively simple string slicing and concatenation:</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>s = \"the quick (brown (fox) jumps) over\"\n(f, t) = (18, 21)\nss = s[:f] + s[t-1:f-1:-1] + s[t:]\n</code></pre>\n\n<p>In Rust:</p>\n\n<pre><code>let s = String::from(\"the quick (brown (fox) jumps) over\");\nlet sc: Vec&lt;_&gt; = s.chars().collect();\nlet (f, t) = (18, 21); // result of searching through sc\nlet mut new_s: Vec&lt;_&gt; = sc[..f].into_iter().collect();\nnew_s.extend(&amp;sc[f..t].into_iter().rev().collect::&lt;Vec&lt;_&gt;&gt;());\nnew_s.extend(&amp;sc[t..].into_iter().collect::&lt;Vec&lt;_&gt;&gt;());\nlet mut ss = String::with_capacity(new_s.len());\nfor c in new_s.iter() {ss.push(**c);}\n</code></pre>\n\n<p>Mainly by adding things to fix compile errors I've ended up with complexity that I just don't seem able to reduce. What is the 'proper' way to do this in Rust?</p>\n\n<p>I didn't do something like the answer using <code>replace()</code> because this is a simplified example of a problem to search through a string and reverse the parts inside matching brackets.</p>\n"}, {"tags": ["assembly", "rust"], "comments": [{"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 0, "creation_date": 1511492026, "post_id": 47455163, "comment_id": 81886097, "body": "If you write your asm function to follow the C calling convention / ABI, it doesn&#39;t matter to the calling function whether you or a compiler actually wrote the asm."}], "answers": [{"comments": [{"owner": {"reputation": 3242, "user_id": 6360938, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/ae1e709f8e8beb1d09db43a881c97610?s=128&d=identicon&r=PG&f=1", "display_name": "typos", "link": "https://stackoverflow.com/users/6360938/typos"}, "edited": false, "score": 0, "creation_date": 1511441626, "post_id": 47455865, "comment_id": 81866404, "body": "Thanks for the answer. Do I somehow need to link the assembly file with Rust, so it knows from where the functions comes, or if the assembly file is in the same directory as the Rust file, Rust can figure it out?"}, {"owner": {"reputation": 76134, "user_id": 417501, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/703f62ead2e305b1dff62066065a0554?s=128&d=identicon&r=PG", "display_name": "fuz", "link": "https://stackoverflow.com/users/417501/fuz"}, "edited": false, "score": 1, "creation_date": 1511441887, "post_id": 47455865, "comment_id": 81866566, "body": "Could you elaborate on the Rust calling convention?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 3242, "user_id": 6360938, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/ae1e709f8e8beb1d09db43a881c97610?s=128&d=identicon&r=PG&f=1", "display_name": "typos", "link": "https://stackoverflow.com/users/6360938/typos"}, "edited": false, "score": 0, "creation_date": 1511445538, "post_id": 47455865, "comment_id": 81868918, "body": "@typos: I would expect you to need special commands to instruct the compiler how to link in those files in the final binary. Unfortunately, I don&#39;t know which."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 76134, "user_id": 417501, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/703f62ead2e305b1dff62066065a0554?s=128&d=identicon&r=PG", "display_name": "fuz", "link": "https://stackoverflow.com/users/417501/fuz"}, "edited": false, "score": 0, "creation_date": 1511445573, "post_id": 47455865, "comment_id": 81868949, "body": "@fuz: Elaborate about which aspect?"}, {"owner": {"reputation": 76134, "user_id": 417501, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/703f62ead2e305b1dff62066065a0554?s=128&d=identicon&r=PG", "display_name": "fuz", "link": "https://stackoverflow.com/users/417501/fuz"}, "edited": false, "score": 0, "creation_date": 1511446535, "post_id": 47455865, "comment_id": 81869531, "body": "@MatthieuM. Well, what exactly is the Rust calling convention? I browsed the internet but didn&#39;t find any specification or other document laying out how Rust&#39;s calling convention works."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 76134, "user_id": 417501, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/703f62ead2e305b1dff62066065a0554?s=128&d=identicon&r=PG", "display_name": "fuz", "link": "https://stackoverflow.com/users/417501/fuz"}, "edited": false, "score": 2, "creation_date": 1511446856, "post_id": 47455865, "comment_id": 81869707, "body": "@fuz: It&#39;s unspecified. Rust does not commit to any specific calling convention on any target. In practice, <i>at the moment</i>, it generally happens to match the C convention; but it may change at any time in the future, for example if on a specific architecture a faster calling convention is found."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1511508543, "post_id": 47455865, "comment_id": 81890842, "body": "@Shepmaster: I am not suggesting anything, I am documenting what&#39;s available. I am also afraid that a number of projects may accidentally be using the Rust calling convention already today while effectively calling into C code, since it&#39;s so easy to forget the <code>&quot;C&quot;</code>."}, {"owner": {"reputation": 915, "user_id": 2480661, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/dc6352e16f4aebc05a11abe3e6a5e3fb?s=128&d=identicon&r=PG", "display_name": "Max Murphy", "link": "https://stackoverflow.com/users/2480661/max-murphy"}, "edited": false, "score": 0, "creation_date": 1554312844, "post_id": 47455865, "comment_id": 97708633, "body": "Thank you @MatthieuM.  I have put the code on github and tweaked it a bit to make it compile for me: <a href=\"https://github.com/bitdivine/rust-call-assembler\" rel=\"nofollow noreferrer\">github.com/bitdivine/rust-call-assembler</a>"}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 12, "last_activity_date": 1513777662, "last_edit_date": 1513777662, "creation_date": 1511441025, "answer_id": 47455865, "question_id": 47455163, "link": "https://stackoverflow.com/questions/47455163/how-to-call-assembly-functions-inside-rust/47455865#47455865", "title": "How to call assembly functions inside Rust?", "body": "<h1>Example</h1>\n\n<p>This is an assembly function using the C x86_64 calling convention on macOS. It doesn't segfault, so it must be right :-)</p>\n\n<p><strong>Cargo.toml</strong></p>\n\n<pre><code>[build-dependencies]\ncc = \"1.0.3\"\n</code></pre>\n\n<p><strong>build.rs</strong></p>\n\n<pre><code>extern crate cc;\n\nfn main() {\n    cc::Build::new()\n        .file(\"add.S\")\n        .compile(\"my-asm-lib\");\n}\n</code></pre>\n\n<p><strong>add.S</strong></p>\n\n<pre><code>.text\n.globl _my_adder\n_my_adder:\n        addq %rdi, %rsi\n        movq %rsi, %rax\n        ret\n</code></pre>\n\n<p><strong>src/main.rs</strong></p>\n\n<pre><code>extern \"C\" {\n    fn my_adder(a: u64, b: u64) -&gt; u64;\n}\n\nfn main() {\n    let sum = unsafe { my_adder(1, 2) };\n    println!(\"{}\", sum);\n}\n</code></pre>\n\n<h1>Explanation</h1>\n\n<p>To make use of an assembly function, there are two main pieces:</p>\n\n<ol>\n<li>Compiling and linking the function</li>\n<li>Calling the function</li>\n</ol>\n\n<h2>Compiling and Linking</h2>\n\n<p>Rust does not inherently provide a way to compile assembly files. Instead, you have to compile them using a C compiler which already exists on the machine. The most common way of doing is is to use the <a href=\"https://crates.io/crates/cc\" rel=\"noreferrer\">cc crate</a> in a <a href=\"http://doc.crates.io/build-script.html\" rel=\"noreferrer\">build script</a>.</p>\n\n<p>The build script will compile your assembly files into a static library and instruct Cargo to link to the library. </p>\n\n<p>You have to make sure that your assembly syntax is valid for the C compiler you are using. For example, MSVC and GCC use different assembly styles. You are likely going to need to have multiple copies of the same assembly function to handle different platforms.</p>\n\n<h2>Calling</h2>\n\n<p>Calling the function is highly dependent on the <em>calling convention</em>. The primary calling convention is the <strong>C calling convention</strong>, denoted with either <code>extern \"C\"</code> or just plain <code>extern</code>. You may want to use the <code>#[link_name = \"...\"]</code> or <code>#[no_mangle]</code> attributes as well.</p>\n\n<p>You can also create your own custom calling convention using a <code>#[naked]</code> function (see <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1201-naked-fns.md\" rel=\"noreferrer\">RFC 1201</a>). You would then use assembly code on the caller side before/after the call according to its calling convention. <strong>This is not available in stable Rust</strong>.</p>\n\n<p>There are many other calling conventions supported by Rust 1.21.1:</p>\n\n<blockquote>\n  <p>cdecl, stdcall, fastcall, vectorcall, thiscall, aapcs, win64, sysv64, ptx-kernel, msp430-interrupt, x86-interrupt, Rust, C, system, rust-intrinsic, rust-call, platform-intrinsic, unadjusted</p>\n</blockquote>\n"}, {"tags": [], "owner": {"reputation": 1, "user_id": 8825700, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/E34Xm.png?s=128&g=1", "display_name": "E.H.", "link": "https://stackoverflow.com/users/8825700/e-h"}, "is_accepted": false, "score": 0, "last_activity_date": 1601046706, "creation_date": 1601046706, "answer_id": 64066831, "question_id": 47455163, "link": "https://stackoverflow.com/questions/47455163/how-to-call-assembly-functions-inside-rust/64066831#64066831", "title": "How to call assembly functions inside Rust?", "body": "<p>Completing <a href=\"https://stackoverflow.com/a/47455865/8825700\">the other answer</a> :</p>\n<p>If you use nightly rust, you can avoid using a custom build script by using the <a href=\"https://doc.rust-lang.org/unstable-book/library-features/global-asm.html\" rel=\"nofollow noreferrer\">global_asm! macro</a>.</p>\n<blockquote>\n<p>A simple usage looks like this:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>#[feature(global_asm)]\n\n...\n\nglobal_asm!(include_str!(&quot;something_neato.s&quot;));\n</code></pre>\n</blockquote>\n"}], "owner": {"reputation": 3242, "user_id": 6360938, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/ae1e709f8e8beb1d09db43a881c97610?s=128&d=identicon&r=PG&f=1", "display_name": "typos", "link": "https://stackoverflow.com/users/6360938/typos"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2794, "favorite_count": 1, "accepted_answer_id": 47455865, "answer_count": 2, "score": 3, "last_activity_date": 1601046706, "creation_date": 1511438652, "question_id": 47455163, "link": "https://stackoverflow.com/questions/47455163/how-to-call-assembly-functions-inside-rust", "title": "How to call assembly functions inside Rust?", "body": "<p>I know that one way to call C functions inside Rust is to use something like this:</p>\n\n<pre><code>extern \"C\" {\n    fn abs(input: i32) -&gt; i32;\n}\n\nfn main() {\n    unsafe {\n        println!(\"abs(-3) = {}\", abs(-3));\n    }\n}\n</code></pre>\n\n<p>But how does one call some assembly functions (located inside <code>.s</code> file in the same directory as other Rust files) inside a Rust code?</p>\n"}]