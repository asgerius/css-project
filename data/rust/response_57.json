[{"tags": ["generics", "rust", "associated-types"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1455144865, "post_id": 35327525, "comment_id": 58363731, "body": "Can you show <code>consume</code> implemented with the separate traits? It&#39;s <i>very</i> suspicious to have a method with a generic type that is not used in the arguments <i>or</i> the result value. Like, I don&#39;t think it&#39;s possible."}, {"owner": {"reputation": 699, "user_id": 3957040, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/e88a425a40322e715b799744b3a89898?s=128&d=identicon&r=PG&f=1", "display_name": "Pablo", "link": "https://stackoverflow.com/users/3957040/pablo"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1455146399, "post_id": 35327525, "comment_id": 58364371, "body": "Do you mean something like <code>noalias_consume</code> in this playpen (<a href=\"http://is.gd/e9qIKV\" rel=\"nofollow noreferrer\">is.gd/e9qIKV</a>)? Indeed, it doesn\u2019t work."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1455149400, "creation_date": 1455149400, "answer_id": 35328491, "question_id": 35327525, "link": "https://stackoverflow.com/questions/35327525/aliasing-trait-bounds-without-specifying-concrete-associated-types/35328491#35328491", "title": "Aliasing trait bounds without specifying concrete associated types", "body": "<blockquote>\n  <p>How can I go forward?</p>\n</blockquote>\n\n<p>You can't directly. Let's look at your function:</p>\n\n<pre><code>fn consume&lt;T: Path&gt;() {\n    into_vec::&lt;T&gt;(&amp;[\"one\", \"two\"]);\n}\n</code></pre>\n\n<p>This says \"for <strong>any</strong> type that implements <code>Path</code>, call <code>into_vec</code> with a slice of strings\". However, there's no way that you can guarantee that whatever the <code>T</code> is, it will accept a slice of strings. </p>\n\n<p>Looking in another direction, <em>many</em> types might accept a slice of strings, so it would make <code>T</code> ambiguous.</p>\n\n<p>Looking in a third direction, there's no way for type inference to decide what <code>T</code> should be, as it's not used as an argument or return value.</p>\n\n<p>You can get it to work by explicitly stating which <code>T</code> you want:</p>\n\n<pre><code>fn consume() {\n    into_vec::&lt;&amp;[&amp;'static str]&gt;(&amp;[\"one\", \"two\"]);\n}\n</code></pre>\n\n<p>To clarify, this has nothing to do with combining traits into another trait. This would be a problem with any trait.</p>\n"}], "owner": {"reputation": 699, "user_id": 3957040, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/e88a425a40322e715b799744b3a89898?s=128&d=identicon&r=PG&f=1", "display_name": "Pablo", "link": "https://stackoverflow.com/users/3957040/pablo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 57, "favorite_count": 0, "accepted_answer_id": 35328491, "answer_count": 1, "score": 2, "last_activity_date": 1455149400, "creation_date": 1455144486, "last_edit_date": 1495540757, "question_id": 35327525, "link": "https://stackoverflow.com/questions/35327525/aliasing-trait-bounds-without-specifying-concrete-associated-types", "title": "Aliasing trait bounds without specifying concrete associated types", "body": "<p>I found myself writing different functions with an argument under the same bounds, like this:</p>\n\n<pre><code>pub fn foo&lt;T&gt;(mut self, path: T) -&gt; Self where\n    T: IntoIterator,\n    T::Item: AsRef&lt;str&gt;,\n{\n    // ...\n}\n\npub fn bar&lt;T&gt;(mut self, path: T) -&gt; Self where\n    T: IntoIterator,\n    T::Item: AsRef&lt;str&gt;,\n{\n    // ...\n}\n</code></pre>\n\n<p>Feeling this to be a bit of a chore, I tried to alias these bounds. But I didn\u2019t find a way to. The closest I got, after checking a couple places<sup>[1],[2]</sup>, is this:</p>\n\n<pre><code>trait Path {\n    type I: IntoIterator&lt;Item = Self::S&gt;;\n    type S: AsRef&lt;str&gt;;\n}\n\nimpl&lt;T, U&gt; Path for T where\n    T: IntoIterator&lt;Item = U&gt;,\n    U: AsRef&lt;str&gt;,\n{\n    type I = T;\n    type S = U;\n}\n</code></pre>\n\n<p>Now, as an example, this compiles fine:</p>\n\n<pre><code>fn into_vec&lt;T: Path&gt;(it: T::I) -&gt; Vec&lt;String&gt; {\n    it.into_iter()\n        .map::&lt;String, _&gt;(|x| x.as_ref().into())\n        .collect()\n}\n</code></pre>\n\n<p>But when I try to use it:</p>\n\n<pre><code>fn consume&lt;T: Path&gt;() {\n    into_vec::&lt;T&gt;(&amp;[\"one\", \"two\"]);\n}\n</code></pre>\n\n<p>I get the following error:</p>\n\n<pre><code>src/lib.rs:104:19: 104:34 error: mismatched types:\n expected `&lt;T as Path&gt;::I`,\n    found `&amp;[&amp;str; 2]`\n(expected associated type,\n    found &amp;-ptr) [E0308]\nsrc/lib.rs:104     into_vec::&lt;T&gt;(&amp;[\"one\", \"two\"]);\n                                 ^~~~~~~~~~~~~~~\n</code></pre>\n\n<p>So, no luck. How can I go forward?</p>\n\n<hr>\n\n<p><sup>1</sup> <a href=\"https://github.com/rust-lang/rust/issues/8634\" rel=\"nofollow noreferrer\">https://github.com/rust-lang/rust/issues/8634</a><br>\n<sup>2</sup> <a href=\"https://stackoverflow.com/a/30424219/3957040\">https://stackoverflow.com/a/30424219/3957040</a></p>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 5007, "user_id": 23059, "user_type": "registered", "accept_rate": 47, "profile_image": "https://www.gravatar.com/avatar/28d1534c68a23bb158022f3d5f0985ad?s=128&d=identicon&r=PG", "display_name": "Cameron Taggart", "link": "https://stackoverflow.com/users/23059/cameron-taggart"}, "edited": false, "score": 0, "creation_date": 1455245344, "post_id": 35332496, "comment_id": 58414830, "body": "You guessed right. I am using the GNU 32-bit version of Rust in order to build libraries for GNU Octave. I see that Rust has a <code>libws2_32.a</code> and so does Octave. How do I know if they are compatible? Can I have Rust use the one from Octave? The locations are <code>C:\\Program Files (x86)\\Rust stable GNU 1.6\\lib\\rustlib\\i686-pc-windows-gnu\\lib\\libws2_32.a</code> and <code>C:\\Octave\\Octave-4.0.0\\lib\\libws2_32.a</code>. If I created a build script that outputed <code>rustc-link-search</code> to the Octave path, would it use <code>libws2_32.a</code> from there instead?"}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "reply_to_user": {"reputation": 5007, "user_id": 23059, "user_type": "registered", "accept_rate": 47, "profile_image": "https://www.gravatar.com/avatar/28d1534c68a23bb158022f3d5f0985ad?s=128&d=identicon&r=PG", "display_name": "Cameron Taggart", "link": "https://stackoverflow.com/users/23059/cameron-taggart"}, "edited": false, "score": 1, "creation_date": 1455282399, "post_id": 35332496, "comment_id": 58432545, "body": "<i>How do I know if they are compatible?</i> Try them both! Seriously, I think they should both work, as long as they define the symbols your application and its dependencies need. If linking with Octave&#39;s <code>libws2_32.a</code> doesn&#39;t work, you&#39;ll have trouble linking with Octave&#39;s other libraries! <i>... would it use <code>libws2_32.a</code> from there instead?</i> I think so. One way to be sure is to use <a href=\"https://technet.microsoft.com/en-us/sysinternals/bb896645\" rel=\"nofollow noreferrer\">Process Monitor</a> to watch for events on files with that name."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 2, "last_activity_date": 1455172975, "creation_date": 1455172975, "answer_id": 35332496, "question_id": 35324907, "link": "https://stackoverflow.com/questions/35324907/can-i-get-the-full-path-of-native-artifacts-that-rust-links-against/35332496#35332496", "title": "Can I get the full path of native artifacts that Rust links against?", "body": "<p><a href=\"https://www.rust-lang.org/downloads.html\" rel=\"nofollow\">There are two ABI options for Rust on Windows</a>: MSVC and GNU (GCC). You say you're using the 32-bit version of Rust 1.6; there's no 32-bit version using the MSVC ABI for Rust 1.6 (it's only available starting with Rust 1.8), so I assume you're using the GNU ABI version.</p>\n\n<p>If you are indeed using the GNU ABI version, then you need to link against GNU ABI static libraries. These libraries have names like <code>libXXXX.a</code>, instead of <code>XXXX.lib</code> for MSVC.</p>\n\n<p>If you don't have a file named <code>libws2_32.a</code> anywhere on your system, then you need to install MinGW, which is a port of GCC for Windows that also includes static libraries for the most commonly used Windows DLLs. There are multiple active \"forks\" of MinGW: <a href=\"http://mingw-w64.org/\" rel=\"nofollow\">mingw-w64</a> and <a href=\"http://tdm-gcc.tdragon.net/\" rel=\"nofollow\">TDM-GCC</a> have more recent versions of GCC than the original <a href=\"http://mingw.org/\" rel=\"nofollow\">MinGW</a> project, which appears to be dormant.</p>\n\n<blockquote>\n  <p>Is there a way to get the full paths for the libraries that were used?</p>\n</blockquote>\n\n<p>Normally, you don't specify the full path when linking. For GCC, you pass an option like <code>-lws2_32</code> and the linker will find the library for you. If the linker doesn't find it, you can add an <code>-L &lt;path&gt;</code> option to add a directory in the linker's search path for static libraries.</p>\n\n<p>Cargo has some documentation on how to write a <a href=\"http://doc.crates.io/build-script.html\" rel=\"nofollow\">build script</a> that can add these options automatically when you run <code>cargo build</code>.</p>\n"}], "owner": {"reputation": 5007, "user_id": 23059, "user_type": "registered", "accept_rate": 47, "profile_image": "https://www.gravatar.com/avatar/28d1534c68a23bb158022f3d5f0985ad?s=128&d=identicon&r=PG", "display_name": "Cameron Taggart", "link": "https://stackoverflow.com/users/23059/cameron-taggart"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 440, "favorite_count": 1, "accepted_answer_id": 35332496, "answer_count": 1, "score": 3, "last_activity_date": 1455172975, "creation_date": 1455134997, "last_edit_date": 1455135881, "question_id": 35324907, "link": "https://stackoverflow.com/questions/35324907/can-i-get-the-full-path-of-native-artifacts-that-rust-links-against", "title": "Can I get the full path of native artifacts that Rust links against?", "body": "<p>I'm using the 32-bit version of Rust 1.6 on Windows 10 to compile <a href=\"https://github.com/smitec/rustlab\" rel=\"nofollow\">rustlab</a>. When I run <code>cargo build</code> to build it, it says to</p>\n\n<blockquote>\n  <p>link against the following native artifacts when linking against this static library</p>\n</blockquote>\n\n<p>I would like to do exactly that. Is there a way to get the full paths for the libraries that were used?</p>\n\n<pre class=\"lang-bsh prettyprint-override\"><code>PS C:\\rs\\rustlab&gt; cargo build -v\n   Compiling libc v0.2.7\n     Running `rustc C:\\Users\\cameron\\.cargo\\registry\\src\\github.com-48ad6e4054423464\\libc-0.2.7\\src\\lib.rs --crate-name libc --crate-typ\ne lib -g --cfg \"feature=\\\"default\\\"\" -C metadata=0c94fdfb80c4b805 -C extra-filename=-0c94fdfb80c4b805 --out-dir C:\\rs\\rustlab\\target\\deb\nug\\deps --emit=dep-info,link -L dependency=C:\\rs\\rustlab\\target\\debug\\deps -L dependency=C:\\rs\\rustlab\\target\\debug\\deps --cap-lints all\now`\n   Compiling rustlab v0.1.0 (file:///C:/rs/rustlab)\n     Running `rustc src\\lib.rs --crate-name rustlab --crate-type staticlib --crate-type dylib -g --out-dir C:\\rs\\rustlab\\target\\debug --\nemit=dep-info,link -L dependency=C:\\rs\\rustlab\\target\\debug -L dependency=C:\\rs\\rustlab\\target\\debug\\deps --extern libc=C:\\rs\\rustlab\\ta\nrget\\debug\\deps\\liblibc-0c94fdfb80c4b805.rlib`\nnote: link against the following native artifacts when linking against this static library\nnote: the order and any duplication can be significant on some platforms, and so may need to be preserved\nnote: library: gcc_eh\nnote: library: gcc_eh\nnote: library: ws2_32\nnote: library: userenv\nnote: library: shell32\nnote: library: advapi32\n</code></pre>\n\n<p>For example, I have three <code>x86</code> versions of <code>WS2_32.lib</code>. Which one was used?</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>C:\\Program Files (x86)\\Windows Kits\\8.1\\Lib\\winv6.3\\um\\x86\\WS2_32.Lib\nC:\\Program Files (x86)\\Windows Kits\\10\\Lib\\10.0.10240.0\\um\\x86\\WS2_32.Lib\nC:\\Program Files (x86)\\Windows Kits\\10\\Lib\\10.0.10586.0\\um\\x86\\WS2_32.Lib\n</code></pre>\n"}, {"tags": ["static", "rust"], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1455199601, "post_id": 35324922, "comment_id": 58390142, "body": "AFAIK the reasons that Rust has &quot;No life before main&quot; are (1) Static Initialization Order Fiasco (a well known issue in C++) and (2) Start-up performance (it&#39;s easy to accidentally clutter your binary with lots of pre-main code)."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 4, "last_activity_date": 1455135545, "last_edit_date": 1455135545, "creation_date": 1455135049, "answer_id": 35324922, "question_id": 35324692, "link": "https://stackoverflow.com/questions/35324692/internal-compiler-error-when-creating-a-static-constant/35324922#35324922", "title": "Internal compiler error when creating a static constant", "body": "<blockquote>\n  <p>Is this a bug in my code</p>\n</blockquote>\n\n<p>Your code has something that doesn't make sense, so I guess it's a bug.</p>\n\n<blockquote>\n  <p>should I report this bug?</p>\n</blockquote>\n\n<p>Probably. A compiler shouldn't crash, it should report the error nicely to the user. Look to see if there is an existing bug first though, and comment on it if there is.</p>\n\n<blockquote>\n  <p>Is it possible to get <code>home</code> as constant or static value?</p>\n</blockquote>\n\n<p>Not exactly. Constant values are required to live for the <em>entire length of the program</em>. That means they exist before <code>main</code> starts and after <code>main</code> exits. It is impossible for the call to <code>env::home_dir()</code> to meet that exact criteria.</p>\n\n<p>The most straight-forward thing to do is to get the value once and then pass it where it is needed. This allows you to avoid getting the value multiple times:</p>\n\n<pre><code>fn main() {\n    let home = env::home_dir();\n    let home = home.as_ref().map(|d| d.as_path()).unwrap_or(Path::new(\"./\"));\n\n    function_1(&amp;home);\n    function_2(&amp;home);\n    function_3(&amp;home);\n}\n</code></pre>\n\n<p>You could also place it into a struct, either as a <code>&amp;Path</code> or a <code>PathBuf</code>:</p>\n\n<pre><code>struct Thing {\n    home: PathBuf,\n}\n\nfn main() {\n    let home = env::home_dir().unwrap_or_else(|| PathBuf::from(\"./\"));\n    let t = Thing { home: home };\n\n    t.function_1();\n    t.function_2();\n    t.function_3();\n}\n</code></pre>\n\n<p>This is probably what I'd do. There's no reason to keep that memory allocated <em>forever</em>, as a static value would. </p>\n\n<blockquote>\n  <p>I need to use it multiple times to add some file names for some file operations and I want to have them all in same folder.</p>\n</blockquote>\n\n<p>There's nothing preventing you from simply creating a function to place the logic in:</p>\n\n<pre><code>fn safe_home_dir() -&gt; PathBuf {\n    env::home_dir().unwrap_or_else(|| PathBuf::from(\"./\"))\n} \n</code></pre>\n\n<p>Then just call the function multiple times. You could profile to see how expensive it was, but my gut feeling is that there isn't going to be appreciable slowness here.</p>\n\n<hr>\n\n<p>If you <em>really</em> needed it to be static, then you can use the <a href=\"https://github.com/rust-lang-nursery/lazy-static.rs\" rel=\"nofollow\">lazy_static crate</a>.</p>\n"}, {"comments": [{"owner": {"reputation": 644, "user_id": 5326062, "user_type": "registered", "accept_rate": 67, "profile_image": "https://lh3.googleusercontent.com/-wyQqFvVdnKo/AAAAAAAAAAI/AAAAAAAAAwY/atuvPb80mWU/photo.jpg?sz=128", "display_name": "Ivan Temchenko", "link": "https://stackoverflow.com/users/5326062/ivan-temchenko"}, "edited": false, "score": 0, "creation_date": 1455212778, "post_id": 35325002, "comment_id": 58399881, "body": "Thanks, this worked) But what to do with the compiller bug?"}, {"owner": {"reputation": 2231, "user_id": 4465497, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/vibwv.png?s=128&g=1", "display_name": "XAMPPRocky", "link": "https://stackoverflow.com/users/4465497/xampprocky"}, "reply_to_user": {"reputation": 644, "user_id": 5326062, "user_type": "registered", "accept_rate": 67, "profile_image": "https://lh3.googleusercontent.com/-wyQqFvVdnKo/AAAAAAAAAAI/AAAAAAAAAwY/atuvPb80mWU/photo.jpg?sz=128", "display_name": "Ivan Temchenko", "link": "https://stackoverflow.com/users/5326062/ivan-temchenko"}, "edited": false, "score": 0, "creation_date": 1455212986, "post_id": 35325002, "comment_id": 58399999, "body": "@IvanTemchenko Go to the <a href=\"https://github.com/rust-lang/rust/\" rel=\"nofollow noreferrer\">rust</a> repo, and make an issue. Provide the snippet of code, that caused the compiler bug, along with your version of rust. You can find out your version of rust by typing the command <code>rustc -vV</code>."}], "tags": [], "owner": {"reputation": 2231, "user_id": 4465497, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/vibwv.png?s=128&g=1", "display_name": "XAMPPRocky", "link": "https://stackoverflow.com/users/4465497/xampprocky"}, "is_accepted": true, "score": 2, "last_activity_date": 1455135291, "creation_date": 1455135291, "answer_id": 35325002, "question_id": 35324692, "link": "https://stackoverflow.com/questions/35324692/internal-compiler-error-when-creating-a-static-constant/35325002#35325002", "title": "Internal compiler error when creating a static constant", "body": "<h2>Answer</h2>\n\n<p>Static variables can't have logic, to do this you have to use the <code>lazy_static</code> crate, which enables you to do logic. A small note, in order to access the veriable you have to deference it. so <code>println!(\"{}\", HOME);</code> doesn't work, but <code>println!(\"{}\", *HOME);</code> does.</p>\n\n<h2>Solution</h2>\n\n<pre><code>#[macro_use]\nextern crate lazy_static;\nuse std::env;\nlazy_static! {\n    static ref HOME: String = {\n        match env::home_dir() {\n            Some(p) =&gt; p.to_str().unwrap().to_owned(),\n            None =&gt; \"./\".to_string(),\n        }\n    };\n}\n\nfn main() {\n    println!(\"{:?}\", *HOME);\n}\n</code></pre>\n"}], "owner": {"reputation": 644, "user_id": 5326062, "user_type": "registered", "accept_rate": 67, "profile_image": "https://lh3.googleusercontent.com/-wyQqFvVdnKo/AAAAAAAAAAI/AAAAAAAAAwY/atuvPb80mWU/photo.jpg?sz=128", "display_name": "Ivan Temchenko", "link": "https://stackoverflow.com/users/5326062/ivan-temchenko"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 93, "favorite_count": 0, "accepted_answer_id": 35325002, "answer_count": 2, "score": 2, "last_activity_date": 1455135545, "creation_date": 1455134188, "last_edit_date": 1455134385, "question_id": 35324692, "link": "https://stackoverflow.com/questions/35324692/internal-compiler-error-when-creating-a-static-constant", "title": "Internal compiler error when creating a static constant", "body": "<p>I'm trying to create static or constant from matching the env::home_dir:</p>\n\n<pre><code>static home: String = match env::home_dir() {\n    Some(ref p) =&gt; p.to_str().unwrap().to_owned(),\n    None =&gt; \"./\".to_string(),\n};\n</code></pre>\n\n<p>But I'm getting a compiler bug: </p>\n\n<pre><code>src/main.rs:15:8: 15:13 error: internal compiler error: no enclosing scope found for scope: CodeExtent(346/Misc(20))\nsrc/main.rs:15          Some(ref p) =&gt; p.to_str().unwrap().to_owned(),\n                             ^~~~~\nnote: the compiler unexpectedly panicked. this is a bug.\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\nnote: run with `RUST_BACKTRACE=1` for a backtrace\nthread 'rustc' panicked at 'Box&lt;Any&gt;', ../src/libsyntax/diagnostic.rs:175\n</code></pre>\n\n<p>Is this a bug in my code or I should report this bug? Is it possible to get <code>home</code> as constant or static value?</p>\n\n<p>I need to use it multiple times to add some file names for some file operations and I want to have them all in same folder.</p>\n"}, {"tags": ["rust", "nickel"], "answers": [{"comments": [{"owner": {"reputation": 314, "user_id": 1321456, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/4bd54ccbccbb1bb894075339e4f3a42f?s=128&d=identicon&r=PG", "display_name": "shinriyo", "link": "https://stackoverflow.com/users/1321456/shinriyo"}, "edited": false, "score": 0, "creation_date": 1455151834, "post_id": 35323566, "comment_id": 58366163, "body": "Hi, thank you for replying and fixing my Jangrish. I added you code but type was different so error occurred. I update my question."}, {"owner": {"reputation": 314, "user_id": 1321456, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/4bd54ccbccbb1bb894075339e4f3a42f?s=128&d=identicon&r=PG", "display_name": "shinriyo", "link": "https://stackoverflow.com/users/1321456/shinriyo"}, "edited": false, "score": 0, "creation_date": 1455164302, "post_id": 35323566, "comment_id": 58369487, "body": "finally i got success. Thank you. Finally code is it"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1455131022, "last_edit_date": 1455131022, "creation_date": 1455130445, "answer_id": 35323566, "question_id": 35323257, "link": "https://stackoverflow.com/questions/35323257/nickel-rs-post-redirect-not-found/35323566#35323566", "title": "nickel.rs post redirect not found", "body": "<p>The code, as currently listed, doesn't make any sense. There's nothing returned from your route handler:</p>\n\n<pre><code>match ... {\n    Ok(v) =&gt; println!(\"Inserting movie was Success.\"),\n    Err(e) =&gt; println!(\"Inserting movie failed. =&gt; {:?}\", e),\n};\n</code></pre>\n\n<p>Because nothing about the database or the frontend framework is important, your code is equivalent to this:</p>\n\n<pre><code>#[macro_use]\nextern crate nickel;\n\nuse nickel::{Nickel, HttpRouter};\n\nfn main() {\n    let mut server = Nickel::new();\n\n    server.post(\"/api/movies\", middleware! { |request, mut response|\n        println!(\"Hello\");\n    });\n\n    server.listen(\"127.0.0.1:6767\");\n}\n</code></pre>\n\n<p>If you return something from the handler, then the HTTP status code changes from a 404 to a 200.</p>\n\n<p>If you'd like to redirect somewhere, you need to explicitly change the status code. The documentation for <a href=\"http://docs.nickel.rs/nickel/struct.Response.html#method.set\" rel=\"nofollow\"><code>Response::set</code></a> happens to have an example:</p>\n\n<pre><code>server.get(\"/a\", middleware! { |_, mut res|\n    res.set(StatusCode::PermanentRedirect)\n       .set(Location(\"http://nickel.rs\".into()));\n\n    \"\"\n});\n</code></pre>\n\n<p>Note that an empty string is returned, similar to before. You were trying to return the <code>Response</code> type directly.</p>\n"}], "owner": {"reputation": 314, "user_id": 1321456, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/4bd54ccbccbb1bb894075339e4f3a42f?s=128&d=identicon&r=PG", "display_name": "shinriyo", "link": "https://stackoverflow.com/users/1321456/shinriyo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 170, "favorite_count": 0, "accepted_answer_id": 35323566, "answer_count": 1, "score": -1, "last_activity_date": 1455164289, "creation_date": 1455129327, "last_edit_date": 1455164289, "question_id": 35323257, "link": "https://stackoverflow.com/questions/35323257/nickel-rs-post-redirect-not-found", "title": "nickel.rs post redirect not found", "body": "<p>I am using nickel.rs, PostgreSQL, and Angular.js. I can insert into my table with an HTTP POST:</p>\n\n<pre><code>// insert\n{\n    let conn = shared_connection.clone();\n    router.post(\"/api/movies\", middleware! { |request, mut response|\n        let conn = conn.lock().unwrap();\n        let stmt = match conn.prepare(\"insert into movie (title, releaseYear, director, genre)\n            values ($1, $2, $3, $4)\") {\n            Ok(stmt) =&gt; stmt,\n            Err(e) =&gt; {\n                return response.send(format!(\"Preparing query failed: {}\", e));\n            }\n        };\n\n        let movie = request.json_as::&lt;MovieInsert&gt;().unwrap();\n        match stmt.execute(&amp;[\n            &amp;movie.title.to_string(),\n            &amp;movie.releaseYear,\n            &amp;movie.director.to_string(),\n            &amp;movie.genre.to_string()\n        ]) {\n            Ok(v) =&gt; println!(\"Inserting movie was Success.\"),\n            Err(e) =&gt; println!(\"Inserting movie failed. =&gt; {:?}\", e),\n        };\n\n        // ERROR (1)\n        // return response.set(Location(\"/\".into()));\n\n    });\n}\n</code></pre>\n\n<p>I know this works fine because the row is inserted in the PostgreSQL table. However, the Chrome web browser shows an error:</p>\n\n<pre><code>POST http://localhost:6767/api/movies 404 (Not Found)\n</code></pre>\n\n<p>I also added the code in <code>ERROR (1)</code> line</p>\n\n<pre><code>response.set(Location(\"/\".into()));\n</code></pre>\n\n<p>however, console show the error.</p>\n\n<pre><code> expected `core::result::Result&lt;nickel::middleware::Action&lt;nickel::response::Response&lt;'mw, _&gt;, nickel::response::Response&lt;'mw, _, hyper::net::Streaming&gt;&gt;, nickel::nickel_error::NickelError&lt;'mw, _&gt;&gt;`,\n    found `&amp;mut nickel::response::Response&lt;'_, _&gt;`\n(expected enum `core::result::Result`,\n    found &amp;-ptr)\n</code></pre>\n\n<p>Now it is my code applied what Shepmaster said.</p>\n\n<pre><code>// insert\n{\n    let conn = shared_connection.clone();\n    router.post(\"/api/movies\", middleware! { |request, mut response|\n        let conn = conn.lock().unwrap();\n        let stmt = match conn.prepare(\"insert into movie (title, releaseYear, director, genre)\n            values ($1, $2, $3, $4)\") {\n            Ok(stmt) =&gt; stmt,\n            Err(e) =&gt; {\n                return response.send(format!(\"Preparing query failed: {}\", e));\n            }\n        };\n\n        let movie = request.json_as::&lt;MovieInsert&gt;().unwrap();\n        match stmt.execute(&amp;[\n            &amp;movie.title.to_string(),\n            &amp;movie.releaseYear,\n            &amp;movie.director.to_string(),\n            &amp;movie.genre.to_string()\n        ]) {\n            Ok(v) =&gt; println!(\"Inserting movie was Success.\"),\n            Err(e) =&gt; println!(\"Inserting movie failed. =&gt; {:?}\", e),\n        };\n\n        response.set(StatusCode::PermanentRedirect)\n            .set(Location(\"/\".into()));\n        \"\"\n    });\n}\n</code></pre>\n\n<p>but the error occurred.</p>\n\n<p>src/main.rs:155:18: 155:43 error: the trait <code>modifier::Modifier&lt;nickel::response::Response&lt;'_, _&gt;&gt;</code> is not implemented for the type <code>hyper::header::common::location::Location</code> [E0277]\nsrc/main.rs:155                 .set(Location(\"/\".into()));</p>\n\n<p><strong>finally I fix like this!</strong></p>\n\n<pre><code>            Ok(v) =&gt; {\n                println!(\"Inserting movie was Success.\");\n                response.set(StatusCode::Ok);\n            },\n            Err(e) =&gt; println!(\"Inserting movie failed. =&gt; {:?}\", e),\n        };\n\n        //response.set(StatusCode::PermanentRedirect)\n        //    .set(Location(\"/\".into()));\n        //\"\"\n        return response.send(\"\");\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 9296, "user_id": 1446742, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff5e3600cba841c184385605d1d99d03?s=128&d=identicon&r=PG", "display_name": "fjh", "link": "https://stackoverflow.com/users/1446742/fjh"}, "is_accepted": false, "score": 5, "last_activity_date": 1455133841, "last_edit_date": 1455133841, "creation_date": 1455131118, "answer_id": 35323796, "question_id": 35321795, "link": "https://stackoverflow.com/questions/35321795/websocket-client-message-payload-does-not-live-long-enough/35323796#35323796", "title": "Websocket client message payload &quot;does not live long enough&quot;", "body": "<blockquote>\n  <p>When I remove <code>globaltest = s</code>, the code builds and runs without problems.</p>\n</blockquote>\n\n<p>Yes, because that assignment is not safe to do. You're trying to modify a local variable declared in the main thread from within your other thread. That could lead to all sorts of problems, like data races, which is why the compiler won't let you do it.</p>\n\n<p>It's difficult to say what the best way to fix this is without knowing more about what you want to do. That being said, you could probably fix this by making <code>globaltest</code> an <code>Arc&lt;Mutex&lt;String&gt;&gt;</code> instead of a <code>&amp;str</code>, so you could safely access it from both threads.</p>\n"}, {"comments": [{"owner": {"reputation": 62, "user_id": 1742928, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/J1z0e.png?s=128&g=1", "display_name": "Nathaniel Chen", "link": "https://stackoverflow.com/users/1742928/nathaniel-chen"}, "edited": false, "score": 0, "creation_date": 1455710682, "post_id": 35345327, "comment_id": 58608751, "body": "Thanks your detailed answer!, very clear and easy to understand!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1455209546, "last_edit_date": 1495540765, "creation_date": 1455209546, "answer_id": 35345327, "question_id": 35321795, "link": "https://stackoverflow.com/questions/35321795/websocket-client-message-payload-does-not-live-long-enough/35345327#35345327", "title": "Websocket client message payload &quot;does not live long enough&quot;", "body": "<p>Whenever you have a problem, you should spend time reducing the problem. This helps you understand where the problem is and is likely to remove extraneous details that may be confusing you.</p>\n\n<p>In this case, you could start by removing all of the other <code>match</code> arms, replacing them with <code>panic!</code> calls. Then try replacing libraries with your own code, then eventually just standard library code. Eventually you will get to something much smaller that reproduces the problem.</p>\n\n<p>This is called <a href=\"/help/mcve\">creating an MCVE</a>, and is highly encouraged when you ask a question on Stack Overflow. However, it's 100% useful to yourself whenever you have a problem you don't yet understand. As a professional programmer, you are expected to do this legwork.</p>\n\n<p>Here's one possible MCVE I was able to create:</p>\n\n<pre><code>use std::{str, thread};\n\nfn main() {\n    let mut global_string = \"one\";\n\n    let child = thread::spawn(move || {\n        let payload = b\"Some allocated raw data\".to_vec();\n        let s = str::from_utf8(&amp;payload).unwrap();\n        global_string = s;\n    });\n\n    println!(\"{}\", global_string);\n}\n</code></pre>\n\n<p>And it produces the same error (\"reference must be valid for the static lifetime\"). Specifically, the <code>global_string</code> variable is a <code>&amp;'static str</code>, while <code>s</code> is a <code>&amp;str</code> with a lifetime equivalent to the <code>payload</code> it is borrowed from. Simply put, the <code>payload</code> will be deallocated before the thread exits, which means that the string would point to invalid memory, which could cause a crash or security vulnerability. This is a class of errors that Rust prevents against.</p>\n\n<p>This is what <a href=\"https://stackoverflow.com/a/35323796/155423\">fjh is telling you</a>.</p>\n\n<p>Instead, you need to be able to ensure that the string will continue to live outside of the thread. The simplest way is to allocate memory that it will control. In Rust, this is a <code>String</code>:</p>\n\n<pre><code>use std::{str, thread};\n\nfn main() {\n    let mut global_string = \"one\".to_string();\n\n    let child = thread::spawn(move || {\n        let payload = b\"Some allocated raw data\".to_vec();\n        let s = str::from_utf8(&amp;payload).unwrap();\n        global_string = s.to_string();\n    });\n\n    println!(\"{}\", global_string);\n}\n</code></pre>\n\n<p>Now we've changed the error to \"use of moved value: <code>global_string</code>\", because we are transferring ownership of the <code>String</code> from <code>main</code> to the thread. We could try to fix that by cloning the string before we give it to the thread, but then we wouldn't be changing the outer one that we want.</p>\n\n<p>Even if we could set the value in the outer thread, we'd get in trouble because we'd be creating a race condition where two threads are acting in parallel on one piece of data. You have no idea what state the variable is in when you try to access it. That's where a <code>Mutex</code> comes in. It makes it so that multiple threads can safely share access to one piece of data, one at a time.</p>\n\n<p>However, you still have the problem that only one thread can own the <code>Mutex</code> at a time, but you need two threads to own it. That's where <code>Arc</code> comes in. An <code>Arc</code> can be cloned and the clone can be given to another thread. Both <code>Arc</code>s then point to the same value and ensure it is cleaned up when nothing is using it any more.</p>\n\n<p>Note that we have to clone the <code>Arc&lt;Mutex&lt;String&gt;&gt;&gt;</code> <em>before</em> we spawn the thread because we are transferring ownership of it into the thread:</p>\n\n<pre><code>use std::{str, thread};\nuse std::sync::{Arc, Mutex};\n\nfn main() {\n    let global_string = Arc::new(Mutex::new(\"one\".to_string()));\n    let inner = global_string.clone();\n\n    let child = thread::spawn(move || {\n        let payload = b\"Some allocated raw data\".to_vec();\n        let s = str::from_utf8(&amp;payload).unwrap();\n        *inner.lock().unwrap() = s.to_string();\n    });\n\n    child.join().unwrap();\n\n    let s = global_string.lock().unwrap();\n    println!(\"{}\", *s);\n}\n</code></pre>\n"}], "owner": {"reputation": 62, "user_id": 1742928, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/J1z0e.png?s=128&g=1", "display_name": "Nathaniel Chen", "link": "https://stackoverflow.com/users/1742928/nathaniel-chen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 206, "favorite_count": 0, "accepted_answer_id": 35345327, "answer_count": 2, "score": 2, "last_activity_date": 1455209546, "creation_date": 1455124835, "last_edit_date": 1455207981, "question_id": 35321795, "link": "https://stackoverflow.com/questions/35321795/websocket-client-message-payload-does-not-live-long-enough", "title": "Websocket client message payload &quot;does not live long enough&quot;", "body": "<p>I modified an <a href=\"https://github.com/cyderize/rust-websocket\" rel=\"nofollow\">existing websocket client</a> to save the message payload from the websocket server:</p>\n\n<pre><code>fn main()\n{\n    let mut globaltest = \"\";\n\n    // ...some othercode\n\n\n    let receive_loop = thread::spawn(move || {\n        // Receive loop\n        for message in receiver.incoming_messages() {\n            let message: Message = match message {\n                Ok(m) =&gt; m,\n                Err(e) =&gt; {\n                    println!(\"Receive Loop: {:?}\", e);\n                    let _ = tx_1.send(Message::close());\n                    return;\n                }\n            };\n            match message.opcode {\n                Type::Close =&gt; {\n                    // Got a close message, so send a close message and return\n                    let _ = tx_1.send(Message::close());\n                    return;\n                }\n                Type::Ping =&gt; match tx_1.send(Message::pong(message.payload)) {\n                    // Send a pong in response\n                    Ok(()) =&gt; (),\n                    Err(e) =&gt; {\n                        println!(\"Receive Loop: {:?}\", e);\n                        return;\n                    }\n                },\n                // Say what we received\n                _ =&gt; {\n                    println!(\"Receive Loop: {:?}\", message);\n                        // recive from motion\n                        let buf = &amp;message.payload;\n                        {\n                            let s = match str::from_utf8(buf) {\n                                Ok(v) =&gt; v,\n                                Err(e) =&gt; panic!(\"Invalid UTF-8 sequence: {}\", e),\n                            };\n                            println!(\"{}\",s);\n\n                            ////&gt;&gt;&gt; problem here &lt;&lt;&lt;\n                            globaltest = s;\n                        }\n\n                    },\n            }\n        }\n    });\n\n\n    // ...some othercode\n\n}\n</code></pre>\n\n<p>When I build, I get an error message:</p>\n\n<pre><code>nathaniel@nathaniel-virtual-machine:~/rustcoderep/rsdummywsclient$ sudo cargo build\n   Compiling rsdummywsclient v0.1.0 (file:///home/nathaniel/rustcoderep/rsdummywsclient)\nsrc/main.rs:94:36: 94:51 error: `message.payload` does not live long enough\nsrc/main.rs:94                         let buf = &amp;message.payload;\n                                                  ^~~~~~~~~~~~~~~\nnote: reference must be valid for the static lifetime...\nsrc/main.rs:75:6: 106:4 note: ...but borrowed value is only valid for the block suffix following statement 0 at 75:5\nsrc/main.rs:75          };\nsrc/main.rs:76          match message.opcode {\nsrc/main.rs:77              Type::Close =&gt; {\nsrc/main.rs:78                  // Got a close message, so send a close message and return\nsrc/main.rs:79                  let _ = tx_1.send(Message::close());\nsrc/main.rs:80                  return;\n               ...\nerror: aborting due to previous error\n</code></pre>\n\n<p>I have no idea why. I tried a lot of solutions like <code>Arc</code> and <code>Mutex</code>, but none of them work :(</p>\n\n<p>When I remove <code>globaltest = s</code>, the code builds and runs without problems. So I tried to write a simpler example:</p>\n\n<pre><code>use std::str;\nuse std::thread;\n\nfn main() {\n\n    let mut y = 2;\n\n    let receive_loop = thread::spawn(move || {\n         let x = 1;\n\n         y = x;\n          println!(\"tt{:?}\",y);\n    });\n\n    let receive_loop2 = thread::spawn(move || {\n\n          println!(\"tt2{:?}\",y);\n    });\n\n  println!(\"{:?}\",y);\n\n}\n</code></pre>\n\n<p>This works... with almost the same structure.</p>\n\n<p>Here is the full code, only a little different from the rust-websocket client sample:</p>\n\n<pre><code>extern crate websocket;\n\nfn main() {\n    use std::thread;\n    use std::sync::mpsc::channel;\n    use std::io::stdin;\n    use std::str;\n    use websocket::{Message, Sender, Receiver};\n    use websocket::message::Type;\n    use websocket::client::request::Url;\n    use websocket::Client;\n\n    let mut globaltest =\"\";\n\n    let url = Url::parse(\"ws://127.0.0.1:2794\").unwrap();\n\n    println!(\"Connecting to {}\", url);\n\n    let request = Client::connect(url).unwrap();\n\n    let response = request.send().unwrap(); // Send the request and retrieve a response\n\n    println!(\"Validating response...\");\n\n    response.validate().unwrap(); // Validate the response\n\n    println!(\"Successfully connected\");\n\n    let (mut sender, mut receiver) = response.begin().split();\n\n    let (tx, rx) = channel();\n\n    let tx_1 = tx.clone();\n\n    let send_loop = thread::spawn(move || {\n        loop {\n            // Send loop\n            let message: Message = match rx.recv() {\n                Ok(m) =&gt; m,\n                Err(e) =&gt; {\n                    println!(\"Send Loop: {:?}\", e);\n                    return;\n                }\n            };\n            match message.opcode {\n                Type::Close =&gt; {\n                    let _ = sender.send_message(&amp;message);\n                    // If it's a close message, just send it and then return.\n                    return;\n                },\n                _ =&gt; (),\n            }\n            // Send the message\n            match sender.send_message(&amp;message) {\n                Ok(()) =&gt; (),\n                Err(e) =&gt; {\n                    println!(\"Send Loop: {:?}\", e);\n                    let _ = sender.send_message(&amp;Message::close());\n                    return;\n                }\n            }\n        }\n    });\n\n    let receive_loop = thread::spawn(move || {\n        // Receive loop\n        for message in receiver.incoming_messages() {\n            let message: Message = match message {\n                Ok(m) =&gt; m,\n                Err(e) =&gt; {\n                    println!(\"Receive Loop: {:?}\", e);\n                    let _ = tx_1.send(Message::close());\n                    return;\n                }\n            };\n            match message.opcode {\n                Type::Close =&gt; {\n                    // Got a close message, so send a close message and return\n                    let _ = tx_1.send(Message::close());\n                    return;\n                }\n                Type::Ping =&gt; match tx_1.send(Message::pong(message.payload)) {\n                    // Send a pong in response\n                    Ok(()) =&gt; (),\n                    Err(e) =&gt; {\n                        println!(\"Receive Loop: {:?}\", e);\n                        return;\n                    }\n                },\n                // Say what we received\n                _ =&gt; {\n                    println!(\"Receive Loop: {:?}\", message);\n                        // recive from motion\n                        let buf = &amp;message.payload;\n                        {\n                            let s = match str::from_utf8(buf) {\n                                Ok(v) =&gt; v,\n                                Err(e) =&gt; panic!(\"Invalid UTF-8 sequence: {}\", e),\n                            };\n                            println!(\"{}\",s);\n                            globaltest = s;\n                        }\n\n                    },\n            }\n        }\n    });\n\n    loop {\n        let mut input = String::new();\n\n        stdin().read_line(&amp;mut input).unwrap();\n\n        let trimmed = input.trim();\n\n        let message = match trimmed {\n            \"/close\" =&gt; {\n                // Close the connection\n                let _ = tx.send(Message::close());\n                break;\n            }\n            // Send a ping\n            \"/ping\" =&gt; Message::ping(b\"PING\".to_vec()),\n            // Otherwise, just send text\n            _ =&gt; Message::text(trimmed.to_string()),\n        };\n\n        match tx.send(message) {\n            Ok(()) =&gt; (),\n            Err(e) =&gt; {\n                println!(\"Main Loop: {:?}\", e);\n                break;\n            }\n        }\n    }\n\n    // We're exiting\n\n    println!(\"Waiting for child threads to exit\");\n\n    let _ = send_loop.join();\n    let _ = receive_loop.join();\n\n    println!(\"Exited\");\n}\n</code></pre>\n\n<hr>\n\n<p>@fjh thanks your reply!</p>\n\n<p>I modified my code into this, changing <code>globaltest</code> in <code>receive_loop</code> and accessing it from the main thread loop. I still get a confusing error, even after spending three hours I still cannot solve it :(</p>\n\n<pre><code>fn main() {\n\n    let mut globaltest:Arc&lt;Mutex&lt;String&gt;&gt; = Arc::new(Mutex::new(String::from(\"\")));\n\n    //some other code...\n\n    let receive_loop = thread::spawn(move || {\n\n        // Receive loop\n        for message in receiver.incoming_messages() {\n            let message: Message = match message {\n                Ok(m) =&gt; m,\n                Err(e) =&gt; {\n                    println!(\"Receive Loop: {:?}\", e);\n                    let _ = tx_1.send(Message::close());\n                    return;\n                }\n            };\n            match message.opcode {\n                Type::Close =&gt; {\n                    // Got a close message, so send a close message and return\n                    let _ = tx_1.send(Message::close());\n                    return;\n                }\n                Type::Ping =&gt; match tx_1.send(Message::pong(message.payload)) {\n                    // Send a pong in response\n                    Ok(()) =&gt; (),\n                    Err(e) =&gt; {\n                        println!(\"Receive Loop: {:?}\", e);\n                        return;\n                    }\n                },\n                // Say what we received\n                _ =&gt; { \n                        let mut globaltest_child = globaltest.lock().unwrap();\n\n                        println!(\"Receive Loop: {:?}\", message);\n                        // recive from motion\n                        let buf = &amp;message.payload;\n                        {\n                            let s = match str::from_utf8(buf) {\n                                Ok(v) =&gt; v,\n                                Err(e) =&gt; panic!(\"Invalid UTF-8 sequence: {}\", e),\n                            };\n\n                            {\n                                //&gt;&gt;&gt; if I do like this, globaltest value will same like globaltest_child??\n                                *globaltest_child = String::from(s); \n                                println!(\"{:?}\",globaltest_child.clone()); \n                            }\n                        } \n                    },\n            }\n        }\n    });\n\n    loop { \n        let message = Message::text(\"mtconnect\");\n\n        match tx.send(message) {\n            Ok(()) =&gt; (),\n            Err(e) =&gt; {\n                println!(\"Main Loop: {:?}\", e);\n                break;\n            }\n        }\n\n        ///&gt;&gt;&gt; problem here////\n        println!(\"{:?}\",globaltest.clone()); \n        thread::sleep(time::Duration::from_millis(3000)); \n    } \n}\n</code></pre>\n\n<p>The compiler always tells me:</p>\n\n<pre><code>athaniel@nathaniel-virtual-machine:~/rustcoderep/rsadapter$ sudo cargo run\n   Compiling rsadapter v0.1.0 (file:///home/nathaniel/rustcoderep/rsadapter)\nsrc/main.rs:166:25: 166:35 error: use of moved value: `globaltest` [E0382]\nsrc/main.rs:166         println!(\"{:?}\",globaltest.clone()); \n                                        ^~~~~~~~~~\n&lt;std macros&gt;:2:25: 2:56 note: in this expansion of format_args!\n&lt;std macros&gt;:3:1: 3:54 note: in this expansion of print! (defined in &lt;std macros&gt;)\nsrc/main.rs:166:9: 166:45 note: in this expansion of println! (defined in &lt;std macros&gt;)\nsrc/main.rs:166:25: 166:35 help: run `rustc --explain E0382` to see a detailed explanation\nsrc/main.rs:102:35: 153:3 note: `globaltest` moved into closure environment here because it has type `alloc::arc::Arc&lt;std::sync::mutex::Mutex&lt;collections::string::String&gt;&gt;`, which is non-copyable\nsrc/main.rs:102     let receive_loop = thread::spawn(move || {\nsrc/main.rs:103         \nsrc/main.rs:104       \nsrc/main.rs:105         // Receive loop\nsrc/main.rs:106         for message in receiver.incoming_messages() {\nsrc/main.rs:107             let message: Message = match message {\n                ...\nsrc/main.rs:102:35: 153:3 help: perhaps you meant to use `clone()`?\nerror: aborting due to previous error\n</code></pre>\n\n<p>I still can't access <code>globaltest</code> in another thread.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1455120936, "post_id": 35320262, "comment_id": 58349447, "body": "Have you seen <a href=\"http://cglab.ca/~abeinges/blah/too-many-lists/book/\" rel=\"nofollow noreferrer\"><i>Learning Rust With Entirely Too Many Linked Lists</i></a>?"}, {"owner": {"reputation": 431, "user_id": 3600860, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/b379506ec89829e5384fd392ca5a291e?s=128&d=identicon&r=PG&f=1", "display_name": "DeBe", "link": "https://stackoverflow.com/users/3600860/debe"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1455121054, "post_id": 35320262, "comment_id": 58349551, "body": "@Shepmaster I have - unfortunately their implementation of <code>IterMut</code> struct slightly differs from mine, and I am wondering how to make it work without changing the struct."}, {"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 0, "creation_date": 1455144050, "post_id": 35320262, "comment_id": 58363389, "body": "It&#39;s not possible without changing the <code>IterMut</code> struct."}, {"owner": {"reputation": 431, "user_id": 3600860, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/b379506ec89829e5384fd392ca5a291e?s=128&d=identicon&r=PG&f=1", "display_name": "DeBe", "link": "https://stackoverflow.com/users/3600860/debe"}, "edited": false, "score": 0, "creation_date": 1455172083, "post_id": 35320262, "comment_id": 58372288, "body": "And how would that exactly look like?"}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1455176971, "post_id": 35320262, "comment_id": 58374647, "body": "In the linked article, the iterators hold references to the nodes, not to the links. This is probably important because it doesn&#39;t borrow the predecessor nodes."}, {"owner": {"reputation": 431, "user_id": 3600860, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/b379506ec89829e5384fd392ca5a291e?s=128&d=identicon&r=PG&f=1", "display_name": "DeBe", "link": "https://stackoverflow.com/users/3600860/debe"}, "edited": false, "score": 0, "creation_date": 1455177579, "post_id": 35320262, "comment_id": 58374999, "body": "But the compiler does not complain about that, it complains about a lifetime it can&#39;t infer. Also: looking at the original implementation of LinkedList, the iterator also holds a reference to the Link."}, {"owner": {"reputation": 4073, "user_id": 11498773, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/79d317da8c76af3f45f63986e9783740?s=128&d=identicon&r=PG&f=1", "display_name": "Mihir", "link": "https://stackoverflow.com/users/11498773/mihir"}, "reply_to_user": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1589703510, "post_id": 35320262, "comment_id": 109393664, "body": "@SebastianRedl, Stuck with the exact some problem. It would really help if you could elaborate a little more."}, {"owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "edited": false, "score": 2, "creation_date": 1589707550, "post_id": 35320262, "comment_id": 109394885, "body": "Does this answer your question? <a href=\"https://stackoverflow.com/questions/61847200/cannot-infer-an-appropriate-lifetime-for-autoref-due-to-conflicting-requirement\">`cannot infer an appropriate lifetime for autoref due to conflicting requirements` but can&#39;t change anything due to trait definition constraints</a>"}, {"owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "edited": false, "score": 1, "creation_date": 1589707596, "post_id": 35320262, "comment_id": 109394897, "body": "I&#39;ve proposed <a href=\"https://stackoverflow.com/questions/61847200/cannot-infer-an-appropriate-lifetime-for-autoref-due-to-conflicting-requirement?noredirect=1#comment109393715_61847200\"><code>cannot infer an appropriate lifetime for autoref due to conflicting requirements</code> but can&#39;t change anything due to trait definition constraints</a> as a duplicate since it&#39;s practically the same question and has a couple good answers now."}], "owner": {"reputation": 431, "user_id": 3600860, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/b379506ec89829e5384fd392ca5a291e?s=128&d=identicon&r=PG&f=1", "display_name": "DeBe", "link": "https://stackoverflow.com/users/3600860/debe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 108, "favorite_count": 0, "closed_date": 1595875461, "answer_count": 0, "score": 4, "last_activity_date": 1455176091, "creation_date": 1455120716, "last_edit_date": 1455176091, "question_id": 35320262, "link": "https://stackoverflow.com/questions/35320262/reimplementation-of-linkedlist-itermut-not-compiling", "closed_reason": "Duplicate", "title": "Reimplementation of LinkedList: IterMut not compiling", "body": "<p>I am trying to reimplement <code>LinkedList</code> from scratch and I am having some trouble with the <code>IterMut</code> part. I just won't compile and I can't figure out why. The compiler just gives me the message:</p>\n\n<pre><code>src/lib.rs:59:19: 59:27 error: cannot infer an appropriate lifetime for autoref due to conflicting requirements [E0495]\nsrc/lib.rs:59         self.next.as_mut().map(|head| {\n                                ^~~~~~~~\nsrc/lib.rs:58:5: 63:6 help: consider using an explicit lifetime parameter as shown: fn next(&amp;'a mut self) -&gt; Option&lt;&amp;'a mut A&gt;\nsrc/lib.rs:58     fn next(&amp;mut self) -&gt; Option&lt;&amp;'a mut A&gt; {\nsrc/lib.rs:59         self.next.as_mut().map(|head| {\nsrc/lib.rs:60             self.next = &amp;mut head.next;\nsrc/lib.rs:61             &amp;mut head.value\nsrc/lib.rs:62         })\nsrc/lib.rs:63     }\nerror: aborting due to previous error\nCould not compile `linked_list`.\n\nTo learn more, run the command again with --verbose.\n</code></pre>\n\n<p>And here is the actual code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::mem;\n\ntype Link&lt;T&gt; = Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt;;\n\npub struct LinkedList&lt;T&gt; {\n    head: Link&lt;T&gt;,\n    length: usize,\n}\n\nstruct Node&lt;T&gt; {\n    value: T,\n    next: Link&lt;T&gt;,\n}\n\npub struct IterMut&lt;'a, T: 'a&gt; {\n    next: &amp;'a mut Link&lt;T&gt;,\n}\n\nimpl&lt;T&gt; Node&lt;T&gt; {\n    fn new(value: T) -&gt; Node&lt;T&gt; {\n        Node {\n            value: value,\n            next: None\n        }\n    }\n}\n\nimpl&lt;T&gt; LinkedList&lt;T&gt; {\n    pub fn new() -&gt; LinkedList&lt;T&gt; {\n        LinkedList {\n            head: None,\n            length: 0,\n        }\n    }\n\n    pub fn push_front(&amp;mut self, elem: T) {\n        let mut new_head = Box::new(Node::new(elem));\n        match self.head {\n            None =&gt; self.head = Some(new_head),\n            Some(ref mut head) =&gt; {\n                mem::swap(head, &amp;mut new_head);\n                head.next = Some(new_head);\n            }\n        }\n        self.length += 1;\n    }\n\n    pub fn iter_mut(&amp;mut self) -&gt; IterMut&lt;T&gt; {\n        IterMut {\n            next: &amp;mut self.head,\n        }\n    }\n}\n\nimpl&lt;'a, A&gt; Iterator for IterMut&lt;'a, A&gt; {\n    type Item = &amp;'a mut A;\n\n    fn next(&amp;mut self) -&gt; Option&lt;&amp;'a mut A&gt; {\n        self.next.as_mut().map(|head| {\n            self.next = &amp;mut head.next;\n            &amp;mut head.value\n        })\n    }\n}\n\n#[cfg(test)]\nmod tests {\n    use super::LinkedList;\n\n    #[test]\n    fn iter_mut() {\n        let mut list = LinkedList::new();\n        list.push_front(1);\n        list.push_front(2);\n\n        let mut iter = list.iter_mut();\n        assert_eq!(iter.next(), Some(&amp;mut 2));\n        assert_eq!(iter.next(), Some(&amp;mut 1));\n        assert_eq!(iter.next(), None);\n    }\n}\n</code></pre>\n\n<p><strong>Edit:</strong>\nSimilarly, I implemented <code>Iter</code> which works. I naively assumed, that <code>IterMut</code> would work with just adding <code>mut</code> in the appropriate places. Here is the <code>Iter</code> part:</p>\n\n<pre><code>pub struct Iter&lt;'a, T: 'a&gt; {\n    next: &amp;'a Link&lt;T&gt;,\n}\n\nimpl&lt;T&gt; LinkedList&lt;T&gt; {\n    ...\n\n    pub fn iter(&amp;self) -&gt; Iter&lt;T&gt; {\n        Iter {\n            next: &amp;self.head,\n        }\n    }\n\n    ...\n}\n\nimpl&lt;'a, A&gt; Iterator for Iter&lt;'a, A&gt; {\n    type Item = &amp;'a A;\n\n    fn next(&amp;mut self) -&gt; Option&lt;&amp;'a A&gt; {\n        self.next.as_ref().map(|head| {\n            self.next = &amp;head.next;\n            &amp;head.value\n        })\n    }\n}\n</code></pre>\n\n<p>Why does <code>Iter</code> work but <code>IterMut</code> doesn't?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 45, "user_id": 3428321, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/e335f2c124fe7a0a682811e608311c2b?s=128&d=identicon&r=PG&f=1", "display_name": "kdvr", "link": "https://stackoverflow.com/users/3428321/kdvr"}, "edited": false, "score": 0, "creation_date": 1455192526, "post_id": 35319241, "comment_id": 58385104, "body": "This information really helped me understand some of the lingo much better."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1455119929, "last_edit_date": 1455119929, "creation_date": 1455118095, "answer_id": 35319241, "question_id": 35316163, "link": "https://stackoverflow.com/questions/35316163/how-do-i-use-read-scanline-from-the-piston-image-crate/35319241#35319241", "title": "How do I use read_scanline from the piston image crate?", "body": "<p><strong>Note</strong> I'm having trouble actually opening a GIF as each line says it is 0 bytes, so there's the possibility I've missed something important... I'll use a JPEG to demonstrate instead.</p>\n\n<p><code>ImageDecoder</code> is <a href=\"http://doc.rust-lang.org/stable/book/traits.html\" rel=\"nofollow\">a trait</a>. You need to use a concrete implementation of the trait. The documentation lists all known implementors of the trait, one of which is <a href=\"http://www.piston.rs/image/image/gif/struct.Decoder.html\" rel=\"nofollow\"><code>image::gif::Decoder</code></a>, another is <a href=\"http://www.piston.rs/image/image/jpeg/struct.JPEGDecoder.html\" rel=\"nofollow\"><code>image::jpeg::JPEGDecoder</code></a>.</p>\n\n<p><code>read_scanline</code> accepts a mutable <code>self</code>, which means that you normally will call it with <em>method syntax</em>: <code>object.method(arg1)</code>. The first non-<code>self</code> argument is a mutable slice of bytes. The documentation states:</p>\n\n<blockquote>\n  <p>Reads one row from the image into <code>buf</code> and returns the row index</p>\n</blockquote>\n\n<p>So the pixel data will be stored in the buffer. The next trick is to figure out how many bytes we need for a row and how many rows there are. <a href=\"http://www.piston.rs/image/image/trait.ImageDecoder.html#tymethod.row_len\" rel=\"nofollow\"><code>ImageDecoder::row_len</code></a>  and <a href=\"http://www.piston.rs/image/image/trait.ImageDecoder.html#tymethod.dimensions\" rel=\"nofollow\"><code>ImageDecoder::dimensions</code></a> address that respectively. Put together, we get something like this:</p>\n\n<pre><code>extern crate image;\n\nuse std::fs::File;\n\nuse image::jpeg;\nuse image::{GenericImage, ImageDecoder};\nuse image::{ColorType, Rgb, Pixel};\n\nfn main() {\n    let f = File::open(\"/tmp/cat.jpg\").unwrap();\n    let mut decoder = jpeg::JPEGDecoder::new(f);\n\n    let (width, height) = decoder.dimensions().unwrap();\n    let row_len = decoder.row_len().unwrap();\n\n    println!(\"{} x {}, {}\", width, height, row_len);\n\n    let rows: Vec&lt;_&gt; = (0..height).map(|_| {\n        let mut row = vec![0; row_len];\n        decoder.read_scanline(&amp;mut row).unwrap();\n        row\n    }).collect();\n}\n</code></pre>\n\n<p>This loads the JPEG, row-by-row, into a <code>Vec&lt;Vec&lt;u8&gt;&gt;</code> - a vector of vectors of bytes.</p>\n\n<p>To convert the raw data into pixels, we can use <a href=\"http://www.piston.rs/image/image/trait.Pixel.html#tymethod.from_slice\" rel=\"nofollow\"><code>Pixel::from_slice</code></a>, another trait method. In this case, I only handle one type of pixel - 8-bit RGB:</p>\n\n<pre><code>let colortype = decoder.colortype().unwrap();\nassert_eq!(colortype, ColorType::RGB(8)); // Others are left to you!\n\nlet row_colors: Vec&lt;Vec&lt;_&gt;&gt; = rows.iter().map(|r| {\n    r.chunks(3).map(|p| Rgb::from_slice(p)).collect()\n}).collect();\n</code></pre>\n\n<p>I'm not in love with this because of the hard-coded <code>3</code>. There should be some way of knowing that this pixel type only takes 3 bytes, but I'm not seeing anything obvious.</p>\n"}], "owner": {"reputation": 45, "user_id": 3428321, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/e335f2c124fe7a0a682811e608311c2b?s=128&d=identicon&r=PG&f=1", "display_name": "kdvr", "link": "https://stackoverflow.com/users/3428321/kdvr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 434, "favorite_count": 0, "accepted_answer_id": 35319241, "answer_count": 1, "score": 3, "last_activity_date": 1455119929, "creation_date": 1455109609, "last_edit_date": 1455116776, "question_id": 35316163, "link": "https://stackoverflow.com/questions/35316163/how-do-i-use-read-scanline-from-the-piston-image-crate", "title": "How do I use read_scanline from the piston image crate?", "body": "<p>I just started learning Rust and I really like to learn by building something 'real'. So I read through the <a href=\"https://doc.rust-lang.org/book/\" rel=\"nofollow\">Book</a>, installed Rust, played around with the language and got <code>cargo run</code> working. </p>\n\n<p>I then decided to try and read an image from disk and convert that image into a <code>Vec</code>. In this case, I want to detect the color of the pixels and store that somehow.</p>\n\n<p>I broke it into multiple parts to learn Rust and its syntax:</p>\n\n<p>Starting with:</p>\n\n<ol>\n<li>Read an image from disk </li>\n<li>Get the pixels of an image </li>\n<li>Show colour code </li>\n</ol>\n\n<p>This led me to the following code using <a href=\"http://www.piston.rs/image/image\" rel=\"nofollow\">the image crate</a>:</p>\n\n<pre><code>extern crate image;\n\nuse std::path::Path;\nuse image::GenericImage;\n\nfn main() {\n\n    let img = image::open(&amp;Path::new(\"src/maze.gif\")).unwrap();\n\n    let pixels = img.pixels();\n\n    for e in pixels {\n        let (_, _, color) = e;\n\n        println!(\"Pixel colour {:?}\", color);\n    }\n\n    println!(\"Dimensions {:?}\", img.dimensions());\n}\n</code></pre>\n\n<p>So proud as I am, I see some information popping up:</p>\n\n<pre><code>* snip *\nPixel colour Rgba { data: [255, 255, 255, 255] }\nPixel colour Rgba { data: [0, 0, 0, 255] }\nPixel colour Rgba { data: [255, 255, 255, 255] }\n* snip *\n</code></pre>\n\n<p>Now I want to store for each line of the image its pixel information. I would like to have a <code>Vec</code> (is that correct?) with the info. A PHP array would look like this:</p>\n\n<pre><code>$a = [\n   0 =&gt; [ Color, Color, Color, Color],\n   1 =&gt; [ Color, Color, Color, Color]\n];\n</code></pre>\n\n<p>Therefore my assumption is to use <a href=\"http://www.piston.rs/image/image/trait.ImageDecoder.html#tymethod.read_scanline\" rel=\"nofollow\"><code>read_scanline</code></a>. This is where reading AND understanding the documentation fails me completely.</p>\n\n<p>What I think I need to do is:</p>\n\n<ol>\n<li>Get the decoder for the current opened image</li>\n<li>Call <code>read_scanline</code> on that decoder</li>\n<li>Iterate over the results</li>\n</ol>\n\n<p>But how?!</p>\n\n<p>The code reads this:</p>\n\n<pre><code>read_scanline(&amp;mut self, buf: &amp;mut [u8]) -&gt; ImageResult&lt;u32&gt;\n</code></pre>\n\n<p>I break this down as follows:</p>\n\n<ul>\n<li>First argument, an <code>ImageDecoder</code> object.</li>\n<li>Second argument a mutable 8 bit value. </li>\n<li>It returns an <code>ImageResult</code> object.</li>\n</ul>\n\n<p>So I tried adapting the code slightly:</p>\n\n<pre><code>extern crate image;\n\nuse std::path::Path;\nuse image::GenericImage;\nuse image::ImageDecoder;\n\nfn main() {\n\n    let img = image::open(&amp;Path::new(\"src/maze.gif\")).unwrap();\n\n    let pixels = img.pixels();\n    let something: &amp;mut [u8];\n    let result = image::ImageDecoder::read_scanline(img, something);\n\n    for e in pixels {\n        let (_, _, color) = e;\n\n        println!(\"Pixel colour {:?}\", color);\n    }\n\n    println!(\"Dimensions {:?}\", img.dimensions());\n}\n</code></pre>\n\n<p>Which, as you might have guessed fails miserably.</p>\n\n<pre><code>error: mismatched types:\n expected `&amp;mut _`,\n    found `image::dynimage::DynamicImage`\n(expected &amp;-ptr,\n    found enum `image::dynimage::DynamicImage`) [E0308]\nsrc/main.rs:13     let result = image::ImageDecoder::read_scanline(img, something);\n</code></pre>\n\n<p>Obviously this is due to the fact I didn't pass an <code>ImageDecoder</code> object. But how can I? How should I read and understand the documentation. I think it is due to not understanding <code>&amp;mut self</code>. I also do not understand how I should initiate this.</p>\n\n<p>I hope someone can explain what it is I am missing and point me into the right direction.</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "is_accepted": false, "score": 4, "last_activity_date": 1455065099, "creation_date": 1455065099, "answer_id": 35304962, "question_id": 35304663, "link": "https://stackoverflow.com/questions/35304663/is-it-possible-to-create-a-refcellany/35304962#35304962", "title": "Is it possible to create a RefCell&lt;Any&gt;?", "body": "<p><code>RefCell&lt;Any&gt;</code> is an unsized type; you can\u2019t have an actual instance of an unsized type\u2014how much stack space will it take? This is the same as the way in which you can\u2019t return <code>Any</code> but must rather return <code>Box&lt;Any&gt;</code>; so also you can\u2019t return <code>RefCell&lt;Any&gt;</code> but must return something like <code>Rc&lt;RefCell&lt;Any&gt;&gt;</code>. The likes of <code>RefCell&lt;Box&lt;Any&gt;&gt;</code> would work fine too, because a <code>RefCell</code> of a sized type is itself sized.</p>\n\n<p><a href=\"https://play.rust-lang.org/?code=use%20std%3A%3Aany%3A%3AAny%3B%0Ause%20std%3A%3Acell%3A%3ARefCell%3B%0Ause%20std%3A%3Arc%3A%3ARc%3B%0A%0Afn%20_test1%3CT%3A%20Any%3E%28x%3A%20T%29%20-%3E%20Box%3CAny%3E%20%7B%0A%20%20%20%20Box%3A%3Anew%28x%29%0A%7D%0A%0Afn%20_test2%3CT%3A%20Any%3E%28x%3A%20T%29%20-%3E%20Rc%3CRefCell%3CAny%3E%3E%20%7B%0A%20%20%20%20Rc%3A%3Anew%28RefCell%3A%3Anew%28x%29%29%0A%7D%0A%0Afn%20_test3%3CT%3A%20Any%3E%28x%3A%20T%29%20-%3E%20RefCell%3CBox%3CAny%3E%3E%20%7B%0A%20%20%20%20RefCell%3A%3Anew%28Box%3A%3Anew%28x%29%29%0A%7D%0A%0Afn%20main%28%29%20%7B%0A%7D&amp;version=stable\" rel=\"nofollow\">Demonstration.</a></p>\n"}, {"tags": [], "owner": {"reputation": 1589, "user_id": 2770092, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2321a7b8ee2a179e16b50242ecb21c4f?s=128&d=identicon&r=PG&f=1", "display_name": "Cecilio Pardo", "link": "https://stackoverflow.com/users/2770092/cecilio-pardo"}, "is_accepted": true, "score": 6, "last_activity_date": 1455065703, "creation_date": 1455065703, "answer_id": 35305048, "question_id": 35304663, "link": "https://stackoverflow.com/questions/35304663/is-it-possible-to-create-a-refcellany/35305048#35305048", "title": "Is it possible to create a RefCell&lt;Any&gt;?", "body": "<p><code>Box</code> has the trait <code>std::ops::CoerceUnsized</code>, which allows to cast to <code>Box&lt;Any&gt;</code>. <code>RefCell</code> does not, so you can't. </p>\n\n<p>Of course you can do this:</p>\n\n<pre><code>let x = RefCell::new( String::new() );\nlet x = &amp;x as &amp;RefCell&lt;Any&gt;;\n</code></pre>\n\n<p>So you can have a <code>RefCell&lt;Any&gt;</code>, but cannot construct one or coerce to one, only coerce references.</p>\n"}], "owner": {"reputation": 3669, "user_id": 4876946, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/5dc4839a7e9466d54f3791122f8f5d75?s=128&d=identicon&r=PG&f=1", "display_name": "Matt", "link": "https://stackoverflow.com/users/4876946/matt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 284, "favorite_count": 0, "accepted_answer_id": 35305048, "answer_count": 2, "score": 5, "last_activity_date": 1455065703, "creation_date": 1455063197, "last_edit_date": 1495541703, "question_id": 35304663, "link": "https://stackoverflow.com/questions/35304663/is-it-possible-to-create-a-refcellany", "title": "Is it possible to create a RefCell&lt;Any&gt;?", "body": "<p>Is it possible to create something of type <code>RefCell&lt;Any&gt;</code> in Rust?  I tried the following:</p>\n\n<pre><code>fn test2&lt;T : Any&gt;(x : T) -&gt; RefCell&lt;Any&gt;{\n    return RefCell::new(x) as RefCell&lt;Any&gt;\n}\n</code></pre>\n\n<p>But I get the following error:</p>\n\n<pre><code>error: the trait `core::marker::Sized` is not implemented for the type `core::any::Any + 'static` [E0277]\n&lt;anon&gt;:8 fn test2&lt;T : Any&gt;(x : T) -&gt; RefCell&lt;Any&gt;{\n</code></pre>\n\n<p>The documentation for <code>RefCell</code> includes the following</p>\n\n<pre><code>pub struct RefCell&lt;T&gt; where T: ?Sized {\n    // some fields omitted\n}\n</code></pre>\n\n<p>Which leads me to believe (along with the answer from <a href=\"https://stackoverflow.com/questions/35278766/why-is-sized-a-bound-for-certain-refcell-functions-but-not-all/35279362?noredirect=1#comment58318261_35279362\">this</a> question) that such a thing is possible.  I also tried:</p>\n\n<pre><code>fn test1&lt;T : Any&gt;(x : T) -&gt; Box&lt;Any&gt;{\n    return Box::new(x) as Box&lt;Any&gt;\n}\n</code></pre>\n\n<p>which works just fine.  Both <code>Box</code> and <code>RefCell</code> seem to have similar bounds, so I'm not quite sure what I'm missing here.  Any help would be much appreciated.  I have this in a <a href=\"https://play.rust-lang.org/?gist=3553a742d22bb95d0635&amp;version=stable\" rel=\"nofollow noreferrer\">Rust Playground</a>, if that is helpful.</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1455042295, "last_edit_date": 1455042295, "creation_date": 1455041001, "answer_id": 35299002, "question_id": 35298490, "link": "https://stackoverflow.com/questions/35298490/veciter-converts-to-borrow-of-option/35299002#35299002", "title": "Vec::iter() converts to borrow of Option", "body": "<p><a href=\"http://doc.rust-lang.org/std/vec/struct.Vec.html#method.iter\" rel=\"nofollow\"><code>Vec::iter</code></a> returns an <a href=\"http://doc.rust-lang.org/std/slice/struct.Iter.html\" rel=\"nofollow\"><code>Iter</code></a> struct, which implements <code>Iterator</code> as:</p>\n\n<pre><code>impl&lt;'a, T&gt; Iterator for Iter&lt;'a, T&gt; {\n    type Item = &amp;'a T;\n}\n</code></pre>\n\n<p>Said another way, the type of the value returned from each call to <code>Iterator::next</code> will be a reference to the item in the vector.</p>\n\n<p>If you change to <code>vec.into_iter()</code>, your code works:</p>\n\n<pre><code>fn main() {\n    let vec = vec![Some(true), None];\n\n    vec.into_iter()\n        .filter_map(|o| o)\n        .count();\n}\n</code></pre>\n\n<p>In this case, you are iterating on an <a href=\"http://doc.rust-lang.org/std/vec/struct.IntoIter.html\" rel=\"nofollow\"><code>IntoIter</code></a> struct which implements <code>Iterator</code> differently, returning the object itself:</p>\n\n<pre><code>impl&lt;T&gt; Iterator for IntoIter&lt;T&gt; {\n    type Item = T;\n}\n</code></pre>\n\n<p>This is required because only one thing may own each vector item at a time. Generally, you want to let the vector own the item and operate on references. <code>into_iter</code> <em>consumes</em> the vector, transferring ownership of the entire vector to the <code>IntoIter</code> struct. That struct is then allowed to give ownership of each item to the <code>filter_map</code> call.</p>\n\n<p>If your type implements <code>Clone</code>, you could also clone each item. This allows the vector to maintain ownership and creates a new item:</p>\n\n<pre><code>fn main() {\n    let vec = vec![Some(true), None];\n\n    vec.iter()\n        .cloned()\n        .filter_map(|o| o)\n        .count();\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 67160, "user_id": 1078084, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/wApmM.jpg?s=128&g=1", "display_name": "Akavall", "link": "https://stackoverflow.com/users/1078084/akavall"}, "is_accepted": false, "score": 1, "last_activity_date": 1455071948, "last_edit_date": 1455071948, "creation_date": 1455066789, "answer_id": 35305220, "question_id": 35298490, "link": "https://stackoverflow.com/questions/35298490/veciter-converts-to-borrow-of-option/35305220#35305220", "title": "Vec::iter() converts to borrow of Option", "body": "<p>How about this:</p>\n\n<pre><code>fn main() {\n    let my_vec = vec![Some(true), None];\n\n    println!(\"{}\", my_vec.iter().filter_map(|&amp;x| x).count());\n}\n</code></pre>\n\n<p>When apply <code>filter_map</code>, you can map <code>&amp;x</code> to <code>x</code>, and your code will work.</p>\n\n<p>As @Shepmaster pointed out in the comment this is only possible for types that implement <code>Copy</code>.</p>\n"}], "owner": {"reputation": 999, "user_id": 185093, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/89c5abf34d8e3c1732384c68a786996a?s=128&d=identicon&r=PG", "display_name": "Aaron", "link": "https://stackoverflow.com/users/185093/aaron"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 269, "favorite_count": 0, "accepted_answer_id": 35299002, "answer_count": 2, "score": 4, "last_activity_date": 1455071948, "creation_date": 1455039369, "last_edit_date": 1455051776, "question_id": 35298490, "link": "https://stackoverflow.com/questions/35298490/veciter-converts-to-borrow-of-option", "title": "Vec::iter() converts to borrow of Option", "body": "<p>Below is an reduced example from my code that reads a directory, traverses over the files, and appends a comment to the end of each file...</p>\n\n<p>This example shows a <code>Vec&lt;Option&lt;bool&gt;&gt;</code> that after calling <code>iter()</code> the compiler is interpreting the <code>Option&lt;_&gt;</code> as a borrow <code>&amp;Option&lt;_&gt;</code> type. I'd like to understand why I'm seeing this behavior. </p>\n\n\n\n<pre><code>fn main() {\n    let vec = vec![Some(true), None];\n\n    vec.iter()\n        .filter_map(|o| o)\n        .count();\n}\n</code></pre>\n\n<p>Compiler output</p>\n\n<pre><code>src/main.rs:50:25: 50:26 error: mismatched types:\n expected `core::option::Option&lt;_&gt;`,\n    found `&amp;core::option::Option&lt;bool&gt;`\n(expected enum `core::option::Option`,\n    found &amp;-ptr) [E0308]\nsrc/main.rs:50         .filter_map(|o| o)\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1455034466, "post_id": 35296336, "comment_id": 58303774, "body": "Style point: an empty <code>new</code> is better expressed by implementing the <code>Default</code> trait&#39;s <code>default</code> method. It also makes your type default-constructible."}], "answers": [{"comments": [{"owner": {"reputation": 896, "user_id": 3055725, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7736250e7eae9435540a34c6299dbd7b?s=128&d=identicon&r=PG", "display_name": "Mateus Felipe", "link": "https://stackoverflow.com/users/3055725/mateus-felipe"}, "edited": false, "score": 0, "creation_date": 1455033635, "post_id": 35296435, "comment_id": 58303101, "body": "If I turn Path into a reference to Path (&amp;Path) the compiler asks me for a lifetime."}, {"owner": {"reputation": 896, "user_id": 3055725, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7736250e7eae9435540a34c6299dbd7b?s=128&d=identicon&r=PG", "display_name": "Mateus Felipe", "link": "https://stackoverflow.com/users/3055725/mateus-felipe"}, "edited": false, "score": 0, "creation_date": 1455034909, "post_id": 35296435, "comment_id": 58304109, "body": "I understood everything except for using <code>&#39;static</code> as lifetime. What does it?"}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "reply_to_user": {"reputation": 896, "user_id": 3055725, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7736250e7eae9435540a34c6299dbd7b?s=128&d=identicon&r=PG", "display_name": "Mateus Felipe", "link": "https://stackoverflow.com/users/3055725/mateus-felipe"}, "edited": false, "score": 1, "creation_date": 1455066328, "post_id": 35296435, "comment_id": 58320629, "body": "<code>&#39;static</code> means that the referent is available for the whole program&#39;s lifetime. However, in <code>Node::new()</code>, the enum I return doesn&#39;t actually store a reference, so since you can&#39;t get a reference out of that enum, any lifetime is valid. Now, I just tested, and I thought putting <code>new()</code> in the generic <code>impl</code> block would raise an error about the compiler being unable to infer a lifetime for <code>&#39;a</code>, but that&#39;s not true (it would have been true if it had been a type parameter, though)."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 8, "last_activity_date": 1455034087, "last_edit_date": 1455034087, "creation_date": 1455033403, "answer_id": 35296435, "question_id": 35296336, "link": "https://stackoverflow.com/questions/35296336/e0277-sized-is-not-implemented-for-the-type-u8-but-my-type-does-not-have-a/35296435#35296435", "title": "E0277 &quot;Sized is not implemented for the type [u8]&quot;, but my type does not have a [u8]", "body": "<p>The problem is that your <code>NodeType</code> enum contains a <a href=\"http://doc.rust-lang.org/stable/std/path/struct.Path.html\" rel=\"noreferrer\"><code>std::path::Path</code></a> in its <code>Include</code> variant, but <code>Path</code> is an unsized type (because it contains a <code>[u8]</code> indirectly, and <code>[u8]</code> is unsized, hence the error you get).</p>\n\n<p>To fix this, change the <code>Include</code> variant to contain either a <code>&amp;Path</code> (if the node should borrow the path) or a <a href=\"http://doc.rust-lang.org/stable/std/path/struct.PathBuf.html\" rel=\"noreferrer\"><code>PathBuf</code></a> (if the node should own the path), or else change <code>Node::new()</code> to return <code>Box&lt;Node&gt;</code>.</p>\n\n<p>Changing <code>Include</code> to contain a <code>&amp;Path</code> requires adding a lifetime parameter to <code>Node</code> and to <code>NodeType</code>. The concrete lifetime may be static when the enum is not an <code>Include</code>.</p>\n\n<p>The code below demonstrates how this would work. Note how there are two <code>impl</code> blocks for <code>Node</code>: the first one (<code>impl Node&lt;'static&gt;</code>) should contain all methods that don't use the lifetime parameter, while the second one (<code>impl&lt;'a&gt; Node&lt;'a&gt;</code>) should contain all methods that do use the lifetime parameter (that includes all methods with a <code>self</code> parameter).</p>\n\n<pre><code>use std::path;\n\n#[derive(Debug)]\nenum NodeType&lt;'a&gt; {\n    Binding((String, String)),\n    Header,\n    Include(&amp;'a path::Path),\n    Raw(String),\n}\n\n#[derive(Debug)]\npub struct Node&lt;'a&gt; {\n    node_type: NodeType&lt;'a&gt;,\n}\n\nimpl Node&lt;'static&gt; {\n    fn new() -&gt; Node&lt;'static&gt; {\n        Node { node_type: NodeType::Header }\n    }\n}\n\nimpl&lt;'a&gt; Node&lt;'a&gt; {\n    fn include(path: &amp;'a path::Path) -&gt; Node&lt;'a&gt; {\n        Node { node_type: NodeType::Include(path) }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 896, "user_id": 3055725, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7736250e7eae9435540a34c6299dbd7b?s=128&d=identicon&r=PG", "display_name": "Mateus Felipe", "link": "https://stackoverflow.com/users/3055725/mateus-felipe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4896, "favorite_count": 2, "accepted_answer_id": 35296435, "answer_count": 1, "score": 8, "last_activity_date": 1499545898, "creation_date": 1455033116, "last_edit_date": 1499545898, "question_id": 35296336, "link": "https://stackoverflow.com/questions/35296336/e0277-sized-is-not-implemented-for-the-type-u8-but-my-type-does-not-have-a", "title": "E0277 &quot;Sized is not implemented for the type [u8]&quot;, but my type does not have a [u8]", "body": "<p>I'm making a <code>Node</code> tree. Here is the code:</p>\n\n<pre><code>use std::option::Option;\nuse std::path;\n\n#[derive(Debug)]\nenum NodeType {\n    Binding((String, String)),\n    Header,\n    Include(path::Path),\n    Raw(String),\n}\n\n#[derive(Debug)]\npub struct Node {\n    node_type: NodeType,\n}\n\nimpl Node {\n    fn new() -&gt; Node {\n        Node { node_type: NodeType::Header }\n    }\n}\n</code></pre>\n\n<p>When I compile this, I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `[u8]: std::marker::Sized` is not satisfied in `std::path::Path`\n --&gt; src/main.rs:8:13\n  |\n8 |     Include(path::Path),\n  |             ^^^^^^^^^^^ within `std::path::Path`, the trait `std::marker::Sized` is not implemented for `[u8]`\n  |\n  = note: `[u8]` does not have a constant size known at compile-time\n  = note: required because it appears within the type `std::path::Path`\n  = note: only the last field of a struct may have a dynamically sized type\n</code></pre>\n\n<p>I searched for this error, but it seems to refer to an type where <code>Sized</code> is not implemented. Oddly, the error output says that <code>[u8]</code> does not implement <code>Sized</code>, but there's not even one <code>u8</code> in my code. What could it be?</p>\n"}, {"tags": ["unit-testing", "testing", "logging", "rust", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 748, "user_id": 2128597, "user_type": "registered", "accept_rate": 64, "profile_image": "https://graph.facebook.com/100000157613328/picture?type=large", "display_name": "\u76db\u5b89\u5b89", "link": "https://stackoverflow.com/users/2128597/%e7%9b%9b%e5%ae%89%e5%ae%89"}, "edited": false, "score": 2, "creation_date": 1455014924, "post_id": 35289970, "comment_id": 58289863, "body": "Isn&#39;t there any workaround? D:"}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 3, "last_activity_date": 1455014708, "last_edit_date": 1495535302, "creation_date": 1455014708, "answer_id": 35289970, "question_id": 35289510, "link": "https://stackoverflow.com/questions/35289510/logging-while-running-cargo-test/35289970#35289970", "title": "logging while running `cargo test`", "body": "<p>The <code>log</code> crate doesn't do any logging by itself. From <a href=\"https://doc.rust-lang.org/log/log/index.html\" rel=\"nofollow noreferrer\">the main documentation page</a>:</p>\n\n<blockquote>\n  <p>If no logging implementation is selected, the facade falls back to a \"noop\" implementation that ignores all log messages.</p>\n</blockquote>\n\n<p>For your logging messages to go anywhere, you have to initialize a particular logging implementation, such as <a href=\"https://crates.io/crates/env_logger\" rel=\"nofollow noreferrer\"><code>env_logger</code></a>. However, it seems that right now, <a href=\"https://stackoverflow.com/questions/30177845/how-to-initialize-the-logger-for-integration-tests\">there is no way to perform initialization before tests are run</a>.</p>\n"}], "owner": {"reputation": 748, "user_id": 2128597, "user_type": "registered", "accept_rate": 64, "profile_image": "https://graph.facebook.com/100000157613328/picture?type=large", "display_name": "\u76db\u5b89\u5b89", "link": "https://stackoverflow.com/users/2128597/%e7%9b%9b%e5%ae%89%e5%ae%89"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1218, "favorite_count": 0, "closed_date": 1455111483, "accepted_answer_id": 35289970, "answer_count": 1, "score": 2, "last_activity_date": 1455029042, "creation_date": 1455013436, "question_id": 35289510, "link": "https://stackoverflow.com/questions/35289510/logging-while-running-cargo-test", "closed_reason": "Duplicate", "title": "logging while running `cargo test`", "body": "<pre><code>#[macro_use]\nextern crate log;\n\nfn whatever() {\n    info!(\"whatever\")\n}\n\n#[test]\nfn test() {\n    whatever();\n}\n</code></pre>\n\n<p>I want to see the log after running unit tests (<code>cargo test</code>),\nhow is it possible <em>now</em>?</p>\n"}, {"tags": ["rust", "lint", "internals", "visitor"], "answers": [{"tags": [], "owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "is_accepted": true, "score": 1, "last_activity_date": 1455465664, "last_edit_date": 1455465664, "creation_date": 1455382056, "answer_id": 35382543, "question_id": 35284646, "link": "https://stackoverflow.com/questions/35284646/how-do-i-get-the-lint-level-from-a-visitor-given-a-block/35382543#35382543", "title": "How do I get the lint level from a Visitor given a Block?", "body": "<p>Since there was no solution with the Rust we had, I <a href=\"https://github.com/rust-lang/rust/pull/31562\" rel=\"nofollow\">created</a> the necessary callbacks in Rustc: With tonight's nightly, our <code>LateLintPass</code> has another <code>check_block_post(..)</code> method. So we can pull the Visitor stuff into the lint, and add a new field of type <code>Option&lt;&amp;Block&gt;</code> that is set in the <code>check_block(..)</code> method and unset in the <code>check_block_post(..)</code> if the field is equal the current block, thus ignoring all contained blocks.</p>\n\n<p>Edit: The code looks as follows:</p>\n\n<pre><code>use syntax::ast::NodeId;\n\nstruct RegexLint { // some fields omitted\n    last: Option&lt;NodeId&gt;\n}\n// concentrating on the block functions here:\nimpl LateLintPass for RegexLint {\n    fn check_block(&amp;mut self, cx: &amp;LateContext, block: &amp;Block) {\n        if !self.last.is_none() { return; }\n        // set self.last to Some(block.id) to ignore inner blocks\n    }\n\n    fn check_block_post(&amp;mut self, _: &amp;LateContext, block: &amp;Block) {\n        if self.last.map_or(false, |id| block.id == id) {\n             self.last = None; // resume visiting blocks\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 69, "favorite_count": 0, "accepted_answer_id": 35382543, "answer_count": 1, "score": 0, "last_activity_date": 1455465664, "creation_date": 1454996187, "question_id": 35284646, "link": "https://stackoverflow.com/questions/35284646/how-do-i-get-the-lint-level-from-a-visitor-given-a-block", "title": "How do I get the lint level from a Visitor given a Block?", "body": "<p>For various reasons I use a Visitor for the HIR tree traversal instead of\nrelying on the lint context to walk the tree. However, this means my lint\nignores <code>#[allow/warn/deny(..)]</code> annotations in the source. How can I get this\nback?</p>\n\n<p>I know of <code>ctxt.levels</code>, but those don't appear to help. The other functions\n(like <code>with_lint_attrs(..)</code> are private to the context.</p>\n"}, {"tags": ["c", "rust"], "comments": [{"owner": {"reputation": 32558, "user_id": 101090, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/066290971688c0a44cc4159a9f210dcf?s=128&d=identicon&r=PG", "display_name": "Jorge Israel Pe&#241;a", "link": "https://stackoverflow.com/users/101090/jorge-israel-pe%c3%b1a"}, "edited": false, "score": 0, "creation_date": 1454995472, "post_id": 35284284, "comment_id": 58279813, "body": "Look at the <code>From</code> trait for your question about building a <code>Buffer</code> from a <code>&amp;[u8]</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1455028025, "post_id": 35284284, "comment_id": 58298700, "body": "If you are looking for code review, you may be better off asking on <a href=\"http://meta.codereview.stackexchange.com/questions/5777/a-guide-to-code-review-for-stack-overflow-users/5778#5778\">Code Review</a> or perhaps <a href=\"https://www.reddit.com/r/rust\" rel=\"nofollow noreferrer\">on Reddit</a>."}, {"owner": {"reputation": 597, "user_id": 578190, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f7405cd281c53abcce5d9d6fc7ac1fac?s=128&d=identicon&r=PG", "display_name": "chkn", "link": "https://stackoverflow.com/users/578190/chkn"}, "edited": false, "score": 0, "creation_date": 1455035504, "post_id": 35284284, "comment_id": 58304551, "body": "Thanks for the pointers. This is not a request for a code review. I am trying to understand a new language based on a language I already know, and am asking some simple questions to clarify that understanding."}], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 1, "last_activity_date": 1454995219, "creation_date": 1454995219, "answer_id": 35284469, "question_id": 35284284, "link": "https://stackoverflow.com/questions/35284284/learning-rust-by-porting-from-c/35284469#35284469", "title": "Learning Rust by porting from C", "body": "<p>It's as idiomatic as it can get... Like C++, Rust relies on <a href=\"https://en.wikipedia.org/wiki/Resource_Acquisition_Is_Initialization\" rel=\"nofollow\">RAII</a> for resource management, so one usually doesn't invoke a destructor manually, but since you're interoperating with C, you'll have to do it anyway.</p>\n\n<p><code>void*</code> would be best represented as <code>*mut ()</code> or <code>*mut libc::c_void</code> in Rust.</p>\n\n<p>Your <code>Buffer</code> struct should have an implementation of <a href=\"http://doc.rust-lang.org/stable/std/ops/trait.Drop.html\" rel=\"nofollow\"><code>Drop</code></a> that invokes the destructor, so that you never need to call it manually. However, the destructor is likely to be \"unsafe\", since it will need to cast the <code>data</code> pointer to something else, or call an unsafe FFI function (e.g. <code>libc::free</code>). Unfortunately, Rust's function traits cannot be used for <code>unsafe</code> functions, so you cannot encode that in the type system and the call to the destructor will appear to be safe, even though the destructor itself performs unsafe operations. What I'd do as a workaround is to mark <code>new_direct</code> as <code>unsafe</code>, since dropping a <code>Direct</code> might not be memory safe if <code>data</code> is invalidated before the destructor is run.</p>\n"}, {"comments": [{"owner": {"reputation": 597, "user_id": 578190, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f7405cd281c53abcce5d9d6fc7ac1fac?s=128&d=identicon&r=PG", "display_name": "chkn", "link": "https://stackoverflow.com/users/578190/chkn"}, "edited": false, "score": 0, "creation_date": 1455036162, "post_id": 35288263, "comment_id": 58305044, "body": "&quot;I also wonder why the destructor is optional&quot; - I suppose the trick is the <code>Buffer</code> can either own the data or not, depending on whether destructor is set. For instance, it could also be initialized with a pointer to some statically allocated data. I think this was the source of some of my confusion, since Rust seems so bifurcated between owned and unowned."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 2, "last_activity_date": 1455010162, "creation_date": 1455010162, "answer_id": 35288263, "question_id": 35284284, "link": "https://stackoverflow.com/questions/35284284/learning-rust-by-porting-from-c/35288263#35288263", "title": "Learning Rust by porting from C", "body": "<p>Note that your Rust code is more versatile than your C code: <code>Fn</code> can be a closure (ie, a function accompanied by some data). To represent a function pointer, you can use <code>fn</code> instead.</p>\n\n<p>The problem of the <code>Fn</code> trait is that it is <code>!Sized</code> and therefore you need to <code>Box</code> it (which induces a memory allocation). Using <code>fn</code> directly is much more comfortable.</p>\n\n<p>This lets us simplifying the current code greatly:</p>\n\n<pre><code>pub struct Buffer {\n    data: *mut u8,\n    length: usize,\n    destructor: Option&lt;fn(*mut u8)&gt;,\n}\n\nimpl Buffer {\n    pub fn new_direct(data: *mut u8, length: usize, destructor: Option&lt;fn(*mut u8)&gt;) -&gt; Buffer\n    {\n        Buffer {\n            data: data,\n            length: length,\n            destructor: destructor\n        }\n    }\n}\n</code></pre>\n\n<p>Though as noted by @Francis Gagn\u00e9, this constructor will ultimately lead to potential unsafety (typical, when interacting with C) so would be better off marked <code>unsafe</code>.</p>\n\n<p>I also wonder why the <code>destructor</code> is optional, Rust has a slice type (<code>&amp;[T]</code>) which is generally used for non-owning; if you want to switch from owning to non-owning, the idiomatic way is to use <a href=\"https://doc.rust-lang.org/std/borrow/enum.Cow.html\" rel=\"nofollow\"><code>std::borrow::Cow</code></a> as in <code>std::borrow::Cow&lt;'a, NonOwning&gt;</code>. You would need a dedicated slice type, of course.</p>\n\n<p>Now, in order to actually call the destructor automatically, you implement <code>Drop</code>:</p>\n\n<pre><code>impl Drop for Buffer {\n    fn drop(&amp;mut self) {\n        self.destructor.map(|d| d(self.data));\n    }\n}\n</code></pre>\n\n<p>We can also implement conversion to a slice. This is done by implementing the <code>Deref</code> and <code>DerefMut</code> traits:</p>\n\n<pre><code>impl Deref for Buffer {\n    type Target = [u8];\n\n    fn deref(&amp;self) -&gt; &amp;[u8] {\n        unsafe { std::slice::from_raw_parts(self.data, self.length) }\n    }\n}\n\nimpl DerefMut for Buffer {\n    fn deref_mut(&amp;mut self) -&gt; &amp;mut [u8] {\n        unsafe { std::slice::from_raw_parts_mut(self.data, self.length) }\n    }\n}\n</code></pre>\n\n<p>It gives us a lot of goodies (see what <code>Vec</code> <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#deref-methods\" rel=\"nofollow\">gains from it</a>).</p>\n\n<p>Finally, we can use the <code>libc</code> library to provide raw allocation and de-allocation, however it's currently unstable so you'll need a nightly compiler or to use the library from crates.io (I'll go the unstable road here):</p>\n\n<pre><code>#![feature(libc)]\n\nimpl Clone for Buffer {\n    fn clone(&amp;self) -&gt; Buffer {\n        fn destroy(data: *mut u8) {\n            unsafe { libc::free(data as *mut _) }\n        }\n\n        let ptr = unsafe {\n            let ptr = libc::malloc(self.length) as *mut _;\n            std::ptr::copy_nonoverlapping(self.data, ptr, self.length);\n            ptr\n        };\n\n        Buffer {\n            data: ptr,\n            length: self.length,\n            destructor: Some(destroy),\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 597, "user_id": 578190, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f7405cd281c53abcce5d9d6fc7ac1fac?s=128&d=identicon&r=PG", "display_name": "chkn", "link": "https://stackoverflow.com/users/578190/chkn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 264, "favorite_count": 0, "accepted_answer_id": 35288263, "answer_count": 2, "score": 0, "last_activity_date": 1455010162, "creation_date": 1454994310, "question_id": 35284284, "link": "https://stackoverflow.com/questions/35284284/learning-rust-by-porting-from-c", "title": "Learning Rust by porting from C", "body": "<p>I'm trying to learn Rust by porting a project from C. The first data structure I've started with is a <code>Buffer</code> that holds a pointer to some data, its length, and an optional destructor function. You create a <code>Buffer</code> from an existing allocation, which the <code>Buffer</code> then takes ownership of, calling your provided destructor function when the <code>Buffer</code> is destroyed. For convenience, the C version also provided a function that would copy the data for you. I'm struggling with how this would map to Rust.</p>\n\n<p>Here's a simplified excerpt of the C code (for brevity, I've removed error handling):</p>\n\n<pre><code>typedef void (*destruct_func)(void*);\n\ntypedef struct {\n    void* data;\n    size_t len;\n    destruct_func destructor; /**&lt; destructor for data ptr, or null */\n} buffer_t;\n\nbuffer_t* buffer_new_direct (void* data, size_t length, destruct_func destructor)\n{\n    buffer_t* buf = malloc (sizeof (buffer_t));\n    buf-&gt;data = data;\n    buf-&gt;len = length;\n    buf-&gt;destructor = destructor;\n    return buf;\n}\n\nbuffer_t* buffer_new_copy (void* data, size_t length)\n{\n    void* copy = malloc (length);\n    return buffer_new_direct (memcpy (copy, data, length), length, &amp;free);\n}\n</code></pre>\n\n<p>And here's what I have so far in Rust:</p>\n\n<pre><code>pub struct Buffer&lt;'a&gt; {\n    data: *mut u8,\n    length: usize,\n    destructor: Option&lt;Box&lt;Fn(*mut u8) + 'a&gt;&gt;\n}\n\nimpl&lt;'a&gt; Buffer&lt;'a&gt; {\n    pub fn new_direct&lt;F: 'a&gt;(data: *mut u8, length: usize, destructor: Option&lt;F&gt;) -&gt; Buffer&lt;'a&gt;\n        where F: Fn(*mut u8)\n    {\n        Buffer {\n            data: data,\n            length: length,\n            destructor: destructor.map(|d| Box::new(d) as Box&lt;Fn(*mut u8)&gt;)\n        }\n    }\n}\n</code></pre>\n\n<p>Is this idiomatic Rust? I still need to take existing allocations from C code, so I thought using a raw pointer for <code>data</code> would be best. However, I would also like to have a method that creates a <code>Buffer</code> from something like <code>&amp;[u8]</code> so I can create them more easily from Rust code. How would I do that? What would the destructor be in that case? What would the Rust equivalent of <code>buffer_new_copy</code> be?</p>\n\n<p>Thanks in advance for any help!</p>\n"}, {"tags": ["enums", "rust"], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 2, "last_activity_date": 1454991873, "creation_date": 1454991873, "answer_id": 35283847, "question_id": 35283736, "link": "https://stackoverflow.com/questions/35283736/whats-the-closest-i-can-get-to-discriminating-an-enum-by-a-char/35283847#35283847", "title": "What&#39;s the closest I can get to discriminating an enum by a char?", "body": "<p>Copying a <code>&amp;'static str</code> (i.e. copying the <em>reference</em> only) has no cost. A deep copy of the string would be a <em>clone</em> and would be typed as a <code>String</code>.</p>\n\n<p>If <code>&amp;'static str</code> is too verbose for you, you can always define a type alias.</p>\n\n<pre><code>type Str = &amp;'static str;\n</code></pre>\n\n<p><code>HashMap&lt;char, &amp;'static str&gt;</code> corresponds nicely to your original map. However, if you don't need the full range of <code>char</code> for the key and you don't actually need to have the value typed as a <code>char</code> anywhere besides indexing the map, you should use an <code>enum</code> instead, as that will restrict the legal values that can be used as keys.</p>\n"}, {"tags": [], "owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "is_accepted": true, "score": 6, "last_activity_date": 1547085598, "last_edit_date": 1547085598, "creation_date": 1454993072, "answer_id": 35284062, "question_id": 35283736, "link": "https://stackoverflow.com/questions/35283736/whats-the-closest-i-can-get-to-discriminating-an-enum-by-a-char/35284062#35284062", "title": "What&#39;s the closest I can get to discriminating an enum by a char?", "body": "<p>Your strings are sentinel values; this is a common pattern in Python, but is not how things should be done in Rust: enums are what such things should be: you\u2019re encoding the legal values in the type system.</p>\n\n<p>You could end up with something like this:</p>\n\n<pre><code>#[derive(Clone, Copy)]\n#[repr(u8)]\npub enum Mask {\n    ChA = b'A',\n    ChB = b'B',\n    ChC = b'C',\n    ChD = b'D',\n    Tmpr = b'T',\n    Batt = b'Y',\n    Acc  = b'L',\n}\n\n// e.g. Mask::ChA.into() == 'A'\nimpl Into&lt;char&gt; for Mask {\n    fn into(self) -&gt; char {\n        self as u8 as char\n    }\n}\n\nimpl Mask {\n    // e.g. Mask::from('A') == Ok(Mask::ChA)\n    pub fn from(c: char) -&gt; Result&lt;Mask, ()&gt; {\n        match c {\n            'A' =&gt; Ok(Mask::ChA),\n            'B' =&gt; Ok(Mask::ChB),\n            'C' =&gt; Ok(Mask::ChC),\n            'D' =&gt; Ok(Mask::ChD),\n            'T' =&gt; Ok(Mask::Tmpr),\n            'Y' =&gt; Ok(Mask::Batt),\n            'L' =&gt; Ok(Mask::Acc),\n            _ =&gt; Err(()),\n        }\n    }\n\n    // e.g. Mask::ChA.is_chan() == true\n    pub fn is_chan(&amp;self) -&gt; bool {\n        match *self {\n            Mask::ChA | Mask::ChB | Mask::ChC | Mask::ChD | Mask::Tmpr | Mask::Batt =&gt; true,\n            Mask::Acc =&gt; false,\n        }\n    }\n\n    // e.g. Mask::ChD.is_major() == false\n    pub fn is_major(&amp;self) -&gt; bool {\n        match *self {\n            Mask::ChA | Mask::ChB | Mask::ChC =&gt; true,\n            Mask::ChD | Mask::Tmpr | Mask::Batt | Mask::Acc =&gt; false,\n        }\n    }\n}\n</code></pre>\n\n<p>If you wanted you could implement <code>std::str::FromStr</code> for <code>Mask</code> as well, which would allow <code>\"A\".parse() == Ok(Mask::ChA)</code>:</p>\n\n<pre><code>impl FromStr for Mask {\n    type Err = ();\n\n    fn from_str(s: &amp;str) -&gt; Result&lt;Mask, ()&gt; {\n        match s {\n            \"A\" =&gt; Ok(Mask::ChA),\n            \"B\" =&gt; Ok(Mask::ChB),\n            \"C\" =&gt; Ok(Mask::ChC),\n            \"D\" =&gt; Ok(Mask::ChD),\n            \"T\" =&gt; Ok(Mask::Tmpr),\n            \"Y\" =&gt; Ok(Mask::Batt),\n            \"L\" =&gt; Ok(Mask::Acc),\n            _ =&gt; Err(()),\n        }\n    }\n}\n</code></pre>\n\n<p>I suspect that <code>is_chan</code> et al. may be more suitable than <code>ADC_CHANS</code> et al., but if you do actually need them, they work fine (you could do <code>[Mask; 6]</code> too, but if you need to add new elements it\u2019d change the type which is an API compatibility break if public):</p>\n\n<pre><code>pub static ADC_CHANS: &amp;'static [Mask] = &amp;[\n    Mask::ChA,\n    Mask::ChB,\n    Mask::ChC,\n    Mask::ChD,\n    Mask::Tmpr,\n    Mask::Batt,\n];\n\npub static ADC_MAJORS: &amp;'static [Mask] = &amp;[\n    Mask::ChA,\n    Mask::ChB,\n    Mask::ChC,\n];\n</code></pre>\n"}], "owner": {"reputation": 2340, "user_id": 2250791, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/e72d4f734d39c777f543025d36d4de4e?s=128&d=identicon&r=PG", "display_name": "Camden Narzt", "link": "https://stackoverflow.com/users/2250791/camden-narzt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 466, "favorite_count": 0, "accepted_answer_id": 35284062, "answer_count": 2, "score": 7, "last_activity_date": 1547085598, "creation_date": 1454991123, "last_edit_date": 1547064876, "question_id": 35283736, "link": "https://stackoverflow.com/questions/35283736/whats-the-closest-i-can-get-to-discriminating-an-enum-by-a-char", "title": "What&#39;s the closest I can get to discriminating an enum by a char?", "body": "<p>I've written this question out many times, and have finally realized that my biggest problem is that I don't know how I want to represent this data, and that's making it really hard to reason about the rest of the code.</p>\n\n<p>The way the data is represented in Python:</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>class LSP():\n    C_MASK_MAP={\n        \"A\":\"Ch A\",\n        \"B\":\"Ch B\",\n        \"C\":\"Ch C\",\n        \"D\":\"Ch D\",\n        \"T\":\"Tmpr\",\n        \"Y\":\"Batt\",\n        \"L\":\"Acc\"\n    }\n\n    ADC_CHANS= (\n        \"Ch A\",\n        \"Ch B\",\n        \"Ch C\",\n        \"Ch D\",\n        \"Tmpr\",\n        \"Batt\"\n    )\n\n    ADC_MAJORS = (\n        \"Ch A\",\n        \"Ch B\",\n        \"Ch C\",\n    )\n</code></pre>\n\n<p>My imaginary Rust code (I realize the names will need updating but are the same here for clarity):</p>\n\n<pre><code>enum C_MASK_MAP {\n    Ch_A = 'A',\n    Ch_B = 'B',\n    Ch_C = 'C',\n    Ch_D = 'D',\n    Tmpr = 'T',\n    Batt = 'Y',\n    Acc  = 'L'\n}\n//...\nlet ADC_CHANS = [\n    C_MASK_MAP::Ch_A,\n    C_MASK_MAP::Ch_B,\n    C_MASK_MAP::Ch_C,\n    C_MASK_MAP::Ch_D,\n    C_MASK_MAP::Tmpr,\n    C_MASK_MAP::Batt\n];\n\nADC_MAJORS = [\n    C_MASK_MAP::Ch_A,\n    C_MASK_MAP::Ch_B,\n    C_MASK_MAP::Ch_C,\n];\n</code></pre>\n\n<p>I've considered making <code>C_MASK_MAP</code> a <code>HashMap&lt;char, &amp;'static str&gt;</code>, but then I ran into a huge mess trying not to make a million copies of the <code>str</code>s everywhere and dealing with lifetimes while avoiding making <code>String</code>s, and the syntactic mess that is a reference to a static <code>str</code> (<code>&amp;&amp;'static str</code> or something).</p>\n\n<p>I think there'd be a real benefit to being able to use an enum (or similar) because the values wouldn't be as big and are more easily interchanged <code>C_MASK_MAP.get(key).expect(\"invalid key\")</code> vs just casting.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1469804243, "post_id": 35282334, "comment_id": 64704603, "body": "As a tiny addition, you can also dereference the pointer (<code>*p</code>) to read from it or write to it. Note that those count as a move and may drop the value."}, {"owner": {"reputation": 2409, "user_id": 2284570, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/9bd1d26aad2cfb7ece066d94c128d529?s=128&d=identicon&r=PG", "display_name": "user2284570", "link": "https://stackoverflow.com/users/2284570/user2284570"}, "edited": false, "score": 0, "creation_date": 1609085820, "post_id": 35282334, "comment_id": 115744385, "body": "How to do it without declaring <code>p</code> in one line?"}], "tags": [], "owner": {"reputation": 9296, "user_id": 1446742, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff5e3600cba841c184385605d1d99d03?s=128&d=identicon&r=PG", "display_name": "fjh", "link": "https://stackoverflow.com/users/1446742/fjh"}, "is_accepted": true, "score": 6, "last_activity_date": 1454980381, "creation_date": 1454980381, "answer_id": 35282334, "question_id": 35282198, "link": "https://stackoverflow.com/questions/35282198/how-would-you-go-about-creating-a-pointer-to-a-specific-memory-address-in-rust/35282334#35282334", "title": "How would you go about creating a pointer to a specific memory address in Rust?", "body": "<p>If you want to read a value of type <code>u32</code> from memory location <code>0x0900</code>, you could do it as follows:</p>\n\n<pre><code>use std::ptr;\n\nfn main() {\n    let p = 0x0900 as *const u32;\n    let n = unsafe { ptr::read(p) };\n\n    println!(\"{}\", n);\n}\n</code></pre>\n\n<p>Note that you need to decide what type of pointer you want when casting the address to a pointer.</p>\n"}], "owner": {"reputation": 2169, "user_id": 974936, "user_type": "registered", "accept_rate": 52, "profile_image": "https://www.gravatar.com/avatar/92bf3deb0a4fa650b44e7706b0736adb?s=128&d=identicon&r=PG", "display_name": "watzon", "link": "https://stackoverflow.com/users/974936/watzon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1362, "favorite_count": 0, "accepted_answer_id": 35282334, "answer_count": 1, "score": 4, "last_activity_date": 1454980790, "creation_date": 1454979607, "last_edit_date": 1454980790, "question_id": 35282198, "link": "https://stackoverflow.com/questions/35282198/how-would-you-go-about-creating-a-pointer-to-a-specific-memory-address-in-rust", "title": "How would you go about creating a pointer to a specific memory address in Rust?", "body": "<p>For example, let's say I want to access whatever value is stored at <code>0x0900</code>. I found the function <code>std::ptr::read</code> in the Rust standard library, but the documentation isn't super clear on how to use it and I'm not sure if it's the right way.</p>\n\n<p>This is what I've tried:</p>\n\n<pre><code>use std::ptr;\n\nfn main() {\n    let n = ptr::read(\"0x0900\");\n    println!(\"{}\", n);\n}\n</code></pre>\n\n<p>but it gives me error <code>E0277</code></p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 22050, "user_id": 497364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8fd4eb2ae966a16e698b3e61217a7e1?s=128&d=identicon&r=PG", "display_name": "Paolo Falabella", "link": "https://stackoverflow.com/users/497364/paolo-falabella"}, "edited": false, "score": 3, "creation_date": 1455092749, "post_id": 35280799, "comment_id": 58329535, "body": "or (to mention a less clever alternative), you could <code>repeat(&#39;\u2665&#39;).take(count).collect::&lt;String&gt;()</code>"}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 19, "last_activity_date": 1454971491, "creation_date": 1454971491, "answer_id": 35280799, "question_id": 35280798, "link": "https://stackoverflow.com/questions/35280798/printing-a-character-a-variable-number-of-times-with-println/35280799#35280799", "title": "Printing a character a variable number of times with println", "body": "<h2>Solution to your code</h2>\n\n<pre><code>fn give_love(count: usize) {\n    println!(\"Here is love for you: {:\u2665&lt;1$}\", \"\", count);\n}\n</code></pre>\n\n<hr>\n\n<h2>Explanation</h2>\n\n<p>You can (mis-)use the fill feature that allows to fill a printed value with some character of your choice. The grammar for this feature alone looks like:</p>\n\n<pre><code>'{' ':' &lt;fill&gt; &lt;align&gt; &lt;width&gt; '}'\n</code></pre>\n\n<p>Where <code>width</code> is either a constant number or a reference to an argument of type <code>&lt;argument_index&gt; '$'</code>. So <code>3</code> would mean a width of constant 3 and <code>1$</code> would mean a width of the value of the 1st argument of <code>println!</code>.</p>\n\n<hr>\n\n<p>However: here we are kind of \"misusing\" this feature and we mustn't forget that we are only specifying the \"fill\" for some other printable thing, which is passed by argument to <code>println</code>. This can be an empty string though.</p>\n\n<pre><code>println!(\"love: {:\u2665&lt;3}\", \"\");     // love: \u2665\u2665\u2665\nprintln!(\"love: {:\u2665&lt;1$}\", \"\", 5); // love: \u2665\u2665\u2665\u2665\u2665\n</code></pre>\n\n<p>Here are some examples where we don't pass an empty string:</p>\n\n<pre><code>println!(\"love: {:\u2665&lt;5}\", \"#\");    // love: #\u2665\u2665\u2665\u2665\nprintln!(\"love: {:\u2665&gt;5}\", \"#\");    // love: \u2665\u2665\u2665\u2665#\nprintln!(\"love: {:\u2665^5}\", \"#\");    // love: \u2665\u2665#\u2665\u2665\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 769, "user_id": 7065821, "user_type": "registered", "accept_rate": 33, "profile_image": "https://i.stack.imgur.com/iLZC7.png?s=128&g=1", "display_name": "Challenger5", "link": "https://stackoverflow.com/users/7065821/challenger5"}, "is_accepted": false, "score": 3, "last_activity_date": 1593380306, "creation_date": 1593380306, "answer_id": 62628492, "question_id": 35280798, "link": "https://stackoverflow.com/questions/35280798/printing-a-character-a-variable-number-of-times-with-println/62628492#62628492", "title": "Printing a character a variable number of times with println", "body": "<p>If you want a cleaner way to repeat any <code>Display</code>able item without creating an intermediate allocation, you can create a wrapper struct and write a custom <code>Display</code> implementation that performs the repetition:</p>\n<pre><code>use std::fmt::{self, Display};\n\n#[derive(Clone, Copy)]\nstruct DisplayRepeat&lt;T&gt;(usize, T);\n\nimpl&lt;T: Display&gt; Display for DisplayRepeat&lt;T&gt; {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        for _ in 0..self.0 {\n            self.1.fmt(f)?;\n        }\n        Ok(())\n    }\n}\n\nfn repeat&lt;T&gt;(times: usize, item: T) -&gt; DisplayRepeat&lt;T&gt; {\n    DisplayRepeat(times, item)\n}\n\nfn main() {\n    println!(&quot;Here is love for you: {}&quot;, repeat(10, '\u2665'));\n}\n</code></pre>\n"}], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2352, "favorite_count": 1, "accepted_answer_id": 35280799, "answer_count": 2, "score": 9, "last_activity_date": 1593380306, "creation_date": 1454971491, "question_id": 35280798, "link": "https://stackoverflow.com/questions/35280798/printing-a-character-a-variable-number-of-times-with-println", "title": "Printing a character a variable number of times with println", "body": "<p>I want to use <code>println!</code> and the powerful formatting tools of <code>format!</code> to print a character a specific number of times. Of course this is possible with a loop, like so:</p>\n\n<pre><code>fn give_love(count: usize) {\n    print!(\"Here is love for you: \");\n    for i in 0..count {\n        print!(\"\u2665\");\n    }\n    println!(\"\");\n}\n</code></pre>\n\n<p>But I neither want to write the loop nor the three <code>print</code>s. How to do this shorter/better?</p>\n"}, {"tags": ["memory", "rust"], "answers": [{"comments": [{"owner": {"reputation": 3669, "user_id": 4876946, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/5dc4839a7e9466d54f3791122f8f5d75?s=128&d=identicon&r=PG&f=1", "display_name": "Matt", "link": "https://stackoverflow.com/users/4876946/matt"}, "edited": false, "score": 0, "creation_date": 1455053506, "post_id": 35279362, "comment_id": 58315451, "body": "Is it possible to create a <code>RefCell&lt;Any&gt;</code>?  I&#39;ve tried <code>RefCell::new(x) as RefCell&lt;Any&gt;</code>, however, I get an error saying <code>Sized</code> is not implemented for <code>Any</code>.  On the other hand, <code>Box::new(x) as Box&lt;Any&gt;</code> works just fine.  They seem to have similar <code>?Sized</code> restrictions.  What am I missing?  <a href=\"https://play.rust-lang.org/?gist=5af8c51ac91d162d999f&amp;version=stable\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 3669, "user_id": 4876946, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/5dc4839a7e9466d54f3791122f8f5d75?s=128&d=identicon&r=PG&f=1", "display_name": "Matt", "link": "https://stackoverflow.com/users/4876946/matt"}, "edited": false, "score": 0, "creation_date": 1455059190, "post_id": 35279362, "comment_id": 58318261, "body": "@Matt an interesting question. I don&#39;t know the answer, but I&#39;d encourage you to ask a new question, linking back to this question if you think it provides useful context."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1454968949, "last_edit_date": 1454968949, "creation_date": 1454965708, "answer_id": 35279362, "question_id": 35278766, "link": "https://stackoverflow.com/questions/35278766/why-is-sized-a-bound-for-certain-refcell-functions-but-not-all/35279362#35279362", "title": "Why is ?Sized a bound for certain RefCell functions, but not all?", "body": "<p>That support was <a href=\"https://github.com/rust-lang/rust/commit/57d82897\" rel=\"nofollow\">added in a commit that also added tests</a>. We can look at those tests to see how it was expected to be used:</p>\n\n<pre><code>use std::cell::RefCell;\n\n#[test]\nfn refcell_unsized() {\n    let cell: &amp;RefCell&lt;[i32]&gt; = &amp;RefCell::new([1, 2, 3]);\n    {\n        let b = &amp;mut *cell.borrow_mut();\n        b[0] = 4;\n        b[2] = 5;\n    }\n    let comp: &amp;mut [i32] = &amp;mut [4, 2, 5];\n    assert_eq!(&amp;*cell.borrow(), comp);\n}\n</code></pre>\n\n<p>You always need to have a constructor with a <code>Sized</code> bound as the compiler needs to know the amount of space to allocate on the stack. Once you have that, you can then coerce to a dynamically-sized type.</p>\n"}], "owner": {"reputation": 3669, "user_id": 4876946, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/5dc4839a7e9466d54f3791122f8f5d75?s=128&d=identicon&r=PG&f=1", "display_name": "Matt", "link": "https://stackoverflow.com/users/4876946/matt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 107, "favorite_count": 0, "accepted_answer_id": 35279362, "answer_count": 1, "score": 5, "last_activity_date": 1454968949, "creation_date": 1454963582, "last_edit_date": 1454965296, "question_id": 35278766, "link": "https://stackoverflow.com/questions/35278766/why-is-sized-a-bound-for-certain-refcell-functions-but-not-all", "title": "Why is ?Sized a bound for certain RefCell functions, but not all?", "body": "<p>I noticed that <code>?Sized</code> is a bound on the type parameter <code>T</code> for some functions (<code>borrow</code>, <code>borrow_state</code>, and <code>borrow_mut</code>), however, it is <strong>not</strong> a bound for <code>new</code> or <code>into_inner</code>.  If I can't create a <code>RefCell</code> containing something that is dynamically sized (<code>RefCell&lt;T : ?Sized&gt;</code>), then what good is it having functions that can operate on such a thing?</p>\n"}, {"tags": ["rust", "cyrillic"], "answers": [{"tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 7, "last_activity_date": 1454919623, "creation_date": 1454919623, "answer_id": 35265046, "question_id": 35264738, "link": "https://stackoverflow.com/questions/35264738/how-to-write-cyrillic-text-when-using-the-debugging-format/35265046#35265046", "title": "How to write Cyrillic text when using the debugging format?", "body": "<p>So far as Rust is concerned, it <em>is</em> correct.  The implementation of <code>Debug</code> for <code>str</code> restricts itself to printable ASCII characters so that the output is readable irrespective of codepage or output mechanism.</p>\n\n<p>I don't believe there's anything you can do to change this for strings <em>in general</em>; on a case-by-case basis, you can use <code>Display</code> instead, or create a wrapper around <code>&amp;str</code> that forwards to <code>Display</code> instead of <code>Debug</code>.</p>\n"}], "owner": {"reputation": 150, "user_id": 4381016, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fd89e6057dd2316bb696d0648fc0cce8?s=128&d=identicon&r=PG&f=1", "display_name": "latrasis", "link": "https://stackoverflow.com/users/4381016/latrasis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 124, "favorite_count": 0, "accepted_answer_id": 35265046, "answer_count": 1, "score": 5, "last_activity_date": 1454940912, "creation_date": 1454918142, "last_edit_date": 1454940912, "question_id": 35264738, "link": "https://stackoverflow.com/questions/35264738/how-to-write-cyrillic-text-when-using-the-debugging-format", "title": "How to write Cyrillic text when using the debugging format?", "body": "<p>While using <code>println!</code> works as expected:</p>\n\n\n\n<pre class=\"lang-rust prettyprint-override\"><code>println!(\"\u041f\u0440\u0438\u0432\u0435\u0442!\"); // \u041f\u0440\u0438\u0432\u0435\u0442!\n</code></pre>\n\n<p>With debugging format however:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>println!(\"{:?}\", \"\u041f\u0440\u0438\u0432\u0435\u0442!\"); // \"\\u{41f}\\u{440}\\u{438}\\u{432}\\u{435}\\u{442}!\"\n</code></pre>\n\n<p>Using <code>assert!</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>assert!(\"\u041f\u0440\u0438\u0432\u0435\u0442!\" != \"\u041f\u0440\u0438\u0432\u0435\u0442!\") // 'assertion failed: \"\\u{41f}\\u{440}\\u{438}\\u{432}\\u{435}\\u{442}!\" != \"\\u{41f}\\u{440}\\u{438}\\u{432}\\u{435}\\u{442}!\"\n</code></pre>\n\n<p>Is there any way to have <code>assert!</code> print correctly in debug format? </p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 2308, "user_id": 1120799, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/IRCQ4.jpg?s=128&g=1", "display_name": "Abhishek Chanda", "link": "https://stackoverflow.com/users/1120799/abhishek-chanda"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1454902512, "post_id": 35261912, "comment_id": 58235920, "body": "Ah thanks, I did extract out this bit from my codebase. Did not realize this could be further reduced. I will update the snippet."}], "answers": [{"comments": [{"owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "edited": false, "score": 5, "creation_date": 1454906466, "post_id": 35262020, "comment_id": 58236766, "body": "Another way of expressing it: Rust objects to the concept of adding a <code>use</code> statement breaking code. If you had a <code>trait Trait { type IntoIter; }</code> implemented for <code>BTreeSet&lt;T&gt;</code>, then importing <code>Trait</code> would suddenly break code if it permitted <code>BTreeSet&lt;T&gt;::IntoIter</code>, because then it would indubitably be ambiguous."}, {"owner": {"reputation": 22050, "user_id": 497364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8fd4eb2ae966a16e698b3e61217a7e1?s=128&d=identicon&r=PG", "display_name": "Paolo Falabella", "link": "https://stackoverflow.com/users/497364/paolo-falabella"}, "edited": false, "score": 0, "creation_date": 1454922998, "post_id": 35262020, "comment_id": 58243365, "body": "Why &quot;unlikely&quot;? Everyone keeps writing their own version of <code>Foo</code>, <code>Bar</code> and <code>Baz</code>, it would be high time for them to be standardized! :)"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1454902781, "creation_date": 1454902781, "answer_id": 35262020, "question_id": 35261912, "link": "https://stackoverflow.com/questions/35261912/disambiguate-associated-type-in-struct/35262020#35262020", "title": "Disambiguate associated type in struct", "body": "<p>\"Ambiguous\" seems like a bit of misleading wording here. This example produces the same error message:</p>\n\n<pre><code>struct Foo;\n\npub struct Bar {\n    iter: Foo::Baz,\n}\n\nfn main() {}\n</code></pre>\n\n<p>I'm not certain, but I'd find it unlikely that there is an associated type named <code>Baz</code> in the standard library, much less likely that there are two to make it ambiguous!</p>\n\n<p>What's more likely is that this syntax is simply not specific enough. It's completely plausible that there <em>could be</em> multiple traits that could have a <code>Baz</code> associated type. Because of that, you have to specify which trait you want to use the associated type from:</p>\n\n<pre><code>struct Foo;\n\npub struct Bar {\n    iter: &lt;Vec&lt;u8&gt; as IntoIterator&gt;::IntoIter,\n}\n\nfn main() {}\n</code></pre>\n"}], "owner": {"reputation": 2308, "user_id": 1120799, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/IRCQ4.jpg?s=128&g=1", "display_name": "Abhishek Chanda", "link": "https://stackoverflow.com/users/1120799/abhishek-chanda"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 889, "favorite_count": 0, "accepted_answer_id": 35262020, "answer_count": 1, "score": 3, "last_activity_date": 1501089483, "creation_date": 1454901788, "last_edit_date": 1501089483, "question_id": 35261912, "link": "https://stackoverflow.com/questions/35261912/disambiguate-associated-type-in-struct", "title": "Disambiguate associated type in struct", "body": "<p>I am trying to run this</p>\n\n<pre><code>use std::collections::BTreeSet;\n\npub struct IntoIter&lt;T&gt; {\n    iter: BTreeSet&lt;T&gt;::IntoIter,\n}\n\nfn main() {}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=6a495e05c71f9373c9ff94ec677ac67e&amp;version=stable\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>This fails with</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0223]: ambiguous associated type\n --&gt; src/main.rs:4:11\n  |\n4 |     iter: BTreeSet&lt;T&gt;::IntoIter,\n  |           ^^^^^^^^^^^^^^^^^^^^^ ambiguous associated type\n  |\n</code></pre>\n\n<p>Why is the associated type ambiguous?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 9296, "user_id": 1446742, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff5e3600cba841c184385605d1d99d03?s=128&d=identicon&r=PG", "display_name": "fjh", "link": "https://stackoverflow.com/users/1446742/fjh"}, "is_accepted": true, "score": 6, "last_activity_date": 1454888088, "creation_date": 1454888088, "answer_id": 35260549, "question_id": 35259428, "link": "https://stackoverflow.com/questions/35259428/how-to-conditionally-assign-a-type-to-a-reference/35260549#35260549", "title": "How to conditionally assign a type to a reference", "body": "<p>It sounds like you want to use <a href=\"https://doc.rust-lang.org/book/trait-objects.html\">trait objects</a>. Your example would then look roughly like this:</p>\n\n<pre><code>let mut hasher;\nmatch alg {\n    \"md5\" =&gt; { hasher = Box::new(Md5::new()) as Box&lt;Digest&gt;}\n    \"sha1\" =&gt; { hasher = Box::new(Sha1::new()) as Box&lt;Digest&gt;}\n    _ =&gt; { println!(\"Algorithm not implemented\");\n           process::exit(1); }\n}\nhash_file(&amp;file_name, &amp;mut hasher).unwrap();\n</code></pre>\n\n<p>This will only work under certain conditions (for example, the trait has to be <a href=\"http://huonw.github.io/blog/2015/01/object-safety/\">object safe</a>), but I think it's the only way to do what you want.</p>\n"}, {"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1454940924, "post_id": 35261774, "comment_id": 58254920, "body": "If I saw this code in C or C++, I would immediately reject it at code review because taking a reference to a potentially uninitialized value is fraught with peril (next maintenance operation, it&#39;ll blow up). Here I look at it and just nod. It really is so liberating when you can trust the language/compiler."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1454941167, "post_id": 35261774, "comment_id": 58255099, "body": "@MatthieuM. Ain&#39;t that the truth! I&#39;m always happy to remember that the variables don&#39;t need to be <code>mut</code> in this case, as well."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 7, "last_activity_date": 1454900345, "last_edit_date": 1495535304, "creation_date": 1454900345, "answer_id": 35261774, "question_id": 35259428, "link": "https://stackoverflow.com/questions/35259428/how-to-conditionally-assign-a-type-to-a-reference/35261774#35261774", "title": "How to conditionally assign a type to a reference", "body": "<p>In addition to <a href=\"https://stackoverflow.com/a/35260549/155423\">creating a boxed trait object</a>, you can also have a reference to a trait object. This avoids a heap allocation:</p>\n\n<pre><code>trait Hasher { fn hash(&amp;self) -&gt; u8 { 42 } }\n\nstruct Md5;\nstruct Sha1;\n\nimpl Hasher for Md5 {}\nimpl Hasher for Sha1 {}\n\nfn hash_it(which: &amp;str) {\n    let (md5, sha1);\n\n    let hasher: &amp;Hasher = match which {\n        \"md5\" =&gt; {\n            md5 = Md5;\n            &amp;md5\n        },\n        \"sha1\" =&gt; {\n            sha1 = Sha1;\n            &amp;sha1\n        },\n        _ =&gt; unreachable!(\"Nope\"),\n    };\n\n    hasher.hash();\n}\n\nfn main() {\n    hash_it(\"md5\");\n    hash_it(\"sha1\");\n}\n</code></pre>\n\n<p>Note that each implementor is only created in the appropriate match arm, so you aren't doing more work than you need to.</p>\n"}, {"comments": [{"owner": {"reputation": 9296, "user_id": 1446742, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff5e3600cba841c184385605d1d99d03?s=128&d=identicon&r=PG", "display_name": "fjh", "link": "https://stackoverflow.com/users/1446742/fjh"}, "edited": false, "score": 1, "creation_date": 1454964932, "post_id": 35276895, "comment_id": 58269822, "body": "Btw. You can make the match a bit less noisy by assigning the match result to <code>hasher</code> <a href=\"https://gist.github.com/fhartwig/d502370790fc3aa36450\" rel=\"nofollow noreferrer\">like this</a> (gist because comments don&#39;t have enough space)."}], "tags": [], "owner": {"reputation": 926, "user_id": 2379703, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/c95691ed554de6809abeb2a542a0e1e1?s=128&d=identicon&r=PG", "display_name": "jshort", "link": "https://stackoverflow.com/users/2379703/jshort"}, "is_accepted": false, "score": 0, "last_activity_date": 1454956786, "creation_date": 1454956786, "answer_id": 35276895, "question_id": 35259428, "link": "https://stackoverflow.com/questions/35259428/how-to-conditionally-assign-a-type-to-a-reference/35276895#35276895", "title": "How to conditionally assign a type to a reference", "body": "<p>Thanks for the replies.  I got it to work with Box which I still don't completely understand but I'm going to read up on later.  Final working code:</p>\n\n<pre><code>fn process_hash(file_name: &amp;str, alg: &amp;str) {\n    let valid_algorithms: Vec&lt;&amp;str&gt; =\n        vec![\"md5\", \"sha1\", \"sha224\", \"sha256\", \"sha384\", \"sha512\", \"sha512224\",\n             \"sha512256\", \"blake2b-64\", \"ripemd160\", \"whirlpool\"];\n    let mut hasher: Box&lt;Digest&gt;;\n    match alg {\n        \"md5\" =&gt; { hasher = Box::new(Md5::new()) }\n        \"sha1\" =&gt; { hasher = Box::new(Sha1::new()) }\n        \"sha224\" =&gt; { hasher = Box::new(Sha224::new()) }\n        \"sha256\" =&gt; { hasher = Box::new(Sha256::new()) }\n        \"sha384\" =&gt; { hasher = Box::new(Sha384::new()) }\n        \"sha512\" =&gt; { hasher = Box::new(Sha512::new()) }\n        \"sha512224\" =&gt; { hasher = Box::new(Sha512Trunc224::new()) }\n        \"sha512256\" =&gt; { hasher = Box::new(Sha512Trunc256::new()) }\n        \"blake2b-64\" =&gt; { hasher = Box::new(Blake2b::new(64)) }\n        \"ripemd160\" =&gt; { hasher = Box::new(Ripemd160::new()) }\n        \"whirlpool\" =&gt; { hasher = Box::new(Whirlpool::new()) }\n        _ =&gt; { println!(\"Algorithm not implemented\");\n               println!(\"Valid choices: {}\", valid_algorithms.join(\" \"));\n               process::exit(1); }\n    }\n    hash_file(&amp;file_name, &amp;mut *hasher).unwrap();\n}\n</code></pre>\n"}], "owner": {"reputation": 926, "user_id": 2379703, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/c95691ed554de6809abeb2a542a0e1e1?s=128&d=identicon&r=PG", "display_name": "jshort", "link": "https://stackoverflow.com/users/2379703/jshort"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 167, "favorite_count": 1, "accepted_answer_id": 35260549, "answer_count": 3, "score": 2, "last_activity_date": 1454956786, "creation_date": 1454881075, "last_edit_date": 1454956756, "question_id": 35259428, "link": "https://stackoverflow.com/questions/35259428/how-to-conditionally-assign-a-type-to-a-reference", "title": "How to conditionally assign a type to a reference", "body": "<p>I have been playing with Rust this afternoon and decided to write a simple hashing tool that can do all major digesting algorithms.</p>\n\n<p>I'm trying to do something like this (intent should be obvious):</p>\n\n<pre><code>let mut hasher;\nmatch alg {\n    \"md5\" =&gt; { hasher = Md5::new() }\n    \"sha1\" =&gt; { hasher = Sha1::new() }\n    _ =&gt; { println!(\"Algorithm not implemented\");\n           process::exit(1); }\n}\nhash_file(&amp;file_name, &amp;mut hasher).unwrap();\n</code></pre>\n\n<p>When compiling the above, due to the first match, it assumes that hasher is of type <code>Md5</code> and fails when in the <code>\"sha1\"</code> match branch, it tries to assign a <code>Sha1</code> type.  All of the types I intend to use in this match statement are implementers of the trait <code>Digest</code> so I feel like there should be a way to do this.</p>\n\n<p>I tried:</p>\n\n<pre><code>let mut hasher: Digest;\n</code></pre>\n\n<p>But that didn't work either.</p>\n"}, {"tags": ["rust", "lifetime"], "answers": [{"comments": [{"owner": {"reputation": 1477, "user_id": 3908710, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff12a3f70e9c9ef63fd94970aa52ba69?s=128&d=identicon&r=PG&f=1", "display_name": "skyler", "link": "https://stackoverflow.com/users/3908710/skyler"}, "edited": false, "score": 0, "creation_date": 1454816815, "post_id": 35249456, "comment_id": 58212450, "body": "I don&#39;t understand how calling <code>.as_ref()</code> one line later is safe while calling it in the if let is not."}, {"owner": {"reputation": 30697, "user_id": 31667, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/082b069c287878a1bd5731f44c8f10e7?s=128&d=identicon&r=PG", "display_name": "viraptor", "link": "https://stackoverflow.com/users/31667/viraptor"}, "reply_to_user": {"reputation": 1477, "user_id": 3908710, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff12a3f70e9c9ef63fd94970aa52ba69?s=128&d=identicon&r=PG&f=1", "display_name": "skyler", "link": "https://stackoverflow.com/users/3908710/skyler"}, "edited": false, "score": 1, "creation_date": 1454817257, "post_id": 35249456, "comment_id": 58212535, "body": "It&#39;s about which block it&#39;s called in, rather than line. In your <code>does_not_work</code> example <code>item</code> does not exist anymore after the <code>map</code>, so returning any pointer to previous value from it is not possible. In both your second example and in my answer, <code>value</code> and <code>item</code> are the same. And <code>s</code> is just the converted <code>value</code> - they both exist in the same block (until the end of <code>if</code>)."}], "tags": [], "owner": {"reputation": 30697, "user_id": 31667, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/082b069c287878a1bd5731f44c8f10e7?s=128&d=identicon&r=PG", "display_name": "viraptor", "link": "https://stackoverflow.com/users/31667/viraptor"}, "is_accepted": true, "score": 4, "last_activity_date": 1525918152, "last_edit_date": 1525918152, "creation_date": 1454816436, "answer_id": 35249456, "question_id": 35249309, "link": "https://stackoverflow.com/questions/35249309/result-of-optionmap-does-not-live-long-enough/35249456#35249456", "title": "Result of Option::map does not live long enough", "body": "<p>When you create a new iterator, old values are not available anymore. But you need the old value to exist in order to return <code>Some(value)</code>. In your case, you're passing a <code>&amp;[&amp;'static str]</code> to the function, so it's guaranteed to stay around long enough, but according to the types you could just as well pass <code>&amp;[String]</code>.</p>\n\n<p>In that case, the original <code>String</code> could be freed and you'd be left with a dangling pointer. By not calling <code>.as_ref()</code>, you guarantee that the original value will be available in the <code>Some(value)</code>.</p>\n\n<p>If you just want to skip multiple <code>.as_ref()</code> calls you can instead do:</p>\n\n<pre><code>pub fn does_work&lt;I: IntoIterator&gt;(values: I)\nwhere\n    I::Item: AsRef&lt;str&gt;,\n{\n    if let Some(value) = values.into_iter().next() {\n        let s = value.as_ref();\n        if s == \"first\" {\n            println!(\"This should print\");\n        }\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 2156, "user_id": 4347341, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/OUTXT.jpg?s=128&g=1", "display_name": "swizard", "link": "https://stackoverflow.com/users/4347341/swizard"}, "is_accepted": false, "score": 2, "last_activity_date": 1525918260, "last_edit_date": 1525918260, "creation_date": 1454834777, "answer_id": 35251452, "question_id": 35249309, "link": "https://stackoverflow.com/questions/35249309/result-of-optionmap-does-not-live-long-enough/35251452#35251452", "title": "Result of Option::map does not live long enough", "body": "<p>That's because <code>map</code> takes ownership of the parameter <code>item</code>, so it will be destroyed after it returns. This makes the result reference invalid.</p>\n\n<p>You should apply <code>Option::as_ref</code> to transform <code>Option&lt;T&gt;</code> into <code>Option&lt;&amp;T&gt;</code> before using <code>map</code>, like this:</p>\n\n<pre><code>pub fn does_not_work&lt;I: IntoIterator&gt;(values: I)\nwhere\n    I::Item: AsRef&lt;str&gt;,\n{\n    if let Some(value) = values.into_iter().next().as_ref().map(|item| item.as_ref()) {\n        if value == \"first\" {\n            println!(\"This should print\");\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 1477, "user_id": 3908710, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff12a3f70e9c9ef63fd94970aa52ba69?s=128&d=identicon&r=PG&f=1", "display_name": "skyler", "link": "https://stackoverflow.com/users/3908710/skyler"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 570, "favorite_count": 0, "accepted_answer_id": 35249456, "answer_count": 2, "score": 3, "last_activity_date": 1525918260, "creation_date": 1454815256, "last_edit_date": 1525918103, "question_id": 35249309, "link": "https://stackoverflow.com/questions/35249309/result-of-optionmap-does-not-live-long-enough", "title": "Result of Option::map does not live long enough", "body": "<p>I expected the two functions below to be equivalent. However the first one does not compile.</p>\n\n<pre><code>pub fn does_not_work&lt;I: IntoIterator&gt;(values: I)\nwhere\n    I::Item: AsRef&lt;str&gt;,\n{\n    if let Some(value) = values.into_iter().nth(0).map(|item| item.as_ref()) {\n        if value == \"first\" {\n            println!(\"This should print\");\n        }\n    }\n}\n\npub fn does_work&lt;I: IntoIterator&gt;(values: I)\nwhere\n    I::Item: AsRef&lt;str&gt;,\n{\n    if let Some(value) = values.into_iter().nth(0) {\n        if value.as_ref() == \"first\" {\n            println!(\"This should print\");\n        }\n    }\n}\n\nfn main() {\n    does_work(&amp;[\"first\"]);\n}\n</code></pre>\n\n<p>The compile error is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `item` does not live long enough\n --&gt; src/main.rs:5:63\n  |\n5 |     if let Some(value) = values.into_iter().nth(0).map(|item| item.as_ref()) {\n  |                                                               ^^^^        - `item` dropped here while still borrowed\n  |                                                               |\n  |                                                               borrowed value does not live long enough\n...\n9 |     }\n  |     - borrowed value needs to live until here\n</code></pre>\n\n<p>The code is altered so as to be less verbose than the actual context it comes from and to more clearly illustrate the point. To clarify why I want to use the first approach, I use <code>value</code> many more times in my actual code and I don't want to have every single one of them followed by a <code>.as_ref()</code>.</p>\n\n<p>Is there a way to make this work or is <code>Option::map</code> not a good choice for this situation? Is there another concise way to solve this problem?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 0, "creation_date": 1454792750, "post_id": 35245958, "comment_id": 58206717, "body": "<a href=\"https://crates.io/crates/byteorder/\" rel=\"nofollow noreferrer\">crates.io/crates/byteorder</a>"}], "answers": [{"comments": [{"owner": {"reputation": 208794, "user_id": 229044, "user_type": "moderator", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/591426cbbacd4025d920467bad356911?s=128&d=identicon&r=PG&f=1", "display_name": "meagar", "link": "https://stackoverflow.com/users/229044/meagar"}, "edited": false, "score": 2, "creation_date": 1454792394, "post_id": 35246345, "comment_id": 58206595, "body": "Please don&#39;t post answers which depend on off-site links for meaningful content."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1454854834, "post_id": 35246345, "comment_id": 58221604, "body": "I edited your answer to provide a quick quote of the docs, feel free to revert the edit if it does not suit you, but please add an example then."}], "tags": [], "owner": {"reputation": 9296, "user_id": 1446742, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff5e3600cba841c184385605d1d99d03?s=128&d=identicon&r=PG", "display_name": "fjh", "link": "https://stackoverflow.com/users/1446742/fjh"}, "is_accepted": false, "score": 2, "last_activity_date": 1454854735, "last_edit_date": 1592644375, "creation_date": 1454792069, "answer_id": 35246345, "question_id": 35245958, "link": "https://stackoverflow.com/questions/35245958/which-is-the-quickest-safe-or-unsafe-way-to-read-16-32-64-bit-integers-from/35246345#35246345", "title": "Which is the quickest, safe or unsafe, way to read 16, 32, 64 bit integers from a &amp;u8[] in Rust?", "body": "<p>You could use the <a href=\"https://crates.io/crates/byteorder/\" rel=\"nofollow noreferrer\">byteorder</a> crate. For some usage examples, see the <a href=\"http://burntsushi.net/rustdoc/byteorder/\" rel=\"nofollow noreferrer\">docs</a>.</p>\n<blockquote>\n<pre><code>use std::io::Cursor;\nuse byteorder::{BigEndian, ReadBytesExt};\n\nlet mut rdr = Cursor::new(vec![2, 5, 3, 0]);\n// Note that we use type parameters to indicate which kind of byte order\n// we want!\nassert_eq!(517, rdr.read_u16::&lt;BigEndian&gt;().unwrap());\nassert_eq!(768, rdr.read_u16::&lt;BigEndian&gt;().unwrap());\n</code></pre>\n</blockquote>\n"}], "owner": {"reputation": 912, "user_id": 1570826, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/568ad11ab0e853c0e4e8f8ade8bd5278?s=128&d=identicon&r=PG", "display_name": "lu_zero", "link": "https://stackoverflow.com/users/1570826/lu-zero"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 109, "favorite_count": 1, "answer_count": 1, "score": 1, "last_activity_date": 1454865867, "creation_date": 1454789688, "last_edit_date": 1454865867, "question_id": 35245958, "link": "https://stackoverflow.com/questions/35245958/which-is-the-quickest-safe-or-unsafe-way-to-read-16-32-64-bit-integers-from", "title": "Which is the quickest, safe or unsafe, way to read 16, 32, 64 bit integers from a &amp;u8[] in Rust?", "body": "<p>Assume you have a slice and you want to read little and big endian integers from it. Is there a better way than to use unsafe pointers?</p>\n"}, {"tags": ["performance", "rust"], "comments": [{"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 0, "creation_date": 1454943209, "post_id": 35236094, "comment_id": 58256567, "body": "The first variant is preferred because it uses a single expression to compute the return value. The second uses <code>return</code> to modify the normal control flow, which is not as clean."}, {"owner": {"reputation": 896, "user_id": 3055725, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7736250e7eae9435540a34c6299dbd7b?s=128&d=identicon&r=PG", "display_name": "Mateus Felipe", "link": "https://stackoverflow.com/users/3055725/mateus-felipe"}, "reply_to_user": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 0, "creation_date": 1454973674, "post_id": 35236094, "comment_id": 58273901, "body": "For me it&#39;s more clean if you use the second one. And as stated on the chosen answer, it compiles to the same."}, {"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 1, "creation_date": 1455003569, "post_id": 35236094, "comment_id": 58283171, "body": "I&#39;m just trying to explain why the first variant is considered better style in Rust, it has to do with Rust&#39;s heritage from functional programming. In the documentation it also says that Rust is &quot;expression-oriented&quot;, that&#39;s why you don&#39;t need <code>return</code> to return a value."}], "answers": [{"comments": [{"owner": {"reputation": 896, "user_id": 3055725, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7736250e7eae9435540a34c6299dbd7b?s=128&d=identicon&r=PG", "display_name": "Mateus Felipe", "link": "https://stackoverflow.com/users/3055725/mateus-felipe"}, "edited": false, "score": 0, "creation_date": 1454721457, "post_id": 35236119, "comment_id": 58186926, "body": "The change was not dramatic, as the question is the same. You should have infered that was a typo."}, {"owner": {"reputation": 1589, "user_id": 2770092, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2321a7b8ee2a179e16b50242ecb21c4f?s=128&d=identicon&r=PG&f=1", "display_name": "Cecilio Pardo", "link": "https://stackoverflow.com/users/2770092/cecilio-pardo"}, "reply_to_user": {"reputation": 896, "user_id": 3055725, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7736250e7eae9435540a34c6299dbd7b?s=128&d=identicon&r=PG", "display_name": "Mateus Felipe", "link": "https://stackoverflow.com/users/3055725/mateus-felipe"}, "edited": false, "score": 1, "creation_date": 1454721604, "post_id": 35236119, "comment_id": 58186965, "body": "Should I have? People sometimes put incorrect code in stackoverflow. Should I infer all errors are typos?"}, {"owner": {"reputation": 896, "user_id": 3055725, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7736250e7eae9435540a34c6299dbd7b?s=128&d=identicon&r=PG", "display_name": "Mateus Felipe", "link": "https://stackoverflow.com/users/3055725/mateus-felipe"}, "edited": false, "score": 1, "creation_date": 1454721680, "post_id": 35236119, "comment_id": 58186983, "body": "If I asked for a bug in my code or something like this, ok. But I asked for the issue of the style, so it was really irrelevant."}], "tags": [], "owner": {"reputation": 1589, "user_id": 2770092, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2321a7b8ee2a179e16b50242ecb21c4f?s=128&d=identicon&r=PG&f=1", "display_name": "Cecilio Pardo", "link": "https://stackoverflow.com/users/2770092/cecilio-pardo"}, "is_accepted": false, "score": 4, "last_activity_date": 1454797461, "last_edit_date": 1454797461, "creation_date": 1454720947, "answer_id": 35236119, "question_id": 35236094, "link": "https://stackoverflow.com/questions/35236094/are-there-differences-between-returning-early-from-an-if-statement-or-returning/35236119#35236119", "title": "Are there differences between returning early from an if statement or returning from both cases?", "body": "<p>Those two variants certainly will generate the same code. So it's just a matter of style. Standard style would be to use the first one.</p>\n"}, {"comments": [{"owner": {"reputation": 896, "user_id": 3055725, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7736250e7eae9435540a34c6299dbd7b?s=128&d=identicon&r=PG", "display_name": "Mateus Felipe", "link": "https://stackoverflow.com/users/3055725/mateus-felipe"}, "edited": false, "score": 0, "creation_date": 1454724246, "post_id": 35236336, "comment_id": 58187527, "body": "Thanks for the very complete answer. Do you have any hint on why compiler ignores <code>#[inline(never)]</code> directive?"}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "reply_to_user": {"reputation": 896, "user_id": 3055725, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7736250e7eae9435540a34c6299dbd7b?s=128&d=identicon&r=PG", "display_name": "Mateus Felipe", "link": "https://stackoverflow.com/users/3055725/mateus-felipe"}, "edited": false, "score": 1, "creation_date": 1454729068, "post_id": 35236336, "comment_id": 58188406, "body": "It&#39;s likely because the function does not call any other functions and the parameters I used are constants, so the compiler just evaluated the whole expression. I changed my code to use I/O to obtain values the compiler can&#39;t optimize and updated my answer accordingly."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 5, "last_activity_date": 1454729023, "last_edit_date": 1454729023, "creation_date": 1454722734, "answer_id": 35236336, "question_id": 35236094, "link": "https://stackoverflow.com/questions/35236094/are-there-differences-between-returning-early-from-an-if-statement-or-returning/35236336#35236336", "title": "Are there differences between returning early from an if statement or returning from both cases?", "body": "<p>On the <a href=\"https://play.rust-lang.org/\" rel=\"nofollow\">Rust playground</a>, you can use the <strong>ASM</strong> and <strong>LLVM IR</strong> buttons to view how some code is compiled to assembler (machine code) or LLVM's intermediate representation. LLVM IR is usually easier to read, as it's more high-level than assembler.</p>\n\n<p><a href=\"http://is.gd/xrC1Jh\" rel=\"nofollow\">Let's analyze this code</a>:</p>\n\n<pre><code>use std::io::BufRead;\n\n// An integer division that doesn't `panic!`\n#[inline(never)]\nfn checked_division(dividend: i32, divisor: i32) -&gt; Option&lt;i32&gt; {\n    if divisor == 0 {\n        // Failure is represented as the `None` variant\n        None\n    } else {\n        // Result is wrapped in a `Some` variant\n        Some(dividend / divisor)\n    }\n}\n\n// An integer division that doesn't `panic!`\n#[inline(never)]\nfn checked_division2(dividend: i32, divisor: i32) -&gt; Option&lt;i32&gt; {\n    if divisor == 0 {\n        // Failure is represented as the `None` variant\n        return None\n    }\n    // Result is wrapped in a `Some` variant\n    Some(dividend / divisor)\n}\n\nfn main() {\n    let stdin = std::io::stdin();\n    let i: i32 = stdin.lock().lines().next().unwrap().unwrap().parse().unwrap();\n    let j: i32 = stdin.lock().lines().next().unwrap().unwrap().parse().unwrap();\n    println!(\"{:?}\", checked_division(i, j));\n    println!(\"{:?}\", checked_division2(i, j));\n}\n</code></pre>\n\n<p>(Note: I'm performing I/O to get values that the compiler can't optimize; constants are optimized too aggressively and the <code>checked_division</code> functions completely disappear, even with <code>#[inline(never)]</code>.)</p>\n\n<p>First, let's compile this code in Release mode. What's the LLVM IR like? Here's <code>checked_division</code>:</p>\n\n<pre><code>; Function Attrs: noinline uwtable\ndefine internal fastcc i64 @_ZN16checked_division20h2cc10ba72e80f410faaE(i32, i32) unnamed_addr #0 {\nentry-block:\n  switch i32 %1, label %next1 [\n    i32 0, label %join\n    i32 -1, label %cond2\n  ]\n\nnext1:                                            ; preds = %entry-block, %cond2\n  %2 = sdiv i32 %0, %1\n  %phitmp = zext i32 %2 to i64\n  %phitmp5 = shl nuw i64 %phitmp, 32\n  br label %join\n\ncond2:                                            ; preds = %entry-block\n  %3 = icmp eq i32 %0, -2147483648\n  br i1 %3, label %cond4, label %next1\n\ncond4:                                            ; preds = %cond2\n  tail call void @_ZN9panicking5panic20h77d028a733b1a80eiEKE({ %str_slice, %str_slice, i32 }* noalias nonnull readonly dereferenceable(40) @panic_loc3962)\n  unreachable\n\njoin:                                             ; preds = %entry-block, %next1\n  %sret_slot.sroa.0.0 = phi i64 [ 1, %next1 ], [ 0, %entry-block ]\n  %sret_slot.sroa.3.0 = phi i64 [ %phitmp5, %next1 ], [ 0, %entry-block ]\n  %4 = or i64 %sret_slot.sroa.3.0, %sret_slot.sroa.0.0\n  ret i64 %4\n}\n</code></pre>\n\n<p>And here's <code>checked_division2</code>:</p>\n\n<pre><code>; Function Attrs: noinline uwtable\ndefine internal fastcc i64 @_ZN17checked_division220h9ae6c6af45a9a593DaaE(i32, i32) unnamed_addr #0 {\nentry-block:\n  switch i32 %1, label %next1 [\n    i32 0, label %return\n    i32 -1, label %cond2\n  ]\n\nnext1:                                            ; preds = %entry-block, %cond2\n  %2 = sdiv i32 %0, %1\n  %phitmp = zext i32 %2 to i64\n  %phitmp5 = shl nuw i64 %phitmp, 32\n  br label %return\n\nreturn:                                           ; preds = %entry-block, %next1\n  %sret_slot.sroa.0.0 = phi i64 [ 1, %next1 ], [ 0, %entry-block ]\n  %sret_slot.sroa.3.0 = phi i64 [ %phitmp5, %next1 ], [ 0, %entry-block ]\n  %3 = or i64 %sret_slot.sroa.3.0, %sret_slot.sroa.0.0\n  ret i64 %3\n\ncond2:                                            ; preds = %entry-block\n  %4 = icmp eq i32 %0, -2147483648\n  br i1 %4, label %cond4, label %next1\n\ncond4:                                            ; preds = %cond2\n  tail call void @_ZN9panicking5panic20h77d028a733b1a80eiEKE({ %str_slice, %str_slice, i32 }* noalias nonnull readonly dereferenceable(40) @panic_loc3964)\n  unreachable\n}\n</code></pre>\n\n<p>If you compare both functions in your favorite diff tool (a side-by-side diff tool is better here, since there's a bit of noise there), you'll notice that the only major difference is that <code>checked_division</code> has a block called <code>join</code> at the end, while <code>checked_division2</code> has a block called <code>return</code> between <code>next1</code> and <code>cond2</code> \u2013 but the contents of these blocks are the same. In other words, the functions are completely equivalent.</p>\n\n<p>Another thing we can notice is that the function <em>still panics</em> if you try to perform -2147483648 / -1 (the -1 test is part of the <code>switch</code> at the beginning, the -2147483648 test is right under <code>cond2:). That's because this particular division overflows, and [LLVM's</code>sdiv` instruction]<a href=\"http://llvm.org/docs/LangRef.html#sdiv-instruction\" rel=\"nofollow\">3</a> documents this case as leading to undefined behavior, so the Rust compiler gives your function well-defined behavior by panicking instead.</p>\n"}], "owner": {"reputation": 896, "user_id": 3055725, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7736250e7eae9435540a34c6299dbd7b?s=128&d=identicon&r=PG", "display_name": "Mateus Felipe", "link": "https://stackoverflow.com/users/3055725/mateus-felipe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 86, "favorite_count": 0, "accepted_answer_id": 35236336, "answer_count": 2, "score": 0, "last_activity_date": 1454865727, "creation_date": 1454720705, "last_edit_date": 1454865727, "question_id": 35236094, "link": "https://stackoverflow.com/questions/35236094/are-there-differences-between-returning-early-from-an-if-statement-or-returning", "title": "Are there differences between returning early from an if statement or returning from both cases?", "body": "<p>When writing a function that must return a value, there is two similar ways to doing so:</p>\n\n<p>#1 (Extracted from <a href=\"http://rustbyexample.com/std/option.html\" rel=\"nofollow\">rustbyexample</a>)</p>\n\n<pre><code>// An integer division that doesn't `panic!`\nfn checked_division(dividend: i32, divisor: i32) -&gt; Option&lt;i32&gt; {\n    if divisor == 0 {\n        // Failure is represented as the `None` variant\n        None\n    } else {\n        // Result is wrapped in a `Some` variant\n        Some(dividend / divisor)\n    }\n}\n</code></pre>\n\n<p>#2 (an variation of above)</p>\n\n<pre><code>// An integer division that doesn't `panic!`\nfn checked_division(dividend: i32, divisor: i32) -&gt; Option&lt;i32&gt; {\n    if divisor == 0 {\n        // Failure is represented as the `None` variant\n        return None\n    }\n    // Result is wrapped in a `Some` variant\n    Some(dividend / divisor)\n}\n</code></pre>\n\n<p>I used to write like the second snippet, but I've seen that in every example in <em>The Rust Programming Language</em> or Rust By Example they use the first case. Considering a match-all-possibilities code like the above, is it just styling or are there performance differences? Is the first one a good practice or its completely up to me?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 2231, "user_id": 4465497, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/vibwv.png?s=128&g=1", "display_name": "XAMPPRocky", "link": "https://stackoverflow.com/users/4465497/xampprocky"}, "edited": false, "score": 1, "creation_date": 1454706670, "post_id": 35233181, "comment_id": 58181882, "body": "An alternative to the Node trait, would be to use enum Variants. This would solve the size issues. Like so: <a href=\"http://is.gd/IFSAi6\" rel=\"nofollow noreferrer\">is.gd/IFSAi6</a>"}], "answers": [{"comments": [{"owner": {"reputation": 669, "user_id": 4948576, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/4df8200828907cae1048f81b05ae92f6?s=128&d=identicon&r=PG&f=1", "display_name": "Vincent P", "link": "https://stackoverflow.com/users/4948576/vincent-p"}, "edited": false, "score": 0, "creation_date": 1454789531, "post_id": 35235286, "comment_id": 58205663, "body": "Perfect, didn&#39;t realise Rust enums were that powerful"}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 2, "last_activity_date": 1454714873, "creation_date": 1454714873, "answer_id": 35235286, "question_id": 35233181, "link": "https://stackoverflow.com/questions/35233181/storing-trait-objects-in-structs/35235286#35235286", "title": "Storing trait objects in structs", "body": "<p>The error comes from the fact that the <code>get_kind</code> method on <code>Node</code> expects <code>self</code> by value, rather than <code>&amp;self</code>. Passing <code>self</code> by value means that the method takes ownership of the object (and therefore drops it and the end of the method), which is not necessary here. In general, you should use <code>&amp;self</code> by default, then change to <code>&amp;mut self</code> if you need to mutate the object, or <code>self</code> if you need to consume the object (e.g. because you need to move one of the object's fields elsewhere and you don't want to clone it).</p>\n\n<p>By the way, I noticed that you implemented <a href=\"http://doc.rust-lang.org/stable/std/string/trait.ToString.html\" rel=\"nofollow\"><code>ToString</code></a> for your structs. However, the documentation for <code>ToString</code> says:</p>\n\n<blockquote>\n  <p>This trait is automatically implemented for any type which implements\n  the <a href=\"http://doc.rust-lang.org/stable/std/fmt/trait.Display.html\" rel=\"nofollow\"><code>Display</code></a> trait. As such, <code>ToString</code> shouldn't be implemented\n  directly: <code>Display</code> should be implemented instead, and you get the\n  <code>ToString</code> implementation for free.</p>\n</blockquote>\n\n<hr>\n\n<p>Instead of using a trait, you could also consider using an <code>enum</code>, especially if the types of nodes are known in advance and you don't need extensibility. Also, if later on you need to determine the type of a node, it'll be more natural to do with an <code>enum</code> (just do pattern matching).</p>\n\n<p>It appears that you need all of your node types to have a <code>kind</code> and a <code>position</code> attribute. Depending on how you're going to use these nodes, you might find it more useful to define a struct with these fields plus an enum for the type-specific fields.</p>\n\n<pre><code>struct Node {\n    //kind: NodeKind, // redundant!\n    position: usize,\n    specific: SpecificNode,\n}\n\nenum SpecificNode {\n    List(Vec&lt;Box&lt;Node&gt;&gt;),\n    Text(String),\n    VariableBlock(Box&lt;Node&gt;),\n    Identifier(String),\n    Int(i32),\n    Float(f32),\n    Bool(bool),\n}\n</code></pre>\n\n<p>Hmm, the <code>SpecificNode</code> enum looks a lot like your <code>NodeKind</code> enum, doesn't it? In fact, the <code>kind</code> field becomes redundant, because you can determine the kind by looking at the variant of the <code>specific</code> field.</p>\n\n<p>Now, instead of implementing methods separately on each type of node, you only define them once, though each method will usually need to pattern match <code>self</code> in order to access the data of any variant.</p>\n\n<p>If you have methods that apply only to one particular variant (e.g. a method that only makes sense on a <code>List</code>), with the <code>enum</code> approach, you'd be able to invoke it on any type of node, as there are no distinct types for each <code>enum</code> variant (as of Rust 1.6; there are discussions about introducing this feature). However, your code is likely to work on an abstract <code>Node</code> most of the time, and you'd have to verify what kind of node you have before calling the method anyway, so you might as well move that logic directly into those methods.</p>\n"}], "owner": {"reputation": 669, "user_id": 4948576, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/4df8200828907cae1048f81b05ae92f6?s=128&d=identicon&r=PG&f=1", "display_name": "Vincent P", "link": "https://stackoverflow.com/users/4948576/vincent-p"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1581, "favorite_count": 1, "accepted_answer_id": 35235286, "answer_count": 1, "score": 3, "last_activity_date": 1454865515, "creation_date": 1454705121, "last_edit_date": 1454865515, "question_id": 35233181, "link": "https://stackoverflow.com/questions/35233181/storing-trait-objects-in-structs", "title": "Storing trait objects in structs", "body": "<p><a href=\"https://github.com/Keats/tera/blob/91ba2d82fcfe527c94a07772daa8baf6f49489ef/src/nodes.rs\" rel=\"nofollow\">I'm working on a parser</a> that has a bunch of different nodes (~6 node kinds right now, more later) and I'm a bit lost as how to interact with the node items (all nodes implement a <code>Node</code> trait) so I need to use <code>Box&lt;Node&gt;</code> everywhere.</p>\n\n<p><code>ListNode</code> looks like:</p>\n\n<pre><code>pub struct ListNode {\n    kind: NodeKind,\n    position: usize,\n    pub nodes: Vec&lt;Box&lt;Node&gt;&gt;\n}\n</code></pre>\n\n<p>but I can't derive <code>Clone</code> because <code>Node</code> doesn't implement it and whenever I try to get for example the kind of node in a test like so:</p>\n\n<pre><code>#[test]\nfn test_plain_string() {\n    let mut parser = Parser::new(\"plain_string\", \"Hello world\");\n    parser.parse();\n    assert_eq!(1, parser.root.nodes.len());\n    let ref node = parser.root.nodes[0];\n    let kind = node.get_kind();\n    assert_eq!(kind, NodeKind::Text);\n}\n</code></pre>\n\n<p>I get borrowing and sizing errors like so for example:</p>\n\n<pre><code>src/parser.rs:186:20: 186:24 error: cannot move out of borrowed content [E0507]\nsrc/parser.rs:186         let kind = node.get_kind();\n                                     ^~~~\nsrc/parser.rs:186:20: 186:24 error: cannot move a value of type nodes::Node + 'static: the size of nodes::Node + 'static cannot be statically determined [E0161]\nsrc/parser.rs:186         let kind = node.get_kind();\n</code></pre>\n\n<p>Something similar to this test <a href=\"https://github.com/Keats/tera/blob/91ba2d82fcfe527c94a07772daa8baf6f49489ef/src/parser.rs\" rel=\"nofollow\">is in the tests</a>.</p>\n\n<p>How am I supposed to access trait objects or this approach flawed in Rust?\nIs it possible to implement traits to a trait (like <code>Debug</code>) to a trait or do I have implement <code>Debug</code> manually for each struct embedding a <code>Node</code>?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": false, "score": 4, "last_activity_date": 1454696362, "creation_date": 1454696362, "answer_id": 35230892, "question_id": 35229369, "link": "https://stackoverflow.com/questions/35229369/how-can-i-improve-compile-times-when-i-have-a-large-hashmap-literal/35230892#35230892", "title": "How can I improve compile times when I have a large HashMap literal?", "body": "<p>If you're fine with developing and testing with a smaller set of data, then you can use conditional compilation. Here is a simple example:</p>\n\n<pre><code>#[cfg(debug_assertions)]\nconst VALUE: u32 = 0;\n\n#[cfg(not(debug_assertions))]\nconst VALUE: u32 = 1;\n\nfn main() {\n    println!(\"value: {}\", VALUE);\n}\n</code></pre>\n\n<p>If you compile this without optimizations (\"debug\" mode), then <code>debug_assertions</code> will be true, and <code>VALUE</code> will be equal to 0, but if you compile it with optimizations (\"release\" mode), then <code>debug_assertions</code> will be false, and <code>VALUE</code> will be equal to 1.</p>\n\n<p>This maps very nicely to Cargo's debug and release modes (<code>cargo build</code> and <code>cargo build --release</code>), so this way you can make your map smaller for debug build and make it full size for release build.</p>\n\n<p>Naturally, serializing your data and loading it back is also possible. You can use lots of libraries for automatic serialization, for example, <a href=\"https://github.com/TyOverby/bincode\" rel=\"nofollow\">bincode</a> or <a href=\"http://doc.rust-lang.org/rustc-serialize/rustc_serialize/json/index.html\" rel=\"nofollow\">rustc_serialize::json</a> or <a href=\"https://serde-rs.github.io/serde/serde_json/serde_json/index.html\" rel=\"nofollow\">serde_json</a>. If you want to know how exactly those libraries should be used, then you should ask another question, if their docs for some reason aren't clear enough.</p>\n"}, {"comments": [{"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 4, "creation_date": 1454702304, "post_id": 35232083, "comment_id": 58179553, "body": "<a href=\"https://github.com/BurntSushi/fst\" rel=\"nofollow noreferrer\">github.com/BurntSushi/fst</a> is also a way to produce perfect hashing, albeit likely with differ trade offs and definitely with different requirements/limitations and probably not as convenient as rust-phf."}, {"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "reply_to_user": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 1, "creation_date": 1454704163, "post_id": 35232083, "comment_id": 58180528, "body": "@BurntSushi5 Oh, right, I still haven&#39;t got to read <a href=\"http://blog.burntsushi.net/transducers/\" rel=\"nofollow noreferrer\">blog.burntsushi.net/transducers</a>, thanks for mentioning it!"}, {"owner": {"reputation": 21101, "user_id": 416626, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/ad98b7aa615718b4a2446d12af86be73?s=128&d=identicon&r=PG", "display_name": "urschrei", "link": "https://stackoverflow.com/users/416626/urschrei"}, "edited": false, "score": 0, "creation_date": 1454941902, "post_id": 35232083, "comment_id": 58255654, "body": "This turned out to be exactly what I was looking for. Thanks!"}, {"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "reply_to_user": {"reputation": 21101, "user_id": 416626, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/ad98b7aa615718b4a2446d12af86be73?s=128&d=identicon&r=PG", "display_name": "urschrei", "link": "https://stackoverflow.com/users/416626/urschrei"}, "edited": false, "score": 0, "creation_date": 1454947322, "post_id": 35232083, "comment_id": 58259472, "body": "@urschrei I&#39;m glad it helped."}], "tags": [], "owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "is_accepted": true, "score": 5, "last_activity_date": 1454700847, "creation_date": 1454700847, "answer_id": 35232083, "question_id": 35229369, "link": "https://stackoverflow.com/questions/35229369/how-can-i-improve-compile-times-when-i-have-a-large-hashmap-literal/35232083#35232083", "title": "How can I improve compile times when I have a large HashMap literal?", "body": "<p>So you're hardcoding a hash map? That seems to be a Perfect Hashing problem, see the <a href=\"https://github.com/sfackler/rust-phf\" rel=\"noreferrer\">https://github.com/sfackler/rust-phf</a> crate.</p>\n\n<p>As for the compile times, offload the hash table into a separate crate and Cargo will only recompile this crate when the hash table data changes.</p>\n"}], "owner": {"reputation": 21101, "user_id": 416626, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/ad98b7aa615718b4a2446d12af86be73?s=128&d=identicon&r=PG", "display_name": "urschrei", "link": "https://stackoverflow.com/users/416626/urschrei"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 294, "favorite_count": 1, "accepted_answer_id": 35232083, "answer_count": 2, "score": 5, "last_activity_date": 1454865393, "creation_date": 1454690926, "last_edit_date": 1454865393, "question_id": 35229369, "link": "https://stackoverflow.com/questions/35229369/how-can-i-improve-compile-times-when-i-have-a-large-hashmap-literal", "title": "How can I improve compile times when I have a large HashMap literal?", "body": "<p>I have a very large HashMap of physical measurements (300k+ entries of 3-element tuples), which I'd like to keep as a HashMap (I could move it out to a SQLite DB and query it, but I'd rather not, for performance reasons). Including it as a literal makes compile times\u2026long.\nIs there a better approach? Could I serialise it to disk in a binary format, and load it as a HashMap when the binary executes / the library is loaded? Developing and testing using a subset works fine, but I need the full data for production\u2026 </p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 1, "creation_date": 1454686569, "post_id": 35227261, "comment_id": 58170487, "body": "have you tried naming the dependency <code>jvm_assembler</code> instead of <code>jvm-assembler</code> ?"}, {"owner": {"reputation": 75, "user_id": 5888545, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa04fa5dd3beed243cd5370255335287?s=128&d=identicon&r=PG&f=1", "display_name": "yumizu rai", "link": "https://stackoverflow.com/users/5888545/yumizu-rai"}, "reply_to_user": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1454687152, "post_id": 35227261, "comment_id": 58170874, "body": "yes, and cargo says <code>no matching package named &#39;jvm_assembler&#39; found (required by &#39;test&#39;)</code>"}], "answers": [{"comments": [{"owner": {"reputation": 9296, "user_id": 1446742, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff5e3600cba841c184385605d1d99d03?s=128&d=identicon&r=PG", "display_name": "fjh", "link": "https://stackoverflow.com/users/1446742/fjh"}, "edited": false, "score": 0, "creation_date": 1454687515, "post_id": 35227628, "comment_id": 58171084, "body": "To expand on this: There is a <code>jvm_assembler</code> crate on crates.io, but that seems to only contain an executable, not the library (probably because <code>jvm-assembler</code>&#39;s <code>Cargo.toml</code> doesn&#39;t have <code>exe</code> and <code>lib</code> sections)."}, {"owner": {"reputation": 75, "user_id": 5888545, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa04fa5dd3beed243cd5370255335287?s=128&d=identicon&r=PG&f=1", "display_name": "yumizu rai", "link": "https://stackoverflow.com/users/5888545/yumizu-rai"}, "edited": false, "score": 0, "creation_date": 1454687963, "post_id": 35227628, "comment_id": 58171400, "body": "Thank you!  Adding git URL to Cargo.toml, it goes well."}], "tags": [], "owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "is_accepted": true, "score": 2, "last_activity_date": 1454685741, "creation_date": 1454685741, "answer_id": 35227628, "question_id": 35227261, "link": "https://stackoverflow.com/questions/35227261/error-cant-find-crate/35227628#35227628", "title": "error: can&#39;t find crate", "body": "<p>Cargo can only find crates by name if they are on crates.io. In your case you need to specify the git URL, see the <a href=\"http://doc.crates.io/manifest.html#the-dependencies-section\" rel=\"nofollow\">section on dependencies</a> in the Cargo documentation.</p>\n"}], "owner": {"reputation": 75, "user_id": 5888545, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa04fa5dd3beed243cd5370255335287?s=128&d=identicon&r=PG&f=1", "display_name": "yumizu rai", "link": "https://stackoverflow.com/users/5888545/yumizu-rai"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4239, "favorite_count": 0, "accepted_answer_id": 35227628, "answer_count": 1, "score": 3, "last_activity_date": 1454685741, "creation_date": 1454684634, "question_id": 35227261, "link": "https://stackoverflow.com/questions/35227261/error-cant-find-crate", "title": "error: can&#39;t find crate", "body": "<p>I'm trying to use <a href=\"https://github.com/kenpratt/jvm-assembler\" rel=\"nofollow\">this library</a>.<br>\nBut, <code>cargo build</code> says this:</p>\n\n<pre><code>   Compiling test v0.1.0 (file:///C:/path/to/project/test)\nsrc\\main.rs:1:1: 1:28 error: can't find crate for `jvm_assembler` [E0463]\nsrc\\main.rs:1 extern crate jvm_assembler;\n          ^~~~~~~~~~~~~~~~~~~~~~~~~~~\nerror: aborting due to previous error\nCould not compile `test`.\n\nTo learn more, run the command again with --verbose.\n</code></pre>\n\n<p>My <code>Cargo.toml</code> is this:</p>\n\n<pre><code>[package]\nname = \"test\"\nversion = \"0.1.0\"\nauthors = [\"yomizu_rai\"]\n\n[dependencies]\njvm-assembler = \"*\"\n</code></pre>\n\n<p><code>src/main.rs</code> is this, and there are no other sourcefiles.</p>\n\n<pre><code>extern crate jvm_assembler;\nuse jvm_assembler::*;\nfn main() {}\n</code></pre>\n\n<p>I think my <code>Cargo.toml</code> is not wrong, and <code>src/main.rs</code> has no room for mistake.<br>\nWhy can not rustc find jvm-assembler?<br>\nHow do I resolve?</p>\n"}, {"tags": ["rust", "nickel"], "comments": [{"owner": {"reputation": 8775, "user_id": 821110, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/fa6fca5f613944238a91d2daeba67b9d?s=128&d=identicon&r=PG", "display_name": "W.K.S", "link": "https://stackoverflow.com/users/821110/w-k-s"}, "edited": false, "score": 0, "creation_date": 1454745444, "post_id": 35208615, "comment_id": 58191639, "body": "Have you tried <code>json::encode(&amp;movies).unwrap()</code>?"}, {"owner": {"reputation": 314, "user_id": 1321456, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/4bd54ccbccbb1bb894075339e4f3a42f?s=128&d=identicon&r=PG", "display_name": "shinriyo", "link": "https://stackoverflow.com/users/1321456/shinriyo"}, "reply_to_user": {"reputation": 8775, "user_id": 821110, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/fa6fca5f613944238a91d2daeba67b9d?s=128&d=identicon&r=PG", "display_name": "W.K.S", "link": "https://stackoverflow.com/users/821110/w-k-s"}, "edited": false, "score": 0, "creation_date": 1454768452, "post_id": 35208615, "comment_id": 58198000, "body": "I mistook.  so I changed code      use rustc_serialize::{json};  and it worked. but null"}, {"owner": {"reputation": 8775, "user_id": 821110, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/fa6fca5f613944238a91d2daeba67b9d?s=128&d=identicon&r=PG", "display_name": "W.K.S", "link": "https://stackoverflow.com/users/821110/w-k-s"}, "edited": false, "score": 0, "creation_date": 1454786238, "post_id": 35208615, "comment_id": 58204551, "body": "Please have a look at my updated answer to solve the cloning problem."}, {"owner": {"reputation": 314, "user_id": 1321456, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/4bd54ccbccbb1bb894075339e4f3a42f?s=128&d=identicon&r=PG", "display_name": "shinriyo", "link": "https://stackoverflow.com/users/1321456/shinriyo"}, "reply_to_user": {"reputation": 8775, "user_id": 821110, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/fa6fca5f613944238a91d2daeba67b9d?s=128&d=identicon&r=PG", "display_name": "W.K.S", "link": "https://stackoverflow.com/users/821110/w-k-s"}, "edited": false, "score": 0, "creation_date": 1454827905, "post_id": 35208615, "comment_id": 58214374, "body": "It similar problem. same warning. but I can&#39;t fix <a href=\"https://github.com/nickel-org/nickel.rs/issues/255\" rel=\"nofollow noreferrer\">github.com/nickel-org/nickel.rs/issues/255</a>"}], "answers": [{"comments": [{"owner": {"reputation": 314, "user_id": 1321456, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/4bd54ccbccbb1bb894075339e4f3a42f?s=128&d=identicon&r=PG", "display_name": "shinriyo", "link": "https://stackoverflow.com/users/1321456/shinriyo"}, "edited": false, "score": 1, "creation_date": 1454767907, "post_id": 35238740, "comment_id": 58197821, "body": "Thank you for replying. Yes. I think it is bad to make new connection for each request. I tried let conn = conn.clone();     error: no method named <code>clone</code> found for type <code>postgres::Connection</code> in the current scope  error happned. I added       use nickel::status::StatusCode;  And, I fix      use rustc_serialize::json::{Json, Parser};  to     use rustc_serialize::{json};  I modify res to movies. Your code was no error.   But, null was return. I certainly interted data. Why it happned?"}, {"owner": {"reputation": 314, "user_id": 1321456, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/4bd54ccbccbb1bb894075339e4f3a42f?s=128&d=identicon&r=PG", "display_name": "shinriyo", "link": "https://stackoverflow.com/users/1321456/shinriyo"}, "edited": false, "score": 0, "creation_date": 1454769798, "post_id": 35238740, "comment_id": 58198457, "body": "Selecting movie was Success.  log shows. so, I guess SQL is correct."}, {"owner": {"reputation": 8775, "user_id": 821110, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/fa6fca5f613944238a91d2daeba67b9d?s=128&d=identicon&r=PG", "display_name": "W.K.S", "link": "https://stackoverflow.com/users/821110/w-k-s"}, "reply_to_user": {"reputation": 314, "user_id": 1321456, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/4bd54ccbccbb1bb894075339e4f3a42f?s=128&d=identicon&r=PG", "display_name": "shinriyo", "link": "https://stackoverflow.com/users/1321456/shinriyo"}, "edited": false, "score": 0, "creation_date": 1454784610, "post_id": 35238740, "comment_id": 58203951, "body": "Thanks for pointing out the inconsistencies in my answer. I&#39;ll update it to match your original code. Are you using the library <code>sfackler&#47;rust-postgres</code>? If so, its documentation states that <code>execute()</code> returns the number of rows affected while <code>query()</code> returns an iterable object. So I suggest you try using <code>query()</code>."}, {"owner": {"reputation": 314, "user_id": 1321456, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/4bd54ccbccbb1bb894075339e4f3a42f?s=128&d=identicon&r=PG", "display_name": "shinriyo", "link": "https://stackoverflow.com/users/1321456/shinriyo"}, "edited": false, "score": 0, "creation_date": 1454785339, "post_id": 35238740, "comment_id": 58204238, "body": "yes. I wrote <code>postgres = &quot;0.11&quot;</code> of <code>[dependencies]</code> in <code>Cargo.toml</code>. And, I wrote <code>use postgres::{Connection, SslMode};</code> in my <code>main.rs</code>. So, there are a lot of libs? I also wrote <code>use nickel_postgres::{PostgresMiddleware, PostgresRequestExtensions};</code>... however it weren&#39;t used.."}, {"owner": {"reputation": 8775, "user_id": 821110, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/fa6fca5f613944238a91d2daeba67b9d?s=128&d=identicon&r=PG", "display_name": "W.K.S", "link": "https://stackoverflow.com/users/821110/w-k-s"}, "reply_to_user": {"reputation": 314, "user_id": 1321456, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/4bd54ccbccbb1bb894075339e4f3a42f?s=128&d=identicon&r=PG", "display_name": "shinriyo", "link": "https://stackoverflow.com/users/1321456/shinriyo"}, "edited": false, "score": 0, "creation_date": 1454785731, "post_id": 35238740, "comment_id": 58204395, "body": "Sorry, I forgot to initialize Atomic Reference Counting <code>Arc</code> for the connection.You should be able to <code>clone()</code> now"}, {"owner": {"reputation": 314, "user_id": 1321456, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/4bd54ccbccbb1bb894075339e4f3a42f?s=128&d=identicon&r=PG", "display_name": "shinriyo", "link": "https://stackoverflow.com/users/1321456/shinriyo"}, "edited": false, "score": 0, "creation_date": 1454817484, "post_id": 35238740, "comment_id": 58212586, "body": "&lt;nickel macros&gt;:22:50: 22:66 error: the trait <code>core::marker::Sync</code> is not implemented for the type <code>core::cell::UnsafeCell&lt;postgres::InnerConnection&gt;</code>  happened"}, {"owner": {"reputation": 314, "user_id": 1321456, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/4bd54ccbccbb1bb894075339e4f3a42f?s=128&d=identicon&r=PG", "display_name": "shinriyo", "link": "https://stackoverflow.com/users/1321456/shinriyo"}, "edited": false, "score": 0, "creation_date": 1454817547, "post_id": 35238740, "comment_id": 58212600, "body": "I added <code>use std::sync::{Arc};</code> must I modify Connection souce code?"}, {"owner": {"reputation": 8775, "user_id": 821110, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/fa6fca5f613944238a91d2daeba67b9d?s=128&d=identicon&r=PG", "display_name": "W.K.S", "link": "https://stackoverflow.com/users/821110/w-k-s"}, "reply_to_user": {"reputation": 314, "user_id": 1321456, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/4bd54ccbccbb1bb894075339e4f3a42f?s=128&d=identicon&r=PG", "display_name": "shinriyo", "link": "https://stackoverflow.com/users/1321456/shinriyo"}, "edited": false, "score": 0, "creation_date": 1454830770, "post_id": 35238740, "comment_id": 58214848, "body": "If the <code>Sync</code> trait hasn&#39;t been implemented for <code>Connection</code> then you can either create a new connection with each request otherwise, I think it&#39;s best to first raise an issue on the <code>sfackler&#47;rust-postgres</code> repository. They will either guide you to their intended way of sharing a connection otherwise you can implement Sync for Connection and send a pull request."}, {"owner": {"reputation": 314, "user_id": 1321456, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/4bd54ccbccbb1bb894075339e4f3a42f?s=128&d=identicon&r=PG", "display_name": "shinriyo", "link": "https://stackoverflow.com/users/1321456/shinriyo"}, "edited": false, "score": 0, "creation_date": 1454836738, "post_id": 35238740, "comment_id": 58216185, "body": "It is my code now <a href=\"https://github.com/shinriyo/nickel-helloworld.git\" rel=\"nofollow noreferrer\">github.com/shinriyo/nickel-helloworld.git</a>  I&#39;m not similar to Angular js so I can&#39;t delete and update movie yet..."}, {"owner": {"reputation": 314, "user_id": 1321456, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/4bd54ccbccbb1bb894075339e4f3a42f?s=128&d=identicon&r=PG", "display_name": "shinriyo", "link": "https://stackoverflow.com/users/1321456/shinriyo"}, "edited": false, "score": 0, "creation_date": 1454863209, "post_id": 35238740, "comment_id": 58224501, "body": "<code>let shared_connection = Arc::new(Mutex::new(conn));</code>"}, {"owner": {"reputation": 314, "user_id": 1321456, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/4bd54ccbccbb1bb894075339e4f3a42f?s=128&d=identicon&r=PG", "display_name": "shinriyo", "link": "https://stackoverflow.com/users/1321456/shinriyo"}, "edited": false, "score": 0, "creation_date": 1454863227, "post_id": 35238740, "comment_id": 58224508, "body": "author replied my topic"}, {"owner": {"reputation": 314, "user_id": 1321456, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/4bd54ccbccbb1bb894075339e4f3a42f?s=128&d=identicon&r=PG", "display_name": "shinriyo", "link": "https://stackoverflow.com/users/1321456/shinriyo"}, "edited": false, "score": 0, "creation_date": 1454866023, "post_id": 35238740, "comment_id": 58225572, "body": "no. I fix <code>let shared_connection = Arc::new(Mutex::&lt;Connection&gt;::new(conn));</code> but... not work"}], "tags": [], "owner": {"reputation": 8775, "user_id": 821110, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/fa6fca5f613944238a91d2daeba67b9d?s=128&d=identicon&r=PG", "display_name": "W.K.S", "link": "https://stackoverflow.com/users/821110/w-k-s"}, "is_accepted": true, "score": 1, "last_activity_date": 1454785982, "last_edit_date": 1454785982, "creation_date": 1454745543, "answer_id": 35238740, "question_id": 35208615, "link": "https://stackoverflow.com/questions/35208615/how-to-select-querys-result-to-json-in-rust-and-nickel/35238740#35238740", "title": "How to select query&#39;s result to JSON in Rust and Nickel?", "body": "<p>Try the following:</p>\n\n<pre><code>    let json = json::encode(&amp;res).unwrap();\n    response.set(MediaType::Json);\n    response.set(StatusCode::Ok);\n    return response.send(json);\n</code></pre>\n\n<p>Also, it's not efficient to create a new connection for each request. You can create one connection in the main() function and then clone it inside each request closure.</p>\n\n<pre><code>fn main(){\n\n    let mut server = Nickel::new();\n    let mut router = Nickel::router();\n\n    let conn = Connection::connect(\"postgres://postgres@localhost\", SslMode::None).unwrap();\n    let shared_connection = Arc::new(conn);\n\n\n    {\n        let conn = shared_connection.clone();\n        router.get(\"/api/movies\", middleware! ( |request, mut response|{\n\n            let mut v: Vec&lt;Movie&gt; = vec![];\n            let movies = &amp;conn.query(\"select title\", &amp;[]).unwrap();\n            for row in movies {\n                let movie = Movie {\n                    title: row.get(0),\n                };\n\n                v.push(movie);\n            }\n\n            let json_obj = json::encode(&amp;v).unwrap();\n            res.set(MediaType::Json);\n            res.set(StatusCode::Ok);\n            return res.send(json_obj);\n\n        }));\n    }\n\n    {\n        let conn = shared_connection.clone();\n        router.post(\"/api/movies\",middleware!(|request, mut response|{\n\n            //...\n\n        }));\n    }\n\n    server.utilize(router);\n    server.listen(\"127.0.0.1:6767\");\n}\n</code></pre>\n"}], "owner": {"reputation": 314, "user_id": 1321456, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/4bd54ccbccbb1bb894075339e4f3a42f?s=128&d=identicon&r=PG", "display_name": "shinriyo", "link": "https://stackoverflow.com/users/1321456/shinriyo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1323, "favorite_count": 0, "accepted_answer_id": 35238740, "answer_count": 1, "score": 2, "last_activity_date": 1454865822, "creation_date": 1454609919, "last_edit_date": 1454865822, "question_id": 35208615, "link": "https://stackoverflow.com/questions/35208615/how-to-select-querys-result-to-json-in-rust-and-nickel", "title": "How to select query&#39;s result to JSON in Rust and Nickel?", "body": "<p>I use nickel.rs:</p>\n\n<pre><code>router.get(\"/api/movies\", middleware! { |request, response|\n    let mut test_movies =\n    r#\"[\n        { \"title\": \"Ironman\"},\n        { \"title\": \"The Walk\"},\n        { \"title\": \"Paddington\"}\n    ]\n    \"#;\n    let json = Json::from_str(test_movies);\n    format!(\"{}\", json.unwrap())\n});\n</code></pre>\n\n<p>I wanted to create JSON format. The code for connecting to PostgreSQL and converting to JSON definition is below:</p>\n\n<pre><code>extern crate rustc_serialize;\nuse rustc_serialize::json::{Json, Parser};\n\n#[derive(RustcDecodable, RustcEncodable)]\nstruct Movie {\n    title: String,\n}\n</code></pre>\n\n<p>And I tried to select query and create JSON</p>\n\n<pre><code>router.get(\"/api/movies\", middleware! { |request, response|\n    let conn = Connection::connect(\"postgres://postgres@localhost\", SslMode::None).unwrap();\n    let stmt = match conn.prepare(\"select title from movie\") {\n        Ok(stmt) =&gt; stmt,\n        Err(e) =&gt; {\n            return response.send(format!(\"Preparing query failed: {}\", e));\n        }\n    };\n    let res = match stmt.execute(&amp;[]) {\n        Ok(v) =&gt; println!(\"Selecting movie was Success.\"),\n        Err(e) =&gt; println!(\"Selecting movie failed. =&gt; {:?}\", e)\n    };\n\n    // ???\n    // let movies = Json::from_obj(res);\n    // let movies = request.json_as::&lt;&amp;[Movie]&gt;().unwrap();\n    // let movies = request.json_as::Vec&lt;Movie&gt;().unwrap();\n    format!(\"{}\", movies)\n});\n</code></pre>\n\n<p>however, I have no idea how to convert the result to JSON.</p>\n\n<pre><code>let conn = conn.clone();\n</code></pre>\n\n<p>makes the errors.</p>\n\n<pre><code>error: no method named `clone` found for type `postgres::Connection` in the current scope\n</code></pre>\n\n<p>I added</p>\n\n<pre><code>use nickel::status::StatusCode;\n\n//use rustc_serialize::json::{Json, Parser};\nuse rustc_serialize::{json};\n\njson::encode(&amp;movies).unwrap();\n</code></pre>\n\n<p>was work. but null returned...</p>\n\n<p><strong>Finally</strong></p>\n\n<p>I changed <code>execute</code> to <code>query</code> and also use <code>Vec&lt;Movie&gt;</code>.</p>\n\n<pre><code>let mut v: Vec&lt;Movie&gt; = vec![];\nlet movies = &amp;conn.query(\"select title from movie\", &amp;[]).unwrap();\nfor row in movies {\n    let movie = Movie {\n        title: row.get(0),\n    };\n\n    v.push(movie);\n}\n\nlet json_obj = json::encode(&amp;v).unwrap();\nresponse.set(MediaType::Json);\nresponse.set(StatusCode::Ok);\nreturn response.send(json_obj);\n</code></pre>\n\n<p>I also defined <code>struct</code> Moview like model</p>\n\n<pre><code>struct Movie {\n    // id: i32,\n    title: String,\n}\n</code></pre>\n\n<p>hmm.. troublesome a lot.</p>\n\n<p>however, I can't <code>conn.clone()</code> yet.</p>\n"}, {"tags": ["reference", "rust"], "comments": [{"owner": {"reputation": 37741, "user_id": 3425536, "user_type": "registered", "accept_rate": 72, "profile_image": "https://graph.facebook.com/1484495923/picture?type=large", "display_name": "emlai", "link": "https://stackoverflow.com/users/3425536/emlai"}, "edited": false, "score": 1, "creation_date": 1454604188, "post_id": 35206251, "comment_id": 58128736, "body": "Related: <a href=\"http://stackoverflow.com/q/28519997/3425536\">What are Rust&#39;s exact auto-dereferencing rules?</a>"}, {"owner": {"reputation": 9777, "user_id": 121631, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/85801ee3b7b70969f6713aaa5768ca20?s=128&d=identicon&r=PG", "display_name": "David Budworth", "link": "https://stackoverflow.com/users/121631/david-budworth"}, "edited": false, "score": 1, "creation_date": 1454609643, "post_id": 35206251, "comment_id": 58132260, "body": "println is dereferencing the pointer automatically, so they print the same thing."}], "owner": {"reputation": 896, "user_id": 3055725, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7736250e7eae9435540a34c6299dbd7b?s=128&d=identicon&r=PG", "display_name": "Mateus Felipe", "link": "https://stackoverflow.com/users/3055725/mateus-felipe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 60, "favorite_count": 0, "closed_date": 1454603592, "answer_count": 0, "score": 1, "last_activity_date": 1454603043, "creation_date": 1454603043, "question_id": 35206251, "link": "https://stackoverflow.com/questions/35206251/why-var-and-var-returns-the-same", "closed_reason": "Duplicate", "title": "Why var and *var returns the same?", "body": "<p>I am learning Rust and I am having a little difficulty with references and related, and I didn't got one thing:</p>\n\n<pre><code>fn main() {\n    let number = &amp;mut 0;\n\n    println!(\"Ref: {}, Value: {}\", number, *number);\n\n    *number += 1;\n\n    println!(\"Ref: {}, Value: {}\", number, *number);\n}\n</code></pre>\n\n<p>The output is 0 for both ref and value in the first <em>println!</em> and 1 for both ref and value in the second <em>println!</em>, wich doesn't make sense, as I added one to the referenced value, not the reference itself. Indeed, trying to add any value to the reference itself yields an error. Why <em>number</em> and <em>*number</em> are returning the same value?</p>\n"}, {"tags": ["rust", "heap"], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1454591474, "post_id": 35201819, "comment_id": 58119574, "body": "Isn&#39;t the <code>box</code> keyword supposed to cover custom allocations (ie, allocating something <i>else</i> than a <code>Box</code>) ? Or is it to be replaced by placement <code>&lt;-</code> ?"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1454594945, "post_id": 35201819, "comment_id": 58122009, "body": "<code>box</code> will support things other than <code>Box</code> (<i>e.g.</i> <code>Rc</code>, <code>Arc</code>, <i>etc.</i>) via inference.  <code>&lt;-</code> is the current provisional syntax for <i>placement</i>, which is related, but different: <code>box</code> creates a new place to put a value and then puts it there, <code>&lt;-</code> places a value in an <i>existing</i> place (like, say, on the end of a vector)."}, {"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 2, "creation_date": 1454622091, "post_id": 35201819, "comment_id": 58139564, "body": "I enjoyed every part of this answer - I also learned something."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 44, "last_activity_date": 1454591197, "creation_date": 1454591197, "answer_id": 35201819, "question_id": 35201250, "link": "https://stackoverflow.com/questions/35201250/what-is-the-difference-between-using-the-box-keyword-and-boxnew/35201819#35201819", "title": "What is the difference between using the box keyword and Box::new?", "body": "<p><code>Box::new</code> is just a function, like any other function.  It is not special in any way whatsoever.  It is grubby and smells faintly of very-close-to-the-expiration date cheese.</p>\n\n<p><code>box</code> is magic and made up ground-up pixies and the dreams of little children.  It is dressed in the finest, swankiest clothes and carries with it the faint aroma of freshly cut pine.</p>\n\n<p>When you execute <code>Box::new(e)</code>, because it is a function, <code>e</code> must be completely evaluated and constructed <em>before</em> it can start the call.  If this means allocating and filling a 500kB structure on the stack, then it has to allocate and fill a 500kB structure on the stack, <em>and then</em> pass that to <code>Box::new</code>, which <em>only then</em> can allocate the space on the heap (which might fail), <em>and then</em> copy that 500kB into the heap.</p>\n\n<p>When you execute <code>box e</code>, because it is wonderful like a cool breeze on a hot summer's day, the compiler can reorder things such that it <em>begins</em> by allocating the 500kB on the heap, <em>and then</em> filling the 500kB structure <em>directly on the heap</em>.  And then it's done.  No extra copying, no chewing through stack space.  No wasted effort if that \"allocate on the heap\" thing fails to work out.</p>\n\n<p><code>box</code> is life, <code>box</code> is love; all hail <code>box</code>!</p>\n\n<p>(And yes, as of writing, it's still unstable which means you need a nightly compiler to bask in its radiance.  But <em>soon</em>, the dawn will come.  Get it?  Dawn?  Nightly?  ...  I'll show myself out...)</p>\n"}], "owner": {"reputation": 431, "user_id": 3600860, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/b379506ec89829e5384fd392ca5a291e?s=128&d=identicon&r=PG&f=1", "display_name": "DeBe", "link": "https://stackoverflow.com/users/3600860/debe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 911, "favorite_count": 5, "accepted_answer_id": 35201819, "answer_count": 1, "score": 17, "last_activity_date": 1536630721, "creation_date": 1454589502, "last_edit_date": 1536630721, "question_id": 35201250, "link": "https://stackoverflow.com/questions/35201250/what-is-the-difference-between-using-the-box-keyword-and-boxnew", "title": "What is the difference between using the box keyword and Box::new?", "body": "<p>Is <code>box</code> just syntactic sugar or can it be applied to use cases where <code>Box::new</code> is not sufficient? I read somewhere that <code>box</code> is unstable, does that mean I can only use it with the nightly Rust versions?</p>\n"}]