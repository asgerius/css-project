[{"tags": ["raspberry-pi", "rust", "cross-compiling"], "comments": [{"owner": {"reputation": 2655, "user_id": 184700, "user_type": "registered", "accept_rate": 33, "profile_image": "https://i.stack.imgur.com/ffsUU.jpg?s=128&g=1", "display_name": "Jess Bowers", "link": "https://stackoverflow.com/users/184700/jess-bowers"}, "edited": false, "score": 0, "creation_date": 1517449480, "post_id": 48551173, "comment_id": 84104623, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/10973020/cross-compilation-for-raspberry-pi-in-gcc-where-to-start\">Cross-compilation for Raspberry Pi in GCC. Where to start?</a>"}], "owner": {"reputation": 961, "user_id": 5920297, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/80fc64c0293ff9460b4a8f127afdb8b2?s=128&d=identicon&r=PG&f=1", "display_name": "phodina", "link": "https://stackoverflow.com/users/5920297/phodina"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 98, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1517431765, "creation_date": 1517431765, "question_id": 48551173, "link": "https://stackoverflow.com/questions/48551173/xargo-config-for-raspberry-pi", "title": "Xargo config for Raspberry Pi", "body": "<p>I'm learning to build a simple bare metal program (without Linux OS) for Raspberry Pi (gen 1).</p>\n\n<p>However, I don't know how to setup the cross-compiler under the hood of xargo. There are docs on <a href=\"https://github.com/japaric/rust-cross\" rel=\"nofollow noreferrer\">rust-cross</a> about RPI 2 but not about RPI 1. </p>\n\n<p>Is there some example how to do it? I've tried several existing repos on github but all failed to compile. </p>\n\n<p><a href=\"https://github.com/osnr/rpi-kernel\" rel=\"nofollow noreferrer\">RPI-Kernel</a><br>\n<a href=\"https://github.com/sarjun/cs4414-ps4\" rel=\"nofollow noreferrer\">IronKernel</a></p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 3489, "user_id": 1350184, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/EQnef.jpg?s=128&g=1", "display_name": "tversteeg", "link": "https://stackoverflow.com/users/1350184/tversteeg"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1517431277, "post_id": 48551026, "comment_id": 84098222, "body": "With both <code>|ref c|</code> and <code>|ref mut c|</code> I get: <a href=\"https://play.rust-lang.org/?gist=e91fd4c62be532d70ef477d31a5a72e5&amp;version=nightly\" rel=\"nofollow noreferrer\"><code>error[E0277]: the trait bound `&amp;&amp;mut {integer}: std::cmp::PartialEq&lt;{integer}&gt;` is not satisfied</code></a>"}], "answers": [{"tags": [], "owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "is_accepted": true, "score": 10, "last_activity_date": 1517432476, "last_edit_date": 1517432476, "creation_date": 1517432098, "answer_id": 48551250, "question_id": 48551026, "link": "https://stackoverflow.com/questions/48551026/mutable-reference-to-an-item-using-find-in-rust/48551250#48551250", "title": "Mutable reference to an item using &#39;find&#39; in Rust", "body": "<p>Rust's <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.find\" rel=\"noreferrer\"><code>.find</code></a> passes the callback the type <code>&amp;Self::Item</code>, and since you are using <code>.iter_mut()</code>, you've created an iterator where each item is <code>&amp;mut T</code>. That means the type passed to your <code>find</code> callback is <code>&amp;&amp;mut T</code>. To get that to typecheck, you can do either</p>\n\n<pre><code>vec.iter_mut().find(|&amp;&amp;mut c| c == 2)\n</code></pre>\n\n<p>or</p>\n\n<pre><code>vec.iter_mut().find(|c| **c == 2)\n</code></pre>\n\n<p>with the second one being preferable.</p>\n\n<p>The error you are getting is because the middle-ground you've chosen by using <code>&amp;c</code> would set <code>c</code> to a value of <code>&amp;mut T</code>, and one of Rust's big rules is that multiple things can't own a mutable reference to an item at the same time. Your non-mutable case works because you <em>are</em> allowed to have multiple immutable references to an item.</p>\n"}], "owner": {"reputation": 3489, "user_id": 1350184, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/EQnef.jpg?s=128&g=1", "display_name": "tversteeg", "link": "https://stackoverflow.com/users/1350184/tversteeg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1455, "favorite_count": 0, "accepted_answer_id": 48551250, "answer_count": 1, "score": 12, "last_activity_date": 1517432476, "creation_date": 1517430996, "last_edit_date": 1517431207, "question_id": 48551026, "link": "https://stackoverflow.com/questions/48551026/mutable-reference-to-an-item-using-find-in-rust", "title": "Mutable reference to an item using &#39;find&#39; in Rust", "body": "<p>How can I get a mutable reference to an item found in a vector?</p>\n\n<p>I've tried the following which works if I don't make the iterator mutable using <code>.iter()</code>:</p>\n\n<pre><code>fn main() {\n    let mut vec = vec![1, 2, 3, 4];\n    let mut wrong = -1;\n\n    let working = match vec.iter().find(|&amp;c| *c == 2) {\n        Some(c) =&gt; c,\n        None =&gt; &amp;wrong\n    };\n\n    println!(\"Result: {}\", working);\n}\n</code></pre>\n\n<p>But when I try to get a mutable reference using a mutable iterator <code>.iter_mut()</code>,</p>\n\n<pre><code>fn main() {\n    let mut vec = vec![1, 2, 3, 4];\n    let mut wrong = -1;\n\n    let mut error = match vec.iter_mut().find(|&amp;c| *c == 2) {\n        Some(c) =&gt; c,\n        None =&gt; &amp;mut wrong\n    };\n\n    println!(\"Result: {}\", error);\n}\n</code></pre>\n\n<p>I get the following error:</p>\n\n<blockquote>\n  <pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n --&gt; src/main.rs:5:48\n  |\n5 |     let mut error = match vec.iter_mut().find(|&amp;c| *c == 2) {\n  |                                                ^-\n  |                                                ||\n  |                                                |hint: to prevent move, use `ref c` or `ref mut c`\n  |                                                cannot move out of borrowed content\n</code></pre>\n</blockquote>\n\n<p>I also tried to make the type in the closure mutable with <code>|&amp;mut c|</code> but that gives the following error:</p>\n\n<blockquote>\n  <pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; src/main.rs:5:48\n  |\n5 |     let mut error = match vec.iter_mut().find(|&amp;mut c| *c == 2) {\n  |                                                ^^^^^^ types differ in mutability\n  |\n  = note: expected type `&amp;&amp;mut {integer}`\n             found type `&amp;mut _`\n  = help: did you mean `mut c: &amp;&amp;&amp;mut {integer}`?\n</code></pre>\n</blockquote>\n"}, {"tags": ["iterator", "rust"], "comments": [{"owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 3, "creation_date": 1517431010, "post_id": 48550646, "comment_id": 84098089, "body": "Iterators and reactive streams are not the same thing though. You might want to look at <a href=\"https://docs.rs/futures/0.1.18/futures/stream/index.html\" rel=\"nofollow noreferrer\">futures::stream</a> instead"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1517429913, "creation_date": 1517429913, "answer_id": 48550772, "question_id": 48550646, "link": "https://stackoverflow.com/questions/48550646/what-is-the-rust-equivalent-of-rxs-startwith/48550772#48550772", "title": "What is the Rust equivalent of Rx&#39;s `startWith`?", "body": "<blockquote>\n  <p>iteration with a custom element</p>\n</blockquote>\n\n<p>If you have a single element, use <a href=\"https://doc.rust-lang.org/std/iter/fn.once.html\" rel=\"noreferrer\"><code>iter::once</code></a>.</p>\n\n<p>If you have multiple elements, use <a href=\"https://doc.rust-lang.org/std/iter/fn.repeat.html\" rel=\"noreferrer\"><code>iter::repeat</code></a> coupled with <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.take\" rel=\"noreferrer\"><code>Iterator::take</code></a>.</p>\n\n<blockquote>\n  <p>to start iteration with</p>\n</blockquote>\n\n<p>Use <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.chain\" rel=\"noreferrer\"><code>Iterator::chain</code></a>.</p>\n\n<p>Put together:</p>\n\n<pre><code>use std::iter;\n\nfn main() {\n    let some_iterator = 1..10;\n\n    let start_with = iter::repeat(42).take(5);\n\n    let together = start_with.chain(some_iterator);\n\n    for i in together {\n        println!(\"{}\", i);\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 387, "user_id": 6186709, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/G5lWJ.png?s=128&g=1", "display_name": "I60R", "link": "https://stackoverflow.com/users/6186709/i60r"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 102, "favorite_count": 0, "accepted_answer_id": 48550772, "answer_count": 1, "score": 6, "last_activity_date": 1517429913, "creation_date": 1517429404, "last_edit_date": 1517429722, "question_id": 48550646, "link": "https://stackoverflow.com/questions/48550646/what-is-the-rust-equivalent-of-rxs-startwith", "title": "What is the Rust equivalent of Rx&#39;s `startWith`?", "body": "<p>Is there any predefined function to start iteration with a custom element using Rust's iterators?</p>\n"}, {"tags": ["struct", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517430286, "post_id": 48550453, "comment_id": 84097734, "body": "Why do you believe that <code>ssss.Header</code> is valid syntax? Why do you think this has to do with lifetimes?"}, {"owner": {"reputation": 47, "user_id": 3630178, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b7e9f52a8a0a712df5a5587fb5a53401?s=128&d=identicon&r=PG&f=1", "display_name": "Johnny Marcove", "link": "https://stackoverflow.com/users/3630178/johnny-marcove"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517431866, "post_id": 48550453, "comment_id": 84098512, "body": "@Shepmaster thank you, because i didn&#39;t read rust documents carefully."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1517430211, "creation_date": 1517430211, "answer_id": 48550848, "question_id": 48550453, "link": "https://stackoverflow.com/questions/48550453/how-do-i-create-a-nested-structure/48550848#48550848", "title": "How do I create a nested structure?", "body": "<p>There is nothing magical about nested structures. You use the exact same syntax as a non-nested structure:</p>\n\n<pre><code>pub fn new(name: Proto) -&gt; HTTP {\n    HTTP {\n        ssss: Request {\n            header: \"Herman\".to_string(),\n        },\n        names: name,\n    }\n}\n</code></pre>\n\n<p>If you find the nesting too complicated, you can always introduce an intermediate variable:</p>\n\n<pre><code>pub fn new(names: Proto) -&gt; HTTP {\n    let ssss = Request {\n        header: \"Herman\".to_string(),\n    };\n\n    HTTP { ssss, names }\n}\n</code></pre>\n\n<p>Note: idiomatic Rust uses <code>snake_case</code> for identifiers like variables, methods, and struct properties. I've renamed your <code>Header</code> to <code>header</code> to avoid warnings.</p>\n"}], "owner": {"reputation": 47, "user_id": 3630178, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b7e9f52a8a0a712df5a5587fb5a53401?s=128&d=identicon&r=PG&f=1", "display_name": "Johnny Marcove", "link": "https://stackoverflow.com/users/3630178/johnny-marcove"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 981, "favorite_count": 0, "accepted_answer_id": 48550848, "answer_count": 1, "score": -1, "last_activity_date": 1517430211, "creation_date": 1517428637, "last_edit_date": 1517430104, "question_id": 48550453, "link": "https://stackoverflow.com/questions/48550453/how-do-i-create-a-nested-structure", "title": "How do I create a nested structure?", "body": "<p>I'm implementing a method that has a nested structure call.\nI read about Rust lifetimes and I think my problem is about lifetimes, but I cannot understand how can I use this in the code.</p>\n\n<pre><code>#[derive(Debug)]\npub struct Request {\n    Header: String\n} \n#[derive(Debug)]\npub enum Proto {\n    HTTP,\n    HTTPS\n}\n\n#[derive(Debug)]\npub struct HTTP {\n    ssss: Request,\n    names: Proto,\n}\n\nimpl HTTP {\n    pub fn new(name: Proto) -&gt; HTTP {\n        HTTP{\n            ssss.Header: \"Herman\".to_string(),\n            names: name,\n        }\n    }\n}\n</code></pre>\n\n<p>It's not possible assign a value to <code>ssss.Header</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: expected one of `,` or `}`, found `.`\n  --&gt; src/main.rs:20:17\n   |\n20 |             ssss.Header: \"Herman\".to_string(),\n   |                 ^ expected one of `,` or `}` here\n\nerror[E0425]: cannot find value `ssss` in this scope\n  --&gt; src/main.rs:20:13\n   |\n20 |             ssss.Header: \"Herman\".to_string(),\n   |             ^^^^\n   |             |\n   |             `self` value is only available in methods with `self` parameter\n   |             help: try: `self.ssss`\n\nerror[E0063]: missing field `names` in initializer of `HTTP`\n  --&gt; src/main.rs:19:9\n   |\n19 |         HTTP{\n   |         ^^^^ missing `names`\n</code></pre>\n"}, {"tags": ["rust", "hyper"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1517421862, "post_id": 48547853, "comment_id": 84093231, "body": "Can you explain your problem better? Are you trying to truncate the response, or is the response coming out truncated? Where are you sending the request to? And what is the expected outcome?"}, {"owner": {"reputation": 6491, "user_id": 1714997, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/44565e25a9f92a342de42b050e14aee5?s=128&d=identicon&r=PG", "display_name": "Dominykas Mostauskis", "link": "https://stackoverflow.com/users/1714997/dominykas-mostauskis"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1517426762, "post_id": 48547853, "comment_id": 84095868, "body": "@E_net4 I have expanded the explanation. Please provide critique if it is still lacking."}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1517427450, "post_id": 48547853, "comment_id": 84096265, "body": "You really should provide the code that actually reproduces the problem.  I could imagine you block the event loop somewhere by (ab)using <code>Future::wait</code> (or something else), triggering a timeout on the server which then closes the connection.  Could you at least share <code>strace -f</code> ouput (linux only) or a tcpdump of the failing connection?"}, {"owner": {"reputation": 6491, "user_id": 1714997, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/44565e25a9f92a342de42b050e14aee5?s=128&d=identicon&r=PG", "display_name": "Dominykas Mostauskis", "link": "https://stackoverflow.com/users/1714997/dominykas-mostauskis"}, "reply_to_user": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1517478705, "post_id": 48547853, "comment_id": 84115015, "body": "@Stefan, I have provided the code. This is exactly the kind of insight I was looking for. I&#39;m not using <code>Future::wait</code>. I&#39;m using <code>stream::futures_ordered(futures).collect()</code> for concurrently resolving a sequence of futures, and <code>Core.run</code> for blocking. To my discomfort I am on Windows, so <code>strace</code> is not available. If the solution is not evident given the newly provided code, I&#39;ll try and get a tcpdump of the connection."}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1517484960, "post_id": 48547853, "comment_id": 84119128, "body": "You&#39;re code still wasn&#39;t compiling, and misses a main function.  See <a href=\"https://play.rust-lang.org/?gist=85446e3dce7ccfaae4260877d695b8eb&amp;version=stable\" rel=\"nofollow noreferrer\">playground</a> for what we would have expected from you to put into your question."}, {"owner": {"reputation": 6491, "user_id": 1714997, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/44565e25a9f92a342de42b050e14aee5?s=128&d=identicon&r=PG", "display_name": "Dominykas Mostauskis", "link": "https://stackoverflow.com/users/1714997/dominykas-mostauskis"}, "reply_to_user": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1517496111, "post_id": 48547853, "comment_id": 84126589, "body": "@Stefan, I&#39;ll edit my code accordingly in the future. I wasn&#39;t aware that playground loads third-party modules."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517494370, "post_id": 48561886, "comment_id": 84125344, "body": "<i>start a new <code>Core</code></i> \u2014 moving the futures between <code>Core</code>s also seems highly unusual."}, {"owner": {"reputation": 6491, "user_id": 1714997, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/44565e25a9f92a342de42b050e14aee5?s=128&d=identicon&r=PG", "display_name": "Dominykas Mostauskis", "link": "https://stackoverflow.com/users/1714997/dominykas-mostauskis"}, "edited": false, "score": 0, "creation_date": 1517495084, "post_id": 48561886, "comment_id": 84125846, "body": "My erronious understanding was that receiving a response, as you put it, included receiving the whole response and holding it in memory. Could you direct me to an overview of how the process actually works or provide some keywords? I&#39;d like to download the response immediately, and use it arbitrarily later."}, {"owner": {"reputation": 6491, "user_id": 1714997, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/44565e25a9f92a342de42b050e14aee5?s=128&d=identicon&r=PG", "display_name": "Dominykas Mostauskis", "link": "https://stackoverflow.com/users/1714997/dominykas-mostauskis"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517495520, "post_id": 48561886, "comment_id": 84126184, "body": "@Shepmaster could you go more indepth about moving futures between <code>Core</code>s and why it is unusual?"}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1517497724, "post_id": 48561886, "comment_id": 84127711, "body": "Using more than one <code>Core</code> often reflects bad design - because it means your code isn&#39;t fully async, and it usually should be (instead of switching between async and sync)."}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1517498096, "post_id": 48561886, "comment_id": 84127977, "body": "<code>response.body().concat2()</code> returns a future that will receive the full response, you just need to drive it.  That probably means restructuring your <code>batched_throttle</code> function to use async concepts. I didn&#39;t read it fully, but using <code>thread::sleep</code> is a nogo in async code, and <code>for</code>/<code>loop</code> usually is wrong too. You might want to look into <code>Stream</code>s and <code>Future</code>s."}, {"owner": {"reputation": 6491, "user_id": 1714997, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/44565e25a9f92a342de42b050e14aee5?s=128&d=identicon&r=PG", "display_name": "Dominykas Mostauskis", "link": "https://stackoverflow.com/users/1714997/dominykas-mostauskis"}, "edited": false, "score": 0, "creation_date": 1517500208, "post_id": 48561886, "comment_id": 84129426, "body": "@Stefan, thank you for all the information. Very useful. Mixing sync and async mid-processing seems to be the root of my problems. This program doesn&#39;t surrender to async structure easily, because there&#39;s state and the requests should be executed maximally concurrently. Because the state is batch-level, to make these requests concurrently they have to be made in batches and in sequence. I&#39;ll ponder opening a Code Review thread for deriving an async architecture."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 6491, "user_id": 1714997, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/44565e25a9f92a342de42b050e14aee5?s=128&d=identicon&r=PG", "display_name": "Dominykas Mostauskis", "link": "https://stackoverflow.com/users/1714997/dominykas-mostauskis"}, "edited": false, "score": 1, "creation_date": 1517501073, "post_id": 48561886, "comment_id": 84130042, "body": "@DominykasMostauskis to add to what Stefan said, there <i>are</i> times where you want multiple <code>Core</code>s, it&#39;s just not common, especially for introductory usages. From what I&#39;ve seen, doing such usually comes about when you mix multithreading with futures, which is a very nuanced topic."}], "tags": [], "owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "is_accepted": true, "score": 3, "last_activity_date": 1517485236, "creation_date": 1517485236, "answer_id": 48561886, "question_id": 48547853, "link": "https://stackoverflow.com/questions/48547853/what-might-cause-a-difficult-to-reproduce-truncation-of-a-hyper-http-response/48561886#48561886", "title": "What might cause a difficult-to-reproduce truncation of a Hyper HTTP response?", "body": "<p>You first create a <code>Core</code> and start lots of requests and gather the <code>Response</code> \"results\".</p>\n\n<p>After you got all the <code>Response</code>s you start a new <code>Core</code> and try to start reading the data from those <code>Responses</code> - but the server probably closed them long ago due to write timeouts, and you only get partial data.</p>\n\n<p>You shouldn't keep the server waiting; start reading the <code>Responses</code> as soon as possible.</p>\n"}], "owner": {"reputation": 6491, "user_id": 1714997, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/44565e25a9f92a342de42b050e14aee5?s=128&d=identicon&r=PG", "display_name": "Dominykas Mostauskis", "link": "https://stackoverflow.com/users/1714997/dominykas-mostauskis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 178, "favorite_count": 0, "accepted_answer_id": 48561886, "answer_count": 1, "score": 1, "last_activity_date": 1517494330, "creation_date": 1517419019, "last_edit_date": 1517494330, "question_id": 48547853, "link": "https://stackoverflow.com/questions/48547853/what-might-cause-a-difficult-to-reproduce-truncation-of-a-hyper-http-response", "title": "What might cause a difficult-to-reproduce truncation of a Hyper HTTP response?", "body": "<p>I am experiencing a bug where my Hyper HTTP response is being truncated to a specific size (7829 bytes). Making the same request with cURL works fine.</p>\n\n<p>The request queries a JSON endpoint for data. The response struct is then shuffled around a lot, because a relatively complex rate-limiting procedure is used to make a number of these requests at once. However, if only one request is made, the response is still truncated.</p>\n\n<p>Before implementing rate-limiting and doing some heavy refactoring, the program made these responses properly.</p>\n\n<p>I made the minimal example below, but it fails to reproduce the problem. At this point I'm not sure where to look. The codebase is moderately complicated and iteratively expanding the reproduction example is difficult, especially when I don't know what might possibly cause this.</p>\n\n<p>What are some ways that Hyper's Response body might get truncated? The response body is acquired as in the <code>handle</code> function below.</p>\n\n<pre><code>#![feature(use_nested_groups)]\nextern crate futures;\nextern crate hyper;\nextern crate hyper_tls;\nextern crate tokio_core;\n\nuse futures::{Future, Stream};\nuse hyper::{Body, Chunk, Client, Method, Request, Response};\nuse hyper_tls::HttpsConnector;\nuse tokio_core::reactor::Core;\nuse std::env;\n\nfn main() {\n    let mut core = Core::new().unwrap();\n    let client = Client::configure()\n        .connector(HttpsConnector::new(4, &amp;core.handle()).unwrap())\n        .build(&amp;core.handle());\n\n    fn handle(response: Response&lt;Body&gt;) -&gt; Box&lt;Future&lt;Item = usize, Error = hyper::Error&gt;&gt; {\n        Box::new(\n            response\n                .body()\n                .concat2()\n                .map(move |body: Chunk| -&gt; usize { body.len() }),\n        )\n    }\n\n    let args: Vec&lt;String&gt; = env::args().collect();\n    let uri = &amp;args[1];\n    let req = Request::new(Method::Get, uri.parse().unwrap());\n\n    let response_body_length = {\n        let future = Box::new(client.request(req).map(handle).flatten());\n        core.run(future).unwrap()\n    };\n\n    println!(\"response body length: {}\", response_body_length);\n}\n</code></pre>\n\n<p>Offending code:</p>\n\n<pre><code>extern crate serde;\nextern crate serde_json;\nuse futures::{future, stream, Future, Stream};\nuse hyper;\nuse hyper::{client, Body, Chunk, Client, Headers, Method, Request, Response, header::Accept,\n            header::Date as DateHeader, header::RetryAfter};\nuse hyper_tls::HttpsConnector;\nuse tokio_core::reactor::Core;\nuse models::Bucket;\nuse std::thread;\nuse std::time::{Duration, UNIX_EPOCH};\nuse std::str;\n\nheader! { (XRateLimitRemaining, \"x-ratelimit-remaining\") =&gt; [String] }\n\n#[derive(Debug)]\nstruct Uri(pub String);\n\nconst MAX_REQ_SIZE: u32 = 500;\n\nfn make_uri(symbol: &amp;str, page_ix: u32) -&gt; Uri {\n    Uri(format!(\n        \"https://www.bitmex.com/api/v1/trade/bucketed?\\\n         symbol={symbol}&amp;\\\n         columns={columns}&amp;\\\n         partial=false&amp;\\\n         reverse=true&amp;\\\n         binSize={bin_size}&amp;\\\n         count={count}&amp;\\\n         start={start}\",\n        symbol = symbol,\n        columns = \"close,timestamp\",\n        bin_size = \"5m\",\n        count = MAX_REQ_SIZE,\n        start = 0 + MAX_REQ_SIZE * page_ix\n    ))\n}\n\n#[derive(Debug)]\nstruct RateLimitInfo {\n    remaining_reqs: u32,\n    retry_after: Option&lt;Duration&gt;,\n}\n\nimpl RateLimitInfo {\n    fn default() -&gt; RateLimitInfo {\n        RateLimitInfo {\n            remaining_reqs: 1,\n            retry_after: None,\n        }\n    }\n    fn from&lt;T&gt;(resp: &amp;Response&lt;T&gt;) -&gt; RateLimitInfo {\n        let headers = resp.headers();\n        let remaining_reqs = headers\n            .get::&lt;XRateLimitRemaining&gt;()\n            .unwrap_or_else(|| panic!(\"x-ratelimit-remaining not on request.\"))\n            .parse()\n            .unwrap();\n        let retry_after = match headers.get::&lt;RetryAfter&gt;() {\n            Some(RetryAfter::Delay(duration)) =&gt; Some(*duration),\n            _ =&gt; None,\n        };\n        RateLimitInfo {\n            remaining_reqs,\n            retry_after,\n        }\n    }\n}\n\nfn resp_dated_later&lt;'a&gt;(a: &amp;'a Response&lt;Body&gt;, b: &amp;'a Response&lt;Body&gt;) -&gt; &amp;'a Response&lt;Body&gt; {\n    let get_date = |resp: &amp;Response&lt;Body&gt;| {\n        let headers: &amp;Headers = resp.headers();\n        **headers.get::&lt;DateHeader&gt;().unwrap()\n    };\n    if get_date(&amp;a) &gt; get_date(&amp;b) {\n        a\n    } else {\n        b\n    }\n}\n\n#[derive(Debug)]\nstruct Query {\n    uri: Uri,\n    response: Option&lt;Response&lt;Body&gt;&gt;,\n}\n\nimpl Query {\n    fn from_uri(uri: Uri) -&gt; Query {\n        Query {\n            uri: uri,\n            response: None,\n        }\n    }\n}\n\nfn query_good(q: &amp;Query) -&gt; bool {\n    match &amp;q.response {\n        Some(response) =&gt; response.status().is_success(),\n        _ =&gt; false,\n    }\n}\n\ntype HttpsClient = hyper::Client&lt;HttpsConnector&lt;client::HttpConnector&gt;&gt;;\n\ntype FutureQuery = Box&lt;Future&lt;Item = Query, Error = hyper::Error&gt;&gt;;\n\nfn to_future(x: Query) -&gt; FutureQuery {\n    Box::new(future::ok(x))\n}\n\nfn exec_if_needed(client: &amp;HttpsClient, query: Query) -&gt; FutureQuery {\n    fn exec(client: &amp;HttpsClient, q: Query) -&gt; FutureQuery {\n        println!(\"exec: {:?}\", q);\n        let uri = q.uri;\n        let req = {\n            let mut req = Request::new(Method::Get, uri.0.parse().unwrap());\n            req.headers_mut().set(Accept::json());\n            req\n        };\n        Box::new(\n            client\n                .request(req)\n                .inspect(|resp| println!(\"HTTP {}\", resp.status()))\n                .map(|resp| Query {\n                    uri: uri,\n                    response: Some(resp),\n                }),\n        )\n    }\n    if query_good(&amp;query) {\n        to_future(query)\n    } else {\n        exec(client, query)\n    }\n}\n\ntype BoxedFuture&lt;T&gt; = Box&lt;Future&lt;Item = T, Error = hyper::Error&gt;&gt;;\n\nfn do_batch(client: &amp;HttpsClient, queries: Vec&lt;Query&gt;) -&gt; BoxedFuture&lt;Vec&lt;Query&gt;&gt; {\n    println!(\"do_batch() {} queries\", queries.len());\n    let exec_if_needed = |q| exec_if_needed(client, q);\n    let futures = queries.into_iter().map(exec_if_needed);\n    println!(\"do_batch() futures {:?}\", futures);\n    Box::new(\n        stream::futures_ordered(futures).collect(), //future::join_all(futures)\n    )\n}\n\nfn take&lt;T&gt;(right: &amp;mut Vec&lt;T&gt;, suggested_n: usize) -&gt; Vec&lt;T&gt; {\n    let n: usize = if right.len() &lt; suggested_n {\n        right.len()\n    } else {\n        suggested_n\n    };\n    let left = right.drain(0..n);\n    return left.collect();\n}\n\ntype BoxedResponses = Box&lt;Vec&lt;Response&lt;Body&gt;&gt;&gt;;\n\nfn batched_throttle(uris: Vec&lt;Uri&gt;) -&gt; BoxedResponses {\n    println!(\"batched_throttle({} uris)\", uris.len());\n    let mut core = Core::new().unwrap();\n    let client = Client::configure()\n        .connector(HttpsConnector::new(4, &amp;core.handle()).unwrap())\n        .build(&amp;core.handle());\n\n    let mut rate_limit_info = RateLimitInfo::default();\n\n    let mut queries_right: Vec&lt;Query&gt; = uris.into_iter().map(Query::from_uri).collect();\n\n    loop {\n        let mut queries_left: Vec&lt;Query&gt; = Vec::with_capacity(queries_right.len());\n\n        println!(\"batched_throttle: starting inner loop\");\n        loop {\n            // throttle program during testing\n            thread::sleep(Duration::from_millis(800));\n            println!(\"batched_throttle: {:?}\", rate_limit_info);\n            if let Some(retry_after) = rate_limit_info.retry_after {\n                println!(\"batched_throttle: retrying after {:?}\", retry_after);\n                thread::sleep(retry_after)\n            }\n            if queries_right.is_empty() {\n                break;\n            }\n            let mut queries_mid = {\n                let ri_count = rate_limit_info.remaining_reqs;\n                let iter_req_count = if ri_count == 0 { 1 } else { ri_count };\n                println!(\"batched_throttle: iter_req_count {}\", iter_req_count);\n                take(&amp;mut queries_right, iter_req_count as usize)\n            };\n            println!(\n                \"batched_throttle: \\\n                 queries_right.len() {}, \\\n                 queries_left.len() {}, \\\n                 queries_mid.len() {})\",\n                queries_right.len(),\n                queries_left.len(),\n                queries_mid.len()\n            );\n            if queries_mid.iter().all(query_good) {\n                println!(\"batched_throttle: queries_mid.iter().all(query_good)\");\n                continue;\n            }\n            queries_mid = { core.run(do_batch(&amp;client, queries_mid)).unwrap() };\n            rate_limit_info = {\n                let create_very_old_response =\n                    || Response::new().with_header(DateHeader(UNIX_EPOCH.into()));\n                let very_old_response = create_very_old_response();\n                let last_resp = queries_mid\n                    .iter()\n                    .map(|q| match &amp;q.response {\n                        Some(r) =&gt; r,\n                        _ =&gt; panic!(\"Impossible\"),\n                    })\n                    .fold(&amp;very_old_response, resp_dated_later);\n                RateLimitInfo::from(&amp;last_resp)\n            };\n            &amp;queries_left.append(&amp;mut queries_mid);\n        }\n\n        queries_right = queries_left;\n\n        if queries_right.iter().all(query_good) {\n            break;\n        }\n    }\n\n    println!(\n        \"batched_throttle: finishing. queries_right.len() {}\",\n        queries_right.len()\n    );\n\n    Box::new(\n        queries_right\n            .into_iter()\n            .map(|q| q.response.unwrap())\n            .collect(),\n    )\n}\n\nfn bucket_count_to_req_count(bucket_count: u32) -&gt; u32 {\n    let needed_req_count = (bucket_count as f32 / MAX_REQ_SIZE as f32).ceil() as u32;\n    return needed_req_count;\n}\n\ntype BoxedBuckets = Box&lt;Vec&lt;Bucket&gt;&gt;;\n\nfn response_to_buckets(response: Response&lt;Body&gt;) -&gt; BoxedFuture&lt;Vec&lt;Bucket&gt;&gt; {\n    Box::new(response.body().concat2().map(|body: Chunk| -&gt; Vec&lt;Bucket&gt; {\n        println!(\"body.len(): {}\", body.len());\n        println!(\"JSON: {}\", str::from_utf8(&amp;body).unwrap());\n        serde_json::from_slice(&amp;body).unwrap()\n    }))\n}\n\npub fn get_n_last(symbol: &amp;str, bucket_count: u32) -&gt; BoxedBuckets {\n    let req_count = bucket_count_to_req_count(bucket_count);\n    let uris = (0..req_count)\n        .map(|page_ix| make_uri(symbol, page_ix))\n        .collect();\n\n    let responses = batched_throttle(uris);\n\n    let mut core = Core::new().unwrap();\n    let boxed_buckets = {\n        let futures = responses.into_iter().map(response_to_buckets);\n        let future = stream::futures_ordered(futures).collect();\n        let groups_of_buckets = core.run(future).unwrap();\n        Box::new(\n            groups_of_buckets\n                .into_iter()\n                .flat_map(|bs| bs.into_iter())\n                .rev()\n                .collect(),\n        )\n    };\n\n    return boxed_buckets;\n}\n</code></pre>\n"}, {"tags": ["rust", "file-descriptor", "systems-programming"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1517422247, "post_id": 48547534, "comment_id": 84093489, "body": "This code does <b>not</b> come from <a href=\"https://doc.rust-lang.org/std/process/struct.Command.html\" rel=\"nofollow noreferrer\">the Rust docs for <code>Command</code></a>. Which docs are you referring to?"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1517422870, "last_edit_date": 1517422870, "creation_date": 1517422525, "answer_id": 48548875, "question_id": 48547534, "link": "https://stackoverflow.com/questions/48547534/how-do-i-make-sure-that-file-handle-for-every-child-process-is-released-after/48548875#48548875", "title": "How do I make sure that file handle for every `Child` process is released after every iteration?", "body": "<p>If you read the paragraph immediately after the one you have quoted:</p>\n\n<blockquote>\n  <p>Calling <code>wait</code> (or other functions that wrap around it) will make the parent process wait until the child has actually exited before continuing.</p>\n</blockquote>\n\n<p>In order to call <code>wait</code>, you need to not move <code>stdout</code> out of <code>Child</code>:</p>\n\n<pre><code>let echo_out = echo_child.stdout.take().expect(\"failed to open 'echo' stdout\");\n\n// ...\n\necho_child.wait().expect(\"Couldn't wait for echo child\");\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/35093869/155423\">Kill child process while waiting for it</a></li>\n</ul>\n"}], "owner": {"reputation": 23, "user_id": 9295715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7e6836be73e8fc82b3a92ed8d7e33f00?s=128&d=identicon&r=PG&f=1", "display_name": "rusty doe", "link": "https://stackoverflow.com/users/9295715/rusty-doe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 150, "favorite_count": 0, "accepted_answer_id": 48548875, "answer_count": 1, "score": 1, "last_activity_date": 1517422870, "creation_date": 1517417970, "last_edit_date": 1517422541, "question_id": 48547534, "link": "https://stackoverflow.com/questions/48547534/how-do-i-make-sure-that-file-handle-for-every-child-process-is-released-after", "title": "How do I make sure that file handle for every `Child` process is released after every iteration?", "body": "<p>I have the following program taken <a href=\"https://doc.rust-lang.org/std/process/struct.Command.html\" rel=\"nofollow noreferrer\">from the Rust docs for <code>std::process::Command</code></a>. It stops working after some iterations. </p>\n\n<pre><code>use std::process::Command;\nuse std::process::Stdio;\n\nfn main() {\n    loop {\n        let mut echo_child = Command::new(\"echo\")\n            .arg(\"oh no a tpyo\")\n            .stdout(Stdio::piped())\n            .spawn()\n            .expect(\"failed to start 'echo'\");\n\n        let echo_out = echo_child.stdout.expect(\"failed to open 'echo' stdout\");\n\n        let sed_child = Command::new(\"sed\")\n            .arg(\"s/tpyo/typo/\")\n            .stdin(Stdio::from(echo_out))\n            .stdout(Stdio::piped())\n            .spawn()\n            .expect(\"failed to start 'sed'\");\n\n        let sed_out = sed_child\n            .wait_with_output()\n            .expect(\"failed to wait on 'sed'\");\n        let sed_out_slice = sed_out.stdout.as_slice();\n        assert_eq!(b\"oh no a typo\\n\", sed_out_slice);\n        println!(\"out: {:?}\", String::from_utf8_lossy(sed_out_slice));\n    }\n}\n</code></pre>\n\n<p>Every time it crashes, I receive the following output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>thread 'main' panicked at 'failed to start 'sed': Error { repr: Os { code: 35, message: \"Resource temporarily unavailable\" } }', src/libcore/result.rs:906:4\n</code></pre>\n\n<p>According to <a href=\"https://doc.rust-lang.org/std/process/struct.Child.html\" rel=\"nofollow noreferrer\">the docs for <code>Child</code></a> (where I took this program from), it says:</p>\n\n<blockquote>\n  <p>There is no implementation of <code>Drop</code> for child processes, so if you do\n  not ensure the <code>Child</code> has exited then it will continue to run, even\n  after the <code>Child</code> handle to the child process has gone out of scope.</p>\n</blockquote>\n\n<p>How do I make sure that file handle for every <code>Child</code> process is released after every iteration?</p>\n"}, {"tags": ["rust", "llvm"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1517423080, "post_id": 48547475, "comment_id": 84093907, "body": "<code>test.rust</code> \u2014 FWIW, the extension is <code>.rs</code>."}], "answers": [{"tags": [], "owner": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "is_accepted": false, "score": 6, "last_activity_date": 1517423667, "last_edit_date": 1592644375, "creation_date": 1517423667, "answer_id": 48549193, "question_id": 48547475, "link": "https://stackoverflow.com/questions/48547475/how-to-add-stack-canaries-to-rust-executables/48549193#48549193", "title": "How to add Stack Canaries to Rust executables?", "body": "<p>Currently, this isn't supported:</p>\n<blockquote>\n<p>We updated LLVM so there's support for this [safe stack attribute] in our LLVM, and I think that turning this on by default probably wants some investigation and likely an RFC first, so I'm going to close this for now.</p>\n<p>-- alexcrichton <a href=\"https://github.com/rust-lang/rust/issues/26612\" rel=\"noreferrer\">https://github.com/rust-lang/rust/issues/26612</a></p>\n</blockquote>\n<p>I'm not able to find an RFC for this feature.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1517424300, "last_edit_date": 1517424300, "creation_date": 1517423680, "answer_id": 48549198, "question_id": 48547475, "link": "https://stackoverflow.com/questions/48547475/how-to-add-stack-canaries-to-rust-executables/48549198#48549198", "title": "How to add Stack Canaries to Rust executables?", "body": "<p>You cannot use LLVM's SafeStack right now.</p>\n\n<p><code>-fsanitize=safe-stack</code> is a <em>Clang</em> command line option, not necessarily an LLVM one. This likely explains why you get the error you do.</p>\n\n<p>SafeStack support was originally brought up in <a href=\"https://github.com/rust-lang/rust/issues/26612\" rel=\"noreferrer\">issue 26612</a>, but enabling it was deferred until more investigation could be performed.</p>\n\n<p>Since SafeStack is a sanitizer, the next thing to follow would be <a href=\"https://github.com/rust-lang/rust/issues/39699\" rel=\"noreferrer\">issue 39699</a>, the tracking issue for more sanitizers. Only a few sanitizers and platforms are currently supported. It might be as \"simple\" as adding it to a list and  creating a PR to enable it.</p>\n\n<hr>\n\n<p>That being said, I believe Rust does have <em>some</em> amount of stack protection. For example, <a href=\"https://github.com/rust-lang/rust/issues/47863\" rel=\"noreferrer\">this recent issue</a> talks about how some upcoming changes to glibc are going to affect Rust's stack guard calculations.</p>\n"}], "owner": {"reputation": 1595, "user_id": 158703, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/10236360c347906897eba1a138891a50?s=128&d=identicon&r=PG", "display_name": "CalumMcCall", "link": "https://stackoverflow.com/users/158703/calummccall"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 768, "favorite_count": 0, "accepted_answer_id": 48549198, "answer_count": 2, "score": 8, "last_activity_date": 1517424300, "creation_date": 1517417765, "last_edit_date": 1517423058, "question_id": 48547475, "link": "https://stackoverflow.com/questions/48547475/how-to-add-stack-canaries-to-rust-executables", "title": "How to add Stack Canaries to Rust executables?", "body": "<p>I'm trying to harden some executables in a project I'm working on. To test, I'm using a hello world program, and checking it with <a href=\"https://github.com/slimm609/checksec.sh\" rel=\"nofollow noreferrer\">checksec</a>, which reports that there are no canaries. I'm very new to Rust, and the lack of information on Google makes me feel I'm missing something obvious.</p>\n\n<p>With GCC, it's a simple compiler flag: <code>-fstack-protector-all</code>. The closest thing I've found for LLVM is <a href=\"https://clang.llvm.org/docs/SafeStack.html\" rel=\"nofollow noreferrer\">safe stack</a>. However, that doesn't seem to be recognized by the Rust compiler when I try to pass it through to LLVM. For example:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rustc -C llvm-args=\"-fsanitize=safe-stack\" -C link-arg=\"-fsanitize=safe-stack\" test.rust\n</code></pre>\n\n<p>Results in</p>\n\n<blockquote>\n  <p>rustc: Unknown command line\n  argument '-fsanitize=safe-stack'.  Try: 'rustc -help' rustc: Did you\n  mean '-spp-no-call'?</p>\n</blockquote>\n\n<p>I'm using Rust 1.23.0. I'm trying to add these canaries not just on x86_64, but also on armeabi-v7a, in case that's relevant. </p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1517411574, "post_id": 48545113, "comment_id": 84086345, "body": "<i>How might this be implemented in plain Rust</i> \u2014 it cannot, which is why the feature is being added. I&#39;ll let you figure out how to express it in C++ ;-)"}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1517415102, "post_id": 48545113, "comment_id": 84088828, "body": "@Shepmaster It&#39;s possible, but it requires a rewrite of the nice generator to an ugly state machine. My answer shows an example."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1517415348, "post_id": 48545113, "comment_id": 84088988, "body": "@user4815162342 well, yes, in this specific case, but not in the general case (one with a closure)."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1517415523, "post_id": 48545113, "comment_id": 84089103, "body": "@Shepmaster: well, any closure can be rewritten as a struct :)"}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1517427391, "post_id": 48545113, "comment_id": 84096235, "body": "@Shepmaster has a point, though - on the API level, returning <code>impl Generator</code> is in fact <i>not</i> completely equivalent to returning a concrete type that implements <code>Generator</code>. The return type must be public and must be named, and cannot be easily replaced with a closure later. I&#39;ve added a bit about that to my answer."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517427457, "post_id": 48545113, "comment_id": 84096269, "body": "@MatthieuM. true, but you cannot then implement the <code>Fn*</code> traits that many functions expect in stable Rust. So while you can write code that performs the same actions as a closure, you can&#39;t then use the struct in the same locations as a closure is expected."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 11, "last_activity_date": 1566242732, "last_edit_date": 1566242732, "creation_date": 1517410590, "answer_id": 48545113, "question_id": 48545035, "link": "https://stackoverflow.com/questions/48545035/what-does-impl-mean-when-used-as-the-argument-type-or-return-type-of-a-functio/48545113#48545113", "title": "What does `impl` mean when used as the argument type or return type of a function?", "body": "<p>This is the new <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1522-conservative-impl-trait.md\" rel=\"noreferrer\"><code>impl Trait</code></a> syntax which allows the programmer to avoid naming generic types. The feature is available as of <a href=\"https://blog.rust-lang.org/2018/05/10/Rust-1.26.html\" rel=\"noreferrer\">Rust 1.26</a>.</p>\n\n<p>Here, it is used in <em>return position</em> to say \"the type returned will implement this trait, and that's all I'm telling you\". In this case, note that all return paths of the function must return the exact same concrete type.</p>\n\n<p>The syntax can also be used in <em>argument position</em>, in which case the caller decides what concrete type to pass.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/39482131/155423\">Using impl Trait in Trait definition</a></li>\n<li><a href=\"https://stackoverflow.com/q/47514930/155423\">What are the differences between an impl trait argument and generic function parameter?</a></li>\n<li><a href=\"https://stackoverflow.com/q/47929824/155423\">What makes `impl Trait` as an argument &quot;universal&quot; and as a return value &quot;existential&quot;?</a></li>\n<li><a href=\"https://stackoverflow.com/q/27535289/155423\">What is the correct way to return an Iterator (or any other trait)?</a></li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 25756, "user_id": 39648, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/0d9ffb2252f073517660f2d0bf71d0db?s=128&d=identicon&r=PG", "display_name": "Autodidact", "link": "https://stackoverflow.com/users/39648/autodidact"}, "edited": false, "score": 0, "creation_date": 1517415518, "post_id": 48546606, "comment_id": 84089099, "body": "Answers the second part of my question perfectly, thanks!"}], "tags": [], "owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "is_accepted": false, "score": 4, "last_activity_date": 1566243157, "last_edit_date": 1566243157, "creation_date": 1517415057, "answer_id": 48546606, "question_id": 48545035, "link": "https://stackoverflow.com/questions/48545035/what-does-impl-mean-when-used-as-the-argument-type-or-return-type-of-a-functio/48546606#48546606", "title": "What does `impl` mean when used as the argument type or return type of a function?", "body": "<blockquote>\n  <p>What does <code>impl</code> mean?</p>\n</blockquote>\n\n<p>As Matthieu explained, <code>impl X</code> means \"return a concrete implementation of trait <code>X</code>\". Without this you have the choice of returning a concrete type that implements the trait, e.g. an <code>UpToImpl</code>, or erasing the type by returning a <code>Box&lt;Generator&gt;</code>. The former requires exposing the type, while the latter carries the run-time cost of dynamic allocation and virtual dispatch. More importantly, and this is the clincher for the generator case, the former approach precludes returning a <em>closure</em>, because closures return values of anonymous types.</p>\n\n<blockquote>\n  <p>How might this be implemented in plain Rust or C++?</p>\n</blockquote>\n\n<p>If you mean how to implement <code>up_to</code>, and you want to do it without incurring allocation overhead, you have to give up using a closure and manually rewrite the generator into a state machine that implements the <code>Generator</code> trait:</p>\n\n<pre><code>#![feature(generator_trait)]\nuse std::{\n    ops::{Generator, GeneratorState},\n    pin::Pin,\n};\n\npub struct UpToImpl {\n    limit: u64,\n    x: u64,\n}\n\nimpl Generator for UpToImpl {\n    type Yield = u64;\n    type Return = u64;\n\n    fn resume(mut self: Pin&lt;&amp;mut Self&gt;) -&gt; GeneratorState&lt;u64, u64&gt; {\n        let x = self.x;\n        if x &lt; self.limit {\n            self.x += 1;\n            GeneratorState::Yielded(x)\n        } else {\n            GeneratorState::Complete(self.limit)\n        }\n    }\n}\n\npub fn up_to(limit: u64) -&gt; UpToImpl {\n    UpToImpl { x: 0, limit }\n}\n\nfn main() {\n    let mut v = Box::pin(up_to(3));\n    println!(\"{:?}\", v.as_mut().resume());\n    println!(\"{:?}\", v.as_mut().resume());\n    println!(\"{:?}\", v.as_mut().resume());\n    println!(\"{:?}\", v.as_mut().resume());\n}\n</code></pre>\n\n<p>This kind of transformation is essentially what the Rust compiler does behind the scenes when given a closure that contains <code>yield</code>, except that the generated type equivalent to <code>UpToImpl</code> is anonymous. (A similar but much simpler transformation is used to convert ordinary closures to values of anonymous types that implement one of the <code>Fn</code> traits.)</p>\n\n<p>There is another difference between returning <code>impl Generator</code> and a concrete type. When returning <code>UpToImpl</code>, that type has to be public, and thus becomes part of the function signature. For example, a caller is allowed to do this:</p>\n\n<pre><code>let x: UpToImpl = up_to(10);\n</code></pre>\n\n<p>That code will break if <code>UpToImpl</code> is ever renamed, or if you decide to switch to using a generator closure.</p>\n\n<p>The <code>up_to</code> in this answer compiles even when changed to return <code>impl Generator</code>, so once impl trait is made stable, that will be a better option for its return type. In that case, the caller cannot rely or refer to the exact return type, and it can be switched between <em>any</em> type that implements the trait, including the anonymous closure, without loss of source-level backward compatibility.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/16421033/155423\">Lazy sequence generation in Rust</a></li>\n</ul>\n"}], "owner": {"reputation": 25756, "user_id": 39648, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/0d9ffb2252f073517660f2d0bf71d0db?s=128&d=identicon&r=PG", "display_name": "Autodidact", "link": "https://stackoverflow.com/users/39648/autodidact"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1132, "favorite_count": 2, "accepted_answer_id": 48545113, "answer_count": 2, "score": 9, "last_activity_date": 1566243157, "creation_date": 1517410364, "last_edit_date": 1517413963, "question_id": 48545035, "link": "https://stackoverflow.com/questions/48545035/what-does-impl-mean-when-used-as-the-argument-type-or-return-type-of-a-functio", "title": "What does `impl` mean when used as the argument type or return type of a function?", "body": "<p><a href=\"https://boats.gitlab.io/blog/post/2018-01-25-async-i-self-referential-structs/\" rel=\"noreferrer\">I read this code</a>:</p>\n\n<pre><code>pub fn up_to(limit: u64) -&gt; impl Generator&lt;Yield = u64, Return = u64&gt; {\n    move || {\n        for x in 0..limit {\n             yield x;\n        }\n        return limit;\n    }\n}\n</code></pre>\n\n<p>What does <code>impl</code> mean? How might this be implemented in plain Rust or C++?</p>\n"}, {"tags": ["hash", "rust"], "comments": [{"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1517370208, "post_id": 48533445, "comment_id": 84063700, "body": "This is great, it lets you use <a href=\"https://doc.rust-lang.org/stable/std/io/fn.copy.html\" rel=\"nofollow noreferrer\"><code>io::copy</code></a>!"}], "answers": [{"comments": [{"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1517390842, "post_id": 48534068, "comment_id": 84072283, "body": "Any reason why you didn&#39;t implement <code>Write</code> directly?"}, {"owner": {"reputation": 444, "user_id": 3422156, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/29af89a0e8be5cf63546304d02c8e2fb?s=128&d=identicon&r=PG&f=1", "display_name": "spease", "link": "https://stackoverflow.com/users/3422156/spease"}, "edited": false, "score": 0, "creation_date": 1517518835, "post_id": 48534068, "comment_id": 84139950, "body": "Good point about write_all. Is there a particular reason that this isn&#39;t integrated into the std hash library so you can use a reader/writer with any hash?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1517528583, "post_id": 48534068, "comment_id": 84143912, "body": "@Stefan just because it doesn&#39;t really feel like the &quot;right&quot; thing to do for a hasher."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 444, "user_id": 3422156, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/29af89a0e8be5cf63546304d02c8e2fb?s=128&d=identicon&r=PG&f=1", "display_name": "spease", "link": "https://stackoverflow.com/users/3422156/spease"}, "edited": false, "score": 0, "creation_date": 1517528686, "post_id": 48534068, "comment_id": 84143936, "body": "@spease If you cannot find an existing one, I&#39;d say you should publish your shim to crates.io. It can wrap any type that implements <code>Hasher</code> and be generally useful. I don&#39;t know the reason, but having easily accessible crates lowers the rationale to have it in the standard library."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1602726030, "last_edit_date": 1602726030, "creation_date": 1517369934, "answer_id": 48534068, "question_id": 48533445, "link": "https://stackoverflow.com/questions/48533445/proper-way-to-hash-a-reader-in-rust/48534068#48534068", "title": "Proper way to hash a reader in Rust?", "body": "<p>That's what I would do, although I'd also implement <code>write_all</code> as it can be equally as simple:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use std::{hash::Hasher, io};\n\nstruct HashWriter&lt;T: Hasher&gt;(T);\n\nimpl&lt;T: Hasher&gt; io::Write for HashWriter&lt;T&gt; {\n    fn write(&amp;mut self, buf: &amp;[u8]) -&gt; io::Result&lt;usize&gt; {\n        self.0.write(buf);\n        Ok(buf.len())\n    }\n\n    fn write_all(&amp;mut self, buf: &amp;[u8]) -&gt; io::Result&lt;()&gt; {\n        self.write(buf).map(|_| ())\n    }\n\n    fn flush(&amp;mut self) -&gt; io::Result&lt;()&gt; {\n        Ok(())\n    }\n}\n</code></pre>\n<p>You can then use it like:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use std::fs::File;\nuse twox_hash::XxHash64;\n\nfn main() {\n    let mut f = File::open(&quot;/etc/hosts&quot;).expect(&quot;Unable to open file&quot;);\n\n    let hasher = XxHash64::with_seed(0);\n    let mut hw = HashWriter(hasher);\n\n    io::copy(&amp;mut f, &amp;mut hw).expect(&quot;Unable to copy data&quot;);\n\n    let hasher = hw.0;\n    println!(&quot;{}&quot;, hasher.finish());\n}\n</code></pre>\n<hr />\n<p>Disclaimer: I am the author / porter of twox-hash.</p>\n"}], "owner": {"reputation": 444, "user_id": 3422156, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/29af89a0e8be5cf63546304d02c8e2fb?s=128&d=identicon&r=PG&f=1", "display_name": "spease", "link": "https://stackoverflow.com/users/3422156/spease"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 575, "favorite_count": 0, "accepted_answer_id": 48534068, "answer_count": 1, "score": 3, "last_activity_date": 1602726030, "creation_date": 1517364988, "last_edit_date": 1517369639, "question_id": 48533445, "link": "https://stackoverflow.com/questions/48533445/proper-way-to-hash-a-reader-in-rust", "title": "Proper way to hash a reader in Rust?", "body": "<p>I was attempting to use <a href=\"https://crates.io/crates/twox-hash\" rel=\"nofollow noreferrer\">twox-hash</a> to generate a hash for a file, as it seemed to be the fastest hash implementation around  and security is not a concern for this implementation.</p>\n\n<p>To get it to work with a reader, I implemented a wrapper struct that implemented the <code>Write</code> trait and directly called <code>XxHash::write</code> from the <code>Hash</code> trait. Is there a more elegant or standard way of doing this?</p>\n\n<pre><code>#[derive(Deref)]\nstruct HashWriter&lt;T: Hasher&gt;(T);\n\nimpl&lt;T: Hasher&gt; std::io::Write for HashWriter&lt;T&gt; {\n    fn write(&amp;mut self, buf: &amp;[u8]) -&gt; std::io::Result&lt;usize&gt; {\n        self.0.write(buf);\n        Ok(buf.len())\n    }\n\n    fn flush(&amp;mut self) -&gt; std::io::Result&lt;()&gt; {\n        Ok(())\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "hyper"], "answers": [{"comments": [{"owner": {"reputation": 5962, "user_id": 3873510, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/YpJMi.jpg?s=128&g=1", "display_name": "Paul Razvan Berg", "link": "https://stackoverflow.com/users/3873510/paul-razvan-berg"}, "edited": false, "score": 0, "creation_date": 1583676891, "post_id": 48532379, "comment_id": 107189960, "body": "Same for &quot;type&quot;."}], "tags": [], "owner": {"reputation": 769, "user_id": 5433623, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-0jplvxnVu04/AAAAAAAAAAI/AAAAAAAAGvQ/VLbN9V7SMJ8/photo.jpg?sz=128", "display_name": "Matt Brubeck", "link": "https://stackoverflow.com/users/5433623/matt-brubeck"}, "is_accepted": true, "score": 8, "last_activity_date": 1517356718, "creation_date": 1517356718, "answer_id": 48532379, "question_id": 48532078, "link": "https://stackoverflow.com/questions/48532078/rust-expected-identifier-found-keyword-on-importing/48532379#48532379", "title": "Rust &quot;expected identifier, found keyword&quot; on importing", "body": "<p><code>loop</code> is a <a href=\"https://doc.rust-lang.org/reference/keywords.html\" rel=\"noreferrer\">keyword</a> in Rust, which means it is handled specially by the parser and can't be used as an identifier.</p>\n"}], "owner": {"reputation": 111, "user_id": 9281251, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7958d11e4ddf4152d262cd013048b880?s=128&d=identicon&r=PG&f=1", "display_name": "zep", "link": "https://stackoverflow.com/users/9281251/zep"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3247, "favorite_count": 0, "accepted_answer_id": 48532379, "answer_count": 1, "score": 2, "last_activity_date": 1517356718, "creation_date": 1517354436, "question_id": 48532078, "link": "https://stackoverflow.com/questions/48532078/rust-expected-identifier-found-keyword-on-importing", "title": "Rust &quot;expected identifier, found keyword&quot; on importing", "body": "<p>I have two files, loop.rs contains a function request to instantiate a client and get a body of a webpage. I want to export request to main. I know that to export I need to <code>mod file_to_import</code> and then <code>use file_to_import::function_to_use</code> according to <a href=\"https://stackoverflow.com/questions/26224947/rust-basic-imports-includes/26225057\">this post</a></p>\n\n<pre><code>src/\n   main.rs\n   loop.rs\n\n\n// loop.rs -&gt;\n//crates\nextern crate futures;\nextern crate hyper;\nextern crate tokio_core;\nuse std::io::{self, Write};\nuse self::futures::{Future, Stream};\nuse self::hyper::Client;\nuse self::tokio_core::reactor::Core;\n\n\n//request function to be exported to main.rs\n\npub fn request(url: &amp;str)  {\n   let mut core = Core::new().unwrap();\n   let client = Client::new(&amp;core.handle());\n   let uri = url.parse().unwrap();\n   let work = client.get(uri).and_then(|res| {\n      println!(\"Response: {}\", res.status());\n\n      res.body().for_each(|chunk| {\n         io::stdout()\n         .write_all(&amp;chunk)\n         .map_err(From::from)\n     })\n});\ncore.run(work).unwrap();\n}\n\n\n// main.rs -&gt;\nmod loop;\nuse loop::request;\n\nfn main(){\n   request(\"http://www.google.com\");\n}\n</code></pre>\n\n<p>In main.rs I want to use request but when I build this I get the following errors</p>\n\n<pre><code>error: expected identifier, found keyword `loop`\n --&gt; src/main.rs:1:5\n  |\n1 | mod loop;\n  |     ^^^^ expected identifier, found keyword\n\nerror: expected identifier, found keyword `loop`\n --&gt; src/server.rs:1:5\n  |\n1 | use loop::{request};\n  |     ^^^^ expected identifier, found keyword\n\nerror: expected identifier, found keyword `loop`\n --&gt; src/main.rs:4:5\n  |\n4 | use loop::*;\n  |     ^^^^ expected identifier, found keyword\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 1055, "user_id": 4071245, "user_type": "registered", "accept_rate": 29, "profile_image": "https://i.stack.imgur.com/XCJqT.jpg?s=128&g=1", "display_name": "Aravindh S", "link": "https://stackoverflow.com/users/4071245/aravindh-s"}, "edited": false, "score": 0, "creation_date": 1517328757, "post_id": 48525715, "comment_id": 84046651, "body": "I would like to know why the question was down voted. I am unable to see who down voted or why it was down voted. If there is a mistake in the way I asked the question, I will correct it."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 2, "creation_date": 1517330162, "post_id": 48525715, "comment_id": 84047527, "body": "I think that&#39;s because you did not provide any code for your function. Edit the question to show what you&#39;ve tried so far, and that will be ok I guess. Specifically, you need to add an MVCE."}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 3, "creation_date": 1517330479, "post_id": 48525715, "comment_id": 84047727, "body": "You say you have trouble, but not what kind of trouble. Compiler errors? Incorrect behavior?"}, {"owner": {"reputation": 1055, "user_id": 4071245, "user_type": "registered", "accept_rate": 29, "profile_image": "https://i.stack.imgur.com/XCJqT.jpg?s=128&g=1", "display_name": "Aravindh S", "link": "https://stackoverflow.com/users/4071245/aravindh-s"}, "edited": false, "score": 0, "creation_date": 1517339252, "post_id": 48525715, "comment_id": 84052677, "body": "@all: Thank you for the guidance. I will update the question now."}], "answers": [{"comments": [{"owner": {"reputation": 1055, "user_id": 4071245, "user_type": "registered", "accept_rate": 29, "profile_image": "https://i.stack.imgur.com/XCJqT.jpg?s=128&g=1", "display_name": "Aravindh S", "link": "https://stackoverflow.com/users/4071245/aravindh-s"}, "edited": false, "score": 0, "creation_date": 1517497811, "post_id": 48550567, "comment_id": 84127778, "body": "This is a really detailed explanation. Thanks a lot for the suggestions as well. I will update my code accordingly. Once again thanks."}], "tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 2, "last_activity_date": 1517429041, "creation_date": 1517429041, "answer_id": 48550567, "question_id": 48525715, "link": "https://stackoverflow.com/questions/48525715/implementing-add-all-at-index-in-a-singly-linked-list/48550567#48550567", "title": "Implementing add_all_at_index in a singly-linked list", "body": "<p>First, the solution:</p>\n\n<pre><code>pub fn add_all_at_index(&amp;mut self, list_to_add: List&lt;T&gt;, index: usize) {\n    if index &gt; 0 {\n        let tail = {\n            let nth_node = self.get_nth_node_mut(index).take();\n            nth_node.map(|node| {\n                let current_next = node.next.take();\n                node.next = list_to_add.head.map(|node| Box::new(node));\n                current_next\n            })\n        };\n\n        if let Some(current_next) = tail {\n            let n = self.length();\n            let last_node = self.get_nth_node_mut(n);\n            last_node.map(|node| node.next = current_next);\n        }\n    } else {\n        self.head = list_to_add.head\n    }\n}\n</code></pre>\n\n<p>Ugly, right? Right. Getting this working required several changes:</p>\n\n<ul>\n<li><p>I moved step 3 (reattaching the tail of the list) outside of the closure passed to <code>map</code>, so that <code>nth_node</code> (which borrows <code>self</code>) wouldn't still be alive when you try to borrow <code>self</code> again to get the length.</p></li>\n<li><p>I therefore had to save <code>current_next</code>, so I had the closure return it, and stored the result of <code>map</code> in a new variable called <code>tail</code>. So <code>tail</code> is an <code>Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt;</code>.</p></li>\n<li><p>I wrapped the tail-reattaching part in an <code>if let</code> to destructure <code>tail</code> and get <code>current_next</code> back out.</p></li>\n<li><p>Then, I separated <code>self.get_nth_node_mut(self.length())</code> into two statements to resolve the remaining borrowing error.</p></li>\n</ul>\n\n<hr>\n\n<p>Some followup suggestions:</p>\n\n<ul>\n<li><p>Using <code>.map()</code> for side effects and then ignoring the return value is unidiomatic. Use <code>if let</code> to run code on the content of an <code>Option</code>.</p></li>\n<li><p>You're ignoring all the <code>None</code> cases. If you try to call <code>add_all_at_index</code> with an <code>index</code> that is out of range, nothing happens to <code>self</code> and <code>list_to_add</code> is just lost. The function should probably return a <code>Result</code> of some kind, or perhaps a <code>bool</code>.</p></li>\n<li><p><code>.take()</code> is for getting an <code>Option&lt;T&gt;</code> out of a <code>&amp;mut Option&lt;T&gt;</code>. It doesn't do anything useful to an <code>Option&lt;&amp;mut T&gt;</code>.</p></li>\n<li><p><code>|node| Box::new(node)</code> is just <code>Box::new</code>.</p></li>\n<li><p>Because the first node is boxed but none of the others are, you will have to write a lot of special case code, and there's not a transparent conversion between a Node and a List.</p></li>\n<li><p>Using <code>get_nth_node_mut</code> in the implementation of <code>add_all_at_index</code> almost forces you to traverse the list twice. Because it's implemented on <code>List</code> instead of on <code>Node</code>, you can't easily get a reference to the last element of the list, so you end up calling <code>length()</code> (making the total number of traversals 3) and then <code>get_nth_node_mut</code> again to dig up the last element.</p></li>\n</ul>\n\n<p>Some of the ugliness can be mitigated by careful interface design -- for instance, this method becomes cleaner if <code>List</code> has a <code>split_at_index</code> method -- but some of it is just due to the fact that <em>linked lists</em> are ugly. <em>Particularly</em> ugly in Rust, because the language forbids shared mutable references, even temporarily. You would have to use <code>unsafe</code> to write many linked list operations in Rust the same way you would in C.</p>\n\n<p>If you have not already, please read <a href=\"http://cglab.ca/~abeinges/blah/too-many-lists/book/\" rel=\"nofollow noreferrer\">Learning Rust With Entirely Too Many Linked Lists</a>. This book addresses many of the subtleties that arise when you try to implement a linked list in Rust.</p>\n"}], "owner": {"reputation": 1055, "user_id": 4071245, "user_type": "registered", "accept_rate": 29, "profile_image": "https://i.stack.imgur.com/XCJqT.jpg?s=128&g=1", "display_name": "Aravindh S", "link": "https://stackoverflow.com/users/4071245/aravindh-s"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 74, "favorite_count": 0, "accepted_answer_id": 48550567, "answer_count": 1, "score": 3, "last_activity_date": 1517429041, "creation_date": 1517328177, "last_edit_date": 1517340756, "question_id": 48525715, "link": "https://stackoverflow.com/questions/48525715/implementing-add-all-at-index-in-a-singly-linked-list", "title": "Implementing add_all_at_index in a singly-linked list", "body": "<p>I am implementing a singly-linked list. I want to add a method <code>add_all_at_index</code> which will take a new list and an index, insert the new list at the specified index and rearrange the tail of the current list to follow after the new list.</p>\n\n<p>Assume the current list is is <code>[1,2,3,4,5]</code>. Calling <code>add_all_at_index</code> at position <code>2</code> with list <code>[8,9,10]</code> should result in <code>[1,2,8,9,10,3,4,5]</code>.</p>\n\n<p>I'm especially having trouble in assigning the old tail of the list after the new list. I do not know how to append <code>[3,4,5]</code> to the node with value <code>10</code> in the list.</p>\n\n<p>The algorithm I am trying to implement is</p>\n\n<ul>\n<li>Save the current next of the node at (index - 1) in a variable called <code>current_next</code></li>\n<li>Set the next of node at (index - 1) to the head of the list</li>\n<li>Iterate to the last of the newly added list and set its next to the <code>current_next</code>.</li>\n</ul>\n\n<p>I am having trouble accomplishing the last step. Below is the code I came up with:</p>\n\n<pre><code>use std::fmt::*;\n\nfn main() {\n    let list: List&lt;i32&gt; = List::new();\n}\n\n#[derive(PartialEq, Debug)]\npub struct Node&lt;T: Debug&gt; {\n    pub element: T,\n    pub next: Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt;,\n}\n\n#[derive(PartialEq, Debug)]\npub struct List&lt;T: Debug&gt; {\n    pub head: Option&lt;Node&lt;T&gt;&gt;,\n}\n\nimpl&lt;T: Debug&gt; List&lt;T&gt; {\n    pub fn new() -&gt; Self {\n        List { head: None }\n    }\n\n    pub fn add_all_at_index(&amp;mut self, list_to_add: List&lt;T&gt;, index: usize) {\n        if index &gt; 0 {\n            let nth_node = self.get_nth_node_mut(index).take(); // Gets a mutable reference to node at index\n            nth_node.map(|node| {\n                let current_next = node.next.take(); // I store a reference to the next of nth node,\n                node.next = list_to_add.head.map(|node| Box::new(node));\n\n                // The 3rd step in the algorithm I mentioned above.\n                let last_node = self.get_nth_node_mut(self.length()); // This line does not compile. Getting multiple errors in this line\n                last_node.map(|node| node.next = current_next);\n            });\n        } else {\n            self.head = list_to_add.head\n        }\n    }\n\n    fn get_nth_node_mut(&amp;mut self, n: usize) -&gt; Option&lt;&amp;mut Node&lt;T&gt;&gt; {\n        let mut nth_node = self.head.as_mut();\n        for _ in 0..n {\n            nth_node = match nth_node {\n                None =&gt; return None,\n                Some(node) =&gt; node.next.as_mut().map(|node| &amp;mut **node),\n            }\n        }\n        nth_node\n    }\n\n    pub fn length(&amp;self) -&gt; usize {\n        let mut count = 0;\n        let mut current_node = self.head.as_ref();\n        while let Some(node) = current_node {\n            count = count + 1;\n            current_node = node.next.as_ref().map(|node| &amp;**node)\n        }\n        count\n    }\n}\n</code></pre>\n\n<p>The error I am getting is</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning: unused variable: `list`\n --&gt; src/main.rs:4:9\n  |\n4 |     let list: List&lt;i32&gt; = List::new();\n  |         ^^^^\n  |\n  = note: #[warn(unused_variables)] on by default\n  = note: to avoid this warning, consider using `_list` instead\n\nerror[E0500]: closure requires unique access to `self` but `*self` is already borrowed\n  --&gt; src/main.rs:26:26\n   |\n25 |             let nth_node = self.get_nth_node_mut(index).take(); // Gets a mutable reference to node at index\n   |                            ---- borrow occurs here\n26 |             nth_node.map(|node| {\n   |                          ^^^^^^ closure construction occurs here\n...\n31 |                 let last_node = self.get_nth_node_mut(self.length()); // This line does not compile. Getting multiple errors in this line\n   |                                 ---- borrow occurs due to use of `self` in closure\n...\n34 |         } else {\n   |         - borrow ends here\n\nerror[E0502]: cannot borrow `**self` as immutable because it is also borrowed as mutable\n  --&gt; src/main.rs:31:55\n   |\n31 |                 let last_node = self.get_nth_node_mut(self.length()); // This line does not compile. Getting multiple errors in this line\n   |                                 ----                  ^^^^ immutable borrow occurs here\n   |                                 |\n   |                                 mutable borrow occurs here\n32 |                 last_node.map(|node| node.next = current_next);\n33 |             });\n   |             - mutable borrow ends here\n</code></pre>\n\n<p>Is this even the right approach to implement <code>add_all_at_index</code>?</p>\n\n<p>I even tried implementing an iterator that returns a mutable reference to a node but I was not able to do that either. I have pasted the entire code in a gist at <a href=\"https://gist.github.com/hardvain/32fca033bb61a5e3bf8bbeeb32fbbd5e\" rel=\"nofollow noreferrer\">https://gist.github.com/hardvain/32fca033bb61a5e3bf8bbeeb32fbbd5e</a></p>\n"}, {"tags": ["haskell", "rust", "higher-kinded-types", "type-theory", "parametric-polymorphism"], "comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 8, "creation_date": 1517322605, "post_id": 48523571, "comment_id": 84042240, "body": "I reckon what&#39;s meant by \u201cRust doesn&#39;t support higher-kinded types\u201d is, it can&#39;t <i>abstract</i> over them, i.e. you can&#39;t quantify over type variables of kind <code>* -&gt; *</code> or higher."}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 3, "creation_date": 1517323202, "post_id": 48523571, "comment_id": 84042706, "body": "Yeah, what rust doesn&#39;t have is higher-kinded polymorphism. As usual, people are very sloppy with language in confusing ways."}, {"owner": {"reputation": 1127, "user_id": 6171872, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/2wfQM.jpg?s=128&g=1", "display_name": "StarSheriff", "link": "https://stackoverflow.com/users/6171872/starsheriff"}, "edited": false, "score": 0, "creation_date": 1517323694, "post_id": 48523571, "comment_id": 84043057, "body": "I&#39;m not sure I fully understand what both of you are saying. Do you mean that for example a generic type <code>T</code> has to be a concrete type and cannot be higher kinded itself? Aka. something like <code>struct Baz&lt;T&lt;V&gt;&gt; {}</code> will not work?"}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 4, "creation_date": 1517324398, "post_id": 48523571, "comment_id": 84043599, "body": "I take &quot;higher-kinded type&quot; to mean a type constructor which takes parameters with kinds containing <code>-&gt;</code>s (much as a higher-order function is a function which takes parameters with types containing <code>-&gt;</code>s). By that definition <code>Maybe</code> is <i>not</i> a higher-kinded type, since its one argument is a regular type of kind <code>*</code>."}, {"owner": {"reputation": 1127, "user_id": 6171872, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/2wfQM.jpg?s=128&g=1", "display_name": "StarSheriff", "link": "https://stackoverflow.com/users/6171872/starsheriff"}, "reply_to_user": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1517324772, "post_id": 48523571, "comment_id": 84043830, "body": "@Benjamin Something like a list of Maybes, for example?"}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 2, "creation_date": 1517324918, "post_id": 48523571, "comment_id": 84043939, "body": "@StarSheriff No, because <code>[]</code> is another regular type constructor (its parameter is also kind <code>*</code>). <code>Monad</code> is an example of a higher kinded type class, because its <code>m</code> parameter has a kind of <code>* -&gt; *</code> (<code>Monad :: (* -&gt; *) -&gt; Constraint</code>)."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1517326638, "post_id": 48523571, "comment_id": 84045126, "body": "HKT would allow something like <code>struct Baz&lt;C&lt;_&gt;&gt; { C&lt;A&gt; a; C&lt;B&gt; b; }</code> -- note that the parameter C is not a type, but something that maps types to types. Scala has HKT (if you enable them), and Haskell has them as well."}, {"owner": {"reputation": 549, "user_id": 1524453, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Ed2un.png?s=128&g=1", "display_name": "Federico Sawady", "link": "https://stackoverflow.com/users/1524453/federico-sawady"}, "edited": false, "score": 0, "creation_date": 1517327409, "post_id": 48523571, "comment_id": 84045719, "body": "See <a href=\"https://www.reddit.com/r/rust/comments/2av5tv/why_does_rust_not_have_a_functor_trait/\" rel=\"nofollow noreferrer\">reddit.com/r/rust/comments/2av5tv/&hellip;</a>"}], "answers": [{"tags": [], "owner": {"reputation": 549, "user_id": 1524453, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Ed2un.png?s=128&g=1", "display_name": "Federico Sawady", "link": "https://stackoverflow.com/users/1524453/federico-sawady"}, "is_accepted": false, "score": 9, "last_activity_date": 1517341636, "last_edit_date": 1517341636, "creation_date": 1517324996, "answer_id": 48524623, "question_id": 48523571, "link": "https://stackoverflow.com/questions/48523571/whats-the-difference-between-parametric-polymorphism-and-higher-kinded-types/48524623#48524623", "title": "What&#39;s the difference between parametric polymorphism and higher-kinded types?", "body": "<p>I'm going to resume it: a higher-kinded type is just a type-level higher-order function.</p>\n\n<p>But take a minute:</p>\n\n<p>Consider <code>monad</code> transformers:</p>\n\n<pre><code>newtype StateT s m a :: * -&gt; (* -&gt; *) -&gt; * -&gt; *\n</code></pre>\n\n<p>Here,</p>\n\n<pre><code>- s is the desired type of the state\n- m is a functor, another monad that StateT will wrap\n- a is the return type of an expression of type StateT s m\n</code></pre>\n\n<p>What is the higher-kinded type?</p>\n\n<pre><code>m :: (* -&gt; *)\n</code></pre>\n\n<p>Because takes a type of kind <code>*</code> and returns a kind of type <code>*</code>.</p>\n\n<p>It's like a function on types, that is, a type constructor of kind</p>\n\n<pre><code>* -&gt; *\n</code></pre>\n\n<p>In languages like Java, you can't do</p>\n\n<pre><code>class ClassExample&lt;T, a&gt; {\n    T&lt;a&gt; function()\n}\n</code></pre>\n\n<p>In Haskell T would have kind <code>*-&gt;*</code>, but a Java type (i.e. class) cannot have a type parameter of that kind, a higher-kinded type.</p>\n\n<p>Also, if you don't know, in basic Haskell an expression must have a type that has kind <code>*</code>, that is, a \"concrete type\". Any other type like <code>* -&gt; *</code>.</p>\n\n<p>For instance, you can't create an expression of type <code>Maybe</code>. It has to be types applied to an argument like <code>Maybe Int</code>, <code>Maybe String</code>, etc. In other words, fully applied type constructors.</p>\n"}, {"tags": [], "owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "is_accepted": false, "score": 16, "last_activity_date": 1529675927, "last_edit_date": 1529675927, "creation_date": 1517325212, "answer_id": 48524680, "question_id": 48523571, "link": "https://stackoverflow.com/questions/48523571/whats-the-difference-between-parametric-polymorphism-and-higher-kinded-types/48524680#48524680", "title": "What&#39;s the difference between parametric polymorphism and higher-kinded types?", "body": "<p>A simple example of what Rust can't do is something like Haskell's <code>Functor</code> class.</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>class Functor f where\n    fmap :: (a -&gt; b) -&gt; f a -&gt; f b\n\n-- a couple examples:\ninstance Functor Maybe where\n    -- fmap :: (a -&gt; b) -&gt; Maybe a -&gt; Maybe b\n    fmap _ Nothing  = Nothing\n    fmap f (Just x) = Just (f x)\n\ninstance Functor [] where\n    -- fmap :: (a -&gt; b) -&gt; [a] -&gt; [b]\n    fmap _ []     = []\n    fmap f (x:xs) = f x : fmap f xs\n</code></pre>\n\n<p>Note that the instances are defined on the type constructor, <code>Maybe</code> or <code>[]</code>, instead of the fully-applied type <code>Maybe a</code> or <code>[a]</code>.</p>\n\n<p>This isn't just a parlor trick.  It has a strong interaction with parametric polymorphism. Since the type variables <code>a</code> and <code>b</code> in the type <code>fmap</code> are not constrained by the class definition, instances of <code>Functor</code> cannot change their behavior based on them. This is an incredibly strong property in reasoning about code from types, and where a lot of where the strength of Haskell's type system comes from.</p>\n\n<p>It has one other property - you can write code that's abstract in higher-kinded type variables.  Here's a couple examples:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>focusFirst :: Functor f =&gt; (a -&gt; f b) -&gt; (a, c) -&gt; f (b, c)\nfocusFirst f (a, c) = fmap (\\x -&gt; (x, c)) (f a)\n\nfocusSecond :: Functor f =&gt; (a -&gt; f b) -&gt; (c, a) -&gt; f (c, b)\nfocusSecond f (c, a) = fmap (\\x -&gt; (c, x)) (f a)\n</code></pre>\n\n<p>I admit, those types are beginning to look like abstract nonsense. But they turn out to be really practical when you have a couple helpers that take advantage of the higher-kinded abstraction.</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>newtype Identity a = Identity { runIdentity :: a }\n\ninstance Functor Identity where\n    -- fmap :: (a -&gt; b) -&gt; Identity a -&gt; Identity b\n    fmap f (Identity x) = Identity (f x)\n\nnewtype Const c b = Const { getConst :: c }\n\ninstance Functor (Const c) where\n    -- fmap :: (a -&gt; b) -&gt; Const c a -&gt; Const c b\n    fmap _ (Const c) = Const c\n\nset :: ((a -&gt; Identity b) -&gt; s -&gt; Identity t) -&gt; b -&gt; s -&gt; t\nset f b s = runIdentity (f (\\_ -&gt; Identity b) s)\n\nget :: ((a -&gt; Const a b) -&gt; s -&gt; Const a t) -&gt; s -&gt; a\nget f s = getConst (f (\\x -&gt; Const x) s)\n</code></pre>\n\n<p>(If I made any mistakes in there, can someone just fix them?  I'm reimplementing the most basic starting point of <code>lens</code> from memory without a compiler.)</p>\n\n<p>The functions <code>focusFirst</code> and <code>focusSecond</code> can be passed as the first argument to either <code>get</code> or <code>set</code>, because the type variable <code>f</code> in their types can be unified with the more concrete types in <code>get</code> and <code>set</code>. Being able to abstract over the higher-kinded type variable <code>f</code> allows functions of a particular shape can be used both as setters and getters in arbitrary data types.  This is one of the two core insights that led to the <code>lens</code> library.  It couldn't exist without this kind of abstraction.</p>\n\n<p>(For what it's worth, the other key insight is that defining lenses as a function like that allows composition of lenses to be simple function composition.)</p>\n\n<p>So no, there's more to it than just being able to accept a type variable. The important part is being able to use type variables that correspond to type constructors, rather than some concrete (if unknown) type.</p>\n"}, {"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1517384890, "post_id": 48524700, "comment_id": 84068925, "body": "Note: Rust <i>plans</i> to support a form of higher kinded polymorphism via Generic Associated Types. That is a trait (type-class) can have associated types (to be filled in by the implementer), and the plan is to make them polymorphic. This blog serie by Niko Matsakis describes the feature, which used to be called <a href=\"http://smallcultfollowing.com/babysteps/blog/2016/11/02/associated-type-constructors-part-1-basic-concepts-and-introduction/\" rel=\"nofollow noreferrer\">Associated Type Constructors</a>."}], "tags": [], "owner": {"reputation": 31189, "user_id": 1097780, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a8f01ad795c29c3d05ad26ee47ea6069?s=128&d=identicon&r=PG", "display_name": "Andreas Rossberg", "link": "https://stackoverflow.com/users/1097780/andreas-rossberg"}, "is_accepted": true, "score": 37, "last_activity_date": 1517326391, "last_edit_date": 1517326391, "creation_date": 1517325264, "answer_id": 48524700, "question_id": 48523571, "link": "https://stackoverflow.com/questions/48523571/whats-the-difference-between-parametric-polymorphism-and-higher-kinded-types/48524700#48524700", "title": "What&#39;s the difference between parametric polymorphism and higher-kinded types?", "body": "<p>Some terminology:</p>\n\n<ul>\n<li>The kind <code>*</code> is sometimes called <em>ground</em>. You can think of it as 0th order.</li>\n<li>Any kind of the form <code>* -&gt; * -&gt; ... -&gt; *</code> with at least one arrow is <em>first-order</em>.</li>\n<li>A <em>higher-order</em> kind is one that has a \"nested arrow on the left\", e.g., <code>(* -&gt; *) -&gt; *</code>.</li>\n</ul>\n\n<p>The <em>order</em> essentially is the depth of left-side nesting of arrows, e.g., <code>(* -&gt; *) -&gt; *</code> is second-order, <code>((* -&gt; *) -&gt; *) -&gt; *</code> is third-order, etc. (FWIW, the same notion applies to types themselves: a second-order function is one whose type has e.g. the form <code>(A -&gt; B) -&gt; C</code>.)</p>\n\n<p>Types of non-ground kind (order > 0) are also called type <em>constructors</em> (and some literature only refers to types of ground kind as \"types\"). A higher-kinded type (constructor) is one whose kind is higher-order (order > 1).</p>\n\n<p>Consequently, a higher-kinded type is one that takes an argument of non-ground kind. That would require type variables of non-ground kind, which are not supported in many languages. Examples in Haskell:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>type Ground = Int\ntype FirstOrder a = Maybe a  -- a is ground\ntype SecondOrder c = c Int   -- c is a first-order constructor\ntype ThirdOrder c = c Maybe  -- c is second-order\n</code></pre>\n\n<p>The latter two are higher-kinded.</p>\n\n<p>Likewise, <em>higher-kinded polymorphism</em> describes the presence of (parametrically) polymorphic values that abstract over types that are not ground. Again, few languages support that. Example:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>f : forall c. c Int -&gt; c Int  -- c is a constructor\n</code></pre>\n\n<p>The statement that Rust supports parametric polymorphism \"instead\" of higher-kinded types does not make sense. Both are different dimensions of parameterisation that complement each other. And when you combine both you have higher-kinded polymorphism.</p>\n"}, {"tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 9, "last_activity_date": 1517326099, "last_edit_date": 1517326099, "creation_date": 1517325476, "answer_id": 48524784, "question_id": 48523571, "link": "https://stackoverflow.com/questions/48523571/whats-the-difference-between-parametric-polymorphism-and-higher-kinded-types/48524784#48524784", "title": "What&#39;s the difference between parametric polymorphism and higher-kinded types?", "body": "<p>Parametric polymorphism just refers to the property that the function cannot make use of any particular feature of a type (or kind) in its definition; it is a complete blackbox. The standard example is <code>length :: [a] -&gt; Int</code>, which only works with the <em>structure</em> of the list, not the particular values stored in the list.</p>\n\n<p>The standard example of HKT is the <code>Functor</code> class, where <code>fmap :: (a -&gt; b) -&gt; f a -&gt; f b</code>. Unlike <code>length</code>, where <code>a</code> has kind <code>*</code>, <code>f</code> has kind <code>* -&gt; *</code>. <code>fmap</code> <em>also</em> exhibits parametric polymorphism, because <code>fmap</code> cannot make use of any property of either <code>a</code> or <code>b</code> in its definition.</p>\n\n<p><code>fmap</code> exhibits ad hoc polymorphism as well, because the definition <em>can</em> be tailored to the specific type constructor <code>f</code> for which it is defined. That is, there are separate definitions of <code>fmap</code> for <code>f ~ []</code>, <code>f ~ Maybe</code>, etc. The difference is that <code>f</code> is \"declared\" as part of the typeclass definition, rather than just being part of the definition of <code>fmap</code>. (Indeed, typeclasses were added to support some degree of ad hoc polymorphism. Without type classes, <em>only</em> parametric polymorphism exists. You can write a function that supports <em>one</em> concrete type or <em>any</em> concrete type, but not some smaller collection in between.)</p>\n"}], "owner": {"reputation": 1127, "user_id": 6171872, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/2wfQM.jpg?s=128&g=1", "display_name": "StarSheriff", "link": "https://stackoverflow.com/users/6171872/starsheriff"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3310, "favorite_count": 13, "accepted_answer_id": 48524700, "answer_count": 4, "score": 39, "last_activity_date": 1529675927, "creation_date": 1517321797, "last_edit_date": 1517345560, "question_id": 48523571, "link": "https://stackoverflow.com/questions/48523571/whats-the-difference-between-parametric-polymorphism-and-higher-kinded-types", "title": "What&#39;s the difference between parametric polymorphism and higher-kinded types?", "body": "<p>I am pretty sure they are not the same. However, I am bogged down by the\ncommon notion that \"Rust does not support\" higher-kinded types (HKT), but\ninstead offers <em>parametric polymorphism</em>. I tried to get my head around that and understand the difference between these, but got just more and more entangled.</p>\n\n<p>To my understanding, there <em>are</em> higher-kinded types in Rust, at least the basics. Using the \"*\"-notation, a HKT does have a kind of e.g. <code>* -&gt; *</code>.\nFor example, <code>Maybe</code> is of kind <code>* -&gt; *</code> and could be implemented like this in Haskell.</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>data Maybe a = Just a | Nothing\n</code></pre>\n\n<p>Here,</p>\n\n<ul>\n<li><code>Maybe</code> is a type constructor and needs to be applied to a concrete type\nto become a concrete type of kind \"*\".</li>\n<li><code>Just a</code> and <code>Nothing</code> are  data constructors.</li>\n</ul>\n\n<p>In textbooks about Haskell, this is often used as an example for a higher-kinded type. However, in Rust it can simply be implemented as an enum, which after all is a <em>sum type</em>:</p>\n\n<pre><code>enum Maybe&lt;T&gt; {\n    Just(T),\n    Nothing,\n}\n</code></pre>\n\n<p>Where is the difference? To my understanding this is a\nperfectly fine example of a higher-kinded type.</p>\n\n<ol>\n<li>If in Haskell this is used as a textbook example of HKTs, why is it\nsaid that Rust doesn't have HKT? Doesn't the <code>Maybe</code> enum qualify as a\nHKT?</li>\n<li>Should it rather be said that Rust doesn't <em>fully</em> support HKT?</li>\n<li>What's the fundamental difference between HKT and parametric polymorphism?</li>\n</ol>\n\n<p>This confusion continues when looking at functions, I can write a parametric\nfunction that takes a <code>Maybe</code>, and to my understanding a HKT as a function\nargument.</p>\n\n<pre><code>fn do_something&lt;T&gt;(input: Maybe&lt;T&gt;) {\n    // implementation\n}\n</code></pre>\n\n<p>again, in Haskell that would be something like</p>\n\n<pre><code>do_something :: Maybe a -&gt; ()\ndo_something :: Maybe a -&gt; ()\ndo_something _ = ()\n</code></pre>\n\n<p>which leads to the fourth question.</p>\n\n<ol start=\"4\">\n<li>Where exactly does the support for higher-kinded types end? Whats the\nminimal example to make Rust's type system fail to express HKT?</li>\n</ol>\n\n<h1>Related Questions:</h1>\n\n<p>I went through a lot of questions related to the topic (including links they have to blogposts, etc.) but I could not find an answer to my main questions (1 and 2).</p>\n\n<ol>\n<li><em><a href=\"https://stackoverflow.com/questions/37369251/in-haskell-are-higher-kinded-types-really-types-or-do-they-merely-denote-c\">In Haskell, are &quot;higher-kinded types&quot; *really* types? Or do they merely denote collections of *concrete* types and nothing more?</a></em></li>\n<li><em><a href=\"https://stackoverflow.com/questions/41508680/generic-struct-over-a-generic-type-without-type-parameter\">Generic struct over a generic type without type parameter</a></em></li>\n<li><em><a href=\"https://stackoverflow.com/questions/43448055/higher-kinded-types-in-scala\">Higher Kinded Types in Scala</a></em></li>\n<li><em><a href=\"https://stackoverflow.com/questions/42370444/what-types-of-problems-helps-higher-kinded-polymorphism-solve-better\">What types of problems helps &quot;higher-kinded polymorphism&quot; solve better?</a></em></li>\n<li><em><a href=\"https://stackoverflow.com/questions/36948114/abstract-data-types-vs-parametric-polymorphism-in-haskell\">Abstract Data Types vs. Parametric Polymorphism in Haskell</a></em></li>\n</ol>\n\n<h1>Update</h1>\n\n<p>Thank you for the many good answers which are all very detailed and helped a lot. I decided to accept Andreas Rossberg's answer since his explanation helped me the most to get on the right track. Especially the part about terminology.</p>\n\n<p>I was really locked in the cycle of thinking that everything of kind <code>* -&gt; * ... -&gt; *</code> is <em>higher-kinded</em>. The explanation that stressed the difference between <code>* -&gt; * -&gt; *</code> and <code>(* -&gt; *) -&gt; *</code> was crucial for me.</p>\n"}, {"tags": ["serialization", "rust", "code-generation"], "comments": [{"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1517307921, "post_id": 48518863, "comment_id": 84032700, "body": "Can&#39;t you use <code>OsStr</code>? After all it is the underlying representation used by <code>PathBuf</code>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1517328063, "post_id": 48518863, "comment_id": 84046165, "body": "@Jmb I assume the sticking point with <code>OsStr</code> (or <code>PathBuf</code>, for that matter) is that it doesn&#39;t implement <a href=\"https://docs.rs/phf/0.7.21/phf/trait.PhfHash.html\" rel=\"nofollow noreferrer\"><code>PhfHash</code></a>, which OP is trying to use."}, {"owner": {"reputation": 613, "user_id": 1513041, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/462e6deb5e2e99814caa88c10b4269bd?s=128&d=identicon&r=PG", "display_name": "maninalift", "link": "https://stackoverflow.com/users/1513041/maninalift"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1517344079, "post_id": 48518863, "comment_id": 84055232, "body": "@trentcl - yes but it was Jmb&#39;s reply that made me realise that (see edit to question)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517371000, "post_id": 48518863, "comment_id": 84063881, "body": "So... what are you even asking anymore?"}, {"owner": {"reputation": 613, "user_id": 1513041, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/462e6deb5e2e99814caa88c10b4269bd?s=128&d=identicon&r=PG", "display_name": "maninalift", "link": "https://stackoverflow.com/users/1513041/maninalift"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517393014, "post_id": 48518863, "comment_id": 84073768, "body": "@Shepmaster - I&#39;m sorry I have been uncleay. I will implement this with binary serialization. My question remains: Is there a robust, sane, way to do this without going via serialization to a binary array."}], "owner": {"reputation": 613, "user_id": 1513041, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/462e6deb5e2e99814caa88c10b4269bd?s=128&d=identicon&r=PG", "display_name": "maninalift", "link": "https://stackoverflow.com/users/1513041/maninalift"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 134, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1517392718, "creation_date": 1517307218, "last_edit_date": 1517392718, "question_id": 48518863, "link": "https://stackoverflow.com/questions/48518863/robust-representation-of-pathbuf-for-code-generation-in-rust", "title": "Robust representation of PathBuf for code generation in Rust", "body": "<p>I have a list of pairs of <code>PathBuf</code>s and I want to generate code that will give an efficient mapping function - looking up a path and giving me the corresponding path in the pair. To do this I am creating a static hash-map with <a href=\"https://docs.rs/phf/0.7.21/phf/\" rel=\"nofollow noreferrer\"><code>phf</code></a>.</p>\n\n<p>My current implementation is a <code>pub static PATH: phf::Map&lt;&amp;'static str, &amp;'static str&gt;</code>. I have an access function <code>fn lookup(path: PathBuf) -&gt; Option&lt;PathBuf&gt;</code> that unwraps the <code>PathBuf</code> into a <code>str</code>, does the lookup and wraps up the resulting <code>str</code> into a new <code>PathBuf</code>. I generate the string representations of the paths in the code using <code>to_string_lossy</code> which works fine at the moment but clearly is not robust.</p>\n\n<p>I think it might be sensible to give up representing the paths in the generated code as strings at all and instead serialize to <code>[u8]</code> with e.g. <code>bincode</code> to be sure that the representation is robust. </p>\n\n<p>Is a sensible approach? Is there a safe way that keeps the \"natural\" string representation?</p>\n\n<p><strong>Despite my going back and forth below, I'm still on the fence and the question remains: Should I bincode serialize my objects and put the binary into <code>phf::Hash</code> or store the objects directly.</strong> The former feels like unnecessary overhead (but with bincode perhaps very little). The latter feels fragile - I have to implement a wrapper type around <code>PathBuf</code> to get hashing and to implement <code>Debug</code> that gives a  correct representation in code - and exactly how to ensure that I am not sure.</p>\n\n<p><a href=\"https://stackoverflow.com/questions/48518863/robust-representation-of-pathbuf-for-code-generation-in-rust#comment84032700_48518863\">@Jmb's comment</a>:</p>\n\n<blockquote>\n  <p>Can't you use <code>OsStr</code>? After all it is the underlying representation used by <code>PathBuf</code></p>\n</blockquote>\n\n<p>Got me to realise I was making things harder for myself. I was testing things out by editing the code directly instead of changing the code generator. Therefore I was using the <code>phf</code> macro instead of the code generator. Using the code generator, I get a nice clear error message.</p>\n\n<p>I could use <code>PathBuf</code> directly but need to write a <code>PhfHash</code> <code>impl</code> for it. To avoid a orphan implementation, I'd need to put a type-wrapper around it.</p>\n\n<p>However, <code>OsStr</code> doesn't make any guarantees about its representation. <code>as_bytes</code> is only available on Unix. <code>OsStr</code> and <code>PathBuf</code> do implement <code>Hash</code> however.</p>\n\n<p>The <code>phf</code> docs say about <code>PhfHasher</code>:</p>\n\n<blockquote>\n  <p>This differs from the standard library's <code>Hash</code> trait in that <code>PhfHash</code>'s results must be architecture independent so that hashes will be consistent between the host and target when cross compiling.</p>\n</blockquote>\n\n<p>...since I am generating code that relies on (relative) paths remaining valid between compilation and running, I think this isn't an issue and I can simply implement <code>PhfHash</code> by forwarding to <code>Hash</code>.</p>\n\n<p>For all my worrying about how to serialise <code>PathBuf</code> in a robust way, phf actually just relies on formatting with <code>Debug</code> to turn the the keys into generated code.</p>\n\n<p>I guess perhaps it is time I stopped worrying and embraced <code>Debug</code> for code generation. However the <code>Debug</code> implementation for OsStr does not produce a valid code representation of an <code>OsStr</code> but instead just prints a string (Debug is implemented manually, not derived). My OsStr wrapper would also have to implement <code>Debug</code> to produce a valid code representation of the struct.</p>\n"}, {"tags": ["winapi", "encryption", "rust", "pywin32", "rust-cargo"], "comments": [{"owner": {"reputation": 25908, "user_id": 242520, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/0623460a9ea717d56fd359f797f98d77?s=128&d=identicon&r=PG", "display_name": "ta.speot.is", "link": "https://stackoverflow.com/users/242520/ta-speot-is"}, "edited": false, "score": 2, "creation_date": 1517294713, "post_id": 48515385, "comment_id": 84025071, "body": "<a href=\"https://retep998.github.io/doc/crypt32/fn.CryptUnprotectData.html\" rel=\"nofollow noreferrer\">retep998.github.io/doc/crypt32/fn.CryptUnprotectData.html</a> ?"}, {"owner": {"reputation": 718, "user_id": 5476495, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/HmZ5k.png?s=128&g=1", "display_name": "RyanM", "link": "https://stackoverflow.com/users/5476495/ryanm"}, "reply_to_user": {"reputation": 25908, "user_id": 242520, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/0623460a9ea717d56fd359f797f98d77?s=128&d=identicon&r=PG", "display_name": "ta.speot.is", "link": "https://stackoverflow.com/users/242520/ta-speot-is"}, "edited": false, "score": 0, "creation_date": 1517295133, "post_id": 48515385, "comment_id": 84025276, "body": "@ta.speot.is this is it. Do you know how I can find documentation on how to use this function?"}, {"owner": {"reputation": 25908, "user_id": 242520, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/0623460a9ea717d56fd359f797f98d77?s=128&d=identicon&r=PG", "display_name": "ta.speot.is", "link": "https://stackoverflow.com/users/242520/ta-speot-is"}, "edited": false, "score": 1, "creation_date": 1517295348, "post_id": 48515385, "comment_id": 84025381, "body": "<a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa380882(v=vs.85).aspx\" rel=\"nofollow noreferrer\">msdn.microsoft.com/en-us/library/windows/desktop/&hellip;</a>"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1517321170, "creation_date": 1517321170, "answer_id": 48523367, "question_id": 48515385, "link": "https://stackoverflow.com/questions/48515385/is-there-a-rust-equivalent-to-win32crypt-cryptunprotectdata-in-rust/48523367#48523367", "title": "Is there a Rust equivalent to win32crypt.CryptUnprotectData() in Rust", "body": "<p>If you go to the <a href=\"https://docs.rs/winapi/*/x86_64-pc-windows-msvc/winapi/\" rel=\"nofollow noreferrer\">documentation for winapi</a> (linked from the <a href=\"https://crates.io/crates/winapi\" rel=\"nofollow noreferrer\">crate page</a> as well as the <a href=\"https://github.com/retep998/winapi-rs\" rel=\"nofollow noreferrer\">README</a>), you will find a large search box:</p>\n\n<p><a href=\"https://i.stack.imgur.com/1PVZQ.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/1PVZQ.png\" alt=\"search box in docs\"></a></p>\n\n<p>If you type \"CryptUnprotectData\" into that search box, you will receive 3 results:</p>\n\n<p><a href=\"https://i.stack.imgur.com/xGfRY.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/xGfRY.png\" alt=\"search results\"></a></p>\n\n<p>Clicking on the first result will lead you to the specific function, <a href=\"https://docs.rs/winapi/*/x86_64-pc-windows-msvc/winapi/um/dpapi/fn.CryptUnprotectData.html\" rel=\"nofollow noreferrer\"><code>CryptUnprotectData</code></a>. As described in <a href=\"https://stackoverflow.com/q/48508952/155423\">Cannot call CryptDecrypt from the WinApi crate because it could not find the module</a>, you need to use the appropriate feature flag to enable the function (<code>dpapi</code>).</p>\n\n<p>As the README states:</p>\n\n<blockquote>\n  <h3>Why is there no documentation on how to use anything?</h3>\n  \n  <p>This crate is nothing more than raw bindings to Windows API. If you\n  wish to know how to use the various functionality in Windows API, you\n  can look up the various items on MSDN which is full of detailed\n  documentation.</p>\n</blockquote>\n\n<p>Usage of this function is <a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa380882(v=vs.85).aspx\" rel=\"nofollow noreferrer\">described on MSDN</a>.</p>\n"}], "owner": {"reputation": 718, "user_id": 5476495, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/HmZ5k.png?s=128&g=1", "display_name": "RyanM", "link": "https://stackoverflow.com/users/5476495/ryanm"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 473, "favorite_count": 0, "accepted_answer_id": 48523367, "answer_count": 1, "score": -3, "last_activity_date": 1517321170, "creation_date": 1517294462, "last_edit_date": 1517320695, "question_id": 48515385, "link": "https://stackoverflow.com/questions/48515385/is-there-a-rust-equivalent-to-win32crypt-cryptunprotectdata-in-rust", "title": "Is there a Rust equivalent to win32crypt.CryptUnprotectData() in Rust", "body": "<p>In Python, the <code>pywin32</code> library provides a module named <code>win32crypt</code> which has a method called <code>CryptUnpotectData</code> to decrypt Windows encrypted data by using the Windows API.</p>\n\n<p>This is how I have applied it in Python:</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>import win32crypt\n# ...\npassword = win32crypt.CryptUnprotectData(EncrytedPassword, None, None, None, 0)\n</code></pre>\n\n<p>I have found a binding for the <a href=\"https://docs.rs/winapi/*/x86_64-pc-windows-msvc/winapi/index.html\" rel=\"nofollow noreferrer\"><code>winapi</code></a> but I can't find the <code>CryptUnprotectData</code> function, the closest I found to an equivalent is <a href=\"https://docs.rs/winapi/*/x86_64-pc-windows-msvc/winapi/um/wincrypt/fn.CryptDecrypt.html\" rel=\"nofollow noreferrer\">the <code>CryptDecrypt</code> function</a>.</p>\n\n<p>Here is my implementation of it in Rust:</p>\n\n<pre><code>extern crate winapi;\nlet decrypted_password = winapi::um::wincrypt::CryptDecrypt(/* ???? */);\n</code></pre>\n\n<p>I am not sure how to make use of this function and if it will decrypt my encrypted password string and return it. I would love if more experienced Rust users could shed some light on this for me using an example or explanation.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 4, "creation_date": 1517296779, "post_id": 48515883, "comment_id": 84026005, "body": "Maybe also explain what the problem is: &quot;The borrow checker can distinguish access to different fields, but not across function/closure boundaries.  If you use <code>self</code> in the closure, it will borrow <code>self</code>, not just the field you&#39;re trying to access in the closure&quot;."}, {"owner": {"reputation": 655, "user_id": 2494631, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/DCC31.jpg?s=128&g=1", "display_name": "vijoc", "link": "https://stackoverflow.com/users/2494631/vijoc"}, "reply_to_user": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1517297093, "post_id": 48515883, "comment_id": 84026184, "body": "@Stefan fair point. Added some context, hopefully it&#39;s more clear now."}, {"owner": {"reputation": 714, "user_id": 653157, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/62a73f3cd5a324fb02065a00c1b9e3f2?s=128&d=identicon&r=PG", "display_name": "osamu", "link": "https://stackoverflow.com/users/653157/osamu"}, "edited": false, "score": 0, "creation_date": 1517363589, "post_id": 48515883, "comment_id": 84062159, "body": "Well explained. Thank you!"}], "tags": [], "owner": {"reputation": 655, "user_id": 2494631, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/DCC31.jpg?s=128&g=1", "display_name": "vijoc", "link": "https://stackoverflow.com/users/2494631/vijoc"}, "is_accepted": false, "score": 6, "last_activity_date": 1517322055, "last_edit_date": 1517322055, "creation_date": 1517296587, "answer_id": 48515883, "question_id": 48515301, "link": "https://stackoverflow.com/questions/48515301/cannot-borrow-self-as-immutable-because-self-chars-is-also-borrowed-as-mutab/48515883#48515883", "title": "cannot borrow `self` as immutable because `self.chars` is also borrowed as mutable", "body": "<p>The problem is that you're trying to borrow <code>self</code> mutably <em>and</em> immutably, as the compiler says. As <a href=\"https://stackoverflow.com/questions/48515301/cannot-borrow-self-as-immutable-because-self-chars-is-also-borrowed-as-mutab#comment84026005_48515883\">pointed out by Stefan</a>, the borrow checker can't distinguish access to fields across closure boundaries, so we need to help it a bit by being more explicit about what we want to borrow and pass to the closure.</p>\n\n<p>A way to do this is to take out a reference to <code>self.b</code> and use that inside the <code>or_insert_with()</code>:</p>\n\n<pre><code>use std::collections::HashMap;\n\nstruct Bar;\nimpl Bar {\n    fn get(&amp;self) -&gt; i32 {\n        100\n    }\n}\nstruct Foo {\n    chars: HashMap&lt;char, i32&gt;,\n    b: Bar,\n}\n\nimpl Foo {\n    fn run(&amp;mut self) {\n        let b = &amp;self.b;\n        self.chars.entry('c').or_insert_with(|| b.get() * 100);\n    }\n}\n\nfn main() {\n    let mut m = Foo {\n        chars: HashMap::new(),\n        b: Bar,\n    };\n    m.run();\n}\n</code></pre>\n"}], "owner": {"reputation": 714, "user_id": 653157, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/62a73f3cd5a324fb02065a00c1b9e3f2?s=128&d=identicon&r=PG", "display_name": "osamu", "link": "https://stackoverflow.com/users/653157/osamu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 404, "favorite_count": 1, "closed_date": 1518248782, "answer_count": 1, "score": 0, "last_activity_date": 1517322055, "creation_date": 1517294076, "last_edit_date": 1517321992, "question_id": 48515301, "link": "https://stackoverflow.com/questions/48515301/cannot-borrow-self-as-immutable-because-self-chars-is-also-borrowed-as-mutab", "closed_reason": "Duplicate", "title": "cannot borrow `self` as immutable because `self.chars` is also borrowed as mutable", "body": "<p>I need immutable access to one struct field and mutable access to another one, but they have to be stacked on each other. I've had this problem multiple times and I don't know how to fix this.</p>\n\n<pre><code>use std::collections::HashMap;\n\nstruct Bar;\nimpl Bar {\n    fn get(&amp;self) -&gt; i32 {\n        100\n    }\n}\nstruct Foo {\n    chars: HashMap&lt;char, i32&gt;,\n    b: Bar,\n}\n\nimpl Foo {\n    fn run(&amp;mut self) {\n        self.chars.entry('c').or_insert_with(|| self.b.get() * 100);\n    }\n}\n\nfn main() {\n    let mut m = Foo {\n        chars: HashMap::new(),\n        b: Bar,\n    };\n    m.run();\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `self` as immutable because `self.chars` is also borrowed as mutable\n  --&gt; src/main.rs:16:46\n   |\n16 |         self.chars.entry('c').or_insert_with(|| self.b.get() * 100);\n   |         ----------                           ^^ ----              - mutable borrow ends here\n   |         |                                    |  |\n   |         |                                    |  borrow occurs due to use of `self` in closure\n   |         |                                    immutable borrow occurs here\n   |         mutable borrow occurs here\n</code></pre>\n"}, {"tags": ["rust", "rust-macros"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517281417, "post_id": 48512946, "comment_id": 84021251, "body": "<i>I&#39;ve tried: <code>macro_rule!</code></i> \u2014 that&#39;s not how you define macros, the parenthesis aren&#39;t even matched. This question doesn&#39;t demonstrate that you&#39;ve put any effort into the question before asking it. Stack Overflow isn&#39;t a service where people write code for you; please show what you&#39;ve <i>actually</i> tried. Additionally, show what the macro should expand to."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517330631, "post_id": 48512946, "comment_id": 84047825, "body": "I&#39;m sorry that I&#39;ve upset you. Stack Overflow <i>does</i> expect a baseline of effort when asking for help: <i>Questions seeking debugging help (&quot;why isn&#39;t this code working?&quot;) must include the desired behavior, a specific problem or error and the shortest code necessary to reproduce it in the question itself</i>, so I suppose one could call that pedantic. It&#39;s great that you realized that your original code was too big, which is why we want people to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517331206, "post_id": 48512946, "comment_id": 84048185, "body": "In the future, please explain by what you mean by &quot;I can&#39;t seem to make that work&quot;. &quot;Not working&quot; is the default state of things and encompasses an infinite number of possibilities, thus it isn&#39;t helpful at all to anyone else."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 0, "last_activity_date": 1517331107, "last_edit_date": 1592644375, "creation_date": 1517330744, "answer_id": 48526516, "question_id": 48512946, "link": "https://stackoverflow.com/questions/48512946/different-separators-for-the-same-variable-in-rust-macros/48526516#48526516", "title": "Different separators for the same variable in Rust Macros", "body": "<p>You never explained what the problem was with your existing code, so I don't know what to highlight in this example:</p>\n<pre><code>macro_rules! foo {\n    ($($($x:expr),*);*) =&gt; {\n        $(\n            $(\n                print!(&quot;{},&quot;, $x);\n            )*\n            println!(&quot;semi&quot;);\n        )*\n    }\n}\n\nfn main() {\n    foo!(1,2,3;4,5,6;7,8,9); \n}\n</code></pre>\n<p>I can point out things from your original code:</p>\n<ol>\n<li>It's called <code>macro_rules!</code>, not <code>macro_rule!</code></li>\n<li>The name of the macro being defined goes before the original <code>{</code>, not after.</li>\n<li>Like most programming, paired delimiters need to be evenly matched to be syntactically valid.</li>\n</ol>\n<p><a href=\"https://doc.rust-lang.org/book/first-edition/\" rel=\"nofollow noreferrer\"><em>The Rust Programming Language</em>, first edition</a> has several pieces of valuable information.</p>\n<p>Basic syntax for defining a macro is covered in the <a href=\"https://doc.rust-lang.org/book/first-edition/macros.html\" rel=\"nofollow noreferrer\">macros chapter</a>; I strongly suggest you read the entire thing. It also links to <a href=\"https://doc.rust-lang.org/reference/macros-by-example.html\" rel=\"nofollow noreferrer\">the reference</a>, which contains some more lower-level detail.</p>\n<p>The section most related to your question is:</p>\n<blockquote>\n<h3><a href=\"https://doc.rust-lang.org/book/first-edition/macros.html#repetition\" rel=\"nofollow noreferrer\">Repetition</a></h3>\n<p>The repetition operator follows two principal rules:</p>\n<ol>\n<li><code>$(...)*</code> walks through one &quot;layer&quot; of repetitions, for all of the <code>$names</code> it contains, in lockstep, and</li>\n<li>each <code>$name</code> must be under at least as many <code>$(...)*</code>s as it was matched against. If it is under more, it\u2019ll be duplicated, as appropriate.</li>\n</ol>\n</blockquote>\n"}], "owner": {"reputation": 353, "user_id": 5511614, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-xv0rjc16kws/AAAAAAAAAAI/AAAAAAAAACs/nWA8_8vHvhk/photo.jpg?sz=128", "display_name": "Fuujin", "link": "https://stackoverflow.com/users/5511614/fuujin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 223, "favorite_count": 0, "accepted_answer_id": 48526516, "answer_count": 1, "score": -1, "last_activity_date": 1517331107, "creation_date": 1517279038, "last_edit_date": 1517281527, "question_id": 48512946, "link": "https://stackoverflow.com/questions/48512946/different-separators-for-the-same-variable-in-rust-macros", "title": "Different separators for the same variable in Rust Macros", "body": "<p>I want to match a pattern like:</p>\n\n<pre><code>foo!(1,2,3;4,5,6;7,8,9); \n</code></pre>\n\n<p>The same code would be generated for all numbers, but I'd want additional code to run when there's a semi-colon. Is this sort of pattern possible?  </p>\n\n<p>I've tried:</p>\n\n<pre><code>macro_rule! {\n    foo ($($x:expr),*);*) =&gt; ...\n</code></pre>\n\n<p>But I can't seem to make that work on the right-hand side. </p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 2041, "user_id": 1333724, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/acc5cea42dca926af89f94eb56fbbdbb?s=128&d=identicon&r=PG", "display_name": "maxm", "link": "https://stackoverflow.com/users/1333724/maxm"}, "edited": false, "score": 0, "creation_date": 1517322466, "post_id": 48513179, "comment_id": 84042139, "body": "Wow, yep, updated my dependency file to: <code>secp256k1 = {version = &quot;0.8&quot;, features = [&quot;rand&quot;]}</code> Thanks!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1517280848, "creation_date": 1517280848, "answer_id": 48513179, "question_id": 48512351, "link": "https://stackoverflow.com/questions/48512351/no-method-named-generate-keypair-found-for-type-secp256k1secp256k1-in-the/48513179#48513179", "title": "No method named `generate_keypair` found for type `secp256k1::Secp256k1` in the current scope", "body": "<p>The <a href=\"https://docs.rs/secp256k1/0.8.1/secp256k1/struct.Secp256k1.html\" rel=\"noreferrer\">documentation for secp256k1 version 0.8.1</a> on docs.rs does not list any method <code>generate_keypair</code>.</p>\n\n<p>If you <a href=\"https://github.com/apoelstra/rust-secp256k1/blob/37f310789458ad990c29701cad2023c72ceb9269/src/lib.rs#L541-L546\" rel=\"noreferrer\">look at the source</a>, you see:</p>\n\n<pre><code>/// Generates a random keypair. Convenience function for `key::SecretKey::new`\n/// and `key::PublicKey::from_secret_key`; call those functions directly for\n/// batch key generation. Requires a signing-capable context.\n#[inline]\n#[cfg(any(test, feature = \"rand\"))]\npub fn generate_keypair&lt;R: Rng&gt;(&amp;self, rng: &amp;mut R)\n</code></pre>\n\n<p>The <code>generate_keypair</code> function is only available when you enable the optional <code>rand</code> dependency. This was introduced in <a href=\"https://github.com/apoelstra/rust-secp256k1/commit/298929600b622341a4987b5d8a54bd1fc388fd61\" rel=\"noreferrer\">commit 29892960</a>. Unfortunately, the maintainer of this crate does not publish version tags to the git repository, so it's very difficult to tell what version this change happened in.</p>\n"}], "owner": {"reputation": 2041, "user_id": 1333724, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/acc5cea42dca926af89f94eb56fbbdbb?s=128&d=identicon&r=PG", "display_name": "maxm", "link": "https://stackoverflow.com/users/1333724/maxm"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 309, "favorite_count": 0, "accepted_answer_id": 48513179, "answer_count": 1, "score": 1, "last_activity_date": 1517281020, "creation_date": 1517273913, "last_edit_date": 1517281020, "question_id": 48512351, "link": "https://stackoverflow.com/questions/48512351/no-method-named-generate-keypair-found-for-type-secp256k1secp256k1-in-the", "title": "No method named `generate_keypair` found for type `secp256k1::Secp256k1` in the current scope", "body": "<p>I'm trying to use the secp256k1 library in Rust. I have a simple test program that fails to compile because it cannot find <a href=\"https://www.wpsoftware.net/rustdoc/secp256k1/struct.Secp256k1.html#method.generate_keypair\" rel=\"nofollow noreferrer\"><code>generate_keypair</code></a>:</p>\n\n<pre><code>extern crate secp256k1;\nextern crate rand;\n\nuse secp256k1::{Secp256k1, ContextFlag};\nuse rand::{thread_rng};\n\nfn main() {\n    let full = Secp256k1::with_caps(ContextFlag::Full);\n    let (sk, pk) = full.generate_keypair(&amp;mut thread_rng()).unwrap();\n}\n</code></pre>\n\n<p>This fails to compile with the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `generate_keypair` found for type `secp256k1::Secp256k1` in the current scope\n --&gt; src/main.rs:9:25\n  |\n9 |     let (sk, pk) = full.generate_keypair(&amp;mut thread_rng()).unwrap();\n  |                         ^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>As far as I can tell, I'm using the library similarly to <a href=\"https://github.com/apoelstra/rust-secp256k1/blob/master/src/lib.rs#L658\" rel=\"nofollow noreferrer\">how its used in the library's tests</a>.</p>\n\n<p>I've rolled back rand to 0.3 and secp256k1 to 0.6 and now it works. I'miInterested in any thoughts as to why this is now broken. </p>\n"}, {"tags": ["function", "hashmap", "rust", "return-type"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517256540, "post_id": 48509018, "comment_id": 84013204, "body": "<code>fn load_config_files(settings: &amp;str) -&gt; HashMap&lt;String, String&gt;</code> and <code>settings_data.insert(settings_info[0].to_owned(), settings_info[1].to_owned());</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517256941, "post_id": 48509018, "comment_id": 84013405, "body": "In the future, please <i>include</i> the error message you get and describe what you mean by &quot;it did not like&quot;. That&#39;s mostly useless for anyone else."}], "owner": {"reputation": 73, "user_id": 1538594, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/643cca41a74f02d28d7ee1fe8533de2d?s=128&d=identicon&r=PG", "display_name": "Mr. P-teo", "link": "https://stackoverflow.com/users/1538594/mr-p-teo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1249, "favorite_count": 0, "closed_date": 1517256451, "answer_count": 0, "score": 0, "last_activity_date": 1517256485, "creation_date": 1517255776, "last_edit_date": 1517256354, "question_id": 48509018, "link": "https://stackoverflow.com/questions/48509018/wrong-number-of-type-arguments-when-returning-a-hashmap-from-a-function", "closed_reason": "Duplicate", "title": "Wrong number of type arguments when returning a HashMap from a function", "body": "<p>I've built a basic function which loads application settings from a configuration file. These settings are parsed and inserted into a <code>HashMap</code> so I can reference them later on. I cannot seem to find a correct way to return my <code>HashMap</code> and the data it contains:</p>\n\n<pre><code>use std::collections::HashMap;\nuse std::fs::File;\nuse std::io::BufReader;\n\nfn load_config_files(settings: &amp;str) -&gt; HashMap {\n    println!(\"Loading configuration file...\");\n\n    let mut settings_data = HashMap::new();\n\n    //function returns a vector with the application settings...\n    let handle = File::open(settings).unwrap();\n\n    for line in BufReader::new(handle).lines() {\n        let mut line_data = &amp;line.unwrap();\n\n        //get the first charater, if its a # then the line is ignored... e.g. comments\n        let first_character = &amp;line_data[0..1];\n        if first_character != \"#\" {\n            //sort into a vector\n            let mut settings_info_split = line_data.split(\"=\");\n            let settings_info = settings_info_split.collect::&lt;Vec&lt;&amp;str&gt;&gt;();\n\n            //need to add the values to the \"settings_vector\"\n            settings_data.insert(settings_info[0], settings_info[1]);\n        }\n    }\n\n    return settings_data;\n}\n</code></pre>\n\n<p>This doesn't work:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0243]: wrong number of type arguments: expected at least 2, found 0\n --&gt; src/main.rs:5:41\n  |\n5 | fn load_config_files(settings: &amp;str) -&gt; HashMap {\n  |                                         ^^^^^^^ expected at least 2 type arguments\n</code></pre>\n\n<p>I've tried including the parameters it's after, but I cannot find the right ones... E.g. it did not like <code>&amp;str</code>, it did not like <code>String</code>.</p>\n"}, {"tags": ["windows", "api", "winapi", "rust", "rust-cargo"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517256721, "post_id": 48508952, "comment_id": 84013300, "body": "Are you using the correct version of winapi? What is your Cargo.toml?"}, {"owner": {"reputation": 718, "user_id": 5476495, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/HmZ5k.png?s=128&g=1", "display_name": "RyanM", "link": "https://stackoverflow.com/users/5476495/ryanm"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517256786, "post_id": 48508952, "comment_id": 84013330, "body": "@Shepmaster yes the latest version <code>0.3.4</code>"}], "answers": [{"comments": [{"owner": {"reputation": 886, "user_id": 8170773, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/61b971ec934427a008d8b263ad4142b9?s=128&d=identicon&r=PG&f=1", "display_name": "hedgar2017", "link": "https://stackoverflow.com/users/8170773/hedgar2017"}, "edited": false, "score": 0, "creation_date": 1533220777, "post_id": 48509263, "comment_id": 90276204, "body": "How do you know one must include the <code>wincrypt</code> feature? Is it explained or mapped somewhere?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 886, "user_id": 8170773, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/61b971ec934427a008d8b263ad4142b9?s=128&d=identicon&r=PG&f=1", "display_name": "hedgar2017", "link": "https://stackoverflow.com/users/8170773/hedgar2017"}, "edited": false, "score": 0, "creation_date": 1533222030, "post_id": 48509263, "comment_id": 90277070, "body": "@hedgar2017 I don&#39;t know how to reword the documentation to make it clearer: <i>Each <b>module</b> is gated on a feature flag</i> ...  <i>something from winapi::um:: <b>winuser</i></b> ... <i>enable the <b>winuser</b> feature</i>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1517257831, "last_edit_date": 1517257831, "creation_date": 1517256811, "answer_id": 48509263, "question_id": 48508952, "link": "https://stackoverflow.com/questions/48508952/cannot-call-cryptdecrypt-from-the-winapi-crate-because-it-could-not-find-the-mod/48509263#48509263", "title": "Cannot call CryptDecrypt from the WinApi crate because it could not find the module", "body": "<p>From the <a href=\"https://docs.rs/crate/winapi/0.3.4\" rel=\"nofollow noreferrer\">crate-level documentation</a>:</p>\n\n<blockquote>\n  <h2>Frequently asked questions</h2>\n  \n  <h3>Why am I getting errors about unresolved imports?</h3>\n  \n  <p>Each module is gated on a feature flag, so you must enable the\n  appropriate feature to gain access to those items. For example, if you\n  want to use something from <code>winapi::um::winuser</code> you must enable the\n  <code>winuser</code> feature.</p>\n</blockquote>\n\n<p>In this case, you need to add <code>wincrypt</code>:</p>\n\n<pre><code>[target.'cfg(windows)'.dependencies]\nwinapi = { version = \"0.3\", features = [\"wincrypt\"] }\n</code></pre>\n"}], "owner": {"reputation": 718, "user_id": 5476495, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/HmZ5k.png?s=128&g=1", "display_name": "RyanM", "link": "https://stackoverflow.com/users/5476495/ryanm"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 738, "favorite_count": 0, "accepted_answer_id": 48509263, "answer_count": 1, "score": 3, "last_activity_date": 1517257831, "creation_date": 1517255577, "last_edit_date": 1517257154, "question_id": 48508952, "link": "https://stackoverflow.com/questions/48508952/cannot-call-cryptdecrypt-from-the-winapi-crate-because-it-could-not-find-the-mod", "title": "Cannot call CryptDecrypt from the WinApi crate because it could not find the module", "body": "<p>In the <a href=\"https://docs.rs/winapi/*/x86_64-pc-windows-msvc/winapi/um/wincrypt/fn.CryptDecrypt.html\" rel=\"nofollow noreferrer\">documentation</a> it says that the function is in  <code>winapi::um::wincrypt::CryptDecrypt</code> but when I install the crate and bring it in my project everything works fine until I try to call the function where I get the following error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0433]: failed to resolve. Could not find `wincrypt` in `um`\n  --&gt; src\\main.rs:68:39\n   |\n68 |  let decrypted_password = winapi::um::wincrypt::CryptDecrypt(password);\n   |                                       ^^^^^^^^ Could not find `wincrypt` in `um`\n</code></pre>\n\n<p>My goal is to decrypt passwords from the \"Local Data\" file on my computer where Chrome stores passwords. I am using the Windows <code>win32crypt</code> API binding called <code>winapi</code> in Rust. I am trying to accomplish something similar to <a href=\"https://github.com/hassaanaliw/chromepass\" rel=\"nofollow noreferrer\"><code>chromepass</code></a> but in Rust.</p>\n"}, {"tags": ["rust", "lifetime", "rust-tokio"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517239956, "post_id": 48504103, "comment_id": 84003308, "body": "<i>I thought that I&#39;ve got what the &#39;static lifetime is</i> \u2014 what did you think it was? Why do you think that <code>api</code> has the <code>&#39;static</code> lifetime?"}, {"owner": {"reputation": 538, "user_id": 4911677, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/be942bfa276c4d1607d43dbf0e1631a7?s=128&d=identicon&r=PG", "display_name": "fevgenym", "link": "https://stackoverflow.com/users/4911677/fevgenym"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517240656, "post_id": 48504103, "comment_id": 84003806, "body": "@Shepmaster, I thought that <code>&#39;static</code> lifetime is used to indicate data which is placed in <code>.bss</code> sector, like string literals known in compile time. I&#39;m not sure that <code>api</code> has the <code>&#39;static</code> lifetime, but I see in docs that <code>spawn</code> method needs this lifetime for it&#39;s argument. I don&#39;t know why it is <code>&#39;static</code> in <code>main</code> function, where there are no errors."}, {"owner": {"reputation": 538, "user_id": 4911677, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/be942bfa276c4d1607d43dbf0e1631a7?s=128&d=identicon&r=PG", "display_name": "fevgenym", "link": "https://stackoverflow.com/users/4911677/fevgenym"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517240822, "post_id": 48504103, "comment_id": 84003923, "body": "<code>fn spawn&lt;F&gt;(&amp;self, f: F) where F: Future&lt;Item = (), Error = ()&gt; + &#39;static </code> I mean"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 8, "creation_date": 1517241092, "post_id": 48504103, "comment_id": 84004134, "body": "TL;DR the duplicates: the <code>&#39;static</code> <i>bound</i> on a generic type requires that any references inside the type must live as least as long as <code>&#39;static</code>. If your type has no references, it meets the bounds. If it has references, they must be <code>&#39;static</code>."}, {"owner": {"reputation": 538, "user_id": 4911677, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/be942bfa276c4d1607d43dbf0e1631a7?s=128&d=identicon&r=PG", "display_name": "fevgenym", "link": "https://stackoverflow.com/users/4911677/fevgenym"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517241623, "post_id": 48504103, "comment_id": 84004520, "body": "@Shepmaster, oh, I got it, thank you. If I set the reference to <code>msg</code> to <code>&#39;static</code> it compiles, but it won&#39;t clean old messages, right?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1517241991, "post_id": 48504103, "comment_id": 84004783, "body": "Do you mean <code>fn test(&amp;self, msg: &amp;&#39;static Message, handle: Handle)</code>? If so, then you will only be able to pass in <code>Message</code>s that live for the entire life of the program (which is probably not what you want). Instead, you should probably just take in a <code>Message</code> by value and move it into the closure / future. In that case, you will have no lifetimes, thus you will meet the <code>&#39;static</code> bounds. I&#39;d also recommend storing just an <code>Arc&lt;Api&gt;</code> in your <code>Test</code>, not a <code>&amp;&#39;a Arc&lt;Api&gt;</code>."}, {"owner": {"reputation": 538, "user_id": 4911677, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/be942bfa276c4d1607d43dbf0e1631a7?s=128&d=identicon&r=PG", "display_name": "fevgenym", "link": "https://stackoverflow.com/users/4911677/fevgenym"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517242824, "post_id": 48504103, "comment_id": 84005359, "body": "Suddenly it became totally clear for me. Thank you very much, @Shepmaster, for your work for the community."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517242912, "post_id": 48504103, "comment_id": 84005409, "body": "You are very welcome! I hope you enjoy working with Rust as much as we do!"}], "owner": {"reputation": 538, "user_id": 4911677, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/be942bfa276c4d1607d43dbf0e1631a7?s=128&d=identicon&r=PG", "display_name": "fevgenym", "link": "https://stackoverflow.com/users/4911677/fevgenym"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 2442, "favorite_count": 2, "closed_date": 1517240984, "answer_count": 0, "score": 3, "last_activity_date": 1517243155, "creation_date": 1517237788, "last_edit_date": 1517241214, "question_id": 48504103, "link": "https://stackoverflow.com/questions/48504103/what-does-the-static-lifetime-mean-in-a-trait-bound-in-a-rust-future", "closed_reason": "Duplicate", "title": "What does the &#39;static lifetime mean in a trait bound in a Rust future?", "body": "<p>I thought that I've got what the <code>'static</code> lifetime is, but now I'm not sure.</p>\n\n<p>I'm trying to understand how to work with Tokio and Futures. My app is working, but the structure is awful, so I need to decompose it. Here comes <code>'static</code> requirement for my closures, that I don't know how to resolve.</p>\n\n<p>For example, in a <code>main</code> function I have a handle and able to <code>spawn</code> a future to its loop:</p>\n\n<pre><code>let mut core = tokio_core::reactor::Core::new().unwrap();\nlet handle = core.handle();\nlet future = {\n    ok(())\n};\n</code></pre>\n\n<p>It compiles; now I want to move some logic out:</p>\n\n<pre><code>struct Test;\nimpl Test {\n    fn test(&amp;self, handle: tokio_core::reactor::Handle) {\n        let future = {\n            ok(())\n        };\n        handle.spawn(future);\n    }\n}\n</code></pre>\n\n<p>It compiles too. When my struct gets more complicated: </p>\n\n<pre><code>struct Test&lt;'a&gt; {\n    api: &amp;'a Arc&lt;Api&gt;,\n}\n\nimpl&lt;'a&gt; Test&lt;'a&gt; {\n    fn new(api: &amp;'a Arc&lt;Api&gt;) -&gt; Self {\n        Test {\n            api: api,\n        }\n    }\n\n    fn test(&amp;self, msg: &amp;telegram_bot::types::Message, handle: tokio_core::reactor::Handle) {\n        let api = self.api.clone();\n        let future = ok(10);\n        let future2 = move |x| {\n            api.send(msg.text_reply(format!(\"reply: {}\", x))) // returns Future\n        }.map(|_| ()).map_err(|_| ()); // let's ignore the results for now\n        handle.spawn(future.and_then(future2));\n    }\n}\n</code></pre>\n\n<p>... I run into</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0477]: the type `futures::AndThen&lt;futures::FutureResult&lt;i32, ()&gt;, futures::FutureResult&lt;(), ()&gt;, [closure@src/main.rs:63:23: 66:10 api:std::sync::Arc&lt;telegram_bot::Api&gt;, msg:&amp;telegram_bot::Message]&gt;` does not fulfill the required lifetime\nhandle.spawn(future.and_then(future2));\n       ^^^^^\nnote: type must satisfy the static lifetime\n</code></pre>\n\n<p>I think it yells about my closure. The same future works if I have it in the <code>main</code> function with my <code>Arc</code>'ed <code>Api</code>.</p>\n\n<p>Moving this to a struct with references like a separate \"processor\" break it with <code>'static</code> errors.</p>\n"}, {"tags": ["rust", "idioms"], "comments": [{"owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 3, "creation_date": 1517225671, "post_id": 48500261, "comment_id": 83993882, "body": "There was a post about it just yesterday. Test that <code>x &gt; 0</code> and that <code>x &amp; (x - 1) == 0</code>. <a href=\"https://stackoverflow.com/questions/48477020/algorithm-to-find-the-power-of-2/48477286#48477286\" title=\"algorithm to find the power of 2\">stackoverflow.com/questions/48477020/&hellip;</a>"}, {"owner": {"reputation": 6636, "user_id": 76237, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/E0QaY.jpg?s=128&g=1", "display_name": "diginoise", "link": "https://stackoverflow.com/users/76237/diginoise"}, "edited": false, "score": 0, "creation_date": 1517226558, "post_id": 48500261, "comment_id": 83994364, "body": "keep in mind that <code>x as u32</code> could already be causing loss of precision"}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1517227599, "post_id": 48500261, "comment_id": 83994961, "body": "Also: <a href=\"https://graphics.stanford.edu/%7Eseander/bithacks.html\" rel=\"nofollow noreferrer\">graphics.stanford.edu/%7Eseander/bithacks.html</a>"}, {"owner": {"reputation": 95690, "user_id": 984823, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Z2KYN.jpg?s=128&g=1", "display_name": "Joop Eggen", "link": "https://stackoverflow.com/users/984823/joop-eggen"}, "edited": false, "score": 0, "creation_date": 1517228156, "post_id": 48500261, "comment_id": 83995273, "body": "The integer might be a power of two, but that does not imply that the original float was. Checking whether a float <code>x</code> can be losslessly converted to an int <code>n</code> involves <i>fraction</i> <code>x.fract() == 0_f32</code> / <code>x == (float) n</code> and <i>spacing/overflow</i> of floats: <code>(x + 1) != x</code> and <code>x &lt; Integer.MAX_VALUE</code>. <i>(Sorry for the javaisms)</i>"}, {"owner": {"reputation": 4565, "user_id": 1134885, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c428466054762cf7d4b5fb5f4396fa2?s=128&d=identicon&r=PG", "display_name": "NovaDenizen", "link": "https://stackoverflow.com/users/1134885/novadenizen"}, "edited": false, "score": 0, "creation_date": 1517281737, "post_id": 48500261, "comment_id": 84021314, "body": "If x is unsigned, <code>x &gt; 0 &amp;&amp; (x &amp; (x-1)) == 0</code> is true iff x is a power of 2."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1517328237, "post_id": 48500261, "comment_id": 84046291, "body": "Can you please specify whether you want to know if: <code>Check if a float can be converted to integer without loss</code> or <code>I wanted to check whether an integer was a power of 2. </code>"}, {"owner": {"reputation": 4924, "user_id": 2862719, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/yzhk5.png?s=128&g=1", "display_name": "m00am", "link": "https://stackoverflow.com/users/2862719/m00am"}, "edited": false, "score": 2, "creation_date": 1517329140, "post_id": 48500261, "comment_id": 84046906, "body": "My question is/ was: <code>Check if a float can be converted to integer without loss</code>. The power of two stuff was only my problem motivation."}], "answers": [{"comments": [{"owner": {"reputation": 6636, "user_id": 76237, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/E0QaY.jpg?s=128&g=1", "display_name": "diginoise", "link": "https://stackoverflow.com/users/76237/diginoise"}, "edited": false, "score": 1, "creation_date": 1517226440, "post_id": 48500414, "comment_id": 83994290, "body": "this covers fractions... what about f64 numbers larger than u32::MAX ?"}, {"owner": {"reputation": 1725, "user_id": 1170857, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/46e689f74969edede9e5acd75843151c?s=128&d=identicon&r=PG", "display_name": "udoprog", "link": "https://stackoverflow.com/users/1170857/udoprog"}, "edited": false, "score": 0, "creation_date": 1517226512, "post_id": 48500414, "comment_id": 83994339, "body": "<code>fract()</code> is actually implemented as <code>self - self.trunc()</code>, it might be better to use <code>v.trunc() == v</code> for the check instead."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "reply_to_user": {"reputation": 6636, "user_id": 76237, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/E0QaY.jpg?s=128&g=1", "display_name": "diginoise", "link": "https://stackoverflow.com/users/76237/diginoise"}, "edited": false, "score": 0, "creation_date": 1517235673, "post_id": 48500414, "comment_id": 84000330, "body": "@diginoise you&#39;re right, this only works for numbers that are known to be in range."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1517235902, "post_id": 48500414, "comment_id": 84000488, "body": "@Jmb: <i>Right</i>, I was thinking about fractions (such as 0.3) which is completely off!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517236908, "post_id": 48500414, "comment_id": 84001211, "body": "<code>x == (x as u32) as f64</code> is how I&#39;ve always seen this construct."}, {"owner": {"reputation": 1725, "user_id": 1170857, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/46e689f74969edede9e5acd75843151c?s=128&d=identicon&r=PG", "display_name": "udoprog", "link": "https://stackoverflow.com/users/1170857/udoprog"}, "edited": false, "score": 0, "creation_date": 1517237116, "post_id": 48500414, "comment_id": 84001348, "body": "The check is indeed only half of the answer. It might be worth mentioning why <code>u32</code> is used for <code>f64</code>. A 32 bit float has 23 bits of fractional data (52 for 64-bit doubles), meaning it can only faithfully represent a whole number between [0,2^23) (also negative). For any values above that, out of bounds arithmetic or casting will floor the value. If this happens, it will not be &quot;without loss&quot;. See: <a href=\"https://play.rust-lang.org/?gist=6ccbd5d51c8f2ae11f3b3569ecd0ff55&amp;version=stable\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "reply_to_user": {"reputation": 1725, "user_id": 1170857, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/46e689f74969edede9e5acd75843151c?s=128&d=identicon&r=PG", "display_name": "udoprog", "link": "https://stackoverflow.com/users/1170857/udoprog"}, "edited": false, "score": 0, "creation_date": 1517238609, "post_id": 48500414, "comment_id": 84002373, "body": "@udoprog the question is: &quot;How to check if a given <b><code>f64</code></b> number can be converted to an integer without loss?&quot; Given that the input is already an <code>f64</code>, any precision-loss due to rounding will have happened <b>before</b> the conversion to integer. So the conversion itself is lossless so long as the input is in range and has 0 fractional part."}, {"owner": {"reputation": 99643, "user_id": 445517, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/57e2ba76e6290c4e9e19821a068bc8c1?s=128&d=identicon&r=PG", "display_name": "CodesInChaos", "link": "https://stackoverflow.com/users/445517/codesinchaos"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517245929, "post_id": 48500414, "comment_id": 84007384, "body": "@Shepmaster Doesn&#39;t that invoke UB if x is outside the range of u32? Or has that issue finally been fixed? (Though if the float is the result of a logarithm of a value &gt;= 1 it will always be in range, so it doesn&#39;t affect the OP&#39;s application)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 99643, "user_id": 445517, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/57e2ba76e6290c4e9e19821a068bc8c1?s=128&d=identicon&r=PG", "display_name": "CodesInChaos", "link": "https://stackoverflow.com/users/445517/codesinchaos"}, "edited": false, "score": 0, "creation_date": 1517249879, "post_id": 48500414, "comment_id": 84009654, "body": "@CodesInChaos I just said that that&#39;s how I&#39;ve always seen it, not that it&#39;s the <i>right way</i> ;-). The <a href=\"https://github.com/rust-lang/rust/issues/10184\" rel=\"nofollow noreferrer\">issue does seem to be open still</a>."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "reply_to_user": {"reputation": 99643, "user_id": 445517, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/57e2ba76e6290c4e9e19821a068bc8c1?s=128&d=identicon&r=PG", "display_name": "CodesInChaos", "link": "https://stackoverflow.com/users/445517/codesinchaos"}, "edited": false, "score": 0, "creation_date": 1517297714, "post_id": 48500414, "comment_id": 84026548, "body": "@CodesInChaos Note that it doesn&#39;t cause undefined <i>behaviour</i> (which could include any side-effect up to the total destruction of the universe) but simply undefined <i>result</i>, meaning that the result will be some integer value and you simply don&#39;t know what that value will be. However if <code>x</code> doesn&#39;t fit in an <code>u32</code> there is no way that this value will be equal to <code>x</code> once converted back to <code>f64</code>, so the test is guaranteed to work even in that case."}, {"owner": {"reputation": 99643, "user_id": 445517, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/57e2ba76e6290c4e9e19821a068bc8c1?s=128&d=identicon&r=PG", "display_name": "CodesInChaos", "link": "https://stackoverflow.com/users/445517/codesinchaos"}, "edited": false, "score": 0, "creation_date": 1517397884, "post_id": 48500414, "comment_id": 84077089, "body": "@Jmb My understanding is an undefined value isn&#39;t merely an unspecified by valid value. So using it is UB.Which is why floating point to integer conversion is unsound at the moment."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1612961212, "post_id": 48500414, "comment_id": 116928287, "body": "@Shepmaster looks like the issue has been closed: out of range conversion are now <a href=\"https://github.com/rust-lang/rust/pull/71269\" rel=\"nofollow noreferrer\">defined as saturating</a>."}], "tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": true, "score": 13, "last_activity_date": 1517236882, "last_edit_date": 1517236882, "creation_date": 1517226027, "answer_id": 48500414, "question_id": 48500261, "link": "https://stackoverflow.com/questions/48500261/check-if-a-float-can-be-converted-to-integer-without-loss/48500414#48500414", "title": "Check if a float can be converted to integer without loss", "body": "<p>You can use <a href=\"https://doc.rust-lang.org/std/primitive.f64.html#method.fract\" rel=\"noreferrer\">fract</a> to check if there is a non-zero fractional part:</p>\n\n<pre><code>42.0f64.fract() == 0.0;\n42.23f64.fract() != 0.0;\n</code></pre>\n\n<p>Note that this only works if you already know that the number is in range. If you need an extra check to test that the floating-point number is between 0 and <code>u32::MAX</code> (or between <code>i32::MIN</code> and <code>i32::MAX</code>), then you might as well do the conversion and check that it didn't lose precision:</p>\n\n<pre><code>x == (x as u32) as f64\n</code></pre>\n"}], "owner": {"reputation": 4924, "user_id": 2862719, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/yzhk5.png?s=128&g=1", "display_name": "m00am", "link": "https://stackoverflow.com/users/2862719/m00am"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2738, "favorite_count": 1, "accepted_answer_id": 48500414, "answer_count": 1, "score": 9, "last_activity_date": 1580989657, "creation_date": 1517225488, "last_edit_date": 1517483158, "question_id": 48500261, "link": "https://stackoverflow.com/questions/48500261/check-if-a-float-can-be-converted-to-integer-without-loss", "title": "Check if a float can be converted to integer without loss", "body": "<p>I wanted to check whether an integer was a power of 2. My standard approach would have been to see if <code>log\u2082(x)</code> was an integer value, however I found no elegant way to do this. My approaches were the following:</p>\n\n<pre><code>let x = 65;\n\nlet y = (x as f64).log(2.0);\n\n// Compute the difference between y and the result of\n// of truncating y by casting to int and back\nlet difference = y - (y as i64 as f64);\n\n// This looks nice but matches on float values will be phased out\nmatch difference {\n    0.0 =&gt; println!(\"{} is a power of 2\", x),\n    _ =&gt; println!(\"{} is NO power of 2\", x),\n}\n\n// This seems kind of clunky\nif difference == 0.0 {\n    println!(\"{} is a power of 2\", x);\n} else {\n    println!(\"{} is NO power of 2\", x);\n}\n</code></pre>\n\n<p><strong>Is there a builtin option in Rust to check if a float can be converted to an integer without truncation?</strong></p>\n\n<p>Something that behaves like:</p>\n\n<pre><code>42.0f64.is_int() // True/ Ok()\n42.23f64.is_int() // False/ Err()\n</code></pre>\n\n<p>In other words, a method/ macro/ etc. that allows me to check if I will lose information (decimals) by casting to int.</p>\n\n<hr>\n\n<p><em>I already found that checking whether an integer is a power of 2 can be done efficiently with <code>x.count_ones() == 1</code>.</em></p>\n"}, {"tags": ["console", "rust", "stdout"], "comments": [{"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 1, "creation_date": 1517208263, "post_id": 48494508, "comment_id": 83984413, "body": "The terminal emulator probably is in teletype emulation mode and wants carriage return (<code>\\r</code>) as well as line feed (<code>\\n</code>)."}], "answers": [{"comments": [{"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 2, "creation_date": 1517217511, "post_id": 48497050, "comment_id": 83988710, "body": "It&#39;s actually <code>\\r\\n</code>, not <code>\\n\\r</code>."}, {"owner": {"reputation": 149, "user_id": 6420976, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-2243-uFWJ-o/AAAAAAAAAAI/AAAAAAAAABM/gwT_WbzLQMA/photo.jpg?sz=128", "display_name": "Eric Ocampo", "link": "https://stackoverflow.com/users/6420976/eric-ocampo"}, "edited": false, "score": 0, "creation_date": 1517277687, "post_id": 48497050, "comment_id": 84020404, "body": "Thank you so much, you&#39;re right, using <code>\\r</code> is working :), thank&#39;s bro :)"}], "tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 12, "last_activity_date": 1517223356, "last_edit_date": 1517223356, "creation_date": 1517214158, "answer_id": 48497050, "question_id": 48494508, "link": "https://stackoverflow.com/questions/48494508/how-do-i-create-a-new-line-when-using-termion-in-raw-mode/48497050#48497050", "title": "How do I create a new line when using termion in raw mode?", "body": "<p>Strictly speaking the newline character <code>\\n</code> means \"go to the next line at the same position\". In order to start at the beginning of the line you need to add a carriage return <code>\\r</code>, which means \"go to the beginning of the current line\". This is why text files in Windows use the <code>\\r\\n</code> combination to mark the end of line. Unix and MacOS have decided that the distinction didn't make sense for computer files and took one extra byte at a time when space was at a premium, so they decided to use a single character in text files. For the same reason computer consoles have two modes, one in which they automatically add a carriage return when they receive a newline (to reduce the amount of data transmitted when the consoles were connected through a serial line) and one in which they apply strictly what they are sent (for fine-grained control). Since you have called <code>stdout().into_raw_mode()</code>, you are in the second mode and need to output the carriage return manually.</p>\n\n<p>This behaviour was inherited from the old mechanical typewriters were \"newline\" was a key that advanced the paper by one line and \"carriage return\" was a handle that allowed to manually move the carriage back to the start position.</p>\n"}], "owner": {"reputation": 149, "user_id": 6420976, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-2243-uFWJ-o/AAAAAAAAAAI/AAAAAAAAABM/gwT_WbzLQMA/photo.jpg?sz=128", "display_name": "Eric Ocampo", "link": "https://stackoverflow.com/users/6420976/eric-ocampo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1468, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1517233972, "creation_date": 1517200916, "last_edit_date": 1517233972, "question_id": 48494508, "link": "https://stackoverflow.com/questions/48494508/how-do-i-create-a-new-line-when-using-termion-in-raw-mode", "title": "How do I create a new line when using termion in raw mode?", "body": "<p>I am using the <a href=\"https://docs.rs/termion/1.5.1/termion/\" rel=\"nofollow noreferrer\">termion crate</a> to capture user input keys with <code>termion::raw::IntoRawMode</code> like a event listener. I am unable to print a new line in the console because stdout is in \"raw mode\" and <code>\\n</code> is not recognized as a new line. I don't know how to disable raw mode when <code>draw_user</code> method is called and then return to raw mode in order to listen to key events again.</p>\n\n<p>The second line starts with white spaces before, but I don't know why:</p>\n\n<p><a href=\"https://i.stack.imgur.com/ASnOp.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/ASnOp.png\" alt=\"enter image description here\"></a></p>\n\n<p>Here is my code:</p>\n\n<pre><code>extern crate termion;\n\nuse termion::event::Key;\nuse termion::input::TermRead;\nuse termion::raw::IntoRawMode;\nuse std::io::{stdin, stdout, Write};\n\nfn main() {\n    let mut x: u16 = 1;\n    let mut y: u16 = 1;\n    // Get the standard input stream.\n    let stdin = stdin();\n    // Get the standard output stream and go to raw mode.\n    let mut stdout = stdout().into_raw_mode().unwrap();\n    write!(\n        stdout,\n        \"{}{}{}\",\n        // Clear the screen.\n        termion::clear::All,\n        // Goto (1,1).\n        termion::cursor::Goto(1, 1),\n        // Hide the cursor.\n        termion::cursor::Hide\n    ).unwrap();\n    // Flush stdout (i.e. make the output appear).\n    stdout.flush().unwrap();\n\n    for c in stdin.keys() {\n        // Clear the current line.\n        write!(\n            stdout,\n            \"{}{}{}\",\n            termion::cursor::Goto(1, 1),\n            termion::clear::CurrentLine,\n            termion::clear::BeforeCursor\n        ).unwrap();\n\n        // Print the key we type...\n        match c.unwrap() {\n            // Exit.\n            Key::Char('q') =&gt; break,\n            Key::Ctrl('c') =&gt; break,\n            Key::Left =&gt; {\n                x -= 1;\n                draw_user(&amp;mut x, &amp;mut y);\n            }\n            Key::Right =&gt; {\n                x += 1;\n                draw_user(&amp;mut x, &amp;mut y);\n            }\n            Key::Up =&gt; {\n                y -= 1;\n                draw_user(&amp;mut x, &amp;mut y);\n            }\n            Key::Down =&gt; {\n                y += 1;\n                draw_user(&amp;mut x, &amp;mut y);\n            }\n            _ =&gt; println!(\"\"),\n        }\n        stdout.flush().unwrap();\n    }\n    // Show the cursor again before we exit.\n    write!(\n        stdout,\n        \"{}{}\",\n        termion::cursor::Show,\n        termion::clear::AfterCursor\n    ).unwrap();\n    // Flush again.\n}\n\nfn draw_user(x: &amp;mut u16, y: &amp;mut u16) {\n    let termsize = termion::terminal_size().ok();\n    let termwidth = termsize.map(|(w, _)| w - 10).unwrap();\n    let termheight = termsize.map(|(_, h)| h).unwrap();\n    if *x &lt; 1 {\n        *x = 1;\n    }\n    if *x &gt; termwidth {\n        *x = termwidth;\n    }\n    if *y &lt; 1 {\n        *y = 1;\n    }\n    if *y &gt; termheight {\n        *y = termheight;\n    }\n    //println!(\"x:{}, y:{}\", *x, *y);\n    for h in 1..termheight + 1 {\n        for w in 1..termwidth + 1 {\n            //print!(\"w:{}\",w);\n            if h == *y &amp;&amp; w == *x {\n                print!(\"\u263a\");\n            } else {\n                print!(\"*\");\n            }\n        }\n        println!(\"\");\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "match"], "answers": [{"comments": [{"owner": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "edited": false, "score": 0, "creation_date": 1517200014, "post_id": 48494354, "comment_id": 83981845, "body": "Ok, stupid question time. What exactly is the difference (to the compiler) between that and what I had in the post? Certainly there&#39;s something, as the compiler no longer complains."}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "reply_to_user": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "edited": false, "score": 0, "creation_date": 1517200404, "post_id": 48494354, "comment_id": 83981921, "body": "The <code>.into()</code> function&#39;s signature is <code>fn into(self) -&gt; T</code> so it takes ownership of <code>language</code>, which means you cannot use <code>language</code> again."}, {"owner": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "edited": false, "score": 0, "creation_date": 1517200459, "post_id": 48494354, "comment_id": 83981935, "body": "Ok, that makes sense. Ownership is still something I&#39;m getting used to. Thanks!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517234484, "post_id": 48494354, "comment_id": 83999497, "body": "Besides working, this is more performant; what if <code>into()</code> was very expensive?"}], "tags": [], "owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "is_accepted": true, "score": 3, "last_activity_date": 1517234277, "last_edit_date": 1517234277, "creation_date": 1517199770, "answer_id": 48494354, "question_id": 48494127, "link": "https://stackoverflow.com/questions/48494127/use-of-moved-value-when-matching-on-a-value-that-implements-intostring/48494354#48494354", "title": "Use of moved value when matching on a value that implements Into&lt;String&gt;", "body": "<p>Rust is smart enough to see that your <code>_ =&gt;</code> arm of the match statement does not actually borrow the value, so you can do</p>\n\n<pre><code>fn new&lt;Str&gt;(language: Str) -&gt; Location\nwhere\n    Str: Into&lt;String&gt;,\n{\n    Location {\n        language: {\n            let s = language.into();\n            match &amp;*s {\n                \"canada\" =&gt; \"ca\".to_owned(),\n                \"uk\" =&gt; \"uk2\".to_owned(),\n                _ =&gt; s,\n            }\n        },\n    }\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?gist=188d39301f2e98df3566710669b55899&amp;version=stable\" rel=\"nofollow noreferrer\">On the Playground</a>)</p>\n"}], "owner": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 442, "favorite_count": 0, "accepted_answer_id": 48494354, "answer_count": 1, "score": 0, "last_activity_date": 1517234277, "creation_date": 1517197921, "last_edit_date": 1517234205, "question_id": 48494127, "link": "https://stackoverflow.com/questions/48494127/use-of-moved-value-when-matching-on-a-value-that-implements-intostring", "title": "Use of moved value when matching on a value that implements Into&lt;String&gt;", "body": "<p>I want a function which accepts both <code>&amp;str</code> and <code>String</code>. The only way I know to do this is by using <code>Into&lt;String&gt;</code>.</p>\n\n<p>However, inside the function, I'm trying to match the <code>Into&lt;String&gt;</code>. This causes some issues, as the arm is a <code>&amp;str</code>.</p>\n\n<p>This is what I have (stripped down):</p>\n\n<pre><code>struct Location {\n    language: String,\n}\n\nfn new&lt;Str&gt;(language: Str) -&gt; Location\nwhere\n    Str: Into&lt;String&gt;,\n{\n    Location {\n        language: {\n            match &amp;*language.into() {\n                \"canada\" =&gt; \"ca\".to_owned(),\n                \"uk\" =&gt; \"uk2\".to_owned(),\n                _ =&gt; language.into(),\n            }\n        },\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>This generates the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0382]: use of moved value: `language`\n  --&gt; src/main.rs:14:22\n   |\n11 |             match &amp;*language.into() {\n   |                     -------- value moved here\n...\n14 |                 _ =&gt; language.into(),\n   |                      ^^^^^^^^ value used here after move\n   |\n   = note: move occurs because `language` has type `Str`, which does not implement the `Copy` trait\n</code></pre>\n\n<p>My goal is to have allow anything to be passed in, with <code>canada</code> and <code>uk</code> getting swapped out (everything else being left alone).</p>\n\n<p>Right now, it's converting <code>language</code> to a <code>&amp;str</code> for the match operator, which works great. The only problem is I still need the reference to <code>language</code> for the default arm.</p>\n\n<p>How should I go about approaching this? Is there some trivial way to do this I'm missing?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 16, "creation_date": 1517183347, "post_id": 48492289, "comment_id": 83978389, "body": "More idiomatically seen as <code>for row in &amp;mut grid {</code> and <code>for cell in &amp;mut row {</code>."}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 15, "last_activity_date": 1517183313, "last_edit_date": 1517183313, "creation_date": 1517180406, "answer_id": 48492289, "question_id": 48492204, "link": "https://stackoverflow.com/questions/48492204/how-to-change-value-inside-an-array-while-iterating-over-it-in-rust/48492289#48492289", "title": "How to change value inside an array while iterating over it in Rust", "body": "<p>The <code>iter_mut</code> iterator gives you a reference to the element, which you can use to mutate the grid. You usually shouldn't use indices.</p>\n\n<pre><code>fn main() {\n    let mut grid: [[i32; 10]; 10] = [[5; 10]; 10];\n    for row in grid.iter_mut() {\n        for cell in row.iter_mut() {\n            *cell = 7;\n        }\n    }\n\n    println!(\"{:?}\", grid)\n}\n</code></pre>\n\n<p><a href=\"http://play.integer32.com/?gist=eea0c4505011230e878a416722eaaee6&amp;version=stable\" rel=\"noreferrer\">Playground link</a></p>\n"}], "owner": {"reputation": 518, "user_id": 7531001, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh6.googleusercontent.com/-pkkYKOJv6lk/AAAAAAAAAAI/AAAAAAAAAFw/-Q18nKQ3ZAw/photo.jpg?sz=128", "display_name": "Thomas Fournet", "link": "https://stackoverflow.com/users/7531001/thomas-fournet"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3377, "favorite_count": 1, "accepted_answer_id": 48492289, "answer_count": 1, "score": 12, "last_activity_date": 1517183313, "creation_date": 1517179711, "last_edit_date": 1517182955, "question_id": 48492204, "link": "https://stackoverflow.com/questions/48492204/how-to-change-value-inside-an-array-while-iterating-over-it-in-rust", "title": "How to change value inside an array while iterating over it in Rust", "body": "<p>I want to change the value inside the loop like in the comment. It should be simple but I don't see the solution.</p>\n\n<pre><code>fn main() {\n    let mut grid: [[i32; 10]; 10] = [[5; 10]; 10];\n    for (i, row) in grid.iter_mut().enumerate() {\n        for (y, col) in row.iter_mut().enumerate() {\n            //grid[i][y] = 7;\n            print!(\"{}\", col);\n        }\n        print!(\"{}\",\"\\n\");\n    }\n}\n</code></pre>\n"}, {"tags": ["linux", "tcp", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1517175192, "post_id": 48491528, "comment_id": 83976227, "body": "What are your ulimits? Is &quot;1k&quot; <b>exactly</b> 1000 or is it a different number? What do you mean by &quot;doesn&#39;t return anything else&quot; \u2014 is it returning an <i>error</i>? Is it <i>blocking</i>?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1517177836, "post_id": 48491528, "comment_id": 83977011, "body": "&quot;After 1k, the TCPListener doesn&#39;t return anything else until the current connections are removed.&quot;, it&#39;s impossible you must get a error message, probably, ENFILE error."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517178743, "post_id": 48491528, "comment_id": 83977268, "body": "Likely to be a duplicate of <a href=\"https://stackoverflow.com/q/923990/155423\">Why do I get connection refused after 1024 connections?</a>"}, {"owner": {"reputation": 1893, "user_id": 3831435, "user_type": "registered", "accept_rate": 77, "profile_image": "https://graph.facebook.com/829983118/picture?type=large", "display_name": "Luke Dupin", "link": "https://stackoverflow.com/users/3831435/luke-dupin"}, "edited": false, "score": 0, "creation_date": 1517245021, "post_id": 48491528, "comment_id": 84006845, "body": "Thanks guys, checking out the ulimit and learning how to change that did fix the problem."}, {"owner": {"reputation": 1893, "user_id": 3831435, "user_type": "registered", "accept_rate": 77, "profile_image": "https://graph.facebook.com/829983118/picture?type=large", "display_name": "Luke Dupin", "link": "https://stackoverflow.com/users/3831435/luke-dupin"}, "edited": false, "score": 0, "creation_date": 1517245062, "post_id": 48491528, "comment_id": 84006868, "body": "To answer your question Shep, the ulimit was 1k = 1024."}], "answers": [{"tags": [], "owner": {"reputation": 995, "user_id": 1231796, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/475345bcce913ee32e838d538b165c4f?s=128&d=identicon&r=PG&f=1", "display_name": "Andrew", "link": "https://stackoverflow.com/users/1231796/andrew"}, "is_accepted": true, "score": 9, "last_activity_date": 1517175312, "creation_date": 1517175312, "answer_id": 48491575, "question_id": 48491528, "link": "https://stackoverflow.com/questions/48491528/rust-1k-tcp-connection-limit/48491575#48491575", "title": "Rust 1k TCP connection limit", "body": "<p>I think it's system limit. If you type <code>ulimit -n</code> you will see number of max files open, which I think it is also for sockets.</p>\n\n<p>Try typing <code>ulimit -n 10000</code> and then run your application.</p>\n"}], "owner": {"reputation": 1893, "user_id": 3831435, "user_type": "registered", "accept_rate": 77, "profile_image": "https://graph.facebook.com/829983118/picture?type=large", "display_name": "Luke Dupin", "link": "https://stackoverflow.com/users/3831435/luke-dupin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 556, "favorite_count": 0, "accepted_answer_id": 48491575, "answer_count": 1, "score": 1, "last_activity_date": 1517175312, "creation_date": 1517175022, "last_edit_date": 1517175139, "question_id": 48491528, "link": "https://stackoverflow.com/questions/48491528/rust-1k-tcp-connection-limit", "title": "Rust 1k TCP connection limit", "body": "<p>I'm writing a high-throughput multi-threaded Rust server.  The server needs to handle in the neighborhood of 10-20k connections at time.</p>\n\n<p>I've got the program written and its super fast, however, it only allows a maximum of 1k connections.  After 1k, the <code>TCPListener</code> doesn't return anything else until the current connections are removed.</p>\n\n<p>I don't see anywhere inside Rust to set a connection limit.  Is this a Rust limitation with <code>core::net</code> or is this a system limitation?</p>\n\n<p>I'm running on Linux 4.14.15, the development server will be on 4.14.xxxx.  Rust 1.23.0</p>\n"}, {"tags": ["enums", "rust"], "answers": [{"comments": [{"owner": {"reputation": 7792, "user_id": 131264, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/67c4f2aed4839e9325dd58097aaa8eca?s=128&d=identicon&r=PG", "display_name": "Alexander", "link": "https://stackoverflow.com/users/131264/alexander"}, "edited": false, "score": 0, "creation_date": 1517175234, "post_id": 48491021, "comment_id": 83976239, "body": "I ended up using the <code>match</code>-method and write down all the enums manually. It did not feel optimal, but it worked. Thanks for the suggestions and possible solutions!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 7792, "user_id": 131264, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/67c4f2aed4839e9325dd58097aaa8eca?s=128&d=identicon&r=PG", "display_name": "Alexander", "link": "https://stackoverflow.com/users/131264/alexander"}, "edited": false, "score": 0, "creation_date": 1517175307, "post_id": 48491021, "comment_id": 83976265, "body": "@Alexander you can always submit a PR to the original crate to implement <code>Rand</code> for the enum, removing the non-optimum-ness and making it so that no one else ever needs to perform that specific workaround."}, {"owner": {"reputation": 7792, "user_id": 131264, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/67c4f2aed4839e9325dd58097aaa8eca?s=128&d=identicon&r=PG", "display_name": "Alexander", "link": "https://stackoverflow.com/users/131264/alexander"}, "edited": false, "score": 0, "creation_date": 1517177514, "post_id": 48491021, "comment_id": 83976907, "body": "That is true, but is this not a weakness in Rust itself?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 7792, "user_id": 131264, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/67c4f2aed4839e9325dd58097aaa8eca?s=128&d=identicon&r=PG", "display_name": "Alexander", "link": "https://stackoverflow.com/users/131264/alexander"}, "edited": false, "score": 0, "creation_date": 1517178055, "post_id": 48491021, "comment_id": 83977068, "body": "@Alexander I would not say that a deliberate design decision is a weakness, no. If you were able to implement <code>Rand</code> for <code>Spinner</code>, then what would happen when either the rand or spinner crates decided to implement <code>Rand</code> for <code>Spinner</code>? Either your code would stop compiling or do something different. Neither of those is an acceptable choice in a language which needs stability."}, {"owner": {"reputation": 7792, "user_id": 131264, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/67c4f2aed4839e9325dd58097aaa8eca?s=128&d=identicon&r=PG", "display_name": "Alexander", "link": "https://stackoverflow.com/users/131264/alexander"}, "edited": false, "score": 3, "creation_date": 1517220879, "post_id": 48491021, "comment_id": 83990839, "body": "Also found the <a href=\"https://crates.io/crates/strum\" rel=\"nofollow noreferrer\">strum</a> crate which seems to have the potential to alleviate the problem somewhat."}, {"owner": {"reputation": 1726, "user_id": 1429658, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/fecbd8a5bea71e1103c82bcc4eb16237?s=128&d=identicon&r=PG", "display_name": "Litty", "link": "https://stackoverflow.com/users/1429658/litty"}, "edited": false, "score": 3, "creation_date": 1521320425, "post_id": 48491021, "comment_id": 85683813, "body": "Unfortunately I think <code>rand-derive</code> is deprecated as of <code>rand</code> 0.5, <a href=\"https://github.com/rust-lang-nursery/rand/tree/master/rand-derive\" rel=\"nofollow noreferrer\">looking at the readme.</a>"}, {"owner": {"reputation": 306, "user_id": 1060781, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fecccddf67edb87cc1971feeff556511?s=128&d=identicon&r=PG", "display_name": "process91", "link": "https://stackoverflow.com/users/1060781/process91"}, "edited": false, "score": 1, "creation_date": 1529069064, "post_id": 48491021, "comment_id": 88754774, "body": "@Shepmaster Reasonable precendence rules could be decided. Other languages allow you to shadow existing functionality and then call super() to access it, if it exists, for example. I personally dislike a lot of the seemingly arbitrary constraints Rust puts in place in the name of &quot;safety&quot;, as though there&#39;s really no other reasonable solution."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 306, "user_id": 1060781, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fecccddf67edb87cc1971feeff556511?s=128&d=identicon&r=PG", "display_name": "process91", "link": "https://stackoverflow.com/users/1060781/process91"}, "edited": false, "score": 0, "creation_date": 1529069556, "post_id": 48491021, "comment_id": 88755113, "body": "@process91 that&#39;s entirely your decision. There are plenty of new and interesting languages as well as improvements to existing languages. If you don&#39;t like Rust, don&#39;t use it; life is too short for that! However, I&#39;d be surprised if many of the decisions were truly arbitrary. It seems more likely that you might be unaware of the rationale. For example, <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1023-rebalancing-coherence.md\" rel=\"nofollow noreferrer\">RFC 1023</a> talks about some of the decisions behind it, and I&#39;m sure there are more resources if you care to learn further."}, {"owner": {"reputation": 306, "user_id": 1060781, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fecccddf67edb87cc1971feeff556511?s=128&d=identicon&r=PG", "display_name": "process91", "link": "https://stackoverflow.com/users/1060781/process91"}, "edited": false, "score": 0, "creation_date": 1529070492, "post_id": 48491021, "comment_id": 88755655, "body": "@Shepmaster Sorry to express frustration about this, just been slogging away at this relatively simple project for a while now. Do you know of any solution to this issue now that the Rand trait is deprecated? The <a href=\"https://pastebin.com/YswSNEmg\" rel=\"nofollow noreferrer\">error message</a> says that it&#39;s been replaced by <code>distributions::Standard</code>, but the documentation there doesn&#39;t seem to address this issue. Following the error message: <b>the trait <code>rand::distributions::Distribution&lt;Spinner&gt;</code> is not implemented for <code>rand::distributions::Standard</code></b>, I tried to directly implement this trait but that also failed to compile."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 306, "user_id": 1060781, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fecccddf67edb87cc1971feeff556511?s=128&d=identicon&r=PG", "display_name": "process91", "link": "https://stackoverflow.com/users/1060781/process91"}, "edited": false, "score": 0, "creation_date": 1529078081, "post_id": 48491021, "comment_id": 88760123, "body": "@process91 added example of implementing for rand 0.5"}, {"owner": {"reputation": 306, "user_id": 1060781, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fecccddf67edb87cc1971feeff556511?s=128&d=identicon&r=PG", "display_name": "process91", "link": "https://stackoverflow.com/users/1060781/process91"}, "edited": false, "score": 0, "creation_date": 1529080992, "post_id": 48491021, "comment_id": 88761449, "body": "@Shepmaster Thanks, that was really helpful. (Were you able to figure this out from the documentation? Any tips in general for how to figure out what needs to be done in a situation like this? I was reading the source code but didn&#39;t see any examples of implementing Distribution like this.)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 306, "user_id": 1060781, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fecccddf67edb87cc1971feeff556511?s=128&d=identicon&r=PG", "display_name": "process91", "link": "https://stackoverflow.com/users/1060781/process91"}, "edited": false, "score": 1, "creation_date": 1529081652, "post_id": 48491021, "comment_id": 88761754, "body": "@process91 I started at <a href=\"https://docs.rs/rand/0.5.1/rand/\" rel=\"nofollow noreferrer\">the crate-level docs</a>, saw the link to <a href=\"https://docs.rs/rand/0.5.1/rand/fn.random.html\" rel=\"nofollow noreferrer\"><code>random</code></a>, saw it has a bound of <code>Standard: Distribution&lt;T&gt;</code>. I knew that <code>T</code> would be our custom type, so I looked at <a href=\"https://docs.rs/rand/0.5.1/rand/distributions/trait.Distribution.html\" rel=\"nofollow noreferrer\"><code>Distribution</code></a>. It only has <a href=\"https://docs.rs/rand/0.5.1/rand/distributions/trait.Distribution.html#tymethod.sample\" rel=\"nofollow noreferrer\">one required method</a>, so I implemented that. It can only use methods of <a href=\"https://docs.rs/rand/0.5.1/rand/trait.Rng.html\" rel=\"nofollow noreferrer\"><code>Rng</code></a>, like <code>gen_range</code>"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 27, "last_activity_date": 1609942281, "last_edit_date": 1609942281, "creation_date": 1517171809, "answer_id": 48491021, "question_id": 48490049, "link": "https://stackoverflow.com/questions/48490049/how-do-i-choose-a-random-value-from-an-enum/48491021#48491021", "title": "How do I choose a random value from an enum?", "body": "<h1>Your own enum</h1>\n<p>Like most abstractions in Rust, random value generation is powered by traits. Implementing a trait is the same for any particular type, the only difference is exactly what the methods and types of the trait are.</p>\n<h2>Rand 0.5, 0.6, 0.7, and 0.8</h2>\n<p>Implement <a href=\"https://docs.rs/rand/0.8.0/rand/distributions/trait.Distribution.html\" rel=\"nofollow noreferrer\"><code>Distribution</code></a> using your enum as the type parameter. You also need to choose a specific type of distribution; <a href=\"https://docs.rs/rand/0.8.0/rand/distributions/struct.Standard.html\" rel=\"nofollow noreferrer\"><code>Standard</code></a> is a good default choice. Then use any of the methods to generate a value, such as <a href=\"https://docs.rs/rand/0.8.0/rand/fn.random.html\" rel=\"nofollow noreferrer\"><code>rand::random</code></a>:</p>\n<pre><code>use rand::{\n    distributions::{Distribution, Standard},\n    Rng,\n}; // 0.8.0\n\n#[derive(Debug)]\nenum Spinner {\n    One,\n    Two,\n    Three,\n}\n\nimpl Distribution&lt;Spinner&gt; for Standard {\n    fn sample&lt;R: Rng + ?Sized&gt;(&amp;self, rng: &amp;mut R) -&gt; Spinner {\n        // match rng.gen_range(0, 3) { // rand 0.5, 0.6, 0.7\n        match rng.gen_range(0..=2) { // rand 0.8\n            0 =&gt; Spinner::One,\n            1 =&gt; Spinner::Two,\n            _ =&gt; Spinner::Three,\n        }\n    }\n}\n\nfn main() {\n    let spinner: Spinner = rand::random();\n    println!(&quot;{:?}&quot;, spinner);\n}\n</code></pre>\n<h2>Rand 0.4</h2>\n<p>Implement <a href=\"https://docs.rs/rand/0.4.2/rand/trait.Rand.html\" rel=\"nofollow noreferrer\"><code>Rand</code></a> for your enum, then use any of the methods to generate a value, such as <a href=\"https://docs.rs/rand/0.4.2/rand/trait.Rng.html#method.gen\" rel=\"nofollow noreferrer\"><code>Rng::gen</code></a>:</p>\n<pre><code>extern crate rand; // 0.4.2\n\nuse rand::{Rand, Rng};\n\n#[derive(Debug)]\nenum Spinner {\n    One,\n    Two,\n    Three,\n}\n\nimpl Rand for Spinner {\n    fn rand&lt;R: Rng&gt;(rng: &amp;mut R) -&gt; Self {\n        match rng.gen_range(0, 3) {\n            0 =&gt; Spinner::One,\n            1 =&gt; Spinner::Two,\n            _ =&gt; Spinner::Three,\n        }\n    }\n}\n\nfn main() {\n    let mut rng = rand::thread_rng();\n    let spinner: Spinner = rng.gen();\n    println!(&quot;{:?}&quot;, spinner);\n}\n</code></pre>\n<h3>Derive</h3>\n<p>The <code>rand_derive</code> crate can remove the need for some of this boilerplate, but does not exist for Rand 0.5.</p>\n<pre><code>extern crate rand;\n#[macro_use]\nextern crate rand_derive;\n\nuse rand::Rng;\n\n#[derive(Debug, Rand)]\nenum Spinner {\n    One,\n    Two,\n    Three,\n}\n    \nfn main() {\n    let mut rng = rand::thread_rng();\n    let spinner: Spinner = rng.gen();\n    println!(&quot;{:?}&quot;, spinner);\n}\n</code></pre>\n<h1>Someone else's enum</h1>\n<p>Since you don't control the enum, you have to copy <em>something</em> into your code in order to reference it. You could create an array of the enum and <a href=\"https://docs.rs/rand/0.8.0/rand/seq/trait.SliceRandom.html#tymethod.choose\" rel=\"nofollow noreferrer\"><code>choose</code></a> from that:</p>\n<pre><code>use rand::seq::SliceRandom; // 0.8.0\n\nmod another_crate {\n    #[derive(Debug)]\n    pub enum Spinner {\n        One,\n        Two,\n        Three,\n    }\n}\n\nfn main() {\n    let mut rng = rand::thread_rng();\n    let spinners = [\n        another_crate::Spinner::One,\n        another_crate::Spinner::Two,\n        another_crate::Spinner::Three,\n    ];\n    let spinner = spinners.choose(&amp;mut rng).unwrap();\n    println!(&quot;{:?}&quot;, spinner);\n}\n</code></pre>\n<p>You could replicate the entire enum locally, implement <code>Rand</code> for that, and then have a method that converts back into the other crates representation.</p>\n<pre><code>use rand::{\n    distributions::{Distribution, Standard},\n    Rng,\n}; // 0.8.0\n\nmod another_crate {\n    #[derive(Debug)]\n    pub enum Spinner {\n        One,\n        Two,\n        Three,\n    }\n}\n\nenum Spinner {\n    One,\n    Two,\n    Three,\n}\n\nimpl From&lt;Spinner&gt; for another_crate::Spinner {\n    fn from(other: Spinner) -&gt; another_crate::Spinner {\n        match other {\n            Spinner::One =&gt; another_crate::Spinner::One,\n            Spinner::Two =&gt; another_crate::Spinner::Two,\n            Spinner::Three =&gt; another_crate::Spinner::Three,\n        }\n    }\n}\n\nimpl Distribution&lt;Spinner&gt; for Standard {\n    fn sample&lt;R: Rng + ?Sized&gt;(&amp;self, rng: &amp;mut R) -&gt; Spinner {\n        match rng.gen_range(0..=2) {\n            0 =&gt; Spinner::One,\n            1 =&gt; Spinner::Two,\n            _ =&gt; Spinner::Three,\n        }\n    }\n}\n\nfn main() {\n    let spinner = another_crate::Spinner::from(rand::random::&lt;Spinner&gt;());\n    println!(&quot;{:?}&quot;, spinner);\n}\n</code></pre>\n<p>You could count the number of spinners and do a match:</p>\n<pre><code>use rand::Rng; // 0.8.0\n\nmod another_crate {\n    #[derive(Debug)]\n    pub enum Spinner {\n        One,\n        Two,\n        Three,\n    }\n}\n\nfn rando&lt;R: Rng&gt;(mut rng: R) -&gt; another_crate::Spinner {\n    match rng.gen_range(0..=2) {\n        0 =&gt; another_crate::Spinner::One,\n        1 =&gt; another_crate::Spinner::Two,\n        _ =&gt; another_crate::Spinner::Three,\n    }\n}\n\nfn main() {\n    let mut rng = rand::thread_rng();\n    let spinner = rando(&amp;mut rng);\n    println!(&quot;{:?}&quot;, spinner);\n}\n</code></pre>\n<p>You can implement a <em>newtype</em> and implement the random generation for that:</p>\n<pre><code>use rand::{distributions::Standard, prelude::*}; // 0.8.0\n\nmod another_crate {\n    #[derive(Debug)]\n    pub enum Spinner {\n        One,\n        Two,\n        Three,\n    }\n}\n\nstruct RandoSpinner(another_crate::Spinner);\n\nimpl Distribution&lt;RandoSpinner&gt; for Standard {\n    fn sample&lt;R: Rng + ?Sized&gt;(&amp;self, rng: &amp;mut R) -&gt; RandoSpinner {\n        RandoSpinner(match rng.gen_range(0..=2) {\n            0 =&gt; another_crate::Spinner::One,\n            1 =&gt; another_crate::Spinner::Two,\n            _ =&gt; another_crate::Spinner::Three,\n        })\n    }\n}\n\nfn main() {\n    let RandoSpinner(spinner) = rand::random();\n    println!(&quot;{:?}&quot;, spinner);\n}\n</code></pre>\n<p>See also:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/q/25413201/155423\">How do I implement a trait I don&#39;t own for a type I don&#39;t own?</a></li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1529081822, "post_id": 50879764, "comment_id": 88761833, "body": "<i>though this may be slow</i> \u2014 why would it be slower than <code>rand::seq::sample_iter</code> &quot;specialized&quot; for <code>Option</code> instead of <code>Vec</code>?"}, {"owner": {"reputation": 8176, "user_id": 314345, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/d2c8b7c25f4cd87a65001a2f952c0008?s=128&d=identicon&r=PG", "display_name": "dhardy", "link": "https://stackoverflow.com/users/314345/dhardy"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1529086764, "post_id": 50879764, "comment_id": 88763928, "body": "Whoops, I forgot about <code>sample_iter</code> (we&#39;re completely redesigning this API for 0.6). Yes, it should be similar in performance to <code>IteratorRandom::choose</code> in 0.6, but both will be much slower than the other methods for large enums. Except that we <a href=\"https://github.com/rust-lang-nursery/rand/issues/511\" rel=\"nofollow noreferrer\">might be able to optimise this</a> since in examples like this the iterator length is known."}, {"owner": {"reputation": 7792, "user_id": 131264, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/67c4f2aed4839e9325dd58097aaa8eca?s=128&d=identicon&r=PG", "display_name": "Alexander", "link": "https://stackoverflow.com/users/131264/alexander"}, "edited": false, "score": 0, "creation_date": 1529219638, "post_id": 50879764, "comment_id": 88789063, "body": "Why is iteration a requirement for choosing a random element? In the context of maths and programming in general: If you know the length of the enum, picking out a random element should not require any iteration."}], "tags": [], "owner": {"reputation": 8176, "user_id": 314345, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/d2c8b7c25f4cd87a65001a2f952c0008?s=128&d=identicon&r=PG", "display_name": "dhardy", "link": "https://stackoverflow.com/users/314345/dhardy"}, "is_accepted": false, "score": 3, "last_activity_date": 1529081635, "last_edit_date": 1529081635, "creation_date": 1529081242, "answer_id": 50879764, "question_id": 48490049, "link": "https://stackoverflow.com/questions/48490049/how-do-i-choose-a-random-value-from-an-enum/50879764#50879764", "title": "How do I choose a random value from an enum?", "body": "<p>Since <a href=\"https://github.com/rust-lang-nursery/rand/issues/510\" rel=\"nofollow noreferrer\">Shepmaster asked</a> I can suggest another couple of options.</p>\n\n<p>Unfortunately <code>rng.choose(Spinners)</code> cannot work because there is no way to iterate over enum values; see: <a href=\"https://stackoverflow.com/questions/21371534/in-rust-is-there-a-way-to-iterate-through-the-values-of-an-enum\">In Rust, is there a way to iterate through the values of an enum?</a></p>\n\n<p>You could presumably use <a href=\"https://crates.io/crates/strum\" rel=\"nofollow noreferrer\">strum</a>'s <code>EnumIter</code> to allow iteration. In Rand 0.4 and 0.5, <code>choose</code> does not support iterators, but you could either collect all options into a <code>Vec</code> or enumerate and match the index. In Rand 0.6, there will be a variant of <code>choose</code> supporting iterators, although it may quite slow (depending on whether we can optimise it for <code>ExactSizeIterator</code>s).</p>\n\n<pre><code>use rand::prelude::*;\n\n#[derive(EnumIter)]\nenum Spinner { ... }\n\nlet mut rng = thread_rng();\n\nlet options = Spinner::iter().collect::&lt;Vec&lt;_&gt;&gt;();\nlet choice = rng.choose(&amp;options);\n\n// or:\nlet index = rng.gen_range(0, MAX);\nlet choice = Spinner::iter().enumerate().filter(|(i, _)| i == index).map(|(_, x)| x).next().unwrap();\n\n// with Rand 0.6, though this may be slow:\nlet choice = Spinner::iter().choose(&amp;mut rng);\n// collecting may be faster; in Rand 0.6 this becomes:\nlet choice = Spinner::iter().collect::&lt;Vec&lt;_&gt;&gt;().choose(&amp;mut rng);\n</code></pre>\n\n<p>Another option is to use num's <a href=\"https://docs.rs/num/0.1.42/num/trait.FromPrimitive.html\" rel=\"nofollow noreferrer\"><code>FromPrimitive</code> trait</a> with <a href=\"https://github.com/rust-num/num-derive\" rel=\"nofollow noreferrer\">num-derive</a>:</p>\n\n<pre><code>#[derive(FromPrimitive)]\nenum Spinner { ... }\n\nlet choice = Spinner::from_u32(rng.gen_range(0, MAX)).unwrap();\n</code></pre>\n"}], "owner": {"reputation": 7792, "user_id": 131264, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/67c4f2aed4839e9325dd58097aaa8eca?s=128&d=identicon&r=PG", "display_name": "Alexander", "link": "https://stackoverflow.com/users/131264/alexander"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5130, "favorite_count": 2, "accepted_answer_id": 48491021, "answer_count": 2, "score": 19, "last_activity_date": 1609942281, "creation_date": 1517165145, "last_edit_date": 1517175088, "question_id": 48490049, "link": "https://stackoverflow.com/questions/48490049/how-do-i-choose-a-random-value-from-an-enum", "title": "How do I choose a random value from an enum?", "body": "<p>The <a href=\"https://github.com/FGRibreau/spinners\" rel=\"noreferrer\">spinners</a> crate has an <a href=\"https://docs.rs/spinners/1.0.0/spinners/enum.Spinners.html\" rel=\"noreferrer\">enum</a> with a large selection of possible spinners.</p>\n\n<p>Here's the enum (with all values except the top and bottom 4 skipped):</p>\n\n<pre><code>pub enum Spinners {\n    Dots,\n    Dots2,\n    Dots3,\n    Dots4,\n    ...\n    Shark,\n    Dqpb,\n    Weather,\n    Christmas,\n}\n</code></pre>\n\n<p>A new spinner is easy to create:</p>\n\n<pre><code>extern crate spinners;\n\nuse spinners::{Spinner, Spinners};\nuse std::thread::sleep;\nuse std::time::Duration;\n\nfn main() {\n    let sp = Spinner::new(Spinners::Dots9, \"Waiting for 3 seconds\".into());\n    sleep(Duration::from_secs(3));\n    sp.stop();\n}\n</code></pre>\n\n<p>However, I wish to select a spinner at random, and this does not work:</p>\n\n<pre><code>let spinner_enum = rng.choose(Spinners).unwrap_or(&amp;Spinners::Dots9);\n</code></pre>\n\n<p>Because:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0423]: expected value, found enum `Spinners`\n\nlet spinner_enum = rng.choose(Spinners).unwrap_or(&amp;Spinners::Dots9);\n                              ^^^^^^^^ not a value\n</code></pre>\n\n<p>How can I choose an enum value at random, and use that to display a random spinner?</p>\n"}, {"tags": ["generics", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517161248, "post_id": 48487871, "comment_id": 83971530, "body": "Thank you for providing a reasonable, small, complete example."}], "answers": [{"comments": [{"owner": {"reputation": 139, "user_id": 7057235, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5e47093457e44a9115cd8aacc2c5aba1?s=128&d=identicon&r=PG&f=1", "display_name": "Luuk Wester", "link": "https://stackoverflow.com/users/7057235/luuk-wester"}, "edited": false, "score": 0, "creation_date": 1517162634, "post_id": 48489417, "comment_id": 83972103, "body": "Thanks! I switched to get_result like you suggested. It does make more sense :)"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1589917302, "last_edit_date": 1589917302, "creation_date": 1517161196, "answer_id": 48489417, "question_id": 48487871, "link": "https://stackoverflow.com/questions/48487871/generic-function-using-diesel-causes-overflow/48489417#48489417", "title": "Generic function using Diesel causes overflow", "body": "<p>You weren't far off:</p>\n\n<pre><code>use diesel::dsl::Find;\nuse diesel::pg::PgConnection;\nuse diesel::query_dsl::{LoadQuery, RunQueryDsl};\nuse diesel::query_dsl::filter_dsl::FindDsl;\nuse diesel::result::Error;\n\nfn get_row&lt;'a, Model, Table&gt;(table: Table, id: i32) -&gt; Result&lt;String, Error&gt;\nwhere\n    Table: FindDsl&lt;i32&gt;,\n    Find&lt;Table, i32&gt;: LoadQuery&lt;PgConnection, Model&gt;,\n{\n    let conn = get_connection();\n    let result = table.find(id).load::&lt;Model&gt;(&amp;conn)?;\n    unimplemented!()\n}\n</code></pre>\n\n<p>Points to note:</p>\n\n<ol>\n<li><p>Diesel has a bunch of helper type aliases which make writing trait bounds easier. Here, the <code>Find</code> alias has been used.</p></li>\n<li><p>It can be more obvious to use more specific trait bounds instead of less specific ones. Here, switching to <code>FindDsl</code> instead of <code>QueryDsl</code> is probably what makes the code compile. <code>QueryDsl</code> doesn't mean that you can call <code>find</code> as the <a href=\"https://docs.rs/diesel/1.1.1/diesel/query_dsl/trait.QueryDsl.html#method.find\" rel=\"nofollow noreferrer\"><code>QueryDsl::find</code> method actually has further trait bounds</a>:</p>\n\n<pre><code>fn find&lt;PK&gt;(self, id: PK) -&gt; Find&lt;Self, PK&gt;\nwhere\n    Self: FindDsl&lt;PK&gt;,\n</code></pre></li>\n<li><p>The return value of <code>load</code> is a <code>Vec</code> of results, but you had annotated the type as a single value. Perhaps you wanted to use <code>get_result</code> or <code>first</code> instead?</p></li>\n<li><p>I removed the Serde-specific code because there's no obvious way to convert the Serde error to a Diesel error; that's up to you.</p></li>\n</ol>\n"}], "owner": {"reputation": 139, "user_id": 7057235, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5e47093457e44a9115cd8aacc2c5aba1?s=128&d=identicon&r=PG&f=1", "display_name": "Luuk Wester", "link": "https://stackoverflow.com/users/7057235/luuk-wester"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 448, "favorite_count": 0, "accepted_answer_id": 48489417, "answer_count": 1, "score": 5, "last_activity_date": 1589917302, "creation_date": 1517152669, "last_edit_date": 1517159921, "question_id": 48487871, "link": "https://stackoverflow.com/questions/48487871/generic-function-using-diesel-causes-overflow", "title": "Generic function using Diesel causes overflow", "body": "<p>I have an API written in Rust and it's goal is to expose ~15 tables in a database. I've written several very similar functions to expose each table so I thought I'd take a crack at polymorphism to simplify the code. </p>\n\n<p>I've reduced all the code to a single file:</p>\n\n<pre><code>#[macro_use]\nextern crate diesel;\nextern crate dotenv;\nextern crate serde;\n#[macro_use]\nextern crate serde_derive;\nextern crate serde_json;\n\ntable! {\n    table1 (id) {\n        id -&gt; Int4,\n        value -&gt; Text,\n    }\n}\n\ntable! {\n    table2 (id) {\n        id -&gt; Int4,\n        value -&gt; Text,\n    }\n}\n\n#[derive(Identifiable, Queryable, Serialize)]\n#[table_name = \"table1\"]\nstruct Model1 {\n    pub id: i32,\n    pub value: String,\n}\n\n#[derive(Identifiable, Queryable, Serialize)]\n#[table_name = \"table2\"]\nstruct Model2 {\n    pub id: i32,\n    pub value: String,\n}\n\nuse dotenv::dotenv;\nuse std::env;\n\nfn get_connection() -&gt; PgConnection {\n    dotenv().ok();\n    let database_url = env::var(\"DATABASE_URL\").expect(\"DATABASE_URL must be set\");\n    PgConnection::establish(&amp;database_url).expect(\"Database not working\")\n}\n\nuse diesel::QueryDsl;\nuse diesel::pg::PgConnection;\nuse diesel::query_dsl::LoadQuery;\nuse diesel::result::Error;\nuse diesel::query_dsl::filter_dsl::FindDsl;\nuse serde::Serialize;\nuse serde_json::to_string;\n\nfn get_row&lt;'a, Model, Table&gt;(table: Table, id: i32) -&gt; Result&lt;String, Error&gt;\nwhere\n    Table: QueryDsl,\n    &lt;Table as FindDsl&lt;i32&gt;&gt;::Output: LoadQuery&lt;PgConnection, Model&gt;,\n    Model: Serialize,\n{\n    let result: Model = table.find(id).load(&amp;get_connection())?;\n    Ok(to_string(&amp;result)?)\n}\n\nfn main() {\n    let row1 = get_row::&lt;Model1, _&gt;(table1::table, 1);\n    let row2 = get_row::&lt;Model2, _&gt;(table2::table, 1);\n}\n</code></pre>\n\n<p>This is my Cargo.toml file</p>\n\n<pre><code>[package]\nname = \"question\"\nversion = \"0.1.0\"\n\n[dependencies]\ndiesel = {version = \"*\", features = [\"postgres\"]}\ndiesel_codegen = \"*\"\nserde = \"*\"\nserde_derive = \"*\"\nserde_json = \"*\"\ndotenv = \"*\"\n</code></pre>\n\n<p>When I try to run this, I get the following compiler error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0275]: overflow evaluating the requirement `&lt;Table as diesel::query_dsl::filter_dsl::FilterDsl&lt;_&gt;&gt;::Output`\n  --&gt; src/main.rs:54:1\n   |\n54 | / fn get_row&lt;'a, Model, Table&gt;(table: Table, id: i32) -&gt; Result&lt;String, Error&gt;\n55 | | where\n56 | |     Table: QueryDsl,\n57 | |     &lt;Table as FindDsl&lt;i32&gt;&gt;::Output: LoadQuery&lt;PgConnection, Model&gt;,\n...  |\n61 | |     Ok(to_string(&amp;result)?)\n62 | | }\n   | |_^\n   |\n   = help: consider adding a `#![recursion_limit=\"128\"]` attribute to your crate\n</code></pre>\n\n<p>The compiler tells me that I might resolve the issue by increasing the recursion limit, but I tried doing that up to 8096 and the error still wasn't resolved.</p>\n"}, {"tags": ["lambda", "static", "rust", "lifetime", "hyper"], "answers": [{"comments": [{"owner": {"reputation": 5867, "user_id": 2252087, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/020cbe41b02f03d59f3adae022c0ce7d?s=128&d=identicon&r=PG", "display_name": "ensc", "link": "https://stackoverflow.com/users/2252087/ensc"}, "edited": false, "score": 0, "creation_date": 1517659168, "post_id": 48492952, "comment_id": 84190917, "body": "The tokio example is basically <a href=\"https://docs.rs/hyper/0.11.15/src/hyper/server/mod.rs.html#362\" rel=\"nofollow noreferrer\">docs.rs/hyper/0.11.15/src/hyper/server/mod.rs.html#362</a> (part of <code>hyper::server::Server::run()</code>) which is using the closure given to <code>bind()</code>.   So, the future created by hyper&#39;s <code>Server::run()</code> will have a non-<code>&#39;static</code> reference to <code>env</code> too.  But why does this work in hyper, but not here?"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 3, "last_activity_date": 1517186800, "creation_date": 1517186800, "answer_id": 48492952, "question_id": 48486343, "link": "https://stackoverflow.com/questions/48486343/why-can-i-pass-a-reference-to-a-non-static-local-variable-to-a-function-which-ha/48492952#48492952", "title": "Why can I pass a reference to a non-static local variable to a function which has a &#39;static bound?", "body": "<p>By using the <code>move</code> keyword, you've transferred ownership of the <code>Environment</code> variable to the closure. This means that the closure itself <em>has no references</em>, thus there are no lifetimes involved. The <em>return</em> value of the closure has a lifetime tied to the closure itself, but that's allowed.</p>\n\n<p>Note that this case uses <code>NewService</code>.</p>\n\n<p>In the Tokio example, you call <a href=\"https://docs.rs/tokio-core/0.1.12/tokio_core/reactor/struct.Handle.html#method.spawn\" rel=\"nofollow noreferrer\"><code>Handle::spawn</code></a>, which  requires a <code>'static</code> lifetime. The future has reference to <code>Environment</code> which does not meet that requirement.</p>\n\n<p>Note that this case uses <code>Service</code>.</p>\n"}], "owner": {"reputation": 5867, "user_id": 2252087, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/020cbe41b02f03d59f3adae022c0ce7d?s=128&d=identicon&r=PG", "display_name": "ensc", "link": "https://stackoverflow.com/users/2252087/ensc"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 371, "favorite_count": 1, "answer_count": 1, "score": 1, "last_activity_date": 1517186800, "creation_date": 1517142387, "last_edit_date": 1517153177, "question_id": 48486343, "link": "https://stackoverflow.com/questions/48486343/why-can-i-pass-a-reference-to-a-non-static-local-variable-to-a-function-which-ha", "title": "Why can I pass a reference to a non-static local variable to a function which has a &#39;static bound?", "body": "<p>I have problems understanding why it is possible to write code like</p>\n\n<pre><code>extern crate futures;\nextern crate hyper;\n\nuse hyper::server::{Http, Request, Response, Service};\n\nstruct Environment {}\n\nstruct HttpService&lt;'a&gt; {\n    pub env: &amp;'a Environment,\n}\n\nimpl&lt;'a&gt; Service for HttpService&lt;'a&gt; {\n    type Request = Request;\n    type Response = Response;\n    type Future = futures::future::FutureResult&lt;Self::Response, Self::Error&gt;;\n    type Error = hyper::Error;\n\n    fn call(&amp;self, _req: Request) -&gt; Self::Future {\n        futures::future::ok(Response::new())\n    }\n}\n\nfn foo() {\n    let addr = \"127.0.0.1:3000\".parse().unwrap();\n    let env = Environment {};\n\n    // &lt;&lt;&lt;&lt;&lt; why is the non-static &amp;env accepted here?\n    let server = Http::new().bind(&amp;addr, move || Ok(HttpService { env: &amp;env }));\n\n    server.unwrap().run().unwrap();\n}\n</code></pre>\n\n<p>The <code>bind()</code> method is <a href=\"https://docs.rs/hyper/0.11.15/hyper/server/struct.Http.html#method.bind\" rel=\"nofollow noreferrer\">defined</a> as</p>\n\n<pre><code>fn bind&lt;S, Bd&gt;(&amp;self, addr: &amp;SocketAddr, new_service: S) -&gt; Result&lt;Server&lt;S, Bd&gt;&gt;\nwhere\n    S: NewService&lt;Request = Request, Response = Response&lt;Bd&gt;, Error = Error&gt; + 'static,\n    Bd: Stream&lt;Item = B, Error = Error&gt;,\n</code></pre>\n\n<p>This means that the closure must have a <code>'static</code> lifetime which is violated by passing <code>&amp;env</code>.</p>\n\n<p>Why does it work in the code above, but not in</p>\n\n<pre><code>fn bar() {\n    use tokio_core::net::TcpListener;\n\n    let addr = \"127.0.0.1:3000\".parse().unwrap();\n    let env = Environment {};\n\n    let mut core = tokio_core::reactor::Core::new().unwrap();\n    let handle = core.handle();\n\n    use futures::Stream;\n    use futures::Future;\n\n    let listener = TcpListener::bind(&amp;addr, &amp;handle)\n        .unwrap()\n        .incoming()\n        .for_each(move |(socket, addr)| {\n            let svc = HttpService { env: &amp;env };\n            let fut = Http::&lt;hyper::Chunk&gt;::new()\n                .serve_connection(socket, svc)\n                .map(|_| ())\n                .map_err(|_| panic!(\"err\"));\n            handle.spawn(fut);\n            Ok(())\n        });\n}\n</code></pre>\n\n<p>which fails with the expected lifetime related errors:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for borrow expression due to conflicting requirements\n  --&gt; src/main.rs:50:42\n   |\n50 |             let svc = HttpService { env: &amp;env };\n   |                                          ^^^^\n   |\nnote: first, the lifetime cannot outlive the lifetime  as defined on the body at 49:19...\n  --&gt; src/main.rs:49:19\n   |\n49 |           .for_each(move |(socket, addr)| {\n   |  ___________________^\n50 | |             let svc = HttpService { env: &amp;env };\n51 | |             let fut = Http::&lt;hyper::Chunk&gt;::new()\n52 | |                 .serve_connection(socket, svc)\n...  |\n56 | |             Ok(())\n57 | |         });\n   | |_________^\nnote: ...so that closure can access `env`\n  --&gt; src/main.rs:50:42\n   |\n50 |             let svc = HttpService { env: &amp;env };\n   |                                          ^^^^\n   = note: but, the lifetime must be valid for the static lifetime...\nnote: ...so that the type `HttpService&lt;'_&gt;` will meet its required lifetime bounds\n  --&gt; src/main.rs:53:18\n   |\n53 |                 .map(|_| ())\n   |                  ^^^\n</code></pre>\n\n<p>Even better, how can I write the latter part using the more powerful <code>Http::serve_*()</code> functions?</p>\n\n<p>I am using</p>\n\n<ul>\n<li>Rust 1.22.1</li>\n<li>Hyper 0.11.15</li>\n<li>Tokio-core 0.1.12</li>\n</ul>\n"}, {"tags": ["asynchronous", "rust", "lifetime", "serde"], "comments": [{"owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "edited": false, "score": 0, "creation_date": 1517151820, "post_id": 48486232, "comment_id": 83968246, "body": "Too much of code, personally for me. Could you provide a minimal example?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1517152574, "post_id": 48486232, "comment_id": 83968504, "body": "Change your <code>Deserialize</code> bound to <code>DeserializeOwned</code>."}], "owner": {"reputation": 1593, "user_id": 2287402, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/Q5Rvg.png?s=128&g=1", "display_name": "Elie G&#233;nard", "link": "https://stackoverflow.com/users/2287402/elie-g%c3%a9nard"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 41, "favorite_count": 0, "closed_date": 1517152480, "answer_count": 0, "score": 1, "last_activity_date": 1538858360, "creation_date": 1517141649, "last_edit_date": 1538858360, "question_id": 48486232, "link": "https://stackoverflow.com/questions/48486232/lifetime-error-when-deserializing-a-response-from-an-http-request", "closed_reason": "Duplicate", "title": "Lifetime error when deserializing a response from an HTTP request", "body": "<p>I'm making a REST API client and I need to deserialize the JSON API response to a struct using <code>serde</code>. I'm using <code>hyper</code> to make the HTTP request. My client looks like this:</p>\n\n<pre><code>use std::boxed::Box;\nuse std::str;\n\nuse tokio_core;\nuse hyper;\nuse hyper_tls;\nuse serde;\nuse serde_json;\nuse futures::{self, Stream};\nuse futures::future::Future;\n\ntype HttpsClient = hyper::Client&lt;hyper_tls::HttpsConnector&lt;hyper::client::HttpConnector&gt;&gt;;\n\npub struct Client {\n    https_client: HttpsClient\n}\n\n#[derive(Debug)]\npub enum ClientError {\n    DeserializationError(serde_json::Error),\n    UrlParsingError(hyper::error::UriError),\n    RequestError(hyper::Error),\n}\n\nimpl Client {\n    pub fn new(core: &amp;tokio_core::reactor::Core) -&gt; Client {\n        let client = hyper::Client::configure()\n            .connector(hyper_tls::HttpsConnector::new(4, &amp;core.handle()).unwrap())\n            .build(&amp;core.handle());\n\n        Client {\n            https_client: client\n        }\n    }\n\n    pub fn get&lt;'a&gt;(&amp;'a self, url: &amp;str) -&gt; Box&lt;Future&lt;Item=hyper::Chunk, Error=ClientError&gt; + 'a&gt; {\n        let res = futures::future::result(url.parse())\n            .map_err(ClientError::UrlParsingError)\n            .and_then(move |parsed_url| {\n                let mut req = hyper::Request::new(hyper::Method::Get, parsed_url);\n                self.https_client.request(req).map_err(ClientError::RequestError)\n            })\n            .and_then(|res| res.body().concat2().map_err(ClientError::RequestError));\n\n        Box::new(res)\n    }\n\n\n\n}\n</code></pre>\n\n<p>I can use it like this and it works fine:</p>\n\n<pre><code>extern crate serde;\n#[macro_use]\nextern crate serde_derive;\nextern crate serde_json;\nextern crate tokio_core;\nextern crate hyper;\nextern crate hyper_tls;\nextern crate futures;\n\nuse futures::future::Future;\nuse futures::sink::Sink;\nuse futures::stream::Stream;\nuse tokio_core::reactor::Core;\n\nmod client;\n\n#[derive(Deserialize, Debug)]\nstruct Bar {\n    values: Vec&lt;f64&gt;\n}\n\nfn main() {\n    let mut core = Core::new().expect(\"Failed to create core\");\n\n    let url = \"https://api.foo.com/bar\";\n\n    let client = client::Client::new(&amp;core);\n\n    let future = client.get(&amp;url).and_then(|chunk: hyper::Chunk| {\n        let bar: Bar = serde_json::from_slice(&amp;chunk).unwrap();\n        println!(\"{:?}\", bar);\n        Ok(())\n    });\n\n    core.run(future);\n}\n</code></pre>\n\n<p>Now I'd like to make a nicer API for my client and handle the JSON deserialization inside the <code>get</code> function, so in the hope of using it like this:</p>\n\n<pre><code>    let future = client.get(&amp;url).and_then(|bar: Bar| {\n        println!(\"{:?}\", bar);\n        Ok(())\n    });\n</code></pre>\n\n<p>I changed my <code>get</code> function to this:</p>\n\n<pre><code>    pub fn get&lt;'a, T&gt;(&amp;'a self, url: &amp;str) -&gt; Box&lt;Future&lt;Item=T, Error=ClientError&gt; + 'a&gt;\n        where T: serde::de::Deserialize&lt;'a&gt; + 'a\n    {\n\n        let res = futures::future::result(url.parse())\n            .map_err(ClientError::UrlParsingError)\n            .and_then(move |parsed_url| {\n                let mut req = hyper::Request::new(hyper::Method::Get, parsed_url);\n                self.https_client.request(req).map_err(ClientError::RequestError)\n            })\n            .and_then(|res| res.body().concat2().map_err(ClientError::RequestError))\n            .map(|data| serde_json::from_slice(&amp;data).unwrap());\n\n        Box::new(res)\n    }\n</code></pre>\n\n<p>However the compiler gives me an error, telling me that <code>'data' does not live long enough</code>, which kind of makes sense but I don't know how to circumvent this.</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=c2f9bcbcbc76c5d855f258424dadc661&amp;version=stable\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}, {"tags": ["memory-management", "rust"], "answers": [{"comments": [{"owner": {"reputation": 24802, "user_id": 232918, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/b5897762377de1c8ffb9a98673262e91?s=128&d=identicon&r=PG", "display_name": "doron", "link": "https://stackoverflow.com/users/232918/doron"}, "edited": false, "score": 2, "creation_date": 1517137715, "post_id": 48485494, "comment_id": 83964007, "body": "Why would you want to?"}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1517137801, "post_id": 48485494, "comment_id": 83964025, "body": "Then first you make absolutely sure it can&#39;t be implemented in terms of the existing ones. And in the unlikely case that that&#39;s really so, you can either use the allocator API, or use malloc from the libc crate."}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 1, "creation_date": 1517137863, "post_id": 48485494, "comment_id": 83964038, "body": "Note that the Rust standard library for stable Rust can use unstable features internally, and as such is privileged over normal code."}, {"owner": {"reputation": 16481, "user_id": 1392277, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/yJUSK.jpg?s=128&g=1", "display_name": "LppEdd", "link": "https://stackoverflow.com/users/1392277/lppedd"}, "edited": false, "score": 1, "creation_date": 1517137993, "post_id": 48485494, "comment_id": 83964067, "body": "Doron, just because I like to do so. I certainly don&#39;t aim to use my own in production."}, {"owner": {"reputation": 16481, "user_id": 1392277, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/yJUSK.jpg?s=128&g=1", "display_name": "LppEdd", "link": "https://stackoverflow.com/users/1392277/lppedd"}, "edited": false, "score": 0, "creation_date": 1517176852, "post_id": 48485494, "comment_id": 83976723, "body": "@SebastianRedl could you explain the &quot;magic&quot; of Box? Sounds interesting!"}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "reply_to_user": {"reputation": 16481, "user_id": 1392277, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/yJUSK.jpg?s=128&g=1", "display_name": "LppEdd", "link": "https://stackoverflow.com/users/1392277/lppedd"}, "edited": false, "score": 2, "creation_date": 1517177111, "post_id": 48485494, "comment_id": 83976800, "body": "@LppEdd <a href=\"https://manishearth.github.io/blog/2017/01/10/rust-tidbits-box-is-special/\" rel=\"nofollow noreferrer\">manishearth.github.io/blog/2017/01/10/&hellip;</a>"}], "tags": [], "owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "is_accepted": true, "score": 12, "last_activity_date": 1517139205, "last_edit_date": 1517139205, "creation_date": 1517136454, "answer_id": 48485494, "question_id": 48485454, "link": "https://stackoverflow.com/questions/48485454/rust-manual-memory-management/48485494#48485494", "title": "Rust manual memory management", "body": "<p>It's very unusual to directly access the memory allocator in Rust. You generally want to use the smart pointer constructors (<code>Box::new</code>, <code>Rc::new</code>, <code>Arc::new</code>) for single objects and just use <code>Vec</code> or <code>Box&lt;[T]&gt;</code> if you want a heap-based array.</p>\n\n<p>If you really want to allocate memory and get a raw pointer to it, you can look at the implementation of <code>Rc</code>. (Not <code>Box</code>. <code>Box</code> is magical.) To get its backing memory, it actually creates a <code>Box</code> and then uses its <code>into_raw_non_null</code> function to get the raw pointer out. For destroying, it uses the allocator API, but could alternatively use <code>Box::from_raw</code> and then <code>drop</code> that.</p>\n"}, {"comments": [{"owner": {"reputation": 16481, "user_id": 1392277, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/yJUSK.jpg?s=128&g=1", "display_name": "LppEdd", "link": "https://stackoverflow.com/users/1392277/lppedd"}, "edited": false, "score": 1, "creation_date": 1517137713, "post_id": 48485635, "comment_id": 83964005, "body": "I perfectly understand that smart pointers are the way to go. But they&#39;re only containers which internally must use the aforementioned keywords. As I commented on S&#233;bastien answer, what if I&#39;m curious on implementing my own memory container?"}, {"owner": {"reputation": 13169, "user_id": 967945, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/47244a17f72cee237f57f4c4b9613ea1?s=128&d=identicon&r=PG", "display_name": "Dan Hulme", "link": "https://stackoverflow.com/users/967945/dan-hulme"}, "reply_to_user": {"reputation": 16481, "user_id": 1392277, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/yJUSK.jpg?s=128&g=1", "display_name": "LppEdd", "link": "https://stackoverflow.com/users/1392277/lppedd"}, "edited": false, "score": 0, "creation_date": 1517137915, "post_id": 48485635, "comment_id": 83964047, "body": "@LppEdd Then you can look at the implementation of <code>Box</code> in the standard library if you like, but there&#39;s more in there than memory allocation. More so than in C++, Rust&#39;s <code>unsafe</code> code is very tricky to get right."}, {"owner": {"reputation": 16481, "user_id": 1392277, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/yJUSK.jpg?s=128&g=1", "display_name": "LppEdd", "link": "https://stackoverflow.com/users/1392277/lppedd"}, "edited": false, "score": 0, "creation_date": 1517138871, "post_id": 48485635, "comment_id": 83964286, "body": "Thanks. I don&#39;t know why but it seems that manual memory management is an hidden topic in Rust. While if I read a book about Cpp, it&#39;s the first thing I learn about."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 12, "creation_date": 1517141089, "post_id": 48485635, "comment_id": 83964908, "body": "&quot;In modern C++, [\u2026] but you still need to call new to allocate the memory for your smart pointer to manage.&quot; -&gt; No. In modern C++ people use <a href=\"http://en.cppreference.com/w/cpp/memory/unique_ptr/make_unique\" rel=\"nofollow noreferrer\"><code>std::make_unique</code></a> and <a href=\"http://en.cppreference.com/w/cpp/memory/shared_ptr/make_shared\" rel=\"nofollow noreferrer\"><code>std::make_shared</code></a>."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 3, "creation_date": 1517141143, "post_id": 48485635, "comment_id": 83964925, "body": "&quot;if I read a book about Cpp, it&#39;s the first thing I learn about&quot; How old is that book?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 6, "creation_date": 1517143495, "post_id": 48485635, "comment_id": 83965635, "body": "If you write <code>new</code> in C++11 (and beyond), you are asking for trouble. <code>std::vector</code> and <code>std::make_unique</code> should cover 99% of your use cases, <code>std::shared_ptr</code> 99% of the remaining cases. The odd use of <code>new</code> should be strictly reserved to implementing higher-level abstractions in foundational libraries."}, {"owner": {"reputation": 16481, "user_id": 1392277, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/yJUSK.jpg?s=128&g=1", "display_name": "LppEdd", "link": "https://stackoverflow.com/users/1392277/lppedd"}, "edited": false, "score": 0, "creation_date": 1517144846, "post_id": 48485635, "comment_id": 83966134, "body": "Guys, I thought my question were simple and straightforward. We don&#39;t need to debate on Cpp standards. Anyway, I consider not knowing about direct memory allocation a big hole in the understanding of a language like these."}, {"owner": {"reputation": 16481, "user_id": 1392277, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/yJUSK.jpg?s=128&g=1", "display_name": "LppEdd", "link": "https://stackoverflow.com/users/1392277/lppedd"}, "edited": false, "score": 2, "creation_date": 1517145080, "post_id": 48485635, "comment_id": 83966220, "body": "Btw, Stroustrup begin talking about pointers and memory management at page 171 of its own book."}], "tags": [], "owner": {"reputation": 13169, "user_id": 967945, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/47244a17f72cee237f57f4c4b9613ea1?s=128&d=identicon&r=PG", "display_name": "Dan Hulme", "link": "https://stackoverflow.com/users/967945/dan-hulme"}, "is_accepted": false, "score": 12, "last_activity_date": 1517154236, "last_edit_date": 1517154236, "creation_date": 1517137510, "answer_id": 48485635, "question_id": 48485454, "link": "https://stackoverflow.com/questions/48485454/rust-manual-memory-management/48485635#48485635", "title": "Rust manual memory management", "body": "<blockquote>\n  <p>Are the <code>Heap</code> structure and the <code>ptr</code> module (marked with experimental) the ones to look at for this kind of thing?</p>\n</blockquote>\n\n<p>No, as a beginner you absolutely shouldn't start there. When you started learning C, <code>malloc</code> was all there was, and it's still a hugely error-prone part of the language - but you can't write any non-trivial program without it. It's very important for C programmers to learn about <code>malloc</code> and how to avoid all the pitfalls (memory leaks, use-after-free, and so on).</p>\n\n<p>In modern C++, people are taught to use <em>smart pointers</em> to manage memory, instead of using <code>delete</code> by hand, but you still need to call <code>new</code> to allocate the memory for your smart pointer to manage. It's a lot better, but there's still some risk there. And still, as a C++ programmer, you need to learn how <code>new</code> and <code>delete</code> work, in order to use the smart pointers correctly.</p>\n\n<p>Rust aims to be much <em>safer</em> than C or C++. Its smart pointers encapsulate <strong>all</strong> the details of how memory is handled at low-level. You only need to know how to allocate and deallocate raw memory if you're implementing a smart pointer yourself. Because of the way ownership is managed, you actually need to know a lot more details of the language to be able to write correct code. It can't be lesson one or two like it is in C or C++: it's a very advanced topic, and one many Rust programmers never need to learn about.</p>\n\n<p>If you want to learn about how to allocate memory on the heap, the <code>Box</code> class is the place to start with that. In the Rust book, <a href=\"https://doc.rust-lang.org/book/second-edition/ch15-00-smart-pointers.html\" rel=\"noreferrer\">the chapter about smart pointers</a> <strong>is</strong> the chapter about memory allocation.</p>\n"}, {"comments": [{"owner": {"reputation": 1119, "user_id": 11714860, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/e6Xo3.png?s=128&g=1", "display_name": "Sapphire_Brick", "link": "https://stackoverflow.com/users/11714860/sapphire-brick"}, "edited": false, "score": 0, "creation_date": 1611869670, "post_id": 56790193, "comment_id": 116597091, "body": "Not necessarily should you &quot;only use it if you want to create your own smart pointer&quot;."}], "tags": [], "owner": {"reputation": 749, "user_id": 10663732, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wNDF3.jpg?s=128&g=1", "display_name": "tomer zeitune", "link": "https://stackoverflow.com/users/10663732/tomer-zeitune"}, "is_accepted": false, "score": 11, "last_activity_date": 1611913567, "last_edit_date": 1611913567, "creation_date": 1561635546, "answer_id": 56790193, "question_id": 48485454, "link": "https://stackoverflow.com/questions/48485454/rust-manual-memory-management/56790193#56790193", "title": "Rust manual memory management", "body": "<p>Although it's really not recommended to do this ever, you can use <code>malloc</code> and <code>free</code> like you are used to from C. It's not very useful, but here's how it looks:</p>\n<pre><code>extern crate libc; // 0.2.65\n\nuse std::mem;\n\nfn main() {\n    unsafe {\n        let my_num: *mut i32 = libc::malloc(mem::size_of::&lt;i32&gt;() as libc::size_t) as *mut i32;\n        if my_num.is_null() {\n            panic!(&quot;failed to allocate memory&quot;);\n        }\n        libc::free(my_num as *mut libc::c_void);\n    }\n}\n</code></pre>\n<p>A better approach is to use Rust's standard library:</p>\n<pre><code>use std::alloc::{alloc, dealloc, Layout};\n\nfn main() {\n    unsafe {\n        let layout = Layout::new::&lt;u16&gt;();\n        let ptr = alloc(layout);\n\n        *(ptr as *mut u16) = 42;\n        assert_eq!(*(ptr as *mut u16), 42);\n\n        dealloc(ptr, layout);\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 16481, "user_id": 1392277, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/yJUSK.jpg?s=128&g=1", "display_name": "LppEdd", "link": "https://stackoverflow.com/users/1392277/lppedd"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 9998, "favorite_count": 5, "accepted_answer_id": 48485494, "answer_count": 3, "score": 11, "last_activity_date": 1611913567, "creation_date": 1517136216, "last_edit_date": 1517153972, "question_id": 48485454, "link": "https://stackoverflow.com/questions/48485454/rust-manual-memory-management", "title": "Rust manual memory management", "body": "<p>When I began learning C,  I implemented common data structures such as lists, maps and trees. I used <code>malloc</code>, <code>calloc</code>, <code>realloc</code> and <code>free</code> to manage the memory manually when requested. I did the same thing with C++, using <code>new</code> and <code>delete</code>.</p>\n\n<p>Now comes Rust. It seems like Rust doesn't offer any functions or operators which correspond to the ones of C or C++, at least in the stable release.</p>\n\n<p>Are the <a href=\"https://doc.rust-lang.org/std/heap/struct.Heap.html\" rel=\"noreferrer\"><code>Heap</code></a> structure and the <a href=\"https://doc.rust-lang.org/std/ptr/\" rel=\"noreferrer\"><code>ptr</code></a> module (marked with <code>experimental</code>) the ones to look at for this kind of thing?</p>\n\n<p>I know that these data structures are already in the language. It's for the sake of learning.</p>\n"}, {"tags": ["rust", "move-semantics", "mutable"], "comments": [{"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 2, "creation_date": 1517137016, "post_id": 48485203, "comment_id": 83963810, "body": "I think you might have simplified the problem too much. For example, if your real <code>Cointainer</code> is <code>Drop</code> (as the <code>forget</code> call suggests) the situation is more complicated."}, {"owner": {"reputation": 1979, "user_id": 231238, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/79eacf8ee1b8da82f5baffd6ba94054e?s=128&d=identicon&r=PG", "display_name": "LOST", "link": "https://stackoverflow.com/users/231238/lost"}, "reply_to_user": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1517141474, "post_id": 48485203, "comment_id": 83965012, "body": "@SebastianRedl yeah, definitely it does. That&#39;s the whole point."}, {"owner": {"reputation": 1979, "user_id": 231238, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/79eacf8ee1b8da82f5baffd6ba94054e?s=128&d=identicon&r=PG", "display_name": "LOST", "link": "https://stackoverflow.com/users/231238/lost"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517158204, "post_id": 48485203, "comment_id": 83970387, "body": "@Shepmaster , if you need a more concrete example, then you can take a look at <a href=\"https://github.com/rphmeier/allocators/blob/master/src/boxed.rs\" rel=\"nofollow noreferrer\">github.com/rphmeier/allocators/blob/master/src/boxed.rs</a> AllocBox::downcast. There might be a better way to do that, but I&#39;d like to understand why the original issue occurs, and how to circumvent it. It is clear to me, that what I want to do is safe. I don&#39;t understand, however, how to express it in Rust."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517158431, "post_id": 48485203, "comment_id": 83970475, "body": "<i>Questions seeking debugging help (&quot;why isn&#39;t this code working?&quot;) must include the desired behavior, a specific problem or error and <b>the shortest code necessary to reproduce it in the question itself</b>.</i>. It&#39;s not reasonable to require that people looking to answer your question go to an off-site resource."}, {"owner": {"reputation": 1979, "user_id": 231238, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/79eacf8ee1b8da82f5baffd6ba94054e?s=128&d=identicon&r=PG", "display_name": "LOST", "link": "https://stackoverflow.com/users/231238/lost"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517158580, "post_id": 48485203, "comment_id": 83970523, "body": "Let us <a href=\"http://chat.stackoverflow.com/rooms/164042/discussion-between-lost-and-shepmaster\">continue this discussion in chat</a>."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1517188045, "creation_date": 1517188045, "answer_id": 48493082, "question_id": 48485203, "link": "https://stackoverflow.com/questions/48485203/how-do-i-implement-move-semantics-on-a-struct-with-a-mutable-field/48493082#48493082", "title": "How do I implement move semantics on a struct with a mutable field?", "body": "<p>The <a href=\"https://doc.rust-lang.org/book/second-edition/ch04-02-references-and-borrowing.html#the-rules-of-references\" rel=\"nofollow noreferrer\">rules of references state</a>:</p>\n\n<blockquote>\n  <ol>\n  <li><p>At any given time, you can have either but not both of:</p>\n  \n  <ul>\n  <li>One mutable reference.</li>\n  <li>Any number of immutable references.</li>\n  </ul></li>\n  </ol>\n</blockquote>\n\n<p>Your code with immutable references works because those can be freely copied. Your code with mutable references fails because, as far as the compiler can tell, you would need to have have two concurrent mutable references: the saved reference in <code>new</code> and then <code>mem::forget</code> might also need it.</p>\n\n<p>As humans, we recognize that <code>mem::forget</code> will not access the guts of our structure. This is what <code>unsafe</code> code is for: when the compiler cannot guarantee the code we have is truly safe.</p>\n\n<p>A small <code>unsafe</code> block and some casting to a raw pointer and back solves the problem. As with any unsafe code, it should have a big comment block explaining why the compiler doesn't understand it and why it's truly safe.</p>\n\n<pre><code>impl&lt;'a, T: 'a + ?Sized&gt; Drop for Cointainer&lt;'a, T&gt; {\n    fn drop(&amp;mut self) {\n        println!(\"dropping 1: {:p}\", self.item)\n    }\n}\n\nstruct Cointainer&lt;'a, T: 'a + ?Sized&gt; {\n    item: &amp;'a mut T,\n}\n\nimpl&lt;'a, T&gt; Cointainer&lt;'a, T&gt; {\n    fn into_inner(self) -&gt; &amp;'a mut T {\n        // I copied this code from Stack Overflow but didn't read\n        // the warning about explaining why it's safe. Sure hope\n        // this doesn't cause any bugs!\n        unsafe {\n            let x = self.item as *mut _;\n            std::mem::forget(self);\n            &amp;mut *x\n        }\n    }\n\n    fn mv(self) -&gt; Cointainer2&lt;'a, T&gt; {\n        let item = self.into_inner();\n        Cointainer2 { item }\n    }\n}\n\nstruct Cointainer2&lt;'a, T: 'a + ?Sized&gt; {\n    item: &amp;'a mut T,\n}\n\nimpl&lt;'a, T: 'a + ?Sized&gt; Drop for Cointainer2&lt;'a, T&gt; {\n    fn drop(&amp;mut self) {\n        println!(\"dropping 2: {:p}\", self.item)\n    }\n}\n\nfn main() {\n    let mut a = String::new();\n    let c1 = Cointainer { item: &amp;mut a };\n    let c2 = c1.mv();\n}\n</code></pre>\n"}], "owner": {"reputation": 1979, "user_id": 231238, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/79eacf8ee1b8da82f5baffd6ba94054e?s=128&d=identicon&r=PG", "display_name": "LOST", "link": "https://stackoverflow.com/users/231238/lost"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 198, "favorite_count": 0, "accepted_answer_id": 48493082, "answer_count": 1, "score": -1, "last_activity_date": 1517188045, "creation_date": 1517134350, "last_edit_date": 1517161912, "question_id": 48485203, "link": "https://stackoverflow.com/questions/48485203/how-do-i-implement-move-semantics-on-a-struct-with-a-mutable-field", "title": "How do I implement move semantics on a struct with a mutable field?", "body": "<p>I have a minimal example of code that implements move semantics for some container:</p>\n\n<pre><code>use std::mem;\n\nimpl&lt;'a, T: 'a + ?Sized&gt; Drop for Cointainer&lt;'a, T&gt; {\n    fn drop(&amp;mut self) {}\n}\n\nstruct Cointainer&lt;'a, T: 'a + ?Sized&gt; {\n    item: &amp;'a /* mut */ T,\n}\n\nimpl&lt;'a, T&gt; Cointainer&lt;'a, T&gt; {\n    fn mv(self) -&gt; Cointainer&lt;'a, T&gt; {\n        let new = Cointainer { item: /* &amp;mut */ self.item };\n        mem::forget(self);\n        new\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>That compiles and works without any problems.</p>\n\n<p>I realized I will need to mutate the value referenced by <code>Cointainer::item</code>, so I've made the reference <code>mut</code>. When I do so, I get:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0505]: cannot move out of `self` because it is borrowed\n  --&gt; src/main.rs:14:21\n   |\n13 |         let new = Cointainer { item: /* &amp;mut */ self.item };\n   |                                                 --------- borrow of `*self.item` occurs here\n14 |         mem::forget(self);\n   |                     ^^^^ move out of `self` occurs here\n</code></pre>\n\n<p>I need to create a new container and transfer ownership of <code>item</code> there, and drop the old one.</p>\n\n<p>This example is artificial. The actual \"move\" operation does some other stuff, and doesn't necessarily return the same container type.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517111011, "post_id": 48482926, "comment_id": 83958862, "body": "Can you explain what part of the error message you find confusing? I admit I&#39;m used to Rust error messages, but it has nice arrows that point to things that seem pretty understandable to me."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1517111337, "post_id": 48482926, "comment_id": 83958916, "body": "TL;DR the duplicate: You create a <code>String</code> by calling <code>to_string</code>, then take a reference to it via <code>as_str</code>. Since nothing owns the <code>String</code>, the reference is invalidated. However, you are trying to use the reference longer than it is invalid. In C or C++, this would likely have been compiled and only pose memory unsafety at run time. Instead, return a <code>String</code> or a <code>Cow&lt;str&gt;</code>, if needed."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1517111499, "post_id": 48482926, "comment_id": 83958938, "body": "FWIW, I&#39;d write <code>self.number.map(|n| n.to_string()).unwrap_or_else(String::new)</code>."}, {"owner": {"reputation": 5566, "user_id": 530160, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/xRnFS.jpg?s=128&g=1", "display_name": "Nick ODell", "link": "https://stackoverflow.com/users/530160/nick-odell"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517111607, "post_id": 48482926, "comment_id": 83958952, "body": "@Shepmaster Tried that. Doesn&#39;t work. Same error."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1517111653, "post_id": 48482926, "comment_id": 83958958, "body": "<a href=\"https://play.rust-lang.org/?gist=8e6cff01b127054519d22c32e7a9f99a&amp;version=stable\" rel=\"nofollow noreferrer\">Works fine</a>."}], "owner": {"reputation": 5566, "user_id": 530160, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/xRnFS.jpg?s=128&g=1", "display_name": "Nick ODell", "link": "https://stackoverflow.com/users/530160/nick-odell"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 914, "favorite_count": 0, "closed_date": 1517111205, "answer_count": 0, "score": 3, "last_activity_date": 1517112015, "creation_date": 1517110521, "last_edit_date": 1517110948, "question_id": 48482926, "link": "https://stackoverflow.com/questions/48482926/match-statement-borrowed-value-does-not-live-long-enough", "closed_reason": "Duplicate", "title": "match statement borrowed value does not live long enough", "body": "<p>I want to convert a number to a string. Sometimes, the number doesn't exist, and it should be represented by an empty string.</p>\n\n<p>I tried to write the following code:</p>\n\n<pre><code>struct Example {\n    number: Option&lt;usize&gt;,\n}\n\nimpl Example {\n    fn example(&amp;self) {\n        let result = match self.number {\n            Some(num) =&gt; num.to_string().as_str(),\n            None =&gt; \"\",\n        };\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>However, the borrow checker doesn't allow this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: borrowed value does not live long enough\n  --&gt; src/main.rs:8:49\n   |\n8  |             Some(num) =&gt; num.to_string().as_str(),\n   |                          ---------------        ^ temporary value dropped here while still borrowed\n   |                          |\n   |                          temporary value created here\n...\n11 |     }\n   |     - temporary value needs to live until here\n</code></pre>\n\n<p>How can I write this correctly/idiomatically?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 5308, "user_id": 4038191, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/10ec10e81b5315fe2147c38bf3e15e9e?s=128&d=identicon&r=PG", "display_name": "EvilTak", "link": "https://stackoverflow.com/users/4038191/eviltak"}, "edited": false, "score": 0, "creation_date": 1517060868, "post_id": 48476002, "comment_id": 83945989, "body": "You could try a type alias, <code>type Uri = String</code>, but a type alias cannot be considered similar to Scala&#39;s value class."}, {"owner": {"reputation": 6491, "user_id": 1714997, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/44565e25a9f92a342de42b050e14aee5?s=128&d=identicon&r=PG", "display_name": "Dominykas Mostauskis", "link": "https://stackoverflow.com/users/1714997/dominykas-mostauskis"}, "reply_to_user": {"reputation": 5308, "user_id": 4038191, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/10ec10e81b5315fe2147c38bf3e15e9e?s=128&d=identicon&r=PG", "display_name": "EvilTak", "link": "https://stackoverflow.com/users/4038191/eviltak"}, "edited": false, "score": 1, "creation_date": 1517061620, "post_id": 48476002, "comment_id": 83946183, "body": "@EvilTak Type alias can&#39;t be used to distinguish between Uri and String."}], "answers": [{"comments": [{"owner": {"reputation": 6491, "user_id": 1714997, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/44565e25a9f92a342de42b050e14aee5?s=128&d=identicon&r=PG", "display_name": "Dominykas Mostauskis", "link": "https://stackoverflow.com/users/1714997/dominykas-mostauskis"}, "edited": false, "score": 0, "creation_date": 1517062271, "post_id": 48476541, "comment_id": 83946362, "body": "Could you say more about the reasoning against implicit casting? I&#39;m inclined to use <code>From</code> or <code>Into</code> traits for implicit conversion."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517065645, "post_id": 48476541, "comment_id": 83947350, "body": "There&#39;s also a solution for &quot;use this <code>Uri</code> when a <code>String</code> is expected&quot; in certain cases that you should add."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 6491, "user_id": 1714997, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/44565e25a9f92a342de42b050e14aee5?s=128&d=identicon&r=PG", "display_name": "Dominykas Mostauskis", "link": "https://stackoverflow.com/users/1714997/dominykas-mostauskis"}, "edited": false, "score": 0, "creation_date": 1517065712, "post_id": 48476541, "comment_id": 83947372, "body": "@DominykasMostauskis using <code>From</code> / <code>Into</code> would be <i>explicit</i> because you have to type in the code <code>.into</code> or <code>Uri::from</code> somewhere. This marks the conversion location explicitly (which I agree is a good thing)."}, {"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "reply_to_user": {"reputation": 6491, "user_id": 1714997, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/44565e25a9f92a342de42b050e14aee5?s=128&d=identicon&r=PG", "display_name": "Dominykas Mostauskis", "link": "https://stackoverflow.com/users/1714997/dominykas-mostauskis"}, "edited": false, "score": 0, "creation_date": 1517065755, "post_id": 48476541, "comment_id": 83947388, "body": "@DominykasMostauski Most of the point of strong types is to have semantically different types without adding overhead to the internal representation. Implicit conversions kind of go against that; But then again it depends on what exactly you&#39;re trying to do."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1517065789, "post_id": 48476541, "comment_id": 83947398, "body": "FWIW, a struct with a single field has <i>no</i> runtime overhead compared to the wrapped struct."}], "tags": [], "owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "is_accepted": true, "score": 5, "last_activity_date": 1517065568, "last_edit_date": 1517065568, "creation_date": 1517061649, "answer_id": 48476541, "question_id": 48476002, "link": "https://stackoverflow.com/questions/48476002/what-is-the-rust-equivalent-of-scalas-value-classes/48476541#48476541", "title": "What is the Rust equivalent of Scala&#39;s value classes?", "body": "<p>I believe the thing you are looking for is the \"strong type system\". In Rust it is represented with a tuple struct with one field (a <em>newtype</em>):</p>\n\n<pre><code>struct Uri(pub String);\n</code></pre>\n\n<p>This creates a strong type with the least overhead. I'd say this just creates a mark for the compiler that this type is <code>Uri</code> and nothing else. Since this is a strong type, you can't simply pass <code>String</code> to it and get a <code>String</code> from it, you must do a conversion manually.</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=211e0d0484c866c30fbc5c10bbfbdc9a&amp;version=stable\" rel=\"nofollow noreferrer\">Simple example</a> gives you a strong type on top of the <code>String</code>:</p>\n\n<pre><code>struct Uri(pub String);\n\nfn takes_uri(uri: Uri) {\n    println!(\"URI: {}\", uri.0);\n}\n\nfn takes_string(uri: String) {\n    println!(\"String: {}\", uri);\n}\n\nfn main() {\n    let uri = Uri(\"https://stackoverflow.com\".to_owned());\n    takes_uri(uri);\n    // takes_string(uri); // This does not compile\n}\n</code></pre>\n\n<p>The key thing with strong types is that you can not implicitly cast them so this requires the code writer to write explicit code.</p>\n"}], "owner": {"reputation": 6491, "user_id": 1714997, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/44565e25a9f92a342de42b050e14aee5?s=128&d=identicon&r=PG", "display_name": "Dominykas Mostauskis", "link": "https://stackoverflow.com/users/1714997/dominykas-mostauskis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 502, "favorite_count": 0, "accepted_answer_id": 48476541, "answer_count": 1, "score": 2, "last_activity_date": 1517065568, "creation_date": 1517057657, "last_edit_date": 1517065490, "question_id": 48476002, "link": "https://stackoverflow.com/questions/48476002/what-is-the-rust-equivalent-of-scalas-value-classes", "title": "What is the Rust equivalent of Scala&#39;s value classes?", "body": "<p><a href=\"https://docs.scala-lang.org/overviews/core/value-classes.html\" rel=\"nofollow noreferrer\">Scala's value classes</a> provide a way to use the type system without allocating runtime objects (structs in case of Rust). I'm looking for an equivalent in Rust.</p>\n\n<p>The use case I'd like to cover is passing around a string that represents a URI, by annotating relevant signatures with something like <code>Uri</code> instead of <code>String</code>, and, ideally, use this <code>Uri</code> when a <code>String</code> is expected. All this with minimal overhead.</p>\n\n<p>An obvious solution would be to use structs with one field:</p>\n\n<pre><code>struct Uri { val: String }\n</code></pre>\n\n<p>This has the drawback of slightly awkward usage, not being acceptable where a <code>String</code> is expected, and I'm unsure of its overhead.</p>\n\n<p>Is there something similar to Scala's value classes in Rust? Is there some other mechanism that facilitates this use case?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1517018648, "post_id": 48471814, "comment_id": 83937775, "body": "Dereferencing <code>foo</code> (as in <code>let f2 = (*foo).as_ref()</code>)is a little more idiomatic than using <code>.as_ref</code> on an <code>Arc</code>."}], "tags": [], "owner": {"reputation": 4565, "user_id": 1134885, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c428466054762cf7d4b5fb5f4396fa2?s=128&d=identicon&r=PG", "display_name": "NovaDenizen", "link": "https://stackoverflow.com/users/1134885/novadenizen"}, "is_accepted": false, "score": 3, "last_activity_date": 1517017819, "last_edit_date": 1517017819, "creation_date": 1517017423, "answer_id": 48471814, "question_id": 48471607, "link": "https://stackoverflow.com/questions/48471607/how-to-match-on-an-option-inside-an-arc/48471814#48471814", "title": "How to match on an Option inside an Arc?", "body": "<p>The first <code>println</code> passed the early stages of the compiler, but it got flagged by the borrow checker in a later stage.  The second <code>println</code> was an easier fix.</p>\n\n<pre><code>use std::sync::Arc;\n\nfn main() {\n    let foo: Arc&lt;Option&lt;String&gt;&gt; = Arc::new(Some(\"hello\".to_string()));\n\n    if foo.is_some() {\n        let f1: &amp;Option&lt;String&gt; = foo.as_ref();\n        let f2: Option&lt;&amp;String&gt; = f1.as_ref();\n        let f3: &amp;String = f2.unwrap();\n        println!(\"{}\", f3);\n\n        println!(\"{}\", foo.as_ref().as_ref().unwrap())\n    }\n\n    match *foo {\n        Some(ref hello) =&gt; {\n            println!(\"{}\", hello);\n        }\n        None =&gt; {}\n    }\n}\n</code></pre>\n\n<p>The first <code>println</code> confusingly uses two <code>as_ref()</code> method calls.  The first <code>as_ref</code> acts on the <code>Arc</code>, with type signature <code>Fn(&amp;Arc&lt;Option&lt;String&gt;&gt;) -&gt; &amp;Option&lt;String&gt;</code>.  The second one acts on the <code>Option</code>, with type signature <code>Fn(&amp;Option&lt;String&gt;) -&gt; Option&lt;&amp;String&gt;</code></p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=a428e8470e9a46eadcea800bb5b75fe3&amp;version=stable\" rel=\"nofollow noreferrer\">playground</a></p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 8, "last_activity_date": 1517026618, "last_edit_date": 1517026618, "creation_date": 1517018729, "answer_id": 48471913, "question_id": 48471607, "link": "https://stackoverflow.com/questions/48471607/how-to-match-on-an-option-inside-an-arc/48471913#48471913", "title": "How to match on an Option inside an Arc?", "body": "<p>No, you cannot match on an <code>Option</code> inside of an <code>Arc</code>. To use a type in pattern matching, the implementation of the type must be available to you, but the implementation of <code>Arc</code> is not public.</p>\n\n<hr>\n\n<p>In certain cases, you can perform some kind of conversion to be able to match on a <em>reference</em>.</p>\n\n<p>For example, since <code>Arc&lt;T&gt;</code> implements <code>Deref</code>, you can use the <code>*</code> operator to dereference through the <code>Arc&lt;T&gt;</code> to the underlying <code>T</code>. Since there's <a href=\"https://stackoverflow.com/q/43370054/155423\">some ergonomic syntax</a> for this kind of matching, you can then take a reference to the value inside the <code>Option</code> without taking ownership of it:</p>\n\n<pre><code>match *foo {\n    Some(ref hello) =&gt; {\n        println!(\"{}\", hello);\n    }\n    None =&gt; {}\n}\n</code></pre>\n\n<p>You can also use <code>Option::as_ref</code> to convert the <code>&amp;Option&lt;T&gt;</code> (<a href=\"https://stackoverflow.com/q/28519997/155423\">automatically dereferenced</a> from the <code>Arc&lt;T&gt;</code> via <code>Deref</code>) to an <code>Option&lt;&amp;T&gt;</code>:</p>\n\n<pre><code>match Option::as_ref(&amp;foo) {\n    Some(hello) =&gt; {\n        println!(\"{}\", hello);\n    }\n    None =&gt; {}\n}\n</code></pre>\n\n<p>Unfortunately, you can't just call <code>.as_ref()</code> because the trait method <code>AsRef::as_ref</code> takes precedence.</p>\n\n<p>In both cases, it's more idiomatic to use <code>if let</code> if you only care about one of the match arms:</p>\n\n<pre><code>if let Some(ref hello) = *foo {\n    println!(\"{}\", hello);\n}\n</code></pre>\n"}], "owner": {"reputation": 6509, "user_id": 356011, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/d17ff41be1044be6fb5ef186b83efb20?s=128&d=identicon&r=PG", "display_name": "marathon", "link": "https://stackoverflow.com/users/356011/marathon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2006, "favorite_count": 1, "accepted_answer_id": 48471913, "answer_count": 2, "score": 5, "last_activity_date": 1517026618, "creation_date": 1517015018, "last_edit_date": 1517017769, "question_id": 48471607, "link": "https://stackoverflow.com/questions/48471607/how-to-match-on-an-option-inside-an-arc", "title": "How to match on an Option inside an Arc?", "body": "<p>The <a href=\"https://doc.rust-lang.org/std/sync/struct.Arc.html#deref-behavior\" rel=\"noreferrer\">docs for <code>Arc&lt;T&gt;</code></a> say:</p>\n\n<blockquote>\n  <p><code>Arc&lt;T&gt;</code> automatically dereferences to <code>T</code> (via the <code>Deref</code> trait), so you can call <code>T</code>'s methods on a value of type <code>Arc&lt;T&gt;</code>.</p>\n</blockquote>\n\n<p>But is there any way to allow for matching on <code>Option</code>-al types?</p>\n\n<p>Here is a simple example:</p>\n\n<pre><code>use std::sync::Arc;\n\nfn main() {\n    let foo: Arc&lt;Option&lt;String&gt;&gt; = Arc::new(Some(\"hello\".to_string()));\n\n    if foo.is_some() {\n        println!(\"{}\", foo.unwrap());\n    }\n\n    match foo {\n        Some(hello) =&gt; {\n            println!(\"{}\", hello);\n        }\n        None =&gt; {}\n    }\n}\n</code></pre>\n\n<p>The compiler error is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:11:9\n   |\n11 |         Some(hello) =&gt; {\n   |         ^^^^^^^^^^^ expected struct `std::sync::Arc`, found enum `std::option::Option`\n   |\n   = note: expected type `std::sync::Arc&lt;std::option::Option&lt;std::string::String&gt;&gt;`\n              found type `std::option::Option&lt;_&gt;`\n\nerror[E0308]: mismatched types\n  --&gt; src/main.rs:14:9\n   |\n14 |         None =&gt; {}\n   |         ^^^^ expected struct `std::sync::Arc`, found enum `std::option::Option`\n   |\n   = note: expected type `std::sync::Arc&lt;std::option::Option&lt;std::string::String&gt;&gt;`\n              found type `std::option::Option&lt;_&gt;`\n</code></pre>\n"}, {"tags": ["rust", "lifetime", "ownership"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1517009498, "post_id": 48470988, "comment_id": 83935948, "body": "If the struct can be moved, it will invalidate the reference. Therefore, the only way to make this work is to make the struct immovable, which means you can&#39;t return it from a function (because returning is a move)."}], "owner": {"reputation": 1003, "user_id": 4957011, "user_type": "registered", "accept_rate": 82, "profile_image": "https://lh3.googleusercontent.com/-qCvohWQdhyo/AAAAAAAAAAI/AAAAAAAAAyc/5cVJx4KgEFE/photo.jpg?sz=128", "display_name": "Phoenix", "link": "https://stackoverflow.com/users/4957011/phoenix"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 37, "favorite_count": 0, "closed_date": 1517012659, "answer_count": 0, "score": 1, "last_activity_date": 1517019090, "creation_date": 1517009157, "last_edit_date": 1517019090, "question_id": 48470988, "link": "https://stackoverflow.com/questions/48470988/create-object-in-constructor-and-store-reference-in-struct", "closed_reason": "Duplicate", "title": "Create object in constructor and store reference in struct", "body": "<p>I have a constructor for my struct that creates a <code>Texture2d</code> and a <code>Sampler&lt;'a, Texture2d&gt;</code> where <code>'a</code> is the lifetime of the <code>Texture2d</code>. I need to store the <code>Sampler</code> in the struct I am constructing. </p>\n\n<p>If I try to return a struct containing the <code>Sampler&lt;'a, Texture2d&gt;</code> and then the <code>Texture2d</code> goes out of scope, then the struct, which is called <code>DefaultResourcePack&lt;'a&gt;</code> would contain a reference of lifetime <code>'a</code> after that lifetime is over, which wouldn't be valid. The compiler agrees with me - it's not compiling.</p>\n\n<p>I attempt to solve this by giving the <code>DefaultResourcePack</code> ownership of the <code>Texture2d</code> and hoping that the compiler will recognize that the lifetimes are now valid, but the compiler is still complaining.</p>\n\n<p>How can I solve this?</p>\n\n<p>Here's the relevant code:</p>\n\n<pre><code>pub struct DefaultResourcePack&lt;'a&gt; {\n    regions: [TexRegion; SHEET_TEX_ID_COUNT],\n    sheet: Sampler&lt;'a, Texture2d&gt;,\n    simple_program: Program,\n\n    texture: Texture2d,\n}\n\nimpl&lt;'a&gt; DefaultResourcePack&lt;'a&gt; {\n    fn new&lt;F: Facade&gt;(facade: &amp;'a F) -&gt; DefaultResourcePack&lt;'a&gt; {\n        // construct regions\n        let sheet_dim: f32 = 16.0;\n        let slot_size: f32 = 1.0 / sheet_dim;\n\n        let mut regions = [TexRegion::new(0.0, 0.0, 0.0, 0.0); SHEET_TEX_ID_COUNT];\n        for &amp;id in &amp;ALL_SHEET_TEX_ID {\n            let slot = sheet_tex_ord(id) as f32;\n            let ord = sheet_tex_ord(id);\n            regions[ord] = TexRegion::uvwh(\n                (slot % sheet_dim) * slot_size,\n                (slot - (slot % sheet_dim)) * slot_size,\n                slot_size,\n                slot_size,\n            )\n        }\n\n        // construct the sheet\n        let image = image::load_from_memory(DEF_TEX_SHEET_BYTES)\n            .expect(\"texture sheet load error\")\n            .to_rgba();\n        let image_dim = image.dimensions();\n        let image = RawImage2d::from_raw_rgba_reversed(&amp;image.into_raw(), image_dim);\n        let texture: Texture2d = Texture2d::new(facade, image).expect(\"texture creation error\");\n        let sheet: Sampler&lt;'a, Texture2d&gt; =\n            Sampler::new(&amp;texture).magnify_filter(MagnifySamplerFilter::Nearest);\n\n        // construct the program\n        let simple_program = Program::new(\n            facade,\n            ProgramCreationInput::SourceCode {\n                vertex_shader: SIMPLE_SHADER_V,\n                tessellation_control_shader: None,\n                tessellation_evaluation_shader: None,\n                geometry_shader: None,\n                fragment_shader: SIMPLE_SHADER_F,\n                transform_feedback_varyings: None,\n                outputs_srgb: false,\n                uses_point_size: false,\n            },\n        ).expect(\"GLSL compilation error\");\n\n        // construct the pack\n        DefaultResourcePack {\n            regions,\n            sheet,\n            simple_program,\n            texture,\n        }\n    }\n}\n</code></pre>\n\n<p>Here's what the compiler says:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `texture` does not live long enough\n   --&gt; src\\graphics\\resourcepack.rs:164:63\n    |\n164 |             let sheet: Sampler&lt;'a, Texture2d&gt; = Sampler::new(&amp;texture)\n    |                                                               ^^^^^^^ borrowed value does not live long enough\n...\n182 |         }\n    |         - borrowed value only lives until here\n    |\nnote: borrowed value must be valid for the lifetime 'a as defined on the impl at 138:5...\n   --&gt; src\\graphics\\resourcepack.rs:138:5\n    |\n138 | /     impl&lt;'a&gt; DefaultResourcePack&lt;'a&gt; {\n139 | |         fn new&lt;F: Facade&gt;(facade: &amp;'a F) -&gt; DefaultResourcePack&lt;'a&gt; {\n140 | |             // construct regions\n141 | |             let sheet_dim: f32 = 16.0;\n...   |\n182 | |         }\n183 | |     }\n    | |_____^\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1516978581, "post_id": 48463540, "comment_id": 83920749, "body": "A guess: Maybe <code>TcpStream</code> had a method called <code>read</code> that took <code>&amp;self</code>, but <code>AsyncStream</code> (or one of its supertraits) has a method called <code>read</code> that takes <code>&amp;mut self</code>?"}], "answers": [{"comments": [{"owner": {"reputation": 409, "user_id": 899333, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/a3c36106bbf7b90e4d67d54e37863feb?s=128&d=identicon&r=PG", "display_name": "Tom Kludy", "link": "https://stackoverflow.com/users/899333/tom-kludy"}, "edited": false, "score": 0, "creation_date": 1516981726, "post_id": 48463999, "comment_id": 83922832, "body": "Thanks!  This does appear to be my problem.  However I fear I just don&#39;t understand enough in this area yet... what would the trait for an immutable reference look like?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 409, "user_id": 899333, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/a3c36106bbf7b90e4d67d54e37863feb?s=128&d=identicon&r=PG", "display_name": "Tom Kludy", "link": "https://stackoverflow.com/users/899333/tom-kludy"}, "edited": false, "score": 0, "creation_date": 1516981922, "post_id": 48463999, "comment_id": 83922936, "body": "@TomKludy I&#39;m not sure I understand your question. I <a href=\"https://docs.rs/tokio-core/0.1.12/tokio_core/net/struct.TcpStream.html#impl-Read-1\" rel=\"nofollow noreferrer\">linked to an implementation of a trait for a reference</a>, so it seems unlikely that you are asking about the syntax needed for such an implementation. Could you clarify your question a bit?"}, {"owner": {"reputation": 409, "user_id": 899333, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/a3c36106bbf7b90e4d67d54e37863feb?s=128&d=identicon&r=PG", "display_name": "Tom Kludy", "link": "https://stackoverflow.com/users/899333/tom-kludy"}, "edited": false, "score": 0, "creation_date": 1516982801, "post_id": 48463999, "comment_id": 83923508, "body": "I tried following the pattern you linked and might be closer..  But now I get error: <code>cannot infer an appropriate lifetime for lifetime parameter in function call due to conflicting requirements</code>  Thank you for your patient help!  Going to chase this one for a while..."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1516979013, "creation_date": 1516979013, "answer_id": 48463999, "question_id": 48463540, "link": "https://stackoverflow.com/questions/48463540/why-does-changing-from-a-tcpstream-to-a-trait-cause-cannot-borrow-immutable-bor/48463999#48463999", "title": "Why does changing from a TcpStream to a trait cause &quot;cannot borrow immutable borrowed content as mutable&quot;?", "body": "<p><a href=\"https://docs.rs/tokio-core/0.1.12/tokio_core/net/struct.TcpStream.html\" rel=\"nofollow noreferrer\"><code>tokio_core::net::TcpStream</code></a> implements <a href=\"https://docs.rs/tokio-core/0.1.12/tokio_core/net/struct.TcpStream.html#impl-Read-1\" rel=\"nofollow noreferrer\"><code>Read</code></a> and <a href=\"https://docs.rs/tokio-core/0.1.12/tokio_core/net/struct.TcpStream.html#impl-AsyncRead-1\" rel=\"nofollow noreferrer\"><code>AsyncRead</code> for an immutable reference</a>. Your trait does not. </p>\n\n<p><code>&amp;*self.reader</code> converts the <code>Rc&lt;T&gt;</code> to a <code>&amp;T</code>, which is used as the target of the <code>read</code> method.</p>\n\n<p>To fix it, you need to either implement the appropriate trait for an immutable reference to your trait or use some kind of interior mutability.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/31503488/155423\">Why is it possible to implement Read on an immutable reference to File?</a></li>\n</ul>\n"}], "owner": {"reputation": 409, "user_id": 899333, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/a3c36106bbf7b90e4d67d54e37863feb?s=128&d=identicon&r=PG", "display_name": "Tom Kludy", "link": "https://stackoverflow.com/users/899333/tom-kludy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 107, "favorite_count": 0, "accepted_answer_id": 48463999, "answer_count": 1, "score": 0, "last_activity_date": 1516979013, "creation_date": 1516977481, "last_edit_date": 1516978187, "question_id": 48463540, "link": "https://stackoverflow.com/questions/48463540/why-does-changing-from-a-tcpstream-to-a-trait-cause-cannot-borrow-immutable-bor", "title": "Why does changing from a TcpStream to a trait cause &quot;cannot borrow immutable borrowed content as mutable&quot;?", "body": "<p>I would like to create a variation of a SOCKS5 proxy using asynchronous IO. I've done this before in Haskell so I thought would be a good learning challenge.  I am starting with the very <a href=\"https://github.com/tokio-rs/tokio-socks5/blob/a6952adde41289267215c9cdd0487df025214952/src/main.rs\" rel=\"nofollow noreferrer\">well-documented SOCKS5 example code</a>.</p>\n\n<p>In the example, the <code>Transfer</code> struct requires the reader and writer to be of type <code>TcpStream</code>.  In my code these need to be polymorphic, so I started by defining:</p>\n\n<pre><code>pub trait Pollable {\n    fn poll_read(&amp;self) -&gt; Async&lt;()&gt;;\n    fn poll_write(&amp;self) -&gt; Async&lt;()&gt;;\n}\n\nimpl Pollable for TcpStream {\n    fn poll_read(&amp;self) -&gt; Async&lt;()&gt; {\n        tokio_core::net::TcpStream::poll_read(&amp;self)\n    }\n    fn poll_write(&amp;self) -&gt; Async&lt;()&gt; {\n        tokio_core::net::TcpStream::poll_write(&amp;self)\n    }\n}\n\npub trait AsyncStream: tokio_io::AsyncRead + tokio_io::AsyncWrite + Pollable {}\n\nimpl&lt;T&gt; AsyncStream for T\nwhere\n    T: tokio_io::AsyncRead + tokio_io::AsyncWrite + Pollable,\n{}\n</code></pre>\n\n<p>When I switch the type of <code>reader</code> at line 510 from <code>Rc&lt;TcpStream&gt;</code> to <code>Rc&lt;AsyncStream&gt;</code>, the compiler fails with this error on line 598:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0596]: cannot borrow immutable borrowed content as mutable\n   --&gt; src/transfer.rs:125:33\n    |\n125 |                 let n = try_nb!((&amp;*self.reader).read(&amp;mut buffer));\n    |                                 ^^^^^^^^^^^^^^^ cannot borrow as mutable\n</code></pre>\n\n<p>Ignore the file and line number in the error message; I'm in the middle of moving the code around to multiple files but it is otherwise identical to the example.</p>\n\n<p>Following advice I found elsewhere on Stack Overflow, I checked the types.  Before the change, the type of <code>&amp;*self.reader</code> is <code>&amp;tokio_core::net::TcpStream</code>; after the change, the type becomes <code>&amp;transfer::AsyncStream + 'static</code>.  I don't know why the <code>'static</code> lifetime comes in when I change from a concrete type to a trait...</p>\n\n<p>Why does this happen?  How can I fix it?</p>\n"}, {"tags": ["rust", "arm", "embedded", "microcontroller"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1518005074, "post_id": 48462153, "comment_id": 84323947, "body": "Can you please post your xargo command? Also, is there a way to get the source, so one could try this?"}], "owner": {"reputation": 213, "user_id": 1401715, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/e45d4ed70a0c9669d5d59bedbaf6efa5?s=128&d=identicon&r=PG", "display_name": "ik1", "link": "https://stackoverflow.com/users/1401715/ik1"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 406, "favorite_count": 0, "answer_count": 0, "score": 3, "last_activity_date": 1517664660, "creation_date": 1516972783, "last_edit_date": 1516979409, "question_id": 48462153, "link": "https://stackoverflow.com/questions/48462153/undefined-reference-to-objects-from-the-core-library-when-compiling-rust-for-rtl", "title": "Undefined reference to objects from the core library when compiling Rust for RTL8710", "body": "<p>I'm working with Rust and RTL8710 and had success running the example provided <a href=\"https://polyfractal.com/post/rustl8710/\" rel=\"nofollow noreferrer\">according to this guide</a>. Problems start when I use the alloc or freertos packages.</p>\n\n<pre><code>pub use alloc::arc::Arc;\n// ...\nlet serialArc = Arc::new(serial);\n//...\n</code></pre>\n\n<p>Using <code>Arc</code> leads to <code>undefined reference to 'core::panicking::panic'</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>application/Debug/rust_obj/librustl8710.o(rustl8710-604cf36bb12750fc.4ypvbwho0bu5tnww.rcgu.o): In function `&lt;core::option::Option&lt;T&gt;&gt;::unwrap':\n/Users/admin/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/src/libcore/macros.rs:20: undefined reference to `core::panicking::panic'\napplication/Debug/rust_obj/librustl8710.o(rustl8710-604cf36bb12750fc.57k06xfugllsc526.rcgu.o): In function `core::sync::atomic::fence':\n/Users/admin/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/src/libcore/macros.rs:20: undefined reference to `core::panicking::panic'\n/Users/admin/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/src/libcore/macros.rs:20: undefined reference to `core::panicking::panic'\napplication/Debug/rust_obj/librustl8710.o(rustl8710-604cf36bb12750fc.3ik0x0hz6l66cx38.rcgu.o): In function `core::sync::atomic::atomic_sub':\n/Users/admin/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/src/libcore/macros.rs:20: undefined reference to `core::panicking::panic'\n</code></pre>\n\n<p>I solved this somehow with a workaround:</p>\n\n<pre><code>#[export_name = \"_ZN4core9panicking5panic17h89270e21a9d28c4fE\"]\npub fn except_add_overflow() -&gt; ! {\n    loop {}\n}\n</code></pre>\n\n<p>When I try to use freertos functionality:</p>\n\n<pre><code>extern crate freertos_rs;\n\nuse super::*;\nuse prelude::v1::*;\nuse freertos_rs::*;\nuse freertos_rs::patterns::compute_task::*;\n\n// use ctypes::c_void;\nuse serial::{Serial, SerialPort};\n\n//\npub extern \"C\" fn rtos_example(serial: &amp;mut Serial) {\n    let queue = Arc::new(freertos_rs::Queue::new(10).unwrap());\n    // let serialArc = Arc::new(serial);\n\n    let read_task = {\n        let queue = queue.clone();\n        let mut serial = serial.clone();\n        Task::new()\n            .name(\"serial_read\")\n            .compute(move || {\n                serial.rx_i32();\n                queue.send(1, Duration::ms(1000)).unwrap();\n            })\n            .unwrap()\n    };\n}\n</code></pre>\n\n<p>It gets much worse with more missing methods from the core package: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>application/Debug/rust_obj/librustl8710.o(rustl8710-604cf36bb12750fc.3vxbyj3yk65hqzni.rcgu.o): In function `main_entry':\n/Workspace/rustl8710/src/rust/src/lib.rs:50: undefined reference to `core::panicking::panic'\napplication/Debug/rust_obj/librustl8710.o(rustl8710-604cf36bb12750fc.8xzrsc1ux72v29j.rcgu.o): In function `&lt;&amp;'a T as core::fmt::Display&gt;::fmt':\n/Users/k1x/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/src/libcore/fmt/mod.rs:1561: undefined reference to `&lt;str as core::fmt::Display&gt;::fmt'\napplication/Debug/rust_obj/librustl8710.o(rustl8710-604cf36bb12750fc.4ypvbwho0bu5tnww.rcgu.o): In function `&lt;core::option::Option&lt;T&gt;&gt;::unwrap':\n/Users/k1x/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/src/libcore/macros.rs:20: undefined reference to `core::panicking::panic'\napplication/Debug/rust_obj/librustl8710.o(rustl8710-604cf36bb12750fc.16u6js6g0l3k1ic6.rcgu.o): In function `core::result::unwrap_failed':\n/Users/k1x/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/src/libcore/macros.rs:23: undefined reference to `core::panicking::panic_fmt'\napplication/Debug/rust_obj/librustl8710.o(rustl8710-604cf36bb12750fc.52iob5qgp6iyvrqp.rcgu.o): In function `&lt;freertos_rs::units::DurationImpl&lt;T&gt;&gt;::ms':\n/Users/k1x/.cargo/registry/src/github.com-1ecc6299db9ec823/freertos_rs-0.2.0/src/units.rs:42: undefined reference to `core::panicking::panic'\napplication/Debug/rust_obj/librustl8710.o(rustl8710-604cf36bb12750fc.57k06xfugllsc526.rcgu.o): In function `core::sync::atomic::fence':\n/Users/k1x/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/src/libcore/macros.rs:20: undefined reference to `core::panicking::panic'\n/Users/k1x/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/src/libcore/macros.rs:20: undefined reference to `core::panicking::panic'\napplication/Debug/rust_obj/librustl8710.o(rustl8710-604cf36bb12750fc.3ik0x0hz6l66cx38.rcgu.o): In function `core::sync::atomic::atomic_add':\n/Users/k1x/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/src/libcore/macros.rs:20: undefined reference to `core::panicking::panic'\napplication/Debug/rust_obj/librustl8710.o(rustl8710-604cf36bb12750fc.3ik0x0hz6l66cx38.rcgu.o): In function `core::sync::atomic::atomic_sub':\n/Users/k1x/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/src/libcore/macros.rs:20: undefined reference to `core::panicking::panic'\napplication/Debug/rust_obj/libfreertos_rs.o(freertos_rs-15ec896420c1dd77.freertos_rs6.rcgu.o): In function `&lt;T as core::convert::Into&lt;U&gt;&gt;::into':\n/Users/k1x/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/src/libcore/convert.rs:415: undefined reference to `&lt;alloc::string::String as core::convert::From&lt;&amp;'a str&gt;&gt;::from'\napplication/Debug/rust_obj/libfreertos_rs.o(freertos_rs-15ec896420c1dd77.freertos_rs6.rcgu.o): In function `&lt;freertos_rs::base::FreeRtosError as core::fmt::Debug&gt;::fmt':\n/Users/k1x/.cargo/registry/src/github.com-1ecc6299db9ec823/freertos_rs-0.2.0/src/base.rs:2: undefined reference to `core::fmt::Formatter::debug_tuple'\n/Users/k1x/.cargo/registry/src/github.com-1ecc6299db9ec823/freertos_rs-0.2.0/src/base.rs:2: undefined reference to `core::fmt::Formatter::debug_tuple'\n/Users/k1x/.cargo/registry/src/github.com-1ecc6299db9ec823/freertos_rs-0.2.0/src/base.rs:2: undefined reference to `core::fmt::Formatter::debug_tuple'\n/Users/k1x/.cargo/registry/src/github.com-1ecc6299db9ec823/freertos_rs-0.2.0/src/base.rs:2: undefined reference to `core::fmt::Formatter::debug_tuple'\n/Users/k1x/.cargo/registry/src/github.com-1ecc6299db9ec823/freertos_rs-0.2.0/src/base.rs:2: undefined reference to `core::fmt::Formatter::debug_tuple'\napplication/Debug/rust_obj/libfreertos_rs.o(freertos_rs-15ec896420c1dd77.freertos_rs6.rcgu.o):/Users/k1x/.cargo/registry/src/github.com-1ecc6299db9ec823/freertos_rs-0.2.0/src/base.rs:2: more undefined references to `core::fmt::Formatter::debug_tuple' follow\napplication/Debug/rust_obj/libfreertos_rs.o(freertos_rs-15ec896420c1dd77.freertos_rs6.rcgu.o): In function `&lt;freertos_rs::base::FreeRtosError as core::fmt::Debug&gt;::fmt':\n/Users/k1x/.cargo/registry/src/github.com-1ecc6299db9ec823/freertos_rs-0.2.0/src/base.rs:2: undefined reference to `core::fmt::builders::DebugTuple::finish'\n/Users/k1x/.cargo/registry/src/github.com-1ecc6299db9ec823/freertos_rs-0.2.0/src/base.rs:2: undefined reference to `core::fmt::builders::DebugTuple::finish'\n/Users/k1x/.cargo/registry/src/github.com-1ecc6299db9ec823/freertos_rs-0.2.0/src/base.rs:2: undefined reference to `core::fmt::builders::DebugTuple::finish'\n/Users/k1x/.cargo/registry/src/github.com-1ecc6299db9ec823/freertos_rs-0.2.0/src/base.rs:2: undefined reference to `core::fmt::builders::DebugTuple::finish'\n/Users/k1x/.cargo/registry/src/github.com-1ecc6299db9ec823/freertos_rs-0.2.0/src/base.rs:2: undefined reference to `core::fmt::builders::DebugTuple::finish'\napplication/Debug/rust_obj/libfreertos_rs.o(freertos_rs-15ec896420c1dd77.freertos_rs6.rcgu.o):/Users/k1x/.cargo/registry/src/github.com-1ecc6299db9ec823/freertos_rs-0.2.0/src/base.rs:2: more undefined references to `core::fmt::builders::DebugTuple::finish' follow\n</code></pre>\n\n<p>My Cargo.toml:</p>\n\n<pre><code>[package]\nname = \"rustl8710\"\nversion = \"0.1.0\"\nauthors = [\"polyfractal &lt;zach@zacharytong.com&gt;\"]\n\n[dependencies]\nfreertos_rs = \"0.2\"\n\n[profile.dev]\npanic = \"abort\"\n\n[profile.release]\npanic = \"abort\"\n\n[lib]\nname = \"rustl8710\"\ncrate-type=[\"lib\"]\n\n#[dependencies.lazy_static]\n#version = \"0.2.1\"\n#features = [\"nightly\", \"spin_no_std\"]\n</code></pre>\n\n<p>And my Xargo.toml:</p>\n\n<pre><code>[target.thumbv7m-none-eabi.dependencies]\nalloc = {}\n</code></pre>\n\n<p>I had a guess that that the core functionality is missing from all the libraries except the main one. In order to test this guess, I added a <code>panic</code> in the main method and get:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>application/Debug/rust_obj/librustl8710.o(rustl8710-604cf36bb12750fc.3vxbyj3yk65hqzni.rcgu.o): In function `main_entry':\n/Workspace/rustl8710/src/rust/src/lib.rs:50: undefined reference to `core::panicking::panic'\n</code></pre>\n\n<p>Is there any way to fix these missing objects?</p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 2645, "user_id": 5254193, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-PTHapBqhSQM/AAAAAAAAAAI/AAAAAAAABA4/r5mrExVuDgU/photo.jpg?sz=128", "display_name": "Masaki Hara", "link": "https://stackoverflow.com/users/5254193/masaki-hara"}, "edited": false, "score": 1, "creation_date": 1516973423, "post_id": 48461886, "comment_id": 83917440, "body": "Perhaps you want <code>type LI&lt;&#39;a&gt;: Interface&lt;&#39;a&gt;;</code> / <code>Self::LI&lt;&#39;a&gt;</code> (different <code>LI&lt;&#39;a&gt;</code> for different <code>&#39;a</code>) instead of <code>type LI: for&lt;&#39;a&gt; Interface&lt;&#39;a&gt;;</code> / <code>Self::LI</code> (the single <code>LI</code> implements <code>Interface&lt;&#39;a&gt;</code> for all <code>&#39;a</code>)? If so, this is still <a href=\"https://github.com/rust-lang/rust/issues/44265\" rel=\"nofollow noreferrer\">under implementation</a>."}], "owner": {"reputation": 11, "user_id": 9272328, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-8YYkds1IJSU/AAAAAAAAAAI/AAAAAAAAAAA/b8v7VG0jTws/photo.jpg?sz=128", "display_name": "Szymon Wieloch", "link": "https://stackoverflow.com/users/9272328/szymon-wieloch"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 48, "favorite_count": 0, "closed_date": 1516982089, "answer_count": 0, "score": 1, "last_activity_date": 1516978341, "creation_date": 1516971635, "last_edit_date": 1516977603, "question_id": 48461886, "link": "https://stackoverflow.com/questions/48461886/how-to-define-lifetimes-in-associated-types", "closed_reason": "Duplicate", "title": "How to define lifetimes in associated types?", "body": "<p>I am working on a Rust crate that opens network interfaces using several available libraries. The project consists of:</p>\n\n<ul>\n<li>Trait <code>Library</code> and and implementations <code>LibraryA</code>, <code>LibraryB</code>, <code>LibraryC</code>.</li>\n<li>Trait <code>Interface</code> and its implementations <code>InterfaceA</code>, <code>InterfaceB</code>,\n<code>InterfaceC</code>. All interfaces have references to their libraries.</li>\n</ul>\n\n\n\n<pre><code>trait Interface&lt;'a&gt; {\n    fn do_something();\n}\n\ntrait Library {\n    type LI: for&lt;'a&gt; Interface&lt;'a&gt;;\n    fn open_interface(&amp;self) -&gt; Self::LI;\n}\n\nstruct LibraryA {\n    abc: i32,\n}\n\nstruct InterfaceA&lt;'a&gt; {\n    abc: &amp;'a i32,\n}\n\nimpl Library for LibraryA {\n    type LI = InterfaceA&lt;'a&gt;;\n\n    fn open_interface(&amp;self) -&gt; Self::LI {\n        unimplemented!()\n    }\n}\n\nimpl&lt;'a&gt; Interface&lt;'a&gt; for InterfaceA&lt;'a&gt; {\n    fn do_something() {\n        unimplemented!()\n    }\n}\n</code></pre>\n\n<p>This does not compile because I don't know how to define the associated type <code>LI</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0261]: use of undeclared lifetime name `'a`\n  --&gt; src/main.rs:19:26\n   |\n19 |     type LI = InterfaceA&lt;'a&gt;;\n   |                          ^^ undeclared lifetime\n</code></pre>\n\n<p>Here it gets tricky - <code>LibraryA</code> does not have any real lifetime (no references to external objects) and I couldn't find any way to define a lifetime where the <code>LI</code> type gets defined.</p>\n"}, {"tags": ["process", "rust", "stderr"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1516971810, "post_id": 48461320, "comment_id": 83916606, "body": "Is it even possible? I never heard about it"}, {"owner": {"reputation": 321, "user_id": 6193633, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/f642d3c45da4db031e2d41798d1801a5?s=128&d=identicon&r=PG&f=1", "display_name": "kdy", "link": "https://stackoverflow.com/users/6193633/kdy"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1517024835, "post_id": 48461320, "comment_id": 83938578, "body": "@Boiethios I expected something like child process api in some scripting languages."}], "answers": [{"comments": [{"owner": {"reputation": 321, "user_id": 6193633, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/f642d3c45da4db031e2d41798d1801a5?s=128&d=identicon&r=PG&f=1", "display_name": "kdy", "link": "https://stackoverflow.com/users/6193633/kdy"}, "edited": false, "score": 0, "creation_date": 1517024743, "post_id": 48463533, "comment_id": 83938563, "body": "Then.. how does node child process work? Does it just spawn other   instance of <code>node</code> executable with different parameter?"}, {"owner": {"reputation": 321, "user_id": 6193633, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/f642d3c45da4db031e2d41798d1801a5?s=128&d=identicon&r=PG&f=1", "display_name": "kdy", "link": "https://stackoverflow.com/users/6193633/kdy"}, "edited": false, "score": 0, "creation_date": 1517024778, "post_id": 48463533, "comment_id": 83938571, "body": "Oh.. that make sense.. And I guess that&#39;s why only scripting languages has such multi process apis."}, {"owner": {"reputation": 321, "user_id": 6193633, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/f642d3c45da4db031e2d41798d1801a5?s=128&d=identicon&r=PG&f=1", "display_name": "kdy", "link": "https://stackoverflow.com/users/6193633/kdy"}, "edited": false, "score": 0, "creation_date": 1517027912, "post_id": 48463533, "comment_id": 83939043, "body": "I just want to capture stderr of test, and diff it with expected output. I don&#39;t care if it runs in separate process, but stderr is per process so I thought I have to somehow create a process for each test."}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1517057825, "post_id": 48463533, "comment_id": 83945241, "body": "<a href=\"https://docs.rs/libc/0.2.36/libc/fn.fork.html\" rel=\"nofollow noreferrer\"><code>fork</code></a> &quot;promotes&quot; a copy of the current thread to a new process.  How does that not fit the question? (Although I wouldn&#39;t recommend using <code>fork</code> in multi-thread context.)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1517066628, "post_id": 48463533, "comment_id": 83947641, "body": "@Stefan you have a good point, I just didn&#39;t think <code>fork</code> was relevant to OPs actual situation as it sounded like they wanted to move <i>another</i> thread to a process (plus it is platform-dependent). I might as well add it for completeness."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1517068193, "last_edit_date": 1517068193, "creation_date": 1516977458, "answer_id": 48463533, "question_id": 48461320, "link": "https://stackoverflow.com/questions/48461320/how-can-i-promote-a-thread-to-child-process-in-rust/48463533#48463533", "title": "How can I promote a thread to child process in Rust?", "body": "<blockquote>\n  <p>How can I promote a thread to child process</p>\n</blockquote>\n\n<p>You cannot. This is simply something that operating systems don't <em>do</em>; it's not specific to Rust. You cannot start an arbitrary thread and then move it (\"promote it\") to another process later; threads and processes are very different concepts.</p>\n\n<blockquote>\n  <p>My project does not have a binary to run yet</p>\n</blockquote>\n\n<p>I suggest making one.</p>\n\n<hr>\n\n<p>If you wish to simply start another process, you can use <a href=\"https://doc.rust-lang.org/std/process/struct.Command.html\" rel=\"nofollow noreferrer\"><code>std::process::Command</code></a> for that. This would be the most recommended option.</p>\n\n<p>POSIX does have the <a href=\"http://man7.org/linux/man-pages/man2/fork.2.html\" rel=\"nofollow noreferrer\"><code>fork</code></a> call, which duplicates the <em>entire</em> memory of the process and the <em>current</em> thread, so theoretically you could use this to \"promote\" the current thread to a new process.</p>\n\n<p><a href=\"https://stackoverflow.com/q/1235516/155423\">Using this in a multithreaded context can be very complicated</a> and basically will always be recommended against by default.</p>\n\n<p><a href=\"https://stackoverflow.com/q/985281/155423\">Support for <code>fork</code> on Windows is... limited, at best</a>. If you only care about POSIX systems, you can use <a href=\"https://docs.rs/libc/0.2.36/libc/fn.fork.html\" rel=\"nofollow noreferrer\"><code>fork</code> from the libc crate</a>.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"http://man7.org/linux/man-pages/man2/fork.2.html\" rel=\"nofollow noreferrer\">fork man page</a></li>\n<li><a href=\"https://stackoverflow.com/q/1235516/155423\">fork in multi-threaded program</a> </li>\n<li><a href=\"https://stackoverflow.com/q/985281/155423\">What is the closest thing windows has to fork()?</a></li>\n</ul>\n\n<hr>\n\n<blockquote>\n  <p>capturing stdout/stderr</p>\n</blockquote>\n\n<p>There <em>are</em> hidden, unstable methods for changing the current threads <code>stdout</code> / <code>stderr</code>. Rust's testing framework uses these methods. If you'd be interested in making these stable, you could perhaps <a href=\"https://github.com/rust-lang/rust/issues/31343\" rel=\"nofollow noreferrer\">offer to help on the tracking issue</a>.</p>\n"}], "owner": {"reputation": 321, "user_id": 6193633, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/f642d3c45da4db031e2d41798d1801a5?s=128&d=identicon&r=PG&f=1", "display_name": "kdy", "link": "https://stackoverflow.com/users/6193633/kdy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 582, "favorite_count": 1, "accepted_answer_id": 48463533, "answer_count": 1, "score": 0, "last_activity_date": 1517068193, "creation_date": 1516969473, "last_edit_date": 1516977282, "question_id": 48461320, "link": "https://stackoverflow.com/questions/48461320/how-can-i-promote-a-thread-to-child-process-in-rust", "title": "How can I promote a thread to child process in Rust?", "body": "<p>I need to write something similar to compiletest. Compiletest works by invoking the <code>rustc</code> process and capturing stdout/stderr. My project does not have a binary to run yet, so I need another way to create a subprocess.</p>\n\n<p>I can't use a channel nor stdout because it's not controlled by my code.</p>\n"}, {"tags": ["intellij-idea", "rust", "toolchain"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1516965745, "post_id": 48455832, "comment_id": 83913513, "body": "What is the output when you run <code>rustup show</code> in that Rust project&#39;s directory?"}], "answers": [{"tags": [], "owner": {"reputation": 1003, "user_id": 4957011, "user_type": "registered", "accept_rate": 82, "profile_image": "https://lh3.googleusercontent.com/-qCvohWQdhyo/AAAAAAAAAAI/AAAAAAAAAyc/5cVJx4KgEFE/photo.jpg?sz=128", "display_name": "Phoenix", "link": "https://stackoverflow.com/users/4957011/phoenix"}, "is_accepted": true, "score": 0, "last_activity_date": 1517017881, "last_edit_date": 1517017881, "creation_date": 1517008518, "answer_id": 48470897, "question_id": 48455832, "link": "https://stackoverflow.com/questions/48455832/intellij-reports-rust-toolchain-not-installed-even-though-i-just-installed-it/48470897#48470897", "title": "Intellij reports Rust toolchain not installed, even though I just installed it", "body": "<p>If I install Rust using <a href=\"https://www.rustup.rs/\" rel=\"nofollow noreferrer\">rustup</a> using Powershell while in the directory, it works. It doesn't work when I install Rust through the installer executable.</p>\n"}], "owner": {"reputation": 1003, "user_id": 4957011, "user_type": "registered", "accept_rate": 82, "profile_image": "https://lh3.googleusercontent.com/-qCvohWQdhyo/AAAAAAAAAAI/AAAAAAAAAyc/5cVJx4KgEFE/photo.jpg?sz=128", "display_name": "Phoenix", "link": "https://stackoverflow.com/users/4957011/phoenix"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 817, "favorite_count": 0, "accepted_answer_id": 48470897, "answer_count": 1, "score": 1, "last_activity_date": 1517017881, "creation_date": 1516941118, "question_id": 48455832, "link": "https://stackoverflow.com/questions/48455832/intellij-reports-rust-toolchain-not-installed-even-though-i-just-installed-it", "title": "Intellij reports Rust toolchain not installed, even though I just installed it", "body": "<p>I'm programming Rust in IntelliJ, on Windows 10. Trying to switch to the nightly channel so I can use some nightly features. But I can't get it to compile in nightly. This picture says it all:</p>\n\n<p><a href=\"https://i.stack.imgur.com/OXK6S.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/OXK6S.png\" alt=\"enter image description here\"></a></p>\n\n<p>On the right, we have IntelliJ telling me: error: toolchain 'nightly-x86_64-pc-windows-msvc' is not installed</p>\n\n<p>On the left, we have me just having had installed nightly-x86_64-pc-windows-msvc.</p>\n\n<p>I've tried restarting my computer, IDE, uninstalling and reinstalling, etc. I've tried setting path variables, in my system, and in the IntelliJ run config. I'm still bamboozled.</p>\n\n<p>Any suggestions?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 15, "user_id": 2532830, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/74ba0034b4bf0769b7da01efd07330b9?s=128&d=identicon&r=PG", "display_name": "KillerByte", "link": "https://stackoverflow.com/users/2532830/killerbyte"}, "is_accepted": false, "score": 0, "last_activity_date": 1516941553, "creation_date": 1516941553, "answer_id": 48455872, "question_id": 48455581, "link": "https://stackoverflow.com/questions/48455581/closure-takes-0-arguments-on-a-closure-that-takes-an-argument/48455872#48455872", "title": "&quot;Closure takes 0 arguments&quot; on a closure that takes an argument", "body": "<p>Turns out that my Rust version was 1.22.1, but the latest version is 1.23.0. This explains why the playground was returning a more accurate error: <code>expected signature of fn(std::result::Result&lt;bool, futures::Canceled&gt;) -&gt; _</code>... which was the problem exactly.</p>\n"}], "owner": {"reputation": 15, "user_id": 2532830, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/74ba0034b4bf0769b7da01efd07330b9?s=128&d=identicon&r=PG", "display_name": "KillerByte", "link": "https://stackoverflow.com/users/2532830/killerbyte"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 700, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1516977029, "creation_date": 1516938868, "last_edit_date": 1516977029, "question_id": 48455581, "link": "https://stackoverflow.com/questions/48455581/closure-takes-0-arguments-on-a-closure-that-takes-an-argument", "title": "&quot;Closure takes 0 arguments&quot; on a closure that takes an argument", "body": "<p>I am attempting to pass a closure to a function after a condition:</p>\n\n<pre><code>extern crate futures;\nextern crate tokio_core;\n\nuse futures::prelude::*;\nuse futures::future;\nuse futures::unsync::*;\n\nuse tokio_core::reactor::*;\n\nfn main() {\n    let mut core = Core::new().unwrap();\n    let h2 = core.handle();\n\n    let fun = |should: Result&lt;bool, ()&gt;| {\n        if should.unwrap_or(true) {\n            // do something\n        }\n\n        future::ok(())\n    };\n\n    let (tx, rx) = oneshot::channel::&lt;bool&gt;();\n\n    let dummy = true;\n\n    if dummy {\n        h2.spawn(rx.then(fun));\n    } else {\n        h2.spawn(future::ok(true).then(fun));\n    }\n\n    core.run(future::ok::&lt;(), ()&gt;(())).unwrap();\n}\n</code></pre>\n\n<p>Here is <a href=\"https://play.rust-lang.org/?gist=fa30a9eaefddc9bc389173c8386fc1b7&amp;version=stable\" rel=\"nofollow noreferrer\">the code in the playground</a>, but it is getting a different error from the error baffling me. My error looks like:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0593]: closure takes 0 arguments but 1 argument is required\n   --&gt; src/client/forger.rs:123:25\n    |\n57  |           let fun = |should: Result&lt;bool, ()&gt;| {\n    |  ___________________-\n58  | |             if !should.unwrap_or(false) {\n59  | |                 return Box::new(future::ok::&lt;(), ()&gt;(()));\n60  | |             }\n...   |\n117 | |             Box::new(future::ok(()))\n118 | |         };\n    | |_________- takes 0 arguments\n...\n123 |               h2.spawn(rx.then(fun));\n    |                           ^^^^ expected closure that takes 1 argument\n</code></pre>\n\n<p>Why does Rust say the function <code>fun</code> takes 0 arguments when it appears to quote it as taking one?</p>\n\n<p>My Rust version is 1.22.1.</p>\n"}, {"tags": ["rust", "unused-variables"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1516909484, "post_id": 48450661, "comment_id": 83894329, "body": "The compiler message <i>tells you exactly what is happening</i>: <code>= note: #[warn(unused_variables)] on by default. to avoid this warning, consider using `_i` instead</code>. It&#39;s an unused variable, and an underscore conveys that you don&#39;t care that the variable is unused."}], "owner": {"reputation": 61, "user_id": 7758540, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4190aae5273d2349b953aa1242e7aa52?s=128&d=identicon&r=PG&f=1", "display_name": "Viktor", "link": "https://stackoverflow.com/users/7758540/viktor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 888, "favorite_count": 0, "closed_date": 1516909389, "answer_count": 0, "score": 1, "last_activity_date": 1516909443, "creation_date": 1516909235, "last_edit_date": 1516909443, "question_id": 48450661, "link": "https://stackoverflow.com/questions/48450661/prefixing-with-underscore-to-remove-unused-code-warning-what-am-i-actually-tell", "closed_reason": "Duplicate", "title": "Prefixing with underscore to remove unused code warning. What am I actually telling the compiler?", "body": "<p>When using a for loop</p>\n\n<pre><code>for i in 1..10 {}\n</code></pre>\n\n<p>The compiler tells me to prefix <code>i</code> like this: <code>_i</code>.</p>\n\n<p>What am I actually conveying by putting the underscore in front of variables or functions?</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 1, "creation_date": 1516873809, "post_id": 48438783, "comment_id": 83870958, "body": "As far as I know, <code>cargo install --force</code> is the only way. It&#39;s how I&#39;ve always done it, at the very least."}, {"owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "edited": false, "score": 1, "creation_date": 1516894326, "post_id": 48438783, "comment_id": 83884905, "body": "The other way is to <code>cargo uninstall &lt;package&gt;</code> and then <code>cargo install &lt;package&gt;</code>."}], "owner": {"reputation": 22928, "user_id": 978690, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/lNUl6.png?s=128&g=1", "display_name": "rap-2-h", "link": "https://stackoverflow.com/users/978690/rap-2-h"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 50, "favorite_count": 0, "closed_date": 1516874155, "answer_count": 0, "score": 0, "last_activity_date": 1516869745, "creation_date": 1516869745, "question_id": 48438783, "link": "https://stackoverflow.com/questions/48438783/is-there-a-way-to-update-a-binary-package", "closed_reason": "Duplicate", "title": "Is there a way to update a binary package?", "body": "<p>According to the <a href=\"https://doc.rust-lang.org/book/second-edition/ch14-04-installing-binaries.html\" rel=\"nofollow noreferrer\">documentation</a>, you can install binary packages (<code>ripgrep</code>, <code>cargo-web</code>, etc.) by calling <code>cargo install</code>. Is there a way to <em>update</em> an installed package? </p>\n\n<p>I know I can call <code>cargo install --force</code>, but it does not seem to be the right way (<code>force</code> does not mean update, just enforce some rules).</p>\n"}, {"tags": ["concurrency", "macros", "rust", "keyboard-shortcuts"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1516891972, "post_id": 48436182, "comment_id": 83883137, "body": "Are you sure there&#39;s a guarantee that the callback is called immediately?  If not, a lock might not actually be what you want, since the callback triggered by the first callback may be called after the first callback returned, so it would be able to grab the lock and trigger another round of key strokes"}, {"owner": {"reputation": 23, "user_id": 9255216, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-v5r5P0H2VuA/AAAAAAAAAAI/AAAAAAAAABE/qz3UW1CuvWY/photo.jpg?sz=128", "display_name": "Handles", "link": "https://stackoverflow.com/users/9255216/handles"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1516917524, "post_id": 48436182, "comment_id": 83898294, "body": "@SvenMarnach Good point, and I don&#39;t think there is such a guarantee from <code>inputbot</code>."}], "answers": [{"comments": [{"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 1, "creation_date": 1516869398, "post_id": 48437967, "comment_id": 83868291, "body": "&quot;We have poisoned the mutex&quot; was a bit ambiguous. The mutex wasn&#39;t actually poisoned by <code>try_lock</code>."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1516870685, "post_id": 48437967, "comment_id": 83869015, "body": "Would a <code>RefCell</code> be sufficient here? It&#39;s unclear to me whether there are threads at play or not."}, {"owner": {"reputation": 1699, "user_id": 783825, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/cce2622c5ccd49a3cbf2007491ab1075?s=128&d=identicon&r=PG", "display_name": "Neikos", "link": "https://stackoverflow.com/users/783825/neikos"}, "edited": false, "score": 0, "creation_date": 1516872004, "post_id": 48437967, "comment_id": 83869815, "body": "You are right that could be, I am wondering though how one would get interleaving then instead of just an infinite loop."}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1516882921, "post_id": 48437967, "comment_id": 83876743, "body": "@MatthieuM. the question states that the closure works as a callback, the library can call it from different threads."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 0, "creation_date": 1516887667, "post_id": 48437967, "comment_id": 83879893, "body": "@red75prime: I didn&#39;t know this particular library, so didn&#39;t know if it was multi-threaded or not :)"}], "tags": [], "owner": {"reputation": 1699, "user_id": 783825, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/cce2622c5ccd49a3cbf2007491ab1075?s=128&d=identicon&r=PG", "display_name": "Neikos", "link": "https://stackoverflow.com/users/783825/neikos"}, "is_accepted": true, "score": 5, "last_activity_date": 1516869288, "last_edit_date": 1516869288, "creation_date": 1516866522, "answer_id": 48437967, "question_id": 48436182, "link": "https://stackoverflow.com/questions/48436182/preventing-a-fn-from-being-invoked-again-while-its-already-running/48437967#48437967", "title": "Preventing a Fn from being invoked again while it&#39;s already running", "body": "<p>What you want here is that the function is mutually exclusive to itself.</p>\n\n<p>Rust allows you to do this with the <a href=\"https://doc.rust-lang.org/std/sync/struct.Mutex.html\" rel=\"noreferrer\"><code>Mutex</code></a> struct. It allows you to hold a lock that when acquired stops anyone else from taking it until you release it.</p>\n\n<p>Specifically the functionality you want is the <a href=\"https://doc.rust-lang.org/std/sync/struct.Mutex.html#method.try_lock\" rel=\"noreferrer\"><code>try_lock</code></a> method which would allow you to check if the lock has already been acquired and would allow you to handle that case.</p>\n\n<pre><code>let lock = mutex.try_lock();\n\nmatch lock {\n    Ok(_) =&gt; {\n       // We are the sole owners here\n    }\n    Err(TryLockError::WouldBlock) =&gt; return,\n    Err(TryLockError::Poisoned(_)) =&gt; {\n        println!(\"The mutex is poisoned\");\n        return\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 99643, "user_id": 445517, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/57e2ba76e6290c4e9e19821a068bc8c1?s=128&d=identicon&r=PG", "display_name": "CodesInChaos", "link": "https://stackoverflow.com/users/445517/codesinchaos"}, "edited": false, "score": 1, "creation_date": 1516892804, "post_id": 48445870, "comment_id": 83883745, "body": "How is this simpler than <code>try_lock</code>? The main difference I see is that you turn poisoning into a deadlock."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 99643, "user_id": 445517, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/57e2ba76e6290c4e9e19821a068bc8c1?s=128&d=identicon&r=PG", "display_name": "CodesInChaos", "link": "https://stackoverflow.com/users/445517/codesinchaos"}, "edited": false, "score": 0, "creation_date": 1516893055, "post_id": 48445870, "comment_id": 83883923, "body": "@CodesInChaos do you have a suggestion how I can improve my sentence where I state my rationale for saying simpler: &quot;as you don&#39;t need to worry about certain failure cases and it can easily be made into a static variable&quot;? I&#39;m also missing where you see a deadlock... could you expand on that some more?"}, {"owner": {"reputation": 99643, "user_id": 445517, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/57e2ba76e6290c4e9e19821a068bc8c1?s=128&d=identicon&r=PG", "display_name": "CodesInChaos", "link": "https://stackoverflow.com/users/445517/codesinchaos"}, "edited": false, "score": 0, "creation_date": 1516893101, "post_id": 48445870, "comment_id": 83883947, "body": "Which failure cases do you not have to worry about? The only failure case I can think of is if the code inside the lock panics, in which case unwrapping <code>try_lock</code> crashes with a poisoned mutex panic (easy to debug) while yours hangs forever on the next attempt to acquire the lock."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 99643, "user_id": 445517, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/57e2ba76e6290c4e9e19821a068bc8c1?s=128&d=identicon&r=PG", "display_name": "CodesInChaos", "link": "https://stackoverflow.com/users/445517/codesinchaos"}, "edited": false, "score": 1, "creation_date": 1516893141, "post_id": 48445870, "comment_id": 83883983, "body": "@CodesInChaos literally the fact that there is no <code>Result</code> whatsoever in the first code example \u2014 it <i>cannot</i> fail. Why would it hang forever? If the block with <code>println!(&quot;recur&quot;);</code> executes, the atomic variable has been set to <code>true</code>; all future attempts to read the variable would return <code>true</code> and the function wouldn&#39;t execute. I&#39;m not sure what you mean by &quot;acquire the lock&quot;; AFAIK that&#39;s not how atomic variables work."}, {"owner": {"reputation": 99643, "user_id": 445517, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/57e2ba76e6290c4e9e19821a068bc8c1?s=128&d=identicon&r=PG", "display_name": "CodesInChaos", "link": "https://stackoverflow.com/users/445517/codesinchaos"}, "edited": false, "score": 0, "creation_date": 1516893470, "post_id": 48445870, "comment_id": 83884234, "body": "I misread it as <code>while</code>. But <code>if</code> still has a similar effect, <i>silently</i> preventing this code from ever running again after a panic. (By acquiring the lock, I mean your CAS instruction, which corresponds to the <code>try_lock</code> operation of a simple spinlock)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 99643, "user_id": 445517, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/57e2ba76e6290c4e9e19821a068bc8c1?s=128&d=identicon&r=PG", "display_name": "CodesInChaos", "link": "https://stackoverflow.com/users/445517/codesinchaos"}, "edited": false, "score": 0, "creation_date": 1516893734, "post_id": 48445870, "comment_id": 83884424, "body": "@CodesInChaos that is true, but <i>if</i> something catches the panic from this code, it should be reporting it in some fashion, negating the &quot;silent&quot; part. That code could also be responsible for resetting <code>IS_CALLING_FOREVER</code> if it&#39;s reasonable within the application."}, {"owner": {"reputation": 608, "user_id": 1907543, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7597ff99ee5f0704208709c3d17d9f33?s=128&d=identicon&r=PG", "display_name": "daboross", "link": "https://stackoverflow.com/users/1907543/daboross"}, "edited": false, "score": 0, "creation_date": 1516909085, "post_id": 48445870, "comment_id": 83894140, "body": "@Shepmaster I <i>think</i> the AtomicBool should be createable inside main and just passed to the closure in this specific instance, and that might make a clearer solution. Do you think that would warrant a separate answer to this question, or would it be better to add a snippet to the end of this answer? IMO this is a good general solution, but the OP also has the specific use case of using inputbot."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 608, "user_id": 1907543, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7597ff99ee5f0704208709c3d17d9f33?s=128&d=identicon&r=PG", "display_name": "daboross", "link": "https://stackoverflow.com/users/1907543/daboross"}, "edited": false, "score": 0, "creation_date": 1516909817, "post_id": 48445870, "comment_id": 83894482, "body": "@daboross you are right that it doesn&#39;t really matter where you put the <code>AtomicBool</code> so long as it is in scope of where it is needed. I don&#39;t follow your point about the specifics of inputbot \u2014 You can call <code>inputbot::KeybdKey::HKey.bind(forever);</code> the same as you would <code>inputbot::KeybdKey::HKey.bind(callback);</code>. I only used a function so I could make it recursive, as I explained in the final paragraph. Do you think that&#39;s not sufficiently clear and we need to show another form?"}, {"owner": {"reputation": 608, "user_id": 1907543, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7597ff99ee5f0704208709c3d17d9f33?s=128&d=identicon&r=PG", "display_name": "daboross", "link": "https://stackoverflow.com/users/1907543/daboross"}, "edited": false, "score": 0, "creation_date": 1516909990, "post_id": 48445870, "comment_id": 83894556, "body": "I guess not. My only worry was that the answer might imply static variables are required when using <code>AtomicBool</code>, while <code>let x = AtomicBool::new(false);</code> should work just as well for OP&#39;s use case."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 5, "last_activity_date": 1516911801, "last_edit_date": 1516911801, "creation_date": 1516892357, "answer_id": 48445870, "question_id": 48436182, "link": "https://stackoverflow.com/questions/48436182/preventing-a-fn-from-being-invoked-again-while-its-already-running/48445870#48445870", "title": "Preventing a Fn from being invoked again while it&#39;s already running", "body": "<p>Using an atomic value is a bit simpler than a <code>Mutex</code> as you don't need to worry about failure cases and it can easily be made into a static variable without using lazy-static:</p>\n\n<pre><code>use std::sync::atomic::{AtomicBool, Ordering};\n\nfn main() {\n    let is_being_called = AtomicBool::new(false);\n\n    bind(move || {\n        if !is_being_called.compare_and_swap(false, true, Ordering::SeqCst) {\n            print!(\"I'm doing work\");\n            is_being_called.store(false, Ordering::SeqCst);\n        }\n    });\n}\n</code></pre>\n\n<p>I have a hunch that this is also more efficient than using a <code>Mutex</code> as no heap allocations need to be made, but I didn't benchmark it.</p>\n\n<p>If you are in a single-threaded context and your callback is somehow (accidentally?) recursive (<a href=\"https://stackoverflow.com/q/16946888/155423\">which closures cannot be</a>) you can also use a <code>Cell</code>:</p>\n\n<pre><code>use std::cell::Cell;\n\nfn main() {\n    let is_being_called = Cell::new(false);\n\n    bind(move || {\n        if !is_being_called.get() {\n            is_being_called.set(true);\n            print!(\"doing work\");\n            is_being_called.set(false);\n        }\n    })\n}\n</code></pre>\n\n<p>If you happen to have a <code>FnMut</code> closure, you don't even need the <code>Cell</code> and can just use a boolean:</p>\n\n<pre><code>fn main() {\n    let mut is_being_called = false;\n\n    bind(move || {\n        if !is_being_called {\n            is_being_called = true;\n            print!(\"doing work\");\n            is_being_called = false;\n        }\n    })\n}\n</code></pre>\n"}], "owner": {"reputation": 23, "user_id": 9255216, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-v5r5P0H2VuA/AAAAAAAAAAI/AAAAAAAAABE/qz3UW1CuvWY/photo.jpg?sz=128", "display_name": "Handles", "link": "https://stackoverflow.com/users/9255216/handles"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 141, "favorite_count": 1, "accepted_answer_id": 48437967, "answer_count": 2, "score": 2, "last_activity_date": 1516911801, "creation_date": 1516857968, "question_id": 48436182, "link": "https://stackoverflow.com/questions/48436182/preventing-a-fn-from-being-invoked-again-while-its-already-running", "title": "Preventing a Fn from being invoked again while it&#39;s already running", "body": "<p>I am using <a href=\"https://crates.io/crates/inputbot\" rel=\"nofollow noreferrer\">inputbot</a> to write a program that provides some global macros for my computer. For example, when I press the <kbd>h</kbd> key, it should execute the macro typing </p>\n\n<blockquote>\n  <p>Hello World</p>\n</blockquote>\n\n<p>into the current application. I tried to implement it like this:</p>\n\n<pre><code>extern crate inputbot;\n\nfn main() {\n    let mut callback = || {\n        inputbot::KeySequence(\"Hello World\").send();\n    };\n\n    inputbot::KeybdKey::HKey.bind(callback);\n\n    inputbot::handle_input_events();\n}\n</code></pre>\n\n<p>However, when I pressed the <kbd>h</kbd> key what I actually got was:</p>\n\n<blockquote>\n  <p>hHHHHHHHHHHHHHHHHHHHHHHHHHEHEHhEhEEHHhEhEhEHhEHHEHHEEHhEHlhEHEHHEHLEHLHeeleleelelelllelelleelehlhehlleeheehelheelleeleelhllllllellelolelellelleoleloloelellololol olollollelllolllol lloo ol o oo l lo lolooloooloo loo LOWOLO  O  L  OLW  WOWO L WLLOLOW L O O  O O   o WOWW low o oOow WWW  WOW wowooWWWO oOWRWOoor W RoW oOWorororWRRWLR rLROwoRWLWOworo  WorrrRWl ow o   WRLR OLw  o OWLDol rollWWLDWowDLlroWWo r oWDWOL dorRrwrolrdrrorlrLWDRdodRLowdllrllolrdlrddolrdlrldowldorowlrdlrorloLDLWDLoddlrddlrdldldldrrdordldrlrddrodlrrldoldlrlddldlrdlldlrdlddrlddldddlddlddd</p>\n</blockquote>\n\n<p>The macro was triggering itself each time it sent the <kbd>h</kbd> key event. \ud83d\ude2c</p>\n\n<p><strong>How can I prevent a <code>Fn</code> from being invoked again while another instance of it is still running?</strong> This is the main functionality of a small application, so there's nothing else to really worry about compatibility with.</p>\n\n<hr>\n\n<p>My naive attempt to fix\n\nthis was to add a <code>mut running</code> variable in <code>main</code>, which <code>callback</code> would set to <code>true</code> while it was running, or <code>immediately</code> return if it was already true:</p>\n\n<pre><code>extern crate inputbot;\n\nuse std::time::Duration;\nuse std::thread::sleep;\n\nfn main() {\n    let mut running = false;\n    let mut callback = || {\n        if running { return };\n        running = true;\n\n        inputbot::KeySequence(\"Hello World\").send();\n\n        // wait to make sure keyboard events are done. \n        sleep(Duration::from_millis(125));\n\n        running = false;\n    };\n\n    inputbot::KeybdKey::HKey.bind(callback);\n    inputbot::handle_input_events();\n}\n</code></pre>\n\n<p>However, this doesn't compile:</p>\n\n<blockquote>\n  <p><code>error[E0525]: expected a closure that implements the `Fn` trait, but this closure only implements `FnMut`</code></p>\n</blockquote>\n\n<p>After some reading, my understanding is now that a <code>Fn</code> closure (required by inputbot's <code>.bind()</code> methods) can't own any mutable data, like a captured <code>mut</code> variable.</p>\n\n<p>Maybe it's possible to wrap the variable in some kind of non-<code>mut</code> value? Perhaps some kind-of lock, to make the potential concurrency safe, like this pseudocde?</p>\n\n<pre><code>fn main() {\n    let mut running = false;\n    let lockedRunning = example::Lock(&amp;running);\n    let mut callback = || {\n        {\n            let mut running = lockedRunning.acquire();\n            if running { return };\n            running = true;\n        }\n\n        inputbot::KeySequence(\"Hello World\").send();\n\n        // wait to make sure keyboard events are done. \n        sleep(Duration::from_millis(125));\n\n        {\n            let mut running = lockedRunning.acquire();\n            running = false;\n        }\n    };\n}\n</code></pre>\n"}]