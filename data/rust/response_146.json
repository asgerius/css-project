[{"tags": ["rust", "rayon"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1508987238, "creation_date": 1508987238, "answer_id": 46945243, "question_id": 46943672, "link": "https://stackoverflow.com/questions/46943672/replace-iter-with-par-iter-cannot-borrow-data-mutably-in-a-captured-outer-v/46945243#46945243", "title": "Replace iter() with par_iter(): cannot borrow data mutably in a captured outer variable in an `Fn` closure", "body": "<p>This error message is an example of <strong>exactly</strong> the type of error prevention that Rust is designed to provide to you. Said another way, the compiler is preventing you from mutably accessing the same piece of memory concurrently.</p>\n\n<p>Conceptually, the code you are trying to run should be safe because you are always accessing a completely disjoint piece of the vector, there won't be any overlapping mutable borrows of the same index, but the compiler cannot tell that. All it sees is that <code>self.some_data</code> is borrowed mutably multiple times; it doesn't know what the implementation of <code>Index</code> does or what the body of the closure does.</p>\n\n<p>You <em>could</em> find all the matching slots in the vector and then iterate over all of the results:</p>\n\n<pre><code>fn add_factor_indexes(&amp;mut self, indexes_to_increment: &amp;[u8]) {\n    self.some_data\n        .par_iter_mut()\n        .enumerate()\n        .filter(|&amp;(i, _)| indexes_to_increment.contains(&amp;(i as u8)))\n        .map(|(_, v)| v)\n        .for_each(|x| *x += 1);\n}\n</code></pre>\n\n<blockquote>\n  <p>and could be replaced with a set</p>\n</blockquote>\n\n<p>I'd recommend it due to the repeated lookups, if it's a larger amount of data.</p>\n"}, {"tags": [], "owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "is_accepted": false, "score": 1, "last_activity_date": 1509384949, "last_edit_date": 1509384949, "creation_date": 1509207584, "answer_id": 46991872, "question_id": 46943672, "link": "https://stackoverflow.com/questions/46943672/replace-iter-with-par-iter-cannot-borrow-data-mutably-in-a-captured-outer-v/46991872#46991872", "title": "Replace iter() with par_iter(): cannot borrow data mutably in a captured outer variable in an `Fn` closure", "body": "<p>Rayon works best when threads don't share non-constant data. For example, if each closure passed to <code>par_iter</code> only operated on its own piece of data, and those were reassembled together in a final step, Rayon would not complain. (Google MapReduce for a popular example of this strategy that scales well to cloud systems.)</p>\n\n<p>In addition to the solution presented by Shepmaster, a straightforward way to fix your code is to switch from <code>Vec&lt;u8&gt;</code> to <code>Vec&lt;AtomicUsize&gt;</code>, and use the <code>fetch_add</code> method to increment the indices. Since <code>fetch_add</code> accepted a shared reference, Rayon will accept it and it will do what you want.</p>\n\n<pre><code>extern crate rayon;\nuse rayon::prelude::*;\nuse std::sync::atomic::{AtomicUsize, Ordering};\n\nfn main() {\n    let mut a = SomeStruct::new([1, 0, 0, 1].iter()\n        .map(|n| AtomicUsize::new(*n as usize)).collect());\n    a.add_factor_indexes(&amp;vec![1, 2]);\n    println!(\"{:?}\", a);\n}\n\n#[derive(Debug)]\nstruct SomeStruct {\n    some_data: Vec&lt;AtomicUsize&gt;,\n}\n\nimpl SomeStruct {\n    fn new(some_data: Vec&lt;AtomicUsize&gt;) -&gt; SomeStruct {\n        SomeStruct { some_data }\n    }\n    fn add_factor_indexes(&amp;mut self, indexes_to_increment: &amp;[u8]) {\n        indexes_to_increment\n            .par_iter()\n            .for_each(|x| {\n                self.some_data[*x as usize].fetch_add(1, Ordering::SeqCst);\n            });\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 5087, "user_id": 2942471, "user_type": "registered", "accept_rate": 57, "profile_image": "https://graph.facebook.com/100000008666513/picture?type=large", "display_name": "manonthemat", "link": "https://stackoverflow.com/users/2942471/manonthemat"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1191, "favorite_count": 0, "accepted_answer_id": 46945243, "answer_count": 2, "score": 5, "last_activity_date": 1509384949, "creation_date": 1508975001, "last_edit_date": 1508986198, "question_id": 46943672, "link": "https://stackoverflow.com/questions/46943672/replace-iter-with-par-iter-cannot-borrow-data-mutably-in-a-captured-outer-v", "title": "Replace iter() with par_iter(): cannot borrow data mutably in a captured outer variable in an `Fn` closure", "body": "<p>I was hoping to replace an <code>iter()</code> with <a href=\"https://github.com/nikomatsakis/rayon\" rel=\"noreferrer\">Rayon's</a> <code>par_iter()</code> in a rather simple case like this, but I am failing to do so.</p>\n\n<p>The previous code:</p>\n\n<pre><code>indexes_to_increment\n    .iter()\n    .for_each(|x| self.some_data[*x as usize] += 1);`\n</code></pre>\n\n<p>Here's the Rayon-modified code:</p>\n\n<pre><code>extern crate rayon;\nuse rayon::prelude::*;\n\nfn main() {\n    let mut a = SomeStruct::new(vec![1, 0, 0, 1]);\n    a.add_factor_indexes(&amp;vec![1, 2]);\n    println!(\"{:?}\", a); // spits out \"SomeStruct { some_data: [1, 1, 1, 1] }\"\n}\n\n#[derive(Debug)]\nstruct SomeStruct {\n    some_data: Vec&lt;u8&gt;,\n}\n\nimpl SomeStruct {\n    fn new(some_data: Vec&lt;u8&gt;) -&gt; SomeStruct {\n        SomeStruct { some_data }\n    }\n    fn add_factor_indexes(&amp;mut self, indexes_to_increment: &amp;[u8]) {\n        //indexes_to_increment.iter().for_each(|x| self.some_data[*x as usize] += 1);\n        indexes_to_increment\n            .par_iter()\n            .for_each(|x| self.some_data[*x as usize] += 1);\n    }\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?gist=8ebba125635c869a2af9a90abf44737b&amp;version=nightly\" rel=\"noreferrer\">playground</a>)</p>\n\n<p>While I know that the following error message is telling me what to do, at this point I'm unable to do so.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0387]: cannot borrow data mutably in a captured outer variable in an `Fn` closure\n  --&gt; src/main.rs:23:27\n   |\n23 |             .for_each(|x| self.some_data[*x as usize] += 1);\n   |                           ^^^^^^^^^^^^^^\n   |\nhelp: consider changing this closure to take self by mutable reference\n  --&gt; src/main.rs:23:23\n   |\n23 |             .for_each(|x| self.some_data[*x as usize] += 1);\n   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>If I knew that the <code>indexes_to_increment</code> vector in <code>add_factor_indexes</code> only contains unique <code>u8</code>s and could be replaced with a set, would that change anything?</p>\n"}, {"tags": ["scope", "rust", "traits"], "answers": [{"comments": [{"owner": {"reputation": 33, "user_id": 7322248, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/N4Ty6.jpg?s=128&g=1", "display_name": "shiMusa", "link": "https://stackoverflow.com/users/7322248/shimusa"}, "edited": false, "score": 0, "creation_date": 1508971704, "post_id": 46941543, "comment_id": 80833811, "body": "Haha, than you so much! I auto-imported BorrowMut... was probably a bad idea. I should be more careful! I also got it to work now by replacing <code>for observer in self.observers</code> with <code>for observer in &amp;self.observers</code>. Thanks again!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1508987304, "last_edit_date": 1508987304, "creation_date": 1508963445, "answer_id": 46941543, "question_id": 46941218, "link": "https://stackoverflow.com/questions/46941218/items-from-traits-can-only-be-used-if-the-trait-is-implemented-and-in-scope/46941543#46941543", "title": "items from traits can only be used if the trait is implemented and in scope", "body": "<blockquote>\n<pre><code>use std::borrow::BorrowMut;\n</code></pre>\n</blockquote>\n\n<p>You've brought in the trait <code>BorrowMut</code>, which defines the trait method <a href=\"https://doc.rust-lang.org/std/borrow/trait.BorrowMut.html#tymethod.borrow_mut\" rel=\"nofollow noreferrer\"><code>BorrowMut::borrow_mut</code></a>, <strong>shadowing</strong> the inherent method <a href=\"https://doc.rust-lang.org/std/cell/struct.RefCell.html#method.borrow_mut\" rel=\"nofollow noreferrer\"><code>RefCell::borrow_mut</code></a>. You can tell this because your type is not what you expect:</p>\n\n<blockquote>\n  <p>for type <code>&amp;mut std::rc::Rc&lt;std::cell::RefCell&lt;Observer + 'static&gt;&gt;</code></p>\n</blockquote>\n\n<p>The simplest fix is to remove that import. You can also <a href=\"https://stackoverflow.com/q/44445730/155423\">disambiguate between them</a>.</p>\n\n<p>You then have further issues around trying to take ownership of a borrowed value and lots of non-idiomatic names that create boatloads of warnings. You should address all of those. </p>\n"}], "owner": {"reputation": 33, "user_id": 7322248, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/N4Ty6.jpg?s=128&g=1", "display_name": "shiMusa", "link": "https://stackoverflow.com/users/7322248/shimusa"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5504, "favorite_count": 1, "accepted_answer_id": 46941543, "answer_count": 1, "score": 3, "last_activity_date": 1508987304, "creation_date": 1508962127, "last_edit_date": 1508962975, "question_id": 46941218, "link": "https://stackoverflow.com/questions/46941218/items-from-traits-can-only-be-used-if-the-trait-is-implemented-and-in-scope", "title": "items from traits can only be used if the trait is implemented and in scope", "body": "<p>I tried to implement the Observer pattern from <em>Heads-up Design Patterns</em>, which was originally written in Java:</p>\n\n<pre><code>use std::cell::RefCell;\nuse std::rc::Rc;\nuse std::borrow::BorrowMut;\n\ntrait Subject {\n    fn registerObserver(&amp;mut self, observer: Rc&lt;RefCell&lt;Observer&gt;&gt;);\n    fn removeObserver(&amp;mut self, observer: Rc&lt;RefCell&lt;Observer&gt;&gt;);\n    fn notifyObserver(&amp;self, observer: Rc&lt;RefCell&lt;Observer&gt;&gt;);\n}\n\ntrait Observer {\n    fn update(&amp;mut self, data: f32);\n}\n\n\nstruct Teacher {\n    observers: Vec&lt;Rc&lt;RefCell&lt;Observer&gt;&gt;&gt;,\n    data: f32,\n}\nimpl Teacher {\n    pub fn print(&amp;self) {\n        println!(\"teacher = {:}\", self.data);\n    }\n}\nimpl Subject for Teacher {\n    fn registerObserver(&amp;mut self, observer: Rc&lt;RefCell&lt;Observer&gt;&gt;) {\n        self.observers.push(observer);\n    }\n    fn removeObserver(&amp;mut self, observer: Rc&lt;RefCell&lt;Observer&gt;&gt;) {\n        println!(\"Teacher.removeObserver(...) not implemented yet...\")\n    }\n    fn notifyObserver(&amp;self, observer: Rc&lt;RefCell&lt;Observer&gt;&gt;) {\n        for observer in self.observers {\n            let mut loc_obs = observer.borrow_mut();\n            loc_obs.update(self.data);\n        }\n    }\n}\n\nstruct Student {\n    data: f32,\n}\nimpl Student {\n    pub fn print(&amp;self) {\n        println!(\"student = {:}\", self.data);\n    }\n}\nimpl Observer for Student {\n    fn update(&amp;mut self, data: f32) {\n        self.data = data;\n    }\n}\n\n\n\nfn main() {\n    let mut teacher = Teacher {\n        observers: Vec::new(),\n        data: 42.,\n    };\n    teacher.print();\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=dd58495d60abf192d34f146dd7954507&amp;version=undefined\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>The compiler tells me </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `update` found for type `&amp;mut std::rc::Rc&lt;std::cell::RefCell&lt;Observer + 'static&gt;&gt;` in the current scope\n  --&gt; src/main.rs:35:21\n   |\n35 |             loc_obs.update(self.data);\n   |                     ^^^^^^\n   |\n   = help: items from traits can only be used if the trait is implemented and in scope\n   = note: the following trait defines an item `update`, perhaps you need to implement it:\n           candidate #1: `Observer`\n</code></pre>\n\n<p>Where is my error?</p>\n"}, {"tags": ["struct", "rust"], "comments": [{"owner": {"reputation": 581, "user_id": 5863848, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/s3w85.jpg?s=128&g=1", "display_name": "NishanthSpShetty", "link": "https://stackoverflow.com/users/5863848/nishanthspshetty"}, "edited": false, "score": 0, "creation_date": 1508955378, "post_id": 46939217, "comment_id": 80825949, "body": "Hi, trait or trait objects can be used in this situation, which does the pretty much as your requirement."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1508955716, "post_id": 46939217, "comment_id": 80826125, "body": "Have you read the <a href=\"https://doc.rust-lang.org/book/second-edition/ch17-00-oop.html\" rel=\"nofollow noreferrer\">OOP section</a> of the 2nd edition of the Rust book? Its 2nd part (Trait Objects) is exactly about &quot;virtual&quot; functions."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1508958462, "post_id": 46939217, "comment_id": 80827715, "body": "For the <i>specific</i> example, you can <a href=\"https://play.integer32.com/?gist=37d926755a17960407f5bd6f8769a5ea&amp;version=stable\" rel=\"nofollow noreferrer\">also use function pointers</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1508958844, "post_id": 46939217, "comment_id": 80827931, "body": "<a href=\"https://play.integer32.com/?gist=0137af66e07752262cc9b702357e39c9&amp;version=stable\" rel=\"nofollow noreferrer\">Boxed trait objects</a> are also a solution."}, {"owner": {"reputation": 313, "user_id": 2936448, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/c537d61dd3d3324664ad4e88f8579e07?s=128&d=identicon&r=PG&f=1", "display_name": "user2936448", "link": "https://stackoverflow.com/users/2936448/user2936448"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1508961084, "post_id": 46939217, "comment_id": 80829164, "body": "@Shepmaster the boxed trait approach worked for me, thank you!!"}], "owner": {"reputation": 313, "user_id": 2936448, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/c537d61dd3d3324664ad4e88f8579e07?s=128&d=identicon&r=PG&f=1", "display_name": "user2936448", "link": "https://stackoverflow.com/users/2936448/user2936448"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 74, "favorite_count": 0, "closed_date": 1508958219, "answer_count": 0, "score": 0, "last_activity_date": 1508957982, "creation_date": 1508954625, "last_edit_date": 1508957982, "question_id": 46939217, "link": "https://stackoverflow.com/questions/46939217/how-could-i-achieve-a-c-virtual-function-in-rust", "closed_reason": "Duplicate", "title": "How could I achieve a C++ virtual function in Rust?", "body": "<p>This is the definition of a virtual function in C++, and it is essentially what I am trying to do in Rust:</p>\n\n<blockquote>\n  <p>A virtual function is a member function that you expect to be\n  redefined in derived classes. When you refer to a derived class object\n  using a pointer or a reference to the base class, you can call a\n  virtual function for that object and execute the derived class's\n  version of the function.</p>\n</blockquote>\n\n<p>I have a struct <code>Foo</code> that contains some bytes. </p>\n\n<p>I want to assign a helper struct to <code>Foo</code>; there can be many different types of helpers, (<code>Helper1</code>, <code>Helper2</code>, etc.) but each one has the same layout. Each helper will always have a <code>read()</code> function that reads bytes from <code>Foo</code>, but they will all return slightly different values based on their own calculations (hence the need for multiple different structs). The helper that I choose to assign to <code>Foo</code> will be determined at runtime, but I want to include some type of \"generic helper struct\" to satisfy the compiler. The generic helper will be replaced with a specific helper struct after I determine which helper to use at runtime.</p>\n\n<p>I am trying to achieve something like this:</p>\n\n<pre><code>pub struct Foo {\n    bytes: Vec&lt;u8&gt;,\n    helper: GenericHelper???\n}\n\nimpl Foo {\n    pub fn set_helper(&amp;mut self, arg1: i32) {\n        match arg1 {\n            1 =&gt; {\n                self.helper = DerivedHelperA;\n            }\n            2 =&gt; {\n                self.helper = DerivedHelperB;\n            }\n            _ =&gt; {\n                self.helper = DerivedHelperDefault;\n            }\n        }\n    }\n\n    // Called after set_helper()\n    pub fn read(&amp;self, arg1: usize) -&gt; u8 {\n        //helper.read() will call the re-defined read() function in the derived class\n        self.helper.read(arg1)\n    }\n}\n</code></pre>\n"}, {"tags": ["generics", "rust", "traits", "lambda-calculus"], "comments": [{"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1508960140, "post_id": 46935663, "comment_id": 80828623, "body": "I&#39;m aware that at this point the code isn&#39;t object safe, but I&#39;m not sure if making it so will help my case (and there&#39;s plenty of code I&#39;d need to adjust). It&#39;s just a reference showing the general idea."}], "answers": [{"comments": [{"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1509118816, "post_id": 46977541, "comment_id": 80905093, "body": "I updated my question - I&#39;ll be happy to polish it further if anything is still unclear (like I overcomplicated beta-reduction by referring to just one of its building blocks). Regarding the numbering system you are correct - I should have mentioned that I&#39;m using De Bruijn indices (I think they are the simplest way to go implementation-wise)."}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1509458133, "post_id": 46977541, "comment_id": 81020646, "body": "I have converted most of the basic code to trait objects, but I have come across an obstacle: the <code>substitute</code> function where I&#39;m using <code>mem::swap</code> complains that <code>Term does not have a constant size known at compile-time</code>. I could make it possible by declaring that <code>trait Term: Sized</code>, but this would destroy object safety. Is there any way around this?"}, {"owner": {"reputation": 56, "user_id": 8059975, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/daMbi.jpg?s=128&g=1", "display_name": "bearbear2k", "link": "https://stackoverflow.com/users/8059975/bearbear2k"}, "reply_to_user": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1510179227, "post_id": 46977541, "comment_id": 81330600, "body": "It doesn&#39;t make sense to use <code>mem::swap</code> on <code>Term</code> trait objects because different types of terms have different representations in memory. For what purpose are you trying to use it?"}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1510213700, "post_id": 46977541, "comment_id": 81341633, "body": "That&#39;s right - the problem is I don&#39;t know how to go around it; I wanted to perform substitution on a variable."}], "tags": [], "owner": {"reputation": 56, "user_id": 8059975, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/daMbi.jpg?s=128&g=1", "display_name": "bearbear2k", "link": "https://stackoverflow.com/users/8059975/bearbear2k"}, "is_accepted": false, "score": 2, "last_activity_date": 1509128514, "last_edit_date": 1509128514, "creation_date": 1509114875, "answer_id": 46977541, "question_id": 46935663, "link": "https://stackoverflow.com/questions/46935663/can-the-untyped-lambda-calculus-be-implemented-using-generics-only/46977541#46977541", "title": "Can the untyped lambda calculus be implemented using generics only?", "body": "<h3>Enums vs. traits</h3>\n\n<blockquote>\n  <p>Different terms should have different sets of methods, e.g. only abstractions should be \"unabstractable\" and only applications should be evaluable.</p>\n</blockquote>\n\n<p>I do not think that this is a good argument for the trait-based design. Through pattern matching, enums expose the differences between the types of terms at runtime, but traits hide these differences, forcing you to treat all terms the same way. You will probably not know the types of your terms at compile time, so it doesn't make much sense to give different types of terms different methods. If you want to use functionality specific to each type of term rather than solely interacting with terms polymorphically through a uniform interface, then you should use an enum-based design.</p>\n\n<p>If you decide to stick with the trait-based implementation, you will need to remove all of the generic methods and use trait objects instead. You will not be able to use dynamic dispatch with <code>Term</code> if it has generic methods, because it will not be object safe.</p>\n\n<p>One potential advantage of the trait-based design is extensibility, but in this situation it is not a concern, as the definition of the untyped lambda calculus is fixed.</p>\n\n<h3>The three problems</h3>\n\n<blockquote>\n  <p>create a parser able to interpret any term, from plain variables to complex terms, with a single function</p>\n</blockquote>\n\n<p>It should be reasonably simple to parse expressions if all applications are required to be surrounded by parentheses. I don't have much experience with parsing, but I would probably try a recursive approach like this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>To read one term, given a mutable reference to a variable stack (which begins empty):\n    If the next character is an opening parenthesis:\n        Consume it.\n        Read a term.\n        Read a term.\n        Make sure the next character is a closing parenthesis, and consume it.\n        Return an application of the two terms.\n    If the next character is a lambda:\n        Consume it.\n        Make sure the next character is a variable, then consume it.\n        Make sure the next character is a dot, and consume it.\n        Push the variable to the variable stack.\n        Read a term.\n        Pop the variable off of the stack.\n        Return an abstraction of the term.\n    If the next character is a variable:\n        Consume it.\n        Search the variable stack find the first index of the variable from the top.\n        Return a variable term with this index.\n</code></pre>\n\n<p>You could modify this to accept common shortcuts in lambda calculus notation, such as <code>(a b c)</code> for <code>((a b) c)</code>. Currently, it would accept <code>\u03bbx.\u03bby.\u03bbz.((x z) (y z))</code> but not <code>\u03bbx.\u03bby.\u03bbz.x z (y z)</code>.</p>\n\n<blockquote>\n  <p>substitute any variable (no matter how deeply nested) with another variable or a different term</p>\n</blockquote>\n\n<p>I assume that the number stored by a variable term is the number of abstraction layers between the point where the variable is introduced and the point where it is used. If this is the case, then you can traverse the structure recursively, while remembering the current abstraction depth. When a variable is encountered that matches the number, it is replaced with the given term, except that all of the free variables in the term, which can be found by looking for variables with a number greater than their abstraction depth in the given term, should have the current abstraction depth added to their number to account for the difference in levels. When an application is encountered, the substitution process is recursively performed in both of its children. When a new abstraction is encountered, the substitution is performed recursively in its body, with the abstraction depth increased by 1 to account for the new layer.</p>\n\n<p>If you really want to use traits, then <code>Term</code> would have a method like this:</p>\n\n<pre><code>fn substitute(&amp;mut self, variable_number: usize, other: &amp;Term);\n</code></pre>\n\n<p>Just to clarify the numbering system, is the following correct?</p>\n\n<p><code>\u03bbn.\u03bbf.\u03bbx.(f ((n f) x))</code> \u2192 <code>Abs(Abs(Abs(App(Var(1),App(App(Var(2),Var(1)),Var(0))))))</code></p>\n\n<blockquote>\n  <p>recursively reduce terms (I'm not sure if that would be possible with a parsed term that would probably have to be a trait object)</p>\n</blockquote>\n\n<p>Although cumbersome, this is possible with trait objects. You could define two methods in <code>Term</code>, the first of which will do nothing except in the <code>Abs</code> implementation, where it takes a term and returns the body of the abstraction, substituting the given term at variable index 0. The second method will do nothing except in the <code>App</code> implementation, where it will call the first method on the left term of the application, passing the right term. Using a similar strategy, you can define methods to find beta-reducible terms, and by combining these methods you have a messy emulation of enum pattern matching, which would be a much better tool for this task.</p>\n\n<p>You may find <a href=\"http://www.lsv.fr/Publis/PAPERS/PDF/sinot-jlc05.pdf\" rel=\"nofollow noreferrer\">this paper</a> helpful when implementing beta-reduction. I did not read much of it, but it appears to provide strategies for efficient beta-reduction algorithms.</p>\n\n<h3>Enums vs. traits again</h3>\n\n<p>Although the same behavior can be achieved with enums and traits, enums are a better choice when extensibility is not required and it is necessary to analyze and rearrange the structure of the data in intricate ways. For this problem, an enum-based solution is probably superior.</p>\n"}], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 314, "favorite_count": 0, "answer_count": 1, "score": 4, "last_activity_date": 1509131413, "creation_date": 1508943252, "last_edit_date": 1509131413, "question_id": 46935663, "link": "https://stackoverflow.com/questions/46935663/can-the-untyped-lambda-calculus-be-implemented-using-generics-only", "title": "Can the untyped lambda calculus be implemented using generics only?", "body": "<p>Consider the following implementation of the untyped lambda calculus:</p>\n\n<pre><code>pub enum Term {\n    Var(usize), // a variable with a De Bruijn index\n    Abs(Box&lt;Term&gt;), // an abstraction\n    App(Box&lt;Term&gt;, Box&lt;Term&gt;) // an application\n}\n\nimpl Term {\n    ...\n}\n</code></pre>\n\n<p>I feel that this design, while simple and concise, could benefit from being translated to traits. Different terms should have different sets of methods, e.g. only abstractions should be \"unabstractable\" and only applications should be evaluable.</p>\n\n<p>I'm aware of the usual arguments in the enums vs. traits; even if enums is the better choice here I'd still want to know if it's possible.</p>\n\n<p>My basic building blocks so far are more or less as follows:</p>\n\n<pre><code>#[derive(Clone, PartialEq, Eq)]\npub struct Var(usize);\n\n#[derive(Clone, PartialEq, Eq)]\npub struct Abs&lt;T: Term&gt;(T);\n\n#[derive(Clone, PartialEq, Eq)]\npub struct App&lt;T: Term, U: Term&gt;(T, U);\n\npub trait Term: Clone {\n    fn abs(self) -&gt; Abs&lt;Self&gt; { Abs(self) }\n\n    fn app&lt;T: Term&gt;(self, other: T) -&gt; App&lt;Self, T&gt; { App(self, other) }\n\n    fn update_free_variables(&amp;mut self, added_depth: usize, own_depth: usize);\n\n    fn _apply&lt;T: Term&gt;(&amp;mut self, other: &amp;mut T, depth: usize); // this is a helper function that enables term tree traversal for Abs&lt;T&gt;::apply\n\n    fn is_reducible(&amp;self, limit: usize, count: &amp;usize) -&gt; bool;\n\n    fn beta_reduce(&amp;mut self, order: Order, limit: usize, verbose: bool) -&gt; usize;\n}\n\nimpl Var {\n    pub fn new(index: usize) -&gt; Self {\n        assert!(index &gt; 0);\n        Var(index)\n    }\n}\n\nimpl&lt;T: Term&gt; Abs&lt;T&gt; {\n    fn unabs(self) -&gt; T {\n        self.0\n    }\n\n    fn apply&lt;U: Term&gt;(mut self, other: &amp;mut U) -&gt; T {\n        self._apply(other, 0);\n        self.unabs()\n    }\n}\n\nimpl&lt;T: Term, U: Term&gt; App&lt;T, U&gt; {\n    fn unapp(self) -&gt; (T, U) {\n        (self.0, self.1)\n    }\n}\n\n// and some impl Term for X\n</code></pre>\n\n<p>While it's pretty easy to implement the basic functionalities, there are a few spots where I'm struggling to come up with the right solution. I need to be able to do the following:</p>\n\n<ul>\n<li>create a parser able to interpret any term, from plain variables to complex terms, with a single function</li>\n<li>substitute any variable (no matter how deeply nested) with another variable <em>or a different term</em></li>\n<li>recursively reduce terms (I'm not sure if that would be possible with a parsed term that would probably have to be a trait object)</li>\n</ul>\n\n<p>I'd prefer to attempt to implement it on my own, I just need some advice regarding the direction. Is it even possible without an enum wrapper? If so, what approach should I take (in terms of object safety, <code>unsafe</code> trickery etc.)?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 3229, "user_id": 2489327, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/e07089b141dd0d9ee102a3b153bbb280?s=128&d=identicon&r=PG", "display_name": "hl3mukkel", "link": "https://stackoverflow.com/users/2489327/hl3mukkel"}, "edited": false, "score": 0, "creation_date": 1508936088, "post_id": 46932105, "comment_id": 80812915, "body": "Are any of these two unwind mechanisms superiour or do they have different trade-offs? Thanks for the quick response btw!"}, {"owner": {"reputation": 346, "user_id": 3393442, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/43511e0a491375992017a414d4c98630?s=128&d=identicon&r=PG&f=1", "display_name": "Rakshith Ravi", "link": "https://stackoverflow.com/users/3393442/rakshith-ravi"}, "reply_to_user": {"reputation": 3229, "user_id": 2489327, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/e07089b141dd0d9ee102a3b153bbb280?s=128&d=identicon&r=PG", "display_name": "hl3mukkel", "link": "https://stackoverflow.com/users/2489327/hl3mukkel"}, "edited": false, "score": 1, "creation_date": 1578566736, "post_id": 46932105, "comment_id": 105483639, "body": "@hl3mukkel were you able to find the difference between the two ABIs? If I&#39;m cross-compiling a program for Windows, which target should I compile against?"}], "tags": [], "owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "is_accepted": true, "score": 11, "last_activity_date": 1508941416, "last_edit_date": 1508941416, "creation_date": 1508933464, "answer_id": 46932105, "question_id": 46931981, "link": "https://stackoverflow.com/questions/46931981/what-are-the-differences-between-the-gnu-and-msvc-rust-toolchain/46932105#46932105", "title": "What are the differences between the GNU and MSVC Rust toolchain?", "body": "<ol>\n<li>Yes.</li>\n<li>It uses the linker of the specified toolchain. Rust does not provide its own linker.</li>\n<li>Yes, but only so far as ABI compatibility is concerned. It doesn't affect the optimizations, except possibly indirectly because different unwind mechanisms (libunwind for GNU, SEH for MSVC) are used.</li>\n</ol>\n"}], "owner": {"reputation": 3229, "user_id": 2489327, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/e07089b141dd0d9ee102a3b153bbb280?s=128&d=identicon&r=PG", "display_name": "hl3mukkel", "link": "https://stackoverflow.com/users/2489327/hl3mukkel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3149, "favorite_count": 4, "accepted_answer_id": 46932105, "answer_count": 1, "score": 19, "last_activity_date": 1508941416, "creation_date": 1508933122, "last_edit_date": 1508936769, "question_id": 46931981, "link": "https://stackoverflow.com/questions/46931981/what-are-the-differences-between-the-gnu-and-msvc-rust-toolchain", "title": "What are the differences between the GNU and MSVC Rust toolchain?", "body": "<p>The documentation states:</p>\n\n<blockquote>\n  <p>Which version of Rust you need depends largely on what C/C++ libraries you want to interoperate with: for interop with software produced by Visual Studio use the MSVC build of Rust; for interop with GNU software built using the MinGW/MSYS2 toolchain use the GNU build.</p>\n</blockquote>\n\n<p>What exactly are those differences?</p>\n\n<ol>\n<li><p>Is it just about interoperability with the MSVC compiled binaries?</p></li>\n<li><p>Does it affect the linking or does Rust or LLVM provide their own linker?</p></li>\n<li><p>I know Rust uses LLVM as their backend, will choosing between the two affect code generation?</p></li>\n</ol>\n"}, {"tags": ["vector", "iterator", "rust"], "comments": [{"owner": {"reputation": 25688, "user_id": 172531, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/16b8a9971551c67422fea478a6e73bae?s=128&d=identicon&r=PG", "display_name": "sellibitze", "link": "https://stackoverflow.com/users/172531/sellibitze"}, "edited": false, "score": 0, "creation_date": 1508930501, "post_id": 46929741, "comment_id": 80808845, "body": "This seems too artifical and vague. Can you be more specific in what actual problem you are trying to solve? How do you want to update the members really? What version of the vector would you like to pass to <code>func</code> for this? Do you need changes to be immediately visible for the next iteration? There is a good reason why Rust doesn&#39;t let you do this. But it&#39;s difficult to suggest a <i>good</i> solution when I don&#39;t really know what problem you&#39;re trying to solve."}, {"owner": {"reputation": 11, "user_id": 3003190, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/37c56cad77f3400742ff8428a858a587?s=128&d=identicon&r=PG", "display_name": "mjrt", "link": "https://stackoverflow.com/users/3003190/mjrt"}, "reply_to_user": {"reputation": 25688, "user_id": 172531, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/16b8a9971551c67422fea478a6e73bae?s=128&d=identicon&r=PG", "display_name": "sellibitze", "link": "https://stackoverflow.com/users/172531/sellibitze"}, "edited": false, "score": 0, "creation_date": 1508932253, "post_id": 46929741, "comment_id": 80810058, "body": "okay I edited it to be more like my code. Specifically I check that the data exists anywhere else in the members and if it doesn&#39;t, allow to change the data."}, {"owner": {"reputation": 11, "user_id": 3003190, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/37c56cad77f3400742ff8428a858a587?s=128&d=identicon&r=PG", "display_name": "mjrt", "link": "https://stackoverflow.com/users/3003190/mjrt"}, "reply_to_user": {"reputation": 25688, "user_id": 172531, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/16b8a9971551c67422fea478a6e73bae?s=128&d=identicon&r=PG", "display_name": "sellibitze", "link": "https://stackoverflow.com/users/172531/sellibitze"}, "edited": false, "score": 0, "creation_date": 1508932677, "post_id": 46929741, "comment_id": 80810367, "body": "so then would be the best method of implementing something of this nature?"}, {"owner": {"reputation": 17388, "user_id": 921321, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/3f4c4737cb30134f58cc76f06ef5113a?s=128&d=identicon&r=PG", "display_name": "Lukazoid", "link": "https://stackoverflow.com/users/921321/lukazoid"}, "edited": false, "score": 0, "creation_date": 1508935340, "post_id": 46929741, "comment_id": 80812332, "body": "The answer is going to be dependent upon whether you want to pass the original <code>Member</code> values to <code>func</code> or should each subsequent call to <code>func</code> include any <code>Member</code> values which were previously mutated?"}, {"owner": {"reputation": 11, "user_id": 3003190, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/37c56cad77f3400742ff8428a858a587?s=128&d=identicon&r=PG", "display_name": "mjrt", "link": "https://stackoverflow.com/users/3003190/mjrt"}, "edited": false, "score": 0, "creation_date": 1508935531, "post_id": 46929741, "comment_id": 80812480, "body": "The latter, which I believe is answered by sellibitze?"}], "answers": [{"comments": [{"owner": {"reputation": 11, "user_id": 3003190, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/37c56cad77f3400742ff8428a858a587?s=128&d=identicon&r=PG", "display_name": "mjrt", "link": "https://stackoverflow.com/users/3003190/mjrt"}, "edited": false, "score": 0, "creation_date": 1508937301, "post_id": 46932111, "comment_id": 80813833, "body": "pub fn call_all(&amp;mut self) {         for i in 0..self.members.len() {             self.members[i].action(self.members);         }     } Doesn&#39;t seem like it would work though, I would get a similar issue."}, {"owner": {"reputation": 25688, "user_id": 172531, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/16b8a9971551c67422fea478a6e73bae?s=128&d=identicon&r=PG", "display_name": "sellibitze", "link": "https://stackoverflow.com/users/172531/sellibitze"}, "reply_to_user": {"reputation": 11, "user_id": 3003190, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/37c56cad77f3400742ff8428a858a587?s=128&d=identicon&r=PG", "display_name": "mjrt", "link": "https://stackoverflow.com/users/3003190/mjrt"}, "edited": false, "score": 0, "creation_date": 1508938065, "post_id": 46932111, "comment_id": 80814409, "body": "Exactly. You&#39;re still trying to violate the aliasing/mutation rules. Either lift the code of the Member method into the loop or at least separate it into two functions: one that checks the condition taking &amp;self and one that mutates it taking &amp;mut self but no other reference to the complete vector."}, {"owner": {"reputation": 25688, "user_id": 172531, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/16b8a9971551c67422fea478a6e73bae?s=128&d=identicon&r=PG", "display_name": "sellibitze", "link": "https://stackoverflow.com/users/172531/sellibitze"}, "reply_to_user": {"reputation": 11, "user_id": 3003190, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/37c56cad77f3400742ff8428a858a587?s=128&d=identicon&r=PG", "display_name": "mjrt", "link": "https://stackoverflow.com/users/3003190/mjrt"}, "edited": false, "score": 0, "creation_date": 1508938124, "post_id": 46932111, "comment_id": 80814451, "body": "There are other options, too (involving interior mutability) but I wouldn&#39;t go that path in this instance."}, {"owner": {"reputation": 25688, "user_id": 172531, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/16b8a9971551c67422fea478a6e73bae?s=128&d=identicon&r=PG", "display_name": "sellibitze", "link": "https://stackoverflow.com/users/172531/sellibitze"}, "reply_to_user": {"reputation": 11, "user_id": 3003190, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/37c56cad77f3400742ff8428a858a587?s=128&d=identicon&r=PG", "display_name": "mjrt", "link": "https://stackoverflow.com/users/3003190/mjrt"}, "edited": false, "score": 0, "creation_date": 1508938201, "post_id": 46932111, "comment_id": 80814509, "body": "You can&#39;t create a mutable reference into a vector and borrow the vector as a whole at the same time."}, {"owner": {"reputation": 11, "user_id": 3003190, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/37c56cad77f3400742ff8428a858a587?s=128&d=identicon&r=PG", "display_name": "mjrt", "link": "https://stackoverflow.com/users/3003190/mjrt"}, "edited": false, "score": 0, "creation_date": 1508943736, "post_id": 46932111, "comment_id": 80818777, "body": "i&#39;ve posted the repo for the full code, I&#39;m sure many things I have done aren&#39;t very rustacean but it&#39;s my first project with it, let me know if you see any major design flaws."}], "tags": [], "owner": {"reputation": 25688, "user_id": 172531, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/16b8a9971551c67422fea478a6e73bae?s=128&d=identicon&r=PG", "display_name": "sellibitze", "link": "https://stackoverflow.com/users/172531/sellibitze"}, "is_accepted": false, "score": 0, "last_activity_date": 1508933878, "last_edit_date": 1508933878, "creation_date": 1508933477, "answer_id": 46932111, "question_id": 46929741, "link": "https://stackoverflow.com/questions/46929741/how-can-i-call-a-function-of-an-iterator-while-passing-the-vector-i-am-iterating/46932111#46932111", "title": "How can I call a function of an iterator while passing the vector I am iterating over?", "body": "<p>It's important that you understand the borrowing restrictions. There can only be one mutable borrow of something and as long as that borrow is \"alive\" you can't access that thing using any other means. Rust does not allow you to access the same thing in different ways while one of those ways allows mutation. That's how we get to all those nice safety guarantees.</p>\n\n<p>In your code you borrow <code>self.members</code> mutably using <code>iter_mut</code> as part of the loop construct. That's why the compiler doesn't let you access <code>self.members</code> again inside the loop.</p>\n\n<p>I don't know what the purpose of your code is but this seems to compute what you wanted to compute:</p>\n\n<pre><code>fn main() {\n    let mut v = vec![0, 1, 3];\n    for i in 0..v.len() {\n        if !v.contains(&amp;(v[i] + 1)) {\n            v[i] += 1;\n        }\n    }\n    println!(\"{:?}\", &amp;v[..]);\n}\n</code></pre>\n\n<p>Here, the vector isn't borrowed as part of the loop construct. We iterate over indices instead. The condition in the <code>if</code> expression involves two temporary immutable borrows which is fine. In the <code>if</code> expression's body <code>v</code> is temporarily borrowed mutably to change the value of the <code>i</code>-th element while no other borrow is live. That's OK.</p>\n"}], "owner": {"reputation": 11, "user_id": 3003190, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/37c56cad77f3400742ff8428a858a587?s=128&d=identicon&r=PG", "display_name": "mjrt", "link": "https://stackoverflow.com/users/3003190/mjrt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 86, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1508944846, "creation_date": 1508926569, "last_edit_date": 1508944846, "question_id": 46929741, "link": "https://stackoverflow.com/questions/46929741/how-can-i-call-a-function-of-an-iterator-while-passing-the-vector-i-am-iterating", "title": "How can I call a function of an iterator while passing the vector I am iterating over?", "body": "<p>I am trying to iterate over a vector of structures and call a function from the iterator while also passing the vector into it.</p>\n\n<p>I get this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `self.members` as immutable because it is also borrowed as mutable\n  --&gt; main.rs:40:29\n   |\n39 |             for member in self.members.iter_mut() {\n   |                           ------------ mutable borrow occurs here\n40 |                 member.func(self.members.to_vec());\n   |                             ^^^^^^^^^^^^ immutable borrow occurs here\n41 |             }\n   |             - mutable borrow ends here\n\nerror[E0502]: cannot borrow `self.members` as immutable because it is also borrowed as mutable\n  --&gt; main.rs:40:29\n   |\n39 |             for member in self.members.iter_mut() {\n   |                           ------------ mutable borrow occurs here\n40 |                 member.func(self.members.to_vec());\n   |                             ^^^^^^^^^^^^ immutable borrow occurs here\n41 |             }\n   |             - mutable borrow ends here\n</code></pre>\n\n<p>I understand what the issue is, but don't really know the syntax to get around it.\nI've tried various different things like cloning and copying but can't quite seem to get it to work appropriately.</p>\n\n<pre><code>struct Member {\n    data: i32,\n}\n\nimpl Copy for Member {}\nimpl Clone for Member {\n    fn clone(&amp;self) -&gt; Member {\n        *self\n    }\n}\n\nimpl Member {\n    pub fn new(data: i32) -&gt; Member {\n        Member { data: data }\n    }\n    pub fn func(&amp;mut self, members: Vec&lt;Member&gt;) {\n        let mut exists = false;\n        for member in members.iter() {\n            if member.data == self.data + 1 {\n                exists = true;\n            }\n        }\n        if !exists {\n            self.data += 1;\n        }\n    }\n}\n\nstruct List {\n    members: Vec&lt;Member&gt;,\n}\n\nimpl List {\n    pub fn new() -&gt; List {\n        let mut members = Vec::new();\n        members.push(Member::new(0));\n        members.push(Member::new(1));\n        members.push(Member::new(3));\n        List { members: members }\n    }\n\n    pub fn call_all(&amp;mut self) {\n        // Here is the issue\n        for member in self.members.iter_mut() {\n            member.func(self.members.to_vec());\n        }\n    }\n}\n\nfn main() {\n    let mut list = List::new();\n    list.call_all();\n}\n</code></pre>\n\n<p>It seems that it would be a simple fix.\nIf this seems too generic check out this <a href=\"https://github.com/barrettTom/roma\" rel=\"nofollow noreferrer\">repo of the full code</a>.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25688, "user_id": 172531, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/16b8a9971551c67422fea478a6e73bae?s=128&d=identicon&r=PG", "display_name": "sellibitze", "link": "https://stackoverflow.com/users/172531/sellibitze"}, "edited": false, "score": 0, "creation_date": 1508931112, "post_id": 46929493, "comment_id": 80809271, "body": "The parameter L for the trait doesn&#39;t seem to many any sense since you never mention it anywhere else within the trait."}, {"owner": {"reputation": 25688, "user_id": 172531, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/16b8a9971551c67422fea478a6e73bae?s=128&d=identicon&r=PG", "display_name": "sellibitze", "link": "https://stackoverflow.com/users/172531/sellibitze"}, "edited": false, "score": 1, "creation_date": 1508931381, "post_id": 46929493, "comment_id": 80809472, "body": "I don&#39;t understand the problem you are trying to solve. Can you try to explain it a little more?"}, {"owner": {"reputation": 28096, "user_id": 375966, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/add92525ab635b5119671269d24c1449?s=128&d=identicon&r=PG", "display_name": "Afshin Mehrabani", "link": "https://stackoverflow.com/users/375966/afshin-mehrabani"}, "reply_to_user": {"reputation": 25688, "user_id": 172531, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/16b8a9971551c67422fea478a6e73bae?s=128&d=identicon&r=PG", "display_name": "sellibitze", "link": "https://stackoverflow.com/users/172531/sellibitze"}, "edited": false, "score": 0, "creation_date": 1508934674, "post_id": 46929493, "comment_id": 80811861, "body": "@sellibitze <code>L</code> is the <code>expected</code> part, in the struct."}, {"owner": {"reputation": 25688, "user_id": 172531, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/16b8a9971551c67422fea478a6e73bae?s=128&d=identicon&r=PG", "display_name": "sellibitze", "link": "https://stackoverflow.com/users/172531/sellibitze"}, "edited": false, "score": 1, "creation_date": 1508934912, "post_id": 46929493, "comment_id": 80812020, "body": "Yeah, but the <code>L</code> in the trait definition is literally useless."}, {"owner": {"reputation": 28096, "user_id": 375966, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/add92525ab635b5119671269d24c1449?s=128&d=identicon&r=PG", "display_name": "Afshin Mehrabani", "link": "https://stackoverflow.com/users/375966/afshin-mehrabani"}, "reply_to_user": {"reputation": 25688, "user_id": 172531, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/16b8a9971551c67422fea478a6e73bae?s=128&d=identicon&r=PG", "display_name": "sellibitze", "link": "https://stackoverflow.com/users/172531/sellibitze"}, "edited": false, "score": 0, "creation_date": 1508935666, "post_id": 46929493, "comment_id": 80812603, "body": "@sellibitze oh I see. I removed that L from the trait: <a href=\"https://play.rust-lang.org/?gist=da04cadd57444d377d5defca1da333bd&amp;version=stable\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>  Does it make clearer for you?"}, {"owner": {"reputation": 25688, "user_id": 172531, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/16b8a9971551c67422fea478a6e73bae?s=128&d=identicon&r=PG", "display_name": "sellibitze", "link": "https://stackoverflow.com/users/172531/sellibitze"}, "edited": false, "score": 1, "creation_date": 1508936136, "post_id": 46929493, "comment_id": 80812962, "body": "The problem is that in your implementation of the trait you have more constraints for R than in the definition of the trait. That&#39;s what the error message says. The trait promises that any implementer is able to deal with any type R that is Any and Debug. But in the implementation you additionally require PartialEq. So, your implemented compare doesn&#39;t work for any Any/Debug type but only those that implement PartialEq."}, {"owner": {"reputation": 28096, "user_id": 375966, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/add92525ab635b5119671269d24c1449?s=128&d=identicon&r=PG", "display_name": "Afshin Mehrabani", "link": "https://stackoverflow.com/users/375966/afshin-mehrabani"}, "reply_to_user": {"reputation": 25688, "user_id": 172531, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/16b8a9971551c67422fea478a6e73bae?s=128&d=identicon&r=PG", "display_name": "sellibitze", "link": "https://stackoverflow.com/users/172531/sellibitze"}, "edited": false, "score": 0, "creation_date": 1508937248, "post_id": 46929493, "comment_id": 80813791, "body": "@sellibitze hmm, I made a change and now I can compile it: <a href=\"https://play.rust-lang.org/?gist=e817a2b29feb612197c3dfc8e51eea1d&amp;version=stable\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> -- all I did was moving the generics to the trait and not I can make it stricter. I don&#39;t know what is the difference though."}], "answers": [{"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 3, "last_activity_date": 1508964777, "creation_date": 1508964777, "answer_id": 46941864, "question_id": 46929493, "link": "https://stackoverflow.com/questions/46929493/receiving-errore0276-impl-has-stricter-requirements-than-trait-with-generics/46941864#46941864", "title": "Receiving error[E0276]: impl has stricter requirements than trait with generics", "body": "<p>The <code>L</code> in <code>Assert&lt;L&gt;</code> is unused by the trait, so it serves no purpose; I'm going to ignore it. Without that complication, here's what you wrote:</p>\n\n<pre><code>pub trait Assert {\n    fn compare&lt;R: Any + Debug&gt;(self, target: R) -&gt; AssertResult;\n}\n</code></pre>\n\n<p>This is a contract that says, \"When a type implements <code>Assert</code>, it shall provide a method <code>compare</code> that can be called with an argument of any type implementing <code>Any</code> and <code>Debug</code>.\"</p>\n\n<pre><code>impl&lt;L: 'static + fmt::Debug&gt; Assert for Equal&lt;L&gt; {\n</code></pre>\n\n<p>This is an agreement to implement the <code>Assert</code> contract for <code>Equal&lt;L&gt;</code> where <code>L</code> is any type that is <code>'static</code> and implements <code>Debug</code>.</p>\n\n<pre><code>    fn compare&lt;R: PartialEq&lt;L&gt; + fmt::Debug&gt;(self, target: R) -&gt; AssertResult {\n</code></pre>\n\n<p>This a violation of the <code>Assert</code> contract, which said: \"shall provide a method <code>compare</code> that can be called with an argument of any type implementing <code>Any</code> and <code>Debug</code>.\" The <code>compare</code> method you provided does not satisfy those conditions, but can only be called with an argument of a type that implements <code>PartialEq&lt;L&gt;</code> and <code>Debug</code>.</p>\n\n<p>Or, more concisely: You signed a contract that said <code>compare&lt;R: Any + Debug&gt;</code> and tried to deliver a product that was actually <code>compare&lt;R: PartialEq&lt;L&gt; + fmt::Debug&gt;</code>, and the compiler got mad, because you weren't upholding your end of the contract.</p>\n\n<hr>\n\n<h3>How to fix it?</h3>\n\n<p>One possible correction (that you are already aware of) looks like this:</p>\n\n<pre><code>pub trait Assert&lt;R&gt; {\n    fn compare(self, target: R) -&gt; AssertResult;\n}\n</code></pre>\n\n<p>A contract that says, \"A type that implements <code>Assert&lt;R&gt;</code> (where <code>R</code> is any type) shall provide a method <code>compare</code> that can be called with an argument of type <code>R</code>.\"</p>\n\n<pre><code>impl&lt;L: fmt::Debug, R: PartialEq&lt;L&gt; + fmt::Debug&gt; Assert&lt;R&gt; for Equal&lt;L&gt; {\n</code></pre>\n\n<p>An agreement to implement <code>Assert&lt;R&gt;</code> for <code>Equal&lt;L&gt;</code> as long as <code>L</code> implements <code>Debug</code> and <code>R</code> implements <code>PartialEq&lt;L&gt;</code> and <code>Debug</code>.</p>\n\n<pre><code>    fn compare(self, target: R) -&gt; AssertResult {\n</code></pre>\n\n<p>The fulfillment of the <code>Assert</code> contract: a method <code>compare</code> that can be called on an argument of type <code>R</code>. The body of this method may depend on the knowledge that <code>R: PartialEq&lt;L&gt;</code>, since that's in the terms of its \"contract\".</p>\n\n<p>The combination of the <code>trait</code> and the <code>impl</code> establish the terms of the contract that the <code>impl</code> must fulfill. The first thing you wrote establishes a particular set of terms, and then attempts to deliver a product (the <code>compare</code> method) that doesn't satisfy those terms. The fix outlined above modifies the terms to include all the conditions needed to write the <code>compare</code> method.</p>\n"}], "owner": {"reputation": 28096, "user_id": 375966, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/add92525ab635b5119671269d24c1449?s=128&d=identicon&r=PG", "display_name": "Afshin Mehrabani", "link": "https://stackoverflow.com/users/375966/afshin-mehrabani"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 875, "favorite_count": 0, "accepted_answer_id": 46941864, "answer_count": 1, "score": 1, "last_activity_date": 1508964777, "creation_date": 1508925813, "last_edit_date": 1508935201, "question_id": 46929493, "link": "https://stackoverflow.com/questions/46929493/receiving-errore0276-impl-has-stricter-requirements-than-trait-with-generics", "title": "Receiving error[E0276]: impl has stricter requirements than trait with generics", "body": "<p>I'm trying to define a trait to compare two given parameters and return a <code>Result</code> based on the implementation. It has two generics but they can be anything when we implement it:</p>\n\n<pre><code>pub trait Assert&lt;L: Any + Debug&gt; {\n    fn compare&lt;R: Any + Debug&gt;(self, target: R) -&gt; AssertResult;\n}\n</code></pre>\n\n<p>Now, when I want to implement equal, I will do:</p>\n\n<pre><code>pub struct Equal&lt;L&gt; {\n    expected: L,\n}\n\nimpl&lt;L&gt; Equal&lt;L&gt; {\n    pub fn new(expected: L) -&gt; Equal&lt;L&gt; {\n        Equal { expected: expected }\n    }\n}\n\nimpl&lt;L: 'static + fmt::Debug&gt; Assert&lt;L&gt; for Equal&lt;L&gt; {\n    fn compare&lt;R: PartialEq&lt;L&gt; + fmt::Debug&gt;(self, target: R) -&gt; AssertResult {\n        if target == self.expected {\n            Ok(())\n        } else {\n            Err(format!(\n                \"Expected {:?}, received {:?}\",\n                self.expected,\n                target\n            ))\n        }\n    }\n}\n</code></pre>\n\n<p>Link to <a href=\"https://play.rust-lang.org/?gist=353a5d38a729b6ed3618c3e8833101ce&amp;version=stable\" rel=\"nofollow noreferrer\">playground</a>.</p>\n\n<p>I want to be able to accept anything as <code>L</code> and <code>R</code> but restrict them in the implementation. I'm not sure if this is the correct approach though.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1508956446, "post_id": 46928854, "comment_id": 80826519, "body": "Your description doesn&#39;t match <a href=\"https://en.wikipedia.org/wiki/Pig_Latin\" rel=\"nofollow noreferrer\">Pig Latin</a>."}], "answers": [{"comments": [{"owner": {"reputation": 1035, "user_id": 5846366, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/ALAtx.jpg?s=128&g=1", "display_name": "AlexNikolaev94", "link": "https://stackoverflow.com/users/5846366/alexnikolaev94"}, "edited": false, "score": 0, "creation_date": 1508924608, "post_id": 46929073, "comment_id": 80804843, "body": "Thank you, that was too obvious and I completely missed it!"}], "tags": [], "owner": {"reputation": 5304, "user_id": 2757035, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/fade5daafd5717576b33f2e08f4f9429?s=128&d=identicon&r=PG&f=1", "display_name": "underscore_d", "link": "https://stackoverflow.com/users/2757035/underscore-d"}, "is_accepted": true, "score": 1, "last_activity_date": 1508924745, "last_edit_date": 1508924745, "creation_date": 1508924556, "answer_id": 46929073, "question_id": 46928854, "link": "https://stackoverflow.com/questions/46928854/checking-a-byte-inside-of-a-loop-doesnt-work/46929073#46929073", "title": "Checking a byte inside of a loop doesn&#39;t work", "body": "<p>You need to break once you find a matching vowel... Otherwise, unless the first letter of the string happens to be the last vowel in your set, once you match it, you'll</p>\n\n<ul>\n<li>continue to compare the first letter of the string against every other vowel,</li>\n<li>find that it doesn't match, because obviously a letter can't be two or more vowels at once, and hence</li>\n<li>conclude - potentially multiple times, and finally - that the first letter of the string is a consonant.</li>\n</ul>\n\n<p>Anyway, that should be a separate function, not <code>main()</code>, and just <code>return</code> once you find a match, so you won't need a <code>result</code> variable or <code>break</code>.</p>\n"}], "owner": {"reputation": 1035, "user_id": 5846366, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/ALAtx.jpg?s=128&g=1", "display_name": "AlexNikolaev94", "link": "https://stackoverflow.com/users/5846366/alexnikolaev94"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 49, "favorite_count": 0, "accepted_answer_id": 46929073, "answer_count": 1, "score": 0, "last_activity_date": 1508934962, "creation_date": 1508923980, "last_edit_date": 1508934962, "question_id": 46928854, "link": "https://stackoverflow.com/questions/46928854/checking-a-byte-inside-of-a-loop-doesnt-work", "title": "Checking a byte inside of a loop doesn&#39;t work", "body": "<p>I'm building a translator that should convert words into Pig Latin (i.e. the word <em>apple</em> to <em>apple-hay</em> or word <em>happy</em> to <em>appy-fay</em>). If the word begins with vowel, it doesn't drop it and adds <code>\"-hay\"</code> to its end, and drops the first letter if it is consonant and adds <code>\"-fay\"</code> to the end:</p>\n\n<pre><code>use std::str;\n\nfn main() {\n    // The case when it works perfectly well\n    let dict = String::from(\"Hello\").into_bytes();\n\n    let vowels: Vec&lt;u8&gt; = vec![b'a', b'e', b'i', b'o', b'u'];\n\n    let mut result = String::new();\n\n    for c in vowels.iter() {\n        if &amp;dict[0] == c {\n            result = str::from_utf8(&amp;dict).unwrap().to_owned() + \"-hay \";\n        } else {\n            result = str::from_utf8(&amp;dict[1..]).unwrap().to_owned() + \"-fay\";\n        }\n    }\n    println!(\"{}\", result);\n}\n</code></pre>\n\n<p>The code compiles without any errors or warnings and if I pass a string that begins with consonant it works perfectly well. However, when I pass a string that starts with a vowel, e.g. <em>apple</em>, the function behaves just like it began from a consonant and still performs actions from the <code>else</code> block. What is my error here?</p>\n"}, {"tags": ["rust", "rust-cargo", "rust-crates"], "answers": [{"comments": [{"owner": {"reputation": 15, "user_id": 2264687, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/6b25b66fea8a91a57029699af22d21e0?s=128&d=identicon&r=PG", "display_name": "Sumeet Chand", "link": "https://stackoverflow.com/users/2264687/sumeet-chand"}, "edited": false, "score": 0, "creation_date": 1508919570, "post_id": 46926970, "comment_id": 80801493, "body": "Wow, team RUST &lt;3"}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": false, "score": 3, "last_activity_date": 1508918277, "creation_date": 1508918277, "answer_id": 46926970, "question_id": 46926435, "link": "https://stackoverflow.com/questions/46926435/how-are-rust-crates-e-g-num-cpus-implemented/46926970#46926970", "title": "How are Rust crates (e.g. num_cpus) implemented?", "body": "<p>... in Rust.  There's no reason to believe it'd be anything else.</p>\n\n<p>You can also check this by just <em>looking at the source code</em>, easily done by:</p>\n\n<ol>\n<li><a href=\"https://crates.io/search?q=num_cpus\" rel=\"nofollow noreferrer\">Search <code>crates.io</code> for \"num_cpus\".</a>.</li>\n<li><a href=\"https://crates.io/crates/num_cpus\" rel=\"nofollow noreferrer\">Select the <code>num_cpus</code> crate.</a></li>\n<li><a href=\"https://github.com/seanmonstar/num_cpus\" rel=\"nofollow noreferrer\">Select \"Repository\" for the source code.</a></li>\n<li><a href=\"https://github.com/seanmonstar/num_cpus/blob/master/src/lib.rs\" rel=\"nofollow noreferrer\">Open the only <code>.rs</code> source file in the repository, <code>src/lib.rs</code>.</a></li>\n</ol>\n"}], "owner": {"reputation": 15, "user_id": 2264687, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/6b25b66fea8a91a57029699af22d21e0?s=128&d=identicon&r=PG", "display_name": "Sumeet Chand", "link": "https://stackoverflow.com/users/2264687/sumeet-chand"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 122, "favorite_count": 0, "answer_count": 1, "score": -4, "last_activity_date": 1508922564, "creation_date": 1508916483, "last_edit_date": 1508922564, "question_id": 46926435, "link": "https://stackoverflow.com/questions/46926435/how-are-rust-crates-e-g-num-cpus-implemented", "title": "How are Rust crates (e.g. num_cpus) implemented?", "body": "<p>I was wondering how are Rust crates are implemented.</p>\n\n<p>For example, there is a crate named <code>num_cpus</code>. This crate has this basic method <code>num_cpus::get()</code> which tells number of CPUs in your computer. </p>\n\n<p>My questions:</p>\n\n<ul>\n<li>How is the method <code>num_cpus::get()</code> implemented (is it done using another language?) </li>\n<li>Can the same result be achieved with plain Rust code without using any crates?</li>\n</ul>\n"}, {"tags": ["sockets", "network-programming", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1508892918, "post_id": 46920824, "comment_id": 80791754, "body": "FYI, <code>flip</code> could just be <code>fn flip() -&gt; bool { rand::thread_rng().gen() }</code>"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1508896737, "last_edit_date": 1508896737, "creation_date": 1508896036, "answer_id": 46922647, "question_id": 46920824, "link": "https://stackoverflow.com/questions/46920824/setting-read-timeout-on-socket/46922647#46922647", "title": "Setting read timeout on socket", "body": "<blockquote>\n  <p>The <code>set_read_timeout</code> call does not seem to be doing anything; the client still waits for a few seconds between the server dropping the message and aborting the connection</p>\n</blockquote>\n\n<p>This is not the experience I had running your code. In fact, when I add an <code>eprintln</code> directly after the <code>read_until</code> call, it prints almost immediately when the server decides to drop the connection. Indeed, the problem is not in the reading but the <em>writing</em>, as you can see from your error message:</p>\n\n<blockquote>\n  <p>thread 'main' panicked at '<strong>Failed to write to server</strong>:</p>\n</blockquote>\n\n<p>I'm guessing that you aren't \"waiting a few seconds\", but are instead pressing <kbd>Enter</kbd> multiple times (the blank lines between \"bar\" and the panic message also indicate this). Your read timeout is working just fine \u2014 the problem is that <a href=\"https://stackoverflow.com/questions/11866792/how-to-prevent-errno-32-broken-pipe\">you are trying to write to a socket that the other side has already closed</a>:</p>\n\n<pre><code>if flip() {\n    return Ok(());\n}\n</code></pre>\n\n<p>By exiting the loop, you are closing the socket completely. You can either detect this on the client side or continue the server loop instead of exiting it.</p>\n"}], "owner": {"reputation": 2308, "user_id": 1120799, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/IRCQ4.jpg?s=128&g=1", "display_name": "Abhishek Chanda", "link": "https://stackoverflow.com/users/1120799/abhishek-chanda"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1134, "favorite_count": 0, "accepted_answer_id": 46922647, "answer_count": 1, "score": 2, "last_activity_date": 1508896737, "creation_date": 1508882972, "last_edit_date": 1508893921, "question_id": 46920824, "link": "https://stackoverflow.com/questions/46920824/setting-read-timeout-on-socket", "title": "Setting read timeout on socket", "body": "<p>I have a TCP echo server in Rust that randomly drops messages. I am trying to set a read timeout on the client socket.</p>\n\n<p><strong>client</strong></p>\n\n<pre><code>use std::net::TcpStream;\nuse std::str;\nuse std::io::{self, BufRead, BufReader, Write};\nuse std::time::Duration;\nuse std::net::SocketAddr;\n\nfn main() {\n    let remote: SocketAddr = \"127.0.0.1:8888\".parse().unwrap();\n    let mut stream = TcpStream::connect_timeout(&amp;remote, Duration::from_secs(1)).expect(\"Could not connect to server\");\n    stream.set_read_timeout(Some(Duration::from_millis(1))).expect(\"Could not set a read timeout\");\n    loop {\n        let mut input = String::new();\n        let mut buffer: Vec&lt;u8&gt; = Vec::new();\n        io::stdin().read_line(&amp;mut input).expect(\"Failed to read from stdin\");\n        stream.write(input.as_bytes()).expect(\"Failed to write to server\");\n\n        let mut reader = BufReader::new(&amp;stream);\n\n        reader.read_until(b'\\n', &amp;mut buffer).expect(\"Could not read into buffer\");\n        print!(\"{}\", str::from_utf8(&amp;buffer).expect(\"Could not write buffer as string\"));\n    }\n}\n</code></pre>\n\n<p><strong>server</strong></p>\n\n<pre><code>extern crate rand;\n\nuse std::net::{TcpListener, TcpStream};\nuse std::thread;\nuse rand::{thread_rng, Rng};\n\nuse std::io::{Error, Read, Write};\n\nfn flip() -&gt; bool {\n    let choices = [true, false];\n    let mut rng = thread_rng();\n    *rng.choose(&amp;choices).unwrap()\n}\n\nfn handle_client(mut stream: TcpStream) -&gt; Result&lt;(), Error&gt; {\n    let mut buf = [0; 512];\n    loop {\n        let bytes_read = stream.read(&amp;mut buf)?;\n        if bytes_read == 0 {\n            return Ok(());\n        }\n        if flip() {\n            return Ok(());\n        }\n        stream.write(&amp;buf[..bytes_read])?;\n    }\n}\n\nfn main() {\n    let listener = TcpListener::bind(\"127.0.0.1:8888\").expect(\"Could not bind\");\n    for stream in listener.incoming() {\n        match stream {\n            Err(e) =&gt; eprintln!(\"failed: {}\", e),\n            Ok(stream) =&gt; {\n                thread::spawn(move || {\n                    handle_client(stream).unwrap_or_else(|error| eprintln!(\"{:?}\", error));\n                });\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>The <code>set_read_timeout</code> call does not seem to be doing anything; the client still waits for a few seconds between the server dropping the message and aborting the connection, even if I set the duration to 1ms.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ rustc tcp-client-timeout.rs &amp;&amp; ./tcp-client-timeout\ntest\ntest\nfoo\nfoo\nbar\n\n\nthread 'main' panicked at 'Failed to write to server: Error { repr: Os { code: 32, message: \"Broken pipe\" } }', src/libcore/result.rs:906:4\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1508923667, "post_id": 46920668, "comment_id": 80804164, "body": "I&#39;m not completely sure, but I think <a href=\"https://github.com/rust-lang/rust/issues/44491\" rel=\"nofollow noreferrer\">Implied bounds (RFC 2089)</a> is supposed to fix this."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1508883724, "creation_date": 1508883724, "answer_id": 46920959, "question_id": 46920668, "link": "https://stackoverflow.com/questions/46920668/is-it-possible-for-traits-to-impose-restrictions-for-references-to-the-type-it-i/46920959#46920959", "title": "Is it possible for traits to impose restrictions for references to the type it is implemented on?", "body": "<p>One alternative would be to move the function to a trait method:</p>\n\n<pre><code>pub trait Integer\nwhere\n    Self: num_traits::One,\n    for&lt;'a&gt; &amp;'a Self: std::ops::Shr&lt;Self, Output = Self&gt;,\n{\n    fn half(&amp;self) -&gt; Self {\n        self &gt;&gt; num_traits::one()\n    }\n}\n</code></pre>\n\n<p>This doesn't <em>really</em> solve the core problem, but it does allow you to avoid writing that bound yet another time.</p>\n"}], "owner": {"reputation": 191, "user_id": 7606550, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d280cfb4b941e8d99e8ee7c8ba3873ff?s=128&d=identicon&r=PG&f=1", "display_name": "David Sanders", "link": "https://stackoverflow.com/users/7606550/david-sanders"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 73, "favorite_count": 0, "accepted_answer_id": 46920959, "answer_count": 1, "score": 2, "last_activity_date": 1508883724, "creation_date": 1508882064, "last_edit_date": 1508883511, "question_id": 46920668, "link": "https://stackoverflow.com/questions/46920668/is-it-possible-for-traits-to-impose-restrictions-for-references-to-the-type-it-i", "title": "Is it possible for traits to impose restrictions for references to the type it is implemented on?", "body": "<p>I'm trying to write a generic function that halves <code>Integer</code>s. For the record, I know that there is a <code>num_integer::Integer</code> trait, and I am using it in my real code.</p>\n\n<p>For the sake of halving, the only operations my <code>Integer</code> requires is the ability to shift a reference to the right and a one value. I want to use <code>Integer</code>s in a lot of places, so I capture these two traits in my <code>Integer</code> trait and provide a generic implementation for it. However, I'm still required to specify <code>std::ops::Shr</code> for my <code>half</code> function.</p>\n\n<p>I am aware of two workarounds for this problem. One is to specify <code>std::ops::Shr</code> everywhere:</p>\n\n<pre><code>extern crate num_traits;\n\npub trait Integer\nwhere\n    Self: num_traits::One,\n    for&lt;'a&gt; &amp;'a Self: std::ops::Shr&lt;Self, Output = Self&gt;,\n{\n}\n\nimpl&lt;T&gt; Integer for T\nwhere\n    T: num_traits::One,\n    for&lt;'a&gt; &amp;'a T: std::ops::Shr&lt;T, Output = T&gt;,\n{\n}\n\nfn half&lt;N: Integer&gt;(n: &amp;N) -&gt; N\nwhere\n    for&lt;'a&gt; &amp;'a N: std::ops::Shr&lt;N, Output = N&gt;, // Would like to get rid of this line!\n{\n    n &gt;&gt; num_traits::one()\n}\n\nfn main() {\n    println!(\"{}\", half(&amp;85));\n}\n</code></pre>\n\n<p>Another option is to have <code>half</code> consume its argument instead of borrowing it, in which case I'm shifting values instead of references and the offending commented line is no longer necessary:</p>\n\n<pre><code>extern crate num_traits;\n\npub trait Integer\nwhere\n    Self: num_traits::One,\n    Self: std::ops::Shr&lt;Self, Output = Self&gt;,\n{\n}\n\nimpl&lt;T&gt; Integer for T\nwhere\n    T: num_traits::One,\n    T: std::ops::Shr&lt;T, Output = T&gt;,\n{\n}\n\nfn half&lt;N: Integer&gt;(n: N) -&gt; N {\n    n &gt;&gt; num_traits::one()\n}\n\nfn main() {\n    println!(\"{}\", half(85));\n}\n</code></pre>\n\n<p>Is there some other alternative I haven't considered?</p>\n"}, {"tags": ["rust", "future", "associated-types"], "answers": [{"comments": [{"owner": {"reputation": 2030, "user_id": 1069278, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0507d3e2796540aab634041439f84be7?s=128&d=identicon&r=PG", "display_name": "Z&#243;lyomi Istv&#225;n", "link": "https://stackoverflow.com/users/1069278/z%c3%b3lyomi-istv%c3%a1n"}, "edited": false, "score": 0, "creation_date": 1508910238, "post_id": 46918783, "comment_id": 80796324, "body": "You&#39;re right, I somewhat overlooked the self lifetime. I also had this idea, but my original context was much more complex and probably still had some error left. I think the problematic thing is that in the compiler messages nothing refers to self as the cause of this error, so you can only guess where the problem is. Thanks for pointing it out!"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1509207522, "post_id": 46918783, "comment_id": 80930266, "body": "&quot;cannot be boxed&quot;? I know nothing about tokio, but shouldn&#39;t <code>Box&lt;&#39;a + Future&lt;...&gt;&gt;</code> work?"}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1509236885, "post_id": 46918783, "comment_id": 80938079, "body": "You&#39;re probably right, although a lifetime restricted future won&#39;t be of much use afaik. I&#39;ll try to have a look again."}], "tags": [], "owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "is_accepted": true, "score": 3, "last_activity_date": 1509356172, "last_edit_date": 1509356172, "creation_date": 1508874122, "answer_id": 46918783, "question_id": 46917486, "link": "https://stackoverflow.com/questions/46917486/lifetime-compiler-error-on-operation-returning-boxfuture/46918783#46918783", "title": "Lifetime compiler error on operation returning Box&lt;Future&gt;", "body": "<p>The <code>self</code> in <code>self.deserialize</code> needs the lifetime from the <code>&amp;self</code> parameter to <code>resolve</code>; the result cannot be boxed as <code>Box&lt;Future&lt;..&gt;&gt;</code>, which requires a <code>'static</code> lifetime for the boxed <code>Future</code>.</p>\n\n<p>You could override the lifetime requirement for the boxed future with <code>Box&lt;Future&lt;..&gt; + 'a&gt;</code> (where <code>'a</code> is the lifetime of the <code>self</code> parameter; you'd need to change the <code>resolve</code> signature in the trait and in the implementation); but there is not much you can do with the result, as the usual <code>Future</code>-based event loops will require a <code>'static</code> lifetime for the <code>Future</code>s they have to run.</p>\n\n<p>Instead you can solve this by making <code>deserialize</code> a \"static method\", i.e. removing the <code>&amp;self</code> argument and calling it through <code>Self::deserialize</code> instead.</p>\n\n<p>The default lifetime requirement (in this case <code>'static</code>) when using traits as types is documented in <a href=\"https://doc.rust-lang.org/reference/types.html#trait-objects\" rel=\"nofollow noreferrer\">Trait objects</a> in the reference.</p>\n"}], "owner": {"reputation": 2030, "user_id": 1069278, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0507d3e2796540aab634041439f84be7?s=128&d=identicon&r=PG", "display_name": "Z&#243;lyomi Istv&#225;n", "link": "https://stackoverflow.com/users/1069278/z%c3%b3lyomi-istv%c3%a1n"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 469, "favorite_count": 1, "accepted_answer_id": 46918783, "answer_count": 1, "score": 4, "last_activity_date": 1580661133, "creation_date": 1508869297, "last_edit_date": 1580661133, "question_id": 46917486, "link": "https://stackoverflow.com/questions/46917486/lifetime-compiler-error-on-operation-returning-boxfuture", "title": "Lifetime compiler error on operation returning Box&lt;Future&gt;", "body": "<p>I was experimenting with asynchronous operations using the <code>futures</code> with <code>tokio</code> crate and had no problems. Now I'm implementing a storage that loads up data asynchronously and then performs some transformations, but my interface seem to have some lifetime problem which I fail to understand.</p>\n\n<p>This is a reduced test code showing the same symptoms; the real function bodies perform more reasonable actions than always returning errors:</p>\n\n<pre><code>extern crate futures; // v0.1 (old)\n\nuse futures::prelude::*;\nuse futures::future;\n\npub enum MyError {\n    SomeError,\n}\n\npub trait KeyValueStore {\n    type ValueType;\n\n    fn load(&amp;self, key: String) -&gt; Box&lt;Future&lt;Item = Vec&lt;u8&gt;, Error = MyError&gt;&gt;;\n    fn deserialize(&amp;self, serialized_obj: Vec&lt;u8&gt;) -&gt; Result&lt;Self::ValueType, MyError&gt;;\n\n    fn resolve(&amp;self, key: String) -&gt; Box&lt;Future&lt;Item = Self::ValueType, Error = MyError&gt;&gt;;\n}\n\npub struct Storage&lt;Obj&gt; {\n    _unused: std::marker::PhantomData&lt;Obj&gt;,\n}\n\nimpl&lt;Obj: 'static&gt; KeyValueStore for Storage&lt;Obj&gt; {\n    type ValueType = Obj;\n\n    fn deserialize(&amp;self, serialized_obj: Vec&lt;u8&gt;) -&gt; Result&lt;Self::ValueType, MyError&gt; {\n        Err(MyError::SomeError)\n    }\n\n    fn load(&amp;self, key: String) -&gt; Box&lt;Future&lt;Item = Vec&lt;u8&gt;, Error = MyError&gt;&gt; {\n        Box::new(future::err(MyError::SomeError))\n    }\n\n    fn resolve(&amp;self, key: String) -&gt; Box&lt;Future&lt;Item = Self::ValueType, Error = MyError&gt;&gt; {\n        let result = self.load(key).and_then(|bytes| self.deserialize(bytes));\n        Box::new(result)\n    }\n}\n</code></pre>\n\n<p>The compiler rejects this sample code with the following lifetime problem:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime due to conflicting requirements\n  --&gt; src/main.rs:36:9\n   |\n36 |         Box::new(result)\n   |         ^^^^^^^^^^^^^^^^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 34:5...\n  --&gt; src/main.rs:34:5\n   |\n34 | /     fn resolve(&amp;self, key: String) -&gt; Box&lt;Future&lt;Item = Self::ValueType, Error = MyError&gt;&gt; {\n35 | |         let result = self.load(key).and_then(|bytes| self.deserialize(bytes));\n36 | |         Box::new(result)\n37 | |     }\n   | |_____^\nnote: ...so that the type `futures::AndThen&lt;std::boxed::Box&lt;futures::Future&lt;Error=MyError, Item=std::vec::Vec&lt;u8&gt;&gt;&gt;, std::result::Result&lt;Obj, MyError&gt;, [closure@src/main.rs:35:46: 35:77 self:&amp;&amp;Storage&lt;Obj&gt;]&gt;` will meet its required lifetime bounds\n  --&gt; src/main.rs:36:9\n   |\n36 |         Box::new(result)\n   |         ^^^^^^^^^^^^^^^^\n   = note: but, the lifetime must be valid for the static lifetime...\nnote: ...so that expression is assignable (expected std::boxed::Box&lt;futures::Future&lt;Error=MyError, Item=Obj&gt; + 'static&gt;, found std::boxed::Box&lt;futures::Future&lt;Error=MyError, Item=Obj&gt;&gt;)\n  --&gt; src/main.rs:36:9\n   |\n36 |         Box::new(result)\n   |         ^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>Previous code I have written with <code>hyper</code> or <code>tokio-postgres</code> seemingly had the same logic but never produced such errors. I can't even see where the lifetime could go wrong here without references. My gut feeling says it's somehow related to the generic <code>Obj</code> parameter, the static lifetime restriction doesn't feel right.</p>\n\n<p>What circumstances cause the compile error?</p>\n"}, {"tags": ["iterator", "rust"], "answers": [{"comments": [{"owner": {"reputation": 244, "user_id": 1137366, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/e94ea30451ca05bdda8b24a7108db099?s=128&d=identicon&r=PG", "display_name": "AlexanderF", "link": "https://stackoverflow.com/users/1137366/alexanderf"}, "edited": false, "score": 0, "creation_date": 1508849842, "post_id": 46910530, "comment_id": 80769101, "body": "That worked, thank you! A quick follow up question, if you don&#39;t mind: In the loop that is commented out in the code, I now have to write <code>for ref cell in (&amp;row as &amp;DataRow)</code>. Is there a way around this cast?"}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "reply_to_user": {"reputation": 244, "user_id": 1137366, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/e94ea30451ca05bdda8b24a7108db099?s=128&d=identicon&r=PG", "display_name": "AlexanderF", "link": "https://stackoverflow.com/users/1137366/alexanderf"}, "edited": false, "score": 1, "creation_date": 1508850418, "post_id": 46910530, "comment_id": 80769588, "body": "Some kind of cast is required, because as you said &quot;anyone could implement their own iterator for their own implementation of the DataRow trait&quot;. You can create helper function <code>fn def_iter&lt;T: DataRow&gt;(p: &amp;T) -&gt; &amp;DataRow { p }</code>, then the code will be <code>for cell in def_iter(&amp;row)</code>. BTW, you don&#39;t need <code>ref</code>, cell is a reference already."}, {"owner": {"reputation": 244, "user_id": 1137366, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/e94ea30451ca05bdda8b24a7108db099?s=128&d=identicon&r=PG", "display_name": "AlexanderF", "link": "https://stackoverflow.com/users/1137366/alexanderf"}, "edited": false, "score": 0, "creation_date": 1508851938, "post_id": 46910530, "comment_id": 80770760, "body": "That makes sense. Thank you!"}], "tags": [], "owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "is_accepted": true, "score": 4, "last_activity_date": 1561646168, "last_edit_date": 1561646168, "creation_date": 1508847831, "answer_id": 46910530, "question_id": 46907960, "link": "https://stackoverflow.com/questions/46907960/how-can-i-implement-a-default-iterator-for-a-trait/46910530#46910530", "title": "How can I implement a &quot;default iterator&quot; for a trait?", "body": "<p>You can implement <code>IntoIterator</code> for a trait object reference.</p>\n\n<pre><code>impl&lt;'a&gt; IntoIterator for &amp;'a DataRow&lt;'a&gt; {\n    type Item = &amp;'a DataCell&lt;'a&gt;;\n    type IntoIter = DataRowIterator&lt;'a&gt;;\n\n    fn into_iter(self) -&gt; DataRowIterator&lt;'a&gt; {\n        DataRowIterator::new(self)\n    }\n}\n</code></pre>\n\n<p><code>DataRowIterator</code> should be modified to keep the trait object reference <code>&amp;DataRow</code> instead of <code>&amp;T</code> and use the methods available for the <code>DataRow</code> trait.</p>\n"}], "owner": {"reputation": 244, "user_id": 1137366, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/e94ea30451ca05bdda8b24a7108db099?s=128&d=identicon&r=PG", "display_name": "AlexanderF", "link": "https://stackoverflow.com/users/1137366/alexanderf"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1315, "favorite_count": 1, "accepted_answer_id": 46910530, "answer_count": 1, "score": 6, "last_activity_date": 1561646292, "creation_date": 1508840389, "last_edit_date": 1561646292, "question_id": 46907960, "link": "https://stackoverflow.com/questions/46907960/how-can-i-implement-a-default-iterator-for-a-trait", "title": "How can I implement a &quot;default iterator&quot; for a trait?", "body": "<p>I am trying to implement a default iterator for structs implementing a trait. My trait is called <code>DataRow</code>, represents a row of table cells, and looks like this:</p>\n\n<pre><code>pub trait DataRow&lt;'a&gt; {\n    // Gets a cell by index\n    fn getCell(&amp;self, i: usize) -&gt; &amp;DataCell&lt;'a&gt;;\n\n    // Gets the number of cells in the row\n    fn getNumCells(&amp;self) -&gt; usize;\n}\n</code></pre>\n\n<p>The default iterator I want to provide should use those two methods to iterate over the row and return cell references. In Java this would boil down to an abstract class <code>DataRow</code> that implements <code>Iterable</code>. In Rust I tried first with <code>IntoIterator</code>:</p>\n\n<pre><code>impl&lt;'a, T&gt; IntoIterator for &amp;'a T\nwhere\n    T: DataRow&lt;'a&gt;,\n{\n    type Item = &amp;'a DataCell&lt;'a&gt;;\n    type IntoIter = DataRowIterator&lt;'a, T&gt;;\n\n    fn into_iter(self) -&gt; DataRowIterator&lt;'a, T&gt; {\n        return DataRowIterator::new(self);\n    }\n}\n</code></pre>\n\n<p>This does not work as anyone could implement their own iterator for their own implementation of the <code>DataRow</code> trait.</p>\n\n<p>My second try was adding an <code>iter</code> method to the trait which creates the iterator and returns it:</p>\n\n<pre><code>fn iter(&amp;self) -&gt; DataRowIterator&lt;'a, Self&gt; {\n    return DataRowIterator::new(self);\n}\n</code></pre>\n\n<p>This does not work either, because the size of <code>Self</code> is not known at compile time. Since <code>DataRow</code> can contain an arbitrary number of cells, I also cannot mark it as <code>Sized</code> to get around that. </p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=dc128a133ffb5d7471d47d130520936d&amp;version=stable\" rel=\"nofollow noreferrer\">My demo code including notes on the occurring errors</a></p>\n\n<p>How would someone implement such a \"default iterator\" for a custom trait?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 156, "user_id": 7683313, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d7ab5ff9119a2958240d6c08d5d00140?s=128&d=identicon&r=PG&f=1", "display_name": "Joeri van Ruth", "link": "https://stackoverflow.com/users/7683313/joeri-van-ruth"}, "edited": false, "score": 0, "creation_date": 1508846317, "post_id": 46906516, "comment_id": 80766457, "body": "This means that if you replace <code>struct A&lt;&#39;a, T: &#39;a&gt;</code> with <code>struct A&lt;&#39;a, T: Clone + &#39;a&gt;</code> and <code>fn test_call&lt;&#39;a, T: &#39;a&gt;</code> with <code>fn test_call&lt;&#39;a, T: Clone + &#39;a&gt;</code>, your example will work."}], "tags": [], "owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "is_accepted": true, "score": 7, "last_activity_date": 1508836339, "creation_date": 1508836339, "answer_id": 46906516, "question_id": 46906220, "link": "https://stackoverflow.com/questions/46906220/why-does-the-derived-clone-method-return-a-reference/46906516#46906516", "title": "Why does the derived clone() method return a reference?", "body": "<p>You are not calling <code>A::clone()</code>. You are calling <code>&amp;A::clone()</code>, i.e. you are cloning the reference, not the object.</p>\n\n<p>The compiler would actually prefer to call <code>A::clone()</code>, because the argument matches more precisely (<code>Clone::clone</code> takes a <code>&amp;self</code>, so the single ref matches exactly, instead of requiring auto-ref for the call to the reference clone), but it can't. (You can see that by looking at the error message you get when you try to do <code>(*a).clone()</code> instead.) This is because the auto-derived <code>Clone</code> naively implements it as:</p>\n\n<pre><code>impl &lt;'a, T: Clone + 'a&gt; Clone for A&lt;'a, T&gt; {\n  fn clone(&amp;self) -&gt; Self { Self { ref_generic: self.ref_generic } }\n}\n</code></pre>\n\n<p>Note the <code>Clone</code> bound on <code>T</code>. That bound is not necessary, but the auto-derivation still requires it. This is <a href=\"https://github.com/rust-lang/rust/issues/26925\" rel=\"noreferrer\">bug #26925</a>.</p>\n\n<p>Your <code>test_call</code> function does not have a bound on <code>T</code>, which means that the derived <code>Clone</code> impl for <code>A</code> is not available, so the compiler falls back to the only <code>Clone</code> impl it can call, which is the one for <code>&amp;A</code>.</p>\n"}], "owner": {"reputation": 183, "user_id": 5019531, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21b6a4e99e6e1b47d32090ad238de5de?s=128&d=identicon&r=PG&f=1", "display_name": "Pavel Arnold", "link": "https://stackoverflow.com/users/5019531/pavel-arnold"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2365, "favorite_count": 0, "closed_date": 1508853067, "accepted_answer_id": 46906516, "answer_count": 1, "score": 6, "last_activity_date": 1508846984, "creation_date": 1508835592, "last_edit_date": 1508846984, "question_id": 46906220, "link": "https://stackoverflow.com/questions/46906220/why-does-the-derived-clone-method-return-a-reference", "closed_reason": "Duplicate", "title": "Why does the derived clone() method return a reference?", "body": "<p>Deriving the <code>Clone</code> trait for a struct containing a reference to object of generic type (Unless it has <code>Clone</code> bound. In that case cloning work as expected) will generate <code>clone()</code> method which returns a reference to object but not a new object.</p>\n\n<p>I have the code:</p>\n\n<pre><code>#[derive(Clone)]\nstruct A&lt;'a, T: 'a&gt;{\n    ref_generic: &amp;'a T\n}\n\nfn test_call&lt;'a, T: 'a&gt;(a: &amp;A&lt;'a, T&gt;)-&gt;A&lt;'a, T&gt;{\n    a.clone()\n}\n</code></pre>\n\n<p>Which will cause an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/lib.rs:15:5\n   |\n14 | fn test_call&lt;'a, T: 'a&gt;(a: &amp;A&lt;'a, T&gt;)-&gt;A&lt;'a, T&gt;{\n   |                                        -------- expected `A&lt;'a, T&gt;` because of return type\n15 |     a.clone()\n   |     ^^^^^^^^^ expected struct `A`, found &amp;A&lt;'_, T&gt;\n   |\n   = note: expected type `A&lt;'a, T&gt;`\n              found type `&amp;A&lt;'_, T&gt;`\n</code></pre>\n\n<p>Why does derive behave this way?</p>\n\n<p>Following manual implementation allow to avoid this obstacle but unpleasant.</p>\n\n<pre><code>impl&lt;'a, T: 'a&gt; Clone for A&lt;'a, T&gt;{\n    fn clone(&amp;self)-&gt;Self{\n        A{ref_generic: self.ref_generic}\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "rust-rocket"], "comments": [{"owner": {"reputation": 749, "user_id": 504550, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/01c50fcd072b3dabca5184fd6c84718b?s=128&d=identicon&r=PG", "display_name": "coriolinus", "link": "https://stackoverflow.com/users/504550/coriolinus"}, "edited": false, "score": 0, "creation_date": 1508839845, "post_id": 46905070, "comment_id": 80762176, "body": "Example on the rust playground: <a href=\"https://play.rust-lang.org/?gist=21175b41b1adcbf3a28c1f6affc74ccd&amp;version=stable\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 749, "user_id": 504550, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/01c50fcd072b3dabca5184fd6c84718b?s=128&d=identicon&r=PG", "display_name": "coriolinus", "link": "https://stackoverflow.com/users/504550/coriolinus"}, "edited": false, "score": 0, "creation_date": 1508840757, "post_id": 46905070, "comment_id": 80762803, "body": "Putting that example together suggests the answer: <code>user_data</code> is <i>not</i> an owned <code>UserData</code> object. It&#39;s a <code>Json&lt;UserData&gt;</code> object, where <code>Json&lt;T&gt;</code> dereferences to <code>T</code>. It happens that <code>Json&lt;T&gt;</code> is only used for its constructor, but the compiler doesn&#39;t know that. Now I just need to figure out how to solve this, and I&#39;ll write it up as a solution."}], "answers": [{"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1508848719, "post_id": 46908600, "comment_id": 80768201, "body": "Well done. I could have found that because I already had the same issue with <code>Deref</code>. Maybe you should open an issue on github to ask a more explicit error message: <code>Borrowed here: user_data.deref()</code> for example"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1508861837, "post_id": 46908600, "comment_id": 80778067, "body": "<a href=\"https://stackoverflow.com/q/42264041/3650362\">How do I get an owned value out of a <code>Box</code>?</a> is related. If <code>DerefMove</code> ever becomes a thing, the currently-erroneous code could be made correct."}], "tags": [], "owner": {"reputation": 749, "user_id": 504550, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/01c50fcd072b3dabca5184fd6c84718b?s=128&d=identicon&r=PG", "display_name": "coriolinus", "link": "https://stackoverflow.com/users/504550/coriolinus"}, "is_accepted": false, "score": 7, "last_activity_date": 1508842293, "creation_date": 1508842293, "answer_id": 46908600, "question_id": 46905070, "link": "https://stackoverflow.com/questions/46905070/cannot-move-out-of-borrowed-content-with-no-borrowed-content/46908600#46908600", "title": "Cannot move out of borrowed content, with no borrowed content", "body": "<p>The issue here was with the type of <code>user_data</code>. Specifically, and exactly as written in the function signature, its type is <code>Json&lt;UserData&gt;</code>. </p>\n\n<p><code>Json&lt;T&gt;</code> is a wrapper type which tells Rocket how to wrap and unwrap JSON values; it's a convenience method which wraps your struct, but doesn't store any extra data. It therefore implements <code>Deref&lt;Target = T&gt;</code>, which lets you mostly ignore it. However, that only works when you don't try to consume it.</p>\n\n<p>Types which implement <code>Deref&lt;Target=T&gt;</code> can <em>generally</em> be used as if they were a <code>T</code>; the compiler handles the indirection for you. However, what's actually going on in that function call is something more like <code>&lt;Json&lt;UserData&gt; as Deref&lt;Target=UserData&gt;&gt;::deref().into_new_user();</code>, and that's where the problem happens: <code>deref</code> is defined as <code>fn deref(&amp;self) -&gt; &amp;Self::Target</code>. The borrow happens implicitly and invisibly, but it's there. </p>\n\n<p>The <code>Json</code> type isn't necessary anymore in this case; it's only there to deserialize the <code>UserData</code> struct. Therefore, we can solve the problem by discarding it. The <code>Json::into_inner</code> method discards the <code>Json</code> wrapper, giving you an owned <code>UserData</code>. This can then be consumed as planned. Put together, the function should look like this: </p>\n\n<pre><code>fn create_user(user_data: Json&lt;UserData&gt;, db: DB) -&gt; Status&lt;Json&lt;Value&gt;&gt; {\n    let conn = db.conn();\n    let _new_user_result = user_data.into_inner().into_new_user(&amp;conn);\n    unimplemented!()\n}\n</code></pre>\n"}], "owner": {"reputation": 749, "user_id": 504550, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/01c50fcd072b3dabca5184fd6c84718b?s=128&d=identicon&r=PG", "display_name": "coriolinus", "link": "https://stackoverflow.com/users/504550/coriolinus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 842, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1508853119, "creation_date": 1508831692, "last_edit_date": 1508853119, "question_id": 46905070, "link": "https://stackoverflow.com/questions/46905070/cannot-move-out-of-borrowed-content-with-no-borrowed-content", "title": "Cannot move out of borrowed content, with no borrowed content", "body": "<p>I'm working on building a REST API using Rust and Rocket. I have an endpoint at which I create a new user, defined as follows:</p>\n\n<pre><code>/// View with which to create a user\n#[post(\"/users\", format = \"application/json\", data = \"&lt;user_data&gt;\")]\nfn create_user(user_data: Json&lt;UserData&gt;, db: DB) -&gt; Status&lt;Json&lt;Value&gt;&gt; {\n    let conn = db.conn();\n    let _new_user_result = user_data.into_new_user(&amp;conn);\n    unimplemented!()\n}\n</code></pre>\n\n<p>Note that there is no borrowed content here; both <code>user_data</code> and <code>db</code> are owned. Still, I get the following error on compilation:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n  --&gt; src/views/user_account.rs:75:28\n   |\n75 |     let _new_user_result = user_data.into_new_user(&amp;conn);\n   |                            ^^^^^^^^^ cannot move out of borrowed content\n</code></pre>\n\n<p>For reference, the function signature of <code>into_new_user</code> is</p>\n\n<pre><code>fn into_new_user(self, conn: &amp;SqliteConnection) -&gt; Result&lt;NewUser, Status&lt;Json&lt;Value&gt;&gt;&gt; {\n    ...\n}\n</code></pre>\n\n<p>What is going on here? This error would be much easier to understand if I were actually borrowing anything, but given that I own everything in question, I'm baffled. </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ rustc --version; cargo --version\nrustc 1.22.0-nightly (a47c9f870 2017-10-11)\ncargo 0.23.0-nightly (e447ac7e9 2017-09-27)\n</code></pre>\n"}, {"tags": ["rust", "borrow-checker", "borrowing"], "comments": [{"owner": {"reputation": 31241, "user_id": 242493, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/8893e2e206c0377ff776d2535887d23f?s=128&d=identicon&r=PG", "display_name": "Jimmy Cuadra", "link": "https://stackoverflow.com/users/242493/jimmy-cuadra"}, "edited": false, "score": 0, "creation_date": 1508839892, "post_id": 46903786, "comment_id": 80762213, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/37986640/obtaining-a-mutable-reference-by-iterating-a-recursive-structure\">Obtaining a mutable reference by iterating a recursive structure</a>"}, {"owner": {"reputation": 31241, "user_id": 242493, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/8893e2e206c0377ff776d2535887d23f?s=128&d=identicon&r=PG", "display_name": "Jimmy Cuadra", "link": "https://stackoverflow.com/users/242493/jimmy-cuadra"}, "edited": false, "score": 0, "creation_date": 1508841728, "post_id": 46903786, "comment_id": 80763421, "body": "Another similar question that might give you the insight you need: <a href=\"https://stackoverflow.com/questions/29711348/multiple-mutable-borrows-during-a-depth-first-tree-search\" title=\"multiple mutable borrows during a depth first tree search\">stackoverflow.com/questions/29711348/&hellip;</a>"}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "reply_to_user": {"reputation": 31241, "user_id": 242493, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/8893e2e206c0377ff776d2535887d23f?s=128&d=identicon&r=PG", "display_name": "Jimmy Cuadra", "link": "https://stackoverflow.com/users/242493/jimmy-cuadra"}, "edited": false, "score": 0, "creation_date": 1508842062, "post_id": 46903786, "comment_id": 80763621, "body": "@JimmyCuadra, no, both those cases aren&#39;t applicable here. We can&#39;t move <code>node</code>, because in some cases we need to return it. And we cannot use indices because there are multiple vectors."}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1508842755, "post_id": 46903786, "comment_id": 80764060, "body": "I&#39;m pretty sure there is a logic error in your code too: you can&#39;t abort early at a node to find the maximum if child nodes have larger values! If the values get smaller in child nodes your approach is fine (but that is not what you said)."}], "answers": [{"comments": [{"owner": {"reputation": 3772, "user_id": 6838730, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/OsjUW.jpg?s=128&g=1", "display_name": "Mathieu VIALES", "link": "https://stackoverflow.com/users/6838730/mathieu-viales"}, "edited": false, "score": 1, "creation_date": 1508838076, "post_id": 46907036, "comment_id": 80760894, "body": "It looks like your post has formatting issues. Please take a look and edit if needed."}], "tags": [], "owner": {"reputation": 1, "user_id": 8805531, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5ccf1867cb405a53fdef8fe4d948ca57?s=128&d=identicon&r=PG", "display_name": "user8805531", "link": "https://stackoverflow.com/users/8805531/user8805531"}, "is_accepted": false, "score": -2, "last_activity_date": 1508837811, "creation_date": 1508837811, "answer_id": 46907036, "question_id": 46903786, "link": "https://stackoverflow.com/questions/46903786/borrow-checker-doesnt-allow-returning-a-mutable-reference-from-tree-traversal-f/46907036#46907036", "title": "Borrow checker doesn&#39;t allow returning a mutable reference from tree traversal function", "body": "<p>U can use * instead &amp;mut to deref .but  <code>[Node]</code> does not have a constant size known at compile-time</p>\n"}, {"tags": [], "owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "is_accepted": false, "score": 0, "last_activity_date": 1508845793, "creation_date": 1508845793, "answer_id": 46909821, "question_id": 46903786, "link": "https://stackoverflow.com/questions/46903786/borrow-checker-doesnt-allow-returning-a-mutable-reference-from-tree-traversal-f/46909821#46909821", "title": "Borrow checker doesn&#39;t allow returning a mutable reference from tree traversal function", "body": "<p>It seems to be one of rare cases when <code>unsafe</code> is justified. </p>\n\n<p>The usual approach in such cases is to replace mutable reference with immutable reference and use interior mutability. But in this case we need to <code>borrow()</code> <code>RefCell</code>s recursively and somehow keep them alive even after function returns. </p>\n\n<p>Taking into account that the problem is caused not by inherent unsafety of the operation, but by a limitation of Rust's borrow checker, it makes sense to use <code>unsafe</code>. Keep in mind that while I reasonably sure that the following code is safe, it's better to wait for comments or another solution.</p>\n\n<pre><code>fn find_max(node: &amp;mut Node, val: usize) -&gt; Option&lt;&amp;mut Node&gt; {\n    if node.val &lt; val {\n        return None;\n    }\n    let mut max = None;\n    let mut max_val = node.val;\n    // keep reference around as a pointer\n    let node_ptr = node as *mut Node;\n    // `{ node }` moves the reference instead of reborrowing it\n    // so we can recreate it later with no risk of undefined behavior\n    for n in &amp;mut { node }.nodes {\n        if let Some(m) = find_max(n, max_val) {\n            max_val = m.val;\n            max = Some(m);\n        }\n    }\n    max.or_else(\n        // the closure is executed only when `max == None`\n        // and `node` was moved out earlier in `{node}`\n        // therefore there's no active mutable references reachable thru recreated reference\n        // function signature ensures that lifetime of the returned reference is ok\n        // thus we can safely recreate the same mutable reference we received in `node`\n        || unsafe { node_ptr.as_mut() }\n    )\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 4, "last_activity_date": 1508851542, "creation_date": 1508851542, "answer_id": 46911787, "question_id": 46903786, "link": "https://stackoverflow.com/questions/46903786/borrow-checker-doesnt-allow-returning-a-mutable-reference-from-tree-traversal-f/46911787#46911787", "title": "Borrow checker doesn&#39;t allow returning a mutable reference from tree traversal function", "body": "<p>It is not required to use <code>unsafe</code>:</p>\n\n<pre><code>fn find_max(node: &amp;mut Node, val: usize) -&gt; Option&lt;&amp;mut Node&gt; {\n    if node.val &lt; val {\n        return None;\n    }\n\n    if node.nodes.is_empty() {\n        return Some(node);\n    }\n\n    let mut max_val = node.val;\n    let mut max = None;\n    for n in &amp;mut node.nodes {\n        if let Some(m) = find_max(n, max_val) {\n            max_val = m.val;\n            max = Some(m);\n        }\n    }\n    max\n}\n</code></pre>\n"}], "owner": {"reputation": 497, "user_id": 189911, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/297315539d718f4bcd9efe78e08c5225?s=128&d=identicon&r=PG", "display_name": "Michael Ilyin", "link": "https://stackoverflow.com/users/189911/michael-ilyin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 276, "favorite_count": 0, "answer_count": 3, "score": 0, "last_activity_date": 1508851630, "creation_date": 1508827351, "last_edit_date": 1508851630, "question_id": 46903786, "link": "https://stackoverflow.com/questions/46903786/borrow-checker-doesnt-allow-returning-a-mutable-reference-from-tree-traversal-f", "title": "Borrow checker doesn&#39;t allow returning a mutable reference from tree traversal function", "body": "<p>I need to find the node with maximal value in tree, assuming that subnode's values are always larger than value of owning node, and then modify it:</p>\n\n<pre><code>#[derive(Debug)]\nstruct Node {\n    val: usize,\n    nodes: Vec&lt;Node&gt;,\n}\n\nfn find_max(node: &amp;mut Node, val: usize) -&gt; Option&lt;&amp;mut Node&gt; {\n    if node.val &lt; val {\n        return None;\n    }\n    let mut max_val = node.val;\n    let mut max: Option&lt;&amp;mut Node&gt; = Some(node);\n    for n in &amp;mut node.nodes {\n        if let Some(m) = find_max(n, max_val) {\n            max_val = m.val;\n            max = Some(m);\n        }\n    }\n    max\n}\n\nfn main() {\n    let mut root = Node {\n        val: 1,\n        nodes: vec![\n            Node {\n                val: 2,\n                nodes: vec![],\n            },\n            Node {\n                val: 3,\n                nodes: vec![\n                    Node {\n                        val: 4,\n                        nodes: vec![],\n                    },\n                ],\n            },\n        ],\n    };\n    println!(\"{:?}\", find_max(&amp;mut root, 0));\n}\n</code></pre>\n\n<p>The borrow checker returns this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `node.nodes` as mutable more than once at a time\n  --&gt; src/main.rs:13:19\n   |\n12 |     let mut max: Option&lt;&amp;mut Node&gt; = Some(node);\n   |                                           ---- first mutable borrow occurs here\n13 |     for n in &amp;mut node.nodes {\n   |                   ^^^^^^^^^^ second mutable borrow occurs here\n...\n20 | }\n   | - first borrow ends here\n</code></pre>\n\n<p>If I remove <code>mut</code> from <code>find_max</code>, it works, but I don't see how can I return a mutable reference from <code>find_max</code>.</p>\n\n<p>The important thing is that <code>find_max</code> itself doesn't modify anything. It just searches for an appropriate node.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1508822976, "post_id": 46902779, "comment_id": 80752275, "body": "Any reason not to use <code>.sum()</code> on the <code>Iterator</code>?"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1508823139, "post_id": 46902779, "comment_id": 80752334, "body": "@loganfsmyth: Two.  First, it&#39;s worse for type inference and you have to explicitly annotate the code.  Second, I predate <code>Iterator::sum</code>, so I never remember that it exists when a <code>fold</code> will do just fine."}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1508823202, "post_id": 46902779, "comment_id": 80752350, "body": "Fair enough! :D"}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 3, "last_activity_date": 1508823161, "last_edit_date": 1508823161, "creation_date": 1508822679, "answer_id": 46902779, "question_id": 46902648, "link": "https://stackoverflow.com/questions/46902648/map-an-iterator-n-items-at-a-time/46902779#46902779", "title": "Map an iterator n items at a time", "body": "<p>Not as-stated.  You need to break it down into \"split vec into iterator of disjoint subsets\" and \"sum each subset\":</p>\n\n<pre><code>let a = vec![1, 2, 3, 4];\nlet b = a.chunks(2).map(|chunk| chunk.iter().sum::&lt;i32&gt;());\nprintln!(\"b = {:?}\", b.collect::&lt;Vec&lt;_&gt;&gt;());\n</code></pre>\n\n<p>Note that this doesn't work when <code>a</code> is a general iterator (it relies on it being a slice), though you can get it to work using the <a href=\"https://crates.io/crates/itertools\" rel=\"nofollow noreferrer\"><code>itertools</code></a> crate:</p>\n\n<pre><code>use itertools::Itertools;\n\nlet a = vec![1, 2, 3, 4];\nlet a = a.iter().cloned(); // we can't rely on a being a Vec any more.\nlet b = (&amp;a.chunks(2)).into_iter()\n    .map(|chunk| chunk.sum::&lt;i32&gt;())\n    .collect::&lt;Vec&lt;_&gt;&gt;();\nprintln!(\"b = {:?}\", b);\n</code></pre>\n"}], "owner": {"reputation": 693, "user_id": 376645, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f6808b73956ce50ad2a6a2ca97892446?s=128&d=identicon&r=PG", "display_name": "franc0is", "link": "https://stackoverflow.com/users/376645/franc0is"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1817, "favorite_count": 0, "closed_date": 1508846884, "accepted_answer_id": 46902779, "answer_count": 1, "score": 1, "last_activity_date": 1508846908, "creation_date": 1508821833, "last_edit_date": 1508846908, "question_id": 46902648, "link": "https://stackoverflow.com/questions/46902648/map-an-iterator-n-items-at-a-time", "closed_reason": "Duplicate", "title": "Map an iterator n items at a time", "body": "<p>I am trying to map items of an iterator, N at a time. Something like this:</p>\n\n<pre><code>let a = vec![1, 2, 3, 4];\nlet b = a.iter().map2(|i, j| i + j);\n</code></pre>\n\n<p><code>b.collect()</code> would then yield <code>b = [3, 7]</code></p>\n\n<p>Is there a simple way to achieve this?</p>\n"}, {"tags": ["rust", "traits", "associated-types"], "comments": [{"owner": {"reputation": 1326, "user_id": 1836144, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/e250d748ff6c2ff23bc4550e0f0971f5?s=128&d=identicon&r=PG", "display_name": "little-dude", "link": "https://stackoverflow.com/users/1836144/little-dude"}, "edited": false, "score": 0, "creation_date": 1508816429, "post_id": 46901760, "comment_id": 80750396, "body": "oooh I just noticed that my <code>NotWorking</code> example is working when I specify <code>Sized</code> instead of <code>?Sized</code>."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 3, "creation_date": 1508827778, "post_id": 46901760, "comment_id": 80754404, "body": "<code>?Sized</code> means <i>no need to be sized</i>: <a href=\"https://doc.rust-lang.org/std/marker/trait.Sized.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/marker/trait.Sized.html</a>"}], "answers": [{"tags": [], "owner": {"reputation": 11, "user_id": 4457328, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/--pVOALTiPEA/AAAAAAAAAAI/AAAAAAAAA5M/wkqVb3_k2Fs/photo.jpg?sz=128", "display_name": "voyt", "link": "https://stackoverflow.com/users/4457328/voyt"}, "is_accepted": false, "score": 1, "last_activity_date": 1509206719, "last_edit_date": 1509206719, "creation_date": 1508846316, "answer_id": 46909986, "question_id": 46901760, "link": "https://stackoverflow.com/questions/46901760/cannot-return-optionassociated-type-because-associated-type-is-not-sized/46909986#46909986", "title": "Cannot return Option&lt;associated type&gt; because associated type is not sized", "body": "<p>The answer is in the last string:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>required by `std::option::Option`\n</code></pre>\n\n<p>I'm not an expert but I guess the compiler needs information about the type's size to know how to layout the variant typed <code>Bar</code> of the enum <code>Option</code> in memory.</p>\n"}, {"tags": [], "owner": {"reputation": 1018, "user_id": 1592377, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/EIJfg.png?s=128&g=1", "display_name": "jplatte", "link": "https://stackoverflow.com/users/1592377/jplatte"}, "is_accepted": true, "score": 2, "last_activity_date": 1509206798, "last_edit_date": 1509206798, "creation_date": 1509102580, "answer_id": 46973675, "question_id": 46901760, "link": "https://stackoverflow.com/questions/46901760/cannot-return-optionassociated-type-because-associated-type-is-not-sized/46973675#46973675", "title": "Cannot return Option&lt;associated type&gt; because associated type is not sized", "body": "<p>Your second example is correct. The way you declare a generic parameter with a <code>Sized</code> bound is by not specifying any explicit bounds. <code>Sized</code> is special in that it is implicitly added as a bound on generic parameters by default because it is relatively uncommon for things to not be <code>Sized</code>. In cases where you don't want to require a generic parameter to have a size known at compile time, you can <a href=\"https://stackoverflow.com/q/30333607/155423\">remove this implicit bound by writing <code>?Sized</code></a>.</p>\n\n<p>See also the <a href=\"https://doc.rust-lang.org/std/marker/trait.Sized.html\" rel=\"nofollow noreferrer\">documentation for <code>Sized</code></a>.</p>\n"}], "owner": {"reputation": 1326, "user_id": 1836144, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/e250d748ff6c2ff23bc4550e0f0971f5?s=128&d=identicon&r=PG", "display_name": "little-dude", "link": "https://stackoverflow.com/users/1836144/little-dude"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 192, "favorite_count": 0, "accepted_answer_id": 46973675, "answer_count": 2, "score": 0, "last_activity_date": 1509206798, "creation_date": 1508815977, "last_edit_date": 1509206696, "question_id": 46901760, "link": "https://stackoverflow.com/questions/46901760/cannot-return-optionassociated-type-because-associated-type-is-not-sized", "title": "Cannot return Option&lt;associated type&gt; because associated type is not sized", "body": "<p>I don't understand why this code does not compile:</p>\n\n<pre><code>fn main() {}\n\ntrait NotWorking {\n    // The associated type `Bar` must be sized\n    type Bar: ?Sized;\n\n    // Why does the compiler complain that Self::Bar is not sized?\n    // I have a trait bound that says it is!\n    fn notwoking() -&gt; Option&lt;Self::Bar&gt;;\n}\n</code></pre>\n\n<p>I do have a constraint that the associated type <code>Bar</code> must be sized, but the compiler still complains that it's unsized:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `&lt;Self as NotWorking&gt;::Bar: std::marker::Sized` is not satisfied\n  --&gt; src/main.rs:17:5\n   |\n17 |     fn notwoking() -&gt; Option&lt;Self::Bar&gt;;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `&lt;Self as NotWorking&gt;::Bar` does not have a constant size known at compile-time\n   |\n   = help: the trait `std::marker::Sized` is not implemented for `&lt;Self as NotWorking&gt;::Bar`\n   = help: consider adding a `where &lt;Self as NotWorking&gt;::Bar: std::marker::Sized` bound\n   = note: required by `std::option::Option`\n</code></pre>\n\n<p>I played a bit with this, trying to make it work, and was surprised that this works (since we can't return a type that is unsized, I was expecting it to fail):</p>\n\n<pre><code>fn main() {}\n\ntrait Working {\n    type Bar;\n\n    // Why does this work?\n    // I would expect the compiler to complain the Self::Bar is not sized\n    fn woking() -&gt; Self::Bar;\n}\n</code></pre>\n\n<p>I'm definitely missing something important here.</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1508808741, "post_id": 46900537, "comment_id": 80748660, "body": "You can see <a href=\"https://gist.github.com/shepmaster/c7f7df8f82827fee3daa2e6f4f9897d0\" rel=\"nofollow noreferrer\">my original answer</a> before I marked it as a dupe."}], "answers": [{"comments": [{"owner": {"reputation": 319, "user_id": 1167407, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/f24815b6b60543ac37af378a22031e4f?s=128&d=identicon&r=PG", "display_name": "Dan Wiebe", "link": "https://stackoverflow.com/users/1167407/dan-wiebe"}, "edited": false, "score": 0, "creation_date": 1508849786, "post_id": 46900843, "comment_id": 80769039, "body": "Thanks.  That fixed my simplified version, and I was able to extrapolate a fix for the real version from the simplified version.  I appreciate it.  Nice job."}], "tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 3, "last_activity_date": 1508808665, "creation_date": 1508808665, "answer_id": 46900843, "question_id": 46900537, "link": "https://stackoverflow.com/questions/46900537/rust-complains-of-conflicting-lifetime-requirements-no-iterators-or-closures/46900843#46900843", "title": "Rust complains of conflicting lifetime requirements, no iterators or closures", "body": "<p>The issue becomes clearer when we see how the compiler makes all lifetimes explicit in the <code>go</code> method:</p>\n\n<pre><code>pub fn go&lt;'a, 'b, 'c&gt;(&amp;'a self, streams: &amp;'b mut StdStreams&lt;'c&gt;) {\n    let mut server = Server {streams};\n}\n</code></pre>\n\n<p>That's right, a lifetime parameter was missing. The compiler does not infer that the lifetime parameter <code>'a</code> in <code>StdStreams&lt;'a&gt;</code> will be the same as the lifetime of a reference of type <code>&amp;mut StdStreams</code> (as in, it won't produce <code>&amp;'a Foo&lt;'a&gt;</code>. The compiler will also use these named lifetimes in its error messages where possible:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for lifetime parameter `'a` due to conflicting requirements\n  --&gt; src/main.rs:20:26\n   |\n20 |         let mut server = Server {streams};\n   |                          ^^^^^^\n   |\nnote: first, the lifetime cannot outlive the lifetime 'b as defined on the method body at 19:5...\n  --&gt; src/main.rs:19:5\n   |\n19 | /     pub fn go&lt;'a, 'b, 'c&gt;(&amp;'a self, streams: &amp;'b mut StdStreams&lt;'c&gt;) {\n20 | |         let mut server = Server {streams};\n21 | |     }\n   | |_____^\nnote: ...so that reference does not outlive borrowed content\n  --&gt; src/main.rs:20:34\n   |\n20 |         let mut server = Server {streams};\n   |                                  ^^^^^^^\nnote: but, the lifetime must be valid for the lifetime 'c as defined on the method body at 19:5...\n  --&gt; src/main.rs:19:5\n   |\n19 | /     pub fn go&lt;'a, 'b, 'c&gt;(&amp;'a self, streams: &amp;'b mut StdStreams&lt;'c&gt;) {\n20 | |         let mut server = Server {streams};\n21 | |     }\n   | |_____^\nnote: ...so that expression is assignable (expected &amp;mut StdStreams&lt;'_&gt;, found &amp;mut StdStreams&lt;'c&gt;)\n  --&gt; src/main.rs:20:34\n   |\n20 |         let mut server = Server {streams};\n   |                                  ^^^^^^^ \n</code></pre>\n\n<p>The conflict should now be clear: <code>'b</code> needs to outlive the lifetime <code>'c</code>, but the method does not impose that constraint. So, we can either bind the lifetime parameter to the same lifetime as the reference:</p>\n\n<pre><code>pub fn go&lt;'a&gt;(&amp;self, streams: &amp;'a mut StdStreams&lt;'a&gt;) {\n}\n</code></pre>\n\n<p>Or add a constraint to the lifetime parameter.</p>\n\n<pre><code>pub fn go&lt;'a: 'b, 'b&gt;(&amp;self, streams: &amp;'a mut StdStreams&lt;'b&gt;) {\n}\n</code></pre>\n\n<hr>\n\n<blockquote>\n  <p>I also find this needlessly sarcastic: expected <code>&amp;mut StdStreams&lt;'_&gt;</code>, found <code>&amp;mut StdStreams&lt;'_&gt;</code></p>\n</blockquote>\n\n<p>That is something that the compiler could probably improve on, but anonymous lifetimes are not that easy to express to the user.</p>\n"}], "owner": {"reputation": 319, "user_id": 1167407, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/f24815b6b60543ac37af378a22031e4f?s=128&d=identicon&r=PG", "display_name": "Dan Wiebe", "link": "https://stackoverflow.com/users/1167407/dan-wiebe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 249, "favorite_count": 0, "closed_date": 1508808686, "accepted_answer_id": 46900843, "answer_count": 1, "score": 0, "last_activity_date": 1508808783, "creation_date": 1508805938, "last_edit_date": 1508808093, "question_id": 46900537, "link": "https://stackoverflow.com/questions/46900537/rust-complains-of-conflicting-lifetime-requirements-no-iterators-or-closures", "closed_reason": "Duplicate", "title": "Rust complains of conflicting lifetime requirements, no iterators or closures", "body": "<p>I'm trying to teach myself Rust.  I'm familiar with C++ and Scala, but Rust is still a Perlish language to me.</p>\n\n<p>I've been bickering with the borrow checker for two days over this code.  It seems pretty clear to me, but I can't get Rust to agree.</p>\n\n<p>This is about as simple as I can get the code and still produce the error:</p>\n\n<pre><code>use std::io;\n\nfn main() {\n    let mut streams: StdStreams = StdStreams {\n        stderr: &amp;mut io::stderr(),\n    };\n    let command = Command {};\n    let streams_ref: &amp;mut StdStreams = &amp;mut streams;\n    command.go(streams_ref);\n}\n\npub struct StdStreams&lt;'a&gt; {\n    stderr: &amp;'a mut io::Write,\n}\n\npub struct Command {}\n\nimpl Command {\n    pub fn go(&amp;self, streams: &amp;mut ::StdStreams) {\n        let mut server = Server { streams };\n    }\n}\n\npub struct Server&lt;'a&gt; {\n    pub streams: &amp;'a mut StdStreams&lt;'a&gt;,\n}\n</code></pre>\n\n<p>Here's the compiler's opinion:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for lifetime parameter `'a` due to conflicting requirements\n  --&gt; src/main.rs:20:26\n   |\n20 |         let mut server = Server { streams };\n   |                          ^^^^^^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #2 defined on the method body at 19:5...\n  --&gt; src/main.rs:19:5\n   |\n19 | /     pub fn go(&amp;self, streams: &amp;mut ::StdStreams) {\n20 | |         let mut server = Server { streams };\n21 | |     }\n   | |_____^\nnote: ...so that reference does not outlive borrowed content\n  --&gt; src/main.rs:20:35\n   |\n20 |         let mut server = Server { streams };\n   |                                   ^^^^^^^\nnote: but, the lifetime must be valid for the anonymous lifetime #3 defined on the method body at 19:5...\n  --&gt; src/main.rs:19:5\n   |\n19 | /     pub fn go(&amp;self, streams: &amp;mut ::StdStreams) {\n20 | |         let mut server = Server { streams };\n21 | |     }\n   | |_____^\nnote: ...so that expression is assignable (expected &amp;mut StdStreams&lt;'_&gt;, found &amp;mut StdStreams&lt;'_&gt;)\n  --&gt; src/main.rs:20:35\n   |\n20 |         let mut server = Server { streams };\n   |                                   ^^^^^^^\n</code></pre>\n\n<p>It seems clear to me that the item I'm storing the offending reference in will go out of scope and die immediately, at the same moment its stored reference does, so there shouldn't be any unpleasantness.</p>\n\n<p>I also find this needlessly sarcastic: <code>expected &amp;mut StdStreams&lt;'_&gt;, found &amp;mut StdStreams&lt;'_&gt;</code>.</p>\n"}, {"tags": ["https", "proxy", "rust", "hyper"], "answers": [{"tags": [], "owner": {"reputation": 3558, "user_id": 1732563, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/b51d68c0232ecc9de87719a203ccb428?s=128&d=identicon&r=PG", "display_name": "Sean Perry", "link": "https://stackoverflow.com/users/1732563/sean-perry"}, "is_accepted": true, "score": 1, "last_activity_date": 1508966120, "creation_date": 1508966120, "answer_id": 46942187, "question_id": 46900257, "link": "https://stackoverflow.com/questions/46900257/is-there-a-way-i-can-add-basic-auth-to-the-proxy-when-im-using-reqwests-client/46942187#46942187", "title": "Is there a way I can add basic auth to the proxy when I&#39;m using reqwest&#39;s client builder?", "body": "<p>Short answer is you cannot without writing more code. For the longer answer see this ticket I opened 2 years back. <a href=\"https://github.com/hyperium/hyper/issues/531\" rel=\"nofollow noreferrer\">https://github.com/hyperium/hyper/issues/531</a></p>\n\n<p>Basically, authenticated proxies do not work currently. The headers are not being updated.</p>\n\n<p>The author is supportive, it is just not a high priority. I stopped being behind a proxy so it stopped being one for me too.</p>\n"}, {"tags": [], "owner": {"reputation": 794, "user_id": 1036941, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/75acdd918f36746a264acc4e81ccdcaa?s=128&d=identicon&r=PG", "display_name": "yodi", "link": "https://stackoverflow.com/users/1036941/yodi"}, "is_accepted": false, "score": 0, "last_activity_date": 1590135521, "creation_date": 1590135521, "answer_id": 61950663, "question_id": 46900257, "link": "https://stackoverflow.com/questions/46900257/is-there-a-way-i-can-add-basic-auth-to-the-proxy-when-im-using-reqwests-client/61950663#61950663", "title": "Is there a way I can add basic auth to the proxy when I&#39;m using reqwest&#39;s client builder?", "body": "<p>If you are using the latest reqwest version, this problem already solved. You need to make sure if your are using HTTP or HTTPS. To double check whether it's connecting to proxy or not, you can use tools like Burp.</p>\n\n<p>I wrote the full-guide on how to setup and test proxy, self-signed certification and Burp for reqwest in here <a href=\"https://www.yodiw.com/rust-reqwest-via-proxy-and-ssl-certificate-captured-by-burp/\" rel=\"nofollow noreferrer\">https://www.yodiw.com/rust-reqwest-via-proxy-and-ssl-certificate-captured-by-burp/</a></p>\n"}], "owner": {"reputation": 39, "user_id": 6727725, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh6.googleusercontent.com/-LpgK8aHbOD4/AAAAAAAAAAI/AAAAAAAABJg/VuH7UE6dHgQ/photo.jpg?sz=128", "display_name": "Joe", "link": "https://stackoverflow.com/users/6727725/joe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 301, "favorite_count": 0, "accepted_answer_id": 46942187, "answer_count": 2, "score": 1, "last_activity_date": 1590135521, "creation_date": 1508803658, "last_edit_date": 1508809240, "question_id": 46900257, "link": "https://stackoverflow.com/questions/46900257/is-there-a-way-i-can-add-basic-auth-to-the-proxy-when-im-using-reqwests-client", "title": "Is there a way I can add basic auth to the proxy when I&#39;m using reqwest&#39;s client builder?", "body": "<p>I'm trying to use Reqwest's proxy feature to pass user:pass basic auth with the rest of the URL into the proxy function. Apparently, the way this crate works basic auth can't be passed this way for the proxy. </p>\n\n<p>When I commented out proxy I got my data but it didn't go through my proxy:</p>\n\n<pre><code>let raw_proxy = format!(\"https://{}:{}@{}\", username, password, forward_proxy);\nlet proxy = reqwest::Proxy::all(&amp;raw_proxy).unwrap();\nlet mut buf = &amp;mut Vec::new();\n\nFile::open(\"../cert.der\").unwrap().read_to_end(&amp;mut buf).unwrap();\nlet cert = reqwest::Certificate::from_der(&amp;buf).unwrap();\nlet client = reqwest::Client::builder()\n    .add_root_certificate(cert)\n    //.proxy(proxy)\n    .build().unwrap();\n\nlet mut res = client.post(\"http://httpbin.org/post\")\n    .header(ContentType::json())\n    .body(format!(\"{}\", redacted_data))\n    .send().unwrap();\n</code></pre>\n"}, {"tags": ["request", "rust", "streaming", "response", "rust-tokio"], "answers": [{"tags": [], "owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "is_accepted": false, "score": 1, "last_activity_date": 1508937036, "last_edit_date": 1508937036, "creation_date": 1508926171, "answer_id": 46929611, "question_id": 46900063, "link": "https://stackoverflow.com/questions/46900063/how-to-stream-a-message-with-tokio-proto-and-tokio-service-in-rust/46929611#46929611", "title": "How to stream a message with tokio_proto and tokio_service in Rust", "body": "<p>The future returned by <code>call</code> ends when the <code>Response</code> is returned; you cannot \"drive\" further actions in that future.</p>\n\n<p>This means you need to spawn a new task generating the (streamed) body; you'll need a <a href=\"https://docs.rs/tokio-core/0.1.10/tokio_core/reactor/struct.Handle.html\" rel=\"nofollow noreferrer\"><code>Handle</code></a> from <code>tokio_core</code> for that.</p>\n\n<p>Also the <code>Body</code> needs to be created from a <code>mpsc</code> channel, not a <code>oneshot</code>; you could send many body chunks.</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=da0139daebcb6f3f0f21453901aa9dd3&amp;version=stable\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<pre><code>#[macro_use] \nextern crate log;\nextern crate bytes;\nextern crate tokio_core;\nextern crate tokio_proto;\nextern crate tokio_service;\nextern crate futures;\n\nuse std::io;\nuse bytes::Bytes;\nuse tokio_service::Service;\nuse tokio_proto::streaming::{Message, Body};\nuse futures::{future, Future, Stream, Sink};\nuse futures::sync::mpsc;\n//use model::request::SmtpCommand;\n//use model::response::SmtpReply;\n\n#[derive(Eq, PartialEq, Debug)]\npub enum SmtpCommand {\n    Data,    \n}\n#[derive(Eq, PartialEq, Debug)]\npub enum SmtpReply {\n    OkInfo,\n    StartMailInputChallenge,\n    TransactionFailure,\n    CommandNotImplementedFailure\n}\n\npub struct SmtpService {\n    handle: tokio_core::reactor::Handle,\n}\n\nimpl Service for SmtpService {\n    // For non-streaming protocols, service errors are always io::Error\n    type Error = io::Error;\n    // These types must match the corresponding protocol types:\n    type Request = Message&lt;SmtpCommand, Body&lt;Bytes, Self::Error&gt;&gt;;\n    type Response = Message&lt;SmtpReply, Body&lt;SmtpReply, Self::Error&gt;&gt;;\n\n    // The future for computing the response; box it for simplicity.\n    type Future = Box&lt;Future&lt;Item = Self::Response, Error = Self::Error&gt;&gt;;\n\n    // Produce a future for computing a response from a request.\n    fn call(&amp;self, command: Self::Request) -&gt; Self::Future {\n\n        info!(\"Received {:?}\", command);\n\n        match command {\n            Message::WithBody(cmd, cmd_body) =&gt; {\n                match cmd {\n                    SmtpCommand::Data =&gt; {\n                        // start =&gt; SmtpReply::StartMailInputChallenge\n                        // ok =&gt; SmtpReply::OkInfo\n                        // err =&gt; SmtpReply::TransactionFailure\n\n                        let (tx, rx) = mpsc::channel::&lt;io::Result&lt;SmtpReply&gt;&gt;(1);\n\n                        let fut = cmd_body\n                            // read cmd stream; for_each results in a Future,\n                            // which completes when the stream is finished\n                            .for_each(|chunk| {\n                                info!(\"data: {:?}\", chunk);\n                                Ok(())\n                            })\n                            // now send the result body\n                            .then(move |r| match r {\n                                Ok(_) =&gt; tx.send(Ok(SmtpReply::OkInfo)),\n                                Err(_) =&gt; tx.send(Ok(SmtpReply::TransactionFailure)),\n                            })\n                            // could send further body messages:\n                            // .and_then(|tx| tx.send(...))\n                            // ignore any send errors; spawn needs a future with\n                            // Item=() and Error=().\n                            .then(|_| Ok(()))\n                        ;\n\n                        self.handle.spawn(fut);\n\n                        let body : Body&lt;SmtpReply, Self::Error&gt; = Body::from(rx);\n                        let msg : Self::Response = Message::WithBody(SmtpReply::StartMailInputChallenge, body);\n\n                        Box::new(future::ok(msg)) as Self::Future\n                    }\n                    _ =&gt; Box::new(future::ok(Message::WithoutBody(\n                        SmtpReply::CommandNotImplementedFailure,\n                    ))),\n                }\n            }\n            Message::WithoutBody(cmd) =&gt; {\n                Box::new(future::ok(Message::WithoutBody(match cmd {\n                    _ =&gt; SmtpReply::CommandNotImplementedFailure,\n                })))\n            }\n        }\n    }\n}\n\nfn main() {\n    println!(\"Hello, world!\");\n}\n</code></pre>\n"}], "owner": {"reputation": 2037, "user_id": 481812, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/9rtTd.png?s=128&g=1", "display_name": "Rbjz", "link": "https://stackoverflow.com/users/481812/rbjz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 140, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1508937036, "creation_date": 1508802177, "last_edit_date": 1508809519, "question_id": 46900063, "link": "https://stackoverflow.com/questions/46900063/how-to-stream-a-message-with-tokio-proto-and-tokio-service-in-rust", "title": "How to stream a message with tokio_proto and tokio_service in Rust", "body": "<p>In my <code>SmtpService</code> I'd like to send the response header right away and the body when processing is finished. This should follow the SMTP exchange:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>C: DATA\nS: 354 Start mail input\nC: ... data ...\nC: ... more ...\nC: .\nS: 250 Ok\n</code></pre>\n\n<p>I've got this much in the <a href=\"https://play.rust-lang.org/?gist=666d94386c7e06dafd67fa65b27e4008&amp;version=stable\" rel=\"nofollow noreferrer\">playground</a>:</p>\n\n<pre><code>#[macro_use] \nextern crate log;\nextern crate bytes;\nextern crate tokio_proto;\nextern crate tokio_service;\nextern crate futures;\n\nuse std::io;\nuse bytes::Bytes;\nuse tokio_service::Service;\nuse tokio_proto::streaming::{Message, Body};\nuse futures::{future, Future, Stream};\nuse futures::sync::oneshot;\n//use model::request::SmtpCommand;\n//use model::response::SmtpReply;\n\n#[derive(Eq, PartialEq, Debug)]\nenum SmtpCommand {\n    Data,    \n}\n#[derive(Eq, PartialEq, Debug)]\nenum SmtpReply {\n    OkInfo,\n    StartMailInputChallenge,\n    TransactionFailure,\n    CommandNotImplementedFailure\n}\n\npub struct SmtpService;\n\nimpl Service for SmtpService {\n    // For non-streaming protocols, service errors are always io::Error\n    type Error = io::Error;\n    // These types must match the corresponding protocol types:\n    type Request = Message&lt;SmtpCommand, Body&lt;Bytes, Self::Error&gt;&gt;;\n    type Response = Message&lt;SmtpReply, Body&lt;SmtpReply, Self::Error&gt;&gt;;\n\n    // The future for computing the response; box it for simplicity.\n    type Future = Box&lt;Future&lt;Item = Self::Response, Error = Self::Error&gt;&gt;;\n\n    // Produce a future for computing a response from a request.\n    fn call(&amp;self, command: Self::Request) -&gt; Self::Future {\n\n        info!(\"Received {:?}\", command);\n\n        match command {\n            Message::WithBody(cmd, cmd_body) =&gt; {\n                match cmd {\n                    SmtpCommand::Data =&gt; {\n                        // start =&gt; SmtpReply::StartMailInputChallenge\n                        // ok =&gt; SmtpReply::OkInfo\n                        // err =&gt; SmtpReply::TransactionFailure\n\n                        let (tx, rx) = oneshot::channel();\n\n                        let fut = cmd_body\n                                .inspect(|chunk| info!(\"data: {:?}\", chunk))\n                                .map(|_| tx.send(SmtpReply::OkInfo))\n                                .map_err(|_| tx.send(SmtpReply::TransactionFailure))\n                                .map(|_| Body::from(rx));\n\n                        // ??? How to wire the fut future into the response message?\n\n                        let msg = Message::WithBody(SmtpReply::StartMailInputChallenge, fut);\n\n                        Box::new(future::ok(msg)) as Self::Future\n                    }\n                    _ =&gt; Box::new(future::ok(Message::WithoutBody(\n                        SmtpReply::CommandNotImplementedFailure,\n                    ))),\n                }\n            }\n            Message::WithoutBody(cmd) =&gt; {\n                Box::new(future::ok(Message::WithoutBody(match cmd {\n                    _ =&gt; SmtpReply::CommandNotImplementedFailure,\n                })))\n            }\n        }\n    }\n}\n\nfn main() {\n    println!(\"Hello, world!\");\n}\n</code></pre>\n\n<p>I'm wondering if it's even possible or do I need to produce two messages instead - one for DATA and a second for the actual byte stream?</p>\n\n<p>The error I get shows a mismatch in the message structure; the body/future is obviously out of place:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0271]: type mismatch resolving `&lt;futures::FutureResult&lt;tokio_proto::streaming::Message&lt;SmtpReply, futures::stream::Map&lt;futures::stream::MapErr&lt;futures::stream::Map&lt;futures::stream::Inspect&lt;tokio_proto::streaming::Body&lt;bytes::Bytes, std::io::Error&gt;, [closure@src/main.rs:57:42: 57:76]&gt;, [closure@src/main.rs:58:38: 58:68 tx:futures::Sender&lt;SmtpReply&gt;]&gt;, [closure@src/main.rs:59:42: 59:84 tx:futures::Sender&lt;SmtpReply&gt;]&gt;, [closure@src/main.rs:60:38: 60:56 rx:futures::Receiver&lt;SmtpReply&gt;]&gt;&gt;, std::io::Error&gt; as futures::Future&gt;::Item == tokio_proto::streaming::Message&lt;SmtpReply, tokio_proto::streaming::Body&lt;SmtpReply, std::io::Error&gt;&gt;`\n  --&gt; src/main.rs:66:25\n   |\n66 |                         Box::new(future::ok(msg)) as Self::Future\n   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `futures::stream::Map`, found struct `tokio_proto::streaming::Body`\n   |\n   = note: expected type `tokio_proto::streaming::Message&lt;_, futures::stream::Map&lt;futures::stream::MapErr&lt;futures::stream::Map&lt;futures::stream::Inspect&lt;tokio_proto::streaming::Body&lt;bytes::Bytes, std::io::Error&gt;, [closure@src/main.rs:57:42: 57:76]&gt;, [closure@src/main.rs:58:38: 58:68 tx:futures::Sender&lt;SmtpReply&gt;]&gt;, [closure@src/main.rs:59:42: 59:84 tx:futures::Sender&lt;SmtpReply&gt;]&gt;, [closure@src/main.rs:60:38: 60:56 rx:futures::Receiver&lt;SmtpReply&gt;]&gt;&gt;`\n              found type `tokio_proto::streaming::Message&lt;_, tokio_proto::streaming::Body&lt;SmtpReply, std::io::Error&gt;&gt;`\n   = note: required for the cast to the object type `futures::Future&lt;Error=std::io::Error, Item=tokio_proto::streaming::Message&lt;SmtpReply, tokio_proto::streaming::Body&lt;SmtpReply, std::io::Error&gt;&gt;&gt;`\n</code></pre>\n"}, {"tags": ["rust", "ownership-semantics"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1508797654, "post_id": 46899330, "comment_id": 80746099, "body": "On the contrary; it <a href=\"https://play.integer32.com/?gist=5b91833c40ae264927688af0d0ce3efe&amp;version=stable\" rel=\"nofollow noreferrer\">forces you towards adding <i>more</i> abstraction</a>."}, {"owner": {"reputation": 64, "user_id": 7123139, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cdc12944a18f04ec06b804f30d186d63?s=128&d=identicon&r=PG&f=1", "display_name": "j_beck", "link": "https://stackoverflow.com/users/7123139/j-beck"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1508799236, "post_id": 46899330, "comment_id": 80746528, "body": "@Shepmaster So if I understand it correctly, in your code <code>handle_client()</code> borrows <code>self.queue</code> which is not a problem vs borrowing just <code>self</code> which was the problem in my code (because it is the &quot;parent object&quot; of borrowed <code>self.listener</code>? ) ?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1508809436, "post_id": 46899330, "comment_id": 80748817, "body": "As discussed in the linked duplicates, Rust can only tell that you are performing disjoint borrows of a struct&#39;s member inside of a <i>single</i> method. The <code>run</code> method now sees that you are borrowing <code>self.listener</code> and <code>self.queue</code> and that those are disjoint \u2014 the call to <code>handle_client</code> cannot possibly modify <code>self.listener</code>."}, {"owner": {"reputation": 64, "user_id": 7123139, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cdc12944a18f04ec06b804f30d186d63?s=128&d=identicon&r=PG&f=1", "display_name": "j_beck", "link": "https://stackoverflow.com/users/7123139/j-beck"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1508829031, "post_id": 46899330, "comment_id": 80755167, "body": "Ok I think I got it thank you so much"}], "owner": {"reputation": 64, "user_id": 7123139, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cdc12944a18f04ec06b804f30d186d63?s=128&d=identicon&r=PG&f=1", "display_name": "j_beck", "link": "https://stackoverflow.com/users/7123139/j-beck"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 194, "favorite_count": 0, "closed_date": 1508797300, "answer_count": 0, "score": 1, "last_activity_date": 1508797458, "creation_date": 1508796867, "last_edit_date": 1508797458, "question_id": 46899330, "link": "https://stackoverflow.com/questions/46899330/why-does-the-compiler-complain-about-borrowing-a-field-as-immutable-even-though", "closed_reason": "Duplicate", "title": "Why does the compiler complain about borrowing a field as immutable even though my function does not access that field in any way?", "body": "<p>I am trying to program an application that listens for requests on a socket and then adds them onto a queue to be processed. Part of my code goes as follows:</p>\n\n<pre><code>pub struct Middleware {\n    listener: TcpListener,\n    queue: Vec&lt;String&gt;,\n    servers: Vec&lt;String&gt;,\n}\n\nimpl Middleware {\n    pub fn run(&amp;mut self) {\n        for stream in self.listener.incoming() {\n            let mut stream = stream.unwrap();\n            let mut buffer = vec![0u8; 512];\n            stream.read(&amp;mut buffer).unwrap();\n            self.queue.push(String::from_utf8(buffer).unwrap());\n        }\n    }\n}\n</code></pre>\n\n<p>Yet if I try to abstract some of the code in <code>run()</code> into a function (literally just copy/paste):</p>\n\n<pre><code>impl Middleware {\n    pub fn run(&amp;mut self) {\n        for stream in self.listener.incoming() {\n            let mut stream = stream.unwrap();\n            self.handle_client(stream);\n        }\n    }\n\n    fn handle_client(&amp;mut self, mut stream: TcpStream) {\n        let mut buffer = vec![0u8; 512];\n        stream.read(&amp;mut buffer).unwrap();\n        self.queue.push(String::from_utf8(buffer).unwrap());\n    }\n}\n</code></pre>\n\n<p>I get the following error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>cannot borrow `*self` as mutable because `self.listener` is also borrowed as immutable\n--&gt; src/lib.rs:21:13\n   |\n19 |         for stream in self.listener.incoming() {\n   |                       ------------- immutable borrow occurs here\n20 |             let mut stream = stream.unwrap();\n21 |             self.handle_client(stream);\n   |             ^^^^ mutable borrow occurs here\n22 |         }\n   |         - immutable borrow ends here\n</code></pre>\n\n<p>From what I understand, <code>self.listener.incoming()</code> actually borrows not only the listener \"field\" but the entire struct. And then, as we cannot have any mutable borrow simultaneously with an immutable borrow, the compiler complains. However, I have to make <code>self</code> mutable in <code>handle_client()</code>, otherwise I cannot push anything on its queue.</p>\n\n<p>I have been thinking about how to structure the code differently to overcome this problem but can't seem to find a solution without changing my <code>Middleware</code> struct (as in removing some fields, etc).</p>\n\n<p>Is it possible to somehow structure the code to use a function (like in my second code snippet)?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 0, "creation_date": 1508788733, "post_id": 46897340, "comment_id": 80742199, "body": "I think because the fields of the <code>Duration</code> struct are private, you cannot use its constructor, and thus cannot use it as part of a <code>const</code> expression."}, {"owner": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 0, "creation_date": 1508788755, "post_id": 46897340, "comment_id": 80742208, "body": "trying to use <code>Duration::new</code> yields this error: <code>error[E0015]: calls in constants are limited to struct and enum constructors</code>"}], "answers": [{"tags": [], "owner": {"reputation": 1109, "user_id": 1772476, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/bc3dd034928abd20bb22de44a4846c93?s=128&d=identicon&r=PG", "display_name": "Timidger", "link": "https://stackoverflow.com/users/1772476/timidger"}, "is_accepted": false, "score": 0, "last_activity_date": 1590272189, "last_edit_date": 1590272189, "creation_date": 1508794186, "answer_id": 46898840, "question_id": 46897340, "link": "https://stackoverflow.com/questions/46897340/is-it-possible-to-specify-a-global-constant-for-a-struct-like-a-timeduration/46898840#46898840", "title": "Is it possible to specify a global constant for a struct like a `time::Duration`?", "body": "<p>A <code>Duration</code> cannot be computed at compile-time, so you have two options:</p>\n\n<ul>\n<li>Store the parameters to the constructor (easy, since they are just  a <code>u64</code> and a <code>u32</code>)</li>\n<li>Store the <code>Duration</code> in a <code>lazy_static</code> (Requires dynamic allocation, atomic locking, and a dependent crate. Not recommended here).</li>\n</ul>\n\n<p>Here's how to do the first option:</p>\n\n<pre><code>use std::time::Duration;\nuse std::thread::sleep;\n\nconst DELAY_SECONDS: u64 = 1;\nconst DELAY_NANO_SECONDS: u32 = 0;\n\nfn main() {\n    sleep(Duration::new(DELAY_SECONDS, DELAY_NANO_SECONDS));\n}\n</code></pre>\n"}], "owner": {"reputation": 331, "user_id": 6600628, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b1d28f73a78df890b6b266e9f6eda45c?s=128&d=identicon&r=PG&f=1", "display_name": "Frank P", "link": "https://stackoverflow.com/users/6600628/frank-p"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 545, "favorite_count": 0, "closed_date": 1508795948, "answer_count": 1, "score": 1, "last_activity_date": 1590272189, "creation_date": 1508787999, "last_edit_date": 1508796010, "question_id": 46897340, "link": "https://stackoverflow.com/questions/46897340/is-it-possible-to-specify-a-global-constant-for-a-struct-like-a-timeduration", "closed_reason": "Duplicate", "title": "Is it possible to specify a global constant for a struct like a `time::Duration`?", "body": "<p>Is it possible to specify a global constant for a struct like a <code>time::Duration</code>?</p>\n\n<pre><code>const DELAY_TIME: time::Duration = ???\n...\nthread::sleep(DELAY_TIME);\n</code></pre>\n"}, {"tags": ["winapi", "colors", "console", "rust", "kernel32"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1508781494, "post_id": 46895380, "comment_id": 80738351, "body": "The Windows console is notoriously tricky with non-ASCII values; try with something simpler than \u25a0?"}, {"owner": {"reputation": 2353, "user_id": 6314392, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/983d79cc7cd73b44026df03f5efdb2a0?s=128&d=identicon&r=PG&f=1", "display_name": "Timon Post", "link": "https://stackoverflow.com/users/6314392/timon-post"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1508781573, "post_id": 46895380, "comment_id": 80738399, "body": "@Shepmaster <code>\u25a0</code> is placed in the ASCII table if you press <code>&lt;ALT&gt; + 254</code> you get this block. And this problem occurs also with normal numbers (just tried out)."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1508782587, "post_id": 46895380, "comment_id": 80738874, "body": "I would strongly recommend that you go back and reread what ASCII is. Only the numeric values less than 128 are ASCII."}, {"owner": {"reputation": 2353, "user_id": 6314392, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/983d79cc7cd73b44026df03f5efdb2a0?s=128&d=identicon&r=PG&f=1", "display_name": "Timon Post", "link": "https://stackoverflow.com/users/6314392/timon-post"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1508783209, "post_id": 46895380, "comment_id": 80739208, "body": "@Shepmaster Okay, but if I use <code>1</code> or <code>2</code> instead of the <code>\u25a0</code> these numbers will still have the same color: <code>CYAN</code> instead of <code>1</code> being cyan and <code>2</code> being red. So that could not be the problem though?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1508783294, "post_id": 46895380, "comment_id": 80739245, "body": "Yes it does seem unlikely to be a non-ASCII issue in that case."}, {"owner": {"reputation": 29355, "user_id": 205580, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/460e6e299e385fd46df156c85a1dd55f?s=128&d=identicon&r=PG", "display_name": "Eryk Sun", "link": "https://stackoverflow.com/users/205580/eryk-sun"}, "edited": false, "score": 0, "creation_date": 1508793917, "post_id": 46895380, "comment_id": 80744758, "body": "You need to check whether <code>SetConsoleTextAttribute</code> is successful. It return <code>FALSE</code> if it fails. If setting the default text attribute succeeds, and it&#39;s still not working, then maybe Rust <code>print</code> calls low-level <code>WriteConsoleOutput</code> with a default text attribute or <code>WriteConsoleOutputCharacter</code>, which doesn&#39;t modify the existing text attribute."}, {"owner": {"reputation": 29355, "user_id": 205580, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/460e6e299e385fd46df156c85a1dd55f?s=128&d=identicon&r=PG", "display_name": "Eryk Sun", "link": "https://stackoverflow.com/users/205580/eryk-sun"}, "edited": false, "score": 0, "creation_date": 1508795069, "post_id": 46895380, "comment_id": 80745209, "body": "Try implementing your own print function that calls <code>WriteConsoleW</code> with a UTF-16 wide-character string. This will also solve any codepage problems. However, the console doesn&#39;t use Uniscribe or DirectWrite to handle characters beyond the BMP, complex scripts, and fallback fonts.  Codes beyond the BMP will be displayed as two default glyphs for the UTF-16 surrogate pair. For codes in the BMP, displaying the character requires direct support in the current font."}], "answers": [{"comments": [{"owner": {"reputation": 2353, "user_id": 6314392, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/983d79cc7cd73b44026df03f5efdb2a0?s=128&d=identicon&r=PG&f=1", "display_name": "Timon Post", "link": "https://stackoverflow.com/users/6314392/timon-post"}, "edited": false, "score": 0, "creation_date": 1508831064, "post_id": 46900081, "comment_id": 80756384, "body": "Works Perfect!! That explains a lot."}], "tags": [], "owner": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "is_accepted": true, "score": 5, "last_activity_date": 1508802354, "creation_date": 1508802354, "answer_id": 46900081, "question_id": 46895380, "link": "https://stackoverflow.com/questions/46895380/setting-text-color-of-the-windows-console-is-not-working-as-expected/46900081#46900081", "title": "Setting text color of the Windows console is not working as expected", "body": "<p>Rust's standard output is line-buffered. So your text gets sent to the console one line at a time, meaning the entire line will have the same color.</p>\n\n<p>You can flush the output after each <code>print!</code> using:</p>\n\n<pre><code>use std::io::Write;\n\nstd::io::stdout().flush().expect(\"Flush stdout failed\");\n</code></pre>\n"}], "owner": {"reputation": 2353, "user_id": 6314392, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/983d79cc7cd73b44026df03f5efdb2a0?s=128&d=identicon&r=PG&f=1", "display_name": "Timon Post", "link": "https://stackoverflow.com/users/6314392/timon-post"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 360, "favorite_count": 0, "accepted_answer_id": 46900081, "answer_count": 1, "score": 0, "last_activity_date": 1508802354, "creation_date": 1508780422, "last_edit_date": 1508783285, "question_id": 46895380, "link": "https://stackoverflow.com/questions/46895380/setting-text-color-of-the-windows-console-is-not-working-as-expected", "title": "Setting text color of the Windows console is not working as expected", "body": "<p>I am trying to change the Windows console foreground text color with Rust using the winapi and kernel32 crates.</p>\n\n<pre><code>[dependencies]\nwinapi = \"0.2.8\"\nkernel32-sys = \"0.2.1\" \n</code></pre>\n\n<p><strong>Code</strong></p>\n\n<p>Enum where I store the foreground color values:</p>\n\n<pre><code>#[repr(u16)]\npub enum ForegroundColor {\n    RED =  (winapi::FOREGROUND_INTENSITY | winapi::FOREGROUND_RED) as u16,\n    CYAN = (winapi::FOREGROUND_INTENSITY | winapi::FOREGROUND_GREEN | winapi::FOREGROUND_BLUE) as u16,\n    // ...\n}\n</code></pre>\n\n<p>Function that gets the output handle:</p>\n\n<pre><code>use winapi;\nuse winapi::{CONSOLE_SCREEN_BUFFER_INFO, COORD, HANDLE, SMALL_RECT, WORD};\nuse kernel32;\n\nstatic mut CONSOLE_OUTPUT_HANDLE: Option&lt;HANDLE&gt; = None;\npub fn get_output_handle() -&gt; HANDLE {\n    unsafe {\n        if let Some(handle) = CONSOLE_OUTPUT_HANDLE {\n            handle_check(handle);\n            handle\n        } else {\n            let handle = kernel32::GetStdHandle(winapi::STD_OUTPUT_HANDLE);\n            handle_check(handle);\n            CONSOLE_OUTPUT_HANDLE = Some(handle);\n            handle\n        }\n    }\n}\n\nfn handle_check(handle: HANDLE) {\n    if handle == winapi::INVALID_HANDLE_VALUE {\n        panic!(\"NoConsole\")\n    }\n}\n</code></pre>\n\n<p>Function that sets the foreground color\n     use kernel32;</p>\n\n<pre><code>// ForegroundColor is a struct containing win32 colors\npub fn set_foreground_color(for_color: ForegroundColor) {\n    // function shown above\n    let output_handle = kernel::get_output_handle();\n    // cast the enum value to a u16: fn to_u16(&amp;self) -&gt; u16 { *self as u16 }\n    let forground_color = for_color.to_u16();\n\n    unsafe {\n        kernel32::SetConsoleTextAttribute(output_handle, forground_color);\n    }\n}\n</code></pre>\n\n<p>In my <code>main.rs</code>  I am creating a box that is 20 blocks on X and 20 on Y. I want to give the border a color of <code>CYAN</code> and the inside a <code>RED</code> color. </p>\n\n<pre><code>// for example 1 has to be cyan and 2 red but than on larger scale\n// 1111\n// 1221\n// 1111\nfor y in 0..21 {\n    for x in 0..21 {\n        if (x == 0 || y == 0) || (x == 20 || y == 20) {\n            // function shown above\n            set_foreground_color(ForegroundColor::CYAN);\n            // Print a cyan colored \u25a0\n            print!(\"\u25a0\")\n        } else {\n            // function shown above\n            set_foreground_color(ForegroundColor::RED);\n            // Print a red colored \u25a0\n            print!(\"\u25a0\")\n        }\n    }\n    // reset cursor to start of new line\n    println!();\n}\n</code></pre>\n\n<p>For some reason, all <code>\u25a0</code> will have the <code>CYAN</code> color and there will not be any red ones. </p>\n\n<p>When I have the same code and replace the <code>print!()</code> with <code>println!()</code>, it will print both the <code>RED</code> and <code>CYAN</code> colored blocks as expected. All the <code>\u25a0</code> have the right color as expected but the problem now is that the <code>\u25a0</code> are on their own row. </p>\n\n<p>Why is the color of the text changing as expected when using <code>println!()</code>? Why can I not have different colors on the same line with  <code>print!()</code>? Is there some buffer in winapi that stores the color of the console lines? Do I need to specify it somewhere before I can use multiple colors in one line?</p>\n"}, {"tags": ["javascript", "rust", "emscripten", "webassembly"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1508779101, "post_id": 46894766, "comment_id": 80737112, "body": "Why do you think you <i>aren&#39;t</i> accessing the array? Why do you need to pass &quot;back&quot; the array if you&#39;ve only transferred a pointer to the array? Are you sure that <code>stdout</code> is even properly configured? The error message seems to indicate otherwise; try just setting a value in the array and using <code>console.log</code> on the calling side."}, {"owner": {"reputation": 64343, "user_id": 249933, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/458f2e0d08d4114f8b323798cfea141d?s=128&d=identicon&r=PG", "display_name": "ColinE", "link": "https://stackoverflow.com/users/249933/coline"}, "edited": false, "score": 0, "creation_date": 1508793717, "post_id": 46894766, "comment_id": 80744676, "body": "I presume you&#39;d use the same solution that people use for C / C++ - i.e. communicate a memory address which is the start of the array <a href=\"https://stackoverflow.com/questions/46748572/how-to-access-webassembly-linear-memory-from-c-c\" title=\"how to access webassembly linear memory from c c\">stackoverflow.com/questions/46748572/&hellip;</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 64343, "user_id": 249933, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/458f2e0d08d4114f8b323798cfea141d?s=128&d=identicon&r=PG", "display_name": "ColinE", "link": "https://stackoverflow.com/users/249933/coline"}, "edited": false, "score": 0, "creation_date": 1508797238, "post_id": 46894766, "comment_id": 80745981, "body": "@ColinE that would be literally what the current code does (<code>data: *mut [u8]</code>) thus why I asked such in my previous comment."}, {"owner": {"reputation": 1118, "user_id": 3768458, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/6390ef247a24bb001452688ecb0c8010?s=128&d=identicon&r=PG&f=1", "display_name": "b-m-f", "link": "https://stackoverflow.com/users/3768458/b-m-f"}, "edited": false, "score": 0, "creation_date": 1508846164, "post_id": 46894766, "comment_id": 80766350, "body": "I tried it out with an add function. Adding two numbers in rust and then printing the result on the calling side. I also printed &#39;Hello world!&#39; from the Rust side. All working fine.   Also the array contains data of an Image. Printing it works from JS."}, {"owner": {"reputation": 1721, "user_id": 804847, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/17600fcaf46cbd03113a06057bdc4993?s=128&d=identicon&r=PG", "display_name": "psiphi75", "link": "https://stackoverflow.com/users/804847/psiphi75"}, "edited": false, "score": 0, "creation_date": 1528947471, "post_id": 46894766, "comment_id": 88701405, "body": "You may have missed out the <code>extern</code> on <code>pub fn print_image_data(...)</code>.  But see my complete answer that works for me below."}], "answers": [{"tags": [], "owner": {"reputation": 1721, "user_id": 804847, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/17600fcaf46cbd03113a06057bdc4993?s=128&d=identicon&r=PG", "display_name": "psiphi75", "link": "https://stackoverflow.com/users/804847/psiphi75"}, "is_accepted": false, "score": 2, "last_activity_date": 1528948654, "last_edit_date": 1528948654, "creation_date": 1528947348, "answer_id": 50849229, "question_id": 46894766, "link": "https://stackoverflow.com/questions/46894766/accessing-uint8clampedarray-in-rust-web-assembly/50849229#50849229", "title": "Accessing UInt8ClampedArray in Rust web assembly", "body": "<p>This is one method of accessing a <code>UInt8ClampedArray</code>, based on <a href=\"https://www.hellorust.com/demos/canvas/index.html\" rel=\"nofollow noreferrer\">this code</a>.</p>\n\n<p><strong>JavaScript</strong></p>\n\n<pre><code>fetch('hello_world.gc.wasm')\n  .then(r =&gt; r.arrayBuffer())\n  .then(r =&gt; WebAssembly.instantiate(r))\n  .then(r =&gt; r.instance.exports)\n  .then(wasm =&gt; {\n\n    const width = 1;\n    const height = 1;\n    const byteSize = width * height * 4;\n    let pointer = wasm.alloc(byteSize);\n    let usub = new Uint8ClampedArray(wasm.memory.buffer, pointer, byteSize);\n    let img = new ImageData(usub, width, height);\n    wasm.abcd(pointer, width, height);\n\n    console.log(`${img.data[0].toString(16)}`);\n    console.log(`${img.data[1].toString(16)}`);\n    console.log(`${img.data[2].toString(16)}`);\n    console.log(`${img.data[3].toString(16)}`);\n  });\n</code></pre>\n\n<p><strong>Rust</strong></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::mem;\nuse std::os::raw::c_void;\nuse std::slice;\n\n// In order to work with the memory we expose (de)allocation methods\n#[no_mangle]\npub extern \"C\" fn alloc(size: usize) -&gt; *mut c_void {\n    let mut buf = Vec::with_capacity(size);\n    let ptr = buf.as_mut_ptr();\n    mem::forget(buf);\n    return ptr as *mut c_void;\n}\n\n#[no_mangle]\npub extern \"C\" fn dealloc(ptr: *mut c_void, cap: usize) {\n    unsafe {\n        let _buf = Vec::from_raw_parts(ptr, 0, cap);\n    }\n}\n\n#[no_mangle]\npub extern \"C\" fn abcd(pointer: *mut u8, width: usize, height: usize) {\n    let bytesize: usize = width * height * 4;\n    let sl = unsafe { slice::from_raw_parts_mut(pointer, bytesize) };\n\n    // Now you can change your buffer\n    sl[0] = 0xaa;\n    sl[1] = 0xab;\n    sl[2] = 0xac;\n    sl[3] = 0xad;\n}\n</code></pre>\n"}], "owner": {"reputation": 1118, "user_id": 3768458, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/6390ef247a24bb001452688ecb0c8010?s=128&d=identicon&r=PG&f=1", "display_name": "b-m-f", "link": "https://stackoverflow.com/users/3768458/b-m-f"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 631, "favorite_count": 2, "answer_count": 1, "score": 4, "last_activity_date": 1528948654, "creation_date": 1508778152, "last_edit_date": 1509112584, "question_id": 46894766, "link": "https://stackoverflow.com/questions/46894766/accessing-uint8clampedarray-in-rust-web-assembly", "title": "Accessing UInt8ClampedArray in Rust web assembly", "body": "<p>I would like to pass an array containing <code>imageData</code> from a Canvas to a Rust function to do some calculation with it. I have set the return type to null the get one way data passing to work:</p>\n\n<p><strong>JS</strong></p>\n\n<pre><code>wasm.initialize({ noExitRuntime: true }).then(module =&gt; {\n  const printImageData = module.cwrap(\"print_image_data\", null, [\"array\"]);\n  const functions = { add, printImageData };\n  main(functions);\n});\n\n\nasync function main(wasmFn) {\n  const imageData = await getImageData();\n  const data = new Uint8Array(imageData.data);\n  wasmFn.printImageData(data);\n}\n</code></pre>\n\n<p><strong>Rust</strong></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[no_mangle]\npub fn print_image_data(data: *mut [u8]) -&gt; i32 {\n    println!(\"{:?}\", data);\n    32\n}\n</code></pre>\n\n<p>When executing this, I get the following error in my browser console:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>thread 'main' panicked at 'cannot access stdout during shutdown', /checkout/src/libcore/option.rs:819:4\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\nuncaught exception: 5261184\n</code></pre>\n\n<p>How can I access the array from Rust side? How could I then access that data again from JavaScript? I have read that passing back an array is not possible.</p>\n\n<p><strong>EDIT:</strong></p>\n\n<p>at <a href=\"https://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html#cwrap\" rel=\"nofollow noreferrer\">the docs of emscripten</a> I have found the following: </p>\n\n<blockquote>\n  <p>argTypes \u2013 An array of the types of arguments for the function (if there are no arguments, this can be omitted). Types are as in returnType, except that array is not supported as there is no way for us to know the length of the array).</p>\n</blockquote>\n\n<p>Is there another way to do this? Maybe passing a Pointer and accessing the Array somehow? I find it quite hard to find documentation, so any link is appreciated :)</p>\n"}, {"tags": ["console", "rust", "visual-studio-code", "rust-cargo"], "owner": {"reputation": 6067, "user_id": 517073, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/917ead48eb4ab8bcedbb454977143e60?s=128&d=identicon&r=PG", "display_name": "Stepan Yakovenko", "link": "https://stackoverflow.com/users/517073/stepan-yakovenko"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1767, "favorite_count": 0, "answer_count": 0, "score": 5, "last_activity_date": 1508769332, "creation_date": 1508759200, "last_edit_date": 1508769332, "question_id": 46888585, "link": "https://stackoverflow.com/questions/46888585/how-to-stop-program-execution-in-console-in-visual-studio-code", "title": "How to stop program execution in console in Visual Studio Code?", "body": "<p>I have configured tasks.json to build and launch my console application:</p>\n\n<pre><code>{\n    \"version\": \"0.1.0\",\n    \"command\": \"cargo\",\n    \"isShellCommand\": true,\n    \"args\": [\"run\"],\n    \"showOutput\": \"always\"\n}\n</code></pre>\n\n<p>It is running and calculating, but I can't stop it without Windows Task Manager. I tried right clicking and pressing <strong>Stop Code Run</strong>, but it doesn't help. Is there any support for running Rust programs so that I have regular start and stop buttons as in any modern IDE?</p>\n"}, {"tags": ["console", "rust", "visual-studio-code", "code-navigation"], "comments": [{"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 1, "creation_date": 1508753857, "post_id": 46885529, "comment_id": 80720870, "body": "On linux I get a mouse-over hint on the filename telling me to &quot;Ctrl + click to follow link&quot; (which works)"}, {"owner": {"reputation": 6067, "user_id": 517073, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/917ead48eb4ab8bcedbb454977143e60?s=128&d=identicon&r=PG", "display_name": "Stepan Yakovenko", "link": "https://stackoverflow.com/users/517073/stepan-yakovenko"}, "reply_to_user": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1508753944, "post_id": 46885529, "comment_id": 80720931, "body": "I don&#39;t have it on Windows, most probably I&#39;m missing some esoteric knowledge of vscode setup."}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1508754083, "post_id": 46885529, "comment_id": 80721025, "body": "Could be the &quot;Rust (rls)&quot; extension I&#39;m using."}, {"owner": {"reputation": 6067, "user_id": 517073, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/917ead48eb4ab8bcedbb454977143e60?s=128&d=identicon&r=PG", "display_name": "Stepan Yakovenko", "link": "https://stackoverflow.com/users/517073/stepan-yakovenko"}, "reply_to_user": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1508754590, "post_id": 46885529, "comment_id": 80721359, "body": "I also have rls."}], "answers": [{"tags": [], "owner": {"reputation": 6067, "user_id": 517073, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/917ead48eb4ab8bcedbb454977143e60?s=128&d=identicon&r=PG", "display_name": "Stepan Yakovenko", "link": "https://stackoverflow.com/users/517073/stepan-yakovenko"}, "is_accepted": true, "score": 0, "last_activity_date": 1509027799, "creation_date": 1509027799, "answer_id": 46956887, "question_id": 46885529, "link": "https://stackoverflow.com/questions/46885529/jump-to-source-from-console-output-in-visual-studio-code/46956887#46956887", "title": "Jump to source from console output in Visual Studio Code", "body": "<p>As a partial solution to the problem I'd propose using <strong>Problems</strong> panel:</p>\n\n<p><a href=\"https://i.stack.imgur.com/PaRIs.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/PaRIs.png\" alt=\"enter image description here\"></a></p>\n\n<p>If the rest of plugins are installed correctly, it will show you lines of code with error messages (unfortunately partrial):</p>\n\n<p><a href=\"https://i.stack.imgur.com/mHLx5.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/mHLx5.png\" alt=\"enter image description here\"></a></p>\n\n<p>But it allows to jump to the source code.</p>\n"}], "owner": {"reputation": 6067, "user_id": 517073, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/917ead48eb4ab8bcedbb454977143e60?s=128&d=identicon&r=PG", "display_name": "Stepan Yakovenko", "link": "https://stackoverflow.com/users/517073/stepan-yakovenko"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 753, "favorite_count": 0, "accepted_answer_id": 46956887, "answer_count": 1, "score": 2, "last_activity_date": 1509027799, "creation_date": 1508749445, "last_edit_date": 1508769376, "question_id": 46885529, "link": "https://stackoverflow.com/questions/46885529/jump-to-source-from-console-output-in-visual-studio-code", "title": "Jump to source from console output in Visual Studio Code", "body": "<p>Is it possible to setup Visual Studio Code to jump to source from console output? Here is my output:</p>\n\n<p><a href=\"https://i.stack.imgur.com/OHzWm.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/OHzWm.png\" alt=\"enter image description here\"></a></p>\n\n<p>Is it possible to click on reduced.rs and open this file?</p>\n"}, {"tags": ["rust", "visual-studio-code", "rust-cargo", "rls"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1508749469, "post_id": 46885292, "comment_id": 80718245, "body": "You have installed too many extensions. You should only need one. Pick either <a href=\"https://github.com/editor-rs/vscode-rust\" rel=\"nofollow noreferrer\">Rust</a> or <a href=\"https://github.com/editor-rs/vscode-rust\" rel=\"nofollow noreferrer\">Rust (rls)</a>, in this case whichever provides a Build command."}, {"owner": {"reputation": 6067, "user_id": 517073, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/917ead48eb4ab8bcedbb454977143e60?s=128&d=identicon&r=PG", "display_name": "Stepan Yakovenko", "link": "https://stackoverflow.com/users/517073/stepan-yakovenko"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1508749735, "post_id": 46885292, "comment_id": 80718413, "body": "Which one provides reasonable rust support with build command?"}, {"owner": {"reputation": 395, "user_id": 3002719, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/SbA9p.jpg?s=128&g=1", "display_name": "SilSur", "link": "https://stackoverflow.com/users/3002719/silsur"}, "edited": false, "score": 1, "creation_date": 1586727290, "post_id": 46885292, "comment_id": 108228758, "body": "@StepanYakovenko -&gt; Which one? I always go with the official tools ... which in this case I believe is the second one in your little screenshot - i.e. &quot;Rust (rls)&quot; ."}, {"owner": {"reputation": 13885, "user_id": 1509695, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/04a3ca8cd41bf8e170b901072fcc667f?s=128&d=identicon&r=PG", "display_name": "matanster", "link": "https://stackoverflow.com/users/1509695/matanster"}, "edited": false, "score": 0, "creation_date": 1598716570, "post_id": 46885292, "comment_id": 112552304, "body": "So many answers and it&#39;s all just confusing"}], "answers": [{"comments": [{"owner": {"reputation": 6067, "user_id": 517073, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/917ead48eb4ab8bcedbb454977143e60?s=128&d=identicon&r=PG", "display_name": "Stepan Yakovenko", "link": "https://stackoverflow.com/users/517073/stepan-yakovenko"}, "edited": false, "score": 3, "creation_date": 1508749599, "post_id": 46885479, "comment_id": 80718337, "body": "Code Runner doesn&#39;t seem to be a right tool, because it ignores my project dependencies and runs only one file (and fails)."}, {"owner": {"reputation": 6067, "user_id": 517073, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/917ead48eb4ab8bcedbb454977143e60?s=128&d=identicon&r=PG", "display_name": "Stepan Yakovenko", "link": "https://stackoverflow.com/users/517073/stepan-yakovenko"}, "edited": false, "score": 0, "creation_date": 1508750984, "post_id": 46885479, "comment_id": 80719195, "body": "Thank you, yet I don&#39;t understand what you mean by &#39;Never scan the build output&#39; setting, I don&#39;t see it."}, {"owner": {"reputation": 67096, "user_id": 265521, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/34a66330977044d70165288c56740d4b?s=128&d=identicon&r=PG", "display_name": "Timmmm", "link": "https://stackoverflow.com/users/265521/timmmm"}, "edited": false, "score": 1, "creation_date": 1559569920, "post_id": 46885479, "comment_id": 99451991, "body": "Your <code>Using the rust-lang.rust extension</code> instructions no longer work unfortunately. You have to use <code>type: shell</code> instead of <code>type: cargo</code> as described by Kip."}, {"owner": {"reputation": 4255, "user_id": 319826, "user_type": "registered", "accept_rate": 72, "profile_image": "https://i.stack.imgur.com/TLA0j.jpg?s=128&g=1", "display_name": "kometen", "link": "https://stackoverflow.com/users/319826/kometen"}, "edited": false, "score": 0, "creation_date": 1599836684, "post_id": 46885479, "comment_id": 112907601, "body": "Nice answer. cmd is used on mac."}], "tags": [], "owner": {"reputation": 8841, "user_id": 8208215, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/QXD4t.png?s=128&g=1", "display_name": "wasmup", "link": "https://stackoverflow.com/users/8208215/wasmup"}, "is_accepted": false, "score": 103, "last_activity_date": 1614764090, "last_edit_date": 1614764090, "creation_date": 1508749282, "answer_id": 46885479, "question_id": 46885292, "link": "https://stackoverflow.com/questions/46885292/how-to-launch-a-rust-application-from-visual-studio-code/46885479#46885479", "title": "How to launch a Rust application from Visual Studio Code?", "body": "<h3>Using the <a href=\"https://code.visualstudio.com/docs/editor/integrated-terminal\" rel=\"noreferrer\">integrated terminal</a></h3>\n<p>Shortcut to run the integrated terminal: <code>Ctrl + `</code><br />\n(<strong>Ctrl + backtick</strong>)<br />\nThen run the following command in the integrated terminal:</p>\n<pre><code>cargo run\n</code></pre>\n<p>Notes: Open the Code editor from your project folder ( <code>code .</code> command inside project folder terminal, or in GUI mode: right-click inside project folder and select <code>Open With Code</code>) then press <code>Ctrl + `</code> ( Ctrl + backtick ) to open integrated terminal, then enter: <code>cargo run</code></p>\n<hr />\n<p><strong>TLDR</strong>: install <a href=\"https://marketplace.visualstudio.com/items?itemName=matklad.rust-analyzer\" rel=\"noreferrer\">rust-analyzer</a> and <a href=\"https://marketplace.visualstudio.com/items?itemName=vadimcn.vscode-lldb\" rel=\"noreferrer\">Native debugger based on LLDB</a></p>\n<p>Or install using terminal commands:</p>\n<pre class=\"lang-sh prettyprint-override\"><code>code --install-extension matklad.rust-analyzer\ncode --install-extension vadimcn.vscode-lldb\n</code></pre>\n<hr />\n<h3>Using <a href=\"https://code.visualstudio.com/docs/editor/tasks\" rel=\"noreferrer\">Tasks</a></h3>\n<p>Shortcut to run the Task: <code>Ctrl + Shift + B</code><br />\nAdd <code>cargo run</code> as a default Task: add <code>.vscode/tasks.json</code> file to your project as follows, to use <code>cargo run</code> to run the project, change the contents of <code>.vscode/tasks.json</code> as follows:</p>\n<pre><code>{\n    // See https://go.microsoft.com/fwlink/?LinkId=733558\n    // for the documentation about the tasks.json format\n    &quot;version&quot;: &quot;2.0.0&quot;,\n    &quot;tasks&quot;: [\n        {\n            &quot;label&quot;: &quot;cargo run&quot;,\n            &quot;type&quot;: &quot;shell&quot;,\n            &quot;command&quot;: &quot;~/.cargo/bin/cargo&quot;, // note: full path to the cargo\n            &quot;args&quot;: [\n                &quot;run&quot;,\n                // &quot;--release&quot;,\n                // &quot;--&quot;,\n                // &quot;arg1&quot;\n            ],\n            &quot;group&quot;: {\n                &quot;kind&quot;: &quot;build&quot;,\n                &quot;isDefault&quot;: true\n            }\n        }\n    ]\n}\n</code></pre>\n<p>Now press <code>Ctrl + Shift + B</code> to run the Task, or Press <code>Ctrl + Shift + P</code> and select <code>Tasks: Run Build Task</code> from the Command Palette.</p>\n<p>You may add arguments like the comment above e.g.: <code>&quot;args&quot;: [&quot;run&quot;, &quot;--release&quot;, &quot;--&quot;, &quot;arg1&quot;],</code> (if your app requires it).</p>\n<p>(You may open the Command Palette with <code>Ctrl + Shift + P</code> and type in <code>Configure Default Build Task</code> and press <code>Enter</code> to select it. Then select <code>Rust: cargo build</code> or <code>Others</code>. This generates a <code>tasks.json</code> file in your workspace <code>.vscode</code> folder).</p>\n<hr />\n<h3>Using the <a href=\"https://marketplace.visualstudio.com/items?itemName=vadimcn.vscode-lldb\" rel=\"noreferrer\">Native debugger based on LLDB</a></h3>\n<p>To Run the project:<br />\nPress <strong>Ctrl+F5</strong> or select <code>Run Without Debugging</code> from the <code>Run</code> menu, and see the <strong>terminal</strong> window, for the result:</p>\n<p><a href=\"https://i.stack.imgur.com/5BRFX.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/5BRFX.png\" alt=\"Native debugger based on LLDB\" /></a></p>\n<p>For the first time (only once), install the Native debugger based on LLDB, or install using the command line:</p>\n<pre class=\"lang-sh prettyprint-override\"><code>code --install-extension vadimcn.vscode-lldb\n</code></pre>\n<p>Then inside your Visual Studio Code project: Press shortcut <strong>Ctrl+F5</strong> then for the first time select <code>LLDB</code> then <code>OK</code> and <code>Yes</code>, <strong>or</strong> create <code>.vscode/launch.json</code> file like the following sample, inside your project folder (Also you may select <code>create a launch.json file</code> from Debug/Run panel too):</p>\n<pre><code>{\n    // Use IntelliSense to learn about possible attributes.\n    // Hover to view descriptions of existing attributes.\n    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387\n    &quot;version&quot;: &quot;0.2.0&quot;,\n    &quot;configurations&quot;: [\n        {\n            &quot;type&quot;: &quot;lldb&quot;,\n            &quot;request&quot;: &quot;launch&quot;,\n            &quot;name&quot;: &quot;Debug executable 'example'&quot;,\n            &quot;cargo&quot;: {\n                &quot;args&quot;: [\n                    &quot;build&quot;,\n                    &quot;--bin=example&quot;,\n                    &quot;--package=example&quot;\n                ],\n                &quot;filter&quot;: {\n                    &quot;name&quot;: &quot;example&quot;,\n                    &quot;kind&quot;: &quot;bin&quot;\n                }\n            },\n            &quot;args&quot;: [\n                // &quot;user_arg1&quot;,\n                // &quot;user_arg2&quot;\n            ],\n            &quot;cwd&quot;: &quot;${workspaceFolder}&quot;\n        },\n        {\n            &quot;type&quot;: &quot;lldb&quot;,\n            &quot;request&quot;: &quot;launch&quot;,\n            &quot;name&quot;: &quot;Debug unit tests in executable 'example'&quot;,\n            &quot;cargo&quot;: {\n                &quot;args&quot;: [\n                    &quot;test&quot;,\n                    &quot;--no-run&quot;,\n                    &quot;--bin=example&quot;,\n                    &quot;--package=example&quot;\n                ],\n                &quot;filter&quot;: {\n                    &quot;name&quot;: &quot;example&quot;,\n                    &quot;kind&quot;: &quot;bin&quot;\n                }\n            },\n            &quot;args&quot;: [],\n            &quot;cwd&quot;: &quot;${workspaceFolder}&quot;\n        }\n    ]\n}\n</code></pre>\n<p>Notes:<br />\nI named the project <code>example</code> above.<br />\nYou may uncomment above <code>// &quot;user_arg1&quot;,</code> if you need args.</p>\n<hr />\n<h3>Using the <a href=\"https://marketplace.visualstudio.com/items?itemName=matklad.rust-analyzer\" rel=\"noreferrer\">rust-analyzer</a> extension</h3>\n<p><a href=\"https://rust-analyzer.github.io/manual.html#installation\" rel=\"noreferrer\">Installation</a>:</p>\n<pre class=\"lang-sh prettyprint-override\"><code>rustup component add rust-src\ncode --install-extension matklad.rust-analyzer\n</code></pre>\n<p>To <strong>run</strong> the code click on the gray <code>Run</code> text above <code>fn main()</code>:\n<a href=\"https://i.stack.imgur.com/Bar9M.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/Bar9M.png\" alt=\"the gray Run text above main, image\" /></a></p>\n<hr />\n<h3>Using the <a href=\"https://marketplace.visualstudio.com/items?itemName=formulahendry.code-runner\" rel=\"noreferrer\">code-runner</a> extension</h3>\n<p>Install the extension, then open the source file then you will have a play button in the top right corner to <strong>click</strong>, or use default shortcut: <code>Ctrl+Alt+N</code> (You may change the shortcut from: <code>File&gt;Preferences&gt;Keyboard Shortcuts</code> and enter <code>code-runner.run</code> in the search box).<br />\nNote: To run the command inside terminal You may set <code>code-runner.runInTerminal</code> to <code>true</code> from <code>File&gt;Preferences&gt;Settings</code> (or press <code>Ctrl+,</code>), then enter <code>code-runner.runInTerminal</code> in the search box.<br />\n<strong>Edit</strong>: This runs only open file e.g.: <code>rustc main.rs</code>. You may edit the <code>code-runner.executorMap</code> to change the command from:</p>\n<pre><code>&quot;rust&quot;: &quot;cd $dir &amp;&amp; rustc $fileName &amp;&amp; $dir$fileNameWithoutExt&quot;,\n</code></pre>\n<p>to:</p>\n<pre><code>&quot;rust&quot;: &quot;cargo run&quot;,\n</code></pre>\n<p>So the Code Runner runs the <code>cargo run</code> command each time you click the Play button (or pressing keyboard shortcut):<br />\nFrom menu: <code>File&gt;Preferences&gt;Settings</code> (or press <code>Ctrl+,</code>) then inside search box, enter:<br />\n<code>code-runner.executorMap</code> then click <code>Edit in Settings.json</code> then edit <code>&quot;code-runner.executorMap&quot;: and change &quot;rust&quot;:&quot;cd $dir &amp;&amp; rustc $fileName &amp;&amp; $dir$fileNameWithoutExt&quot;</code> to <code>&quot;rust&quot;: &quot;cargo run&quot;</code>.</p>\n<p>Or simply add 3 following lines to VSCode settings JSON (<code>settings.json</code> file):</p>\n<pre><code>&quot;code-runner.executorMap&quot;: {\n  &quot;rust&quot;: &quot;cargo run # $fileName&quot;\n}\n</code></pre>\n<hr />\n<h3>Using the Code Runner custom command</h3>\n<p>You may set the custom command to run: <code>&quot;code-runner.customCommand&quot;: &quot;cargo run&quot;</code><br />\nMenu: <code>File&gt;Preferences&gt;Settings</code> (or press <code>Ctrl+,</code>) then inside search box, enter <code>customCommand</code> and set the custom command to run: <code>cargo run</code>.\nYou may change Shortcut to this command for ease of use: From Menu select: <code>File&gt;Preferences&gt;Keyboard Shortcuts</code>, then inside search box enter: <code>customCommand</code>, then add/change keybinding e.g. press: <code>Ctrl+L Ctrl+R</code></p>\n<hr />\n<h3>Using the <a href=\"https://marketplace.visualstudio.com/items?itemName=rust-lang.rust\" rel=\"noreferrer\"><code>rust-lang.rust</code></a> extension</h3>\n<p>You may install this extension from the command line using:</p>\n<pre class=\"lang-sh prettyprint-override\"><code>code --install-extension rust-lang.rust\n</code></pre>\n<p>The plugin uses tasks: You may press <code>Ctrl + Shift + B</code> then select options presented, for now, there are only two options:</p>\n<pre><code>cargo check\ncargo build\n</code></pre>\n<p>So you need to use the <code>cargo run</code> Task presented above (<code>tasks.json</code> file).</p>\n<hr />\n<h3>Using the <a href=\"https://marketplace.visualstudio.com/items?itemName=kalitaalexey.vscode-rust\" rel=\"noreferrer\"><code>vscode-rust</code></a> extension</h3>\n<p>Install with <kbd>Ctrl</kbd>+<kbd>P</kbd> and type &quot;ext install vscode-rust&quot;. Run with <kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>P</kbd>, type &quot;cargo&quot; then select &quot;Cargo:Run&quot;.</p>\n<p>Edit: You may add Shortcut to this command for ease of use:<br />\nFrom Menu select: <code>File&gt;Preferences&gt;Keyboard Shortcuts</code>, then inside search box enter: <code>Cargo:Run</code>, then add keybinding e.g. press: <code>Ctrl+L Ctrl+R</code>, and if you are using this extension in non RLS mode to run Cargo command in terminal: you may set <code>&quot;rust.executeCargoCommandInTerminal&quot;: true</code> in <code>File&gt;Preferences&gt;Settings</code> menu (or press <code>Ctrl+,</code>) then enter <code>executeCargoCommandInTerminal</code> inside search box.</p>\n"}, {"tags": [], "owner": {"reputation": 554, "user_id": 3502743, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PgYpc.jpg?s=128&g=1", "display_name": "Kip", "link": "https://stackoverflow.com/users/3502743/kip"}, "is_accepted": false, "score": 2, "last_activity_date": 1555207434, "last_edit_date": 1555207434, "creation_date": 1555203810, "answer_id": 55671164, "question_id": 46885292, "link": "https://stackoverflow.com/questions/46885292/how-to-launch-a-rust-application-from-visual-studio-code/55671164#55671164", "title": "How to launch a Rust application from Visual Studio Code?", "body": "<p>I was able to get this working using the VSC extension, <a href=\"https://marketplace.visualstudio.com/items?itemName=rust-lang.rust&amp;ssr=false#review-details\" rel=\"nofollow noreferrer\">Rust (rls)</a>, using a modified version of AR's post:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>\"tasks\": [\n    {\n        \"type\": \"shell\",\n        \"label\": \"cargo run\",\n        \"command\": \"wsl\",\n        \"args\": [\n            \"--\",\n            \"~/.cargo/bin/cargo\",\n             \"run\"\n        ],\n        \"problemMatcher\": [\n            \"$rustc\"\n        ],\n        \"group\": {\n            \"kind\": \"build\",\n            \"isDefault\": true\n        }\n    }\n]\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 67096, "user_id": 265521, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/34a66330977044d70165288c56740d4b?s=128&d=identicon&r=PG", "display_name": "Timmmm", "link": "https://stackoverflow.com/users/265521/timmmm"}, "is_accepted": false, "score": 7, "last_activity_date": 1559570387, "creation_date": 1559570387, "answer_id": 56428935, "question_id": 46885292, "link": "https://stackoverflow.com/questions/46885292/how-to-launch-a-rust-application-from-visual-studio-code/56428935#56428935", "title": "How to launch a Rust application from Visual Studio Code?", "body": "<p>Unfortunately there isn't a good solution at the moment. Basically you have to add a task to <code>tasks.json</code>, which begins like this:</p>\n\n<pre><code>{\n  // See https://go.microsoft.com/fwlink/?LinkId=733558 \n  // for the documentation about the tasks.json format\n  \"version\": \"2.0.0\",\n  \"tasks\": [\n    {\n      \"type\": \"cargo\",\n      \"subcommand\": \"check\",\n      \"problemMatcher\": [\n        \"$rustc\"\n      ]\n    },\n    {\n      \"type\": \"cargo\",\n      \"subcommand\": \"build\",\n      \"problemMatcher\": [\n        \"$rustc\"\n      ]\n    }\n  ]\n}\n</code></pre>\n\n<p>A.R. suggested adding another identical entry but with <code>\"subcommand\": \"run\"</code> but it doesn't work. You get this error:</p>\n\n<pre><code>Error: The cargo task detection didn't contribute a task for the following configuration:\n{\n    \"type\": \"cargo\",\n    \"subcommand\": \"run\",\n    \"problemMatcher\": [\n        \"$rustc\"\n    ]\n}\nThe task will be ignored.\n</code></pre>\n\n<p>Instead you can add a <code>\"type\": \"shell\"</code> task. However this still isn't perfect because for some reason adding that task means <code>cargo check</code> and <code>cargo build</code> don't show up when you press Ctrl-Shift-B at all.</p>\n\n<p>My solution is just to change those to shell tasks too, so your entire <code>tasks.json</code> is:</p>\n\n<pre><code>{\n  // See https://go.microsoft.com/fwlink/?LinkId=733558 \n  // for the documentation about the tasks.json format\n  \"version\": \"2.0.0\",\n  \"tasks\": [\n    {\n      \"type\": \"shell\",\n      \"label\": \"cargo check\",\n      \"command\": \"cargo\",\n      \"args\": [\n          \"check\"\n      ],\n      \"problemMatcher\": [\n          \"$rustc\"\n      ],\n      \"group\": \"build\"\n    },\n    {\n      \"type\": \"shell\",\n      \"label\": \"cargo build\",\n      \"command\": \"cargo\",\n      \"args\": [\n          \"build\"\n      ],\n      \"problemMatcher\": [\n          \"$rustc\"\n      ],\n      \"group\": \"build\"\n    },\n    {\n      \"type\": \"shell\",\n      \"label\": \"cargo run\",\n      \"command\": \"cargo\",\n      \"args\": [\n          \"run\"\n      ],\n      \"problemMatcher\": [\n          \"$rustc\"\n      ],\n      \"group\": \"build\"\n    }\n  ]\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 73, "user_id": 3895289, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e2f2ff2b46a4922848b36cc9194634e8?s=128&d=identicon&r=PG&f=1", "display_name": "lars.a", "link": "https://stackoverflow.com/users/3895289/lars-a"}, "is_accepted": false, "score": 1, "last_activity_date": 1569349165, "last_edit_date": 1569349165, "creation_date": 1569348981, "answer_id": 58086090, "question_id": 46885292, "link": "https://stackoverflow.com/questions/46885292/how-to-launch-a-rust-application-from-visual-studio-code/58086090#58086090", "title": "How to launch a Rust application from Visual Studio Code?", "body": "<p>If you want to run a Rust application in Visual Studio Code with command line arguments, you can configure your task in this way:</p>\n\n<pre><code>{\n   \"label\":\"Run With Arguments\",\n   \"type\":\"process\",\n   \"command\":\"cargo\",\n   \"group\":\"none\",\n   \"args\":[\n      \"run\",\n      {\n         \"value\":\"--\",\n         \"quoting\":\"weak\"\n      },\n      {\n         \"value\":\"--argumentOne=\\\"Something\\\"\",\n         \"quoting\":\"weak\"\n      },\n      {\n         \"value\":\"--argumentTwo=\\\"Something\\\"\",\n         \"quoting\":\"weak\"\n      }\n   ]\n}\n</code></pre>\n\n<p>With the addition of <code>\"--\"</code> and weak quoting, you can pass arguments to your application.</p>\n"}], "owner": {"reputation": 6067, "user_id": 517073, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/917ead48eb4ab8bcedbb454977143e60?s=128&d=identicon&r=PG", "display_name": "Stepan Yakovenko", "link": "https://stackoverflow.com/users/517073/stepan-yakovenko"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 30796, "favorite_count": 17, "answer_count": 4, "score": 53, "last_activity_date": 1614764090, "creation_date": 1508748670, "last_edit_date": 1508769630, "question_id": 46885292, "link": "https://stackoverflow.com/questions/46885292/how-to-launch-a-rust-application-from-visual-studio-code", "title": "How to launch a Rust application from Visual Studio Code?", "body": "<p>I have installed the Visual Studio Code extensions for Rust:</p>\n\n<p><a href=\"https://i.stack.imgur.com/nvyGT.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/nvyGT.png\" alt=\"enter image description here\"></a></p>\n\n<p>I want to run my project and I don't understand where to click. </p>\n\n<p><a href=\"https://i.stack.imgur.com/c6Ypm.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/c6Ypm.png\" alt=\"enter image description here\"></a></p>\n\n<p>I tried clicking <strong>Run Task</strong>, <strong>Run build task</strong>, <strong>Configure Default build task</strong>, but nothing reasonable happens.</p>\n"}, {"tags": ["rust", "object-lifetime"], "answers": [{"comments": [{"owner": {"reputation": 25, "user_id": 8817416, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/01353082a8b44feb14ce9925da93df17?s=128&d=identicon&r=PG&f=1", "display_name": "John N.", "link": "https://stackoverflow.com/users/8817416/john-n"}, "edited": false, "score": 0, "creation_date": 1508796251, "post_id": 46883352, "comment_id": 80745659, "body": "Okay, I need to brush up on generics then. In the above solution, the Inspect implementation is now only permissible for SuperObject. For instance, if I were to try to use Inspect for structs other than SuperObject (e.g., OtherSuperObject) , that is not feasible. Is that right? Is there a workaround in this case?"}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "reply_to_user": {"reputation": 25, "user_id": 8817416, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/01353082a8b44feb14ce9925da93df17?s=128&d=identicon&r=PG&f=1", "display_name": "John N.", "link": "https://stackoverflow.com/users/8817416/john-n"}, "edited": false, "score": 0, "creation_date": 1508826541, "post_id": 46883352, "comment_id": 80753723, "body": "Yea that&#39;s problematic. I&#39;m not sure how to fix that. But usually I&#39;ve noticed in such situations that I&#39;m trying to force a polymorphic design on Rust and got everything to work after reworking the design in a rusty way"}], "tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": true, "score": 3, "last_activity_date": 1508740976, "creation_date": 1508740976, "answer_id": 46883352, "question_id": 46883242, "link": "https://stackoverflow.com/questions/46883242/resolve-elided-static-lifetime-when-borrowing-from-an-object-pool/46883352#46883352", "title": "Resolve elided static lifetime when borrowing from an object pool", "body": "<p>The issue is your <code>impl Inspect for SuperObject</code>. Implementing a trait for another trait does <strong>not</strong> do what you expect from it. Basically the rule is: never do it. Essentially it means that only when you have a <code>&amp;(SuperObject + 'static)</code>, you'll be able to treat it as an <code>Inspect</code>. What you want is</p>\n\n<pre><code>impl&lt;T: SuperObject + ?Sized&gt; Inspect for T {\n    fn inspect(&amp;self) {\n        println!(\"I am a Superobject.\");\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 25, "user_id": 8817416, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/01353082a8b44feb14ce9925da93df17?s=128&d=identicon&r=PG&f=1", "display_name": "John N.", "link": "https://stackoverflow.com/users/8817416/john-n"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 91, "favorite_count": 0, "accepted_answer_id": 46883352, "answer_count": 1, "score": 0, "last_activity_date": 1508740976, "creation_date": 1508740383, "question_id": 46883242, "link": "https://stackoverflow.com/questions/46883242/resolve-elided-static-lifetime-when-borrowing-from-an-object-pool", "title": "Resolve elided static lifetime when borrowing from an object pool", "body": "<p>This is a simplified version of the issue I am currently facing.</p>\n\n<pre><code>trait SuperObject {\n    fn object_name(&amp;self) -&gt; String;\n}\n\ntrait Inspect {\n    fn inspect(&amp;self);\n}\n\nimpl Inspect for SuperObject {\n    fn inspect(&amp;self) {\n        println!(\"I am a Superobject.\");\n    }\n}\n\nstruct Object {\n    name: String\n}\n\nimpl SuperObject for Box&lt;Object&gt; {\n    fn object_name(&amp;self) -&gt; String {\n        format!(\"I am {}.\", self.name.clone())\n    }\n}\n\nstruct ObjectPool {\n    object1: Box&lt;Object&gt;,\n    object2: Box&lt;Object&gt;,\n    object3: Box&lt;Object&gt;\n}\n\nimpl ObjectPool {\n    pub fn new() -&gt; ObjectPool {\n        ObjectPool {\n            object1: Box::new(Object { name: String::from(\"Object 1\") }),\n            object2: Box::new(Object { name: String::from(\"Object 2\") }),\n            object3: Box::new(Object { name: String::from(\"Object 3\") })\n        }\n    }\n    fn all_objects(&amp;self) -&gt; Vec&lt;&amp;SuperObject&gt; {\n        let mut ret: Vec&lt;&amp;SuperObject&gt; = Vec::new();\n        ret.push(&amp;self.object1);\n        ret.push(&amp;self.object2);\n        ret.push(&amp;self.object3);\n        ret\n    }\n}\n\nfn main() {\n    let objectpool: ObjectPool = ObjectPool::new();\n    let allobjects: Vec&lt;&amp;SuperObject&gt; = objectpool.all_objects();\n    for i in &amp;allobjects {\n        println!(\"{}\", i.object_name());\n        // Comment the following line in order to drop error E0597\n        i.inspect(); // FIXME: borrowed value must be valid for the static lifetime\n    }\n}\n</code></pre>\n\n<p>The error when attempting to compile this snippet is as follows:</p>\n\n<pre><code>error[E0597]: `objectpool` does not live long enough\n  --&gt; src/main.rs:50:41\n   |\n50 |     let allobjects: Vec&lt;&amp;SuperObject&gt; = objectpool.all_objects();\n   |                                         ^^^^^^^^^^ does not live long enough\n...\n56 | }\n   | - borrowed value only lives until here\n   |\n   = note: borrowed value must be valid for the static lifetime...\n\nerror: aborting due to previous error\n</code></pre>\n\n<p>After numerous searches, from what I understand, the objects being instantiated have a default static lifetime, as referred in <a href=\"https://doc.rust-lang.org/book/second-edition/ch19-02-advanced-lifetimes.html\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/book/second-edition/ch19-02-advanced-lifetimes.html</a></p>\n\n<p>I believe the output of ObjectPool's all_objects method is elided by the compiler as static as is evidenced by one of the errors evoked when I attempted to debug the snippet:</p>\n\n<pre><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:42:18\n   |\n42 |         ret.push(&amp;self.object2);\n   |                  ^^^^^^^^^^^^^ expected struct `std::boxed::Box`, found reference\n   |\n   = note: expected type `std::boxed::Box&lt;SuperObject&gt;`\n              found type `&amp;std::boxed::Box&lt;SuperObject + 'static&gt;`\n</code></pre>\n\n<p>What would be the best course of action this doesn't involve scrapping the object pool altogether? Or is there a more elegant abstraction befitting for rust implementations?</p>\n"}, {"tags": ["rust", "nom"], "answers": [{"comments": [{"owner": {"reputation": 197, "user_id": 11041613, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/DM5ik.png?s=128&g=1", "display_name": "Dull Bananas", "link": "https://stackoverflow.com/users/11041613/dull-bananas"}, "edited": false, "score": 0, "creation_date": 1608786997, "post_id": 46879252, "comment_id": 115685020, "body": "is there a way to do this in the newest nom version?"}], "tags": [], "owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "is_accepted": true, "score": 3, "last_activity_date": 1508753679, "last_edit_date": 1508753679, "creation_date": 1508706947, "answer_id": 46879252, "question_id": 46876879, "link": "https://stackoverflow.com/questions/46876879/how-do-i-create-a-streaming-parser-in-nom/46879252#46879252", "title": "How do I create a streaming parser in nom?", "body": "<p><code>nom</code> parsers neither maintain a buffer to feed more data into, nor do they maintain \"state\" where they previously needed more bytes.</p>\n\n<p>But if you take a look at the <a href=\"https://docs.rs/nom/3.2.0/nom/enum.IResult.html\" rel=\"nofollow noreferrer\"><code>IResult</code></a> structure you see that you can return a partial result or indicate that you need more data.</p>\n\n<p>There seem to be some structures provided to handle streaming: I think you are supposed to create a <code>Consumer</code> from a parser using the <a href=\"https://docs.rs/nom/3.2.0/nom/macro.consumer_from_parser.html\" rel=\"nofollow noreferrer\"><code>consumer_from_parser!</code></a> macro, implement a <a href=\"https://docs.rs/nom/3.2.0/nom/trait.Producer.html\" rel=\"nofollow noreferrer\"><code>Producer</code></a> for your data source, and call <a href=\"https://docs.rs/nom/3.2.0/nom/trait.Producer.html#method.run\" rel=\"nofollow noreferrer\"><code>run</code></a> until it returns <code>None</code> (and start again when you have more data). Examples and docs seem to be mostly missing so far - see bottom of <a href=\"https://github.com/Geal/nom\" rel=\"nofollow noreferrer\">https://github.com/Geal/nom</a> :)</p>\n\n<p>Also it looks like most functions and macros in <code>nom</code> are not documented well (or at all) regarding their behavior when hitting the end of the input.  For example <a href=\"https://docs.rs/nom/3.2.0/nom/macro.take_until.html\" rel=\"nofollow noreferrer\"><code>take_until!</code></a> returns <code>Incomplete</code> if the input isn't long enough to contain the <code>substr</code> to look for, but returns an error if the input is long enough but doesn't contain <code>substr</code>.</p>\n\n<p>Also <code>nom</code> mostly uses either <code>&amp;[u8]</code> or <code>&amp;str</code> for input; you can't signal an actual \"end of stream\" through these types.  You could implement your own input type (related traits: <code>nom::{AsBytes,Compare,FindSubstring,FindToken,InputIter,InputLength,InputTake,Offset,ParseTo,Slice}</code>) to add a \"reached end of stream\" flag, but the <code>nom</code> provided macros and functions won't be able to interpret it.</p>\n\n<p>All in all I'd recommend splitting streamed input through some other means into chunks you can handle with simple non-streaming parsers (maybe even use <code>synom</code> instead of <code>nom</code>).</p>\n"}, {"comments": [{"owner": {"reputation": 12296, "user_id": 461597, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/7fa573d21875f5b980a2d81c695c71f3?s=128&d=identicon&r=PG", "display_name": "Unapiedra", "link": "https://stackoverflow.com/users/461597/unapiedra"}, "edited": false, "score": 0, "creation_date": 1606685949, "post_id": 65065461, "comment_id": 115029301, "body": "I cannot give myself a bounty... So anyone with some improvement/alternative approach please post your own answer."}], "tags": [], "owner": {"reputation": 12296, "user_id": 461597, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/7fa573d21875f5b980a2d81c695c71f3?s=128&d=identicon&r=PG", "display_name": "Unapiedra", "link": "https://stackoverflow.com/users/461597/unapiedra"}, "is_accepted": false, "score": 1, "last_activity_date": 1606685859, "creation_date": 1606685859, "answer_id": 65065461, "question_id": 46876879, "link": "https://stackoverflow.com/questions/46876879/how-do-i-create-a-streaming-parser-in-nom/65065461#65065461", "title": "How do I create a streaming parser in nom?", "body": "<p>Here is a minimal working example. As @Stefan wrote, &quot;I'd recommend splitting streamed input through some other means into chunks you can handle&quot;.</p>\n<p>What somewhat works (and I'd be glad for suggestions on how to improve it), is to combine a <code>File::bytes()</code> method and then only <code>take</code>  as many bytes as necessary and pass them to <code>nom::streaming::take</code>.</p>\n<pre class=\"lang-rust prettyprint-override\"><code>let reader = file.bytes();\nlet buf = reader.take(length).collect::&lt;B&gt;()?;\nlet (_input, chunk) = take(length)(&amp;*buf)...; \n</code></pre>\n<p>The complete function can look like this:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>/// Parse the first handful of bytes and return the bytes interpreted as UTF8\nfn parse_first_bytes(file: std::fs::File, length: usize) -&gt; Result&lt;String&gt; {\n    type B = std::result::Result&lt;Vec&lt;u8&gt;, std::io::Error&gt;;\n    let reader = file.bytes();\n\n    let buf = reader.take(length).collect::&lt;B&gt;()?;\n    let (_input, chunk) = take(length)(&amp;*buf)\n        .finish()\n        .map_err(|nom::error::Error { input: _, code: _ }| eyre!(&quot;...&quot;))?;\n    let s = String::from_utf8_lossy(chunk);\n\n    Ok(s.to_string())\n}\n</code></pre>\n<p>Here is the rest of main for an implementation similar to Unix' <code>head</code> command.</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use color_eyre::Result;\nuse eyre::eyre;\nuse nom::{bytes::streaming::take, Finish};\nuse std::{fs::File, io::Read, path::PathBuf};\nuse structopt::StructOpt;\n\n#[derive(Debug, StructOpt)]\n#[structopt(about = &quot;A minimal example of parsing a file only partially. \n  This implements the POSIX 'head' utility.&quot;)]\nstruct Args {\n    /// Input File\n    #[structopt(parse(from_os_str))]\n    input: PathBuf,\n    /// Number of bytes to consume\n    #[structopt(short = &quot;c&quot;, default_value = &quot;32&quot;)]\n    num_bytes: usize,\n}\n\nfn main() -&gt; Result&lt;()&gt; {\n    let args = Args::from_args();\n    let file = File::open(args.input)?;\n\n    let head = parse_first_bytes(file, args.num_bytes)?;\n    println!(&quot;{}&quot;, head);\n\n    Ok(())\n}\n</code></pre>\n"}], "owner": {"reputation": 13635, "user_id": 547365, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ddefbca930fdd39846b698bab7ac3146?s=128&d=identicon&r=PG", "display_name": "w.brian", "link": "https://stackoverflow.com/users/547365/w-brian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2249, "favorite_count": 1, "accepted_answer_id": 46879252, "answer_count": 2, "score": 5, "last_activity_date": 1606685859, "creation_date": 1508691968, "question_id": 46876879, "link": "https://stackoverflow.com/questions/46876879/how-do-i-create-a-streaming-parser-in-nom", "title": "How do I create a streaming parser in nom?", "body": "<p>I've created a few non-trivial parsers in nom, so I'm pretty familiar with it at this point. All the parsers I've created until now always provide the entire input slice to the parser.</p>\n\n<p>I'd like to create a streaming parser, which <em>I assume</em> means that I can continue to feed bytes into the parser until it is complete. I've had a hard time finding any documentation or examples that illustrate this, and I also question my assumption of what a \"streaming parser\" is.</p>\n\n<p>My questions are:</p>\n\n<ul>\n<li>Is my understanding of what a streaming parser is correct?</li>\n<li>If so, are there any good examples of a parser using this technique?</li>\n</ul>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1508687954, "post_id": 46873877, "comment_id": 80699189, "body": "If you are writing a fixed string to the child process, you might want to consider the <a href=\"https://crates.io/crates/subprocess\" rel=\"nofollow noreferrer\">subprocess</a> crate, which implements a <a href=\"https://docs.rs/subprocess/0.1.11/subprocess/struct.Popen.html#method.communicate\" rel=\"nofollow noreferrer\"><code>communicate</code></a> method for what you are now doing with threads. It also exposes a builder-style API which would express the above as <code>let input = (0..1000).map(|i| format!(&quot;{}&quot;, i)).collect::&lt;String&gt;(); let output = Exec::cmd(&quot;cat&quot;).stdin(input).stdout(Redirection::Pipe).capt&zwnj;&#8203;\u200cure()?.stdout_str()&zwnj;&#8203;;</code> Disclaimer: I am the author of subprocess."}], "answers": [{"comments": [{"owner": {"reputation": 409, "user_id": 2970121, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/d0b21cede510b0bbf986847693a9e075?s=128&d=identicon&r=PG&f=1", "display_name": "njaard", "link": "https://stackoverflow.com/users/2970121/njaard"}, "edited": false, "score": 0, "creation_date": 1508681148, "post_id": 46874589, "comment_id": 80696811, "body": "Yes indeed, this works. It&#39;s unfortunate that now I can&#39;t call <code>child.wait()</code>, but I don&#39;t need to for my specific program."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 409, "user_id": 2970121, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/d0b21cede510b0bbf986847693a9e075?s=128&d=identicon&r=PG&f=1", "display_name": "njaard", "link": "https://stackoverflow.com/users/2970121/njaard"}, "edited": false, "score": 2, "creation_date": 1508681546, "post_id": 46874589, "comment_id": 80696967, "body": "@njaard where did you <i>want</i> to call <code>child.wait()</code>?"}, {"owner": {"reputation": 409, "user_id": 2970121, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/d0b21cede510b0bbf986847693a9e075?s=128&d=identicon&r=PG&f=1", "display_name": "njaard", "link": "https://stackoverflow.com/users/2970121/njaard"}, "edited": false, "score": 1, "creation_date": 1508682904, "post_id": 46874589, "comment_id": 80697520, "body": "Hypothetically, I&#39;d want to get the <code>ExitStatus</code> for the child process after it exits (outside of the <code>scope</code>)"}, {"owner": {"reputation": 409, "user_id": 2970121, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/d0b21cede510b0bbf986847693a9e075?s=128&d=identicon&r=PG&f=1", "display_name": "njaard", "link": "https://stackoverflow.com/users/2970121/njaard"}, "edited": false, "score": 0, "creation_date": 1508753788, "post_id": 46874589, "comment_id": 80720829, "body": "What if from inside the <code>scope</code> I want to spawn two threads that both use the stdin object, locked by a mutex?"}, {"owner": {"reputation": 409, "user_id": 2970121, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/d0b21cede510b0bbf986847693a9e075?s=128&d=identicon&r=PG&f=1", "display_name": "njaard", "link": "https://stackoverflow.com/users/2970121/njaard"}, "edited": false, "score": 0, "creation_date": 1508755073, "post_id": 46874589, "comment_id": 80721658, "body": "I decided to Think With Lifetimes&#174; and realized I needed an <code>Arc</code> for this usecase, because both <code>stdin</code> threads need to complete before the <code>ChildStdin</code> can be dropped."}, {"owner": {"reputation": 457, "user_id": 3109210, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3c2477b0d52eeb1db5ab13e178658438?s=128&d=identicon&r=PG", "display_name": "CoolOppo", "link": "https://stackoverflow.com/users/3109210/cooloppo"}, "edited": false, "score": 0, "creation_date": 1570952202, "post_id": 46874589, "comment_id": 103074741, "body": "I would also like to point out to anyone still having issues that you should also make sure to drop the child&#39;s stdout or pipe it to null before waiting on it. I just wasted a bunch of time on that."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1508683511, "last_edit_date": 1508683511, "creation_date": 1508678661, "answer_id": 46874589, "question_id": 46873877, "link": "https://stackoverflow.com/questions/46873877/reading-and-writing-to-a-long-running-stdprocesschild/46874589#46874589", "title": "Reading and writing to a long-running std::process::Child", "body": "<p>Amusingly, you've caused this yourself by sharing ownership using the <code>Mutex</code> ^_^. Instead of taking a reference to <code>child.stdin</code>, take complete ownership of it and pass it to the thread. When the thread is over, it will be dropped, closing it implicitly:</p>\n\n<pre><code>let mut child_stdin = child.stdin.unwrap();\n\n// ...\n\nscope.execute(move ||\n    for a in 0..1000 {\n        use std::io::Write;\n        writeln!(&amp;mut child_stdin, \"{}\", a).unwrap();\n    }\n    // child_stdin has been moved into this closure and is now\n    // dropped, closing it.\n);\n</code></pre>\n\n<p>If you'd like to still be able to call <code>wait</code> to get the <code>ExitStatus</code>, change the reference to <code>stdout</code> and the  transfer of ownership of <code>stdin</code> to use <code>Option::take</code>. This means that <code>child</code> is not borrowed at all:</p>\n\n<pre><code>let mut child = // ...\n\nlet child_stdout = child.stdout.as_mut().unwrap();\nlet mut child_stdin = child.stdin.take().unwrap();\n\n// ...\n\nchild.wait().unwrap();\n</code></pre>\n"}], "owner": {"reputation": 409, "user_id": 2970121, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/d0b21cede510b0bbf986847693a9e075?s=128&d=identicon&r=PG&f=1", "display_name": "njaard", "link": "https://stackoverflow.com/users/2970121/njaard"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 969, "favorite_count": 1, "accepted_answer_id": 46874589, "answer_count": 1, "score": 4, "last_activity_date": 1508683511, "creation_date": 1508674042, "last_edit_date": 1508679020, "question_id": 46873877, "link": "https://stackoverflow.com/questions/46873877/reading-and-writing-to-a-long-running-stdprocesschild", "title": "Reading and writing to a long-running std::process::Child", "body": "<p>I have a long-running child process to which I need to read and write a lot of data. I have a reader thread and a writer thread that manipulate the <code>child.stdout</code> and <code>child.stdin</code> respectively:</p>\n\n<pre><code>extern crate scoped_threadpool;\n\nfn main() {\n    // run the subprocess\n    let mut child = std::process::Command::new(\"cat\")\n        .stdin(std::process::Stdio::piped())\n        .stdout(std::process::Stdio::piped())\n        .spawn()\n        .unwrap();\n\n    let child_stdout = child.stdout.as_mut().unwrap();\n    let child_stdin = std::sync::Mutex::new(child.stdin.as_mut().unwrap());\n\n    let mut pool = scoped_threadpool::Pool::new(2);\n    pool.scoped(|scope| {\n        // read all output from the subprocess\n        scope.execute(move || {\n            use std::io::BufRead;\n            let reader = std::io::BufReader::new(child_stdout);\n            for line in reader.lines() {\n                println!(\"{}\", line.unwrap());\n            }\n        });\n\n        // write to the subprocess\n        scope.execute(move || {\n            for a in 0..1000 {\n                use std::io::Write;\n                writeln!(&amp;mut child_stdin.lock().unwrap(), \"{}\", a).unwrap();\n            } // close child_stdin???\n        });\n    });\n}\n</code></pre>\n\n<p>When the writer is done, I want to close <code>child_stdin</code> so that the subprocess finishes and exits, so that the reader sees EOF and <code>pool.scoped</code> returns. I can't do this without <code>child.wait()</code> and I can't call <code>child.wait()</code> because it's being borrowed by the two threads.</p>\n\n<p>How do I make this program complete?</p>\n"}, {"tags": ["multithreading", "rust", "channel", "rust-tokio"], "answers": [{"comments": [{"owner": {"reputation": 1604, "user_id": 5991423, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/beK29.jpg?s=128&g=1", "display_name": "Aaron3468", "link": "https://stackoverflow.com/users/5991423/aaron3468"}, "edited": false, "score": 0, "creation_date": 1508819530, "post_id": 46874220, "comment_id": 80751192, "body": "Oh, <code>mpmc_fut_queue</code> seems like exactly what I&#39;d been looking for! I managed to get <code>chan</code> working for my use-case because a thread being blocked until a new message arrives is easy to deal with; just send a <code>Terminate</code> message when everything&#39;s finished."}], "tags": [], "owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "is_accepted": true, "score": 1, "last_activity_date": 1508679453, "last_edit_date": 1508679453, "creation_date": 1508676310, "answer_id": 46874220, "question_id": 46871542, "link": "https://stackoverflow.com/questions/46871542/prevent-chanreceiver-from-blocking-on-empty-buffer/46874220#46874220", "title": "Prevent `chan::Receiver` from blocking on empty buffer", "body": "<p>The <code>chan</code> crate provides a <a href=\"https://docs.rs/chan/0.1.19/chan/macro.chan_select.html\" rel=\"nofollow noreferrer\"><code>chan_select</code></a> macro that would allow a non-blocking <code>recv</code>; but to implement <code>Future</code> for such primitives you also need to wake up the task when the channel becomes ready (see <a href=\"https://docs.rs/futures/0.1.16/futures/task/fn.current.html\" rel=\"nofollow noreferrer\"><code>futures::task::current()</code></a>).</p>\n\n<p>You can implement <code>Future</code> by using existing primitives; implementing new ones is usually more difficult.  In this case you probably have to fork <code>chan</code> to make it <code>Future</code> compatible.</p>\n\n<p>It seems the <code>multiqueue</code> crate has a <code>Future</code> compatible mpmc channel <a href=\"https://docs.rs/multiqueue/0.3.2/multiqueue/fn.mpmc_fut_queue.html\" rel=\"nofollow noreferrer\"><code>mpmc_fut_queue</code></a>.</p>\n"}], "owner": {"reputation": 1604, "user_id": 5991423, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/beK29.jpg?s=128&g=1", "display_name": "Aaron3468", "link": "https://stackoverflow.com/users/5991423/aaron3468"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 283, "favorite_count": 0, "accepted_answer_id": 46874220, "answer_count": 1, "score": 1, "last_activity_date": 1508697718, "creation_date": 1508657187, "last_edit_date": 1508697718, "question_id": 46871542, "link": "https://stackoverflow.com/questions/46871542/prevent-chanreceiver-from-blocking-on-empty-buffer", "title": "Prevent `chan::Receiver` from blocking on empty buffer", "body": "<p>I'd like to build an Multi-Producer Multi-Consumer (MPMC) channel with different concurrent tasks processing and producing data in it. Some of these tasks have the responsibility to interface with the filesystem or network.</p>\n\n<p>Two examples:</p>\n\n<ul>\n<li><p><code>PrintOutput(String)</code> would be consumed by a logger, a console output, or a GUI.</p></li>\n<li><p><code>NewJson(String)</code> would be consumed by a logger or a parser.</p></li>\n</ul>\n\n<p>To achieve this, I've selected <code>chan</code> as the MPMC channel provider and <code>tokio</code> as the system to manage event loops for each listener on the channel.</p>\n\n<p>After reading the example on <a href=\"https://tokio.rs/\" rel=\"nofollow noreferrer\">tokio's site</a>, I began to implement <code>futures::stream::Stream</code> for <code>chan::Receiver</code>. This would allow the use of a for each future to listen on the channel. However, the documentation of these two libraries highlights a conflict:</p>\n\n<blockquote>\n  <h2><code>fn poll(&amp;mut self) -&gt; Poll&lt;Option&lt;Self::Item&gt;, Self::Error&gt;</code></h2>\n  \n  <p>Attempt to pull out the next value of this stream, returning None if the stream is finished.</p>\n  \n  <p>This method, like Future::poll, is the sole method of pulling out a value from a stream. This method must also be run within the context of a task typically and implementors of this trait must <strong>ensure that implementations of this method do not block</strong>, as it may cause consumers to behave badly.</p>\n</blockquote>\n\n\n\n<blockquote>\n  <h2><code>fn recv(&amp;self) -&gt; Option&lt;T&gt;</code></h2>\n  \n  <p>Receive a value on this channel.</p>\n  \n  <p>If this is an asnychronous channel, recv only <strong>blocks when the buffer is empty.</strong></p>\n  \n  <p>If this is a synchronous channel, recv only blocks when the buffer is empty.</p>\n  \n  <p>If this is a rendezvous channel, recv blocks until a corresponding send sends a value.</p>\n  \n  <p>For all channels, if the channel is closed and the buffer is empty, then recv always and immediately returns None. (If the buffer is non-empty on a closed channel, then values from the buffer are returned.)</p>\n  \n  <p>Values are guaranteed to be received in the same order that they are sent.</p>\n  \n  <p>This operation will never panic! but it can deadlock if the channel is never closed.</p>\n</blockquote>\n\n<p><code>chan::Receiver</code> may block when the buffer is empty, but <code>futures::stream::Stream</code> expects to never block when polled. </p>\n\n<p>If an empty buffer blocks, there isn't a clear way to confirm that it is empty. How do I check if the buffer is empty to prevent blocking?</p>\n\n<p>Although <a href=\"https://github.com/carllerche/kabuki/blob/master/README.md\" rel=\"nofollow noreferrer\">Kabuki</a> is on my radar and seems to be the most mature of the actor model crates, it almost entirely lacks documentation.</p>\n\n<hr>\n\n<p>This is my implementation so far:</p>\n\n<pre><code>extern crate chan;\nextern crate futures;\n\nstruct RX&lt;T&gt;(chan::Receiver&lt;T&gt;);\n\nimpl&lt;T&gt; futures::stream::Stream for RX&lt;T&gt; {\n    type Item = T;\n    type Error = Box&lt;std::error::Error&gt;;\n\n    fn poll(&amp;mut self) -&gt; futures::Poll&lt;Option&lt;Self::Item&gt;, Self::Error&gt; {\n        let &amp;mut RX(ref receiver) = self;\n        let item = receiver.recv();\n\n        match item {\n            Some(value) =&gt; Ok(futures::Async::Ready(Some(value))),\n            None =&gt; Ok(futures::Async::NotReady),\n        }\n    }\n}\n</code></pre>\n\n<p>I've finished a quick test to see how it works. It seems alright, but as expected does block after finishing the buffer. While this should work, I'm somewhat worried about what it means for a consumer to \"behave badly\". For now I'll continue to test this approach and hopefully I don't encounter bad behaviour.</p>\n\n<pre><code>extern crate chan;\nextern crate futures;\nuse futures::{Stream, Future};\n\nfn my_test() {\n    let mut core = tokio_core::reactor::Core::new().unwrap();\n    let handle = core.handle();\n\n    let (tx, rx) = chan::async::&lt;String&gt;();\n\n    tx.send(\"Hello\".to_string()); // fill the buffer before it blocks; single thread here.\n\n    let incoming = RX(rx).for_each(|s| {\n        println!(\"Result: {}\", s);\n\n        Ok(())\n    });\n\n    core.run(incoming).unwrap()\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 803, "user_id": 767440, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/d845c11a24e2e78133885a0927affc6b?s=128&d=identicon&r=PG", "display_name": "carlos.baez", "link": "https://stackoverflow.com/users/767440/carlos-baez"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1508618384, "post_id": 46867652, "comment_id": 80683026, "body": "I removed the  <code>pub mod potter</code> and the error continues."}, {"owner": {"reputation": 803, "user_id": 767440, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/d845c11a24e2e78133885a0927affc6b?s=128&d=identicon&r=PG", "display_name": "carlos.baez", "link": "https://stackoverflow.com/users/767440/carlos-baez"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1508618539, "post_id": 46867652, "comment_id": 80683065, "body": "I applied the solution from the duplicated answer, it seems not work."}, {"owner": {"reputation": 803, "user_id": 767440, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/d845c11a24e2e78133885a0927affc6b?s=128&d=identicon&r=PG", "display_name": "carlos.baez", "link": "https://stackoverflow.com/users/767440/carlos-baez"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1508619070, "post_id": 46867652, "comment_id": 80683198, "body": "I  renamed my potter.rs to lib.rs but it keeps not working..."}], "answers": [{"comments": [{"owner": {"reputation": 325758, "user_id": 415784, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/2WX9Z.jpg?s=128&g=1", "display_name": "Nawaz", "link": "https://stackoverflow.com/users/415784/nawaz"}, "edited": false, "score": 0, "creation_date": 1538930397, "post_id": 46867952, "comment_id": 92308180, "body": "I&#39;ve <code>tests&#47;common.rs</code> where I&#39;m doing this: <code>#[macro_use] extern crate mylib;</code> but it says <i>&quot;an <code>extern crate</code> <b>loading macros</b> must be at the crate root&quot;</i>. So I&#39;m wondering which file is <i>&quot;crate root&quot;</i> for <i>tests</i> directory? Is there any analogous to <i>src/lib.rs</i>?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 325758, "user_id": 415784, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/2WX9Z.jpg?s=128&g=1", "display_name": "Nawaz", "link": "https://stackoverflow.com/users/415784/nawaz"}, "edited": false, "score": 1, "creation_date": 1538930759, "post_id": 46867952, "comment_id": 92308298, "body": "@Nawaz every single file in the <code>tests</code> directory is compiled as a separate binary crate. Each of those is the crate root. See also <a href=\"https://stackoverflow.com/q/37993886/155423\">Where should I put test utility functions in Rust?</a>; <a href=\"https://stackoverflow.com/q/44539729/155423\">What is an idiomatic way to have shared utility functions for integration tests and benchmarks?</a>."}, {"owner": {"reputation": 325758, "user_id": 415784, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/2WX9Z.jpg?s=128&g=1", "display_name": "Nawaz", "link": "https://stackoverflow.com/users/415784/nawaz"}, "edited": false, "score": 0, "creation_date": 1538930928, "post_id": 46867952, "comment_id": 92308339, "body": "So why does <code>#[macro_use] extern ... </code>  not work for <code>tests&#47;common.rs</code> and it is asking me to put in some  <code>crate root</code>. What <code>crate root</code> is, is not clearly defined it seems."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 325758, "user_id": 415784, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/2WX9Z.jpg?s=128&g=1", "display_name": "Nawaz", "link": "https://stackoverflow.com/users/415784/nawaz"}, "edited": false, "score": 1, "creation_date": 1538931189, "post_id": 46867952, "comment_id": 92308416, "body": "Because you haven&#39;t put it at the crate root. &quot;crate root&quot; is a well-defined term - it&#39;s the entrypoint of the crate. <b>Every single file in the tests directory</b> is compiled as a separate binary crate. That means that your <code>tests&#47;common.rs</code> is being compiled as a binary so that&#39;s one crate root (probably not what you want, either). Presumably you are also importing that file as a module from another file like <code>tests&#47;foo.rs</code> \u2014 foo.rs is <b>also</b> a crate root."}, {"owner": {"reputation": 325758, "user_id": 415784, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/2WX9Z.jpg?s=128&g=1", "display_name": "Nawaz", "link": "https://stackoverflow.com/users/415784/nawaz"}, "edited": false, "score": 0, "creation_date": 1538931276, "post_id": 46867952, "comment_id": 92308452, "body": "Ohh.. I see. I&#39;m getting that error because of <code>mod common;</code> as it is being used as sorta library/utility, not executable!"}, {"owner": {"reputation": 325758, "user_id": 415784, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/2WX9Z.jpg?s=128&g=1", "display_name": "Nawaz", "link": "https://stackoverflow.com/users/415784/nawaz"}, "edited": false, "score": 1, "creation_date": 1538931428, "post_id": 46867952, "comment_id": 92308496, "body": "I moved all the content from <code>tests&#47;common.rs</code> to <code>tests&#47;common&#47;mod.rs</code> and now I&#39;m able to do <code>mod common;</code> in other test files. It works. Thanks for the help."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 17, "last_activity_date": 1591627844, "last_edit_date": 1591627844, "creation_date": 1508619144, "answer_id": 46867952, "question_id": 46867652, "link": "https://stackoverflow.com/questions/46867652/cannot-import-a-module-in-an-integration-test/46867952#46867952", "title": "Cannot import a module in an integration test", "body": "<p>Go back and <a href=\"https://doc.rust-lang.org/book/ch07-00-managing-growing-projects-with-packages-crates-and-modules.html\" rel=\"nofollow noreferrer\">reread <em>The Rust Programming Language</em> about packages, crates, modules and the filesystem</a>.</p>\n\n<p>Common pain points:</p>\n\n<ul>\n<li><p>Every programming language has its own way of dealing with files \u2014\u00a0you cannot just assume that because you've used any other language that you will magically get Rust's take on it. That's why you should <a href=\"https://doc.rust-lang.org/book/ch07-05-separating-modules-into-different-files.html\" rel=\"nofollow noreferrer\">go back and re-read the book chapter on it</a>.</p></li>\n<li><p>Each file defines a module. Your <code>lib.rs</code> defines a module of the same name as your crate; a <code>mod.rs</code> defines a module of the same name as the directory it's in; every other file defines a module of the name of the file.</p></li>\n<li><p>The root of your library crate <strong>must</strong> be <code>lib.rs</code>; binary crates may use <code>main.rs</code>.</p></li>\n<li><p>No, you really shouldn't try to do non-idiomatic filesystem organization. There are tricks to do most anything you want; these are terrible ideas unless you are already an advanced Rust user.</p></li>\n<li><p>Idiomatic Rust does not generally place \"one type per file\" like many other languages. Yes, really. You can have multiple things in one file.</p></li>\n<li><p>Unit tests usually live in the same file as the code it's testing. Sometimes they will be split out into a file containing the submodule, but that's uncommon.</p></li>\n<li><p>Integration tests, examples, benchmarks all have to import the crate like any other user of the crate and can only use the public API.</p></li>\n</ul>\n\n<hr>\n\n<p>To fix your issue:</p>\n\n<ol>\n<li>Move your <code>src/potter.rs</code> to <code>src/lib.rs</code>.</li>\n<li>Remove <code>pub mod potter</code> from <code>src/lib.rs</code>. Not <em>strictly</em> required, but removes needless nesting of modules.</li>\n<li>Add <code>extern crate potter</code> to your integration test <code>tests/tests.rs</code>. </li>\n</ol>\n\n<p><strong>filesystem</strong></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>\u251c\u2500\u2500 Cargo.lock\n\u251c\u2500\u2500 Cargo.toml\n\u251c\u2500\u2500 src\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 lib.rs\n\u251c\u2500\u2500 target\n\u2514\u2500\u2500 tests\n    \u2514\u2500\u2500 tests.rs\n</code></pre>\n\n<p><strong>src/lib.rs</strong></p>\n\n<pre><code>pub struct Potter {}\n\nimpl Potter {\n    pub fn new() -&gt; Potter {\n       Potter {}\n    }\n}\n</code></pre>\n\n<p><strong>tests/tests.rs</strong></p>\n\n<pre><code>use potter::Potter;\n\n#[test]\nfn it_works() {\n    let pot = Potter::new();\n    assert_eq!(2 + 2, 4);\n}\n</code></pre>\n"}], "owner": {"reputation": 803, "user_id": 767440, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/d845c11a24e2e78133885a0927affc6b?s=128&d=identicon&r=PG", "display_name": "carlos.baez", "link": "https://stackoverflow.com/users/767440/carlos-baez"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4700, "favorite_count": 0, "accepted_answer_id": 46867952, "answer_count": 1, "score": 10, "last_activity_date": 1591627844, "creation_date": 1508617011, "last_edit_date": 1508619494, "question_id": 46867652, "link": "https://stackoverflow.com/questions/46867652/cannot-import-a-module-in-an-integration-test", "title": "Cannot import a module in an integration test", "body": "<p>I am trying to configure an example project in Rust to work.</p>\n\n<p>My structure is:</p>\n\n<ul>\n<li><code>src/potter.rs</code></li>\n<li><code>tests/tests.rs</code></li>\n</ul>\n\n<p>And my <code>Cargo.toml</code></p>\n\n<pre><code>[package]\nname = \"potter\"\nversion = \"0.1.0\"\nauthors = [\"my name\"]\n[dependencies]\n</code></pre>\n\n<p>My <code>potter.rs</code> contains:</p>\n\n<pre><code>pub mod potter {\n    pub struct Potter {\n\n    }\n\n    impl Potter  {\n        pub fn new() -&gt; Potter {\n         return Potter {};\n        }\n    }\n\n}\n</code></pre>\n\n<p>And my <code>tests.rs</code> contains:</p>\n\n<pre><code>use potter::Potter;\n\n    #[test]\n    fn it_works() {\n\n        let pot = potter::Potter::new();\n        assert_eq!(2 + 2, 4);\n    }\n</code></pre>\n\n<p>But I receive this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0432]: unresolved import `potter`\n --&gt; tests/tests.rs:1:5\n  |\n1 | use potter::Potter;\n  |     ^^^^^^ Maybe a missing `extern crate potter;`?\n\nerror[E0433]: failed to resolve. Use of undeclared type or module `potter`\n --&gt; tests/tests.rs:6:19\n  |\n6 |         let pot = potter::Potter::new();\n  |                   ^^^^^^ Use of undeclared type or module `potter`\n\nwarning: unused import: `potter::Potter`\n --&gt; tests/tests.rs:1:5\n  |\n1 | use potter::Potter;\n  |     ^^^^^^^^^^^^^^\n  |\n  = note: #[warn(unused_imports)] on by default\n</code></pre>\n\n<p>If I add <code>extern crate potter;</code>, it doesn't fix anything...</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0463]: can't find crate for `potter`\n --&gt; tests/tests.rs:1:1\n  |\n1 | extern crate potter;\n  | ^^^^^^^^^^^^^^^^^^^^ can't find crate\n</code></pre>\n"}, {"tags": ["vector", "iterator", "rust"], "answers": [{"comments": [{"owner": {"reputation": 348, "user_id": 5086919, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wlVbd.jpg?s=128&g=1", "display_name": "Teo", "link": "https://stackoverflow.com/users/5086919/teo"}, "edited": false, "score": 0, "creation_date": 1508628390, "post_id": 46867634, "comment_id": 80685300, "body": "Thanks! The first solution was exactly what I was looking for"}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 27, "last_activity_date": 1574194009, "last_edit_date": 1574194009, "creation_date": 1508616918, "answer_id": 46867634, "question_id": 46867355, "link": "https://stackoverflow.com/questions/46867355/is-it-possible-to-split-a-vector-into-groups-of-10-with-iterators/46867634#46867634", "title": "Is it possible to split a vector into groups of 10 with iterators?", "body": "<p>There is no such helper method on the <a href=\"https://doc.rust-lang.org/stable/std/iter/trait.Iterator.html\" rel=\"noreferrer\"><code>Iterator</code> trait</a> directly. However, there are two main ways to do it:</p>\n\n<ol>\n<li><p>Use the <a href=\"https://doc.rust-lang.org/stable/std/primitive.slice.html#method.chunks\" rel=\"noreferrer\"><strong><code>[T]::chunks()</code></strong> method</a> (which can be called on a <code>Vec&lt;T&gt;</code> directly). However, it has a minor difference: it won't produce <code>None</code>, but the last iteration yields a smaller slice. </p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=fd039c1922449815618ebfd58de938e4&amp;version=stable\" rel=\"noreferrer\">Example</a>:</p>\n\n<pre><code>let my_vec = (0..25).collect::&lt;Vec&lt;_&gt;&gt;();\n\nfor chunk in my_vec.chunks(10) {\n    println!(\"{:02?}\", chunk);\n}\n</code></pre>\n\n<p>Result:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[00, 01, 02, 03, 04, 05, 06, 07, 08, 09]\n[10, 11, 12, 13, 14, 15, 16, 17, 18, 19]\n[20, 21, 22, 23, 24]\n</code></pre></li>\n<li><p>Use the <a href=\"https://docs.rs/itertools/0.7.1/itertools/trait.Itertools.html#method.chunks\" rel=\"noreferrer\"><strong><code>Itertools::chunks()</code></strong> method</a> from <a href=\"https://crates.io/crates/itertools\" rel=\"noreferrer\">the crate <code>itertools</code></a>. This crate extends the <code>Iterator</code> trait from the standard library so this <code>chunks()</code> method works with all iterators! Note that the usage is slightly more complicated in order to be that general. This has the same behavior as the method described above: in the last iteration, the chunk will be smaller instead of containing <code>None</code>s.</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=de485e2ea81a861f649fe6fea5fbd89f&amp;version=stable\" rel=\"noreferrer\">Example</a>:</p>\n\n<pre><code>extern crate itertools;\nuse itertools::Itertools;\n\nfor chunk in &amp;(0..25).chunks(10) {\n    println!(\"{:02?}\", chunk.collect::&lt;Vec&lt;_&gt;&gt;());\n}\n</code></pre>\n\n<p>Result:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[00, 01, 02, 03, 04, 05, 06, 07, 08, 09]\n[10, 11, 12, 13, 14, 15, 16, 17, 18, 19]\n[20, 21, 22, 23, 24]\n</code></pre></li>\n</ol>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 7, "last_activity_date": 1574194611, "creation_date": 1574194611, "answer_id": 58942170, "question_id": 46867355, "link": "https://stackoverflow.com/questions/46867355/is-it-possible-to-split-a-vector-into-groups-of-10-with-iterators/58942170#58942170", "title": "Is it possible to split a vector into groups of 10 with iterators?", "body": "<p>You can achieve a similar solution as <a href=\"https://stackoverflow.com/a/46867634/155423\">Lukas Kalbertodt's itertools example</a> using only the standard library:</p>\n\n<pre><code>let my_vec = (0..25).collect::&lt;Vec&lt;_&gt;&gt;();\n\nlet mut my_values = my_vec.into_iter().peekable();\n\nwhile my_values.peek().is_some() {\n    let chunk: Vec&lt;_&gt; = my_values.by_ref().take(10).collect();\n    println!(\"{:?}\", chunk);\n}\n</code></pre>\n\n<p>Result:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n[10, 11, 12, 13, 14, 15, 16, 17, 18, 19]\n[20, 21, 22, 23, 24]\n</code></pre>\n\n<p>If you don't actually need the <code>Vec</code> of each chunk, you can omit the <code>collect</code> call and operate directly on the iterator created by <code>by_ref</code>.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/45761364/155423\">What is the canonical way to implement is_empty for Iterator?</a></li>\n<li><a href=\"https://stackoverflow.com/q/42134874/155423\">Are there equivalents to slice::chunks/windows for iterators to loop over pairs, triplets etc?</a></li>\n<li><a href=\"https://stackoverflow.com/q/31374051/155423\">Why does Iterator::take_while take ownership of the iterator?</a></li>\n<li><a href=\"https://stackoverflow.com/q/23969191/155423\">Using the same iterator multiple times in Rust</a></li>\n</ul>\n"}], "owner": {"reputation": 348, "user_id": 5086919, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wlVbd.jpg?s=128&g=1", "display_name": "Teo", "link": "https://stackoverflow.com/users/5086919/teo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 8368, "favorite_count": 3, "accepted_answer_id": 46867634, "answer_count": 2, "score": 20, "last_activity_date": 1574194611, "creation_date": 1508615039, "last_edit_date": 1574194260, "question_id": 46867355, "link": "https://stackoverflow.com/questions/46867355/is-it-possible-to-split-a-vector-into-groups-of-10-with-iterators", "title": "Is it possible to split a vector into groups of 10 with iterators?", "body": "<p>I have <code>let my_vec = (0..25).collect::&lt;Vec&lt;_&gt;&gt;()</code> and I would like to split <code>my_vec</code> into iterators of groups of 10:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n[10, 11, 12, 13, 14, 15, 16, 17, 18, 19];\n[20, 21, 22, 23, 24, None, None, None, None, None];\n</code></pre>\n\n<p>Is it possible to do that with iterators in Rust?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 3, "last_activity_date": 1508611363, "last_edit_date": 1508611363, "creation_date": 1508611009, "answer_id": 46866690, "question_id": 46866543, "link": "https://stackoverflow.com/questions/46866543/how-can-i-access-a-thread-local-localkey-static-variable/46866690#46866690", "title": "How can I access a thread-local LocalKey static variable?", "body": "<blockquote>\n  <p>How do I print the string value of <code>PLAYER_NAME</code>? Do I have to use a <code>with</code> block every time I want to read it too?</p>\n</blockquote>\n\n<p>Yes. The compiler has no way of knowing which arbitrary call to <code>PLAYER_NAME</code> would be the first one and which would come after. <strong>Every</strong> time you access the thread-local, it has to be checked to ensure that it's been initialized and do so if it hasn't. <code>with</code> performs that check.</p>\n\n<hr>\n\n<p>Beyond that, you have a number of other issues. Rust is a compiled language, which means you should <strong>listen to the warnings it prints</strong>.</p>\n\n<pre><code>let player_name = p;\n</code></pre>\n\n<p>This declares a new variable that shadows the closure variable <code>player_name</code>, it does not set it.</p>\n\n<p>You are then attempting to mutate an immutable reference, which cannot work. You'll need some kind of internal mutability, such as <a href=\"https://doc.rust-lang.org/std/cell/struct.RefCell.html\" rel=\"nofollow noreferrer\"><code>RefCell</code></a>.</p>\n\n<pre><code>use std::cell::RefCell;\n\nthread_local! {\n    pub static PLAYER_NAME: RefCell&lt;String&gt; = RefCell::new(String::from(\"player-one\"));\n}\n\nfn main() {\n    let p: String = String::from(\"new-name\");\n\n    PLAYER_NAME.with(|player_name| {\n        *player_name.borrow_mut() = p;\n    });\n\n    PLAYER_NAME.with(|player_name| {\n        println!(\"The name is: {}\", player_name.borrow());\n    });\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/27791532/155423\">How do I create a global, mutable singleton?</a></li>\n</ul>\n\n<hr>\n\n<p>I'd also <strong>strongly</strong> encourage you to just try and use standard Rust references and pass values down from a parent context. It's usually a lot easier to understand than some magical semi-global state, especially if you are new to Rust.</p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1508617708, "post_id": 46866917, "comment_id": 80682837, "body": "<i>without loss of performance</i> \u2014 I&#39;m not sure I follow you; there&#39;s still the underlying performance hit of checking if the variable is initialized and initializing it if not, why do you say that this loss of performance is negated? <i>If you don&#39;t want the player name to be per-thread</i> \u2014 seems like <code>thread_local!</code> doesn&#39;t really fit with that concept."}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1508621075, "post_id": 46866917, "comment_id": 80683723, "body": "@Shepmaster Re performance, I was referring to the fact that I expect the compiler to inline the call, so the effect should be the same as the <code>with</code>. (Technically my proposed getter invokes <code>clone</code> so it&#39;s slower than pure <code>with</code>, but the code inside the <code>with</code> would likely <i>also</i> clone the string to get it outside.)"}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1508621107, "post_id": 46866917, "comment_id": 80683730, "body": "@Shepmaster Re thread-local, the idea was not to use <code>thread_local!</code> in that case, which the answer neglected to actually mention. Fixed now, thanks."}, {"owner": {"reputation": 18645, "user_id": 50385, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/2faf0c72f6a7f65431e7df489878be24?s=128&d=identicon&r=PG", "display_name": "Joseph Garvin", "link": "https://stackoverflow.com/users/50385/joseph-garvin"}, "edited": false, "score": 0, "creation_date": 1598119733, "post_id": 46866917, "comment_id": 112356620, "body": "The performance is also made worse by the fact that you can&#39;t return a reference to the string. <code>get_player_name</code> is forced to clone."}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "reply_to_user": {"reputation": 18645, "user_id": 50385, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/2faf0c72f6a7f65431e7df489878be24?s=128&d=identicon&r=PG", "display_name": "Joseph Garvin", "link": "https://stackoverflow.com/users/50385/joseph-garvin"}, "edited": false, "score": 0, "creation_date": 1598120727, "post_id": 46866917, "comment_id": 112356926, "body": "@JosephGarvin If you&#39;re worried about performance of the string clone, you can easily make <code>get_player_name()</code> <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d0e4a8af88e39ef8ac9b22de75abdeaf\" rel=\"nofollow noreferrer\">return <code>Rc&lt;String&gt;</code> instead</a>. As mentioned in previous comments, &quot;no loss of performance&quot; refers to <code>PLAYER_NAME.with()</code> in <code>get_player_name()</code> being inlinable by the compiler and therefore a zero-cost abstraction."}], "tags": [], "owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "is_accepted": true, "score": 6, "last_activity_date": 1508681848, "last_edit_date": 1508681848, "creation_date": 1508612347, "answer_id": 46866917, "question_id": 46866543, "link": "https://stackoverflow.com/questions/46866543/how-can-i-access-a-thread-local-localkey-static-variable/46866917#46866917", "title": "How can I access a thread-local LocalKey static variable?", "body": "<blockquote>\n  <p>Do I have to use a <code>with</code> block every time I want to read it too?</p>\n</blockquote>\n\n<p>Yes if you are accessing <code>PLAYER_NAME</code> directly - see <a href=\"https://stackoverflow.com/a/46866690/1600898\">@Shepmaster's answer</a> for an example. But what you'd typically do in a real program is encapsulate the access to the global in functions, which buy you the usage pattern you know from other languages without loss of performance or convenience. For example:</p>\n\n<pre><code>use std::cell::RefCell;\n\nthread_local! {\n    pub static PLAYER_NAME: RefCell&lt;String&gt;\n        = RefCell::new(\"player-one\".to_string());\n}\n\nfn set_player_name(name: String) {\n    PLAYER_NAME.with(|player_name| {\n        *player_name.borrow_mut() = name\n    });\n}\n\nfn get_player_name() -&gt; String {\n    PLAYER_NAME.with(|player_name| player_name.borrow().clone())\n}\n\nfn main() {\n    assert_eq!(get_player_name(), \"player-one\".to_string());\n    set_player_name(\"mini me\".to_string());\n    assert_eq!(get_player_name(), \"mini me\".to_string());\n}\n</code></pre>\n\n<p>If you don't want the player name to be per-thread, then replace <code>thread_local!</code> with <a href=\"https://crates.io/crates/lazy_static\" rel=\"nofollow noreferrer\"><code>lazy_static!</code></a>, <code>RefCell</code> with a <code>RwLock</code>, <code>borrow()</code> with <code>read()</code>, <code>borrow_mut()</code> with <code>write()</code>, and you will no longer need the <code>with</code>.</p>\n"}], "owner": {"reputation": 23, "user_id": 8811746, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b9c7c53586b14ceacb8db9ae7d773df6?s=128&d=identicon&r=PG&f=1", "display_name": "nabanino", "link": "https://stackoverflow.com/users/8811746/nabanino"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3266, "favorite_count": 0, "accepted_answer_id": 46866917, "answer_count": 2, "score": 2, "last_activity_date": 1508681848, "creation_date": 1508610085, "last_edit_date": 1508660098, "question_id": 46866543, "link": "https://stackoverflow.com/questions/46866543/how-can-i-access-a-thread-local-localkey-static-variable", "title": "How can I access a thread-local LocalKey static variable?", "body": "<p>I'm trying to use the thread-local <a href=\"https://doc.rust-lang.org/std/thread/struct.LocalKey.html\" rel=\"nofollow noreferrer\"><code>LocalKey</code></a> to have a global game variable that the user can set once at the start of playing.</p>\n\n<p>I finally got it to compile while setting a new <code>PLAYER_NAME</code> in a <code>with</code> block:</p>\n\n<pre><code>use std::thread::LocalKey;\nuse std::borrow::BorrowMut;\n\nthread_local! {\n    pub static PLAYER_NAME: String = String::from(\"player-one\");\n}\n\nfn main() {\n    let p: String = String::from(\"new-name\");\n\n    PLAYER_NAME.with(|mut player_name| {\n        let player_name = p;\n    });\n\n    println!(\"PLAYER_NAME is: {:?}\", PLAYER_NAME);\n}\n</code></pre>\n\n<p>This prints out:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>PLAYER_NAME is: LocalKey { .. }\n</code></pre>\n\n<p>How do I print the string value of <code>PLAYER_NAME</code>?  Do I have to use a <code>with</code> block every time I want to read it too?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 327, "user_id": 5573657, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9afeef3c4c496b78554326557386c40d?s=128&d=identicon&r=PG&f=1", "display_name": "anjama", "link": "https://stackoverflow.com/users/5573657/anjama"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1508600659, "post_id": 46864301, "comment_id": 80677459, "body": "@Shepmaster I added a formal question at the end to try and clarify. Just because I can get the code to run doesn&#39;t mean I&#39;m doing things properly, and I think this a symptom of an issue in how I&#39;m using the variables in the loop. This issue came up because I was reorganizing my variable initialization for readability, so it&#39;s something I definitely want to resolve."}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1508600665, "post_id": 46864301, "comment_id": 80677462, "body": "@Shepmaster I believe the OP didn&#39;t understand <b>why</b> changing the order appears to fix the problem. Seeking understanding of the underlying issues as opposed to blindly fiddling with statement order until the compiler accepts the code is something to be encouraged."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1508600811, "post_id": 46864301, "comment_id": 80677503, "body": "@user4815162342 sure, I have no qualms with someone seeking better understanding \u2014 but it&#39;s also worth us as answerers understanding what the OP is actually seeking before writing a pages-long answer or even a short answer that&#39;s completely tangential to the real question. And unfortunately, there&#39;s often a mentality of &quot;just fix my code&quot; (not true here, thankfully)."}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1508601021, "post_id": 46864301, "comment_id": 80677570, "body": "@Shepmaster Agreed, and you personally have contributed more than your fair share of pages-long answers. :) However, in this particular case it seemed (to me) quite clear what the OP was asking. &quot;Based on the error and how the order that the variables are being initialized changes things, I think I&#39;m making a fundamental mistake in how I&#39;m using (borrowing?) the variables in the loop, but <b>I&#39;m not entirely sure what I&#39;m doing wrong and the proper way to fix it.</b>&quot; To someone knowledgable in Rust, the OP already fixed their problem. To the OP, the &quot;fix&quot; seemed like arcane and fragile magic..."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1508601030, "post_id": 46864301, "comment_id": 80677576, "body": "@anjama FYI, there&#39;s also <code>splitn</code> which would allow your parameter values to contain the character <code>=</code> and usually you&#39;d omit the collection item type (<code>let split: Vec&lt;_&gt; =</code> ."}], "answers": [{"comments": [{"owner": {"reputation": 327, "user_id": 5573657, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9afeef3c4c496b78554326557386c40d?s=128&d=identicon&r=PG&f=1", "display_name": "anjama", "link": "https://stackoverflow.com/users/5573657/anjama"}, "edited": false, "score": 0, "creation_date": 1508602667, "post_id": 46864930, "comment_id": 80678038, "body": "Thanks for the answer. I think this is largely just not something I&#39;m used to with my experience in other languages. The two let statements on their own where <i>args</i> and <i>script</i> are first created are completely unrelated, and without the subsequent code, run just fine. Having their order matter based on code somewhere else is an interesting new experience for me."}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "reply_to_user": {"reputation": 327, "user_id": 5573657, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9afeef3c4c496b78554326557386c40d?s=128&d=identicon&r=PG&f=1", "display_name": "anjama", "link": "https://stackoverflow.com/users/5573657/anjama"}, "edited": false, "score": 0, "creation_date": 1508602914, "post_id": 46864930, "comment_id": 80678117, "body": "@anjama I can understand how that can be confusing. On their own the declarations run fine because in that case <code>script</code> never refers to anything in <code>args</code>, it really is just a reference to a static string valid for the entire duration of the program."}], "tags": [], "owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "is_accepted": true, "score": 2, "last_activity_date": 1508605700, "last_edit_date": 1508605700, "creation_date": 1508600226, "answer_id": 46864930, "question_id": 46864301, "link": "https://stackoverflow.com/questions/46864301/is-there-a-way-to-modify-how-im-using-variables-in-a-loop-so-that-the-order-im/46864930#46864930", "title": "Is there a way to modify how I&#39;m using variables in a loop so that the order I&#39;m initializing them does not matter?", "body": "<p>Short answer: <code>script</code> refers to a portion of one of the strings allocated by <code>env::args()</code>. If you define <code>script</code> before <code>args</code>, then <code>args</code> is dropped first (as the compiler's message notes, \"values are dropped in opposite order\") and <code>script</code> points to deallocated memory. Your fix, defining the <code>script</code> after the <code>args</code> object, is correct.</p>\n\n<p>To answer the edited question: the order of variables does matter when one of them is a reference to the other, and you are not allowed to change them arbitrarily. For an explanation of why that is so, read on.</p>\n\n<p>In Rust, every reference is associated with a <em>lifetime</em>, the scope during which the reference is valid. To take an example from <a href=\"https://doc.rust-lang.org/book/second-edition/ch10-03-lifetime-syntax.html\" rel=\"nofollow noreferrer\">the book</a>, lifetimes are what prevents the following from compiling (and crashing):</p>\n\n<pre><code>let r;\n{\n    let x = 5;\n    r = &amp;x;\n}\nprintln!(\"r: {}\", r);  // doesn't compile - x doesn't live long enough\n</code></pre>\n\n<p>In many cases, lifetimes are inferred automatically. For example, the following are equivalent:</p>\n\n<pre><code>{\n    let x = \"foo\";\n    let y: &amp;str = \"foo\";\n    let z: &amp;'static str = \"foo\";\n}\n</code></pre>\n\n<p>i.e. compiler will infer the static lifetime given the use of a string constant, which is statically allocated and exists during the entire execution of the program. On the other hand, the following uses a narrower lifetime:</p>\n\n<pre><code>// correct\nlet s = \"foo\".to_owned();  // allocate \"foo\" dynamically\nlet sref = s.as_str();     // points to heap-allocated \"foo\"\n...\n</code></pre>\n\n<p>Here, <code>sref</code> is only valid for as long as <code>s</code> is valid. After dropping or mutating <code>s</code>, <code>sref</code> would point to uninitialized memory, which Rust carefully prevents. Inserting extra braces sometimes helps visualize the scopes:</p>\n\n<pre><code>// correct - sref cannot outlive s\nlet s = \"foo\".to_owned();\n{\n    let sref = s.as_str();\n    ...\n}\n</code></pre>\n\n<p>On the other hand, if you write them backwards, it doesn't compile:</p>\n\n<pre><code>// incorrect, doesn't compile\nlet mut sref = \"\";\nlet s = \"foo\".to_string();\nsref = s.as_str();\n</code></pre>\n\n<p>To see why, let's insert more explicit scopes:</p>\n\n<pre><code>// incorrect, doesn't compile\n{\n    let mut sref = \"\";\n    {\n        let s = \"foo\".to_string();\n        sref = s.as_str();\n    }\n    // &lt;-- here sref outlives s\n}\n</code></pre>\n\n<p>This is essentially the same as the example from the book, and it is obviously not allowed to compile! And now it should be a bit clearer what the compiler means by \"values in a scope are dropped in the opposite order they are created\". The fact that <code>s</code> is declared <em>after</em> <code>sref</code> means that it is effectively nested in an inner scope, which is why it will be dropped <em>before</em> the stuff in the outer scopes. <code>sref</code> referring to anything in <code>s</code> means that after the inner scope, <code>sref</code> is pointing to uninitialized memory.</p>\n\n<p>To get back to your code, <code>env::args()</code> returns an <a href=\"https://doc.rust-lang.org/std/env/struct.Args.html\" rel=\"nofollow noreferrer\"><code>Args</code> object</a> whose <code>Iterator</code> implementation yields dynamically allocated <code>String</code>s. Although you start off by assigning a static <code>&amp;str</code> to <code>script</code>, the lifetime of the <code>script</code> reference is determined as an intersection of the scopes of all assigned values. In this case these are the static scope from the first assignment and the scope of <code>args</code> from the second assignment, and their intersection is the <code>args</code> scope, which ends up being used as the reference lifetime. Moving <code>script</code> declaration after <code>args</code> places the <code>script</code> reference into an inner scope compared, ensuring that it always refers to a live object.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1508602229, "creation_date": 1508602229, "answer_id": 46865226, "question_id": 46864301, "link": "https://stackoverflow.com/questions/46864301/is-there-a-way-to-modify-how-im-using-variables-in-a-loop-so-that-the-order-im/46865226#46865226", "title": "Is there a way to modify how I&#39;m using variables in a loop so that the order I&#39;m initializing them does not matter?", "body": "<blockquote>\n  <p>Is there a way to modify how I'm using variables in a loop so that the order I'm initializing them does not matter?</p>\n</blockquote>\n\n<p>Yes, you can avoid borrowing at all by cloning the value:</p>\n\n<pre><code>use std::env;\n\nfn main() {\n    let mut script = None;\n\n    for arg in env::args().skip(1) {\n        let mut parts = arg.trim().splitn(2, \"=\").fuse();\n\n        match (parts.next(), parts.next()) {\n            (Some(\"file\"), Some(name)) =&gt; script = Some(name.to_owned()),\n            (Some(other), Some(_)) =&gt; {\n                println!(\"Invalid parameter: {}\", other);\n            }\n            (Some(other), None) =&gt; {\n                println!(\"Invalid parameter: {}\", other);\n                println!(\"Parameters should consist of a parameter name and value separated by '='\");\n            }\n            (None, _) =&gt; {}\n        }\n    }\n\n    let script = script.expect(\"file is a required parameter\");\n    do_thing_with_script(&amp;script);\n}\n\nfn do_thing_with_script(_script: &amp;str) {}\n</code></pre>\n\n<p>This also avoids allocating multiple <code>Vec</code>s. There's also a theoretical/potential memory savings as we don't have to keep the entire argument string in memory, just the parameter. On the flip side, there's a bit more allocation. </p>\n\n<p>Profiling is always the right path, but it has yet to be my experience that command line processing is a large resource usage of a program. To that end, I advocate doing whichever route makes your code easiest to understand, maintain, and which gives your end users the best experience.\nUsually that means using a library.</p>\n\n<hr>\n\n<p>If you have your heart set on borrowing, then <a href=\"https://stackoverflow.com/a/46864930/155423\">user4815162342's answer</a> explains why you have to have the thing you are borrowing from outlive the borrow.</p>\n"}], "owner": {"reputation": 327, "user_id": 5573657, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9afeef3c4c496b78554326557386c40d?s=128&d=identicon&r=PG&f=1", "display_name": "anjama", "link": "https://stackoverflow.com/users/5573657/anjama"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 128, "favorite_count": 0, "accepted_answer_id": 46864930, "answer_count": 2, "score": 2, "last_activity_date": 1508605700, "creation_date": 1508596113, "last_edit_date": 1508600536, "question_id": 46864301, "link": "https://stackoverflow.com/questions/46864301/is-there-a-way-to-modify-how-im-using-variables-in-a-loop-so-that-the-order-im", "title": "Is there a way to modify how I&#39;m using variables in a loop so that the order I&#39;m initializing them does not matter?", "body": "<p>I'm fairly new to Rust, so not entirely sure how to properly title the question because I don't fully understand the error. I have the following simplified code which I'm using to parse command line arguments:</p>\n\n<pre><code>use std::env;\n\nfn main() {\n\n    let mut script: &amp;str = \"\";\n\n    // Get the commandline arguments.\n    let args: Vec&lt;String&gt; = env::args().collect();\n\n    // Loop through and handle the commandline arguments.\n    // Skip the first argument; it's the name of the program.\n    for arg in args.iter().skip(1) {\n        let split: Vec&lt;&amp;str&gt; = arg.trim().split(\"=\").collect();\n\n        if split.len() == 2 {\n            match split[0]{\n                \"file\" =&gt; { script = split[1]; }\n                _ =&gt; { println!(\"Invalid parameter: {}\", arg); }\n            }\n        } else {\n            println!(\"Invalid parameter: {}\", arg);\n            println!(\"Parameters should consist of a parameter name and value separated by '='\");\n        }\n    }\n}\n</code></pre>\n\n<p>Which gives me the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: `args` does not live long enough\n  --&gt; src/main.rs:25:1\n   |\n12 |     for arg in args.iter().skip(1) {\n   |                ---- borrow occurs here\n...\n25 | }\n   | ^ `args` dropped here while still borrowed\n   |\n   = note: values in a scope are dropped in the opposite order they are created\n</code></pre>\n\n<p>When I change where the <em>script</em> variable is initialized:</p>\n\n<pre><code>use std::env;\n\nfn main() {\n\n    // Get the commandline arguments.\n    let args: Vec&lt;String&gt; = env::args().collect();\n\n    let mut script: &amp;str = \"\";\n\n    // Loop through and handle the commandline arguments.\n    // Skip the first argument; it's the name of the program.\n    for arg in args.iter().skip(1) {\n        let split: Vec&lt;&amp;str&gt; = arg.trim().split(\"=\").collect();\n\n        if split.len() == 2 {\n            match split[0]{\n                \"file\" =&gt; { script = split[1]; }\n                _ =&gt; { println!(\"Invalid parameter: {}\", arg); }\n            }\n        } else {\n            println!(\"Invalid parameter: {}\", arg);\n            println!(\"Parameters should consist of a parameter name and value separated by '='\");\n        }\n    }\n}\n</code></pre>\n\n<p>The error goes away. Based on the error and how the order that the variables are being initialized changes things, I think I'm making a fundamental mistake in how I'm using (borrowing?) the variables in the loop, but I'm not entirely sure what I'm doing wrong and the proper way to fix it. Is there a way to modify how I'm using the variables in the loop so that the order I'm initializing them does not matter?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 219, "user_id": 1525962, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/56930f170e4a427fd109b24d2db38122?s=128&d=identicon&r=PG", "display_name": "JohnF", "link": "https://stackoverflow.com/users/1525962/johnf"}, "edited": false, "score": 0, "creation_date": 1508572688, "post_id": 46861247, "comment_id": 80669861, "body": "This is exactly what I need, thank you! I came up with a sort of hacky solution to the result disparity by casting the result to a vector. In my case I already know if the IP is v4 or v6."}], "tags": [], "owner": {"reputation": 185753, "user_id": 152948, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/194ef8f807c34a9d7aab0e11a8674768?s=128&d=identicon&r=PG", "display_name": "hobbs", "link": "https://stackoverflow.com/users/152948/hobbs"}, "is_accepted": true, "score": 3, "last_activity_date": 1508572521, "creation_date": 1508572521, "answer_id": 46861247, "question_id": 46860928, "link": "https://stackoverflow.com/questions/46860928/how-to-get-the-byte-representation-of-an-ip-address-from-a-sockaddr-in-rust/46861247#46861247", "title": "How to get the byte representation of an IP address from a SockAddr in Rust?", "body": "<p>Yes, you can, but ultimately you need to account for the fact that an address could be v4 or v6, and handle accordingly, using pattern matching. Basically:</p>\n\n<pre><code>match sa.ip() {\n    IpAddr::V4(ip) =&gt; /* something with ip.octets() which is a [u8; 4] */,\n    IpAddr::V6(ip) =&gt; /* something with ip.octets() which is a [u8; 16] */,\n}\n</code></pre>\n\n<p>for example, if you wanted to be future-unfriendly, you could</p>\n\n<pre><code>let octets = match sa.ip() {\n    IpAddr::V4(ip) =&gt; Ok(ip.octets()),\n    _ =&gt; Err(\"Not an IPv4 Address\"),\n};\n</code></pre>\n\n<p>which returns a successful Result for v4 addresses, but errors on v6 ones. I don't really know Rust, but it looks like the only really right way to handle the type disparity between the return values of <code>octets()</code> in the two cases is either to wrap the result in your own enum, or else just avoid it by only working with the octets inside of an appropriate pattern match.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 0, "last_activity_date": 1508609322, "creation_date": 1508609322, "answer_id": 46866428, "question_id": 46860928, "link": "https://stackoverflow.com/questions/46860928/how-to-get-the-byte-representation-of-an-ip-address-from-a-sockaddr-in-rust/46866428#46866428", "title": "How to get the byte representation of an IP address from a SockAddr in Rust?", "body": "<p>The solution that I ended up using looks like this:</p>\n\n<pre><code>let ip_bytes = match addr.ip() {\n    IpAddr::V4(ip) =&gt; ip.octets().to_vec(),\n    IpAddr::V6(ip) =&gt; ip.octets().to_vec(),\n};\n</code></pre>\n"}], "owner": {"reputation": 219, "user_id": 1525962, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/56930f170e4a427fd109b24d2db38122?s=128&d=identicon&r=PG", "display_name": "JohnF", "link": "https://stackoverflow.com/users/1525962/johnf"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 977, "favorite_count": 0, "accepted_answer_id": 46861247, "answer_count": 2, "score": 1, "last_activity_date": 1508609322, "creation_date": 1508569801, "last_edit_date": 1508609314, "question_id": 46860928, "link": "https://stackoverflow.com/questions/46860928/how-to-get-the-byte-representation-of-an-ip-address-from-a-sockaddr-in-rust", "title": "How to get the byte representation of an IP address from a SockAddr in Rust?", "body": "<p>A call to the function <a href=\"https://doc.rust-lang.org/std/net/struct.UdpSocket.html#method.recv_from\" rel=\"nofollow noreferrer\"><code>recv_from()</code></a> returns a (length, <a href=\"https://doc.rust-lang.org/std/net/enum.SocketAddr.html\" rel=\"nofollow noreferrer\"><code>SocketAddr</code></a>) tuple. There is no method on this enum to extract an IP address as a byte array, however it does contain a <a href=\"https://doc.rust-lang.org/std/net/enum.IpAddr.html\" rel=\"nofollow noreferrer\"><code>IpAddr</code></a> enum which can be obtained with the <a href=\"https://doc.rust-lang.org/std/net/enum.SocketAddr.html#method.ip\" rel=\"nofollow noreferrer\"><code>ip()</code></a> function. The <code>IpAddr</code> contains an <a href=\"https://doc.rust-lang.org/std/net/struct.Ipv4Addr.html\" rel=\"nofollow noreferrer\"><code>Ipv4Addr</code></a> or <code>Ipv6Addr</code> struct, which have a function called <a href=\"https://doc.rust-lang.org/std/net/struct.Ipv4Addr.html#method.octets\" rel=\"nofollow noreferrer\"><code>octets()</code></a> that does exactly what I need. Is it possible to get access to this from a <code>SocketAddr</code>?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1508540986, "post_id": 46857955, "comment_id": 80664511, "body": "FWIW, I&#39;d probably just <a href=\"https://play.integer32.com/?gist=9889ac1244f40e9bb180c6292895401c&amp;version=stable\" rel=\"nofollow noreferrer\">avoid taking references at all</a>."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 3, "last_activity_date": 1509541930, "last_edit_date": 1509541930, "creation_date": 1508539930, "answer_id": 46858350, "question_id": 46857955, "link": "https://stackoverflow.com/questions/46857955/why-does-this-result-of-a-binary-operator-need-an-appropriate-lifetime/46858350#46858350", "title": "Why does this result of a binary operator need an appropriate lifetime?", "body": "<p>When programming, it's very useful to learn how to create a <a href=\"/help/mcve\">Minimal, Complete, and Verifiable example (MCVE)</a>. This allows you to ignore irrelevant details and focus on the core of the problem.</p>\n\n<p>As one example, your entire blob of code can be reduced down to:</p>\n\n<pre><code>use std::ops::Rem;\n\nfn powm&lt;T&gt;(fbase: &amp;T, modulus: &amp;T)\nwhere\n    for&lt;'a&gt; &amp;'a T: Rem&lt;&amp;'a T, Output = T&gt;,\n{\n    fbase % modulus;\n}\n\nfn main() {}\n</code></pre>\n\n<p>Once you have a MCVE, you can make permutations to it to explore. For example, we can remove <a href=\"https://doc.rust-lang.org/stable/book/second-edition/ch10-03-lifetime-syntax.html#lifetime-elision\" rel=\"nofollow noreferrer\">the lifetime elision</a>:</p>\n\n<pre><code>fn powm&lt;'a, 'b, T&gt;(fbase: &amp;'a T, modulus: &amp;'b T)\nwhere\n    for&lt;'x&gt; &amp;'x T: Rem&lt;&amp;'x T, Output = T&gt;,\n{\n    fbase % modulus;\n}\n</code></pre>\n\n<p>Now we start to see something: what is the relation between all three lifetimes? Well, there isn't one, really. What happens if we make one?</p>\n\n<ul>\n<li><p>If we say that the input references can be unified to the same\nlifetime, it works:</p>\n\n<pre><code>fn powm&lt;'a, T&gt;(fbase: &amp;'a T, modulus: &amp;'a T)\n</code></pre></li>\n<li><p>If we say that <code>'b</code> outlives <code>'a</code>, it works:</p>\n\n<pre><code>fn powm&lt;'a, 'b: 'a, T&gt;(fbase: &amp;'a T, modulus: &amp;'b T)\n</code></pre></li>\n<li><p>If we say that we can have two different lifetimes in the operator, it works:</p>\n\n<pre><code>for&lt;'x, 'y&gt; &amp;'x T: Rem&lt;&amp;'y T, Output = T&gt;,\n</code></pre></li>\n</ul>\n\n<p>What about if we poke at the call site?</p>\n\n<ul>\n<li><p>If we directly call the <code>Rem::rem</code> method, it works:</p>\n\n<pre><code>Rem::rem(fbase, modulus);\n</code></pre></li>\n<li><p>If we dereference and re-reference, it works:</p>\n\n<pre><code>&amp;*fbase % &amp;*modulus;\n</code></pre></li>\n</ul>\n\n<p>I don't know <em>exactly</em> why the original doesn't work \u2014 <s>conceptually both the input references should be able to be unified to one lifetime. It's possible that there's a piece of inference that either cannot or isn't happening, but I'm not aware of it.</s></p>\n\n<p>Some further discussion with a Rust compiler developer led to <a href=\"https://github.com/rust-lang/rust/issues/45425\" rel=\"nofollow noreferrer\">an issue</a> as it doesn't quite seem right. This issue has now been <a href=\"https://github.com/rust-lang/rust/pull/45435\" rel=\"nofollow noreferrer\">resolved</a> and should theoretically be available in Rust 1.23.</p>\n"}], "owner": {"reputation": 797, "user_id": 2606953, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/12fc6d9629d0b3ed3a1decc96e6ff2e6?s=128&d=identicon&r=PG", "display_name": "Mark", "link": "https://stackoverflow.com/users/2606953/mark"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 103, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1509541930, "creation_date": 1508536964, "last_edit_date": 1508538000, "question_id": 46857955, "link": "https://stackoverflow.com/questions/46857955/why-does-this-result-of-a-binary-operator-need-an-appropriate-lifetime", "title": "Why does this result of a binary operator need an appropriate lifetime?", "body": "<p>This is related to <a href=\"https://stackoverflow.com/questions/46852367/how-can-i-require-that-a-reference-to-a-generic-type-can-be-compared-for-equalit\">my earlier question</a> on making a modular exponentiation method generic. I've now arrived at the following code:</p>\n\n<pre><code>fn powm&lt;T&gt;(fbase: &amp;T, exponent: &amp;T, modulus: &amp;T) -&gt; T\nwhere\n    T: Mul&lt;T, Output = T&gt;\n        + From&lt;u8&gt;\n        + PartialEq&lt;T&gt;\n        + Rem&lt;T, Output = T&gt;\n        + Copy\n        + for&lt;'a&gt; Rem&lt;&amp;'a T, Output = T&gt;\n        + Clone\n        + PartialOrd&lt;T&gt;\n        + ShrAssign&lt;T&gt;,\n    for&lt;'a&gt; &amp;'a T: PartialEq&lt;T&gt; + Rem&lt;&amp;'a T, Output = T&gt;,\n{\n    if modulus == T::from(1) {\n        T::from(0)\n    } else {\n        let mut result = T::from(1);\n        let mut base = fbase % modulus;\n        let mut exp = exponent.clone();\n        while exp &gt; T::from(0) {\n            if exp % T::from(2) == T::from(1) {\n                result = (result * base) % modulus;\n            }\n            exp &gt;&gt;= T::from(1);\n            base = (base * base) % modulus;\n        }\n        result\n    }\n}\n</code></pre>\n\n<p>It is my understanding that by defining the trait bound <code>where for&lt;'a&gt; &amp;'a T: Rem&lt;&amp;'a T, Output=T&gt;</code> that it is understood that I can use the modulo operator <code>%</code> on two operands of type <code>&amp;'a T</code>, and the result will be of type <code>T</code>. However, I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime due to conflicting requirements\n  --&gt; src/main.rs:20:30\n   |\n20 |         let mut base = fbase % modulus;\n   |                              ^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #3 defined on the function body at 3:1...\n  --&gt; src/main.rs:3:1\n   |\n3  | / fn powm&lt;T&gt;(fbase: &amp;T, exponent: &amp;T, modulus: &amp;T) -&gt; T\n4  | | where\n5  | |     T: Mul&lt;T, Output = T&gt;\n6  | |         + From&lt;u8&gt;\n...  |\n30 | |     }\n31 | | }\n   | |_^\nnote: ...so that reference does not outlive borrowed content\n  --&gt; src/main.rs:20:32\n   |\n20 |         let mut base = fbase % modulus;\n   |                                ^^^^^^^\nnote: but, the lifetime must be valid for the anonymous lifetime #1 defined on the function body at 3:1...\n  --&gt; src/main.rs:3:1\n   |\n3  | / fn powm&lt;T&gt;(fbase: &amp;T, exponent: &amp;T, modulus: &amp;T) -&gt; T\n4  | | where\n5  | |     T: Mul&lt;T, Output = T&gt;\n6  | |         + From&lt;u8&gt;\n...  |\n30 | |     }\n31 | | }\n   | |_^\nnote: ...so that types are compatible (expected std::ops::Rem, found std::ops::Rem&lt;&amp;T&gt;)\n  --&gt; src/main.rs:20:30\n   |\n20 |         let mut base = fbase % modulus;\n   |                              ^\n</code></pre>\n\n<p>The code does work if I replace the line in question by</p>\n\n<pre><code>let mut base = fbase.clone() % modulus;\n</code></pre>\n\n<p>I don't see why I would need to clone in the first place if I can use the modulo operator already to return a \"fresh\" element of type <code>T</code>. Do I need to modify my trait bounds instead? Why does this go wrong?</p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1508524342, "post_id": 46854574, "comment_id": 80657950, "body": "<i>I use a function to hide <code>ParserImpl</code></i> \u2014 Why do you think that is a valuable thing to do in this case? <i>this seems like a potential pitfall</i> \u2014 What kind of pitfall do you imagine could happen?"}, {"owner": {"reputation": 138, "user_id": 6454880, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-WhIYH7PCxOk/AAAAAAAAAAI/AAAAAAAAAAA/0CPB-xQooL8/photo.jpg?sz=128", "display_name": "Stacy J", "link": "https://stackoverflow.com/users/6454880/stacy-j"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1508525616, "post_id": 46854574, "comment_id": 80658554, "body": "This is the simplified version.  There are multiple parser implementations, all of which present the same <code>Parser</code> interface.  The rest of the code needs to be agnostic to the specific parser being used."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1508525760, "post_id": 46854574, "comment_id": 80658629, "body": "Were you aware that you can <a href=\"https://stackoverflow.com/q/33041736/155423\">implement a trait for a box of that trait</a>? Then this function doesn&#39;t have to be the one that performs the boxing."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1508525487, "post_id": 46855243, "comment_id": 80658500, "body": "@StacyProwell perhaps this question is really a duplicate of <a href=\"https://stackoverflow.com/q/27535289/155423\">stackoverflow.com/q/27535289/155423</a> then?"}, {"owner": {"reputation": 138, "user_id": 6454880, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-WhIYH7PCxOk/AAAAAAAAAAI/AAAAAAAAAAA/0CPB-xQooL8/photo.jpg?sz=128", "display_name": "Stacy J", "link": "https://stackoverflow.com/users/6454880/stacy-j"}, "edited": false, "score": 0, "creation_date": 1508525501, "post_id": 46855243, "comment_id": 80658506, "body": "Not sure how I could return the value directly; wouldn&#39;t I still need to specify the lifetime?"}, {"owner": {"reputation": 138, "user_id": 6454880, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-WhIYH7PCxOk/AAAAAAAAAAI/AAAAAAAAAAA/0CPB-xQooL8/photo.jpg?sz=128", "display_name": "Stacy J", "link": "https://stackoverflow.com/users/6454880/stacy-j"}, "edited": false, "score": 0, "creation_date": 1508525730, "post_id": 46855243, "comment_id": 80658607, "body": "Ah!  Yes, &quot;let the compiler guide you.&quot;  Please keep in mind I&#39;m coming from C++, where the compiler was designed to actively hate you."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 138, "user_id": 6454880, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-WhIYH7PCxOk/AAAAAAAAAAI/AAAAAAAAAAA/0CPB-xQooL8/photo.jpg?sz=128", "display_name": "Stacy J", "link": "https://stackoverflow.com/users/6454880/stacy-j"}, "edited": false, "score": 0, "creation_date": 1508525818, "post_id": 46855243, "comment_id": 80658664, "body": "@StacyProwell If you think that&#39;s a more comprehensive answer, you are encouraged to un-accept this and then you can mark your question as a duplicate of that."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 0, "last_activity_date": 1508524285, "creation_date": 1508524285, "answer_id": 46855243, "question_id": 46854574, "link": "https://stackoverflow.com/questions/46854574/is-there-a-more-idiomatic-way-to-use-traits-like-ioread-with-lifetimes/46855243#46855243", "title": "Is there a more idiomatic way to use traits like `io::Read` with lifetimes?", "body": "<p>That <em>is</em> the idiomatic way of writing the code that has that meaning, but you may not want that meaning.</p>\n\n<p>For example, if you don't <em>need</em> to create a boxed trait object, you can just return the parameterized value directly, or in this case just use the result of <code>ParserImpl::new</code>. This is my default form until I know I need dynamic dispatch provided by some trait object.</p>\n\n<p>You could also require the <code>'static</code> lifetime instead of introducing a new lifetime <code>'a</code>, but this reduces the range of allowed types that you can pass into <code>make_parser</code>:</p>\n\n<pre><code>pub fn make_parser&lt;R&gt;(stream: R) -&gt; Box&lt;Parser&gt;\nwhere\n    R: io::Read + 'static,\n{\n    Box::new(ParserImpl::new(stream))\n}\n</code></pre>\n"}], "owner": {"reputation": 138, "user_id": 6454880, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-WhIYH7PCxOk/AAAAAAAAAAI/AAAAAAAAAAA/0CPB-xQooL8/photo.jpg?sz=128", "display_name": "Stacy J", "link": "https://stackoverflow.com/users/6454880/stacy-j"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 74, "favorite_count": 0, "accepted_answer_id": 46855243, "answer_count": 1, "score": 0, "last_activity_date": 1508524285, "creation_date": 1508521458, "last_edit_date": 1508523754, "question_id": 46854574, "link": "https://stackoverflow.com/questions/46854574/is-there-a-more-idiomatic-way-to-use-traits-like-ioread-with-lifetimes", "title": "Is there a more idiomatic way to use traits like `io::Read` with lifetimes?", "body": "<p>I have a public trait, <code>Parser</code>, that defines an external interface.  I then have a private <code>ParserImpl</code> struct that implements the methods (actually, I have several implementations, which is the idea behind using the trait to abstract away).</p>\n\n<pre><code>use std::io;\n\npub trait Parser {\n    // ...omitted\n}\n\nstruct ParserImpl&lt;R: io::Read&gt; {\n    // ...omitted\n    stream: R,\n}\n\nimpl&lt;R: io::Read&gt; ParserImpl&lt;R&gt; {\n    // ...methods\n    fn new(stream: R) -&gt; ParserImpl&lt;R&gt; {\n        ParserImpl {\n            // ...omitted\n            stream: stream,\n        }\n    }\n}\n\nimpl&lt;R: io::Read&gt; Parser for ParserImpl&lt;R&gt; {\n    // ...methods\n}\n</code></pre>\n\n<p>To create a parser instance, I use a function to hide <code>ParserImpl</code>.</p>\n\n<pre><code>pub fn make_parser&lt;'a, R&gt;(stream: R) -&gt; Box&lt;Parser + 'a&gt;\nwhere\n    R: io::Read + 'a,\n{\n    Box::new(ParserImpl::new(stream))\n}\n</code></pre>\n\n<p>This is all well and good... and it works... but the <code>make_parser</code> function troubles me. I feel that there must be a simpler way to approach this and like I'm missing something important, as this seems like a potential pitfall whenever using a trait like <code>io::Read</code> to abstract away the source of data.</p>\n\n<p>I understand the need to specify lifetimes (<a href=\"https://stackoverflow.com/questions/29740488/parameter-type-may-not-live-long-enough\">Parameter type may not live long enough?</a>) but I am a bit stumped on whether I can have both a clean and simple interface, and also use a trait like <code>io::Read</code>.</p>\n\n<p>Is there a \"cleaner,\" or perhaps more idiomatic way, to use traits like <code>io::Read</code> that I am missing?  If not, that's okay, but I'm pretty new to Rust and when I wrote the above function I kept thinking \"this can't be right...\"</p>\n\n<p>To make this sample runnable, here's a <code>main</code>:</p>\n\n<pre><code>fn main() {\n    use std::fs;\n    let file: fs::File = fs::File::open(\"blabby.txt\").unwrap();\n    let parser = make_parser(file);\n}\n</code></pre>\n"}, {"tags": ["generics", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1508522982, "post_id": 46854553, "comment_id": 80657248, "body": "You cannot \u2014 Rust sizes structs based on their members, so an <code>Element&lt;String&gt;</code> has a different size from <code>Element&lt;i64&gt;</code>. When you put an <code>Element</code> into your <code>Parser</code>, then the size of the <code>Parser</code> depends on the generic type. The alternative is to have a single type that represents all possibilities. A <i>trait object</i> or an enum would be the go-to choices."}, {"owner": {"reputation": 360, "user_id": 5784083, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/rHdC2.jpg?s=128&g=1", "display_name": "oldMammuth", "link": "https://stackoverflow.com/users/5784083/oldmammuth"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1508534787, "post_id": 46854553, "comment_id": 80662758, "body": "Understood. Thank you for pointing me to the right answer."}], "owner": {"reputation": 360, "user_id": 5784083, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/rHdC2.jpg?s=128&g=1", "display_name": "oldMammuth", "link": "https://stackoverflow.com/users/5784083/oldmammuth"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 22, "favorite_count": 0, "closed_date": 1508522822, "answer_count": 0, "score": 1, "last_activity_date": 1508521977, "creation_date": 1508521353, "last_edit_date": 1508521977, "question_id": 46854553, "link": "https://stackoverflow.com/questions/46854553/how-can-i-reference-a-generic-struct-inside-another-struct-without-making-the-la", "closed_reason": "Duplicate", "title": "How can I reference a generic struct inside another struct without making the latter be generic?", "body": "<p>To wit:</p>\n\n<pre><code>use std::fmt;\n\n// Element types\nconst INTEGER: &amp;'static str = \"INTEGER\";\nconst FLOAT: &amp;'static str = \"FLOAT\";\nconst STRING: &amp;'static str = \"STRING\";\n\n#[derive(Debug)]\nstruct Element&lt;T&gt; {\n    mt_type: &amp;'static str,\n    mt_value: T,\n}\nimpl&lt;T: fmt::Display&gt; fmt::Display for Element&lt;T&gt; {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        write!(f, \"Element({}, {})\", self.mt_type, self.mt_value)\n    }\n}\n\nstruct Parser {\n    text: String,\n    pos: usize,\n    current_element: Element, // Here there should be something to hold different Elements at different times...\n}\n</code></pre>\n\n<p>I would need <code>current_element</code> to hold a <code>Element&lt;i64&gt;</code>, a <code>Element&lt;f64&gt;</code>, and a <code>Element&lt;String&gt;</code> in the same struct at different times; I was reading the Rust guide and it seems that all solutions point towards making the struct <code>Parser</code> generic, yet if I do that then at run-time I am committed to use a different <code>Parser</code> for a different <code>Element</code> type.</p>\n\n<p>An ugly way to solve this is to get all values inside <code>Element</code> as strings and then convert them to the proper type when needed, but then the overhead would be big...</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1508514992, "last_edit_date": 1508514992, "creation_date": 1508513680, "answer_id": 46852524, "question_id": 46852367, "link": "https://stackoverflow.com/questions/46852367/how-can-i-require-that-a-reference-to-a-generic-type-can-be-compared-for-equalit/46852524#46852524", "title": "How can I require that a reference to a generic type can be compared for equality against the generic type?", "body": "<p>You can either ignore the problem and compare a reference to a reference or non-reference to a non-reference:</p>\n\n<pre><code>if modulus == &amp;T::one() {\n// Or\nif *modulus == T::one() {\n</code></pre>\n\n<p>Or you can use <em>higher-ranked trait bounds</em>:</p>\n\n<pre><code>impl&lt;T&gt; PowM for T\nwhere\n    T: Num + Two + ShrAssign&lt;T&gt; + Rem&lt;T&gt; + PartialOrd&lt;T&gt;,\n    for &lt;'a&gt; &amp;'a T: PartialEq&lt;T&gt;,\n{\n    // ...\n}\n</code></pre>\n\n<p>In either case, you need to require that <code>T</code> implements <code>Copy</code> or that it implements <code>Clone</code> and then add appropriate calls to <code>.clone()</code>.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/35592750/155423\">How does for&lt;&gt; syntax differ from a regular lifetime bound?</a></li>\n</ul>\n"}], "owner": {"reputation": 797, "user_id": 2606953, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/12fc6d9629d0b3ed3a1decc96e6ff2e6?s=128&d=identicon&r=PG", "display_name": "Mark", "link": "https://stackoverflow.com/users/2606953/mark"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 325, "favorite_count": 0, "accepted_answer_id": 46852524, "answer_count": 1, "score": 1, "last_activity_date": 1508514992, "creation_date": 1508513139, "last_edit_date": 1508513555, "question_id": 46852367, "link": "https://stackoverflow.com/questions/46852367/how-can-i-require-that-a-reference-to-a-generic-type-can-be-compared-for-equalit", "title": "How can I require that a reference to a generic type can be compared for equality against the generic type?", "body": "<p>I'm trying to implement an algorithm which relies on modular exponentiation. I couldn't find any modular exponentiation construct for native types like <code>u64</code> (only for bigints), so I figured I'd code a standard <a href=\"https://en.wikipedia.org/wiki/Modular_exponentiation#Right-to-left_binary_method\" rel=\"nofollow noreferrer\">modular exponentiation by repeated squaring method</a>.</p>\n\n<p>Here's what I came up with:</p>\n\n<pre><code>fn powm(base: &amp;u64, exponent: &amp;u64, modulus: &amp;u64) -&gt; u64 {\n    if *modulus == 1u64 {\n        0\n    } else {\n        let mut result = 1;\n        let mut base = self % modulus;\n        let mut exp = *exponent;\n        while exp &gt; 0 {\n            if exp % 2 == 1 {\n                result = (result * base) % modulus;\n            }\n            exp &gt;&gt;= 1;\n            base = (base * base) % modulus;\n        }\n        result\n    }\n}\n</code></pre>\n\n<p>This works fine. Now, I'd like to make this function generic so that it also works for numeric types other than <code>u64</code>. This is where I start to get a bit lost. </p>\n\n<p>I found the <a href=\"http://rust-num.github.io/num/num/index.html\" rel=\"nofollow noreferrer\">num</a> crate, which has a <code>Num</code> trait that specifies basic numeric operations. After separating out a new <code>PowM</code> trait and creating a bunch of trait bounds, I end up with:</p>\n\n<pre><code>extern crate num;\n\nuse num::Num;\nuse std::ops::{ShrAssign,Rem};\n\npub trait PowM {\n    fn powm(&amp;self, exponent: &amp;Self, modulus: &amp;Self) -&gt; Self;\n}\n\npub trait Two {\n    fn two() -&gt; Self;\n}\n\nimpl Two for u64 {\n    fn two() -&gt; u64 { return 2u64 }\n}\n\nimpl Two for usize {\n    fn two() -&gt; usize { return 2usize }\n}\n\nimpl&lt;T&gt; PowM for T \n    where T: Num + Two + ShrAssign&lt;T&gt; + Rem&lt;T&gt; + PartialOrd&lt;T&gt; {\n    fn powm(&amp;self, exponent: &amp;T, modulus: &amp;T) -&gt; T {\n        if modulus == T::one() {\n            T::zero()\n        } else {\n            let mut result = T::one();\n            let mut base = *self % *modulus;\n            let mut exp = *exponent;\n            while exp &gt; T::zero() {\n                if exp % T::two() == T::one() {\n                    result = (result * base) % *modulus;\n                }\n                exp &gt;&gt;= T::one();\n                base = (base * base) % *modulus;\n            }\n            result\n        }\n    }\n}\n</code></pre>\n\n<p>The only complaint the compiler gives is the following</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `&amp;T: std::cmp::PartialEq&lt;T&gt;` is not satisfied\n   |\n30 |         if modulus == T::one() {\n   |                    ^^ can't compare `&amp;T` with `T`\n   |\n   = help: the trait `std::cmp::PartialEq&lt;T&gt;` is not implemented for `&amp;T`\n   = help: consider adding a `where &amp;T: std::cmp::PartialEq&lt;T&gt;` bound\n</code></pre>\n\n<p>I'm trying to add the trait bounds, but end up chasing a lot of compiler errors about lifetimes I do not fully understand, and end up stuck with the following:</p>\n\n<pre><code>impl&lt;'a, T&gt; PowM for T \n    where T: 'a + Num + Two + ShrAssign&lt;T&gt; + Rem&lt;T&gt; + PartialOrd&lt;T&gt;,\n          &amp;'a T: PartialEq&lt;T&gt; {\n    fn powm(&amp;self, exponent: &amp;T, modulus: &amp;T) -&gt; T {\n        if modulus == T::one() {\n[...]\n</code></pre>\n\n<p>which still gives errors. How do I fix this?</p>\n"}, {"tags": ["multithreading", "rust", "thread-safety"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1508509966, "post_id": 46851258, "comment_id": 80650147, "body": "Do you understand the traits <a href=\"https://doc.rust-lang.org/book/second-edition/ch16-04-extensible-concurrency-sync-and-send.html\" rel=\"nofollow noreferrer\"><code>Send</code> and <code>Sync</code></a>? It&#39;s best that you understand the implications of a type not being <code>Sync</code>. One does not just implement <code>Sync</code>. Relevant question:  <a href=\"https://stackoverflow.com/q/36649865/1233251\">stackoverflow.com/q/36649865/1233251</a>"}], "answers": [{"comments": [{"owner": {"reputation": 1624, "user_id": 6554943, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/732754d4a00e6a8e4a486c097360348b?s=128&d=identicon&r=PG", "display_name": "ritiek", "link": "https://stackoverflow.com/users/6554943/ritiek"}, "edited": false, "score": 0, "creation_date": 1509466400, "post_id": 47036788, "comment_id": 81026429, "body": "Hi, thanks for response! I tried out as you said and it indeed seems to work with (at the moment) unmerged PR. However, I also tried running without using the helper variable <code>pe</code> but it would totally ignore any input key I press. Why is it necessary to use helper variable here?"}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "reply_to_user": {"reputation": 1624, "user_id": 6554943, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/732754d4a00e6a8e4a486c097360348b?s=128&d=identicon&r=PG", "display_name": "ritiek", "link": "https://stackoverflow.com/users/6554943/ritiek"}, "edited": false, "score": 2, "creation_date": 1509468741, "post_id": 47036788, "comment_id": 81027862, "body": "Sadly I don&#39;t have a reference for this; but the temporary <code>MutexGuard</code> returned by <code>lock()</code> is only dropped after the &quot;current statement&quot; is finished; if you lock in the <code>match</code> it will keep the lock until the match is over, which means it will deadlock in <code>mark_at</code> called within the match. With a <code>let</code> statement the lock is dropped after the <code>let</code>."}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "reply_to_user": {"reputation": 1624, "user_id": 6554943, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/732754d4a00e6a8e4a486c097360348b?s=128&d=identicon&r=PG", "display_name": "ritiek", "link": "https://stackoverflow.com/users/6554943/ritiek"}, "edited": false, "score": 0, "creation_date": 1509468822, "post_id": 47036788, "comment_id": 81027906, "body": "Have a look at it yourself in <a href=\"https://play.rust-lang.org/?gist=94690e7a2bec2c6b11b26c50fd3d9c3c&amp;version=stable\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> - I faked a Mutex implementation with logging on <code>lock()</code> and the <code>Drop</code>."}, {"owner": {"reputation": 1624, "user_id": 6554943, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/732754d4a00e6a8e4a486c097360348b?s=128&d=identicon&r=PG", "display_name": "ritiek", "link": "https://stackoverflow.com/users/6554943/ritiek"}, "edited": false, "score": 0, "creation_date": 1509469193, "post_id": 47036788, "comment_id": 81028145, "body": "That makes sense. Thanks again for the help! :)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1509478132, "post_id": 47036788, "comment_id": 81033507, "body": "@Stefan It&#39;s not quite after the &quot;current statement&quot;. When the <code>MutexGuard</code> is dropped, it unlocks. If the <code>MutexGuard</code> is put into a variable, the variable will be dropped at the end of the <i>scope</i>. If it&#39;s not put into a variable, it will be dropped immediately."}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1509483659, "post_id": 47036788, "comment_id": 81036259, "body": "@Shepmaster &quot;Temporary&quot; as in &quot;not put into a variable&quot;. Define &quot;immediately&quot;... I think your comment doesn&#39;t help understanding the issue, so I created a new question <a href=\"https://stackoverflow.com/questions/47044453/what-is-the-scope-of-unnamed-values\" title=\"what is the scope of unnamed values\">stackoverflow.com/questions/47044453/&hellip;</a>"}], "tags": [], "owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "is_accepted": true, "score": 1, "last_activity_date": 1509477693, "last_edit_date": 1509477693, "creation_date": 1509456988, "answer_id": 47036788, "question_id": 46851258, "link": "https://stackoverflow.com/questions/46851258/how-to-implement-sync-for-rustbox/47036788#47036788", "title": "How to implement Sync for RustBox?", "body": "<p><code>RustBox</code> doesn't implement <code>Send</code>, so there is no (safe) way to share it between threads (it seems you already found the not yet merged pull request <a href=\"https://github.com/gchp/rustbox/pull/65\" rel=\"nofollow noreferrer\">https://github.com/gchp/rustbox/pull/65</a> which would support <code>Send</code>).</p>\n\n<p>If the pull request gets merged you could wrap the <code>RustBox</code> in a <a href=\"https://doc.rust-lang.org/std/sync/struct.Mutex.html\" rel=\"nofollow noreferrer\"><code>Mutex</code></a>, i.e. <code>Mutex&lt;RustBox&gt;</code>, and references to that can be shared between threads.</p>\n\n<p>But then you'll hit lifetime issues: your <code>rustbox</code> reference doesn't live long enough to spawn a new thread using it, so you'll have to wrap it in <a href=\"https://doc.rust-lang.org/std/sync/struct.Arc.html\" rel=\"nofollow noreferrer\"><code>Arc</code></a>.</p>\n\n<pre><code>use std::sync::{Arc,Mutex};\n\nfn mark_at(x: usize, y: usize, rustbox: &amp;Arc&lt;Mutex&lt;RustBox&gt;&gt;) {\n    rustbox.lock().unwrap().print(x, y, rustbox::RB_BOLD, Color::Black, Color::White, \"+\");\n    let rustbox = rustbox.clone(); // increment reference counter\n    thread::spawn(move || {\n        let delay = Duration::from_millis(2000);\n        thread::sleep(delay);\n        rustbox.lock().unwrap().print(x, y, rustbox::RB_BOLD, Color::Black, Color::White, \" \");\n    });\n}\n</code></pre>\n\n<p>In your <code>main</code> function you'll have to wrap the <code>rustbox</code>:</p>\n\n<pre><code>let rustbox = Arc::new(Mutex::new(rustbox));\n</code></pre>\n\n<p>and <code>lock()</code> it every time you use it.</p>\n\n<p>Make sure you don't keep the lock too long; it might help to use helper variables to make this more explicit, e.g:</p>\n\n<pre><code>let pe = rustbox.lock().unwrap().poll_event(false);\nmatch pe {\n// ...\n}\n</code></pre>\n"}], "owner": {"reputation": 1624, "user_id": 6554943, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/732754d4a00e6a8e4a486c097360348b?s=128&d=identicon&r=PG", "display_name": "ritiek", "link": "https://stackoverflow.com/users/6554943/ritiek"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 418, "favorite_count": 0, "accepted_answer_id": 47036788, "answer_count": 1, "score": 1, "last_activity_date": 1509477693, "creation_date": 1508509581, "last_edit_date": 1508510080, "question_id": 46851258, "link": "https://stackoverflow.com/questions/46851258/how-to-implement-sync-for-rustbox", "title": "How to implement Sync for RustBox?", "body": "<p>I am new to threads in Rust. I am struggling to pass the <a href=\"https://docs.rs/rustbox/0.9.0/rustbox/struct.RustBox.html\" rel=\"nofollow noreferrer\"><code>RustBox</code> type</a> from the <a href=\"https://github.com/gchp/rustbox\" rel=\"nofollow noreferrer\">rustbox</a> crate within threads.</p>\n\n<p>I want to press the <kbd>q</kbd> key and have it display a <code>+</code> symbol for 2 secs at (1, 1) while I press <kbd>w</kbd> key within those 2 secs which shows another <code>+</code> symbol at (1, 2).</p>\n\n<p>I wrote some code for the same logic:</p>\n\n<pre><code>extern crate rustbox;\n\nuse std::thread;\nuse std::time::Duration;\n\nuse rustbox::{Color, RustBox};\nuse rustbox::Key;\n\n\nfn mark_at(x: usize, y: usize, rustbox: &amp;RustBox) {\n    rustbox.print(x, y, rustbox::RB_BOLD, Color::Black, Color::White, \"+\");\n    thread::spawn(move || {\n        let delay = Duration::from_millis(2000);\n        thread::sleep(delay);\n        rustbox.print(x, y, rustbox::RB_BOLD, Color::Black, Color::White, \" \");\n    });\n}\n\n\nfn main() {\n    let rustbox = match RustBox::init(Default::default()) {\n        Result::Ok(v) =&gt; v,\n        Result::Err(e) =&gt; panic!(\"{}\", e),\n    };\n    rustbox.print(1, 1, rustbox::RB_BOLD, Color::Black, Color::White, \" \");\n    rustbox.print(1, 2, rustbox::RB_BOLD, Color::Black, Color::White, \" \");\n\n    loop {\n        rustbox.present();\n        match rustbox.poll_event(false) {\n            Ok(rustbox::Event::KeyEvent(key)) =&gt; {\n                match key {\n                    Key::Char('q') =&gt; {\n                        mark_at(1, 1, &amp;rustbox);\n                    }\n                    Key::Char('w') =&gt; {\n                        mark_at(1, 2, &amp;rustbox);\n                    }\n                    Key::Esc =&gt; { break; }\n                    _ =&gt; { }\n                }\n            },\n            Err(e) =&gt; panic!(\"{}\", e),\n            _ =&gt; { }\n        }\n    }\n}\n</code></pre>\n\n<p>It gives me:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `*mut (): std::marker::Sync` is not satisfied in `rustbox::RustBox`\n  --&gt; src/main.rs:12:5\n   |\n12 |     thread::spawn(move || {\n   |     ^^^^^^^^^^^^^ `*mut ()` cannot be shared between threads safely\n   |\n   = help: within `rustbox::RustBox`, the trait `std::marker::Sync` is not implemented for `*mut ()`\n   = note: required because it appears within the type `std::marker::PhantomData&lt;*mut ()&gt;`\n   = note: required because it appears within the type `rustbox::RustBox`\n   = note: required because of the requirements on the impl of `std::marker::Send` for `&amp;rustbox::RustBox`\n   = note: required because it appears within the type `[closure@src/main.rs:12:19: 16:6 rustbox:&amp;rustbox::RustBox, x:usize, y:usize]`\n   = note: required by `std::thread::spawn`\n\nerror: aborting due to previous error\n</code></pre>\n\n<p>How do I implement <code>Sync</code> for the <code>RustBox</code> type so that above code could work?</p>\n"}, {"tags": ["nested", "rust"], "comments": [{"owner": {"reputation": 863, "user_id": 212505, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/814b4c1033520039b0d28bf8b1d45cc2?s=128&d=identicon&r=PG", "display_name": "Geodesic", "link": "https://stackoverflow.com/users/212505/geodesic"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1508510563, "post_id": 46849379, "comment_id": 80650536, "body": "@trentcl: I&#39;d be happy with a recursive suggestion too, I just had a lot of issues with borrows and referencing when I tried that route myself."}], "answers": [{"comments": [{"owner": {"reputation": 863, "user_id": 212505, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/814b4c1033520039b0d28bf8b1d45cc2?s=128&d=identicon&r=PG", "display_name": "Geodesic", "link": "https://stackoverflow.com/users/212505/geodesic"}, "edited": false, "score": 0, "creation_date": 1508705196, "post_id": 46854662, "comment_id": 80705013, "body": "Perfect! Precisely what I was after. Thank you for introducing me to petgraph too, that will no doubt come in handy in the future."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1508521871, "creation_date": 1508521871, "answer_id": 46854662, "question_id": 46849379, "link": "https://stackoverflow.com/questions/46849379/transforming-a-list-of-structs-with-parent-ids-into-a-list-of-trees/46854662#46854662", "title": "Transforming a list of structs with parent IDs into a list of trees", "body": "<p>The straight-line solution involves building up a graph of all your data and traversing it recursively, returning the <code>Bar</code> from each level and collecting them.</p>\n\n<p>We start by creating a <code>petgraph::DiGraphMap</code> \u2014 a directed graph that allows us to control the node IDs (since we just have numeric identifiers). If a node has a parent, we ensure that exists in the graph and add an edge from the parent to the child. If it doesn't have a parent, we know that it will be one of our top-level ids, so we stash it aside for later:</p>\n\n<pre><code>let mut graph = DiGraphMap::new();\nlet mut top_level_ids = vec![];\n\nfor i in &amp;input {\n    graph.add_node(i.id);\n\n    match i.parent {\n        Some(parent_id) =&gt; {\n            graph.add_node(parent_id);\n            graph.add_edge(parent_id, i.id, ());\n        }\n        None =&gt; {\n            top_level_ids.push(i.id);\n        }\n    }\n}\n</code></pre>\n\n<p>Next, we iterate over all of the top-level IDs and convert them into a <code>Bar</code>:</p>\n\n<pre><code>let result: Vec&lt;_&gt; = top_level_ids\n    .into_iter()\n    .map(|id| build_tree(&amp;graph, id))\n    .collect();\n</code></pre>\n\n<p>Building a <code>Bar</code> is the recursive core of the problem. We construct another <code>Bar</code> for each child, stuff them all into a <code>Vec</code>, then return the current <code>Bar</code>:</p>\n\n<pre><code>fn build_tree(graph: &amp;DiGraphMap&lt;i32, ()&gt;, id: i32) -&gt; Bar {\n    let children = graph\n        .neighbors(id)\n        .map(|child_id| build_tree(graph, child_id))\n        .collect();\n\n    Bar { id, children }\n}\n</code></pre>\n\n<p>At this point, you have a <code>Vec&lt;Bar&gt;</code>. It's an exercise for the reader how to properly encode this for the desired JSON format :-).</p>\n\n<p><a href=\"https://play.integer32.com/?gist=572b4d776fdded61641bf9d7187081f5&amp;version=stable\" rel=\"nofollow noreferrer\">The complete example</a>.</p>\n"}], "owner": {"reputation": 863, "user_id": 212505, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/814b4c1033520039b0d28bf8b1d45cc2?s=128&d=identicon&r=PG", "display_name": "Geodesic", "link": "https://stackoverflow.com/users/212505/geodesic"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 113, "favorite_count": 0, "accepted_answer_id": 46854662, "answer_count": 1, "score": 2, "last_activity_date": 1508521871, "creation_date": 1508503548, "last_edit_date": 1508519005, "question_id": 46849379, "link": "https://stackoverflow.com/questions/46849379/transforming-a-list-of-structs-with-parent-ids-into-a-list-of-trees", "title": "Transforming a list of structs with parent IDs into a list of trees", "body": "<p>I'm pulling a dataset from a database which gives me a vector of structs of the form:</p>\n\n<pre><code>struct Foo {\n    id: i32,\n    parent: Option&lt;i32&gt;,\n    data: String,\n}\n</code></pre>\n\n<p>I would like to serialize and output to JSON the nested version of this data as a vector of:</p>\n\n<pre><code>struct Bar {\n    id: i32,\n    data: String,\n    children: Option&lt;Vec&lt;Bar&gt;&gt;,\n}\n</code></pre>\n\n<p>I'm having some issues wrapping my head around the implementation of this due to the recursive nature. I can solve the problem one level down using iterators, but then hit a wall when I want to iterate again over the same vector.</p>\n\n<p>For example, a method on <code>Vec&lt;Foo&gt;</code> which attempts to just nest children ids into a hashmap:</p>\n\n<pre><code>fn build_tree(&amp;self) -&gt; HashMap&lt;i32, Vec&lt;i32&gt;&gt; {\n    let mut tree = HashMap::new();\n    for node in self.iter() {\n        if let Some(parent) = node.parent {\n            let leaf = tree.entry(parent).or_insert(Vec::new());\n            leaf.push(node.id);\n        }\n    }\n    tree\n}\n</code></pre>\n\n<p>yields</p>\n\n<pre><code>{14: [15], 3: [14], 1: [2, 17], 2: [16, 18], 18: [19], 19: [20]}\n</code></pre>\n\n<p>But what I require would be something deeper:</p>\n\n<pre><code>{3: [14: [15]], 1: [2: [16, 18: [19: [20]]], 17]}\n</code></pre>\n\n<p>Reading through <a href=\"https://users.rust-lang.org/t/alternative-way-of-thinking-a-recursion-algorithm-to-avoid-stack-overflow/13378\" rel=\"nofollow noreferrer\">this post</a> about turning a recursive idea into iterative code suggests that such an implementation is possible, but I've had difficulty taking the ideas from that problem and applying them here.</p>\n\n<p>Can someone describe a method for transforming this <code>Vec&lt;Foo&gt;</code> to a <code>Vec&lt;Bar&gt;</code>? I'd be happy with an iterative or recursive suggestion; I just had a lot of issues with borrows and referencing when I tried recursion myself.</p>\n"}, {"tags": ["rust", "ffi"], "answers": [{"tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 2, "last_activity_date": 1508486348, "creation_date": 1508486348, "answer_id": 46844691, "question_id": 46844611, "link": "https://stackoverflow.com/questions/46844611/how-do-i-create-ffi-bindings-to-c-functions-expecting-or-ed-bytes/46844691#46844691", "title": "How do I create FFI bindings to C functions expecting OR-ed bytes?", "body": "<p>The problem is that C's <code>enum</code> and Rust's <code>enum</code> are <strong>very</strong> different things.  In particular, C allows an <code>enum</code> to have absolutely any value whatsoever, whether or not that value corresponds to a variant.</p>\n\n<p>Rust does not.  Rust <em>relies</em> on <code>enum</code>s only ever having a single value of a defined variant, or you run the risk of undefined behaviour.</p>\n\n<p>What you have is not an enumeration (in the Rust sense), you have are bit flags, for which you want the <a href=\"https://crates.io/crates/bitflags\" rel=\"nofollow noreferrer\"><code>bitflags</code></a> crate.</p>\n\n<p>As for the stack overflow, that's just because you defined the <code>BitOr</code> implementations in terms of itself; that code is unconditionally recursive.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 3, "last_activity_date": 1508514847, "last_edit_date": 1508514847, "creation_date": 1508504836, "answer_id": 46849754, "question_id": 46844611, "link": "https://stackoverflow.com/questions/46844611/how-do-i-create-ffi-bindings-to-c-functions-expecting-or-ed-bytes/46849754#46849754", "title": "How do I create FFI bindings to C functions expecting OR-ed bytes?", "body": "<p>As DK. mentioned:</p>\n\n<ul>\n<li>C's <code>enum</code> and Rust's <code>enum</code> have different restrictions.</li>\n<li>It's not valid to have a Rust enum that isn't one of the enum variants.</li>\n<li>What you have is called \"bitflags\"</li>\n</ul>\n\n<p>Luckily, Bindgen understands bitflags. If you generate your headers while passing the <code>bitfield-enum</code> flag or by using <a href=\"https://docs.rs/bindgen/0.30.0/bindgen/struct.Builder.html#method.bitfield_enum\" rel=\"nofollow noreferrer\"><code>Builder::bitfield_enum</code></a>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>bindgen --bitfield-enum modbus_error_recovery_mode fake-modbus.h\n</code></pre>\n\n<p>Bindgen will generate constants for each C enum value, a newtype wrapper, and implementations of the <code>Bit*</code> traits:</p>\n\n<pre><code>// Many implementation details removed \n\npub struct modbus_error_recovery_mode(pub ::std::os::raw::c_uint);\n\npub const modbus_error_recovery_mode_MODBUS_ERROR_RECOVERY_NONE: modbus_error_recovery_mode =\n    modbus_error_recovery_mode(0);    \npub const modbus_error_recovery_mode_MODBUS_ERROR_RECOVERY_LINK: modbus_error_recovery_mode =\n    modbus_error_recovery_mode(2);\npub const modbus_error_recovery_mode_MODBUS_ERROR_RECOVERY_PROTOCOL: modbus_error_recovery_mode =\n    modbus_error_recovery_mode(4);\n\nimpl ::std::ops::BitOr&lt;modbus_error_recovery_mode&gt; for modbus_error_recovery_mode {}\nimpl ::std::ops::BitOrAssign for modbus_error_recovery_mode {}\nimpl ::std::ops::BitAnd&lt;modbus_error_recovery_mode&gt; for modbus_error_recovery_mode {} \nimpl ::std::ops::BitAndAssign for modbus_error_recovery_mode {}\n\nextern \"C\" {\n    pub fn modbus_set_error_recovery(\n        ctx: *mut modbus_t,\n        error_recovery: modbus_error_recovery_mode,\n    ) -&gt; ::std::os::raw::c_int;\n}\n</code></pre>\n\n<hr>\n\n<blockquote>\n  <p>How do I expose the bindgen generated constants to the public</p>\n</blockquote>\n\n<p>Of course, creating an idiomatic Rust API to non-Rust code is the hard part. I might try something like this:</p>\n\n<pre><code>#[derive(Debug)]\nstruct Modbus(*mut raw::modbus_t);\n\n#[derive(Debug)]\nstruct Error;\n\n#[derive(Debug, Copy, Clone)]\nenum ErrorRecovery {\n    Link,\n    Protocol,\n}\n\nimpl ErrorRecovery {\n    fn as_raw(&amp;self) -&gt; raw::modbus_error_recovery_mode {\n        use ErrorRecovery::*;\n\n        match *self {\n            Link =&gt; raw::modbus_error_recovery_mode_MODBUS_ERROR_RECOVERY_LINK,\n            Protocol =&gt; raw::modbus_error_recovery_mode_MODBUS_ERROR_RECOVERY_PROTOCOL,\n        }\n    }\n}\n\nimpl Modbus {\n    fn set_error_recovery(&amp;mut self, flags: Option&lt;&amp;[ErrorRecovery]&gt;) -&gt; Result&lt;(), Error&gt; {\n        let flag = flags.unwrap_or(&amp;[]).iter().fold(\n            raw::modbus_error_recovery_mode_MODBUS_ERROR_RECOVERY_NONE,\n            |acc, v| acc | v.as_raw(),\n        );\n\n        let res = unsafe { raw::modbus_set_error_recovery(self.0, flag) };\n        Ok(()) // real error checking\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 4962, "user_id": 231441, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/P2kt4.png?s=128&g=1", "display_name": "zzeroo", "link": "https://stackoverflow.com/users/231441/zzeroo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 239, "favorite_count": 0, "accepted_answer_id": 46844691, "answer_count": 2, "score": 0, "last_activity_date": 1508514847, "creation_date": 1508486017, "last_edit_date": 1508504870, "question_id": 46844611, "link": "https://stackoverflow.com/questions/46844611/how-do-i-create-ffi-bindings-to-c-functions-expecting-or-ed-bytes", "title": "How do I create FFI bindings to C functions expecting OR-ed bytes?", "body": "<p>I tried to create FFI bindings to <a href=\"http://libmodbus.org/docs/v3.1.4/modbus_set_error_recovery.html\" rel=\"nofollow noreferrer\">libmodbus</a>, written in C.\nHere I stumble upon this <a href=\"https://github.com/stephane/libmodbus/blob/master/tests/unit-test-client.c#L97\" rel=\"nofollow noreferrer\">function</a></p>\n\n<pre><code>modbus_set_error_recovery(ctx,\n                          MODBUS_ERROR_RECOVERY_LINK |\n                          MODBUS_ERROR_RECOVERY_PROTOCOL);\n</code></pre>\n\n<p>The second parameter is defined as</p>\n\n<pre><code>typedef enum\n{\n    MODBUS_ERROR_RECOVERY_NONE          = 0,\n    MODBUS_ERROR_RECOVERY_LINK          = (1&lt;&lt;1),\n    MODBUS_ERROR_RECOVERY_PROTOCOL      = (1&lt;&lt;2)\n} modbus_error_recovery_mode;\n</code></pre>\n\n<p>My <code>bindgen</code>-generated bindings are these:</p>\n\n<pre><code>#[repr(u32)]\n#[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]\npub enum modbus_error_recovery_mode {\n    MODBUS_ERROR_RECOVERY_NONE = 0,\n    MODBUS_ERROR_RECOVERY_LINK = 2,\n    MODBUS_ERROR_RECOVERY_PROTOCOL = 4,\n}\n</code></pre>\n\n<p>and</p>\n\n<pre><code>extern \"C\" {\n    pub fn modbus_set_error_recovery(ctx: *mut modbus_t,\n                                     error_recovery:\n                                         modbus_error_recovery_mode)\n     -&gt; ::std::os::raw::c_int;\n}\n</code></pre>\n\n<p>My safe interface looks like this, so far:</p>\n\n<pre><code>pub fn set_error_recovery(&amp;mut self, error_recovery_mode: ErrorRecoveryMode) -&gt; Result&lt;()&gt; {\n\n    unsafe {\n        match ffi::modbus_set_error_recovery(self.ctx, error_recovery_mode.to_c()) {\n            -1 =&gt; bail!(Error::last_os_error()),\n            0 =&gt; Ok(()),\n            _ =&gt; panic!(\"libmodbus API incompatible response\"),\n        }\n    }\n}\n</code></pre>\n\n<p>and</p>\n\n<pre><code>use std::ops::BitOr;\n\n#[derive(Clone, Copy, PartialEq, Eq)]\npub enum ErrorRecoveryMode {\n    NONE = 0,\n    Link = 2,\n    Protocol = 4,\n}\n\nimpl ErrorRecoveryMode {\n    pub fn to_c(self) -&gt; ffi::modbus_error_recovery_mode {\n        match self {\n            NONE =&gt; ffi::modbus_error_recovery_mode::MODBUS_ERROR_RECOVERY_NONE,\n            Link =&gt; ffi::modbus_error_recovery_mode::MODBUS_ERROR_RECOVERY_LINK,\n            Protocol =&gt; ffi::modbus_error_recovery_mode::MODBUS_ERROR_RECOVERY_PROTOCOL,\n        }\n    }\n}\n\nimpl BitOr for ErrorRecoveryMode {\n    type Output = Self;\n    fn bitor(self, rhs: ErrorRecoveryMode) -&gt; ErrorRecoveryMode {\n        self | rhs\n    }\n}\n</code></pre>\n\n<p>This triggered a stack overflow if I call <code>set_error_recovery</code> like this</p>\n\n<pre><code>assert!(modbus.set_error_recovery(ErrorRecoveryMode::Link | ErrorRecoveryMode::Protocol).is_ok())\n</code></pre>\n\n<p>The error is</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>thread 'set_error_recovery' has overflowed its stack\nfatal runtime error: stack overflow\n</code></pre>\n"}, {"tags": ["rust", "rust-tokio"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1508533781, "post_id": 46836933, "comment_id": 80662351, "body": "Why are you using <code>TcpStream::connect</code> if you wish to run a server?"}, {"owner": {"reputation": 849, "user_id": 5745120, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/7127d653b208611f48e4d73b7b7f8aec?s=128&d=identicon&r=PG", "display_name": "Sergey", "link": "https://stackoverflow.com/users/5745120/sergey"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1508534585, "post_id": 46836933, "comment_id": 80662674, "body": "@Shepmaster right now I&#39;m trying to read anything. It&#39;s more convenient this way - I just run listener using <code>ncat</code>. I think that reading socket should be similar for server and client."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1508604444, "last_edit_date": 1508604444, "creation_date": 1508599520, "answer_id": 46864830, "question_id": 46836933, "link": "https://stackoverflow.com/questions/46836933/how-can-i-read-from-a-tokio-tcp-connection-without-using-the-tokio-proto-crate/46864830#46864830", "title": "How can I read from a tokio TCP connection without using the tokio_proto crate?", "body": "<p>Rust is a compiled language, which means that you should <em>pay attention</em> to the warnings that the compiler generates:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning: unused `std::result::Result` which must be used\n  --&gt; src/main.rs:20:9\n   |\n20 | /         stream\n21 | |             .read_buf(&amp;mut buf)\n22 | |             .map(|buf| print!(\"Buffer {:?}\", buf))\n23 | |             .map_err(|e| eprintln!(\"Error: {}\", e));\n   | |____________________________________________________^\n   |\n   = note: #[warn(unused_must_use)] on by default\n</code></pre>\n\n<p>Additionally, <a href=\"https://tokio.rs/docs/going-deeper-tokio/core-low-level/\" rel=\"nofollow noreferrer\">tokio has an entire chapter dedicated to low-level IO</a> which I'll assume you've read to not bore you with details you already know.</p>\n\n<p>First we take the <code>connection</code> <code>Future</code> and convert it into a <code>Stream</code>. A stream can yield multiple values \u2014 in this case we return one value for every successful read. We create <code>AsWeGetIt</code> for the simplest implementation of this.</p>\n\n<p>We then print out each value of the stream using <code>Stream::for_each</code>. Conveniently, this performs the corresponding conversion back to a <code>Future</code>, which is what is needed for <code>and_then</code>. </p>\n\n<pre><code>extern crate bytes;\nextern crate futures;\nextern crate tokio_core;\nextern crate tokio_io;\n\nuse futures::{Future, Poll, Stream};\nuse tokio_core::net::TcpStream;\nuse tokio_core::reactor::Core;\nuse tokio_io::AsyncRead;\nuse bytes::BytesMut;\n\nstruct AsWeGetIt&lt;R&gt;(R);\n\nimpl&lt;R&gt; Stream for AsWeGetIt&lt;R&gt;\nwhere\n    R: AsyncRead,\n{\n    type Item = BytesMut;\n    type Error = std::io::Error;\n\n    fn poll(&amp;mut self) -&gt; Poll&lt;Option&lt;Self::Item&gt;, Self::Error&gt; {\n        let mut buf = BytesMut::with_capacity(1000);\n\n        self.0\n            .read_buf(&amp;mut buf)\n            .map(|async| async.map(|_| Some(buf)))\n    }\n}\n\nfn main() {\n    let mut core = Core::new().unwrap();\n    let handle = core.handle();\n\n    let address = \"127.0.0.1:8081\".parse().expect(\"Unable to parse address\");\n    let connection = TcpStream::connect(&amp;address, &amp;handle);\n\n    let client = connection\n        .and_then(|tcp_stream| {\n            AsWeGetIt(tcp_stream).for_each(|buf| {\n                println!(\"Buffer {:?}\", buf);\n                Ok(())\n            })\n        })\n        .map_err(|e| eprintln!(\"Error: {}\", e));\n\n    core.run(client).expect(\"Unable to run the event loop\");\n}\n</code></pre>\n"}], "owner": {"reputation": 849, "user_id": 5745120, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/7127d653b208611f48e4d73b7b7f8aec?s=128&d=identicon&r=PG", "display_name": "Sergey", "link": "https://stackoverflow.com/users/5745120/sergey"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1785, "favorite_count": 1, "accepted_answer_id": 46864830, "answer_count": 1, "score": 1, "last_activity_date": 1508604444, "creation_date": 1508439280, "last_edit_date": 1508599619, "question_id": 46836933, "link": "https://stackoverflow.com/questions/46836933/how-can-i-read-from-a-tokio-tcp-connection-without-using-the-tokio-proto-crate", "title": "How can I read from a tokio TCP connection without using the tokio_proto crate?", "body": "<p>I'm trying to write a TCP client to print incoming messages. I came up with the following code:</p>\n\n<pre><code>extern crate bytes;\nextern crate futures;\nextern crate tokio_core;\nextern crate tokio_io;\n\nuse futures::Future;\nuse tokio_core::net::TcpStream;\nuse tokio_core::reactor::Core;\nuse tokio_io::AsyncRead;\nuse bytes::BytesMut;\n\nfn main() {\n    let mut core = Core::new().unwrap();\n    let handle = core.handle();\n\n    let connection = TcpStream::connect(&amp;\"127.0.0.1:8081\".parse().unwrap(), &amp;handle);\n\n    let server = connection.and_then(move |mut stream| {\n        let mut buf = BytesMut::with_capacity(1000);\n        stream\n            .read_buf(&amp;mut buf)\n            .map(|buf| print!(\"Buffer {:?}\", buf))\n            .map_err(|e| eprintln!(\"Error: {}\", e));\n        Ok(())\n    });\n\n    core.run(server).unwrap();\n}\n</code></pre>\n\n<p>It compiles but it fails with a <code>Buffer NotReady</code> error.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1508432410, "post_id": 46833271, "comment_id": 80617896, "body": "Interesting. Not sure if this counts as a bug -- I don&#39;t think you can induce unsafety because there&#39;s no way to read the memory afterwards. But if you keep a raw pointer to the stack you can tell that <code>n1Mut.next</code> does indeed get set: <a href=\"https://play.rust-lang.org/?gist=d41422bfd142c289667e7c2fb3183be0&amp;version=undefined\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1508433583, "post_id": 46833271, "comment_id": 80618474, "body": "Interestingly, it&#39;s not possible to even use <code>n1_mut.next</code> after. Also, adding a <code>Drop</code> implementation causes: &quot;error[E0383]: partial reinitialization of uninitialized structure <code>n1_mut</code>&quot;"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 8, "last_activity_date": 1508437722, "last_edit_date": 1508437722, "creation_date": 1508436979, "answer_id": 46836391, "question_id": 46833271, "link": "https://stackoverflow.com/questions/46833271/why-is-assigning-to-a-member-of-a-pointer-still-valid-after-the-pointer-is-moved/46836391#46836391", "title": "Why is assigning to a member of a pointer still valid after the pointer is moved?", "body": "<p>This doesn't have anything to do with being a pointer or not; this works as well:</p>\n\n<pre><code>#[derive(Debug)]\nstruct NonCopy;\n\n#[derive(Debug)]\nstruct Example {\n    name: NonCopy,\n}\n\nfn main() {\n    let mut foo = Example {\n        name: NonCopy,\n    };\n\n    drop(foo);\n\n    foo.name = NonCopy;\n}\n</code></pre>\n\n<p>Although I can't find the similar SO question that I know I've seen before, this <a href=\"https://internals.rust-lang.org/t/modifying-a-moved-field/724/6\" rel=\"noreferrer\">quote from nikomatsakis</a> describes it:</p>\n\n<blockquote>\n  <p>In general moves are tracked at a pretty narrow level of granularity. We intend to eventually permit you to \"fill\" both fields back in and then use the structure again. I guess that doesn't work today. I have to go look again at the moves code, but I think in general one of the things I'd like to pursue post 1.0 is extending the type system to deal better with things that have been moved from (in particular I want to support moves out of &amp;mut pointers, so long as you restore the value before doing anything fallible). Anyway I think this example more-or-less falls out of treating things in a general way, though you could imagine rules that say \"if you move f, you can never again touch any subfields of f without restoring f as a unit\".</p>\n</blockquote>\n\n<p>There's also discussion on <a href=\"https://www.reddit.com/r/rust/comments/5rkquz/why_can_we_assign_to_a_field_of_an_instance_of_a/?ref=share&amp;ref_source=link\" rel=\"noreferrer\">the Rust subreddit</a>, which links to Rust <a href=\"https://github.com/rust-lang/rust/issues/21232\" rel=\"noreferrer\">issue 21232: \"borrow-checker allows partial reinit of struct that has been moved away, but no use of it\"</a></p>\n\n<p>Conceptually, there's a flag for each of the fields in a struct in addition to the struct itself \u2014 I like to think of <a href=\"https://stackoverflow.com/a/32238327/155423\">Chris Morgan's cardboard box analogy</a>. You can move out of an owned struct's field so long as you move back in before using the struct:</p>\n\n<pre><code>drop(foo.name);\nfoo.name = NonCopy;\n\nprintln!(\"{:?}\", foo);\n</code></pre>\n\n<p>Evidently, since 2014, no one has bothered to put in the effort to enable marking the entire struct as valid again once the fields are re-filled. </p>\n\n<p>Realistically, you don't really need this functionality as you can just assign the entire variable at once. The current implementation is overly-safe as Rust is preventing you from doing something that seems OK.</p>\n"}], "owner": {"reputation": 623, "user_id": 3284063, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/22d05d22bd32fffe1a1a582f6d91ce8a?s=128&d=identicon&r=PG&f=1", "display_name": "user3284063", "link": "https://stackoverflow.com/users/3284063/user3284063"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 250, "favorite_count": 0, "accepted_answer_id": 46836391, "answer_count": 1, "score": 14, "last_activity_date": 1508438129, "creation_date": 1508426096, "last_edit_date": 1508438129, "question_id": 46833271, "link": "https://stackoverflow.com/questions/46833271/why-is-assigning-to-a-member-of-a-pointer-still-valid-after-the-pointer-is-moved", "title": "Why is assigning to a member of a pointer still valid after the pointer is moved?", "body": "<p>Why is <code>n1_mut</code> still valid in this example? It has been moved into <code>Option::Some</code> so shouldn't it be invalid? </p>\n\n<pre><code>struct MyRecordRec2&lt;'a&gt; {\n    pub id: u32,\n    pub name: &amp;'a str,\n    pub next: Box&lt;Option&lt;MyRecordRec2&lt;'a&gt;&gt;&gt;\n}\n\n#[test]\nfn creating_circular_recursive_data_structure() {\n    let mut n1_mut = MyRecordRec2 {\n        id: 1,\n        name: \"n1\",\n        next: Box::new(None)\n    };\n\n    let n2 = MyRecordRec2 {\n        id: 2,\n        name: \"n2\",\n        next: Box::new(Some(n1_mut))\n    };\n\n    //Why is n1_mut still valid?\n    n1_mut.next = Box::new(Some(n2));\n}\n</code></pre>\n\n<p>The following does not compile with the familiar \"use of moved value\"  error:</p>\n\n<pre><code>#[test]\nfn creating_and_freezing_circular_recursive_data_structure() {\n    let loop_entry = {\n        let mut n1_mut = MyRecordRec2 {\n            id: 1,\n            name: \"n1\",\n            next: Box::new(None),\n        };\n\n        let n2 = MyRecordRec2 {\n            id: 2,\n            name: \"n2\",\n            next: Box::new(Some(n1_mut)),\n        };\n\n        n1_mut.next = Box::new(Some(n2));\n\n        n1_mut\n    };\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0382]: use of moved value: `n1_mut`\n  --&gt; src/main.rs:44:9\n   |\n39 |             next: Box::new(Some(n1_mut)),\n   |                                 ------ value moved here\n...\n44 |         n1_mut\n   |         ^^^^^^ value used here after move\n   |\n   = note: move occurs because `n1_mut` has type `MyRecordRec2&lt;'_&gt;`, which does not implement the `Copy` trait\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1508423813, "post_id": 46832164, "comment_id": 80612422, "body": "The documentation on <a href=\"https://doc.rust-lang.org/stable/std/thread/struct.LocalKey.html\" rel=\"nofollow noreferrer\"><code>LocalKey</code></a> (created by <code>thread_local!</code>) is fairly clear here: <i>&quot;The <code>with</code> method yields a reference to the contained value which cannot be sent across threads or escape the given closure.&quot;</i> You&#39;d have to use <code>CONTEXT</code> directly in those places or provide a different API. Also note that your example contains a fair amount of code with other errors which do not quite relate to the question."}], "owner": {"reputation": 4768, "user_id": 787366, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/a49b6d8775416297257c4c4d36e39967?s=128&d=identicon&r=PG", "display_name": "Shmoopy", "link": "https://stackoverflow.com/users/787366/shmoopy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 91, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1508437878, "creation_date": 1508422847, "last_edit_date": 1508437878, "question_id": 46832164, "link": "https://stackoverflow.com/questions/46832164/implementing-a-per-thread-global-context-stack", "title": "Implementing a per-thread global context stack", "body": "<p>I'd like to implement a thread-local global stack such that each stack element represents what this thread is currently doing. Here's what I have:</p>\n\n<pre><code>use std::mem;\nuse std::cell::RefCell;\n\nstruct Activity {\n    description: String\n}\n\nstruct StackElement {\n    activity: Activity,\n    prev: StackNode\n}\n\ntype StackNode = Option&lt;Box&lt;StackElement&gt;&gt;;\n\nstruct Stack {\n    top: StackNode\n}\n\nthread_local!(static CONTEXT: RefCell&lt;Stack&gt; = RefCell::new( Stack { top: None }));\n\nstatic AMIT: u32 = 3;\n\nstruct StackDisposer&lt;'a&gt; {\n    stack: &amp;'a mut Stack\n}\n\nimpl&lt;'a&gt; Drop for StackDisposer&lt;'a&gt; {\n    fn drop(&amp;mut self) {\n        let prev = if let Some(ref mut boxed_element) = self.stack.top { (*boxed_element).prev } else { None };\n        mem::replace(&amp;mut self.stack.top, prev );\n    }\n}\n\nimpl Stack {\n    fn get_instance() -&gt; &amp;'static Stack {\n        // The compilation error is coming from here\n        CONTEXT.with(|s| {\n           &amp;*s.borrow_mut()\n        })\n    }\n\n    fn push_new_activity(&amp;mut self, description: String) -&gt; StackDisposer {\n        let element = Box::new(StackElement {\n            activity: Activity { description: description},\n            prev: mem::replace(&amp;mut self.top, None),\n        });\n        self.top = Some(element);\n        StackDisposer { stack: self }\n    }\n}\n</code></pre>\n\n<p>However, I'm getting a compilation error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for autoref due to conflicting requirements\n  --&gt; src/main.rs:38:16\n   |\n38 |            &amp;*s.borrow_mut()\n   |                ^^^^^^^^^^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #2 defined on the body at 37:22...\n  --&gt; src/main.rs:37:22\n   |\n37 |           CONTEXT.with(|s| {\n   |  ______________________^\n38 | |            &amp;*s.borrow_mut()\n39 | |         })\n   | |_________^\nnote: ...so that reference does not outlive borrowed content\n  --&gt; src/main.rs:38:14\n   |\n38 |            &amp;*s.borrow_mut()\n   |              ^\n   = note: but, the lifetime must be valid for the static lifetime...\nnote: ...so that reference does not outlive borrowed content\n  --&gt; src/main.rs:37:9\n   |\n37 | /         CONTEXT.with(|s| {\n38 | |            &amp;*s.borrow_mut()\n39 | |         })\n   | |__________^\n</code></pre>\n\n<p>The idea is that client code could write something like this:</p>\n\n<pre><code>fn foo() {\n    let disposer1 = Stack::get_instance().push_new_activity(\"outer_activity\");\n    {\n        let disposer2 = Stack::get_instance().push_new_activity(\"inner_activity\");\n        // ...\n        // \"inner_activity\" should be popped here\n    }\n    // ...\n    // \"outer_activity\" should be popped here\n}\n</code></pre>\n\n<p>How can I fix the compilation error?</p>\n"}, {"tags": ["tcp", "rust", "rust-tokio"], "answers": [{"tags": [], "owner": {"reputation": 2037, "user_id": 481812, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/9rtTd.png?s=128&g=1", "display_name": "Rbjz", "link": "https://stackoverflow.com/users/481812/rbjz"}, "is_accepted": false, "score": 0, "last_activity_date": 1508749073, "last_edit_date": 1508749073, "creation_date": 1508698445, "answer_id": 46877956, "question_id": 46830491, "link": "https://stackoverflow.com/questions/46830491/how-to-display-a-welcome-message-banner-when-a-client-connects-to-a-tokio-prot/46877956#46877956", "title": "How to display a welcome message / banner when a client connects to a tokio-proto server?", "body": "<p>Implementing my own stateful transport decorator (<code>SmtpConnectTransport</code>) did the trick. It will inject the given frame upon initialization. I imagine it could be made into a generic solution by taking the initframe type as a parameter. The codec in the end doesn't have to do anything out of ordinary then, besides parsing and serializing.</p>\n\n<p>With a frame coming right upon connection, the service can generate the desired welcome message or banner. I've included the local and remote socket addresses in the <code>SmtpCommand::Connect</code> for the benefit of the service as it will be used for spam detection.</p>\n\n<p>My hunch was correct, but working it out felt like rusty metal grinding indeed :D I'm happy now how this <a href=\"https://github.com/BrightOpen/Samotop/tree/7c666f9f996e177da76563d13e576ed34473ee73\" rel=\"nofollow noreferrer\">samotop is coming together</a>. Here's some code:</p>\n\n<pre><code>use std::io;\nuse std::str;\nuse bytes::Bytes;\nuse model::response::SmtpReply;\nuse model::request::SmtpCommand;\nuse protocol::codec::SmtpCodec;\nuse tokio_proto::streaming::pipeline::{Frame, Transport, ServerProto};\nuse tokio_io::codec::Framed;\nuse futures::{Stream, Sink, StartSend, Poll, Async};\nuse protocol::parser::SmtpParser;\nuse protocol::writer::SmtpSerializer;\n\ntype Error = io::Error;\ntype CmdFrame = Frame&lt;SmtpCommand, Bytes, Error&gt;;\ntype RplFrame = Frame&lt;SmtpReply, (), Error&gt;;\n\npub struct SmtpProto;\n\nimpl&lt;TIO: NetSocket + 'static&gt; ServerProto&lt;TIO&gt; for SmtpProto {\n    type Error = Error;\n    type Request = SmtpCommand;\n    type RequestBody = Bytes;\n    type Response = SmtpReply;\n    type ResponseBody = ();\n    type Transport = SmtpConnectTransport&lt;Framed&lt;TIO, SmtpCodec&lt;'static&gt;&gt;&gt;;\n    type BindTransport = io::Result&lt;Self::Transport&gt;;\n\n    fn bind_transport(&amp;self, io: TIO) -&gt; Self::BindTransport {\n        // save local and remote socket address so we can use it as the first frame\n        let initframe = Frame::Message {\n            body: false,\n            message: SmtpCommand::Connect {\n                local_addr: io.local_addr().ok(),\n                peer_addr: io.peer_addr().ok(),\n            },\n        };\n        let codec = SmtpCodec::new(\n            SmtpParser::session_parser(),\n            SmtpSerializer::answer_serializer(),\n        );\n        let upstream = io.framed(codec);\n        let transport = SmtpConnectTransport::new(upstream, initframe);\n        Ok(transport)\n    }\n}\n\npub struct SmtpConnectTransport&lt;TT&gt; {\n    initframe: Option&lt;CmdFrame&gt;,\n    upstream: TT,\n}\n\nimpl&lt;TT&gt; SmtpConnectTransport&lt;TT&gt; {\n    pub fn new(upstream: TT, initframe: CmdFrame) -&gt; Self {\n        Self {\n            upstream,\n            initframe: Some(initframe),\n        }\n    }\n}\n\nimpl&lt;TT&gt; Stream for SmtpConnectTransport&lt;TT&gt;\nwhere\n    TT: 'static + Stream&lt;Error = Error, Item = CmdFrame&gt;,\n{\n    type Error = Error;\n    type Item = CmdFrame;\n\n    fn poll(&amp;mut self) -&gt; Poll&lt;Option&lt;Self::Item&gt;, Self::Error&gt; {\n        match self.initframe.take() {\n            Some(frame) =&gt; {\n                println!(\"transport initializing\");\n                Ok(Async::Ready(Some(frame)))\n            }\n            None =&gt; self.upstream.poll(),\n        }\n    }\n}\n\nimpl&lt;TT&gt; Sink for SmtpConnectTransport&lt;TT&gt;\nwhere\n    TT: 'static + Sink&lt;SinkError = Error, SinkItem = RplFrame&gt;,\n{\n    type SinkError = Error;\n    type SinkItem = RplFrame;\n\n    fn start_send(&amp;mut self, request: Self::SinkItem) -&gt; StartSend&lt;Self::SinkItem, io::Error&gt; {\n        self.upstream.start_send(request)\n    }\n\n    fn poll_complete(&amp;mut self) -&gt; Poll&lt;(), io::Error&gt; {\n        self.upstream.poll_complete()\n    }\n\n    fn close(&amp;mut self) -&gt; Poll&lt;(), io::Error&gt; {\n        self.upstream.close()\n    }\n}\n\nimpl&lt;TT&gt; Transport for SmtpConnectTransport&lt;TT&gt;\nwhere\n    TT: 'static,\n    TT: Stream&lt;Error = Error, Item = CmdFrame&gt;,\n    TT: Sink&lt;SinkError = Error, SinkItem = RplFrame&gt;,\n{\n}\n\n\npub trait NetSocket: AsyncRead + AsyncWrite {\n    fn peer_addr(&amp;self) -&gt; Result&lt;SocketAddr&gt;;\n    fn local_addr(&amp;self) -&gt; Result&lt;SocketAddr&gt;;\n}\n\nimpl NetSocket for TcpStream {\n    fn peer_addr(&amp;self) -&gt; Result&lt;SocketAddr&gt; {\n        self.peer_addr()\n    }\n    fn local_addr(&amp;self) -&gt; Result&lt;SocketAddr&gt; {\n        self.local_addr()\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 2037, "user_id": 481812, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/9rtTd.png?s=128&g=1", "display_name": "Rbjz", "link": "https://stackoverflow.com/users/481812/rbjz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 164, "favorite_count": 1, "answer_count": 1, "score": 4, "last_activity_date": 1508749073, "creation_date": 1508418000, "last_edit_date": 1508419899, "question_id": 46830491, "link": "https://stackoverflow.com/questions/46830491/how-to-display-a-welcome-message-banner-when-a-client-connects-to-a-tokio-prot", "title": "How to display a welcome message / banner when a client connects to a tokio-proto server?", "body": "<p>A SMTP server should display a welcome message upon establishing connection (220 service ready) which is a signal for the client to start sending commands. This seems to be in conflict with the request-response paradigm of tokio-proto.</p>\n\n<p>I can imagine protocols could be completely inverted such as server sending requests and client responses (deprecated TURN), but for the moment I'm only concerned with the welcome message upon connection, aka banner. After that the client request => server response would be upheld.</p>\n\n<p>I keep trying to figure where to hook this in, but the <code>bind_server</code>, <code>bind_transport</code> are super cryptic to me. Do I need to implement the transport?</p>\n\n<p>I have this in the <code>decode</code> method of the codec. The problem is the <code>decode</code> method is not called unless there is data available to decode which kind of makes sense. I would expect there to be some connection initialization method to hook into but I've found nothing.</p>\n\n<pre><code>fn decode(&amp;mut self, buf: &amp;mut BytesMut) -&gt; Result {\n\n    if !self.initialized {\n        println!(\n            \"new connection from {:?} to {:?}\",\n            self.peer_addr,\n            self.local_addr\n        );\n\n        self.requests.push(SmtpCommand::Connect {\n            local_addr: self.local_addr,\n            peer_addr: self.peer_addr,\n        });\n\n        self.initialized = true;\n    }\n    //... snip\n    match self.requests.is_empty() {\n        true =&gt; Ok(None),\n        false =&gt; Ok(Some(self.requests.remove(0))),\n    }\n}\n</code></pre>\n\n<p>My <a href=\"https://github.com/jocutajar/ResistRustNot.SmtpServer/tree/develop\" rel=\"nofollow noreferrer\">work-in-progress study project is on GitHub</a> and I've also <a href=\"https://github.com/tokio-rs/tokio-proto/issues/191\" rel=\"nofollow noreferrer\">opened an issue with tokio-proto</a>.</p>\n"}, {"tags": ["import", "module", "rust", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 2836, "user_id": 3529197, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/ceed214a6e603c456a8ebaacc036b407?s=128&d=identicon&r=PG&f=1", "display_name": "Neo", "link": "https://stackoverflow.com/users/3529197/neo"}, "edited": false, "score": 2, "creation_date": 1508415492, "post_id": 46829631, "comment_id": 80606652, "body": "Thank you so much! I was almost sure there is no such option."}, {"owner": {"reputation": 2836, "user_id": 3529197, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/ceed214a6e603c456a8ebaacc036b407?s=128&d=identicon&r=PG&f=1", "display_name": "Neo", "link": "https://stackoverflow.com/users/3529197/neo"}, "edited": false, "score": 3, "creation_date": 1508415623, "post_id": 46829631, "comment_id": 80606727, "body": "I read that chapter, but didn&#39;t understand from it I could do what you describe."}, {"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "reply_to_user": {"reputation": 2836, "user_id": 3529197, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/ceed214a6e603c456a8ebaacc036b407?s=128&d=identicon&r=PG&f=1", "display_name": "Neo", "link": "https://stackoverflow.com/users/3529197/neo"}, "edited": false, "score": 1, "creation_date": 1508415772, "post_id": 46829631, "comment_id": 80606817, "body": "@Neo: No problem! I find the module system makes sense once you&#39;ve got a feel for it, but there&#39;s definitely a bit of a learning curve - <a href=\"https://github.com/rust-lang/rfcs/pull/2126\" rel=\"nofollow noreferrer\">there&#39;s currently work being done to simplify things a bit</a>."}, {"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "reply_to_user": {"reputation": 2836, "user_id": 3529197, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/ceed214a6e603c456a8ebaacc036b407?s=128&d=identicon&r=PG&f=1", "display_name": "Neo", "link": "https://stackoverflow.com/users/3529197/neo"}, "edited": false, "score": 0, "creation_date": 1508420645, "post_id": 46829631, "comment_id": 80610124, "body": "@Neo: I&#39;d also recommend this blog post on how to mentally model the module system: <a href=\"http://manishearth.github.io/blog/2017/05/14/mentally-modelling-modules\" rel=\"nofollow noreferrer\">manishearth.github.io/blog/2017/05/14/&hellip;</a>"}], "tags": [], "owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "is_accepted": true, "score": 44, "last_activity_date": 1570894983, "last_edit_date": 1570894983, "creation_date": 1508415315, "answer_id": 46829631, "question_id": 46829539, "link": "https://stackoverflow.com/questions/46829539/how-to-include-files-from-same-directory-in-a-module-using-cargo-rust/46829631#46829631", "title": "How to include files from same directory in a module using Cargo/Rust?", "body": "<p>All of your top level module declarations should go in <code>main.rs</code>, like so:</p>\n\n<pre><code>mod mod1;\nmod mod2;\n\nfn main() {\n    println!(\"Hello, world!\");\n    mod1::mod1fn();\n}\n</code></pre>\n\n<p>You can then <code>use crate::mod2</code> inside <code>mod1</code>:</p>\n\n<pre><code>use crate::mod2;\n\npub fn mod1fn() {\n    println!(\"1\");\n    mod2::mod2fn();\n}\n</code></pre>\n\n<p>I'd recommend reading <a href=\"https://doc.rust-lang.org/book/second-edition/ch07-00-modules.html\" rel=\"noreferrer\">the chapter on modules in the new version of the Rust book</a> if you haven't already - they can be a little confusing for people who are new to the language.</p>\n"}, {"tags": [], "owner": {"reputation": 307, "user_id": 5133524, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/aR2zU.jpg?s=128&g=1", "display_name": "giuliano-oliveira", "link": "https://stackoverflow.com/users/5133524/giuliano-oliveira"}, "is_accepted": false, "score": 0, "last_activity_date": 1618749369, "creation_date": 1618749369, "answer_id": 67148598, "question_id": 46829539, "link": "https://stackoverflow.com/questions/46829539/how-to-include-files-from-same-directory-in-a-module-using-cargo-rust/67148598#67148598", "title": "How to include files from same directory in a module using Cargo/Rust?", "body": "<p>If you don't want your <code>mod</code> statements all in your main file (eg: in <code>main.rs</code> you won't use some public members inside some module, in this example it is <code>mod2</code>) you can do the following:</p>\n<p>structure your <code>src</code> this way:</p>\n<pre><code>main.rs\nmy_module:\n  mod.rs\n  mod1.rs\n  mod2.rs\n</code></pre>\n<p>then you can just <code>mod my_module</code> and <code>use my_module::mod1</code>, like so:</p>\n<p>main.rs:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>mod my_module;\nuse my_module::mod1;\n\nfn main() {\n    println!(&quot;Hello, world!&quot;);\n    mod1::mod1fn();\n}\n</code></pre>\n<p>my_module/mod.rs</p>\n<pre><code>pub mod mod1;\npub mod mod2;\n</code></pre>\n<p>my_module/mod1.rs</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use super::mod2;\n\npub fn mod1fn() {\n    println!(&quot;1&quot;);\n    mod2::mod2fn();\n}\n</code></pre>\n"}], "owner": {"reputation": 2836, "user_id": 3529197, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/ceed214a6e603c456a8ebaacc036b407?s=128&d=identicon&r=PG&f=1", "display_name": "Neo", "link": "https://stackoverflow.com/users/3529197/neo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 12434, "favorite_count": 5, "accepted_answer_id": 46829631, "answer_count": 2, "score": 22, "last_activity_date": 1618749369, "creation_date": 1508415017, "last_edit_date": 1508419424, "question_id": 46829539, "link": "https://stackoverflow.com/questions/46829539/how-to-include-files-from-same-directory-in-a-module-using-cargo-rust", "title": "How to include files from same directory in a module using Cargo/Rust?", "body": "<p>I have a Cargo project consisting of three files in the same directory: <code>main.rs</code>, <code>mod1.rs</code> and <code>mod2.rs</code>.  </p>\n\n<p>I want to import functions from <code>mod2.rs</code> to <code>mod1.rs</code> the same way I would import functions from <code>mod1.rs</code> to <code>main.rs</code>.<br>\nI've read about the file structure required but I don't get it - naming all the imported files <code>mod</code> will lead to minor confusion in the editor and also this just complicates the project hierarchy.  </p>\n\n<p>Is there a way to import/include files independently of directory structure as I would in Python or C++? </p>\n\n<p>main.rs:</p>\n\n<pre><code>mod mod1; // Works\n\nfn main() {\n    println!(\"Hello, world!\");\n    mod1::mod1fn();\n}\n</code></pre>\n\n<p>mod1.rs:</p>\n\n<pre><code>mod mod2; // Fails\n\npub fn mod1fn() {\n    println!(\"1\");\n    mod2::mod2fn();\n}\n</code></pre>\n\n<p>mod2.rs:</p>\n\n<pre><code>pub fn mod2fn() {\n    println!(\"2\");\n}\n</code></pre>\n\n<p>Building results in:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: cannot declare a new module at this location\n --&gt; src\\mod1.rs:1:5\n  |\n1 | mod mod2;\n  |     ^^^^\n  |\nnote: maybe move this module `src` to its own directory via `src/mod.rs`\n --&gt; src\\mod1.rs:1:5\n  |\n1 | mod mod2;\n  |     ^^^^\nnote: ... or maybe `use` the module `mod2` instead of possibly redeclaring it\n --&gt; src\\mod1.rs:1:5\n  |\n1 | mod mod2;\n  |     ^^^^\n</code></pre>\n\n<p>I can't <code>use</code> it as it doesn't exist as a module anywhere, and I don't want to modify the directory structure.</p>\n"}]