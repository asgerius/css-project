[{"tags": ["architecture", "rust"], "comments": [{"owner": {"reputation": 28990, "user_id": 1114966, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/af8712b05e5cfb862323a07c83749054?s=128&d=identicon&r=PG", "display_name": "squiguy", "link": "https://stackoverflow.com/users/1114966/squiguy"}, "edited": false, "score": 2, "creation_date": 1468451106, "post_id": 38362570, "comment_id": 64138524, "body": "<a href=\"https://stackoverflow.com/questions/25296195/why-are-recursive-struct-types-illegal-in-rust\">Relevant</a>."}], "answers": [{"comments": [{"owner": {"reputation": 1867, "user_id": 271129, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d85bd8789b114177a0d43ba9627aa251?s=128&d=identicon&r=PG", "display_name": "silvio", "link": "https://stackoverflow.com/users/271129/silvio"}, "edited": false, "score": 0, "creation_date": 1468580530, "post_id": 38371378, "comment_id": 64197425, "body": "Thanks for your help. I had some other issues, but the problem which I have described was answered. Thanks @Jdemler."}], "tags": [], "owner": {"reputation": 978, "user_id": 6426219, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/9qNtI.jpg?s=128&g=1", "display_name": "JDemler", "link": "https://stackoverflow.com/users/6426219/jdemler"}, "is_accepted": true, "score": 1, "last_activity_date": 1468491018, "creation_date": 1468491018, "answer_id": 38371378, "question_id": 38362570, "link": "https://stackoverflow.com/questions/38362570/design-principle-for-proxy-objects-or-different-approach/38371378#38371378", "title": "Design principle for proxy objects or different approach", "body": "<p>As the compiler tells you <code>Todo</code> and <code>Master</code> are recursive types and thus have infinite size and you need to </p>\n\n<blockquote>\n  <p>insert indirection (e.g., a <code>Box</code>, <code>Rc</code>, or <code>&amp;</code>) at some point</p>\n</blockquote>\n\n<p>So you basically have three options:</p>\n\n<ol>\n<li>Hold <code>Master</code> as reference in <code>Todo</code></li>\n</ol>\n\n<p>This introduces lifetimes to your structs but should be possible:</p>\n\n<pre><code>struct Server {}\n\nstruct Todo&lt;'a&gt; {\n    m: &amp;'a Master&lt;'a&gt;\n}\n\nstruct Master&lt;'a&gt; {\n    todo: Todo&lt;'a&gt;,\n    server: Server,\n}\n</code></pre>\n\n<ol start=\"2\">\n<li><code>box</code> <code>master</code></li>\n</ol>\n\n<p>Looks simpler and you do not run into lifetime issues from the beginning on. Keep in mind though, that <code>box</code> have an implicit <code>'static</code> lifetime. You may need to change that.</p>\n\n<pre><code>struct Server {}\n\nstruct Todo{\n    m: Box&lt;Master&gt; // or if 'static is not what you need Box&lt;Master + 'a&gt;\n}\n\nstruct Master {\n    todo: Todo,\n    server: Server,\n}\n</code></pre>\n\n<ol start=\"3\">\n<li>The last option presented to you by the compiler is a reference counted pointer to <code>Master</code></li>\n</ol>\n\n<p>Reference counting introduces a small runtime overhead. But when you're dealing with http-requests that should be negligible.</p>\n\n<pre><code>use std::rc::Rc;\nstruct Server {}\n\nstruct Todo{\n    m: Rc&lt;Master&gt;\n}\n\nstruct Master {\n    todo: Todo,\n    server: Server,\n}\n</code></pre>\n\n<p>These are your three basic options. I would recommend you to play with them to get to know them.</p>\n"}], "owner": {"reputation": 1867, "user_id": 271129, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d85bd8789b114177a0d43ba9627aa251?s=128&d=identicon&r=PG", "display_name": "silvio", "link": "https://stackoverflow.com/users/271129/silvio"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 89, "favorite_count": 0, "accepted_answer_id": 38371378, "answer_count": 1, "score": 1, "last_activity_date": 1468491018, "creation_date": 1468447920, "last_edit_date": 1495539851, "question_id": 38362570, "link": "https://stackoverflow.com/questions/38362570/design-principle-for-proxy-objects-or-different-approach", "title": "Design principle for proxy objects or different approach", "body": "<h3>Main Problem:</h3>\n\n<p>I write a cli application to communicate with a http-server. The Server provides me with several endpoints and some functions under these endpoints (eg. <code>/todo/add</code>, <code>/other_endpoint/del</code>). Access to the library should represent these endpoints (eg <code>master.todo.add(...)</code>, <code>master.other_endpoint.del(...)</code>).</p>\n\n<p>My first attemp was to add the <code>Master</code> as reference to all endpoint objects.</p>\n\n<pre><code>struct Todo {\n    m: Master\n}\n</code></pre>\n\n<p>The <code>Master</code> holds objects to all endpoints</p>\n\n<pre><code>struct Master {\n    todo: Todo,\n    other_endpoint: OtherEndpoint,\n    server: Server,\n}\n</code></pre>\n\n<p><code>Master</code> holds a <code>server</code> object to communicate with the http-server. So endpoint objects can call this server object via <code>self.master.server.communicate()</code>.</p>\n\n<p>But I have driven my rust(y) car against a <code>recursive type 'Master' has infinite size</code>. After that I have tried a <code>m: &amp;'a Master</code> with all definitions of the lifetimes. But without success.</p>\n\n<p>I have now two questions:</p>\n\n<ol>\n<li>What do I have to do to get this to work?</li>\n<li>Does another design exist (maybe a nicer one) to get this done?</li>\n</ol>\n\n<p>Edit:</p>\n\n<ul>\n<li>The question isn't resolved with <a href=\"https://stackoverflow.com/questions/25296195/why-are-recursive-struct-types-illegal-in-rust\">Why are recursive struct types illegal in Rust?</a> as I ask about the design around this problem.</li>\n</ul>\n"}, {"tags": ["rust", "global"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1468445681, "post_id": 38362000, "comment_id": 64136552, "body": "I&#39;ve marked this as a duplicate, but really it seems <a href=\"/help/dont-ask\">too broad</a> and <a href=\"/help/on-topic\">off topic</a>. Perhaps you might want to ask on the <a href=\"https://users.rust-lang.org/\" rel=\"nofollow noreferrer\">Rust users forum</a> or <a href=\"https://www.reddit.com/r/rust\" rel=\"nofollow noreferrer\">subreddit</a>."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1468445830, "post_id": 38362000, "comment_id": 64136624, "body": "This could be an interesting problem, but is still very unclear by your description. In fact, I&#39;m wondering why you need a global variable for that. Could you show a specific (yet minimal) example of the API in another language (like C or C++)?"}], "owner": {"reputation": 43, "user_id": 5698535, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/30b4e48a5fca673fd728c3b89e40e3f3?s=128&d=identicon&r=PG&f=1", "display_name": "Benjamin Spector", "link": "https://stackoverflow.com/users/5698535/benjamin-spector"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 79, "favorite_count": 0, "closed_date": 1468445583, "answer_count": 0, "score": 0, "last_activity_date": 1468445300, "creation_date": 1468445300, "question_id": 38362000, "link": "https://stackoverflow.com/questions/38362000/rust-mutable-global-variables", "closed_reason": "Duplicate", "title": "Rust - Mutable Global Variables?", "body": "<p>I'm writing a Rust starter package for other programmers to interface with a game (write bots for it), and I'm not quite sure how to accomplish a specific task.</p>\n\n<p>At the beginning of initialization, each bot is sent some information that persists throughout the entire game. A different set of information is then sent every frame of the game. When I return the game state every frame, I'd like to reset the values given during initialization; that way, if a user edits the values they were sent during initialization they won't persist </p>\n\n<p>For consistency with the starter packages for other languages, the values sent during initialization are encapsulated in an object with the values sent every frame. I think they do belong in the same object, as they're really different aspects of the same thing, but if necessary I'm willing to change that.</p>\n\n<p>I'd like to keep the starter package API as clean as possible (and consistent with the other language starter packages) and not add any functions beyond getInit, sendInit, getFrame, and sendFrame.</p>\n\n<p>In the other starter packages, I simply cache the values sent during initialization in a private global variable, but the only way I can see how to do that in Rust would be to use global mutables, which also seem to be against the Rust philosophy.</p>\n\n<p>How would an experienced Rustacean do this?</p>\n"}, {"tags": ["rust", "libc"], "answers": [{"tags": [], "owner": {"reputation": 8284, "user_id": 3047642, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b7d3272198a4b237f4f548cbb1986b30?s=128&d=identicon&r=PG", "display_name": "Max Noel", "link": "https://stackoverflow.com/users/3047642/max-noel"}, "is_accepted": false, "score": 0, "last_activity_date": 1468551330, "last_edit_date": 1468551330, "creation_date": 1468441756, "answer_id": 38361144, "question_id": 38360996, "link": "https://stackoverflow.com/questions/38360996/how-do-i-access-fields-of-a-mut-libcfile/38361144#38361144", "title": "How do I access fields of a *mut libc::FILE?", "body": "<p>The pointer itself doesn't have attributes, the struct it points to does.</p>\n\n<p>So what this means is that you need to access <code>*fp._flags</code>, not <code>fp._flags</code> (assuming <code>fp</code> is of type <code>*mut FILE</code>).</p>\n\n<p>In addition, you'll probably need to wrap the access in an <code>unsafe</code> block, as dereferencing a raw pointer is always an unsafe operation. Try something like this:</p>\n\n<pre><code>let flags = unsafe { (*fp)._flags };\nlet is_unbuffered = (flags &amp; libc::_IONBF as i16) != 0;\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 9105, "user_id": 119861, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/O2tUa.png?s=128&g=1", "display_name": "hansaplast", "link": "https://stackoverflow.com/users/119861/hansaplast"}, "edited": false, "score": 0, "creation_date": 1468518630, "post_id": 38361203, "comment_id": 64171760, "body": "thank you. the <code>&amp;mut *</code> bit was the missing part in my code. Can you shed any light on what this does? I&#39;m still in the dark when it comes to pointers and references, really hard coming from a Java/PHP/Python world"}, {"owner": {"reputation": 9105, "user_id": 119861, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/O2tUa.png?s=128&g=1", "display_name": "hansaplast", "link": "https://stackoverflow.com/users/119861/hansaplast"}, "edited": false, "score": 0, "creation_date": 1468518756, "post_id": 38361203, "comment_id": 64171821, "body": "additional question: my struct now &quot;doesn&#39;t work&quot;: <code>_flags</code> is always 0. Do you have any hints in how to fix that? Here&#39;s stdio.h on OSX: <a href=\"https://gist.github.com/philippkeller/3921705e7b5d0ef5d394501496d146fe\" rel=\"nofollow noreferrer\">gist.github.com/philippkeller/3921705e7b5d0ef5d394501496d146&zwnj;&#8203;fe</a>  I just don&#39;t see what the problem is, IMO to access _flags directly all members up and with <code>_flags</code> need to be correct, the following ones can be wrong (or even left out)"}, {"owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "reply_to_user": {"reputation": 9105, "user_id": 119861, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/O2tUa.png?s=128&g=1", "display_name": "hansaplast", "link": "https://stackoverflow.com/users/119861/hansaplast"}, "edited": false, "score": 0, "creation_date": 1468521208, "post_id": 38361203, "comment_id": 64173212, "body": "<code>fdopen</code> returns a <a href=\"https://doc.rust-lang.org/stable/std/primitive.pointer.html\" rel=\"nofollow noreferrer\">raw pointer</a>. You cannot do much with a raw pointer, so we get a mutable reference (<code>&amp;mut</code>) from it (<code>*</code> dereference the pointer, which gives a value of type <code>FILE</code>, <code>&amp;mut</code> get a mutable reference to the <code>FILE</code> value). I think it is not a good idea to access the fields of <code>FILE</code> structure directly, even in <code>C</code>. Maybe you should ask another question explaining what you want to do (test if a file is buffered?)."}, {"owner": {"reputation": 9105, "user_id": 119861, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/O2tUa.png?s=128&g=1", "display_name": "hansaplast", "link": "https://stackoverflow.com/users/119861/hansaplast"}, "edited": false, "score": 0, "creation_date": 1468560603, "post_id": 38361203, "comment_id": 64186132, "body": "thanks for the pointer explanation. I&#39;m slowly getting the hang of it. About my intention: it&#39;s purely educational, I&#39;m trying to port <a href=\"https://gist.github.com/philippkeller/20f293f669efbd192ffa0da91f6ea1b5\" rel=\"nofollow noreferrer\">this C program</a> to Rust (example in the book &quot;Advanced Programming for Unix Environment&quot;)"}, {"owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "reply_to_user": {"reputation": 9105, "user_id": 119861, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/O2tUa.png?s=128&g=1", "display_name": "hansaplast", "link": "https://stackoverflow.com/users/119861/hansaplast"}, "edited": false, "score": 1, "creation_date": 1468869940, "post_id": 38361203, "comment_id": 64294368, "body": "That&#39;s interesting. In this case, I recommend you to use <a href=\"https://github.com/Yamakaky/rust-bindgen\" rel=\"nofollow noreferrer\"><code>bindgen</code></a> to generated the correct <code>FILE</code> definition. You can run it on the <code>.h</code> file and copy the generated <code>FILE</code> definition."}, {"owner": {"reputation": 9105, "user_id": 119861, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/O2tUa.png?s=128&g=1", "display_name": "hansaplast", "link": "https://stackoverflow.com/users/119861/hansaplast"}, "edited": false, "score": 0, "creation_date": 1472223251, "post_id": 38361203, "comment_id": 65680710, "body": "thanks, I&#39;m now a step further, but the resulting struct seems to be off somehow, I opened this new question: <a href=\"http://stackoverflow.com/questions/39169146/wrong-mapping-of-c-struce-to-rust-struct\" title=\"wrong mapping of c struce to rust struct\">stackoverflow.com/questions/39169146/&hellip;</a>"}], "tags": [], "owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "is_accepted": true, "score": 3, "last_activity_date": 1468523488, "last_edit_date": 1468523488, "creation_date": 1468441992, "answer_id": 38361203, "question_id": 38360996, "link": "https://stackoverflow.com/questions/38360996/how-do-i-access-fields-of-a-mut-libcfile/38361203#38361203", "title": "How do I access fields of a *mut libc::FILE?", "body": "<p><a href=\"https://github.com/rust-lang/libc/blob/0.2.14/src/lib.rs#L133\" rel=\"nofollow\"><code>FILE</code></a> is defined as an <a href=\"https://doc.rust-lang.org/book/ffi.html#representing-opaque-structs\" rel=\"nofollow\">opaque type</a>, that is:</p>\n\n<pre><code>pub enum FILE {}\n</code></pre>\n\n<p>So there is no field to access (even dereferencing the raw pointer).</p>\n\n<hr>\n\n<p>I think it is not a good idea to access the fields of <code>FILE</code> structure directly, even in C. You should try to find a function on <a href=\"https://en.wikipedia.org/wiki/C_file_input/output\" rel=\"nofollow\"><code>stdio.h</code></a> that do what you want.</p>\n\n<hr>\n\n<p>Anyway, one workaround is to create your own definition of <code>FILE</code> and get a <code>&amp;mut</code> from <code>fp</code>:</p>\n\n<pre><code>#[repr(C)]\npub struct MY_FILE {\n    pub _p: libc::c_char,\n    pub _r: libc::c_int,\n    pub _w: libc::c_int,\n    pub _flags: libc::c_short,\n    pub _file: libc::c_short,\n    // ...\n}\n\n// ...\n\nunsafe {\n    let fp = libc::fdopen(libc::STDOUT_FILENO, &amp;('w' as libc::c_char));\n    let fp = &amp;mut *(fp as *mut MY_FILE);\n    let is_unbuffered = (fp._flags &amp; libc::_IONBF as i16) != 0;\n}\n</code></pre>\n\n<p>Note that if you do not use the correct definition for <code>MY_FILE</code>, you will get some garbage data or even a segfault.</p>\n"}], "owner": {"reputation": 9105, "user_id": 119861, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/O2tUa.png?s=128&g=1", "display_name": "hansaplast", "link": "https://stackoverflow.com/users/119861/hansaplast"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 235, "favorite_count": 0, "accepted_answer_id": 38361203, "answer_count": 2, "score": 2, "last_activity_date": 1468551330, "creation_date": 1468441119, "last_edit_date": 1468442286, "question_id": 38360996, "link": "https://stackoverflow.com/questions/38360996/how-do-i-access-fields-of-a-mut-libcfile", "title": "How do I access fields of a *mut libc::FILE?", "body": "<p>I'm trying to access the different fields of the <code>FILE</code> struct of <code>libc</code>.</p>\n\n<p><code>FILE</code> implementation in Rust according to the memory mapping in <code>stdio.h</code>:</p>\n\n<pre><code>#[repr(C)]\npub struct FILE {\n    pub _p: libc::c_char,\n    pub _r: libc::c_int,\n    pub _w: libc::c_int,\n    pub _flags: libc::c_short,\n    pub _file: libc::c_short,\n    ...\n}\n</code></pre>\n\n<p>when working with <code>FILE</code>s in libc they come in the <code>mut *</code> variant, and this somehow is in the way to access the fields. The following code triggers <code>error: attempted access of field</code>_flags<code>on type '*mut FILE', but no field with that name was found</code>. </p>\n\n<pre><code>let stdout = libc::fdopen(libc::STDOUT_FILENO, &amp;('w' as libc::c_char));\nlet is_unbuffered = (fp._flags &amp; libc::_IONBF as i16) != 0\n</code></pre>\n\n<p>A variable of type <code>FILE</code> without the <code>mut *</code> variant works but I need to get it working with <code>mut *</code>.</p>\n"}, {"tags": ["gtk", "rust", "gtk3", "glib", "rust-gnome"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1468439482, "post_id": 38359465, "comment_id": 64133418, "body": "You also don&#39;t need to specify a <code>[[bin]]</code> section if your main file is <code>src&#47;main.rs</code>, that&#39;s the conventional spot."}, {"owner": {"reputation": 43, "user_id": 6585847, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f6a19a8df03c160eec302405c911c172?s=128&d=identicon&r=PG&f=1", "display_name": "wm_obsd", "link": "https://stackoverflow.com/users/6585847/wm-obsd"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1468439706, "post_id": 38359465, "comment_id": 64133558, "body": "@Shepmaster Changed to &quot;&amp;array_of_data&quot;, compiler complains: <code>expected &amp;[&amp;gtk::ToValue],     found &amp;[&amp;gtk::Value; 2] (expected slice,     found array of 2 elements)[E0308] </code>  --- Changed to &quot;&amp;array_of_data[..]&quot;, compiler complains: <code>expected </code>&amp;[&amp;gtk::ToValue],     found &amp;[&amp;gtk::Value] (expected trait gtk::ToValue,     found struct <code>gtk::Value</code>) [E0308]`   --- Changed to &quot;&amp;[&amp;array_of_data[..]]&quot;, compiler complains: <code>error: the trait bound </code>[&amp;gtk::Value]: std::marker::Sized` is not satisfied [E0277] note: <code>[&amp;gtk::Value]</code> does not have a constant size known at compile-time`"}, {"owner": {"reputation": 43, "user_id": 6585847, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f6a19a8df03c160eec302405c911c172?s=128&d=identicon&r=PG&f=1", "display_name": "wm_obsd", "link": "https://stackoverflow.com/users/6585847/wm-obsd"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1468440207, "post_id": 38359465, "comment_id": 64133846, "body": "It successfully compiled :D"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1468459862, "post_id": 38359465, "comment_id": 64140483, "body": "Note that <code>gtk::init().expect(&quot;Failed to initialize GTK&quot;);</code> is shorter <b>and</b> better \u2014 it prints the underlying error message."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1468459792, "last_edit_date": 1468459792, "creation_date": 1468459401, "answer_id": 38364110, "question_id": 38359465, "link": "https://stackoverflow.com/questions/38359465/rust-gtk3-how-to-create-array-containing-a-few-elements-of-type-glibvalue/38364110#38364110", "title": "Rust &amp; GTK+3. How to create array containing a few elements of type glib::Value which can be casted to &amp;[&amp;ToValue] type?", "body": "<p>Ultimately, you are most likely to want to write something like this:</p>\n\n<pre><code>model_list_of_data.insert_with_values(Some(0), &amp;[0, 1], &amp;[&amp;2u32, &amp;4i64]);\n</code></pre>\n\n<p>Let's break down the function definition a bit:</p>\n\n<pre><code>fn insert_with_values(&amp;self,\n                      position: Option&lt;u32&gt;,\n                      columns: &amp;[u32],\n                      values: &amp;[&amp;ToValue])\n                      -&gt; TreeIter;\n</code></pre>\n\n<p>This function takes an immutable reference to a <code>ListStore</code>, an optional position, zero-or-more columns as integers, and zero-or-more <em>references to the trait <a href=\"http://gtk-rs.org/docs/gtk/trait.ToValue.html\" rel=\"nofollow noreferrer\"><code>ToValue</code></a></em>.</p>\n\n<p>What types implement <code>ToValue</code>? The documentation says:</p>\n\n<pre><code>impl&lt;T&gt; ToValue for Option&lt;T&gt; where T: SetValueOptional\nimpl&lt;T&gt; ToValue for T where T: SetValue + ?Sized\nimpl ToValue for Value\n</code></pre>\n\n<p>Taking a look at <a href=\"http://gtk-rs.org/docs/glib/value/trait.SetValue.html\" rel=\"nofollow noreferrer\"><code>SetValue</code></a>, we can see that it's implemented for the primitive integer types.</p>\n\n<p>Since <code>u32</code> and <code>i64</code> implement <code>SetValue</code>, they also implement <code>ToValue</code>. A reference to the number can be implicitly coerced into a reference to the trait as well.</p>\n\n<p>With this change, the window appears, but...</p>\n\n<p><a href=\"https://i.stack.imgur.com/iFnJJ.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/iFnJJ.png\" alt=\"blank window\"></a></p>\n\n<p>You'll have to figure out the mysteries of GTK from here!</p>\n"}], "owner": {"reputation": 43, "user_id": 6585847, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f6a19a8df03c160eec302405c911c172?s=128&d=identicon&r=PG&f=1", "display_name": "wm_obsd", "link": "https://stackoverflow.com/users/6585847/wm-obsd"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 873, "favorite_count": 0, "accepted_answer_id": 38364110, "answer_count": 1, "score": 3, "last_activity_date": 1468459792, "creation_date": 1468435461, "last_edit_date": 1468441944, "question_id": 38359465, "link": "https://stackoverflow.com/questions/38359465/rust-gtk3-how-to-create-array-containing-a-few-elements-of-type-glibvalue", "title": "Rust &amp; GTK+3. How to create array containing a few elements of type glib::Value which can be casted to &amp;[&amp;ToValue] type?", "body": "<p>I am creating GUI application using Rust and bindings for GTK+ 3 (called Gtk-rs or rust-gnome). I want to insert some data into <code>gtk::ListStore</code> (<code>GtkListStore</code>) using method <a href=\"http://gtk-rs.org/docs/gtk/struct.ListStore.html#method.insert_with_values\" rel=\"nofollow\"><code>insert_with_values</code></a></p>\n\n<p><strong>Working sample, but only one column:</strong>\nI can insert data if I have one column:</p>\n\n<pre><code>let type_of_a_column = &amp;[gtk::Type::U32];\nlet data_for_column_1 = (2 as u32).to_value();\nlet model_list_of_data = ListStore::new(type_of_a_column);\nmodel_list_of_data.insert_with_values(None, &amp;[0 as u32], &amp;[&amp;data_for_column_1]);\n</code></pre>\n\n<p>However I don't know how to hand over more data if I have more columns.\nI know that internally it should call <a href=\"https://developer.gnome.org/gtk3/stable/GtkListStore.html#gtk-list-store-insert-with-valuesv\" rel=\"nofollow\">gtk_list_store_insert_with_valuesv()</a>\nso I need probably an array or slice, but if I do something like:</p>\n\n<p><strong>Wanted to pass two elements in array, not working</strong></p>\n\n<pre><code>let type_of_a_column = &amp;[gtk::Type::U32, gtk::Type::I64];\nlet data_for_column_1 = (2 as u32).to_value();\nlet data_for_column_2 = (4 as i64).to_value();\nlet array_of_data = [&amp;data_for_column_1, &amp;data_for_column_2];\nlet model_list_of_data = ListStore::new(type_of_a_column);\nmodel_list_of_data.insert_with_values(None, &amp;[1 as u32], &amp;[&amp;array_of_data]);\n</code></pre>\n\n<p>it gives me during compilation:</p>\n\n<blockquote>\n  <p>error: the trait bound <code>[&amp;glib::Value; 2]: glib::IsA&lt;glib::Object&gt;</code> is\n  not satisfied [E0277]</p>\n</blockquote>\n\n<p>and I don't know how to overcome it.</p>\n\n<h2><strong>Not working MCVE</strong></h2>\n\n<h2>main.rs</h2>\n\n<pre><code>extern crate gtk;\n\nuse gtk::prelude::*;\nuse gtk::{Box, ListStore, Orientation, TreeView, Window, WindowType};\n\nfn exit_app() -&gt; gtk::prelude::Inhibit {\n    // Stop the main loop.\n    gtk::main_quit();\n    // Let the default handler destroy the window.\n    Inhibit(false)\n}\n\nfn main() {\n    if gtk::init().is_err() {\n        panic!(\"Failed to initialize GTK.\");\n    }\n\n    println!(\"Version of GTK+3:\\t{}.{}\",\n             gtk::get_major_version(),\n             gtk::get_minor_version());\n    let window = Window::new(WindowType::Toplevel);\n    window.set_title(\"Exercises with GtkTreeView and GtkListStore\");\n    window.set_position(gtk::WindowPosition::Center);\n    window.connect_delete_event(|_, _| exit_app());\n\n    let box_container = Box::new(Orientation::Vertical, 0);\n    let view_list = TreeView::new();\n\n    let types_inside_columns = &amp;[gtk::Type::U32, gtk::Type::I64];\n    let data_in_column_1 = (2 as u32).to_value();\n    let data_in_column_2 = (4 as i64).to_value();\n\n    let array_of_data = [&amp;data_in_column_1, &amp;data_in_column_2];\n\n    let model_list_of_data = ListStore::new(types_inside_columns);\n\n    model_list_of_data.insert_with_values(Some(0), &amp;[0 as u32, 1 as u32], &amp;[&amp;array_of_data]);\n\n    view_list.set_model(Some(&amp;model_list_of_data));\n    box_container.pack_start(&amp;view_list, false, false, 0);\n    window.add(&amp;box_container);\n\n    window.show_all();\n    gtk::main();\n}\n</code></pre>\n\n<h2>Cargo.toml</h2>\n\n<pre><code>[package]\nname = \"test_of_gtk_3\"\nversion = \"0.0.1\"\nauthors = [\"wm_obsd\"]\n\n[dependencies.gtk]\nversion = \"0.1.0\"\nfeatures = [\"v3_16\"]\n\n[[bin]]\nname = \"main\"\npath = \"src/main.rs\"\n</code></pre>\n"}, {"tags": ["string", "char", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1468434792, "post_id": 38359231, "comment_id": 64130948, "body": "Note that <code>: [char; 5]</code> is redundant; the type can be inferred."}, {"owner": {"reputation": 7872, "user_id": 440302, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/e785baf6d4a2626b8649d5b538c51858?s=128&d=identicon&r=PG", "display_name": "Rufflewind", "link": "https://stackoverflow.com/users/440302/rufflewind"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1468434931, "post_id": 38359231, "comment_id": 64131028, "body": "@Shepmaster: I put that there to make the question clearer :)"}, {"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "edited": false, "score": 1, "creation_date": 1468440166, "post_id": 38359231, "comment_id": 64133822, "body": "Why would you ever create an array like this? <code>&quot;hello&quot;</code> is 1000% easier and more useful."}, {"owner": {"reputation": 7872, "user_id": 440302, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/e785baf6d4a2626b8649d5b538c51858?s=128&d=identicon&r=PG", "display_name": "Rufflewind", "link": "https://stackoverflow.com/users/440302/rufflewind"}, "edited": false, "score": 0, "creation_date": 1468444540, "post_id": 38359231, "comment_id": 64135988, "body": "@delnan: sometimes I want to create one with characters that are not known at compile time, e.g. <code>[c1, c2, c3]</code>."}], "answers": [{"comments": [{"owner": {"reputation": 7872, "user_id": 440302, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/e785baf6d4a2626b8649d5b538c51858?s=128&d=identicon&r=PG", "display_name": "Rufflewind", "link": "https://stackoverflow.com/users/440302/rufflewind"}, "edited": false, "score": 0, "creation_date": 1468435196, "post_id": 38359280, "comment_id": 64131180, "body": "Is there an equivalent of the <code>vec!</code> macro for <code>String</code>?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 7872, "user_id": 440302, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/e785baf6d4a2626b8649d5b538c51858?s=128&d=identicon&r=PG", "display_name": "Rufflewind", "link": "https://stackoverflow.com/users/440302/rufflewind"}, "edited": false, "score": 0, "creation_date": 1468435363, "post_id": 38359280, "comment_id": 64131275, "body": "@Rufflewind I&#39;m not sure I understand. Do you mean <code>String::from(&quot;foo&quot;)</code> or maybe <code>&quot;foo&quot;.to_string()</code>? In some contexts you can also use <code>&quot;foo&quot;.into()</code>. You don&#39;t really need a macro for anything; those are just function calls. I suppose you could create a method <code>s</code> that calls one of them if they are too long..."}, {"owner": {"reputation": 7872, "user_id": 440302, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/e785baf6d4a2626b8649d5b538c51858?s=128&d=identicon&r=PG", "display_name": "Rufflewind", "link": "https://stackoverflow.com/users/440302/rufflewind"}, "edited": false, "score": 0, "creation_date": 1468444600, "post_id": 38359280, "comment_id": 64136012, "body": "I mean something like <code>str![&#39;h&#39;, &#39;e&#39;, &#39;y&#39;]</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 7872, "user_id": 440302, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/e785baf6d4a2626b8649d5b538c51858?s=128&d=identicon&r=PG", "display_name": "Rufflewind", "link": "https://stackoverflow.com/users/440302/rufflewind"}, "edited": false, "score": 0, "creation_date": 1468445052, "post_id": 38359280, "comment_id": 64136242, "body": "@Rufflewind Why would you want that instead of just <code>&quot;hey&quot;</code>?"}, {"owner": {"reputation": 7872, "user_id": 440302, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/e785baf6d4a2626b8649d5b538c51858?s=128&d=identicon&r=PG", "display_name": "Rufflewind", "link": "https://stackoverflow.com/users/440302/rufflewind"}, "edited": false, "score": 0, "creation_date": 1468446670, "post_id": 38359280, "comment_id": 64136977, "body": "sometimes I want to create one with characters that are not known at compile time, e.g. <code>[c1, c2, c3]</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 7872, "user_id": 440302, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/e785baf6d4a2626b8649d5b538c51858?s=128&d=identicon&r=PG", "display_name": "Rufflewind", "link": "https://stackoverflow.com/users/440302/rufflewind"}, "edited": false, "score": 0, "creation_date": 1468458364, "post_id": 38359280, "comment_id": 64140179, "body": "@Rufflewind perhaps you just want <a href=\"https://github.com/kmcallister/literator\" rel=\"nofollow noreferrer\">literator</a>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 9, "last_activity_date": 1524930778, "last_edit_date": 1524930778, "creation_date": 1468434709, "answer_id": 38359280, "question_id": 38359231, "link": "https://stackoverflow.com/questions/38359231/how-do-i-convert-from-a-char-array-char-n-to-a-string-slice-str/38359280#38359280", "title": "How do I convert from a char array [char; N] to a string slice &amp;str?", "body": "<p>You can't without some allocation, which means you will end up with a <code>String</code>.</p>\n\n<pre><code>let s2: String = s.iter().collect();\n</code></pre>\n\n<p>The problem is that strings in Rust are <strong>not</strong> collections of <code>char</code>s, they are UTF-8, which is an encoding without a fixed size per character.</p>\n\n<p>For example, the array in this case would take 5 x 32-bits for a total of 20 bytes. The data of the string would take 5 bytes total (although there's also 3 pointer-sized values, so the overall <code>String</code> takes more memory in this case).</p>\n\n<hr>\n\n<p>We start with the array and call <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.iter\" rel=\"nofollow noreferrer\"><code>[]::iter</code></a>, which yields values of type <code>&amp;char</code>. We then use <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.collect\" rel=\"nofollow noreferrer\"><code>Iterator::collect</code></a> to <a href=\"https://doc.rust-lang.org/std/string/struct.String.html#impl-FromIterator%3C%26%27a%20char%3E\" rel=\"nofollow noreferrer\">convert the <code>Iterator&lt;Item = &amp;char&gt;</code> into a <code>String</code></a>. This uses the iterator's <code>size_hint</code> to <a href=\"https://github.com/rust-lang/rust/blob/1.25.0/src/liballoc/string.rs#L1646-L1647\" rel=\"nofollow noreferrer\">pre-allocate space in the <code>String</code></a>, reducing the need for extra allocations.</p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1524929772, "post_id": 50071750, "comment_id": 87172361, "body": "<i>you can put an underscore if you want to keep the signature</i> \u2014 this is <b>not</b> an idiomatic use of an underscore in Rust variable names. A leading underscore instructs the compiler that this variable is deliberately unused, which is not the case here."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1524929824, "post_id": 50071750, "comment_id": 87172378, "body": "<i><code>String::from(&quot;&quot;);</code></i> \u2014 this is not an idiomatic way of creating an empty <code>String</code>. Use <code>String::new</code> instead."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1524930011, "post_id": 50071750, "comment_id": 87172430, "body": "This solution is not as efficient as the answer using <code>collect</code> as <code>collect</code> uses <code>extend</code> which <a href=\"https://github.com/rust-lang/rust/blob/1.25.0/src/liballoc/string.rs#L1646-L1647\" rel=\"nofollow noreferrer\">pre-allocates space for all the characters</a>."}], "tags": [], "owner": {"reputation": 1191, "user_id": 5379668, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/57bc0deab1904ce43d7b70aa31103cd8?s=128&d=identicon&r=PG&f=1", "display_name": "Davide", "link": "https://stackoverflow.com/users/5379668/davide"}, "is_accepted": false, "score": 0, "last_activity_date": 1524930627, "last_edit_date": 1524930627, "creation_date": 1524875549, "answer_id": 50071750, "question_id": 38359231, "link": "https://stackoverflow.com/questions/38359231/how-do-i-convert-from-a-char-array-char-n-to-a-string-slice-str/50071750#50071750", "title": "How do I convert from a char array [char; N] to a string slice &amp;str?", "body": "<p>I will give you a very simple functional solution but it's not the best one. You can learn some basics:</p>\n\n<pre><code>let s: [char; 5] = ['h', 'e', 'l', 'l', 'o'];\nlet mut str = String::from(\"\");\nfor x in &amp;s {\n    str.push(*x);\n}\nprintln!(\"{}\", str);\n</code></pre>\n\n<p>Before the variable names you can put an underscore if you want to keep the signature, but in this simple example it is not necessary. The program starts by creating an empty mutable <code>String</code> so you can add elements (<code>char</code>s) to the <code>String</code>. Then we make a <code>for</code> loop over the <code>s</code> array by taking its reference. We add each element to the initial string. At the end you can return your string or just print it.</p>\n"}], "owner": {"reputation": 7872, "user_id": 440302, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/e785baf6d4a2626b8649d5b538c51858?s=128&d=identicon&r=PG", "display_name": "Rufflewind", "link": "https://stackoverflow.com/users/440302/rufflewind"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4133, "favorite_count": 1, "accepted_answer_id": 38359280, "answer_count": 2, "score": 2, "last_activity_date": 1524930778, "creation_date": 1468434515, "question_id": 38359231, "link": "https://stackoverflow.com/questions/38359231/how-do-i-convert-from-a-char-array-char-n-to-a-string-slice-str", "title": "How do I convert from a char array [char; N] to a string slice &amp;str?", "body": "<p>Given a fixed-length <code>char</code> array such as:</p>\n\n<pre><code>let s: [char; 5] = ['h', 'e', 'l', 'l', 'o'];\n</code></pre>\n\n<p>How do I obtain a <code>&amp;str</code>?</p>\n"}, {"tags": ["rust", "circular-list"], "answers": [{"tags": [], "owner": {"reputation": 759, "user_id": 1176628, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff2296d70542d30deb6fd858c29c5960?s=128&d=identicon&r=PG", "display_name": "krdln", "link": "https://stackoverflow.com/users/1176628/krdln"}, "is_accepted": false, "score": 2, "last_activity_date": 1468422255, "last_edit_date": 1468422255, "creation_date": 1468419398, "answer_id": 38354222, "question_id": 38353845, "link": "https://stackoverflow.com/questions/38353845/unable-to-create-a-circular-linked-list-in-safe-rust-unsafe-version-crashes/38354222#38354222", "title": "Unable to create a circular linked list in safe Rust; unsafe version crashes", "body": "<p>In Rust <code>&amp;mut</code> means not only mutable, but unique (same with <code>Box&lt;T&gt;</code> \u2013 <code>T</code> is assumed  to be uniquely owned by <code>Box</code>). Trying to work it around with <code>unsafe</code> will violate invariants and will lead to undefined behaviour. The error you get is because of that (my guess would be you're causing double free (recursively?)). If you want to stay with <code>unsafe</code> (not recommended), stick to using <code>*mut</code> pointers everywhere.</p>\n\n<p><em>Interior mutability</em> is what you want to do. You should familiarize yourself with the <a href=\"https://static.rust-lang.org/doc/master/std/cell/index.html\" rel=\"nofollow\">cell</a> module. <a href=\"https://ricardomartins.cc/2016/06/08/interior-mutability\" rel=\"nofollow\">This blogpost about interior mutability</a> is also worth reading.</p>\n\n<p>So, I'd redefine your struct like that:</p>\n\n<pre><code>use std::cell::{Cell,RefCell};\nuse std::rc::Weak;\n\n#[derive(Debug, Clone)]\nstruct Player {\n    name: String,\n    killed: Cell&lt;bool&gt;,\n    next: RefCell&lt;Option&lt;Weak&lt;Player&gt;&gt;&gt;,\n}\n</code></pre>\n\n<p>and keep all the players behind <a href=\"https://static.rust-lang.org/doc/master/std/rc/struct.Rc.html\" rel=\"nofollow\"><code>Rc</code></a> (reference counted pointer). If you plan for all your players to only live on the stack of the main function,</p>\n\n<pre><code>    next: Cell&lt;Option&lt;&amp;Player&gt;&gt;,\n</code></pre>\n\n<p>should be enough.</p>\n\n<p>Another option is to put the whole player in <code>Rc&lt;RefCell&lt;Player&gt;&gt;</code>, but it's considered good practice to put only mutable parts in cells.</p>\n"}, {"comments": [{"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 1, "creation_date": 1468421263, "post_id": 38354331, "comment_id": 64122210, "body": "I might be tempted to use <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.cycle\" rel=\"nofollow noreferrer\"><code>Iterator::cycle</code></a> on the <code>Vec</code> of players rather than manually incrementing and wrapping the index."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 0, "creation_date": 1468422673, "post_id": 38354331, "comment_id": 64123307, "body": "@ChrisEmerson that&#39;s a great idea! Unfortunately, you can&#39;t use <code>Iterator::cycle</code> with a mutable iterator: <code>std::slice::IterMut&lt;...&gt;: std::clone::Clone is not satisfied</code>. Otherwise we&#39;d be able to get multiple mutable references concurrently. We could change the vector to contain <code>RefCell&lt;Player&gt;</code> and do a <code>borrow_mut</code> though."}, {"owner": {"reputation": 759, "user_id": 1176628, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff2296d70542d30deb6fd858c29c5960?s=128&d=identicon&r=PG", "display_name": "krdln", "link": "https://stackoverflow.com/users/1176628/krdln"}, "reply_to_user": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 1, "creation_date": 1468427471, "post_id": 38354331, "comment_id": 64126561, "body": "@Shepmaster @Chris Another way to allow <code>cycle</code> is changing <code>killed</code> to <code>Cell&lt;bool&gt;</code>. It seems simpler than the <code>RefCell</code>."}, {"owner": {"reputation": 193, "user_id": 5177296, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/74d8a88f1671531b2a6f2ff4218764d4?s=128&d=identicon&r=PG&f=1", "display_name": "asdetrefle", "link": "https://stackoverflow.com/users/5177296/asdetrefle"}, "edited": false, "score": 0, "creation_date": 1468500949, "post_id": 38354331, "comment_id": 64159956, "body": "@Shepmaster Thanks!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 7, "last_activity_date": 1557843181, "last_edit_date": 1557843181, "creation_date": 1468419675, "answer_id": 38354331, "question_id": 38353845, "link": "https://stackoverflow.com/questions/38353845/unable-to-create-a-circular-linked-list-in-safe-rust-unsafe-version-crashes/38354331#38354331", "title": "Unable to create a circular linked list in safe Rust; unsafe version crashes", "body": "<p>First, you should go read <a href=\"http://cglab.ca/~abeinges/blah/too-many-lists/book/README.html\" rel=\"nofollow noreferrer\"><em>Learning Rust With Entirely Too Many Linked Lists</em></a>. Singly-linked lists <em>are not simple</em>, unlike how many programming languages treat them. Circular linked lists (or doubly-linked lists) are quite complicated when it comes to <em>ownership</em>, a core Rust concept.</p>\n\n<p>If you have a circular linked list, <strong>who owns each item?</strong> This is important to know because the owner of a value is expected to drop the value.</p>\n\n<p>Similarly, multiple mutable references are disallowed <em>for a reason</em>. If you want them, there are types like <a href=\"https://doc.rust-lang.org/std/cell/struct.RefCell.html\" rel=\"nofollow noreferrer\"><code>RefCell</code></a> that allow you to have mutability that doesn't directly correspond to the structure of the code.</p>\n\n<p>The reason of the crash is right here: <code>unsafe</code>. You've told the compiler \"this is cool, I know what I'm doing\" and then you proceed to break all the guarantees that you are expected to uphold. If you want to use <code>unsafe</code>, you should read <a href=\"https://doc.rust-lang.org/nightly/nomicon/\" rel=\"nofollow noreferrer\"><em>The Rustonomicon: The Dark Arts of Advanced and Unsafe Rust Programming</em></a>.</p>\n\n<p>In this case, <a href=\"https://doc.rust-lang.org/std/boxed/struct.Box.html#method.from_raw\" rel=\"nofollow noreferrer\"><code>Box::from_raw</code></a> specifically warns against what you are doing:</p>\n\n<blockquote>\n  <p>After calling this function, the raw pointer is owned by the resulting <code>Box</code>. Specifically, the <code>Box</code> destructor will call the destructor of <code>T</code> and free the allocated memory. Since the way <code>Box</code> allocates and releases memory is unspecified, the <strong>only valid pointer to pass to this function is the one taken from another <code>Box</code> via the <code>Box::into_raw</code> function</strong>.</p>\n</blockquote>\n\n<hr>\n\n<p>You don't need to create a linked list though; just use a <code>Vec</code>:</p>\n\n<pre><code>#[derive(Debug, Clone)]\nstruct Player {\n    name: String,\n    killed: bool,\n}\n\nfn main() {\n    let mut players = vec![\n        Player {\n            name: \"C\".to_string(),\n            killed: false,\n        },\n        Player {\n            name: \"B\".to_string(),\n            killed: false,\n        },\n        Player {\n            name: \"A\".to_string(),\n            killed: false,\n        },\n    ];\n\n    println!(\"GAME STARTED!\");\n\n    let mut current_player_idx = 0;\n    let player_count = players.len();\n\n    for _ in 0..10 {\n        let current_player = &amp;mut players[current_player_idx];\n\n        println!(\"Player to kill/save {}\", current_player.name);\n        current_player.killed = !current_player.killed;\n        println!(\n            \"Player {} is killed: {}\",\n            current_player.name, current_player.killed\n        );\n\n        current_player_idx += 1;\n        current_player_idx %= player_count;\n    }\n    println!(\"End!\");\n}\n</code></pre>\n\n<p>Note that you don't need any explicit dereferencing.</p>\n"}], "owner": {"reputation": 193, "user_id": 5177296, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/74d8a88f1671531b2a6f2ff4218764d4?s=128&d=identicon&r=PG&f=1", "display_name": "asdetrefle", "link": "https://stackoverflow.com/users/5177296/asdetrefle"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1870, "favorite_count": 0, "answer_count": 2, "score": 4, "last_activity_date": 1557843181, "creation_date": 1468418412, "last_edit_date": 1557843002, "question_id": 38353845, "link": "https://stackoverflow.com/questions/38353845/unable-to-create-a-circular-linked-list-in-safe-rust-unsafe-version-crashes", "title": "Unable to create a circular linked list in safe Rust; unsafe version crashes", "body": "<p>I am writing a small strategic game, but I have a problem with implementing a circular linked list.</p>\n\n<p>The game involves several people taking actions one by one and round by round until the game ends. I though that this could be done by using a circular linked list where each element is a player with a reference to the next player. The structure is like this:  </p>\n\n<pre><code>#[derive(Debug, Clone)]\nstruct Player {\n    name: String,\n    killed: bool,\n    next: Option&lt;Box&lt;Player&gt;&gt;,\n}\n</code></pre>\n\n<p>I also want a pointer to the current active player and be able to modify the status of it, but I think Rust does not allow me to have two mutable references to the same object because each player already has a mutable reference to the next player.</p>\n\n<p>What I came up with is that I can use a simple mutable reference to the <code>Box</code> which is owned by its previous player and pointing to the current player. I wrote a simple main function where the problem occurs:  </p>\n\n<pre><code>fn main() {\n    let mut p3: Player = Player {\n        name: \"C\".to_string(),\n        killed: false,\n        next: None,\n    };\n    let mut p2: Player = Player {\n        name: \"B\".to_string(),\n        killed: false,\n        next: Some(unsafe { Box::from_raw(&amp;mut p3) }),\n    };\n    let mut p1: Player = Player {\n        name: \"A\".to_string(),\n        killed: false,\n        next: Some(unsafe { Box::from_raw(&amp;mut p2) }),\n    };\n    p3.next = Some(unsafe { Box::from_raw(&amp;mut p1) });\n    println!(\"GAME STARTED!\");\n    let mut current_player = p3.next.as_mut().unwrap();\n    let mut count = 0;\n    while count &lt; 10 {\n        println!(\"Player to kill/save {}\", current_player.name);\n        (*current_player).killed = !(*current_player).killed;\n        println!(\n            \"Player {} is killed: {}\",\n            (*current_player).name,\n            (*current_player).killed\n        );\n        current_player = (*current_player).next.as_mut().unwrap();\n        count = count + 1\n    }\n    println!(\"End!\");\n}\n</code></pre>\n\n<p>The error is also about the mutability but I have no idea how to fix it. I wonder if there is a better way to implement the idea in Rust rather than using a circular linked list and a pointer to the current player. Maybe should I switch to another structure?</p>\n\n<p>The error message is quite long, here are the first few lines:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `current_player` (via `current_player.name`) as immutable because `current_player` is also borrowed as mutable (via `current_player.next`)\n  --&gt; src/main.rs:29:44\n   |\n29 |         println!(\"Player to kill/save {}\", current_player.name);\n   |                                            ^^^^^^^^^^^^^^^^^^^ immutable borrow of `current_player.name` -- which overlaps with `current_player.next` -- occurs here\n...\n36 |         current_player = (*current_player).next.as_mut().unwrap();\n   |                          ---------------------- mutable borrow occurs here (via `current_player.next`)\n...\n40 | }\n   | - mutable borrow ends here\n</code></pre>\n\n<p>If I change the <code>as_mut()</code> method to <code>as_ref()</code> which returns the immutable reference of the <code>Box</code>, and comment the line  </p>\n\n<pre><code>// (*current_player).killed = !(*current_player).killed;\n</code></pre>\n\n<p>The program can build successfully but there will be an unknown runtime error when it finishes. Don't know why that happens either. </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>GAME STARTED!\nPlayer to kill/save A\nPlayer A is killed: false\nPlayer to kill/save B\nPlayer B is killed: false\n......\nPlayer to kill/save C\nPlayer C is killed: false\nPlayer to kill/save A\nPlayer A is killed: false\nEnd!\nerror: An unknown error occurred\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 20407, "user_id": 1017941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/yocPw.jpg?s=128&g=1", "display_name": "Hauleth", "link": "https://stackoverflow.com/users/1017941/hauleth"}, "is_accepted": true, "score": 3, "last_activity_date": 1468414372, "last_edit_date": 1468414372, "creation_date": 1468414303, "answer_id": 38352318, "question_id": 38351929, "link": "https://stackoverflow.com/questions/38351929/is-reprc-propagated-to-child-members/38352318#38352318", "title": "Is [repr(C)] propagated to child members?", "body": "<p>Your answers are:</p>\n\n<ol>\n<li>No</li>\n<li>No</li>\n</ol>\n\n<p><code>#[repr(C)]</code> doesn't make structures \"safe to FFI\", it guarantees that the in-memory representation will be as is and the compiler will not try to optimize them for space/efficiency under the cover. This is accidentally what is also needed for safe FFI.</p>\n"}, {"tags": [], "owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "is_accepted": false, "score": 2, "last_activity_date": 1468421020, "last_edit_date": 1468421020, "creation_date": 1468420926, "answer_id": 38354840, "question_id": 38351929, "link": "https://stackoverflow.com/questions/38351929/is-reprc-propagated-to-child-members/38354840#38354840", "title": "Is [repr(C)] propagated to child members?", "body": "<p>It certainly isn't safe to pass your structure to C code.  There are some caveats in the <a href=\"https://doc.rust-lang.org/nomicon/other-reprs.html\" rel=\"nofollow\">documentation</a>, including:</p>\n\n<ul>\n<li><blockquote>\n  <p>DSTs, tuples, and tagged unions are not a concept in C and as such are never FFI safe</p>\n</blockquote>\n\n<p>You have no guarantee about whether any of these are in the <code>Vec</code>.  Also, since <code>Vec</code> is opaque.</p></li>\n<li><blockquote>\n  <p>If the type would have any drop flags, they will still be added\"</p>\n</blockquote>\n\n<p>Again, <code>Vec</code> may have some.</p></li>\n</ul>\n\n<p>And in any case, for it to make any sense at the receiving C code, you need to declare your struct in C as well; and since <code>Vec&lt;String&gt;</code> is opaque, there isn't a reasonable way to do so.</p>\n\n<p>I think the reason for having <code>#[repr(C)]</code> is to reproduce data to match an existing C API you want to interoperate with; not to somehow directly expose internal Rust types to C.</p>\n"}], "owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 98, "favorite_count": 0, "accepted_answer_id": 38352318, "answer_count": 2, "score": 3, "last_activity_date": 1468421020, "creation_date": 1468413361, "last_edit_date": 1468414070, "question_id": 38351929, "link": "https://stackoverflow.com/questions/38351929/is-reprc-propagated-to-child-members", "title": "Is [repr(C)] propagated to child members?", "body": "<p>I have a struct:</p>\n\n<pre><code>struct A {\n    names: Vec&lt;String&gt;,\n}\n</code></pre>\n\n<p>And another struct:</p>\n\n<pre><code>#[repr(C)]\nstruct B {\n    pub a: A,\n}\n</code></pre>\n\n<p>Does this make <code>A</code> also have the <code>repr(C)</code> annotation? Would it be correct to pass such structure to C code ?</p>\n"}, {"tags": ["rust", "iron"], "answers": [{"comments": [{"owner": {"reputation": 22928, "user_id": 978690, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/lNUl6.png?s=128&g=1", "display_name": "rap-2-h", "link": "https://stackoverflow.com/users/978690/rap-2-h"}, "edited": false, "score": 0, "creation_date": 1468405655, "post_id": 38348671, "comment_id": 64110835, "body": "Oops it does not work &quot;expected <code>&amp;params::Value</code>, found <code>params::Value</code>&quot; in &quot;Some(Value::File(file))&quot;"}, {"owner": {"reputation": 187800, "user_id": 320615, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/65c80e12b6a33913538653f6d4ef1277?s=128&d=identicon&r=PG", "display_name": "Dogbert", "link": "https://stackoverflow.com/users/320615/dogbert"}, "reply_to_user": {"reputation": 22928, "user_id": 978690, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/lNUl6.png?s=128&g=1", "display_name": "rap-2-h", "link": "https://stackoverflow.com/users/978690/rap-2-h"}, "edited": false, "score": 0, "creation_date": 1468405735, "post_id": 38348671, "comment_id": 64110886, "body": "Try <code>Some(Value::File(file))</code> -&gt; <code>Some(&amp;Value::File(file))</code>."}, {"owner": {"reputation": 22928, "user_id": 978690, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/lNUl6.png?s=128&g=1", "display_name": "rap-2-h", "link": "https://stackoverflow.com/users/978690/rap-2-h"}, "edited": false, "score": 0, "creation_date": 1468405997, "post_id": 38348671, "comment_id": 64111025, "body": "&quot;cannot move out of borrowed content&quot;. It works with <code>Some(&amp;Value::File(ref file))</code>. Anyway, thanks!"}, {"owner": {"reputation": 187800, "user_id": 320615, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/65c80e12b6a33913538653f6d4ef1277?s=128&d=identicon&r=PG", "display_name": "Dogbert", "link": "https://stackoverflow.com/users/320615/dogbert"}, "reply_to_user": {"reputation": 22928, "user_id": 978690, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/lNUl6.png?s=128&g=1", "display_name": "rap-2-h", "link": "https://stackoverflow.com/users/978690/rap-2-h"}, "edited": false, "score": 0, "creation_date": 1468406705, "post_id": 38348671, "comment_id": 64111464, "body": "Thanks for the edit! I wanted to confirm if it works before editing my answer as I don&#39;t have an Iron app setup locally to test myself."}], "tags": [], "owner": {"reputation": 187800, "user_id": 320615, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/65c80e12b6a33913538653f6d4ef1277?s=128&d=identicon&r=PG", "display_name": "Dogbert", "link": "https://stackoverflow.com/users/320615/dogbert"}, "is_accepted": true, "score": 2, "last_activity_date": 1468406020, "last_edit_date": 1468406020, "creation_date": 1468404597, "answer_id": 38348671, "question_id": 38348365, "link": "https://stackoverflow.com/questions/38348365/access-to-file-path-on-form-upload-with-iron-params/38348671#38348671", "title": "Access to file path on form upload with Iron Params", "body": "<p><a href=\"https://github.com/iron/params/blob/67bf20edabf8dd955e67cf8e14a2b34bb492d1bb/src/lib.rs#L41\" rel=\"nofollow\"><code>params::Value</code></a> is not a <a href=\"https://github.com/iron/params/blob/67bf20edabf8dd955e67cf8e14a2b34bb492d1bb/src/lib.rs#L151-L181\" rel=\"nofollow\"><code>params::File</code></a>, but an enum that <a href=\"https://github.com/iron/params/blob/67bf20edabf8dd955e67cf8e14a2b34bb492d1bb/src/lib.rs#L57\" rel=\"nofollow\">could contain</a> a <a href=\"https://github.com/iron/params/blob/67bf20edabf8dd955e67cf8e14a2b34bb492d1bb/src/lib.rs#L151-L181\" rel=\"nofollow\"><code>params::File</code></a>.</p>\n\n<p>This should work with proper imports (untested):</p>\n\n<pre><code>match req.get_ref::&lt;Params&gt;().unwrap().find(&amp;[\"file\"]) {\n  Some(&amp;Value::File(ref file)) =&gt; {\n    println!(\"{:?}\", file.path())\n  }\n  _ =&gt; {\n    println!(\"no file\");\n  }\n}\n</code></pre>\n"}], "owner": {"reputation": 22928, "user_id": 978690, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/lNUl6.png?s=128&g=1", "display_name": "rap-2-h", "link": "https://stackoverflow.com/users/978690/rap-2-h"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 274, "favorite_count": 0, "accepted_answer_id": 38348671, "answer_count": 1, "score": 1, "last_activity_date": 1468406020, "creation_date": 1468403783, "last_edit_date": 1468405044, "question_id": 38348365, "link": "https://stackoverflow.com/questions/38348365/access-to-file-path-on-form-upload-with-iron-params", "title": "Access to file path on form upload with Iron Params", "body": "<p>I tried to get the temporary path of an uploaded file using <a href=\"https://github.com/iron/params\" rel=\"nofollow\">Iron params</a>. I have this request handler:</p>\n\n<pre><code>fn handler(req: &amp;mut Request) -&gt; IronResult&lt;Response&gt; {\n    let tmp_file_name = req.get_ref::&lt;Params&gt;().unwrap().find(&amp;[\"file\"]).unwrap();\n    println!(\"{:?}\", tmp_file_name);\n    Ok( Response::with( (status::Ok, \"Lorem Ipsum.\") ) )\n}\n</code></pre>\n\n<p>It displays something like this:</p>\n\n<pre><code>File { path: \"/xxx/yyy\", filename: Some(\"file.txt\"), size: 123 }\n</code></pre>\n\n<p>But if I try to access to the path:</p>\n\n<pre><code>println!(\"{:?}\", tmp_file_name.path());\n</code></pre>\n\n<p>It does not compile:</p>\n\n<pre><code>error: attempted access of field `path` on type `&amp;params::Value`, \nbut no field with that name was found\n</code></pre>\n\n<p>I think I missed some basics about type, but I don't know where to (re)start.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 28990, "user_id": 1114966, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/af8712b05e5cfb862323a07c83749054?s=128&d=identicon&r=PG", "display_name": "squiguy", "link": "https://stackoverflow.com/users/1114966/squiguy"}, "edited": false, "score": 1, "creation_date": 1468392012, "post_id": 38343742, "comment_id": 64102056, "body": "<a href=\"https://doc.rust-lang.org/book/crates-and-modules.html\" rel=\"nofollow noreferrer\">This is some good reading</a>."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1468696553, "last_edit_date": 1592644375, "creation_date": 1468413980, "answer_id": 38352170, "question_id": 38343742, "link": "https://stackoverflow.com/questions/38343742/what-is-imported-when-i-use-a-struct-from-another-module/38352170#38352170", "title": "What is imported when I use a struct from another module?", "body": "<blockquote>\n<p>In <strong>file2.rs</strong> I wrote <code>use mod1::Foo;</code>.</p>\n<p>What do I actually have in <strong>file2.rs</strong>? Only <code>struct Foo</code>, <code>impl Foo</code>? What about <code>impl Drop for Foo</code>?</p>\n</blockquote>\n<p>When you <code>use</code> a type like a struct or an enum, you get all of the <em>inherent methods</em>; those defined in the <code>impl Foo</code>. You'd also be able to access any public fields on the type.</p>\n<blockquote>\n<p>If I get all traits for <code>Foo</code> in <strong>file2.rs</strong>, and I write <code>fn my_func(foo: Foo)</code>, what do I have here? Is <code>Foo</code> a struct or a trait (<code>impl Foo</code>) here?</p>\n</blockquote>\n<p><code>impl Foo</code> <strong>is not a trait</strong>. <code>trait Bar</code> defines a trait. <code>impl Bar for Foo</code>  implements a trait for the type <code>Foo</code>. <code>impl Foo</code> creates <em>inherent methods</em>; these are not related to traits.</p>\n<blockquote>\n<p>I read the Rust book and manual, but they explain only explicit usage, not mention what happens with trait with the same name (impl). The Rust book tells you to import traits explicitly, if so and <code>Drop</code> is not imported by <code>use mod1::Foo</code>, this is a really, really bad thing.</p>\n</blockquote>\n<p>That would be a very bad idea for the language designers to have made. Thankfully, they didn't do that. Importing something simply allows the code that imported it to use it. It doesn't cause the code to disappear if it's not imported.</p>\n<p>The compiler itself is the user of types that implement <code>Drop</code>, so you can think of it as the compiler implementation has <code>use Drop</code> in it somewhere. This is probably not <em>literally</em> true, but a mental model. Just because your code doesn't import <code>Drop</code> doesn't mean some other code couldn't.</p>\n<p>As mentioned elsewhere, you don't have to import <code>Drop</code> anyway, as it's <a href=\"https://doc.rust-lang.org/std/prelude/index.html\" rel=\"nofollow noreferrer\">included in the prelude</a>.</p>\n"}], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 335, "favorite_count": 0, "accepted_answer_id": 38352170, "answer_count": 1, "score": 0, "last_activity_date": 1468696553, "creation_date": 1468389846, "last_edit_date": 1468418080, "question_id": 38343742, "link": "https://stackoverflow.com/questions/38343742/what-is-imported-when-i-use-a-struct-from-another-module", "title": "What is imported when I use a struct from another module?", "body": "<p>I have the module <strong>mod1.rs</strong>:</p>\n\n<pre><code>pub struct Foo;\n\nimpl Foo {}\n\nimpl Drop for Foo {\n    fn drop(&amp;mut self) {}\n}\n</code></pre>\n\n<p>In <strong>file2.rs</strong> I wrote <code>use mod1::Foo;</code>.</p>\n\n<ol>\n<li><p>What do I actually have in <strong>file2.rs</strong>? Only <code>struct Foo</code>, <code>impl Foo</code>? What about <code>impl Drop for Foo</code>?</p></li>\n<li><p>If I get all traits for <code>Foo</code> in <strong>file2.rs</strong>, and I write\n<code>fn my_func(foo: Foo)...</code>, what do I have here? Is <code>Foo</code> a <code>struct</code> or a trait (<code>impl Foo</code>) here? </p></li>\n</ol>\n\n<p>I read the Rust book and manual, but they explain only\nexplicit usage, not mention what happens with <code>trait</code> with the same name (<code>impl</code>). The Rust book tells you to import traits explicitly, if so and <code>Drop</code> is not imported by <code>use mod1::Foo</code>, this is a really, really bad thing.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 187800, "user_id": 320615, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/65c80e12b6a33913538653f6d4ef1277?s=128&d=identicon&r=PG", "display_name": "Dogbert", "link": "https://stackoverflow.com/users/320615/dogbert"}, "reply_to_user": {"reputation": 2840, "user_id": 709010, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/7550d19d9a0b58c9d4b8a16eb1ebb523?s=128&d=identicon&r=PG", "display_name": "Jared", "link": "https://stackoverflow.com/users/709010/jared"}, "edited": false, "score": 0, "creation_date": 1468386223, "post_id": 38342932, "comment_id": 64099737, "body": "@Jared it won&#39;t leak memory (the Boxes would get deallocated as soon as <code>collect</code> is done using them), but it would be terribly inefficient. Please see the edited answer."}], "tags": [], "owner": {"reputation": 187800, "user_id": 320615, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/65c80e12b6a33913538653f6d4ef1277?s=128&d=identicon&r=PG", "display_name": "Dogbert", "link": "https://stackoverflow.com/users/320615/dogbert"}, "is_accepted": false, "score": 2, "last_activity_date": 1468386146, "last_edit_date": 1468386146, "creation_date": 1468385788, "answer_id": 38342932, "question_id": 38342805, "link": "https://stackoverflow.com/questions/38342805/how-do-i-collect-from-multiple-iterator-types/38342932#38342932", "title": "How do I collect from multiple iterator types?", "body": "<p>Here's how I would do it:</p>\n\n<pre><code>trait ToCapitalized {\n    fn to_capitalized(&amp;self) -&gt; String;\n}\n\nimpl ToCapitalized for String {\n    fn to_capitalized(&amp;self) -&gt; String {\n        match self.chars().next() {\n            Some(c) =&gt; {\n                c.to_uppercase()\n                    .chain(self.chars().skip(1).flat_map(|c| c.to_lowercase()))\n                    .collect()\n            }\n            None =&gt; String::new(),\n        }\n    }\n}\n\nfn main() {\n    println!(\"{}\", \"fOoBaR\".to_string().to_capitalized());\n}\n</code></pre>\n\n<p>This will be a little slower than the ideal solution, as it decodes the first char twice, but it's quite readable IMO.</p>\n\n<p>Output:</p>\n\n<pre><code>Foobar\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 2840, "user_id": 709010, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/7550d19d9a0b58c9d4b8a16eb1ebb523?s=128&d=identicon&r=PG", "display_name": "Jared", "link": "https://stackoverflow.com/users/709010/jared"}, "edited": false, "score": 1, "creation_date": 1468386280, "post_id": 38342969, "comment_id": 64099759, "body": "There probably is an Iterator type somewhere in the stdlib, but I doubt any of us will be able to find it. Honestly, I feel that there are too many, but I digress. This looks like the best solution because it simply forgoes the collect call for a similar for loop, which I think would be the smartest approach. Thanks for your input."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": false, "score": 2, "last_activity_date": 1468385943, "creation_date": 1468385943, "answer_id": 38342969, "question_id": 38342805, "link": "https://stackoverflow.com/questions/38342805/how-do-i-collect-from-multiple-iterator-types/38342969#38342969", "title": "How do I collect from multiple iterator types?", "body": "<p>Casting is <em>rarely</em> a good approach to solving type issues in Rust.  The correct solution here would be to write (or find a crate that defines) a type that unifies disparate iterator types.  But that would require <em>effort</em>, so it's simpler to just throw <code>collect</code> out the window:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait ToCapitalized {\n    fn to_capitalized(&amp;self) -&gt; String;\n}\n\nimpl ToCapitalized for String {\n    fn to_capitalized(&amp;self) -&gt; String {\n        let mut r = String::with_capacity(self.len());\n        for (i, c) in self.chars().enumerate() {\n            match i {\n                0 =&gt; r.extend(c.to_uppercase()),\n                _ =&gt; r.extend(c.to_lowercase()),\n            }\n        }\n        r\n    }\n}\n\nfn main() {\n    let buffer = String::from(\"canberra\");\n    println!(\"{}\", buffer.to_capitalized());\n}\n</code></pre>\n\n<p>This is, more or less, what <code>collect</code> would do <em>anyway</em> if you had some type to represent \"either <code>ToUppercase</code> or <code>ToLowercase</code>\".  In the <em>vast</em> majority of cases, this will also only perform a single allocation.</p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1468411258, "post_id": 38343355, "comment_id": 64114598, "body": "<a href=\"https://play.rust-lang.org/?gist=dfa85b1d5e07d8e5e29785c5e530ee76\" rel=\"nofollow noreferrer\">Can be simplified and slightly optimized</a>."}], "tags": [], "owner": {"reputation": 2840, "user_id": 709010, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/7550d19d9a0b58c9d4b8a16eb1ebb523?s=128&d=identicon&r=PG", "display_name": "Jared", "link": "https://stackoverflow.com/users/709010/jared"}, "is_accepted": true, "score": 2, "last_activity_date": 1468642761, "last_edit_date": 1468642761, "creation_date": 1468387989, "answer_id": 38343355, "question_id": 38342805, "link": "https://stackoverflow.com/questions/38342805/how-do-i-collect-from-multiple-iterator-types/38343355#38343355", "title": "How do I collect from multiple iterator types?", "body": "<p>After looking at the implementation for <code>pub fn to_uppercase(&amp;self) -&gt; String</code> <a href=\"https://github.com/rust-lang/rust/blob/master/src/libcollections/str.rs\" rel=\"nofollow\">here</a>, I devised a solution that is a bit of a hybrid between Dogbert and DK.'s solutions and the implementation given in the standard library. It even works with Unicode!</p>\n\n<pre><code>fn to_capitalized(&amp;self) -&gt; String {\n    match self.len() {\n        0 =&gt; String::new(),\n        _ =&gt; {\n            let mut s = String::with_capacity(self.len());\n            s.extend(self.chars().next().unwrap().to_uppercase());\n            s.extend(self.chars().skip(1).flat_map(|c| c.to_lowercase()));\n            return s;\n        }\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=118af6f3d0160a9458356e2a1e75fcbe&amp;version=stable&amp;backtrace=0\" rel=\"nofollow\">Working Rust Playground Example</a></p>\n\n<p>Edit: For greater visibility, Shepmaster's simplified and optimized solution:</p>\n\n<pre><code>fn to_capitalized(&amp;self) -&gt; String {\n    let mut s = String::with_capacity(self.len());\n    let mut chars = self.chars(); \n\n    s.extend(chars.by_ref().take(1).flat_map(|c| c.to_uppercase()));\n    s.extend(chars.flat_map(|c| c.to_lowercase()));\n\n    s\n}\n</code></pre>\n"}], "owner": {"reputation": 2840, "user_id": 709010, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/7550d19d9a0b58c9d4b8a16eb1ebb523?s=128&d=identicon&r=PG", "display_name": "Jared", "link": "https://stackoverflow.com/users/709010/jared"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 596, "favorite_count": 1, "accepted_answer_id": 38343355, "answer_count": 3, "score": 1, "last_activity_date": 1563207397, "creation_date": 1468385038, "last_edit_date": 1495540287, "question_id": 38342805, "link": "https://stackoverflow.com/questions/38342805/how-do-i-collect-from-multiple-iterator-types", "title": "How do I collect from multiple iterator types?", "body": "<p>I am attempting to implement a new trait for a String that has a function that capitalizes the first letter of each String and un-capitalizes the rest. I am basing the function's interface on <code>to_uppercase()</code> and <code>to_lowercase()</code> in the Rust Standard Library.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::io;\n\ntrait ToCapitalized {\n    fn to_capitalized(&amp;self) -&gt; String;\n}\n\nimpl ToCapitalized for String {\n    fn to_capitalized(&amp;self) -&gt; String {\n        self.chars().enumerate().map(|(i, c)| {\n            match i {\n                0 =&gt; c.to_uppercase(),\n                _ =&gt; c.to_lowercase(),\n            }\n        }).collect()\n    }\n}\n\nfn main() {\n    let mut buffer = String::new();\n    io::stdin().read_line(&amp;mut buffer).ok().expect(\"Unable to read from stdin.\");\n\n    println!(\"{}\", buffer.to_capitalized());\n}\n</code></pre>\n\n<p>This code is based on a suggestion given <a href=\"https://stackoverflow.com/questions/26544542/modifying-chars-in-a-string-by-index\">here</a>, but the code is outdated and causes multiple compilation errors. The only issue I am having with my implementation now is the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>src/main.rs:10:13: 13:14 error: match arms have incompatible types [E0308]\nsrc/main.rs:10             match i {\n                           ^\nsrc/main.rs:10:13: 13:14 help: run `rustc --explain E0308` to see a detailed explanation\nsrc/main.rs:10:13: 13:14 note: expected type `std::char::ToUppercase`\nsrc/main.rs:10:13: 13:14 note:    found type `std::char::ToLowercase`\nsrc/main.rs:12:22: 12:38 note: match arm with an incompatible type\nsrc/main.rs:12                 _ =&gt; c.to_lowercase(),\n</code></pre>\n\n<p>So in short, the return values of <code>fn to_uppercase(&amp;self) -&gt; ToUppercase</code> and <code>fn to_lowercase(&amp;self) -&gt; ToLowercase</code> can't be collected together because the map now has multiple return types.</p>\n\n<p>I've attempted trying to cast them to another common Iterator type such as <code>Bytes</code> and <code>Chars</code>, but these iterator types can't be collected to form a String. Any suggestions?</p>\n"}, {"tags": ["compiler-errors", "closures", "rust", "lifetime"], "answers": [{"comments": [{"owner": {"reputation": 3236, "user_id": 1133298, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/5065a53cb24c3b79e28dacf5f78b8b23?s=128&d=identicon&r=PG", "display_name": "Ptharien&#39;s Flame", "link": "https://stackoverflow.com/users/1133298/pthariens-flame"}, "edited": false, "score": 0, "creation_date": 1468366122, "post_id": 38339915, "comment_id": 64095132, "body": "While this compiles, I now can&#39;t use it at all.  The expression <code>Self::from(&amp;mut || {})</code> causes the error &quot;borrowed value does not live long enough&quot;."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 3236, "user_id": 1133298, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/5065a53cb24c3b79e28dacf5f78b8b23?s=128&d=identicon&r=PG", "display_name": "Ptharien&#39;s Flame", "link": "https://stackoverflow.com/users/1133298/pthariens-flame"}, "edited": false, "score": 2, "creation_date": 1468368117, "post_id": 38339915, "comment_id": 64095552, "body": "@Ptharien&#39;sFlame you could do that if you place the closure in a variable that lasts longer than the result of <code>Self::from</code> - that would allow the reference to be valid long enough."}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": false, "score": 2, "last_activity_date": 1468362771, "creation_date": 1468362771, "answer_id": 38339915, "question_id": 38339755, "link": "https://stackoverflow.com/questions/38339755/value-doesnt-live-long-enough-despite-being-constrained-to/38339915#38339915", "title": "Value doesn&#39;t live long enough, despite being constrained to", "body": "<p><code>f</code> is local to that <code>from</code> method so are all references to it.\nWhat you want is:</p>\n\n<pre><code>pub struct UserAction&lt;'u&gt; {\n    _act: &amp;'u mut (FnMut() + 'u)\n}\n\nimpl&lt;'u, F: FnMut() + 'u&gt; From&lt;&amp;'u mut F&gt; for UserAction&lt;'u&gt; {\n//                             ^^^^^^^\n    fn from(f: &amp;'u mut F) -&gt; Self {\n//             ^^^^^^^\n        UserAction { _act: f as &amp;'u mut (FnMut() + 'u) }\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 3236, "user_id": 1133298, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/5065a53cb24c3b79e28dacf5f78b8b23?s=128&d=identicon&r=PG", "display_name": "Ptharien&#39;s Flame", "link": "https://stackoverflow.com/users/1133298/pthariens-flame"}, "edited": false, "score": 0, "creation_date": 1468387204, "post_id": 38340631, "comment_id": 64100066, "body": "Thank you!  I ended up going with the <code>Box</code>-based approach."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1468367986, "last_edit_date": 1495542637, "creation_date": 1468367986, "answer_id": 38340631, "question_id": 38339755, "link": "https://stackoverflow.com/questions/38339755/value-doesnt-live-long-enough-despite-being-constrained-to/38340631#38340631", "title": "Value doesn&#39;t live long enough, despite being constrained to", "body": "<p>As <a href=\"https://stackoverflow.com/a/38339915/155423\">mcarton says</a>, you are passing ownership of the closure into the function, then attempting to take a reference to it. Rejoice that the compiler caught the mistake and prevented you from using a reference to some out-of-scope variable that would cause memory corruption.</p>\n\n<p>The restriction <code>F: FnMut() + 'u</code> states that <code>F</code> must be a type that implements the <code>FnMut</code> trait and <strong>contains references</strong> that outlive the lifetime <code>'u</code>. It does not say that <code>F</code> itself must outlive that lifetime. In fact, we can see that <code>f</code> has no owner after the method exits, so its lifetime ends then - thus the error.</p>\n\n<p>The most direct equivalent that should work is to use a <em>boxed trait object</em> instead of a <em>trait object reference</em>:</p>\n\n<pre><code>pub struct UserAction&lt;'u&gt; {\n    _act: Box&lt;FnMut() + 'u&gt;,\n}\n\nimpl&lt;'u, F: FnMut() + 'u&gt; From&lt;F&gt; for UserAction&lt;'u&gt; {\n    fn from(f: F) -&gt; Self {\n        UserAction { _act: Box::new(f) }\n    }\n}\n</code></pre>\n\n<p>Another alternate is to percolate the generic type:</p>\n\n<pre><code>pub struct UserAction&lt;F&gt; {\n    _act: F,\n}\n\nimpl&lt;F: FnMut()&gt; From&lt;F&gt; for UserAction&lt;F&gt; {\n    fn from(f: F) -&gt; Self {\n        UserAction { _act: f }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 3236, "user_id": 1133298, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/5065a53cb24c3b79e28dacf5f78b8b23?s=128&d=identicon&r=PG", "display_name": "Ptharien&#39;s Flame", "link": "https://stackoverflow.com/users/1133298/pthariens-flame"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 67, "favorite_count": 0, "accepted_answer_id": 38340631, "answer_count": 2, "score": 2, "last_activity_date": 1468367986, "creation_date": 1468361856, "question_id": 38339755, "link": "https://stackoverflow.com/questions/38339755/value-doesnt-live-long-enough-despite-being-constrained-to", "title": "Value doesn&#39;t live long enough, despite being constrained to", "body": "<p>The following Rust code fails to compile:</p>\n\n<pre><code>pub struct UserAction&lt;'u&gt; {\n    _act: &amp;'u mut (FnMut() + 'u)\n}\n\nimpl&lt;'u, F: FnMut() + 'u&gt; From&lt;F&gt; for UserAction&lt;'u&gt; {\n    fn from(f: F) -&gt; Self {\n        UserAction { _act: (&amp;mut f) as &amp;'u mut (FnMut() + 'u) }\n    }\n}\n</code></pre>\n\n<p>The error I get from <code>rustc</code> 1.10 stable is:</p>\n\n<pre><code>lives.rs:7:38: 7:39 error: `f` does not live long enough\nlives.rs:7             UserAction { _act: (&amp;mut f) as &amp;'u mut (FnMut() + 'u) }\n                                                ^\nlives.rs:6:31: 8:10 note: reference must be valid for the lifetime 'u as defined on the block at 6:30...\nlives.rs:6         fn from(f: F) -&gt; Self {\n                                         ^\nlives.rs:6:31: 8:10 note: ...but borrowed value is only valid for the scope of function body at 6:30\nlives.rs:6         fn from(f: F) -&gt; Self {\n                                         ^\nerror: aborting due to previous error\n</code></pre>\n\n<p>I'm not sure why this is an error; the type <code>F</code> lives at least as long as the lifetime <code>'u</code>, because it's constrained to.  What am I missing, and how can I fix this error?</p>\n"}, {"tags": ["enums", "pattern-matching", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1468353768, "post_id": 38337501, "comment_id": 64089962, "body": "FYI, the <code>: bool</code> is superfluous; the type is inferred by the value of the <code>match</code> arms."}], "answers": [{"tags": [], "owner": {"reputation": 978, "user_id": 6426219, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/9qNtI.jpg?s=128&g=1", "display_name": "JDemler", "link": "https://stackoverflow.com/users/6426219/jdemler"}, "is_accepted": true, "score": 2, "last_activity_date": 1468354238, "creation_date": 1468354238, "answer_id": 38338052, "question_id": 38337501, "link": "https://stackoverflow.com/questions/38337501/is-it-possible-to-use-the-value-of-a-variable-when-pattern-matching-instead-of-b/38338052#38338052", "title": "Is it possible to use the value of a variable when pattern matching instead of binding to it?", "body": "<p>What you are looking for is called <a href=\"https://doc.rust-lang.org/book/patterns.html#guards\" rel=\"nofollow\">match guards</a>.</p>\n\n<p>If you let <code>FooBar</code> derive from <code>Copy</code> <code>Clone</code> and <code>PartialEq</code> you can build <code>match guards</code> for its values:</p>\n\n<pre><code>let bar_match = FooBar::Bar;\nlet answer: bool = match what {\n  Whatever { f_type } if f_type == FooBar::Bar =&gt; true,\n  _ =&gt; false,\n};\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=957faaff0d85666481b296149e292606&amp;version=stable&amp;backtrace=0\" rel=\"nofollow\">Full play.rust-lang.org example.</a></p>\n"}], "owner": {"reputation": 332, "user_id": 4046595, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/80fd7b82bb34d5fbafaf114ba8a54820?s=128&d=identicon&r=PG&f=1", "display_name": "bspates", "link": "https://stackoverflow.com/users/4046595/bspates"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 57, "favorite_count": 0, "closed_date": 1468354643, "accepted_answer_id": 38338052, "answer_count": 1, "score": 1, "last_activity_date": 1468354238, "creation_date": 1468352072, "last_edit_date": 1468353545, "question_id": 38337501, "link": "https://stackoverflow.com/questions/38337501/is-it-possible-to-use-the-value-of-a-variable-when-pattern-matching-instead-of-b", "closed_reason": "Duplicate", "title": "Is it possible to use the value of a variable when pattern matching instead of binding to it?", "body": "<p>Consider the following</p>\n\n<pre><code>enum FooBar {\n    Bar,\n    Foo,\n}\n\nstruct Whatever {\n    f_type: FooBar,\n}\n\nlet what = Whatever { f_type: FooBar::Bar };\n</code></pre>\n\n<p>I know this works: </p>\n\n<pre><code>let answer: bool = match what {\n    Whatever { f_type: FooBar::Bar } =&gt; true,\n    _ =&gt; false, \n};\nprintln!(\"{:?}\", answer); // true\n</code></pre>\n\n<p>Is there a way to get this to work such that <code>bar_match</code> is used to compare the value instead of being bound to the current value? </p>\n\n<pre><code>let bar_match = FooBar::Bar;\nlet answer: bool = match what {\n    Whatever { f_type: bar_match } =&gt; true,\n    _ =&gt; false,\n};\nprintln!(\"{:?}\", answer); // true\n</code></pre>\n\n<p>I'm a Rust noob but I can't find an answer to this question anywhere online.</p>\n"}, {"tags": ["rust", "traits"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1468351756, "creation_date": 1468351756, "answer_id": 38337412, "question_id": 38337286, "link": "https://stackoverflow.com/questions/38337286/how-do-i-specify-where-annotations-in-a-trait-in-rust/38337412#38337412", "title": "How do I specify &quot;where&quot; annotations in a trait in Rust?", "body": "<p>You need to parameterize the trait:</p>\n\n<pre><code>trait TestVec&lt;T&gt; {\n    fn retain_with_prints&lt;F&gt;(&amp;mut self, mut f: F)\n        where F: FnMut(&amp;T) -&gt; bool;\n}\n</code></pre>\n\n<p>And also link the types at implementation time.</p>\n\n<pre><code>impl&lt;T&gt; TestVec&lt;T&gt; for Vec&lt;T&gt;\n</code></pre>\n\n<hr>\n\n<p>Beyond that, you will need to require that your T implements <code>Display</code> and make your variable mutable:</p>\n\n<pre><code>impl&lt;T&gt; TestVec&lt;T&gt; for Vec&lt;T&gt;\n    where T: std::fmt::Display\n{\n</code></pre>\n\n\n\n<pre><code>let mut v = vec![0,1,2,3,4,5];\n</code></pre>\n"}], "owner": {"reputation": 5006, "user_id": 2023432, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/89ZPT.png?s=128&g=1", "display_name": "bright-star", "link": "https://stackoverflow.com/users/2023432/bright-star"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 161, "favorite_count": 0, "accepted_answer_id": 38337412, "answer_count": 1, "score": 1, "last_activity_date": 1468351756, "creation_date": 1468351314, "last_edit_date": 1468351602, "question_id": 38337286, "link": "https://stackoverflow.com/questions/38337286/how-do-i-specify-where-annotations-in-a-trait-in-rust", "title": "How do I specify &quot;where&quot; annotations in a trait in Rust?", "body": "<p>I'm trying to re-implement <code>Vec::retain()</code> with print statements so that I can figure out how it works, but I'm stuck on this extended type annotation <code>where F: FnMut(&amp;T) -&gt; bool</code>. I understand why it's there, but I can't figure out how to annotate it in the trait declaration so it stops throwing errors (and lets me fix the other ones in the code):</p>\n\n<pre><code>trait TestVec {\n    fn retain_with_prints&lt;F&gt;(&amp;mut self, mut f: F);\n}\n\nimpl&lt;T&gt; TestVec for Vec&lt;T&gt; {\n    fn retain_with_prints&lt;F&gt;(&amp;mut self, mut f: F)\n        where F: FnMut(&amp;T) -&gt; bool\n    {\n        let len = self.len();\n        let mut del = 0;\n        {\n            let v = &amp;mut **self;\n\n            for i in 0..len {\n                println!(\"on position: {}\", &amp;i);\n                if !f(&amp;v[i]) {\n                    del += 1;\n                    println!(\"incremented del to: {}\", del);\n                } else if del &gt; 0 {\n                    println!(\"swapping {} for {}\", v[i - del], v[i]);\n                    v.swap(i - del, i);\n                }\n            }\n        }\n        if del &gt; 0 {\n            println!(\"removing last {} elements of vector\", del);\n            self.truncate(len - del);\n        }\n    }\n}\n\nfn main() {\n    let v = vec![0,1,2,3,4,5];\n    v.retain_with_prints(|item| { item % 2 == 0 });\n}\n</code></pre>\n\n<p>Errors: </p>\n\n<ul>\n<li>As is: <code>error: the requirement `for&lt;'r&gt; F: std::ops::FnMut&lt;(&amp;'r T,)&gt;` appears on the impl method but not on the corresponding trait method [E0276]</code></li>\n<li>Adding <code>where</code> clause to trait: <code>error: type name `T` is undefined or not in scope [E0412]</code></li>\n</ul>\n\n<p>The compiler doesn't seem to like it if I try to specify <code>trait&lt;T&gt;</code> either, and I can't seem to get the right thing to come up in search results.</p>\n\n<p>How do I specify this?</p>\n"}, {"tags": ["serialization", "io", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1468350505, "post_id": 38334994, "comment_id": 64088203, "body": "The question you referenced has now been updated."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1468350628, "post_id": 38334994, "comment_id": 64088290, "body": "<i>but <code>std::slice::raw::mut_buf_as_slice</code> has been deprecated, hence I want to re-ask this question</i> \u2014 in the future, it may be more productive to ask what the replacement for the deprecated functionality is."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1468350475, "post_id": 38336184, "comment_id": 64088182, "body": "The original question has now been updated. I&#39;d encourage you to post this answer there as it&#39;s a great compliment to the existing answer."}, {"owner": {"reputation": 1003, "user_id": 1103760, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/OInfA.png?s=128&g=1", "display_name": "don bright", "link": "https://stackoverflow.com/users/1103760/don-bright"}, "edited": false, "score": 1, "creation_date": 1530482267, "post_id": 38336184, "comment_id": 89239540, "body": "is there really no safe way to read a binary file in rust into a struct?"}], "tags": [], "owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "is_accepted": true, "score": 5, "last_activity_date": 1468349088, "last_edit_date": 1468349088, "creation_date": 1468347228, "answer_id": 38336184, "question_id": 38334994, "link": "https://stackoverflow.com/questions/38334994/how-to-read-a-c-struct-from-a-binary-file-in-rust/38336184#38336184", "title": "How to read a C struct from a binary file in Rust?", "body": "<p>I believe that <code>raw::mut_buf_as_slice</code> was replaced with <a href=\"https://doc.rust-lang.org/stable/std/slice/fn.from_raw_parts_mut.html\" rel=\"noreferrer\"><code>slice::from_raw_parts_mut</code></a>.</p>\n\n<hr>\n\n<p><strong>Note</strong> that the following code does not take into account any <a href=\"https://en.wikipedia.org/wiki/Endianness\" rel=\"noreferrer\">endianness</a> or <a href=\"https://en.wikipedia.org/wiki/Data_structure_alignment#Data_structure_padding\" rel=\"noreferrer\">padding</a> issues and is intended to be used with <a href=\"https://en.wikipedia.org/wiki/Passive_data_structure\" rel=\"noreferrer\">POD types</a>. <code>struct utmp</code> should be safe in this case.</p>\n\n<hr>\n\n<p>Here is a function that can read a struct (of a pod type) from a file:</p>\n\n<pre><code>use std::io::{self, BufReader, Read};\nuse std::fs::{self, File};\nuse std::path::Path;\nuse std::slice;\n\nfn read_struct&lt;T, R: Read&gt;(mut read: R) -&gt; io::Result&lt;T&gt; {\n    let num_bytes = ::std::mem::size_of::&lt;T&gt;();\n    unsafe {\n        let mut s = ::std::mem::uninitialized();\n        let mut buffer = slice::from_raw_parts_mut(&amp;mut s as *mut T as *mut u8, num_bytes);\n        match read.read_exact(buffer) {\n            Ok(()) =&gt; Ok(s),\n            Err(e) =&gt; {\n                ::std::mem::forget(s);\n                Err(e)\n            }\n        }\n    }\n}\n\n// use\n// read_struct::&lt;Utmp&gt;(reader)\n</code></pre>\n\n<p>If you want to read all utmp structs from the utmp file, you can execute <code>read_struct</code> multiple times or read all the file at once:</p>\n\n<pre><code>fn read_structs&lt;T, P: AsRef&lt;Path&gt;&gt;(path: P) -&gt; io::Result&lt;Vec&lt;T&gt;&gt; {\n    let path = path.as_ref();\n    let struct_size = ::std::mem::size_of::&lt;T&gt;();\n    let num_bytes = try!(fs::metadata(path)).len() as usize;\n    let num_structs = num_bytes / struct_size;\n    let mut reader = BufReader::new(try!(File::open(path)));\n    let mut r = Vec::&lt;T&gt;::with_capacity(num_structs);\n    unsafe {\n        let mut buffer = slice::from_raw_parts_mut(r.as_mut_ptr() as *mut u8, num_bytes);\n        try!(reader.read_exact(buffer));\n        r.set_len(num_structs);\n    }\n    Ok(r)\n}\n\n// use\n// read_structs::&lt;Utmp, _&gt;(\"/var/run/utmp\"))\n</code></pre>\n"}], "owner": {"reputation": 840, "user_id": 4725840, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/mpeTv.jpg?s=128&g=1", "display_name": "knight42", "link": "https://stackoverflow.com/users/4725840/knight42"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4286, "favorite_count": 3, "closed_date": 1468350493, "accepted_answer_id": 38336184, "answer_count": 1, "score": 5, "last_activity_date": 1468349088, "creation_date": 1468342839, "last_edit_date": 1495535383, "question_id": 38334994, "link": "https://stackoverflow.com/questions/38334994/how-to-read-a-c-struct-from-a-binary-file-in-rust", "closed_reason": "Duplicate", "title": "How to read a C struct from a binary file in Rust?", "body": "<p>I have read <a href=\"https://stackoverflow.com/questions/25410028/how-to-read-a-struct-from-file-in-rust\">How to read a struct from file in Rust?</a>, but <code>std::slice::raw::mut_buf_as_slice</code> has been deprecated, hence I want to re-ask this question.</p>\n\n<p>I want to read a <code>struct utmp</code> from <code>/var/run/utmp</code>, and I have tried the following code:</p>\n\n<pre><code>fn read_utmp() -&gt; Utmp {\n    let mut reader = BufReader::new(File::open(\"/var/run/utmp\").unwrap());\n    let mut ut = vec![];\n    let size = mem::size_of::&lt;Utmp&gt;();\n    reader.take(size as u64).read_to_end(&amp;mut ut);\n    unsafe {\n        std::mem::transmute(ut)\n    }\n}\n</code></pre>\n\n<p>And as expected, the compiler complaint:</p>\n\n<blockquote>\n  <p>error: transmute called with differently sized types: std::vec::Vec (192 bits) to Utmp (3056 bits) [E0512]</p>\n</blockquote>\n\n<p>How could I do this?</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 187800, "user_id": 320615, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/65c80e12b6a33913538653f6d4ef1277?s=128&d=identicon&r=PG", "display_name": "Dogbert", "link": "https://stackoverflow.com/users/320615/dogbert"}, "edited": false, "score": 0, "creation_date": 1468342075, "post_id": 38334679, "comment_id": 64083727, "body": "You also want all the files that <code>lib.rs</code> (or <code>main.rs</code>) includes using <code>mod ...;</code>?"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1468342408, "post_id": 38334846, "comment_id": 64083935, "body": "As I understand it, the question is impossible to fully answer as <a href=\"http://doc.crates.io/build-script.html\" rel=\"nofollow noreferrer\">build scripts</a> are capable of outputting any files they want."}, {"owner": {"reputation": 36561, "user_id": 36330, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/087bc3a6b2fe0dbbf39ca49f40e2bac1?s=128&d=identicon&r=PG", "display_name": "joeforker", "link": "https://stackoverflow.com/users/36330/joeforker"}, "edited": false, "score": 0, "creation_date": 1468354973, "post_id": 38334846, "comment_id": 64090688, "body": "No .dylib, .exe or .so extensions included?"}], "tags": [], "owner": {"reputation": 187800, "user_id": 320615, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/65c80e12b6a33913538653f6d4ef1277?s=128&d=identicon&r=PG", "display_name": "Dogbert", "link": "https://stackoverflow.com/users/320615/dogbert"}, "is_accepted": true, "score": 2, "last_activity_date": 1468342465, "last_edit_date": 1468342465, "creation_date": 1468342353, "answer_id": 38334846, "question_id": 38334679, "link": "https://stackoverflow.com/questions/38334679/cargo-command-to-print-the-list-of-target-files/38334846#38334846", "title": "Cargo command to print the list of target files?", "body": "<p><a href=\"https://github.com/rust-lang/cargo/blob/master/src/bin/read_manifest.rs\" rel=\"nofollow\"><code>cargo read-manifest</code></a> will print a JSON object that contains a <code>targets</code> key that you can use. Using <a href=\"https://stedolan.github.io/jq/\" rel=\"nofollow\"><code>jq</code></a> to filter and pretty print, here's the output on a checkout of the <code>rustfmt</code> crate:</p>\n\n<pre><code>\u279c cargo read-manifest | jq '.targets'\n[\n  {\n    \"kind\": [\n      \"lib\"\n    ],\n    \"name\": \"rustfmt\",\n    \"src_path\": \"/Users/.../rustfmt/src/lib.rs\"\n  },\n  {\n    \"kind\": [\n      \"bin\"\n    ],\n    \"name\": \"cargo-fmt\",\n    \"src_path\": \"/Users/.../rustfmt/src/bin/cargo-fmt.rs\"\n  },\n  {\n    \"kind\": [\n      \"bin\"\n    ],\n    \"name\": \"rustfmt\",\n    \"src_path\": \"/Users/.../rustfmt/src/bin/rustfmt.rs\"\n  },\n  {\n    \"kind\": [\n      \"custom-build\"\n    ],\n    \"name\": \"build-script-build\",\n    \"src_path\": \"build.rs\"\n  },\n  {\n    \"kind\": [\n      \"test\"\n    ],\n    \"name\": \"system\",\n    \"src_path\": \"/Users/.../rustfmt/tests/system.rs\"\n  }\n]\n</code></pre>\n"}], "owner": {"reputation": 36561, "user_id": 36330, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/087bc3a6b2fe0dbbf39ca49f40e2bac1?s=128&d=identicon&r=PG", "display_name": "joeforker", "link": "https://stackoverflow.com/users/36330/joeforker"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1511, "favorite_count": 0, "accepted_answer_id": 38334846, "answer_count": 1, "score": 1, "last_activity_date": 1468342465, "creation_date": 1468341709, "last_edit_date": 1468342157, "question_id": 38334679, "link": "https://stackoverflow.com/questions/38334679/cargo-command-to-print-the-list-of-target-files", "title": "Cargo command to print the list of target files?", "body": "<p>What is the command to get <code>cargo</code> to print the list of files it would output after running <code>cargo build</code>?</p>\n"}, {"tags": ["loops", "closures", "rust"], "answers": [{"comments": [{"owner": {"reputation": 6658, "user_id": 293048, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/f6dc18955196327fce8300800c7fee5e?s=128&d=identicon&r=PG", "display_name": "someguy", "link": "https://stackoverflow.com/users/293048/someguy"}, "edited": false, "score": 0, "creation_date": 1468335031, "post_id": 38331936, "comment_id": 64079007, "body": "Thanks. To be honest I tried that at one point, but had my doubts because of another error (now fixed) and also because it looked strange. Where can I learn more about receivers?"}, {"owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "reply_to_user": {"reputation": 6658, "user_id": 293048, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/f6dc18955196327fce8300800c7fee5e?s=128&d=identicon&r=PG", "display_name": "someguy", "link": "https://stackoverflow.com/users/293048/someguy"}, "edited": false, "score": 0, "creation_date": 1468335425, "post_id": 38331936, "comment_id": 64079300, "body": "Receiver is the name used for the <code>self</code> parameter in the description of <code>Fn</code>, <code>FnMut</code> and <code>FnOnce</code> traits. You can read about the self parameter in <a href=\"https://doc.rust-lang.org/book/method-syntax.html\" rel=\"nofollow noreferrer\">the book</a>."}, {"owner": {"reputation": 6658, "user_id": 293048, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/f6dc18955196327fce8300800c7fee5e?s=128&d=identicon&r=PG", "display_name": "someguy", "link": "https://stackoverflow.com/users/293048/someguy"}, "edited": false, "score": 0, "creation_date": 1468335563, "post_id": 38331936, "comment_id": 64079410, "body": "Ok, let me rephrase. What is <code>self</code> in the context of a closure? Is it the enclosing environment?"}, {"owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "reply_to_user": {"reputation": 6658, "user_id": 293048, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/f6dc18955196327fce8300800c7fee5e?s=128&d=identicon&r=PG", "display_name": "someguy", "link": "https://stackoverflow.com/users/293048/someguy"}, "edited": false, "score": 1, "creation_date": 1468335852, "post_id": 38331936, "comment_id": 64079633, "body": "Sorry for my confusion. For a closure,  yes, self is the context of the closure. You can also implement <code>FnMut</code> trait for any struct (although it is not stable), in this case, <code>self</code> is a mutable reference to a instance of the struct, like in others trait implementations."}], "tags": [], "owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "is_accepted": true, "score": 5, "last_activity_date": 1468334604, "last_edit_date": 1468334604, "creation_date": 1468334262, "answer_id": 38331936, "question_id": 38331779, "link": "https://stackoverflow.com/questions/38331779/iterate-over-and-call-closures-in-fnmut-vector/38331936#38331936", "title": "Iterate over and call closures in FnMut vector", "body": "<p><a href=\"https://doc.rust-lang.org/stable/std/ops/trait.FnMut.html\" rel=\"noreferrer\"><code>FnMut</code></a> takes a mutable receiver, so you must have a mutable reference to call it:</p>\n\n<pre><code>struct Foo&lt;'a&gt; {\n    callbacks: Vec&lt;&amp;'a mut FnMut(u32)&gt;,\n}\n</code></pre>\n"}], "owner": {"reputation": 6658, "user_id": 293048, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/f6dc18955196327fce8300800c7fee5e?s=128&d=identicon&r=PG", "display_name": "someguy", "link": "https://stackoverflow.com/users/293048/someguy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 434, "favorite_count": 0, "accepted_answer_id": 38331936, "answer_count": 1, "score": 3, "last_activity_date": 1468334604, "creation_date": 1468333860, "question_id": 38331779, "link": "https://stackoverflow.com/questions/38331779/iterate-over-and-call-closures-in-fnmut-vector", "title": "Iterate over and call closures in FnMut vector", "body": "<p>I have a <code>struct</code> similar to this:</p>\n\n<pre><code>struct Foo&lt;'a&gt; {\n    callbacks: Vec&lt;&amp;'a FnMut(u32)&gt;,\n}\n</code></pre>\n\n<p>I want to call each callback, but my attempt doesn't work:</p>\n\n<pre><code>fn foo(&amp;mut self) {\n    for f in &amp;mut self.callbacks {\n        (*f)(0);\n    }\n}\n</code></pre>\n\n<p>I get this error:</p>\n\n<pre><code>error: cannot borrow immutable borrowed content `**f` as mutable\n</code></pre>\n\n<p>I also tried <code>iter_mut()</code> but I get the same error.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1468330951, "post_id": 38330483, "comment_id": 64075720, "body": "Is there some reason you can&#39;t just collect <i>directly</i> into <code>errcheck</code>?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1468332119, "post_id": 38330483, "comment_id": 64076725, "body": "@DK. Maybe that&#39;s the reason that Rayon is interesting here... I assume you can&#39;t because it&#39;s parallel?"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1468332181, "post_id": 38330483, "comment_id": 64076770, "body": "@Shepmaster <i>blinks</i> I&#39;m so used to staring at iterator chains I didn&#39;t even notice."}, {"owner": {"reputation": 21101, "user_id": 416626, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/ad98b7aa615718b4a2446d12af86be73?s=128&d=identicon&r=PG", "display_name": "urschrei", "link": "https://stackoverflow.com/users/416626/urschrei"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1468332217, "post_id": 38330483, "comment_id": 64076796, "body": "@shepmaster @dk It&#39;s rayon-specific in this case; if I use <code>iter()</code>, I can collect directly into <code>errcheck</code> using <code>collect()</code> and <code>map_err()</code> in the match arms, which I can&#39;t seem to do using <code>par_iter()</code>. Anyway, I&#39;ve noted that it&#39;s inefficient because of having to create an extra vector just to hold a result in the format I want."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1468332400, "post_id": 38330483, "comment_id": 64076942, "body": "@DK. I suppose thats a +1 and a -1 for Rayon. &quot;It looks just like a regular iterator!&quot;"}, {"owner": {"reputation": 21101, "user_id": 416626, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/ad98b7aa615718b4a2446d12af86be73?s=128&d=identicon&r=PG", "display_name": "urschrei", "link": "https://stackoverflow.com/users/416626/urschrei"}, "reply_to_user": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1468332521, "post_id": 38330483, "comment_id": 64077028, "body": "@DK if it&#39;s any consolation, I spent about an hour going WTF when <code>collect()</code> didn&#39;t work, and didn&#39;t even find <code>collect_into()</code> until the following day."}], "answers": [{"tags": [], "owner": {"reputation": 5662, "user_id": 5781248, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/712de4f2f811d1a400d3311c9cdd5836?s=128&d=identicon&r=PG&f=1", "display_name": "J.J. Hakala", "link": "https://stackoverflow.com/users/5781248/j-j-hakala"}, "is_accepted": false, "score": 3, "last_activity_date": 1469185536, "last_edit_date": 1469185536, "creation_date": 1469184351, "answer_id": 38524496, "question_id": 38330483, "link": "https://stackoverflow.com/questions/38330483/is-there-a-fast-way-to-check-a-vec-for-an-error-result/38524496#38524496", "title": "Is there a fast way to check a Vec for an error result?", "body": "<p>If you need only the items that do not fulfil certain conditions,\nthere is <code>filter()</code>:</p>\n\n<pre><code>let bounds1 = (-90.0, 90.0);\nlet bounds2 = (-180.0, 180.0);\nlet (xmin, xmax) = bounds1;\nlet (ymin, ymax) = bounds2;\n\ncoordinates.par_iter().filter(|pair| {\n    let x = pair[0];\n    let y = pair[1];\n    !((xmin &lt;= x) &amp;&amp; (x &lt;= xmax) &amp;&amp; (ymin &lt;= y) &amp;&amp; (y &lt;= ymax))\n}).for_each(|pair| {\n    println!(\"Bad pair: {} {}\", pair[0], pair[1]);\n});\n</code></pre>\n\n<p>In other words, is map the right operation in the first place.</p>\n"}], "owner": {"reputation": 21101, "user_id": 416626, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/ad98b7aa615718b4a2446d12af86be73?s=128&d=identicon&r=PG", "display_name": "urschrei", "link": "https://stackoverflow.com/users/416626/urschrei"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 454, "favorite_count": 1, "answer_count": 1, "score": 3, "last_activity_date": 1469185536, "creation_date": 1468330556, "last_edit_date": 1468332511, "question_id": 38330483, "link": "https://stackoverflow.com/questions/38330483/is-there-a-fast-way-to-check-a-vec-for-an-error-result", "title": "Is there a fast way to check a Vec for an error result?", "body": "<p>I'm using Rayon to iterate over a vector, producing a <code>Vec</code> of results:</p>\n\n<pre><code>let coordinates = &amp;[[38.5, -120.2], [40.7, -120.95], [430.252, -126.453]]\nlet mut res = vec![];\ncoordinates\n    .par_iter()\n    .map(|pair| {\n        match (check(&amp;pair[0]), check(&amp;pair[1])) {\n            (Ok(v1), Ok(v2)) =&gt; Ok([v1, v2]),\n            (Err(v), _) =&gt; Err(v),\n            (_, Err(v)) =&gt; Err(v),\n        }\n    })\n    .collect_into(&amp;mut res);\n</code></pre>\n\n<p>I'd like to check <code>res</code> for any error values, convert them into <code>String</code> and return them using <code>try!()</code></p>\n\n<p>This works, but it's slow and inefficient, considering that I'm allocating a new vector just to aggregate my results or pull out an error:</p>\n\n<pre><code>let errcheck: Result&lt;Vec&lt;_&gt;, f64&gt; = res.iter().map(|elem| *elem).collect();\ntry!(errcheck.map_err(|e| format!(\"Error: {}\", e).to_string()));\n</code></pre>\n\n<p>This problem appears to be Rayon-specific; if I use <code>.iter()</code>, I can collect directly into <code>errcheck</code> using <code>collect()</code> and <code>map_err()</code> in the match arms, which I can't seem to do using <code>par_iter()</code>. </p>\n\n<p>Is there a better way to do it?</p>\n"}, {"tags": ["unit-testing", "rust"], "answers": [{"comments": [{"owner": {"reputation": 13883, "user_id": 2883245, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/NPpPG.jpg?s=128&g=1", "display_name": "erip", "link": "https://stackoverflow.com/users/2883245/erip"}, "edited": false, "score": 0, "creation_date": 1468320693, "post_id": 38326736, "comment_id": 64068084, "body": "How did you make these assumptions?"}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "reply_to_user": {"reputation": 13883, "user_id": 2883245, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/NPpPG.jpg?s=128&g=1", "display_name": "erip", "link": "https://stackoverflow.com/users/2883245/erip"}, "edited": false, "score": 0, "creation_date": 1468320875, "post_id": 38326736, "comment_id": 64068198, "body": "I just meant that&#39;s what I think is being asked."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1468323181, "post_id": 38326736, "comment_id": 64069722, "body": "Additionally, asking multiple times what the <code>now()</code> is can quickly lead to a disaster. Imagine processing starting at 11:59:59 (no afternoon) and ending at 12:00:01 (afternoon), the transition in the middle of the processing can quickly lead to inconsistent output; it&#39;s often best to capture the starting time and base every functional decision on this one snapshot."}], "tags": [], "owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "is_accepted": false, "score": 2, "last_activity_date": 1468320605, "creation_date": 1468320605, "answer_id": 38326736, "question_id": 38323643, "link": "https://stackoverflow.com/questions/38323643/how-to-freeze-time-for-a-test/38326736#38326736", "title": "How to freeze time for a test?", "body": "<p>I'm assuming you mean you have a function like:</p>\n\n<pre><code>pub fn is_now_afternoon() -&gt; bool {\n    let t = time::now();\n    t.tm_hour &gt;= 12\n}\n</code></pre>\n\n<p>And you want to test whether it works with particular times.</p>\n\n<p>I would structure it slightly differently and pass the time in:</p>\n\n<pre><code>// More generic helper function, which does all the real work\nfn is_t_afternoon(t: &amp;Tm) -&gt; bool {\n    t.tm_hour &gt;= 12\n}\n\n// Simple wrapper to use now.\npub fn is_now_afternoon() -&gt; bool {\n    is_t_afternoon(&amp;time::now())\n}\n\n#[test]\nfn test_afternoon() {\n    assert!(is_t_afternoon(Tm{ tm_hour: 13, /* other fields */ }));\n    assert!(!is_t_afternoon(Tm{ tm_hour: 10, /* other fields */ }));\n}\n</code></pre>\n\n<p>The idea being that you separate out the code that does all the work into separate, more easily testable functions which don't depend on the \"real world\" environment.  As a bonus, I often find those more generic functions useful later in other contexts.</p>\n\n<p>The other strategy (which I think is harder and more error prone) is to calculate independently what the answer is given the current time in the test function, and check that the real one agrees.  However this seems likely to lead to intermittent tests, or just having the same bug in the test as the \"real\" function.</p>\n"}], "owner": {"reputation": 173, "user_id": 5096947, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/ac4797ac0c331866aa08e67e276e2d5c?s=128&d=identicon&r=PG", "display_name": "LcpMarvel", "link": "https://stackoverflow.com/users/5096947/lcpmarvel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 410, "favorite_count": 1, "answer_count": 1, "score": 1, "last_activity_date": 1468323572, "creation_date": 1468312191, "last_edit_date": 1468323572, "question_id": 38323643, "link": "https://stackoverflow.com/questions/38323643/how-to-freeze-time-for-a-test", "title": "How to freeze time for a test?", "body": "<p>I'm using <code>time</code> crate and I want to test the output of my function which is associated with the time.</p>\n\n<p>I want to <code>freeze</code> the time by given time; how can I do that?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "reply_to_user": {"reputation": 543, "user_id": 4472139, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/045dec65d2e67a4fb029469d483f3ebd?s=128&d=identicon&r=PG&f=1", "display_name": "sgldiv", "link": "https://stackoverflow.com/users/4472139/sgldiv"}, "edited": false, "score": 1, "creation_date": 1468307361, "post_id": 38321107, "comment_id": 64059525, "body": "Yes, but now it is clear why it is wrong. <code>false</code> is not of a generic type <code>T</code>."}, {"owner": {"reputation": 543, "user_id": 4472139, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/045dec65d2e67a4fb029469d483f3ebd?s=128&d=identicon&r=PG&f=1", "display_name": "sgldiv", "link": "https://stackoverflow.com/users/4472139/sgldiv"}, "edited": false, "score": 0, "creation_date": 1468309174, "post_id": 38321107, "comment_id": 64060586, "body": "Yes.. type &quot;bool&quot; is shadowed by type parameter &quot;bool&quot;!"}], "tags": [], "owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "is_accepted": true, "score": 2, "last_activity_date": 1468404729, "last_edit_date": 1468404729, "creation_date": 1468303469, "answer_id": 38321107, "question_id": 38320635, "link": "https://stackoverflow.com/questions/38320635/failing-to-understand-a-rust-generic-function-error/38321107#38321107", "title": "Failing to understand a rust generic function error", "body": "<p>In your function the type parameter <code>bool</code> shadows the builtin type <code>bool</code>. So your function declaration is essentially the same as</p>\n\n<pre><code>fn is_fail&lt;T&gt;() -&gt; T { false }\n</code></pre>\n\n<p>which clearly isn't well-typed.</p>\n"}], "owner": {"reputation": 543, "user_id": 4472139, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/045dec65d2e67a4fb029469d483f3ebd?s=128&d=identicon&r=PG&f=1", "display_name": "sgldiv", "link": "https://stackoverflow.com/users/4472139/sgldiv"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 125, "favorite_count": 0, "closed_date": 1468323724, "accepted_answer_id": 38321107, "answer_count": 1, "score": 1, "last_activity_date": 1492457068, "creation_date": 1468301122, "last_edit_date": 1492457068, "question_id": 38320635, "link": "https://stackoverflow.com/questions/38320635/failing-to-understand-a-rust-generic-function-error", "closed_reason": "Duplicate", "title": "Failing to understand a rust generic function error", "body": "<p>I was trying to get a piece of Rust generic code to compile, and after mucking around for while narrowed it down to failure of this code to compile. I am not sure what exactly is breaking down here (E0308 doesn't help me much) -- I must be missing something silly:</p>\n\n<pre><code>fn is_fail&lt;bool&gt;() -&gt; bool { false }\nfn main(){\n  let failure:bool = is_fail();\n  //if ! failure {\n    println!(\"{}\", failure);\n  //}\n}\n</code></pre>\n\n<p>The error is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: mismatched types [--explain E0308]\n --&gt; &lt;anon&gt;:1:30\n1 |&gt; fn is_fail&lt;bool&gt;() -&gt; bool { false }\n  |&gt;                              ^^^^^ expected type parameter, found bool\nnote: expected type `bool`\nnote:    found type `bool`\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1468288283, "post_id": 38318497, "comment_id": 64053473, "body": "Have you read <a href=\"http://huonw.github.io/blog/2015/01/object-safety/\" rel=\"nofollow noreferrer\"><i>Object Safety</i></a> and <a href=\"http://huonw.github.io/blog/2015/05/where-self-meets-sized-revisiting-object-safety/\" rel=\"nofollow noreferrer\"><i>Where Self Meets Sized: Revisiting Object Safety</i></a> by Huon Wilson?"}, {"owner": {"reputation": 543, "user_id": 4472139, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/045dec65d2e67a4fb029469d483f3ebd?s=128&d=identicon&r=PG&f=1", "display_name": "sgldiv", "link": "https://stackoverflow.com/users/4472139/sgldiv"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1468290803, "post_id": 38318497, "comment_id": 64054031, "body": "Yes... &quot;where the internals make it impossible to actually use with trait objects.&quot; - I inferred that as meaning type signatures may be satisfied, but may run afoul of borrow checking or lifetimes (??) -so  you cannot use it. The two conditions are sufficient to get it to actually compile. But are they necessary? It would be good to see examples where dropping either would get you into trouble, and what exactly obstructs."}], "answers": [{"comments": [{"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "edited": false, "score": 1, "creation_date": 1468298694, "post_id": 38318863, "comment_id": 64055925, "body": "To clarify, the problem isn&#39;t that giving the ability to use these as trait objects is dangerous, but that you just can&#39;t implement it that way."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1468308453, "post_id": 38318863, "comment_id": 64060166, "body": "+1 for the weird use of &quot;safety&quot; here, the problem is not about safety, it&#39;s about not being able to implement a virtual dispatch."}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 1, "creation_date": 1468320703, "post_id": 38318863, "comment_id": 64068089, "body": "I think it would be helpful to have an example of where this would go wrong here."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 9, "last_activity_date": 1468288824, "last_edit_date": 1592644375, "creation_date": 1468288824, "answer_id": 38318863, "question_id": 38318497, "link": "https://stackoverflow.com/questions/38318497/what-safety-guarantees-of-rust-would-be-lost-if-not-for-object-safety/38318863#38318863", "title": "What safety guarantees of Rust would be lost if not for object safety?", "body": "<p>From <a href=\"http://huonw.github.io/blog/2015/05/where-self-meets-sized-revisiting-object-safety/\" rel=\"noreferrer\"><em>Where Self Meets Sized: Revisiting Object Safety</em></a>:</p>\n<blockquote>\n<p>A trait is object safe only if the compiler can automatically implement it for itself, by implementing each method as a dynamic function call through the vtable stored in a trait object.</p>\n<p>Without the object safety rules one can write functions with type signatures satisfied by trait objects, where the internals make it impossible to actually use with trait objects.</p>\n</blockquote>\n<p>I believe that the choice of phrasing of &quot;object safety&quot; may be a poor one in retrospect as it doesn't appear to have anything to do with <em>memory safety</em>, the normal use of the term &quot;(un)safe&quot; in Rust.</p>\n<p>Object &quot;ability&quot; may be closer to the truth; a trait that has the ability to be referred to via a <em>trait object</em>.</p>\n"}], "owner": {"reputation": 543, "user_id": 4472139, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/045dec65d2e67a4fb029469d483f3ebd?s=128&d=identicon&r=PG&f=1", "display_name": "sgldiv", "link": "https://stackoverflow.com/users/4472139/sgldiv"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 272, "favorite_count": 0, "accepted_answer_id": 38318863, "answer_count": 1, "score": 4, "last_activity_date": 1468289085, "creation_date": 1468285817, "last_edit_date": 1468289085, "question_id": 38318497, "link": "https://stackoverflow.com/questions/38318497/what-safety-guarantees-of-rust-would-be-lost-if-not-for-object-safety", "title": "What safety guarantees of Rust would be lost if not for object safety?", "body": "<p>I am trying to understand the idea of being object safe. I know from the documentation that object safety is that following hold:</p>\n\n<ul>\n<li>The trait does not require that <code>Self: Sized</code></li>\n<li>All of its methods are object-safe</li>\n</ul>\n\n<p>What things that conceivably could lead to the failure of the safety guarantees that safe Rust makes can be accomplished if either one of the two conditions required for object safety are dropped?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 3, "creation_date": 1468268745, "post_id": 38315383, "comment_id": 64047616, "body": "It&#39;s not that \u201cRust is unable to copy its value\u201d, it&#39;s just that this is how languages such as Rust and C work. Did you read the other question&#39;s answer and specifically about <code>Box</code>?"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 11, "last_activity_date": 1554208374, "last_edit_date": 1554208374, "creation_date": 1468268671, "answer_id": 38315613, "question_id": 38315383, "link": "https://stackoverflow.com/questions/38315383/whats-the-rust-idiom-to-define-a-field-pointing-to-a-c-opaque-pointer/38315613#38315613", "title": "What&#39;s the Rust idiom to define a field pointing to a C opaque pointer?", "body": "<h3>The future</h3>\n\n<p><a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1861-extern-types.md\" rel=\"noreferrer\">RFC 1861</a> introduced the concept of an <em>extern type</em>. While implemented, it is not yet stabilized. Once it is, it will become the preferred implementation:</p>\n\n<pre><code>#![feature(extern_types)]\n\nextern \"C\" {\n    type Foo;\n}\n\ntype FooPtr = *mut Foo;\n</code></pre>\n\n<h3>Today</h3>\n\n<p><a href=\"https://doc.rust-lang.org/1.30.0/book/first-edition/ffi.html#representing-opaque-structs\" rel=\"noreferrer\">The documentation</a> states:</p>\n\n<blockquote>\n  <p>To do this in Rust, let\u2019s create our own opaque types:</p>\n\n<pre><code>#[repr(C)] pub struct Foo { private: [u8; 0] }\n#[repr(C)] pub struct Bar { private: [u8; 0] }\n\nextern \"C\" {\n    pub fn foo(arg: *mut Foo);\n    pub fn bar(arg: *mut Bar);\n}\n</code></pre>\n  \n  <p>By including a private field and no constructor, we create an opaque\n  type that we can\u2019t instantiate outside of this module. An empty array\n  is both zero-size and compatible with <code>#[repr(C)]</code>. But because our\n  <code>Foo</code> and <code>Bar</code> types are different, we\u2019ll get type safety between the\n  two of them, so we cannot accidentally pass a pointer to <code>Foo</code> to\n  <code>bar()</code>.</p>\n</blockquote>\n\n<p>An opaque pointer is created such that there's no normal way of creating such a type; you can only create pointers to it.</p>\n\n<pre><code>mod ffi {\n    use std::ptr;\n\n    pub struct MyTypeFromC { _private: [u8; 0] }\n\n    pub fn constructor() -&gt; *mut MyTypeFromC {\n        ptr::null_mut()\n    }\n\n    pub fn something(_thing: *mut MyTypeFromC) {\n        println!(\"Doing a thing\");\n    }\n}\n\nuse ffi::*;\n\nstruct MyRustType {\n    score: u8,\n    the_c_thing: *mut MyTypeFromC,\n}\n\nimpl MyRustType {\n    fn new() -&gt; MyRustType {\n        MyRustType {\n            score: 42,\n            the_c_thing: constructor(),\n        }\n    }\n\n    fn something(&amp;mut self) {\n        println!(\"My score is {}\", self.score);\n        ffi::something(self.the_c_thing);\n        self.score += 1;\n    }\n}\n\nfn main() {\n    let mut my_thing = MyRustType::new();\n    my_thing.something();\n}\n</code></pre>\n\n<p>Breaking it down a bit:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>// opaque -----V~~~~~~~~~V\n          *mut MyTypeFromC\n//        ^~~^ ------------ pointer\n</code></pre>\n\n<p>Thus it's an opaque pointer. Moving the struct <code>MyRustType</code> will not change the value of the pointer.</p>\n\n<h3>The past</h3>\n\n<p>Previous iterations of this answer and the documentation suggested using an empty enum (<code>enum MyTypeFromC {}</code>). An enum with no variants is semantically equivalent to the never type (<code>!</code>), which is a type that cannot exist. There were concerns that using such a construct could lead to undefined behavior, so moving to an empty array was deemed safer.</p>\n"}], "owner": {"reputation": 2022, "user_id": 91063, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/1d96ddecec04a19df156c882decc5e0a?s=128&d=identicon&r=PG", "display_name": "wangii", "link": "https://stackoverflow.com/users/91063/wangii"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2516, "favorite_count": 2, "accepted_answer_id": 38315613, "answer_count": 1, "score": 4, "last_activity_date": 1554208374, "creation_date": 1468267810, "last_edit_date": 1495539850, "question_id": 38315383, "link": "https://stackoverflow.com/questions/38315383/whats-the-rust-idiom-to-define-a-field-pointing-to-a-c-opaque-pointer", "title": "What&#39;s the Rust idiom to define a field pointing to a C opaque pointer?", "body": "<p>Given a struct:</p>\n\n<pre><code>#[repr(C)]\npub struct User {\n    pub name: *const c_char,\n    pub age: u8,\n    pub ctx: ??,\n}\n</code></pre>\n\n<p>the field <code>ctx</code> would only be manipulated by C code; it's a pointer to a C struct <code>UserAttr</code>.</p>\n\n<p>According to <a href=\"https://doc.rust-lang.org/book/ffi.html\" rel=\"noreferrer\">the Rust FFI documentation</a>, the choice would be defined as an opaque type <code>pub enum UserAttr {}</code>. However, I found that Rust is unable to copy its value, e.g. <a href=\"https://stackoverflow.com/questions/38302270/why-does-the-address-of-an-object-change-across-methods\">why does the address of an object change across methods</a>.</p>\n\n<p>What's the right way in Rust to define such an opaque pointer, so that its value (as a pointer) gets copied across methods?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1468258816, "post_id": 38312922, "comment_id": 64042456, "body": "Would you kindly <a href=\"https://stackoverflow.com/posts/38312922/edit\">edit</a> your question to explain why <i>this</i> question is different from the <a href=\"http://stackoverflow.com/search?q=cannot+borrow+as+immutable+because+it+is+also+borrowed+as+mutable+is%3Aquestion\">62 other questions with the same error message</a>?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1468259251, "post_id": 38312922, "comment_id": 64042722, "body": "There&#39;s also <a href=\"http://stackoverflow.com/search?q=cannot+infer+an+appropriate+lifetime+for+autoref+due+to+conflicting+requirements+is%3Aquestion\">15 questions for the second error message</a>. I assume that you are also aware of all of those?"}, {"owner": {"reputation": 781, "user_id": 52209, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/501b3bd293f820573fa68ad1f82df786?s=128&d=identicon&r=PG", "display_name": "Joel Reymont", "link": "https://stackoverflow.com/users/52209/joel-reymont"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1468259332, "post_id": 38312922, "comment_id": 64042763, "body": "Most definitely. Browsed through, thought about it. Spent a few days on this issue too. Edited the question to narrow it down to the second issue."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1468259611, "post_id": 38312922, "comment_id": 64042913, "body": "<i>Most definitely. Browsed through, thought about it. Spent a few days on this issue too.</i> <b>None</b> of that is evident in the question. <a href=\"http://meta.stackoverflow.com/a/261593/155423\">SO expects a lot of evidence of the effort you have put in</a>, especially for problems that are frequently answered (as these two are). Since you have read and understand ~80 related questions, you should be able to elaborate on what you don&#39;t understand from them. Otherwise the answer you get here may be a duplicate of an existing answer and you will be no better off and the answerer will have wasted their time."}], "answers": [{"tags": [], "owner": {"reputation": 781, "user_id": 52209, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/501b3bd293f820573fa68ad1f82df786?s=128&d=identicon&r=PG", "display_name": "Joel Reymont", "link": "https://stackoverflow.com/users/52209/joel-reymont"}, "is_accepted": true, "score": 0, "last_activity_date": 1468506130, "creation_date": 1468506130, "answer_id": 38376765, "question_id": 38312922, "link": "https://stackoverflow.com/questions/38312922/owning-sibling-fields-and-lifetime/38376765#38376765", "title": "owning sibling fields and lifetime", "body": "<p>This cannot be made to work as I have written it above. For example, it would be possible to delete items from the linked list in the <code>ToolBelt</code> which would invalidate the <code>Tool</code> references stored in the <code>ToolBox</code>. </p>\n\n<p>I ended up rewriting the code using a <a href=\"https://github.com/contain-rs/linked-hash-map\" rel=\"nofollow\">linked hash map</a>. It keeps items in order of insertion <em>and</em> lets me delete them by key. </p>\n"}], "owner": {"reputation": 781, "user_id": 52209, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/501b3bd293f820573fa68ad1f82df786?s=128&d=identicon&r=PG", "display_name": "Joel Reymont", "link": "https://stackoverflow.com/users/52209/joel-reymont"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 116, "favorite_count": 0, "accepted_answer_id": 38376765, "answer_count": 1, "score": -2, "last_activity_date": 1468506130, "creation_date": 1468258580, "last_edit_date": 1468261398, "question_id": 38312922, "link": "https://stackoverflow.com/questions/38312922/owning-sibling-fields-and-lifetime", "title": "owning sibling fields and lifetime", "body": "<p>I'm trying to store tools in tool belts and keep tool belts in a toolbox. I'm also trying to index the tools in the toolbox itself to quickly grab them. This is just an abstraction since there are no tools, etc. in my project.</p>\n\n<p>When storing tools in a tool belt, I get back an intrusive reference (cursor) to the tool. I'm trying to store this reference in the tool box index but this doesn't seem to work! </p>\n\n<p>This seems to be a case of referencing a sibling field.</p>\n\n<p>Run <code>cargo init --bin toolbox</code>, add <code>intrusive-collections = \"0.3\"</code> under dependencies and then replace <code>main.rs</code> with the code below.</p>\n\n<p>You should get this error when you run it:</p>\n\n<pre><code>Compiling toolbox v0.1.0 (file:///Users/joelr/Work/rust/node)\nsrc/main.rs:67:31: 67:36 error: cannot infer an appropriate lifetime for autoref due to conflicting requirements [E0495]\nsrc/main.rs:67         let belt = self.belts.entry(belt_id).or_insert_with(|| Belt::new());\n                                             ^~~~~\nsrc/main.rs:65:5: 71:6 help: consider using an explicit lifetime parameter as shown: fn add(&amp;'a mut self, belt_id: u64, tool_id: u64, size: u64)\nsrc/main.rs:65     fn add&lt;'b&gt;(&amp;'b mut self, belt_id: u64, tool_id: u64, size: u64) {\n</code></pre>\n\n<p>Can I have my cake and eat it too?</p>\n\n<pre><code>#[macro_use]\nextern crate intrusive_collections;\n\nuse std::collections::HashMap;\nuse std::convert::{AsRef, AsMut};\nuse intrusive_collections::{IntrusiveRef, LinkedList, LinkedListLink, linked_list};\n\n#[derive(Debug)]\nstruct Tool {\n    id: u64,\n    size: u64,\n    link: LinkedListLink,\n}\n\nimpl Tool {\n    fn new(id: u64, size: u64) -&gt; Self {\n        Tool {\n            id: id,\n            size: size,\n            link: LinkedListLink::new(),\n        }\n    }\n}\n\nintrusive_adaptor!(ToolAdaptor = Tool { link: LinkedListLink });\n\n#[derive(Debug)]\nstruct Belt {\n    total_size: u64,\n    tools: LinkedList&lt;ToolAdaptor&gt;,\n}\n\nimpl Belt {\n    fn new() -&gt; Self {\n        Belt {\n            total_size: 0,\n            tools: LinkedList::new(ToolAdaptor),\n        }\n    }\n\n    fn add(&amp;mut self, tool: Tool) -&gt; CursorMut {\n        let r = IntrusiveRef::from_box(Box::new(tool));\n        self.tools.push_back(r);\n        self.tools.back_mut()\n    }\n}\n\ntype CursorMut&lt;'a&gt; = linked_list::CursorMut&lt;'a, ToolAdaptor&gt;;\ntype Belts = HashMap&lt;u64, Belt&gt;;\ntype Tools&lt;'a&gt; = HashMap&lt;u64, CursorMut&lt;'a&gt;&gt;;\n\nstruct ToolBox&lt;'a&gt; {\n    tools: Tools&lt;'a&gt;,\n    belts: Belts,\n}\n\nimpl&lt;'a&gt; ToolBox&lt;'a&gt; {\n    fn new() -&gt; Self {\n        ToolBox {\n            tools: HashMap::new(),\n            belts: HashMap::new(),\n        }\n    }\n\n    fn add&lt;'b&gt;(&amp;'b mut self, belt_id: u64, tool_id: u64, size: u64) {\n        let tool = Tool::new(tool_id, size);\n        let belt = self.belts.entry(belt_id).or_insert_with(|| Belt::new());\n        let cursor = belt.add(tool);\n        self.tools.insert(tool_id, cursor);\n        ()\n    }\n\n    fn belts(&amp;self) -&gt; &amp;Belts {\n        &amp;self.belts\n    }\n}\n\nimpl&lt;'a&gt; AsRef&lt;ToolBox&lt;'a&gt;&gt; for ToolBox&lt;'a&gt; {\n    fn as_ref(&amp;self) -&gt; &amp;Self {\n        self\n    }\n}\n\nimpl&lt;'a&gt; AsMut&lt;ToolBox&lt;'a&gt;&gt; for ToolBox&lt;'a&gt; {\n    fn as_mut(&amp;mut self) -&gt; &amp;mut Self {\n        self\n    }\n}\n\nfn main() {\n    let mut toolbox = ToolBox::new();\n    toolbox.add(1, 1, 1);\n    println!(\"ToolBox belts = {:?}\", toolbox.as_ref().belts())\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 3583, "user_id": 1391026, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/af98bdbeea8772f2d90d47d507098256?s=128&d=identicon&r=PG", "display_name": "musicmatze", "link": "https://stackoverflow.com/users/1391026/musicmatze"}, "edited": false, "score": 2, "creation_date": 1468258782, "post_id": 38311605, "comment_id": 64042440, "body": "I would guess that&#39;s because you <i>have</i> to use a block (so a <code>{ &#47;* code *&#47; }</code> ) after an <code>if</code>, but you can omit the braces after an <code>else</code>. So you can write <code>if foo() { bar(); } else baz();</code> but you cannot write <code>if foo() bar() else baz()</code>."}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "reply_to_user": {"reputation": 3583, "user_id": 1391026, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/af98bdbeea8772f2d90d47d507098256?s=128&d=identicon&r=PG", "display_name": "musicmatze", "link": "https://stackoverflow.com/users/1391026/musicmatze"}, "edited": false, "score": 1, "creation_date": 1468488956, "post_id": 38311605, "comment_id": 64152081, "body": "@musicmatze that&#39;s very wrong. Rust does explicitly NOT allow you to leave off the braces after an else. Otherwise we&#39;re back in dangling else hell."}, {"owner": {"reputation": 3583, "user_id": 1391026, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/af98bdbeea8772f2d90d47d507098256?s=128&d=identicon&r=PG", "display_name": "musicmatze", "link": "https://stackoverflow.com/users/1391026/musicmatze"}, "reply_to_user": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1468504092, "post_id": 38311605, "comment_id": 64162291, "body": "@ker ah, okay. I didn&#39;t knew that, so thanks for correcting me!"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 5, "creation_date": 1468261216, "post_id": 38313272, "comment_id": 64043721, "body": "Could you give (pseudo) code examples of how each of the two cases would look as a <code>ExprIf</code>?"}, {"owner": {"reputation": 123, "user_id": 6575400, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5becaee7950c4070c3cb21106fc7ec25?s=128&d=identicon&r=PG&f=1", "display_name": "Cpud36", "link": "https://stackoverflow.com/users/6575400/cpud36"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1468319390, "post_id": 38313272, "comment_id": 64067245, "body": "@Shepmaster, first one is <code>ExprIf(_, Block(...), Some(ExprIf(...)))</code>, and the second one is <code>ExprIf(_, Block(...), Some(Block(..., ExprIf(...), ...)))</code>."}], "tags": [], "owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "is_accepted": true, "score": 7, "last_activity_date": 1468351230, "last_edit_date": 1468351230, "creation_date": 1468259859, "answer_id": 38313272, "question_id": 38311605, "link": "https://stackoverflow.com/questions/38311605/why-does-rusts-if-else-ast-use-different-types-for-then-and-else/38313272#38313272", "title": "Why does Rust&#39;s if-else AST use different types for then and else?", "body": "<p>This is so we can distinguish</p>\n\n<pre><code>if x {\n    foo();\n} else if y {\n    bar();\n}\n</code></pre>\n\n<p>from</p>\n\n<pre><code>if x {\n    foo();\n} else { // note the block\n    if y {\n        bar();\n    }\n}\n</code></pre>\n\n<p>The first has an <code>ExprIf</code> in the node of the else-<code>Expr</code> whereas the second has an <code>ExprBlock</code> containing a single <code>ExprIf</code>-expression.</p>\n"}], "owner": {"reputation": 123, "user_id": 6575400, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5becaee7950c4070c3cb21106fc7ec25?s=128&d=identicon&r=PG&f=1", "display_name": "Cpud36", "link": "https://stackoverflow.com/users/6575400/cpud36"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 306, "favorite_count": 0, "accepted_answer_id": 38313272, "answer_count": 1, "score": 12, "last_activity_date": 1468351230, "creation_date": 1468253661, "last_edit_date": 1468257497, "question_id": 38311605, "link": "https://stackoverflow.com/questions/38311605/why-does-rusts-if-else-ast-use-different-types-for-then-and-else", "title": "Why does Rust&#39;s if-else AST use different types for then and else?", "body": "<p>I was writing Rust lint plugin when I found that Rust uses different types to represent the <strong>then</strong> (<code>Block</code>) and <strong>else</strong> (<code>Expr</code>) parts of an <code>if</code> statement in both <code>libsyntax::ast::ExprKind</code> and <code>librustc::hir::Expr_</code>.</p>\n\n<p>I need them both to have common types. </p>\n\n<p>Should I just use an explicit match over <code>hir::Expr_::ExprBlock</code>, or else part could be something else, and I need to make more smart comparison?</p>\n\n<p>From <a href=\"https://github.com/rust-lang/rust/blob/1.10.0/src/librustc/hir/mod.rs#L869-L872\" rel=\"noreferrer\">the source</a>:</p>\n\n<pre><code>// ...\npub enum Expr_ {\n    // ...\n    /// An `if` block, with an optional else block\n    ///\n    /// `if expr { block } else { expr }`\n    ExprIf(P&lt;Expr&gt;, P&lt;Block&gt;, Option&lt;P&lt;Expr&gt;&gt;),\n    // ...\n}\n// ...\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1468233352, "post_id": 38304666, "comment_id": 64026026, "body": "<code>String</code> is not <code>Copy</code>able the same way that <code>Vec</code> isn&#39;t. Both handle heap-allocated content, and so cannot be safely copied with <code>memcpy</code>. Relevant page from the book: <a href=\"https://doc.rust-lang.org/book/strings.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/book/strings.html</a>"}, {"owner": {"reputation": 3855, "user_id": 342882, "user_type": "registered", "accept_rate": 34, "profile_image": "https://www.gravatar.com/avatar/c13b4dc095a1bcc25e008effdd5cf07a?s=128&d=identicon&r=PG", "display_name": "Daneel Yaitskov", "link": "https://stackoverflow.com/users/342882/daneel-yaitskov"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1468234068, "post_id": 38304666, "comment_id": 64026433, "body": "I see but I need to pass object to the channel and it requires types to be copyable. I read this tutorial from cover to cover, but it&#39;s to shallow."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 2, "creation_date": 1468234179, "post_id": 38304666, "comment_id": 64026497, "body": "@DaneelS.Yaitskov Types do <i>not</i> have to be copyable to be passed through a channel."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1468236520, "post_id": 38304666, "comment_id": 64027987, "body": "Indeed, only the <a href=\"https://doc.rust-lang.org/std/marker/trait.Send.html\" rel=\"nofollow noreferrer\"><code>Send</code></a> trait should be needed, which is automatically derived by the compiler and does not imply <code>Copy</code>. You should seriously find out where the real problem is. Please show us more code and rephrase the question accordingly."}], "answers": [{"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 30, "last_activity_date": 1468236829, "creation_date": 1468236829, "answer_id": 38305901, "question_id": 38304666, "link": "https://stackoverflow.com/questions/38304666/how-to-define-a-copyable-struct-containing-a-string/38305901#38305901", "title": "How to define a copyable struct containing a String?", "body": "<blockquote>\n  <p>For me looks strange that such basic type as string is not copyable.</p>\n</blockquote>\n\n<p>Rust is <em>explicit</em> first.</p>\n\n<p>One of the oft heard complains from C programmers (and most notably Linus Torvald) with regard to C++ is that there is too much implicit copying in C++, which hides memory allocation. Coupled with implicit conversions, they can really creep in the most unexpected places.</p>\n\n<p>Rust instead is designed with an intent to expose the complexity of the underlying operations. It does implicitly perform some conversions (borrowing, from <code>&amp;T</code> to <code>&amp;Trait</code>), but those are <em>cheap</em> (and generally constant time).</p>\n\n<p>This explicitness shows in the two traits you have here:</p>\n\n<ul>\n<li><p><code>Clone</code> is about indicating <em>how</em> to create a new instance, and must be called explicitly. Most types (but not all) can be copied using it.</p></li>\n<li><p><code>Copy</code> is a specific compiler trait which indicates that the developer wishes to activate implicit copying for the type; it is only available if a shallow copy is equivalent to a deep copy, which ensures that no memory allocation will occur as part of those implicit copies</p></li>\n</ul>\n\n<p>So, to ensure your remark:</p>\n\n<ul>\n<li><code>String</code> is copyable, use <code>.clone()</code></li>\n<li><code>String</code> is not implicitly copyable, because that would cause non-obvious memory allocations to occur</li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 126, "user_id": 6513271, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3cfa33c69d6c7369582e2a3b0d33d99b?s=128&d=identicon&r=PG", "display_name": "Maciej", "link": "https://stackoverflow.com/users/6513271/maciej"}, "is_accepted": false, "score": 9, "last_activity_date": 1468237799, "creation_date": 1468237799, "answer_id": 38306215, "question_id": 38304666, "link": "https://stackoverflow.com/questions/38304666/how-to-define-a-copyable-struct-containing-a-string/38306215#38306215", "title": "How to define a copyable struct containing a String?", "body": "<p><code>String</code> is, effectively, a pointer to some heap allocated data, it's length and capacity. Copying that information would create two owned variables, both pointing to the same heap allocated data, which would break Rust's memory management (you would run into use-after-free issues).</p>\n\n<p>That said, your struct doesn't need to implement <code>Copy</code> to be sent over channels, it just needs to be <code>Sized</code>, which <code>String</code> is (because the size of a pointer is known to the compiler). Sending a struct or enum with a <code>String</code> in it should work out of the box without having to derive any traits.</p>\n"}], "owner": {"reputation": 3855, "user_id": 342882, "user_type": "registered", "accept_rate": 34, "profile_image": "https://www.gravatar.com/avatar/c13b4dc095a1bcc25e008effdd5cf07a?s=128&d=identicon&r=PG", "display_name": "Daneel Yaitskov", "link": "https://stackoverflow.com/users/342882/daneel-yaitskov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 11779, "favorite_count": 3, "closed_date": 1468238422, "answer_count": 2, "score": 17, "last_activity_date": 1468238388, "creation_date": 1468232884, "last_edit_date": 1468238388, "question_id": 38304666, "link": "https://stackoverflow.com/questions/38304666/how-to-define-a-copyable-struct-containing-a-string", "closed_reason": "Duplicate", "title": "How to define a copyable struct containing a String?", "body": "<p>I have a struct like that</p>\n\n<pre><code>#[derive(Copy, Clone)]\nenum Command {\n    Quit,\n    Error { msg: String },\n}\n</code></pre>\n\n<p>The compiler complains that it cannot generate a copy constructor for <code>Error</code>.</p>\n\n<p>I need to make the struct copyable to pass over a channel to another thread.</p>\n\n<pre><code>error: the trait `Copy` may not be implemented for this type; variant `Error` does not implement `Copy` [E0205]\n#[derive(Copy, Clone)]\n^~~~~~~~~~~~~~~~~~~~~~\nnote: in this expansion of #[derive_Copy] (defined in src/main.rs)\n</code></pre>\n\n<p>It compiles if <code>msg</code> is an <code>i32</code>. It looks strange that such basic \ntype as <code>String</code> is not copyable.</p>\n"}, {"tags": ["multithreading", "rust"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1468229972, "post_id": 38303256, "comment_id": 64023820, "body": "Note: you wrapped the value inside the channel, but the compiler here is complaining about the <i>sender</i> to the channel not being wrapped."}, {"owner": {"reputation": 522, "user_id": 6070255, "user_type": "registered", "profile_image": "https://graph.facebook.com/1700571903515060/picture?type=large", "display_name": "Aunmag", "link": "https://stackoverflow.com/users/6070255/aunmag"}, "edited": false, "score": 0, "creation_date": 1608285008, "post_id": 38303256, "comment_id": 115541908, "body": "Does this answer your question? <a href=\"https://stackoverflow.com/questions/40384274/rust-mpscsender-cannot-be-shared-between-threads\">Rust mpsc::Sender cannot be shared between threads?</a>"}], "answers": [{"tags": [], "owner": {"reputation": 3566, "user_id": 5138648, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1fdbc41d6ae88135845b5d965dac0b13?s=128&d=identicon&r=PG", "display_name": "aSpex", "link": "https://stackoverflow.com/users/5138648/aspex"}, "is_accepted": true, "score": 3, "last_activity_date": 1468230306, "creation_date": 1468230306, "answer_id": 38303808, "question_id": 38303256, "link": "https://stackoverflow.com/questions/38303256/cannot-send-a-struct-over-channel-mpscsender-cannot-be-shared-between-threads/38303808#38303808", "title": "Cannot send a struct over channel: mpsc::Sender cannot be shared between threads safely", "body": "<p>The closure passed to <code>thread::spawn()</code> must be <code>move</code> (<code>FnOnce</code>). <code>Arc</code> and <code>Mutex</code> are not needed:</p>\n\n<pre><code>let input_thread = thread::spawn(move || {\n    input_tx.send(Command::Quit);\n});\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1468241203, "last_edit_date": 1495539853, "creation_date": 1468241203, "answer_id": 38307337, "question_id": 38303256, "link": "https://stackoverflow.com/questions/38303256/cannot-send-a-struct-over-channel-mpscsender-cannot-be-shared-between-threads/38307337#38307337", "title": "Cannot send a struct over channel: mpsc::Sender cannot be shared between threads safely", "body": "<p>Look at this <a href=\"/help/mcve\">MCVE</a>:</p>\n\n<pre><code>use std::thread;\nuse std::sync::mpsc;\n\nenum Command {\n    Quit,\n    Error { msg: String },\n}\n\nfn main() {\n    let (input_tx, input_rx) = mpsc::channel();\n    let input_thread = thread::spawn(|| {\n        input_tx.send(Command::Quit);\n    });\n}\n</code></pre>\n\n<p>And the error message:</p>\n\n<blockquote>\n  <p>`std::sync::mpsc::Sender` cannot be <strong>shared</strong> between threads safely; required because of the requirements on the impl of `std::marker::Send` for ` <strong>&amp;</strong> std::sync::mpsc::Sender`</p>\n</blockquote>\n\n<p>(emphasis mine)</p>\n\n<p>By default, a closure captures <em>a reference</em> to any variables used within it. This is what you want most of the time, as giving up ownership is more restrictive for the creator of the closure. Using a reference allows the captured value to be shared between outside the closure and inside and doesn't require moving any bits around.</p>\n\n<p>In this case, you <strong>do</strong> want to give ownership of <code>input_tx</code> to the closure. This is because ownership of the closure itself will be given to a new thread, so the closure and everything in it needs to be safe to be handed to another thread. A <em>reference</em> to a <code>Sender</code> may not be shared among threads.</p>\n\n<p>A <a href=\"https://doc.rust-lang.org/stable/book/closures.html#move-closures\" rel=\"nofollow noreferrer\"><code>move</code> closure</a> requests that ownership of any captured variables be transferred to the closure. By doing this, there is no sharing and all the requirements are met. As <a href=\"https://stackoverflow.com/a/38303808/155423\">aSpex said</a>:</p>\n\n<pre><code>let input_thread = thread::spawn(move || {\n    input_tx.send(Command::Quit);\n});\n</code></pre>\n\n<hr>\n\n<p>Occasionally you need to transfer ownership of some captured variables but want to share others. Since <code>move</code> closures are all-or-nothing, you need to be more explicit in this case. You can simply take a reference before the closure:</p>\n\n<pre><code>let a = 42;\nlet a_ref = &amp;a;\n\nlet input_thread = thread::spawn(move || {\n    println!(\"{}\", a_ref);\n});\n</code></pre>\n\n<p>This doesn't work because the reference to <code>a</code> is not <code>'static</code>, but shows the general idea.</p>\n"}], "owner": {"reputation": 3855, "user_id": 342882, "user_type": "registered", "accept_rate": 34, "profile_image": "https://www.gravatar.com/avatar/c13b4dc095a1bcc25e008effdd5cf07a?s=128&d=identicon&r=PG", "display_name": "Daneel Yaitskov", "link": "https://stackoverflow.com/users/342882/daneel-yaitskov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1298, "favorite_count": 1, "accepted_answer_id": 38303808, "answer_count": 2, "score": 0, "last_activity_date": 1468241246, "creation_date": 1468228610, "last_edit_date": 1468241246, "question_id": 38303256, "link": "https://stackoverflow.com/questions/38303256/cannot-send-a-struct-over-channel-mpscsender-cannot-be-shared-between-threads", "title": "Cannot send a struct over channel: mpsc::Sender cannot be shared between threads safely", "body": "<p>I am struggling with sending a custom struct over channel.</p>\n\n<p>I wrapped the value in an <code>Arc</code> and <code>Mutex</code> as described in the tutorial,\nbut it doesn't compile anyway.</p>\n\n<pre><code>extern crate num;\n\nuse num::bigint::BigInt;\nuse std::io::{self, Write};\nuse std::sync::mpsc;\nuse std::thread;\nuse readline::readline as ask;\nuse std::sync::{Arc, Mutex};\n\nenum Command {\n    Quit,\n    Help,\n    Factorial { n: BigInt },\n    Error { msg: String },\n}\n\nfn main() {\n    let (input_tx, input_rx) = mpsc::channel();\n    let input_thread = thread::spawn(|| {\n        input_tx.send(Arc::new(Mutex::new(Command::Quit)));\n    });\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: the trait bound `std::sync::mpsc::Sender&lt;std::sync::Arc&lt;std::sync::Mutex&lt;Command&gt;&gt;&gt;: std::marker::Sync` is not satisfied [E0277]\n    let input_thread = thread::spawn(|| {\n                       ^~~~~~~~~~~~~\nhelp: run `rustc --explain E0277` to see a detailed explanation\nnote: `std::sync::mpsc::Sender&lt;std::sync::Arc&lt;std::sync::Mutex&lt;Command&gt;&gt;&gt;` cannot be shared between threads safely\nnote: required because of the requirements on the impl of `std::marker::Send` for `&amp;std::sync::mpsc::Sender&lt;std::sync::Arc&lt;std::sync::Mutex&lt;Command&gt;&gt;&gt;`\nnote: required because it appears within the type `[closure@src/main.rs:25:38: 65:6 input_tx:&amp;std::sync::mpsc::Sender&lt;std::sync::Arc&lt;std::sync::Mutex&lt;Command&gt;&gt;&gt;]`\nnote: required by `std::thread::spawn`\nerror: aborting due to previous error\n</code></pre>\n\n<p>I am using Rust 1.10.0 (cfcb716cf 2016-07-03).</p>\n"}, {"tags": ["linux", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1468241421, "post_id": 38302695, "comment_id": 64031283, "body": "What&#39;s the difference in panicking (which exits and returns an error code) and &quot;just exit with error code&quot;? Note that OOM should trigger a <b>panic</b> (a controlled and orderly exit), not <b>crash</b> (forcibly terminated by the OS for doing something bad). Note that the OS OOM killer is outside of your control."}, {"owner": {"reputation": 7560, "user_id": 1034749, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2022f0caae119ed6232cf370bb9d9d3a?s=128&d=identicon&r=PG", "display_name": "fghj", "link": "https://stackoverflow.com/users/1034749/fghj"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1468242414, "post_id": 38302695, "comment_id": 64032015, "body": "@Shepmaster At now on oom program (with rust-1.10) prints &quot;fatal runtime error: out of memory\\nInvalid instruction&quot; and core dump was created"}], "answers": [{"comments": [{"owner": {"reputation": 7560, "user_id": 1034749, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2022f0caae119ed6232cf370bb9d9d3a?s=128&d=identicon&r=PG", "display_name": "fghj", "link": "https://stackoverflow.com/users/1034749/fghj"}, "edited": false, "score": 0, "creation_date": 1468230181, "post_id": 38302929, "comment_id": 64023965, "body": "What about custom memory allocator? For example I call <code>malloc</code> and check it result, after that I give allocated memory to allocator and it spread it around <code>struct</code>s and <code>trait</code>s?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 7560, "user_id": 1034749, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2022f0caae119ed6232cf370bb9d9d3a?s=128&d=identicon&r=PG", "display_name": "fghj", "link": "https://stackoverflow.com/users/1034749/fghj"}, "edited": false, "score": 1, "creation_date": 1468230404, "post_id": 38302929, "comment_id": 64024125, "body": "@user1034749: If you have a custom allocator, then yes it is possible. Beware that a number of standard containers, etc... allocate &quot;behind your back&quot; so will trigger the panic."}], "tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": false, "score": 3, "last_activity_date": 1468241477, "last_edit_date": 1468241477, "creation_date": 1468227620, "answer_id": 38302929, "question_id": 38302695, "link": "https://stackoverflow.com/questions/38302695/can-i-catch-out-of-memory-errors/38302929#38302929", "title": "Can I catch out of memory errors?", "body": "<p>No you cannot catch out of memory errors.</p>\n\n<p>There's <a href=\"https://internals.rust-lang.org/t/could-we-support-unwinding-from-oom-at-least-for-collections/3673\" rel=\"nofollow\">some discussion</a> about adding (partial) support, but there are many many issues with catching OOM errors.</p>\n\n<p>What you can do instead is to start a new process and communicate with it through <a href=\"https://github.com/servo/ipc-channel\" rel=\"nofollow\"><code>ipc-channel</code>s</a>. The possibly overallocating process will then simply get killed and the other process can recover from that and restart the failed process.</p>\n\n<hr>\n\n<p>You can't disable heap allocations at runtime, but that's not very interesting anyway, since your program would have to abort whenever you heap allocate. Instead you should statically check for no heap allocations. There's some work/talk in clippy to add such a static analysis as a <a href=\"https://github.com/Manishearth/rust-clippy/issues/632#issuecomment-180864117\" rel=\"nofollow\">\"restriction\"</a></p>\n"}], "owner": {"reputation": 7560, "user_id": 1034749, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2022f0caae119ed6232cf370bb9d9d3a?s=128&d=identicon&r=PG", "display_name": "fghj", "link": "https://stackoverflow.com/users/1034749/fghj"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 464, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1468241477, "creation_date": 1468226868, "last_edit_date": 1468241307, "question_id": 38302695, "link": "https://stackoverflow.com/questions/38302695/can-i-catch-out-of-memory-errors", "title": "Can I catch out of memory errors?", "body": "<p>I want to write a safe program, so I will allocate required space in heap at the start of program.</p>\n\n<ol>\n<li>Is it possible starting from some point disable heap memory allocation,\nlike <code>toggle_panic_on_heap_allocation</code>?</li>\n<li>How can I catch \"out of memory\" error during initialization? Default behavior is abort, but I would like not crash, just exit with error code?</li>\n</ol>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 2022, "user_id": 91063, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/1d96ddecec04a19df156c882decc5e0a?s=128&d=identicon&r=PG", "display_name": "wangii", "link": "https://stackoverflow.com/users/91063/wangii"}, "edited": false, "score": 0, "creation_date": 1468226890, "post_id": 38302426, "comment_id": 64021830, "body": "thanks! I found refs to obj in the same scope has same address. probably I have to write an explicit method <code>User::Init(&amp;mut self)</code> to cope with it. how do you think about this approach?"}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "reply_to_user": {"reputation": 2022, "user_id": 91063, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/1d96ddecec04a19df156c882decc5e0a?s=128&d=identicon&r=PG", "display_name": "wangii", "link": "https://stackoverflow.com/users/91063/wangii"}, "edited": false, "score": 2, "creation_date": 1468238244, "post_id": 38302426, "comment_id": 64029048, "body": "Why does it matter what the address is on the C side?"}, {"owner": {"reputation": 2022, "user_id": 91063, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/1d96ddecec04a19df156c882decc5e0a?s=128&d=identicon&r=PG", "display_name": "wangii", "link": "https://stackoverflow.com/users/91063/wangii"}, "edited": false, "score": 0, "creation_date": 1468267853, "post_id": 38302426, "comment_id": 64047163, "body": "a follow up question: <a href=\"http://stackoverflow.com/questions/38315383/whats-the-rusts-idiom-to-define-a-field-pointing-to-a-c-opaque-pointer\" title=\"whats the rusts idiom to define a field pointing to a c opaque pointer\">stackoverflow.com/questions/38315383/&hellip;</a>"}], "tags": [], "owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "is_accepted": false, "score": 3, "last_activity_date": 1468225964, "creation_date": 1468225964, "answer_id": 38302426, "question_id": 38302270, "link": "https://stackoverflow.com/questions/38302270/why-does-the-address-of-an-object-change-across-methods/38302426#38302426", "title": "Why does the address of an object change across methods?", "body": "<p>That's just how Rust works. Objects don't have identity; moving them out of a function (such as <code>User::new</code>) moves them to a new location, thus changing their address.</p>\n\n<p>If your C code needs stable addresses, you need to make your Rust <code>User</code> contain a <code>Box</code> or raw pointer.</p>\n"}, {"comments": [{"owner": {"reputation": 2022, "user_id": 91063, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/1d96ddecec04a19df156c882decc5e0a?s=128&d=identicon&r=PG", "display_name": "wangii", "link": "https://stackoverflow.com/users/91063/wangii"}, "edited": false, "score": 0, "creation_date": 1468251624, "post_id": 38307635, "comment_id": 64038611, "body": "good point! one major difference is that if I heap alloc User, the address won&#39;t change. but if I use Box in rust like this: <code>let u = Box::new(User::new())</code>, it still changes."}, {"owner": {"reputation": 2022, "user_id": 91063, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/1d96ddecec04a19df156c882decc5e0a?s=128&d=identicon&r=PG", "display_name": "wangii", "link": "https://stackoverflow.com/users/91063/wangii"}, "edited": false, "score": 0, "creation_date": 1468265016, "post_id": 38307635, "comment_id": 64045680, "body": "brilliant answer. couldn&#39;t thank you more for the detailed explanation."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1468263222, "last_edit_date": 1468263222, "creation_date": 1468242010, "answer_id": 38307635, "question_id": 38302270, "link": "https://stackoverflow.com/questions/38302270/why-does-the-address-of-an-object-change-across-methods/38307635#38307635", "title": "Why does the address of an object change across methods?", "body": "<blockquote>\n  <p>That's just how Rust works.</p>\n</blockquote>\n\n<p>More than that, that's <em>how C works too</em>:</p>\n\n<pre><code>#include &lt;stdint.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;stdio.h&gt;\n\ntypedef struct {\n    char* name;\n    int32_t age;\n} User;\n\nvoid\nUserInit(User* u){\n    printf(\"in init: user addr: %p\\n\", u);\n}\n\nvoid\nUserDoSomething(User* u){\n    printf(\"in do something user addr: %p\\n\", u);\n}\n\nvoid\nUserDestroy(User* u){\n    free(u-&gt;name);\n}\n\nUser rust_like_new(void) {\n    User u;\n    UserInit(&amp;u);\n    return u;\n}\n\nint main(int argc, char *argv[]) {\n    User u = rust_like_new();\n    UserDoSomething(&amp;u);\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>in init: user addr:        0x7fff506c1600\nin do something user addr: 0x7fff506c1630\n</code></pre>\n\n<p>Generally, you don't care about the address of the container, just what it contains.</p>\n\n<blockquote>\n  <p>If I heap allocate <code>User</code>, the address won't change, but if I use <code>Box</code> (<code>let u = Box::new(User::new())</code>), it still changes.</p>\n</blockquote>\n\n<p>The same thing happens in Rust and C. The <em>address</em> of the <code>Box&lt;User&gt;</code> or <code>User *</code> itself will change. The <em>value</em> (the pointed-at thing) of the <code>Box&lt;User&gt;</code> or <code>User *</code> will stay consistent.</p>\n\n<pre><code>mod ffi {\n    use std::mem;\n    use std::os::raw::c_char;\n\n    #[repr(C)]\n    pub struct User {\n        pub name: *const c_char,\n        pub age: i32,\n    }\n\n    impl User {\n        pub fn new() -&gt; Box&lt;User&gt; {\n            let mut ret: Box&lt;User&gt; = Box::new(unsafe { mem::uninitialized() });\n\n            unsafe { UserInit(&amp;mut *ret) }\n\n            ret\n        }\n\n        pub fn do_something(&amp;mut self) {\n            unsafe { UserDoSomething(self) }\n        }\n    }\n\n    extern \"C\" {\n        pub fn UserInit(u: *mut User);\n        pub fn UserDoSomething(u: *mut User);\n    }\n}\n\nuse ffi::User;\n\nfn main() {\n    let mut u = User::new();\n    u.do_something();\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>in init: user addr:        0x10da17000\nin do something user addr: 0x10da17000\n</code></pre>\n\n<p>If you pass a reference to <code>User</code> to C <strong>before</strong> it's moved into a <code>Box</code>, then yes, the address will change when it's moved into the <code>Box</code>. This would be the equivalent of:</p>\n\n<pre><code>User rust_like_new(void) {\n    User u;\n    UserInit(&amp;u);\n    return u;\n}\n\nint main(int argc, char *argv[]) {\n    User u = rust_like_new();\n    User *u2 = malloc(sizeof(User));\n    *u2 = u;\n    UserDoSomething(u2);\n}\n</code></pre>\n\n<p>Note that Rust (and other languages) allow for <a href=\"https://en.wikipedia.org/wiki/Return_value_optimization\" rel=\"nofollow\">RVO</a> to be performed. However, I believe that <em>printing out the address</em> would disqualify this optimization because the behavior would change if RVO was enabled. You'd need to look in a debugger or at the generated assembly.</p>\n"}], "owner": {"reputation": 2022, "user_id": 91063, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/1d96ddecec04a19df156c882decc5e0a?s=128&d=identicon&r=PG", "display_name": "wangii", "link": "https://stackoverflow.com/users/91063/wangii"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 428, "favorite_count": 1, "accepted_answer_id": 38307635, "answer_count": 2, "score": 3, "last_activity_date": 1468263222, "creation_date": 1468225348, "last_edit_date": 1468242134, "question_id": 38302270, "link": "https://stackoverflow.com/questions/38302270/why-does-the-address-of-an-object-change-across-methods", "title": "Why does the address of an object change across methods?", "body": "<p>I have C code to bridge to. I chose to use <code>mem::uninitialized</code> to claim the memory first, then call the C function(<code>UserInit</code>) to do initialisation, then use it (in <code>UserDoSomething</code>).</p>\n\n<p>The odd thing is the addresses of the object are different in <code>UserInit</code> and <code>UserDoSomething</code>. Why does it behave in this way? </p>\n\n<p>The C code:</p>\n\n<pre><code>typedef struct {\n    char* name;\n    int32_t age;\n} User;\n\nvoid\nUserInit(User* u){\n    printf(\"in init: user addr: %p\\n\", u);\n}\n\nvoid\nUserDoSomething(User* u){\n    printf(\"in do something user addr: %p\\n\", u);\n}\n\nvoid\nUserDestroy(User* u){\n    free(u-&gt;name);\n}\n</code></pre>\n\n<p>The Rust FFI:</p>\n\n<pre><code>use std::mem;\nuse std::os::raw::c_char;\nuse std::ffi::CString;\n\n\n#[repr(C)]\npub struct User{\n    pub name:   *const c_char,\n    pub age:    i32,\n}\n\nimpl User {\n    pub fn new()-&gt; User {\n\n        let ret: User = unsafe { mem::uninitialized() };\n\n        unsafe {\n            UserInit(&amp;mut ret as *mut User)\n        }\n\n        ret\n    }\n\n    pub fn do_something(&amp;mut self){\n        unsafe {\n            UserDoSomething(self as *mut User)\n        }\n    }\n\n}\nextern \"C\" {\n    pub fn UserInit(u:*mut User);\n    pub fn UserDoSomething(u:*mut User);\n    pub fn UserDestroy(u:*mut User);\n}\n</code></pre>\n\n<p>Rust tests:</p>\n\n<pre><code>mod ffi;\n\nuse ffi::User;\n\nfn main() {\n    let mut u = User::new();\n    u.do_something();\n}\n</code></pre>\n\n<p>In theory, it should output the same address but it doesn't:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>&gt; cargo run\n     Running `target/debug/learn`\nin init: user addr: 0x7fff5b948b80\nin do something user addr: 0x7fff5b948ba0\n</code></pre>\n"}, {"tags": ["rust", "rust-cargo", "macos-sierra"], "answers": [{"tags": [], "owner": {"reputation": 584, "user_id": 1198440, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/f12368bc9ab95a09cfbfd708a04591e6?s=128&d=identicon&r=PG", "display_name": "Frank Joseph Mattia", "link": "https://stackoverflow.com/users/1198440/frank-joseph-mattia"}, "is_accepted": true, "score": 4, "last_activity_date": 1468190627, "last_edit_date": 1495535361, "creation_date": 1468189473, "answer_id": 38296959, "question_id": 38296469, "link": "https://stackoverflow.com/questions/38296469/cannot-compile-cargo-on-macos-10-12-because-ssl-cannot-be-found/38296959#38296959", "title": "Cannot compile Cargo on macOS 10.12 because SSL cannot be found", "body": "<p>I hadn't properly cleared the Cargo cache directory prior to retrying the build and I didn't <a href=\"https://stackoverflow.com/q/34612395/155423\">tell the build process how to find OpenSSL</a>.</p>\n\n<p>From within the Cargo repository:</p>\n\n<pre><code>$ make clean\n$ export OPENSSL_INCLUDE_DIR=`brew --prefix openssl`/include\n$ export DEP_OPENSSL_INCLUDE=${OPENSSL_INCLUDE_DIR}\n$ ./configure --prefix=/usr/local/Cellar/rust/HEAD --local-rust-root=/usr/local/Cellar/rust/HEAD --enable-optimize\n$ make\n$ make install\n</code></pre>\n\n<p>I then ran <code>brew unlink rust &amp;&amp; brew link rust</code> to create the symlinks.</p>\n"}], "owner": {"reputation": 584, "user_id": 1198440, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/f12368bc9ab95a09cfbfd708a04591e6?s=128&d=identicon&r=PG", "display_name": "Frank Joseph Mattia", "link": "https://stackoverflow.com/users/1198440/frank-joseph-mattia"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 988, "favorite_count": 0, "accepted_answer_id": 38296959, "answer_count": 1, "score": 3, "last_activity_date": 1468195108, "creation_date": 1468184725, "last_edit_date": 1468195108, "question_id": 38296469, "link": "https://stackoverflow.com/questions/38296469/cannot-compile-cargo-on-macos-10-12-because-ssl-cannot-be-found", "title": "Cannot compile Cargo on macOS 10.12 because SSL cannot be found", "body": "<p>I managed to get Rust to compile on 10.12-beta2 with the following steps however, I cannot get Cargo to compile.</p>\n\n<pre><code>$ git clone https://github.com/rust-lang/rust.git\n$ cd rust\n</code></pre>\n\n<p>I applied <a href=\"https://github.com/rust-lang/rust/pull/34686/files\" rel=\"nofollow\">pull request #34686</a> by manually patching the files. Next I edited <code>src/stage0.txt</code> to point to the latest nightly to work around <a href=\"https://github.com/rust-lang/rust/issues/34674\" rel=\"nofollow\">issue #34674</a>. </p>\n\n<pre><code>rustc: beta-2016-07-10\nrustc_key: 411fd48b\ncargo: nightly-2016-07-05\n</code></pre>\n\n<p>Since I use homebrew, I installed Rust where <code>brew install rust --HEAD</code> would put it:</p>\n\n<pre><code>$ ./configure --prefix=/usr/local/Cellar/rust/HEAD --disable-rpath --enable-clang --release-channel=nightly\n$ make\n$ make install\n</code></pre>\n\n<p>I let homebrew link Rust with <code>brew link rust</code>. Rust is installed just fine.</p>\n\n<pre><code>$ rustc --version\nrustc 1.12.0-nightly (46e7f4b8c 2016-07-10)\n</code></pre>\n\n<p>Now when I compile Cargo:</p>\n\n<pre><code>$ git clone --recursive https://github.com/rust-lang/cargo\n$ cd cargo\n$ ./configure --prefix=/usr/local/Cellar/rust/HEAD --local-rust-root=/usr/local/Cellar/rust/HEAD --enable-optimize\n$ make\nerror: linking with `cc` failed: exit code: 1\nnote: \"cc\" \"-m64\" \"-L\" \"/usr/local/Cellar/rust/HEAD/lib/rustlib/x86_64-apple-darwin/lib\" \"/Users/frankjmattia/Library/Caches/Homebrew/rust--cargo--git/target/x86_64-apple-darwin/release/cargo.0.o\" \"-o\" \"/Users/frankjmattia/Library/Caches/Homebrew/rust--cargo--git/target/x86_64-apple-darwin/release/cargo\" \"-Wl,-dead_strip\" \"-nodefaultlibs\" \"-L\" \"/Users/frankjmattia/Library/Caches/Homebrew/rust--cargo--git/target/x86_64-apple-darwin/release\" \"-L\" \"/Users/frankjmattia/Library/Caches/Homebrew/rust--cargo--git/target/x86_64-apple-darwin/release/deps\" \"-L\" \"/Users/frankjmattia/Library/Caches/Homebrew/rust--cargo--git/target/x86_64-apple-darwin/release/build/libgit2-sys-599545024e7f41ea/out/lib\" \"-L\" \"/usr/lib\" \"-L\" \"/usr/local/Cellar/libssh2/1.7.0/lib\" \"-L\" \"/Users/frankjmattia/Library/Caches/Homebrew/rust--cargo--git/target/x86_64-apple-darwin/release/build/miniz-sys-fcf0df5bde59c9aa/out\" \"-L\" \"/usr/local/Cellar/rust/HEAD/lib/rustlib/x86_64-apple-darwin/lib\" \"/Users/frankjmattia/Library/Caches/Homebrew/rust--cargo--git/target/x86_64-apple-darwin/release/deps/libgit2_curl-e2cdc94c821ad0d9.rlib\" \"/Users/frankjmattia/Library/Caches/Homebrew/rust--cargo--git/target/x86_64-apple-darwin/release/libcargo.rlib\" \"/Users/frankjmattia/Library/Caches/Homebrew/rust--cargo--git/target/x86_64-apple-darwin/release/deps/libtempdir-2cdf7b3a831e6ac5.rlib\" \"/Users/frankjmattia/Library/Caches/Homebrew/rust--cargo--git/target/x86_64-apple-darwin/release/deps/librand-c724acb3942597d1.rlib\" \"/Users/frankjmattia/Library/Caches/Homebrew/rust--cargo--git/target/x86_64-apple-darwin/release/deps/libsemver-b9dbfa773edeea01.rlib\" \"/Users/frankjmattia/Library/Caches/Homebrew/rust--cargo--git/target/x86_64-apple-darwin/release/deps/libnum_cpus-a5254d7bdb51bb96.rlib\" \"/Users/frankjmattia/Library/Caches/Homebrew/rust--cargo--git/target/x86_64-apple-darwin/release/deps/libdocopt-bf1b771f6864695e.rlib\" \"/Users/frankjmattia/Library/Caches/Homebrew/rust--cargo--git/target/x86_64-apple-darwin/release/deps/libfs2-9b8deaf67d029f85.rlib\" \"/Users/frankjmattia/Library/Caches/Homebrew/rust--cargo--git/target/x86_64-apple-darwin/release/deps/libterm-585dc449d37783e7.rlib\" \"/Users/frankjmattia/Library/Caches/Homebrew/rust--cargo--git/target/x86_64-apple-darwin/release/deps/libcrates_io-208ce28c14c99801.rlib\" \"/Users/frankjmattia/Library/Caches/Homebrew/rust--cargo--git/target/x86_64-apple-darwin/release/deps/libstrsim-7ec45c0f17103caa.rlib\" \"/Users/frankjmattia/Library/Caches/Homebrew/rust--cargo--git/target/x86_64-apple-darwin/release/deps/libnom-2a6c96954e73df9d.rlib\" \"/Users/frankjmattia/Library/Caches/Homebrew/rust--cargo--git/target/x86_64-apple-darwin/release/deps/libtoml-cd71fbce840828ea.rlib\" \"/Users/frankjmattia/Library/Caches/Homebrew/rust--cargo--git/target/x86_64-apple-darwin/release/deps/librustc_serialize-e1b49f9d5f55eb83.rlib\" \"/Users/frankjmattia/Library/Caches/Homebrew/rust--cargo--git/target/x86_64-apple-darwin/release/deps/libgit2-a06ed9c4a2306fd3.rlib\" \"/Users/frankjmattia/Library/Caches/Homebrew/rust--cargo--git/target/x86_64-apple-darwin/release/deps/liblibgit2_sys-f6a7bda0ca37fd89.rlib\" \"/Users/frankjmattia/Library/Caches/Homebrew/rust--cargo--git/target/x86_64-apple-darwin/release/deps/liblibssh2_sys-6ef236223a7a29af.rlib\" \"/Users/frankjmattia/Library/Caches/Homebrew/rust--cargo--git/target/x86_64-apple-darwin/release/deps/libopenssl_sys-2e99e5f7a9a32616.rlib\" \"/Users/frankjmattia/Library/Caches/Homebrew/rust--cargo--git/target/x86_64-apple-darwin/release/deps/liburl-3c116f81be85494f.rlib\" \"/Users/frankjmattia/Library/Caches/Homebrew/rust--cargo--git/target/x86_64-apple-darwin/release/deps/libcrossbeam-243e902fbb9fd1fe.rlib\" \"/Users/frankjmattia/Library/Caches/Homebrew/rust--cargo--git/target/x86_64-apple-darwin/release/deps/libglob-0ffe4874535835d5.rlib\" \"/Users/frankjmattia/Library/Caches/Homebrew/rust--cargo--git/target/x86_64-apple-darwin/release/deps/libcurl-03671fa2ef8a3330.rlib\" \"/Users/frankjmattia/Library/Caches/Homebrew/rust--cargo--git/target/x86_64-apple-darwin/release/deps/libtar-542b9b641a4c3944.rlib\" \"/Users/frankjmattia/Library/Caches/Homebrew/rust--cargo--git/target/x86_64-apple-darwin/release/deps/libfiletime-c297f1d53d29af71.rlib\" \"/Users/frankjmattia/Library/Caches/Homebrew/rust--cargo--git/target/x86_64-apple-darwin/release/deps/libenv_logger-927e8cf4058b3b7c.rlib\" \"/Users/frankjmattia/Library/Caches/Homebrew/rust--cargo--git/target/x86_64-apple-darwin/release/deps/liblog-0ec442df0ecb416b.rlib\" \"/Users/frankjmattia/Library/Caches/Homebrew/rust--cargo--git/target/x86_64-apple-darwin/release/deps/libregex-08fd4c31cabb9147.rlib\" \"/Users/frankjmattia/Library/Caches/Homebrew/rust--cargo--git/target/x86_64-apple-darwin/release/deps/libutf8_ranges-a6119bc781af556b.rlib\" \"/Users/frankjmattia/Library/Caches/Homebrew/rust--cargo--git/target/x86_64-apple-darwin/release/deps/libregex_syntax-99f5da5a82737304.rlib\" \"/Users/frankjmattia/Library/Caches/Homebrew/rust--cargo--git/target/x86_64-apple-darwin/release/deps/libaho_corasick-13668caf93db7fdf.rlib\" \"/Users/frankjmattia/Library/Caches/Homebrew/rust--cargo--git/target/x86_64-apple-darwin/release/deps/libmemchr-6b607a0dde114fba.rlib\" \"/Users/frankjmattia/Library/Caches/Homebrew/rust--cargo--git/target/x86_64-apple-darwin/release/deps/libcurl_sys-1dc2ea5da01c5626.rlib\" \"/Users/frankjmattia/Library/Caches/Homebrew/rust--cargo--git/target/x86_64-apple-darwin/release/deps/liblibz_sys-1b2511f78c024041.rlib\" \"/Users/frankjmattia/Library/Caches/Homebrew/rust--cargo--git/target/x86_64-apple-darwin/release/deps/libflate2-857dff75f2932d8a.rlib\" \"/Users/frankjmattia/Library/Caches/Homebrew/rust--cargo--git/target/x86_64-apple-darwin/release/deps/libminiz_sys-d3fcc71d21a3cba8.rlib\" \"/Users/frankjmattia/Library/Caches/Homebrew/rust--cargo--git/target/x86_64-apple-darwin/release/deps/liblibc-036fbedefddee9e8.rlib\" \"/Users/frankjmattia/Library/Caches/Homebrew/rust--cargo--git/target/x86_64-apple-darwin/release/deps/libidna-cfd533a97becc7e1.rlib\" \"/Users/frankjmattia/Library/Caches/Homebrew/rust--cargo--git/target/x86_64-apple-darwin/release/deps/libunicode_normalization-f33127ef3e902b05.rlib\" \"/Users/frankjmattia/Library/Caches/Homebrew/rust--cargo--git/target/x86_64-apple-darwin/release/deps/libunicode_bidi-7a56a7dec369a022.rlib\" \"/Users/frankjmattia/Library/Caches/Homebrew/rust--cargo--git/target/x86_64-apple-darwin/release/deps/libmatches-030a774745cc4f96.rlib\" \"/Users/frankjmattia/Library/Caches/Homebrew/rust--cargo--git/target/x86_64-apple-darwin/release/deps/libbitflags-d88a99e5825ec8bf.rlib\" \"/usr/local/Cellar/rust/HEAD/lib/rustlib/x86_64-apple-darwin/lib/libstd-c8005792.rlib\" \"/usr/local/Cellar/rust/HEAD/lib/rustlib/x86_64-apple-darwin/lib/libpanic_unwind-c8005792.rlib\" \"/usr/local/Cellar/rust/HEAD/lib/rustlib/x86_64-apple-darwin/lib/libunwind-c8005792.rlib\" \"/usr/local/Cellar/rust/HEAD/lib/rustlib/x86_64-apple-darwin/lib/librand-c8005792.rlib\" \"/usr/local/Cellar/rust/HEAD/lib/rustlib/x86_64-apple-darwin/lib/libcollections-c8005792.rlib\" \"/usr/local/Cellar/rust/HEAD/lib/rustlib/x86_64-apple-darwin/lib/liballoc-c8005792.rlib\" \"/usr/local/Cellar/rust/HEAD/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-c8005792.rlib\" \"/usr/local/Cellar/rust/HEAD/lib/rustlib/x86_64-apple-darwin/lib/liblibc-c8005792.rlib\" \"/usr/local/Cellar/rust/HEAD/lib/rustlib/x86_64-apple-darwin/lib/librustc_unicode-c8005792.rlib\" \"/usr/local/Cellar/rust/HEAD/lib/rustlib/x86_64-apple-darwin/lib/libcore-c8005792.rlib\" \"-l\" \"iconv\" \"-framework\" \"Security\" \"-framework\" \"CoreFoundation\" \"-l\" \"ssh2\" \"-l\" \"ssl\" \"-l\" \"crypto\" \"-l\" \"curl\" \"-l\" \"z\" \"-l\" \"System\" \"-l\" \"pthread\" \"-l\" \"c\" \"-l\" \"m\" \"-l\" \"compiler-rt\"\nnote: ld: library not found for -lssl\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\nerror: aborting due to previous error\nerror: Could not compile `cargo`.\n</code></pre>\n\n<p>I have OpenSSL installed with homebrew and linked via <code>brew link openssl --force</code>. Still no dice.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 3855, "user_id": 342882, "user_type": "registered", "accept_rate": 34, "profile_image": "https://www.gravatar.com/avatar/c13b4dc095a1bcc25e008effdd5cf07a?s=128&d=identicon&r=PG", "display_name": "Daneel Yaitskov", "link": "https://stackoverflow.com/users/342882/daneel-yaitskov"}, "edited": false, "score": 1, "creation_date": 1468177229, "post_id": 38294953, "comment_id": 64007823, "body": "I want sugar, and sugar for literal hash maps too!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 3855, "user_id": 342882, "user_type": "registered", "accept_rate": 34, "profile_image": "https://www.gravatar.com/avatar/c13b4dc095a1bcc25e008effdd5cf07a?s=128&d=identicon&r=PG", "display_name": "Daneel Yaitskov", "link": "https://stackoverflow.com/users/342882/daneel-yaitskov"}, "edited": false, "score": 1, "creation_date": 1468184095, "post_id": 38294953, "comment_id": 64009616, "body": "@DaneelS.Yaitskov <a href=\"http://stackoverflow.com/q/27582739/155423\">How do I create a HashMap literal?</a>"}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 7, "last_activity_date": 1527882798, "last_edit_date": 1527882798, "creation_date": 1468173896, "answer_id": 38294953, "question_id": 38294911, "link": "https://stackoverflow.com/questions/38294911/how-do-i-cast-a-literal-value-to-a-trait-object/38294953#38294953", "title": "How do I cast a literal value to a trait object?", "body": "<p>Rust lets you take a reference to a temporary:</p>\n\n<pre><code>foo_list.push(&amp;10 as &amp;Foo);\n</code></pre>\n\n<p>This exact code won't work <a href=\"https://github.com/rust-lang/rust/issues/38865\" rel=\"nofollow noreferrer\">until Rust 1.21</a>, where the literal value <code>10</code> is automatically promoted to a static value and then a reference is taken to it.</p>\n\n<p>Before Rust 1.21, the temporary ceases to exist at the end of the statement, so you'd end up with a dangling reference in your vector. Therefore, you <strong>must</strong> use a variable to extend the value's lifetime.</p>\n"}, {"tags": [], "owner": {"reputation": 3566, "user_id": 5138648, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1fdbc41d6ae88135845b5d965dac0b13?s=128&d=identicon&r=PG", "display_name": "aSpex", "link": "https://stackoverflow.com/users/5138648/aspex"}, "is_accepted": false, "score": 5, "last_activity_date": 1468179564, "creation_date": 1468179564, "answer_id": 38295802, "question_id": 38294911, "link": "https://stackoverflow.com/questions/38294911/how-do-i-cast-a-literal-value-to-a-trait-object/38295802#38295802", "title": "How do I cast a literal value to a trait object?", "body": "<p>You can use boxed trait objects to store values in the vector:</p>\n\n<pre><code>let mut box_list: Vec&lt;Box&lt;Foo&gt;&gt; = vec![];\nbox_list.push(Box::new(42));\nbox_list.push(Box::new(\"forty two\".to_owned()));\n</code></pre>\n"}], "owner": {"reputation": 3855, "user_id": 342882, "user_type": "registered", "accept_rate": 34, "profile_image": "https://www.gravatar.com/avatar/c13b4dc095a1bcc25e008effdd5cf07a?s=128&d=identicon&r=PG", "display_name": "Daneel Yaitskov", "link": "https://stackoverflow.com/users/342882/daneel-yaitskov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2358, "favorite_count": 0, "accepted_answer_id": 38294953, "answer_count": 2, "score": 6, "last_activity_date": 1527882798, "creation_date": 1468173617, "last_edit_date": 1527882609, "question_id": 38294911, "link": "https://stackoverflow.com/questions/38294911/how-do-i-cast-a-literal-value-to-a-trait-object", "title": "How do I cast a literal value to a trait object?", "body": "<p>I am trying to make this code more concise and to get rid of redundant variables. Is it possible to do so?</p>\n\n<pre><code>trait Foo {}\nimpl Foo for i32 {}\nimpl Foo for String {}\n\nfn main() {\n    let xi32: i32 = 10;\n    let y = String::from(\"ooo\");\n    let mut foo_list: Vec&lt;&amp;Foo&gt; = vec![];\n    foo_list.push(&amp;xi32 as &amp;Foo);\n    foo_list.push(&amp;y as &amp;Foo);\n}\n</code></pre>\n\n<p>The following variant doesn't work:</p>\n\n<pre><code>foo_list.push(10 as Foo);\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0620]: cast to unsized type: `{integer}` as `Foo`\n  --&gt; src/main.rs:11:19\n   |\n11 |     foo_list.push(10 as Foo);\n   |                   ^^^^^^^^^\n   |\nhelp: consider using a box or reference as appropriate\n  --&gt; src/main.rs:11:19\n   |\n11 |     foo_list.push(10 as Foo);\n   |                   ^^\n</code></pre>\n"}, {"tags": ["rust", "rustdoc"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1468159884, "post_id": 38292741, "comment_id": 64002712, "body": "Does <code>#[cfg_attr]</code> works inside the doctest? You could then hide it with <a href=\"https://doc.rust-lang.org/book/documentation.html#documentation-as-tests\" rel=\"nofollow noreferrer\"><code>#</code></a>."}], "answers": [{"comments": [{"owner": {"reputation": 479, "user_id": 1349450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8b0be7d1d308696a2d4f3feb122ee3b1?s=128&d=identicon&r=PG", "display_name": "Michael Yoo", "link": "https://stackoverflow.com/users/1349450/michael-yoo"}, "edited": false, "score": 1, "creation_date": 1468237016, "post_id": 38296371, "comment_id": 64028278, "body": "Only problem with this was that I was trying to do this for a module documentation, so there were no two different functions to write docs for. But your method is a much better one."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 7, "last_activity_date": 1468183904, "creation_date": 1468183904, "answer_id": 38296371, "question_id": 38292741, "link": "https://stackoverflow.com/questions/38292741/how-would-one-achieve-conditional-compilation-with-rust-projects-that-have-docte/38296371#38296371", "title": "How would one achieve conditional compilation with Rust projects that have doctests?", "body": "<p>Just write two different sets of documentation and tests and it will all work as-is:</p>\n\n<pre><code>/// ```\n/// assert_eq!(42, dt::foo());\n/// ```\n#[cfg(not(feature = \"alternate\"))]\npub fn foo() -&gt; u8 { 42 }\n\n/// ```\n/// assert_eq!(true, dt::foo());\n/// ```\n#[cfg(feature = \"alternate\")]\npub fn foo() -&gt; bool { true }\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo test\n   Compiling dt v0.1.0 (file:///private/tmp/dt)\n     Running target/debug/dt-c3e297f8592542b5\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured\n\n   Doc-tests dt\n\nrunning 1 test\ntest foo_0 ... ok\n\ntest result: ok. 1 passed; 0 failed; 0 ignored; 0 measured\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo test --features=alternate\n   Compiling dt v0.1.0 (file:///private/tmp/dt)\n     Running target/debug/dt-c3e297f8592542b5\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured\n\n   Doc-tests dt\n\nrunning 1 test\ntest foo_0 ... ok\n\ntest result: ok. 1 passed; 0 failed; 0 ignored; 0 measured\n</code></pre>\n"}], "owner": {"reputation": 479, "user_id": 1349450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8b0be7d1d308696a2d4f3feb122ee3b1?s=128&d=identicon&r=PG", "display_name": "Michael Yoo", "link": "https://stackoverflow.com/users/1349450/michael-yoo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 638, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1526175426, "creation_date": 1468159505, "last_edit_date": 1526175426, "question_id": 38292741, "link": "https://stackoverflow.com/questions/38292741/how-would-one-achieve-conditional-compilation-with-rust-projects-that-have-docte", "title": "How would one achieve conditional compilation with Rust projects that have doctests?", "body": "<p>I've used conditional compilation to change the type signature of a function, and now the same doctest can't be run for both \"feature\" modes, so I need a way to opt-out of the doctests.</p>\n\n<p>I've tried merging <code>#[cfg_attr(feature = \"rss_loose\", ignore)]</code> used in normal tests and <code>///rust,ignore</code> to make <code>///rust,cfg_attr(feature = \"rss_loose\", ignore)</code> but this doesn't seem to work.</p>\n"}, {"tags": ["arrays", "rust", "tuples"], "comments": [{"owner": {"reputation": 5862, "user_id": 859279, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6543ec0f2465bba1c6899f580bd1e20b?s=128&d=identicon&r=PG", "display_name": "Apanatshka", "link": "https://stackoverflow.com/users/859279/apanatshka"}, "edited": false, "score": 0, "creation_date": 1468162882, "post_id": 38290790, "comment_id": 64003526, "body": "In the end, I guess it&#39;s a bit overzealous of me to try to optimise out the calls to clone. The piece of code in the question is called exactly once per program run and it&#39;s just two (probably small) strings."}], "answers": [{"comments": [{"owner": {"reputation": 5862, "user_id": 859279, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6543ec0f2465bba1c6899f580bd1e20b?s=128&d=identicon&r=PG", "display_name": "Apanatshka", "link": "https://stackoverflow.com/users/859279/apanatshka"}, "edited": false, "score": 0, "creation_date": 1468162810, "post_id": 38290996, "comment_id": 64003514, "body": "This is exactly what I was looking for :) Sorry for the vagueness in the question."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 5862, "user_id": 859279, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6543ec0f2465bba1c6899f580bd1e20b?s=128&d=identicon&r=PG", "display_name": "Apanatshka", "link": "https://stackoverflow.com/users/859279/apanatshka"}, "edited": false, "score": 0, "creation_date": 1468167070, "post_id": 38290996, "comment_id": 64004763, "body": "@Apanatshka: Just to be clear, neither branch in the example involves copying or allocating; it&#39;s <i>purely</i> moves (and empty values in the first branch).  Just wanted to clarify since your comment on your question could imply you think there&#39;s no way to do this without copying."}, {"owner": {"reputation": 5862, "user_id": 859279, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6543ec0f2465bba1c6899f580bd1e20b?s=128&d=identicon&r=PG", "display_name": "Apanatshka", "link": "https://stackoverflow.com/users/859279/apanatshka"}, "edited": false, "score": 0, "creation_date": 1468256810, "post_id": 38290996, "comment_id": 64041499, "body": "I understand that your example doesn&#39;t do any copying (but it does allocate new (empty) <code>String</code>s right?). I just decided that in this case a call to <code>clone</code> is fine, and slightly less effort to write and read :)"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 5862, "user_id": 859279, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6543ec0f2465bba1c6899f580bd1e20b?s=128&d=identicon&r=PG", "display_name": "Apanatshka", "link": "https://stackoverflow.com/users/859279/apanatshka"}, "edited": false, "score": 2, "creation_date": 1468257375, "post_id": 38290996, "comment_id": 64041768, "body": "@Apanatshka it creates empty strings, but doing so does <i>not</i> involve any actual allocation."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 4, "last_activity_date": 1468167001, "last_edit_date": 1468167001, "creation_date": 1468147154, "answer_id": 38290996, "question_id": 38290790, "link": "https://stackoverflow.com/questions/38290790/how-do-i-move-string-values-from-an-array-to-a-tuple-without-copying/38290996#38290996", "title": "How do I move String values from an array to a tuple without copying?", "body": "<p>You've omitted a fair amount of context, so I'm taking a guess at a few aspects.  I'm also hewing a little closer to the question you <em>asked</em>, rather than the vaguer one implied by your snippets.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct NeverSpecified {\n    arg_names: Option&lt;[String; 2]&gt;,\n    arg_file: Vec&lt;String&gt;,\n}\n\nimpl NeverSpecified {\n    fn some_method_i_guess(mut self) -&gt; (String, String) {\n        if let Some(mut names) = self.arg_names {\n            use std::mem::replace;\n            let name_0 = replace(&amp;mut names[0], String::new());\n            let name_1 = replace(&amp;mut names[1], String::new());\n            (name_0, name_1)\n        } else {\n            let mut names = self.arg_file.drain(0..2);\n            let name_0 = names.next().expect(\"expected 2 names, got 0\");\n            let name_1 = names.next().expect(\"expected 2 names, got 1\");\n            (name_0, name_1)\n        }\n    }\n}\n</code></pre>\n\n<p>I use <a href=\"https://doc.rust-lang.org/std/mem/fn.replace.html\" rel=\"nofollow\"><code>std::mem::replace</code></a> to switch the contents of the array, whilst leaving it in a valid state.  This is necessary because Rust won't allow you to have a \"partially valid\" array.  There are no copies or allocations involved in this path.</p>\n\n<p>In the other path, we have to pull elements out of the vector by hand.  Again, you can't just move values out of a container via indexing (this is actually a limitation of indexing overall).  Instead, I use <a href=\"https://doc.rust-lang.org/collections/vec/struct.Vec.html#method.drain\" rel=\"nofollow\"><code>Vec::drain</code></a> to essentially chop the first two elements out of the vector, then extract them from the resulting iterator.  To be clear: this path doesn't involve any copies or allocations, <em>either</em>.</p>\n\n<p>As an aside, those <code>expect</code> methods <em>shouldn't</em> ever be triggered (since <code>drain</code> does bounds checking), but better paranoid than sorry; if you want to replace them with <code>unwrap()</code> calls instead, that should be fine..</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1589296001, "last_edit_date": 1589296001, "creation_date": 1521383298, "answer_id": 49349000, "question_id": 38290790, "link": "https://stackoverflow.com/questions/38290790/how-do-i-move-string-values-from-an-array-to-a-tuple-without-copying/49349000#49349000", "title": "How do I move String values from an array to a tuple without copying?", "body": "<p>Since Rust 1.36, you can use <em>slice patterns</em> to bind to all the values of the array at once:</p>\n\n<pre><code>struct NeverSpecified {\n    arg_names: Option&lt;[String; 2]&gt;,\n    arg_file: Vec&lt;String&gt;,\n}\n\nimpl NeverSpecified {\n    fn some_method_i_guess(mut self) -&gt; (String, String) {\n        if let Some([name_0, name_1]) = self.arg_names.take() {\n            (name_0, name_1)\n        } else {\n            let mut names = self.arg_file.drain(0..2);\n            let name_0 = names.next().expect(\"expected 2 names, got 0\");\n            let name_1 = names.next().expect(\"expected 2 names, got 1\");\n            (name_0, name_1)\n        }\n    }\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/49348654/155423\">Method for safely moving all elements out of a generic array into a tuple with minimal overhead</a></li>\n</ul>\n"}], "owner": {"reputation": 5862, "user_id": 859279, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6543ec0f2465bba1c6899f580bd1e20b?s=128&d=identicon&r=PG", "display_name": "Apanatshka", "link": "https://stackoverflow.com/users/859279/apanatshka"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 818, "favorite_count": 0, "accepted_answer_id": 38290996, "answer_count": 2, "score": 3, "last_activity_date": 1589296001, "creation_date": 1468145526, "last_edit_date": 1521383094, "question_id": 38290790, "link": "https://stackoverflow.com/questions/38290790/how-do-i-move-string-values-from-an-array-to-a-tuple-without-copying", "title": "How do I move String values from an array to a tuple without copying?", "body": "<p>I have a fixed size array of <code>String</code>s: <code>[String; 2]</code>. I want to turn it into a <code>(String, String)</code>. Can I do this without copying the values?</p>\n\n<p>The piece of code that I'm working on in particular is the following:</p>\n\n<pre><code>let (basis, names_0, names_1) = if let Some(names) = self.arg_name {\n    (ComparisonBasis::Name, names[0], names[1])\n} else {\n    (ComparisonBasis::File, self.arg_file[0], self.arg_file[1])\n};\n</code></pre>\n\n<p>types:</p>\n\n<pre><code>self.arg_name: Option&lt;[String; 2]&gt;\nself.arg_file: Vec&lt;String&gt;\n</code></pre>\n\n<p>Right now I'm getting errors</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>cannot move out of type `[std::string::String; 2]`, a non-copy fixed-size array [E0508]\n</code></pre>\n\n<p>and </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>cannot move out of indexed content [E0507]\n</code></pre>\n\n<p>for the two arms of the <code>if</code></p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user1096614"}, "edited": false, "score": 0, "creation_date": 1468169052, "post_id": 38289651, "comment_id": 64005395, "body": "I had actually thought of the dealloc callback solution about an hour before I asked the question, and somehow forgot about it. I&#39;m going to play around with this and see how far I get."}], "tags": [], "owner": {"reputation": 548, "user_id": 1718219, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8a941fa31555eb8ea43f247116c1add3?s=128&d=identicon&r=PG", "display_name": "Marco Neumann", "link": "https://stackoverflow.com/users/1718219/marco-neumann"}, "is_accepted": false, "score": 3, "last_activity_date": 1468135606, "creation_date": 1468135606, "answer_id": 38289651, "question_id": 38289355, "link": "https://stackoverflow.com/questions/38289355/drop-a-rust-void-pointer-stored-in-an-ffi/38289651#38289651", "title": "Drop a Rust void pointer stored in an FFI", "body": "<p>A naive + fully automatic approach is NOT possible for the following reasons:</p>\n\n<ul>\n<li><p><strong>freeing memory does not call drop/deconstructors/...:</strong> the C API can be used from languages which can have objects which should be deconstructed properly, e.g. C++ or Rust itself. So when you only store a memory pointer you do not know you to call the proper function (you neither know which function not how the calling conventions look like).</p></li>\n<li><p><strong>which memory allocator?:</strong> memory allocation and deallocation isn't a trivial thing. your program needs to request memory from the OS and then manage this resources in an intelligent way to be efficient and correct. This is usually done by a library. In case of Rust, jemalloc is used (but <a href=\"https://doc.rust-lang.org/book/custom-allocators.html\" rel=\"nofollow\">can be changed</a>). So even when you ask the API caller to only pass <a href=\"https://de.wikipedia.org/wiki/Plain_Old_Data_structure\" rel=\"nofollow\">Plain Old Data</a> (which should be easier to destruct) you still don't know which library function to call to deallocate memory. Just using <code>libc::free</code> won't work (it can but it could horrible fail).</p></li>\n</ul>\n\n<p>Solutions:</p>\n\n<ul>\n<li><p><strong>dealloc callback:</strong> you can ask the API user to set an additional pointer to, let's say a <code>void destruct(void* ptr)</code> function. If this one is not NULL, you call that function during your drop. You could also use <code>int</code> as an return type to signal when the destruction went wrong. In that case you could for example <code>panic!</code>.</p></li>\n<li><p><strong>global callback:</strong> let's assume you requested your user to only pass POD (plain old data). To know which <code>free</code> function of the memory allocator to call, you could request the user to register a global <code>void (*free)(void* ptr)</code> pointer which is called during drop. You could also make that one optional.</p></li>\n</ul>\n"}, {"tags": [], "owner": {"user_type": "does_not_exist", "display_name": "user1096614"}, "is_accepted": false, "score": 2, "last_activity_date": 1468538915, "creation_date": 1468538915, "answer_id": 38385754, "question_id": 38289355, "link": "https://stackoverflow.com/questions/38289355/drop-a-rust-void-pointer-stored-in-an-ffi/38385754#38385754", "title": "Drop a Rust void pointer stored in an FFI", "body": "<p>Although I was able to follow the advice in this thread, I wasn't entirely satisfied with my results, so I asked the question on the Rust forums and found the <a href=\"https://users.rust-lang.org/t/ffi-boxes-and-returning-references-to-the-boxed-data/6508/4?u=njpaul\" rel=\"nofollow\">answer</a> I was really looking for. (<a href=\"https://play.rust-lang.org/?code=use%20std%3A%3Aany%3A%3AAny%3B%0A%0Astatic%20mut%20foreign_ptr%3A%20*mut%20()%20%3D%200%20as%20*mut%20()%3B%0A%0Aunsafe%20fn%20api_set_fp(ptr%3A%20*mut%20())%20%7B%0A%20%20%20%20foreign_ptr%20%3D%20ptr%3B%0A%7D%0A%0Aunsafe%20fn%20api_get_fp()%20-%3E%20*mut()%20%7B%0A%20%20%20%20foreign_ptr%0A%7D%0A%0Astruct%20ApiWrapper%20%7B%7D%0A%0Aimpl%20ApiWrapper%20%7B%0A%20%20%20%20fn%20set_foreign%3CT%3A%20Any%3E(%26mut%20self%2C%20value%3A%20Box%3CT%3E)%20%7B%0A%20%20%20%20%20%20%20%20self.free_foreign()%3B%0A%20%20%20%20%20%20%20%20unsafe%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20let%20raw%20%3D%20Box%3A%3Ainto_raw(Box%3A%3Anew(value%20as%20Box%3CAny%3E))%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20api_set_fp(raw%20as%20*mut%20())%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%20%20%0A%20%20%20%20fn%20get_foreign_ref%3CT%3A%20Any%3E(%26self)%20-%3E%20Option%3C%26T%3E%20%7B%0A%20%20%20%20%20%20%20%20unsafe%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20let%20raw%20%3D%20api_get_fp()%20as%20*const%20Box%3CAny%3E%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20!raw.is_null()%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20let%20b%3A%20%26Box%3CAny%3E%20%3D%20%26*raw%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20b.downcast_ref()%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20None%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%20%20%0A%20%20%20%20fn%20get_foreign_mut%3CT%3A%20Any%3E(%26mut%20self)%20-%3E%20Option%3C%26mut%20T%3E%20%7B%0A%20%20%20%20%20%20%20%20unsafe%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20let%20raw%20%3D%20api_get_fp()%20as%20*mut%20Box%3CAny%3E%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20!raw.is_null()%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20let%20b%3A%20%26mut%20Box%3CAny%3E%20%3D%20%26mut%20*raw%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20b.downcast_mut()%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20None%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%20%20%0A%20%20%20%20fn%20free_foreign(%26mut%20self)%20%7B%0A%20%20%20%20%20%20%20%20unsafe%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20let%20raw%20%3D%20api_get_fp()%20as%20*mut%20Box%3CAny%3E%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20!raw.is_null()%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20Box%3A%3Afrom_raw(raw)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%7D%0A%0Aimpl%20Drop%20for%20ApiWrapper%20%7B%0A%20%20%20%20fn%20drop(%26mut%20self)%20%7B%0A%20%20%20%20%20%20%20%20self.free_foreign()%3B%0A%20%20%20%20%7D%0A%7D%0A%0Astruct%20MyData%20%7B%0A%20%20%20%20i%3A%20i32%2C%0A%7D%0A%0Aimpl%20Drop%20for%20MyData%20%7B%0A%20%20%20%20fn%20drop(%26mut%20self)%20%7B%0A%20%20%20%20%20%20%20%20println!(%22Dropping%20MyData%20with%20value%20%7B%7D%22%2C%20self.i)%3B%0A%20%20%20%20%7D%0A%7D%0A%0Afn%20main()%20%7B%0A%20%20%20%20let%20p1%20%3D%20Box%3A%3Anew(MyData%20%7Bi%3A%201%7D)%3B%0A%20%20%20%20let%20mut%20api%20%3D%20ApiWrapper%7B%7D%3B%0A%20%20%20%20api.set_foreign(p1)%3B%0A%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20let%20p2%20%3D%20api.get_foreign_ref%3A%3A%3CMyData%3E().unwrap()%3B%0A%20%20%20%20%20%20%20%20println!(%22i%20is%20%7B%7D%22%2C%20p2.i)%3B%0A%20%20%20%20%7D%0A%20%20%20%20api.set_foreign(Box%3A%3Anew(%22Hello!%22))%3B%0A%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20let%20p3%20%3D%20api.get_foreign_ref%3A%3A%3C%26%27static%20str%3E().unwrap()%3B%0A%20%20%20%20%20%20%20%20println!(%22payload%20is%20%7B%7D%22%2C%20p3)%3B%0A%20%20%20%20%7D%0A%7D%0A&amp;version=stable&amp;backtrace=0\" rel=\"nofollow\">play</a>)</p>\n\n<pre><code>use std::any::Any;\n\nstatic mut foreign_ptr: *mut () = 0 as *mut ();\n\nunsafe fn api_set_fp(ptr: *mut ()) {\n    foreign_ptr = ptr;\n}\n\nunsafe fn api_get_fp() -&gt; *mut() {\n    foreign_ptr\n}\n\nstruct ApiWrapper {}\n\nimpl ApiWrapper {\n    fn set_foreign&lt;T: Any&gt;(&amp;mut self, value: Box&lt;T&gt;) {\n        self.free_foreign();\n        unsafe {\n            let raw = Box::into_raw(Box::new(value as Box&lt;Any&gt;));\n            api_set_fp(raw as *mut ());\n        }\n    }\n\n    fn get_foreign_ref&lt;T: Any&gt;(&amp;self) -&gt; Option&lt;&amp;T&gt; {\n        unsafe {\n            let raw = api_get_fp() as *const Box&lt;Any&gt;;\n            if !raw.is_null() {\n                let b: &amp;Box&lt;Any&gt; = &amp;*raw;\n                b.downcast_ref()\n            } else {\n                None\n            }\n        }\n    }\n\n    fn get_foreign_mut&lt;T: Any&gt;(&amp;mut self) -&gt; Option&lt;&amp;mut T&gt; {\n        unsafe {\n            let raw = api_get_fp() as *mut Box&lt;Any&gt;;\n            if !raw.is_null() {\n                let b: &amp;mut Box&lt;Any&gt; = &amp;mut *raw;\n                b.downcast_mut()\n            } else {\n                None\n            }\n        }\n    }\n\n    fn free_foreign(&amp;mut self) {\n        unsafe {\n            let raw = api_get_fp() as *mut Box&lt;Any&gt;;\n            if !raw.is_null() {\n                Box::from_raw(raw);\n            }\n        }\n    }\n}\n\nimpl Drop for ApiWrapper {\n    fn drop(&amp;mut self) {\n        self.free_foreign();\n    }\n}\n\nstruct MyData {\n    i: i32,\n}\n\nimpl Drop for MyData {\n    fn drop(&amp;mut self) {\n        println!(\"Dropping MyData with value {}\", self.i);\n    }\n}\n\nfn main() {\n    let p1 = Box::new(MyData {i: 1});\n    let mut api = ApiWrapper{};\n    api.set_foreign(p1);\n    {\n        let p2 = api.get_foreign_ref::&lt;MyData&gt;().unwrap();\n        println!(\"i is {}\", p2.i);\n    }\n    api.set_foreign(Box::new(\"Hello!\"));\n    {\n        let p3 = api.get_foreign_ref::&lt;&amp;'static str&gt;().unwrap();\n        println!(\"payload is {}\", p3);\n    }\n}\n</code></pre>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user1096614"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1171, "favorite_count": 0, "answer_count": 2, "score": 3, "last_activity_date": 1468538915, "creation_date": 1468133056, "question_id": 38289355, "link": "https://stackoverflow.com/questions/38289355/drop-a-rust-void-pointer-stored-in-an-ffi", "title": "Drop a Rust void pointer stored in an FFI", "body": "<p>I'm wrapping a C API which allows the caller to set/get an arbitrary pointer via function calls. In this way, the C API allows a caller to associate arbitrary data with one of the C API objects. This data is not used in any callbacks, it's just a pointer that a user can stash away and get at later.</p>\n\n<p>My wrapper struct implements the Drop trait for the C object that contains this pointer. What I'd like to be able to do, but am not sure it's possible, is have the data dropped correctly if the pointer is not null when the wrapper struct drops. I'm not sure how I would recover the correct type though from a raw c_void pointer.</p>\n\n<p>Two alternatives I'm thinking of are</p>\n\n<ol>\n<li>Implement the behavior of these two calls in the wrapper. Don't make any calls to the C API.</li>\n<li>Don't attempt to offer any kind of safer interface to these functions. Document that the pointer must be managed by the caller of the wrapper.</li>\n</ol>\n\n<p>Is what I want to do possible? If not, is there a generally accepted practice for these kinds of situations?</p>\n"}, {"tags": ["pattern-matching", "rust"], "answers": [{"comments": [{"owner": {"reputation": 345, "user_id": 2179079, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ebbf8303d2f09da0b0a55ef801b58597?s=128&d=identicon&r=PG", "display_name": "KDN", "link": "https://stackoverflow.com/users/2179079/kdn"}, "edited": false, "score": 0, "creation_date": 1468107864, "post_id": 38287137, "comment_id": 63992798, "body": "I have quick doubt. My case for negative (the second Ok) doesn&#39;t work when I pass a negative number. I keep getting the Err(_) condition instead. Is this because the parse doesn&#39;t work for negative number as a string or am I doing something wrong?"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 345, "user_id": 2179079, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ebbf8303d2f09da0b0a55ef801b58597?s=128&d=identicon&r=PG", "display_name": "KDN", "link": "https://stackoverflow.com/users/2179079/kdn"}, "edited": false, "score": 0, "creation_date": 1468110162, "post_id": 38287137, "comment_id": 63993226, "body": "But you parse it as a <code>u32</code>, that can&#39;t be negative anyway so you will get a parse error. Isn&#39;t that what you want?"}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 7, "last_activity_date": 1468106122, "creation_date": 1468106122, "answer_id": 38287137, "question_id": 38287110, "link": "https://stackoverflow.com/questions/38287110/rust-match-on-number-condition/38287137#38287137", "title": "Rust match on number condition", "body": "<p>A <code>match</code> arm can be <a href=\"https://doc.rust-lang.org/book/patterns.html#guards\" rel=\"noreferrer\">guarded</a>:</p>\n\n<pre><code>let guess: u32 = match guess.trim().parse() {\n    Ok(num) if num &gt; 0 =&gt; num,\n    Ok(num) =&gt; return Err(whatever),\n    Err(_)  =&gt; continue,\n};\n</code></pre>\n"}], "owner": {"reputation": 345, "user_id": 2179079, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ebbf8303d2f09da0b0a55ef801b58597?s=128&d=identicon&r=PG", "display_name": "KDN", "link": "https://stackoverflow.com/users/2179079/kdn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2812, "favorite_count": 0, "accepted_answer_id": 38287137, "answer_count": 1, "score": 1, "last_activity_date": 1468106122, "creation_date": 1468105770, "question_id": 38287110, "link": "https://stackoverflow.com/questions/38287110/rust-match-on-number-condition", "title": "Rust match on number condition", "body": "<p>I have the following match condition that tests whether the entered guess is a valid number (it's from the rust guessing game exercise) :</p>\n\n<pre><code>let mut guess = String::new(); \nio::stdin().read_line(&amp;mut guess).expect(\"Failed to read\");\nlet guess: u32 = match guess.trim().parse() {\n    Ok(num) =&gt; num,\n    Err(_)  =&gt; continue,\n};\n</code></pre>\n\n<p>How do I extend the match to check if the number is negative or 0 (I want to throw an error in this case) and proceed normally if the number is positive ?</p>\n\n<p>I tried adding an if on the num inside the Ok case, but that throws an error (probably because num is bound to the value of guess) and also doesn't seem idiomatic. </p>\n"}, {"tags": ["random", "rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1558147253, "last_edit_date": 1558147253, "creation_date": 1468093795, "answer_id": 38285764, "question_id": 38285671, "link": "https://stackoverflow.com/questions/38285671/unable-to-create-a-vector-and-shuffle-it/38285764#38285764", "title": "Unable to create a vector and shuffle it", "body": "<ol>\n<li><p><code>collect</code> needs to know what type you wish to collect into. From the looks of it, you want a <code>Vec</code>:</p>\n\n<pre><code>let mut secret_num: Vec&lt;_&gt; = (48..58).collect();\n</code></pre></li>\n<li><p>You don't want to use <code>&amp;mut</code> in the declaration of this variable because that would make <code>slice</code> an unsized type, which isn't valid to have. In fact, this line is redundant.</p>\n\n<pre><code>let &amp;mut slice = secret_num.as_mut_slice();\n</code></pre></li>\n<li><p>Traits must be brought into scope. The error message you are already getting <em>should already be telling you this</em>. Rust has pretty good error messages most of the time. You should read them:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>help: items from traits can only be used if the trait is in scope;\n      the following trait is implemented but not in scope,\n      perhaps add a `use` for it:\nhelp: candidate #1: `use rand::Rng`\n</code></pre></li>\n<li><p>There's no need for a <code>loop</code> at all; remove it. Produce an <a href=\"/help/mcve\">MCVE</a> when asking a question to help you understand the source of the problem and others to answer it. In your real program, you should get the random number generator <em>once</em> before the loop to avoid overhead.</p></li>\n<li><p>Since you originally asked the question, rand has reorganized their code. <code>shuffle</code> is now part of the <a href=\"https://docs.rs/rand/0.6.5/rand/seq/trait.SliceRandom.html#tymethod.shuffle\" rel=\"nofollow noreferrer\"><code>SliceRandom</code></a> trait.</p></li>\n</ol>\n\n<pre><code>use rand::seq::SliceRandom; // 0.6.5\n\nfn main() {\n    let mut secret_num: Vec&lt;_&gt; = (48..58).collect();\n    let mut rng = rand::thread_rng();\n\n    secret_num.shuffle(&amp;mut rng);\n\n    println!(\"{:?}\", secret_num);\n}\n</code></pre>\n"}], "owner": {"reputation": 345, "user_id": 2179079, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ebbf8303d2f09da0b0a55ef801b58597?s=128&d=identicon&r=PG", "display_name": "KDN", "link": "https://stackoverflow.com/users/2179079/kdn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1053, "favorite_count": 0, "accepted_answer_id": 38285764, "answer_count": 1, "score": 2, "last_activity_date": 1558147253, "creation_date": 1468093202, "last_edit_date": 1468094031, "question_id": 38285671, "link": "https://stackoverflow.com/questions/38285671/unable-to-create-a-vector-and-shuffle-it", "title": "Unable to create a vector and shuffle it", "body": "<p>I'm trying to create a vector with the numbers 48 to 57 and then randomly shuffle it. I'm running into the following errors</p>\n\n<pre><code>error: the type of this value must be known in this context\n        let &amp;mut slice = secret_num.as_mut_slice();\n                         ^~~~~~~~~~~~~~~~~~~~~~~~~\nerror: no method named `shuffle` found for type `rand::ThreadRng` in the current scope\n        rng.shuffle(&amp;mut slice);\n            ^~~~~~~\n</code></pre>\n\n<p>Here's the code:    </p>\n\n<pre><code>extern crate rand;\n\nfn main() {\n    //Main game loop\n    loop{\n        let mut secret_num = (48..58).collect();\n        let &amp;mut slice = secret_num.as_mut_slice();\n        let mut rng = rand::thread_rng();\n        rng.shuffle(&amp;mut slice);                                            \n        println!(\"{:?}\", secret_num);\n        break;\n    }\n    println!(\"Hello, world!\");\n}\n</code></pre>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1468091756, "post_id": 38285396, "comment_id": 63989330, "body": "Also relevant: <a href=\"http://stackoverflow.com/q/29540167/155423\">stackoverflow.com/q/29540167/155423</a>; <a href=\"http://stackoverflow.com/q/38027461/155423\">stackoverflow.com/q/38027461/155423</a>."}, {"owner": {"reputation": 8813, "user_id": 389119, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/05241abffd72dcdcd1dc9d6833706ba9?s=128&d=identicon&r=PG", "display_name": "antoyo", "link": "https://stackoverflow.com/users/389119/antoyo"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1468095339, "post_id": 38285396, "comment_id": 63990375, "body": "In the <a href=\"http://stackoverflow.com/questions/32044301/cannot-pass-self-as-callback-parameter-due-to-double-borrowing\">post you linked</a>, we see a similar solution to what I already posted in this question. I wonder if there is a better way because it seems to be a recurrent issue in Rust."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1468095839, "post_id": 38285396, "comment_id": 63990508, "body": "I&#39;m not really sure how SO prefers to handle the case of &quot;I don&#39;t like the existing answers, are there any better ones&quot;. I believe you could open a bounty on the existing question to draw attention to it and include a custom reason describing why you don&#39;t like the current answer and ask for a better one. If you can find something in Meta that indicates it&#39;s OK to open new questions seeking newer / better / updated answers to a previous question, I&#39;d be happy to un-duplicate this one."}], "owner": {"reputation": 8813, "user_id": 389119, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/05241abffd72dcdcd1dc9d6833706ba9?s=128&d=identicon&r=PG", "display_name": "antoyo", "link": "https://stackoverflow.com/users/389119/antoyo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 20, "favorite_count": 0, "closed_date": 1468091693, "answer_count": 0, "score": 0, "last_activity_date": 1468091412, "creation_date": 1468091412, "question_id": 38285396, "link": "https://stackoverflow.com/questions/38285396/use-callback-stored-in-struct", "closed_reason": "Duplicate", "title": "Use callback stored in struct", "body": "<p>Let's say we have a <code>struct</code> containing callbacks:</p>\n\n<pre><code>use std::collections::HashMap;\n\nstruct Struct {\n    callbacks: HashMap&lt;char, Box&lt;Fn(&amp;mut Struct)&gt;&gt;,\n}\n\nimpl Struct {\n    fn new() -&gt; Struct {\n        Struct {\n            callbacks: HashMap::new(),\n        }\n    }\n\n    fn add_callback&lt;F: Fn(&amp;mut Struct) + 'static&gt;(&amp;mut self, key: char, callback: F) {\n        self.callbacks.insert(key, Box::new(callback));\n    }\n\n    fn invoke_callback(&amp;mut self, key: char) {\n        if let Some(callback) = self.callbacks.get(&amp;key) {\n            callback(self); // NOTE: error here\n        }\n    }\n\n    fn print(&amp;mut self) {\n        println!(\"Mutably print\");\n    }\n}\n\nfn main() {\n    let mut strct = Struct::new();\n    strct.add_callback('a', |strct| {\n        strct.print();\n    });\n    strct.invoke_callback('a');\n}\n</code></pre>\n\n<p>With this code, I have the following error:</p>\n\n<pre><code>src/main.rs:20:22: 20:26 error: cannot borrow `*self` as mutable because `self.callbacks` is also borrowed as immutable [E0502]\nsrc/main.rs:20             callback(self);\n                                    ^~~~\nsrc/main.rs:19:33: 19:47 note: previous borrow of `self.callbacks` occurs here; the immutable borrow prevents subsequent moves or mutable borrows of `self.callbacks` until the borrow ends\nsrc/main.rs:19         if let Some(callback) = self.callbacks.get(&amp;key) {\n                                               ^~~~~~~~~~~~~~\nsrc/main.rs:21:10: 21:10 note: previous borrow ends here\nsrc/main.rs:19         if let Some(callback) = self.callbacks.get(&amp;key) {\nsrc/main.rs:20             callback(self);\nsrc/main.rs:21         }\n                       ^\nerror: aborting due to previous error\nerror: Could not compile `so`.\n</code></pre>\n\n<p>How can I invoke the callback that takes a mutable reference to <code>self</code>?</p>\n\n<p>The only way I found was to remove the callback from the <code>HashMap</code> and inserting it back:</p>\n\n<pre><code>fn invoke_callback(&amp;mut self, key: char) {\n    if let Some(callback) = self.callbacks.remove(&amp;key) {\n        callback(self);\n        self.callbacks.insert(key, callback);\n    }\n}\n</code></pre>\n\n<p>I wonder if there is a better way of invoking a callback contained in a <code>struct</code>.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 501, "user_id": 4548507, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/41a11a311c8230582d4c192f0d6470b9?s=128&d=identicon&r=PG&f=1", "display_name": "jolson", "link": "https://stackoverflow.com/users/4548507/jolson"}, "edited": false, "score": 0, "creation_date": 1468095256, "post_id": 38277274, "comment_id": 63990357, "body": "Thank you! I thought there would be more to it, somehow, but you have covered everything I asked about."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 40, "last_activity_date": 1528485355, "last_edit_date": 1528485355, "creation_date": 1468026421, "answer_id": 38277274, "question_id": 38276960, "link": "https://stackoverflow.com/questions/38276960/what-is-the-recommended-directory-structure-for-a-rust-project/38277274#38277274", "title": "What is the recommended directory structure for a Rust project?", "body": "<p>Cargo, the official package manager for Rust, <a href=\"https://doc.rust-lang.org/stable/cargo/guide/project-layout.html\" rel=\"noreferrer\">defines some conventions regarding the layout of a Rust crate</a>:</p>\n\n<blockquote>\n  <pre class=\"lang-none prettyprint-override\"><code>.\n\u251c\u2500\u2500 Cargo.lock\n\u251c\u2500\u2500 Cargo.toml\n\u251c\u2500\u2500 benches\n\u2502   \u2514\u2500\u2500 large-input.rs\n\u251c\u2500\u2500 examples\n\u2502   \u2514\u2500\u2500 simple.rs\n\u251c\u2500\u2500 src\n\u2502   \u251c\u2500\u2500 bin\n\u2502   \u2502   \u2514\u2500\u2500 another_executable.rs\n\u2502   \u251c\u2500\u2500 lib.rs\n\u2502   \u2514\u2500\u2500 main.rs\n\u2514\u2500\u2500 tests\n    \u2514\u2500\u2500 some-integration-tests.rs\n</code></pre>\n  \n  <ul>\n  <li><code>Cargo.toml</code> and <code>Cargo.lock</code> are stored in the root of your project.</li>\n  <li>Source code goes in the <code>src</code> directory.</li>\n  <li>The default library file is <code>src/lib.rs</code>.</li>\n  <li>The default executable file is <code>src/main.rs</code>.</li>\n  <li>Other executables can be placed in <code>src/bin/*.rs</code>.</li>\n  <li>Integration tests go in the <code>tests</code> directory (unit tests go in each file they're testing).</li>\n  <li>Example executable files go in the <code>examples</code> directory.</li>\n  <li>Benchmarks go in the <code>benches</code> directory.</li>\n  </ul>\n  \n  <p>These are explained in more detail in the <a href=\"https://doc.rust-lang.org/stable/cargo/reference/manifest.html#the-project-layout\" rel=\"noreferrer\">manifest description</a>.</p>\n</blockquote>\n\n<p>By following this standard layout, you'll be able to use Cargo's commands to build, run and test your project easily. Run <code>cargo new</code> to set up a new executable project or <code>cargo new --lib</code> to set up a new library project.</p>\n\n<p>Additionally, documentation for libraries is often written in documentation comments (comments that start with <code>///</code> before any item, or <code>//!</code> to document the parent item). Also, the license is usually put at the root.</p>\n\n<p>Unit tests, as mentioned above, are written in the same module as the functions they're testing. Usually, they're put in an inner module. It looks like this (this is what Cargo generates for a new library with <code>cargo new --lib</code>):</p>\n\n<pre><code>#[cfg(test)]\nmod tests {\n    #[test]\n    fn it_works() {\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 501, "user_id": 4548507, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/41a11a311c8230582d4c192f0d6470b9?s=128&d=identicon&r=PG&f=1", "display_name": "jolson", "link": "https://stackoverflow.com/users/4548507/jolson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 8423, "favorite_count": 4, "accepted_answer_id": 38277274, "answer_count": 1, "score": 25, "last_activity_date": 1528485355, "creation_date": 1468022631, "question_id": 38276960, "link": "https://stackoverflow.com/questions/38276960/what-is-the-recommended-directory-structure-for-a-rust-project", "title": "What is the recommended directory structure for a Rust project?", "body": "<p>Where should one put the sources, examples, documentation, unit tests, integration tests, license, benchmarks <em>etc</em>?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1556848258, "last_edit_date": 1556848258, "creation_date": 1468007028, "answer_id": 38274305, "question_id": 38274040, "link": "https://stackoverflow.com/questions/38274040/chunking-a-vector-of-strings/38274305#38274305", "title": "Chunking a vector of strings", "body": "<p>You weren't far off:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let result: Vec&lt;String&gt; = args\n    .join(\"\")\n    .chars()\n    .collect::&lt;Vec&lt;_&gt;&gt;()\n    .chunks(2)\n    .map(|x| x.iter().cloned().collect())\n    .collect();\n\nprintln!(\"{:?}\", result);\n</code></pre>\n\n<ol>\n<li><p>You probably don't want a space when joining them together.</p></li>\n<li><p>You need to convert each chunk (which is a <code>&amp;[char]</code>) into an iterator via <code>.iter()</code>. You then have to convert the iterated type from a <code>&amp;char</code> to a <code>char</code> via <code>.cloned()</code>.</p></li>\n</ol>\n\n<hr>\n\n<p>I might write this using <a href=\"https://docs.rs/itertools/0.8.0/itertools/trait.Itertools.html#method.chunks\" rel=\"nofollow noreferrer\"><code>Itertools::chunks</code></a> though:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use itertools::Itertools; // 0.8.0\n\nfn main() {\n    let args = [\"123\", \"4\", \"56\"];\n\n    let together = args.iter().flat_map(|x| x.chars());\n\n    let result: Vec&lt;String&gt; = together\n        .chunks(2)\n        .into_iter()\n        .map(|x| x.collect())\n        .collect();\n\n    println!(\"{:?}\", result);\n}\n</code></pre>\n\n<p><code>flat_map</code> avoids the need to create a <code>String</code>, it just chains one iterator to the next.</p>\n\n<p><code>Itertools::chunks</code> allows the programmer to not create an intermediate <code>Vec</code>. Instead, it has an internal vector that, IIRC, will only store up to <code>n</code> values in it before yielding a value. This way you are buffering a smaller amount of items.</p>\n"}], "owner": {"reputation": 25774, "user_id": 1048479, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/a9b214fab73f4c18ded501d976a2294c?s=128&d=identicon&r=PG", "display_name": "Nick Tomlin", "link": "https://stackoverflow.com/users/1048479/nick-tomlin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1226, "favorite_count": 0, "accepted_answer_id": 38274305, "answer_count": 1, "score": 0, "last_activity_date": 1556848349, "creation_date": 1468005959, "last_edit_date": 1556848349, "question_id": 38274040, "link": "https://stackoverflow.com/questions/38274040/chunking-a-vector-of-strings", "title": "Chunking a vector of strings", "body": "<p>I'm trying to chunk an vector of uneven length strings into a vector of even length strings. The laziest way I could think of doing this is to join the arguments into a string, convert the chars to a vector, and then use <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.chunks\" rel=\"nofollow noreferrer\"><code>Vec::chunks</code></a>. Unfortunately, I'm running into issues trying to collect the chunks into strings.</p>\n\n<pre><code>let args: Vec&lt;String&gt; = [\"123\", \"4\", \"56\"].iter().map(|&amp;s| s.into()).collect();\n\nlet result: Vec&lt;String&gt; = args\n    .join(\" \")\n    .chars()\n    .collect::&lt;Vec&lt;_&gt;&gt;()\n    .chunks(2)\n    .map(|c| c.collect::&lt;String&gt;())\n    .collect::&lt;Vec&lt;String&gt;&gt;();\n\nassert_eq!([\"12\", \"34\", \"56\"], result);\n</code></pre>\n\n<p>Results in the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `collect` found for type `&amp;[char]` in the current scope\n --&gt; src/main.rs:9:20\n  |\n9 |         .map(|c| c.collect::&lt;String&gt;())\n  |                    ^^^^^^^\n  |\n  = note: the method `collect` exists but the following trait bounds were not satisfied:\n          `&amp;mut &amp;[char] : std::iter::Iterator`\n          `&amp;mut [char] : std::iter::Iterator`\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1467988534, "post_id": 38268670, "comment_id": 63957970, "body": "Might want to use an <code>isize</code> here, since <code>.offset(...)</code> expects an <code>isize</code> argument anyway; it will save you from trouble should <code>b</code> be smaller than <code>a</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1467989798, "post_id": 38268670, "comment_id": 63958827, "body": "@MatthieuM. I don&#39;t think that <code>offset</code> <i>should</i> be used here. Besides, OP wants to return the same thing as <code>str::find</code>, which would be <code>Option&lt;usize&gt;</code>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1559242277, "last_edit_date": 1559242277, "creation_date": 1467986708, "answer_id": 38268670, "question_id": 38268529, "link": "https://stackoverflow.com/questions/38268529/how-to-get-the-byte-offset-between-str/38268670#38268670", "title": "How to get the byte offset between `&amp;str`", "body": "<blockquote>\n  <p>but it turns out that <code>Sub</code> is not implemented on raw pointers.</p>\n</blockquote>\n\n<p>You can convert the pointer to a <code>usize</code> to do math on it:</p>\n\n<pre><code>fn main() {\n    let source = \"hello, world\";\n    let a = &amp;source[1..];\n    let b = &amp;source[5..];\n    let diff =  b.as_ptr() as usize - a.as_ptr() as usize;\n    println!(\"{}\", diff);\n}\n</code></pre>\n\n<hr>\n\n<p>There's also the unstable method <a href=\"https://doc.rust-lang.org/std/primitive.pointer.html#method.offset_from\" rel=\"nofollow noreferrer\"><code>offset_from</code></a>:</p>\n\n<pre><code>#![feature(ptr_offset_from)]\n\nfn main() {\n    let source = \"hello, world\";\n    let a = &amp;source[1..];\n    let b = &amp;source[5..];\n    // I copied this unsafe code from Stack Overflow without\n    // reading the text that told me how to know if this was safe\n    let diff = unsafe { b.as_ptr().offset_from(a.as_ptr()) };\n    println!(\"{}\", diff);\n}\n</code></pre>\n\n<p>Please be sure to read the documentation for this method as it describes under what circumstances it will not cause undefined behavior.</p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1467986850, "post_id": 38268688, "comment_id": 63956876, "body": "It&#39;s not unsafe <i>at all</i>. Pointers are just numbers. Accessing memory at an arbitrary location is unsafe."}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1467986899, "post_id": 38268688, "comment_id": 63956904, "body": "But the result is absolute nonsense in this case if the slices aren&#39;t from the same string after all."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1467987105, "post_id": 38268688, "comment_id": 63957049, "body": "Certainly. But <b>unsafe</b> has a specific meaning in Rust and we shouldn&#39;t misuse the term as that will only confuse future readers."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1467987626, "post_id": 38268688, "comment_id": 63957390, "body": "\u201cIt&#39;s not unsafe at all. Pointers are just numbers.\u201d \u2192 in C pointer arithmetic is a UB if the pointers point on different objects. This would qualify as unsafe as per Rust&#39;s definition of the word."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1467987999, "post_id": 38268688, "comment_id": 63957654, "body": "@mcarton True, me saying &quot;pointers are just numbers&quot; was careless wording. I&#39;m pretty sure that this isn&#39;t <i>pointer arithmetic</i> though. Rust doesn&#39;t have pointer arithmetic (essentially the cause of your question), but you can convert a <i>pointer</i> to a <i>number</i>, at which point it&#39;s <i>numeric arithmetic</i>. I wonder what the C undefined behavior rules say about casting a pointer to a integer and then doing math on the result."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1467988453, "post_id": 38268688, "comment_id": 63957913, "body": "\u201cI wonder what the C undefined behavior rules say about casting a pointer to a integer and then doing math on the result.\u201d \u2192 So do I"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1467990574, "post_id": 38268688, "comment_id": 63959368, "body": "@mcarton: In C (or C++) performing a subtraction on two unsigned integers is perfectly defined (it returns the result of mathematical subtraction, wrapping if necessary). The origin of the value (be it a pointer, user input, or whatever) fortunately does not affect the result of the operation."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1467992588, "post_id": 38268688, "comment_id": 63960696, "body": "@MatthieuM. Does that mean that given <code>void *a = ...; void *b = ...;</code>, then <code>a - b</code> may be UB, but <code>((size_t)a) - ((size_t)b)</code> can never be UB?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1467999760, "post_id": 38268688, "comment_id": 63964372, "body": "@Shepmaster: As far as I know, yes. It&#39;s just maths. There is, however, no guarantee that the result is any kind of useful. (1) you should be using <code>intptr_t</code> or <code>uintptr_t</code> to get an integral type wide enough to accommodate a pointer value and (2) since <code>uintptr_t</code> is not guaranteed to be the <i>exact</i> size of a pointer, if the result wraps around it can be totally useless... and that&#39;s even before introducing the exotic segmented architecture, which I don&#39;t know much about :/"}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 2, "creation_date": 1468016686, "post_id": 38268688, "comment_id": 63971630, "body": "In particular, C gives you no guarantee that <code>(ptrdiff_t)((size_t)a) - (size_t)b) == a - b</code>."}], "tags": [], "owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "is_accepted": false, "score": 0, "last_activity_date": 1467986769, "creation_date": 1467986769, "answer_id": 38268688, "question_id": 38268529, "link": "https://stackoverflow.com/questions/38268529/how-to-get-the-byte-offset-between-str/38268688#38268688", "title": "How to get the byte offset between `&amp;str`", "body": "<p>This is of course kind of unsafe, but if you want arithmetic, you can just cast the pointers to <code>usize</code> with <code>as</code> and subtract that.</p>\n\n<p>(Note: it's not so unsafe that the compiler will actually complain.)</p>\n"}], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 528, "favorite_count": 0, "accepted_answer_id": 38268670, "answer_count": 2, "score": 6, "last_activity_date": 1559242277, "creation_date": 1467986268, "last_edit_date": 1559235648, "question_id": 38268529, "link": "https://stackoverflow.com/questions/38268529/how-to-get-the-byte-offset-between-str", "title": "How to get the byte offset between `&amp;str`", "body": "<p>I have two <code>&amp;str</code> <em>pointing to the same string</em>, and I need to know the byte offset between them:</p>\n\n<pre><code>fn main() {\n    let foo = \"  bar\";\n    assert_eq!(offset(foo, foo.trim()), Some(2));\n\n    let bar = \"baz\\nquz\";\n    let mut lines = bar.lines();\n    assert_eq!(offset(bar, lines.next().unwrap()), Some(0));\n    assert_eq!(offset(bar, lines.next().unwrap()), Some(4));\n\n    assert_eq!(offset(foo, bar), None); // not a sub-string\n\n    let quz = \"quz\".to_owned();\n    assert_eq!(offset(bar, &amp;quz), None); // not the same string, could also return `Some(4)`, I don't care\n}\n</code></pre>\n\n<p>This is basically the same as <code>str::find</code>, but since the second slice is a sub-slice of the first, I would have hoped something faster. Also <code>str::find</code> won't work in the <code>lines()</code> case if several lines are identical.</p>\n\n<p>I thought I could just use some pointer arithmetic to do that with something like <code>foo.trim().as_ptr() - foo.as_ptr()</code> but it turns out that <code>Sub</code> is not implemented on raw pointers.</p>\n"}, {"tags": ["java", "java-native-interface", "rust", "swig", "rust-cargo"], "answers": [{"tags": [], "owner": {"reputation": 9885, "user_id": 1039947, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/eYRpr.png?s=128&g=1", "display_name": "kmp", "link": "https://stackoverflow.com/users/1039947/kmp"}, "is_accepted": true, "score": 3, "last_activity_date": 1468237267, "last_edit_date": 1468237267, "creation_date": 1468233586, "answer_id": 38304880, "question_id": 38260581, "link": "https://stackoverflow.com/questions/38260581/is-it-possible-to-use-java-swig-and-rust-together/38304880#38304880", "title": "Is it possible to use Java, SWIG and Rust together?", "body": "<p>I have a solution, but it is not really beautiful so if anyone can make this seamless from cargo that would be a much nicer solution but a batch file will do for me for the time being.  Here is what I did...  </p>\n\n<p>I gave up on calling gcc from cargo, built a static lib from rust and then ran gcc from the command line to munge the rust generated staticlib in with the SWIG generated code and create a dynamic library like so...</p>\n\n<p>I changed <code>Cargo.toml</code> to:</p>\n\n<pre><code>[package]\nname = \"testlib\"\nversion = \"0.1.0\"\n[lib]\nname = \"testlib\"\ncrate-type = [\"staticlib\"]\n</code></pre>\n\n<p>Deleted <code>build.rs</code></p>\n\n<p>Built the static lib:</p>\n\n<pre><code>cargo build\n</code></pre>\n\n<p>Compiled the SWIG output and linked it with what cargo just produced like this:</p>\n\n<pre><code>gcc -shared -o target\\debug\\testlib.dll \"-LC:/Program Files (x86)/Rust stable GNU 1.9/lib/rustlib/i686-pc-windows-gnu/lib\" -Ltarget\\debug \"-IC:/Program Files/Java/jdk1.8.0_45/include\" \"-IC:/Program Files/Java/jdk1.8.0_45/include/win32\" testlib_wrap.c -ltestlib -lws2_32 -luserenv -lgcc_eh -lshell32 -ladvapi32 -Wl,--add-stdcall-alias\n</code></pre>\n\n<p>Now I have a <code>testlib.dll</code> that looks fine in Dependency Walker and when I run it I see:</p>\n\n<pre><code>The answer is...APPLES!\n</code></pre>\n\n<p>Which is totally the right answer.</p>\n"}], "owner": {"reputation": 9885, "user_id": 1039947, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/eYRpr.png?s=128&g=1", "display_name": "kmp", "link": "https://stackoverflow.com/users/1039947/kmp"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 325, "favorite_count": 1, "accepted_answer_id": 38304880, "answer_count": 1, "score": 6, "last_activity_date": 1558009445, "creation_date": 1467960764, "last_edit_date": 1558009445, "question_id": 38260581, "link": "https://stackoverflow.com/questions/38260581/is-it-possible-to-use-java-swig-and-rust-together", "title": "Is it possible to use Java, SWIG and Rust together?", "body": "<p>I am trying to call into a <a href=\"https://www.rust-lang.org/\" rel=\"nofollow noreferrer\">Rust</a> library from <a href=\"http://www.oracle.com/technetwork/java/index.html\" rel=\"nofollow noreferrer\">Java</a> and I really want to use <a href=\"http://www.swig.org/\" rel=\"nofollow noreferrer\">SWIG</a> to generate the interface layer from a <a href=\"https://en.wikipedia.org/wiki/ANSI_C\" rel=\"nofollow noreferrer\">C</a> header file that I write (I also want to allow regular C clients to call into my library, hence I think it makes sense to maintain one interface header).</p>\n\n<p>I am doing this all on <a href=\"https://www.microsoft.com/en-us/windows\" rel=\"nofollow noreferrer\">Windows</a> using <a href=\"http://mingw.org/\" rel=\"nofollow noreferrer\">Mingw</a> and <a href=\"https://static.rust-lang.org/dist/rust-1.10.0-i686-pc-windows-gnu.msi\" rel=\"nofollow noreferrer\">Rust (GNU ABI)</a>.</p>\n\n<p>I will go into exactly what I did and the result below but essentially I am getting an <a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/UnsatisfiedLinkError.html\" rel=\"nofollow noreferrer\">UnsatisfiedLinkError</a> at the end.  There are a couple of things that I think may be wrong but I am not sure and I am not sure how (or if) I can fix them:</p>\n\n<ol>\n<li>SWIG puts numbers in the function name (you can see this if you edit the <code>testlib_wrap.c</code> file it produces in my example).</li>\n<li>The JNI <a href=\"https://www3.ntu.edu.sg/home/ehchua/programming/java/JavaNativeInterface.html\" rel=\"nofollow noreferrer\">documentation</a> says I need to pass the argument <code>-Wl,--add-stdcall-alias</code> when compiling but as I am building with cargo I am not sure how to do that (can I pass it if I build with rustc directly perhaps?  I could not see anything in the <a href=\"https://www.mankier.com/1/rustc\" rel=\"nofollow noreferrer\">man page</a>)</li>\n</ol>\n\n<p>So in a nutshell, my question is:</p>\n\n<p><strong>How do you call into Rust from Java using SWIG</strong>?</p>\n\n<p>But I feel like I am scratching the surface of a solution so the answer may be resolving one or both of the points above so here is exactly where I am so far...</p>\n\n<hr>\n\n<p>I start by making a new Rust library using <a href=\"https://crates.io/\" rel=\"nofollow noreferrer\">Cargo</a>:</p>\n\n<pre><code>cargo new testlib\ncd testlib\n</code></pre>\n\n<p>Create <code>testlib.h</code> with the contents:</p>\n\n<pre><code>void tell_me_the_answer(void);\n</code></pre>\n\n<p>Create a swig input file (<code>testlib.i</code>) with the following contents:</p>\n\n<pre><code>%module testlib\n%{\n#include \"testlib.h\"\n%}\n%include \"testlib.h\"\n</code></pre>\n\n<p>Run swig to generate some Java and C:</p>\n\n<pre><code>mkdir testlib\nswig -outdir testlib -java -package testlib testlib.i\n</code></pre>\n\n<p>Create a main java class (<code>Program.java</code>) with the contents:</p>\n\n<pre><code>public final class Program {\n    static {\n        System.loadLibrary(\"testlib\"); \n    }\n    public static void main(final String[] args) {\n        testlib.testlib.tell_me_the_answer();\n    }\n}\n</code></pre>\n\n<p>Compile the java:</p>\n\n<pre><code>javac Program.java testlib\\testlib.java testlib\\testlibJNI.java\n</code></pre>\n\n<p>Edit the <code>src\\lib.rs</code> file that cargo made to implement the function:</p>\n\n<pre><code>#[no_mangle]\npub extern \"C\" fn tell_me_the_answer() {\n    println!(\"The answer is...APPLES!\");\n}\n</code></pre>\n\n<p>Create a new <code>build.rs</code> file to hook in compiling the swig output via the <a href=\"https://github.com/alexcrichton/gcc-rs\" rel=\"nofollow noreferrer\">gcc-rs</a> library, which contains:</p>\n\n<pre><code>extern crate gcc;\nfn main() {\n    gcc::Config::new()\n                .file(\"testlib_wrap.c\")\n                .include(\"C:/Program Files/Java/jdk1.8.0_45/include\")\n                .include(\"C:/Program Files/Java/jdk1.8.0_45/include/win32\")\n                .compile(\"libtestlib.a\");\n}\n</code></pre>\n\n<p>Edit the <code>Cargo.toml</code> file so that it contains:</p>\n\n<pre><code>[package]\nname = \"testlib\"\nversion = \"0.1.0\"\nbuild = \"build.rs\"\n[lib]\nname = \"testlib\"\ncrate-type = [\"dylib\"]\n[build-dependencies]\ngcc = \"0.3\"\n</code></pre>\n\n<p>Compile the rust project:</p>\n\n<pre><code>cargo build\n</code></pre>\n\n<p>Run the java application:</p>\n\n<pre><code>java -Djava.library.path=target\\debug Program\n</code></pre>\n\n<p>Get the following error:</p>\n\n<pre><code>Exception in thread \"main\" java.lang.UnsatisfiedLinkError: testlib.testlibJNI.tell_me_the_answer()V\n    at testlib.testlibJNI.tell_me_the_answer(Native Method)\n    at testlib.testlib.tell_me_the_answer(testlib.java:13)\n    at Program.main(Program.java:6)\n</code></pre>\n\n<p>I had a look at the DLL that cargo made me in <a href=\"http://www.dependencywalker.com/\" rel=\"nofollow noreferrer\">dependency walker</a> and it looks kind of empty (in terms of it's exports) and the single function looks a bit weird, to me at least, due to the <strong>1</strong>s in the name and the <strong>@</strong> part which I think the <code>--add-stdcall-alias</code> would remove right?  </p>\n\n<p><a href=\"https://i.stack.imgur.com/mHkEi.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/mHkEi.png\" alt=\"Dependency Walker Output\"></a></p>\n\n<p>Am I close and the name in the DLL as shown in dependency walker is the root of my problem?<br>\nIf it were <code>Java_testlib_testlibJNI_tell_me_the_answer</code> would it work?<br>\nIf so, how do I make it so (I edited the <code>_wrap.c</code> file SWIG produced to remove the 1s but I am not sure how I will get rid of the @)?<br>\nIf not, what's the problem?</p>\n"}, {"tags": ["memory", "out-of-memory", "rust"], "comments": [{"owner": {"reputation": 6596, "user_id": 5021321, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/29f10a1b457e63d44e3a221e89e32c17?s=128&d=identicon&r=PG", "display_name": "Eli Sadoff", "link": "https://stackoverflow.com/users/5021321/eli-sadoff"}, "edited": false, "score": 0, "creation_date": 1467924306, "post_id": 38254937, "comment_id": 63930991, "body": "Valgrind is always a good start. Try optimizing your code as well."}, {"owner": {"reputation": 5862, "user_id": 859279, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6543ec0f2465bba1c6899f580bd1e20b?s=128&d=identicon&r=PG", "display_name": "Apanatshka", "link": "https://stackoverflow.com/users/859279/apanatshka"}, "reply_to_user": {"reputation": 6596, "user_id": 5021321, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/29f10a1b457e63d44e3a221e89e32c17?s=128&d=identicon&r=PG", "display_name": "Eli Sadoff", "link": "https://stackoverflow.com/users/5021321/eli-sadoff"}, "edited": false, "score": 3, "creation_date": 1467924663, "post_id": 38254937, "comment_id": 63931185, "body": "@EliSadoff How does optimising my code help with debugging memory issues?"}], "answers": [{"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 4, "last_activity_date": 1467969224, "creation_date": 1467969224, "answer_id": 38262976, "question_id": 38254937, "link": "https://stackoverflow.com/questions/38254937/how-do-i-debug-a-memory-issue-in-rust/38262976#38262976", "title": "How do I debug a memory issue in Rust?", "body": "<p>In general, to debug, you can use either a log-based approach (either by inserting the logs yourself, or having a tool such a <code>ltrace</code>, <code>ptrace</code>, ... to generate the logs for you) or you can use a debugger.</p>\n\n<p>Note that <code>ltrace</code>, <code>ptrace</code> or debugger-based approaches require that you be able to reproduce the problem; I tend to favor manual logs because I work in an industry where bug reports are generally too imprecise to allow immediate reproduction (and thus we use logs to create the reproducer scenario).</p>\n\n<p>Rust supports both approaches, and the standard toolset that one uses for C or C++ programs works well for it.</p>\n\n<p>My personal approach is to have <em>some</em> logging in place to quickly narrow down where the issue occurs, and if logging is insufficient to fire up a debugger for a more fine-combed inspection. In this case I would recommend going straight away for the debugger.</p>\n\n<p>A <code>panic</code> is generated, which means that by breaking on the call to the panic hook, you get to see both the call stack and memory state at the moment where things go awry.</p>\n\n<p>Launch your program with the debugger, set a break point on the panic hook, run the program, profit.</p>\n"}, {"tags": [], "owner": {"reputation": 548, "user_id": 1718219, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8a941fa31555eb8ea43f247116c1add3?s=128&d=identicon&r=PG", "display_name": "Marco Neumann", "link": "https://stackoverflow.com/users/1718219/marco-neumann"}, "is_accepted": true, "score": 7, "last_activity_date": 1467998993, "creation_date": 1467998993, "answer_id": 38272405, "question_id": 38254937, "link": "https://stackoverflow.com/questions/38254937/how-do-i-debug-a-memory-issue-in-rust/38272405#38272405", "title": "How do I debug a memory issue in Rust?", "body": "<p>In general I would try to do the following approach:</p>\n\n<ol>\n<li><p><strong>Boilerplate reduction:</strong> Try to narrow down the problem of the OOM, so that you don't have too much additional code around. In other words: the quicker your program crashes, the better. Sometimes it is also possible to rip out a specific piece of code and put it into an extra binary, just for the investigation.</p></li>\n<li><p><strong>Problem size reduction:</strong> Lower the problem from OOM to a simple \"too much memory\" so that you can actually tell the some part wastes something but that it does not lead to an OOM. If it is too hard to tell wether you see the issue or not, you can lower the memory limit. On Linux, this can be done using <code>ulimit</code>:</p>\n\n<pre><code>ulimit -Sv 500000  # that's 500MB\n./path/to/exe --foo\n</code></pre></li>\n<li><p><strong>Information gathering:</strong> If you problem is small enough, you are ready to collect information which has a lower noise level. There are multiple ways which you can try. Just remember to compile your program with debug symbols. Also it might be an advantage to turn off optimization since this usually leads to information loss. Both can be archived by NOT using the <code>--release</code> flag during compilation.</p>\n\n<ul>\n<li><p><em>Heap profiling:</em> One way is too use <a href=\"https://github.com/gperftools/gperftools\" rel=\"noreferrer\">gperftools</a>:</p>\n\n<pre><code>LD_PRELOAD=\"/usr/lib/libtcmalloc.so\" HEAPPROFILE=/tmp/profile ./path/to/exe --foo\npprof --gv ./path/to/exe /tmp/profile/profile.0100.heap\n</code></pre>\n\n<p>This shows you a graph which symbolizes which parts of your program eat which amount of memory. See <a href=\"http://goog-perftools.sourceforge.net/doc/heap_profiler.html\" rel=\"noreferrer\">official docs</a> for more details.</p></li>\n<li><p><em>rr:</em> Sometimes it's very hard to figure out what is actually happening, especially after you created a profile. Assuming you did a good job in step 2, you can use <a href=\"http://rr-project.org/\" rel=\"noreferrer\">rr</a>:</p>\n\n<pre><code>rr record ./path/to/exe --foo\nrr replay\n</code></pre>\n\n<p>This will spawn a GDB with superpowers. The difference to a normal debug session is that you can not only <code>continue</code> but also <code>reverse-continue</code>. Basically your program is executed from a recording where you can jump back and forth as you want. <a href=\"https://github.com/mozilla/rr/wiki/Usage\" rel=\"noreferrer\">This wiki page</a> provides you some additional examples. One thing to point out is that rr only seems to work with GDB.</p></li>\n<li><p><em>Good old debugging:</em> Sometimes you get traces and recordings that are still way too large. In that case you can (in combination with the <code>ulimit</code> trick) just use GDB and wait until the program crashes:</p>\n\n<pre><code>gdb --args ./path/to/exe --foo\n</code></pre>\n\n<p>You now should get a normal debugging session where you can examine what the current state of the program was. GDB can also be launched with coredumps. The general problem with that approach is that you cannot go back in time and you cannot continue with execution. So you only see the current state including all stack frames and variables. Here you could also use LLDB if you want.</p></li>\n</ul></li>\n<li><p><strong>(Potential) fix + repeat:</strong> After you have a glue what might go wrong you can try to change your code. Then try again. If it's still not working, go back to step 3 and try again.</p></li>\n</ol>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 5, "last_activity_date": 1548857476, "last_edit_date": 1548857476, "creation_date": 1548855823, "answer_id": 54441979, "question_id": 38254937, "link": "https://stackoverflow.com/questions/38254937/how-do-i-debug-a-memory-issue-in-rust/54441979#54441979", "title": "How do I debug a memory issue in Rust?", "body": "<p>Valgrind and other tools work fine, and should work out of the box as of Rust 1.32. Earlier versions of Rust require changing the global allocator from jemalloc to the system's allocator so that Valgrind and friends know how to monitor memory allocations.</p>\n\n<p>In this answer, I use the macOS developer tool Instruments, as I'm on macOS, but Valgrind / Massif / Cachegrind work similarly. </p>\n\n<h1>Example: An infinite loop</h1>\n\n<p>Here's a program that \"leaks\" memory by pushing 1MiB <code>String</code>s into a <code>Vec</code> and never freeing it:</p>\n\n<pre><code>use std::{thread, time::Duration};\n\nfn main() {\n    let mut held_forever = Vec::new();\n    loop {\n        held_forever.push(\"x\".repeat(1024 * 1024));\n        println!(\"Allocated another\");\n\n        thread::sleep(Duration::from_secs(3));\n    }\n}\n</code></pre>\n\n<p>You can see memory growth over time, as well as the exact stack trace that allocated the memory:</p>\n\n<p><a href=\"https://i.stack.imgur.com/CPD6x.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/CPD6x.png\" alt=\"Instruments memory debugging\"></a></p>\n\n<h1>Example: Cycles in reference counts</h1>\n\n<p>Here's an example of leaking memory by creating an infinite reference cycle:</p>\n\n<pre><code>use std::{cell::RefCell, rc::Rc};\n\nstruct Leaked {\n    data: String,\n    me: RefCell&lt;Option&lt;Rc&lt;Leaked&gt;&gt;&gt;,\n}\n\nfn main() {\n    let data = \"x\".repeat(5 * 1024 * 1024);\n\n    let leaked = Rc::new(Leaked {\n        data,\n        me: RefCell::new(None),\n    });\n\n    let me = leaked.clone();\n    *leaked.me.borrow_mut() = Some(me);\n}\n</code></pre>\n\n<p><a href=\"https://i.stack.imgur.com/NqVHN.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/NqVHN.png\" alt=\"Instruments for &lt;code&gt;Rc&lt;/code&gt; leak\"></a></p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/51509314/155423\">Why does Valgrind not detect a memory leak in a Rust program using nightly 1.29.0?</a></li>\n<li><a href=\"https://stackoverflow.com/q/47822557/155423\">Handling memory leak in cyclic graphs using RefCell and Rc</a></li>\n<li><a href=\"https://stackoverflow.com/q/34469585/155423\">Minimal `Rc` Dependency Cycle</a></li>\n</ul>\n"}], "owner": {"reputation": 5862, "user_id": 859279, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6543ec0f2465bba1c6899f580bd1e20b?s=128&d=identicon&r=PG", "display_name": "Apanatshka", "link": "https://stackoverflow.com/users/859279/apanatshka"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3600, "favorite_count": 2, "accepted_answer_id": 38272405, "answer_count": 3, "score": 8, "last_activity_date": 1548857476, "creation_date": 1467924221, "last_edit_date": 1495540288, "question_id": 38254937, "link": "https://stackoverflow.com/questions/38254937/how-do-i-debug-a-memory-issue-in-rust", "title": "How do I debug a memory issue in Rust?", "body": "<p>I hope this question isn't too open-ended. I ran into a memory issue with Rust, where I got <a href=\"https://stackoverflow.com/q/38254647/859279\">an \"out of memory\" from calling <code>next</code> on an <code>Iterator</code> trait object</a>. I'm unsure how to debug it. Prints have only brought me to the point where the failure occurs. I'm not very familiar with other tools such as <a href=\"http://jvns.ca/blog/2016/06/15/using-ltrace-to-debug-a-memory-leak\" rel=\"nofollow noreferrer\">ltrace</a>, so although I could create a trace (231MiB, pff), I didn't really know what to do with it. Is a trace like that useful? Would I do better to grab gdb/lldb? Or Valgrind?</p>\n"}, {"tags": ["iterator", "out-of-memory", "rust"], "comments": [{"owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "edited": false, "score": 1, "creation_date": 1467925663, "post_id": 38254647, "comment_id": 63931669, "body": "The OOM only happens in debug mode. In release mode the program runs fine <a href=\"https://play.rust-lang.org/?gist=5ada00482267db3ae94468b47ec0a014&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> . I think you should report this as a bug."}, {"owner": {"reputation": 5160, "user_id": 553092, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d161f230b3456d0bfd740154ae16e0a3?s=128&d=identicon&r=PG", "display_name": "Steven", "link": "https://stackoverflow.com/users/553092/steven"}, "edited": false, "score": 1, "creation_date": 1467934921, "post_id": 38254647, "comment_id": 63934759, "body": "I&#39;ve taken the liberty of reporting a bug for you (<a href=\"https://github.com/rust-lang/rust/issues/34714\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/34714</a>)."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1467939732, "post_id": 38254647, "comment_id": 63935852, "body": "Can you <a href=\"https://stackoverflow.com/posts/38254647/edit\">edit</a> your question to include the text that indicates that this is an out-of-memory error? When I run it, I &quot;just&quot; get a segfault."}], "answers": [{"comments": [{"owner": {"reputation": 5862, "user_id": 859279, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6543ec0f2465bba1c6899f580bd1e20b?s=128&d=identicon&r=PG", "display_name": "Apanatshka", "link": "https://stackoverflow.com/users/859279/apanatshka"}, "edited": false, "score": 0, "creation_date": 1467990610, "post_id": 38258906, "comment_id": 63959383, "body": "For the higher level question: see the note below the first piece of code (originally prefixed by N.B.) which is basically commenting on the uselessness of the code ^^ I indeed switched to collecting the <code>File</code> handles into a <code>Vec</code>."}], "tags": [], "owner": {"reputation": 1987, "user_id": 5278682, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/34509cba2b4d128dce294dcf5092d300?s=128&d=identicon&r=PG&f=1", "display_name": "Eli Friedman", "link": "https://stackoverflow.com/users/5278682/eli-friedman"}, "is_accepted": true, "score": 4, "last_activity_date": 1467981214, "last_edit_date": 1467981214, "creation_date": 1467951911, "answer_id": 38258906, "question_id": 38254647, "link": "https://stackoverflow.com/questions/38254647/why-does-calling-next-on-an-iterator-trait-object-give-me-an-out-of-memory-at/38258906#38258906", "title": "Why does calling next on an Iterator trait object give me an &quot;out of memory&quot; at runtime?", "body": "<p>Your implementation of <code>FromIterator</code> isn't correct; specifically, you aren't allowed to put an <code>I::IntoIter: 'static</code> bound in that position.  The bounds on your implementation have to match the bounds on the trait itself.  The compiler should diagnose this, <a href=\"https://github.com/rust-lang/rust/issues/18937\" rel=\"nofollow\">but currently doesn't</a>.</p>\n\n<p>At a higher level, I'm not sure what you're trying to do. Where do you expect the <code>File</code> handles to be stored?  You would normally write something like this:</p>\n\n<pre><code>let files: Result&lt;Vec&lt;File&gt;, io::Error&gt; =\n    [\"/bin/bash\"].iter().cloned().map(File::open).collect();\n</code></pre>\n"}], "owner": {"reputation": 5862, "user_id": 859279, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6543ec0f2465bba1c6899f580bd1e20b?s=128&d=identicon&r=PG", "display_name": "Apanatshka", "link": "https://stackoverflow.com/users/859279/apanatshka"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 137, "favorite_count": 0, "accepted_answer_id": 38258906, "answer_count": 1, "score": 2, "last_activity_date": 1467981214, "creation_date": 1467923161, "last_edit_date": 1467939443, "question_id": 38254647, "link": "https://stackoverflow.com/questions/38254647/why-does-calling-next-on-an-iterator-trait-object-give-me-an-out-of-memory-at", "title": "Why does calling next on an Iterator trait object give me an &quot;out of memory&quot; at runtime?", "body": "<p>I implemented a <code>BoxedIterator</code> in Rust that just boxes another <code>Iterator</code> as a trait object. The full implementation is on <a href=\"https://github.com/Apanatshka/cargo-benchcmp/blob/add287a33321940e9410dac0e481f3b0e7b9faab/src/iterator.rs\" rel=\"nofollow\">Github</a>. Why does Rust compile this code without complaint but fail with an \"out of memory\" message (OOM) when it first tries to call <code>next</code> on the <code>Iterator</code> trait object in the <code>Box</code>? </p>\n\n<p>As far as I can tell it doesn't allocate much memory before failing, so I'm inclined to think the OOM message is not correct. </p>\n\n<pre><code>//! BoxedIterator just wraps around a box of an iterator, it is an owned trait object.\n//! This allows it to be used inside other data-structures, such as a `Result`.\n//! That means that you can `.collect()` on an `I where I: Iterator&lt;Result&lt;V, E&gt;&gt;` and get out a\n//! `Result&lt;BoxedIterator&lt;V&gt;, E&gt;`. And then you can `try!` it. At least, that was my use-case.\n\nuse std::iter::FromIterator;\nuse std::iter::IntoIterator;\n\npub struct BoxedIterator&lt;T&gt; {\n    iter: Box&lt;Iterator&lt;Item = T&gt;&gt;,\n}\n\nimpl&lt;T&gt; Iterator for BoxedIterator&lt;T&gt; {\n    type Item = T;\n\n    #[inline]\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        self.iter.next() // The OOM comes from this call of `next`\n    }\n}\n\nimpl&lt;T&gt; FromIterator&lt;T&gt; for BoxedIterator&lt;T&gt; {\n    fn from_iter&lt;I&gt;(iter: I) -&gt; Self\n        where I: IntoIterator&lt;Item = T&gt;,\n              I::IntoIter: 'static\n    {\n        BoxedIterator { iter: Box::new(iter.into_iter()) }\n    }\n}\n\nuse std::fs::File;\nuse std::io;\n\nfn main() {\n    let iter: Result&lt;BoxedIterator&lt;File&gt;, io::Error&gt; =\n        vec![\"/usr/bin/vi\"].iter().cloned().map(File::open).collect();\n    let mut iter = iter.unwrap();\n\n    println!(\"{:?}\", iter.next());\n}\n</code></pre>\n\n<p>I don't think I'm going to use this code, as I've figured that my use case will need to traverse the <code>Iterator</code> of <code>Result</code>s completely to extract any errors so I might as well gather them in a <code>Vec</code> at that point. But I'm still curious about this OOM. </p>\n\n<p>While creating a minimal example, I found that without doing the File IO, I get a segfault:</p>\n\n<pre><code>use iterator::BoxedIterator;\n\nfn main() {\n    let iter: Result&lt;BoxedIterator&lt;&amp;str&gt;, ()&gt; = \n        vec![Ok(\"test1\"), Ok(\"test2\")].iter().cloned().collect();\n    let mut iter = iter.unwrap();\n\n    println!(\"{:?}\", iter.next());\n}\n</code></pre>\n\n<p>If I don't use any <code>Result</code>, just create a <code>BoxedIterator</code> with <code>collect</code>, the code works as expected:</p>\n\n<pre><code>use iterator::BoxedIterator;\n\nfn main() {\n    let mut iter: BoxedIterator&lt;&amp;str&gt; = vec![\"test1\", \"test2\"].iter().cloned().collect();\n\n    println!(\"{:?}\", iter.next());\n    // prints: Some(\"test1\")\n}\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 145, "user_id": 5930246, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/78edb69748e3583683b87c1c9cc6d46b?s=128&d=identicon&r=PG&f=1", "display_name": "\u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u041a\u043e\u043c\u0430\u0440", "link": "https://stackoverflow.com/users/5930246/%d0%94%d0%bc%d0%b8%d1%82%d1%80%d0%b8%d0%b9-%d0%9a%d0%be%d0%bc%d0%b0%d1%80"}, "edited": false, "score": 2, "creation_date": 1467959926, "post_id": 38254177, "comment_id": 63940806, "body": "@\u0414\u043c\u0438\u0442\u0440\u0438\u0439\u041a\u043e\u043c\u0430\u0440 Also try reading the whole compiler error. It&#39;s not just noise, it&#39;s often actually useful: <code>note: `time::Timespec` cannot be formatted with the default formatter; try using `:?` instead if you are using a format string</code>"}], "tags": [], "owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "is_accepted": true, "score": 31, "last_activity_date": 1467921185, "creation_date": 1467921185, "answer_id": 38254177, "question_id": 38253896, "link": "https://stackoverflow.com/questions/38253896/what-does-the-trait-bound-stdfmtdisplay-is-not-satisfied-mean/38254177#38254177", "title": "What does &quot;the trait bound std::fmt::Display is not satisfied&quot; mean?", "body": "<p><a href=\"https://doc.rust-lang.org/stable/std/macro.println!.html\" rel=\"noreferrer\"><code>println!</code></a> is a macro to do formatted output. <code>{}</code> is used to print a value that implements the <a href=\"https://doc.rust-lang.org/stable/std/fmt/trait.Display.html\" rel=\"noreferrer\"><code>Display</code></a> trait. The error is saying that <code>Timespec</code> does not implement the <code>Display</code> trait, so it cannot be used with <code>{}</code>.</p>\n\n<p>You can use <code>{:?}</code> instead of <code>{}</code>. <code>{:?}</code> is used to print a value that implements <a href=\"https://doc.rust-lang.org/stable/std/fmt/trait.Debug.html\" rel=\"noreferrer\"><code>Debug</code></a> trait and <code>Timespec</code> implements it.</p>\n\n<p>Consider reading the <a href=\"https://doc.rust-lang.org/stable/std/fmt/index.html\" rel=\"noreferrer\"><code>fmt</code></a> module documentation, it explain this in detail.</p>\n"}], "owner": {"reputation": 145, "user_id": 5930246, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/78edb69748e3583683b87c1c9cc6d46b?s=128&d=identicon&r=PG&f=1", "display_name": "\u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u041a\u043e\u043c\u0430\u0440", "link": "https://stackoverflow.com/users/5930246/%d0%94%d0%bc%d0%b8%d1%82%d1%80%d0%b8%d0%b9-%d0%9a%d0%be%d0%bc%d0%b0%d1%80"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 8112, "favorite_count": 0, "accepted_answer_id": 38254177, "answer_count": 1, "score": 12, "last_activity_date": 1467922417, "creation_date": 1467920086, "last_edit_date": 1467922417, "question_id": 38253896, "link": "https://stackoverflow.com/questions/38253896/what-does-the-trait-bound-stdfmtdisplay-is-not-satisfied-mean", "title": "What does &quot;the trait bound std::fmt::Display is not satisfied&quot; mean?", "body": "<p>My code:</p>\n\n<pre><code>extern crate time;\n\nfn main() {\n    println!(\"{}\", time::get_time());\n}\n</code></pre>\n\n<p>My error is:</p>\n\n<p><code>Error 'the trait bound time::Timespec: std::fmt::Display is not satisfied</code></p>\n"}, {"tags": ["unit-testing", "rust"], "answers": [{"comments": [{"owner": {"reputation": 2831, "user_id": 4957288, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/581cc69569125a51c63c3d3fa932ff9b?s=128&d=identicon&r=PG", "display_name": "Vlady Veselinov", "link": "https://stackoverflow.com/users/4957288/vlady-veselinov"}, "edited": false, "score": 1, "creation_date": 1604155601, "post_id": 38254435, "comment_id": 114263560, "body": "Is there a way to do this without polluting the source? Are there any frameworks that are good for this?"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 9, "last_activity_date": 1467922296, "creation_date": 1467922296, "answer_id": 38254435, "question_id": 38253321, "link": "https://stackoverflow.com/questions/38253321/what-is-a-good-way-of-cleaning-up-after-a-unit-test-in-rust/38254435#38254435", "title": "What is a good way of cleaning up after a unit test in Rust?", "body": "<blockquote>\n  <p>Since the test-function aborts on a failure, one cannot simply clean up at the end of the function under test.</p>\n</blockquote>\n\n<p>Use RAII and implement <code>Drop</code>. It removes the need to call <em>anything</em>:</p>\n\n<pre><code>struct Noisy;\n\nimpl Drop for Noisy {\n    fn drop(&amp;mut self) {\n        println!(\"I'm melting! Meeeelllllttttinnnng!\");\n    }\n}\n\n#[test]\nfn always_fails() {\n    let my_setup = Noisy;\n    assert!(false, \"or else...!\");\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>running 1 test\ntest always_fails ... FAILED\n\nfailures:\n\n---- always_fails stdout ----\n    thread 'always_fails' panicked at 'or else...!', main.rs:12\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\nI'm melting! Meeeelllllttttinnnng!\n\n\nfailures:\n    always_fails\n\ntest result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured\n</code></pre>\n"}], "owner": {"reputation": 3493, "user_id": 1049866, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/Afe2j.png?s=128&g=1", "display_name": "PureW", "link": "https://stackoverflow.com/users/1049866/purew"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 983, "favorite_count": 1, "accepted_answer_id": 38254435, "answer_count": 1, "score": 9, "last_activity_date": 1467922316, "creation_date": 1467917931, "last_edit_date": 1467922316, "question_id": 38253321, "link": "https://stackoverflow.com/questions/38253321/what-is-a-good-way-of-cleaning-up-after-a-unit-test-in-rust", "title": "What is a good way of cleaning up after a unit test in Rust?", "body": "<p>Since the test-function aborts on a failure, one cannot simply clean up at the end of the function under test.</p>\n\n<p>From testing frameworks in other languages, there's usually a way to setup a callback that handles cleanup at the end of each test-function.</p>\n"}, {"tags": ["rust", "lifetime", "borrow-checker"], "comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "edited": false, "score": 0, "creation_date": 1467916580, "post_id": 38252666, "comment_id": 63926887, "body": "Your code is incorrect. <code>a</code> is constructed on the stack, then moved into the <code>C</code> value, then further moved (as part of the <code>C</code>) to the caller&#39;s stack. The references become dangling very quickly."}, {"owner": {"reputation": 173, "user_id": 916537, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cd12523c1646b0da594ee9099684cf34?s=128&d=identicon&r=PG", "display_name": "Marc", "link": "https://stackoverflow.com/users/916537/marc"}, "edited": false, "score": 0, "creation_date": 1467917516, "post_id": 38252666, "comment_id": 63927424, "body": "Totally missed that. I somehow thought the address to A stays the same, but of course, when the function returns the Stack context changes. So, when putting <code>a</code> onto the heap, it&#39;s address should stay the same. I will play with that scenario"}, {"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "edited": false, "score": 0, "creation_date": 1467918711, "post_id": 38252666, "comment_id": 63928147, "body": "Fair warning: Rust will not let you do that either, because it can&#39;t in general check that the heap allocation isn&#39;t dropped while the reference is used."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1467922619, "post_id": 38252666, "comment_id": 63930124, "body": "If you think that the linked duplicate is inappropriate, <a href=\"https://stackoverflow.com/posts/38252666/edit\">edit</a> your question to explain why and ping me."}, {"owner": {"reputation": 173, "user_id": 916537, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cd12523c1646b0da594ee9099684cf34?s=128&d=identicon&r=PG", "display_name": "Marc", "link": "https://stackoverflow.com/users/916537/marc"}, "edited": false, "score": 0, "creation_date": 1467961813, "post_id": 38252666, "comment_id": 63941731, "body": "Shepmaster, thanks for linking your comprehensive q/a pair. Haven&#39;t found it with google or SO search before. Maybe this new link helps other people find it more easily. I will take a look at <code>owning_ref</code> but think that restructure my architecture is the better approach."}], "owner": {"reputation": 173, "user_id": 916537, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cd12523c1646b0da594ee9099684cf34?s=128&d=identicon&r=PG", "display_name": "Marc", "link": "https://stackoverflow.com/users/916537/marc"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 32, "favorite_count": 0, "closed_date": 1467922578, "answer_count": 0, "score": 0, "last_activity_date": 1467922517, "creation_date": 1467915571, "last_edit_date": 1467922517, "question_id": 38252666, "link": "https://stackoverflow.com/questions/38252666/how-can-i-create-a-context-struct-with-sub-structs-referencing-the-same-object", "closed_reason": "Duplicate", "title": "How can I create a context struct with sub-structs referencing the same object?", "body": "<p>Given the following example:</p>\n\n<pre><code>struct A;\n\nstruct B&lt;'a&gt; {\n    ptr: &amp;'a A\n}\n\nstruct C&lt;'a&gt; {\n    ptr: &amp;'a A\n}\n\nstruct Context&lt;'a&gt; {\n    a: A,\n    b: B&lt;'a&gt;,\n    c: C&lt;'a&gt;\n}\n\nfn setup&lt;'a&gt;() -&gt; Context&lt;'a&gt; {\n    let a = A;\n    let b = B {ptr: &amp;a};\n    let c = C {ptr: &amp;a};\n    Context {a: a, b: b, c: c}\n}\n\n#[test]\nfn it_works() {\n    let context = setup();\n}\n</code></pre>\n\n<p>the compiler basically complains about references to an object that is later moved:</p>\n\n<pre><code>error: `a` does not live long enough\n    let b = B {ptr: &amp;a};\n                     ^\nnote: reference must be valid for the lifetime 'a as defined on the block at 18:30...\nfn setup&lt;'a&gt;() -&gt; Context&lt;'a&gt; {\n                              ^\nnote: ...but borrowed value is only valid for the block suffix following statement 0 at 19:14\n    let a = A;\n              ^\n</code></pre>\n\n<p>I understand that moving out of a value is impossible as long as it's borrowed (and that is basically what happens). \nHowever, there should be a way around this as the data itself indeed lives long enough: <code>Context</code> has the same lifetime as <code>B</code> and <code>C</code>, so both <code>.ptr</code>s are valid at any time.</p>\n\n<p>Does anyone know a solution for this? Background for this architecture: In a larger program I want to have a single context object that can be borrowed or moved around as needed. In order to keep dependencies at a minimum and make tests as painless as possible, submodules have their own context objects (the <code>A</code> and <code>B</code>s in the example) whenever possible. Immutably shared data should be stored as a reference as shown in the example. </p>\n\n<p>The only thing I've come up with so far is explicitly calling each submodule's function with the reference (<code>&amp;a</code>) as argument which is kind of verbose.</p>\n"}, {"tags": ["serialization", "rust", "public-key", "libsodium"], "answers": [{"comments": [{"owner": {"reputation": 101, "user_id": 5261541, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/NVRyR.png?s=128&g=1", "display_name": "duesee", "link": "https://stackoverflow.com/users/5261541/duesee"}, "edited": false, "score": 0, "creation_date": 1467915830, "post_id": 38252163, "comment_id": 63926432, "body": "One really needs to know that. I assume most beginners are only using crates.io. Are you interested in writing an issue on GitHub? If not, I will do :-)"}, {"owner": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "reply_to_user": {"reputation": 101, "user_id": 5261541, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/NVRyR.png?s=128&g=1", "display_name": "duesee", "link": "https://stackoverflow.com/users/5261541/duesee"}, "edited": false, "score": 0, "creation_date": 1467918735, "post_id": 38252163, "comment_id": 63928159, "body": "I&#39;ll let you do that :)"}], "tags": [], "owner": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "is_accepted": true, "score": 2, "last_activity_date": 1467914570, "last_edit_date": 1467914570, "creation_date": 1467914031, "answer_id": 38252163, "question_id": 38250632, "link": "https://stackoverflow.com/questions/38250632/serialize-sodiumoxides-publickey-into-json/38252163#38252163", "title": "Serialize sodiumoxides&#39; PublicKey into JSON", "body": "<p>The latest available version of <code>sodiumoxide</code> on <code>crates.io</code> is currently <code>0.0.10</code> which doesn't support <code>serde</code>. You can see this if you look at the <a href=\"https://github.com/dnaq/sodiumoxide/blob/86351758b9755f0d3e0540ce223427267983a01d/Cargo.toml\" rel=\"nofollow\">Cargo.toml file for the 0.0.10 tag</a>.</p>\n\n<p>What you can do for now is to use the dependency from github instead of crates.io until they put out a new version. Edit your <code>Cargo.toml</code> file like this:</p>\n\n<pre><code>[dependencies]\nserde       = \"*\"\nserde_json  = \"*\"\nsodiumoxide = { git = \"https://github.com/dnaq/sodiumoxide\" }\n</code></pre>\n\n<p>Since you're using the version of <code>sodiumoxide</code> from github, you'll also need to use the github version of its FFI wrapper <code>libsodium-sys</code>. You can do this by adding this to your <code>Cargo.toml</code>:</p>\n\n<pre><code>[replace]\n\"libsodium-sys:0.0.10\" = { git = \"https://github.com/dnaq/sodiumoxide/\" }\n</code></pre>\n"}], "owner": {"reputation": 101, "user_id": 5261541, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/NVRyR.png?s=128&g=1", "display_name": "duesee", "link": "https://stackoverflow.com/users/5261541/duesee"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 134, "favorite_count": 0, "accepted_answer_id": 38252163, "answer_count": 1, "score": 1, "last_activity_date": 1467915616, "creation_date": 1467908484, "last_edit_date": 1467913374, "question_id": 38250632, "link": "https://stackoverflow.com/questions/38250632/serialize-sodiumoxides-publickey-into-json", "title": "Serialize sodiumoxides&#39; PublicKey into JSON", "body": "<p>I try to serialize the <code>PublicKey</code> struct of sodiumoxide (Rust bindings for libsodium) to a file (e.g. JSON, but binary would be okay, too).</p>\n\n<p>Here is my code:</p>\n\n<pre><code>extern crate serde;\nextern crate serde_json;\nextern crate sodiumoxide;\n\nuse serde::Serialize;\nuse serde_json::ser::Serializer;\nuse sodiumoxide::crypto::sign;\n\nfn main() {\n    let (pk, _) = sign::gen_keypair();    \n    let pk_ser = serde_json::to_string(&amp;pk);\n}\n</code></pre>\n\n<p>I get the following error message:</p>\n\n<pre><code>error: the trait bound `sodiumoxide::crypto::sign::PublicKey: serde::Serialize` is not satisfied [E0277]\n</code></pre>\n\n<p>So the compiler tells me that <code>PublicKey</code> should implement the serde::Serialize trait. But it does implement <code>serde::Serialize</code> as stated here: <a href=\"https://dnaq.github.io/sodiumoxide/sodiumoxide/crypto/sign/ed25519/struct.PublicKey.html\" rel=\"nofollow\">https://dnaq.github.io/sodiumoxide/sodiumoxide/crypto/sign/ed25519/struct.PublicKey.html</a></p>\n\n<p>So, what is the problem?</p>\n\n<p>Edit:</p>\n\n<p>Cargo.toml:</p>\n\n<pre><code>[package]\nname = ...\nversion = ...\nauthors = ...\n\n[dependencies]\nserde       = \"*\"\nserde_json  = \"*\"\nsodiumoxide = \"*\"\n</code></pre>\n"}, {"tags": ["c", "rust", "llvm", "dynamic-linking", "llc"], "comments": [{"owner": {"reputation": 30540, "user_id": 719263, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7feab598abfc27783641fe2b796a0155?s=128&d=identicon&r=PG", "display_name": "Jean-Baptiste Yun&#232;s", "link": "https://stackoverflow.com/users/719263/jean-baptiste-yun%c3%a8s"}, "edited": false, "score": 0, "creation_date": 1467902486, "post_id": 38248234, "comment_id": 63918122, "body": "I think you need to have a rust runtime somewhere... but problem is different if call c from rust or the converse."}, {"owner": {"reputation": 670, "user_id": 4587209, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-NWUgV8JWbK0/AAAAAAAAAAI/AAAAAAAAAAA/O5jTxfpdW4s/photo.jpg?sz=128", "display_name": "Tom&#225;\u0161 Kratochv&#237;la", "link": "https://stackoverflow.com/users/4587209/tom%c3%a1%c5%a1-kratochv%c3%adla"}, "edited": false, "score": 0, "creation_date": 1467902662, "post_id": 38248234, "comment_id": 63918274, "body": "Each source code has to be given to clang separately first. Afterwards, llvm-link command can merge multiple bitcode files. If the call from one source code matches the second, it could work."}, {"owner": {"reputation": 670, "user_id": 4587209, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-NWUgV8JWbK0/AAAAAAAAAAI/AAAAAAAAAAA/O5jTxfpdW4s/photo.jpg?sz=128", "display_name": "Tom&#225;\u0161 Kratochv&#237;la", "link": "https://stackoverflow.com/users/4587209/tom%c3%a1%c5%a1-kratochv%c3%adla"}, "edited": false, "score": 1, "creation_date": 1467903076, "post_id": 38248234, "comment_id": 63918568, "body": "Both languages has to be Application Binary Interface-compatible."}], "answers": [{"tags": [], "owner": {"reputation": 346, "user_id": 2391980, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/e1dad7ee213f20c9aab170b81e5db712?s=128&d=identicon&r=PG", "display_name": "Bennet Leff", "link": "https://stackoverflow.com/users/2391980/bennet-leff"}, "is_accepted": false, "score": 2, "last_activity_date": 1467902963, "creation_date": 1467902963, "answer_id": 38248611, "question_id": 38248234, "link": "https://stackoverflow.com/questions/38248234/llvm-as-base-compiler-for-different-languages/38248611#38248611", "title": "LLVM as base compiler for different languages", "body": "<p>Firstly, Rust and C can talk but through Rust's FFI (Foreign Function Interface). For very basic functions, I imagine it would be possible to compile both languages to LLVM and have some sort of functionality but we're talking hello world length programs (maybe even not at that level though). In general there must be some sort of <a href=\"https://en.wikipedia.org/wiki/Application_binary_interface\" rel=\"nofollow\">ABI</a> to implement what you're suggesting. However, even with an ABI the implementation is done at the Front End level. </p>\n\n<p>Concisely put, LLVM can't represent all language specific constructs. So you can't just link two program's LLVM IR and hope it works. There must be some work done at the front end to ensure compatibility between two languages.  </p>\n"}, {"comments": [{"owner": {"reputation": 346, "user_id": 2391980, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/e1dad7ee213f20c9aab170b81e5db712?s=128&d=identicon&r=PG", "display_name": "Bennet Leff", "link": "https://stackoverflow.com/users/2391980/bennet-leff"}, "edited": false, "score": 0, "creation_date": 1467904965, "post_id": 38249153, "comment_id": 63919926, "body": "I think the long answer should be sometimes, not necessarily yes because an ABI is required in order to have interop. An ABI certainly requires some work to implement so you can&#39;t simply link two different language&#39;s IR outputs.  Other than that I think you gave a pretty good answer to the question."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 346, "user_id": 2391980, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/e1dad7ee213f20c9aab170b81e5db712?s=128&d=identicon&r=PG", "display_name": "Bennet Leff", "link": "https://stackoverflow.com/users/2391980/bennet-leff"}, "edited": false, "score": 0, "creation_date": 1467905078, "post_id": 38249153, "comment_id": 63920005, "body": "@BennetLeff: That&#39;s exactly that the long answer actually says: if both pieces of code can load/run when in separate libraries, then you can merge their IRs and have them run (since you validated the ABI). Or do you mean that I should edit something because it&#39;s not too clear?"}, {"owner": {"reputation": 346, "user_id": 2391980, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/e1dad7ee213f20c9aab170b81e5db712?s=128&d=identicon&r=PG", "display_name": "Bennet Leff", "link": "https://stackoverflow.com/users/2391980/bennet-leff"}, "edited": false, "score": 0, "creation_date": 1467905866, "post_id": 38249153, "comment_id": 63920571, "body": "I think your answer can remain as is. However, to me it would be more clear if instead of &quot;Long answer: yes...&quot; it said &quot;Long answer: sometimes...&quot;"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 346, "user_id": 2391980, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/e1dad7ee213f20c9aab170b81e5db712?s=128&d=identicon&r=PG", "display_name": "Bennet Leff", "link": "https://stackoverflow.com/users/2391980/bennet-leff"}, "edited": false, "score": 0, "creation_date": 1467908301, "post_id": 38249153, "comment_id": 63922048, "body": "@BennetLeff: Updated; I kept the yes to make it clear it is possible, but immediately qualified that it was not automatic."}, {"owner": {"reputation": 654, "user_id": 4079123, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/0c28786e5157a528eb01657fda5a46b6?s=128&d=identicon&r=PG&f=1", "display_name": "Bharadwaj", "link": "https://stackoverflow.com/users/4079123/bharadwaj"}, "edited": false, "score": 0, "creation_date": 1467969437, "post_id": 38249153, "comment_id": 63945734, "body": "@Matthieu M. But for the languages that do not have FFI, Say linking Go and Rust, both have LLVM front end, then? Also if possible, can you please show me the above example working?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 654, "user_id": 4079123, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/0c28786e5157a528eb01657fda5a46b6?s=128&d=identicon&r=PG&f=1", "display_name": "Bharadwaj", "link": "https://stackoverflow.com/users/4079123/bharadwaj"}, "edited": false, "score": 1, "creation_date": 1467969734, "post_id": 38249153, "comment_id": 63945932, "body": "@Bharadwaj: If the languages do not have FFI, then no it is not possible. In essence, merging at LLVM IR level is only an optimization compared to building a static library/binary from multiple static libraries coming from different languages."}, {"owner": {"reputation": 346, "user_id": 2391980, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/e1dad7ee213f20c9aab170b81e5db712?s=128&d=identicon&r=PG", "display_name": "Bennet Leff", "link": "https://stackoverflow.com/users/2391980/bennet-leff"}, "edited": false, "score": 0, "creation_date": 1467997984, "post_id": 38249153, "comment_id": 63963544, "body": "@MatthieuM.: Thank you for putting it this way. This is correct and concise."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 6, "last_activity_date": 1467908164, "last_edit_date": 1467908164, "creation_date": 1467904353, "answer_id": 38249153, "question_id": 38248234, "link": "https://stackoverflow.com/questions/38248234/llvm-as-base-compiler-for-different-languages/38249153#38249153", "title": "LLVM as base compiler for different languages", "body": "<p>Short answer: <strong>Yes</strong>.</p>\n\n<hr>\n\n<p>Long answer: Yes, as long as some requirements are fulfilled.</p>\n\n<p>There are two kinds of compatibility: API (Application Program Interface) and ABI (Application Binary Interface). Essentially, the API dictates whether your program compiles whereas the ABI dictates whether it links, loads and runs.</p>\n\n<p>Since Rust has a C FFI, Rust can emit code that can normally interact with C (it has the proper C ABI, for the considered platform). This is evident in that a Rust binary can call a C library.</p>\n\n<p>If you take the LLVM IR of that Rust binary, the LLVM IR of that C library, merge both together, and use LLVM to produce a new binary, then you'll get a single binary (no dependency).</p>\n\n<p>So, the \"only\" requirement is that your two pieces of code must be able to link/load/run independently first.</p>\n\n<hr>\n\n<p>Another way to obtain a single binary, which is independent from LLVM, is <em>static linking</em>; in Rust you can for example static link with the musl implementation of the C standard library. The main advantage of merging at LLVM IR, is that you can then run LLVM optimization passes on the merged IR, and therefore benefit from cross-language inlining (and other optimizations).</p>\n"}], "owner": {"reputation": 654, "user_id": 4079123, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/0c28786e5157a528eb01657fda5a46b6?s=128&d=identicon&r=PG&f=1", "display_name": "Bharadwaj", "link": "https://stackoverflow.com/users/4079123/bharadwaj"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 959, "favorite_count": 2, "answer_count": 2, "score": 5, "last_activity_date": 1467908164, "creation_date": 1467902017, "last_edit_date": 1467903206, "question_id": 38248234, "link": "https://stackoverflow.com/questions/38248234/llvm-as-base-compiler-for-different-languages", "title": "LLVM as base compiler for different languages", "body": "<p>I am new to LLVM compiler and infrastructure. I have the following thought. \nClang is the LLVM front end for C/C++, similarly Rustc for Rust programming language. Both can emit the LLVM IR code and the emitted code can be compiled to executable application. </p>\n\n<p>My question is is it possible to link different programming languages? Example shown below -</p>\n\n<pre><code>/* Code in C */\nint add(int, int);\nint main()\n{\n  printf(\"%d\", add(5 ,6));\n}\n</code></pre>\n\n<p>The function defined in Rust for example</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// Code in Rust\nfn main()\n{\n  println!(\"{}\", add(5, 6));\n}\n\nfn add (x: i32, y: i32) -&gt; i32\n{\n  x + y\n}\n</code></pre>\n\n<p>Once the IR is generated from both the source files, is it possible to link them and create a single application?</p>\n\n<p>I am just curious to know if this works, please let me know.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 3029, "user_id": 1060004, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/ZOBMa.jpg?s=128&g=1", "display_name": "ustulation", "link": "https://stackoverflow.com/users/1060004/ustulation"}, "edited": false, "score": 0, "creation_date": 1467887856, "post_id": 38243247, "comment_id": 63907569, "body": "But <code>*c</code> should yeild either <code>&amp;C</code> or <code>&amp;mut C</code> no ? Then how is <code>let _a = c2.0;</code> even allowed ? That is also one of my questions."}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "reply_to_user": {"reputation": 3029, "user_id": 1060004, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/ZOBMa.jpg?s=128&g=1", "display_name": "ustulation", "link": "https://stackoverflow.com/users/1060004/ustulation"}, "edited": false, "score": 2, "creation_date": 1467888345, "post_id": 38243247, "comment_id": 63907871, "body": "<code>Box</code> is special. If you dereference a <code>Box</code> you get the inner value. There&#39;s no way yet to implement this for your own types, but there&#39;s an RFC for it: <a href=\"https://github.com/rust-lang/rfcs/pull/1646\" rel=\"nofollow noreferrer\">github.com/rust-lang/rfcs/pull/1646</a>"}, {"owner": {"reputation": 3029, "user_id": 1060004, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/ZOBMa.jpg?s=128&g=1", "display_name": "ustulation", "link": "https://stackoverflow.com/users/1060004/ustulation"}, "edited": false, "score": 0, "creation_date": 1467889159, "post_id": 38243247, "comment_id": 63908364, "body": "ah ok. Sorry for being further confused, but if <code>let c2 = *c;</code> moves out of <code>Box</code> to create a temporary as you said, how does it work if it were a <code>Box</code> of a <code>trait</code> - i mean how does compiler know the size to allocate on stack for that temporary ?"}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "reply_to_user": {"reputation": 3029, "user_id": 1060004, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/ZOBMa.jpg?s=128&g=1", "display_name": "ustulation", "link": "https://stackoverflow.com/users/1060004/ustulation"}, "edited": false, "score": 0, "creation_date": 1467889231, "post_id": 38243247, "comment_id": 63908409, "body": "That obviously won&#39;t work, but it&#39;s not necessary to work, since you can&#39;t move out of a trait object in general."}, {"owner": {"reputation": 3029, "user_id": 1060004, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/ZOBMa.jpg?s=128&g=1", "display_name": "ustulation", "link": "https://stackoverflow.com/users/1060004/ustulation"}, "edited": false, "score": 0, "creation_date": 1467889501, "post_id": 38243247, "comment_id": 63908575, "body": "right - so you mean it&#39;s something like compiler keeping a track of whether it&#39;s a <code>Box</code> of a trait object or a concrete object somewhere and using that metadata to determine what should the behavior/result of <code>*c</code> be ? (btw is this documented somewhere - it would spare you the trouble of explaining :-)"}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "reply_to_user": {"reputation": 3029, "user_id": 1060004, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/ZOBMa.jpg?s=128&g=1", "display_name": "ustulation", "link": "https://stackoverflow.com/users/1060004/ustulation"}, "edited": false, "score": 0, "creation_date": 1467890056, "post_id": 38243247, "comment_id": 63908912, "body": "Actually the Compiler doesn&#39;t really track anything, it knows the type, and if you try to deref a <code>Box&lt;T&gt;</code> but <code>T</code> doesn&#39;t implement <a href=\"https://doc.rust-lang.org/std/marker/trait.Sized.html\" rel=\"nofollow noreferrer\"><code>Sized</code></a>, then the deref can only be one that creates a <code>&amp;T</code> or <code>&amp;mut T</code>. If I had found the docs to this I&#39;d have posted it in the answer, but sadly I can&#39;t find anything anywhere. This probably stems from the fact that <code>Box</code> didn&#39;t always exist in Rust, but it was a builtin pointer type with the <code>~</code> sigil"}, {"owner": {"reputation": 3029, "user_id": 1060004, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/ZOBMa.jpg?s=128&g=1", "display_name": "ustulation", "link": "https://stackoverflow.com/users/1060004/ustulation"}, "edited": false, "score": 0, "creation_date": 1467890400, "post_id": 38243247, "comment_id": 63909149, "body": "ah right - nw - your explanations did clear up many doubts i had. So next time i see something a little unexpected with <code>Box</code> i&#39;ll probably think it&#39;s a special handling by the compiler."}], "tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": true, "score": 6, "last_activity_date": 1525814951, "last_edit_date": 1525814951, "creation_date": 1467887566, "answer_id": 38243247, "question_id": 38243040, "link": "https://stackoverflow.com/questions/38243040/confused-by-move-semantics-of-struct-fields-inside-a-box/38243247#38243247", "title": "Confused by move semantics of struct fields inside a Box", "body": "<p>As you can see in the method, moving out of a struct's field directly works fine, but moving out of a field of a struct that's in a <code>Box</code> will first move out of the <code>Box</code> into a temporary variable and then move out of the field of that temporary. Thus when you try to move out of the second field, the <code>Box</code> has already been destroyed and there's just a temporary left that you can't use.</p>\n\n<p>You can make this work by creating the temporary yourself:</p>\n\n<pre><code>let c2 = *c;\nlet _a = c2.0;\nlet _b = c2.1;\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1525814919, "creation_date": 1525814919, "answer_id": 50242520, "question_id": 38243040, "link": "https://stackoverflow.com/questions/38243040/confused-by-move-semantics-of-struct-fields-inside-a-box/50242520#50242520", "title": "Confused by move semantics of struct fields inside a Box", "body": "<p>Your original code works when <em>non-lexical lifetimes</em> are enabled:</p>\n\n<pre><code>#![feature(nll)]\n\nstruct A;\nstruct B;\n\nfn consume_a(_a: A) {}\nfn consume_b(_b: B) {}\n\nstruct C(A, B);\n\nimpl C {\n    fn foo(self: Self) {\n        consume_a(self.0);\n        consume_b(self.1);\n    }\n}\n\nfn main() {\n    let c = Box::new(C(A, B));\n\n    // Consume internals\n    let _a = c.0;\n    let _b = c.1;\n}\n</code></pre>\n\n<p>This indicates that the original failure was simply a weakness of the borrow-checker.</p>\n"}], "owner": {"reputation": 3029, "user_id": 1060004, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/ZOBMa.jpg?s=128&g=1", "display_name": "ustulation", "link": "https://stackoverflow.com/users/1060004/ustulation"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 287, "favorite_count": 0, "accepted_answer_id": 38243247, "answer_count": 2, "score": 5, "last_activity_date": 1525815330, "creation_date": 1467886844, "last_edit_date": 1525815330, "question_id": 38243040, "link": "https://stackoverflow.com/questions/38243040/confused-by-move-semantics-of-struct-fields-inside-a-box", "title": "Confused by move semantics of struct fields inside a Box", "body": "<p>If I do the following, I get an error:</p>\n\n<pre><code>struct A;\nstruct B;\n\nfn consume_a(_a: A) {}\nfn consume_b(_b: B) {}\n\nstruct C(A, B);\n\nimpl C {\n    fn foo(self: Self) {\n        consume_a(self.0);\n        consume_b(self.1);\n    }\n}\n\nfn main() {\n    let c = Box::new(C(A, B));\n\n    // Consume internals\n    let _a = c.0;\n    let _b = c.1;\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0382]: use of moved value: `c`\n  --&gt; src/main.rs:21:9\n   |\n20 |     let _a = c.0;\n   |         -- value moved here\n21 |     let _b = c.1;\n   |         ^^ value used here after move\n   |\n   = note: move occurs because `c.0` has type `A`, which does not implement the `Copy` trait\n</code></pre>\n\n<p>I can achieve the same thing (consumption of internals) doing this:</p>\n\n<pre><code>fn main() {\n    let c = Box::new(C(A, B));\n    c.foo();\n}\n</code></pre>\n\n<p>The way it works above (<code>c.foo()</code>) means that I have moved out of boxed content; how can this happen? None of the API's in <code>Box</code>'s documentation show I can obtain the contained value as a type (i.e. all methods return <code>&amp;T</code> or <code>&amp;mut T</code> but not <code>T</code>)</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 0, "creation_date": 1467881173, "post_id": 38239571, "comment_id": 63903204, "body": "Or if you return a <code>Result</code> as well and want to return errors straight away, just <code>let fd = try!(libc::creat(...));</code>"}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 5, "last_activity_date": 1467901073, "last_edit_date": 1467901073, "creation_date": 1467875735, "answer_id": 38239571, "question_id": 38239073, "link": "https://stackoverflow.com/questions/38239073/can-i-combine-variable-assignent-with-an-if/38239571#38239571", "title": "Can I combine variable assignent with an if?", "body": "<p><strong>No</strong>, it's not possible by design. <code>let</code> bindings are <a href=\"https://doc.rust-lang.org/book/functions.html#expressions-vs-statements\" rel=\"nofollow\">one of the two non-expression statements</a> in Rust. That means that the binding does not return any value that could be used further. </p>\n\n<p>Bindings as expressions don't make a whole lot of sense in Rust in general. Consider <code>let s = String::new()</code>: this expression can't return <code>String</code>, because <code>s</code> owns the string. Or what about <code>let (x, _) = get_tuple()</code>? Would the expression return the whole tuple or just the not-ignored elements? So \u21d2 <code>let</code> bindings aren't expressions.</p>\n\n<p>About the <code>if let</code>: Sadly that won't work either. It just enables us to test if a destructuring works or to put it in other words: destructure a refutable pattern. This doesn't only work with <code>Option&lt;T&gt;</code>, but with all types.</p>\n\n<hr>\n\n<p>If you <em>really</em> want to shorten this code, there is a way: make <code>c_int</code> easily convertible into a more idiomatic type, like <code>Result</code>. This is best done via extension trait:</p>\n\n<pre><code>trait LibcIntExt {\n    fn to_res(self) -&gt; Result&lt;u32, u32&gt;;\n}\n\nimpl LibcIntExt for c_int {\n    fn to_res(self) -&gt; Result&lt;u32, u32&gt; {\n        if self &lt; 0 {\n            Err(-self as u32)\n        } else {\n            Ok(self as u32)\n        }\n    }\n}\n</code></pre>\n\n<p>With this you can use <code>if let</code> in the resulting <code>Result</code>:</p>\n\n<pre><code>if let Err(fd) = libc::creat(path, FILE_MODE).to_res() {\n    /* error */\n}\n</code></pre>\n"}], "owner": {"reputation": 9105, "user_id": 119861, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/O2tUa.png?s=128&g=1", "display_name": "hansaplast", "link": "https://stackoverflow.com/users/119861/hansaplast"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 80, "favorite_count": 0, "accepted_answer_id": 38239571, "answer_count": 1, "score": 3, "last_activity_date": 1468082454, "creation_date": 1467874058, "last_edit_date": 1467894519, "question_id": 38239073, "link": "https://stackoverflow.com/questions/38239073/can-i-combine-variable-assignent-with-an-if", "title": "Can I combine variable assignent with an if?", "body": "<p>I have this code:</p>\n\n<pre><code>let fd = libc::creat(path, FILE_MODE);\nif fd &lt; 0 {\n    /* error */\n}\n</code></pre>\n\n<p>the equivalent in C is shorter:</p>\n\n<pre><code>if ((fd = creat(path, FILE_MODE)) &lt; 0) {\n    /* error */\n}\n</code></pre>\n\n<p>can I do a similar thing in Rust? I tried to map it to <code>if let</code> but it looks like handling <code>Option</code>s.</p>\n"}]