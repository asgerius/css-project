[{"tags": ["rust", "flatbuffers"], "answers": [{"comments": [{"owner": {"reputation": 623, "user_id": 252226, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c0036be935a11cd1d7d807f489609b3a?s=128&d=identicon&r=PG&f=1", "display_name": "dbschwartz", "link": "https://stackoverflow.com/users/252226/dbschwartz"}, "edited": false, "score": 0, "creation_date": 1570060022, "post_id": 58210210, "comment_id": 102798664, "body": "Thanks for getting back to me so quickly, I now see why it works that way. I will either rebuild the new object by reading the <code>MyNestedTable</code> or perhaps store the bytes like <code>nested_flatbuffer</code>."}], "tags": [], "owner": {"reputation": 4578, "user_id": 17419, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/JU9iE.jpg?s=128&g=1", "display_name": "Aardappel", "link": "https://stackoverflow.com/users/17419/aardappel"}, "is_accepted": true, "score": 1, "last_activity_date": 1570059836, "last_edit_date": 1570059836, "creation_date": 1570055940, "answer_id": 58210210, "question_id": 58209692, "link": "https://stackoverflow.com/questions/58209692/how-to-add-a-flatbuffer-object-to-a-new-object/58210210#58210210", "title": "How to add a flatbuffer object to a new object?", "body": "<p><code>MyNestedTable</code> isn't really an object, it is a handle to data inside the serialized data (your <code>[u8]</code>), and any field accesses look up this data on the fly.</p>\n\n<p>None of the base APIs for any of the FlatBuffers supported languages (including Rust) have code generated that allows automatic re-serializing, since that is not a frequent operation in most use cases (you already have the serialized data).</p>\n\n<p>The way to do it is through the optional \"object API\", supported in C++ and some other languages, but <a href=\"https://github.com/google/flatbuffers/issues/5132\" rel=\"nofollow noreferrer\">not yet in Rust</a>. As you can see, CasperN is working on such an API.</p>\n\n<p>Until then, you may consider using <code>nested_flatbuffer</code> or some other construct to directly pass the serialized data to wherever it needs to go.</p>\n"}], "owner": {"reputation": 623, "user_id": 252226, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c0036be935a11cd1d7d807f489609b3a?s=128&d=identicon&r=PG&f=1", "display_name": "dbschwartz", "link": "https://stackoverflow.com/users/252226/dbschwartz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 131, "favorite_count": 0, "accepted_answer_id": 58210210, "answer_count": 1, "score": 0, "last_activity_date": 1570059836, "creation_date": 1570052192, "last_edit_date": 1570059793, "question_id": 58209692, "link": "https://stackoverflow.com/questions/58209692/how-to-add-a-flatbuffer-object-to-a-new-object", "title": "How to add a flatbuffer object to a new object?", "body": "<p>I understand how to use the <code>FlatBufferBuilder</code> and specific type builder (e.g., <code>MyNestedTableBuilder</code>) to get the <code>WIPOffset</code> and then use that to get the <code>finished_data</code> buffer (<code>&amp;[u8]</code>). I then have been using <code>get_root</code> to get an object based on the buffer, so now I have an instance of <code>MyNestedTable</code>. Then I need to pass that to another function and create a new table instance via a new builder, <code>MyTable</code>, that has the field <code>add_my_nested_table</code>. I cannot see how to do this without unpacking <code>MyNestedTable</code> and rebuilding it again (which seems very inefficient). I am sure there is a good way to do this, I just haven't found it, even after studying the generated code and API.</p>\n\n<p>Generally we have a need to pass objects around and reuse them, over the network or via API calls in Rust.</p>\n"}, {"tags": ["oop", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1570045602, "post_id": 58208285, "comment_id": 102794702, "body": "For my own education, how do you foresee the answer to this question helping you? That may help guide answers to provide useful information. Would you accept &quot;because someone said so&quot; as the answer?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1570045678, "post_id": 58208285, "comment_id": 102794747, "body": "It would also be helpful if you showed the research you&#39;ve already performed before asking this question. Rust has been developed in the open for a long time (if not since its inception), so it&#39;s generally likely that any interesting decisions can be found with a little legwork. We wouldn&#39;t want to bore you with details you already know about."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1570051467, "post_id": 58208285, "comment_id": 102796819, "body": "From the page you linked: &quot;The reason is that child modules wrap and hide their implementation details, but the child modules can see the context in which they\u2019re defined.&quot;"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 2, "creation_date": 1570051566, "post_id": 58208285, "comment_id": 102796843, "body": "Basically, you can see private items from the <i>inside</i> of a module, but not from the <i>outside</i>. Submodules are on the inside of their parents."}], "owner": {"reputation": 327, "user_id": 11180444, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PwV4h.jpg?s=128&g=1", "display_name": "Muhammad Areeb Siddiqui", "link": "https://stackoverflow.com/users/11180444/muhammad-areeb-siddiqui"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 80, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1570045331, "creation_date": 1570045014, "last_edit_date": 1570045331, "question_id": 58208285, "link": "https://stackoverflow.com/questions/58208285/why-can-child-modules-use-private-items-of-ancestor-modules-but-not-the-other-w", "title": "Why can child modules use private items of ancestor modules, but not the other way?", "body": "<p>Why can't items in a parent module use private items inside child modules, but items in child modules can use the private items in their ancestor modules?</p>\n\n<p><a href=\"https://doc.rust-lang.org/book/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.html\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/book/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.html</a></p>\n"}, {"tags": ["rust", "closures", "lifetime"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1570045525, "last_edit_date": 1570045525, "creation_date": 1570044685, "answer_id": 58208213, "question_id": 58207846, "link": "https://stackoverflow.com/questions/58207846/how-to-return-a-rust-closure-that-borrows-state-to-use-later/58208213#58208213", "title": "How to return a Rust closure that borrows state to use later?", "body": "<p>You have a number of compounding issues:</p>\n\n<ol>\n<li><p>You need an explicit lifetime to connect the lifetime of the <code>string</code> argument to the lifetime of the return value of the returned closure. Right now, <a href=\"https://doc.rust-lang.org/book/ch10-03-lifetime-syntax.html?highlight=elision#lifetime-elision\" rel=\"nofollow noreferrer\">lifetime elision</a> causes it to be inferred  the same as the <em>argument</em> to the closure.</p></li>\n<li><p>You cannot return a reference to the temporary through the function. It needs to be a distinct variable.</p></li>\n<li><p>You have to move <code>string</code> into the closure to prevent taking another reference to it, which wouldn't live long enough.</p></li>\n</ol>\n\n<p>Additionally...</p>\n\n<ol>\n<li><code>targetString</code> should be <code>target_string</code> to follow Rust idioms.</li>\n<li><code>return</code> should not be used at the end of a block to follow Rust idioms.</li>\n<li><code>&amp;str</code> is generally preferred to <code>&amp;String</code></li>\n</ol>\n\n<pre><code>fn main() {\n    let s = String::from(\"Hello!\");\n    let parse_this = parse_string(&amp;s);\n    println!(\"{}\", parse_this(\"goodbye!\"));\n}\n\nfn parse_string&lt;'a&gt;(string: &amp;'a String) -&gt; impl Fn(&amp;str) -&gt; &amp;'a String {\n    return move |target_string| {\n        // pretend there is parsing logic\n        println!(\"{}\", target_string);\n        string\n    };\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/50343130/155423\">Lifetimes for method returning iterator of structs with same lifetime</a></li>\n<li><a href=\"https://stackoverflow.com/q/40006219/155423\">Why is it discouraged to accept a reference to a String (&amp;String), Vec (&amp;Vec), or Box (&amp;Box) as a function argument?</a></li>\n<li><a href=\"https://stackoverflow.com/q/54488127/155423\">Getting &quot;temporary value dropped while borrowed&quot; when trying to update an Option&lt;&amp;str&gt; in a loop</a></li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1570045406, "post_id": 58208230, "comment_id": 102794609, "body": "I&#39;m actually not sure why <code>string</code> is reborrowed here instead of moved. Guess the compiler just isn&#39;t quite clever enough"}], "tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": false, "score": 2, "last_activity_date": 1570045237, "last_edit_date": 1570045237, "creation_date": 1570044770, "answer_id": 58208230, "question_id": 58207846, "link": "https://stackoverflow.com/questions/58207846/how-to-return-a-rust-closure-that-borrows-state-to-use-later/58208230#58208230", "title": "How to return a Rust closure that borrows state to use later?", "body": "<p>You need to add an explicit lifetime annotation to <code>parse_string</code> so that the compiler can tell which lifetimes are the same and which may be different.</p>\n\n<p><code>Fn(&amp;str) -&gt; &amp;String</code> would be the type for a function that returns a <code>&amp;String</code> of the same lifetime as the <code>&amp;str</code> passed in; i.e., <code>for&lt;'b&gt; Fn(&amp;'b str) -&gt; &amp;'b String</code>. You need to say that the <code>&amp;String</code> returned has the same lifetime as the <code>&amp;String</code> passed in to <code>parse_string</code>:</p>\n\n<pre><code>fn parse_string&lt;'a&gt;(string: &amp;'a String) -&gt; impl Fn(&amp;str) -&gt; &amp;'a String {\n</code></pre>\n\n<p>Note that <code>Fn(&amp;str)</code> doesn't have a lifetime annotation; this is because the lifetime of the <code>&amp;str</code> passed into the <em>closure</em> is unrelated to the lifetime of the <code>&amp;String</code> passed into <code>parse_string</code>.</p>\n\n<p>In order to make <code>parse_string</code> compile, you need to make one more change. Closures try to borrow their environment if the compiler thinks it doesn't need to be moved. Your closure, which borrows <code>string</code>, can't be returned from the function where <code>string</code> is a local variable. To fix this, you <code>move</code> the captured variable into the closure:</p>\n\n<pre><code>    move |target_string| {\n        // pretend there is parsing logic\n        println!(\"{}\", target_string);\n        string\n    }\n</code></pre>\n\n<p>It's idiomatic in Rust to omit the <code>return</code> in the last expression in a function.</p>\n\n<p>Also note that <code>&amp;String</code> is an unusual type because it offers no expressivity that <code>&amp;str</code> does not provide. It is almost always a mistake to have <code>&amp;String</code> in non-generic code. See <a href=\"https://stackoverflow.com/questions/40006219/why-is-it-discouraged-to-accept-a-reference-to-a-string-string-vec-vec-o\">Why is it discouraged to accept a reference to a String (&amp;String), Vec (&amp;Vec), or Box (&amp;Box) as a function argument?</a> for more information.</p>\n\n<p>Putting it all together, here's how I'd write <code>parse_string</code>:</p>\n\n<pre><code>fn parse_string&lt;'a&gt;(string: &amp;'a str) -&gt; impl Fn(&amp;str) -&gt; &amp;'a str {\n    move |target_string| {\n        // pretend there is parsing logic\n        println!(\"{}\", target_string);\n        string\n    }\n}\n</code></pre>\n\n<p>Your <code>main</code> also needs a small tweak: <code>&amp;String::from(\"Hello!\")</code> takes a reference to a temporary <code>String</code> that will be dropped immediately at the end of the line, invalidating the reference. This is easily fixed by storing the <code>String</code> in a variable so it will not be dropped until the end of the scope:</p>\n\n<pre><code>fn main() {\n    let hello = String::from(\"Hello!\");\n    let parse_this = parse_string(&amp;hello);\n    println!(\"{}\", parse_this(\"goodbye!\"));\n}\n</code></pre>\n"}], "owner": {"reputation": 91, "user_id": 3600473, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/519337571/picture?type=large", "display_name": "SweetCoco", "link": "https://stackoverflow.com/users/3600473/sweetcoco"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 142, "favorite_count": 0, "accepted_answer_id": 58208213, "answer_count": 2, "score": 2, "last_activity_date": 1570045525, "creation_date": 1570043028, "last_edit_date": 1570044064, "question_id": 58207846, "link": "https://stackoverflow.com/questions/58207846/how-to-return-a-rust-closure-that-borrows-state-to-use-later", "title": "How to return a Rust closure that borrows state to use later?", "body": "<p>I have a fairly simple bit of code. I have a feeling I need to use a lifetime to accomplish this but I'm stumped right now.</p>\n\n<p><code>parse_string</code> is a function that accepts a reference to a string, and returns a closure to be used later, here's the code:</p>\n\n<pre><code>fn main() {\n    let parse_this = parse_string(&amp;String::from(\"Hello!\"));\n    println!(\"{}\", parse_this(\"goodbye!\"));\n}\n\nfn parse_string(string: &amp;String) -&gt; impl Fn(&amp;str) -&gt; &amp;String {\n    return |targetString| {\n        // pretend there is parsing logic\n        println!(\"{}\", targetString);\n        return string;\n    };\n}\n</code></pre>\n\n<p>Compiler error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: cannot infer an appropriate lifetime\n  --&gt; src/main.rs:7:12\n   |\n6  |   fn parse_string(string: &amp;String) -&gt; impl Fn(&amp;str) -&gt; &amp;String {\n   |                                       ------------------------ this return type evaluates to the `'static` lifetime...\n7  |       return |targetString| {\n   |  ____________^\n8  | |         // pretend there is parsing logic\n9  | |         println!(\"{}\", targetString);\n10 | |         return string;\n11 | |     };\n   | |_____^ ...but this borrow...\n   |\nnote: ...can't outlive the anonymous lifetime #1 defined on the function body at 6:1\n  --&gt; src/main.rs:6:1\n   |\n6  | / fn parse_string(string: &amp;String) -&gt; impl Fn(&amp;str) -&gt; &amp;String {\n7  | |     return |targetString| {\n8  | |         // pretend there is parsing logic\n9  | |         println!(\"{}\", targetString);\n10 | |         return string;\n11 | |     };\n12 | | }\n   | |_^\nhelp: you can add a constraint to the return type to make it last less than `'static` and match the anonymous lifetime #1 defined on the function body at 6:1\n   |\n6  | fn parse_string(string: &amp;String) -&gt; impl Fn(&amp;str) -&gt; &amp;String + '_ {\n   |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0312]: lifetime of reference outlives lifetime of borrowed content...\n  --&gt; src/main.rs:10:16\n   |\n10 |         return string;\n   |                ^^^^^^\n   |\nnote: ...the reference is valid for the anonymous lifetime #2 defined on the body at 7:12...\n  --&gt; src/main.rs:7:12\n   |\n7  |       return |targetString| {\n   |  ____________^\n8  | |         // pretend there is parsing logic\n9  | |         println!(\"{}\", targetString);\n10 | |         return string;\n11 | |     };\n   | |_____^\nnote: ...but the borrowed content is only valid for the anonymous lifetime #1 defined on the function body at 6:1\n  --&gt; src/main.rs:6:1\n   |\n6  | / fn parse_string(string: &amp;String) -&gt; impl Fn(&amp;str) -&gt; &amp;String {\n7  | |     return |targetString| {\n8  | |         // pretend there is parsing logic\n9  | |         println!(\"{}\", targetString);\n10 | |         return string;\n11 | |     };\n12 | | }\n   | |_^\n</code></pre>\n"}, {"tags": ["build", "rust", "rust-cargo"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1570030623, "post_id": 58204649, "comment_id": 102787799, "body": "FYI, <code>cargo build &amp;&amp; cargo run</code> is redundant. <code>cargo run</code> will build as needed."}], "owner": {"reputation": 99, "user_id": 11957368, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/337aa89761ed3a515ffe17f0da02c119?s=128&d=identicon&r=PG&f=1", "display_name": "mr_broccoli", "link": "https://stackoverflow.com/users/11957368/mr-broccoli"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 56, "favorite_count": 0, "closed_date": 1570062352, "answer_count": 0, "score": 2, "last_activity_date": 1570030596, "creation_date": 1570030050, "last_edit_date": 1570030596, "question_id": 58204649, "link": "https://stackoverflow.com/questions/58204649/how-to-change-build-rs-behavior-based-on-the-current-cargo-command", "closed_reason": "Duplicate", "title": "How to change build.rs behavior based on the current Cargo command?", "body": "<p>My build.rs is complicated since I am using it to generate tests and run some other binaries before actually compiling my current project. These tests rely on auto-generated code from these other binaries. These binaries can change dynamically thus changing the auto-generated code files so I do not want to statically write these tests. However, this ends up taking an enormous amount of time. </p>\n\n<p>This is no problem when I want to run <code>cargo test</code>, but when I'm running <code>cargo build &amp;&amp; cargo run</code> or <code>cargo bench</code> which don't need these generated tests, the long build time caused by build.rs becomes extremely annoying. </p>\n\n<p>Is there any way to specify that I only want build.rs to execute when using <code>cargo test</code>? Is there some way in build.rs to detect which Cargo command is being run? </p>\n"}, {"tags": ["git", "authentication", "rust", "push", "libgit2"], "answers": [{"tags": [], "owner": {"reputation": 454, "user_id": 7773885, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-AoKTJpw1lXQ/AAAAAAAAAAI/AAAAAAAAACg/0_3LIaMSNRk/photo.jpg?sz=128", "display_name": "Fudge Fudge", "link": "https://stackoverflow.com/users/7773885/fudge-fudge"}, "is_accepted": true, "score": 2, "last_activity_date": 1570048534, "creation_date": 1570048534, "answer_id": 58209012, "question_id": 58201849, "link": "https://stackoverflow.com/questions/58201849/request-failed-with-status-code-401-error-when-trying-to-push-to-remote-using/58209012#58209012", "title": "&quot;request failed with status code: 401&quot; error when trying to push to remote using git2-rs / libgit2", "body": "<p>Ok, I solved the problem. There are 3 things that need to be done for this to work:</p>\n\n<ul>\n<li><p>Using <code>connect_auth</code> with <code>credentials</code> is right.</p></li>\n<li><p>You <em>also</em> need to specify the same credentials with <code>remote.push</code>.</p></li>\n<li><p>You must specify the same refspec string that you did in <code>remote_add_push</code> in <code>remote.push</code>. </p></li>\n</ul>\n\n<p>So this code works:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn create_callbacks&lt;'a&gt;() -&gt; RemoteCallbacks&lt;'a&gt;{\n    let mut callbacks = RemoteCallbacks::new();\n    &amp;callbacks.credentials(|str, str_opt, cred_type| {\n        Cred::userpass_plaintext(\"your-username\",env!(\"GITHUB_PASSWORD\"))\n    });\n    callbacks\n}\n\nfn main() {\n    let repo = /* get repository */\n\n    let mut remote = repo.find_remote(\"origin\").unwrap();\n\n    remote.connect_auth(Direction::Push, Some(create_callbacks()), None).unwrap();\n    repo.remote_add_push(\"origin\", \"refs/heads/&lt;branch-name&gt;:refs/heads/&lt;branch-name&gt;\").unwrap();\n    let mut push_options = PushOptions::default();\n    let mut callbacks = create_callbacks();\n    push_options.remote_callbacks(callbacks);\n\n    remote.push(&amp;[\"refs/heads/&lt;branch-name&gt;:refs/heads/&lt;branch-name&gt;\"], Some(&amp;mut push_options)).unwrap();\n\n    std::mem::drop(remote);\n\n    Ok(())\n}\n</code></pre>\n\n<p>For debugging, using the <code>push_update_reference</code> callback is useful. It will say if there was a problem pushing.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>    let mut push_options = PushOptions::default();\n    let mut callbacks = create_callbacks();\n    callbacks.push_update_reference(|ref,error|{\n       println!(\"ref = {}, error = {:?}\", ref, error);\n       Ok(())\n    });\n\n    remote.push(&amp;[\"refs/heads/&lt;branch-name&gt;:refs/heads/&lt;branch-name&gt;\"], Some(&amp;mut \n    push_options)).unwrap();\n\n</code></pre>\n"}], "owner": {"reputation": 454, "user_id": 7773885, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-AoKTJpw1lXQ/AAAAAAAAAAI/AAAAAAAAACg/0_3LIaMSNRk/photo.jpg?sz=128", "display_name": "Fudge Fudge", "link": "https://stackoverflow.com/users/7773885/fudge-fudge"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 427, "favorite_count": 0, "accepted_answer_id": 58209012, "answer_count": 1, "score": 1, "last_activity_date": 1570048534, "creation_date": 1570020542, "last_edit_date": 1570030334, "question_id": 58201849, "link": "https://stackoverflow.com/questions/58201849/request-failed-with-status-code-401-error-when-trying-to-push-to-remote-using", "title": "&quot;request failed with status code: 401&quot; error when trying to push to remote using git2-rs / libgit2", "body": "<p>I have a local git repository that is being maintained through <a href=\"https://github.com/rust-lang/git2-rs\" rel=\"nofollow noreferrer\">git2-rs</a>, a pretty much one-to-one Rust wrapper around the C library <a href=\"https://github.com/libgit2/libgit2\" rel=\"nofollow noreferrer\">libgit2</a>. I have managed to stage and commit changes using the library. However, I cannot manage to push changes to the remote repository. When I try to connect to the remote I get an error with the following message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>request failed with status code: 401\n</code></pre>\n\n<p>Here is my code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let repo: Repository = /* get repository */;\nlet mut remote = repo.find_remote(\"origin\").unwrap();\n// connect returns Err, and so this panics.\nremote.connect(Direction::Push).unwrap();\n</code></pre>\n\n<p>I have also tried to pass various credentials, but the same error occurs:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut callbacks = RemoteCallbacks::new();\ncallbacks.credentials(|str, str_opt, cred_type| {\n    Ok(Cred::userpass_plaintext(\"natanfudge\", env!(\"GITHUB_PASSWORD\")).unwrap())\n});\nremote\n    .connect_auth(Direction::Push, Some(callbacks), None)\n    .unwrap();\n</code></pre>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut callbacks = RemoteCallbacks::new();\ncallbacks.credentials(|str, str_opt, cred_type| {\n    // This line does not panic, only the connect_auth!\n    Ok(Cred::ssh_key_from_agent(\"natanfudge\").expect(\"Could not get ssh key from ssh agent\"))\n});\nremote\n    .connect_auth(Direction::Push, Some(callbacks), None)\n    .unwrap();\n</code></pre>\n\n<p>What am I missing?</p>\n"}, {"tags": ["amazon-s3", "rust", "rusoto"], "answers": [{"comments": [{"owner": {"reputation": 20521, "user_id": 1135424, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/rvwBS.jpg?s=128&g=1", "display_name": "nbari", "link": "https://stackoverflow.com/users/1135424/nbari"}, "edited": false, "score": 0, "creation_date": 1570028079, "post_id": 58203041, "comment_id": 102786235, "body": "How could I extend the <code>MyChainProvider</code> to pass as an argument the keys using something like <code>MyChainProvider::new(access_key, secret_key)</code> so that later I could use <code>Box::new(StaticProvider::new_minimal(self.access_key, self.secret_key).credendials())</code> with out getting <code>cannot infer an appropriate lifetime due to conflicting requirements</code>"}, {"owner": {"reputation": 20521, "user_id": 1135424, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/rvwBS.jpg?s=128&g=1", "display_name": "nbari", "link": "https://stackoverflow.com/users/1135424/nbari"}, "edited": false, "score": 0, "creation_date": 1573124004, "post_id": 58203041, "comment_id": 103782884, "body": "I updated to <code>futures = &quot;0.3.0&quot;</code> and getting this error now: <code>type Future = Box&lt;dyn Future&lt;Item = Option&lt;AwsCredentials&gt;, Error = CredentialsError&gt; + Send&gt;;    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&zwnj;&#8203;^^^^^^^^^^^^^^ associated type `Output` must be specified</code>, any ideas ?"}, {"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "reply_to_user": {"reputation": 20521, "user_id": 1135424, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/rvwBS.jpg?s=128&g=1", "display_name": "nbari", "link": "https://stackoverflow.com/users/1135424/nbari"}, "edited": false, "score": 1, "creation_date": 1573142113, "post_id": 58203041, "comment_id": 103792980, "body": "@nbari pretty quick to jump on the <code>1.39.0</code> bandwagon, don&#39;t you? Unfortunately, <code>futures-0.1.x</code> and <code>futures-0.3.0</code> are incompatible, and <code>rusoto</code> itself is still depended on the <code>0.1.x</code> version. I&#39;m afraid you have to wait it to be updated first."}, {"owner": {"reputation": 9948, "user_id": 3182188, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/5da9598ac60c862b0e9494174f582e4e?s=128&d=identicon&r=PG", "display_name": "Raniz", "link": "https://stackoverflow.com/users/3182188/raniz"}, "edited": false, "score": 0, "creation_date": 1573558033, "post_id": 58203041, "comment_id": 103912844, "body": "@edwardw That&#39;s not entirely correct, you can use both futures 0.3.x and 0.1.x alongside each other, 0.3.x even contains an optional compatibility feature. See here for more info:   <a href=\"https://rust-lang-nursery.github.io/futures-rs/blog/2019/04/18/compatibility-layer.html\" rel=\"nofollow noreferrer\">rust-lang-nursery.github.io/futures-rs/blog/2019/04/18/&hellip;</a>"}, {"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "reply_to_user": {"reputation": 9948, "user_id": 3182188, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/5da9598ac60c862b0e9494174f582e4e?s=128&d=identicon&r=PG", "display_name": "Raniz", "link": "https://stackoverflow.com/users/3182188/raniz"}, "edited": false, "score": 0, "creation_date": 1573561194, "post_id": 58203041, "comment_id": 103914484, "body": "@Raniz your statement is generally true, but it doesn&#39;t apply here. <code>rusoto_credential</code> hard-codes <code>0.1.x</code> futures type in its api, I don&#39;t see a way around it. You may also be interested in what <code>rusoto</code> devs say about that <a href=\"https://github.com/rusoto/rusoto/issues/1583#issuecomment-551140997\" rel=\"nofollow noreferrer\">here</a>."}, {"owner": {"reputation": 9948, "user_id": 3182188, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/5da9598ac60c862b0e9494174f582e4e?s=128&d=identicon&r=PG", "display_name": "Raniz", "link": "https://stackoverflow.com/users/3182188/raniz"}, "edited": false, "score": 0, "creation_date": 1573562209, "post_id": 58203041, "comment_id": 103915048, "body": "Ok, so the compat feature is out, but you can still access 0.1.x futures by aliasing the package to futures01, then <code>use futures01::Future</code> in your own code that interfaces with <i>rusoto_credential</i>."}, {"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "reply_to_user": {"reputation": 9948, "user_id": 3182188, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/5da9598ac60c862b0e9494174f582e4e?s=128&d=identicon&r=PG", "display_name": "Raniz", "link": "https://stackoverflow.com/users/3182188/raniz"}, "edited": false, "score": 2, "creation_date": 1573565575, "post_id": 58203041, "comment_id": 103916862, "body": "@Raniz good point. I renamed the dependence in the code snippet to make it clear that it uses <code>0.1</code> branch of futures. Also make it convenient to use it alongside with <code>0.3</code> version."}, {"owner": {"reputation": 20521, "user_id": 1135424, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/rvwBS.jpg?s=128&g=1", "display_name": "nbari", "link": "https://stackoverflow.com/users/1135424/nbari"}, "edited": false, "score": 0, "creation_date": 1590081033, "post_id": 58203041, "comment_id": 109551805, "body": "@edwardw any idea about how to make this work for <code>rusoto 0.43</code>, I get <code>type </code>Future` is not a member of trait <code>ProvideAwsCredentials</code>"}], "tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": true, "score": 3, "last_activity_date": 1573565317, "last_edit_date": 1573565317, "creation_date": 1570024573, "answer_id": 58203041, "question_id": 58199587, "link": "https://stackoverflow.com/questions/58199587/how-can-i-fallback-to-credentials-from-a-file-if-no-environment-variables-are-fo/58203041#58203041", "title": "How can I fallback to credentials from a file if no environment variables are found?", "body": "<p>The <code>ChainProvider</code> actually has <a href=\"https://docs.rs/rusoto_credential/0.40.0/rusoto_credential/struct.ChainProvider.html\" rel=\"nofollow noreferrer\">four sources</a> to check for AWS credentials. The third one is the AWS configuration file located in user's home directory. But its format is predetermined.</p>\n\n<p>If you insist on using your own YAML file, you can chain <code>EnvironmentProvider</code> and <code>StaticProvider</code> together like so:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>//# futures01 = { package = \"futures\", version = \"0.1.28\" }\n//# rusoto_core = \"0.41.0\"\n//# rusoto_s3 = \"0.41.0\"\n//# rusoto_credential = \"0.41.1\"\nuse futures01::future::Future;\nuse rusoto_core::request::HttpClient;\nuse rusoto_core::Region;\nuse rusoto_credential::{\n    AwsCredentials,\n    CredentialsError,\n    EnvironmentProvider,\n    ProvideAwsCredentials,\n    StaticProvider,\n};\nuse rusoto_s3::{S3, S3Client};\nuse std::time::Instant;\n\nstruct MyChainProvider&lt;'a&gt; {\n    access_key: &amp;'a str,\n    secret_key: &amp;'a str,\n}\n\nimpl&lt;'a&gt; ProvideAwsCredentials for MyChainProvider&lt;'a&gt; {\n    type Future = Box&lt;dyn Future&lt;Item=AwsCredentials, Error=CredentialsError&gt; + Send&gt;;\n\n    fn credentials(&amp;self) -&gt; Self::Future {\n        let future = EnvironmentProvider::default().credentials()\n            .or_else({\n                let access_key = self.access_key.to_string();\n                let secret_key = self.secret_key.to_string();\n\n                move |_| -&gt; Self::Future {\n                    Box::new(StaticProvider::new_minimal(access_key, secret_key).credentials())\n                }\n            });\n\n        Box::new(future)\n    }\n}\n\nfn main() {\n    let chain = MyChainProvider {\n        access_key: ...,\n        secret_key: ...,\n    };\n\n    ...\n}\n</code></pre>\n"}], "owner": {"reputation": 20521, "user_id": 1135424, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/rvwBS.jpg?s=128&g=1", "display_name": "nbari", "link": "https://stackoverflow.com/users/1135424/nbari"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 452, "favorite_count": 2, "accepted_answer_id": 58203041, "answer_count": 1, "score": 2, "last_activity_date": 1573565317, "creation_date": 1570011443, "last_edit_date": 1570029216, "question_id": 58199587, "link": "https://stackoverflow.com/questions/58199587/how-can-i-fallback-to-credentials-from-a-file-if-no-environment-variables-are-fo", "title": "How can I fallback to credentials from a file if no environment variables are found?", "body": "<p>How could I fallback to use credentials from a parsed file (<code>config.yml</code>) if no environment variables were found? For testing, I am using <a href=\"https://github.com/rusoto/rusoto/issues/1082#issuecomment-419607904\" rel=\"nofollow noreferrer\">this example</a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate rusoto_core;\nextern crate rusoto_s3;\n\nuse rusoto_core::credential::ChainProvider;\nuse rusoto_core::request::HttpClient;\nuse rusoto_core::Region;\nuse rusoto_s3::{S3, S3Client};\nuse std::time::{Duration, Instant};\n\nfn main() {\n    let mut chain = ChainProvider::new();\n    chain.set_timeout(Duration::from_millis(200));\n    let s3client = S3Client::new_with(\n        HttpClient::new().expect(\"failed to create request dispatcher\"),\n        chain,\n        Region::UsEast1,\n    );\n\n    let start = Instant::now();\n    println!(\"Starting up at {:?}\", start);\n\n    match s3client.list_buckets().sync() {\n        Err(e) =&gt; println!(\"Error listing buckets: {}\", e),\n        Ok(buckets) =&gt; println!(\"Buckets found: {:?}\", buckets),\n    };\n    println!(\"Took {:?}\", Instant::now().duration_since(start));\n}\n</code></pre>\n\n<p>It works but requires the environment variables <code>AWS_ACCESS_KEY_ID</code> and <code>AWS_SECRET_ACCESS_KEY</code>. I would like to  extend it so that If there are no defined environment variables, I could use the keys found in a parsed file:</p>\n\n<pre><code>// parse config file\nlet file = std::fs::File::open(\"config.yml\").expect(\"Unable to open file\");\nlet yml: Config = match serde_yaml::from_reader(file) {\n    Err(err) =&gt; {\n        println!(\"Error: {}\", err);\n        return;\n    }\n    Ok(yml) =&gt; yml,\n};\n</code></pre>\n\n<p>The <code>config.yml</code> for example could be something like:</p>\n\n<pre><code>---\nendpoint: s3.provider\naccess_key: ACCESS_KEY_ID\nsecret_key: SECRET_ACCESS_KEY\n</code></pre>\n\n<p>What could I add to the <code>chain</code> to use the credentials found in the <code>config.yml</code>, something probably like:</p>\n\n<pre><code>let config_provider = StaticProvider::new_minimal(yml.access_key, yml.secret_key);\n</code></pre>\n\n<p>How to give preference to the environment and if not found then use the credentials provided by the <code>StaticProvider</code>?</p>\n"}, {"tags": ["testing", "rust", "integration", "rust-cargo"], "comments": [{"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1570005195, "post_id": 58197422, "comment_id": 102774027, "body": "That <a href=\"https://doc.rust-lang.org/book/ch11-02-running-tests.html#controlling-how-tests-are-run\" rel=\"nofollow noreferrer\">Reference</a> seems useful for you"}], "answers": [{"comments": [{"owner": {"reputation": 5906, "user_id": 474819, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/90031dd96e51d2025f48ce6805b550ec?s=128&d=identicon&r=PG", "display_name": "Nate Glenn", "link": "https://stackoverflow.com/users/474819/nate-glenn"}, "edited": false, "score": 2, "creation_date": 1584895866, "post_id": 58219775, "comment_id": 107574537, "body": "the <code>lib</code> lines work for me, but the <code>[[bin]]</code> part throws an exception: <code>binary target bin.name is required</code>"}], "tags": [], "owner": {"reputation": 47, "user_id": 11051073, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-6fV2GOKukpg/AAAAAAAAAAI/AAAAAAAAAAA/ACevoQNTRvwHgE60tu8ec1Xdd1pW1bvroQ/mo/photo.jpg?sz=128", "display_name": "Vasily Starostin", "link": "https://stackoverflow.com/users/11051073/vasily-starostin"}, "is_accepted": true, "score": 2, "last_activity_date": 1570107832, "creation_date": 1570107832, "answer_id": 58219775, "question_id": 58197422, "link": "https://stackoverflow.com/questions/58197422/how-to-run-library-and-integration-tests-only/58219775#58219775", "title": "How to run library and integration tests only?", "body": "<p>Well, I have found the solution. </p>\n\n<p>Package manifest file (Cargo.toml) must be modified like this:</p>\n\n<pre><code>[lib]\ndoctest = false\n\n[[bin]]\ntest = false\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 613, "user_id": 1008620, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/df08d91aa7638a8900635ff052ea316c?s=128&d=identicon&r=PG", "display_name": "pmeyer", "link": "https://stackoverflow.com/users/1008620/pmeyer"}, "is_accepted": false, "score": 0, "last_activity_date": 1608323100, "creation_date": 1608323100, "answer_id": 65363481, "question_id": 58197422, "link": "https://stackoverflow.com/questions/58197422/how-to-run-library-and-integration-tests-only/65363481#65363481", "title": "How to run library and integration tests only?", "body": "<p>(since I can't format this in a comment...)</p>\n<p>You need to specify your binary name (definitely if you have more than one):</p>\n<pre><code>[[bin]] \nname = &quot;check_dir&quot; \ntest = false\n\n[[bin]]\nname = &quot;other&quot;\ntest = false\n</code></pre>\n"}], "owner": {"reputation": 47, "user_id": 11051073, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-6fV2GOKukpg/AAAAAAAAAAI/AAAAAAAAAAA/ACevoQNTRvwHgE60tu8ec1Xdd1pW1bvroQ/mo/photo.jpg?sz=128", "display_name": "Vasily Starostin", "link": "https://stackoverflow.com/users/11051073/vasily-starostin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 471, "favorite_count": 0, "accepted_answer_id": 58219775, "answer_count": 2, "score": 3, "last_activity_date": 1608323100, "creation_date": 1570003185, "last_edit_date": 1570062938, "question_id": 58197422, "link": "https://stackoverflow.com/questions/58197422/how-to-run-library-and-integration-tests-only", "title": "How to run library and integration tests only?", "body": "<p>I have a project with a library and two executables. When I run <code>cargo test</code>, it runs five executables: the unit tests for the library and both executables, integration tests, and doc tests. </p>\n\n<p>Since I have only library and integration tests, I get annoying output like:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>running 0 tests                                                           \ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out\n</code></pre>\n\n<p>I have tried to filter it with Cargo parameters but failed. If I use <code>--lib</code> then no integration tests are run. I didn't find a way to run integration tests only or to skip doc or executable tests.</p>\n\n<p>Is there any way to run only integration and library unit tests?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 4, "creation_date": 1570013035, "post_id": 58196136, "comment_id": 102777764, "body": "This function ought to be declared <code>unsafe</code>, because it&#39;s not safe in general for all <code>T</code> (e.g. if I call <code>i_from_slice&lt;&amp;u8&gt;(&amp;[0; std::mem::size_of::&lt;&amp;u8&gt;])</code>, then I&#39;ve just triggered undefined behavior. Safe Rust should not be able to have undefined behavior.). Alternatively, define an <code>unsafe trait TransmuteFromBytes</code> (as a marker trait), implement it for the types you need, and add the bound <code>T: TransmuteFromBytes</code> to <code>i_from_slice</code>."}], "answers": [{"comments": [{"owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 0, "creation_date": 1570001209, "post_id": 58196432, "comment_id": 102772223, "body": "This also does not give correct results, for the same reason I gave under Jmb&#39;s answer."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1570029847, "post_id": 58196432, "comment_id": 102787338, "body": "See <a href=\"https://stackoverflow.com/questions/58196136/use-of-size-in-generic-function#comment102777764_58196136\">Francis Gagn&#233;&#39;s comment</a>"}], "tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": false, "score": 2, "last_activity_date": 1570029339, "last_edit_date": 1570029339, "creation_date": 1569998749, "answer_id": 58196432, "question_id": 58196136, "link": "https://stackoverflow.com/questions/58196136/cannot-create-a-generic-function-that-transmutes-a-slice-of-bytes-into-an-intege/58196432#58196432", "title": "Cannot create a generic function that transmutes a slice of bytes into an integer because the size is not known at compile time", "body": "<blockquote>\n  <p>Is there a way that i can know statically the size of T?</p>\n</blockquote>\n\n<p>Yes, you do know the size at compile time. But the size can vary and is not a constant. Instead of using a fixed-size array, you can use a vector which is a contiguous growable array.</p>\n\n<p>Also, <a href=\"https://doc.rust-lang.org/std/marker/trait.Sized.html\" rel=\"nofollow noreferrer\"><code>Sized</code></a> is an opt-out marker trait. All type parameters have an implicit <code>Sized</code> bound. You don't need to spell that fact out.</p>\n\n<p>You need a match arm guard to use pattern matching the way you did, but it is more straightforward to use if-else expression here.</p>\n\n<p>All in all, this works:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn i_from_slice&lt;T&gt;(slice: &amp;[u8]) -&gt; Option&lt;T&gt; {\n    let n = std::mem::size_of::&lt;T&gt;();\n    if slice.len() == n {\n        let mut buf = vec![0; n];\n        buf.copy_from_slice(slice);\n        Some(unsafe { std::mem::transmute_copy(&amp;buf) })\n    } else {\n        None\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 3, "creation_date": 1570001084, "post_id": 58196627, "comment_id": 102772167, "body": "This does not seem to give correct results, unless you change <code>&amp;slice</code> to <code>&amp;slice[0]</code>. I believe you are transmuting the bytes of the actual slice object (a fat pointer), not the data it points to. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b27216f60477c75748ecd87074e3856c\" rel=\"nofollow noreferrer\">playground</a>"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "reply_to_user": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 0, "creation_date": 1570009495, "post_id": 58196627, "comment_id": 102776173, "body": "@BenjaminLindley true, I&#39;d only checked that it compiled (the issue with the wrong result was already present in the OP code). I&#39;ll edit the answer."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1570029841, "post_id": 58196627, "comment_id": 102787334, "body": "See <a href=\"https://stackoverflow.com/questions/58196136/use-of-size-in-generic-function#comment102777764_58196136\">Francis Gagn&#233;&#39;s comment</a>"}], "tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 2, "last_activity_date": 1570029290, "last_edit_date": 1570029290, "creation_date": 1569999707, "answer_id": 58196627, "question_id": 58196136, "link": "https://stackoverflow.com/questions/58196136/cannot-create-a-generic-function-that-transmutes-a-slice-of-bytes-into-an-intege/58196627#58196627", "title": "Cannot create a generic function that transmutes a slice of bytes into an integer because the size is not known at compile time", "body": "<p>You don't need your intermediate buffer, you can call <code>transmute_copy</code> directly on the input slice. Moreover, as pointed out by @BenjaminLindley in the comments, you need to make sure that you transmute from the first item in the slice and not the fat pointer that is the slice itself:</p>\n\n<pre><code>fn i_from_slice&lt;T&gt;(slice: &amp;[u8]) -&gt; Option&lt;T&gt; {\n    if slice.len() == std::mem::size_of::&lt;T&gt;() {\n        Some(unsafe { std::mem::transmute_copy(&amp;slice[0]) })\n    } else {\n        None\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 4, "last_activity_date": 1570032107, "last_edit_date": 1570032107, "creation_date": 1570009800, "answer_id": 58199155, "question_id": 58196136, "link": "https://stackoverflow.com/questions/58196136/cannot-create-a-generic-function-that-transmutes-a-slice-of-bytes-into-an-intege/58199155#58199155", "title": "Cannot create a generic function that transmutes a slice of bytes into an integer because the size is not known at compile time", "body": "<p>If your <code>T</code> is an integer, you don't need any unsafe code, since there is <a href=\"https://doc.rust-lang.org/std/primitive.i32.html#method.from_ne_bytes\" rel=\"nofollow noreferrer\"><code>from_ne_bytes</code></a>.</p>\n\n<p>If you absolutely want a generic function, you can add a trait:</p>\n\n<pre><code>use std::convert::TryInto;\n\ntrait FromBytes: Sized {\n    fn from_ne_bytes_(bytes: &amp;[u8]) -&gt; Option&lt;Self&gt;;\n}\n\nimpl FromBytes for i32 {\n    fn from_ne_bytes_(bytes: &amp;[u8]) -&gt; Option&lt;Self&gt; {\n        bytes.try_into().map(i32::from_ne_bytes).ok()\n    }\n}\n\n// Etc. for the other numeric types.\n\nfn main() {\n    let i1: i32 = i_from_slice(&amp;[1, 2, 3, 4]).unwrap();\n    let i2 = i32::from_ne_bytes_(&amp;[1, 2, 3, 4]).unwrap();\n\n    assert_eq!(i1, i2);\n}\n\n// This `unsafe` usage is invalid, but copied from the original post\n// to compare the result with my implementation.\nfn i_from_slice&lt;T&gt;(slice: &amp;[u8]) -&gt; Option&lt;T&gt; {\n    if slice.len() == std::mem::size_of::&lt;T&gt;() {\n        Some(unsafe { std::mem::transmute_copy(&amp;slice[0]) })\n    } else {\n        None\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 85, "user_id": 8003030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4dc32b4332c9f7cb9cf94cef878b1a65?s=128&d=identicon&r=PG&f=1", "display_name": "Le Marin", "link": "https://stackoverflow.com/users/8003030/le-marin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 403, "favorite_count": 1, "accepted_answer_id": 58199155, "answer_count": 3, "score": 2, "last_activity_date": 1570032462, "creation_date": 1569997106, "last_edit_date": 1570032462, "question_id": 58196136, "link": "https://stackoverflow.com/questions/58196136/cannot-create-a-generic-function-that-transmutes-a-slice-of-bytes-into-an-intege", "title": "Cannot create a generic function that transmutes a slice of bytes into an integer because the size is not known at compile time", "body": "<p>I'm trying to create a generic function that transmutes a slice of bytes into an integer. </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn i_from_slice&lt;T&gt;(slice: &amp;[u8]) -&gt; Option&lt;T&gt;\nwhere\n    T: Sized,\n{\n    match slice.len() {\n        std::mem::size_of::&lt;T&gt;() =&gt; {\n            let mut buf = [0; std::mem::size_of::&lt;T&gt;()];\n            buf.copy_from_slice(slice);\n            Some(unsafe { std::mem::transmute_copy(&amp;buf) })\n        }\n        _ =&gt; None,\n    }\n}\n</code></pre>\n\n<p>Rust won't let me do that:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0532]: expected tuple struct/variant, found function `std::mem::size_of`\n --&gt; src/lib.rs:6:9\n  |\n6 |         std::mem::size_of::&lt;T&gt;() =&gt; {\n  |         ^^^^^^^^^^^^^^^^^^^^^^ not a tuple struct/variant\n\nerror[E0277]: the size for values of type `T` cannot be known at compilation time\n --&gt; src/lib.rs:7:31\n  |\n7 |             let mut buf = [0; std::mem::size_of::&lt;T&gt;()];\n  |                               ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n  |\n  = help: the trait `std::marker::Sized` is not implemented for `T`\n  = note: to learn more, visit &lt;https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait&gt;\n  = help: consider adding a `where T: std::marker::Sized` bound\n  = note: required by `std::mem::size_of`\n</code></pre>\n\n<p>Is there a way that I can statically know the size of <code>T</code>?</p>\n"}, {"tags": ["json", "rust", "serde"], "answers": [{"tags": [], "owner": {"reputation": 5770, "user_id": 1864688, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/30ec1d0b078274a7bb0181b95ef7dc41?s=128&d=identicon&r=PG&f=1", "display_name": "guest", "link": "https://stackoverflow.com/users/1864688/guest"}, "is_accepted": false, "score": 3, "last_activity_date": 1569993257, "creation_date": 1569993257, "answer_id": 58195549, "question_id": 58195348, "link": "https://stackoverflow.com/questions/58195348/why-does-this-json-parse-fail-in-the-specified-location-in-rust/58195549#58195549", "title": "Why does this JSON parse fail in the specified location in Rust?", "body": "<p>The type of <code>res</code> is determined by the <code>let p: JData</code> at compile time, even if control never reaches that line at runtime. That type, <code>Result&lt;JData, \u2026&gt;</code>, controls the behavior of <code>serde_json::from_str</code>, which causes it to fail at reading string literals in to <code>u8</code>s.</p>\n"}], "owner": {"reputation": 1691, "user_id": 6396569, "user_type": "registered", "accept_rate": 61, "profile_image": "https://lh3.googleusercontent.com/-f0efiZGjd9s/AAAAAAAAAAI/AAAAAAAAAFQ/A1O5wGFybXA/photo.jpg?sz=128", "display_name": "the_endian", "link": "https://stackoverflow.com/users/6396569/the-endian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 60, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1569993257, "creation_date": 1569991597, "question_id": 58195348, "link": "https://stackoverflow.com/questions/58195348/why-does-this-json-parse-fail-in-the-specified-location-in-rust", "title": "Why does this JSON parse fail in the specified location in Rust?", "body": "<p>The following Rust program works fine using <code>cargo run</code> on cargo 1.39.0-nightly:</p>\n\n<pre><code>extern crate serde;\nextern crate serde_json;\n#[macro_use]\nextern crate serde_derive;\nuse serde_json::Value as JsonValue;\n\n#[derive(Serialize,Deserialize)]\nstruct JData\n{\n    names: Vec&lt;String&gt;\n}\nfn main() {\n    let json_str = r#\"\n\n    {\n        \"names\": [\"James\", \"Carl\", \"Megan\"]\n    }   \n\n    \"#;\n\n    let res = serde_json::from_str(json_str); // res is Result\n\n    if res.is_ok()\n    {\n        let p: JData = res.unwrap();\n\n        println!(\"{}\", p.names[1]);\n    }\n    else\n    {\n        eprintln!(\"Sorry, couldn't parse JSON :(\");\n    }\n\n}\n</code></pre>\n\n<p>However, if I change the line <code>names: Vec&lt;String&gt;</code> to <code>names: Vec&lt;u8&gt;</code> it fails with this error:</p>\n\n<blockquote>\n  <p>Sorry, couldn't parse JSON :(</p>\n</blockquote>\n\n<p>Understandbly, this program should fail. But I don't understand why it reaches this line since this error is displayed as a result of <code>let res = serde_json::from_str(json_str);</code> which has nothing to do with the <code>let p: JData = res.unwrap();</code> step of the program. In other words, the <code>from_str()</code> line has no dependency on the subsequent try to parse into JData struct line, yet the error indicates that the <code>from_str()</code> line failed, not that it could not parse into <code>JData</code>.</p>\n"}, {"tags": ["linked-list", "rust", "mutability"], "comments": [{"owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "edited": false, "score": 1, "creation_date": 1569986690, "post_id": 58193984, "comment_id": 102768367, "body": "Is there something you don&#39;t understand about the compiler message? You can only borrow mutable variables as mutable and <code>self</code> is by default immutable, so either you need to make the function take <code>mut self</code> (as is suggested by the compiler) or make a new variable that <i>is</i> mutable (as in your original code)."}, {"owner": {"reputation": 1406, "user_id": 6265630, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/5QG6X.jpg?s=128&g=1", "display_name": "Nakor", "link": "https://stackoverflow.com/users/6265630/nakor"}, "reply_to_user": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "edited": false, "score": 0, "creation_date": 1569988295, "post_id": 58193984, "comment_id": 102768622, "body": "<code>self</code> is not mutable since I passed it as immutable in the inputs. However, I can make it mutable by mutably assigning it to a variable (I guess it makes sense since I own it, but I was still surprised I didn&#39;t get any complaint from Rust since I declared it as not mutable). But then it seems weird to me that I cannot pass a mutable reference to an owned variable"}], "answers": [{"comments": [{"owner": {"reputation": 1406, "user_id": 6265630, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/5QG6X.jpg?s=128&g=1", "display_name": "Nakor", "link": "https://stackoverflow.com/users/6265630/nakor"}, "edited": false, "score": 0, "creation_date": 1569995531, "post_id": 58195363, "comment_id": 102770123, "body": "That makes sense (I think). So, another thing that worked for me was to change my <code>into_rec()</code> function signature with <code>(mut list: SimpleLinkedList&lt;T&gt;, v: &amp;mut Vec&lt;T&gt;)</code> and call <code>into_rec(self, &amp;mut res);</code>.  If I understand correctly, this one works because the function definition works as an assignment (it basically does <code>let mut list = self</code>), whereas in the other case, I can&#39;t do <code>let list = &amp;mut self</code> because if assumes <code>self</code> is already mutable."}], "tags": [], "owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "is_accepted": true, "score": 0, "last_activity_date": 1569991760, "creation_date": 1569991760, "answer_id": 58195363, "question_id": 58193984, "link": "https://stackoverflow.com/questions/58193984/cannot-pass-mutable-reference-to-self-directly/58195363#58195363", "title": "Cannot pass mutable reference to self directly", "body": "<p>The problem is that the owned variables intended to be directly mutable must be mutably bound.</p>\n\n<p>When you declare a variable or an function argument, this could be unified as declaring a <em>binding</em> of value to some name - either with keyword <code>let</code> or with brackets surrounding arguments list. This binding can be mutable or immutable, depending of presence or absence of <code>mut</code> keyword.</p>\n\n<p>If you declare the binding as immutable, i.e. omit the <code>mut</code> keyword, the compiler states that you won't acquire the unique reference to it (and hence won't mutate the value, modulo any <code>UnsafeCell</code>s inside it). Therefore, if you're trying to get <code>&amp;mut</code> reference to it, this is an error.</p>\n\n<p>To fix the error, you can either rebind the variable mutably, effectively discarding the previous binding (if the value is not <code>Copy</code>), or bind it mutably at the first place - since this is a part of binding and not of the variable declaration, it can be used the same in function declaration, as well as in the <code>let</code> statement.</p>\n"}], "owner": {"reputation": 1406, "user_id": 6265630, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/5QG6X.jpg?s=128&g=1", "display_name": "Nakor", "link": "https://stackoverflow.com/users/6265630/nakor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1012, "favorite_count": 0, "accepted_answer_id": 58195363, "answer_count": 1, "score": 0, "last_activity_date": 1569991760, "creation_date": 1569977952, "question_id": 58193984, "link": "https://stackoverflow.com/questions/58193984/cannot-pass-mutable-reference-to-self-directly", "title": "Cannot pass mutable reference to self directly", "body": "<p>I am currently working on Rust implementation on Linked List. Before anything, I have read the rust documentation on <a href=\"https://rust-unofficial.github.io/too-many-lists/first-push.html\" rel=\"nofollow noreferrer\">Learning Rust With Entirely Too Many Linked Lists</a>. But I am still struggling a little bit to understand errors I get when I implement the <code>into()</code> trait.</p>\n\n<p>Here is how I implemented it (and it seems to work now):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl&lt;T&gt; Into&lt;Vec&lt;T&gt;&gt; for SimpleLinkedList&lt;T&gt; {\n    fn into(self) -&gt; Vec&lt;T&gt; {\n        let mut res = Vec::new();\n        let mut mutable_to_self = self;\n\n        fn into_rec&lt;T&gt;(list: &amp;mut SimpleLinkedList&lt;T&gt;, v: &amp;mut Vec&lt;T&gt;) {\n            if let Some(x) = list.pop() {\n                into_rec(list, v);\n                v.push(x);\n            }\n        }\n\n        into_rec(&amp;mut mutable_to_self, &amp;mut res);\n        res\n</code></pre>\n\n<p>What I am confused about it the need for <code>mutable_to_self</code>.\nAt first, I tried to get rid of this variable and just pass <code>&amp;mut self</code> directly to <code>into_rec()</code> (To me, this is strictly the same). However, when I do that, I get:</p>\n\n<pre><code>error[E0596]: cannot borrow `self` as mutable, as it is not declared as mutable\n  --&gt; src/lib.rs:93:18\n   |\n82 |     fn into(self) -&gt; Vec&lt;T&gt; {\n   |             ---- help: consider changing this to be mutable: `mut self`\n...\n93 |         into_rec(&amp;mut self, &amp;mut res);\n   |                  ^^^^^^^^^ cannot borrow as mutable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0596`.\nerror[E0596]: cannot borrow `self` as mutable, as it is not declared as mutable\n  --&gt; src/lib.rs:93:18\n   |\n82 |     fn into(self) -&gt; Vec&lt;T&gt; {\n   |             ---- help: consider changing this to be mutable: `mut self`\n...\n93 |         into_rec(&amp;mut self, &amp;mut res);\n   |                  ^^^^^^^^^ cannot borrow as mutable\n</code></pre>\n\n<p>So I am unsure what's wrong with the second implementation.</p>\n"}, {"tags": ["rust", "wasm-bindgen"], "comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1569945925, "post_id": 58188615, "comment_id": 102756956, "body": "There&#39;s not much type control at the boundary between the DOM and Rust in wasm_bindgen. I think it&#39;s the job of an additional lib or framework (which can be small and your own, you don&#39;t <i>have</i> to use another crate for that)."}, {"owner": {"reputation": 13, "user_id": 12149543, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-3Pcdt5rTdUg/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3reTZWrR-KZyzx_Hfp9DaARGQcCOZQ/photo.jpg?sz=128", "display_name": "Jason Rowland", "link": "https://stackoverflow.com/users/12149543/jason-rowland"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1569946134, "post_id": 58188615, "comment_id": 102757068, "body": "I don&#39;t even know where to go to look on how to check to see if it is indeed a canvas object in my code."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1569946198, "post_id": 58188615, "comment_id": 102757099, "body": "In most cases, you can check using <code>dyn_into</code> (like <a href=\"https://github.com/Canop/wasm-tictactoe/blob/master/src/domus.rs#L38\" rel=\"nofollow noreferrer\">this</a>)"}, {"owner": {"reputation": 13, "user_id": 12149543, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-3Pcdt5rTdUg/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3reTZWrR-KZyzx_Hfp9DaARGQcCOZQ/photo.jpg?sz=128", "display_name": "Jason Rowland", "link": "https://stackoverflow.com/users/12149543/jason-rowland"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1569946938, "post_id": 58188615, "comment_id": 102757406, "body": "#[wasm_bindgen] pub fn setElement(canvas: HtmlCanvasElement) -&gt; Result&lt;(), JsValue&gt; {    match canvas.dyn_into::&lt;HtmlCanvasElement&gt;() ... ...  This seems strange to dyn cast it to the same type"}, {"owner": {"reputation": 13, "user_id": 12149543, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-3Pcdt5rTdUg/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3reTZWrR-KZyzx_Hfp9DaARGQcCOZQ/photo.jpg?sz=128", "display_name": "Jason Rowland", "link": "https://stackoverflow.com/users/12149543/jason-rowland"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1569947120, "post_id": 58188615, "comment_id": 102757494, "body": "Thank you so much for this! While I don&#39;t understand what&#39;s going on here, it does work.  Where would you suggest I go to read more about the inner workings on why this works?"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1569947197, "post_id": 58188615, "comment_id": 102757534, "body": "I&#39;ll make an answer with some references, as it looks like it solves your problem, OK ?"}, {"owner": {"reputation": 13, "user_id": 12149543, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-3Pcdt5rTdUg/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3reTZWrR-KZyzx_Hfp9DaARGQcCOZQ/photo.jpg?sz=128", "display_name": "Jason Rowland", "link": "https://stackoverflow.com/users/12149543/jason-rowland"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1569947680, "post_id": 58188615, "comment_id": 102757749, "body": "Yes, that&#39;s great"}], "answers": [{"tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": true, "score": 1, "last_activity_date": 1569948531, "last_edit_date": 1569948531, "creation_date": 1569947456, "answer_id": 58188975, "question_id": 58188615, "link": "https://stackoverflow.com/questions/58188615/how-do-i-ensure-the-right-html-element-is-passed-from-javascript-to-my-rust-func/58188975#58188975", "title": "How do I ensure the right HTML element is passed from JavaScript to my Rust function?", "body": "<p>There's not much type control at the boundary between the DOM and Rust in wasm_bindgen. The JavaScript part handles what is seen from Rust as <code>JsValue</code>.</p>\n\n<p>It means you have to do the checked conversions yourself (or let a future lib or framework do it for you).</p>\n\n<p>The <a href=\"https://rustwasm.github.io/wasm-bindgen/api/wasm_bindgen/trait.JsCast.html\" rel=\"nofollow noreferrer\"><code>JsCast</code> trait</a> helps for this. It lets you write this for example:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[wasm_bindgen]\npub fn setElement(canvas: JsValue) -&gt; Result&lt;(), JsValue&gt; {\n    match canvas.dyn_into::&lt;HtmlCanvasElement&gt;() {\n        Ok(canvas) =&gt; {\n            // ...\n\n            Ok(())\n        }\n        Err(_) =&gt; Err(JsValue::from_str(\"argument not a HtmlCanvas\")),\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 13, "user_id": 12149543, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-3Pcdt5rTdUg/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3reTZWrR-KZyzx_Hfp9DaARGQcCOZQ/photo.jpg?sz=128", "display_name": "Jason Rowland", "link": "https://stackoverflow.com/users/12149543/jason-rowland"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 141, "favorite_count": 1, "accepted_answer_id": 58188975, "answer_count": 1, "score": 1, "last_activity_date": 1569948531, "creation_date": 1569945813, "last_edit_date": 1569947341, "question_id": 58188615, "link": "https://stackoverflow.com/questions/58188615/how-do-i-ensure-the-right-html-element-is-passed-from-javascript-to-my-rust-func", "title": "How do I ensure the right HTML element is passed from JavaScript to my Rust function?", "body": "<p>If I create a Rust function with wasm_bindgen that accepts an <code>HtmlCanvasElement</code>, how do I make sure it fails when it gets to the Rust side?</p>\n\n<p>JavaScript:</p>\n\n<pre><code>(async () =&gt; {\n    const demo = await import('./pkg/demo').catch(console.error);\n    demo.setCanvas('Hello Element!');  \n})();\n</code></pre>\n\n<p>Rust:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use wasm_bindgen::prelude::*;\nuse web_sys::{console, HtmlCanvasElement};\n\n#[wasm_bindgen]\npub fn setCanvas(canvas: &amp;HtmlCanvasElement) {\n    //  Why does this even get here? I didn't pass in an HtmlCanvasElement\n    console::log_1(&amp;canvas);\n}\n</code></pre>\n\n<p>It looks like I'm getting the type <code>HtmlCanvasElement</code> but if I try to use it as an <code>HtmlCanvasElement</code>, it doesn't have the functions because I'm passing in a string instead of the actual canvas element. I want it to fail when I set it, not at some later time when I try to use it.</p>\n"}, {"tags": ["string", "vector", "rust", "byte"], "comments": [{"owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "edited": false, "score": 0, "creation_date": 1569939677, "post_id": 58186735, "comment_id": 102753336, "body": "<code>&amp;str</code> has <code>as_bytes()</code>, which returns a <code>&amp;[u8]</code>, which will probably work just fine. If you truly need a <code>Vec</code>, use <code>.as_bytes().to_vec()</code>."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1569940153, "post_id": 58186735, "comment_id": 102753672, "body": "I guess you are searching for this -&gt; <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=23c6d14c76884326b42361636ed7a3d0\" rel=\"nofollow noreferrer\">Playground</a>"}, {"owner": {"reputation": 55, "user_id": 9917775, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/25111716e0cfd63d268939e3ad2671de?s=128&d=identicon&r=PG", "display_name": "LazyEmpiricist", "link": "https://stackoverflow.com/users/9917775/lazyempiricist"}, "edited": false, "score": 0, "creation_date": 1569940362, "post_id": 58186735, "comment_id": 102753820, "body": "Unfortunately <code>.as_bytes().to_vec()</code> won&#39;t work. <code>&quot;[136, 136, 144,...]&quot; will result in </code>[91, 49, 51, 54, 44, 32, 49, 51, 54...]` not <code>[136, 136, 144,...]</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569940688, "post_id": 58186735, "comment_id": 102754047, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/34090639/155423\">How do I convert a vector of strings to a vector of integers in a functional way?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/58186735/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 55, "user_id": 9917775, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/25111716e0cfd63d268939e3ad2671de?s=128&d=identicon&r=PG", "display_name": "LazyEmpiricist", "link": "https://stackoverflow.com/users/9917775/lazyempiricist"}, "edited": false, "score": 0, "creation_date": 1569942238, "post_id": 58186735, "comment_id": 102755008, "body": "Added an example with assert_eq!  I am not able to make the solution in &quot;How do I convert a vector of strings to a vector of integers in a functional way&quot; working in my example, although they are similar."}], "answers": [{"comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1569939757, "post_id": 58186864, "comment_id": 102753393, "body": "input is a number like &quot;162&quot; or &quot;254&quot; not abc, op wants to convert &quot;162&quot;:&amp;str to 162u8"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1569940789, "post_id": 58186864, "comment_id": 102754102, "body": "Note that in the example given by the OP, the array is bracketed by <code>[]</code>, so he will have to get rid of those"}, {"owner": {"reputation": 20880, "user_id": 1317944, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/OcBMY.png?s=128&g=1", "display_name": "The Quantum Physicist", "link": "https://stackoverflow.com/users/1317944/the-quantum-physicist"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1569940924, "post_id": 58186864, "comment_id": 102754196, "body": "@Jmb I&#39;m hesitating to add a simple <code>.replace()</code>... because it&#39;s too trivial..."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1569942047, "post_id": 58186864, "comment_id": 102754896, "body": "Why do you use all those temporary bindings? That feels weird: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=72d5e7c94ffb8b8fd53199c7eec5d7f0\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 20880, "user_id": 1317944, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/OcBMY.png?s=128&g=1", "display_name": "The Quantum Physicist", "link": "https://stackoverflow.com/users/1317944/the-quantum-physicist"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1569942081, "post_id": 58186864, "comment_id": 102754919, "body": "@FrenchBoiethios Because I come from a C++ background :D . I fixed my code ;-)"}, {"owner": {"reputation": 55, "user_id": 9917775, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/25111716e0cfd63d268939e3ad2671de?s=128&d=identicon&r=PG", "display_name": "LazyEmpiricist", "link": "https://stackoverflow.com/users/9917775/lazyempiricist"}, "edited": false, "score": 0, "creation_date": 1569942686, "post_id": 58186864, "comment_id": 102755271, "body": "Thanks. That did it! <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=29fbf8d9b213af4918eed9befb17e4a5\" rel=\"nofollow noreferrer\">Here is an example</a> with the solution on the Playground:"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1569942719, "post_id": 58186864, "comment_id": 102755293, "body": "@TheQuantumPhysicist Well, I wouldn&#39;t say that it needed to be &quot;fixed&quot;, but that feels more idiomatic IMO."}, {"owner": {"reputation": 20880, "user_id": 1317944, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/OcBMY.png?s=128&g=1", "display_name": "The Quantum Physicist", "link": "https://stackoverflow.com/users/1317944/the-quantum-physicist"}, "reply_to_user": {"reputation": 55, "user_id": 9917775, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/25111716e0cfd63d268939e3ad2671de?s=128&d=identicon&r=PG", "display_name": "LazyEmpiricist", "link": "https://stackoverflow.com/users/9917775/lazyempiricist"}, "edited": false, "score": 1, "creation_date": 1569943016, "post_id": 58186864, "comment_id": 102755432, "body": "@LazyEmpiricist Just be aware that using <code>unwrap</code> in production code is a bad idea."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1569943115, "post_id": 58186864, "comment_id": 102755489, "body": "Using <code>trim_{start,end}_matches</code> is more efficient than <code>replace</code>."}, {"owner": {"reputation": 20880, "user_id": 1317944, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/OcBMY.png?s=128&g=1", "display_name": "The Quantum Physicist", "link": "https://stackoverflow.com/users/1317944/the-quantum-physicist"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569943150, "post_id": 58186864, "comment_id": 102755516, "body": "@Shepmaster I was curious about that. It was obvious that looping over the string twice isn&#39;t the best way to go. Can you please provide a playground example?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569943188, "post_id": 58186864, "comment_id": 102755532, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=805dce9b741c905c1c928ca2d5a19de0\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>. The <i>loops</i> are still there, but the <i>allocation</i> is removed. To remove the loops, see <a href=\"https://stackoverflow.com/q/27476895/155423\">Running a number of consecutive replacements on the same string</a>"}, {"owner": {"reputation": 20880, "user_id": 1317944, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/OcBMY.png?s=128&g=1", "display_name": "The Quantum Physicist", "link": "https://stackoverflow.com/users/1317944/the-quantum-physicist"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569943376, "post_id": 58186864, "comment_id": 102755655, "body": "@Shepmaster Thanks. Updated the code. The loop will be there anyway, that&#39;s a given. But it&#39;ll not loop over the whole string. Just from the beginning to the first instance, and to the last one from behind. That&#39;s the optimization I was looking for."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569943499, "post_id": 58186864, "comment_id": 102755722, "body": "If you wanted to remove the multiple loops, you could split on multiple characters (<code>.split(&amp;[&#39;,&#39;, &#39;[&#39;, &#39;]&#39;][..])</code>), but only profiling would show which path is faster."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569945769, "post_id": 58186864, "comment_id": 102756876, "body": "@Shepmaster I would use <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=3509a042bc3d411e109e2e04aa74b040\" rel=\"nofollow noreferrer\"><code>try_fold</code></a> instead of silently ignore the errors"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1569947245, "post_id": 58186864, "comment_id": 102757550, "body": "@FrenchBoiethios I&#39;d probably just use <code>collect</code> if I cared about the errors. Both versions (ignoring and keeping the errors) are presented in the duplicate question."}], "tags": [], "owner": {"reputation": 20880, "user_id": 1317944, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/OcBMY.png?s=128&g=1", "display_name": "The Quantum Physicist", "link": "https://stackoverflow.com/users/1317944/the-quantum-physicist"}, "is_accepted": true, "score": 3, "last_activity_date": 1569945173, "last_edit_date": 1569945173, "creation_date": 1569939681, "answer_id": 58186864, "question_id": 58186735, "link": "https://stackoverflow.com/questions/58186735/how-do-i-convert-the-string-1-2-3-into-a-vecu8/58186864#58186864", "title": "How do I convert the string &quot;[1, 2, 3]&quot; into a Vec&lt;u8&gt;?", "body": "<p>I believe that does it.</p>\n\n<pre><code>fn main() {\n    let s = \"[162, 254, 28, 241]\";\n    let v: Vec&lt;u8&gt; = s\n        .trim_start_matches('[')\n        .trim_end_matches(']')\n        .split(',')\n        .map(|c| c.trim().parse::&lt;u8&gt;().unwrap())\n        .collect();\n\n    for n in v {\n        println!(\"{}\", n);\n    }\n}\n</code></pre>\n\n<p>Try it <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=70c1f58ed9ce0658ede98cdff3d724df\" rel=\"nofollow noreferrer\">here</a>.</p>\n"}], "owner": {"reputation": 55, "user_id": 9917775, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/25111716e0cfd63d268939e3ad2671de?s=128&d=identicon&r=PG", "display_name": "LazyEmpiricist", "link": "https://stackoverflow.com/users/9917775/lazyempiricist"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 173, "favorite_count": 0, "closed_date": 1569943087, "accepted_answer_id": 58186864, "answer_count": 1, "score": 3, "last_activity_date": 1569945173, "creation_date": 1569939317, "last_edit_date": 1569942001, "question_id": 58186735, "link": "https://stackoverflow.com/questions/58186735/how-do-i-convert-the-string-1-2-3-into-a-vecu8", "closed_reason": "Duplicate", "title": "How do I convert the string &quot;[1, 2, 3]&quot; into a Vec&lt;u8&gt;?", "body": "<p>I'm passing an encrypted message between client/server over TCP using <a href=\"https://github.com/RustCrypto/AEADs/tree/master/aes-gcm-siv\" rel=\"nofollow noreferrer\">AES-GCM-SIV</a>. The received buffer is converted to <code>String</code> and divided into several <code>Vec&lt;&amp;str&gt;</code> using</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let v: Vec&lt;&amp;str&gt; = buffer_string.split(\"?+\").collect();\n</code></pre>\n\n<p>Example of v: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[\"POST / HTTP/1.1\\\\r\\\\n\\\\\", \"Uaxh5NUi098q\", \"178\", \"[162, 254, 28, 241, ... ]\"]\n</code></pre>\n\n<p><code>v[3]</code> should be the ciphertext as <code>Vec&lt;u8&gt;</code>. How can the vector be used as <code>Vec&lt;u8&gt;</code>? </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>iter().map(|c| *c as u8).collect()\n</code></pre>\n\n<p>would work with <code>chars</code>, not <code>&amp;str</code>.</p>\n\n<p>Here's a complete example <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=29fbf8d9b213af4918eed9befb17e4a5\" rel=\"nofollow noreferrer\">on the Playground</a>:</p>\n\n<pre><code>fn main() {\n    let buffer_string = r##\"POST /chat HTTP/1.1\\r\\n\\?+rRMUG4Lg8Gi6?+178?+[136, 136, 144, 59, 173, 25, 204, 247, 151, 53, 2, 137, 100, 45, 198, 58, 65, 210, 134, 165, 163, 156, 136, 148, 46, 31, 16, 184, 179, 73, 220, 14, 113, 152, 85, 1, 233, 208, 53, 27, 124, 52, 41, 175, 86, 109, 134, 103, 93, 148, 208, 114, 123, 97, 18, 53, 149, 195, 51, 55, 213, 114, 184, 72, 109, 30, 217, 206, 212, 58, 253, 141, 9, 45, 173, 213, 96, 35, 77, 122, 113, 240, 22, 222, 194, 11, 123, 221, 176, 116, 161, 196, 84, 203, 203, 184, 140, 42, 169, 244, 211, 1, 189, 96, 16, 62, 173, 50, 65, 48, 176, 44, 176, 246, 246, 242, 18, 146, 105, 29, 13, 223, 185, 151, 114, 30, 27, 36, 48, 178, 16, 3, 250, 49, 229, 84, 121, 135, 197, 204, 42, 140, 220, 244, 73, 184, 250, 104, 125, 224, 219, 94, 111, 247, 92, 16, 168, 50, 249, 10, 65, 214, 217, 157, 7, 113, 217, 141, 174, 139, 183, 86, 17, 24, 221, 134, 222, 240]\"##;\n\n    let v: Vec&lt;&amp;str&gt; = buffer_string.split(\"?+\").collect();\n    println!(\"Vector: v1 {:?}, v2 {:?}, v3: {:?}\", v[1], v[2], v[3]);\n\n    //only the v[3] is needed as vec&lt;u8&gt;\n    //error with iter and &amp;str\n    //let ciphertext_vec: Vec&lt;_&gt; = v[3].iter().map(|c| c.parse::&lt;u8&gt;().unwrap()).collect();\n\n    let ciphertext: Vec&lt;u8&gt; = [\n        136, 136, 144, 59, 173, 25, 204, 247, 151, 53, 2, 137, 100, 45, 198, 58, 65, 210, 134, 165,\n        163, 156, 136, 148, 46, 31, 16, 184, 179, 73, 220, 14, 113, 152, 85, 1, 233, 208, 53, 27,\n        124, 52, 41, 175, 86, 109, 134, 103, 93, 148, 208, 114, 123, 97, 18, 53, 149, 195, 51, 55,\n        213, 114, 184, 72, 109, 30, 217, 206, 212, 58, 253, 141, 9, 45, 173, 213, 96, 35, 77, 122,\n        113, 240, 22, 222, 194, 11, 123, 221, 176, 116, 161, 196, 84, 203, 203, 184, 140, 42, 169,\n        244, 211, 1, 189, 96, 16, 62, 173, 50, 65, 48, 176, 44, 176, 246, 246, 242, 18, 146, 105,\n        29, 13, 223, 185, 151, 114, 30, 27, 36, 48, 178, 16, 3, 250, 49, 229, 84, 121, 135, 197,\n        204, 42, 140, 220, 244, 73, 184, 250, 104, 125, 224, 219, 94, 111, 247, 92, 16, 168, 50,\n        249, 10, 65, 214, 217, 157, 7, 113, 217, 141, 174, 139, 183, 86, 17, 24, 221, 134, 222,\n        240,\n    ]\n    .to_vec();\n    let ciphertext2: Vec&lt;u8&gt; = v[3].iter().map(|c| c.parse::&lt;u8&gt;().unwrap()).collect();\n    assert_eq!(ciphertext, ciphertext2);\n\n    // ciphertext: Vec&lt;u8&gt; =\n}\n</code></pre>\n"}, {"tags": ["syntax", "rust", "pattern-matching"], "comments": [{"owner": {"reputation": 901, "user_id": 11953465, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5b0a6079c8e80378148270b68e99c31c?s=128&d=identicon&r=PG&f=1", "display_name": "g_bor", "link": "https://stackoverflow.com/users/11953465/g-bor"}, "edited": false, "score": 0, "creation_date": 1569932584, "post_id": 58184472, "comment_id": 102748975, "body": "Here you actually need to designate a place where the value is loaded. dereferencing would give the value stored at the location, not the location itself. At least that was my impression when I first met this."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1569937256, "last_edit_date": 1569937256, "creation_date": 1569935756, "answer_id": 58185593, "question_id": 58184472, "link": "https://stackoverflow.com/questions/58184472/why-is-ref-used-instead-of-an-asterisk-in-pattern-matching/58185593#58185593", "title": "Why is `ref` used instead of an asterisk in pattern matching?", "body": "<p>Using the <strong>de</strong>referencing operator would be very confusing in this case. <code>ref</code> effectively takes a reference to the value. These are more-or-less equivalent:</p>\n\n<pre><code>let bar1 = &amp;42;\nlet ref bar2 = 42;\n</code></pre>\n\n<p>Note that in <code>let &amp;(ref a, ref b) = &amp;(3, 4)</code>, <code>a</code> and <code>b</code> both have the type <code>&amp;i32</code> \u2014 they are references. Also note that since <em>match ergonomics</em>, <code>let (a, b) = &amp;(3, 4)</code> is the same and shorter.</p>\n\n<p>Furthermore, the ampersand (<code>&amp;</code>) and asterisk (<code>*</code>) symbols are used for types. As you mention, pattern matching wants to \"line up\" the value with the pattern. The ampersand is already used to match and remove one layer of references in patterns: </p>\n\n<pre><code>let foo: &amp;i32 = &amp;42;\n\nmatch foo {\n    &amp;v =&gt; println!(\"{}\", v),\n}\n</code></pre>\n\n<p>By analogy, it's possible that some variant of this syntax <strong>might</strong> be supported in the future for raw pointers:</p>\n\n<pre><code>let foo: *const i32 = std::ptr::null();\n\nmatch foo {\n    *v =&gt; println!(\"{}\", v),\n}\n</code></pre>\n\n<p>Since both ampersand and asterisk could be used to remove one layer of reference/pointer, they cannot be used to <em>add</em> one layer. Thus some new keyword was needed and <code>ref</code> was chosen.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/19066402/155423\">Meaning of &#39;&amp;variable&#39; in arguments/patterns</a></li>\n<li><a href=\"https://stackoverflow.com/q/36590549/155423\">What is the syntax to match on a reference to an enum?</a></li>\n<li><a href=\"https://stackoverflow.com/q/55130932/155423\">How can the ref keyword be avoided when pattern matching in a function taking &amp;self or &amp;mut self?</a></li>\n<li><a href=\"https://stackoverflow.com/q/56511328/155423\">How does Rust pattern matching determine if the bound variable will be a reference or a value?</a></li>\n<li><a href=\"https://stackoverflow.com/q/55625001/155423\">Why does pattern matching on &amp;Option&lt;T&gt; yield something of type Some(&amp;T)?</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": false, "score": 0, "last_activity_date": 1569937080, "last_edit_date": 1569937080, "creation_date": 1569936400, "answer_id": 58185801, "question_id": 58184472, "link": "https://stackoverflow.com/questions/58184472/why-is-ref-used-instead-of-an-asterisk-in-pattern-matching/58185801#58185801", "title": "Why is `ref` used instead of an asterisk in pattern matching?", "body": "<p>In this specific case, you can achieve the same with neither <code>ref</code> nor asterisk:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let (a, b) = &amp;(3, 4);\n\n    show_type_name(a);\n    show_type_name(b);\n}\n\nfn show_type_name&lt;T&gt;(_: T) {\n    println!(\"{}\", std::any::type_name::&lt;T&gt;()); // rust 1.38.0 and above\n}\n</code></pre>\n\n<p>It shows both <code>a</code> and <code>b</code> to be of type <code>&amp;i32</code>. This ergonomics feature is called <a href=\"https://doc.rust-lang.org/reference/patterns.html#binding-modes\" rel=\"nofollow noreferrer\">binding modes</a>.</p>\n\n<p>But it still doesn't answer the question of why <code>ref</code> pattern in the first place. I don't think there is a definite answer to that. The syntax simply settled on what it is now regarding <a href=\"https://doc.rust-lang.org/reference/patterns.html#identifier-patterns\" rel=\"nofollow noreferrer\">identifier patterns</a>.</p>\n"}], "owner": {"reputation": 855, "user_id": 7609476, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9ec26271f8d2e1d229dcd143099ab190?s=128&d=identicon&r=PG&f=1", "display_name": "vbstb", "link": "https://stackoverflow.com/users/7609476/vbstb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 261, "favorite_count": 0, "accepted_answer_id": 58185593, "answer_count": 2, "score": 0, "last_activity_date": 1569937256, "creation_date": 1569931729, "last_edit_date": 1569935340, "question_id": 58184472, "link": "https://stackoverflow.com/questions/58184472/why-is-ref-used-instead-of-an-asterisk-in-pattern-matching", "title": "Why is `ref` used instead of an asterisk in pattern matching?", "body": "<p>I am having trouble trying to understand pattern matching rules in Rust. I originally thought that the idea behind patterns are to <em>match</em> the left-hand side and right-hand side like so:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct S {\n    x: i32,\n    y: (i32, i32)\n}\nlet S { x: a, y: (b, c) } = S { x: 1, y: (2, 3) }; \n// `a` matches `1`, `(b, c)` matches `(2, 3)`\n</code></pre>\n\n<p>However, when we want to bind a reference to a value on the right-hand side, we need to use the <code>ref</code> keyword.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let &amp;(ref a, ref b) = &amp;(3, 4);\n</code></pre>\n\n<p>This feels rather inconsistent.</p>\n\n<p>Why can't we use the dereferencing operator <code>*</code> to match the left-hand side and right-hand side like this?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let &amp;(*a, *b) = &amp;(3, 4);\n// `*a` matches `3`, `*b` matches `4`\n</code></pre>\n\n<p>Why isn't this the way patterns work in Rust? Is there a reason why this isn't the case, or have I totally misunderstood something?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 65, "user_id": 4667629, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/53fcd2dc8cea9c2ce3902a13364fcb28?s=128&d=identicon&r=PG&f=1", "display_name": "Theof", "link": "https://stackoverflow.com/users/4667629/theof"}, "edited": false, "score": 0, "creation_date": 1570022228, "post_id": 58184678, "comment_id": 102782616, "body": "Indeed I could use an Arc here to make that code work.  But I feel like there should be a way for a correct lifetime to parameterize my vector. Because the enclosed reference to <code>foo</code> will always outlive <code>&amp;other_foo</code>, there should be one lifetime that is valid for both. Or am I missing something ?"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 65, "user_id": 4667629, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/53fcd2dc8cea9c2ce3902a13364fcb28?s=128&d=identicon&r=PG&f=1", "display_name": "Theof", "link": "https://stackoverflow.com/users/4667629/theof"}, "edited": false, "score": 1, "creation_date": 1570022389, "post_id": 58184678, "comment_id": 102782723, "body": "@Theof You&#39;re missing the fact that <code>other_foo</code> is also getting pushed into your <code>Vec&lt;&gt;</code> as a reference and therefore has to live as long as what provided the lifetime requirement in the first place. It isn&#39;t about whether <code>foo</code> outlives <code>other_foo</code>, it is about the fact that <code>other_foo</code> needs to outlive the logical scope it is defined in, and since it is dropped (and destroyed) prior to that, it physically cannot."}, {"owner": {"reputation": 65, "user_id": 4667629, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/53fcd2dc8cea9c2ce3902a13364fcb28?s=128&d=identicon&r=PG&f=1", "display_name": "Theof", "link": "https://stackoverflow.com/users/4667629/theof"}, "edited": false, "score": 0, "creation_date": 1570107664, "post_id": 58184678, "comment_id": 102815180, "body": "I understand how the lifetime requirement I wrote makes rustc unhappy, but I feel like Rust should enable me to express the specific lifetime I am interested in. Seems, like there is no way to do that (yet ?), so I mark this as an answer thanks to the explanation."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 65, "user_id": 4667629, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/53fcd2dc8cea9c2ce3902a13364fcb28?s=128&d=identicon&r=PG&f=1", "display_name": "Theof", "link": "https://stackoverflow.com/users/4667629/theof"}, "edited": false, "score": 0, "creation_date": 1570108417, "post_id": 58184678, "comment_id": 102815632, "body": "@Theof Are you coming from a dynamic/garbage collected language? If so, I understand your problem. I&#39;ve been in those shoes myself, and it just takes a bit of mental re-wiring in thinking about lifetimes. When you associate a lifetime to a reference as part of a collection, this lifetime will be the <i>largest</i> required lifetime; it won&#39;t be a different lifetime per object."}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": true, "score": 3, "last_activity_date": 1569932496, "creation_date": 1569932496, "answer_id": 58184678, "question_id": 58184443, "link": "https://stackoverflow.com/questions/58184443/how-to-bind-reference-lifetime-to-a-function-local-scope/58184678#58184678", "title": "How to bind reference lifetime to a function local scope", "body": "<p>You have a serious, serious issue with conflicting lifetimes in your implementation, and there is no simple fix without at least a partial redesign of the outside signatures of your <code>struct</code> and methods. They all stem from the <code>setup_and</code> method, and are highlighted by the compiler when you explicitly described the lifetime bounds.</p>\n\n<p>The body of your method is copied below, with annotations for you to understand the issue:</p>\n\n<pre><code>let mut v: Vec&lt;&amp;Foo&gt; = vec![];\nlet other_foo = Foo {}; // other_foo is created here\n\nf(&amp;mut v);\nv.push(&amp;other_foo); // other_foo requires lifetime 'a to be added to this\nconsume(v); // consume does not restrict the lifetime requirement 'a\n// other_foo is dropped here, at lifetime less than 'a\n</code></pre>\n\n<p>The easiest solution to this problem is to store an <code>Arc&lt;Foo&gt;</code>, like so (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=7b4563d510765d3d856b34642b704ecc\" rel=\"nofollow noreferrer\">playground</a>):</p>\n\n<pre><code>fn setup_and&lt;F&gt;(f: F)\nwhere\n    F: FnOnce(&amp;mut Vec&lt;Arc&lt;Foo&gt;&gt;) + Send,\n{\n    let mut v: Vec&lt;Arc&lt;Foo&gt;&gt; = vec![];\n    let other_foo = Foo {};\n\n    f(&amp;mut v);\n    v.push(Arc::new(other_foo));\n    consume(&amp;mut v);\n}\n</code></pre>\n\n<p><code>Arc</code> is an Atomic Reference-Counting pointer. It is a clonable structure that works as a dynamic pointer to an object on the heap; for all intents and purposes, it works as a read-only reference, without the requirement for a lifetime. When all copies of an <code>Arc</code> are dropped, the item inside it is also dropped.</p>\n\n<p>This solves two problems:</p>\n\n<ol>\n<li>Your <code>other_foo</code> is now <strong>moved</strong> into the <code>Arc</code>, and no longer causes its lifetime issue</li>\n<li>You can now access your objects just like you would a reference (<code>Arc</code> implements <code>Deref</code>)</li>\n</ol>\n\n<p>The choice of <code>Arc</code> was made because your <code>FnOnce</code> requires <code>Send</code>, which <code>Rc</code> (the single-threaded variant of <code>Arc</code>) cannot provide.</p>\n"}], "owner": {"reputation": 65, "user_id": 4667629, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/53fcd2dc8cea9c2ce3902a13364fcb28?s=128&d=identicon&r=PG&f=1", "display_name": "Theof", "link": "https://stackoverflow.com/users/4667629/theof"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 201, "favorite_count": 0, "accepted_answer_id": 58184678, "answer_count": 1, "score": 1, "last_activity_date": 1569932776, "creation_date": 1569931634, "last_edit_date": 1569932776, "question_id": 58184443, "link": "https://stackoverflow.com/questions/58184443/how-to-bind-reference-lifetime-to-a-function-local-scope", "title": "How to bind reference lifetime to a function local scope", "body": "<p>I want to write a function A which takes as parameter a function B which takes as parameter a type which is parameterized by a reference type which lifetime is at least the lifetime of the local variables in A\u2019s body.</p>\n\n<p>Consider the following example:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Foo {}\n\nfn consume(mut v: Vec&lt;&amp;Foo&gt;) {\n    while let Some(..) = v.pop() {\n        // Do stuff\n        continue;\n    }\n}\n\nfn setup_and&lt;F&gt;(f: F)\nwhere\n    F: FnOnce(&amp;mut Vec&lt;&amp;Foo&gt;) + Send,\n{\n    let mut v: Vec&lt;&amp;Foo&gt; = vec![];\n    let other_foo = Foo {};\n\n    f(&amp;mut v);\n    v.push(&amp;other_foo);\n    consume(v);\n}\n\nfn main() {\n    let foo = Foo {};\n    setup_and(|v| {\n        v.push(&amp;foo);\n    });\n}\n</code></pre>\n\n<p>rustc cannot infer lifetimes on its own. It complains:</p>\n\n<pre><code>error[E0597]: `foo` does not live long enough\n  --&gt; src/main.rs:25:17\n   |\n24 |     setup_and(|v| {\n   |               --- value captured here\n25 |         v.push(&amp;foo);\n   |         --------^^^-\n   |         |       |\n   |         |       borrowed value does not live long enough\n   |         argument requires that `foo` is borrowed for `'static`\n26 |     });\n27 | }\n   | - `foo` dropped here while still borrowed\n\n</code></pre>\n\n<p>I tried to specify a lifetime for the reference taken by <code>setup_and</code> like so:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn setup_and&lt;'a, F&gt;(f: F)\nwhere\n    F: FnOnce(&amp;mut Vec&lt;&amp;'a Foo&gt;) + Send,\n{\n    let mut v: Vec&lt;&amp;'a Foo&gt; = vec![];\n</code></pre>\n\n<p>Now rustc complains about the <code>setup_and</code> local reference <code>other_foo</code> not living long enough. I assume it is because it wants a larger lifetime than the scope of <code>setup_and</code>.</p>\n\n<p>How would I bind lifetimes correctly in that case ? I would like to express that the references must be valid until the end of the <code>consume</code> call.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 1, "creation_date": 1569930144, "post_id": 58184053, "comment_id": 102747703, "body": "Are you aware <a href=\"https://crates.io/crates/crossbeam\" rel=\"nofollow noreferrer\">crossbeam</a> crate which has scoped thread utility?"}, {"owner": {"reputation": 191, "user_id": 903597, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/cf415ba4446cafb0851e66ae0a81db8b?s=128&d=identicon&r=PG", "display_name": "Sr\u0111an Stipi\u0107", "link": "https://stackoverflow.com/users/903597/sr%c4%91an-stipi%c4%87"}, "reply_to_user": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 1, "creation_date": 1569931020, "post_id": 58184053, "comment_id": 102748151, "body": "I have seen crossbeam but I think that it does not work with tasks from async_std"}], "owner": {"reputation": 191, "user_id": 903597, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/cf415ba4446cafb0851e66ae0a81db8b?s=128&d=identicon&r=PG", "display_name": "Sr\u0111an Stipi\u0107", "link": "https://stackoverflow.com/users/903597/sr%c4%91an-stipi%c4%87"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 172, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1569936050, "creation_date": 1569929935, "last_edit_date": 1569936050, "question_id": 58184053, "link": "https://stackoverflow.com/questions/58184053/how-to-implement-scoped-asynchronous-tasks-in-rust", "title": "How to implement scoped asynchronous tasks in Rust?", "body": "<p>I am trying to implement scoped tasks in Rust 1.40.0-nightly (8431f261d 2019-09-29) and I am not able to make my code compile.</p>\n\n<p>I have the following code that I would like to simplify:</p>\n\n<pre><code>use async_std::task;\nuse std::time::Duration;\n\npub fn main() {\n    let mut v = Vec::new();\n    v.push(task::spawn(async {\n        task::sleep(Duration::from_millis(1000)).await;\n        println!(\"Hello, world!\");\n    }));\n    v.push(task::spawn(async {\n        task::sleep(Duration::from_millis(2000)).await;\n        println!(\"Hello, world 2!\");\n    }));\n    for t in &amp;mut v {\n        task::block_on(t);\n    }\n}\n</code></pre>\n\n<p>I would like to implement the <code>Scope</code> struct such that previous code looks like this:</p>\n\n<pre><code>pub fn main() {\n    let mut s = Scope::new();\n    s.push(async {\n        task::sleep(Duration::from_millis(1000)).await;\n        println!(\"Hello, world 1!\");\n    });\n    s.push(async {\n        task::sleep(Duration::from_millis(2000)).await;\n        println!(\"Hello, world 2!\");\n    });\n}\n</code></pre>\n\n<p>The current implementation I have is:</p>\n\n<pre><code>struct Scope&lt;T&gt;\nwhere\n    T: std::future::Future + std::marker::Unpin,\n{\n    v: Vec&lt;T&gt;,\n}\n\nimpl&lt;T&gt; Scope&lt;T&gt;\nwhere\n    T: std::future::Future + std::marker::Unpin,\n{\n    fn new() -&gt; Scope&lt;T&gt; {\n        Scope { v: Vec::new() }\n    }\n    fn push(&amp;mut self, t: T) {\n        self.v.push(t);\n    }\n}\n\nimpl&lt;T&gt; Drop for Scope&lt;T&gt;\nwhere\n    T: std::future::Future + std::marker::Unpin,\n{\n    fn drop(&amp;mut self) {\n        for t in &amp;mut self.v {\n            task::block_on(t);\n        }\n    }\n}\n\npub fn main() {\n    let mut s = Scope::new();\n    s.push(async {\n        task::sleep(Duration::from_millis(1000)).await;\n        println!(\"Hello, world 1!\");\n    });\n    s.push(async {\n        task::sleep(Duration::from_millis(2000)).await;\n        println!(\"Hello, world 2!\");\n    });\n}\n</code></pre>\n\n<p>But this fails compilation with the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `std::future::GenFuture&lt;[static generator@src/main.rs:36:18: 39:6 _]&gt;: std::marker::Unpin` is not satisfied in `impl std::future::Future`\n  --&gt; src/main.rs:36:7\n   |\n36 |     s.push(async {\n   |       ^^^^ within `impl std::future::Future`, the trait `std::marker::Unpin` is not implemented for `std::future::GenFuture&lt;[static generator@src/main.rs:36:18: 39:6 _]&gt;`\n   |\n   = help: the following implementations were found:\n             &lt;std::future::GenFuture&lt;T&gt; as std::marker::Unpin&gt;\n   = note: required because it appears within the type `impl std::future::Future`\n\nerror[E0599]: no method named `push` found for type `Scope&lt;impl std::future::Future&gt;` in the current scope\n  --&gt; src/main.rs:40:7\n   |\n4  | / struct Scope&lt;T&gt;\n5  | | where\n6  | |     T: std::future::Future + std::marker::Unpin,\n7  | | {\n8  | |     v: Vec&lt;T&gt;,\n9  | | }\n   | |_- method `push` not found for this\n...\n40 |       s.push(async {\n   |         ^^^^ method not found in `Scope&lt;impl std::future::Future&gt;`\n   |\n   = note: the method `push` exists but the following trait bounds were not satisfied:\n           `impl std::future::Future : std::marker::Unpin`\n</code></pre>\n\n<p>How do I fix these compilation issues?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1569921270, "post_id": 58181572, "comment_id": 102743186, "body": "You can do <a href=\"https://stackoverflow.com/questions/25383488/how-to-match-a-string-against-string-literals-in-rust\">matching on strings</a>, but that&#39;s not at all &quot;like a python dict&quot;. What you seem to need is a <a href=\"https://doc.rust-lang.org/std/collections/struct.HashMap.html\" rel=\"nofollow noreferrer\">hashmap</a>."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1569921365, "post_id": 58181572, "comment_id": 102743229, "body": "If those links don&#39;t answer your problem, please explain your need and build a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 3, "creation_date": 1569921754, "post_id": 58181572, "comment_id": 102743421, "body": "Note that rust is a strongly typed language. Your code sample can hardly make sense."}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1569924973, "post_id": 58181572, "comment_id": 102745078, "body": "Do you want to store some created struct to a dictionary and then retrieve them from it? Or you just want to create and return these struct like you share on the question?"}], "answers": [{"comments": [{"owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "edited": false, "score": 0, "creation_date": 1570096727, "post_id": 58184222, "comment_id": 102809476, "body": "I agree that this is a good way to do it. However, sometimes you can avoid <code>Box</code>ing the value (e.g. if you pass it directly to a function). For those cases, I came up with an ugly macro (see <a href=\"https://stackoverflow.com/a/55249378/255688\">stackoverflow.com/a/55249378/255688</a>) that can dispatching using different types."}], "tags": [], "owner": {"reputation": 20880, "user_id": 1317944, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/OcBMY.png?s=128&g=1", "display_name": "The Quantum Physicist", "link": "https://stackoverflow.com/users/1317944/the-quantum-physicist"}, "is_accepted": true, "score": 4, "last_activity_date": 1569936195, "last_edit_date": 1569936195, "creation_date": 1569930620, "answer_id": 58184222, "question_id": 58181572, "link": "https://stackoverflow.com/questions/58181572/how-to-map-a-string-to-a-struct/58184222#58184222", "title": "How to map a string to a struct?", "body": "<p>Rust is not like Python. In Rust, you have to know the size of all your objects on the stack at compile time. If not, then you have to use dynamic objects that are allocated on the heap.</p>\n\n<p>In C++ or similar languages, you'd create a base class where both your classes inherit from it. This way, you can dynamically create an object at run-time, with a type that you choose based on a run-time condition. This is the classical way of doing things.</p>\n\n<p>In Rust, the alternative is called \"trait objects\", where both your classes implement the same trait (so that trait plays the role of a base class). Here's how you do it:</p>\n\n<pre><code>trait C {}\n\nimpl C for A {}\n\nimpl C for B {}\n\npub struct A {}\n\npub struct B {}\n\nfn main() {\n    println!(\"Hello, world!\");\n    let x = \"a\";\n    let s: Box&lt;dyn C&gt; = match x {\n        \"a\" =&gt; Box::new(A {}),\n        \"b\" =&gt; Box::new(B {}),\n        _ =&gt; panic!()\n    };\n}\n</code></pre>\n\n<p><code>Box</code> is a safe container for a pointer, which will be deallocated when you exit this scope (unless you choose to pass it somewhere else).</p>\n\n<p>Play with this code on <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=9c1241e4c4626cc686da30a8348a0f58\" rel=\"nofollow noreferrer\">playground</a></p>\n"}], "owner": {"reputation": 3731, "user_id": 4349666, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/e849d156870115f4e2a851cbfdaac99d?s=128&d=identicon&r=PG&f=1", "display_name": "Manish Gupta", "link": "https://stackoverflow.com/users/4349666/manish-gupta"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 203, "favorite_count": 0, "accepted_answer_id": 58184222, "answer_count": 1, "score": 1, "last_activity_date": 1569936195, "creation_date": 1569921102, "last_edit_date": 1569936145, "question_id": 58181572, "link": "https://stackoverflow.com/questions/58181572/how-to-map-a-string-to-a-struct", "title": "How to map a string to a struct?", "body": "<p>I have some structs like:</p>\n\n<pre><code>pub struct A {}\n\npub struct B {}\n</code></pre>\n\n<p>I want to map these structs to a string mapping:</p>\n\n<pre><code>let s = match x {\n    \"a\" =&gt; A {},\n    \"b\" =&gt; B {},\n    _ =&gt; panic!()\n} \n</code></pre>\n\n<p>like a Python dict. How can I do this in Rust?</p>\n"}, {"tags": ["rust", "documentation"], "comments": [{"owner": {"reputation": 2892, "user_id": 391691, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/vCKhh.jpg?s=128&g=1", "display_name": "Simson", "link": "https://stackoverflow.com/users/391691/simson"}, "edited": false, "score": 0, "creation_date": 1569905636, "post_id": 58178158, "comment_id": 102736763, "body": "Are you looking for  <code>cargo doc</code> or something else?"}, {"owner": {"reputation": 74890, "user_id": 246776, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/PZwCJ.jpg?s=128&g=1", "display_name": "eonil", "link": "https://stackoverflow.com/users/246776/eonil"}, "reply_to_user": {"reputation": 2892, "user_id": 391691, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/vCKhh.jpg?s=128&g=1", "display_name": "Simson", "link": "https://stackoverflow.com/users/391691/simson"}, "edited": false, "score": 0, "creation_date": 1569909684, "post_id": 58178158, "comment_id": 102737868, "body": "@Simson It seems it hasn&#39;t been changed. I remember there was a command to emit type informations in JSON form. Do you know something about it?"}], "owner": {"reputation": 74890, "user_id": 246776, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/PZwCJ.jpg?s=128&g=1", "display_name": "eonil", "link": "https://stackoverflow.com/users/246776/eonil"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 53, "favorite_count": 0, "closed_date": 1569922044, "answer_count": 0, "score": 0, "last_activity_date": 1569905026, "creation_date": 1569905026, "question_id": 58178158, "link": "https://stackoverflow.com/questions/58178158/what-is-current-documentation-tool-for-rust", "closed_reason": "Duplicate", "title": "What is current documentation tool for Rust?", "body": "<p>As far as I remember a new tool was under development a few years ago that named <a href=\"https://github.com/steveklabnik/doxidize\" rel=\"nofollow noreferrer\">Doxidize</a>. But it seems its development has been stopped.</p>\n\n<p>What's current documentation tool of Rust? Where can I see the source code? I am trying to use its source code to extract data schema from Rust source code.</p>\n"}, {"tags": ["compilation", "rust", "macros", "environment-variables", "rust-proc-macros"], "answers": [{"tags": [], "owner": {"reputation": 112511, "user_id": 623041, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/pIG3S.png?s=128&g=1", "display_name": "eggyal", "link": "https://stackoverflow.com/users/623041/eggyal"}, "is_accepted": true, "score": 2, "last_activity_date": 1569915044, "creation_date": 1569915044, "answer_id": 58179981, "question_id": 58176547, "link": "https://stackoverflow.com/questions/58176547/can-proc-macros-determine-the-target-of-the-invoking-compilation/58179981#58179981", "title": "Can proc macros determine the target of the invoking compilation?", "body": "<p>I've somewhat inelegantly solved this by recursing into a second proc macro invocation, where the first invocation adds <a href=\"https://doc.rust-lang.org/reference/conditional-compilation.html#the-cfg_attr-attribute\" rel=\"nofollow noreferrer\"><code>#[cfg_attr]</code></a> attributes with literal boolean parameters that can then be accessed within the second invocation:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[cfg_attr(all(target_os = \"linux\"), my_macro(linux = true ))]\n#[cfg_attr(not(target_os = \"linux\"), my_macro(linux = false))]\n// ...\n</code></pre>\n\n<p>A hack, but it works.</p>\n"}], "owner": {"reputation": 112511, "user_id": 623041, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/pIG3S.png?s=128&g=1", "display_name": "eggyal", "link": "https://stackoverflow.com/users/623041/eggyal"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 306, "favorite_count": 0, "accepted_answer_id": 58179981, "answer_count": 1, "score": 3, "last_activity_date": 1569916295, "creation_date": 1569887821, "last_edit_date": 1569916295, "question_id": 58176547, "link": "https://stackoverflow.com/questions/58176547/can-proc-macros-determine-the-target-of-the-invoking-compilation", "title": "Can proc macros determine the target of the invoking compilation?", "body": "<p>Procedural macros live in their own crates, which are compiled for the development machine (so that they can be executed when crates that use them are compiled).  Any <a href=\"https://doc.rust-lang.org/reference/conditional-compilation.html\" rel=\"nofollow noreferrer\">conditional compilation</a> directives within the procedural macro crates will accordingly be based on <em>their</em> compilation environment, rather than that of the invoking crate.</p>\n\n<p>Of course, such macros could expand to tokens that include conditional compilation directives that will then be evaluated in the context of the invoking crate's compilation\u2014however, this is not always possible or desirable.</p>\n\n<p>Where one wishes for the expanded tokens themselves to be some function of the invoking crate's compilation environment, there is a need for the macro to determine that environment during its run-time (which is of course the invoking crate's compilation-time).  Clearly a perfect use-case for the <a href=\"https://doc.rust-lang.org/std/env/index.html\" rel=\"nofollow noreferrer\"><code>std::env</code></a> module.</p>\n\n<p>However, rustc doesn't set any environment variables; and Cargo sets only <a href=\"https://doc.rust-lang.org/cargo/reference/environment-variables.html#environment-variables-cargo-sets-for-crates\" rel=\"nofollow noreferrer\">a limited few</a>.  In particular, some key information (like target architecture/operating system etc) is not present at all.</p>\n\n<p>I appreciate that a build script in the invoking crate could set environment variables for the macro then to read, but this places an unsatisfactory burden on the invoking crate author.</p>\n\n<p>Is there any way that a proc macro author can obtain <em>runtime</em> information about the invoking crate's compilation environment (target architecture and operating system being of most interest to me)?</p>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"tags": [], "owner": {"reputation": 40991, "user_id": 4794, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/f90cd356f2945b284946d5743467d850?s=128&d=identicon&r=PG", "display_name": "Don Kirkby", "link": "https://stackoverflow.com/users/4794/don-kirkby"}, "is_accepted": true, "score": 1, "last_activity_date": 1569881238, "last_edit_date": 1569881238, "creation_date": 1569876473, "answer_id": 58175120, "question_id": 58175119, "link": "https://stackoverflow.com/questions/58175119/rust-package-using-unstable-library-feature-iter-nth-back/58175120#58175120", "title": "Rust package using unstable library feature &#39;iter_nth_back&#39;", "body": "<h2>New Answer: Upgrade Rust</h2>\n\n<p>It turned out that upgrading rust wasn't as hard as I thought, and then I don't have to change the Rust source code.</p>\n\n<p>In my <code>.travis.yml</code> file, I replaced this:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>- sudo apt-get install -y cargo\n</code></pre>\n\n<p>with this:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>- sudo curl https://sh.rustup.rs -sSf | sh -s -- -y\n- source ~/.cargo/env\n</code></pre>\n\n<h2>Original Answer: Pin Dependencies</h2>\n\n<p>I tried adding an explicit <code>ndarray</code> dependency and pinning it at 0.12, but that didn't work. Then I noticed that <code>bio</code> also had a new release in the last few days. Pinning that dependency worked.</p>\n\n<pre><code>$ sudo docker run -it --rm rust:1.36.0\n# USER=foo cargo new hello_world --bin\n     Created binary (application) `hello_world` package\n# cd hello_world/\n# echo 'bio = \"~0.28.2\"' &gt;&gt; Cargo.toml\n# cargo build\n    Updating crates.io index\n  Downloaded bio v0.28.2\n  Downloaded [... many more ...]\n  Downloaded ndarray v0.12.1\n  Downloaded [... many more ...]\n   Compiling proc-macro2 v1.0.4\n   Compiling [... many more ...]\n   Compiling ndarray v0.12.1\n   Compiling [... many more ...]\n   Compiling csv v1.1.1\n   Compiling hello_world v0.1.0 (/hello_world)\n    Finished dev [unoptimized + debuginfo] target(s) in 14m 15s\n#\n</code></pre>\n"}], "owner": {"reputation": 40991, "user_id": 4794, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/f90cd356f2945b284946d5743467d850?s=128&d=identicon&r=PG", "display_name": "Don Kirkby", "link": "https://stackoverflow.com/users/4794/don-kirkby"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 825, "favorite_count": 0, "accepted_answer_id": 58175120, "answer_count": 1, "score": 1, "last_activity_date": 1569881238, "creation_date": 1569876473, "question_id": 58175119, "link": "https://stackoverflow.com/questions/58175119/rust-package-using-unstable-library-feature-iter-nth-back", "title": "Rust package using unstable library feature &#39;iter_nth_back&#39;", "body": "<p>I have a Rust application that I don't know much about, and I'm calling it from a Python program that I'm working on. I haven't changed anything in the Rust source code, but the build process for these two projects just stopped working with an error like this:</p>\n\n<pre><code>[... several similar errors]\nerror[E0658]: use of unstable library feature 'iter_nth_back'\n   --&gt; /usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs:585:46\n    |\n585 |         either_mut!(self.inner, iter =&gt; iter.nth_back(n))\n    |                                              ^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/56995\n\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try `rustc --explain E0658`.\nerror: Could not compile `ndarray`.\n</code></pre>\n\n<p>I looked at the list of <a href=\"https://github.com/rust-ndarray/ndarray/releases\" rel=\"nofollow noreferrer\">ndarray releases</a>, and release 0.13.0 came out a few days ago, so I suspect that it's incompatible with my build environment.</p>\n\n<p>How can I get my build working again?</p>\n\n<p>Here are the full steps to reproduce the problem:</p>\n\n<pre><code>$ sudo docker run -it --rm rust:1.36.0\n# USER=foo cargo new hello_world --bin\n     Created binary (application) `hello_world` package\n# cd hello_world/\n# echo 'bio = \"^0\"' &gt;&gt; Cargo.toml\n# cargo build\n    Updating crates.io index\n  Downloaded bio v0.29.0\n  Downloaded [... many more ...]\n  Downloaded ndarray v0.13.0\n  Downloaded [... many more ...]\n   Compiling proc-macro2 v1.0.4\n   Compiling [... many more ...]\n   Compiling ndarray v0.13.0\n   Compiling [... many more ...]\n   Compiling statrs v0.11.0\nerror[E0658]: use of unstable library feature 'iter_nth_back'\n   --&gt; /usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs:134:5\n    |\n134 | /     fn nth_back(&amp;mut self, n: usize) -&gt; Option&lt;*mut A&gt; {\n135 | |         let index = self.index?;\n136 | |         let len = self.dim[0] - index[0];\n137 | |         if n &lt; len {\n...   |\n147 | |         }\n148 | |     }\n    | |_____^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/56995\n[... other, similar errors ...]\n   Compiling serde_derive v1.0.101\n   Compiling strum_macros v0.16.0\n   Compiling snafu-derive v0.5.0\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try `rustc --explain E0658`.\nerror: Could not compile `ndarray`.\nwarning: build failed, waiting for other jobs to finish...\nerror: build failed\n#\n</code></pre>\n\n<p>Interestingly, if I run the latest docker image for rust, 1.38, I don't see the error. However, my build process is installing Rust from Ubuntu Xenial's package manager, so I probably can't upgrade it easily.</p>\n"}, {"tags": ["rust", "floating-point"], "comments": [{"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 2, "creation_date": 1569874182, "post_id": 58174531, "comment_id": 102730065, "body": "<a href=\"https://stackoverflow.com/questions/7644699/how-are-floating-point-numbers-stored-in-memory\">Floating-precision numbers are not stored as exact values but as 2^n closest representation</a>, and this is not something you can change outside of option for an arbitrary-precision library and its types."}, {"owner": {"reputation": 890, "user_id": 11389321, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9048fa908f45d0795f0a5c47eaa8a637?s=128&d=identicon&r=PG&f=1", "display_name": "ecstaticm0rse", "link": "https://stackoverflow.com/users/11389321/ecstaticm0rse"}, "edited": false, "score": 1, "creation_date": 1569874419, "post_id": 58174531, "comment_id": 102730147, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/588004/is-floating-point-math-broken\">Is floating point math broken?</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1569881586, "post_id": 58174531, "comment_id": 102732441, "body": "The question is not well-formed. It&#39;s not clear what process you want to implement that lets you transform <code>0.23_f32</code> into <code>0.23_f64</code>, which are different values with no particular relationship <i>other</i> than that they happen to round to the same value in decimal representation of less than a certain number of digits."}, {"owner": {"reputation": 659, "user_id": 172106, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/0f55f3b9b2cdd268ac9a2ef47e3d684c?s=128&d=identicon&r=PG", "display_name": "turboladen", "link": "https://stackoverflow.com/users/172106/turboladen"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1569889640, "post_id": 58174531, "comment_id": 102733956, "body": "Thanks for the feedback, @trentcl. I&#39;ll update to try to convey that, although I&#39;m not really sure how at the moment to convey it any differently."}, {"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 0, "creation_date": 1569908069, "post_id": 58174531, "comment_id": 102737379, "body": "Why do you want that? Why don&#39;t you just accept the more precisely represented <code>f64</code> value? It&#39;s the same value as the <code>f32</code> value, the issue is that in <code>f64</code> there is a different value even closer to <code>0.23</code>."}, {"owner": {"reputation": 659, "user_id": 172106, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/0f55f3b9b2cdd268ac9a2ef47e3d684c?s=128&d=identicon&r=PG", "display_name": "turboladen", "link": "https://stackoverflow.com/users/172106/turboladen"}, "reply_to_user": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 0, "creation_date": 1569956312, "post_id": 58174531, "comment_id": 102760946, "body": "@starblue the <code>f32</code> data is directly from a database that&#39;s full of canonical values for my business (which have legal implications for our users) but the tools I have to work with the data require <code>f64</code> values. I need <code>0.23</code> as an <code>f64</code> (not <code>0.23000000417232513</code>) to be able to use the value with other libraries I have in my stack."}, {"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 1, "creation_date": 1570097883, "post_id": 58174531, "comment_id": 102810127, "body": "@turboladen If you know the maximal number of decimal digits you might get away with rounding as at the end of Jmb&#39;s answer. Otherwise it boils down to what those legal implications are. If legally the floating-point numbers are thought of as their textual representation rather than their floating-point value then reparsing might be the right thing to do."}, {"owner": {"reputation": 659, "user_id": 172106, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/0f55f3b9b2cdd268ac9a2ef47e3d684c?s=128&d=identicon&r=PG", "display_name": "turboladen", "link": "https://stackoverflow.com/users/172106/turboladen"}, "reply_to_user": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 0, "creation_date": 1570211292, "post_id": 58174531, "comment_id": 102854464, "body": "@starblue that&#39;s a great point. I started a discussion to see if we can define a maximal number of decimal digits (and even switching to fixed-point numbers). The origin of the floating point (as it comes into our system) is probably thought of as somewhat textual (or maybe &quot;thought about non-technically&quot;), so that makes sense. Thanks for that--that helps."}], "answers": [{"tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": false, "score": 1, "last_activity_date": 1569923240, "last_edit_date": 1569923240, "creation_date": 1569880390, "answer_id": 58175725, "question_id": 58174531, "link": "https://stackoverflow.com/questions/58174531/is-there-a-way-to-f64from0-23-f32-and-get-0-23-f64/58175725#58175725", "title": "Is there a way to `f64::from(0.23_f32)` and get 0.23_f64?", "body": "<p>Comments have already pointed out why this is happening. This answer exists to give you ways to circumvent this.</p>\n\n<p>The first (and most obvious) is to use arbitrary-precision libraries. A solid example of this in rust is <a href=\"https://docs.rs/rug/0.6.0/rug/\" rel=\"nofollow noreferrer\"><code>rug</code></a>. This allows you to express pretty much any number exactly, but it causes some problems across FFI boundaries (amongst other cases).</p>\n\n<p>The second is to do what most people do around floating point numbers, and bracket your equalities. Since you know that most floats will not be stored exactly, and you know your input type, you can use constants such as <a href=\"https://doc.rust-lang.org/std/f32/constant.MIN.html\" rel=\"nofollow noreferrer\"><code>std::f32::MIN</code></a> to bracket your type, like so (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b72159b95093da78336f4b4d7b5db4f9\" rel=\"nofollow noreferrer\">playground</a>):</p>\n\n<pre><code>use std::cmp::PartialOrd;\nuse std::ops::{Add, Div, Sub};\nfn bracketed_eq&lt;\n    I,\n    E: From&lt;I&gt; + From&lt;f32&gt; + Clone + PartialOrd + Div&lt;Output = E&gt; + Sub&lt;Output = E&gt; + Add&lt;Output = E&gt;,\n&gt;(\n    input: E,\n    target: I,\n    value: I,\n) -&gt; bool {\n    let target: E = target.into();\n    let value: E = value.into();\n    let bracket_lhs: E = target.clone() - (value.clone() / (2.0).into());\n    let bracket_rhs: E = target.clone() + (value.clone() / (2.0).into());\n    bracket_lhs &gt;= input &amp;&amp; bracket_rhs &lt;= input\n}\n\n#[test]\nfn test() {\n    let u: f32 = 0.23_f32;\n    assert!(bracketed_eq(f64::from(u), 0.23, std::f32::MIN))\n}\n</code></pre>\n\n<p>A large amount of this is boilerplate and a lot of it gets completely optimized away by the compiler; it is also possible to drop the <code>Clone</code> requirement by restricting some trait choices. <code>Add</code>, <code>Sub</code>, <code>Div</code> are there for the operations, <code>From&lt;I&gt;</code> to realize the conversion, <code>From&lt;f32&gt;</code> for the constant <code>2.0</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 0, "last_activity_date": 1569998369, "last_edit_date": 1569998369, "creation_date": 1569912404, "answer_id": 58179381, "question_id": 58174531, "link": "https://stackoverflow.com/questions/58174531/is-there-a-way-to-f64from0-23-f32-and-get-0-23-f64/58179381#58179381", "title": "Is there a way to `f64::from(0.23_f32)` and get 0.23_f64?", "body": "<p>The right way to compare floating-point values is to bracket them. The question is how to determine the bracketing interval? In your case, since you have a representation of the target value as <code>f32</code>, you have two solutions:</p>\n\n<ul>\n<li><p>The obvious solution is to do the comparison between <code>f32</code>s, so convert your <code>f64</code> result to <code>f32</code> to get rid of the extra digits, and compare that to the expected result. Of course, this may still fail if accumulated rounding errors cause the result to be slightly different.</p></li>\n<li><p>The right solution would have been to use the <a href=\"https://doc.rust-lang.org/1.1.0/std/primitive.f32.html#method.next_after\" rel=\"nofollow noreferrer\"><code>next_after</code></a> function to get the smallest bracketing interval around your target:</p>\n\n<pre><code>let result: f64 = 0.23f64;\nlet expect: f32 = 0.23;\n\nassert_ne!(result, expect.into());\nassert!(expect.next_after (0.0).into() &lt; result &amp;&amp; result &lt; expect.next_after (1.0).into());\n</code></pre>\n\n<p>but unfortunately this was never stabilized (see <a href=\"https://github.com/rust-lang/rust/issues/27752\" rel=\"nofollow noreferrer\">#27752</a>).</p></li>\n<li><p>So you will have to determine the precision that is acceptable to you, possibly as a function of <a href=\"https://doc.rust-lang.org/stable/std/f32/constant.EPSILON.html\" rel=\"nofollow noreferrer\"><code>f32::EPSILON</code></a>:</p>\n\n<pre><code>let result: f64 = 0.23f64;\nlet expect: f32 = 0.23;\n\nassert_ne!(result, expect.into());\nassert!(f64::from (expect) - f64::from (std::f32::EPSILON) &lt; result &amp;&amp; result &lt; f64::from (expect) + f64::from (std::f32::EPSILON);\n</code></pre></li>\n</ul>\n\n<hr>\n\n<p>If you don't want to compare the value, but instead want to truncate it before passing it on to some computation, then the function to use is <a href=\"https://doc.rust-lang.org/stable/std/primitive.f64.html#method.round\" rel=\"nofollow noreferrer\"><code>f64::round</code></a>:</p>\n\n<pre><code>const PRECISION: f64 = 100.0;\nlet from_db: f32 = 0.23;\nlet truncated = (f64::from (from_db) * PRECISION).round() / PRECISION;\nprintln!(\"f32   : {:.32}\", from_db);\nprintln!(\"f64   : {:.32}\", 0.23f64);\nprintln!(\"output: {:.32}\", truncated);\n</code></pre>\n\n<p>prints:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>f32   : 0.23000000417232513427734375000000\nf64   : 0.23000000000000000999200722162641\noutput: 0.23000000000000000999200722162641\n</code></pre>\n\n<p>A couple of notes:</p>\n\n<ul>\n<li>The result is still not equal to 0.23 since that number cannot be represented as an <code>f64</code> (or as an <code>f32</code> for that matter), but it is as close as you can get.</li>\n<li>If there are legal implications as you implied, then you probably shouldn't be using floating point numbers in the first place but you should use either some kind of fixed-point with the legally mandated precision, or some arbitrary precision library.</li>\n</ul>\n"}], "owner": {"reputation": 659, "user_id": 172106, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/0f55f3b9b2cdd268ac9a2ef47e3d684c?s=128&d=identicon&r=PG", "display_name": "turboladen", "link": "https://stackoverflow.com/users/172106/turboladen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 221, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1569998369, "creation_date": 1569873580, "last_edit_date": 1569876500, "question_id": 58174531, "link": "https://stackoverflow.com/questions/58174531/is-there-a-way-to-f64from0-23-f32-and-get-0-23-f64", "title": "Is there a way to `f64::from(0.23_f32)` and get 0.23_f64?", "body": "<p>I'm trying to tie together two pieces of software: one that gives me a <code>f32</code>, and one that expects <code>f64</code> values. In my code, I use <code>f64::from(my_f32)</code>, but in my test, I compare the outcome and the value that I'm comparing has not been converted as expected: the <code>f64</code> value has a bunch of extra, more precise, digits, such that the values aren't equal. </p>\n\n<p>In my case, the value is <code>0.23</code>. Is there a way to convert the <code>0.23_f32</code> to <code>f64</code> such that I end up with <code>0.23_f64</code> instead of <code>0.23000000417232513</code>?</p>\n\n<pre><code>fn main() {\n    let x = 0.23_f32;\n    println!(\"{}\", x);\n    println!(\"{}\", f64::from(x));\n    println!(\"---\");\n\n    let x = 0.23_f64;\n    println!(\"{}\", x);\n    println!(\"{}\", f64::from(x));\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=9cd525dd86c42375f591ddc32d8b1942\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<hr>\n\n<p>Edit: I understand that floating-point numbers are stored differently--in fact, I use <a href=\"https://tools.timodenk.com/ieee-754-floating-point\" rel=\"nofollow noreferrer\">this handy visualizer</a> on occasion to view the differences in representations between 32-bit and 64-bit floats. I was looking to see if there's some clever way to get around this.</p>\n\n<hr>\n\n<p>Edit 2: A \"clever\" example that I just conjured up would be <code>my_32.to_string().parse::&lt;f64&gt;()</code>--that gets me <code>0.23_f64</code>, but (obviously) requires string parsing. I'd like to think there might be something at least slightly more numbers-related (for lack of a better term).</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569873326, "post_id": 58174052, "comment_id": 102729686, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/25339603/155423\">How to test for equality between trait objects?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/58174052/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569874364, "post_id": 58174052, "comment_id": 102730127, "body": "Why do you believe that enums are materially different from a &quot;primitive&quot;? What error did you get when when you tried the solution before posting your update?"}, {"owner": {"reputation": 40758, "user_id": 3886, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/fd04cb73de5ffd81321a85c45dc75724?s=128&d=identicon&r=PG", "display_name": "dicroce", "link": "https://stackoverflow.com/users/3886/dicroce"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569874674, "post_id": 58174052, "comment_id": 102730249, "body": "Well, for one the method linked to requires deriving a trait for a new type (the enum)... I don&#39;t think I should have to change the types of all of the members of my struct."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569895189, "post_id": 58174052, "comment_id": 102734905, "body": "In that case, what do you think about <a href=\"https://stackoverflow.com/q/40411045/155423\">Is it possible to have a heterogeneous vector of types that implement Eq?</a>? Your hash can stand in for the vector in the question. The OP there even said <i>I would like to have a HashMap with heterogeneous keys</i>."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1569929241, "post_id": 58174052, "comment_id": 102747273, "body": "<code>String</code> also implements <code>Eq</code>; does that mean you can compare a <code>String</code> to a <code>u16</code>?"}, {"owner": {"reputation": 40758, "user_id": 3886, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/fd04cb73de5ffd81321a85c45dc75724?s=128&d=identicon&r=PG", "display_name": "dicroce", "link": "https://stackoverflow.com/users/3886/dicroce"}, "edited": false, "score": 0, "creation_date": 1569950549, "post_id": 58174052, "comment_id": 102758793, "body": "Well, I don&#39;t want to do that... I am only interested in Equality comparing objects of the same type... Since it looks like Eq is implemented for all the primitive types I had hoped this meant that I could store references to Eq in a map."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1569950874, "post_id": 58174052, "comment_id": 102758919, "body": "So... what do you expect to happen if you <i>do</i> write something like <code>umap1[&quot;id&quot;] == umap2[&quot;age&quot;]</code>? Panic? Or what <code>impl Eq</code> block do you think would apply there?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1569951398, "post_id": 58174052, "comment_id": 102759144, "body": "<code>Eq</code> doesn&#39;t actually let you do anything, for the record -- <code>PartialEq</code> is the trait that provides the <code>==</code> operator. <code>Eq</code> just requires <code>PartialEq&lt;Self&gt;</code>."}], "owner": {"reputation": 40758, "user_id": 3886, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/fd04cb73de5ffd81321a85c45dc75724?s=128&d=identicon&r=PG", "display_name": "dicroce", "link": "https://stackoverflow.com/users/3886/dicroce"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 92, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1569895134, "creation_date": 1569871316, "last_edit_date": 1569895134, "question_id": 58174052, "link": "https://stackoverflow.com/questions/58174052/equality-comparison-of-primitives-through-an-eq-trait", "title": "Equality comparison of primitives through an Eq trait", "body": "<p>I have a struct, and ultimately I'd like to be able to access the fields of this struct through a hash for the purposes of comparing individual fields equality with other instances of the same setup.</p>\n\n<p>The documentation for the <code>Eq</code> trait seems to say that <code>Eq</code> is implemented for the primitive types (<code>u8</code>, <code>i16</code>, etc.). My goal is to store references to <code>Eq</code> in a map and then do equality comparison through them.</p>\n\n<pre><code>struct User {\n    id: u32,\n    age: u8,\n    fingers: u8,\n    toes: u8,\n}\n\nlet u1 = User { id: 1234, age: 42, fingers: 10, toes: 10 };\nlet u2 = User { id: 5678, age: 41, fingers: 10, toes: 10 };\n\nlet mut umap1: HashMap&lt;String, &amp;dyn Eq&gt; = HashMap::new();\n//                             ^^^^^^^ - Wrong... but I don't know if this is even possible.\n</code></pre>\n\n<p>What I'd like to do is insert into the hash something like:</p>\n\n<pre><code>umap1[\"id\"] = &amp;u1.id\numap1[\"age\"] = &amp;u1.age\n</code></pre>\n\n<p>I could then have a second hash (<code>umap2</code>) and do something like this:</p>\n\n<pre><code>if umap1[\"id\"] == umap2[\"id\"]\n</code></pre>\n\n<p>Possible?</p>\n\n<p>I believe <a href=\"https://stackoverflow.com/q/25339603/155423\">How to test for equality between trait objects?</a> is not really the same thing because it testing for equality between enums. I'd like to be able to take an <code>Eq</code> reference to a primitive type (like a <code>u16</code>, etc.) and compare it to another.</p>\n"}, {"tags": ["asynchronous", "struct", "rust", "async-await", "future"], "answers": [{"comments": [{"owner": {"reputation": 2754, "user_id": 1621232, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/4ca2ea1416fa3dc15d1037e6502ac4da?s=128&d=identicon&r=PG", "display_name": "Nicolas Marshall", "link": "https://stackoverflow.com/users/1621232/nicolas-marshall"}, "edited": false, "score": 0, "creation_date": 1569876134, "post_id": 58174632, "comment_id": 102730767, "body": "Thanks for the super clear answer. Also, good to know you can have a generic parameter be a <code>Future</code> without specifying the <code>Output</code>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 11, "last_activity_date": 1569936393, "last_edit_date": 1569936393, "creation_date": 1569873992, "answer_id": 58174632, "question_id": 58173711, "link": "https://stackoverflow.com/questions/58173711/how-can-i-store-an-async-function-in-a-struct-and-call-it-from-a-struct-instance/58174632#58174632", "title": "How can I store an async function in a struct and call it from a struct instance?", "body": "<p>Let's use this as our <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">Minimal, Reproducible Example</a>:</p>\n\n<pre><code>async fn foo(x: u8) -&gt; u8 {\n    2 * x\n}\n\nstruct S {\n    foo: (),\n}\n\nasync fn example() {\n    let s = S { foo };\n}\n</code></pre>\n\n<p>It produces the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:10:17\n   |\n10 |     let s = S { foo };\n   |                 ^^^ expected (), found fn item\n   |\n   = note: expected type `()`\n              found type `fn(u8) -&gt; impl std::future::Future {foo}`\n</code></pre>\n\n<p>The type of <code>foo</code> is a function pointer that takes a <code>u8</code> and returns some type implementing the trait <code>std::future::Future</code>. <code>async fn</code> is effectively just syntax sugar that transforms <code>-&gt; Foo</code> into <code>-&gt; impl Future&lt;Output = Foo&gt;</code>.</p>\n\n<p>We make our struct generic and place a trait bound on the generic that matches. In real code, you'd probably want to place a constraint on the the <code>Output</code> associated type, but it's not needed for this example. We can then call the function like any other callable member field:</p>\n\n<pre><code>async fn foo(x: u8) -&gt; u8 {\n    2 * x\n}\n\nstruct S&lt;F&gt;\nwhere\n    F: std::future::Future,\n{\n    foo: fn(u8) -&gt; F,\n}\n\nimpl&lt;F&gt; S&lt;F&gt;\nwhere\n    F: std::future::Future,\n{\n    async fn do_thing(self) {\n        (self.foo)(42).await;\n    }\n}\n\nasync fn example() {\n    let s = S { foo };\n    s.do_thing().await;\n}\n</code></pre>\n\n<p>To be even more flexible, you could use another generic to store a closure, instead of forcing only a function pointer:</p>\n\n<pre><code>struct S&lt;C, F&gt;\nwhere\n    C: Fn(u8) -&gt; F,\n    F: std::future::Future,\n{\n    foo: C,\n}\n\nimpl&lt;C, F&gt; S&lt;C, F&gt;\nwhere\n    C: Fn(u8) -&gt; F,\n    F: std::future::Future,\n{\n    async fn do_thing(self) {\n        (self.foo)(42).await;\n    }\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/27994509/155423\">How do I call a function through a member variable?</a></li>\n<li><a href=\"https://stackoverflow.com/q/27831944/155423\">How do I store a closure in a struct in Rust?</a></li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 1067, "user_id": 1783732, "user_type": "registered", "accept_rate": 39, "profile_image": "https://www.gravatar.com/avatar/b2d57b42782b30f9c394b5ee213cc7c2?s=128&d=identicon&r=PG", "display_name": "user1783732", "link": "https://stackoverflow.com/users/1783732/user1783732"}, "edited": false, "score": 0, "creation_date": 1614367923, "post_id": 66070319, "comment_id": 117373908, "body": "This answer inspired me to look up <code>BoxFuture</code> and solved my problem at hand. Thank you!"}], "tags": [], "owner": {"reputation": 4500, "user_id": 8858995, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44d1981ec5dd8311a79e695d512716ef?s=128&d=identicon&r=PG&f=1", "display_name": "Ibraheem Ahmed", "link": "https://stackoverflow.com/users/8858995/ibraheem-ahmed"}, "is_accepted": false, "score": 3, "last_activity_date": 1612557778, "creation_date": 1612557778, "answer_id": 66070319, "question_id": 58173711, "link": "https://stackoverflow.com/questions/58173711/how-can-i-store-an-async-function-in-a-struct-and-call-it-from-a-struct-instance/66070319#66070319", "title": "How can I store an async function in a struct and call it from a struct instance?", "body": "<p>Another way to store an async function is with trait objects. This is useful if you want to be able to swap out the function dynamically at runtime. To do this, we can store a boxed <code>Fn</code> that returns an owned future:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>struct S {\n    foo: Box&lt;dyn Fn(u8) -&gt; Pin&lt;Box&lt;dyn Future&lt;Output = u8&gt;&gt;&gt;&gt;,\n}\n</code></pre>\n<p>However, if we try to initialize <code>S</code>, we immediately run into a problem:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>async fn foo(x: u8) -&gt; u8 {\n    2 * x\n}\n</code></pre>\n<pre class=\"lang-none prettyprint-override\"><code>error[E0271]: type mismatch resolving `&lt;fn(u8) -&gt; impl futures::Future {foo} as FnOnce&lt;(u8,)&gt;&gt;::Output == Pin&lt;Box&lt;(dyn futures::Future&lt;Output = u8&gt; + 'static)&gt;&gt;`\n  --&gt; src/lib.rs:14:22\n   |\n5  | async fn foo(x: u8) -&gt; u8 {\n   |                        -- the `Output` of this `async fn`'s found opaque type\n...\n14 |     let s = S { foo: Box::new(foo) };\n   |                      ^^^^^^^^^^^^^ expected struct `Pin`, found opaque type\n   |\n   = note: expected struct `Pin&lt;Box&lt;(dyn futures::Future&lt;Output = u8&gt; + 'static)&gt;&gt;`\n           found opaque type `impl futures::Future`\n</code></pre>\n<p>The error message is pretty clear. <code>S</code> expects a owned <code>Future</code>, but <code>async</code> functions return <code>impl Future</code>. We can solve it by converting <code>foo</code> to return a boxed future. However, that would mean we lose the ergonomics of the <code>async</code>/<code>await</code> syntax. Instead, we can create our own trait for async functions:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use futures::future::LocalBoxFuture;\n\ntrait AsyncFn {\n    fn call(&amp;self, args: u8) -&gt; LocalBoxFuture&lt;'static, u8&gt;;\n}\n</code></pre>\n<p>And implement it for the function type we want to store:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>impl&lt;T, F&gt; AsyncFn for T\nwhere\n    T: Fn(u8) -&gt; F,\n    F: Future&lt;Output = u8&gt; + 'static,\n{\n    fn call(&amp;self, args: u8) -&gt; LocalBoxFuture&lt;'static, u8&gt; {\n        Box::pin(self(args))\n    }\n}\n</code></pre>\n<p>And our code now compiles!</p>\n<pre class=\"lang-rust prettyprint-override\"><code>struct S {\n    foo: Box&lt;dyn AsyncFn&gt;,\n}\n\nasync fn example() {\n    let s = S { foo: Box::new(foo) };\n}\n</code></pre>\n<p>Of course, <code>AsyncFn</code> as defined above is pretty limited as it is bound to returning a <code>u8</code>. For a more generic <code>AsyncFn</code>, you could use a trait similar to this one:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>trait AsyncFn&lt;Args&gt; {\n    type Output: Future;\n    \n    fn call(a: Args) -&gt; Self::Output;\n}\n</code></pre>\n"}], "owner": {"reputation": 2754, "user_id": 1621232, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/4ca2ea1416fa3dc15d1037e6502ac4da?s=128&d=identicon&r=PG", "display_name": "Nicolas Marshall", "link": "https://stackoverflow.com/users/1621232/nicolas-marshall"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3043, "favorite_count": 5, "accepted_answer_id": 58174632, "answer_count": 2, "score": 7, "last_activity_date": 1612557778, "creation_date": 1569869702, "last_edit_date": 1569916276, "question_id": 58173711, "link": "https://stackoverflow.com/questions/58173711/how-can-i-store-an-async-function-in-a-struct-and-call-it-from-a-struct-instance", "title": "How can I store an async function in a struct and call it from a struct instance?", "body": "<p>I'm trying to achieve this with the new <code>async</code>/<code>await</code> syntax, <code>std::future::Future</code>s and a recent version of Tokio. I'm using Tokio <code>0.2.0-alpha.4</code> and Rust <code>1.39.0-nightly</code>.</p>\n\n<p>Different things I've tried include:</p>\n\n<ul>\n<li>using <code>Box&lt;dyn&gt;</code>s for the types that I want to store in the struct</li>\n<li>using generics in the struct definition</li>\n</ul>\n\n<p>I couldn't quite get a minimal working version, so here's a simplified version of what I'm trying to achieve:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>async fn foo(x: u8) -&gt; u8 {\n    2 * x\n}\n\n// type StorableAsyncFn = Fn(u8) -&gt; dyn Future&lt;Output = u8&gt;;\n\nstruct S {\n    f: StorableAsyncFn,\n}\n\n#[tokio::main]\nasync fn main() -&gt; Result&lt;(), Box&lt;dyn std::error::Error + Send + Sync&gt;&gt; {\n    let s = S { f: foo };\n\n    let out = (s.f)(1).await;\n\n    Ok(())\n}\n</code></pre>\n\n<p>Of course this code fails to compile with the following error:</p>\n\n<pre><code>error[E0412]: cannot find type `StorableAsyncFn` in this scope\n</code></pre>\n\n<p><code>StorableAsyncFn</code> is not defined here, it's the type I'm trying to define.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1569868284, "post_id": 58173334, "comment_id": 102727631, "body": "AFAIK, no. I believe this to be for security reasons. The <a href=\"https://play.rust-lang.org/\" rel=\"nofollow noreferrer\">official Rust playground</a> has some (but not all) crates and allows inspecting the LLVM and assembly output of a program, but not with as many features."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569868306, "post_id": 58173334, "comment_id": 102727638, "body": "At some point, you should consider doing your investigation locally."}], "answers": [{"tags": [], "owner": {"reputation": 6100, "user_id": 464309, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/218a5a4c4df417cf0f2ad0d75b773d66?s=128&d=identicon&r=PG", "display_name": "AmigoNico", "link": "https://stackoverflow.com/users/464309/amigonico"}, "is_accepted": false, "score": 0, "last_activity_date": 1615976609, "creation_date": 1615976609, "answer_id": 66671118, "question_id": 58173334, "link": "https://stackoverflow.com/questions/58173334/how-do-i-use-external-crates-with-the-rust-compiler-explorer/66671118#66671118", "title": "How do I use external crates with the Rust compiler explorer?", "body": "<p>There is an (at time of writing still open) issue against Compiler Explorer asking for the ability to use commonly used Rust crates:</p>\n<p><a href=\"https://github.com/compiler-explorer/compiler-explorer/issues/754\" rel=\"nofollow noreferrer\">https://github.com/compiler-explorer/compiler-explorer/issues/754</a></p>\n"}], "owner": {"reputation": 191, "user_id": 7606550, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d280cfb4b941e8d99e8ee7c8ba3873ff?s=128&d=identicon&r=PG&f=1", "display_name": "David Sanders", "link": "https://stackoverflow.com/users/7606550/david-sanders"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 217, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1615976609, "creation_date": 1569868054, "last_edit_date": 1569868205, "question_id": 58173334, "link": "https://stackoverflow.com/questions/58173334/how-do-i-use-external-crates-with-the-rust-compiler-explorer", "title": "How do I use external crates with the Rust compiler explorer?", "body": "<p>Is it possible to use crates from crates.io with <a href=\"https://rust.godbolt.org/\" rel=\"nofollow noreferrer\">Matt Godbolt's Rust compiler explorer</a>? If so, how?</p>\n\n<p>Here's <a href=\"https://godbolt.org/z/DnDG8r\" rel=\"nofollow noreferrer\">my failed attempt</a>.</p>\n"}, {"tags": ["rust", "clang", "llvm", "ffi"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569867523, "post_id": 58173153, "comment_id": 102727272, "body": "Are your bytes marked as executable? I&#39;d expect not, if they are <code>static</code>."}, {"owner": {"reputation": 67, "user_id": 11379454, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xeu3m.jpg?s=128&g=1", "display_name": "centipede_", "link": "https://stackoverflow.com/users/11379454/centipede"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569867687, "post_id": 58173153, "comment_id": 102727337, "body": "What do you mean by &quot;marked as executable&quot; ? I also tried to declare <code>shellcode</code> as a common variable and logically it crashed too."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569867818, "post_id": 58173153, "comment_id": 102727398, "body": "What is your experience with shellcode and other types of exploits in this family? You may be missing a large amount of background information that would be immensely useful before trying it in a language like Rust."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569867859, "post_id": 58173153, "comment_id": 102727420, "body": "And dare I ask <i>why</i> you want to do this? There are legitimate reasons and not-so-legitimate reasons."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569867962, "post_id": 58173153, "comment_id": 102727477, "body": "Here are the first results I found <a href=\"https://stackoverflow.com/q/40936534/155423\">How to alloc a executable memory buffer?</a>; <a href=\"https://stackoverflow.com/q/3125756/155423\">Allocate executable ram in c on linux</a>; <a href=\"https://stackoverflow.com/q/44653960/155423\">How can i execute an executable from memory?</a>."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1569867974, "post_id": 58173153, "comment_id": 102727483, "body": "Are you using Clang to compile the C with the same settings and compile target as for the Rust? I don&#39;t know much about Windows and even less about Rust/Windows, but I believe there are at least 2 common toolchains and I see <code>msvcrt.dll</code> embedded in the &quot;executable&quot;. Using the same toolchain (except the LLVM frontend) would be a logical way to rule out a bunch of possible issues."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569868065, "post_id": 58173153, "comment_id": 102727533, "body": "<i>the answer is basically what I did</i> \u2014 it would be worth paying attention to the parts of the answer which are different. I would assume that if your code doesn&#39;t work and theirs does, then the differing aspects would play a large part in that."}, {"owner": {"reputation": 67, "user_id": 11379454, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xeu3m.jpg?s=128&g=1", "display_name": "centipede_", "link": "https://stackoverflow.com/users/11379454/centipede"}, "edited": false, "score": 0, "creation_date": 1569868242, "post_id": 58173153, "comment_id": 102727613, "body": "Well, if you want to know why. I mostly work on assembly, I code viruses, reverse them and learn how to recognize them. I&#39;m doing that because I just wanted to know how can I execute raw bytes before doing some process hollowing in Rust. But you&#39;re free to tell me what kind of background of informations I&#39;m missing if it will help me to execute those raw bytes in Rust (it works fine with other languages)"}, {"owner": {"reputation": 67, "user_id": 11379454, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xeu3m.jpg?s=128&g=1", "display_name": "centipede_", "link": "https://stackoverflow.com/users/11379454/centipede"}, "edited": false, "score": 0, "creation_date": 1569868536, "post_id": 58173153, "comment_id": 102727734, "body": "In the other post they convert  a <code>*mut u8</code> (by the function <code>map.data()</code>) to an <code>unsafe extern &quot;C&quot; fn</code>. I tried to convert my array to a <code>*mut u8</code> then to <code>unsafe extern &quot;C&quot; fn</code> and guess what ? It still crashes :("}, {"owner": {"reputation": 67, "user_id": 11379454, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xeu3m.jpg?s=128&g=1", "display_name": "centipede_", "link": "https://stackoverflow.com/users/11379454/centipede"}, "edited": false, "score": 0, "creation_date": 1569869003, "post_id": 58173153, "comment_id": 102727927, "body": "Yes the both programs are targeting the same architecture. <code>gcc [...] -m32</code> for C and <code>rustc [...] --target=i686-pc-windows-msvc</code> for Rust. And yes they&#39;re both using <code>msvcrt.dll</code>, the &quot;shellcode&quot; call <code>printf</code> by it&#39;s address from that DLL."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1569869406, "post_id": 58173153, "comment_id": 102728098, "body": "The other question also creates an executable (<code>MapOption::MapExecutable</code>) memory buffer using mmap, copies all the data to it, then executes it from that space. See also <a href=\"https://stackoverflow.com/q/39737813/155423\">Disabling stack protection in GCC not working</a>"}, {"owner": {"reputation": 67, "user_id": 11379454, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xeu3m.jpg?s=128&g=1", "display_name": "centipede_", "link": "https://stackoverflow.com/users/11379454/centipede"}, "edited": false, "score": 0, "creation_date": 1569869528, "post_id": 58173153, "comment_id": 102728163, "body": "Thanks :) but I saw that it use a crate when I read the topic and I would like to know if ther&#39;s a way to do it in pure Rust ?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569869661, "post_id": 58173153, "comment_id": 102728216, "body": "You should include those requirements <b>in your question</b>, otherwise you will get answers that aren&#39;t what you want."}, {"owner": {"reputation": 67, "user_id": 11379454, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xeu3m.jpg?s=128&g=1", "display_name": "centipede_", "link": "https://stackoverflow.com/users/11379454/centipede"}, "edited": false, "score": 0, "creation_date": 1569869731, "post_id": 58173153, "comment_id": 102728251, "body": "And why would I need to disable the stack protection of my C program ? I&#39;m not doing stack buffer overflow or others"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569869757, "post_id": 58173153, "comment_id": 102728267, "body": "You may also want to define &quot;pure Rust&quot;. Does calling FFI functions count as &quot;pure Rust&quot;? What prevents you from just copy-pasting the contents of the crates you want into the program you need \u2014 hooray no more crates... except for all of the crates that build the standard library. Should those be disregarded as well?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569869795, "post_id": 58173153, "comment_id": 102728281, "body": "That comment about C was to indicate that you might want to try opting <b>in</b> to the stack protection in C \u2014 that might give you the same kinds of errors."}, {"owner": {"reputation": 67, "user_id": 11379454, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xeu3m.jpg?s=128&g=1", "display_name": "centipede_", "link": "https://stackoverflow.com/users/11379454/centipede"}, "edited": false, "score": 0, "creation_date": 1569870064, "post_id": 58173153, "comment_id": 102728395, "body": "I edited the question. I just thought that I will be able to execute some raw bytes in a system oriented programming language as Rust without any extrenal crates. And I prefer understanding what I&#39;m doing, I don&#39;t like just calling functions when I can do it by myself"}, {"owner": {"reputation": 4061, "user_id": 3393058, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/TmKho.png?s=128&g=1", "display_name": "Aloso", "link": "https://stackoverflow.com/users/3393058/aloso"}, "edited": false, "score": 2, "creation_date": 1569878786, "post_id": 58173153, "comment_id": 102731676, "body": "I&#39;d like to try this out. Will it install a virus, steal my passwords or crash my computer?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 4061, "user_id": 3393058, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/TmKho.png?s=128&g=1", "display_name": "Aloso", "link": "https://stackoverflow.com/users/3393058/aloso"}, "edited": false, "score": 0, "creation_date": 1569879756, "post_id": 58173153, "comment_id": 102731960, "body": "@Aloso that\u2019s the correct mindset for this type of question. Unfortunately, the OP has not provided instructions to produce the shellcode or even what platform it targets, so this question should likely be closed as it does not have a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1569881016, "post_id": 58173153, "comment_id": 102732312, "body": "How do you know that <code>gcc -m32</code> generates code that uses the same <code>&quot;C&quot;</code> calling convention as <code>--target=i686-pc-windows-msvc</code>? Again, I suggest you try compiling the C code with Clang."}, {"owner": {"reputation": 67, "user_id": 11379454, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xeu3m.jpg?s=128&g=1", "display_name": "centipede_", "link": "https://stackoverflow.com/users/11379454/centipede"}, "edited": false, "score": 0, "creation_date": 1569908959, "post_id": 58173153, "comment_id": 102737638, "body": "The &quot;shellcode&quot; just print &quot;yop&quot; at the screen but it will not work on an other computer because the shellcode contain the address of printf in <code>msvcrt.dll</code> in my computer. I tried to just execute a <code>jmp $</code> -&gt; <code>\\xeb\\xfe</code> and it crashed too. I literally can&#39;t execute raw bytes in Rust"}, {"owner": {"reputation": 67, "user_id": 11379454, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xeu3m.jpg?s=128&g=1", "display_name": "centipede_", "link": "https://stackoverflow.com/users/11379454/centipede"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569909642, "post_id": 58173153, "comment_id": 102737853, "body": "@Shepmaster you can reproduce what I did by replacing my shellcode by a simple <code>xor eax, eax</code> or whatever you want, yes I should have only put a simple instruction as my shellcode I didn&#39;t thought about that."}, {"owner": {"reputation": 67, "user_id": 11379454, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xeu3m.jpg?s=128&g=1", "display_name": "centipede_", "link": "https://stackoverflow.com/users/11379454/centipede"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1569912462, "post_id": 58173153, "comment_id": 102738889, "body": "@trentcl Thanks for the help, I compiled my C code with <code>Clang</code> and yeah it didn&#39;t worked for a <code>jmp $</code>. So I think my final question might be &quot;<i>How to execute raw bytes on a LLVM program</i>&quot;. Should I edit all my question or post an other one with the <code>C</code> and <code>LLVM</code> flag ?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1569925806, "post_id": 58173153, "comment_id": 102745531, "body": "I&#39;d post a new one, if it were me."}, {"owner": {"reputation": 67, "user_id": 11379454, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xeu3m.jpg?s=128&g=1", "display_name": "centipede_", "link": "https://stackoverflow.com/users/11379454/centipede"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1569938380, "post_id": 58173153, "comment_id": 102752513, "body": "@trentcl I will do that in a few hours. Thanks for the help :)."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1569941378, "post_id": 58173153, "comment_id": 102754494, "body": "Besides <a href=\"https://stackoverflow.com/questions/tagged/c\">c</a> and <a href=\"https://stackoverflow.com/questions/tagged/llvm\">llvm</a>, also consider <a href=\"https://stackoverflow.com/questions/tagged/windows\">windows</a> as this pertains to platform-and toolchain-specific conventions"}, {"owner": {"reputation": 67, "user_id": 11379454, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xeu3m.jpg?s=128&g=1", "display_name": "centipede_", "link": "https://stackoverflow.com/users/11379454/centipede"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1569943767, "post_id": 58173153, "comment_id": 102755859, "body": "@trentcl okay I&#39;ll do that."}, {"owner": {"reputation": 67, "user_id": 11379454, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xeu3m.jpg?s=128&g=1", "display_name": "centipede_", "link": "https://stackoverflow.com/users/11379454/centipede"}, "edited": false, "score": 0, "creation_date": 1569946820, "post_id": 58173153, "comment_id": 102757361, "body": "Here is the new topic if you would like to take a look for any reason: <a href=\"https://stackoverflow.com/questions/58188815/how-do-i-execute-raw-bytes-of-machine-code-compatible-with-llvm-frontend\">How do I execute raw bytes of machine code compatible with LLVM frontend</a>"}, {"owner": {"reputation": 67968, "user_id": 584192, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/YBSIc.png?s=128&g=1", "display_name": "Samuel Liew", "link": "https://stackoverflow.com/users/584192/samuel-liew"}, "edited": false, "score": 0, "creation_date": 1569984811, "post_id": 58173153, "comment_id": 102768075, "body": "Comments are not for extended discussion; this conversation has been <a href=\"https://chat.stackoverflow.com/rooms/200272/discussion-on-question-by-centipede-how-do-i-execute-raw-bytes-of-machine-shell\">moved to chat</a>."}], "owner": {"reputation": 67, "user_id": 11379454, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xeu3m.jpg?s=128&g=1", "display_name": "centipede_", "link": "https://stackoverflow.com/users/11379454/centipede"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 490, "favorite_count": 1, "answer_count": 0, "score": 1, "last_activity_date": 1569936531, "creation_date": 1569867190, "last_edit_date": 1569936531, "question_id": 58173153, "link": "https://stackoverflow.com/questions/58173153/how-do-i-execute-raw-bytes-of-machine-shellcode-compatible-with-llvm-frontend-ex", "title": "How do I execute raw bytes of machine shellcode compatible with LLVM frontend executables", "body": "<p>I'm trying to execute some x86 machine code that execute <code>jmp $</code> (<code>\\xeb\\xfe</code>) directly from Rust but the executable just crashes.</p>\n\n<p>I successfully did it in C with the GCC compiler but it also crashes with Clang:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>#include &lt;stdio.h&gt;\n\nchar code[] = \"\\xeb\\xfe\";\n\nint main(int argc, char **argv){\n    int (*func)();\n    func = (int (*)()) code;\n    (int)(*func)();\n}\n</code></pre>\n\n<p>To do it in pure Rust, I converted my byte array into a void pointer (<code>*const ()</code>) then converted it into a <code>unsafe extern \"C\" fn () -&gt; !</code> with <code>std::mem::transmute</code>:</p>\n\n<pre><code>static shellcode: [u8; 73] = *b\"\\xeb\\xfe\";\nfn main() -&gt; std::io::Result&lt;()&gt; {\n    let raw: unsafe extern \"C\" fn() -&gt; ! =\n        unsafe { std::mem::transmute(&amp;shellcode.as_ptr() as *const _ as *const ()) };\n    unsafe { raw() };\n    return Ok(());\n}\n</code></pre>\n\n<p>I already read <a href=\"https://stackoverflow.com/questions/55856247/how-to-execute-raw-instructions-from-a-memory-buffer-in-rust\">How to execute raw instructions from a memory buffer in Rust?</a> and the answer is basically what I did so I'm kind of confused...</p>\n\n<p>I have compiled the Rust code for x86/x64 and both crashed, I think that the \"shellcode\" isn't compatible with LLVM.</p>\n"}, {"tags": ["rust", "future"], "answers": [{"tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": true, "score": 1, "last_activity_date": 1569861256, "creation_date": 1569861256, "answer_id": 58171907, "question_id": 58171755, "link": "https://stackoverflow.com/questions/58171755/is-there-a-way-to-continue-within-a-futures-for-each-stream/58171907#58171907", "title": "Is there a way to continue within a futures for_each stream?", "body": "<p>Let's solve the two issues separately. First, the easiest: if your chain of futures inside <code>for_each()</code> is not homogeneous (they rarely will be), consider returning a boxed future (i.e. <code>Box&lt;dyn Future&lt;Item = _, Error = _&gt;&gt;</code>). You may need to typecast the closure return to that, as the compiler will sometimes not get what you are trying to do.</p>\n\n<p>Now, for the \"continue if condition\" - this typically means you're filtering out certain elements of the stream, which indicates that the better function to call may include <code>filter()</code> or an intermediate state - i.e. returning a future whose item type is <code>Option&lt;_&gt;</code>, and then filtering based on that in the next member of the chain.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 0, "last_activity_date": 1569862087, "last_edit_date": 1569862087, "creation_date": 1569861378, "answer_id": 58171939, "question_id": 58171755, "link": "https://stackoverflow.com/questions/58171755/is-there-a-way-to-continue-within-a-futures-for-each-stream/58171939#58171939", "title": "Is there a way to continue within a futures for_each stream?", "body": "<p>No, you cannot. <code>continue</code> is syntax that is only accepted by the core Rust language and crates cannot make use of it.</p>\n\n<p>You could instead return early:</p>\n\n<pre><code>rx.for_each(move |trade| {\n    if true {\n        return future::ok(());\n    }\n\n    future::ok(())\n});\n</code></pre>\n\n<blockquote>\n  <p>both branches have to return the same type of future</p>\n</blockquote>\n\n<p>Use <code>Either</code> or a boxed trait object</p>\n\n<pre><code>rx.for_each(move |trade| {\n    if true {\n        return Either::A(future::ok(()));\n    }\n\n    Either::B(future::lazy(|| future::ok(())))\n});\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/51885745/155423\">How do I conditionally return different types of futures?</a></li>\n</ul>\n\n<p>I'd probably move the condition to the stream such that the <code>for_each</code> never sees it:</p>\n\n<pre><code>rx.filter(|trade| true)\n    .for_each(move |trade| future::ok(()));\n</code></pre>\n"}], "owner": {"reputation": 101, "user_id": 12136701, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/131081f19af34584cda29e81ec2b3a8b?s=128&d=identicon&r=PG&f=1", "display_name": "james pearson", "link": "https://stackoverflow.com/users/12136701/james-pearson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 311, "favorite_count": 0, "accepted_answer_id": 58171907, "answer_count": 2, "score": 0, "last_activity_date": 1569862087, "creation_date": 1569860672, "last_edit_date": 1569861085, "question_id": 58171755, "link": "https://stackoverflow.com/questions/58171755/is-there-a-way-to-continue-within-a-futures-for-each-stream", "title": "Is there a way to continue within a futures for_each stream?", "body": "<p>I am doing a <code>for_each</code> loop over a stream of futures received via a <code>mspc::Receiver</code></p>\n\n<pre><code>rx.for_each(move |trade| {\n    if something_true {\n        continue;\n    }\n\n    // down here I have computation logic which returns a future\n});\n</code></pre>\n\n<p>I would like to do something like the logic above.</p>\n\n<p>Of course, I could just do an if/else statement but both branches have to return the same type of future, which is hard for me to do as the future I generate in my computation logic is a long chain of messy futures. Which got me thinking if there is actually a simple way of approaching this, like a continue or some sort?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569855283, "post_id": 58170395, "comment_id": 102722029, "body": "It&#39;s hard to answer your question because it doesn&#39;t include a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. You need to provide the Cargo.toml as well as the contents of the library. Please remove <b>everything</b> from the library that does not contribute to the error; it&#39;s very likely that your library will be a single line when you&#39;ve done this completely! There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MRE tips</a> you can use to reduce your original code for posting here. Thanks!"}, {"owner": {"reputation": 6798, "user_id": 4174897, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/gS0gI.jpg?s=128&g=1", "display_name": "Kyll", "link": "https://stackoverflow.com/users/4174897/kyll"}, "edited": false, "score": 0, "creation_date": 1569855441, "post_id": 58170395, "comment_id": 102722106, "body": "I don&#39;t understand the link between your question title and its body, could you please explain?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 6798, "user_id": 4174897, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/gS0gI.jpg?s=128&g=1", "display_name": "Kyll", "link": "https://stackoverflow.com/users/4174897/kyll"}, "edited": false, "score": 0, "creation_date": 1569855517, "post_id": 58170395, "comment_id": 102722146, "body": "@PaulStenne note that I changed the title in an attempt to make it clearer \u2014 is it better or worse now?"}, {"owner": {"reputation": 6798, "user_id": 4174897, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/gS0gI.jpg?s=128&g=1", "display_name": "Kyll", "link": "https://stackoverflow.com/users/4174897/kyll"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569855808, "post_id": 58170395, "comment_id": 102722288, "body": "@Shepmaster Oh. Uh. Not sure? I don&#39;t really understand the intent between the first title neither. Maybe it&#39;s an auto-completion issue?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 6798, "user_id": 4174897, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/gS0gI.jpg?s=128&g=1", "display_name": "Kyll", "link": "https://stackoverflow.com/users/4174897/kyll"}, "edited": false, "score": 1, "creation_date": 1569856018, "post_id": 58170395, "comment_id": 102722403, "body": "@PaulStenne my interpretation of the question suggests that the OP has created a library crate and wants to use that library in the Cargo examples. However, they are getting an error, so they want to figure out how to use the library &quot;outside&quot; of the <code>src</code> directory (that&#39;s my logical leap). I changed the title to match what is in the body: that they cannot use it in an example."}, {"owner": {"reputation": 6798, "user_id": 4174897, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/gS0gI.jpg?s=128&g=1", "display_name": "Kyll", "link": "https://stackoverflow.com/users/4174897/kyll"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569856063, "post_id": 58170395, "comment_id": 102722430, "body": "@Shepmaster Well you&#39;re more of an expert than I. Lemmy, could you please explain us what you are trying to achieve?"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1569856095, "post_id": 58170395, "comment_id": 102722446, "body": "What&#39;s in your <code>Cargo.toml</code>? And what command do you run to get the error?"}, {"owner": {"reputation": 659, "user_id": 6845084, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/253b377ee6c971f363de927136d30117?s=128&d=identicon&r=PG", "display_name": "Palash Nigam", "link": "https://stackoverflow.com/users/6845084/palash-nigam"}, "edited": false, "score": 0, "creation_date": 1569856414, "post_id": 58170395, "comment_id": 102722581, "body": "Apologies for the incomplete post, I have updated the description"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1569857441, "last_edit_date": 1569857441, "creation_date": 1569856467, "answer_id": 58170737, "question_id": 58170395, "link": "https://stackoverflow.com/questions/58170395/how-to-call-rust-code-outside-of-the-libraries-directory-when-compiling-code-usi/58170737#58170737", "title": "How to call Rust code outside of the libraries directory when compiling code using rustc?", "body": "<h1>The idiomatic answer</h1>\n\n<blockquote>\n  <p>when I run this <code>rustc examples/main.rs</code></p>\n</blockquote>\n\n<p>Don't do that. Use either <code>cargo run --example main</code> or <code>cargo build --example main</code> instead.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/44483749/155423\">Why should I use Cargo if &quot;cargo build&quot; is slower than running rustc directly?</a></li>\n</ul>\n\n<h1>The literal answer</h1>\n\n<p>When you build an example, there are two crates involved:</p>\n\n<ol>\n<li>The library crate</li>\n<li>The example crate</li>\n</ol>\n\n<p>You would need to build the library crate, then inform the compiler about that crate when building the example crate. This is extremely tedious work that no one generally wants to do. It would look something like:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ rustc --edition=2018 --crate-type=rlib --crate-name library_example src/lib.rs -o libmy_library.rlib\n$ rustc --edition=2018 --extern library_example=libmy_library.rlib examples/main.rs\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/36813893/155423\">Can I install a library using cargo without a Cargo.toml?</a></li>\n</ul>\n"}], "owner": {"reputation": 659, "user_id": 6845084, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/253b377ee6c971f363de927136d30117?s=128&d=identicon&r=PG", "display_name": "Palash Nigam", "link": "https://stackoverflow.com/users/6845084/palash-nigam"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 112, "favorite_count": 0, "accepted_answer_id": 58170737, "answer_count": 1, "score": 2, "last_activity_date": 1569857441, "creation_date": 1569855136, "last_edit_date": 1569856441, "question_id": 58170395, "link": "https://stackoverflow.com/questions/58170395/how-to-call-rust-code-outside-of-the-libraries-directory-when-compiling-code-usi", "title": "How to call Rust code outside of the libraries directory when compiling code using rustc?", "body": "<p>I am trying to write a Rust library with this layout:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>.\n\u251c\u2500\u2500 Cargo.lock\n\u251c\u2500\u2500 Cargo.toml\n\u251c\u2500\u2500 examples\n\u2502   \u2514\u2500\u2500 main.rs\n\u251c\u2500\u2500 src\n\u2502   \u251c\u2500\u2500 client.rs\n\u2502   \u2514\u2500\u2500 lib.rs\n\u2514\u2500\u2500 target\n    \u2514\u2500\u2500 rls\n        \u2514\u2500\u2500 debug\n            \u251c\u2500\u2500 build\n            \u251c\u2500\u2500 deps\n</code></pre>\n\n<p><code>client.rs</code> has all the code and the client struct is public</p>\n\n<p><code>lib.rs</code> contains <code>pub mod client;</code></p>\n\n<p><strong>examples/main.rs</strong>: </p>\n\n<pre><code>extern crate fistrs;\n\nuse fistrs::client::FistClient;\n\nfn main() {\n    let mut client = FistClient::new(\"localhost\", \"5575\");\n    client.connect();\n}\n</code></pre>\n\n<p>but I get an error when I run this <code>rustc examples/main.rs</code></p>\n\n<pre class=\"lang-none prettyprint-override\"><code> --&gt; examples/main.rs:1:1\n  |\n1 | extern crate fistrs;\n  | ^^^^^^^^^^^^^^^^^^^^ can't find crate\n</code></pre>\n\n<p>Here is my <code>Cargo.toml</code></p>\n\n<pre><code>[package]\nname = \"fistrs\"\nversion = \"0.1.0\"\nauthors = [\"palash25 &lt;npalash25@gmail.com&gt;\"]\nedition = \"2018\"\n\n# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html\n\n[dependencies]\n\n</code></pre>\n"}, {"tags": ["import", "rust", "package"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569848183, "post_id": 58167542, "comment_id": 102717991, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/43070430/155423\">Is there a way to use the cfg(feature) check on multiple statements?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/58167542/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569848354, "post_id": 58167542, "comment_id": 102718106, "body": "@Shepmaster none of the answer gives the simple solution that applies to use imports."}], "answers": [{"comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1569845520, "post_id": 58167569, "comment_id": 102716595, "body": "&quot;never found it documented but it&#39;s what my experience tends to prove&quot; \u2192 It&#39;s actually <a href=\"https://doc.rust-lang.org/reference/attributes.html\" rel=\"nofollow noreferrer\">well documented</a> that attributes apply to the following &quot;thing&quot; (and outer attributes (<code>#!</code>) to the &quot;thing&quot; that contains them)."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1569845839, "post_id": 58167569, "comment_id": 102716735, "body": "@mcarton Can we really take &quot;thing&quot; as a spec word ? What is it ? A paragraph ? A function ? A module ?This is way too fuzy and that&#39;s why I maintain it&#39;s not documented."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1569847030, "post_id": 58167569, "comment_id": 102717346, "body": "Are you complaining about vocabulary when you are not using proper vocabulary either? <code>use</code> is not a statement, it&#39;s an item. They use &quot;thing&quot; in the documentation because those terms have precise definitions that are usually not important for most people. Attributes apply to most things, be they items, statements, function parameters, etc, so the documentation just call them &quot;thing&quot;."}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 2, "creation_date": 1569847183, "post_id": 58167569, "comment_id": 102717425, "body": "In such formal documentation I would expect precision. Thing is not a well defined term imo too."}, {"owner": {"reputation": 4061, "user_id": 3393058, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/TmKho.png?s=128&g=1", "display_name": "Aloso", "link": "https://stackoverflow.com/users/3393058/aloso"}, "edited": false, "score": 0, "creation_date": 1569879463, "post_id": 58167569, "comment_id": 102731878, "body": "The documentation explains in detail to what things attributes can be applied, so &quot;thing&quot; is well defined in this context: &quot;Thing&quot; refers to an item declaration, external block, function, implementation, module, statement, expression, enum variant, struct/union field, match expression arm or generic type or lifetime parameter."}], "tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": true, "score": 5, "last_activity_date": 1569906266, "last_edit_date": 1569906266, "creation_date": 1569845044, "answer_id": 58167569, "question_id": 58167542, "link": "https://stackoverflow.com/questions/58167542/how-to-group-imports-in-rust-with-conditional-compilation/58167569#58167569", "title": "How to group imports in Rust with conditional compilation?", "body": "<p>You can group use imports this way:</p>\n\n<pre><code>#[cfg(target_os = \"windows\")]\nuse {\n    windows_lib1,\n    windows_lib2,\n};\n</code></pre>\n"}], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 580, "favorite_count": 0, "accepted_answer_id": 58167569, "answer_count": 1, "score": 6, "last_activity_date": 1569906266, "creation_date": 1569844957, "last_edit_date": 1569848429, "question_id": 58167542, "link": "https://stackoverflow.com/questions/58167542/how-to-group-imports-in-rust-with-conditional-compilation", "title": "How to group imports in Rust with conditional compilation?", "body": "<p>I am looking to group all my imports with conditional compilation.</p>\n\n<p>I know that the <code>#[cfg(target_os = \"windows\")]</code> attribute organises the import, but it only works for one import.</p>\n\n<p>How can I import multiple packages with one conditional compilation attribute?</p>\n\n<p>I am looking for something like: </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[cfg(target_os = \"windows\")]\n{\n    use windows_lib1;\n    use windows_lib2;\n}\n\n#[cfg(target_os = \"linux\")]\n{\n    use linux_lib1;\n    use linux_lib2;\n}\n</code></pre>\n"}, {"tags": ["c", "rust", "ffi"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1569840520, "post_id": 58165952, "comment_id": 102714228, "body": "<a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.as_ptr\" rel=\"nofollow noreferrer\">The caller must ensure that the vector outlives the pointer this function returns, or else it will end up pointing to garbage. Modifying the vector may cause its buffer to be reallocated, which would also make any pointers to it invalid.</a>"}], "answers": [{"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1569861557, "post_id": 58166298, "comment_id": 102724932, "body": "<code>forget</code> on a <code>Vec</code> doesn&#39;t allow you to recover it unless you save its capacity. If you only save the <code>ptr</code> and the <code>len</code>gth, you need to do <code>shrink_to_fit</code> first to guarantee there&#39;s no excess capacity, and then do <code>Vec::from_raw_parts(ptr, len, len)</code> to recover it. Or, my preferred solution, use <code>into_boxed_slice</code> + <code>Box::into_raw</code>, then <code>Box::from_raw</code> to recover and free it."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1569861764, "post_id": 58166298, "comment_id": 102725024, "body": "@trentcl Very worthwhile addition there. Do you mind if I expand on the second option in the answer (with attribution, of course)?"}, {"owner": {"reputation": 1837, "user_id": 613016, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/o3Ywp.jpg?s=128&g=1", "display_name": "Pantelis Sopasakis", "link": "https://stackoverflow.com/users/613016/pantelis-sopasakis"}, "edited": false, "score": 0, "creation_date": 1569862545, "post_id": 58166298, "comment_id": 102725313, "body": "@S&#233;bastienRenauld Thanks a lot for your answer. I&#39;d rather not change <code>lagrange_multipliers</code> as a lot of functionality depends on it borrowing <code>self</code>. It&#39;s also important that it returns <code>Option</code> instead of <code>Vec</code>. The above code, with the exception of <code>AlmOptimizerStatus</code> is actually auto-generated, so I know the size of <code>lagrange_multipliers</code>. As a workaround, I currently define <code>langrange</code> to be a fixed-size array (<code>[c_double; N1]</code>) and then copy the data from <code>status.lagrange_multipliers()</code> to <code>lagrange</code>."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 1837, "user_id": 613016, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/o3Ywp.jpg?s=128&g=1", "display_name": "Pantelis Sopasakis", "link": "https://stackoverflow.com/users/613016/pantelis-sopasakis"}, "edited": false, "score": 0, "creation_date": 1569863131, "post_id": 58166298, "comment_id": 102725561, "body": "@PantelisSopasakis Both points would be fine if you were not immediately dropping the <code>struct</code> immediately after returning. That&#39;s your core issue - you&#39;re dropping <code>status</code> before using the pointer, and why I suggested not borrowing <code>self</code> (your MCVE made zero use of it). You&#39;ll need to find a solution for this, whether it is keeping the struct as a member of another struct, or copying the <code>Vec</code>."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1569864726, "post_id": 58166298, "comment_id": 102726172, "body": "Sure, please do! I don&#39;t request attribution for making unsolicited suggestions, but do what you feel is appropriate."}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": false, "score": 2, "last_activity_date": 1569840339, "creation_date": 1569840339, "answer_id": 58166298, "question_id": 58165952, "link": "https://stackoverflow.com/questions/58165952/pointer-from-rust-to-c-via-bindgen-first-element-is-always-zero/58166298#58166298", "title": "Pointer from Rust to C via bindgen: first element is always zero", "body": "<p>I'm pretty sure the issue lies in your implementation of <code>marietta_solve</code>. Let's walk through line by line</p>\n\n<pre><code>let status = solve(params, &amp;mut instance.cache, u, 0, 0);\n</code></pre>\n\n<p>You've assigned an <code>AlmOptimizerStatus</code> and all its inner members. Up to here, everything is kosher (assuming <code>solve</code> doesn't do silly things)</p>\n\n<pre><code>mariettaSolverStatus {\n  lagrange: match &amp;status.lagrange_multipliers() {\n    /* cast status.lagrange_multipliers() as a `*const c_double`,\n     * i.e., get a constant pointer to the data\n     */\n    Some(y) =&gt; {y.as_ptr() as *const c_double},\n    /* return NULL, otherwise */\n    None =&gt; {0 as *const c_double},\n  }\n}\n</code></pre>\n\n<p>You then decide to return a <strong>raw pointer</strong> to a <code>struct</code> that is about to get out of scope and get dropped (<code>status</code>). Inside, you have the <code>Option&lt;Vec&lt;f64&gt;&gt;</code> you are returning a pointer to.</p>\n\n<p>As a result, this leads to UB - your vector is no longer in memory, but you have a raw pointer to it. And, since rust does not protect you against this when using raw pointers, no error comes out. The moment you allocate something else (as you do when you defined <code>int i</code>), you potentially overwrite some of the memory you've used (and freed) prior.</p>\n\n<p>You can convince yourself of this with this <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=fc2a52b26a00909df5eef4f88806089d\" rel=\"nofollow noreferrer\">playground example</a>, where I have replaced the raw pointers with references to trigger the borrow checker.</p>\n\n<p>In order to get out of this problem, you will need to forcibly cause Rust to forget the existence of the vector, like so (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=cae4d404e1c10026fcea5d923c0e8e28\" rel=\"nofollow noreferrer\"><strong>playground</strong></a>):</p>\n\n<pre><code>impl AlmOptimizerStatus {\n\n    pub fn lagrange_multipliers(self) -&gt; Vec&lt;f64&gt; {\n        self.lagrange_multipliers.unwrap_or(vec![])\n    }\n\n}\nfn test() -&gt; *const c_double {\n\n   let status = solve();\n\n   let output = status.lagrange_multipliers();\n   let ptr = output.as_ptr();\n   std::mem::forget(output);\n   ptr\n}\n</code></pre>\n\n<p>Notice the changes:</p>\n\n<ul>\n<li><code>lagrange_multipliers()</code> now destructures your <code>struct</code> and takes the inner vector. If you do not want this, you'll need to make a copy of it instead. As this wasn't the purpose of the question, I went with destructuring to keep the code down</li>\n<li><code>std::mem::forget</code> <em>forgets</em> a rust object, allowing it to go out of scope without being deallocated. This is how you typically pass objects across the FFI boundary, the second option being allocating memory via <code>MaybeUninit</code>, <code>std::ptr</code> or other means.</li>\n</ul>\n\n<p>And the evident gotcha: doing this without dealing with the memory leak we have created on either the C side (via <code>free</code>) or the rust side (by recombining the <code>Vec</code> and then properly dropping it) will, evidently, leak memory</p>\n"}], "owner": {"reputation": 1837, "user_id": 613016, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/o3Ywp.jpg?s=128&g=1", "display_name": "Pantelis Sopasakis", "link": "https://stackoverflow.com/users/613016/pantelis-sopasakis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 447, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1569840339, "creation_date": 1569839160, "question_id": 58165952, "link": "https://stackoverflow.com/questions/58165952/pointer-from-rust-to-c-via-bindgen-first-element-is-always-zero", "title": "Pointer from Rust to C via bindgen: first element is always zero", "body": "<p>I use bindgen to generate a C interface for my Rust code. I want to return a structure that contains an <code>Option&lt;Vec&lt;f64&gt;&gt;</code> from Rust to <code>C</code>. In <code>Rust</code> I have created the following structure:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[repr(C)]\npub struct mariettaSolverStatus {\n    lagrange: *const c_double\n}\n</code></pre>\n\n<p>which bindgen translates into the following C structure:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>/* Auto-generated structure */\ntypedef struct {\n  const double *lagrange;\n} mariettaSolverStatus;\n</code></pre>\n\n<p>the corresponding structure in Rust is</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct AlmOptimizerStatus {\n    lagrange_multipliers: Option&lt;Vec&lt;f64&gt;&gt;,\n}\n\nimpl AlmOptimizerStatus {\n\n    pub fn lagrange_multipliers(&amp;self) -&gt; &amp;Option&lt;Vec&lt;f64&gt;&gt; {\n        &amp;self.lagrange_multipliers\n    }\n\n}\n</code></pre>\n\n<p>The idea is to map <code>AlmOptimizerStatus</code> (in Rust) to <code>mariettaSolverStatus</code> (in C). When <code>lagrange_multipliers</code> is <code>None</code>, a null pointer will be assigned to the pointer in C.</p>\n\n<p>Now in Rust, I have the following function:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[no_mangle]\npub extern \"C\" fn marietta_solve(\n    instance: *mut mariettaCache,\n    u: *mut c_double,\n    params: *const c_double\n) -&gt; mariettaSolverStatus {\n\n  /* obtain an instance of `AlmOptimizerStatus`, which contains\n   *  an instance of `&amp;Option&lt;Vec&lt;f64&gt;&gt;` \n   */\n  let status = solve(params, &amp;mut instance.cache, u, 0, 0);\n\n  /* At this point, if we print status.langrange_multipliers() we get \n   *\n   *  Some([-14.079295698854809,\n   *         12.321753192707693,\n   *         2.5355683425384417\n   *       ])\n   *\n   */\n\n  /* return an instance of `mariettaSolverStatus` */\n  mariettaSolverStatus {\n    lagrange: match &amp;status.lagrange_multipliers() {\n        /* cast status.lagrange_multipliers() as a `*const c_double`,\n         * i.e., get a constant pointer to the data\n         */\n        Some(y) =&gt; {y.as_ptr() as *const c_double},\n        /* return NULL, otherwise */\n        None =&gt; {0 as *const c_double},\n    }\n  }\n}\n</code></pre>\n\n<p>Bindgen generates a C header and library files that allow us to invoke Rust functions in C. Up to this point I should say that I get no warnings from Rust.</p>\n\n<p>However, when I call the above function from C, using the auto-generated C interface, the <strong>first element</strong> of <code>mariettaSolverStatus.lagrange</code> is always <code>0</code>, whereas, all subsequent elements are correctly stored.</p>\n\n<p>This is my C code:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>#include &lt;stdio.h&gt;\n#include \"marietta_bindings.h\"\n\nint main() {\n    int i;\n    double p[MARIETTA_NUM_PARAMETERS] = {2.0, 10.0};  /* parameters    */\n    double u[MARIETTA_NUM_DECISION_VARIABLES] = {0};  /* initial guess */\n    double init_penalty = 10.0;\n    double y[MARIETTA_N1] = {0.0};\n\n    /* obtain cache */\n    mariettaCache *cache = marietta_new();\n\n    /* solve  */\n    mariettaSolverStatus status = marietta_solve(cache, u, p, y, &amp;init_penalty);\n\n    /* prints:\n     * y[0] = 0  &lt;------- WRONG!\n     * y[1] = 12.3218\n     * y[2] = 2.5356\n     */\n    for (i = 0; i &lt; MARIETTA_N1; ++i) {\n        printf(\"y[%d] = %g\\n\", i, status.lagrange[i]);\n    }\n\n\n    /* free memory */\n    marietta_free(cache);\n\n    return 0;\n}\n</code></pre>\n\n<p>I would guess that somehow, somewhere, some pointer goes out of scope.</p>\n"}, {"tags": ["rust", "escaping", "serde-json"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569861563, "post_id": 58161775, "comment_id": 102724936, "body": "It&#39;s hard to answer your question because it doesn&#39;t include a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. We can&#39;t tell what crates (and their versions), types, traits, fields, etc. are present in the code. It would make it easier for us to help you if you try to reproduce your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> if possible, otherwise in a brand new Cargo project, then <a href=\"https://stackoverflow.com/posts/58161775/edit\">edit</a> your question to include the additional info. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MRE tips</a> you can use to reduce your original code for posting here. Thanks!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569861639, "post_id": 58161775, "comment_id": 102724966, "body": "You also have some poorly named functions which might be underlying some of your problems. For example, you have a function called <code>aud_from_json</code> which does not take JSON as an argument. Instead, it seems to <b>create</b> JSON."}], "answers": [{"comments": [{"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1569836329, "post_id": 58164686, "comment_id": 102712104, "body": "His issue is about the &quot;extra escape characters serialized in the string&quot;, which you don&#39;t address at all"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1569836627, "post_id": 58164686, "comment_id": 102712257, "body": "Added a disclaimer, although I honestly don&#39;t see how that could be the issue. That is literally standard <code>Debug</code> behavior."}, {"owner": {"reputation": 357, "user_id": 1100765, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/37522facc8f6a42a2907ff8e4627a1ca?s=128&d=identicon&r=PG", "display_name": "Alex", "link": "https://stackoverflow.com/users/1100765/alex"}, "edited": false, "score": 0, "creation_date": 1569851922, "post_id": 58164686, "comment_id": 102720204, "body": "@S&#233;bastienRenauld, thanks for the clarification.  I do need to parse the string without the quotes since I need to decrypt the <code>aud</code> field.  I may have to do some more digging on <code>Deserialize</code> trait as you have pointed out or parse them out manually.  I thought perhaps serde-json had a convenience method to handle this case, that I was unaware of."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 357, "user_id": 1100765, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/37522facc8f6a42a2907ff8e4627a1ca?s=128&d=identicon&r=PG", "display_name": "Alex", "link": "https://stackoverflow.com/users/1100765/alex"}, "edited": false, "score": 0, "creation_date": 1569852256, "post_id": 58164686, "comment_id": 102720386, "body": "@Alex I get the feeling you&#39;re using the wrong tool for the job. You&#39;re provided with the base64-encoded string provided in your question as an example, correct? Is this part of a JWT? If so, where and how is JSON involved?"}, {"owner": {"reputation": 357, "user_id": 1100765, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/37522facc8f6a42a2907ff8e4627a1ca?s=128&d=identicon&r=PG", "display_name": "Alex", "link": "https://stackoverflow.com/users/1100765/alex"}, "edited": false, "score": 0, "creation_date": 1569853720, "post_id": 58164686, "comment_id": 102721214, "body": "@S&#233;bastienRenauld <code>aud</code> is being used as an encrypted audience server identifier that is injected to a token as base64.  This is just an added layer of obfuscation on top of Atlassian S2S authentication protocol specification.  I&#39;d like to de-structure <code>aud</code> from a given token response and decrypt it&#39;s value as an inspect method."}, {"owner": {"reputation": 357, "user_id": 1100765, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/37522facc8f6a42a2907ff8e4627a1ca?s=128&d=identicon&r=PG", "display_name": "Alex", "link": "https://stackoverflow.com/users/1100765/alex"}, "edited": false, "score": 0, "creation_date": 1569853976, "post_id": 58164686, "comment_id": 102721345, "body": "The encrypt/decrypt methods are spawned through a thread.  Right now, I&#39;m getting an error: <code>thread &#39;main&#39; panicked at &#39;called Result::unwrap() on an Err value: Base64Error(InvalidByte(0, 34))</code> which I presume is because of the Quote characters."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 357, "user_id": 1100765, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/37522facc8f6a42a2907ff8e4627a1ca?s=128&d=identicon&r=PG", "display_name": "Alex", "link": "https://stackoverflow.com/users/1100765/alex"}, "edited": false, "score": 0, "creation_date": 1569854421, "post_id": 58164686, "comment_id": 102721559, "body": "@Alex Okay. Let&#39;s go back to first principles. Do you already have your <code>Claims</code> object deserialized? If so, what does your thread expect? A <code>String</code>? JSON? If it&#39;s a <code>String</code>, what prevents you from skipping the JSON serialization altogether? The reason I think you may be using the wrong tool is because I&#39;m missing the point of JSON-serializing &quot;just&quot; a string."}, {"owner": {"reputation": 357, "user_id": 1100765, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/37522facc8f6a42a2907ff8e4627a1ca?s=128&d=identicon&r=PG", "display_name": "Alex", "link": "https://stackoverflow.com/users/1100765/alex"}, "edited": false, "score": 0, "creation_date": 1569861167, "post_id": 58164686, "comment_id": 102724775, "body": "@S&#233;bastienRenauld  I&#39;m sorry for the confusion.  I need to deserialize the aud to a String.  To add more context on the reason as to why I&#39;m spawning a thread for this is because I&#39;m using a thread-safe cell to protect a static string key which is used in the obfuscation of aud to AES-256 base64 encoding."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 357, "user_id": 1100765, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/37522facc8f6a42a2907ff8e4627a1ca?s=128&d=identicon&r=PG", "display_name": "Alex", "link": "https://stackoverflow.com/users/1100765/alex"}, "edited": false, "score": 0, "creation_date": 1569861380, "post_id": 58164686, "comment_id": 102724856, "body": "Let us <a href=\"https://chat.stackoverflow.com/rooms/200181/discussion-between-sebastien-renauld-and-alex\">continue this discussion in chat</a>."}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": true, "score": 1, "last_activity_date": 1569863704, "last_edit_date": 1569863704, "creation_date": 1569834469, "answer_id": 58164686, "question_id": 58161775, "link": "https://stackoverflow.com/questions/58161775/deserializing-a-claims-field-to-string-returns-additional-characters/58164686#58164686", "title": "Deserializing a Claims field to string returns additional characters", "body": "<p>The issue was a situation where <code>serde_json::to_string()</code> was mistaken for an actual <code>to_string()</code> implementation, as opposed to a JSON string.</p>\n\n<p>Extracting an inner member of an enum variant is better done by pattern-matching. Due to the OP's requirements, the last <code>aud</code> member of the <code>Vec</code> is the most important one</p>\n\n<p>Final implementation (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=8872f48d9277b534f82e07347b0c10fc\" rel=\"nofollow noreferrer\">playground</a>):</p>\n\n<pre><code>use std::io::Result;\nuse serde;\n#[macro_use] extern crate serde_derive;\n\n#[derive(Debug, Serialize, Deserialize, Clone, PartialEq)]\n#[serde(untagged)]\npub enum Aud {\n    One(String),\n    Many(Vec&lt;String&gt;),\n}\n\nfn aud_from_json(data: &amp;Aud) -&gt; Result&lt;String&gt; {\n    match data {\n        Aud::One(audience) =&gt; Ok(audience.clone()),\n        Aud::Many(audiences) =&gt; audiences\n          .last()\n          .ok_or(std::io::Error::new(std::io::ErrorKind::NotFound, \"No audience found\"))\n          .map(|r| r.clone())\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 357, "user_id": 1100765, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/37522facc8f6a42a2907ff8e4627a1ca?s=128&d=identicon&r=PG", "display_name": "Alex", "link": "https://stackoverflow.com/users/1100765/alex"}, "edited": false, "score": 0, "creation_date": 1569858938, "post_id": 58170279, "comment_id": 102723850, "body": "Not exactly, <code>aud</code> is an AES 256-bit base64 encoded field.  I&#39;m going to be using a secret key in a wrapper method which will call <code>decrypt_base64_to_string(aud: &amp;str)</code>."}], "tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 0, "last_activity_date": 1569854820, "last_edit_date": 1569854820, "creation_date": 1569854758, "answer_id": 58170279, "question_id": 58161775, "link": "https://stackoverflow.com/questions/58161775/deserializing-a-claims-field-to-string-returns-additional-characters/58170279#58170279", "title": "Deserializing a Claims field to string returns additional characters", "body": "<p>If I understood correctly what you said in reply to @S\u00e9bastienRenauld's answer, you want to base-64 decode the string that's contained in an <code>Aud</code> instance. This can be achieved with:</p>\n\n<pre><code>let aud = Aud::One(\"CBr3zBlrKBbwmxOAM1avZQ==\".to_string());\nif let Aud::One(code) = aud {\n    let decoded = base64::decode(&amp;code).unwrap();\n    log::debug!(\"Decoded: {:?}\", decoded);\n}\n</code></pre>\n\n<p><a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b73d4574cbb4510a84694180d2984a23\" rel=\"nofollow noreferrer\">playground</a></p>\n"}], "owner": {"reputation": 357, "user_id": 1100765, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/37522facc8f6a42a2907ff8e4627a1ca?s=128&d=identicon&r=PG", "display_name": "Alex", "link": "https://stackoverflow.com/users/1100765/alex"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 348, "favorite_count": 0, "accepted_answer_id": 58164686, "answer_count": 2, "score": 0, "last_activity_date": 1569863704, "creation_date": 1569820132, "last_edit_date": 1569860744, "question_id": 58161775, "link": "https://stackoverflow.com/questions/58161775/deserializing-a-claims-field-to-string-returns-additional-characters", "title": "Deserializing a Claims field to string returns additional characters", "body": "<p>I need to deserialize the following payload, in particular the <code>aud</code> field from a JSON object:</p>\n\n<pre><code>claims: Claims { \n    aud: One(\"CBr3zBlrKBbwmxOAM1avZQ==\"), // 24 len\n    // ...\n}\n</code></pre>\n\n<p><code>claims::aud</code> is an <code>Aud</code> enum:</p>\n\n<pre><code>#[derive(Debug, Serialize, Deserialize, Clone, PartialEq)]\n#[serde(untagged)]\npub enum Aud {\n    One(String),\n    Many(Vec&lt;String&gt;),\n}\n</code></pre>\n\n<p>When I attempt to get a <code>String</code> from <code>serde_json::to_string()</code> it returns  two additional characters, an opening and ending char.</p>\n\n<pre><code>use serde_json::Result;\n\nfn aud_from_json(data: &amp;claims::Aud) -&gt; Result&lt;String&gt; {\n    let v = serde_json::to_string(&amp;data)?;\n    Ok(v.to_owned())\n}\n</code></pre>\n\n<pre><code>let aud = aud_from_json(&amp;token_data.claims.aud)?;\nlog::debug!(\"aud field: {:?}\\t aud field len({})\", &amp;aud, &amp;aud.len());\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ aud field: \"\\\"CBr3zBlrKBbwmxOAM1avZQ==\\\"\"         aud field len(26)\n</code></pre>\n\n<p>It appears there may be trailing escape characters serialized into the string.<br>\nIs there a method that can return <code>aud</code> field returned as <code>String</code>, sanitized without extra characters?<br>\ne.g. <code>\"CBr3zBlrKBbwmxOAM1avZQ==\"</code></p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 3, "creation_date": 1569816332, "post_id": 58161291, "comment_id": 102704761, "body": "What should be in <code>self.collection</code> if the <code>filter</code> callback were to panic part way through? Please provide a more complete example snippet, for instance, is <code>collection</code> a <code>Vec</code>? If it is, then <code>.drain(..)</code> instead of <code>into_iter()</code> would work here because it doesn&#39;t take ownership. There is also be <code>.retain(...)</code>."}, {"owner": {"reputation": 875, "user_id": 890991, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/33bfa5c69121eac7b878a20c457567c6?s=128&d=identicon&r=PG", "display_name": "Jiaming Lu", "link": "https://stackoverflow.com/users/890991/jiaming-lu"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1569825995, "post_id": 58161291, "comment_id": 102707106, "body": "@loganfsmyth In my case the collection is a <code>BTreeMap</code>, which doesn&#39;t have a <code>drain</code> method. Do I really need to care about panics? In rust, panics are true panics, not control flows that should be handled right?"}, {"owner": {"reputation": 875, "user_id": 890991, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/33bfa5c69121eac7b878a20c457567c6?s=128&d=identicon&r=PG", "display_name": "Jiaming Lu", "link": "https://stackoverflow.com/users/890991/jiaming-lu"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1569826080, "post_id": 58161291, "comment_id": 102707155, "body": "@loganfsmyth And what I want is &quot;remove while iterating&quot;, something like <code>iterator.remove()</code> in Java."}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1569827000, "post_id": 58161291, "comment_id": 102707548, "body": "Probably you are looking for <a href=\"https://stackoverflow.com/questions/32913368/removing-items-from-a-btreemap-or-btreeset-found-through-iteration\">this</a>"}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 2, "creation_date": 1569827014, "post_id": 58161291, "comment_id": 102707555, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/32913368/removing-items-from-a-btreemap-or-btreeset-found-through-iteration\">Removing items from a BTreeMap or BTreeSet found through iteration</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1569851294, "post_id": 58161291, "comment_id": 102719811, "body": "@JiamingLu Rust&#39;s iterators can iterate over things that are immutable. Can Java&#39;s iterators do that, and if so what does <code>remove</code> do?"}, {"owner": {"reputation": 875, "user_id": 890991, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/33bfa5c69121eac7b878a20c457567c6?s=128&d=identicon&r=PG", "display_name": "Jiaming Lu", "link": "https://stackoverflow.com/users/890991/jiaming-lu"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1569892036, "post_id": 58161291, "comment_id": 102734351, "body": "@trentcl java iterator.remove removes the current item. And I f you call remove on the container directly while iterating results in an exception."}], "answers": [{"comments": [{"owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 0, "creation_date": 1569824176, "post_id": 58162075, "comment_id": 102706433, "body": "Is it a good idea to print something in test instead of asserting?"}, {"owner": {"reputation": 1508, "user_id": 1304519, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e8850b692b1c4e1d6439f002846a2df8?s=128&d=identicon&r=PG", "display_name": "Kajal Sinha", "link": "https://stackoverflow.com/users/1304519/kajal-sinha"}, "reply_to_user": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 0, "creation_date": 1569824525, "post_id": 58162075, "comment_id": 102706538, "body": "Not really, fixed that! Thanks for highlighting :)"}, {"owner": {"reputation": 875, "user_id": 890991, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/33bfa5c69121eac7b878a20c457567c6?s=128&d=identicon&r=PG", "display_name": "Jiaming Lu", "link": "https://stackoverflow.com/users/890991/jiaming-lu"}, "edited": false, "score": 0, "creation_date": 1569825638, "post_id": 58162075, "comment_id": 102706963, "body": "But <code>drain</code> only works for <code>Vec</code>, no such method for <code>BTreeMap</code> or <code>HashMap</code>"}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "reply_to_user": {"reputation": 875, "user_id": 890991, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/33bfa5c69121eac7b878a20c457567c6?s=128&d=identicon&r=PG", "display_name": "Jiaming Lu", "link": "https://stackoverflow.com/users/890991/jiaming-lu"}, "edited": false, "score": 1, "creation_date": 1569826087, "post_id": 58162075, "comment_id": 102707159, "body": "@JiamingLu, What is your case exactly?. This answer seems convenient for the Vec. If you edit the question to be more specific, you can get better and more specific answers."}, {"owner": {"reputation": 875, "user_id": 890991, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/33bfa5c69121eac7b878a20c457567c6?s=128&d=identicon&r=PG", "display_name": "Jiaming Lu", "link": "https://stackoverflow.com/users/890991/jiaming-lu"}, "reply_to_user": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1569826229, "post_id": 58162075, "comment_id": 102707219, "body": "@Websterix Initially I&#39;m asking about some general patterns, no matter what type of the collection is. For example in Java, I have iterator.remove(). But now it seems in Rust there is only case by case solutions."}, {"owner": {"reputation": 1508, "user_id": 1304519, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e8850b692b1c4e1d6439f002846a2df8?s=128&d=identicon&r=PG", "display_name": "Kajal Sinha", "link": "https://stackoverflow.com/users/1304519/kajal-sinha"}, "reply_to_user": {"reputation": 875, "user_id": 890991, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/33bfa5c69121eac7b878a20c457567c6?s=128&d=identicon&r=PG", "display_name": "Jiaming Lu", "link": "https://stackoverflow.com/users/890991/jiaming-lu"}, "edited": false, "score": 0, "creation_date": 1569827607, "post_id": 58162075, "comment_id": 102707798, "body": "@JiamingLu does the second example test solves your problem? Though it works as I tested but I am interested to learn and know more about the performance impact of second approach."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1569851194, "post_id": 58162075, "comment_id": 102719739, "body": "<code>filter_in_above_50_using_into_iter</code> doesn&#39;t use <code>into_iter</code> on <code>Vec</code>; it just uses <code>into_iter</code> on <code>&amp;mut Vec</code>, which is weird in a non-generic context (you could use <code>.iter_mut()</code> to be more expressive and concise). It also requires <code>T</code> to be <code>Copy</code>. In general it&#39;s just kind of weird and unidiomatic. I don&#39;t recommend writing code like that. (The <code>drain(..)</code> version looks fine though.)"}], "tags": [], "owner": {"reputation": 1508, "user_id": 1304519, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e8850b692b1c4e1d6439f002846a2df8?s=128&d=identicon&r=PG", "display_name": "Kajal Sinha", "link": "https://stackoverflow.com/users/1304519/kajal-sinha"}, "is_accepted": false, "score": 1, "last_activity_date": 1569849742, "last_edit_date": 1569849742, "creation_date": 1569822365, "answer_id": 58162075, "question_id": 58161291, "link": "https://stackoverflow.com/questions/58161291/how-can-i-remove-members-of-a-collection-type-in-place/58162075#58162075", "title": "How can I remove members of a collection type in place?", "body": "<p>A full example (also with <code>into_iter</code>):</p>\n\n<pre><code>#[derive(Debug)]\nstruct Scores {\n    collection: Vec&lt;i32&gt;,\n}\n\nimpl Scores {\n    fn new() -&gt; Scores {\n        return Scores {\n            collection: Vec::new(),\n        };\n    }\n\n    fn filter_in_above_50(&amp;mut self) {\n        self.collection = self\n            .collection\n            .drain(..)\n            .filter(|score| score &gt; &amp;50)\n            .collect();\n    }\n\n    fn filter_in_above_50_using_into_iter(&amp;mut self) {\n        let coll: &amp;mut Vec&lt;i32&gt; = self.collection.as_mut();\n        let coll: Vec&lt;i32&gt; = coll\n            .into_iter()\n            .filter(|score| score &gt; &amp;&amp;mut 50i32)\n            .map(|&amp;mut x| x)\n            .collect();\n        self.collection = coll;\n    }\n}\n</code></pre>\n\n<p>And the tests:</p>\n\n<pre><code>#[test]\nfn score_test() {\n    let mut s = Scores::new();\n    s.collection.push(199);\n    s.collection.push(11);\n    s.filter_in_above_50();\n    assert_eq!(s.collection, vec![199]);\n}\n\n#[test]\nfn score_test_using_into_iter() {\n    let mut s = Scores::new();\n    s.collection.push(199);\n    s.collection.push(11);\n    s.filter_in_above_50_using_into_iter();\n    assert_eq!(s.collection, vec![199]);\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "is_accepted": false, "score": 1, "last_activity_date": 1569886804, "creation_date": 1569886804, "answer_id": 58176458, "question_id": 58161291, "link": "https://stackoverflow.com/questions/58161291/how-can-i-remove-members-of-a-collection-type-in-place/58176458#58176458", "title": "How can I remove members of a collection type in place?", "body": "<p>Since <code>collection</code> is a <code>BTreeMap</code> and does not have <code>.drain()</code> or <code>.retain</code>, and you're fine with emptying the tree during processing, the thing to do would be to move the tree out of <code>self.collection</code>, manipulate it how you want, and then put it back. </p>\n\n<p>As you've seen, Rust doesn't allow that with simple assignment, because if there were a panic during the time when your snippet runs, <code>self.collection</code> would be left in an inconsistent state. Instead, you need to do that explicitly using <a href=\"https://doc.rust-lang.org/std/mem/fn.replace.html\" rel=\"nofollow noreferrer\"><code>std::mem::replace</code></a>, which allows you to take ownership of the content in a mutable reference by providing a replacement for it, so the reference continues to point at valid data.</p>\n\n<pre><code>fn some_method(&amp;mut self) {\n  self.collection = std::mem::replace(&amp;mut self.collection, BTreeMap::new())\n    .into_iter()\n    .filter(|_| true)\n    .collect();\n}\n</code></pre>\n"}], "owner": {"reputation": 875, "user_id": 890991, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/33bfa5c69121eac7b878a20c457567c6?s=128&d=identicon&r=PG", "display_name": "Jiaming Lu", "link": "https://stackoverflow.com/users/890991/jiaming-lu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 213, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1569886804, "creation_date": 1569815329, "last_edit_date": 1569849685, "question_id": 58161291, "link": "https://stackoverflow.com/questions/58161291/how-can-i-remove-members-of-a-collection-type-in-place", "title": "How can I remove members of a collection type in place?", "body": "<p>I want to iterate over a collection type in a struct and remove some values, but Rust prevents me from destroying the collection:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn some_method(&amp;mut self) {\n    self.collection = self\n        .collection\n        .into_iter()\n        .filter(/* ... */\n        .collect();\n}\n</code></pre>\n\n<p>I could clone all of the values to build another collection, but that's not efficient. What's the idiomatic way of removing a value from the collection in place in Rust?</p>\n"}, {"tags": ["testing", "rust", "property-based-testing", "proptest"], "answers": [{"tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": true, "score": 4, "last_activity_date": 1569860627, "last_edit_date": 1569860627, "creation_date": 1569822777, "answer_id": 58162138, "question_id": 58159249, "link": "https://stackoverflow.com/questions/58159249/how-can-i-keep-the-transformation-of-arbitrary-proptest-values-out-of-the-test-c/58162138#58162138", "title": "How can I keep the transformation of arbitrary proptest values out of the test case body?", "body": "<p>There is a built-in <a href=\"https://altsysrq.github.io/rustdoc/proptest/0.9.4/proptest/collection/fn.btree_set.html\" rel=\"nofollow noreferrer\"><code>BTreeSetStrategy</code></a> in <code>proptest</code>, so it is relatively straightforward:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use proptest::prelude::*;\nuse std::collections::BTreeSet;\n\nprop_compose! {\n    fn touching_ranges()\n                      (split: i32,\n                       mut s1: BTreeSet&lt;i32&gt;)\n                      -&gt; (BTreeSet&lt;i32&gt;, BTreeSet&lt;i32&gt;)\n    {\n        let mut s2 = s1.split_off(&amp;split);\n        s1.insert(split);\n        s2.insert(split);\n\n        (s1, s2)\n    }\n}\n\nproptest! {\n    #[test]\n    fn touching((s1, s2) in touching_ranges()) {\n        assert_eq!(s1.intersection(&amp;s2).count(), 1);\n    }\n}\n</code></pre>\n\n<p>Some syntax here is not vanilla Rust so it may need further explanation:</p>\n\n<ul>\n<li>Inside the <code>proptest!</code> macro, the tests are normal Rust functions except they also have access to the <code>in Strategy</code> syntax in order to generate inputs.</li>\n<li>The Proptest strategies are either built-in or user defined. One way to define a strategy is inside a <code>prop_compose!</code> macro. Again, this is a normal Rust function except it can have two argument lists. The first argument list is the usual input; the second one can use the <code>in Strategy</code> syntax and arguments from the first. The return type indicates the type of value being generated. In this case, a tuple of two <code>BTreeSet</code>s.</li>\n<li>As you may have guessed, the Proptest crate comes with <code>Strategy</code> implementations for tuples, so a tuple of types that implement <code>Strategy</code> is itself a <code>Strategy</code>. That's why the function <code>touching_ranges</code> can be used as one.</li>\n</ul>\n"}], "owner": {"reputation": 1287, "user_id": 106275, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/43vfP.png?s=128&g=1", "display_name": "Stein", "link": "https://stackoverflow.com/users/106275/stein"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 126, "favorite_count": 0, "accepted_answer_id": 58162138, "answer_count": 1, "score": 3, "last_activity_date": 1600236105, "creation_date": 1569791618, "last_edit_date": 1600236105, "question_id": 58159249, "link": "https://stackoverflow.com/questions/58159249/how-can-i-keep-the-transformation-of-arbitrary-proptest-values-out-of-the-test-c", "title": "How can I keep the transformation of arbitrary proptest values out of the test case body?", "body": "<p>I want to thoroughly test an implementation of the intersection of two <code>BTreeSet</code>s. I can write:</p>\n\n<pre><code>use self::proptest::prelude::*;\nproptest! {\n    #[test]\n    fn intersect_this(s1: BTreeSet&lt;i32&gt;, s2: BTreeSet&lt;i32&gt;) {\n        // ...\n    }\n}\n</code></pre>\n\n<p>But this has poor code coverage, because the code is specialized in some cases that random sets are unlikely to hit. One of the special cases is sets whose ranges of elements are almost disjoint (one set has values &lt;= x, the other set has values >= x). In Python with hypothesis (in which I'm a little less of a newbie), I'd write:</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>from hypothesis import given\nfrom hypothesis.strategies import builds, integers, sets\nfrom typing import Set\n\ndef touching_ranges(elements: Set[int], split: int):\n    return {elt for elt in elements if elt &lt; split}.union({split}), \\\n           {elt for elt in elements if elt &gt; split}.union({split})\n\n@given(builds(touching_ranges, sets(integers()), integers()))\ndef test_touching_ranges(sets):\n    s1, s2 = sets\n    assert len(s1.intersection(s2)) == 1\n</code></pre>\n\n<p>In Rust, I got no further than stuffing everything inside the body:</p>\n\n<pre><code>#[test]\nfn touching(mut s1: BTreeSet&lt;i32&gt;, split: i32) {\n    let mut s2 = s1.split_off(&amp;split);\n    s1.insert(split);\n    s2.insert(split);\n    prop_assert_eq!(s1.intersection(&amp;s2).count(), 1);\n}\n</code></pre>\n\n<p>How can I keep the transformation of arbitrary values out of the test case body? I couldn't understand any of the code samples I found regarding strategies and Stack Overflow has few proptest-related questions.</p>\n"}, {"tags": ["rust", "request", "actix-web"], "answers": [{"comments": [{"owner": {"reputation": 650, "user_id": 996314, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/4d6f299c3fe907046a23f106f7b56995?s=128&d=identicon&r=PG&f=1", "display_name": "Rokit", "link": "https://stackoverflow.com/users/996314/rokit"}, "edited": false, "score": 0, "creation_date": 1569977755, "post_id": 58186998, "comment_id": 102766923, "body": "I&#39;ll have to keep an eye on that issue. Thanks!"}], "tags": [], "owner": {"reputation": 1321, "user_id": 1291664, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/95854ef7aaf132a9f9ed8fd61366f7df?s=128&d=identicon&r=PG", "display_name": "\u0110or\u0111e Zelji\u0107", "link": "https://stackoverflow.com/users/1291664/%c4%90or%c4%91e-zelji%c4%87"}, "is_accepted": true, "score": 1, "last_activity_date": 1569940611, "last_edit_date": 1569940611, "creation_date": 1569940113, "answer_id": 58186998, "question_id": 58159224, "link": "https://stackoverflow.com/questions/58159224/how-do-i-return-the-response-from-an-api-call-with-actix-web/58186998#58186998", "title": "How do I return the response from an API call with actix-web?", "body": "<pre><code>fn get_rust_posts(req: HttpRequest, client: web::Data&lt;Client&gt;) -&gt; impl Future&lt;Item = HttpResponse, Error = Error&gt; {\n  client.get(\"http://www.reddit.com/r/rust.json\") // create request builder\n    .header(\"User-Agent\", \"Actix-web\")\n    .send() // send http request\n    .map_err(Error::from)\n    .and_then(|resp| Ok::&lt;HttpResponse, Error&gt;(HttpResponse::Ok().streaming(resp)))\n}\n</code></pre>\n\n<p>It works on Ubuntu Linux, but <a href=\"https://github.com/actix/actix-web/issues/1047\" rel=\"nofollow noreferrer\">doesn't work on Windows</a> at the moment.</p>\n"}], "owner": {"reputation": 650, "user_id": 996314, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/4d6f299c3fe907046a23f106f7b56995?s=128&d=identicon&r=PG&f=1", "display_name": "Rokit", "link": "https://stackoverflow.com/users/996314/rokit"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 341, "favorite_count": 0, "accepted_answer_id": 58186998, "answer_count": 1, "score": 2, "last_activity_date": 1569940611, "creation_date": 1569791470, "last_edit_date": 1569940563, "question_id": 58159224, "link": "https://stackoverflow.com/questions/58159224/how-do-i-return-the-response-from-an-api-call-with-actix-web", "title": "How do I return the response from an API call with actix-web?", "body": "<p>I'm trying to get posts from the Rust subreddit and return the response to my frontend.</p>\n\n<p>This is my <code>App</code>:</p>\n\n<pre><code>App::new()\n    .data(Client::default())\n    .wrap(middleware::Logger::default())\n    .service(\n        web::resource(\"/get/rust/posts\").route(web::get().to_async(get_rust_posts))\n    )\n</code></pre>\n\n<p>handler function:</p>\n\n<pre><code>fn get_rust_posts(req: HttpRequest, client: web::Data&lt;Client&gt;) -&gt; impl Future&lt;Item = HttpResponse, Error = Error&gt; {\n  client.get(\"http://www.reddit.com/r/rust.json\") // create request builder\n    .header(\"User-Agent\", \"Actix-web\")\n    .send() // send http request\n    .map_err(Error::from)\n    .and_then(|resp| {\n      // return resp\n    })\n}\n</code></pre>\n\n<p>dependencies:</p>\n\n<pre><code>[dependencies]\nactix-web = \"1.0.7\"\nfutures = \"0.1.29\"\n</code></pre>\n"}, {"tags": ["windows", "rust"], "comments": [{"owner": {"reputation": 61409, "user_id": 485343, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e18b024a122df74275dd2c4486e8a2b4?s=128&d=identicon&r=PG", "display_name": "rustyx", "link": "https://stackoverflow.com/users/485343/rustyx"}, "edited": false, "score": 0, "creation_date": 1569791058, "post_id": 58159130, "comment_id": 102700713, "body": "Looks like you need VC++ 2015 redist aka v140."}, {"owner": {"reputation": 6531, "user_id": 1614607, "user_type": "registered", "accept_rate": 59, "profile_image": "https://i.stack.imgur.com/j5OdR.jpg?s=128&g=1", "display_name": "Jacob Brown", "link": "https://stackoverflow.com/users/1614607/jacob-brown"}, "reply_to_user": {"reputation": 61409, "user_id": 485343, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e18b024a122df74275dd2c4486e8a2b4?s=128&d=identicon&r=PG", "display_name": "rustyx", "link": "https://stackoverflow.com/users/485343/rustyx"}, "edited": false, "score": 0, "creation_date": 1569791808, "post_id": 58159130, "comment_id": 102700844, "body": "@rustyx, thanks for the suggestion, i&#39;ll try that now. Do I need to uninstall the v141 tools? Do I need to reinstall Rust via rustup? Do I need to reinstall rustup?"}, {"owner": {"reputation": 6531, "user_id": 1614607, "user_type": "registered", "accept_rate": 59, "profile_image": "https://i.stack.imgur.com/j5OdR.jpg?s=128&g=1", "display_name": "Jacob Brown", "link": "https://stackoverflow.com/users/1614607/jacob-brown"}, "reply_to_user": {"reputation": 61409, "user_id": 485343, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e18b024a122df74275dd2c4486e8a2b4?s=128&d=identicon&r=PG", "display_name": "rustyx", "link": "https://stackoverflow.com/users/485343/rustyx"}, "edited": false, "score": 0, "creation_date": 1569794970, "post_id": 58159130, "comment_id": 102701426, "body": "I uninstalled <code>VC++ 2017 version 15.9 v14.16 latest v141 tools</code> and installed <code>VC++ 2015.3 v14.00 (v140) toolset for desktop</code>, then reinstalled rustup AND Rust, then cargo clean and built my project, and am still running into the same error."}], "answers": [{"tags": [], "owner": {"reputation": 25, "user_id": 10661272, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6f2c60d8183aa580323450d25d70536c?s=128&d=identicon&r=PG&f=1", "display_name": "sheyrl", "link": "https://stackoverflow.com/users/10661272/sheyrl"}, "is_accepted": false, "score": 1, "last_activity_date": 1571221481, "creation_date": 1571221481, "answer_id": 58411088, "question_id": 58159130, "link": "https://stackoverflow.com/questions/58159130/targeting-older-windows-versions-windows-server-2008-r2/58411088#58411088", "title": "Targeting older Windows versions (Windows Server 2008 R2)", "body": "<p>I think It\u2019s because of not choosing some components when you install the vs. \nby the way, vs 2015 is not a good choice.</p>\n"}, {"tags": [], "owner": {"reputation": 6531, "user_id": 1614607, "user_type": "registered", "accept_rate": 59, "profile_image": "https://i.stack.imgur.com/j5OdR.jpg?s=128&g=1", "display_name": "Jacob Brown", "link": "https://stackoverflow.com/users/1614607/jacob-brown"}, "is_accepted": false, "score": 0, "last_activity_date": 1571242811, "creation_date": 1571242811, "answer_id": 58417756, "question_id": 58159130, "link": "https://stackoverflow.com/questions/58159130/targeting-older-windows-versions-windows-server-2008-r2/58417756#58417756", "title": "Targeting older Windows versions (Windows Server 2008 R2)", "body": "<p>So it turns out I was wrong: my project was not compiled with <code>stable-x86_64-pc-windows-msvc</code> on my older computer. I had at some point installed the <code>x86_64-pc-windows-gnu</code> toolchain and set it as the override for this project. Changing my toolchain to <code>x86_64-pc-windows-gnu</code> on the new computer produced a binary that was able to run on the target machine.</p>\n\n<p>Rather than deleting this question, I'll leave it here for others who may need to target older Windows environments:</p>\n\n<p>If you are having problems running a Rust binary on an older Windows computer, try compiling with <code>x86_64-pc-windows-gnu</code> rather than <code>msvc</code>.</p>\n"}], "owner": {"reputation": 6531, "user_id": 1614607, "user_type": "registered", "accept_rate": 59, "profile_image": "https://i.stack.imgur.com/j5OdR.jpg?s=128&g=1", "display_name": "Jacob Brown", "link": "https://stackoverflow.com/users/1614607/jacob-brown"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 191, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1571242811, "creation_date": 1569790596, "question_id": 58159130, "link": "https://stackoverflow.com/questions/58159130/targeting-older-windows-versions-windows-server-2008-r2", "title": "Targeting older Windows versions (Windows Server 2008 R2)", "body": "<p>I have an older Windows 10 workstation with Rust <code>1.37</code> (<code>stable-x86_64-pc-windows-msvc</code>) and Visual Studio 2017 with the following features:</p>\n\n<ul>\n<li>Visual C++ Build Tools core features</li>\n<li>VC++ 2017 version 15.9 v14.16 latest v141 tools</li>\n<li>Visual C++ 2017 Redistributable Update</li>\n<li>Windows 10 SDK (10.0.17763.0)</li>\n<li>Visual C++ tools for CMake</li>\n<li>Testing tools core features - Build Tools</li>\n</ul>\n\n<p>On this workstation, I can compile a program that runs fine on my target environment (Windows Server 2008 R2).</p>\n\n<p>I have a newer Windows 10 workstation on which I installed the legacy version of Visual Studio 2017. Interestingly, the installer doesn't offer the exact same options for C++ build tools, but I think I have the necessary ones, e.g.:</p>\n\n<ul>\n<li>VC++ 2017 version 15.9 v14.16 latest v141 tools</li>\n<li>Visual C++ tools for CMake and Linux</li>\n<li>Windows 10 SDK (10.0.17763.0)</li>\n</ul>\n\n<p>However, when I compile the program (with the same Rust version/toolchain) on this computer, it errors out on my target environment with \"The program can't start because VCRUNTIME140.dll is missing from your computer\".</p>\n\n<p>What am I missing here? How can I setup rustup/cargo to target my specific environment?</p>\n"}, {"tags": ["rust", "iterator"], "answers": [{"comments": [{"owner": {"reputation": 3031, "user_id": 8564999, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/139177e603c62750b3607ca7695954af?s=128&d=identicon&r=PG&f=1", "display_name": "Alexey Larionov", "link": "https://stackoverflow.com/users/8564999/alexey-larionov"}, "edited": false, "score": 0, "creation_date": 1569852493, "post_id": 58158982, "comment_id": 102720537, "body": "I&#39;ve moved to the Iterator approach, but it&#39;s sad to force passing an iterator, instead of &amp;Vec&lt;_&gt; which implements IntoIterator and doesn&#39;t consume the vector"}], "tags": [], "owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "is_accepted": true, "score": 1, "last_activity_date": 1569789234, "creation_date": 1569789234, "answer_id": 58158982, "question_id": 58158841, "link": "https://stackoverflow.com/questions/58158841/intoiterator-as-a-function-argument-doesnt-accept-adapter-struct/58158982#58158982", "title": "IntoIterator as a function argument doesn&#39;t accept adapter struct", "body": "<p>I think you want to have trait bounds on <code>T</code> (and not on <code>&amp;'a T</code>). So I guess you actually want the following:</p>\n\n<pre><code>pub fn f&lt;'a, T&gt;(it_src: &amp;'a T) -&gt; u32\nwhere T: IntoIterator&lt;Item = u32&gt; {\n    let it = it_src.into_iter();\n    let result: u32 = 1;\n    // more more usage\n    result\n}\n\npub fn f_with_feature&lt;'a, T&gt;(it_src: &amp;'a T) -&gt; u32\nwhere T: IntoIterator&lt;Item = u32&gt; {\n    let adjusted_values = it_src.into_iter()\n        .map(|e| adjust(e));\n    f(&amp;adjusted_values)\n}\n</code></pre>\n\n<p>Which brings us to the next problem: <code>IntoIterator</code>'s <code>into_iter</code> consumes <code>self</code>, which means that you cannot call <code>it_src.into_iter</code> if you only borrow <code>it_src</code>.</p>\n\n<p>So if you really want to use <code>into_iter</code>, you can try this:</p>\n\n<pre><code>pub fn f&lt;T&gt;(it_src: T) -&gt; u32\nwhere T: IntoIterator&lt;Item = u32&gt; {\n    let it = it_src.into_iter();\n    let result: u32 = 1;\n    // more more usage\n    result\n}\n\npub fn f_with_feature&lt;T&gt;(it_src: T) -&gt; u32\nwhere T: IntoIterator&lt;Item = u32&gt; {\n    let adjusted_values = it_src.into_iter()\n        .map(|e| adjust(e));\n    f(adjusted_values)\n}\n</code></pre>\n\n<p>The above, however, requires you to move the values into <code>f</code> resp. <code>f_with_feature</code>.</p>\n\n<p>In my experience, just taking an iterator (and doing the conversion at call site if necessary), leads to simple, straightforward solutions:</p>\n\n<pre><code>pub fn f&lt;T&gt;(it_src: T) -&gt; u32\nwhere T: Iterator&lt;Item = u32&gt; {\n    let it = it_src.into_iter();\n    let result: u32 = 1;\n    // more more usage\n    result\n}\n\npub fn f_with_feature&lt;T&gt;(it_src: T) -&gt; u32\nwhere T: Iterator&lt;Item = u32&gt; {\n    let adjusted_values = it_src.into_iter()\n        .map(|e| adjust(e));\n    f(adjusted_values)\n}\n</code></pre>\n"}], "owner": {"reputation": 3031, "user_id": 8564999, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/139177e603c62750b3607ca7695954af?s=128&d=identicon&r=PG&f=1", "display_name": "Alexey Larionov", "link": "https://stackoverflow.com/users/8564999/alexey-larionov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 398, "favorite_count": 0, "accepted_answer_id": 58158982, "answer_count": 1, "score": 1, "last_activity_date": 1569789234, "creation_date": 1569788051, "question_id": 58158841, "link": "https://stackoverflow.com/questions/58158841/intoiterator-as-a-function-argument-doesnt-accept-adapter-struct", "title": "IntoIterator as a function argument doesn&#39;t accept adapter struct", "body": "<p>I want to have a function, that accepts <code>&amp;IntoIterator&lt;Item=u32&gt;</code>, so I could pass to it both <code>&amp;Vec&lt;u32&gt;</code> and iterators' adapter structs (like <code>Map</code>, <code>Filter</code> and any other, which I believe all implement <code>IntoIterator</code>)</p>\n\n<p>So I have a function like</p>\n\n<pre><code>pub fn f&lt;'a, T&gt;(it_src: &amp;'a T) -&gt; u32\nwhere &amp;'a T: IntoIterator&lt;Item = u32&gt; {\n    let it = it_src.into_iter();\n    let result: u32;\n    // more more usage\n    result\n}\n</code></pre>\n\n<p>And this is how I tried to use it (same signature, but different name)</p>\n\n<pre><code>pub fn f_with_feature()&lt;'a, T&gt;(it_src: &amp;'a T) -&gt; u32\nwhere &amp;'a T: IntoIterator&lt;Item = u32&gt; {\n    let adjusted_values = it_src.into_iter()\n        .map(|e| adjust(e));\n    f(&amp;adjusted_values)\n}\n</code></pre>\n\n<p>What I've got is an error</p>\n\n<pre><code> error[E0308]: mismatched types\n  --&gt; src\\main.rs:14:7\n   |\n14 |     f(&amp;adjusted_values)\n   |       ^^^^^^^^^^^^^^^^ expected type parameter, found struct `std::iter::Map`\n   |\n   = note: expected type `&amp;T`\n              found type `&amp;std::iter::Map&lt;&lt;&amp;T as std::iter::IntoIterator&gt;::IntoIter, [closure@src\\main.rs:13:14: 13:27]&gt;`\n</code></pre>\n\n<p>How is it that Map doesn't match as T?</p>\n\n<p>Also, I've come up with an idea, that passing iterators' adaptors with static dispatch isn't a good idea since each other closure used to generate a Map will create a new function specialization. Though I've seen that static dispatch approach for most of the times is idiomatic in Rust. How to manage this situation?</p>\n"}, {"tags": ["pointers", "rust", "ffi"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1569783804, "post_id": 58158069, "comment_id": 102699120, "body": "Why would you want to pass an uninitialised pointer to a function?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1569783989, "post_id": 58158069, "comment_id": 102699164, "body": "There may be a lot of ways to add threads to a program. We&#39;ll need more information. I don&#39;t really see what <code>MaybeUninit</code> has to do with whether the pointer is the same for multiple threads, anyway."}, {"owner": {"reputation": 762, "user_id": 4949386, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/a4f78608dae9e9cf14a732e366ea016a?s=128&d=identicon&r=PG&f=1", "display_name": "zino", "link": "https://stackoverflow.com/users/4949386/zino"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1569784566, "post_id": 58158069, "comment_id": 102699309, "body": "@mcarton for example <code>sqlite3_open</code> takes a pointer as its 2nd argument. <a href=\"https://www.sqlite.org/c3ref/open.html\" rel=\"nofollow noreferrer\">sqlite.org/c3ref/open.html</a>"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1569784928, "post_id": 58158069, "comment_id": 102699378, "body": "In that case, you could just give it <code>null</code>. But like @trentcl, I don&#39;t think there is enough information in your question to answer it. In particular, this has nothing to do with threads, and I don&#39;t see why it would be a problem to give the same value to this function concurrently."}, {"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 1, "creation_date": 1569785723, "post_id": 58158069, "comment_id": 102699543, "body": "If <code>sqlite3_open</code> takes a mutable pointer to a mutable pointer to something, then the first pointer (What is held in the <code>MaybeUninit</code>) is irrelevant, because as soon as the value under the outermost pointer is replaced, it&#39;s different than the one the <code>MaybeUninit</code> holds. Just use <a href=\"https://doc.rust-lang.org/std/ptr/fn.null.html\" rel=\"nofollow noreferrer\"><code>std::ptr::null</code></a> or <a href=\"https://doc.rust-lang.org/std/ptr/fn.null_mut.html\" rel=\"nofollow noreferrer\"><code>std::ptr::null_mut</code></a>."}], "answers": [{"tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": false, "score": 1, "last_activity_date": 1569849265, "last_edit_date": 1569849265, "creation_date": 1569842107, "answer_id": 58166791, "question_id": 58158069, "link": "https://stackoverflow.com/questions/58158069/how-do-i-create-uninitialized-pointers-that-i-can-pass-to-ffi-functions-in-a-thr/58166791#58166791", "title": "How do I create uninitialized pointers that I can pass to FFI functions in a thread-safe manner?", "body": "<p>As Optimistic Peach and trentcl pointed out in the comments, the correct way of doing this is by retrieving a null-pointer (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=48e4e94a7ac7144d15366043d21f3885\" rel=\"nofollow noreferrer\">playground example</a>):</p>\n\n<pre><code>let ptr: *mut i8 = std::ptr::null_mut();\nlet ptr_to_ptr: *const *mut i8 = &amp;ptr;\n</code></pre>\n\n<p>The same behavior as C applies: even though the pointer itself is <code>NULL</code>, a pointer to this is a valid address in memory. It will then be up to the other side of the FFI boundary to change this address to something other than <code>0x0</code>, and you'll get that change (since you also have a direct reference to it).</p>\n"}], "owner": {"reputation": 762, "user_id": 4949386, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/a4f78608dae9e9cf14a732e366ea016a?s=128&d=identicon&r=PG&f=1", "display_name": "zino", "link": "https://stackoverflow.com/users/4949386/zino"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 287, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1569849265, "creation_date": 1569781824, "last_edit_date": 1569849226, "question_id": 58158069, "link": "https://stackoverflow.com/questions/58158069/how-do-i-create-uninitialized-pointers-that-i-can-pass-to-ffi-functions-in-a-thr", "title": "How do I create uninitialized pointers that I can pass to FFI functions in a thread-safe manner?", "body": "<p>I have some Rust code that passes pointers to a FFI function like this:</p>\n\n<pre><code>let mut mu = MaybeUninit::uninit();\nlet mut p = mu.as_mut_ptr();\n\nlet r = unsafe {\n    ffi_fn(&amp;mut p)\n};\n</code></pre>\n\n<p>This works fine with one thread, but with many threads I think <code>MaybeUninit::uninit()</code> will give the same pointer to two threads concurrently, which causes issues.</p>\n"}, {"tags": ["reference", "rust", "lifetime"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1569779252, "post_id": 58157680, "comment_id": 102697998, "body": "<code>&#39;a</code> might be <i>longer</i> than the lifetime of the <code>FooStruct</code>. Then it would be unsound to have a <code>&amp;&#39;a Vec&lt;_&gt;</code> because the <code>Vec</code> would not last for the entire <code>&#39;a</code>."}], "answers": [{"comments": [{"owner": {"reputation": 494, "user_id": 1541141, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/c9020f250805f84778dbafedb2ce85e6?s=128&d=identicon&r=PG", "display_name": "OoDeLally", "link": "https://stackoverflow.com/users/1541141/oodelally"}, "edited": false, "score": 0, "creation_date": 1569783362, "post_id": 58157759, "comment_id": 102699017, "body": "Thank you. My mistake was the wrong assumption that <code>FooStruct&lt;&#39;a&gt;</code> or <code>FooTrait&lt;&#39;a&gt;</code> implicitly binds <code>&#39;a</code> to <code>self</code>. Now I understand that it merely informs of the existence of such lifetimes. Making the lifetime of <code>&amp;self</code> explicit indeed solved the problem."}], "tags": [], "owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "is_accepted": true, "score": 3, "last_activity_date": 1569779468, "creation_date": 1569779468, "answer_id": 58157759, "question_id": 58157680, "link": "https://stackoverflow.com/questions/58157680/cannot-infer-an-appropriate-lifetime-for-borrow-expression-due-to-conflicting-re/58157759#58157759", "title": "cannot infer an appropriate lifetime for borrow expression due to conflicting requirements", "body": "<p>Let's take it apart:</p>\n\n<pre><code>pub struct FooStruct&lt;'a&gt; {\n  pub bars: Vec&lt;&amp;'a str&gt;,\n}\n</code></pre>\n\n<p><code>FooStruct</code> holds a container containing string slices with lifetime <code>'a</code>. The container's lifetime corresponds to the lifetime of <code>FooStruct</code>. </p>\n\n<pre><code>pub trait FooTrait&lt;'a&gt; {\n  fn getBars(&amp;self) -&gt; &amp;'a Vec&lt;&amp;'a str&gt;;\n}\n</code></pre>\n\n<p><code>FooTrait</code> wants <code>getBars</code> to return a reference to a container holding string slices with lifetime <code>'a</code>. The lifetime of the returned reference should be <code>'a</code>, too.</p>\n\n<pre><code>impl&lt;'a&gt; FooTrait&lt;'a&gt; for FooStruct&lt;'a&gt; {\n  fn getBars(&amp;self) -&gt; &amp;'a Vec&lt;&amp;'a str&gt; {\n    &amp;self.bars\n  }\n}\n</code></pre>\n\n<p>Here, <code>getBars</code> returns a reference to <code>self.bars</code> which is a container of string slices with lifetime <code>'a</code>. So far, so good. </p>\n\n<ul>\n<li>However, what is the lifetime of <code>&amp;self.bars</code>? It corresponds to the lifetime of <code>self</code> (i.e. the respective <code>FooStruct</code>).</li>\n<li>What is the lifetime of <code>self</code>? It is <code>'self</code> (an implicit lifetime).</li>\n</ul>\n\n<p>However, the <code>FooTrait</code> requires that the returned reference lifetime is <code>'a</code>, so that does not match <code>FooTrait</code>'s declaration.</p>\n\n<p>One solution is to separate the lifetimes in <code>FooTrait</code>:</p>\n\n<pre><code>pub trait FooTrait&lt;'a&gt; {\n  fn getBars&lt;'s&gt;(&amp;'s self) -&gt; &amp;'s Vec&lt;&amp;'a str&gt;;\n}\n\nimpl&lt;'a&gt; FooTrait&lt;'a&gt; for FooStruct&lt;'a&gt; {\n  fn getBars&lt;'s&gt;(&amp;'s self) -&gt; &amp;'s Vec&lt;&amp;'a str&gt; {\n    &amp;self.bars\n  }\n}\n</code></pre>\n"}], "owner": {"reputation": 494, "user_id": 1541141, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/c9020f250805f84778dbafedb2ce85e6?s=128&d=identicon&r=PG", "display_name": "OoDeLally", "link": "https://stackoverflow.com/users/1541141/oodelally"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 369, "favorite_count": 0, "accepted_answer_id": 58157759, "answer_count": 1, "score": 1, "last_activity_date": 1569779468, "creation_date": 1569778849, "question_id": 58157680, "link": "https://stackoverflow.com/questions/58157680/cannot-infer-an-appropriate-lifetime-for-borrow-expression-due-to-conflicting-re", "title": "cannot infer an appropriate lifetime for borrow expression due to conflicting requirements", "body": "<pre><code>pub struct FooStruct&lt;'a&gt; {\n  pub bars: Vec&lt;&amp;'a str&gt;,\n}\n\npub trait FooTrait&lt;'a&gt; {\n  fn getBars(&amp;self) -&gt; &amp;'a Vec&lt;&amp;'a str&gt;;\n}\n\nimpl&lt;'a&gt; FooTrait&lt;'a&gt; for FooStruct&lt;'a&gt; {\n  fn getBars(&amp;self) -&gt; &amp;'a Vec&lt;&amp;'a str&gt; {\n    &amp;self.bars // cannot infer an appropriate lifetime for borrow expression due to conflicting requirements\n  }\n}\n</code></pre>\n\n<p>Run it: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=3211c32dd5b9244ff91777f1820ffed5\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=3211c32dd5b9244ff91777f1820ffed5</a></p>\n\n<p>I do not understand where the requirement conflict comes from. Afaik there is no conflict since everything lives as long as the <code>FooStruct</code> lives.</p>\n"}, {"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1569779089, "post_id": 58157367, "comment_id": 102697965, "body": "Related: <a href=\"https://stackoverflow.com/q/52831488/3650362\">Why does the compiler not infer the concrete type of an associated type of an impl trait return value?</a>"}, {"owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 0, "creation_date": 1569811773, "post_id": 58157367, "comment_id": 102704009, "body": "I&#39;m curious what is the use-case to implement something directly on the trait object? You won&#39;t be able to extend the external trait this way (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=fb1566c65f74669d6ae45019b33fff72\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>), and if this is your own trait, isn&#39;t it better to add methods on it?"}, {"owner": {"reputation": 75, "user_id": 6777632, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/QOxq3.jpg?s=128&g=1", "display_name": "Okarin", "link": "https://stackoverflow.com/users/6777632/okarin"}, "reply_to_user": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 0, "creation_date": 1569821436, "post_id": 58157367, "comment_id": 102705716, "body": "@Cerberus It is not my own trait it is an external trait. The real problem is that have a struct wich contains this trait as an element. Now I need a helper_method which is only using this element. But because the helper_method is part of the struct and not the trait, I can\u2018t mut borrow another element while calling the helper_method. (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=8e764604ea3a4609018c655291ccf3e7\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>)"}, {"owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 0, "creation_date": 1569822357, "post_id": 58157367, "comment_id": 102705934, "body": "You need to add this helper_method, it is your own code? Do you control the struct?"}, {"owner": {"reputation": 75, "user_id": 6777632, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/QOxq3.jpg?s=128&g=1", "display_name": "Okarin", "link": "https://stackoverflow.com/users/6777632/okarin"}, "reply_to_user": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 0, "creation_date": 1569829867, "post_id": 58157367, "comment_id": 102708854, "body": "@Cerberus I don\u2018t really need the helper_method, I could also copy the code. But I thought there has to be a way to do this. And yes I control the struct."}], "answers": [{"tags": [], "owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "is_accepted": false, "score": 1, "last_activity_date": 1569849451, "last_edit_date": 1569849451, "creation_date": 1569778859, "answer_id": 58157683, "question_id": 58157367, "link": "https://stackoverflow.com/questions/58157367/how-can-i-add-extension-methods-to-a-trait-with-associated-types-lying-in-a-diff/58157683#58157683", "title": "How can I add extension methods to a trait with associated types lying in a different crate?", "body": "<p>Do you want the following?</p>\n\n<pre><code>impl&lt;E&gt; dyn Test&lt;u8, Error = E&gt; {\n    fn use_do_sth(&amp;mut self) -&gt; Result&lt;u8, E&gt; {\n        self.do_sth()\n    }\n}\n</code></pre>\n\n<p>I came up with this following the compiler's hint that \"the value of the associated type <code>Error</code> must be specified\".</p>\n"}, {"tags": [], "owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "is_accepted": true, "score": 2, "last_activity_date": 1569830927, "creation_date": 1569830927, "answer_id": 58163842, "question_id": 58157367, "link": "https://stackoverflow.com/questions/58157367/how-can-i-add-extension-methods-to-a-trait-with-associated-types-lying-in-a-diff/58163842#58163842", "title": "How can I add extension methods to a trait with associated types lying in a different crate?", "body": "<p>When you need to add a method to the external type, the only option is to use <em>extension traits</em>. It means that you define your own trait, with whatever methods you need, and implement it for the types you need.</p>\n\n<p>When you need to add a method to all types implementing some external trait, you can use the same pattern, but instead of listing the types directly, just use the trait bound:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::fmt::Debug;\n\n// This is an extension trait.\n// You can force all its implementors to implement also some external trait,\n// so that two trait bounds essentially collapse into one.\ntrait HelperTrait: Debug {\n    fn helper_method(&amp;mut self);\n}\n\n// And this is the \"blanket\" implementation,\n// covering all the types necessary.\nimpl&lt;T&gt; HelperTrait for T where T: Debug {\n    fn helper_method(&amp;mut self) {\n        println!(\"{:?}\", self);\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=209398bdad300776bf40d3b5badc601e]\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>The same idea could be applied to any external trait, as you wish.</p>\n"}], "owner": {"reputation": 75, "user_id": 6777632, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/QOxq3.jpg?s=128&g=1", "display_name": "Okarin", "link": "https://stackoverflow.com/users/6777632/okarin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 794, "favorite_count": 0, "accepted_answer_id": 58163842, "answer_count": 2, "score": 3, "last_activity_date": 1569849451, "creation_date": 1569776390, "last_edit_date": 1569849418, "question_id": 58157367, "link": "https://stackoverflow.com/questions/58157367/how-can-i-add-extension-methods-to-a-trait-with-associated-types-lying-in-a-diff", "title": "How can I add extension methods to a trait with associated types lying in a different crate?", "body": "<p>I'm trying to add an extension method to a trait in a different crate.\nThis trait has an associated type specified on it.</p>\n\n<pre><code>pub trait Test&lt;W&gt; {\n    type Error;\n\n    fn do_sth(&amp;mut self) -&gt; Result&lt;W, Self::Error&gt;;\n}\n</code></pre>\n\n<p>Why is it not possible to add a method that is using the associated type <code>Error</code>?</p>\n\n<pre><code>impl dyn Test&lt;u8&gt; {\n    fn use_do_sth(&amp;mut self) -&gt; Result&lt;u8: Self::Error&gt; {\n        self.do_sth()\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=6d387172a01205a901efc7e88aeb135a\" rel=\"nofollow noreferrer\">playground</a></p>\n"}, {"tags": ["opencv", "rust"], "comments": [{"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 1, "creation_date": 1569767305, "post_id": 58155836, "comment_id": 102694982, "body": "There are <code>core::Mat::from_slice</code> and <code>imgcodecs::imread</code>, maybe try them?"}], "answers": [{"tags": [], "owner": {"reputation": 2856, "user_id": 1125931, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/6aec4e7168bcc6ce45a24ab174e136fc?s=128&d=identicon&r=PG", "display_name": "raimohanska", "link": "https://stackoverflow.com/users/1125931/raimohanska"}, "is_accepted": false, "score": 0, "last_activity_date": 1569769924, "creation_date": 1569769924, "answer_id": 58156494, "question_id": 58155836, "link": "https://stackoverflow.com/questions/58155836/how-to-use-rust-opencv-imdecode/58156494#58156494", "title": "How to use Rust OpenCV imdecode", "body": "<p>I found out that when I change the type of the input buffer to <code>Vec&lt;u8&gt;</code> I can do this:</p>\n\n<pre><code>let original_image: Mat = imgcodecs::imdecode(&amp;VectorOfuchar :: from_iter(buf), imgcodecs::IMREAD_COLOR)?;\n</code></pre>\n"}], "owner": {"reputation": 2856, "user_id": 1125931, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/6aec4e7168bcc6ce45a24ab174e136fc?s=128&d=identicon&r=PG", "display_name": "raimohanska", "link": "https://stackoverflow.com/users/1125931/raimohanska"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 381, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1569769924, "creation_date": 1569764795, "question_id": 58155836, "link": "https://stackoverflow.com/questions/58155836/how-to-use-rust-opencv-imdecode", "title": "How to use Rust OpenCV imdecode", "body": "<p>I'd like decode a PNG image into an OpenCV <code>Mat</code> object using <a href=\"https://docs.rs/opencv/0.23.0/opencv/imgcodecs/fn.imdecode.html\" rel=\"nofollow noreferrer\">imdecode</a>. I'm working on a function like</p>\n\n<pre><code>fn handle_frame(buf: &amp;[u8]) -&gt; Result&lt;(), opencv::Error&gt; {\n    original_image: Mat = imgcodecs::imdecode(buf, imgcodecs::IMREAD_COLOR)?;    \n\n    let width = original_image.cols()?;\n    let height = original_image.rows()?;\n\n    println!(\"Success! Dimensions are {}x{}\", width, height);\n\n    Ok(())\n}\n</code></pre>\n\n<p>But I cannot pass by byte buffer to <code>imdecode</code> because I'd first need to convert it to something that has the <code>ToInputArray</code> trait. How to do this?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1569754155, "post_id": 58154386, "comment_id": 102691975, "body": "An error message would really help, as would an MCVE. I found your problem, but the <b>actual</b> error/output rather than a human translation would&#39;ve saved me 10 minutes."}, {"owner": {"reputation": 101, "user_id": 12136701, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/131081f19af34584cda29e81ec2b3a8b?s=128&d=identicon&r=PG&f=1", "display_name": "james pearson", "link": "https://stackoverflow.com/users/12136701/james-pearson"}, "reply_to_user": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1569754633, "post_id": 58154386, "comment_id": 102692079, "body": "@S&#233;bastienRenauld My apologies. Thank you for the input, I will be updating the question accordingly."}], "answers": [{"comments": [{"owner": {"reputation": 101, "user_id": 12136701, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/131081f19af34584cda29e81ec2b3a8b?s=128&d=identicon&r=PG&f=1", "display_name": "james pearson", "link": "https://stackoverflow.com/users/12136701/james-pearson"}, "edited": false, "score": 0, "creation_date": 1569754799, "post_id": 58154512, "comment_id": 102692114, "body": "Thank you for the input. That unfortunately doesn&#39;t work and I will explain. Omiting the type annotation is what I did originally, and it gives me this error:  type annotations needed for <code>futures::stream::iter_ok::IterOk&lt;std::vec::IntoIter&lt;tungsten&zwnj;&#8203;ite::protocol::messa&zwnj;&#8203;ge::Message&gt;, E&gt;</code>  cannot infer type for <code>E</code>. I am updating the question to include this information as it&#39;s not very readable down here. Thank you for your help."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 101, "user_id": 12136701, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/131081f19af34584cda29e81ec2b3a8b?s=128&d=identicon&r=PG&f=1", "display_name": "james pearson", "link": "https://stackoverflow.com/users/12136701/james-pearson"}, "edited": false, "score": 0, "creation_date": 1569755658, "post_id": 58154512, "comment_id": 102692269, "body": "@jamespearson Try with the <code>map_err()</code> type coercion. You will need to have <code>tungstenite</code> available, evidently. The aim of this is purely to get types to resolve."}, {"owner": {"reputation": 101, "user_id": 12136701, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/131081f19af34584cda29e81ec2b3a8b?s=128&d=identicon&r=PG&f=1", "display_name": "james pearson", "link": "https://stackoverflow.com/users/12136701/james-pearson"}, "edited": false, "score": 0, "creation_date": 1569756008, "post_id": 58154512, "comment_id": 102692332, "body": "doing that transfers the type annotation error to the map_err saying that the &quot;_&quot; underscore closure parameter of the map_err needs a type."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 101, "user_id": 12136701, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/131081f19af34584cda29e81ec2b3a8b?s=128&d=identicon&r=PG&f=1", "display_name": "james pearson", "link": "https://stackoverflow.com/users/12136701/james-pearson"}, "edited": false, "score": 0, "creation_date": 1569756248, "post_id": 58154512, "comment_id": 102692381, "body": "@jamespearson Surprised at that, but okay. Error type of <code>iter_ok()</code>, since it cannot fail, is <code>()</code>. Edited snippet, and [<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=0fbbf780d04816e5f49c0fe719f33adf](the\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> playground) seems to agree."}, {"owner": {"reputation": 101, "user_id": 12136701, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/131081f19af34584cda29e81ec2b3a8b?s=128&d=identicon&r=PG&f=1", "display_name": "james pearson", "link": "https://stackoverflow.com/users/12136701/james-pearson"}, "edited": false, "score": 0, "creation_date": 1569758618, "post_id": 58154512, "comment_id": 102692926, "body": "@sebastian Thanks that cracked it and I accepted your answer. For some reason doing send_all like that causes the websocket server I am speaking to send a close response ending the connection (perhaps due to send_all closing the sink). Do you happen to know a way around that?"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 101, "user_id": 12136701, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/131081f19af34584cda29e81ec2b3a8b?s=128&d=identicon&r=PG&f=1", "display_name": "james pearson", "link": "https://stackoverflow.com/users/12136701/james-pearson"}, "edited": false, "score": 0, "creation_date": 1569761517, "post_id": 58154512, "comment_id": 102693545, "body": "@jamespearson <code>send_all</code> takes <code>self</code> and returns a new <code>Sink</code>. if you do not keep this return value somewhere, it is dropped and the connection is closed."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 101, "user_id": 12136701, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/131081f19af34584cda29e81ec2b3a8b?s=128&d=identicon&r=PG&f=1", "display_name": "james pearson", "link": "https://stackoverflow.com/users/12136701/james-pearson"}, "edited": false, "score": 0, "creation_date": 1569762704, "post_id": 58154512, "comment_id": 102693808, "body": "@jamespearson just to specify a bit more on the previous comment - when you do <i>anything</i> to a sink, on the outside, you consume it. Any call aimed at not closing it will return <code>self</code> in some form or other. It is up to you to choose to drop or not to drop it, and (since RAII), if you do cause it to drop, it&#39;ll close the channel."}, {"owner": {"reputation": 101, "user_id": 12136701, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/131081f19af34584cda29e81ec2b3a8b?s=128&d=identicon&r=PG&f=1", "display_name": "james pearson", "link": "https://stackoverflow.com/users/12136701/james-pearson"}, "edited": false, "score": 0, "creation_date": 1569763883, "post_id": 58154512, "comment_id": 102694097, "body": "@sebastian Thanks for that explanation. How do I prevent sink being dropped though?  My sink is here <code>let (mut sink, stream) = ws_stream.split(); </code> and beneath that I have <code>sink.send_all(send_stream).map_err(|e| {println!(&quot;e = {:?}&quot;, e); ()}).and_then(|(passed_sink, _)|{    &#47;&#47; how do I keep passed_sink?     Ok(()) } ).wait();</code>"}, {"owner": {"reputation": 101, "user_id": 12136701, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/131081f19af34584cda29e81ec2b3a8b?s=128&d=identicon&r=PG&f=1", "display_name": "james pearson", "link": "https://stackoverflow.com/users/12136701/james-pearson"}, "edited": false, "score": 0, "creation_date": 1569764337, "post_id": 58154512, "comment_id": 102694221, "body": "I tried the simple thing of assigning <code>passed_sink</code> above to <code>mut sink</code> but due to ownership rules that&#39;s not allowed."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 101, "user_id": 12136701, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/131081f19af34584cda29e81ec2b3a8b?s=128&d=identicon&r=PG&f=1", "display_name": "james pearson", "link": "https://stackoverflow.com/users/12136701/james-pearson"}, "edited": false, "score": 0, "creation_date": 1569770359, "post_id": 58154512, "comment_id": 102695730, "body": "@jamespearson welcome to the fun world of futures. I&#39;ll be home in an hour or so (I was on and off planes the entire days) - let&#39;s continue this in chat a bit later if you like, I&#39;ll be happy to show you the pitfalls and how to avoid them!"}, {"owner": {"reputation": 101, "user_id": 12136701, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/131081f19af34584cda29e81ec2b3a8b?s=128&d=identicon&r=PG&f=1", "display_name": "james pearson", "link": "https://stackoverflow.com/users/12136701/james-pearson"}, "edited": false, "score": 0, "creation_date": 1569771118, "post_id": 58154512, "comment_id": 102695935, "body": "Thanks so much! I really appreciate the help in getting me over the finish line. Something I&#39;ve found which may help is for 0.1 futures <code>send_all</code> closes the <code>sink</code> connection afterwards, whereas in the new futures they have changed <code>send_all</code> so it doesn&#39;t (<a href=\"https://github.com/rust-lang-nursery/futures-rs/issues/462\" rel=\"nofollow noreferrer\">github.com/rust-lang-nursery/futures-rs/issues/462</a> <a href=\"https://github.com/rust-lang-nursery/futures-rs/pull/745\" rel=\"nofollow noreferrer\">github.com/rust-lang-nursery/futures-rs/pull/745</a>). I haven&#39;t been able to take advantage of this though as I need 0.1 futures."}, {"owner": {"reputation": 101, "user_id": 12136701, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/131081f19af34584cda29e81ec2b3a8b?s=128&d=identicon&r=PG&f=1", "display_name": "james pearson", "link": "https://stackoverflow.com/users/12136701/james-pearson"}, "edited": false, "score": 0, "creation_date": 1569771284, "post_id": 58154512, "comment_id": 102695986, "body": "There&#39;s also a patch I&#39;ve seen to use a custom send_all function (in the above links) but it doesn&#39;t give the results I was expecting."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 101, "user_id": 12136701, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/131081f19af34584cda29e81ec2b3a8b?s=128&d=identicon&r=PG&f=1", "display_name": "james pearson", "link": "https://stackoverflow.com/users/12136701/james-pearson"}, "edited": false, "score": 0, "creation_date": 1569771695, "post_id": 58154512, "comment_id": 102696095, "body": "futures 0.1 did have that problem. Why are you specifically stuck on 0.1? it may be worth isolating and either patching or replacing the dependency that causes you to not be able to use 0.2. Back then, most people got around this issue by having a stream closable on demand being fed to <code>send_all</code>, typically from a mpsc <code>channel</code> or their own implementation. mpsc channels have the interesting property that when all senders are dropped, the stream finishes - this makes them perfect for this."}, {"owner": {"reputation": 101, "user_id": 12136701, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/131081f19af34584cda29e81ec2b3a8b?s=128&d=identicon&r=PG&f=1", "display_name": "james pearson", "link": "https://stackoverflow.com/users/12136701/james-pearson"}, "edited": false, "score": 0, "creation_date": 1569776269, "post_id": 58154512, "comment_id": 102697260, "body": "Good news, I got the patched send_all function I referenced above working! It actually works like a charm, my first test of it was a case of good ol&#39; user error. So that solves it! Phew. Thanks again for your original answer and patience! Have a nice day :)"}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": true, "score": 1, "last_activity_date": 1569756209, "last_edit_date": 1569756209, "creation_date": 1569754413, "answer_id": 58154512, "question_id": 58154386, "link": "https://stackoverflow.com/questions/58154386/how-to-send-a-stream-of-websocket-messages-using-the-send-all-method-of-tokio-tu/58154512#58154512", "title": "How to send a stream of websocket messages using the send_all method of tokio-tungstenite", "body": "<p>Your problem lies squarely on this line:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let send_stream:tokio_tungstenite::WebSocketStream&lt;tokio_tungstenite::tungstenite::Message&gt; \n    = futures::stream::iter_ok(my_messages);\n</code></pre>\n\n<p>The definition of <a href=\"https://docs.rs/futures/0.2.1/futures/stream/fn.iter_ok.html\" rel=\"nofollow noreferrer\"><code>futures::stream::iter_ok</code></a> is as follows:</p>\n\n<pre><code>pub fn iter_ok&lt;I, E&gt;(i: I) -&gt; IterOk&lt;&lt;I as IntoIterator&gt;::IntoIter, E&gt; \nwhere\n    I: IntoIterator, \n</code></pre>\n\n<p>Notice that this new stream is an <code>IterOk</code>, not a <code>tungstenite::WebsocketStream</code>. By forcing the type (with your annotations), you are forcing the compiler to look for an implementation of <code>Into&lt;WebsocketStream&gt;</code> for <code>IterOk</code>, which there is none.</p>\n\n<p>As a result, this fails.</p>\n\n<p>This type hint was completely unnecessary as <code>send_all</code> is defined for <code>impl Sink&lt;SinkItem = _, SinkError = _&gt;</code>.</p>\n\n<p>Without too much surprise, changing the line to:</p>\n\n<pre><code>let send_stream = futures::stream::iter_ok(my_messages)\n  .map_err(|_:()| tungstenite::error::Error::Utf8)\n</code></pre>\n\n<p>should work flawlessly, as your sink expects <code>tungstenite::Message</code> and this new stream has that as an element (as it was built from a <code>Vec&lt;tungstenite::Message&gt;</code>). The <code>map_err</code> is there purely to coerce types and will <strong>never be called in practice</strong>.</p>\n"}], "owner": {"reputation": 101, "user_id": 12136701, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/131081f19af34584cda29e81ec2b3a8b?s=128&d=identicon&r=PG&f=1", "display_name": "james pearson", "link": "https://stackoverflow.com/users/12136701/james-pearson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1069, "favorite_count": 0, "accepted_answer_id": 58154512, "answer_count": 1, "score": 2, "last_activity_date": 1569756209, "creation_date": 1569753141, "last_edit_date": 1569754892, "question_id": 58154386, "link": "https://stackoverflow.com/questions/58154386/how-to-send-a-stream-of-websocket-messages-using-the-send-all-method-of-tokio-tu", "title": "How to send a stream of websocket messages using the send_all method of tokio-tungstenite", "body": "<p>I am using the excellent rust websocket library tokio-tungstenite, which is just the tokio version of tungstenite.</p>\n\n<p>I can easily connect to a websocket stream using the connect_async method and in the websocket stream I get back I split it as follows:</p>\n\n<pre><code>connect_async(url).and_then(move |(ws_stream, _)| {\n\n        let (sink, stream) = ws_stream.split();\n</code></pre>\n\n<p>I can easily send a single message down the sink using the send message like this:</p>\n\n<pre><code>sink.send(tungstenite::Message::Text(\"my message\".to_string()))\n.map_err(|e| ())\n.wait();\n</code></pre>\n\n<p>That is just a contrived example. My problem is I want to send a stream of messages down the sink which I've learned is best accomplished using the send_all method. My attempt is:</p>\n\n<pre><code>let my_messsages : Vec&lt;tungstenite::Message&gt; = vec![\ntungstenite::Message::Text(\"message_1\".to_string()), \ntungstenite::Message::Text(\"message_2\".to_string()) ];\n\nlet send_stream: tokio_tungstenite::WebSocketStream\n&lt;tokio_tungstenite::tungstenite::Message&gt; \n= futures::stream::iter_ok(my_messages);\n\nsink.send_all(stream).map_err(|e| ()).wait();\n</code></pre>\n\n<p>But it doesn't work, because futures::stream::iter_ok isn't the correct way to construct the stream I need, which is where I'm stuck and cannot see how to proceed from the documentation.</p>\n\n<p>Edit: Originally I did not specify a type annotation for the send_stream and it gave me this error:</p>\n\n<pre><code>type annotations needed for `futures::stream::iter_ok::IterOk\n&lt;std::vec::IntoIter&lt;tungstenite::protocol::message::Message&gt;, E&gt;`\n\ncannot infer type for `E`\n</code></pre>\n\n<p>The current error is also to do with type annotations for the send stream.</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": false, "score": 1, "last_activity_date": 1570130972, "creation_date": 1570130972, "answer_id": 58225720, "question_id": 58154231, "link": "https://stackoverflow.com/questions/58154231/one-line-module-re-export/58225720#58225720", "title": "One line module re-export", "body": "<p>If I understand correctly, you're asking if the <code>mod</code> and the <code>use</code> can be combined into a single line.</p>\n\n<p>No, there is no allowance for combining a <code>mod</code> with a <code>use</code>.  The right way to think about <code>mod</code> is that it defines where the module is located in the module hierarchy. The fact that it also brings the module name into the namespace of the current module, as if you had written <code>use some_module;</code>, is essentially a part of that, since it would be pointless to ever write <code>mod some_module</code> <em>without</em> making it visible in its parent.</p>\n\n<p>If you want to also make additional names available, there is no special syntax for combining it with a <code>mod</code>; you have to use <code>use</code>.</p>\n"}], "owner": {"reputation": 4330, "user_id": 3599414, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/ZFtWq.jpg?s=128&g=1", "display_name": "garrettmaring", "link": "https://stackoverflow.com/users/3599414/garrettmaring"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 465, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1570130972, "creation_date": 1569751769, "last_edit_date": 1570127760, "question_id": 58154231, "link": "https://stackoverflow.com/questions/58154231/one-line-module-re-export", "title": "One line module re-export", "body": "<p>I'm am trying to re-export a submodule from another file from a parent module.</p>\n\n<p>Give this file structure,</p>\n\n<pre><code>src/\n- lib.rs\n- module/\n-- mod.rs\n-- submodule/\n--- mod.rs\n</code></pre>\n\n<p>...can this be accomplished in a single line? </p>\n\n<pre><code>// mod.rs\nmod submodule;\npub use submodule::*;\n\n// something like pub use mod submodule::*;\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1569765276, "post_id": 58153858, "comment_id": 102694457, "body": "1. is answered by <a href=\"https://stackoverflow.com/q/29401626/3650362\">How do I return a reference to something inside a RefCell without breaking encapsulation?</a> (the answers suggest ways to fix it); 2. is related to <a href=\"https://stackoverflow.com/q/32165917/3650362\">Why does linking lifetimes matter only with mutable references?</a>, but I&#39;m not sure exactly why the compiler doesn&#39;t like this. I tried making it a <code>move</code> closure and taking the reference outside the closure to no effect, which makes me think I might be missing the point."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1569765794, "post_id": 58153858, "comment_id": 102694594, "body": "This question was <a href=\"https://users.rust-lang.org/t/why-this-rust-fnmut-closure-code-has-lifetime-errors/33063\" rel=\"nofollow noreferrer\">cross-posted to users.rust-lang.org</a>."}, {"owner": {"reputation": 14053, "user_id": 2189130, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/trlri.png?s=128&g=1", "display_name": "kmdreko", "link": "https://stackoverflow.com/users/2189130/kmdreko"}, "edited": false, "score": 0, "creation_date": 1614110928, "post_id": 58153858, "comment_id": 117284106, "body": "Does this answer your question? <a href=\"https://stackoverflow.com/questions/52752259/why-can-i-not-return-a-mutable-reference-to-an-outer-variable-from-a-closure\">Why can I not return a mutable reference to an outer variable from a closure?</a>"}], "owner": {"reputation": 171, "user_id": 5564268, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZajtC.jpg?s=128&g=1", "display_name": "mingxin", "link": "https://stackoverflow.com/users/5564268/mingxin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 88, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1569815702, "creation_date": 1569748407, "last_edit_date": 1569815702, "question_id": 58153858, "link": "https://stackoverflow.com/questions/58153858/why-this-rust-fnmut-closure-code-has-lifetime-errors", "title": "Why this rust FnMut closure code has lifetime errors?", "body": "<p>I want to make a closure hold <code>&amp;mut Vec</code>, but these simple few lines of code can't compile.</p>\n\n<p>I know this can be solved with <code>RefCell</code>, I just can't figure the error out.</p>\n\n<pre><code>struct Server&lt;'a&gt; {\n    data: &amp;'a mut Vec&lt;i32&gt;,\n}\n\nfn main() {\n    let mut data = vec![1, 2, 3];\n    let mut c = || {\n         Server{\n            data: &amp;mut data,\n        }\n    };\n    let server = c();\n}\n\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=60171de3b0ee495af643e0d25afc7ac1\" rel=\"nofollow noreferrer\">Rust playground link</a></p>\n\n<p>The error message is:</p>\n\n<pre><code>error[E0495]: cannot infer an appropriate lifetime for borrow expression due to conflicting requirements\n  --&gt; src/main.rs:36:19\n   |\n36 |             data: &amp;mut data,\n   |                   ^^^^^^^^^\n   |\nnote: first, the lifetime cannot outlive the lifetime '_ as defined on the body at 34:17...\n  --&gt; src/main.rs:34:17\n   |\n34 |     let mut c = || {\n   |                 ^^\nnote: ...so that closure can access `data`\n  --&gt; src/main.rs:36:19\n   |\n36 |             data: &amp;mut data,\n   |                   ^^^^^^^^^\nnote: but, the lifetime must be valid for the call at 39:18...\n  --&gt; src/main.rs:39:18\n   |\n39 |     let server = c();\n   |                  ^^^\nnote: ...so type `Server&lt;'_&gt;` of expression is valid during the expression\n  --&gt; src/main.rs:39:18\n   |\n39 |     let server = c();\n   |                  ^^^\n\nerror: aborting due to previous error\n</code></pre>\n\n<p><strong>Update:</strong></p>\n\n<p>I found <a href=\"http://blog.luxko.site/post/closure-lifetime-hrt/\" rel=\"nofollow noreferrer\">this post</a> answered the question, but I could not understand some parts of it:</p>\n\n<blockquote>\n  <p>It turns out that, returning &amp;<code>'a mut i32</code> is not feasible for the shorter-live invocation of <code>call_mut</code>. What we\u2019ve really wanted for the return type of <code>call_mut</code>, was something like:</p>\n</blockquote>\n\n<pre><code>impl&lt;'a&gt; FnMut&lt;(usize,)&gt; for Closure&lt;'a&gt; {\n    extern \"rust-call\"\n    fn&lt;'b&gt; call_mut(&amp;'b mut self, (i,): (usize, )) -&gt; &amp;'b mut i32 {\n        self.inner.get_mut(i).unwrap()\n    }\n}\n</code></pre>\n\n<ol>\n<li>Why the <code>call_mut</code> fn has to use a <code>'b</code> lifetime instead of <code>'a</code>?</li>\n<li>I found the code would work if change <code>data: &amp;mut Vec&lt;i32&gt;</code> to <code>data: &amp;Vec&lt;i32&gt;</code>, which makes me more confused that why lifetime is related to <code>mut</code>?</li>\n</ol>\n"}, {"tags": ["c", "rust", "ffi", "dpkg"], "comments": [{"owner": {"reputation": 33821, "user_id": 45685, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/y4RJr.jpg?s=128&g=1", "display_name": "AndersK", "link": "https://stackoverflow.com/users/45685/andersk"}, "edited": false, "score": 0, "creation_date": 1569748487, "post_id": 58153674, "comment_id": 102690736, "body": "you could move out program_name and dir since they are invariant in your loop, and place them on the stack instead of messing with malloc. e.g. <code>const char program_name[] = &quot;test&quot;; const char dir[] = &quot;&#47;var&#47;lib&#47;dpkg&quot;;</code>"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1569751654, "post_id": 58153674, "comment_id": 102691424, "body": "1. the C code is not formated 2. &quot;The following C program runs as expected&quot; include the output 3. why the rust code use <code>into_raw()</code> there is no point as you don&#39;t give the ownership of these <code>CString</code> to the api ? 4. Don&#39;t cast malloc return 5. always check malloc return 6. always check function return."}, {"owner": {"reputation": 17094, "user_id": 85140, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/ecefdcbc16e0f1fd61be3011b0045761?s=128&d=identicon&r=PG", "display_name": "the_drow", "link": "https://stackoverflow.com/users/85140/the-drow"}, "reply_to_user": {"reputation": 33821, "user_id": 45685, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/y4RJr.jpg?s=128&g=1", "display_name": "AndersK", "link": "https://stackoverflow.com/users/45685/andersk"}, "edited": false, "score": 0, "creation_date": 1569829687, "post_id": 58153674, "comment_id": 102708788, "body": "@Anders I know. I wanted to emulate the heap allocations done by CString."}, {"owner": {"reputation": 17094, "user_id": 85140, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/ecefdcbc16e0f1fd61be3011b0045761?s=128&d=identicon&r=PG", "display_name": "the_drow", "link": "https://stackoverflow.com/users/85140/the-drow"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1569830032, "post_id": 58153674, "comment_id": 102708929, "body": "@Stargateur 1. What do you mean by not formatted 2. Done 3. Because that&#39;s the only way it kinda worked in Rust 4. Yeh I just copy/pasted that from somewhere I think 5. Yeh I know I just wanted to quickly test this in C 6. Yes, you are correct."}, {"owner": {"reputation": 17094, "user_id": 85140, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/ecefdcbc16e0f1fd61be3011b0045761?s=128&d=identicon&r=PG", "display_name": "the_drow", "link": "https://stackoverflow.com/users/85140/the-drow"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1569830161, "post_id": 58153674, "comment_id": 102708985, "body": "@Stargateur I&#39;m not sure how to provide a minimally reproducible test case as the segfault/error in question involve interacting with libdpkg and I don&#39;t really know if it can be reproduced elsewhere. Suggestions are welcome."}], "answers": [{"tags": [], "owner": {"reputation": 17094, "user_id": 85140, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/ecefdcbc16e0f1fd61be3011b0045761?s=128&d=identicon&r=PG", "display_name": "the_drow", "link": "https://stackoverflow.com/users/85140/the-drow"}, "is_accepted": true, "score": 2, "last_activity_date": 1569831625, "creation_date": 1569831625, "answer_id": 58163994, "question_id": 58153674, "link": "https://stackoverflow.com/questions/58153674/passing-a-string-from-rust-to-c-causes-a-segfault-or-an-error/58163994#58163994", "title": "Passing a string from Rust to C causes a segfault or an error", "body": "<p>The problem was not with my code but from the fact that libdpkg is not threadsafe.</p>\n\n<p>This is fine from an implementation perspective but Rust runs the tests in parallel which causes the segfault.</p>\n"}], "owner": {"reputation": 17094, "user_id": 85140, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/ecefdcbc16e0f1fd61be3011b0045761?s=128&d=identicon&r=PG", "display_name": "the_drow", "link": "https://stackoverflow.com/users/85140/the-drow"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 155, "favorite_count": 0, "accepted_answer_id": 58163994, "answer_count": 1, "score": -2, "last_activity_date": 1569831625, "creation_date": 1569746720, "last_edit_date": 1569829833, "question_id": 58153674, "link": "https://stackoverflow.com/questions/58153674/passing-a-string-from-rust-to-c-causes-a-segfault-or-an-error", "title": "Passing a string from Rust to C causes a segfault or an error", "body": "<p>I'm creating a binding to <code>libdpkg</code> in Rust (mostly to learn about Rust FFI) using <code>rust-bindgen</code>.</p>\n\n<p>I've encountered a problem at the very beginning of the implementation.</p>\n\n<p>I have the following Rust code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#![allow(non_upper_case_globals)]\n#![allow(non_camel_case_types)]\n#![allow(non_snake_case)]\n\ninclude!(concat!(env!(\"OUT_DIR\"), \"/bindings.rs\"));\n\nuse std::convert::TryInto;\nuse std::ffi::CString;\nuse std::os::raw::c_char;\n\npub struct Dpkg {\n    program_name: *mut c_char,\n    root_directory: Option&lt;*mut c_char&gt;,\n}\n\nimpl Dpkg {\n    pub fn new(program_name: &amp;str, root_directory: Option&lt;&amp;str&gt;) -&gt; Dpkg {\n        let dpkg = Dpkg {\n            program_name: CString::new(program_name).unwrap().into_raw(),\n            root_directory: match root_directory {\n                Some(dir) =&gt; Some(CString::new(dir).unwrap().into_raw()),\n                None =&gt; None,\n            },\n        };\n\n        unsafe {\n            dpkg_set_progname(dpkg.program_name);\n            push_error_context();\n\n            if let Some(dir) = dpkg.root_directory {\n                dpkg_db_set_dir(dir);\n            }\n            modstatdb_init();\n            modstatdb_open(modstatdb_rw_msdbrw_available_readonly);\n        }\n\n        dpkg\n    }\n}\n\nimpl Drop for Dpkg {\n    fn drop(&amp;mut self) {\n        unsafe {\n            pkg_db_reset();\n            modstatdb_done();\n            modstatdb_shutdown();\n\n            pop_error_context(ehflag_normaltidy.try_into().unwrap());\n\n            let _ = CString::from_raw(self.program_name);\n            if let Some(dir) = self.root_directory {\n                let _ = CString::from_raw(dir);\n            }\n\n        }\n    }\n}\n</code></pre>\n\n<p>I have the following integration tests:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate dpkg;\n\nuse dpkg::Dpkg;\nuse std::mem;\n\n#[test]\nfn test_new() {\n    let dpkg = Dpkg::new(\"test\", None);\n    mem::drop(dpkg);\n    let dpkg = Dpkg::new(\"test2\", None);\n    mem::drop(dpkg);\n}\n\n#[test]\nfn test_new2() {\n    let dpkg = Dpkg::new(\"test\", None);\n    mem::drop(dpkg);\n}\n</code></pre>\n\n<p>In the first test, no matter how many times I invoke <code>Dpkg::new()</code> everything is in order and works fine.</p>\n\n<p>However, if I execute <code>Dpkg::new()</code> in <code>test_new2()</code> the result is either a segfault or the following error:</p>\n\n<pre><code>test: unrecoverable fatal error, aborting:\n parsing file '/var/lib/dpkg/status' near line 10 package 'fonts-sil-abyssinica':\n 'Replaces' field, invalid package name '\ufffd': must start with an alphanumeric character\n</code></pre>\n\n<p>I'm not really sure why though.\nThe following C program runs as expected:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>#include &lt;stdio.h&gt;\n#define LIBDPKG_VOLATILE_API\n\n#include &lt;dpkg/dpkg-db.h&gt;\n#include &lt;dpkg/dpkg.h&gt;\n#include &lt;stdlib.h&gt;\n\nvoid setup_dpkg(const char *program_name, const char *root_directory) {\n    dpkg_set_progname(program_name);\n    push_error_context();\n\n    if (root_directory != NULL) {\n        dpkg_db_set_dir(root_directory);\n    }\n    modstatdb_init();\n    modstatdb_open(msdbrw_available_readonly);\n}\n\nvoid destroy_dpkg() {\n    pkg_db_reset();\n    modstatdb_done();\n\n    pop_error_context(ehflag_normaltidy);\n}\n\nint main() {\n    for (int i =0; i &lt; 100; i++) {\n        char *program_name = (char*)malloc(32 * sizeof(char));\n        strcpy(program_name, \"test\");\n        char *dir = (char*)malloc(16 * sizeof(char));\n        strcpy(dir, \"/var/lib/dpkg\");\n        setup_dpkg(program_name, dir);\n        printf(\"%d time!\\n\", i);\n        destroy_dpkg();\n        free(program_name);\n        free(dir);\n    }\n    return 0;\n}\n</code></pre>\n\n<p>The output is:</p>\n\n<pre><code>0 time!\n1 time!\n2 time!\n3 time!\n4 time!\n5 time!\n6 time!\n7 time!\n8 time!\n9 time!\n10 time!\n11 time!\n12 time!\n13 time!\n14 time!\n15 time!\n16 time!\n17 time!\n18 time!\n19 time!\n20 time!\n21 time!\n22 time!\n23 time!\n24 time!\n25 time!\n26 time!\n27 time!\n28 time!\n29 time!\n30 time!\n31 time!\n32 time!\n33 time!\n34 time!\n35 time!\n36 time!\n37 time!\n38 time!\n39 time!\n40 time!\n41 time!\n42 time!\n43 time!\n44 time!\n45 time!\n46 time!\n47 time!\n48 time!\n49 time!\n50 time!\n51 time!\n52 time!\n53 time!\n54 time!\n55 time!\n56 time!\n57 time!\n58 time!\n59 time!\n60 time!\n61 time!\n62 time!\n63 time!\n64 time!\n65 time!\n66 time!\n67 time!\n68 time!\n69 time!\n70 time!\n71 time!\n72 time!\n73 time!\n74 time!\n75 time!\n76 time!\n77 time!\n78 time!\n79 time!\n80 time!\n81 time!\n82 time!\n83 time!\n84 time!\n85 time!\n86 time!\n87 time!\n88 time!\n89 time!\n90 time!\n91 time!\n92 time!\n93 time!\n94 time!\n95 time!\n96 time!\n97 time!\n98 time!\n99 time!\n</code></pre>\n\n<p>Am I doing something wrong here (which is probable) or is it the Rust test runner which causes such problems?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "edited": false, "score": 0, "creation_date": 1569740301, "post_id": 58153003, "comment_id": 102689331, "body": "Since trait A doesn&#39;t necessarily implement type A, no. You need to have <code>trait B: A {}</code>"}, {"owner": {"reputation": 875, "user_id": 890991, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/33bfa5c69121eac7b878a20c457567c6?s=128&d=identicon&r=PG", "display_name": "Jiaming Lu", "link": "https://stackoverflow.com/users/890991/jiaming-lu"}, "reply_to_user": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "edited": false, "score": 0, "creation_date": 1569740653, "post_id": 58153003, "comment_id": 102689379, "body": "I have tried with B: A, not working."}, {"owner": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "edited": false, "score": 0, "creation_date": 1569740712, "post_id": 58153003, "comment_id": 102689392, "body": "It would still need an explicit cast. Why do you need to do this, though? Most of the time static dispatch is sufficient."}, {"owner": {"reputation": 875, "user_id": 890991, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/33bfa5c69121eac7b878a20c457567c6?s=128&d=identicon&r=PG", "display_name": "Jiaming Lu", "link": "https://stackoverflow.com/users/890991/jiaming-lu"}, "reply_to_user": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "edited": false, "score": 0, "creation_date": 1569740720, "post_id": 58153003, "comment_id": 102689394, "body": "And <code>trait B: A</code> means, any B is also A, but not vice versa."}, {"owner": {"reputation": 875, "user_id": 890991, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/33bfa5c69121eac7b878a20c457567c6?s=128&d=identicon&r=PG", "display_name": "Jiaming Lu", "link": "https://stackoverflow.com/users/890991/jiaming-lu"}, "reply_to_user": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "edited": false, "score": 0, "creation_date": 1569740793, "post_id": 58153003, "comment_id": 102689409, "body": "I just want to have some helper functions in trait B. Surely I can have other solutions, just wondering why this kind of cast not working"}, {"owner": {"reputation": 1925, "user_id": 2865757, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4dcfe7782349d59e50b1fa196f9c6669?s=128&d=identicon&r=PG&f=1", "display_name": "Zefick", "link": "https://stackoverflow.com/users/2865757/zefick"}, "edited": false, "score": 0, "creation_date": 1569741175, "post_id": 58153003, "comment_id": 102689458, "body": "It&#39;s not working because it&#39;s not safe."}, {"owner": {"reputation": 875, "user_id": 890991, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/33bfa5c69121eac7b878a20c457567c6?s=128&d=identicon&r=PG", "display_name": "Jiaming Lu", "link": "https://stackoverflow.com/users/890991/jiaming-lu"}, "edited": false, "score": 0, "creation_date": 1569741485, "post_id": 58153003, "comment_id": 102689515, "body": "And I want to know why is it not safe, since for every &lt;T: A&gt;, B is implemented."}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1569742457, "post_id": 58153003, "comment_id": 102689666, "body": "It&#39;s not just that it&#39;s not safe in general. When you construct a trait object from a value, it includes a vtable pointer for that trait depending on the value&#39;s concrete type. That vtable only includes methods from that one trait. Casting to a subtrait or unrelated trait would imply working out the concrete type from the vtable, then somehow finding the right vtable for the other trait. To my knowledge, it&#39;s not possible to implement casts like this directly; the information just isn&#39;t available at runtime. See the linked duplicate for workarounds."}, {"owner": {"reputation": 875, "user_id": 890991, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/33bfa5c69121eac7b878a20c457567c6?s=128&d=identicon&r=PG", "display_name": "Jiaming Lu", "link": "https://stackoverflow.com/users/890991/jiaming-lu"}, "reply_to_user": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1569743001, "post_id": 58153003, "comment_id": 102689745, "body": "@FrancisGagn&#233; Now I understand why it&#39;s not working, but for the vtable part, since I have the vtable of A, why can&#39;t I build a vtable of B based on the vtable of A, it&#39;s just another layer of indirection."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1569758025, "post_id": 58153003, "comment_id": 102692778, "body": "The vtable of <code>A</code> doesn&#39;t contain a vtable for <code>B</code>, or any information that would allow you to recover one. If you reverse the supertrait relationship (<code>A: B</code>), you could add an <code>as_b</code> method to the trait (<a href=\"https://stackoverflow.com/questions/28632968/why-doesnt-rust-support-trait-object-upcasting\">example</a>), or you could add an <code>as_any</code> method and attempt to downcast to some concrete type that you know implements <code>B</code> (<a href=\"https://stackoverflow.com/questions/27892375/can-i-do-type-introspection-with-trait-objects-and-then-downcast-it\">see</a>)."}, {"owner": {"reputation": 875, "user_id": 890991, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/33bfa5c69121eac7b878a20c457567c6?s=128&d=identicon&r=PG", "display_name": "Jiaming Lu", "link": "https://stackoverflow.com/users/890991/jiaming-lu"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1569814478, "post_id": 58153003, "comment_id": 102704475, "body": "@trentcl, I means, from <code>impl &lt;T: A&gt; B for T</code>, all methods in (this implementation of) B must call only methods contained in the vtable of A. Although the vtable of B is not contained in the vtable of A, it can be resolved in compile time. Of cause now I see rust not support this."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1569834465, "post_id": 58153003, "comment_id": 102711055, "body": "It <i>cannot</i> be resolved at compile time, because by using <code>dyn</code> you explicitly defer the knowledge of <i>which</i> concrete type you&#39;re dealing with to runtime. <code>cast</code> does not have access to compile time type information, because it is not generic; it only knows what you give it at runtime."}], "owner": {"reputation": 875, "user_id": 890991, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/33bfa5c69121eac7b878a20c457567c6?s=128&d=identicon&r=PG", "display_name": "Jiaming Lu", "link": "https://stackoverflow.com/users/890991/jiaming-lu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 41, "favorite_count": 0, "closed_date": 1569741925, "answer_count": 0, "score": 0, "last_activity_date": 1569740543, "creation_date": 1569740102, "last_edit_date": 1569740543, "question_id": 58153003, "link": "https://stackoverflow.com/questions/58153003/rust-cast-trait-object-to-a-different-type", "closed_reason": "Duplicate", "title": "Rust: cast trait object to a different type", "body": "<p>Is there any way to cast a trait object (<code>dyn A</code>) to another type (<code>dyn B</code>) safely?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait A {}\ntrait B: A {}\nimpl &lt;T: A&gt; B for T {}\n\nfn cast(x: &amp;dyn A) -&gt; &amp;dyn B {\n  x\n}\n</code></pre>\n\n<pre><code>error[E0308]: mismatched types\n --&gt; src/lib.rs:6:3\n  |\n6 |   x\n  |   ^ expected trait `B`, found trait `A`\n  |\n  = note: expected type `&amp;dyn B`\n             found type `&amp;dyn A`\n</code></pre>\n"}, {"tags": ["data-structures", "rust", "borrow-checker"], "comments": [{"owner": {"reputation": 3573, "user_id": 3142971, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/GvXzQ.png?s=128&g=1", "display_name": "Steampunkery", "link": "https://stackoverflow.com/users/3142971/steampunkery"}, "reply_to_user": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "edited": false, "score": 0, "creation_date": 1569736854, "post_id": 58152490, "comment_id": 102688689, "body": "@SCappella: Wow, that&#39;s super helpful. What&#39;s even better is it also taught me why it&#39;s not allowed, alongside several workable solutions. I&#39;m heading off to bed, but once I get back to the code I&#39;ll post whatever I end up using for posterity, if there isn&#39;t a working answer by then. Which of those solutions do you think is the best?"}], "answers": [{"tags": [], "owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "is_accepted": false, "score": 1, "last_activity_date": 1569757251, "creation_date": 1569757251, "answer_id": 58154831, "question_id": 58152490, "link": "https://stackoverflow.com/questions/58152490/call-mutable-method-on-value-from-mutable-struct-field/58154831#58154831", "title": "Call mutable method on value from mutable struct field", "body": "<p>I split up line 16 from your example to explain what (I think) is going on:</p>\n\n<p>I.e. from</p>\n\n<pre><code>let action = self.entities[self.current_entity].get_action(self);\n</code></pre>\n\n<p>to:</p>\n\n<pre><code>let entity = &amp;mut self.entities[self.current_entity];\nlet action = entity.get_action(self);\n</code></pre>\n\n<p>In the above, <code>entity</code> mutably refers to <code>self</code> (indirectly through <code>self.entities</code>). Thus, <code>get_action</code> cannot modify <code>self</code> because it could - in particular - change <code>self.entities</code>, thereby invalidating the reference <code>entity</code>. This is not allowed by (safe) Rust.</p>\n\n<p>You could try to split up your <code>Level</code> into <code>entities</code> and <code>noentities</code>. This allows you to explicitly specify which parts of <code>Level</code> are actually mutably referred to. (See <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a8199f0bd4f8119f2ec1e79f9ebb542d\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a8199f0bd4f8119f2ec1e79f9ebb542d</a> for an updated example.)</p>\n\n<p>I.e. you'd have</p>\n\n<pre><code>struct LevelNoEntities {\n    current_entity: usize,\n    foo: i32,\n}\nstruct Level {\n    entities: Vec&lt;Entity&gt;,\n    noentities: LevelNoEntities,\n}\n</code></pre>\n\n<p>Then, you would now have the following:</p>\n\n<pre><code>let entity = &amp;mut self.entities[self.noentities.current_entity];\nlet action = entity.get_action(&amp;self.noentities);\n</code></pre>\n\n<p>Now, <code>entity</code> only refers to <code>self.entities</code>, and you can still pass <code>noentities</code> around because the compiler now knows you mutably refer to only a part of <code>Level</code>.</p>\n"}], "owner": {"reputation": 3573, "user_id": 3142971, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/GvXzQ.png?s=128&g=1", "display_name": "Steampunkery", "link": "https://stackoverflow.com/users/3142971/steampunkery"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 99, "favorite_count": 0, "closed_date": 1569801774, "answer_count": 1, "score": 0, "last_activity_date": 1569757251, "creation_date": 1569734705, "question_id": 58152490, "link": "https://stackoverflow.com/questions/58152490/call-mutable-method-on-value-from-mutable-struct-field", "closed_reason": "Duplicate", "title": "Call mutable method on value from mutable struct field", "body": "<p>I'm still a bit new to Rust, so I'm not quite sure how to restructure my code properly to make what I'm trying to do possible. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c7a0952cf2e242d22544b3d074bcf359\" rel=\"nofollow noreferrer\">Here</a>'s a link to an MCVE of the code I'm running. </p>\n\n<p>Essentially what I'm trying to do is iterate through a vector of entities and get an action from each of them. I don't need a mutable borrow for that part specifically, but I do need to pass a mutable reference to <code>self</code> into a method later in the function to perform the action that was returned.</p>\n\n<p>Here's the exact error message I'm getting:</p>\n\n<pre><code>error[E0502]: cannot borrow `*self` as immutable because it is also borrowed as mutable\n  --&gt; src/main.rs:16:72\n   |\n16 |             let action = self.entities[self.current_entity].get_action(self);\n   |                          -------------                      ---------- ^^^^ immutable borrow occurs here\n   |                          |                                  |\n   |                          |                                  mutable borrow later used by call\n   |                          mutable borrow occurs here\n\nerror: aborting due to previous error\n</code></pre>\n\n<p>How should I structure my code so that what I'm trying to do is possible?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 5, "last_activity_date": 1569723464, "creation_date": 1569723464, "answer_id": 58151696, "question_id": 58151676, "link": "https://stackoverflow.com/questions/58151676/how-to-rewind-the-file-pointer-in-rust/58151696#58151696", "title": "How to rewind the file pointer in rust", "body": "<p>Use <a href=\"https://doc.rust-lang.org/stable/std/io/trait.Seek.html#tymethod.seek\" rel=\"noreferrer\"><code>seek</code></a>.</p>\n\n<pre><code>use std::io::{self, Seek, SeekFrom};\nuse std::fs::File;\n\nfn main() -&gt; io::Result&lt;()&gt; {\n    let mut file = File::open(\"foo.bar\")?;\n    file.seek(SeekFrom::Start(0))?;\n    Ok(())\n}\n</code></pre>\n"}], "owner": {"reputation": 57, "user_id": 12101193, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9e777e8def5f06e7debad22033934e6c?s=128&d=identicon&r=PG&f=1", "display_name": "moon548834", "link": "https://stackoverflow.com/users/12101193/moon548834"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 586, "favorite_count": 1, "accepted_answer_id": 58151696, "answer_count": 1, "score": 1, "last_activity_date": 1569723464, "creation_date": 1569723140, "question_id": 58151676, "link": "https://stackoverflow.com/questions/58151676/how-to-rewind-the-file-pointer-in-rust", "title": "How to rewind the file pointer in rust", "body": "<p>In C, I can use <code>rewind</code> back to the start, but I didn't found a similar way in Rust.</p>\n\n<p>I want to open an existed file, and let the file pointer go back to the start point, write new words to it and cover the old one.</p>\n\n<p>But now I can only write something after the last line of the original file and don't know how to change the file pointer.</p>\n\n<p>I known that rust has a crate <code>libc::rewind</code>, but how to use it, or any other ways?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 2, "last_activity_date": 1569722561, "creation_date": 1569722561, "answer_id": 58151636, "question_id": 58150681, "link": "https://stackoverflow.com/questions/58150681/inline-cfg-attrfeature-x-path-file-rs-doesnt-work/58151636#58151636", "title": "Inline `cfg_attr(feature = x, path = &quot;file.rs&quot;)` doesn&#39;t work", "body": "<p><code>cfg</code> enables a whole item conditionally. <code>cfg_attr</code> enables one or more <em>attributes</em> conditionally.</p>\n\n<p>In this:</p>\n\n<pre><code>#[cfg(connection = \"websocket\")]\n#[path = \"websocket.rs\"]\nmod protocol;\n</code></pre>\n\n<p>the whole <code>protocol</code> module will only be included if the condition is true, but in this:</p>\n\n<pre><code>#[cfg_attr(connection = \"websocket\", path = \"websocket.rs\")]\nmod protocol;\n</code></pre>\n\n<p>the <code>protocol</code> module is always enabled. If the condition is true, the compiler will look for its source in <code>websocket.rs</code>, but if it's false, it will look in <code>protocol.rs</code>. In other words, it's equivalent to:</p>\n\n<pre><code>#[cfg(connection = \"websocket\")]\n#[path = \"websocket.rs\"]\nmod protocol;\n\n#[cfg(not(connection = \"websocket\"))]\nmod protocol;\n</code></pre>\n"}], "owner": {"reputation": 4330, "user_id": 3599414, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/ZFtWq.jpg?s=128&g=1", "display_name": "garrettmaring", "link": "https://stackoverflow.com/users/3599414/garrettmaring"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 52, "favorite_count": 0, "accepted_answer_id": 58151636, "answer_count": 1, "score": 1, "last_activity_date": 1569722561, "creation_date": 1569708563, "last_edit_date": 1569716009, "question_id": 58150681, "link": "https://stackoverflow.com/questions/58150681/inline-cfg-attrfeature-x-path-file-rs-doesnt-work", "title": "Inline `cfg_attr(feature = x, path = &quot;file.rs&quot;)` doesn&#39;t work", "body": "<p>According to the <a href=\"https://doc.rust-lang.org/reference/conditional-compilation.html#the-cfg_attr-attribute\" rel=\"nofollow noreferrer\">documentation for cfg_attr</a>, it is possible to do both of these:</p>\n\n<pre><code>#[cfg_attr(windows, path = \"windows.rs\")]\n#[cfg_attr(feature = \"magic\", sparkles, crackles)]\n</code></pre>\n\n<p>However, I'm seeing an error when trying to use them together.</p>\n\n<pre><code>// this works\n#[cfg(connection = \"websocket\")]\n#[path = \"websocket.rs\"]\nmod protocol;\n\n// file not found for module `protocol`\n#[cfg_attr(connection = \"websocket\", path = \"websocket.rs\")]\nmod protocol ;\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "edited": false, "score": 0, "creation_date": 1569708847, "post_id": 58150615, "comment_id": 102685202, "body": "Try dropping the <code>&#39;</code> in <code>&#39;ssh ...&#39;</code>. Its used for keeping the argument in one piece, suppressing whitespace-separation, on the shell and is not needed here."}], "answers": [{"comments": [{"owner": {"reputation": 459, "user_id": 5485977, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-SvjEWTrmELs/AAAAAAAAAAI/AAAAAAAAADY/uXFkunrpPzY/photo.jpg?sz=128", "display_name": "Ibrahim Fadel", "link": "https://stackoverflow.com/users/5485977/ibrahim-fadel"}, "edited": false, "score": 0, "creation_date": 1569857979, "post_id": 58150706, "comment_id": 102723380, "body": "Thanks, is there a reason rust doesn&#39;t have a function to just type a singular string and run that? This seems much more complicated than it should be"}], "tags": [], "owner": {"reputation": 22505, "user_id": 1411457, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/XqssD.png?s=128&g=1", "display_name": "harmic", "link": "https://stackoverflow.com/users/1411457/harmic"}, "is_accepted": true, "score": 4, "last_activity_date": 1569708850, "creation_date": 1569708850, "answer_id": 58150706, "question_id": 58150615, "link": "https://stackoverflow.com/questions/58150615/rust-cant-run-complex-terminal-command/58150706#58150706", "title": "Rust - Can&#39;t run complex terminal Command", "body": "<p>From the point of view of the rsync command, this bit:</p>\n\n<pre><code>ssh -i ~/path/to/mypem.pem\n</code></pre>\n\n<p>is one single argument, so you should not split it into multiple arguments.</p>\n\n<p>Try this:</p>\n\n<pre><code>let output = Command::new(\"rsync\").args(&amp;[\"-avL\", \"--progress\", \"-e\", \"ssh -i ~/path/to/mypem.pem\", \"../directory/src/file.js\", \"user@computer:~/data/school\"]).output().expect(\"BAD\");\n</code></pre>\n"}], "owner": {"reputation": 459, "user_id": 5485977, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-SvjEWTrmELs/AAAAAAAAAAI/AAAAAAAAADY/uXFkunrpPzY/photo.jpg?sz=128", "display_name": "Ibrahim Fadel", "link": "https://stackoverflow.com/users/5485977/ibrahim-fadel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 126, "favorite_count": 0, "accepted_answer_id": 58150706, "answer_count": 1, "score": 0, "last_activity_date": 1569708850, "creation_date": 1569707733, "question_id": 58150615, "link": "https://stackoverflow.com/questions/58150615/rust-cant-run-complex-terminal-command", "title": "Rust - Can&#39;t run complex terminal Command", "body": "<p>I'm trying to run a somewhat long command with rust:</p>\n\n<pre><code>rsync -avL --progress -e 'ssh -i ~/path/to/mypem.pem' ../directory/src/file.js user@computer:~/data/school\n</code></pre>\n\n<p>I tried to do it like this:</p>\n\n<pre><code>use std::process::Command;\nlet output = Command::new(\"rsync\").args(&amp;[\"-avL\", \"--progress\", \"-e\", \"'ssh\", \"-i\", \"~/path/to/mypem.pem'\", \"../directory/src/file.js\", \"user@computer:~/data/school\"]).output().expect(\"BAD\");\n\nif !output.status.success() {\n    let s = String::from_utf8_lossy(&amp;output.stderr);\n    print!(\"rustc failed and stderr was:\\n{}\", s);\n}\n\nprintln!(\"{}\", String::from_utf8_lossy(&amp;output.stdout));\n</code></pre>\n\n<p>This doesn't seem to work at all. It gives me this error:</p>\n\n<p><strong>Missing trailing-' in remote-shell command.</strong></p>\n\n<p><strong>rsync error: syntax or usage error_</strong></p>\n\n<p>I'd really appreciate any help with what I'm doing wrong here. I've checked the <a href=\"https://doc.rust-lang.org/std/process/struct.Command.html\" rel=\"nofollow noreferrer\">docs</a> for Command</p>\n"}, {"tags": ["rust", "traits", "refcell"], "answers": [{"tags": [], "owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "is_accepted": true, "score": 0, "last_activity_date": 1569708992, "creation_date": 1569708992, "answer_id": 58150715, "question_id": 58150558, "link": "https://stackoverflow.com/questions/58150558/error-borrowing-content-while-rewriting-a-function-to-use-traits/58150715#58150715", "title": "Error borrowing content while rewriting a function to use traits", "body": "<p>As far as I know, the <code>u32</code> case works because <code>u32</code> implements <code>Copy</code>, allowing to \"move out of borrowed context\" without problems. I.e. <code>Copy</code> tells that a type can be moved by simply copying the bits. Thus, it is no problem to move out of a borrowed value for this type.</p>\n\n<p>Thus, if you require <code>Copy</code> for the generic case, it should work, too.</p>\n\n<pre><code>pub fn decrement_counter&lt;T&gt;(c: &amp;Rc&lt;RefCell&lt;T&gt;&gt;)\nwhere\n    T: Integer + Copy, // &lt;- \"Copy\"\n{\n    let new_c = *c.borrow();\n    c.replace(new_c);\n}\n</code></pre>\n"}], "owner": {"reputation": 1507, "user_id": 4296244, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/e8c0940effc84e18a8541145ef2dfbfe?s=128&d=identicon&r=PG&f=1", "display_name": "Natjo", "link": "https://stackoverflow.com/users/4296244/natjo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 23, "favorite_count": 0, "accepted_answer_id": 58150715, "answer_count": 1, "score": 0, "last_activity_date": 1569708992, "creation_date": 1569707251, "question_id": 58150558, "link": "https://stackoverflow.com/questions/58150558/error-borrowing-content-while-rewriting-a-function-to-use-traits", "title": "Error borrowing content while rewriting a function to use traits", "body": "<p>I'm new to Rust and toy with the language a little bit.\nI wrote two simple functions that increment and decrements a value inside <code>Rc&lt;RefCell&lt;..&gt;&gt;</code>. Since this functionality makes sense for any number type, I tried to turn them into generic functions:</p>\n\n<pre><code>use num::Integer;\n\n// This works fine\npub fn increment_counter(c: &amp;Rc&lt;RefCell&lt;u32&gt;&gt;) {\n    let new_c = *c.borrow() + 1;\n    c.replace(new_c);\n}\n\n// This does not compile\npub fn decrement_counter&lt;T&gt;(c: &amp;Rc&lt;RefCell&lt;T&gt;&gt;)\nwhere\n    T: Integer,\n{\n    let new_c = *c.borrow() - T::one();\n    c.replace(new_c);\n}\n</code></pre>\n\n<p>I get this error suddenly:</p>\n\n<pre><code>55 |     let new_c = *c.borrow() - T::one();\n   |                 ^^^^^^^^^^^ cannot move out of borrowed content\n</code></pre>\n\n<p>I don't understand why this change results in an error of this kind.</p>\n"}, {"tags": ["linux", "rust", "cross-compiling", "libpcap", "musl"], "answers": [{"tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": false, "score": 1, "last_activity_date": 1569763562, "creation_date": 1569763562, "answer_id": 58155662, "question_id": 58150494, "link": "https://stackoverflow.com/questions/58150494/rust-cross-compile-lpcap-from-macos-to-linux/58155662#58155662", "title": "Rust cross-compile -lpcap from macos to linux", "body": "<p>Cross compilation does not magically take care of libraries. You cannot just say \"I want <code>musl</code>\" and have <em>something</em> take care of all your dependencies.</p>\n\n<p>The error message you are seeing is telling you exactly this: it cannot find <code>libsqlite3</code> and <code>libpcap</code>.</p>\n\n<p>The reason the error for sqlite disappears is because your sqlite library has a <code>bundled</code> feature, which replaces the linking with a built-in sqlite client. This, however, also requests the <code>pcap</code> <code>bundled</code> feature, which does not exist.</p>\n\n<p>You have two options:</p>\n\n<ul>\n<li>If you do not mind the performance loss in the bundled sqlite client, change your feature definition to target the feature of the dependency requiring sqlite</li>\n<li>If you want the raw library itself, you will have to compile it for <code>musl</code></li>\n</ul>\n\n<p>No matter what happens, you will need to cross-compile <code>libpcap</code> for musl with the default sysroot provided by your <code>musl</code> compiler. As this varies per library, you will need to consult the libpcap documentation. once you have done so, you should be able to use the <code>-lpcap</code> flag, and the error will resolve itself. </p>\n"}], "owner": {"reputation": 31, "user_id": 12136411, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/788b8e2d3298bdfc621e8c40f86aa17a?s=128&d=identicon&r=PG&f=1", "display_name": "ronnyking01", "link": "https://stackoverflow.com/users/12136411/ronnyking01"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 667, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1569763562, "creation_date": 1569706609, "last_edit_date": 1569711506, "question_id": 58150494, "link": "https://stackoverflow.com/questions/58150494/rust-cross-compile-lpcap-from-macos-to-linux", "title": "Rust cross-compile -lpcap from macos to linux", "body": "<p>I am trying to cross-compile my Rust project on Mac OS to Linux using <code>cargo build --target=x86_64-unknown-linux-musl</code>.</p>\n\n<ul>\n<li>I installed the binary for Linux + musl cross-compilation on mac using <code>brew install FiloSottile/musl-cross/musl-cross</code> as I would ideally want a standalone binary.</li>\n<li>I also installed the target using <code>rustup target add x86_64-unknown-linux-gnu</code></li>\n<li>And I have the following in my <code>.cargo/config</code>:</li>\n</ul>\n\n<pre><code>[target.x86_64-unknown-linux-musl]\nlinker = \"x86_64-linux-musl-gcc\"\n</code></pre>\n\n<p>However, I ran into issues with 2 libraries - sqlite3 and pcap: </p>\n\n<pre><code>  = note: /usr/local/Cellar/musl-cross/0.9.8/libexec/bin/../lib/gcc/x86_64-linux-musl/6.4.0/../../../../x86_64-linux-musl/bin/ld: cannot find -lsqlite3\n          /usr/local/Cellar/musl-cross/0.9.8/libexec/bin/../lib/gcc/x86_64-linux-musl/6.4.0/../../../../x86_64-linux-musl/bin/ld: cannot find -lpcap\n          collect2: error: ld returned 1 exit status\n\n</code></pre>\n\n<p>I was able to solve the sqlite3 linker issue by adding <code>features = [\"bundled\"]</code> to my <code>Cargo.toml</code> file (similar to what is described here - <a href=\"https://users.rust-lang.org/t/linker-cannot-find-lsqlite3/23230/18\" rel=\"nofollow noreferrer\">https://users.rust-lang.org/t/linker-cannot-find-lsqlite3/23230/18</a>) as that likely built it from source (which was great) but when I tried doing the same with pcap, it gave the following error:</p>\n\n<pre><code>the package `myProject` depends on `pcap`, with features: `bundled` but `pcap` does not have these features.\n</code></pre>\n\n<p>After reading somewhere I also tried (with low hopes) of providing the path to the installed libpcap on mac using <code>RUSTPATH='-L/...' cargo build ...</code> but that resulted, of course in undefined symbol errors.</p>\n\n<p>Any ideas how can I get past this issue and cross compile my Rust project into a statically linked binary on macos to run on linux?</p>\n"}, {"tags": ["rust", "closures", "lifetime"], "answers": [{"comments": [{"owner": {"reputation": 45, "user_id": 4748781, "user_type": "registered", "profile_image": "https://graph.facebook.com/737608383003025/picture?type=large", "display_name": "Lee SongUn", "link": "https://stackoverflow.com/users/4748781/lee-songun"}, "edited": false, "score": 0, "creation_date": 1569708438, "post_id": 58150521, "comment_id": 102685142, "body": "I just confused what move closures do, I somehow thought that it would somehow invalidate borrower. Thank you for great answer."}], "tags": [], "owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "is_accepted": true, "score": 0, "last_activity_date": 1569707173, "last_edit_date": 1569707173, "creation_date": 1569706861, "answer_id": 58150521, "question_id": 58150483, "link": "https://stackoverflow.com/questions/58150483/lifetime-with-closure-captures-in-rust/58150521#58150521", "title": "lifetime with closure captures in rust", "body": "<p>If you return a closure, you must ensure that the closure has everything it needs - even <em>after</em> returning (i.e. after the (temporary) function parameters are popped from the stack).</p>\n\n<p>Thus, I think you want to <code>move</code> the stuff you return into the closure:</p>\n\n<pre><code>impl A {\n    fn f&lt;'a&gt;(&amp;'a self) -&gt; impl Iterator&lt;Item = u8&gt; + 'a {\n        (0..1).filter(move |&amp;i| self.0)\n    }\n}\n</code></pre>\n\n<p>Resp.</p>\n\n<pre><code>fn g&lt;'a&gt;(t:&amp;'a ()) -&gt; impl 'a + FnMut() {\n    move || *t\n}\n</code></pre>\n\n<p>Resp (extending your first example):</p>\n\n<pre><code>struct A(bool);\n\nimpl A {\n    fn some_number(&amp;self) -&gt; usize {\n        6\n    }\n    fn some_bool_function(&amp;self, i: usize) -&gt; bool {\n        i%2==0\n    }\n\n    fn f&lt;'b&gt;(&amp;'b self) -&gt; impl Iterator&lt;Item = u8&gt; + 'b {\n        (0..self.some_number())\n            .filter(move |&amp;i| self.some_bool_function(i))\n            .map(|i| i as u8)\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 45, "user_id": 4748781, "user_type": "registered", "profile_image": "https://graph.facebook.com/737608383003025/picture?type=large", "display_name": "Lee SongUn", "link": "https://stackoverflow.com/users/4748781/lee-songun"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 326, "favorite_count": 0, "accepted_answer_id": 58150521, "answer_count": 1, "score": 1, "last_activity_date": 1569707173, "creation_date": 1569706468, "question_id": 58150483, "link": "https://stackoverflow.com/questions/58150483/lifetime-with-closure-captures-in-rust", "title": "lifetime with closure captures in rust", "body": "<p>How can I reduce the lifetime of a closure?</p>\n\n<p>I was trying to make a method, which returns an iterator related to self. I didn't want to make new struct or something, so I just made it return filters and maps, and confronted some borrow checker errors. </p>\n\n<p>The following code was my first try.</p>\n\n<pre><code>fn f&lt;'b&gt;(&amp;'b self) -&gt; impl Iterator&lt;Item = u8&gt; {\n    (0..self.some_number())\n        .filter(|&amp;i| self.some_bool_function(i))\n        .map(|i| i as u8)\n}\n</code></pre>\n\n<p>The following code replicates my question. </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct A(bool);\n\nimpl A {\n    fn f&lt;'a&gt;(&amp;'a self) -&gt; impl Iterator&lt;Item = u8&gt; + 'a {\n        (0..1).filter(|&amp;i| self.0)\n    }\n}\n</code></pre>\n\n<p>or even shorter,</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn g&lt;'a&gt;(t:&amp;'a ()) -&gt; impl 'a + FnMut() {\n    || *t\n}\n</code></pre>\n\n<p>This would not compile, because the closure may outlive self. I don't know how to make this work, without moving self.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "edited": false, "score": 2, "creation_date": 1569699759, "post_id": 58149702, "comment_id": 102683417, "body": "From the top of my head: Does <code>input()</code> include the newline-character? <code>is_file()</code> may return <code>false</code> as <code>...\\n</code> can&#39;t be found."}, {"owner": {"reputation": 459, "user_id": 5485977, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-SvjEWTrmELs/AAAAAAAAAAI/AAAAAAAAADY/uXFkunrpPzY/photo.jpg?sz=128", "display_name": "Ibrahim Fadel", "link": "https://stackoverflow.com/users/5485977/ibrahim-fadel"}, "reply_to_user": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "edited": false, "score": 0, "creation_date": 1569699815, "post_id": 58149702, "comment_id": 102683441, "body": "Not sure, i&#39;ll check and get back to you"}, {"owner": {"reputation": 459, "user_id": 5485977, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-SvjEWTrmELs/AAAAAAAAAAI/AAAAAAAAADY/uXFkunrpPzY/photo.jpg?sz=128", "display_name": "Ibrahim Fadel", "link": "https://stackoverflow.com/users/5485977/ibrahim-fadel"}, "reply_to_user": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "edited": false, "score": 0, "creation_date": 1569700307, "post_id": 58149702, "comment_id": 102683581, "body": "Yup, i&#39;m currently changing the <code>input()</code> function to return a trimmed version of the input"}, {"owner": {"reputation": 459, "user_id": 5485977, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-SvjEWTrmELs/AAAAAAAAAAI/AAAAAAAAADY/uXFkunrpPzY/photo.jpg?sz=128", "display_name": "Ibrahim Fadel", "link": "https://stackoverflow.com/users/5485977/ibrahim-fadel"}, "reply_to_user": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "edited": false, "score": 0, "creation_date": 1569700549, "post_id": 58149702, "comment_id": 102683664, "body": "Alright it works, thanks! instead of changing the <code>input()</code> i added this line: <code>path = path.trim().to_string();</code>"}], "owner": {"reputation": 459, "user_id": 5485977, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-SvjEWTrmELs/AAAAAAAAAAI/AAAAAAAAADY/uXFkunrpPzY/photo.jpg?sz=128", "display_name": "Ibrahim Fadel", "link": "https://stackoverflow.com/users/5485977/ibrahim-fadel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 139, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1569699529, "creation_date": 1569699529, "question_id": 58149702, "link": "https://stackoverflow.com/questions/58149702/rust-stdpathpath-is-file-always-returns-false", "title": "rust std::path::Path is_file() always returns false", "body": "<p>I just started using rust, and i'm having trouble finding out if a path is a file or directory. I have this function that gets input, which i'm using to get the path:</p>\n\n<pre><code>pub fn input(msg: &amp;str, v: &amp;mut String) {\n  println!(\"{}\", msg);\n  stdin().read_line(v).unwrap();\n}\n</code></pre>\n\n<p>When i take input like this:</p>\n\n<pre><code>let mut path = String::new();\ninput(\"What is the path to your file/directory?\", &amp;mut path);\n</code></pre>\n\n<p>The I try to make a Path with it, and check if it's a file:</p>\n\n<pre><code>let file = Path::new(&amp;path);\nprintln!(\"{}\", file.is_file());\n</code></pre>\n\n<p>Which prints <code>false</code></p>\n\n<p>When I make the Path from a set String, it works:</p>\n\n<pre><code>let file = Path::new(\"../directory/file.js\");\nprintln!(\"{}\", file.is_file());\n</code></pre>\n\n<p>Prints <code>true</code></p>\n\n<p>I'm sure that i'm giving it a valid file path in the input function. I've read the <a href=\"https://doc.rust-lang.org/std/path/struct.Path.html#method.is_file\" rel=\"nofollow noreferrer\">docs</a> to try to find what i'm doing wrong but I can't</p>\n\n<p>Any idea whats wrong here?</p>\n"}, {"tags": ["file", "rust"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1569703289, "post_id": 58148885, "comment_id": 102684267, "body": "Depending on your use case, you might also be interested in the <a href=\"https://github.com/servo/bincode\" rel=\"nofollow noreferrer\">Serde Bincode</a> data format \u2013 it provides a convenient, efficient and portable way to write binary data to a file."}], "answers": [{"comments": [{"owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "edited": false, "score": 1, "creation_date": 1569695440, "post_id": 58149196, "comment_id": 102682375, "body": "The answer should point to the importance of <code>to_ne_bytes()</code> (and it&#39;s <code>be</code>/<code>le</code> sisters)."}, {"owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "edited": false, "score": 0, "creation_date": 1569698242, "post_id": 58149196, "comment_id": 102683014, "body": "It may be desirable to use the <code>TryInto</code> trait to convert the vector into an array. The compiler seems to need some help to get the inference right, but <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=55780ca19d13fb80721fe0c0e202830b\" rel=\"nofollow noreferrer\">here it is</a> in action."}], "tags": [], "owner": {"reputation": 84, "user_id": 7619636, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/kTC6Z.png?s=128&g=1", "display_name": "craigmayhew", "link": "https://stackoverflow.com/users/7619636/craigmayhew"}, "is_accepted": true, "score": 0, "last_activity_date": 1569697720, "last_edit_date": 1569697720, "creation_date": 1569695365, "answer_id": 58149196, "question_id": 58148885, "link": "https://stackoverflow.com/questions/58148885/how-to-write-binary-number-to-file-and-retrieve-it-in-rust/58149196#58149196", "title": "How to write binary number to file and retrieve it in rust", "body": "<p>The file when read is of unknown length (therefore it's read into a vector without a fixed length), but the variable you want at the end is of type usize.</p>\n\n<p>I have shown here that you can convert the vector to a fixed size array and then convert that to a usize variable.</p>\n\n<p>Hopefully someone can improve on this answer!</p>\n\n<pre><code>use std::fs::File;\nuse std::io::prelude::*;\n\nfn main() -&gt; () {\n    let number:usize = 244128131191;\n    // write number to file\n    let mut file = File::create(\"data\").expect(\"create failed\");\n    file.write_all(&amp;number.to_ne_bytes()).expect(\"write failed\");\n    println!(\"data written to file\" );\n\n    // read file\n    let mut file = File::open(\"data\").expect(\"open failed\");\n    let mut buffer = Vec::&lt;u8&gt;::new();\n    file.read_to_end(&amp;mut buffer);\n\n    //convert binary in vector back a variable of type usize\n    let mut arr = [0; 8]; //setup an empty array with 8 elements\n    arr.copy_from_slice(&amp;buffer[0..buffer.len()]); //fill the fixed size array with the slice\n    let reading_of_number = usize::from_ne_bytes(arr); //convert the array to a variable of type usize\n    println!(\"{:?}\", reading_of_number);\n}\n</code></pre>\n\n<p>Please note the consequence of using to_ne_bytes() and from_ne_bytes().</p>\n\n<p>If the file is going to be written on one machine, and read on another then you will instead need to use to_be_bytes or to_le_bytes, as appropriate. However, if the file will always be written and read on the same machine, this shouldn't be an issue and you can continue to use to_ne_bytes() and from_ne_bytes() - See docs <a href=\"https://doc.rust-lang.org/std/primitive.u64.html#method.to_ne_bytes\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/std/primitive.u64.html#method.to_ne_bytes</a></p>\n\n<p>Thanks @user2722968 for suggesting I improve the answer with the importance of understanding be/le/ne.</p>\n"}], "owner": {"reputation": 915, "user_id": 9716278, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-y_OzgTqtpA8/AAAAAAAAAAI/AAAAAAAABmM/yM8i9oN9vmw/photo.jpg?sz=128", "display_name": "9716278", "link": "https://stackoverflow.com/users/9716278/9716278"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 434, "favorite_count": 0, "accepted_answer_id": 58149196, "answer_count": 1, "score": 0, "last_activity_date": 1569697720, "creation_date": 1569692941, "question_id": 58148885, "link": "https://stackoverflow.com/questions/58148885/how-to-write-binary-number-to-file-and-retrieve-it-in-rust", "title": "How to write binary number to file and retrieve it in rust", "body": "<p>I'm trying to write a number to a file. The number in the file I don't want to be represented as UFT-8 or some other encoding. I just want the binary representation of the number written to the file.</p>\n\n<p>The code tries to write to a file and then read the file back to the user.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::fs::File;\nuse std::io::prelude::*;\n\nfn main() -&gt; () {\n    let number:usize =244128131191;\n    let mut file = File::create(\"data\").expect(\"create failed\");\n    file.write_all(&amp;[number]).expect(\"write failed\");\n    println!(\"data written to file\" );\n\n    let mut file = File::open(\"data\").expect(\"open failed\");\n    let mut buffer = Vec::&lt;usize&gt;::new();\n    file.read_to_end(&amp;mut buffer);\n    println!(\"{:?}\", buffer);\n}\n</code></pre>\n\n<p>I get this error back complaining about types used. </p>\n\n<pre><code>   Compiling writing_file v0.1.0 (file:///home/9716278/writing_file)\nerror[E0308]: mismatched types\n  --&gt; src/main.rs:37:22\n   |\n37 |     file.write_all(&amp;[number]).expect(\"write failed\");\n   |                      ^^^^^^ expected u8, found usize\n\nerror[E0308]: mismatched types\n  --&gt; src/main.rs:42:22\n   |\n42 |     file.read_to_end(&amp;mut buffer);\n   |                      ^^^^^^^^^^^ expected u8, found usize\n   |\n   = note: expected type `&amp;mut std::vec::Vec&lt;u8&gt;`\n              found type `&amp;mut std::vec::Vec&lt;usize&gt;`\n\nerror: aborting due to 2 previous errors\n\nerror: Could not compile `counting_utf`.\n\nTo learn more, run the command again with --verbose.\n</code></pre>\n\n<p>I'm not sure what's going wrong. The problem is to do with types according to the error. I'm not user if this is the right approach for what I'm trying to do.</p>\n"}, {"tags": ["c", "string", "vector", "utf-8", "rust"], "comments": [{"owner": {"reputation": 20880, "user_id": 1317944, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/OcBMY.png?s=128&g=1", "display_name": "The Quantum Physicist", "link": "https://stackoverflow.com/users/1317944/the-quantum-physicist"}, "reply_to_user": {"reputation": 25106, "user_id": 6699433, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/1mOTM.jpg?s=128&g=1", "display_name": "klutt", "link": "https://stackoverflow.com/users/6699433/klutt"}, "edited": false, "score": 0, "creation_date": 1569674319, "post_id": 58146208, "comment_id": 102677404, "body": "@klutt This is not C++, it&#39;s Rust. Ever seen <code>let</code> in C++? I tagged it with C because it&#39;s about a C API."}, {"owner": {"reputation": 25106, "user_id": 6699433, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/1mOTM.jpg?s=128&g=1", "display_name": "klutt", "link": "https://stackoverflow.com/users/6699433/klutt"}, "edited": false, "score": 0, "creation_date": 1569674549, "post_id": 58146208, "comment_id": 102677455, "body": "My bad. Sorry. It&#39;s just that tagging C instead of C++ that&#39;s a very common thing to do."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1569677598, "post_id": 58146208, "comment_id": 102678150, "body": "Is <code>buf</code> a C string? i.e., should it be null terminated? Or is this an unterminated byte buffer that happens to be UTF-8?"}, {"owner": {"reputation": 20880, "user_id": 1317944, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/OcBMY.png?s=128&g=1", "display_name": "The Quantum Physicist", "link": "https://stackoverflow.com/users/1317944/the-quantum-physicist"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1569680012, "post_id": 58146208, "comment_id": 102678747, "body": "@trentcl It&#39;s a C string that&#39;s null terminated. I&#39;m not sure the null exists or not, I have to double check, but either way, I have to add the null if necessary."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1569684785, "post_id": 58146208, "comment_id": 102679858, "body": "You&#39;ll want to use <code>CString</code> or <code>Cstr</code>. I can&#39;t write a full answer at the moment, but maybe those search terms will help."}, {"owner": {"reputation": 20880, "user_id": 1317944, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/OcBMY.png?s=128&g=1", "display_name": "The Quantum Physicist", "link": "https://stackoverflow.com/users/1317944/the-quantum-physicist"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1569692769, "post_id": 58146208, "comment_id": 102681775, "body": "@trentcl Unfortunately, I don&#39;t see a way to allocate a buffer with <code>CString</code>, that I write to. It seems <code>CString</code> is designed to take a string that will later be used as a pointer, not the other way around (where you create a buffer and fill it from C API with data)."}], "answers": [{"comments": [{"owner": {"reputation": 20880, "user_id": 1317944, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/OcBMY.png?s=128&g=1", "display_name": "The Quantum Physicist", "link": "https://stackoverflow.com/users/1317944/the-quantum-physicist"}, "edited": false, "score": 0, "creation_date": 1569779488, "post_id": 58154423, "comment_id": 102698042, "body": "Thanks a lot! I&#39;ll try this solution and tick it after testing it. I&#39;ll need some time to come to a result due to other complications."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 20880, "user_id": 1317944, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/OcBMY.png?s=128&g=1", "display_name": "The Quantum Physicist", "link": "https://stackoverflow.com/users/1317944/the-quantum-physicist"}, "edited": false, "score": 0, "creation_date": 1569837728, "post_id": 58154423, "comment_id": 102712816, "body": "@TheQuantumPhysicist Let me know if it worked, and if not, I&#39;ll be happy to provide more guidance if I can :-)"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 20880, "user_id": 1317944, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/OcBMY.png?s=128&g=1", "display_name": "The Quantum Physicist", "link": "https://stackoverflow.com/users/1317944/the-quantum-physicist"}, "edited": false, "score": 0, "creation_date": 1569837787, "post_id": 58154423, "comment_id": 102712844, "body": "Also, do note that if you know the maximum size of your buffer ahead of time, it will be faster to use an array as a buffer (and sacrifice the extensibility of <code>Vec</code>) to store your data. Principle is the same, methods are the same, the only difference is the allocation."}, {"owner": {"reputation": 20880, "user_id": 1317944, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/OcBMY.png?s=128&g=1", "display_name": "The Quantum Physicist", "link": "https://stackoverflow.com/users/1317944/the-quantum-physicist"}, "edited": false, "score": 0, "creation_date": 1570224658, "post_id": 58154423, "comment_id": 102858925, "body": "Today I got a chance to test the solution. It&#39;s working, but valgrind is shooting an error at <code>CStr::from_ptr()</code>. The error is: <code>Invalid read of size 1   in &lt;alloc::string::String as data_handler_server::ReadAttribute&gt;::get_attribute_value</code>, and a suberror <code>Address 0x6a8df52 is 0 bytes after a block of size 2 alloc&#39;d</code>. I&#39;m not sure what to do about this. Can you please test it on your end too?"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 20880, "user_id": 1317944, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/OcBMY.png?s=128&g=1", "display_name": "The Quantum Physicist", "link": "https://stackoverflow.com/users/1317944/the-quantum-physicist"}, "edited": false, "score": 0, "creation_date": 1570224743, "post_id": 58154423, "comment_id": 102858947, "body": "Show me what you&#39;re testing and I&#39;ll happily test on my end. The code I&#39;ve put on the playground is exactly what I put in, minus <code>H5Aread</code>, and it doesn&#39;t leak. Put your code somewhere and I&#39;ll see if I can find it"}, {"owner": {"reputation": 20880, "user_id": 1317944, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/OcBMY.png?s=128&g=1", "display_name": "The Quantum Physicist", "link": "https://stackoverflow.com/users/1317944/the-quantum-physicist"}, "edited": false, "score": 0, "creation_date": 1570227219, "post_id": 58154423, "comment_id": 102859505, "body": "No, forget it. It&#39;s my fault. I allocated the wrong length because the lib doesn&#39;t count null, so valgrind was complaining about boundaries. Thanks for your help :-)"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 20880, "user_id": 1317944, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/OcBMY.png?s=128&g=1", "display_name": "The Quantum Physicist", "link": "https://stackoverflow.com/users/1317944/the-quantum-physicist"}, "edited": false, "score": 0, "creation_date": 1570227495, "post_id": 58154423, "comment_id": 102859561, "body": "Anytime! Glad to have helped :-)"}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": true, "score": 1, "last_activity_date": 1569753558, "creation_date": 1569753558, "answer_id": 58154423, "question_id": 58146208, "link": "https://stackoverflow.com/questions/58146208/read-raw-c-string-to-rust-whats-the-right-way-to-convert-signed-to-unsigned/58154423#58154423", "title": "Read raw C string to Rust... what&#39;s the right way to convert signed to unsigned in this context?", "body": "<p>You were almost there.</p>\n\n<p>For now, we're going to assume that the C side of your FFI boundary is correct - i.e. it properly generates a null-terminated string.</p>\n\n<p>To efficiently assign and recover this in rust, we're going to use <code>CStr</code>. This creates a borrowed type referencing a C string in memory (i.e. a <code>*const char</code>). This does not allocate, since it is not an owned type.</p>\n\n<p>We then convert this to a <code>&amp;str</code> for the final comparison with what we expected. This is still not an owned type, so all we have created is our <code>Vec&lt;&gt;</code> that we effectively used as a buffer.</p>\n\n<p>The full code is available below and on the <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=8b02133f9fe62c8b4bac4b7fc00613f4\" rel=\"nofollow noreferrer\"><strong>playground</strong></a>:</p>\n\n<pre><code>#[test]\nfn test() {\n    let len:u64 = 64;\n    // Allocate a buffer\n    let mut buffer:Vec&lt;c_char&gt; = Vec::with_capacity(len as usize);\n    let attr_raw_string_ptr = buffer.as_mut_ptr();\n\n    let read_error = unsafe { H5Aread(attr_raw_string_ptr) };\n    if read_error &lt; 0 {\n        panic!(\"...\");\n    }\n    let result = unsafe {\n        CStr::from_ptr(attr_raw_string_ptr)\n    };\n    let result_str = result.to_str().unwrap();\n    assert_eq!(result_str, \"test\");\n}\n</code></pre>\n\n<p>Three important gotchas:</p>\n\n<ol>\n<li><code>CStr::to_str()</code> can fail (hence why it returns a <code>Result&lt;&amp;str, _&gt;</code> when the content of the <code>CStr</code> is not valid utf-8. This is because both the rust <code>String</code> and <code>&amp;str</code> types need to be valid utf-8.</li>\n<li>Obviously, your input buffer needs to be at least the size of what your C function will throw into it. Refer to the C side to be able to make this guarantee.</li>\n<li><code>CStr::from_ptr</code> has a <a href=\"https://doc.rust-lang.org/std/ffi/struct.CStr.html#method.from_ptr\" rel=\"nofollow noreferrer\">bunch of gotchas</a> that you should at least keep in mind when using it</li>\n</ol>\n"}], "owner": {"reputation": 20880, "user_id": 1317944, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/OcBMY.png?s=128&g=1", "display_name": "The Quantum Physicist", "link": "https://stackoverflow.com/users/1317944/the-quantum-physicist"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 395, "favorite_count": 0, "accepted_answer_id": 58154423, "answer_count": 1, "score": 1, "last_activity_date": 1569753558, "creation_date": 1569672939, "question_id": 58146208, "link": "https://stackoverflow.com/questions/58146208/read-raw-c-string-to-rust-whats-the-right-way-to-convert-signed-to-unsigned", "title": "Read raw C string to Rust... what&#39;s the right way to convert signed to unsigned in this context?", "body": "<p>I'm binding some C functions to rust. I'm facing a little problem and I'd like to know the right way to solve it in rust.</p>\n\n<p>Here's the function that I'd like to call from the C API:</p>\n\n<pre><code>extern \"C\" {\n    pub fn H5Aread(attr_id: hid_t, type_id: hid_t, buf: *mut c_char) -&gt; herr_t;\n}\n</code></pre>\n\n<p>The function reads something from a file, and stores it in <code>buf</code>. </p>\n\n<p>So, I created this buffer in a vector:</p>\n\n<pre><code>let len: u64 = get_the_length();\n\nlet attr_raw_string: Vec&lt;c_char&gt; = Vec::new(); // c_char is equivalent to i8\nattr_raw_string.resize(len as usize, 0);\nlet attr_raw_string_ptr = attr_raw_string.as_mut_ptr();\n\nlet read_error = H5Aread(attr_obj, attr_type, attr_raw_string_ptr);\nif read_error &lt; 0 {\n    panic!(\"...\");\n}\nlet result_str: String = String::from_utf8(attr_raw_string);\n</code></pre>\n\n<p>Now this doesn't compile because <code>from_utf8</code> expects a <code>Vec&lt;u8&gt;</code>, but <code>Vec&lt;c_char&gt;</code> is a <code>Vec&lt;i8&gt;</code>.</p>\n\n<p>Is there a way to fix this without having to copy and cast the string every time as a new type <code>u8</code>?</p>\n"}, {"tags": ["c++", "rust", "polymorphism"], "comments": [{"owner": {"reputation": 14053, "user_id": 2189130, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/trlri.png?s=128&g=1", "display_name": "kmdreko", "link": "https://stackoverflow.com/users/2189130/kmdreko"}, "edited": false, "score": 0, "creation_date": 1569648723, "post_id": 58143619, "comment_id": 102672928, "body": "<i>&quot;how can I have them have a common data member?&quot;</i> - what you have there does just that, or am I misunderstanding?"}, {"owner": {"reputation": 21, "user_id": 9621612, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "avadali", "link": "https://stackoverflow.com/users/9621612/avadali"}, "reply_to_user": {"reputation": 14053, "user_id": 2189130, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/trlri.png?s=128&g=1", "display_name": "kmdreko", "link": "https://stackoverflow.com/users/2189130/kmdreko"}, "edited": false, "score": 0, "creation_date": 1569648963, "post_id": 58143619, "comment_id": 102672967, "body": "I know how to do this in C++, I don&#39;t know how to do this in Rust. My mistake for not clarifying"}, {"owner": {"reputation": 14053, "user_id": 2189130, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/trlri.png?s=128&g=1", "display_name": "kmdreko", "link": "https://stackoverflow.com/users/2189130/kmdreko"}, "edited": false, "score": 0, "creation_date": 1569649064, "post_id": 58143619, "comment_id": 102672980, "body": "my bad, I misread"}, {"owner": {"reputation": 34083, "user_id": 1287251, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/IQkBy.png?s=128&g=1", "display_name": "Cornstalks", "link": "https://stackoverflow.com/users/1287251/cornstalks"}, "edited": false, "score": 0, "creation_date": 1569649255, "post_id": 58143619, "comment_id": 102673006, "body": "What&#39;s your actual Rust code? You can do this by either having your Rust <code>struct</code>s implement <a href=\"https://doc.rust-lang.org/std/ops/trait.Deref.html\" rel=\"nofollow noreferrer\"><code>Deref</code></a> or by creating a new trait that returns the value you want (and implementing this new trait for your <code>struct</code>s)."}, {"owner": {"reputation": 21, "user_id": 9621612, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "avadali", "link": "https://stackoverflow.com/users/9621612/avadali"}, "edited": false, "score": 0, "creation_date": 1569651405, "post_id": 58143619, "comment_id": 102673279, "body": "I updated my question with an example of how I&#39;m structuring my Rust code."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1569675247, "post_id": 58143619, "comment_id": 102677630, "body": "This is the kind of problem that isn&#39;t really solvable in the general case. The reason is because C++ uses inheritance for a <i>lot</i> of things -- data, behavior, interfaces -- and Rust doesn&#39;t have <i>one</i> solution for all those questions; it has <i>several</i> orthogonal features that may be composed. You have <i>some</i> problem that you have decided should be solved with inheritance, but that&#39;s not going to work in Rust; you need to discard the solution that works in C++ and build a new solution that works in Rust."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1569677024, "post_id": 58143619, "comment_id": 102678014, "body": "For example, consider <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=44f36d36466997a19f816a39a3f9be42\" rel=\"nofollow noreferrer\">making <code>Base</code> a generic struct and using <code>D1</code> and <code>D2</code> to parameterize it</a>. Now you can write code that uses the <code>Base</code> interface, is generic over <code>D</code> and resolves at compile time. (Runtime dispatch is also possible.) This isn&#39;t necessarily appropriate for your problem, which is why we ask for the details of your <i>actual</i> problem, not just a sketch of how you <i>think</i> it should be solved."}, {"owner": {"reputation": 21, "user_id": 9621612, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "avadali", "link": "https://stackoverflow.com/users/9621612/avadali"}, "edited": false, "score": 0, "creation_date": 1569706505, "post_id": 58143619, "comment_id": 102684821, "body": "Thank you for the example and advice. My specific problem is that I have two device drivers for two versions of a module. Both drivers have the same interface and have to maintain some internal state (hence the need for data members inside the struct), but they interact with the physical module in different ways."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1569758412, "post_id": 58143619, "comment_id": 102692880, "body": "And does the program only ever use one of the drivers or may it use both at the same time?"}, {"owner": {"reputation": 21, "user_id": 9621612, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "avadali", "link": "https://stackoverflow.com/users/9621612/avadali"}, "edited": false, "score": 0, "creation_date": 1569800705, "post_id": 58143619, "comment_id": 102702322, "body": "It may use both"}], "owner": {"reputation": 21, "user_id": 9621612, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "avadali", "link": "https://stackoverflow.com/users/9621612/avadali"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 177, "favorite_count": 1, "answer_count": 0, "score": 2, "last_activity_date": 1569651379, "creation_date": 1569648398, "last_edit_date": 1569651379, "question_id": 58143619, "link": "https://stackoverflow.com/questions/58143619/how-to-create-structs-that-all-implement-a-trait-that-have-common-data-members", "title": "How to create structs that all implement a trait that have common data members?", "body": "<p>I am porting some code from C++ to Rust, and I'm unsure as to what the equivalent way to handle common base class members in C++ is in idiomatic Rust. An example of what I have in C++:</p>\n\n<pre><code>class Base {\npublic:\n    Base(int n) : n_(n) {}\n    virtual int foo() = 0;\n    int n_;\n};\n\nclass D1 : public Base {\npublic:\n    D1(int n) : Base(n) {}\n    virtual int foo() {/* return something to do with n_ */}\n\n};\n\nclass D2 : public Base {\npublic:\n    D1(int n) : Base(n) {}\n    virtual int foo() {/* return some other thing to do with n_ */}\n\n};\n</code></pre>\n\n<p>In C++, I can define <code>n_</code> once in the base class constructor, and I can use it from any of the derived classes. </p>\n\n<p>My Rust structs currently look like this:</p>\n\n<pre><code>struct D1 {\n    n_: i32,\n}\n\nstruct D2 {\n    n_: i32,\n}\n\ntrait Base {\n    fn foo(&amp;self) -&gt; i32;\n}\n\nimpl D1 {\n    fn new(n: i32) -&gt; Self {\n        D1 { n_: n }\n    }\n}\n\nimpl D2 {\n    fn new(n: i32) -&gt; Self {\n        D2 { n_: n }\n    }\n}\n\nimpl Base for D1 {\n    fn foo(&amp;self) -&gt; i32 {\n        // Contrived example to show D1 and D2 have different uses of n_\n        self.n_\n    }\n}\n\nimpl Base for D2 {\n    fn foo(&amp;self) -&gt; i32 {\n        // Contrived example to show D1 and D2 have different uses of n_\n        self.n_ * 2\n    }\n}\n</code></pre>\n\n<p>This feels like more code duplication than I'm used to. Is there a way to have an <code>n_</code> data member declared only once for both structs?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "edited": false, "score": 0, "creation_date": 1569620234, "post_id": 58141569, "comment_id": 102669319, "body": "Why would you <i>want</i> to drop something with a static lifetime?"}, {"owner": {"reputation": 47, "user_id": 8862937, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/T3fop.png?s=128&g=1", "display_name": "Slothie", "link": "https://stackoverflow.com/users/8862937/slothie"}, "reply_to_user": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "edited": false, "score": 0, "creation_date": 1569620412, "post_id": 58141569, "comment_id": 102669353, "body": "I was imagining a situation like a linked list.  You need to keep nodes of the list around for potentially the entire lifetime of the program, however you also may remove items from the list.  It seems wasteful to leave them in memory for the entire execution of the program.  I can edit the original question to make this more clear."}, {"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 1, "creation_date": 1569620750, "post_id": 58141569, "comment_id": 102669405, "body": "@Slothie If you don&#39;t want to keep them in memory for the entire execution time, they&#39;re not <code>static</code> any more."}, {"owner": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "edited": false, "score": 0, "creation_date": 1569628593, "post_id": 58141569, "comment_id": 102670723, "body": "@Slothie You can use lifetimes on the object, which could be <code>&#39;static</code>, but isn&#39;t necessarily."}, {"owner": {"reputation": 47, "user_id": 8862937, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/T3fop.png?s=128&g=1", "display_name": "Slothie", "link": "https://stackoverflow.com/users/8862937/slothie"}, "reply_to_user": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "edited": false, "score": 0, "creation_date": 1569678200, "post_id": 58141569, "comment_id": 102678296, "body": "@jhpratt, can you clarify what you mean by &quot;but isn&#39;t necessarily&quot;?"}, {"owner": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "edited": false, "score": 0, "creation_date": 1569690163, "post_id": 58141569, "comment_id": 102681193, "body": "You could still create a <code>LinkedList&lt;&#39;a&gt;</code> \u2014 <code>&#39;a</code> doesn&#39;t have to be <code>&#39;static</code>."}], "answers": [{"tags": [], "owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "is_accepted": true, "score": 3, "last_activity_date": 1569623541, "creation_date": 1569623541, "answer_id": 58141935, "question_id": 58141569, "link": "https://stackoverflow.com/questions/58141569/is-there-a-way-to-drop-a-static-lifetime-object-in-rust/58141935#58141935", "title": "Is there a way to drop a static lifetime object in Rust?", "body": "<p>No. The very point of a <code>static</code> is that it's static: It has a fixed address in memory and can't be moved from there. As a consequence, everybody is free to have a reference to that object, because it's guaranteed to be there as long as the program is executing. That's why you only get to use a <code>static</code> in the form of a <code>&amp;'static</code>-reference and can never claim ownership.</p>\n\n<p>Besides, doing this for the purpose of memory conservation is pointless: The object is baked into the executable and mapped to memory on access. All that <em>could</em> happen is for the OS to relinquish the memory <em>mapping</em>. Yet, since the memory is never allocated from the heap in the first place, there is no saving to be had.</p>\n\n<p>The only thing you <em>could</em> do is to replace the object using unsafe mutable access. This is both dangerous (because the compiler is free to assume that the object does not in fact change) and pointless, due to the fact that the memory can't be freed, as it's part of the executable's memory mapping.</p>\n"}], "owner": {"reputation": 47, "user_id": 8862937, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/T3fop.png?s=128&g=1", "display_name": "Slothie", "link": "https://stackoverflow.com/users/8862937/slothie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 537, "favorite_count": 0, "accepted_answer_id": 58141935, "answer_count": 1, "score": 2, "last_activity_date": 1569623541, "creation_date": 1569620096, "last_edit_date": 1569620480, "question_id": 58141569, "link": "https://stackoverflow.com/questions/58141569/is-there-a-way-to-drop-a-static-lifetime-object-in-rust", "title": "Is there a way to drop a static lifetime object in Rust?", "body": "<p>When searching for an answer, I found <a href=\"https://stackoverflow.com/questions/42910662/is-it-possible-in-rust-to-delete-an-object-before-the-end-of-scope\">this question</a>, however there is no mention of static lifetime objects.  Can the method mentioned in this answer (calling <code>drop()</code> on the object) be used for static lifetime objects?  </p>\n\n<p>I was imagining a situation like a linked list.  You need to keep nodes of the list around for (potentially) the entire lifetime of the program, however you also may remove items from the list.  It seems wasteful to leave them in memory for the entire execution of the program.</p>\n\n<p>Thanks!</p>\n"}, {"tags": ["linux", "sockets", "unix", "rust"], "comments": [{"owner": {"reputation": 4172, "user_id": 3508956, "user_type": "registered", "accept_rate": 58, "profile_image": "https://i.stack.imgur.com/umLTo.jpg?s=128&g=1", "display_name": "laptou", "link": "https://stackoverflow.com/users/3508956/laptou"}, "edited": false, "score": 0, "creation_date": 1569616329, "post_id": 58140920, "comment_id": 102668227, "body": "This socket is not connected to the network or to a file, I am using it to interact with a kernel API. Therefore, I don&#39;t know if using <code>BufReader</code> makes any sense here (and I&#39;m not sure how I would be able to read <i>and</i> write if I use <code>BufReader</code>)"}, {"owner": {"reputation": 288867, "user_id": 207421, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG", "display_name": "user207421", "link": "https://stackoverflow.com/users/207421/user207421"}, "edited": false, "score": 0, "creation_date": 1569668204, "post_id": 58140920, "comment_id": 102676126, "body": "Why are you using non-blocking mode if that&#39;s not what you want?"}, {"owner": {"reputation": 4172, "user_id": 3508956, "user_type": "registered", "accept_rate": 58, "profile_image": "https://i.stack.imgur.com/umLTo.jpg?s=128&g=1", "display_name": "laptou", "link": "https://stackoverflow.com/users/3508956/laptou"}, "reply_to_user": {"reputation": 288867, "user_id": 207421, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG", "display_name": "user207421", "link": "https://stackoverflow.com/users/207421/user207421"}, "edited": false, "score": 0, "creation_date": 1569731909, "post_id": 58140920, "comment_id": 102687991, "body": "@user207421 Perhaps I misunderstood what exactly non-blocking mode does ... I thought that if I use blocking mode, then when I try to read the socket when there is no input, then the program will stall (which is not desired behaviour)"}, {"owner": {"reputation": 4172, "user_id": 3508956, "user_type": "registered", "accept_rate": 58, "profile_image": "https://i.stack.imgur.com/umLTo.jpg?s=128&g=1", "display_name": "laptou", "link": "https://stackoverflow.com/users/3508956/laptou"}, "reply_to_user": {"reputation": 288867, "user_id": 207421, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG", "display_name": "user207421", "link": "https://stackoverflow.com/users/207421/user207421"}, "edited": false, "score": 0, "creation_date": 1569954468, "post_id": 58140920, "comment_id": 102760285, "body": "@user207421 Changing the socket to blocking mode didn&#39;t help."}], "answers": [{"tags": [], "owner": {"reputation": 4172, "user_id": 3508956, "user_type": "registered", "accept_rate": 58, "profile_image": "https://i.stack.imgur.com/umLTo.jpg?s=128&g=1", "display_name": "laptou", "link": "https://stackoverflow.com/users/3508956/laptou"}, "is_accepted": false, "score": 0, "last_activity_date": 1569625559, "creation_date": 1569625559, "answer_id": 58142106, "question_id": 58140920, "link": "https://stackoverflow.com/questions/58140920/how-to-read-a-little-at-a-time-from-unixstream-connected-to-socket/58142106#58142106", "title": "How to read a little at a time from UnixStream connected to socket?", "body": "<p>I have worked around this by using a raw file descriptor instead of a <code>UnixStream</code> and calling <code>recv()</code> with <code>MSG_PEEK</code>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut header = [0u8; 6];\n\n// need MSG_PEEK otherwise recv() clears the socket and we get EAGAIN when\n// we try to read the socket again; this is the main reason for using a raw\n// fd instead of a UnixStream\nif unsafe { libc::recv(self.fd, header.as_mut_ptr() as *mut c_void, 6, libc::MSG_PEEK) } &lt; 0 {\n    return Err(io::Error::last_os_error().into());\n}\n\nlet mut cursor = header.into_buf();\n\nlet evt_code = cursor.get_u16_le();\nlet controller = cursor.get_u16_le();\nlet param_size = cursor.get_u16_le() as usize;\n\n\n// since calling recv() with MSG_PEEK doesn't consume the header, we need to make\n// this buffer 6 bytes bigger, but that's fine\nlet mut param = vec![0u8; param_size + 6];\n\nif unsafe { libc::recv(self.fd, param.as_mut_ptr() as *mut c_void, param.len(), 0) } &lt; 0 {\n    return Err(io::Error::last_os_error().into());\n}\n\nlet mut cursor = param.into_buf();\n</code></pre>\n"}], "owner": {"reputation": 4172, "user_id": 3508956, "user_type": "registered", "accept_rate": 58, "profile_image": "https://i.stack.imgur.com/umLTo.jpg?s=128&g=1", "display_name": "laptou", "link": "https://stackoverflow.com/users/3508956/laptou"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 139, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1569668357, "creation_date": 1569615563, "question_id": 58140920, "link": "https://stackoverflow.com/questions/58140920/how-to-read-a-little-at-a-time-from-unixstream-connected-to-socket", "title": "How to read a little at a time from UnixStream connected to socket?", "body": "<p>I am trying to read some data of unknown size from a <code>UnixStream</code> (called <code>socket</code> in this code). The data consists of a header of 6 bytes, and the last two bytes indicate how long the rest of the message should be.</p>\n\n<p>The <a href=\"https://docs.rs/bytes/0.4.12/bytes/trait.IntoBuf.html#tymethod.into_buf\" rel=\"nofollow noreferrer\"><code>.into_buf()</code></a> method I'm calling is from the <code>IntoBuf</code> trait in Tokio's <code>bytes</code> crate.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut header = [0u8; 6];\nlet response1 = self.socket.read(&amp;mut header);\nlet mut cursor = header.into_buf();\n\nlet evt_code = cursor.get_u16_le();\nlet controller = cursor.get_u16_le();\nlet param_size = cursor.get_u16_le() as usize;\n\nlet mut param = vec![0u8; param_size];\nlet response2 = self.socket.read(&amp;mut param);\nlet mut cursor = param.into_buf();\n</code></pre>\n\n<p>The problem that I'm encountering is that <code>response2</code> is always an <code>Err</code> E_WOULDBLOCK because my <code>UnixStream</code> is connected to a nonblocking socket. It seems that the first call to <code>read()</code> is reading 6 bytes as intended, but then is just discarding the rest of the content in the stream.</p>\n\n<p>How can I work around this / how can I make <code>read()</code> leave the extra data in the stream? </p>\n\n<p>It seems like the simplest solution would be to just make my initial buffer big and then just read everything at once, but the problem with this is that the largest possible message I could receive is a little over 64KB. Allocating or re-zeroing a 64KB buffer for every read seems quite wasteful, especially because most of the messages are much smaller than this.</p>\n"}, {"tags": ["node.js", "rust", "webassembly", "wasm-bindgen"], "comments": [{"owner": {"reputation": 341, "user_id": 2332956, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/967416bd098968c4da33f92c8ef3d471?s=128&d=identicon&r=PG", "display_name": "Alex Stepanov", "link": "https://stackoverflow.com/users/2332956/alex-stepanov"}, "edited": false, "score": 0, "creation_date": 1573670252, "post_id": 58140560, "comment_id": 103960874, "body": "If you could provide at least some details on the way you use the module, then it might give us a clue what&#39;s going on: - How do you load the module into your node app? - What allocator do you use? - Have you implemented any custom memory management (aside from the shim generated by wasm-pack)?  Cheers!"}], "owner": {"reputation": 61, "user_id": 6536427, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/677019d84747c3f3d3eea283a7bc5c51?s=128&d=identicon&r=PG&f=1", "display_name": "AaronP", "link": "https://stackoverflow.com/users/6536427/aaronp"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 209, "favorite_count": 0, "answer_count": 0, "score": 3, "last_activity_date": 1569699117, "creation_date": 1569613498, "last_edit_date": 1569699117, "question_id": 58140560, "link": "https://stackoverflow.com/questions/58140560/resetting-wasm-memory-in-node-js", "title": "Resetting Wasm memory in node.js", "body": "<p>I have a Wasm module (compiled with Rust/wasm-pack) that I am running in node.js. The module works under normal conditions, but given certain input data it can run out of memory. I would like to continue to process subsequent data sets with the same Wasm module, but after the first OOM error, the module no longer works (throws exception regardless of input data). </p>\n\n<p>I have tried doing a fresh <code>require()</code> before each usage of the module , including clearing  <code>require.cache</code>, but the module still fails to run.</p>\n\n<p>Is there some sort of global memory space for Wasm modules that needs to be reset, or some method for re-<code>require</code>-ing modules that I'm missing?</p>\n"}, {"tags": ["variables", "rust"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1569611776, "post_id": 58139431, "comment_id": 102667056, "body": "Related: <a href=\"https://stackoverflow.com/questions/44231020/how-can-deserialization-of-polymorphic-trait-objects-be-added-in-rust-if-at-all\" title=\"how can deserialization of polymorphic trait objects be added in rust if at all\">stackoverflow.com/questions/44231020/&hellip;</a>"}, {"owner": {"reputation": 2420, "user_id": 682349, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/20ee0d23c969c7740d3c936a4675bb23?s=128&d=identicon&r=PG", "display_name": "Ultrasaurus", "link": "https://stackoverflow.com/users/682349/ultrasaurus"}, "edited": false, "score": 0, "creation_date": 1570593530, "post_id": 58139431, "comment_id": 102956794, "body": "You might want to look at Serde. Serialization / deserialization has similar problem space to your question -- <a href=\"https://serde.rs/\" rel=\"nofollow noreferrer\">serde.rs</a>"}], "answers": [{"tags": [], "owner": {"reputation": 1602, "user_id": 5947247, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f5212b96ae435bb73b9980f34b2913e8?s=128&d=identicon&r=PG&f=1", "display_name": "Isaac van Bakel", "link": "https://stackoverflow.com/users/5947247/isaac-van-bakel"}, "is_accepted": false, "score": 0, "last_activity_date": 1570548742, "creation_date": 1570548742, "answer_id": 58289584, "question_id": 58139431, "link": "https://stackoverflow.com/questions/58139431/how-do-i-use-a-variable-as-the-data-type-for-a-different-variable/58289584#58289584", "title": "How do I use a variable as the data type for a different variable?", "body": "<p>You can't. Rust is statically typed.</p>\n"}, {"comments": [{"owner": {"reputation": 58, "user_id": 11860051, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-c7hDubgjUj0/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rcSbApNgnbsPqLM3fJGXVD2OhXrjg/photo.jpg?sz=128", "display_name": "Ariel Hurdle", "link": "https://stackoverflow.com/users/11860051/ariel-hurdle"}, "edited": false, "score": 0, "creation_date": 1571562788, "post_id": 58297019, "comment_id": 103276502, "body": "Thank you for your contributions however that sadly does not fit my use case."}, {"owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "reply_to_user": {"reputation": 58, "user_id": 11860051, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-c7hDubgjUj0/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rcSbApNgnbsPqLM3fJGXVD2OhXrjg/photo.jpg?sz=128", "display_name": "Ariel Hurdle", "link": "https://stackoverflow.com/users/11860051/ariel-hurdle"}, "edited": false, "score": 0, "creation_date": 1571647413, "post_id": 58297019, "comment_id": 103296770, "body": "@ArielHurdle can you describe how this is different from your use case?"}], "tags": [], "owner": {"reputation": 2420, "user_id": 682349, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/20ee0d23c969c7740d3c936a4675bb23?s=128&d=identicon&r=PG", "display_name": "Ultrasaurus", "link": "https://stackoverflow.com/users/682349/ultrasaurus"}, "is_accepted": false, "score": 4, "last_activity_date": 1570624550, "last_edit_date": 1570624550, "creation_date": 1570594857, "answer_id": 58297019, "question_id": 58139431, "link": "https://stackoverflow.com/questions/58139431/how-do-i-use-a-variable-as-the-data-type-for-a-different-variable/58297019#58297019", "title": "How do I use a variable as the data type for a different variable?", "body": "<p>As long as you know all of your types at compile time, it is possible to transform unstructured data into typed data based on some value in the data.  This is exactly what is done by the popular <a href=\"https://serde.rs/\" rel=\"nofollow noreferrer\">serde crate</a></p>\n\n<p>Without knowing the use case, it's difficult to address the question precisely, yet the code below gives two examples about how to accomplish type-mapping using an enum (though match could be used to map any data to any type that is known at compile time).</p>\n\n<pre><code>enum VarType {\n    A(String),\n    B(String),\n    Unknown(String),\n}\n\nfn main() {\n    let _var1 = VarType::A(\"abc\".to_string());\n    let _var2 = VarType::B(\"xyz\".to_string());\n\n    let data = vec![(\"a\", \"abc\"), (\"b\", \"xyz\")];\n\n    for item in data {\n        let (data_type, value) = item;\n        match data_type {\n            \"a\" =&gt; VarType::A(value.to_string()),\n            \"b\" =&gt; VarType::B(value.to_string()),\n            _ =&gt; VarType::Unknown(value.to_string()),\n        };\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 58, "user_id": 11860051, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-c7hDubgjUj0/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rcSbApNgnbsPqLM3fJGXVD2OhXrjg/photo.jpg?sz=128", "display_name": "Ariel Hurdle", "link": "https://stackoverflow.com/users/11860051/ariel-hurdle"}, "edited": false, "score": 0, "creation_date": 1571562757, "post_id": 58471509, "comment_id": 103276494, "body": "Thank you.  That post is exactly what i have been looking for!!"}, {"owner": {"reputation": 485, "user_id": 12245987, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-dxV3kFNlINs/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rd4kovY6O8OQkyEEvxhdpnhrwJ31w/photo.jpg?sz=128", "display_name": "Leo Cornelius", "link": "https://stackoverflow.com/users/12245987/leo-cornelius"}, "reply_to_user": {"reputation": 58, "user_id": 11860051, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-c7hDubgjUj0/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rcSbApNgnbsPqLM3fJGXVD2OhXrjg/photo.jpg?sz=128", "display_name": "Ariel Hurdle", "link": "https://stackoverflow.com/users/11860051/ariel-hurdle"}, "edited": false, "score": 0, "creation_date": 1571562907, "post_id": 58471509, "comment_id": 103276529, "body": "Glad i could help"}], "tags": [], "owner": {"reputation": 485, "user_id": 12245987, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-dxV3kFNlINs/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rd4kovY6O8OQkyEEvxhdpnhrwJ31w/photo.jpg?sz=128", "display_name": "Leo Cornelius", "link": "https://stackoverflow.com/users/12245987/leo-cornelius"}, "is_accepted": true, "score": 3, "last_activity_date": 1571562657, "creation_date": 1571562657, "answer_id": 58471509, "question_id": 58139431, "link": "https://stackoverflow.com/questions/58139431/how-do-i-use-a-variable-as-the-data-type-for-a-different-variable/58471509#58471509", "title": "How do I use a variable as the data type for a different variable?", "body": "<p>As Isak van Bakel, most said  rust is static. However, if you have a list of  all the possible structures, you can. (assuming your using serde here!). There is currently \na interesting question discussing polymorphic de-serialisation <a href=\"https://stackoverflow.com/questions/44231020/how-can-deserialization-of-polymorphic-trait-objects-be-added-in-rust-if-at-all\">here</a>,  i suggest you take a look as it may help!</p>\n"}], "owner": {"reputation": 58, "user_id": 11860051, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-c7hDubgjUj0/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rcSbApNgnbsPqLM3fJGXVD2OhXrjg/photo.jpg?sz=128", "display_name": "Ariel Hurdle", "link": "https://stackoverflow.com/users/11860051/ariel-hurdle"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 168, "favorite_count": 0, "accepted_answer_id": 58471509, "answer_count": 3, "score": 6, "last_activity_date": 1571562707, "creation_date": 1569607143, "last_edit_date": 1570549584, "question_id": 58139431, "link": "https://stackoverflow.com/questions/58139431/how-do-i-use-a-variable-as-the-data-type-for-a-different-variable", "title": "How do I use a variable as the data type for a different variable?", "body": "<p>If I have the data type of something stored in the variable <code>data_type</code>, how can I create a new variable with the data type defined in this variable?</p>\n\n<p>For example:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct a {\n    var: String,\n}\nstruct b {\n    var: String,\n}\n\nlet var_type = \"a\";\nlet variable: var_type { var: \"abc\" };  // creates struct var_type\n</code></pre>\n"}, {"tags": ["reference", "rust", "lifetime", "borrow-checker", "borrowing"], "answers": [{"comments": [{"owner": {"reputation": 381, "user_id": 2197587, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2145fb9dff1eec2badb45f58e8fd936f?s=128&d=identicon&r=PG&f=1", "display_name": "Federico", "link": "https://stackoverflow.com/users/2197587/federico"}, "edited": false, "score": 0, "creation_date": 1569664985, "post_id": 58139439, "comment_id": 102675495, "body": "Thank you, now I understand it better. Still, I think I prefer the first implementation you gave to the second and third, because it is more general: it accepts also <code>Option&lt;PathBuf&gt;</code> and <code>Option&lt;String&gt;</code>.  What is your opinion about choosing among the three versions? It seems more similar to what <a href=\"https://doc.rust-lang.org/std/path/struct.Path.html#method.join\" rel=\"nofollow noreferrer\"><code>Path::join</code></a> does."}, {"owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "reply_to_user": {"reputation": 381, "user_id": 2197587, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2145fb9dff1eec2badb45f58e8fd936f?s=128&d=identicon&r=PG&f=1", "display_name": "Federico", "link": "https://stackoverflow.com/users/2197587/federico"}, "edited": false, "score": 1, "creation_date": 1569678713, "post_id": 58139439, "comment_id": 102678409, "body": "To me, the third option seems best since it&#39;s more explicit about the fact that it&#39;s cloning the paths (since it couldn&#39;t possibly reuse either of the arguments). It&#39;s still just as general, since it&#39;s easy to borrow if needed at the call site (e.g. <code>extend1(&amp;string, option_string.as_ref())</code>). Still, it&#39;s up to you. The consistency with <code>Path::join</code> is nice, though I&#39;d probably expect a function with the name &quot;extend&quot; to take a mutable reference and change the original <code>Path</code> object (compare to the <a href=\"https://doc.rust-lang.org/stable/std/iter/trait.Extend.html\" rel=\"nofollow noreferrer\"><code>Extend</code> trait</a>)."}], "tags": [], "owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "is_accepted": true, "score": 1, "last_activity_date": 1569607191, "creation_date": 1569607191, "answer_id": 58139439, "question_id": 58138961, "link": "https://stackoverflow.com/questions/58138961/how-to-use-asref-arguments/58139439#58139439", "title": "How to use `AsRef` arguments?", "body": "<p><code>Option::map</code> consumes the inner value (if there is one). So in the code <code>q.map(|x| x.as_ref())</code>, the closure takes <code>x</code> by value. You can check this by noting that <code>q.map(|x: &amp;Q| x.as_ref())</code> gives a type error, while <code>q.map(|x: Q| x.as_ref())</code> does not (it still gives the lifetime error). That means that when you call <code>x.as_ref()</code>, a new reference to x is created, not related to any outside reference. This means that the reference is only valid inside the closure, but you want to use it in the rest of <code>extend1</code>.</p>\n\n<p>What you want to do instead is have a borrow of <code>q</code> that's valid until the end of <code>extend1</code>. This borrow of <code>q</code> can be turned into a borrow of its contents (if any) using <code>Option::as_ref()</code> to convert <code>&amp;Option&lt;Q&gt;</code> into <code>Option&lt;&amp;Q&gt;</code> (simply using <code>q.as_ref()</code> will create the borrow of <code>q</code> you need). Then when you use map, the closure will take <code>&amp;Q</code>, rather than <code>Q</code>. The lifetime of the reference will be the same as the external borrow of <code>q</code>, so it will last until the end of <code>extend1</code> (if needed).</p>\n\n<pre><code>const DEFAULT: &amp;str = \"lib\";\n\nuse std::path::{Path, PathBuf};\n\nfn extend1&lt;P: AsRef&lt;Path&gt;, Q: AsRef&lt;Path&gt;&gt;(p: P, q: Option&lt;Q&gt;) -&gt; PathBuf {\n    let q: &amp;Path = q.as_ref().map(|x| x.as_ref()).unwrap_or(DEFAULT.as_ref());\n    p.as_ref().join(q)\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=6a18d68ae380978cdff340234d3d0cc3\" rel=\"nofollow noreferrer\">(playground)</a></p>\n\n<p>Since the arguments to your function are only ever used by reference, you may wish to only take them by reference. This is as easy as adding an ampersand to each argument.</p>\n\n<pre><code>const DEFAULT: &amp;str = \"lib\";\n\nuse std::path::{Path, PathBuf};\n\nfn extend1&lt;P: AsRef&lt;Path&gt;, Q: AsRef&lt;Path&gt;&gt;(p: &amp;P, q: &amp;Option&lt;Q&gt;) -&gt; PathBuf {\n    let q: &amp;Path = q.as_ref().map(|x| x.as_ref()).unwrap_or(DEFAULT.as_ref());\n    p.as_ref().join(q)\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=da243126141e50e88e13893edd24e7e0\" rel=\"nofollow noreferrer\">(playground)</a></p>\n\n<p>or</p>\n\n<pre><code>const DEFAULT: &amp;str = \"lib\";\n\nuse std::path::{Path, PathBuf};\n\nfn extend1&lt;P: AsRef&lt;Path&gt;, Q: AsRef&lt;Path&gt;&gt;(p: &amp;P, q: Option&lt;&amp;Q&gt;) -&gt; PathBuf {\n    let q: &amp;Path = q.map(|x| x.as_ref()).unwrap_or(DEFAULT.as_ref());\n    p.as_ref().join(q)\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=2d86c141e399c4e67bb280015d39661a\" rel=\"nofollow noreferrer\">(playground)</a></p>\n\n<p>Note that this last version doesn't need to call <code>q.as_ref()</code>, since <code>q</code> already has type <code>Option&lt;&amp;Q&gt;</code>. This version most closely follows your original <code>extend</code> function.</p>\n"}], "owner": {"reputation": 381, "user_id": 2197587, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2145fb9dff1eec2badb45f58e8fd936f?s=128&d=identicon&r=PG&f=1", "display_name": "Federico", "link": "https://stackoverflow.com/users/2197587/federico"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1412, "favorite_count": 2, "accepted_answer_id": 58139439, "answer_count": 1, "score": 2, "last_activity_date": 1569665065, "creation_date": 1569604726, "last_edit_date": 1569665065, "question_id": 58138961, "link": "https://stackoverflow.com/questions/58138961/how-to-use-asref-arguments", "title": "How to use `AsRef` arguments?", "body": "<p>I am having a hard time trying to get <code>AsRef</code> to work in a clean way.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>const DEFAULT: &amp;str = \"lib\";\n\nuse std::path::{Path, PathBuf};\n\nfn extend(p: &amp;Path, q: Option&lt;&amp;Path&gt;) -&gt; PathBuf {\n    let q: &amp;Path = q.unwrap_or(DEFAULT.as_ref());\n    p.join(q)\n}\n\n// DOES NOT COMPILE\nfn extend1&lt;P: AsRef&lt;Path&gt;, Q: AsRef&lt;Path&gt;&gt;(p: P, q: Option&lt;Q&gt;) -&gt; PathBuf {\n    let q: &amp;Path = q.map(|x| x.as_ref()).unwrap_or(DEFAULT.as_ref());\n    p.as_ref().join(q)\n}\n\n// DOES NOT COMPILE\nfn extend2&lt;P: AsRef&lt;Path&gt;, Q: AsRef&lt;Path&gt;&gt;(p: P, q: Option&lt;Q&gt;) -&gt; PathBuf {\n    let q: &amp;Path = match q {\n        Some(x) =&gt; x.as_ref(),\n        None =&gt; DEFAULT.as_ref(),\n    };\n    p.as_ref().join(q)\n}\n\nfn extend3&lt;P: AsRef&lt;Path&gt;, Q: AsRef&lt;Path&gt;&gt;(p: P, q: Option&lt;Q&gt;) -&gt; PathBuf {\n    match q {\n        Some(x) =&gt; p.as_ref().join(x.as_ref()),\n        None =&gt; p.as_ref().join(AsRef::&lt;Path&gt;::as_ref(DEFAULT)),\n    }\n}\n</code></pre>\n\n<p>The function <code>extend</code> works with <code>Path</code> references, but I want to generalize it to accept arguments of type <code>AsRef&lt;Path&gt;</code> in order to allow also string, for instance.</p>\n\n<p>My first attempts, <code>extend1</code> and <code>extend2</code>, do not pass the borrow checker, which complains about the lifetime of <code>x</code> in both cases.</p>\n\n<p>My third attempt, <code>extend3</code>, works, but has the obvious drawback of code duplication, which gets more severe as the function body grows.</p>\n\n<p>What is the best solution in this circumstance?</p>\n"}, {"tags": ["rust", "installation", "customization", "rust-cargo"], "comments": [{"owner": {"reputation": 4324, "user_id": 1045510, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/abde71672c5b271c778d3ed312347866?s=128&d=identicon&r=PG", "display_name": "Kroltan", "link": "https://stackoverflow.com/users/1045510/kroltan"}, "edited": false, "score": 1, "creation_date": 1569678397, "post_id": 58138170, "comment_id": 102678338, "body": "Go upvote this issue: <a href=\"https://github.com/rust-lang/cargo/issues/545\" rel=\"nofollow noreferrer\">github.com/rust-lang/cargo/issues/545</a>"}], "answers": [{"comments": [{"owner": {"reputation": 381, "user_id": 2197587, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2145fb9dff1eec2badb45f58e8fd936f?s=128&d=identicon&r=PG&f=1", "display_name": "Federico", "link": "https://stackoverflow.com/users/2197587/federico"}, "edited": false, "score": 0, "creation_date": 1569618274, "post_id": 58139358, "comment_id": 102668849, "body": "Yes using the Makefile is what I&#39;m currently doing, but it works only from the package directory. I was hoping for a way to accomplish the same when installing from crates.io"}], "tags": [], "owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "is_accepted": true, "score": 1, "last_activity_date": 1569606730, "creation_date": 1569606730, "answer_id": 58139358, "question_id": 58138170, "link": "https://stackoverflow.com/questions/58138170/how-to-customize-installation-with-cargo/58139358#58139358", "title": "How to customize installation with `cargo`?", "body": "<p>No, this is beyond what <code>cargo</code> does.</p>\n\n<p>As an alternative, you can control building the package using a standard <code>Makefile</code> and use an <code>install</code> target that does what you need. Something to the tune of <a href=\"https://github.com/lukaslueg/macro_railroad_ext/blob/master/extension/Makefile\" rel=\"nofollow noreferrer\">this</a>.</p>\n\n<p>Keep in mind that not all target platforms - Windows in particular - have a concept like <code>setuid</code>.</p>\n"}], "owner": {"reputation": 381, "user_id": 2197587, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2145fb9dff1eec2badb45f58e8fd936f?s=128&d=identicon&r=PG&f=1", "display_name": "Federico", "link": "https://stackoverflow.com/users/2197587/federico"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 82, "favorite_count": 0, "accepted_answer_id": 58139358, "answer_count": 1, "score": 1, "last_activity_date": 1569606730, "creation_date": 1569600848, "question_id": 58138170, "link": "https://stackoverflow.com/questions/58138170/how-to-customize-installation-with-cargo", "title": "How to customize installation with `cargo`?", "body": "<p>Say I have a standard Cargo project</p>\n\n<pre><code>my-package\n\u251c\u2500\u2500 Cargo.lock\n\u251c\u2500\u2500 Cargo.toml\n\u2514\u2500\u2500 src\n    \u251c\u2500\u2500 bin\n    \u2502   \u2514\u2500\u2500 an_executable.rs\n    \u2514\u2500\u2500 lib.rs\n</code></pre>\n\n<p>For reasons related to its proper functioning, I need to install the executable <code>an_executable</code> as root and with the <a href=\"https://en.wikipedia.org/wiki/Setuid\" rel=\"nofollow noreferrer\">setuid bit</a> turned on.\nI can easily do this from the working directory with</p>\n\n<pre><code>cargo build --release\nsudo install -o root -g root -m 4755 -t /usr/local/bin target/release/an_executable\n</code></pre>\n\n<p>Is there a way to configure the installation process (options in <code>Cargo.toml</code>, custom build script...) so that the same happens when I try to install it with <code>cargo install my-package</code>?</p>\n"}, {"tags": ["windows", "rust"], "owner": {"reputation": 135, "user_id": 6624054, "user_type": "registered", "profile_image": "https://graph.facebook.com/10209038135182012/picture?type=large", "display_name": "Tomislav Nekic", "link": "https://stackoverflow.com/users/6624054/tomislav-nekic"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 95, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1569597539, "creation_date": 1569597539, "question_id": 58137329, "link": "https://stackoverflow.com/questions/58137329/changing-creating-windows-registry-pol-using-rust", "title": "Changing/Creating Windows registry.pol using Rust", "body": "<p>I'm trying to edit registry.pol file.\n, but I do not know how to save changes.</p>\n\n<p>I used crate registry-pol (<a href=\"https://docs.rs/registry-pol/1.0.0/registry_pol/v1/fn.parse.html\" rel=\"nofollow noreferrer\">https://docs.rs/registry-pol/1.0.0/registry_pol/v1/fn.parse.html</a>) to read content of the current file.</p>\n\n<pre><code>let mut f = File::open(\"c:\\\\windows\\\\System32\\\\GroupPolicy\\\\machine\\\\registry.pol\").unwrap();\nlet mut buffer = Vec::new();\nf.read_to_end(&amp;mut buffer).unwrap();\nlet mut x = registry_pol::v1::parse(&amp;buffer).unwrap();\nlet value: u32 = 1;\nlet bytes = value.to_le_bytes();\nx.push(registry_pol::v1::RegistryValue {\n    key: \"any key\".to_string(),\n    value: Some(\"any value\".to_string()),\n    data_type: Some(registry_pol::v1::RegistryValueType::REG_DWORD),\n    data: Some(bytes.to_vec()),\n});\n</code></pre>\n\n<p>But if I add anything to Vec I do not have a clue how to save it as new registry.pol file.\nThanks</p>\n"}, {"tags": ["rust", "kernel"], "comments": [{"owner": {"reputation": 2892, "user_id": 391691, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/vCKhh.jpg?s=128&g=1", "display_name": "Simson", "link": "https://stackoverflow.com/users/391691/simson"}, "edited": false, "score": 0, "creation_date": 1569597610, "post_id": 58137027, "comment_id": 102661267, "body": "Possible as in write fixed bytes to a hard coded address? I think so but please clarify what you are asking. There are lots of <code>nostd</code> projects running for embedded systems booting in pure so a kernel is not impossible"}, {"owner": {"reputation": 11, "user_id": 11115212, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c7f5cebd8e535c47fbf75501ede26f5?s=128&d=identicon&r=PG&f=1", "display_name": "Monarrk", "link": "https://stackoverflow.com/users/11115212/monarrk"}, "reply_to_user": {"reputation": 2892, "user_id": 391691, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/vCKhh.jpg?s=128&g=1", "display_name": "Simson", "link": "https://stackoverflow.com/users/391691/simson"}, "edited": false, "score": 0, "creation_date": 1569597825, "post_id": 58137027, "comment_id": 102661362, "body": "@Simson I&#39;m sorry that I don&#39;t know much of the language yet so this may be imprecise, but what I&#39;d like to do is add bytes under the label <code>multiboot</code>. It&#39;s easy in assembly (just a <code>section .multiboot</code>) but I can&#39;t figure out how I could do it in rust"}], "answers": [{"tags": [], "owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "is_accepted": false, "score": 2, "last_activity_date": 1569599766, "creation_date": 1569599766, "answer_id": 58137893, "question_id": 58137027, "link": "https://stackoverflow.com/questions/58137027/control-section-label-an-item-is-linked-at-in-rust/58137893#58137893", "title": "Control section-label an item is linked at in Rust", "body": "<p>You can control the section a function or static is placed into using the <code>link_section</code> attribute. Taken from <a href=\"https://doc.rust-lang.org/reference/abi.html#the-link_section-attribute\" rel=\"nofollow noreferrer\">the documentation</a>:</p>\n\n<pre><code>#[no_mangle]\n#[link_section = \".multiboot\"]\npub static BOOT: [u8; 2] = [0xEB, 0xFE];\n</code></pre>\n"}], "owner": {"reputation": 11, "user_id": 11115212, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c7f5cebd8e535c47fbf75501ede26f5?s=128&d=identicon&r=PG&f=1", "display_name": "Monarrk", "link": "https://stackoverflow.com/users/11115212/monarrk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 63, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1569599831, "creation_date": 1569596344, "last_edit_date": 1569599831, "question_id": 58137027, "link": "https://stackoverflow.com/questions/58137027/control-section-label-an-item-is-linked-at-in-rust", "title": "Control section-label an item is linked at in Rust", "body": "<p>I have been experimenting with writing kernel code in rust. While I could certainly use assembly and link it, it would be wonderful to be able to add a multiboot header in pure rust, like <a href=\"https://github.com/andrewrk/HellOS/blob/master/hellos.zig#L14\" rel=\"nofollow noreferrer\">this</a> in zig. Is this possible?</p>\n"}, {"tags": ["parallel-processing", "rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1569590027, "post_id": 58132366, "comment_id": 102657283, "body": "It is best that you provide a concrete example of what you tried but fear that there is a problem, and exactly which problem you refer to. The given code does not compile. Note also that the Rust compiler will already protect you from data races."}, {"owner": {"reputation": 321, "user_id": 9853391, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/71a4ec22a1b64e539e0b092c4f3db76b?s=128&d=identicon&r=PG&f=1", "display_name": "Danny", "link": "https://stackoverflow.com/users/9853391/danny"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1569734550, "post_id": 58132366, "comment_id": 102688313, "body": "after reading up more on compiler guarantees in the Rust approach i realised my concerns are invalid :)"}], "owner": {"reputation": 321, "user_id": 9853391, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/71a4ec22a1b64e539e0b092c4f3db76b?s=128&d=identicon&r=PG&f=1", "display_name": "Danny", "link": "https://stackoverflow.com/users/9853391/danny"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 43, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1569578699, "creation_date": 1569578699, "question_id": 58132366, "link": "https://stackoverflow.com/questions/58132366/concurrency-considerations-for-two-level-par-iter", "title": "Concurrency considerations for two level par_iter", "body": "<p>I'm trying to use ndarray_parallel in Rust would like to check if there's any considerations I need to be careful with. Specifically the code looks something like this, </p>\n\n<pre><code>let mut mat = Array2::&lt;f64&gt;::zeros((1000, 1000);\nZip::from(mat.axis_iter(Axis(0))).par_apply(|row| {\n\n    row.into_par_iter().map(...).collect() ;\n});\n</code></pre>\n\n<p>Do i need to be careful with what i do inside of map()?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "is_accepted": true, "score": 3, "last_activity_date": 1569549095, "creation_date": 1569549095, "answer_id": 58126740, "question_id": 58126615, "link": "https://stackoverflow.com/questions/58126615/compare-contents-of-ref-with-partialeq/58126740#58126740", "title": "Compare contents of Ref with PartialEq", "body": "<p><a href=\"https://doc.rust-lang.org/beta/std/cell/struct.Ref.html#implementations\" rel=\"nofollow noreferrer\"><code>std::cell::Ref</code></a> implements <a href=\"https://doc.rust-lang.org/std/ops/trait.Deref.html\" rel=\"nofollow noreferrer\"><code>std::ops::Deref</code></a>, which you'll need to use to get the value itself using the <code>*</code> operator. With your snippet, you'd want to do</p>\n\n<pre><code>use std::cell::RefCell;\n\nfn main() {\n    let a = RefCell::new(\"abcdef\".to_string());\n    let b = RefCell::new(\"abcdef\".to_string());\n\n    println!(\"{}\", *a.borrow() == *b.borrow());\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=bc110a91e6a177fe2017d3d3d779cacc\" rel=\"nofollow noreferrer\">Playground Link</a>)</p>\n"}], "owner": {"reputation": 1094, "user_id": 5259805, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/448bac0393b643e9a7e2f36cb3995ed0?s=128&d=identicon&r=PG&f=1", "display_name": "zale", "link": "https://stackoverflow.com/users/5259805/zale"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 72, "favorite_count": 0, "accepted_answer_id": 58126740, "answer_count": 1, "score": 0, "last_activity_date": 1569559184, "creation_date": 1569547928, "last_edit_date": 1569559184, "question_id": 58126615, "link": "https://stackoverflow.com/questions/58126615/compare-contents-of-ref-with-partialeq", "title": "Compare contents of Ref with PartialEq", "body": "<p>Assuming I have two <code>Ref&lt;T&gt;</code> objects where <code>T</code> implements <code>PartialEq</code>, how do I compare them?</p>\n\n<p>The following code does not compile:</p>\n\n<pre><code>use std::cell::RefCell;\n\nfn main() {\n    let a = RefCell::new(\"abcdef\".to_string()).borrow();\n    let b = RefCell::new(\"abcdef\".to_string()).borrow();\n    println!(\"{}\", a == b);\n}\n</code></pre>\n\n<p>and results in this error:</p>\n\n<pre><code>error[E0369]: binary operation `==` cannot be applied to type `std::cell::Ref&lt;'_, std::string::String&gt;`\n --&gt; src/main.rs:6:22\n  |\n6 |     println!(\"{}\", a == b);\n  |                    - ^^ - std::cell::Ref&lt;'_, std::string::String&gt;\n  |                    |\n  |                    std::cell::Ref&lt;'_, std::string::String&gt;\n  |\n  = note: an implementation of `std::cmp::PartialEq` might be missing for `std::cell::Ref&lt;'_, std::string::String&gt;`\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 3197, "user_id": 2203828, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/05Z1b.png?s=128&g=1", "display_name": "Telmo Trooper", "link": "https://stackoverflow.com/users/2203828/telmo-trooper"}, "edited": false, "score": 0, "creation_date": 1569538848, "post_id": 58125656, "comment_id": 102639596, "body": "Very complete answer. Thank you."}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 4, "last_activity_date": 1569538290, "creation_date": 1569538290, "answer_id": 58125656, "question_id": 58125286, "link": "https://stackoverflow.com/questions/58125286/which-conditions-would-trigger-error-handling-in-read-line-followed-by-expect/58125656#58125656", "title": "Which conditions would trigger error handling in &quot;read_line&quot; followed by &quot;expect&quot;?", "body": "<p>Let's follow the source:</p>\n\n<ul>\n<li><a href=\"https://doc.rust-lang.org/src/std/io/stdio.rs.html#320-322\" rel=\"nofollow noreferrer\"><code>std::io::Stdin::read_line</code></a> delegates to <code>std::io::StdinLock::read_line</code>.</li>\n<li><a href=\"https://doc.rust-lang.org/src/std/io/mod.rs.html#1849-1854\" rel=\"nofollow noreferrer\"><code>std::io::StdinLock::read_line</code></a> delegates to a private <a href=\"https://doc.rust-lang.org/src/std/io/mod.rs.html#328\" rel=\"nofollow noreferrer\"><code>append_to_string</code> function</a>.</li>\n<li><code>append_to_string</code> returns an error on non-UTF-8 input.</li>\n</ul>\n\n<p>Let's try this:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>$ rustc a.rs # your program\n$ echo \"\\x99\" | ./a\nGuess the number!\nPlease input your guess.\nthread 'main' panicked at 'Failed to read line: Custom { kind: InvalidData, error: StringError(\"stream did not contain valid UTF-8\") }', src/libcore/result.rs:997:5\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n</code></pre>\n"}], "owner": {"reputation": 3197, "user_id": 2203828, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/05Z1b.png?s=128&g=1", "display_name": "Telmo Trooper", "link": "https://stackoverflow.com/users/2203828/telmo-trooper"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 162, "favorite_count": 0, "accepted_answer_id": 58125656, "answer_count": 1, "score": 1, "last_activity_date": 1569538290, "creation_date": 1569535276, "question_id": 58125286, "link": "https://stackoverflow.com/questions/58125286/which-conditions-would-trigger-error-handling-in-read-line-followed-by-expect", "title": "Which conditions would trigger error handling in &quot;read_line&quot; followed by &quot;expect&quot;?", "body": "<p>When reading the input stream with <code>read_line()</code>, if you don't follow the statement with a <code>.expect()</code> the compiler will warn you that <code>this `Result` may be an `Err` variant, which should be handled</code>.</p>\n\n<p>What I want to understand is what kind of situation will trigger such error handling.</p>\n\n<p>I've tried piping my program into another one (<code>./my_program | echo \"hello\"</code>) so I wouldn't have the chance to enter any input and would supposedly be able to see the error handling in action. To my surprise it actually led to a panic state:</p>\n\n<p><code>thread 'main' panicked at 'failed printing to stdout: Broken pipe (os error 32)', src/libstd/io/stdio.rs:792:9</code></p>\n\n<p>In this code from the book <a href=\"https://doc.rust-lang.org/book/ch02-00-guessing-game-tutorial.html\" rel=\"nofollow noreferrer\">The Rust Programming Language</a>, we specify a string which I believe should be printed when the program isn't able to read the input stream:</p>\n\n<pre><code>use std::io;\n\nfn main() {\n    println!(\"Guess the number!\");\n\n    println!(\"Please input your guess.\");\n\n    let mut guess = String::new();\n\n    io::stdin().read_line(&amp;mut guess)\n        .expect(\"Failed to read line\");\n\n    println!(\"You guessed: {}\", guess);\n}\n</code></pre>\n\n<p>How can I actually see that behavior in action?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 1, "creation_date": 1569545093, "post_id": 58124748, "comment_id": 102640619, "body": "Is there a more complex example that you could add? As it is, you could for instance avoid this by removing the argument entirely. In a more general case you could try to make the type system disallow what you want, but it is hard to say with just this example."}, {"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 0, "creation_date": 1569551183, "post_id": 58124748, "comment_id": 102641626, "body": "<a href=\"https://doc.rust-lang.org/std/macro.unreachable.html\" rel=\"nofollow noreferrer\"><code>std::unreachable</code></a> could help with optimizations, but I don&#39;t think there&#39;s any kind of static analysis available for this currently, at least not in the language without compiler plugins."}, {"owner": {"reputation": 1026, "user_id": 941493, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fb97cb47fce441bfceffc8c3efadcbc2?s=128&d=identicon&r=PG", "display_name": "Tomas", "link": "https://stackoverflow.com/users/941493/tomas"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1569563068, "post_id": 58124748, "comment_id": 102644197, "body": "@loganfsmyth I don&#39;t have one. The problem is, that in the small projects I can somehow prevent it, in the bigger projects combination of changes from different developers could easily cause it."}, {"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 0, "creation_date": 1569568791, "post_id": 58124748, "comment_id": 102646500, "body": "IMO this is not an optimization problem but an invariant enforcement one. I.e., you don&#39;t want other to call your <code>foo</code> with value <code>true</code>. If that&#39;s what you want, try macro <code>std::debug_assert</code>."}], "answers": [{"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": false, "score": 2, "last_activity_date": 1569571227, "creation_date": 1569571227, "answer_id": 58130273, "question_id": 58124748, "link": "https://stackoverflow.com/questions/58124748/is-there-an-alternative-to-compile-error-based-on-static-analysis-e-g-by-optim/58130273#58130273", "title": "Is there an alternative to compile_error based on static analysis (e.g. by optimizer)", "body": "<p>This is not possible with <code>compile_error!</code>. The macro is evaluated way before things like code optimization are happening. There are basically only two contexts in which <code>compile_error!</code> is useful right now: </p>\n\n<ul>\n<li>Conditional compilation with <code>#[cfg(...)]</code></li>\n<li>Macros generating code that may contain a <code>compile_error!</code></li>\n</ul>\n\n<p>Both of these are evaluated before the <code>compile_error!</code> error is emitted.</p>\n\n<p>There is no nice functionality to let you do what you want to achieve. However, there exists a kind of <em>hack</em>. It is used by <a href=\"https://github.com/dtolnay/no-panic\" rel=\"nofollow noreferrer\">the <code>no-panic</code> crate</a> and causes an error at link time (something you usually see pretty rarely in Rust). </p>\n\n<p>The trick works by inserting a reference to an unknown symbol at each panic location. If the optimizer (which runs very late in the compilation pipeline, but still mainly before linking) can remove the branch leading to the <code>panic</code>, it also removes the reference to the unknown symbol. If the optimizer cannot remove the branch, then the final code contains a reference to that unknown symbol and the linker will produce an \"undefined reference to ...\" error. It's not a nice error, but it stops the program from compiling.</p>\n\n<p>Your goal is a bit more elaborate though: you only want an error if the compiler is sure that a panic will absolutely happen. That's more tricky, but you might be able to use this hack to solve it, too. </p>\n"}], "owner": {"reputation": 1026, "user_id": 941493, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fb97cb47fce441bfceffc8c3efadcbc2?s=128&d=identicon&r=PG", "display_name": "Tomas", "link": "https://stackoverflow.com/users/941493/tomas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 228, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1569571227, "creation_date": 1569531768, "question_id": 58124748, "link": "https://stackoverflow.com/questions/58124748/is-there-an-alternative-to-compile-error-based-on-static-analysis-e-g-by-optim", "title": "Is there an alternative to compile_error based on static analysis (e.g. by optimizer)", "body": "<p>I have a function called <code>foo</code>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn foo(val: bool) {\n   if val {\n      panic!(\"This should not ever happened\");\n   } else {\n      // do something useful\n   }\n}\n\n// somewhere else\nfoo(true); // this should cause compile error\n</code></pre>\n\n<p>What I want is stop compilation if the compiler will be sure, that function <code>foo</code> will be called with <code>true</code> value. I want to be informed as soon as possible (so compile time is better than runtime). So I want to something like <code>compile_error!</code> but based on static analysis. It is absolutely ok to compile it if the compiler is not sure if <code>true</code> branch will be called or not - program will panic at runtime.</p>\n\n<p><code>compile_error!</code> is sadly unusable for me because I don't want the following code failed on compile</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>if false {\n   compile_error!(\"Some error\");\n}\n</code></pre>\n"}, {"tags": ["rust", "systemtime"], "comments": [{"owner": {"reputation": 66560, "user_id": 9072753, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EPmGy.jpg?s=128&g=1", "display_name": "KamilCuk", "link": "https://stackoverflow.com/users/9072753/kamilcuk"}, "edited": false, "score": 0, "creation_date": 1569528877, "post_id": 58124073, "comment_id": 102636827, "body": "You need to extract the result from <code>std::result::Result</code>. <a href=\"https://stevedonovan.github.io/rust-gentle-intro/6-error-handling.html\" rel=\"nofollow noreferrer\">Error handling introduction</a>"}], "answers": [{"comments": [{"owner": {"reputation": 5700, "user_id": 4934640, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/2f69527ae459cbbda0ab5c2e08686a50?s=128&d=identicon&r=PG&f=1", "display_name": "user", "link": "https://stackoverflow.com/users/4934640/user"}, "edited": false, "score": 0, "creation_date": 1587941536, "post_id": 58127041, "comment_id": 108701418, "body": "Can you give an example using <code>unwrap</code> and <code>expect</code> on the question context?"}, {"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "reply_to_user": {"reputation": 5700, "user_id": 4934640, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/2f69527ae459cbbda0ab5c2e08686a50?s=128&d=identicon&r=PG&f=1", "display_name": "user", "link": "https://stackoverflow.com/users/4934640/user"}, "edited": false, "score": 1, "creation_date": 1587959968, "post_id": 58127041, "comment_id": 108705184, "body": "@user, I&#39;ve edited my answer to include examples."}], "tags": [], "owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "is_accepted": true, "score": 3, "last_activity_date": 1588006047, "last_edit_date": 1588006047, "creation_date": 1569551903, "answer_id": 58127041, "question_id": 58124073, "link": "https://stackoverflow.com/questions/58124073/how-to-access-as-secs-in-systemtime-no-method-named-as-secs-found-for-enum-r/58127041#58127041", "title": "How to access as_secs in SystemTime? &quot;no method named `as_secs` found for enum Result&quot;", "body": "<p>Read the error:</p>\n\n<pre><code>no method named `...` found for type `Result&lt;...&gt;`\n</code></pre>\n\n<p>So, we look at <a href=\"https://doc.rust-lang.org/std/result/enum.Result.html\" rel=\"nofollow noreferrer\"><code>Result</code></a>:</p>\n\n<blockquote>\n  <p><code>Result</code> is a type that represents either success (<a href=\"https://doc.rust-lang.org/std/result/enum.Result.html#variant.Ok\" rel=\"nofollow noreferrer\"><code>Ok</code></a>) or faliure (<a href=\"https://doc.rust-lang.org/std/result/enum.Result.html#variant.Err\" rel=\"nofollow noreferrer\"><code>Err</code></a>)  </p>\n  \n  <p>See the <a href=\"https://doc.rust-lang.org/std/result/index.html\" rel=\"nofollow noreferrer\"><code>std::result</code></a> module for documentation details. </p>\n</blockquote>\n\n<p>So, we know that <a href=\"https://doc.rust-lang.org/std/time/struct.SystemTime.html#method.duration_since\" rel=\"nofollow noreferrer\"><code>SystemTime::duration_since(&amp;self, _)</code></a> returns a <code>Result</code>, meaning it could possibly have failed. Reading the docs:</p>\n\n<blockquote>\n  <p>Returns an <a href=\"https://doc.rust-lang.org/std/result/enum.Result.html#variant.Err\" rel=\"nofollow noreferrer\"><code>Err</code></a> if <code>earlier</code> is later than <code>self</code>, and the error contains how far from <code>self</code> the time is.</p>\n</blockquote>\n\n<p>So, we just have to <a href=\"https://doc.rust-lang.org/std/result/enum.Result.html#method.unwrap\" rel=\"nofollow noreferrer\"><code>unwrap</code></a>, <a href=\"https://doc.rust-lang.org/std/result/enum.Result.html#method.expect\" rel=\"nofollow noreferrer\"><code>expect</code></a>, or match on it to get the possibility of an error out:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::time::SystemTime;\n\n// Unwrapping\nlet n = SystemTime::now().duration_since(SystemTime::UNIX_EPOCH)\n    .unwrap(); // Will panic if it is not `Ok`.\n\n// Expecting\nlet n = SystemTime::now().duration_since(SystemTime::UNIX_EPOCH)\n    .expect(\"Invalid time comparison\"); // Will panic with error message\n        // if it is not `Ok`.\n\n// Matching\nlet n = SystemTime::now().duration_since(SystemTime::UNIX_EPOCH);\nmatch n {\n    Ok(x) =&gt; { /* Use x */ },\n    Err(e) =&gt; { /* Process Error e */ },\n}\n\n// Fallibly Destructuring:\nlet n = SystemTime::now().duration_since(SystemTime::UNIX_EPOCH);\nif let Ok(x) = n {\n    /* Use x */\n} else {\n    /* There was an error. */\n}\n</code></pre>\n"}], "owner": {"reputation": 108, "user_id": 9409100, "user_type": "registered", "profile_image": "https://graph.facebook.com/10155474678018687/picture?type=large", "display_name": "Diego Sierra Fernandez", "link": "https://stackoverflow.com/users/9409100/diego-sierra-fernandez"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 405, "favorite_count": 1, "closed_date": 1588006336, "accepted_answer_id": 58127041, "answer_count": 1, "score": 3, "last_activity_date": 1588006437, "creation_date": 1569528581, "last_edit_date": 1588006387, "question_id": 58124073, "link": "https://stackoverflow.com/questions/58124073/how-to-access-as-secs-in-systemtime-no-method-named-as-secs-found-for-enum-r", "closed_reason": "Duplicate", "title": "How to access as_secs in SystemTime? &quot;no method named `as_secs` found for enum Result&quot;", "body": "<p>I'm using <a href=\"https://doc.rust-lang.org/std/time/struct.SystemTime.html\" rel=\"nofollow noreferrer\"><code>std::time::SystemTime</code></a>. My goal is to make a struct with a field called <code>timestamp</code> and store the time in seconds. </p>\n\n<p>I saw this example which works correctly:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::time::SystemTime;\n\nmatch SystemTime::now().duration_since(SystemTime::UNIX_EPOCH) {\n    Ok(n) =&gt; println!(\"1970-01-01 00:00:00 UTC was {} seconds ago!\", n.as_secs()),\n    Err(_) =&gt; panic!(\"SystemTime before UNIX EPOCH!\"),\n}\n</code></pre>\n\n<p>When I try this code I get an error:</p>\n\n<pre><code>use std::time::SystemTime;\n\nlet n = SystemTime::now().duration_since(SystemTime::UNIX_EPOCH);\nprintln!(\"{}\", n.as_secs());\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `as_secs` found for enum `std::result::Result&lt;std::time::Duration, std::time::SystemTimeError&gt;` in the current scope\n --&gt; src/main.rs:5:22\n  |\n5 |     println!(\"{}\", n.as_secs());\n  |                      ^^^^^^^ method not found in `std::result::Result&lt;std::time::Duration, std::time::SystemTimeError&gt;`\n</code></pre>\n\n<p>What am I doing wrong?</p>\n"}, {"tags": ["dynamic", "error-handling", "rust", "runtime-error", "compile-time"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1569504415, "post_id": 58117685, "comment_id": 102624600, "body": "Dynamic errors are a better alternative because there is less to type."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 4, "creation_date": 1569504554, "post_id": 58117685, "comment_id": 102624674, "body": "You&#39;re probably looking at user-facing applications, which usually have to deal with multiple error types, and <code>Box&lt;dyn Error&gt;</code> is a common ground for all of them. This is definitely not something I&#39;d recommend in a library."}, {"owner": {"reputation": 852, "user_id": 6563468, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a4c2119cfc1ee9a6c5deeec2ead9a261?s=128&d=identicon&r=PG&f=1", "display_name": "Logan Reed", "link": "https://stackoverflow.com/users/6563468/logan-reed"}, "edited": false, "score": 3, "creation_date": 1569523927, "post_id": 58117685, "comment_id": 102634677, "body": "If you haven&#39;t read already <a href=\"https://blog.burntsushi.net/rust-error-handling/\" rel=\"nofollow noreferrer\">Error Handling in Rust</a> by Andrew Gallant is an excellent deep dive and explains different approaches. You can stay strongly typed if you prefer."}, {"owner": {"reputation": 2572, "user_id": 2630028, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/ddafbe2a8b6f8403f3d24482c9174f90?s=128&d=identicon&r=PG", "display_name": "solstice333", "link": "https://stackoverflow.com/users/2630028/solstice333"}, "reply_to_user": {"reputation": 852, "user_id": 6563468, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a4c2119cfc1ee9a6c5deeec2ead9a261?s=128&d=identicon&r=PG&f=1", "display_name": "Logan Reed", "link": "https://stackoverflow.com/users/6563468/logan-reed"}, "edited": false, "score": 0, "creation_date": 1607634867, "post_id": 58117685, "comment_id": 115342211, "body": "From the &quot;error handling in rust&quot; link posted by @LoganReed above: &quot;If you\u2019re writing a quick \u2018n\u2019 dirty program and feel ashamed about panicking anyway, then you should probably use Box&lt;Error&gt; (or Box&lt;Error + Send + Sync&gt;)&quot;"}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 10, "last_activity_date": 1569505106, "last_edit_date": 1569505106, "creation_date": 1569504539, "answer_id": 58117943, "question_id": 58117685, "link": "https://stackoverflow.com/questions/58117685/why-is-it-common-to-use-dynamic-errors-in-rust-and-not-enums-is-it-bad-not-pos/58117943#58117943", "title": "Why is it common to use dynamic errors in rust, and not enums? Is it bad/not possible to use compile-time variants?", "body": "<p>In application code, this is typically done for convenience. Making all error types statically known can be a maintenance nightmare: you have an ever-expanding enum of possible error types, most of which you are never going to try to handle individually. These error types have a way of contaminating type signatures far away from where the error would actually occur. <code>Box&lt;dyn std::error::Error&gt;</code> keeps things very clean and the extra allocation isn't usually a problem because it only happens in the error case.</p>\n\n<p>It's rarer in library crates, but some very generic code cannot possibly know what all of the possible error types can be. It can get very clumsy dealing with a type parameter for errors when composing a number of result types. A complex structure of possible statically-known error combinations can be conveniently collapsed into a single type, <code>Box&lt;dyn std::error::Error&gt;</code>.</p>\n"}], "owner": {"reputation": 20880, "user_id": 1317944, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/OcBMY.png?s=128&g=1", "display_name": "The Quantum Physicist", "link": "https://stackoverflow.com/users/1317944/the-quantum-physicist"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1708, "favorite_count": 1, "accepted_answer_id": 58117943, "answer_count": 1, "score": 7, "last_activity_date": 1612852418, "creation_date": 1569503811, "last_edit_date": 1612852418, "question_id": 58117685, "link": "https://stackoverflow.com/questions/58117685/why-is-it-common-to-use-dynamic-errors-in-rust-and-not-enums-is-it-bad-not-pos", "title": "Why is it common to use dynamic errors in rust, and not enums? Is it bad/not possible to use compile-time variants?", "body": "<p>I'm seeing this trend in Rust that errors in <code>Result</code> are returned like this:</p>\n\n<pre><code>fn do_something() -&gt; Result&lt;SomeType, Box&lt;dyn std::error::Error&gt;&gt; {\n    // ...\n}\n</code></pre>\n\n<p>Why are errors dynamic? Having come from a C++ background and prefering <code>std::variant</code> over classical polymorphism (I'm relatively new to rust), I'm allergic to dynamic allocations, so I use them only when I really have to. I also find Rust's enums awesome to have included variants in them. Can someone please explain why isn't it standard/preferred/common to use errors as enum?</p>\n"}, {"tags": ["rust", "dbus"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1569495085, "post_id": 58115091, "comment_id": 102619528, "body": "Might be worth rearranging the function to provide more than just a boolean. What is the concrete output of the call to <code>request_name()</code>?"}, {"owner": {"reputation": 527, "user_id": 12029705, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cd1de2d386e583758ff0fb8ca08e980e?s=128&d=identicon&r=PG&f=1", "display_name": "Hossain Adnan", "link": "https://stackoverflow.com/users/12029705/hossain-adnan"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1569495614, "post_id": 58115091, "comment_id": 102619805, "body": "@E_net4theMeta-RemoveR, changing to <a href=\"https://pastebin.com/XLepk1jT\" rel=\"nofollow noreferrer\">pastebin.com/XLepk1jT</a> indicates that it reaches RequestNameReply::PrimaryOwner. I&#39;m not sure which of these(<a href=\"https://docs.rs/dbus/0.7.1/dbus/blocking/stdintf/org_freedesktop_dbus/enum.RequestNameReply.html\" rel=\"nofollow noreferrer\">docs.rs/dbus/0.7.1/dbus/blocking/stdintf/org_freedeskt&zwnj;&#8203;op_dbus/&hellip;</a>) imply application uniqueness best."}, {"owner": {"reputation": 12075, "user_id": 2241569, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/QMrPS.jpg?s=128&g=1", "display_name": "Jussi Kukkonen", "link": "https://stackoverflow.com/users/2241569/jussi-kukkonen"}, "edited": false, "score": 1, "creation_date": 1569506969, "post_id": 58115091, "comment_id": 102626269, "body": "I&#39;ve not used D-Bus from Rust but looking at your code I&#39;m guessing this happens: you always become the name owner and immediately after that the Session/Connection goes out of scope, resulting in name release."}], "answers": [{"tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": true, "score": 1, "last_activity_date": 1569516134, "last_edit_date": 1569516134, "creation_date": 1569512076, "answer_id": 58120266, "question_id": 58115091, "link": "https://stackoverflow.com/questions/58115091/how-to-detect-application-uniqueness-in-rust-using-dbus/58120266#58120266", "title": "How to detect application uniqueness in Rust using dbus", "body": "<p>When a <code>dbus::blocking::Connection</code> goes out of scope, it will be dropped and result in <a href=\"https://github.com/diwic/dbus-rs/blob/c4eccacacec64c87fd6de5e58fe9e201d4add3ad/dbus/src/channel.rs#L19\" rel=\"nofollow noreferrer\">the underlying <code>dbus</code> connection</a> being dropped too.</p>\n\n<p>In order to do anything meaningful with the connection, you need to keep it alive. One way to do that is to create connection once and pass the reference around:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>//# dbus = \"0.7.1\"\n\nuse dbus;\nuse dbus::blocking::Connection;\nuse dbus::blocking::stdintf::org_freedesktop_dbus::RequestNameReply;\n\nfn main() -&gt; Result&lt;(), Box&lt;dyn std::error::Error&gt;&gt; {\n    let conn = Connection::new_session()?;\n    match is_unique(&amp;conn) {\n        Ok(true) =&gt; loop {},\n        _ =&gt; Ok(()),\n    }\n}\n\npub fn is_unique(conn: &amp;Connection) -&gt; Result&lt;bool, dbus::Error&gt; {\n    match conn.request_name(\"com.localserver.myapp\", false, false, false) {\n        Ok(RequestNameReply::PrimaryOwner) =&gt; Ok(true),\n        Ok(_) =&gt; Ok(false),\n        Err(e) =&gt; Err(e),\n    }\n}\n</code></pre>\n\n<p>Try run the program twice and the second instance will terminate immediately.</p>\n"}], "owner": {"reputation": 527, "user_id": 12029705, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cd1de2d386e583758ff0fb8ca08e980e?s=128&d=identicon&r=PG&f=1", "display_name": "Hossain Adnan", "link": "https://stackoverflow.com/users/12029705/hossain-adnan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 114, "favorite_count": 1, "accepted_answer_id": 58120266, "answer_count": 1, "score": 3, "last_activity_date": 1569516134, "creation_date": 1569494774, "last_edit_date": 1569497395, "question_id": 58115091, "link": "https://stackoverflow.com/questions/58115091/how-to-detect-application-uniqueness-in-rust-using-dbus", "title": "How to detect application uniqueness in Rust using dbus", "body": "<p>How can I detect application uniqueness using the dbus crate(<a href=\"https://crates.io/crates/dbus\" rel=\"nofollow noreferrer\">https://crates.io/crates/dbus</a>) in Rust?</p>\n\n<p>So far I've tried the following but the the function always returns false.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn detect_uniqueness() -&gt; Result&lt;bool, Box&lt;dyn std::error::Error&gt;&gt; {\n    let conn = dbus::blocking::Connection::new_session()?;\n    match conn.request_name(\"com.localserver.myapp\", false, false, false) {\n        Err(e) =&gt; Err(Box::new(e)),\n        Ok(dbus::blocking::stdintf::org_freedesktop_dbus::RequestNameReply::Exists) =&gt; Ok(true),\n        _ =&gt; Ok(false)\n    }\n}\n</code></pre>\n\n<hr>\n\n<p>Changing the function to the following indicates that the function always reaches <code>RequestReply::PrimaryOwner</code>. </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn detect_uniqueness() -&gt; Result&lt;bool, Box&lt;dyn std::error::Error&gt;&gt; {\n    let conn = dbus::blocking::Connection::new_session()?;\n    match conn.request_name(\"com.localserver.myapp\", false, false, false) {\n        Err(e) =&gt; Err(Box::new(e)),\n        Ok(dbus::blocking::stdintf::org_freedesktop_dbus::RequestNameReply::PrimaryOwner) =&gt; {\n            log::info!(\"PrimaryOwner\");\n            Ok(true)\n        },\n        Ok(dbus::blocking::stdintf::org_freedesktop_dbus::RequestNameReply::InQueue) =&gt; {\n            log::info!(\"InQueue\");\n            Ok(false)\n        },\n        Ok(dbus::blocking::stdintf::org_freedesktop_dbus::RequestNameReply::Exists) =&gt; {\n            log::info!(\"Exists\");\n            Ok(false)\n        },\n        Ok(dbus::blocking::stdintf::org_freedesktop_dbus::RequestNameReply::AlreadyOwner) =&gt; {\n            log::info!(\"AlreadyOwner\");\n            Ok(false)\n        },\n    }\n}\n</code></pre>\n\n<p>I am not sure which of <a href=\"https://docs.rs/dbus/0.7.1/src/dbus/blocking/stdintf.rs.html#16-21\" rel=\"nofollow noreferrer\">these</a> implies application uniqueness. </p>\n\n<p>I have tried holding off the first instance of the program if the function reaches <code>PrimaryOwner</code> and launch another instance, but even the second instance seems to reach <code>PrimaryOwner</code> too.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// main.rs\nfn main() {\n    aux::logger::init();\n\n    if app::manually_invoked() {\n        match app::unique_instance() {\n            Ok(unique) =&gt; {\n                if unique {\n                    log::info!(\"Unique instance detected.\");\n                    loop {\n                        std::thread::sleep_ms(999999);\n                    }\n                } else {\n                    log::info!(\"Duplicate instance detected.\")\n                }\n            },\n            Err(e) =&gt; {\n                log::error!(\"Error detecting uniqueness: {}.\", e);\n                app::exit();\n            }\n        }\n    } else {\n        // \n    }\n}\n</code></pre>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// app.rs\npub fn manually_invoked() -&gt; bool {\n    std::env::args().len() == 1\n}\n\npub fn unique_instance() -&gt; Result&lt;bool, Box&lt;dyn std::error::Error&gt;&gt; {\n    crate::aux::ipc::detect_uniqueness()\n}\n\npub fn exit() {\n    std::process::exit(1);\n}\n</code></pre>\n\n<p>Resulting into the program thinking that it's always unique.</p>\n"}, {"tags": ["rust", "serde"], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 3, "last_activity_date": 1569494771, "last_edit_date": 1569494771, "creation_date": 1569494113, "answer_id": 58114907, "question_id": 58114463, "link": "https://stackoverflow.com/questions/58114463/how-do-i-modify-the-json-output-for-a-resultt-e-serialized-with-serde/58114907#58114907", "title": "How do I modify the JSON output for a Result&lt;T,E&gt; serialized with serde?", "body": "<p>Serde <a href=\"https://serde.rs/field-attrs.html\" rel=\"nofollow noreferrer\">attributes</a> are not powerful enough to do the transformation from the default <code>Result</code> serialization to what you want, so you will need to write custom serialization. Fortunately, it is quite simple:</p>\n\n<pre><code>use serde::{Serialize, Serializer, ser::SerializeMap};\n\nstruct MyStruct {\n    foo: Result&lt;u32, String&gt;\n}\n\nimpl Serialize for MyStruct {\n    fn serialize&lt;S&gt;(&amp;self, serializer: S) -&gt; Result&lt;S::Ok, S::Error&gt;\n    where\n        S: Serializer,\n    {\n        let mut map = serializer.serialize_map(Some(1))?;\n        match &amp;self.foo {\n            Ok(value) =&gt; map.serialize_entry(\"foo\", &amp;value)?,\n            Err(error) =&gt; map.serialize_entry(\"foo\", &amp;MyError { error } )?,\n        }\n        map.end()\n    }\n}\n\n// This is just used internally to get the nested error field\n#[derive(Serialize)]\nstruct MyError&lt;E&gt; {\n    error: E,\n}\n</code></pre>\n"}], "owner": {"reputation": 6209, "user_id": 1935318, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/ftlsb.jpg?s=128&g=1", "display_name": "amaurym", "link": "https://stackoverflow.com/users/1935318/amaurym"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 59, "favorite_count": 0, "accepted_answer_id": 58114907, "answer_count": 1, "score": 0, "last_activity_date": 1569495037, "creation_date": 1569492561, "last_edit_date": 1569495037, "question_id": 58114463, "link": "https://stackoverflow.com/questions/58114463/how-do-i-modify-the-json-output-for-a-resultt-e-serialized-with-serde", "title": "How do I modify the JSON output for a Result&lt;T,E&gt; serialized with serde?", "body": "<p>A simple code:</p>\n\n<pre><code>use serde::Serialize;\n\n#[derive(Serialize)]\nstruct MyStruct {\n    foo: Result&lt;u32, String&gt;\n}\n\nfn main() {\n    let m = MyStruct {\n        foo: Ok(43)\n    };\n    let n = MyStruct {\n        foo: Err(\"oh no!\".into())\n    };\n\n    println!(\"{}\", serde_json::to_string_pretty(&amp;m).unwrap());\n    println!(\"{}\", serde_json::to_string_pretty(&amp;n).unwrap());\n}\n</code></pre>\n\n<p>This outputs (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=f54e11083fef29cbadf2f52eeaa8e82f\" rel=\"nofollow noreferrer\">playground</a>):</p>\n\n<pre><code>{\n  \"foo\": {\n    \"Ok\": 43\n  }\n}\n{\n  \"foo\": {\n    \"Err\": \"oh no!\"\n  }\n}\n</code></pre>\n\n<p>Can I modify the serializer to have a custom output for <code>Result&lt;T,E&gt;</code>? I would like something like:</p>\n\n<pre><code>// No \"Ok\" field in case of Ok(T)\n{\n  \"foo\": 43\n}\n// Rename \"Err\" to \"error\" in case of Err(E)\n{\n  \"foo\": {\n    \"error\": \"oh no!\"\n  }\n}\n</code></pre>\n"}, {"tags": ["rust", "ip-address", "converters"], "answers": [{"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 1, "last_activity_date": 1569486997, "last_edit_date": 1569486997, "creation_date": 1569486575, "answer_id": 58112608, "question_id": 58112051, "link": "https://stackoverflow.com/questions/58112051/equivalent-of-inet-ntop-in-rust/58112608#58112608", "title": "Equivalent of inet_ntop in Rust", "body": "<p>AFAIK, there is not a direct conversion, but you can do that with <code>from_str_radix</code>, and then with the conversion of an ip from a numeric type:</p>\n\n<pre><code>use std::{\n    error::Error,\n    io,\n    net::{IpAddr, Ipv4Addr, Ipv6Addr},\n    str::FromStr,\n};\n\nfn convert(s: &amp;str) -&gt; io::Result&lt;IpAddr&gt; {\n    if let Ok(u) = u32::from_str_radix(s, 16) {\n        Ok(Ipv4Addr::from(u).into())\n    } else if let Ok(u) = u128::from_str_radix(s, 16) {\n        Ok(Ipv6Addr::from(u).into())\n    } else {\n        Err(io::Error::new(io::ErrorKind::InvalidData, \"Invalid input\"))\n    }\n}\n\nfn main() -&gt; Result&lt;(), Box&lt;dyn Error&gt;&gt; {\n    let ip = convert(\"3701A8C0\")?;\n    assert_eq!(ip, IpAddr::from_str(\"55.1.168.192\")?);\n\n    let ip = convert(\"20010db8000000000000000000000001\")?;\n    assert_eq!(ip, IpAddr::from_str(\"2001:db8::1\")?);\n\n    Ok(())\n}\n</code></pre>\n\n<p>If you already know that it is, for example, and IPV4, this is a one-liner:</p>\n\n<pre><code>use std::{\n    error::Error,\n    net::{IpAddr, Ipv4Addr},\n    str::FromStr,\n};\n\nfn main() -&gt; Result&lt;(), Box&lt;dyn Error&gt;&gt; {\n    let ip = u32::from_str_radix(\"3701A8C0\", 16).map(Ipv4Addr::from)?;\n    assert_eq!(ip, IpAddr::from_str(\"55.1.168.192\")?);\n\n    Ok(())\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 2, "last_activity_date": 1569490594, "creation_date": 1569490594, "answer_id": 58113820, "question_id": 58112051, "link": "https://stackoverflow.com/questions/58112051/equivalent-of-inet-ntop-in-rust/58113820#58113820", "title": "Equivalent of inet_ntop in Rust", "body": "<p><code>inet_ntop</code> takes as input a <code>struct in_addr*</code> or a <code>struct in6_addr*</code>. The direct equivalent of those structs in Rust are <a href=\"https://doc.rust-lang.org/stable/std/net/struct.Ipv4Addr.html\" rel=\"nofollow noreferrer\"><code>Ipv4Addr</code></a> and <a href=\"https://doc.rust-lang.org/stable/std/net/struct.Ipv6Addr.html\" rel=\"nofollow noreferrer\"><code>Ipv6Addr</code></a>, both of which implement the <a href=\"https://doc.rust-lang.org/stable/std/fmt/trait.Display.html\" rel=\"nofollow noreferrer\"><code>Display</code></a> trait and can therefore be formatted easily to text or printed:</p>\n\n<pre><code>let addr = Ipv4Addr::from (0x3701A8C0);\nassert_eq!(format!(\"{}\", addr), String::from (\"55.1.168.192\"));\nprintln!(\"{}\", addr);\n</code></pre>\n"}], "owner": {"reputation": 927, "user_id": 3075861, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/de25a17a6ff9a33025375d83c3867c07?s=128&d=identicon&r=PG&f=1", "display_name": "Dave Reikher", "link": "https://stackoverflow.com/users/3075861/dave-reikher"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 224, "favorite_count": 0, "accepted_answer_id": 58112608, "answer_count": 2, "score": 1, "last_activity_date": 1569490594, "creation_date": 1569484468, "question_id": 58112051, "link": "https://stackoverflow.com/questions/58112051/equivalent-of-inet-ntop-in-rust", "title": "Equivalent of inet_ntop in Rust", "body": "<p>Is there a readily available way to convert ip addresses (both v4 and v6) from binary to text form in Rust (an equivalent to <code>inet_ntop</code>)?</p>\n\n<p>Examples: </p>\n\n<ul>\n<li><code>\"3701A8C0\"</code> converts to <code>\"55.1.168.192\"</code>,</li>\n<li><code>\"20010db8000000000000000000000001\"</code> converts to <code>\"2001:db8::1\"</code>.</li>\n</ul>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "edited": false, "score": 1, "creation_date": 1569481440, "post_id": 58110081, "comment_id": 102612410, "body": "(rust 1.37.0) It&#39;s consuming &lt; 100MB on my machine even with 2k threads."}, {"owner": {"reputation": 35470, "user_id": 6348498, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/0zu4m.jpg?s=128&g=1", "display_name": "Gurwinder Singh", "link": "https://stackoverflow.com/users/6348498/gurwinder-singh"}, "reply_to_user": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "edited": false, "score": 0, "creation_date": 1569483116, "post_id": 58110081, "comment_id": 102613254, "body": "@SvetlinZarev - Really? I have rust 1.39.0-nightly (2019-09-12). Let me install 1.37 and try"}, {"owner": {"reputation": 35470, "user_id": 6348498, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/0zu4m.jpg?s=128&g=1", "display_name": "Gurwinder Singh", "link": "https://stackoverflow.com/users/6348498/gurwinder-singh"}, "reply_to_user": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "edited": false, "score": 0, "creation_date": 1569484339, "post_id": 58110081, "comment_id": 102613893, "body": "I just tried it. I have 1.37 on Ubuntu. Its going over 3 GB very quickly. Which platform are you on?"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1569484433, "post_id": 58110081, "comment_id": 102613941, "body": "Doesn&#39;t each thread have its own arena and allocate the Foo from this arena ?"}, {"owner": {"reputation": 35470, "user_id": 6348498, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/0zu4m.jpg?s=128&g=1", "display_name": "Gurwinder Singh", "link": "https://stackoverflow.com/users/6348498/gurwinder-singh"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1569484595, "post_id": 58110081, "comment_id": 102614020, "body": "@DenysS&#233;guret - I don&#39;t know about arenas. So, I am not using those. Or is it something in std?"}, {"owner": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "edited": false, "score": 0, "creation_date": 1569486381, "post_id": 58110081, "comment_id": 102614834, "body": "@GurwinderSingh I&#39;m on MacOS 10.14.6. I&#39;ve tested on linux and it starts with 150MB for 1 thread and tops at 1G regardless of the number of threads."}, {"owner": {"reputation": 35470, "user_id": 6348498, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/0zu4m.jpg?s=128&g=1", "display_name": "Gurwinder Singh", "link": "https://stackoverflow.com/users/6348498/gurwinder-singh"}, "reply_to_user": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "edited": false, "score": 0, "creation_date": 1569487285, "post_id": 58110081, "comment_id": 102615298, "body": "@SvetlinZarev - Weird. I am using Ubuntu 18.04 on WSL. I also tried jemallocator explicitly. It then use ~1.1GB"}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 2, "creation_date": 1569487329, "post_id": 58110081, "comment_id": 102615327, "body": "How are you measuring the amount of memory in use?"}, {"owner": {"reputation": 35470, "user_id": 6348498, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/0zu4m.jpg?s=128&g=1", "display_name": "Gurwinder Singh", "link": "https://stackoverflow.com/users/6348498/gurwinder-singh"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 1, "creation_date": 1569487396, "post_id": 58110081, "comment_id": 102615364, "body": "@loganfsmyth I can see the WSL processes in Windows&#39; task manager"}, {"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 1, "creation_date": 1569488489, "post_id": 58110081, "comment_id": 102615969, "body": "This is most weird: if you comment out the line <code>println!(&quot;{} reloaded&quot;, i);</code>, then the memory consumption stays constant as seen in <code>top</code>&#39;s res memory column."}, {"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 0, "creation_date": 1569489025, "post_id": 58110081, "comment_id": 102616252, "body": "This seems to be a really, really old <a href=\"https://github.com/rust-lang/rust/issues/19776\" rel=\"nofollow noreferrer\">bug</a>, which says print statement may leak memory."}, {"owner": {"reputation": 35470, "user_id": 6348498, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/0zu4m.jpg?s=128&g=1", "display_name": "Gurwinder Singh", "link": "https://stackoverflow.com/users/6348498/gurwinder-singh"}, "reply_to_user": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 0, "creation_date": 1569490651, "post_id": 58110081, "comment_id": 102617207, "body": "@edwardw For me, it doesn&#39;t stay constant even with removing println. However It does take a bit more time to increase in usage. I guess that&#39;s probably because previous threads are not letting the other threads to get mutex lock."}, {"owner": {"reputation": 35470, "user_id": 6348498, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/0zu4m.jpg?s=128&g=1", "display_name": "Gurwinder Singh", "link": "https://stackoverflow.com/users/6348498/gurwinder-singh"}, "edited": false, "score": 0, "creation_date": 1569490680, "post_id": 58110081, "comment_id": 102617222, "body": "I have run it without println for about 1 minute and memory usage is 4 GB"}, {"owner": {"reputation": 7560, "user_id": 1034749, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2022f0caae119ed6232cf370bb9d9d3a?s=128&d=identicon&r=PG", "display_name": "fghj", "link": "https://stackoverflow.com/users/1034749/fghj"}, "edited": false, "score": 4, "creation_date": 1569501038, "post_id": 58110081, "comment_id": 102622741, "body": "Try on Linux run environment variable <code>MALLOC_ARENA_MAX=2</code> you binary, this reduce RSS from 3gb to 200mb on my linux amd64 box."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "reply_to_user": {"reputation": 7560, "user_id": 1034749, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2022f0caae119ed6232cf370bb9d9d3a?s=128&d=identicon&r=PG", "display_name": "fghj", "link": "https://stackoverflow.com/users/1034749/fghj"}, "edited": false, "score": 0, "creation_date": 1569502351, "post_id": 58110081, "comment_id": 102623451, "body": "@fghj so this might very well be related to the allocator giving by default an arena per thread (depending on the OS)."}, {"owner": {"reputation": 35470, "user_id": 6348498, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/0zu4m.jpg?s=128&g=1", "display_name": "Gurwinder Singh", "link": "https://stackoverflow.com/users/6348498/gurwinder-singh"}, "reply_to_user": {"reputation": 7560, "user_id": 1034749, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2022f0caae119ed6232cf370bb9d9d3a?s=128&d=identicon&r=PG", "display_name": "fghj", "link": "https://stackoverflow.com/users/1034749/fghj"}, "edited": false, "score": 0, "creation_date": 1569506462, "post_id": 58110081, "comment_id": 102625920, "body": "@fghj OMG yes. that was it.. The memory usage is much better now :) You can add that as answer and I&#39;ll accept it. Thank you so much. I have spent so much time on this."}, {"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 0, "creation_date": 1569507239, "post_id": 58110081, "comment_id": 102626446, "body": "The same thing happened to java code if you use direct <code>ByteBuffer</code>: <code>public synchronized void update() { ByteBuffer direct = ByteBuffer.allocateDirect(1024 * 1024 * 16); }</code>. So this particular memory usage pattern does demand the tuning of <code>MALLOC_ARENA_MAX</code> settings."}], "answers": [{"tags": [], "owner": {"reputation": 7560, "user_id": 1034749, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2022f0caae119ed6232cf370bb9d9d3a?s=128&d=identicon&r=PG", "display_name": "fghj", "link": "https://stackoverflow.com/users/1034749/fghj"}, "is_accepted": true, "score": 3, "last_activity_date": 1569510339, "creation_date": 1569510339, "answer_id": 58119742, "question_id": 58110081, "link": "https://stackoverflow.com/questions/58110081/why-multiple-threads-using-too-much-memory-when-holding-mutex/58119742#58119742", "title": "Why multiple threads using too much memory when holding Mutex", "body": "<p>So the problem was in the big numbers of glibc's malloc arenas,\nevery arena has cache of preallocated memory. The simple way to check it is running binary with <code>MALLOC_ARENA_MAX=2</code>, but final solution depend on usage pattern, there are a lot variables to tune glibc's allocator: <a href=\"http://man7.org/linux/man-pages/man3/mallopt.3.html\" rel=\"nofollow noreferrer\">http://man7.org/linux/man-pages/man3/mallopt.3.html</a> .</p>\n\n<p>Java virtual machine is also actually affected by malloc's allocator. From my experience some time it is suitable to configure number of arenas to prevent huge memory usage of jvm inside docker.</p>\n"}], "owner": {"reputation": 35470, "user_id": 6348498, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/0zu4m.jpg?s=128&g=1", "display_name": "Gurwinder Singh", "link": "https://stackoverflow.com/users/6348498/gurwinder-singh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 513, "favorite_count": 1, "accepted_answer_id": 58119742, "answer_count": 1, "score": 4, "last_activity_date": 1569510339, "creation_date": 1569475534, "question_id": 58110081, "link": "https://stackoverflow.com/questions/58110081/why-multiple-threads-using-too-much-memory-when-holding-mutex", "title": "Why multiple threads using too much memory when holding Mutex", "body": "<p>Below code uses ~150MB in single thread but uses several GBs in 100 threads:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::sync::{Arc, Mutex};\nuse std::thread;\n\nfn main() {\n    let f = Arc::new(Mutex::new(Foo::new(\"hello\")));\n\n    let mut threads = vec![];\n    for i in 0..100 {\n        let f = f.clone();\n        let t = thread::spawn(move || loop {\n            let mut locked = f.lock().unwrap();\n            *locked = Foo::new(\"hello\");\n            drop(locked);\n            println!(\"{} reloaded\", i);\n            thread::yield_now();\n        });\n        threads.push(t);\n    }\n\n    threads.into_iter().for_each(|h| h.join().unwrap());\n}\n\npub struct Foo {\n    _data: Vec&lt;String&gt;,\n}\n\nimpl Foo {\n    fn new(s: &amp;str) -&gt; Foo {\n        Foo {\n            _data: vec![s.to_owned(); 1024 * 1024],\n        }\n    }\n}\n</code></pre>\n\n<p>While holding the <code>LockGuard</code>, a thread should have exclusive access. So, new <code>Foo</code> should be allocated and old value should be dropped at that point. So, it doesn't make any sense to me this much memory is being used when called from multiple threads.</p>\n\n<p>Can anyone please explain why this code is using this much memory?</p>\n\n<p>Similar code in Java keeps memory ~200mb even with 1000 threads.</p>\n\n<pre class=\"lang-java prettyprint-override\"><code>import java.util.ArrayList;\nimport java.util.List;\n\npublic class Foo {\n    private List&lt;String&gt; data;\n\n    public static void main(String[] args) {\n        Foo f = new Foo();\n        for (int i = 0; i &lt; 1000; i++) {\n            int n = i;\n            new Thread(() -&gt; {\n                while (true) {\n                    f.update();\n                    System.gc();\n                    System.out.println(n + \" updated\");\n                }\n            }).start();\n        }\n    }\n\n    public synchronized void update() {\n        data = new ArrayList&lt;&gt;(1024 * 1024);\n        for (int i = 0; i &lt; 1024 * 1024; i++) {\n            data.add(new String(\"hello\"));\n        }\n    }\n}\n</code></pre>\n"}]