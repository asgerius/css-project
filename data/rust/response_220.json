[{"tags": ["generics", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1553711769, "post_id": 55384233, "comment_id": 97490555, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/44912349/155423\">How can I avoid a ripple effect from changing a concrete struct to generic?</a> or <a href=\"https://stackoverflow.com/q/28932450/155423\">How can I have a collection of objects that differ by their associated type?</a>. If you disagree, please <b><a href=\"https://stackoverflow.com/posts/55384233/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 2173, "user_id": 1804656, "user_type": "registered", "accept_rate": 36, "profile_image": "https://www.gravatar.com/avatar/47ea159b5819a724a31a95f8dd1fc037?s=128&d=identicon&r=PG", "display_name": "kyle", "link": "https://stackoverflow.com/users/1804656/kyle"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1553713911, "post_id": 55384233, "comment_id": 97491565, "body": "The <code>dyn Trait</code> is very similar to what I am looking for but it doesn&#39;t seem to address when the Trait has associated types. The other question suggests to use an enum; however, that complicates the ability for registering new processors."}, {"owner": {"reputation": 7942, "user_id": 516188, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/934a553983eaca4c3f8f939daf6d2faa?s=128&d=identicon&r=PG", "display_name": "Emmanuel Touzery", "link": "https://stackoverflow.com/users/516188/emmanuel-touzery"}, "edited": false, "score": 0, "creation_date": 1615482569, "post_id": 55384233, "comment_id": 117710308, "body": "I believe this is relevant: <a href=\"https://stackoverflow.com/a/58681952/516188\">stackoverflow.com/a/58681952/516188</a> seems this is not possible in rust."}], "owner": {"reputation": 2173, "user_id": 1804656, "user_type": "registered", "accept_rate": 36, "profile_image": "https://www.gravatar.com/avatar/47ea159b5819a724a31a95f8dd1fc037?s=128&d=identicon&r=PG", "display_name": "kyle", "link": "https://stackoverflow.com/users/1804656/kyle"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 238, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1553718162, "creation_date": 1553711344, "last_edit_date": 1553718162, "question_id": 55384233, "link": "https://stackoverflow.com/questions/55384233/how-to-have-dynamic-generic-types-or-dynamic-traits-with-associated-types", "title": "How to have dynamic generic types or dynamic Traits with associated types?", "body": "<p>Is it possible to omit or pass some \"any\" type?</p>\n\n<p>I want to be able to define a single \"queue\" which can be used by registering processors for the different jobs. Similar to <a href=\"https://github.com/OptimalBits/bull\" rel=\"nofollow noreferrer\">how bull queue</a> in Node works.</p>\n\n<p>The queue shouldn't care about the <code>&lt;P, R&gt;</code> generics on the processors. Its only job would be to enqueue a job, get the processor for that job (associated with the \"name\" the processor is registered with) and forward the job to it.</p>\n\n<p>However, the <code>processors</code> property on the <code>Queue</code> struct needs some generic type to be passed to it. I tried to get around this by using a trait, but I am kind of back where I started.</p>\n\n<p>I think I am trying to mimic the TypeScript <code>any</code> type.</p>\n\n<p>I have seen suggestions to use an enum which would specify the different job types; however, this would complicate the processor of creating a reusable queue imo.</p>\n\n<p>If I were to do this, instead of letting the user just register different processors, they would have to register them as well as modifying the enum for the new job type. Additionally, since the jobs are matched based on the associated processor, there wouldn't be the benefit to pattern matching.</p>\n\n<p>The dyn Trait seems to be what I am looking for. However, I don't see how it works when the trait has associated types.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Debug)]\nstruct JobOptions {}\n\n#[allow(unused)]\n#[derive(Debug)]\nstruct Job&lt;P, R&gt; {\n    processor: String,\n    payload: Box&lt;P&gt;,\n    response: Option&lt;Box&lt;R&gt;&gt;,\n    options: Option&lt;JobOptions&gt;,\n    status: JobStatus,\n}\n\n#[allow(unused)]\nstruct Processor&lt;P, R&gt; {\n    name: String,\n    queue: VecDeque&lt;Rc&lt;Cell&lt;Job&lt;P, R&gt;&gt;&gt;&gt;,\n}\n\ntrait JobProcessor {\n    type Payload;\n    type Response;\n}\n\nimpl&lt;P, R&gt; JobProcessor for Processor&lt;P, R&gt; {\n    type Payload = P;\n    type Response = R;\n}\n\n#[derive(Default)]\nstruct Queue {\n    processors: HashMap&lt;String, Rc&lt;Cell&lt;JobProcessor&lt;?, ?&gt;&gt;&gt;&gt;,\n}\n</code></pre>\n"}, {"tags": ["rust", "rust-rocket"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 10, "last_activity_date": 1566408135, "last_edit_date": 1566408135, "creation_date": 1553712748, "answer_id": 55384564, "question_id": 55384204, "link": "https://stackoverflow.com/questions/55384204/how-can-i-pass-a-variable-initialized-in-main-to-a-rocket-route-handler/55384564#55384564", "title": "How can I pass a variable initialized in main to a Rocket route handler?", "body": "<p>Please read the <a href=\"https://rocket.rs/v0.4/guide/\" rel=\"noreferrer\">Rocket documentation</a>, specifically the <a href=\"https://rocket.rs/v0.4/guide/state/#state\" rel=\"noreferrer\">section on state</a>. </p>\n\n<p>Use <a href=\"https://docs.rs/rocket/0.4.2/rocket/struct.State.html\" rel=\"noreferrer\"><code>State</code></a> and <a href=\"https://docs.rs/rocket/0.4.2/rocket/struct.Rocket.html#method.manage\" rel=\"noreferrer\"><code>Rocket::manage</code></a> to have shared state:</p>\n\n<pre><code>#![feature(proc_macro_hygiene, decl_macro)]\n\n#[macro_use]\nextern crate rocket; // 0.4.2\n\nuse rocket::State;\n\nstruct RedisThing(i32);\n\n#[get(\"/\")]\nfn index(redis: State&lt;RedisThing&gt;) -&gt; String {\n    redis.0.to_string()\n}\n\nfn main() {\n    let redis = RedisThing(42);\n\n    rocket::ignite()\n        .manage(redis)\n        .mount(\"/\", routes![index])\n        .launch();\n}\n</code></pre>\n\n<p>If you want to mutate the value inside the <code>State</code>, you will need to wrap it in a <code>Mutex</code> or other type of thread-safe interior mutability.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/52801244/155423\">Compiler says that data cannot be shared between threads safely even though the data is wrapped within a Mutex</a></li>\n<li><a href=\"https://stackoverflow.com/q/45674479/155423\">Need holistic explanation about Rust&#39;s cell and reference counted types</a></li>\n<li><a href=\"https://stackoverflow.com/q/42849210/155423\">Share i32 mutably between threads</a></li>\n</ul>\n\n<blockquote>\n  <p>this problem would be solvable by using global variables.</p>\n</blockquote>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/27791532/155423\">How do I create a global, mutable singleton?</a></li>\n</ul>\n"}], "owner": {"reputation": 620, "user_id": 7879896, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/r7KcY.png?s=128&g=1", "display_name": "Max", "link": "https://stackoverflow.com/users/7879896/max"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1160, "favorite_count": 1, "accepted_answer_id": 55384564, "answer_count": 1, "score": 11, "last_activity_date": 1566408135, "creation_date": 1553711220, "last_edit_date": 1553713745, "question_id": 55384204, "link": "https://stackoverflow.com/questions/55384204/how-can-i-pass-a-variable-initialized-in-main-to-a-rocket-route-handler", "title": "How can I pass a variable initialized in main to a Rocket route handler?", "body": "<p>I have a variable that gets initialized in <code>main</code> (line 9) and I want to access a reference to this variable inside of one of my route handlers.</p>\n\n<pre><code>#[get(\"/\")]\nfn index() -&gt; String {\n    return fetch_data::fetch(format!(\"posts\"), &amp;redis_conn).unwrap(); // How can I get redis_conn?\n}\n\nfn main() {\n    let redis_conn = fetch_data::get_redis_connection(); // initialized here\n\n    rocket::ignite().mount(\"/\", routes![index]).launch();\n}\n</code></pre>\n\n<p>In other languages, this problem would be solvable by using global variables.</p>\n"}, {"tags": ["rust", "operator-overloading", "traits"], "comments": [{"owner": {"reputation": 1, "user_id": 11268123, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ba2c4b54aa103909c69f827ecdd4df95?s=128&d=identicon&r=PG&f=1", "display_name": "user11268123", "link": "https://stackoverflow.com/users/11268123/user11268123"}, "edited": false, "score": 0, "creation_date": 1553710834, "post_id": 55383984, "comment_id": 97490068, "body": "Your code can&#39;t be compiled: <code>rust-call ABI is subject to change (see issue #29625)</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1553710915, "post_id": 55383984, "comment_id": 97490117, "body": "Yes, it requires nightly Rust, just as your code does (<a href=\"https://doc.rust-lang.org/std/boxed/trait.FnBox.html\" rel=\"nofollow noreferrer\"><code>FnBox</code></a> is unstable). For your specific code, it <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=8ff285110e23695867fb29e3d773ffc5\" rel=\"nofollow noreferrer\">already works as you want it to</a>"}], "owner": {"reputation": 1, "user_id": 11268123, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ba2c4b54aa103909c69f827ecdd4df95?s=128&d=identicon&r=PG&f=1", "display_name": "user11268123", "link": "https://stackoverflow.com/users/11268123/user11268123"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 285, "favorite_count": 0, "closed_date": 1553710579, "answer_count": 0, "score": 0, "last_activity_date": 1553710601, "creation_date": 1553710418, "question_id": 55383984, "link": "https://stackoverflow.com/questions/55383984/how-to-overload-call-operator-for-custom-defined-type-in-rust", "closed_reason": "Duplicate", "title": "How to overload call operator for custom defined type in Rust?", "body": "<p>How to overload call operator for this custom defined type:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>type Task = Box&lt;dyn FnBox + Send + 'static&gt;;\n</code></pre>\n\n<p>So I can do <code>task()</code> and it will call function inside box.</p>\n"}, {"tags": ["rust", "msgpack"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1553684852, "post_id": 55375588, "comment_id": 97473404, "body": "Data serialization and deserialization is usually best done using <a href=\"//serde.rs\" rel=\"nofollow noreferrer\">Serde</a>, which has an implementation for Messagepack."}], "answers": [{"tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 6, "last_activity_date": 1553694194, "last_edit_date": 1553694194, "creation_date": 1553688133, "answer_id": 55376723, "question_id": 55375588, "link": "https://stackoverflow.com/questions/55375588/what-is-the-rust-equivalent-of-a-javascript-object-when-encoding-with-msgpack/55376723#55376723", "title": "What is the Rust equivalent of a JavaScript object when encoding with msgpack?", "body": "<blockquote>\n  <p>What is the Rust equivalent of a JavaScript object</p>\n</blockquote>\n\n<p>That is a <code>HashMap</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use rmp_serde::{Deserializer, Serializer, encode::StructMapWriter};\nuse serde::{Deserialize, Serialize};\n\nuse std::collections::HashMap;\n\n#[derive(Debug, Serialize, Deserialize)]\npub struct Test {\n    a: u32,\n    b: u32,\n}\n\nfn main() {\n    let mut buf = Vec::new();\n    let mut val = HashMap::new();\n    val.insert(\"a\", 3);\n    val.insert(\"b\", 5);\n    val.serialize(&amp;mut Serializer::new(&amp;mut buf)).unwrap();\n    println!(\"{:x?}\", buf);\n\n    let test: Test = Deserialize::deserialize(&amp;mut Deserializer::new(&amp;buf[..])).unwrap();\n\n    println!(\"{:?}\", test);\n\n    buf.clear();\n    test.serialize(&amp;mut Serializer::with(&amp;mut buf, StructMapWriter))\n        .unwrap();\n\n    println!(\"{:x?}\", buf);\n}\n</code></pre>\n\n<p>This gives the expected output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[82, a1, 61, 3, a1, 62, 5]\nTest { a: 3, b: 5 }\n[82, a1, 61, 3, a1, 62, 5]\n</code></pre>\n\n<p>As you can see, you can deserialize into something other than a <code>HashMap</code> but serialization will not produce the same thing because you \"lost\" the information that it was a <code>HashMap</code>. The <a href=\"https://docs.rs/rmp-serde/0.13.7/rmp_serde/encode/struct.Serializer.html#method.new\" rel=\"nofollow noreferrer\">default</a> of rmp is to use compact serialization (\"This is the default constructor, which returns a serializer that will serialize structs using compact tuple representation, without field names.\"), but you can tell to rmp to serialize it differently if you need to with <code>StructMapWriter</code>.</p>\n"}], "owner": {"reputation": 711, "user_id": 4914568, "user_type": "registered", "accept_rate": 67, "profile_image": "https://lh6.googleusercontent.com/-sPuWYwZq4T8/AAAAAAAAAAI/AAAAAAAAAAA/g7OO9YxrOxg/photo.jpg?sz=128", "display_name": "pd176", "link": "https://stackoverflow.com/users/4914568/pd176"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 403, "favorite_count": 0, "accepted_answer_id": 55376723, "answer_count": 1, "score": 1, "last_activity_date": 1553694194, "creation_date": 1553684398, "last_edit_date": 1553690572, "question_id": 55375588, "link": "https://stackoverflow.com/questions/55375588/what-is-the-rust-equivalent-of-a-javascript-object-when-encoding-with-msgpack", "title": "What is the Rust equivalent of a JavaScript object when encoding with msgpack?", "body": "<p>I'm trying to port a JavaScript <a href=\"https://github.com/kawanet/msgpack-lite\" rel=\"nofollow noreferrer\">library</a> which uses msgpack for encoding JavaScript objects to Rust. I found a Rust library for msgpack encoding/decoding, but I don't get what is the equivalent input format in Rust. </p>\n\n<p>This JavaScript code for encoding the object <code>{\"a\": 5, \"b\": 6}</code> \ngives the output <code>82 a1 61 03 a1 62 05</code>:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>const msgpack = require(\"msgpack-lite\");\nmsgpack.encode(obj);\n</code></pre>\n\n<p>I tried representing the object as a Rust struct and encoding it using <a href=\"https://docs.rs/rmp-serde/0.13.7/rmp_serde/\" rel=\"nofollow noreferrer\">rmp-serde</a> library</p>\n\n<pre><code>use rmp_serde::{Deserializer, Serializer};\nuse serde::{Deserialize, Serialize};\n\n#[derive(Debug, Serialize, Deserialize)]\npub struct Test {\n    a: u32,\n    b: u32,\n}\n\nfn main() {\n    let mut buf = Vec::new();\n    let val = Test { a: 3, b: 5 };\n    val.serialize(&amp;mut Serializer::new(&amp;mut buf)).unwrap();\n    println!(\"{:?}\", buf);\n}\n</code></pre>\n\n<p>I get the output <code>[146, 3, 5]</code>. How do I represent JSON input in Rust?</p>\n"}, {"tags": ["types", "rust", "iterator"], "answers": [{"comments": [{"owner": {"reputation": 1093, "user_id": 3642914, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/034a47abb43659aba14fef3ff0eff17c?s=128&d=identicon&r=PG", "display_name": "Leonora Tindall", "link": "https://stackoverflow.com/users/3642914/leonora-tindall"}, "edited": false, "score": 0, "creation_date": 1553633039, "post_id": 55365835, "comment_id": 97455383, "body": "I understand your example (why <code>fn a(x: Iterator&lt;...&gt;)</code> does not work), but I don&#39;t see the connection. Does my <code>.into()</code> call create an unsized type?  Anyway, <code>IntoIterator</code> does solve my problem; thanks!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1093, "user_id": 3642914, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/034a47abb43659aba14fef3ff0eff17c?s=128&d=identicon&r=PG", "display_name": "Leonora Tindall", "link": "https://stackoverflow.com/users/3642914/leonora-tindall"}, "edited": false, "score": 1, "creation_date": 1553633200, "post_id": 55365835, "comment_id": 97455455, "body": "@LeonoraTindall <i>Does my <code>.into()</code> call create an unsized type?</i> \u2014 yes."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1553640823, "last_edit_date": 1553640823, "creation_date": 1553632723, "answer_id": 55365835, "question_id": 55365706, "link": "https://stackoverflow.com/questions/55365706/intoiterator-vs-iterator-for-online-algorithms/55365835#55365835", "title": "Into&lt;Iterator&gt; vs Iterator for online algorithms", "body": "<p>Use <a href=\"https://doc.rust-lang.org/std/iter/trait.IntoIterator.html\" rel=\"nofollow noreferrer\"><code>IntoIterator</code></a> instead:</p>\n\n<pre><code>fn decode&lt;'a&gt;(input: impl IntoIterator&lt;Item = &amp;'a u8&gt; + 'a) -&gt; impl Iterator&lt;Item = i16&gt; + 'a {\n    input.into_iter().map(|b| i16::from(*b)).filter(|i| *i != 0)\n}\n</code></pre>\n\n<hr>\n\n<p><a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html\" rel=\"nofollow noreferrer\"><code>Iterator</code></a> is a trait and traits do not have a size. This is why you cannot (yet) write:</p>\n\n<pre><code>fn example(x: Iterator&lt;Item = ()&gt;) {}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the size for values of type `(dyn std::iter::Iterator&lt;Item=()&gt; + 'static)` cannot be known at compilation time\n --&gt; src/lib.rs:1:12\n  |\n1 | fn example(x: Iterator&lt;Item = ()&gt;) {}\n  |            ^ doesn't have a size known at compile-time\n  |\n  = help: the trait `std::marker::Sized` is not implemented for `(dyn std::iter::Iterator&lt;Item=()&gt; + 'static)`\n  = note: to learn more, visit &lt;https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait&gt;\n  = note: all local variables must have a statically known size\n  = help: unsized locals are gated as an unstable feature\n</code></pre>\n\n<p><a href=\"https://doc.rust-lang.org/std/convert/trait.Into.html\" rel=\"nofollow noreferrer\"><code>Into</code></a> is defined as:</p>\n\n<pre><code>pub trait Into&lt;T&gt; {\n    fn into(self) -&gt; T;\n}\n</code></pre>\n\n<p>Something implementing <code>Into&lt;dyn Iterator&gt;</code> would have to have the function <code>fn into(self) -&gt; dyn Iterator</code>, returning a trait. Since there's no size to a trait, it cannot (yet) be returned, stored in a variable, or accepted as an argument.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/28044231/155423\">What does &quot;Sized is not implemented&quot; mean?</a></li>\n</ul>\n"}], "owner": {"reputation": 1093, "user_id": 3642914, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/034a47abb43659aba14fef3ff0eff17c?s=128&d=identicon&r=PG", "display_name": "Leonora Tindall", "link": "https://stackoverflow.com/users/3642914/leonora-tindall"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 225, "favorite_count": 0, "accepted_answer_id": 55365835, "answer_count": 1, "score": 1, "last_activity_date": 1553640823, "creation_date": 1553632081, "last_edit_date": 1553632429, "question_id": 55365706, "link": "https://stackoverflow.com/questions/55365706/intoiterator-vs-iterator-for-online-algorithms", "title": "Into&lt;Iterator&gt; vs Iterator for online algorithms", "body": "<p>I'm writing an online algorithm, implemented with a series of functions which take iterators and produce iterators.</p>\n\n<p>When I write the function like thus (the content being more sophisticated but not different in terms of types):</p>\n\n<pre><code>fn decode&lt;'a, T&gt;(input: T) -&gt; impl Iterator&lt;Item = i16&gt; + 'a\nwhere\n    T: Iterator&lt;Item = &amp;'a u8&gt; + 'a,\n{\n    input.map(|b| i16::from(*b)).filter(|i| *i != 0)\n}\n</code></pre>\n\n<p>See the <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=679400e17e22dc440b46eb0166b40569\" rel=\"nofollow noreferrer\">playground</a>.</p>\n\n<p>However, this makes calling the function unergonomic:</p>\n\n<pre><code>let input: Vec&lt;u8&gt; = vec![1, 2, 3, 0];\nlet v: Vec&lt;i16&gt; = decode(input.iter()).collect();\n</code></pre>\n\n<p>I'd prefer to use <code>T: Into&lt;Iterator&lt;...</code>, but I can't. When I write the signature thus:</p>\n\n<pre><code>fn decode&lt;'a, T&gt;(input: T) -&gt; impl Iterator&lt;Item = i16&gt; + 'a\nwhere\n    T: Into&lt;Iterator&lt;Item = &amp;'a u8&gt;&gt; + 'a,\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e15b183f958fd1597d614939089f7bd3\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>I get an error saying that the return type's size is not known at compile time:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the size for values of type `(dyn std::iter::Iterator&lt;Item=&amp;'a u8&gt; + 'static)` cannot be known at compilation time\n --&gt; src/main.rs:1:1\n  |\n1 | / fn decode&lt;'a, T&gt;(input: T) -&gt; impl Iterator&lt;Item = i16&gt; + 'a\n2 | | where\n3 | |     T: Into&lt;Iterator&lt;Item = &amp;'a u8&gt;&gt; + 'a,\n4 | | {\n5 | |     input.into().map(|b| i16::from(*b)).filter(|i| *i != 0)\n6 | | }\n  | |_^ doesn't have a size known at compile-time\n  |\n  = help: the trait `std::marker::Sized` is not implemented for `(dyn std::iter::Iterator&lt;Item=&amp;'a u8&gt; + 'static)`\n  = note: to learn more, visit &lt;https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait&gt;\n  = note: required by `std::convert::Into`\n</code></pre>\n\n<p>Why is this, and is there a better way?</p>\n"}, {"tags": ["rust", "serde"], "comments": [{"owner": {"reputation": 470, "user_id": 1226590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b54dc922fda9b1a13507e2eb499ceee8?s=128&d=identicon&r=PG", "display_name": "Thom", "link": "https://stackoverflow.com/users/1226590/thom"}, "edited": false, "score": 9, "creation_date": 1553627906, "post_id": 55363975, "comment_id": 97453213, "body": "You should add enable serde derive macros by adding the following to you cargo.toml <code>[dependencies] serde = { version = &quot;1.0&quot;, features = [&quot;derive&quot;] }</code>"}], "owner": {"reputation": 469, "user_id": 11161211, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b7d255d12b02e2999b61b9eed3d89dbd?s=128&d=identicon&r=PG", "display_name": "Alex", "link": "https://stackoverflow.com/users/11161211/alex"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 844, "favorite_count": 1, "closed_date": 1553626258, "answer_count": 0, "score": 5, "last_activity_date": 1553625565, "creation_date": 1553624829, "last_edit_date": 1553625398, "question_id": 55363975, "link": "https://stackoverflow.com/questions/55363975/how-can-i-fix-cannot-find-derive-macro-deserialize-in-this-scope", "closed_reason": "Duplicate", "title": "How can I fix cannot find derive macro `Deserialize` in this scope?", "body": "<p>I ran this code on my previous desktop and it worked fine:</p>\n\n<pre><code>use serde::Deserialize;\n\n#[derive(Deserialize)]\nstruct Foo {\n    bar: i64,\n}\n\nfn main() {}\n</code></pre>\n\n<p>Cargo.toml:</p>\n\n<pre><code>[dependencies]\nserde = \"1.0\"\n</code></pre>\n\n<p>but now I see </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: cannot find derive macro `Deserialize` in this scope\n  --&gt; src/main.rs:1:5\n   |\n2  | #[derive(Deserialize)]\n   |          ^^^^^^^^^^^\n\nwarning: unused import: `serde::Deserialize`\n  --&gt; src/main.rs:2:10\n   |\n1  | use serde::Deserialize;\n   |     ^^^^^^^^^^^^^^^^^^\n   |\n   = note: #[warn(unused_imports)] on by default\n</code></pre>\n\n<p>What can cause the issue? I'm using Rust 1.33.0.</p>\n"}, {"tags": ["rust", "pattern-matching", "borrow-checker"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1553620042, "post_id": 55362584, "comment_id": 97449244, "body": "Remove every hint: <code>let x = match entry { Entry::Dir { mtime } | Entry::File { mtime, .. } =&gt; mtime };</code>"}, {"owner": {"reputation": 1936, "user_id": 1584012, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/382084cea852ce1fd7c613db8e3bfcbe?s=128&d=identicon&r=PG", "display_name": "wigy", "link": "https://stackoverflow.com/users/1584012/wigy"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1553675293, "post_id": 55362584, "comment_id": 97467676, "body": "Fixed title. Fixed grammar. Answered in a comment. And THEN closed as duplicate. You are my hero, @Shepmaster for all the service you are doing for the Rust community"}], "owner": {"reputation": 1936, "user_id": 1584012, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/382084cea852ce1fd7c613db8e3bfcbe?s=128&d=identicon&r=PG", "display_name": "wigy", "link": "https://stackoverflow.com/users/1584012/wigy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 36, "favorite_count": 0, "closed_date": 1553620002, "answer_count": 0, "score": 0, "last_activity_date": 1553619900, "creation_date": 1553619732, "last_edit_date": 1553619802, "question_id": 55362584, "link": "https://stackoverflow.com/questions/55362584/how-do-i-transform-a-pattern-match-to-use-rust-2018s-automatic-borrowing", "closed_reason": "Duplicate", "title": "How do I transform a pattern match to use Rust 2018&#39;s automatic borrowing?", "body": "<p>Is there a way to transform the <code>match</code> statement in the following code to the simplified 2018 edition syntax with automatic borrows? </p>\n\n<pre><code>enum Entry {\n    Dir { mtime: i64 },\n    File { mtime: i64, _size: u64 },\n}\n\nfn touch(entry: &amp;mut Entry, mtime: i64) {\n    let x: &amp;mut i64 = match *entry {\n        Entry::Dir { ref mut mtime } =&gt; mtime,\n        Entry::File { ref mut mtime, .. } =&gt; mtime,\n    };\n    *x = mtime;\n}\n\nfn main() {\n    let mut entry1 = Entry::Dir { mtime: 0 };\n    touch(&amp;mut entry1, 1);\n\n    let mut entry2 = Entry::File {\n        mtime: 0,\n        _size: 1024,\n    };\n    touch(&amp;mut entry2, 1);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b3b27a0b95c147b1246d1ae2c62bffc6\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>This is what I tried, but the lifetime of the references were limited to the end of the <code>match</code> statement.</p>\n\n<pre><code>let x: &amp;mut i64 = match entry {\n    Entry::Dir { mut mtime } =&gt; &amp;mut mtime,\n    Entry::File { mut mtime, .. } =&gt; &amp;mut mtime,\n};\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `mtime` does not live long enough\n  --&gt; src/main.rs:8:37\n   |\n7  |     let x: &amp;mut i64 = match entry {\n   |         - borrow later stored here\n8  |         Entry::Dir { mut mtime } =&gt; &amp;mut mtime,\n   |                                     ^^^^^^^^^^ borrowed value does not live long enough\n9  |         Entry::File { mut mtime, .. } =&gt; &amp;mut mtime,\n10 |     };\n   |     - `mtime` dropped here while still borrowed\n</code></pre>\n"}, {"tags": ["multithreading", "rust", "mutex", "ffi"], "comments": [{"owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "edited": false, "score": 0, "creation_date": 1553598036, "post_id": 55353805, "comment_id": 97434683, "body": "Try to replace <code>log.clone()</code> (cloning root logger) with <code>log.new(o!())</code> (build a child logger). (<a href=\"https://docs.rs/slog/2.4.1/slog/struct.Logger.html#method.new\" rel=\"nofollow noreferrer\">Logger::new</a> docs)"}, {"owner": {"reputation": 4335, "user_id": 314784, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/c9414b15cfad914b3e8af1bf40f01c13?s=128&d=identicon&r=PG", "display_name": "Ben Ruijl", "link": "https://stackoverflow.com/users/314784/ben-ruijl"}, "reply_to_user": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "edited": false, "score": 0, "creation_date": 1553598227, "post_id": 55353805, "comment_id": 97434822, "body": "This does not help unfortunately. Explicitly creating new child loggers (<code>vec![log.new(o!()), log.new(o!()),...]</code> also does not help."}], "answers": [{"comments": [{"owner": {"reputation": 4335, "user_id": 314784, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/c9414b15cfad914b3e8af1bf40f01c13?s=128&d=identicon&r=PG", "display_name": "Ben Ruijl", "link": "https://stackoverflow.com/users/314784/ben-ruijl"}, "edited": false, "score": 0, "creation_date": 1553604917, "post_id": 55357483, "comment_id": 97438993, "body": "I wrote the Rust cuba bindings, and I know it&#39;s not perfect. I didn&#39;t find a better way to get some form of memory safety other than letting the user use the core id that the C cuba library hands over. Do you think the issue is in the bindings or in the way that Cuba handles its multithreading? Regarding async, I think the issue is a concurrent memory access issue since my program runs for several minutes and should generate quite some output."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 4335, "user_id": 314784, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/c9414b15cfad914b3e8af1bf40f01c13?s=128&d=identicon&r=PG", "display_name": "Ben Ruijl", "link": "https://stackoverflow.com/users/314784/ben-ruijl"}, "edited": false, "score": 0, "creation_date": 1553605562, "post_id": 55357483, "comment_id": 97439500, "body": "@BenRuijl I don&#39;t know enough about the underlying code to really provide effective guidance. How are Cuba&#39;s threads started? If they aren&#39;t via pthreads (or equivalent OS mechanism that Rust is using for <code>thread::spawn</code>), I could totally see that the <code>Mutex</code> wouldn&#39;t lock as expected because bookkeeping data wasn&#39;t set up correctly on whatever thread it was using."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 4335, "user_id": 314784, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/c9414b15cfad914b3e8af1bf40f01c13?s=128&d=identicon&r=PG", "display_name": "Ben Ruijl", "link": "https://stackoverflow.com/users/314784/ben-ruijl"}, "edited": false, "score": 3, "creation_date": 1553605634, "post_id": 55357483, "comment_id": 97439550, "body": "@BenRuijl <i>I didn&#39;t find a better way to get some form of memory safety</i> \u2014 if you expose memory unsafety to your users, you need to mark your functions unsafe and explain how the users are intended to avoid the unsafety. Making the code appear safe when it isn&#39;t does a disservice to everyone."}, {"owner": {"reputation": 4335, "user_id": 314784, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/c9414b15cfad914b3e8af1bf40f01c13?s=128&d=identicon&r=PG", "display_name": "Ben Ruijl", "link": "https://stackoverflow.com/users/314784/ben-ruijl"}, "edited": false, "score": 0, "creation_date": 1553606277, "post_id": 55357483, "comment_id": 97439988, "body": "Apparently the Cuba parallelization is based on the fork/wait POSIX functions instead of pthreads (<a href=\"https://arxiv.org/abs/1408.6373\" rel=\"nofollow noreferrer\">arxiv.org/abs/1408.6373</a>). Do you have an idea how I can make it apparent to Rust that the callback function is called from different forks?"}, {"owner": {"reputation": 4335, "user_id": 314784, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/c9414b15cfad914b3e8af1bf40f01c13?s=128&d=identicon&r=PG", "display_name": "Ben Ruijl", "link": "https://stackoverflow.com/users/314784/ben-ruijl"}, "edited": false, "score": 0, "creation_date": 1553607147, "post_id": 55357483, "comment_id": 97440607, "body": "Thanks for your update. I suppose logging to different files is the easiest option then..."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 8, "last_activity_date": 1553609997, "last_edit_date": 1553609997, "creation_date": 1553604145, "answer_id": 55357483, "question_id": 55353805, "link": "https://stackoverflow.com/questions/55353805/rust-mutex-is-not-working-when-using-a-callback-function-from-multiple-c-threads/55357483#55357483", "title": "Rust Mutex is not working when using a callback function from multiple C threads created by `fork`", "body": "<p>The Cuba C library <a href=\"http://www.feynarts.de/cuba/\" rel=\"nofollow noreferrer\">has this to say</a>:</p>\n\n<blockquote>\n  <p>Windows users: Cuba 3 and up uses <code>fork(2)</code> to parallelize the execution threads. This POSIX function is not part of the Windows API, however, and is furthermore used in an essential way such that it cannot be worked around simply with <code>CreateProcess</code> etc. The only feasible emulation seems to be available through Cygwin.</p>\n</blockquote>\n\n<p>Here's a reproduction of the code. We <code>fork</code> and then the child and the parent attempt to hold the mutex while printing stuff out. A <code>sleep</code> is inserted to encourage the OS scheduler to try other threads:</p>\n\n<pre><code>use nix::unistd::{fork, ForkResult}; // 0.13.0\nuse std::{sync::Mutex, thread, time::Duration};\n\nfn main() {\n    let shared = Mutex::new(10);\n\n    match fork() {\n        Ok(ForkResult::Parent { .. }) =&gt; {\n            let max = shared.lock().unwrap();\n            for _ in 0..*max {\n                println!(\"Parent\");\n                thread::sleep(Duration::from_millis(10));\n            }\n        }\n        Ok(ForkResult::Child) =&gt; {\n            let max = shared.lock().unwrap();\n            for _ in 0..*max {\n                println!(\"Child\");\n                thread::sleep(Duration::from_millis(10));\n            }\n        }\n        Err(e) =&gt; {\n            eprintln!(\"Error: {}\", e);\n        }\n    }\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo run\n\nParent\nChild\nParent\nChild\nChild\nParent\nChild\nParent\nChild\nParent\nChild\nParent\nChild\nParent\nChild\nParent\nChild\nParent\nChild\nParent\n</code></pre>\n\n<p>Using <code>fork</code> with threads is <em>really</em> a pain to deal with; I distinctly remember hunting down terrible problems related to this before. Two resources I found that go in depth:</p>\n\n<ul>\n<li><a href=\"https://brauner.github.io/2018/03/04/locking-in-shared-libraries.html\" rel=\"nofollow noreferrer\">Mutexes And fork()ing In Shared Libraries</a></li>\n<li><a href=\"https://github.com/angrave/SystemProgramming/wiki/Synchronization,-Part-1:-Mutex-Locks\" rel=\"nofollow noreferrer\">Synchronization, Part 1: Mutex Locks</a></li>\n</ul>\n\n<p>The latter says (emphasis mine):</p>\n\n<blockquote>\n  <p>Can I create mutex before fork-ing?</p>\n  \n  <p>Yes - however the child and parent process will <strong>not share virtual memory and each one will have a mutex independent of the other</strong>.</p>\n  \n  <p>(Advanced note: There are advanced options using shared memory that allow a child and parent to share a mutex if it's created with the correct options and uses a shared memory segment. See <a href=\"https://stackoverflow.com/questions/19172541/procs-fork-and-mutexes\">procs, fork(), and mutexes</a>)</p>\n</blockquote>\n\n<hr>\n\n<blockquote>\n  <p>If I use the async drain I get no output at all.</p>\n</blockquote>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/47342036/155423\">Why doesn&#39;t a lazy_static slog::Logger print until a non-static logger is used?</a></li>\n</ul>\n\n<hr>\n\n<p>I would <strong>not</strong> trust the Cuba Rust library. There are two main points:</p>\n\n<ol>\n<li><p>If there are threads being created, the user data generic type should have either a <code>Sync</code> or <code>Send</code> bound on it, restricting to only types that are safe to share / transfer the data between threads.</p></li>\n<li><p>The user data passed to the <code>integrand</code> function should <strong>not</strong> be a <code>&amp;mut</code>. A fundamental Rust concept is that there can only be a single mutable reference to any piece of data at any time. Cuba trivially allows you to circumvent this.</p></li>\n</ol>\n\n<p>Here's an attempted reproduction of the Cuba Rust and C libraries:</p>\n\n<pre><code>#[macro_use]\nextern crate slog;\n\nuse slog::Drain;\n\nfn integrand(loggers: &amp;mut Vec&lt;slog::Logger&gt;, core: i32) {\n    info!(loggers[core as usize], \"A\\nB\\nC\\n{}\", core);\n}\n\nfn main() {\n    let decorator = slog_term::TermDecorator::new().build();\n    let drain = slog_term::CompactFormat::new(decorator).build();\n    let drain = std::sync::Mutex::new(drain).fuse();\n\n    let log = slog::Logger::root(drain, o!());\n\n    let logs = vec![log.clone(); 11];\n\n    cuba_repro(logs, integrand);\n}\n\nuse std::{ffi::c_void, thread};\n\ntype Integrand&lt;T&gt; = fn(&amp;mut T, i32);\n\nfn cuba_repro&lt;T&gt;(mut user_data: T, mut integrand: Integrand&lt;T&gt;) {\n    // From the `vegas` method\n    let user_data_ptr = &amp;mut user_data as *mut _ as *mut c_void;\n    let integrand_ptr = &amp;mut integrand as *mut _ as *mut c_void;\n\n    unsafe { cuba_repro_ffi::&lt;T&gt;(user_data_ptr, integrand_ptr) }\n}\n\nunsafe fn cuba_repro_ffi&lt;T&gt;(user_data: *const c_void, integrand: *const c_void) {\n    let user_data = FfiDoesNotCareAboutSendOrSync(user_data);\n    let integrand = FfiDoesNotCareAboutSendOrSync(integrand);\n\n    let threads: Vec&lt;_&gt; = (0..4).map(move |i| {\n        thread::spawn(move || {\n            // C doesn't care about this pedantry\n            let user_data = &amp;mut *(user_data.0 as *const T as *mut T);\n            let integrand = &amp;mut *(integrand.0 as *const Integrand&lt;T&gt; as *mut Integrand&lt;T&gt;);\n\n            // From the `c_integrand` function\n            let k: &amp;mut T = &amp;mut *(user_data as *mut _);\n            let _ignored = integrand(k, i);\n        })\n    }).collect();\n\n    for t in threads { t.join().unwrap() }\n}\n\n#[derive(Copy, Clone)]\nstruct FfiDoesNotCareAboutSendOrSync&lt;T&gt;(T);\nunsafe impl&lt;T&gt; Send for FfiDoesNotCareAboutSendOrSync&lt;T&gt; {}\nunsafe impl&lt;T&gt; Sync for FfiDoesNotCareAboutSendOrSync&lt;T&gt; {}\n</code></pre>\n\n<p>I had to make <em>numerous</em> changes to get the Rust compiler to ignore the huge amount of unsafety and rule-breaking that the Cuba library and related FFI is performing.</p>\n\n<p>This code example <em>does</em> actually print out 4 log statements each in order, so this is not a complete answer. However, I'm fairly certain that the Cuba library is triggering undefined behavior, which means that any outcome is possible, including apparently working.</p>\n"}], "owner": {"reputation": 4335, "user_id": 314784, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/c9414b15cfad914b3e8af1bf40f01c13?s=128&d=identicon&r=PG", "display_name": "Ben Ruijl", "link": "https://stackoverflow.com/users/314784/ben-ruijl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 509, "favorite_count": 0, "accepted_answer_id": 55357483, "answer_count": 1, "score": 4, "last_activity_date": 1553609997, "creation_date": 1553592916, "last_edit_date": 1553606778, "question_id": 55353805, "link": "https://stackoverflow.com/questions/55353805/rust-mutex-is-not-working-when-using-a-callback-function-from-multiple-c-threads", "title": "Rust Mutex is not working when using a callback function from multiple C threads created by `fork`", "body": "<p>I am using the C library Cuba which uses a callback function that is called from multiple threads created in C. The Cuba parallelization is based on the <code>fork</code>/<code>wait</code> POSIX functions instead of pthreads (<a href=\"https://arxiv.org/abs/1408.6373\" rel=\"nofollow noreferrer\">arxiv.org/abs/1408.6373</a>). It gives the current thread in the <code>core</code> parameter.</p>\n\n<p>I am trying to log results from this callback function to a screen and a file. If I use <code>println!</code> I get expected output, but if I use <code>slog</code> the output is mangled when I use a <code>Mutex</code> drain. If I use the <code>async</code> drain I get no output at all.</p>\n\n<p>Is the <code>Mutex</code> not locking since it can't see the function is actually called from another thread? I tried to recreate the problem with Rust threads, but couldn't. Preferably I'd like to get the <code>async</code> drain to work.</p>\n\n<p>Below is an example program that gives the problematic behaviour. The callback gets the last parameter of the <code>vegas</code> function as one of its arguments. This is a vector of clones of loggers. This way, each core should have its own copy of the logger:</p>\n\n<pre><code>#[macro_use]\nextern crate slog;\nextern crate cuba;\nextern crate slog_term;\n\nuse slog::Drain;\n\n// this function is called from different c threads\n// `core` indicates which thread\nfn integrand(\n    _x: &amp;[f64],\n    _f: &amp;mut [f64],\n    loggers: &amp;mut Vec&lt;slog::Logger&gt;,\n    _nvec: usize,\n    core: i32,\n) -&gt; Result&lt;(), &amp;'static str&gt; {\n    info!(loggers[core as usize], \"A\\nB\\nC\");\n\n    Ok(())\n}\n\nfn main() {\n    let decorator = slog_term::TermDecorator::new().build();\n    let drain = slog_term::CompactFormat::new(decorator).build();\n    let drain = std::sync::Mutex::new(drain).fuse();\n\n    let log = slog::Logger::root(drain, o!());\n\n    let mut integrator = cuba::CubaIntegrator::new(integrand);\n    integrator.set_cores(10, 1000); // set 10 cores\n\n    integrator.vegas(\n        1,\n        1,\n        cuba::CubaVerbosity::Progress,\n        0,\n        vec![log.clone(); 11],\n    );\n}\n</code></pre>\n\n<p>Output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>C \nINFO Mar 26A\nB\nC 10:27\n:42.195 MarINFO 26  10:27A\nB\nC:42.195\n MarINFO 26  10:27A\nB\nC:42.195\n INFO A\nB\nC\nMar 26 10:27:42.196 INFO A\nB\nC\nMar 26 10:27:42.196 INFO A\nB\nC\n</code></pre>\n"}, {"tags": ["enums", "rust", "match", "println", "arity"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1553563816, "post_id": 55348613, "comment_id": 97421942, "body": "You have a typo. You meant <code>Clock::Sundial(10)</code> \u2014 <b>two</b> colons."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1553563830, "post_id": 55348613, "comment_id": 97421948, "body": "Idiomatic Rust uses <code>snake_case</code> for variables, methods, macros, fields and modules; <code>UpperCamelCase</code> for types and enum variants; and <code>SCREAMING_SNAKE_CASE</code> for statics and constants. Use <code>tell_time</code> instead, please."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1553563994, "post_id": 55348613, "comment_id": 97421971, "body": "Note that this does <b>not</b> match on arity \u2014 that&#39;s not possible. This matches on the <b>name</b> of the enum variant. The variants happen to have different arity, but they don&#39;t need to."}, {"owner": {"reputation": 15015, "user_id": 1191635, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/I8bEt.jpg?s=128&g=1", "display_name": "Armeen Harwood", "link": "https://stackoverflow.com/users/1191635/armeen-harwood"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1553564166, "post_id": 55348613, "comment_id": 97422004, "body": "I bought your series btw ;) I&#39;m literally going through it lol. I&#39;m sure you noticed lol"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1553564293, "post_id": 55348613, "comment_id": 97422025, "body": "That&#39;s wonderful! I did think to myself that the sundial example seemed familiar, but I chalked it up to just being a common example ^_^"}], "owner": {"reputation": 15015, "user_id": 1191635, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/I8bEt.jpg?s=128&g=1", "display_name": "Armeen Harwood", "link": "https://stackoverflow.com/users/1191635/armeen-harwood"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 173, "favorite_count": 0, "closed_date": 1553563796, "answer_count": 0, "score": 0, "last_activity_date": 1553563923, "creation_date": 1553563695, "last_edit_date": 1553563863, "question_id": 55348613, "link": "https://stackoverflow.com/questions/55348613/what-is-type-ascription-referring-to-in-this-case", "closed_reason": "Duplicate", "title": "What is &quot;type ascription&quot; referring to in this case?", "body": "<p>What is error ascription referring to in this case and how can I fix my code to println based on the arity passed in?</p>\n\n<p>Running the code below throws the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: expected type, found `10`\n  --&gt; src/main.rs:21:27\n   |\n21 |    tellTime(Clock:Sundial(10));\n   |                           ^^ expecting a type here because of type ascription\n</code></pre>\n\n<p><strong>main.rs:</strong></p>\n\n<pre><code>enum Clock {\n    Sundial(u8),\n    Digital(u8, u8),\n    Analog(u8, u8, u8),\n}\n\nfn tellTime(clock: Clock) {\n    match clock {\n      Clock::Sundial(hours) =&gt;\n          println!(\"Time is: {}\", hours),\n      Clock::Digital(hours, mins) =&gt;\n          println!(\"Time is: {}:{}\", hours, mins),\n      Clock::Analog(hours, mins, secs) =&gt;\n          println!(\"Time is: {}:{}:{}\", hours, mins, secs),\n      _ =&gt; println!(\"Not a clock!\")\n\n    }\n\n}\nfn main() {\n   tellTime(Clock:Sundial(10));\n}\n</code></pre>\n"}, {"tags": ["rust", "clap"], "comments": [{"owner": {"reputation": 100768, "user_id": 1899640, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/47374ccb28e4b0d2454b64f7b975bc66?s=128&d=identicon&r=PG", "display_name": "that other guy", "link": "https://stackoverflow.com/users/1899640/that-other-guy"}, "edited": false, "score": 2, "creation_date": 1553545476, "post_id": 55345730, "comment_id": 97416591, "body": "Please take this opportunity to commit to a choice between <code>system(3)</code> semantics that expect a single argument with a shell command (like <code>su</code>, <code>ssh</code> and <code>parallel</code>) and <code>execve(2)</code> semantics that expect multiple separate arguments (like <code>sudo</code>, <code>xargs</code>, <code>find</code>). Don&#39;t try to accept both versions, it&#39;s only fragile and confusing."}, {"owner": {"reputation": 809, "user_id": 1647226, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/fb84d2df934999fc747feb4d7c758e2c?s=128&d=identicon&r=PG", "display_name": "Marcelo Boeira", "link": "https://stackoverflow.com/users/1647226/marcelo-boeira"}, "reply_to_user": {"reputation": 100768, "user_id": 1899640, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/47374ccb28e4b0d2454b64f7b975bc66?s=128&d=identicon&r=PG", "display_name": "that other guy", "link": "https://stackoverflow.com/users/1899640/that-other-guy"}, "edited": false, "score": 0, "creation_date": 1553545828, "post_id": 55345730, "comment_id": 97416736, "body": "@thatotherguy I&#39;ll read about it! Thanks for the info! I was aware of such patterns but unaware they had name/specifications. Awesome!"}], "answers": [{"comments": [{"owner": {"reputation": 809, "user_id": 1647226, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/fb84d2df934999fc747feb4d7c758e2c?s=128&d=identicon&r=PG", "display_name": "Marcelo Boeira", "link": "https://stackoverflow.com/users/1647226/marcelo-boeira"}, "edited": false, "score": 0, "creation_date": 1553548119, "post_id": 55345899, "comment_id": 97417619, "body": "Works partially, so if you try something with flags doesn&#39;t work, unfortunately,   e.g.: <code>foo -u jack ls -al</code> fails because of the <code>-al</code> at the end."}, {"owner": {"reputation": 29810, "user_id": 423170, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/H9kNQ.png?s=128&g=1", "display_name": "Frxstrem", "link": "https://stackoverflow.com/users/423170/frxstrem"}, "reply_to_user": {"reputation": 809, "user_id": 1647226, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/fb84d2df934999fc747feb4d7c758e2c?s=128&d=identicon&r=PG", "display_name": "Marcelo Boeira", "link": "https://stackoverflow.com/users/1647226/marcelo-boeira"}, "edited": false, "score": 0, "creation_date": 1553548894, "post_id": 55345899, "comment_id": 97417948, "body": "@MarceloBoeira To distinguish arguments from options, you can use a double dash <code>--</code>, after which none of the arguments will be interpreted as options: <code>foo -u jack -- ls -al</code>. It might also be able to tell clap to not parse options after the first non-option argument, but I&#39;m not certain about that."}, {"owner": {"reputation": 809, "user_id": 1647226, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/fb84d2df934999fc747feb4d7c758e2c?s=128&d=identicon&r=PG", "display_name": "Marcelo Boeira", "link": "https://stackoverflow.com/users/1647226/marcelo-boeira"}, "edited": false, "score": 0, "creation_date": 1553549059, "post_id": 55345899, "comment_id": 97418004, "body": "I&#39;m actually considering dropping clap, because it seems easier to do it without it, do something like  <code>foo user command</code>"}, {"owner": {"reputation": 29810, "user_id": 423170, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/H9kNQ.png?s=128&g=1", "display_name": "Frxstrem", "link": "https://stackoverflow.com/users/423170/frxstrem"}, "reply_to_user": {"reputation": 809, "user_id": 1647226, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/fb84d2df934999fc747feb4d7c758e2c?s=128&d=identicon&r=PG", "display_name": "Marcelo Boeira", "link": "https://stackoverflow.com/users/1647226/marcelo-boeira"}, "edited": false, "score": 4, "creation_date": 1553549094, "post_id": 55345899, "comment_id": 97418019, "body": "@MarceloBoeira Looking over the documentation, it looks like <a href=\"https://docs.rs/clap/2.32.0/clap/enum.AppSettings.html#variant.TrailingVarArg\" rel=\"nofollow noreferrer\"><code>.setting(AppSettings::TrailingVarArg)</code></a> does exactly that."}, {"owner": {"reputation": 809, "user_id": 1647226, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/fb84d2df934999fc747feb4d7c758e2c?s=128&d=identicon&r=PG", "display_name": "Marcelo Boeira", "link": "https://stackoverflow.com/users/1647226/marcelo-boeira"}, "edited": false, "score": 0, "creation_date": 1553677317, "post_id": 55345899, "comment_id": 97468795, "body": "It&#39;s not that simple, the Trailing VarArg allows that, but you still have to do some parsing yourself..."}, {"owner": {"reputation": 663, "user_id": 3090404, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0834a4a38b102493a11cbe1742d08dc1?s=128&d=identicon&r=PG&f=1", "display_name": "njam", "link": "https://stackoverflow.com/users/3090404/njam"}, "edited": false, "score": 0, "creation_date": 1593789683, "post_id": 55345899, "comment_id": 110910999, "body": "Using both <a href=\"https://docs.rs/clap/2.33.1/clap/enum.AppSettings.html\" rel=\"nofollow noreferrer\"><code>AppSettings::TrailingVarArg</code></a> and <a href=\"https://docs.rs/clap/2.33.1/clap/enum.AppSettings.html#variant.AllowLeadingHyphen\" rel=\"nofollow noreferrer\"><code>AllowLeadingHyphen</code></a> it&#39;s possible to parse remaining args like <code>-al</code> without using <code>--</code>. Updated the answer."}], "tags": [], "owner": {"reputation": 29810, "user_id": 423170, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/H9kNQ.png?s=128&g=1", "display_name": "Frxstrem", "link": "https://stackoverflow.com/users/423170/frxstrem"}, "is_accepted": true, "score": 4, "last_activity_date": 1593941238, "last_edit_date": 1593941238, "creation_date": 1553545634, "answer_id": 55345899, "question_id": 55345730, "link": "https://stackoverflow.com/questions/55345730/how-can-i-prevent-the-last-argument-from-needing-to-be-quoted-with-clap/55345899#55345899", "title": "How can I prevent the last argument from needing to be quoted with clap?", "body": "<p>By default, clap will only parse any argument once. This means that in <code>-u jack echo s</code>, it will parse <code>-u jack</code> as the &quot;user&quot; option, <code>echo</code> as the &quot;command&quot; argument, and have an argument <code>s</code> that it doesn't know what to do with (hence it &quot;wasn't expected&quot;).</p>\n<p>To retrieve <strong>all trailing arguments</strong> you need to set <a href=\"https://docs.rs/clap/2.33.1/clap/struct.Arg.html#method.multiple\" rel=\"nofollow noreferrer\"><code>.multiple(true)</code></a> on the last argument (in your case &quot;command&quot;) so it parses all the remaining arguments.\nAdditionally set the following options on the clap command to avoid parsing remaining arguments as clap arguments:</p>\n<ul>\n<li><a href=\"https://docs.rs/clap/2.33.1/clap/enum.AppSettings.html#variant.TrailingVarArg\" rel=\"nofollow noreferrer\"><code>.setting(AppSettings::TrailingVarArg)</code></a>: to indicate that clap should stop parsing for other flags/options after the last positional argument.</li>\n<li><a href=\"https://docs.rs/clap/2.33.1/clap/enum.AppSettings.html#variant.AllowLeadingHyphen\" rel=\"nofollow noreferrer\"><code>.setting(AppSettings::AllowLeadingHyphen)</code></a>: to allow argument values with leading hyphens like <code>-al</code>.</li>\n</ul>\n<p>Here's an example:</p>\n<pre><code>let matches = App::new(&quot;foo&quot;)\n    .version(&quot;0.1&quot;)\n    .setting(clap::AppSettings::TrailingVarArg)\n    .setting(clap::AppSettings::AllowLeadingHyphen)\n    .arg(\n        Arg::with_name(&quot;user&quot;)\n            .short(&quot;u&quot;)\n            .long(&quot;user&quot;)\n            .required(true)\n            .takes_value(true),\n    )\n    .arg(\n        Arg::with_name(&quot;command&quot;)\n            .help(&quot;The command to run&quot;)\n            .required(true)\n            .takes_value(true)\n            .multiple(true),\n    )\n    // parse as if program ran as:   foo -u paul ls -al\n    .get_matches_from(&amp;[&quot;foo&quot;, &quot;-u&quot;, &quot;paul&quot;, &quot;ls&quot;, &quot;-al&quot;]);\n\nlet command: Vec&lt;&amp;str&gt; = matches.values_of(&quot;command&quot;).unwrap().collect();\nprintln!(&quot;{:?}&quot;, command); // [&quot;ls&quot;, &quot;-al&quot;]\n</code></pre>\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=353a5238fcfff611f85103619be1c1a1\" rel=\"nofollow noreferrer\">Playground link</a></p>\n\n"}], "owner": {"reputation": 809, "user_id": 1647226, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/fb84d2df934999fc747feb4d7c758e2c?s=128&d=identicon&r=PG", "display_name": "Marcelo Boeira", "link": "https://stackoverflow.com/users/1647226/marcelo-boeira"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 496, "favorite_count": 1, "accepted_answer_id": 55345899, "answer_count": 1, "score": 1, "last_activity_date": 1593941238, "creation_date": 1553544843, "last_edit_date": 1553545078, "question_id": 55345730, "link": "https://stackoverflow.com/questions/55345730/how-can-i-prevent-the-last-argument-from-needing-to-be-quoted-with-clap", "title": "How can I prevent the last argument from needing to be quoted with clap?", "body": "<p>I'm using clap and I get a unexpected behaviour when trying to parse arguments. </p>\n\n<p>My command line tool is supposed to work like this</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>foo -u &lt;user&gt; &lt;command&gt;\n</code></pre>\n\n<p>e.g.:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>foo -u jack echo s\nfoo -u paul ls -al\n</code></pre>\n\n<p>I need to get options such as user, but the <code>&lt;command&gt;</code> itself, I need to be the rest of the args.</p>\n\n<p>The code below results in a behavior where I can't get the value of <code>&lt;command&gt;</code> unless it is quoted:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>foo -u jack echo s\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: Found argument 's' which wasn't expected, or isn't valid in this context\n</code></pre>\n\n<p>Whereas this works fine:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>foo -u jack 'echo s'\n</code></pre>\n\n<p>Is there any way of avoiding the quotes?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let matches = App::new(\"foo\")\n    .version(\"0.1\")\n    .arg(\n        Arg::with_name(\"user\")\n            .short(\"u\")\n            .long(\"user\")\n            .required(true)\n            .takes_value(true),\n    )\n    .arg(\n        Arg::with_name(\"command\")\n            .help(\"The command to run\")\n            .required(true)\n            .takes_value(true),\n    )\n    .get_matches();\n</code></pre>\n\n<p>I've also opened an <a href=\"https://github.com/clap-rs/clap/issues/1344\" rel=\"nofollow noreferrer\">issue on the clap repository</a>.</p>\n"}, {"tags": ["rust", "contravariance"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1553544074, "last_edit_date": 1553544074, "creation_date": 1553542227, "answer_id": 55345150, "question_id": 55344893, "link": "https://stackoverflow.com/questions/55344893/what-is-an-example-of-contravariant-use-in-rust/55345150#55345150", "title": "What is an example of contravariant use in Rust?", "body": "<p><a href=\"https://stackoverflow.com/q/55200843/155423\">Rust's notion of subtyping <strong>only applies to lifetimes</strong>.</a></p>\n\n<hr>\n\n<p>Searching for the term \"contra\" on <a href=\"https://doc.rust-lang.org/1.33.0/nomicon/subtyping.html\" rel=\"noreferrer\">the page you linked</a> has numerous relevant paragraphs:</p>\n\n<blockquote>\n  <p>Actually witnessing contravariance is quite difficult in Rust, though it does in fact exist.</p>\n</blockquote>\n\n\n\n<blockquote>\n  <p>NOTE: the only source of contravariance in the language is the arguments to a function, which is why it really doesn't come up much in practice. Invoking contravariance involves higher-order programming with function pointers that take references with specific lifetimes (as opposed to the usual \"any lifetime\", which gets into higher rank lifetimes, which work independently of subtyping).</p>\n</blockquote>\n\n\n\n<blockquote>\n  <p>And that's why function types, unlike anything else in the language, are contravariant over their arguments.</p>\n</blockquote>\n\n<p>The page ends with an example of all the types of contravariance. Applying it...</p>\n\n<h3>Contravariance</h3>\n\n<pre><code>struct MyContraType&lt;Mixed&gt; {\n    k1: fn(Mixed), // contravariant over Mixed\n}\n\nfn contra_example&lt;'short&gt;(\n    mut a: MyContraType&lt;&amp;'short u8&gt;,\n    mut b: MyContraType&lt;&amp;'static u8&gt;,\n    x: fn(&amp;'short u8),\n    y: fn(&amp;'static u8),\n) {\n    a.k1 = x;\n    a.k1 = y; // Fails\n    b.k1 = x;\n    b.k1 = y;\n}\n</code></pre>\n\n<p>The contravariant example does not allow substituting <code>'static</code> for <code>'short</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/lib.rs:12:12\n   |\n12 |     a.k1 = y;\n   |            ^ lifetime mismatch\n   |\n   = note: expected type `fn(&amp;'short u8)`\n              found type `fn(&amp;'static u8)`\nnote: the lifetime 'short as defined on the function body at 5:19...\n  --&gt; src/lib.rs:5:19\n   |\n5  | fn contra_example&lt;'short&gt;(\n   |                   ^^^^^^\n   = note: ...does not necessarily outlive the static lifetime\n</code></pre>\n\n<h3>Covariance</h3>\n\n<pre><code>struct MyCoType&lt;Mixed&gt; {\n    k1: fn() -&gt; Mixed, // covariant over Mixed\n}\n\nfn co_example&lt;'short&gt;(\n    mut a: MyCoType&lt;&amp;'short u8&gt;,\n    mut b: MyCoType&lt;&amp;'static u8&gt;,\n    x: fn() -&gt; &amp;'short u8,\n    y: fn() -&gt; &amp;'static u8,\n) {\n    a.k1 = x;\n    a.k1 = y;\n    b.k1 = x; // Fails\n    b.k1 = y;\n}\n</code></pre>\n\n<p>The covariant example does not allow substituting <code>'short</code> for <code>'static</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/lib.rs:29:12\n   |\n29 |     b.k1 = x;\n   |            ^ lifetime mismatch\n   |\n   = note: expected type `fn() -&gt; &amp;'static u8`\n              found type `fn() -&gt; &amp;'short u8`\nnote: the lifetime 'short as defined on the function body at 21:15...\n  --&gt; src/lib.rs:21:15\n   |\n21 | fn co_example&lt;'short&gt;(\n   |               ^^^^^^\n   = note: ...does not necessarily outlive the static lifetime\n</code></pre>\n"}], "owner": {"reputation": 312, "user_id": 4698744, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/312aff37c23ffb8d89050337b8c6f4fb?s=128&d=identicon&r=PG&f=1", "display_name": "LVB", "link": "https://stackoverflow.com/users/4698744/lvb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 388, "favorite_count": 0, "accepted_answer_id": 55345150, "answer_count": 1, "score": 0, "last_activity_date": 1553544228, "creation_date": 1553540971, "last_edit_date": 1553544228, "question_id": 55344893, "link": "https://stackoverflow.com/questions/55344893/what-is-an-example-of-contravariant-use-in-rust", "title": "What is an example of contravariant use in Rust?", "body": "<p>In the <a href=\"https://doc.rust-lang.org/1.33.0/nomicon/subtyping.html\" rel=\"nofollow noreferrer\">Nomicon's section about subtyping</a>, it says contravariance is available for a function pointer type.  However, I can't find any good examples of this.  I tried to code a struct with a function pointer, but the contravariance doesn't seem to work.  </p>\n\n<p>What is a code example of this?</p>\n"}, {"tags": ["rust", "gtk3", "gio", "gtk-rs"], "owner": {"reputation": 31, "user_id": 11254808, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-6IdH9o-yXZA/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rf8mhOoDYdacqCpRj9xLww2jEmT7A/mo/photo.jpg?sz=128", "display_name": "dosch", "link": "https://stackoverflow.com/users/11254808/dosch"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 466, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1553540150, "creation_date": 1553539808, "last_edit_date": 1553540150, "question_id": 55344630, "link": "https://stackoverflow.com/questions/55344630/how-to-connect-buttons-to-actions-in-custom-simpleactiongroups-in-gtk-rs", "title": "How to connect Buttons to Actions in custom SimpleActionGroups in gtk-rs?", "body": "<p>I'd like to use a SimpleActionGroup registered to a Widget that handles SimpleActions. But anyhow every Button that targets to Actions with my custom prefix are grayed out and can't be clicked. However Buttons that are targeting the action prefixes \"app\" and \"win\" are working as expected.</p>\n\n<p><a href=\"https://i.stack.imgur.com/Acnnt.png\" rel=\"nofollow noreferrer\">Application with two Buttons</a></p>\n\n<p>Here is the part in my code where my custom prefix is defined.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// Create action group for view\nlet view_action_group = gio::SimpleActionGroup::new();\nview.insert_action_group(\"view\", &amp;view_action_group);\n\n// SimpleAction for view\nlet view_action = gio::SimpleAction::new(\"test\", None);\nview_action.connect_activate(|_, _| println!(\"view.test\"));\nview_action_group.add_action(&amp;view_action);\n</code></pre>\n\n<p>Here I respond to SimpleActions with prefix \"app\"</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// SimpleAction for app\nlet app_action = gio::SimpleAction::new(\"test\", None);\napp_action.connect_activate(|_, _| println!(\"app.test\"));\napp.add_action(&amp;app_action);\n</code></pre>\n\n<p>The SimpleAction itself should be ok, because if I start the application with GTK Inspector I can activate it.</p>\n\n<p><a href=\"https://i.stack.imgur.com/iHq2s.png\" rel=\"nofollow noreferrer\">GTK Inspector invoking actions</a></p>\n\n<p>So what am I missing that the secound Button is not greyed out and responds to my SimpleAction?</p>\n\n<p>Here is the full code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate gtk;\nextern crate gio;\n\nuse std::env::args;\nuse gtk::{GtkApplicationExt, GtkWindowExt, ContainerExt, WidgetExt, HeaderBarExt, ActionableExt};\nuse gio::{SimpleActionExt, ActionMapExt, ApplicationExt, ApplicationExtManual};\n\nstruct Window {\n    pub window: gtk::Window,\n}\n\nimpl Window {\n    pub fn new() -&gt; Self {\n        // Create Widgets and window\n        let header_bar = gtk::HeaderBar::new();\n        let window = gtk::Window::new(gtk::WindowType::Toplevel);\n        let view = gtk::Box::new(gtk::Orientation::Horizontal, 5);\n        let app_button = gtk::Button::new_with_label(\"App-Action-Button\");\n        let view_button = gtk::Button::new_with_label(\"View-Action-Button\");\n\n        // Create Action Group for view\n        let view_action_group = gio::SimpleActionGroup::new();\n        view.insert_action_group(\"view\", &amp;view_action_group);\n\n        // SimpleAction for view\n        let view_action = gio::SimpleAction::new(\"test\", None);\n        view_action.connect_activate(|_, _| println!(\"view.test\"));\n        view_action_group.add_action(&amp;view_action);\n\n        // Set Action for Buttons\n        app_button.set_action_name(\"app.test\");\n        view_button.set_action_name(\"view.test\");\n\n        // Configure HeaderBar and add Buttons to it\n        header_bar.set_show_close_button(true);\n        header_bar.pack_start(&amp;app_button);\n        header_bar.pack_start(&amp;view_button);\n\n        // Window Stuff\n        window.set_titlebar(&amp;header_bar);\n        window.add(&amp;view);\n        window.show_all();\n\n        Self { window }\n    }\n}\n\nstruct App {\n    app: gtk::Application\n}\n\nimpl App {\n    pub fn new () -&gt; Self {\n\n        // Create app and window\n        let app = gtk::Application::new(Some(\"com.example.test\"), gio::ApplicationFlags::FLAGS_NONE).unwrap();\n        let window = Window::new();\n\n        // SimpleAction for app\n        let app_action = gio::SimpleAction::new(\"test\", None);\n        app_action.connect_activate(|_, _| println!(\"app.test\"));\n        app.add_action(&amp;app_action);\n\n        // add Signal\n        let cloned_window = window.window.clone();\n        app.connect_activate(move |app| app.add_window(&amp;cloned_window));\n\n        Self { app }\n    }\n\n    pub fn run(&amp;self, args: &amp;[String]) {\n        self.app.run(args);\n    }\n\n}\n\n\nfn main() {\n    let app = App::new();\n    app.run(&amp;args().collect::&lt;Vec&lt;_&gt;&gt;());\n}\n</code></pre>\n"}, {"tags": ["rust", "polymorphism", "closures", "lifetime"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1553526552, "post_id": 55340857, "comment_id": 97406736, "body": "See also my <a href=\"https://github.com/shepmaster/peresil\" rel=\"nofollow noreferrer\">parser-combinator library</a> and an <a href=\"https://github.com/shepmaster/fuzzy-pickles\" rel=\"nofollow noreferrer\">example usage</a>."}, {"owner": {"reputation": 4138, "user_id": 30160, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9cc7a433f140236fb55c21d3266cced8?s=128&d=identicon&r=PG", "display_name": "Derrick Turk", "link": "https://stackoverflow.com/users/30160/derrick-turk"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1553539829, "post_id": 55340857, "comment_id": 97413952, "body": "It&#39;s the same as <a href=\"https://github.com/rust-lang/rust/issues/41078\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/41078</a>, isn&#39;t it? Dammit. I&#39;ve been down the trillions-of-structs-masquerading as closures path before. Gives me C++98 &quot;functor&quot; flashbacks. See also: all the various stdlib iterator flavors."}], "answers": [{"tags": [], "owner": {"reputation": 1602, "user_id": 5947247, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f5212b96ae435bb73b9980f34b2913e8?s=128&d=identicon&r=PG&f=1", "display_name": "Isaac van Bakel", "link": "https://stackoverflow.com/users/5947247/isaac-van-bakel"}, "is_accepted": false, "score": 0, "last_activity_date": 1557965322, "creation_date": 1557965322, "answer_id": 56159150, "question_id": 55340857, "link": "https://stackoverflow.com/questions/55340857/blanket-impl-hrtb-and-impl-abstract-return-type-expected-bound-lifetime-pa/56159150#56159150", "title": "Blanket impl, HRTB, and &quot;impl&quot; abstract return type: &quot;expected bound lifetime parameter&quot;", "body": "<blockquote>\n  <p>The way I see it, the closure returned has some ineffable type. This type implements for &lt;'a> Fn(&amp;'a [u8]) -> Result&lt;(&amp;'a [u8], u8), ()> (and the compiler recognizes this).</p>\n</blockquote>\n\n<p>That's only if you specify it.</p>\n\n<p>Consider the function signature without the lifetime information:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn byte(b: u8) -&gt; impl Fn(&amp;[u8]) -&gt; Result&lt;(&amp;[u8], u8), ()&gt;\n</code></pre>\n\n<p>Which, if you write out the elided lifetimes, gives</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn byte&lt;'a&gt;(b: u8) -&gt; impl Fn(&amp;'a [u8]) -&gt; Result&lt;(&amp;'a [u8], u8), ()&gt;\n</code></pre>\n\n<p>This doesn't implement the higher-order <code>for&lt;'a&gt; Fn ...</code> - it only implements the <code>Fn</code> trait for some fixed <code>'a</code>, decided by the caller to <code>byte</code>. </p>\n\n<p>That is the concrete lifetime the compiler is complaining about - where it expects to find a lifetime which is bound by <code>for&lt;...&gt;</code>, it instead finds a lifetime which is already described.</p>\n"}], "owner": {"reputation": 4138, "user_id": 30160, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9cc7a433f140236fb55c21d3266cced8?s=128&d=identicon&r=PG", "display_name": "Derrick Turk", "link": "https://stackoverflow.com/users/30160/derrick-turk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 172, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1557965322, "creation_date": 1553526497, "last_edit_date": 1553526590, "question_id": 55340857, "link": "https://stackoverflow.com/questions/55340857/blanket-impl-hrtb-and-impl-abstract-return-type-expected-bound-lifetime-pa", "title": "Blanket impl, HRTB, and &quot;impl&quot; abstract return type: &quot;expected bound lifetime parameter&quot;", "body": "<p>I started a very small program to play with parser combinators in Rust, and quickly encountered an error I found strange:</p>\n\n<pre><code>trait Parser&lt;T, E&gt; {\n    fn parse&lt;'a&gt;(&amp;self, input: &amp;'a [u8]) -&gt; Result&lt;(&amp;'a [u8], T), E&gt;;\n}\n\nimpl&lt;F, T, E&gt; Parser&lt;T, E&gt; for F\nwhere\n    F: for&lt;'a&gt; Fn(&amp;'a [u8]) -&gt; Result&lt;(&amp;'a [u8], T), E&gt;,\n{\n    fn parse&lt;'a&gt;(&amp;self, input: &amp;'a [u8]) -&gt; Result&lt;(&amp;'a [u8], T), E&gt; {\n        (*self)(input)\n    }\n}\n\n// why can't I write:\n// fn byte(b: u8) -&gt; impl Parser&lt;u8, ()&gt; {\n\n// this works, and the blanket Parser impl picks it up correctly\nfn byte(b: u8) -&gt; impl for&lt;'a&gt; Fn(&amp;'a [u8]) -&gt; Result&lt;(&amp;'a [u8], u8), ()&gt; {\n    move |input: &amp;[u8]| match input.first() {\n        Some(x) if *x == b =&gt; Ok((&amp;input[1..], *x)),\n        _ =&gt; Err(()),\n    }\n}\n\nfn main() {\n    println!(\"{:?}\", byte(b'c').parse(b\"c123\"));\n}\n</code></pre>\n\n<p>The commented-out signature for <code>byte</code> (returning <code>impl Parser&lt;u8, ()&gt;</code>) fails to compile with:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0271]: type mismatch resolving `for&lt;'a&gt; &lt;[closure@parser.rs:14:5: 19:6 b:_] as std::ops::FnOnce&lt;(&amp;'a [u8],)&gt;&gt;::Output == std::result::Result&lt;(&amp;'a [u8], u8), ()&gt;`\n  --&gt; parser.rs:12:19\n   |\n12 | fn byte(b: u8) -&gt; impl Parser&lt;u8, ()&gt; {\n   |                   ^^^^^^^^^^^^^^^^^^^ expected bound lifetime parameter 'a, found concrete lifetime\n   |\n   = note: required because of the requirements on the impl of `Parser&lt;u8, ()&gt;` for `[closure@parser.rs:14:5: 19:6 b:_]`\n   = note: the return type of a function must have a statically known size\n</code></pre>\n\n<p>I understand neither why a bound lifetime parameter was expected, nor what concrete lifetime was found. </p>\n\n<p>The way I see it, the closure returned has some ineffable type. This type implements <code>for &lt;'a&gt; Fn(&amp;'a [u8]) -&gt; Result&lt;(&amp;'a [u8], u8), ()&gt;</code> (and the compiler recognizes this). As a consequence, it should also by the blanket impl implement <code>Parser&lt;u8, ()&gt;</code>, or so I thought.</p>\n"}, {"tags": ["multithreading", "rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1553507235, "post_id": 55334988, "comment_id": 97395078, "body": "<code>mpsc::Sender</code> does not implement <code>Sync</code>. You should use <a href=\"https://docs.rs/crossbeam/0.7.1/crossbeam/channel/struct.Sender.html\" rel=\"nofollow noreferrer\"><code>crossbeam</code></a> instead."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1553507430, "post_id": 55334988, "comment_id": 97395188, "body": "Is that thread supposed to end after the computation is done? In that case you can directly return a value from the thread: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=62a011c6941beed16e6f336fe541e193\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 353, "user_id": 4928212, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/277ff1807fc90b5d93656156b7a29f89?s=128&d=identicon&r=PG", "display_name": "mnzl", "link": "https://stackoverflow.com/users/4928212/mnzl"}, "edited": false, "score": 0, "creation_date": 1553507683, "post_id": 55334988, "comment_id": 97395340, "body": "In the original I tried to start several threads (not in a loop) for computation. I seems this won&#39;t work with the direct return. I will try out crossbeam now."}], "answers": [{"tags": [], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "is_accepted": true, "score": 2, "last_activity_date": 1553514029, "last_edit_date": 1553514029, "creation_date": 1553510721, "answer_id": 55336024, "question_id": 55334988, "link": "https://stackoverflow.com/questions/55334988/get-hashmap-from-thread/55336024#55336024", "title": "Get HashMap from thread", "body": "<p>You can pass the values between threads with using <code>mpsc</code> channel.</p>\n\n<p>Until you tag your <code>thread::spawn</code> with the <code>move</code> keyword like following:</p>\n\n<pre><code>thread::spawn(move || {});\n</code></pre>\n\n<p>Since you did not tag it with move keyword then it is not moving the outer variables into the thread scope but only sharing their references. Thus you need to implement <code>Sync</code> trait that every outer variable you use.</p>\n\n<p><code>mpsc::Sender</code> does not implement <code>Sync</code> that is why you get the error cannot be shared between threads.</p>\n\n<p>The solution for your case would be ideal to move the sender to inside of the thread scope with move like following:</p>\n\n<pre><code>use std::collections::HashMap;\nuse std::sync::mpsc;\nuse std::sync::Arc;\nuse std::sync::Mutex;\nuse std::thread;\n\nfn main() {\n    let (tx, rx) = mpsc::channel();\n\n    thread::spawn(move || {\n        let _ = tx.send(worker());\n    });\n\n    let arc = rx.recv().unwrap();\n    let hashmap_guard = arc.lock().unwrap();\n    print!(\n        \"HashMap that retrieved from thread : {:?}\",\n        hashmap_guard.get(\"Hello\").unwrap()\n    );\n}\n\nfn worker() -&gt; Arc&lt;Mutex&lt;HashMap&lt;String, i32&gt;&gt;&gt; {\n    let mut result: HashMap&lt;String, i32&gt; = HashMap::new();\n    result.insert(\"Hello\".to_string(), 2);\n    // some computation\n    Arc::new(Mutex::new(result))\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=5c084b6f99215de29b2964bd886d19b4\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>For further info: I'd recommend reading <a href=\"http://doc.rust-lang.org/stable/book\" rel=\"nofollow noreferrer\"><em>The Rust Programming Language</em></a>, specifically the <a href=\"https://doc.rust-lang.org/stable/book/ch16-00-concurrency.html\" rel=\"nofollow noreferrer\">chapter on concurrency</a>. In it, you are introduced to <a href=\"http://doc.rust-lang.org/std/sync/struct.Arc.html\" rel=\"nofollow noreferrer\"><code>Arc</code></a>: especially if you want to share your data in between threads.</p>\n"}], "owner": {"reputation": 353, "user_id": 4928212, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/277ff1807fc90b5d93656156b7a29f89?s=128&d=identicon&r=PG", "display_name": "mnzl", "link": "https://stackoverflow.com/users/4928212/mnzl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 349, "favorite_count": 0, "accepted_answer_id": 55336024, "answer_count": 1, "score": 0, "last_activity_date": 1553514029, "creation_date": 1553507073, "last_edit_date": 1553507184, "question_id": 55334988, "link": "https://stackoverflow.com/questions/55334988/get-hashmap-from-thread", "title": "Get HashMap from thread", "body": "<p>I am trying to get a value from a thread, in this case a <code>HashMap</code>. I reduced the code to the following (I originally tried to share a <code>HashMap</code> containig a <code>Vec</code>):</p>\n\n<pre><code>use std::thread;\nuse std::sync::mpsc;\nuse std::sync::Mutex;\nuse std::sync::Arc;\nuse std::collections::HashMap;\n\nfn main() {\n    let(tx, rx) = mpsc::channel();\n\n    let n_handle= thread::spawn( || {\n        tx.send(worker());\n    });\n\n    print!(\"{:?}\", rx.recv().unwrap().into_inner().unwrap());\n}\n\n\nfn worker() -&gt; Arc&lt;Mutex&lt;HashMap&lt;String, i32&gt;&gt;&gt;{\n    let result: HashMap&lt;String, i32&gt; = HashMap::new();\n    // some computation\n    Arc::from(Mutex::from(result))\n}\n</code></pre>\n\n<p>Still Rust says that: </p>\n\n<blockquote>\n  <p><code>std::sync::mpsc::Sender&lt;std::sync::Arc&lt;std::sync::Mutex&lt;std::collections::HashMap&lt;std::string::String, i32&gt;&gt;&gt;&gt;</code> cannot be shared between threads safely</p>\n</blockquote>\n\n<p>I read some confusing stuff about putting everything into <code>Arc&lt;Mutex&lt;..&gt;&gt;</code> which I also tried with the value:    </p>\n\n<pre><code>let result: HashMap&lt;String, Arc&lt;Mutex&lt;i32&gt;&gt;&gt; = HashMap::new();\n</code></pre>\n\n<p>Can anyone point me to a document that explains the usage of the mpsc::channel with values such as HashMaps? I understand why it is not working, as the trait Sync is not implemented for the HashMap, which is required to share the stuff. Still I have no idea how to get it to work.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1553506184, "post_id": 55334451, "comment_id": 97394502, "body": "I don&#39;t like this solution if you are stuck with only std I would use a mutable state: <a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=40f94b06743f016b0d3d26230f339ded\" rel=\"nofollow noreferrer\">play.integer32.com/&hellip;</a> (or implement partition_map yourself ofc)"}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": false, "score": 0, "last_activity_date": 1553505118, "creation_date": 1553505118, "answer_id": 55334451, "question_id": 55334299, "link": "https://stackoverflow.com/questions/55334299/getting-index-of-item-in-partition-function/55334451#55334451", "title": "Getting index of item in partition function", "body": "<p>To get the index while iterating over an <code>Iterator</code> you can use <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.enumerate\" rel=\"nofollow noreferrer\"><code>Iterator::enumerate</code></a>.</p>\n\n<pre><code>let arr = [1, 2, 3, 4];\nlet (a, b): (Vec&lt;_&gt;, Vec&lt;_&gt;) = arr.iter().enumerate().partition(|(i, _)| i % 2 == 0);\n</code></pre>\n\n<p>The problem is to \"unenumerate\" the vector. For this you can use this function:</p>\n\n<pre><code>fn unenumerate&lt;T&gt;(a: impl IntoIterator&lt;Item = (usize, T)&gt;) -&gt; Vec&lt;T&gt; {\n    a.into_iter().map(|(_, e)| e).collect()\n}\n</code></pre>\n\n<p>Combined it will let you get the desired result:</p>\n\n<pre><code>println!(\"{:?} {:?}\", unenumerate(a), unenumerate(b)); // [1, 3] [2, 4]\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 2692, "user_id": 625791, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/996a20b9eae1def21e8db462e9bf1cf7?s=128&d=identicon&r=PG", "display_name": "theduke", "link": "https://stackoverflow.com/users/625791/theduke"}, "edited": false, "score": 0, "creation_date": 1553615384, "post_id": 55334490, "comment_id": 97446380, "body": "Minor comment: would be nice to split the iterator chain into multiple lines to make it more readable."}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 4, "last_activity_date": 1553505372, "last_edit_date": 1553505372, "creation_date": 1553505255, "answer_id": 55334490, "question_id": 55334299, "link": "https://stackoverflow.com/questions/55334299/getting-index-of-item-in-partition-function/55334490#55334490", "title": "Getting index of item in partition function", "body": "<p>A solution could be to use <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.enumerate\" rel=\"nofollow noreferrer\"><code>enumerate</code></a> and <a href=\"https://docs.rs/itertools/*/itertools/trait.Itertools.html#method.partition_map\" rel=\"nofollow noreferrer\"><code>partition_map</code></a> from itertools:</p>\n\n<pre><code>use itertools::{Either, Itertools};\n\nfn main() {\n    let a = vec![1, 2, 3, 4];\n\n    let (b, c): (Vec&lt;_&gt;, Vec&lt;_&gt;) = a.into_iter().enumerate().partition_map(|(i, foo)| {\n        if i % 2 == 0 {\n            Either::Left(foo)\n        } else {\n            Either::Right(foo)\n        }\n    });\n\n    println!(\"{:?}, {:?}\", b, c);\n}\n</code></pre>\n"}], "owner": {"reputation": 2314, "user_id": 4675927, "user_type": "registered", "accept_rate": 17, "profile_image": "https://www.gravatar.com/avatar/285ad1cf46c6c64e7a204b8a9d14cb98?s=128&d=identicon&r=PG", "display_name": "theJian", "link": "https://stackoverflow.com/users/4675927/thejian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 80, "favorite_count": 0, "accepted_answer_id": 55334490, "answer_count": 2, "score": 1, "last_activity_date": 1553505372, "creation_date": 1553504507, "question_id": 55334299, "link": "https://stackoverflow.com/questions/55334299/getting-index-of-item-in-partition-function", "title": "Getting index of item in partition function", "body": "<p>I need to split an array/vector in rust and found <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.partition\" rel=\"nofollow noreferrer\">partition</a> in the document. It looks like the callback function passed to <code>partition</code> only has access to items of the array. How do I get the index of the item? </p>\n\n<p>For example, giving an array <code>[1, 2, 3, 4]</code>, how do I split it into two based on their position so the first one would be <code>[1, 3]</code> because each of them has an even position(1 and 3 has index 0 and 2 which is an even number) and the second would be <code>[2, 4]</code>.</p>\n"}, {"tags": ["linked-list", "rust", "smart-pointers"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 3, "creation_date": 1553524845, "post_id": 55331919, "comment_id": 97405652, "body": "The recently updated <a href=\"https://rust-unofficial.github.io/too-many-lists/\" rel=\"nofollow noreferrer\">Learning Rust with Entirely Too Many Linked Lists</a> contains <a href=\"https://rust-unofficial.github.io/too-many-lists/fourth-iteration.html\" rel=\"nofollow noreferrer\">a section</a> that attempts to solve this <i>exact</i> problem. I <i>strongly</i> recommend you read it. The <a href=\"https://rust-unofficial.github.io/too-many-lists/fourth.html\" rel=\"nofollow noreferrer\">chapter introduction</a> contains the disclaimer: &quot;[T]his chapter is basically a demonstration that this is a very bad idea.&quot;"}], "answers": [{"comments": [{"owner": {"reputation": 739, "user_id": 845762, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/da8c63db24d7e098f7b06185e8d1dbbb?s=128&d=identicon&r=PG", "display_name": "xudifsd", "link": "https://stackoverflow.com/users/845762/xudifsd"}, "edited": false, "score": 0, "creation_date": 1553501231, "post_id": 55332219, "comment_id": 97392120, "body": "What if the definition of Node.next is <code>Option&lt;Box&lt;RefCell&lt;Node&gt;&gt;&gt;</code>, how to iterate over this list?"}, {"owner": {"reputation": 739, "user_id": 845762, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/da8c63db24d7e098f7b06185e8d1dbbb?s=128&d=identicon&r=PG", "display_name": "xudifsd", "link": "https://stackoverflow.com/users/845762/xudifsd"}, "edited": false, "score": 0, "creation_date": 1553507433, "post_id": 55332219, "comment_id": 97395191, "body": "Yes, I&#39;m also very confused with RefCell, without RefCell we can iterate over list using reference only, but will fail with RefCell. I even tried to add a vector of Ref to save the reference, but still can not success."}, {"owner": {"reputation": 14053, "user_id": 2189130, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/trlri.png?s=128&g=1", "display_name": "kmdreko", "link": "https://stackoverflow.com/users/2189130/kmdreko"}, "reply_to_user": {"reputation": 739, "user_id": 845762, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/da8c63db24d7e098f7b06185e8d1dbbb?s=128&d=identicon&r=PG", "display_name": "xudifsd", "link": "https://stackoverflow.com/users/845762/xudifsd"}, "edited": false, "score": 0, "creation_date": 1614438361, "post_id": 55332219, "comment_id": 117388149, "body": "@xudifsd if you try to preserve all the individual <code>Ref</code>s then you essentially create a self-referential struct, see <a href=\"https://stackoverflow.com/a/66400083/2189130\">here</a> for a bit more info about iterating over nested <code>Rc&lt;RefCell&gt;</code>s."}], "tags": [], "owner": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "is_accepted": false, "score": 4, "last_activity_date": 1553527631, "last_edit_date": 1553527631, "creation_date": 1553494883, "answer_id": 55332219, "question_id": 55331919, "link": "https://stackoverflow.com/questions/55331919/borrowed-refcell-does-not-last-long-enough-when-iterating-over-a-list/55332219#55332219", "title": "Borrowed RefCell does not last long enough when iterating over a list", "body": "<p>Instead of assigning <code>p</code> the borrowed reference, you need to clone the <code>Rc</code>:</p>\n\n<pre><code>use std::cell::RefCell;\nuse std::rc::Rc;\n\nstruct Node {\n    val: i32,\n    next: Option&lt;Rc&lt;RefCell&lt;Node&gt;&gt;&gt;,\n}\n\nfn iterate(node: Option&lt;Rc&lt;RefCell&lt;Node&gt;&gt;&gt;) -&gt; Vec&lt;i32&gt; {\n    let mut p = node;\n    let mut result = vec![];\n\n    loop {\n        let node = match p {\n            None =&gt; break,\n            Some(ref n) =&gt; Rc::clone(n), // Clone the Rc\n        };\n\n        result.push(node.as_ref().borrow().val); //works because val is Copy\n        p = match node.borrow().next {\n            None =&gt; None,\n            Some(ref next) =&gt; Some(Rc::clone(next)), //clone the Rc\n        };\n    }\n\n    result\n}\n\nfn main() {\n    let node = Some(Rc::new(RefCell::new(Node {\n        val: 0,\n        next: Some(Rc::new(RefCell::new(Node { val: 1, next: None }))),\n    })));\n\n    let result = iterate(node);\n    print!(\"{:?}\", result)\n}\n</code></pre>\n\n<p>This is necessary because you are trying to use a variable with a shorter lifespan in a context that requires a longer lifespan. The result of <code>p.as_ref().unwrap().borrow()</code> is dropped (i.e. freed, de-allocated) after the loop iteration, but you are trying to use its members in the next loop (this is called <code>use after free</code> and one of the design goals of Rust is to prevent that).</p>\n\n<p>The issue is that borrows do not own the object. If you want to use the <code>next</code> as <code>p</code> in the next loop, then <code>p</code> will have to own the object. This can be achieved with <code>Rc</code> (i.e. 'reference counted') and allows for multiple owners in a single thread.  </p>\n\n<blockquote>\n  <p>What if the definition of <code>Node::next</code> is <code>Option&lt;Box&lt;RefCell&lt;Node&gt;&gt;&gt;</code>, how to iterate over this list?</p>\n</blockquote>\n\n\n\n<blockquote>\n  <p>Yes, I'm also very confused with <code>RefCell</code>, without <code>RefCell</code> we can iterate over list using reference only, but will fail with <code>RefCell</code>. I even tried to add a vector of <code>Ref</code> to save the reference, but still can not success. </p>\n</blockquote>\n\n<p>If you drop the <code>RefCell</code> you can iterate it like this:</p>\n\n<pre><code>struct Node {\n    val: i32,\n    next: Option&lt;Box&lt;Node&gt;&gt;,\n}\n\nfn iterate(node: Option&lt;Box&lt;Node&gt;&gt;) -&gt; Vec&lt;i32&gt; {\n    let mut result = vec![];\n    let mut next = node.as_ref().map(|n| &amp;**n);\n\n    while let Some(n) = next.take() {\n        result.push(n.val);\n\n        let x = n.next.as_ref().map(|n| &amp;**n);\n        next = x;\n    }\n\n    result\n}\n\nfn main() {\n    let node = Some(Box::new(Node {\n        val: 0,\n        next: Some(Box::new(Node { val: 1, next: None })),\n    }));\n\n    let result = iterate(node);\n    print!(\"{:?}\", result)\n}\n</code></pre>\n\n<p>Maybe it's possible with a <code>RefCell</code> as well, but I was not able to work around the lifetime issues.</p>\n"}, {"tags": [], "owner": {"reputation": 1, "user_id": 8047387, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fh4kj.jpg?s=128&g=1", "display_name": "Ethan", "link": "https://stackoverflow.com/users/8047387/ethan"}, "is_accepted": false, "score": 0, "last_activity_date": 1604316525, "creation_date": 1604316525, "answer_id": 64644698, "question_id": 55331919, "link": "https://stackoverflow.com/questions/55331919/borrowed-refcell-does-not-last-long-enough-when-iterating-over-a-list/64644698#64644698", "title": "Borrowed RefCell does not last long enough when iterating over a list", "body": "<p>I bring a little different code from <a href=\"https://stackoverflow.com/a/55332219/8047387\">above</a> answer, one match expression in the loop.</p>\n<pre><code>fn iterate(node: Option&lt;Rc&lt;RefCell&lt;ListNode&gt;&gt;&gt;) -&gt; Vec&lt;i32&gt;{\n    let mut result = vec![];\n\n    let mut p = match node{\n        Some(x) =&gt; Rc::clone(&amp;x),\n        None =&gt; return result,\n    };\n\n    loop {\n        result.push(p.as_ref().borrow().val); //works because val is Copy\n\n        let node = match &amp;p.borrow().next{\n            Some(x) =&gt; Rc::clone(&amp;x),\n            None =&gt; break,\n        };\n        p = node;\n    }\n\n    result\n}\n</code></pre>\n"}], "owner": {"reputation": 739, "user_id": 845762, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/da8c63db24d7e098f7b06185e8d1dbbb?s=128&d=identicon&r=PG", "display_name": "xudifsd", "link": "https://stackoverflow.com/users/845762/xudifsd"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 418, "favorite_count": 0, "answer_count": 2, "score": 3, "last_activity_date": 1604316525, "creation_date": 1553493159, "last_edit_date": 1553527871, "question_id": 55331919, "link": "https://stackoverflow.com/questions/55331919/borrowed-refcell-does-not-last-long-enough-when-iterating-over-a-list", "title": "Borrowed RefCell does not last long enough when iterating over a list", "body": "<p>I'm trying to implement a linked list to understand smart pointers in Rust. I defined a <code>Node</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::{cell::RefCell, rc::Rc};\n\nstruct Node {\n    val: i32,\n    next: Option&lt;Rc&lt;RefCell&lt;Node&gt;&gt;&gt;,\n}\n</code></pre>\n\n<p>and iterate like</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn iterate(node: Option&lt;&amp;Rc&lt;RefCell&lt;Node&gt;&gt;&gt;) -&gt; Vec&lt;i32&gt; {\n    let mut p = node;\n    let mut result = vec![];\n\n    loop {\n        if p.is_none() {\n            break;\n        }\n\n        result.push(p.as_ref().unwrap().borrow().val);\n\n        p = p.as_ref().unwrap().borrow().next.as_ref();\n    }\n\n    result\n}\n</code></pre>\n\n<p>the compiler reports an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0716]: temporary value dropped while borrowed\n  --&gt; src/main.rs:27:13\n   |\n27 |         p = p.as_ref().unwrap().borrow().next.as_ref();\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^              -\n   |             |                                         |\n   |             |                                         temporary value is freed at the end of this statement\n   |             |                                         ... and the borrow might be used here, when that temporary is dropped and runs the destructor for type `std::cell::Ref&lt;'_, Node&gt;`\n   |             creates a temporary which is freed while still in use\n   |             a temporary with access to the borrow is created here ...\n   |\n   = note: consider using a `let` binding to create a longer lived value\n</code></pre>\n\n<p>What happened? Can't we use a reference to iterate on a node defined this way?</p>\n"}, {"tags": ["io", "rust"], "comments": [{"owner": {"reputation": 4480, "user_id": 259889, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/aba1af6d6197093c880797a82e1bc2a2?s=128&d=identicon&r=PG", "display_name": "Sid", "link": "https://stackoverflow.com/users/259889/sid"}, "edited": false, "score": 0, "creation_date": 1553488102, "post_id": 55331212, "comment_id": 97387942, "body": "Possible duplicate of: <a href=\"https://stackoverflow.com/questions/37079342/most-efficient-way-to-read-large-file-in-chunks\" title=\"most efficient way to read large file in chunks\">stackoverflow.com/questions/37079342/&hellip;</a>"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 4480, "user_id": 259889, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/aba1af6d6197093c880797a82e1bc2a2?s=128&d=identicon&r=PG", "display_name": "Sid", "link": "https://stackoverflow.com/users/259889/sid"}, "edited": false, "score": 0, "creation_date": 1553489002, "post_id": 55331212, "comment_id": 97388145, "body": "@Sid why do you think the duplicate apply ? In your dup there is no mention of lines processing."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1553489069, "post_id": 55331212, "comment_id": 97388155, "body": "&quot;possibly using itertools::Itertools::chunks&quot; why not didn&#39;t you not try to use it ?  &quot;although I&#39;m buffering input, I am not processing the buffer.&quot; ??????"}, {"owner": {"reputation": 4480, "user_id": 259889, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/aba1af6d6197093c880797a82e1bc2a2?s=128&d=identicon&r=PG", "display_name": "Sid", "link": "https://stackoverflow.com/users/259889/sid"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1553491304, "post_id": 55331212, "comment_id": 97388573, "body": "@Stargateur, hence the &#39;Possible duplicate&#39;..."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 4480, "user_id": 259889, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/aba1af6d6197093c880797a82e1bc2a2?s=128&d=identicon&r=PG", "display_name": "Sid", "link": "https://stackoverflow.com/users/259889/sid"}, "edited": false, "score": 0, "creation_date": 1553492008, "post_id": 55331212, "comment_id": 97388741, "body": "@Sid Still if you propose it you <b>should</b> have some through about why you think it&#39;s a duplicate, but ok you just proposed it without strong feeling that ok."}], "answers": [{"tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": false, "score": 3, "last_activity_date": 1553488807, "creation_date": 1553488807, "answer_id": 55331359, "question_id": 55331212, "link": "https://stackoverflow.com/questions/55331212/how-do-i-read-and-process-n-lines-of-a-file-at-a-time-in-rust/55331359#55331359", "title": "How do I read and process N lines of a file at a time in Rust?", "body": "<p>You could use <a href=\"https://docs.rs/itertools/*/itertools/trait.Itertools.html#method.chunks\" rel=\"nofollow noreferrer\"><code>chunks()</code></a> from itertools:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use itertools::Itertools; // 0.8.0\nuse std::io::BufRead;\n\nfn main() {\n    let stdin = std::io::stdin();\n    let n = 3;\n\n    for lines in &amp;stdin.lock().lines().chunks(n) {\n        for (i, line) in lines.enumerate() {\n            println!(\"Line {}: {:?}\", i, line);\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 2041, "user_id": 360497, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/45bc3a17372036a020bc551ecedc94ad?s=128&d=identicon&r=PG", "display_name": "mlbright", "link": "https://stackoverflow.com/users/360497/mlbright"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 394, "favorite_count": 1, "answer_count": 1, "score": 2, "last_activity_date": 1553562076, "creation_date": 1553487493, "last_edit_date": 1553562076, "question_id": 55331212, "link": "https://stackoverflow.com/questions/55331212/how-do-i-read-and-process-n-lines-of-a-file-at-a-time-in-rust", "title": "How do I read and process N lines of a file at a time in Rust?", "body": "<p>I would like to read N lines of a file at a time, possibly using <code>itertools::Itertools::chunks</code>.</p>\n\n<p>When I do:</p>\n\n<pre><code>for line in stdin.lock().lines() {\n   ... // this is processing one line at a time\n}\n</code></pre>\n\n<p>... although I'm buffering input, I am not processing the buffer.</p>\n"}, {"tags": ["rust", "bare-metal"], "answers": [{"comments": [{"owner": {"reputation": 623, "user_id": 10962821, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-2LR2CPhrhu0/AAAAAAAAAAI/AAAAAAAAAAc/OGsF9pFiFOU/photo.jpg?sz=128", "display_name": "sn99", "link": "https://stackoverflow.com/users/10962821/sn99"}, "edited": false, "score": 0, "creation_date": 1553481581, "post_id": 55330539, "comment_id": 97386798, "body": "So <code>Rand</code> still uses <code>std</code> then ? Wouldn&#39;t it be a problem if I strictly need <code>no_std</code> ?"}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 3, "last_activity_date": 1553562446, "last_edit_date": 1553562446, "creation_date": 1553480826, "answer_id": 55330539, "question_id": 55330493, "link": "https://stackoverflow.com/questions/55330493/why-is-randrng-able-to-work-in-a-no-std-environment-even-when-i-have-not-set-d/55330539#55330539", "title": "Why is rand::Rng able to work in a no-std environment even when I have not set default-features = false?", "body": "<p>Yes, you need to disable rand's <code>std</code> feature in order to use it in an environment where <code>std</code> is unavailable. However, if <code>std</code> <em>is</em> available, not disabling the <code>std</code> feature will still work.</p>\n\n<p>The <code>#![no_std]</code> changes your crate's prelude from the <code>std</code> prelude to the <code>core</code> prelude. The <code>std</code> prelude looks like:</p>\n\n<pre><code>extern crate std;\nuse std::prelude::v1::*;\n</code></pre>\n\n<p>The <code>core</code> prelude is the same but with <code>core</code> instead of <code>std</code>. This means that, unless you write <code>extern crate std;</code>, your crate doesn't depend on <code>std</code> directly.</p>\n\n<p>However, <code>#![no_std]</code> has no effect on your dependencies. <a href=\"https://doc.rust-lang.org/reference/crates-and-source-files.html#preludes-and-no_std\" rel=\"nofollow noreferrer\">The Rust Reference</a> has a relevant warning:</p>\n\n<blockquote>\n  <p>\u26a0\ufe0f Warning: Using <code>no_std</code> does not prevent the standard library from being linked in. It is still valid to put <code>extern crate std;</code> into the crate and dependencies can also link it in.</p>\n</blockquote>\n\n<p>Therefore, if <code>std</code> is available for your target and one of your dependencies needs <code>std</code>, then it will be able to use it. On the other hand, if <code>std</code> isn't available for the target, then crates that try to use it (either implicitly or explicitly) will fail to compile.</p>\n"}], "owner": {"reputation": 623, "user_id": 10962821, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-2LR2CPhrhu0/AAAAAAAAAAI/AAAAAAAAAAc/OGsF9pFiFOU/photo.jpg?sz=128", "display_name": "sn99", "link": "https://stackoverflow.com/users/10962821/sn99"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 381, "favorite_count": 0, "accepted_answer_id": 55330539, "answer_count": 1, "score": 2, "last_activity_date": 1553562446, "creation_date": 1553480294, "last_edit_date": 1553525505, "question_id": 55330493, "link": "https://stackoverflow.com/questions/55330493/why-is-randrng-able-to-work-in-a-no-std-environment-even-when-i-have-not-set-d", "title": "Why is rand::Rng able to work in a no-std environment even when I have not set default-features = false?", "body": "<p>Shouldn't I need to <a href=\"https://rust-random.github.io/book/features.html?highlight=no_Std#core-only-no_std\" rel=\"nofollow noreferrer\">disable rand's <code>std</code> feature flag</a> before being able to use it in a <code>no_std</code> environment?</p>\n\n<p><strong>lib.rs</strong></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#![no_std]\n\nuse rand::Rng;\n\npub fn random_small() -&gt; u8{\n    rand::thread_rng().gen::&lt;u8&gt;()\n}\n</code></pre>\n\n<p><strong>Cargo.toml</strong></p>\n\n<pre><code>[dependencies]\n\nrand = \"0.6.5\"\n</code></pre>\n\n<p>I am not using <code>#![no_std]</code> in my <strong>main.rs</strong> though.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 14666, "user_id": 12637, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/2f3ca6058f9534dfed473cf31341c644?s=128&d=identicon&r=PG", "display_name": "Omar Abid", "link": "https://stackoverflow.com/users/12637/omar-abid"}, "edited": false, "score": 0, "creation_date": 1553470564, "post_id": 55329517, "comment_id": 97384946, "body": "Thanks. It works!. However, doesn&#39;t T represent the Trait. The trait doesn&#39;t implement the function. The struct does (which is passed through the function). Trying to display it, it says &quot;expected value, found type parameter T&quot;. To be honest, my brain still doesn&#39;t understand it."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 14666, "user_id": 12637, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/2f3ca6058f9534dfed473cf31341c644?s=128&d=identicon&r=PG", "display_name": "Omar Abid", "link": "https://stackoverflow.com/users/12637/omar-abid"}, "edited": false, "score": 0, "creation_date": 1553470885, "post_id": 55329517, "comment_id": 97384993, "body": "@OmarAbid Traits declare things, rather than implement themselves. <code>MyTrait</code> does in fact declare the associated function <code>get_value()</code>, which is why it can be called from a type <code>T</code> bound by that trait. That other error must have emerged from an attempt to use the type as a value."}, {"owner": {"reputation": 14666, "user_id": 12637, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/2f3ca6058f9534dfed473cf31341c644?s=128&d=identicon&r=PG", "display_name": "Omar Abid", "link": "https://stackoverflow.com/users/12637/omar-abid"}, "edited": false, "score": 0, "creation_date": 1553471586, "post_id": 55329517, "comment_id": 97385088, "body": "I think it is starting to make some sense. T is myStruct. But isn&#39;t &quot;trt&quot; myStruct too? In that case, what is the difference between trt and T?"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 14666, "user_id": 12637, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/2f3ca6058f9534dfed473cf31341c644?s=128&d=identicon&r=PG", "display_name": "Omar Abid", "link": "https://stackoverflow.com/users/12637/omar-abid"}, "edited": false, "score": 1, "creation_date": 1553471844, "post_id": 55329517, "comment_id": 97385135, "body": "<code>T</code> is a type parameter of the function <code>has_trait</code>. When this function is called, this <code>T</code> is monomorphized to a concrete type, in this case <code>MyStruct</code>. <code>trt</code> is a value of type <code>T</code>, and so, will be a value of type <code>MyStruct</code> when <code>T</code> is <code>MyStruct</code>. One is a type, whereas the other one is an actual value. It might be worth revisiting <a href=\"https://doc.rust-lang.org/book/ch10-02-traits.html\" rel=\"nofollow noreferrer\">section 10.2 of the book</a>, which contains a deeper explanation about traits and monomorphization."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 14666, "user_id": 12637, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/2f3ca6058f9534dfed473cf31341c644?s=128&d=identicon&r=PG", "display_name": "Omar Abid", "link": "https://stackoverflow.com/users/12637/omar-abid"}, "edited": false, "score": 2, "creation_date": 1553472449, "post_id": 55329517, "comment_id": 97385234, "body": "@OmarAbid <code>MyStruct</code> is a <b>type</b>. <code>trt</code> is a <b>value</b> which happens to have type <code>MyStruct</code>. You can call a method on a <i>value</i> using the <code>.</code> operator. You can call an associated function on a <i>type</i> using the <code>::</code> operator. But you can&#39;t use the <code>.</code> operator on a <i>type</i> and you can&#39;t use the <code>::</code> operator on a <i>value</i>. The difference between values and types is very stark in Rust; it&#39;s a good thing to have a handle on."}, {"owner": {"reputation": 14666, "user_id": 12637, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/2f3ca6058f9534dfed473cf31341c644?s=128&d=identicon&r=PG", "display_name": "Omar Abid", "link": "https://stackoverflow.com/users/12637/omar-abid"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1553642782, "post_id": 55329517, "comment_id": 97458806, "body": "@trentcl Thanks. I think I got it now."}], "tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 1, "last_activity_date": 1553470105, "last_edit_date": 1553470105, "creation_date": 1553469498, "answer_id": 55329517, "question_id": 55329386, "link": "https://stackoverflow.com/questions/55329386/why-do-i-get-use-of-undeclared-type-or-module-error-when-calling-a-structs-fu/55329517#55329517", "title": "Why do I get &quot;use of undeclared type or module&quot; error when calling a struct&#39;s function?", "body": "<blockquote>\n  <p>Now, I don't really understand very well why that wouldn't work. <code>trt</code> should represent a copy of <code>MyStruct</code> and then it should have its own functions, right?</p>\n</blockquote>\n\n<p>It doesn't quite work that way for associated functions in Rust.\nWith the identifier <code>trt</code>, you can call <em>methods</em> where <code>trt</code> is the receiver (<code>self</code> or one of its variations such as <code>&amp;self</code> or <code>&amp;mut self</code>). However, <code>get_value()</code> does not have a receiver, so it is an <em>associated function</em>. This resembles a <em>static method</em> in some languages such as Java. Unlike Java, associated functions in Rust can only be called by specifying the type or type parameter with that function:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn has_trait&lt;T&gt;(trt: T) where T: MyTrait + std::fmt::Debug {\n    println!(\"{:?}\", T::get_value())\n}\n</code></pre>\n\n<p>This will now work, and would not even need the parameter <code>trt</code>, because we're just calling an associated function of the type <code>T</code>, rather than a method.\nAlthough <code>trt</code> is an identifier to a function parameter in this context, the compiler will actually try to interpret it as something else (module name, type name, ...) once combined with the <code>::</code> token, hence the given error message.</p>\n"}], "owner": {"reputation": 14666, "user_id": 12637, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/2f3ca6058f9534dfed473cf31341c644?s=128&d=identicon&r=PG", "display_name": "Omar Abid", "link": "https://stackoverflow.com/users/12637/omar-abid"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2222, "favorite_count": 0, "accepted_answer_id": 55329517, "answer_count": 1, "score": 1, "last_activity_date": 1553470105, "creation_date": 1553468261, "last_edit_date": 1553470058, "question_id": 55329386, "link": "https://stackoverflow.com/questions/55329386/why-do-i-get-use-of-undeclared-type-or-module-error-when-calling-a-structs-fu", "title": "Why do I get &quot;use of undeclared type or module&quot; error when calling a struct&#39;s function?", "body": "<p>I have the following code in Rust:</p>\n\n<pre><code>trait MyTrait {\n    fn get_value() -&gt; &amp;'static str;\n}\n\n#[derive(Debug)]\nstruct MyStruct;\n\nimpl MyTrait for MyStruct {\n    fn get_value() -&gt; &amp;'static str {\n        \"has value\"\n    }\n}\n\n\nfn main() {\n    println!(\"My value: {}\", MyStruct::get_value());\n    has_trait(MyStruct);\n}\n\nfn has_trait&lt;T&gt;(trt: T) where T: MyTrait + std::fmt::Debug {\n    println!(\"{:?}\", trt)\n}\n</code></pre>\n\n<p>This code is fine. It defines a trait and a struct. The struct implements the trait; which requires to implement a function. Everything is fine until now. But if I try the following code:</p>\n\n<pre><code>trait MyTrait {\n    fn get_value() -&gt; &amp;'static str;\n}\n\n#[derive(Debug)]\nstruct MyStruct;\n\nimpl MyTrait for MyStruct {\n    fn get_value() -&gt; &amp;'static str {\n        \"has value\"\n    }\n}\n\n\nfn main() {\n    println!(\"My value: {}\", MyStruct::get_value());\n    has_trait(MyStruct);\n}\n\nfn has_trait&lt;T&gt;(trt: T) where T: MyTrait + std::fmt::Debug {\n    println!(\"{:?}\", trt::get_value())\n}\n</code></pre>\n\n<p>I get the following error:</p>\n\n<pre><code>error[E0433]: failed to resolve: use of undeclared type or module `trt`\n  --&gt; src/main.rs:21:22\n   |\n21 |     println!(\"{:?}\", trt::get_value())\n   |                      ^^^ use of undeclared type or module `trt`\n</code></pre>\n\n<p>Now, I don't really understand very well why that wouldn't work. <code>trt</code> should represent a copy of <code>myStruct</code> and then it should have its own functions, right?</p>\n\n<p>Interestingly, this following code will compile:</p>\n\n<pre><code>trait MyTrait {\n    fn get_value(&amp;self) -&gt; &amp;'static str;\n}\n\n#[derive(Debug)]\nstruct MyStruct;\n\nimpl MyTrait for MyStruct {\n    fn get_value(&amp;self) -&gt; &amp;'static str {\n        \"has value\"\n    }\n}\n\n\nfn main() {\n    println!(\"My value: {}\", MyStruct.get_value());\n    has_trait(MyStruct);\n}\n\nfn has_trait&lt;T&gt;(trt: T) where T: MyTrait + std::fmt::Debug {\n    println!(\"{:?}\", trt.get_value())\n}\n</code></pre>\n\n<p>So what is exactly wrong with the code that doesn't compile?</p>\n"}, {"tags": ["unit-testing", "testing", "rust", "integration-testing"], "answers": [{"tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 5, "last_activity_date": 1553454336, "last_edit_date": 1553454336, "creation_date": 1553453612, "answer_id": 55327334, "question_id": 55327185, "link": "https://stackoverflow.com/questions/55327185/how-do-i-write-a-test-assuring-a-compilation-error/55327334#55327334", "title": "How do I write a test assuring a compilation error?", "body": "<p>There isn't currently a way of indicating that a regular test should not compile. And by the look of related issues (<a href=\"https://github.com/rust-lang/cargo/issues/521\" rel=\"noreferrer\">#521</a> and <a href=\"https://github.com/rust-lang/cargo/issues/1194#issuecomment-70582397\" rel=\"noreferrer\">#1994</a> ) something like <code>#[compile_fail]</code> is unlikely to become available any time soon.</p>\n\n<p>However, there are two other ways to write these tests.</p>\n\n<h3>Doctests</h3>\n\n<p>Since <a href=\"https://blog.rust-lang.org/2017/11/22/Rust-1.22.html\" rel=\"noreferrer\">Rust 1.22</a>, you can make <em>doc tests</em> which are supposed to fail to compile, by labeling the code snippet with <code>compile_fail</code>:</p>\n\n<pre><code>/// Foos a bar.\n/// \n/// # Example\n///\n/// ```compile_fail\n/// foo(3); // 3 is not a bar\n/// ```\nfn foo(bar: Bar) {\n}\n</code></pre>\n\n<h3>Compile-test toolkit</h3>\n\n<p>The compile-test tools used internally by the Rust project were extracted into the dedicated crate <a href=\"https://crates.io/crates/compiletest_rs\" rel=\"noreferrer\"><code>compiletest_rs</code></a>.</p>\n\n<p>With the boilerplate suggested in the <a href=\"https://github.com/laumann/compiletest-rs/blob/master/README.md\" rel=\"noreferrer\">documentation</a>, one can write compile-fail tests in the <code>tests/compile-fail</code> folder:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n   let x: bool = 0;\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/26664770/1233251\">Can I write tests for invalid lifetimes?</a></li>\n</ul>\n\n<hr>\n\n<p>These tests should be written with care, nevertheless. Quoting from the announcement of the <code>compile_fail</code> feature:</p>\n\n<blockquote>\n  <p>Please note that these kinds of tests can be more fragile than others, as additions to Rust may cause code to compile when it previously would not.</p>\n</blockquote>\n"}], "owner": {"reputation": 975, "user_id": 7687388, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Xhm3T.png?s=128&g=1", "display_name": "CodeSandwich", "link": "https://stackoverflow.com/users/7687388/codesandwich"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 455, "favorite_count": 1, "accepted_answer_id": 55327334, "answer_count": 1, "score": 4, "last_activity_date": 1553454336, "creation_date": 1553452702, "last_edit_date": 1553454044, "question_id": 55327185, "link": "https://stackoverflow.com/questions/55327185/how-do-i-write-a-test-assuring-a-compilation-error", "title": "How do I write a test assuring a compilation error?", "body": "<p>I want to prove that my API statically prevents an invalid usage by failing to compile.</p>\n\n<p>There is tooling for assuring that code panics at run-time (<code>#[should_panic]</code>), but I couldn't find anything for compilation failure. The doc tests seem most promising, because every snippet is a separate compilation unit, but panic check is all there seems to be.</p>\n"}, {"tags": ["rust", "actix-web"], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1553443969, "post_id": 55325786, "comment_id": 97377570, "body": "@why issue 1000 ?"}, {"owner": {"reputation": 1321, "user_id": 1291664, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/95854ef7aaf132a9f9ed8fd61366f7df?s=128&d=identicon&r=PG", "display_name": "\u0110or\u0111e Zelji\u0107", "link": "https://stackoverflow.com/users/1291664/%c4%90or%c4%91e-zelji%c4%87"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1553444341, "post_id": 55325786, "comment_id": 97377683, "body": "I read somewhere that these two things are related, on discord channel probably. Not sure."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1553444412, "post_id": 55325786, "comment_id": 97377712, "body": "doesn&#39;t look linked, just found in the same time &quot;<b>On an unrelated note</b>, the ctrl-c example still doesn&#39;t work quite right, even with the fix above, because we&#39;re blocking on all futures spawned into the runtime, which includes an immortal driver task which intercepts the OS ctrl-c events. I want to look into refactoring the driver task to possibly die on it&#39;s own if there are no more ctrl-c listeners&quot; <a href=\"https://github.com/tokio-rs/tokio/issues/999#issuecomment-475901027\" rel=\"nofollow noreferrer\">github.com/tokio-rs/tokio/issues/999#issuecomment-475901027</a>"}, {"owner": {"reputation": 23, "user_id": 3831384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1e32ea3ad47080c14fdc192bac1c2441?s=128&d=identicon&r=PG&f=1", "display_name": "Jan Debeuckelaer", "link": "https://stackoverflow.com/users/3831384/jan-debeuckelaer"}, "edited": false, "score": 0, "creation_date": 1553450059, "post_id": 55325786, "comment_id": 97379517, "body": "Thanks for your insights. I see that the tokio team submitted a PR to fix the underlying issue. I&#39;ll switch to Linux for now."}], "tags": [], "owner": {"reputation": 1321, "user_id": 1291664, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/95854ef7aaf132a9f9ed8fd61366f7df?s=128&d=identicon&r=PG", "display_name": "\u0110or\u0111e Zelji\u0107", "link": "https://stackoverflow.com/users/1291664/%c4%90or%c4%91e-zelji%c4%87"}, "is_accepted": true, "score": 2, "last_activity_date": 1593120723, "last_edit_date": 1593120723, "creation_date": 1553443803, "answer_id": 55325786, "question_id": 55325701, "link": "https://stackoverflow.com/questions/55325701/actix-web-example-from-introduction-gives-run-time-error-thread-main-panicked/55325786#55325786", "title": "Actix web example from introduction gives run-time error thread &#39;main&#39; panicked at &#39;called `Option::unwrap()` on a `None` value&#39;", "body": "<p>I found this too and I think this is related to this two issues in tokio lib:</p>\n<ul>\n<li><a href=\"https://github.com/tokio-rs/tokio/issues/999\" rel=\"nofollow noreferrer\">tokio-signal is broken on Windows since version 0.1.18</a></li>\n<li><a href=\"https://github.com/tokio-rs/tokio/issues/1000\" rel=\"nofollow noreferrer\">tokio-signal: windows DriverTask never terminates</a></li>\n</ul>\n"}], "owner": {"reputation": 23, "user_id": 3831384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1e32ea3ad47080c14fdc192bac1c2441?s=128&d=identicon&r=PG&f=1", "display_name": "Jan Debeuckelaer", "link": "https://stackoverflow.com/users/3831384/jan-debeuckelaer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1036, "favorite_count": 0, "accepted_answer_id": 55325786, "answer_count": 1, "score": 1, "last_activity_date": 1593120723, "creation_date": 1553443312, "question_id": 55325701, "link": "https://stackoverflow.com/questions/55325701/actix-web-example-from-introduction-gives-run-time-error-thread-main-panicked", "title": "Actix web example from introduction gives run-time error thread &#39;main&#39; panicked at &#39;called `Option::unwrap()` on a `None` value&#39;", "body": "<p>I am starting to use actix-web using the example from the getting started section of the actix web guide. When running the code I get a runtime error that appears to come from the actix framework.</p>\n\n<p>Versions:</p>\n\n<ul>\n<li>win10</li>\n<li>rustc 1.33.0 (2aa4c46cf 2019-02-28)</li>\n<li>actix-web 0.7.18 </li>\n</ul>\n\n<p>This is the code:</p>\n\n<pre><code>extern crate actix_web;\nuse std::env;\nuse actix_web::{server, App, HttpRequest};\n\nfn index(_req: &amp;HttpRequest) -&gt; &amp;'static str {\n    \"Hello World!\"\n}\n\nfn main() {\n    env::set_var(\"RUST_BACKTRACE\",\"1\");\n\n    server::new(\n        || App::new()\n            .resource(\"/\", |r| r.f(index)))\n        .bind(\"127.0.0.1:8088\")\n        .unwrap()\n        .run();\n}\n</code></pre>\n\n<p>It compiles ok, but I get the following backtrace, relevant lines in the backtrace appear to be line 11 where the panic seems to occur and line 73, which shows the call in my main function that ultimately leads to the panic.</p>\n\n<p>I double checked that port 8088 is available. What am I doing wrong?</p>\n\n<pre><code>   Compiling hello_cargo v0.1.0 (D:\\users\\Jan Debeuckelaer\\projects\\hello_cargo)\n    Finished dev [unoptimized + debuginfo] target(s) in 7.97s\n     Running `target\\debug\\hello_cargo.exe`\nthread 'main' panicked at 'called `Option::unwrap()` on a `None` value', src\\libcore\\option.rs:345:21\nstack backtrace:\n   0: std::sys::windows::backtrace::set_frames\n             at /rustc/2aa4c46cfdd726e97360c2734835aa3515e8c858\\/src\\libstd\\sys\\windows\\backtrace\\mod.rs:94\n   1: std::sys::windows::backtrace::unwind_backtrace\n             at /rustc/2aa4c46cfdd726e97360c2734835aa3515e8c858\\/src\\libstd\\sys\\windows\\backtrace\\mod.rs:81\n   2: std::sys_common::backtrace::_print\n             at /rustc/2aa4c46cfdd726e97360c2734835aa3515e8c858\\/src\\libstd\\sys_common\\backtrace.rs:70\n   3: std::sys_common::backtrace::print\n             at /rustc/2aa4c46cfdd726e97360c2734835aa3515e8c858\\/src\\libstd\\sys_common\\backtrace.rs:58\n   4: std::panicking::default_hook::{{closure}}\n             at /rustc/2aa4c46cfdd726e97360c2734835aa3515e8c858\\/src\\libstd\\panicking.rs:200\n   5: std::panicking::default_hook\n             at /rustc/2aa4c46cfdd726e97360c2734835aa3515e8c858\\/src\\libstd\\panicking.rs:215\n   6: std::panicking::rust_panic_with_hook\n             at /rustc/2aa4c46cfdd726e97360c2734835aa3515e8c858\\/src\\libstd\\panicking.rs:478\n   7: std::panicking::continue_panic_fmt\n             at /rustc/2aa4c46cfdd726e97360c2734835aa3515e8c858\\/src\\libstd\\panicking.rs:385\n   8: std::panicking::rust_begin_panic\n             at /rustc/2aa4c46cfdd726e97360c2734835aa3515e8c858\\/src\\libstd\\panicking.rs:312\n   9: core::panicking::panic_fmt\n             at /rustc/2aa4c46cfdd726e97360c2734835aa3515e8c858\\/src\\libcore\\panicking.rs:85\n  10: core::panicking::panic\n             at /rustc/2aa4c46cfdd726e97360c2734835aa3515e8c858\\/src\\libcore\\panicking.rs:49\n  11: core::option::Option&lt;(mio::poll::Registration, mio::poll::SetReadiness)*&gt;::unwrap&lt;(mio::poll::Registration, mio::poll::SetReadiness)*&gt;\n             at /rustc/2aa4c46cfdd726e97360c2734835aa3515e8c858\\src\\libcore\\macros.rs:10\n  12: tokio_signal::windows::global_init\n             at C:\\Users\\Jan Debeuckelaer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-signal-0.2.8\\src\\windows.rs:165\n  13: tokio_signal::windows::{{impl}}::new::{{closure}}\n             at C:\\Users\\Jan Debeuckelaer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-signal-0.2.8\\src\\windows.rs:118\n  14: std::sync::once::{{impl}}::call_once::{{closure}}&lt;closure&gt;\n             at /rustc/2aa4c46cfdd726e97360c2734835aa3515e8c858\\src\\libstd\\sync\\once.rs:220\n  15: std::sync::once::Once::call_inner\n             at /rustc/2aa4c46cfdd726e97360c2734835aa3515e8c858\\/src\\libstd\\sync\\once.rs:387\n  16: std::sync::once::Once::call_once&lt;closure&gt;\n             at /rustc/2aa4c46cfdd726e97360c2734835aa3515e8c858\\src\\libstd\\sync\\once.rs:220\n  17: tokio_signal::windows::Event::new\n             at C:\\Users\\Jan Debeuckelaer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-signal-0.2.8\\src\\windows.rs:117\n  18: tokio_signal::windows::Event::ctrl_c_handle\n             at C:\\Users\\Jan Debeuckelaer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-signal-0.2.8\\src\\windows.rs:96\n  19: tokio_signal::ctrl_c_handle::ctrl_c_imp::{{closure}}\n             at C:\\Users\\Jan Debeuckelaer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-signal-0.2.8\\src\\lib.rs:137\n  20: futures::future::lazy::Lazy&lt;closure, futures::future::map::Map&lt;alloc::boxed::Box&lt;Future&gt;, closure&gt;&gt;::get&lt;closure,futures::future::map::Map&lt;alloc::boxed::Box&lt;Future&gt;, closure&gt;&gt;\n             at C:\\Users\\Jan Debeuckelaer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-0.1.25\\src\\future\\lazy.rs:64\n  21: futures::future::lazy::{{impl}}::poll&lt;closure,futures::future::map::Map&lt;alloc::boxed::Box&lt;Future&gt;, closure&gt;&gt;\n             at C:\\Users\\Jan Debeuckelaer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-0.1.25\\src\\future\\lazy.rs:82\n  22: futures::future::{{impl}}::poll&lt;Future&gt;\n             at C:\\Users\\Jan Debeuckelaer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-0.1.25\\src\\future\\mod.rs:113\n  23: futures::future::map_err::{{impl}}::poll&lt;(),alloc::boxed::Box&lt;Future&gt;,closure&gt;\n             at C:\\Users\\Jan Debeuckelaer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-0.1.25\\src\\future\\map_err.rs:30\n  24: actix::fut::{{impl}}::poll&lt;futures::future::map_err::MapErr&lt;alloc::boxed::Box&lt;Future&gt;, closure&gt;,actix::actors::signal::ProcessSignals&gt;\n             at C:\\Users\\Jan Debeuckelaer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-0.7.9\\src\\fut\\mod.rs:389\n  25: actix::fut::map::{{impl}}::poll&lt;(),actix::fut::FutureWrap&lt;futures::future::map_err::MapErr&lt;alloc::boxed::Box&lt;Future&gt;, closure&gt;, actix::actors::signal::ProcessSignals&gt;,closure&gt;\n             at C:\\Users\\Jan Debeuckelaer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-0.7.9\\src\\fut\\map.rs:38\n  26: actix::fut::{{impl}}::poll&lt;ActorFuture&gt;\n             at C:\\Users\\Jan Debeuckelaer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-0.7.9\\src\\fut\\mod.rs:313\n  27: actix::contextimpl::{{impl}}::poll&lt;actix::actors::signal::ProcessSignals,actix::context::Context&lt;actix::actors::signal::ProcessSignals&gt;&gt;\n             at C:\\Users\\Jan Debeuckelaer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-0.7.9\\src\\contextimpl.rs:355\n  28: actix::supervisor::{{impl}}::poll&lt;actix::actors::signal::ProcessSignals&gt;\n             at C:\\Users\\Jan Debeuckelaer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-0.7.9\\src\\supervisor.rs:147\n  29: futures::future::{{impl}}::poll&lt;actix::supervisor::Supervisor&lt;actix::actors::signal::ProcessSignals&gt;&gt;\n             at C:\\Users\\Jan Debeuckelaer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-0.1.25\\src\\future\\mod.rs:113\n  30: futures::future::{{impl}}::poll&lt;Future&gt;\n             at C:\\Users\\Jan Debeuckelaer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-0.1.25\\src\\future\\mod.rs:113\n  31: futures::task_impl::{{impl}}::poll_future_notify::{{closure}}&lt;alloc::boxed::Box&lt;Future&gt;,tokio_current_thread::scheduler::Notify&lt;tokio_reactor::Handle&gt;&gt;\n             at C:\\Users\\Jan Debeuckelaer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-0.1.25\\src\\task_impl\\mod.rs:326\n  32: futures::task_impl::{{impl}}::enter::{{closure}}&lt;alloc::boxed::Box&lt;Future&gt;,closure,core::result::Result&lt;futures::poll::Async&lt;()&gt;, ()&gt;&gt;\n             at C:\\Users\\Jan Debeuckelaer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-0.1.25\\src\\task_impl\\mod.rs:396\n  33: futures::task_impl::std::set&lt;closure,core::result::Result&lt;futures::poll::Async&lt;()&gt;, ()&gt;&gt;\n             at C:\\Users\\Jan Debeuckelaer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-0.1.25\\src\\task_impl\\std\\mod.rs:78\n  34: futures::task_impl::Spawn&lt;alloc::boxed::Box&lt;Future&gt;&gt;::enter&lt;alloc::boxed::Box&lt;Future&gt;,closure,core::result::Result&lt;futures::poll::Async&lt;()&gt;, ()&gt;&gt;\n             at C:\\Users\\Jan Debeuckelaer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-0.1.25\\src\\task_impl\\mod.rs:396\n  35: futures::task_impl::Spawn&lt;alloc::boxed::Box&lt;Future&gt;&gt;::poll_fn_notify&lt;alloc::boxed::Box&lt;Future&gt;,tokio_current_thread::scheduler::Notify&lt;tokio_reactor::Handle&gt;,closure,core::result::Result&lt;futures::poll::Async&lt;()&gt;, ()&gt;&gt;\n             at C:\\Users\\Jan Debeuckelaer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-0.1.25\\src\\task_impl\\mod.rs:288\n  36: futures::task_impl::Spawn&lt;alloc::boxed::Box&lt;Future&gt;&gt;::poll_future_notify&lt;alloc::boxed::Box&lt;Future&gt;,tokio_current_thread::scheduler::Notify&lt;tokio_reactor::Handle&gt;&gt;\n             at C:\\Users\\Jan Debeuckelaer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-0.1.25\\src\\task_impl\\mod.rs:326\n  37: tokio_current_thread::scheduler::Scheduled&lt;tokio_reactor::Handle&gt;::tick&lt;tokio_reactor::Handle&gt;\n             at C:\\Users\\Jan Debeuckelaer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-current-thread-0.1.6\\src\\scheduler.rs:351\n  38: tokio_current_thread::scheduler::{{impl}}::tick::{{closure}}&lt;tokio_reactor::Handle&gt;\n             at C:\\Users\\Jan Debeuckelaer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-current-thread-0.1.6\\src\\scheduler.rs:330\n  39: tokio_current_thread::{{impl}}::enter::{{closure}}::{{closure}}&lt;tokio_reactor::Handle,closure,bool&gt;\n             at C:\\Users\\Jan Debeuckelaer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-current-thread-0.1.6\\src\\lib.rs:788\n  40: tokio_current_thread::CurrentRunner::set_spawn&lt;closure,bool&gt;\n             at C:\\Users\\Jan Debeuckelaer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-current-thread-0.1.6\\src\\lib.rs:825\n  41: tokio_current_thread::{{impl}}::enter::{{closure}}&lt;tokio_reactor::Handle,closure,bool&gt;\n             at C:\\Users\\Jan Debeuckelaer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-current-thread-0.1.6\\src\\lib.rs:788\n  42: std::thread::local::LocalKey&lt;tokio_current_thread::CurrentRunner&gt;::try_with&lt;tokio_current_thread::CurrentRunner,closure,bool&gt;\n             at /rustc/2aa4c46cfdd726e97360c2734835aa3515e8c858\\src\\libstd\\thread\\local.rs:299\n  43: std::thread::local::LocalKey&lt;tokio_current_thread::CurrentRunner&gt;::with&lt;tokio_current_thread::CurrentRunner,closure,bool&gt;\n             at /rustc/2aa4c46cfdd726e97360c2734835aa3515e8c858\\src\\libstd\\thread\\local.rs:245\n  44: tokio_current_thread::Borrow&lt;tokio_reactor::Handle&gt;::enter&lt;tokio_reactor::Handle,closure,bool&gt;\n             at C:\\Users\\Jan Debeuckelaer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-current-thread-0.1.6\\src\\lib.rs:786\n  45: tokio_current_thread::scheduler::Scheduler&lt;tokio_reactor::Handle&gt;::tick&lt;tokio_reactor::Handle&gt;\n             at C:\\Users\\Jan Debeuckelaer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-current-thread-0.1.6\\src\\scheduler.rs:330\n  46: tokio_current_thread::Entered&lt;tokio_timer::timer::Timer&lt;tokio_reactor::Reactor, tokio_timer::clock::clock::Clock&gt;&gt;::tick&lt;tokio_timer::timer::Timer&lt;tokio_reactor::Reactor, tokio_timer::clock::clock::Clock&gt;&gt;\n             at C:\\Users\\Jan Debeuckelaer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-current-thread-0.1.6\\src\\lib.rs:612\n  47: tokio_current_thread::Entered&lt;tokio_timer::timer::Timer&lt;tokio_reactor::Reactor, tokio_timer::clock::clock::Clock&gt;&gt;::block_on&lt;tokio_timer::timer::Timer&lt;tokio_reactor::Reactor, tokio_timer::clock::clock::Clock&gt;,futures::sync::oneshot::Receiver&lt;i32&gt;&gt;\n             at C:\\Users\\Jan Debeuckelaer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-current-thread-0.1.6\\src\\lib.rs:502\n  48: tokio::runtime::current_thread::runtime::{{impl}}::block_on::{{closure}}&lt;futures::sync::oneshot::Receiver&lt;i32&gt;&gt;\n             at C:\\Users\\Jan Debeuckelaer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.1.18\\src\\runtime\\current_thread\\runtime.rs:200\n  49: tokio::runtime::current_thread::runtime::{{impl}}::enter::{{closure}}::{{closure}}::{{closure}}::{{closure}}&lt;closure,core::result::Result&lt;i32, futures::sync::oneshot::Canceled&gt;&gt;\n             at C:\\Users\\Jan Debeuckelaer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.1.18\\src\\runtime\\current_thread\\runtime.rs:241\n  50: tokio_executor::global::with_default::{{closure}}&lt;tokio_current_thread::TaskExecutor,closure,core::result::Result&lt;i32, futures::sync::oneshot::Canceled&gt;&gt;\n             at C:\\Users\\Jan Debeuckelaer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-executor-0.1.7\\src\\global.rs:209\n  51: std::thread::local::LocalKey&lt;core::cell::Cell&lt;tokio_executor::global::State&gt;&gt;::try_with&lt;core::cell::Cell&lt;tokio_executor::global::State&gt;,closure,core::result::Result&lt;i32, futures::sync::oneshot::Canceled&gt;&gt;\n             at /rustc/2aa4c46cfdd726e97360c2734835aa3515e8c858\\src\\libstd\\thread\\local.rs:299\n  52: std::thread::local::LocalKey&lt;core::cell::Cell&lt;tokio_executor::global::State&gt;&gt;::with&lt;core::cell::Cell&lt;tokio_executor::global::State&gt;,closure,core::result::Result&lt;i32, futures::sync::oneshot::Canceled&gt;&gt;\n             at /rustc/2aa4c46cfdd726e97360c2734835aa3515e8c858\\src\\libstd\\thread\\local.rs:245\n  53: tokio_executor::global::with_default&lt;tokio_current_thread::TaskExecutor,closure,core::result::Result&lt;i32, futures::sync::oneshot::Canceled&gt;&gt;\n             at C:\\Users\\Jan Debeuckelaer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-executor-0.1.7\\src\\global.rs:178\n  54: tokio::runtime::current_thread::runtime::{{impl}}::enter::{{closure}}::{{closure}}::{{closure}}&lt;closure,core::result::Result&lt;i32, futures::sync::oneshot::Canceled&gt;&gt;\n             at C:\\Users\\Jan Debeuckelaer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.1.18\\src\\runtime\\current_thread\\runtime.rs:239\n  55: tokio_timer::timer::handle::with_default::{{closure}}&lt;closure,core::result::Result&lt;i32, futures::sync::oneshot::Canceled&gt;&gt;\n             at C:\\Users\\Jan Debeuckelaer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-timer-0.2.10\\src\\timer\\handle.rs:94\n  56: std::thread::local::LocalKey&lt;core::cell::RefCell&lt;core::option::Option&lt;tokio_timer::timer::handle::HandlePriv&gt;&gt;&gt;::try_with&lt;core::cell::RefCell&lt;core::option::Option&lt;tokio_timer::timer::handle::HandlePriv&gt;&gt;,closure,core::result::Result&lt;i32, futures::sync::oneshot::Canceled&gt;&gt;\n             at /rustc/2aa4c46cfdd726e97360c2734835aa3515e8c858\\src\\libstd\\thread\\local.rs:299\n  57: std::thread::local::LocalKey&lt;core::cell::RefCell&lt;core::option::Option&lt;tokio_timer::timer::handle::HandlePriv&gt;&gt;&gt;::with&lt;core::cell::RefCell&lt;core::option::Option&lt;tokio_timer::timer::handle::HandlePriv&gt;&gt;,closure,core::result::Result&lt;i32, futures::sync::oneshot::Canceled&gt;&gt;\n             at /rustc/2aa4c46cfdd726e97360c2734835aa3515e8c858\\src\\libstd\\thread\\local.rs:245\n  58: tokio_timer::timer::handle::with_default&lt;closure,core::result::Result&lt;i32, futures::sync::oneshot::Canceled&gt;&gt;\n             at C:\\Users\\Jan Debeuckelaer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-timer-0.2.10\\src\\timer\\handle.rs:81\n  59: tokio::runtime::current_thread::runtime::{{impl}}::enter::{{closure}}::{{closure}}&lt;closure,core::result::Result&lt;i32, futures::sync::oneshot::Canceled&gt;&gt;\n             at C:\\Users\\Jan Debeuckelaer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.1.18\\src\\runtime\\current_thread\\runtime.rs:232\n  60: tokio_timer::clock::clock::with_default::{{closure}}&lt;closure,core::result::Result&lt;i32, futures::sync::oneshot::Canceled&gt;&gt;\n             at C:\\Users\\Jan Debeuckelaer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-timer-0.2.10\\src\\clock\\clock.rs:141\n  61: std::thread::local::LocalKey&lt;core::cell::Cell&lt;core::option::Option&lt;const tokio_timer::clock::clock::Clock*&gt;&gt;&gt;::try_with&lt;core::cell::Cell&lt;core::option::Option&lt;const tokio_timer::clock::clock::Clock*&gt;&gt;,closure,core::result::Result&lt;i32, futures::sync::oneshot::Canceled&gt;&gt;\n             at /rustc/2aa4c46cfdd726e97360c2734835aa3515e8c858\\src\\libstd\\thread\\local.rs:299\n  62: std::thread::local::LocalKey&lt;core::cell::Cell&lt;core::option::Option&lt;const tokio_timer::clock::clock::Clock*&gt;&gt;&gt;::with&lt;core::cell::Cell&lt;core::option::Option&lt;const tokio_timer::clock::clock::Clock*&gt;&gt;,closure,core::result::Result&lt;i32, futures::sync::oneshot::Canceled&gt;&gt;\n             at /rustc/2aa4c46cfdd726e97360c2734835aa3515e8c858\\src\\libstd\\thread\\local.rs:245\n  63: tokio_timer::clock::clock::with_default&lt;closure,core::result::Result&lt;i32, futures::sync::oneshot::Canceled&gt;&gt;\n             at C:\\Users\\Jan Debeuckelaer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-timer-0.2.10\\src\\clock\\clock.rs:124\n  64: tokio::runtime::current_thread::runtime::{{impl}}::enter::{{closure}}&lt;closure,core::result::Result&lt;i32, futures::sync::oneshot::Canceled&gt;&gt;\n             at C:\\Users\\Jan Debeuckelaer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.1.18\\src\\runtime\\current_thread\\runtime.rs:231\n  65: tokio_reactor::with_default::{{closure}}&lt;closure,core::result::Result&lt;i32, futures::sync::oneshot::Canceled&gt;&gt;\n             at C:\\Users\\Jan Debeuckelaer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-reactor-0.1.9\\src\\lib.rs:237\n  66: std::thread::local::LocalKey&lt;core::cell::RefCell&lt;core::option::Option&lt;tokio_reactor::HandlePriv&gt;&gt;&gt;::try_with&lt;core::cell::RefCell&lt;core::option::Option&lt;tokio_reactor::HandlePriv&gt;&gt;,closure,core::result::Result&lt;i32, futures::sync::oneshot::Canceled&gt;&gt;\n             at /rustc/2aa4c46cfdd726e97360c2734835aa3515e8c858\\src\\libstd\\thread\\local.rs:299\n  67: std::thread::local::LocalKey&lt;core::cell::RefCell&lt;core::option::Option&lt;tokio_reactor::HandlePriv&gt;&gt;&gt;::with&lt;core::cell::RefCell&lt;core::option::Option&lt;tokio_reactor::HandlePriv&gt;&gt;,closure,core::result::Result&lt;i32, futures::sync::oneshot::Canceled&gt;&gt;\n             at /rustc/2aa4c46cfdd726e97360c2734835aa3515e8c858\\src\\libstd\\thread\\local.rs:245\n  68: tokio_reactor::with_default&lt;closure,core::result::Result&lt;i32, futures::sync::oneshot::Canceled&gt;&gt;\n             at C:\\Users\\Jan Debeuckelaer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-reactor-0.1.9\\src\\lib.rs:217\n  69: tokio::runtime::current_thread::runtime::Runtime::enter&lt;closure,core::result::Result&lt;i32, futures::sync::oneshot::Canceled&gt;&gt;\n             at C:\\Users\\Jan Debeuckelaer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.1.18\\src\\runtime\\current_thread\\runtime.rs:230\n  70: tokio::runtime::current_thread::runtime::Runtime::block_on&lt;futures::sync::oneshot::Receiver&lt;i32&gt;&gt;\n             at C:\\Users\\Jan Debeuckelaer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.1.18\\src\\runtime\\current_thread\\runtime.rs:198\n  71: actix::system::SystemRunner::run\n             at C:\\Users\\Jan Debeuckelaer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-0.7.9\\src\\system.rs:174\n  72: actix_web::server::http::HttpServer&lt;actix_web::application::App&lt;()&gt;, closure&gt;::run&lt;actix_web::application::App&lt;()&gt;,closure&gt;\n             at C:\\Users\\Jan Debeuckelaer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-web-0.7.18\\src\\server\\http.rs:539\n  73: hello_cargo::main\n             at .\\src\\main.rs:12\n  74: std::rt::lang_start::{{closure}}&lt;()&gt;\n             at /rustc/2aa4c46cfdd726e97360c2734835aa3515e8c858\\src\\libstd\\rt.rs:64\n  75: std::rt::lang_start_internal::{{closure}}\n             at /rustc/2aa4c46cfdd726e97360c2734835aa3515e8c858\\/src\\libstd\\rt.rs:49\n  76: std::panicking::try::do_call&lt;closure,i32&gt;\n             at /rustc/2aa4c46cfdd726e97360c2734835aa3515e8c858\\/src\\libstd\\panicking.rs:297\n  77: panic_unwind::__rust_maybe_catch_panic\n             at /rustc/2aa4c46cfdd726e97360c2734835aa3515e8c858\\/src\\libpanic_unwind\\lib.rs:92\n             at /rustc/2aa4c46cfdd726e97360c2734835aa3515e8c858\\/src\\libstd\\panicking.rs:276\n  79: std::panic::catch_unwind\n             at /rustc/2aa4c46cfdd726e97360c2734835aa3515e8c858\\/src\\libstd\\panic.rs:388\n  80: std::rt::lang_start_internal\n             at /rustc/2aa4c46cfdd726e97360c2734835aa3515e8c858\\/src\\libstd\\rt.rs:48\n  81: std::rt::lang_start&lt;()&gt;\n             at /rustc/2aa4c46cfdd726e97360c2734835aa3515e8c858\\src\\libstd\\rt.rs:64\n  83: invoke_main\n             at d:\\agent\\_work\\1\\s\\src\\vctools\\crt\\vcstartup\\src\\startup\\exe_common.inl:78\n  84: __scrt_common_main_seh\n             at d:\\agent\\_work\\1\\s\\src\\vctools\\crt\\vcstartup\\src\\startup\\exe_common.inl:288\n  85: BaseThreadInitThunk\n  86: RtlUserThreadStart\nPanic in Arbiter thread, shutting down system.\n</code></pre>\n"}, {"tags": ["rust", "rustdoc"], "comments": [{"owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "edited": false, "score": 0, "creation_date": 1553774187, "post_id": 55324887, "comment_id": 97514169, "body": "rustdoc utilizes <a href=\"https://github.com/raphlinus/pulldown-cmark\" rel=\"nofollow noreferrer\">pulldown-cmark</a> and there&#39;s no support for what you want. You have to use HTML as already answered. Or a) create separate <code>.md</code> files, prepare <code>build.rs</code> to convert <code>.md</code> -&gt; <code>.rs</code> file (prepend <code>&#47;&#47;!</code> or <code>&#47;&#47;&#47;</code>) and use <code>include!</code>, b) wait for <a href=\"https://github.com/rust-lang/rust/issues/44732\" rel=\"nofollow noreferrer\">Add external doc attribute to rustc</a> or c) use nightly with <a href=\"https://github.com/mgattozzi/rdoc\" rel=\"nofollow noreferrer\">rdoc</a>."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "edited": false, "score": 0, "creation_date": 1553939683, "post_id": 55324887, "comment_id": 97578391, "body": "@zrzka Do you want to add that as an answer? You could just refer to the existing answer regarding HTML and provide a tiny example of how to use this external doc attribute. That would be neat :)"}], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 4, "last_activity_date": 1553445546, "last_edit_date": 1553445546, "creation_date": 1553440995, "answer_id": 55325316, "question_id": 55324887, "link": "https://stackoverflow.com/questions/55324887/break-long-table-rows-into-multiple-lines-in-documentation/55325316#55325316", "title": "Break long table rows into multiple lines in documentation", "body": "<p>Use HTML markup.</p>\n\n<pre><code>//! Demonstrating HTML tables.\n//!\n//! &lt;table&gt;\n//!     &lt;thead&gt;\n//!         &lt;tr&gt;\n//!             &lt;th&gt;Foo&lt;/th&gt;\n//!             &lt;th&gt;Bar&lt;/th&gt;\n//!             &lt;th&gt;Baz&lt;/th&gt;\n//!             &lt;th&gt;Quux&lt;/th&gt;\n//!         &lt;/tr&gt;\n//!     &lt;/thead&gt;\n//!     &lt;tbody&gt;\n//!         &lt;tr&gt;\n//!             &lt;td&gt;Hail the turbofish &lt;code&gt;::&amp;lt;&gt;&lt;/code&gt;&lt;/td&gt;\n//!             &lt;td&gt;Ferris for president \ud83e\udd80&lt;/td&gt;\n//!             &lt;td&gt;\n//!                 I can't think of any\n//!                 more \"funny\" things\n//!             &lt;/td&gt;\n//!             &lt;td&gt;oopsie&lt;/td&gt;\n//!         &lt;/tr&gt;\n//!     &lt;/tbody&gt;\n//! &lt;/table&gt;\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1554024814, "post_id": 55433025, "comment_id": 97595700, "body": "Great answer! Thanks for exploring all kinds of possible solutions."}], "tags": [], "owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "is_accepted": true, "score": 1, "last_activity_date": 1553960256, "creation_date": 1553960256, "answer_id": 55433025, "question_id": 55324887, "link": "https://stackoverflow.com/questions/55324887/break-long-table-rows-into-multiple-lines-in-documentation/55433025#55433025", "title": "Break long table rows into multiple lines in documentation", "body": "<h2>HTML</h2>\n\n<p>As already answered by Francis, you have to use HTML if you'd like to keep short lines. <code>rustdoc</code> utilizes <a href=\"https://github.com/raphlinus/pulldown-cmark\" rel=\"nofollow noreferrer\">pulldown-cmark</a> and there's no support for what you want.</p>\n\n<h2>Include external documentation</h2>\n\n<h3>nightly &amp; doc</h3>\n\n<p><a href=\"https://github.com/rust-lang/rust/issues/44732\" rel=\"nofollow noreferrer\">Tracking issue: rfc 1990 - add external doc attribute to rustc</a>. In case of <code>nightly</code> toolchain, you can enable <code>external_doc</code> feature and include external Markdown files with <code>#[doc(include = \"../some/path\")]</code>.</p>\n\n<p>One thing to note - no matter in what module you will use <code>#[doc(include = \"...\")]</code>, the path is <strong>always</strong> relative to the crate root (<code>lib.rs</code>, <code>main.rs</code>, ...).</p>\n\n<p>Example:</p>\n\n<pre><code>.\n|____Cargo.toml\n|____Cargo.lock\n|____doc\n| |____foo-bar-bar.md\n|____src\n| |____main-hallo.md\n| |____foo\n| | |____mod.rs\n| | |____bar.rs\n| |____main.rs\n</code></pre>\n\n<p><code>src/main.rs</code>:</p>\n\n<pre><code>#![feature(external_doc)]\n\npub mod foo;\n\n#[doc(include = \"main-hallo.md\")]\npub fn hallo() {}\n\nfn main() {}\n</code></pre>\n\n<p><code>src/foo/bar.rs</code>:</p>\n\n<pre><code>#[doc(include = \"../doc/foo-bar-bar.md\")]\npub struct Bar;\n</code></pre>\n\n<p>You can keep separate Markdown documentation in the <code>src/</code> folder, you can have it in a separate folder like <code>doc/</code>, etc. But the path is always relative to the crate root.</p>\n\n<h3>nightly &amp; rdoc</h3>\n\n<p>There's also <a href=\"https://github.com/mgattozzi/rdoc\" rel=\"nofollow noreferrer\">rdoc</a> compiler plugin (requires <code>nightly</code>), which basically does the same thing. How to enable &amp; use it is described in the project <a href=\"https://github.com/mgattozzi/rdoc/blob/master/README.md\" rel=\"nofollow noreferrer\">README.md</a>.</p>\n\n<h3>stable</h3>\n\n<p>For stable, I'd do the following:</p>\n\n<ul>\n<li>documentation in separate Markdown files,</li>\n<li>custom <code>build.rs</code> which will scan for <code>.md</code> files and outputs them as <code>.rs</code> files (same content, just prepend every line with <code>///</code> or <code>//!</code>),\n\n<ul>\n<li>put them in the <code>std::env::var(\"OUT_DIR\")</code> folder,</li>\n</ul></li>\n<li>include them in your source code,\n\n<ul>\n<li>via <code>include!(concat!(env!(\"OUT_DIR\"), \"/main-hallo-md.rs\"));</code>.</li>\n</ul></li>\n</ul>\n\n<h2>rustfmt &amp; nightly</h2>\n\n<p>There's <code>comment_width</code> option (defaults to <code>80</code>) &amp; <code>wrap_comments</code> option (defaults to <code>false</code>). This helps you to keep comments up to some width. But I tried it with the long Markdown table line and it wrapped it -> broken table. Don't use it.</p>\n"}], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 344, "favorite_count": 0, "accepted_answer_id": 55433025, "answer_count": 2, "score": 3, "last_activity_date": 1553960256, "creation_date": 1553438159, "question_id": 55324887, "link": "https://stackoverflow.com/questions/55324887/break-long-table-rows-into-multiple-lines-in-documentation", "title": "Break long table rows into multiple lines in documentation", "body": "<p>I want to document my crate and include a table in the documentation:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>//! Demonstrating MarkDown tables.\n//!\n//! | Foo | Bar | Baz | Qux |\n//! | --- | --- | --- | --- |\n//! | Hail the turbofish `::&lt;&gt;` | Ferris for president \ud83e\udd80 | I can't think of any more \"funny\" things | oopsie |\n//!\n</code></pre>\n\n<p>Rendering this with <code>cargo doc</code> results in:</p>\n\n<p><a href=\"https://i.stack.imgur.com/P3Koa.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/P3Koa.png\" alt=\"correct table\"></a></p>\n\n<p>This is what I want. However, you might have noticed that the one source code line is very long. In fact, over 100 characters long. Like many Rust projects, I want to keep all my lines under 100 characters long. So I tried to break the line somehow. </p>\n\n<p>All of these versions:</p>\n\n<pre><code>//! | Foo | Bar | Baz | Qux |\n//! | --- | --- | --- | --- |\n//! | Hail the turbofish `::&lt;&gt;` | Ferris for president \ud83e\udd80 \n//! I can't think of any more \"funny\" things | oopsie |\n\n//! | Foo | Bar | Baz | Qux |\n//! | --- | --- | --- | --- |\n//! | Hail the turbofish `::&lt;&gt;` | Ferris for president \ud83e\udd80 |\n//! I can't think of any more \"funny\" things | oopsie |\n\n//! | Foo | Bar | Baz | Qux |\n//! | --- | --- | --- | --- |\n//! | Hail the turbofish `::&lt;&gt;` | Ferris for president \ud83e\udd80\n//! | I can't think of any more \"funny\" things | oopsie |\n\n//! | Foo | Bar | Baz | Qux |\n//! | --- | --- | --- | --- |\n//! | Hail the turbofish `::&lt;&gt;` | Ferris for president \ud83e\udd80 |\n//! | I can't think of any more \"funny\" things | oopsie |\n\n//! | Foo | Bar | Baz | Qux |\n//! | --- | --- | --- | --- |\n//! | Hail the turbofish `::&lt;&gt;` | Ferris for president \ud83e\udd80 \\\n//! I can't think of any more \"funny\" things | oopsie |\n</code></pre>\n\n<p>Results in:</p>\n\n<p><a href=\"https://i.stack.imgur.com/xiw3a.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/xiw3a.png\" alt=\"enter image description here\"></a></p>\n\n<p><strong>What options do I have to include long table rows in my documentation without violating the line length limit?</strong></p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 1, "creation_date": 1553434698, "post_id": 55324285, "comment_id": 97374958, "body": "&quot;Meaningless&quot; - depends on what you&#39;re doing. If you only care about tinkering with the local version you have - yes, path option will override it. But if you want to push the crate to crates.io and you don&#39;t have concrete version numbers for all dependencies, the crate will be rejected."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1553437041, "last_edit_date": 1553437041, "creation_date": 1553434631, "answer_id": 55324371, "question_id": 55324285, "link": "https://stackoverflow.com/questions/55324285/why-does-replacing-a-dependencys-version-and-path-attribute-with-a-git-hash-cau/55324371#55324371", "title": "Why does replacing a dependency&#39;s version and path attribute with a git hash cause compilation errors?", "body": "<p>This is the same problem as <a href=\"https://stackoverflow.com/q/44437123/155423\">Why is a trait not implemented for a type that clearly has it implemented?</a> \u2014 by pulling in <strong>both</strong> the git version of the code and the local version of the code (via <code>tarpc = { path = \"../tarpc\" }</code>), you are compiling the <code>tarpc</code> crate two different times. The traits from each are not the same as each other, they are effectively different versions of the same crate.</p>\n\n<p>This can be verified using <code>cargo tree -d -i</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>tarpc-lib v0.2.0 (https://github.com/google/tarpc.git?rev=06544faa5a0872d4be989451afc0a2b1e1278df4#06544faa)\n\u2514\u2500\u2500 tarpc-bincode-transport v0.3.0 (https://github.com/google/tarpc.git?rev=06544faa5a0872d4be989451afc0a2b1e1278df4#06544faa)\n    \u2514\u2500\u2500 tarpc-example-service v0.2.0 (/private/tmp/tarpc/example-service)\n\ntarpc-lib v0.2.0 (/private/tmp/tarpc/rpc)\n\u2514\u2500\u2500 tarpc v0.14.1 (/private/tmp/tarpc/tarpc)\n    \u2514\u2500\u2500 tarpc-example-service v0.2.0 (/private/tmp/tarpc/example-service)\n\ntarpc-trace v0.1.0 (https://github.com/google/tarpc.git?rev=06544faa5a0872d4be989451afc0a2b1e1278df4#06544faa)\n\u2514\u2500\u2500 tarpc-lib v0.2.0 (https://github.com/google/tarpc.git?rev=06544faa5a0872d4be989451afc0a2b1e1278df4#06544faa)\n    \u2514\u2500\u2500 tarpc-bincode-transport v0.3.0 (https://github.com/google/tarpc.git?rev=06544faa5a0872d4be989451afc0a2b1e1278df4#06544faa)\n        \u2514\u2500\u2500 tarpc-example-service v0.2.0 (/private/tmp/tarpc/example-service)\n\ntarpc-trace v0.1.0 (/private/tmp/tarpc/trace)\n\u2514\u2500\u2500 tarpc-lib v0.2.0 (/private/tmp/tarpc/rpc)\n    \u2514\u2500\u2500 tarpc v0.14.1 (/private/tmp/tarpc/tarpc)\n        \u2514\u2500\u2500 tarpc-example-service v0.2.0 (/private/tmp/tarpc/example-service)\n</code></pre>\n\n<p>If you consistently use the version from git, it will work:</p>\n\n<pre><code>tarpc = { git = \"https://github.com/google/tarpc.git\", rev = \"06544faa5a0872d4be989451afc0a2b1e1278df4\", features = [\"serde1\"] }\n</code></pre>\n"}], "owner": {"reputation": 657, "user_id": 2547570, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/66ac34b6d04aa0bf9c738ef391c8b722?s=128&d=identicon&r=PG", "display_name": "mq7", "link": "https://stackoverflow.com/users/2547570/mq7"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 99, "favorite_count": 0, "accepted_answer_id": 55324371, "answer_count": 1, "score": 0, "last_activity_date": 1553437636, "creation_date": 1553434139, "last_edit_date": 1553437636, "question_id": 55324285, "link": "https://stackoverflow.com/questions/55324285/why-does-replacing-a-dependencys-version-and-path-attribute-with-a-git-hash-cau", "title": "Why does replacing a dependency&#39;s version and path attribute with a git hash cause compilation errors?", "body": "<p>I have a strange dependency problem. Here are steps to reproduce:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>\u276f rustc -V\nrustc 1.35.0-nightly (82e2f3ec2 2019-03-20)\n\n\u276f git clone https://github.com/google/tarpc.git\n\u276f cd tarpc/example-service\n\n\u276f cargo build\n    Finished dev [unoptimized + debuginfo] target(s) in 0.13s\n\n\u276f git rev-parse HEAD\n06544faa5a0872d4be989451afc0a2b1e1278df4\n</code></pre>\n\n<p>Now I replace a line in Cargo.toml from</p>\n\n<pre><code>bincode-transport = { package = \"tarpc-bincode-transport\", version = \"0.3\", path = \"../bincode-transport\" }\n</code></pre>\n\n<p>to</p>\n\n<pre><code>bincode-transport = { package = \"tarpc-bincode-transport\", git=\"https://github.com/google/tarpc.git\", rev=\"06544faa5a0872d4be989451afc0a2b1e1278df4\" }\n</code></pre>\n\n<p>which represents the same codebase (I think <code>version = 0.3</code> is meaningless),</p>\n\n<p>Then I have a build error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>\u276f cargo build\n    Blocking waiting for file lock on the git checkouts\n    Updating git repository `https://github.com/google/tarpc.git`\n   Compiling tarpc-example-service v0.2.0 (tarpc/example-service)\nerror[E0277]: the trait bound `tarpc_bincode_transport::Transport&lt;tokio_tcp::stream::TcpStream, _, _&gt;: tarpc_lib::transport::Transport` is not satisfied\n  --&gt; example-service/src/server.rs:45:4\n   |\n45 |         .incoming(transport)\n   |          ^^^^^^^^ the trait `tarpc_lib::transport::Transport` is not implemented for `tarpc_bincode_transport::Transport&lt;tokio_tcp::stream::TcpStream, _, _&gt;`\n\nerror[E0277]: the trait bound `tarpc_bincode_transport::Transport&lt;tokio_tcp::stream::TcpStream, _, _&gt;: tarpc_lib::transport::Transport` is not satisfied\n  --&gt; example-service/src/client.rs:20:29\n   |\n20 |     let mut client = await!(service::new_stub(client::Config::default(), transport))?;\n   |                             ^^^^^^^^^^^^^^^^^ the trait `tarpc_lib::transport::Transport` is not implemented for `tarpc_bincode_transport::Transport&lt;tokio_tcp::stream::TcpStream, _, _&gt;`\n   |\n   = note: required by `service::new_stub`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0277`.\nerror: Could not compile `tarpc-example-service`.\nwarning: build failed, waiting for other jobs to finish...\nerror[E0599]: no method named `respond_with` found for type `impl futures_core::stream::Stream` in the current scope\n  --&gt; example-service/src/server.rs:48:4\n   |\n48 |         .respond_with(service::serve(HelloServer));\n   |          ^^^^^^^^^^^^\n   |\n   = note: the method `respond_with` exists but the following trait bounds were not satisfied:\n           `&amp;impl futures_core::stream::Stream : tarpc_lib::server::Handler&lt;_, _, _&gt;`\n           `&amp;mut impl futures_core::stream::Stream : tarpc_lib::server::Handler&lt;_, _, _&gt;`\n           `impl futures_core::stream::Stream : tarpc_lib::server::Handler&lt;_, _, _&gt;`\n\nerror: aborting due to 2 previous errors\n\nSome errors occurred: E0277, E0599.\nFor more information about an error, try `rustc --explain E0277`.\nerror: Could not compile `tarpc-example-service`.\n</code></pre>\n\n<p><code>cargo clean</code> didn't help. How is this possible? </p>\n"}, {"tags": ["reference", "rust", "iterator"], "comments": [{"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1553421636, "post_id": 55321962, "comment_id": 97371469, "body": "What you ask is unclear, Could you please provide <a href=\"https://stackoverflow.com/help/mcve\">MCVE</a> and specify &#39;x&#39; variable. &#39;is_even&#39; function signature and the type of &#39;x&#39; is unknown in the question."}], "answers": [{"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 4, "last_activity_date": 1553423882, "creation_date": 1553423882, "answer_id": 55322911, "question_id": 55321962, "link": "https://stackoverflow.com/questions/55321962/how-do-references-work-in-patterns-in-binding-expressions/55322911#55322911", "title": "How do references work in patterns in binding expressions?", "body": "<p>What you are seeing here is called <strong>destructuring</strong>. This is a feature where you can take apart a <em>structure</em> with a pattern. </p>\n\n<p>You probably already saw something like <code>let (a, b) = returns_a_tuple();</code>. Here, a tuple is destructured. You can also destructure references:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// The comments at the end of the line tell you the type of the variable\nlet i = 3;                // : i32\nlet ref_i = &amp;i;           // : &amp;i32\nlet ref_ref_i = &amp;ref_i;   // : &amp;&amp;i32\n\nlet &amp;x = ref_i;       // : i32\nlet &amp;y = ref_ref_i;   // : &amp;i32\nlet &amp;&amp;z = ref_ref_i;  // : i32\n\n// All of these error because we try to destructure more layers of references\n// than there are.\nlet &amp;a = i;\nlet &amp;&amp;b = ref_i;\nlet &amp;&amp;&amp;c = ref_ref_i;\n</code></pre>\n\n<p>This has the counter-intuitive effect that <strong>the more <code>&amp;</code> you add in the pattern, the fewer <code>&amp;</code> will the type of the variable have</strong>. But it does make sense in the context of destructuring: when you already mention the structure in the pattern, the structure won't be in the bound variables anymore.</p>\n\n<p>(It is worth noting that this \"destructuring references away\" only works with referee types that are <code>Copy</code>. Otherwise you will get a \"cannot move out of borrowed content\" error.)</p>\n\n<hr>\n\n<p>Now what does that have to do with your <code>for</code> loop and the closures? Turns out: patterns are everywhere. The slot between <code>for</code> and <code>in</code> in the for loop is a pattern, and arguments of functions and closures are pattern as well! This works:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// Destructuring a tuple in the for loop pattern\nlet v = vec![3];\nfor (i, elem) in v.iter().enumerate() {}\n\n// Destructuring an array in the function argument (works the same for closures)\nfn foo([x, y, z]: [f32; 3]) {}\n</code></pre>\n\n<blockquote>\n  <p>I suppose it means <code>list.iter()</code> returns the reference to the elements in the list </p>\n</blockquote>\n\n<p>Exactly.</p>\n\n<blockquote>\n  <p>... hence <code>&amp;item</code></p>\n</blockquote>\n\n<p>\"hence\" is not correct here. The author of this code didn't want to work with the reference to the item, but instead work with the real value. So they added the <code>&amp;</code> in the pattern to destructure the reference away.</p>\n\n<blockquote>\n  <p>but while comparing it with largest number why are we not using <code>*item</code>? </p>\n</blockquote>\n\n<p>Yes, because the reference was already removed by the destructuring pattern.</p>\n\n<blockquote>\n  <p>Also, when I change the <code>&amp;item</code> to <code>item</code> in the first line I am forced to use <code>*item</code> in 2nd and 3rd line by the compiler.</p>\n</blockquote>\n\n<p>Yes, because now the pattern doesn't destructure the reference anymore, so <code>item</code> is a reference again. This is the basic gist with all of this: <strong>most of the time you can <em>either</em> remove the reference in the pattern by adding a <code>&amp;</code> <em>or</em> you can remove the reference when using the variable by adding a <code>*</code>.</strong></p>\n\n<blockquote>\n  <p>Here the closure in <code>take_while</code> accepts <code>&amp;x</code> but uses <code>x</code> directly but the closure in <code>filter</code> takes <code>x</code> without reference but passes <code>*x</code> to <code>is_even</code>.</p>\n</blockquote>\n\n<p>It should be clear by now why that is, right? The <code>take_while</code> closure removes the reference via destructuring in the pattern while the <code>filter</code> closure does it via standard dereferencing.</p>\n\n<hr>\n\n<p>You can read more about all of this in <a href=\"https://doc.rust-lang.org/book/ch18-03-pattern-syntax.html#destructuring-references\" rel=\"nofollow noreferrer\">this chapter of the book</a>.</p>\n"}], "owner": {"reputation": 541, "user_id": 8407160, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ATLGJ.png?s=128&g=1", "display_name": "Akshay Naik", "link": "https://stackoverflow.com/users/8407160/akshay-naik"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 89, "favorite_count": 0, "closed_date": 1553431448, "accepted_answer_id": 55322911, "answer_count": 1, "score": 0, "last_activity_date": 1553431501, "creation_date": 1553416431, "last_edit_date": 1553422754, "question_id": 55321962, "link": "https://stackoverflow.com/questions/55321962/how-do-references-work-in-patterns-in-binding-expressions", "closed_reason": "Duplicate", "title": "How do references work in patterns in binding expressions?", "body": "<p>I came across below example in Rust book.</p>\n\n<pre><code>for &amp;item in list.iter() {\n    if item &gt; largest {\n        largest = item;\n    }\n}\n</code></pre>\n\n<p>I suppose it means <code>list.iter()</code> returns the reference to the elements in the list hence <code>&amp;item</code> but while comparing it with largest number why are we not using <code>*item</code>? Also, when I change the <code>&amp;item</code> to <code>item</code> in the first line I am forced to use <code>*item</code> in 2nd and 3rd line by the compiler.</p>\n\n<p>I have seen another example online.</p>\n\n<pre><code>(0..).map(|x| x * x)\n    .take_while(|&amp;x| x &lt;= limit)\n    .filter(|x| is_even(*x))\n</code></pre>\n\n<p>Here the closure in <code>take_while</code> accepts <code>&amp;x</code> but uses <code>x</code> directly but the closure in <code>filter</code> takes <code>x</code> without reference but passes <code>*x</code> to <code>is_even</code>.</p>\n\n<p>So how does this work in Rust?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 597, "user_id": 3404377, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d7df3cf3bc9180341a3e996358cc9fe4?s=128&d=identicon&r=PG&f=1", "display_name": "ddulaney", "link": "https://stackoverflow.com/users/3404377/ddulaney"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1553405508, "post_id": 55320663, "comment_id": 97368679, "body": "@Stargateur I will <i>eventually</i> use <code>unsafe</code> to manipulate the <code>T</code> through the pointer. Additionally, the FFI interface I am using has borrowing semantics (I allocate something and pass in a pointer to it), not ownership semantics, so <code>&amp;</code> seems like a better choice than <code>Box</code>. This question is about constructing the pointer, which is a safe operation. My main question is: how can I make sure the resulting pointer actually points to the same thing as the reference?"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1553430687, "last_edit_date": 1553430687, "creation_date": 1553429704, "answer_id": 55323693, "question_id": 55320663, "link": "https://stackoverflow.com/questions/55320663/is-it-safe-to-use-a-closure-to-get-a-raw-pointer-from-an-optiont/55323693#55323693", "title": "Is it safe to use a closure to get a raw pointer from an Option&lt;&amp;T&gt;?", "body": "<p>Yes, this is safe. I'd write it as:</p>\n\n<pre><code>use std::ptr;\n\nfn safe_wrapper(opt: Option&lt;&amp;u8&gt;) {\n    let p = opt.map_or_else(ptr::null, |x| x);\n    unsafe { ffi_call(p) }\n}\n</code></pre>\n\n<p>If you find yourself writing this a lot, you could make it into a trait and reduce it down to a single method call.</p>\n\n<blockquote>\n  <p>the pointer might be invalidated as it passes through the closure</p>\n</blockquote>\n\n<p>It <em>could</em> be, if you invalidate it yourself somehow. Because the function takes a reference, you know for sure that the referred-to value will be valid for the duration of the function call \u2014 that's the purpose of Rust's borrow checker.</p>\n\n<p>The only way for the pointer to become invalid is if you change the value of the pointer (e.g. you add an offset to it). Since you don't do that, it's fine.</p>\n\n<blockquote>\n  <p>Does Rust make a guarantee that the final pointer will point to the same thing as the original reference? </p>\n</blockquote>\n\n<p>It depends what you mean by \"final\". Converting a reference to a pointer will always result in both values containing the same location in memory. Anything else would be deliberately malicious and no one would ever have used Rust to begin with. </p>\n\n<blockquote>\n  <p>If <code>T</code> is <code>Copy</code>, does this change the semantics in a meaningful way?</p>\n</blockquote>\n\n<p>No. Besides we are talking about a <code>&amp;T</code>, which is <strong>always</strong> <code>Copy</code></p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/35885670/155423\">Convert Option&lt;&amp;mut T&gt; to *mut T</a></li>\n<li><a href=\"https://stackoverflow.com/q/54195517/155423\">Should we use Option or ptr::null to represent a null pointer in Rust?</a></li>\n<li><a href=\"https://stackoverflow.com/q/49392712/155423\">Is it valid to use ptr::NonNull in FFI?</a></li>\n</ul>\n\n<hr>\n\n<blockquote>\n  <p>the FFI interface I am using has borrowing semantics (I allocate something <strong>and pass in a pointer to it</strong>), not ownership semantics</p>\n</blockquote>\n\n<p>To be clear, you cannot determine ownership based purely on what the function types are. </p>\n\n<p>This C function takes ownership:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>void string_free(char *)\n</code></pre>\n\n<p>This C function borrows:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>size_t string_len(char *)\n</code></pre>\n\n<p>Both take a pointer. Rust improves on this situation by clearly delineating what is a borrow and what is a transfer of ownership.</p>\n\n<blockquote>\n<pre><code>extern \"C\" {\n    // Parameter may be null\n    fn ffi_call(*const T);\n}\n</code></pre>\n</blockquote>\n\n<p>This code is nonsensical; it does not define the generic type <code>T</code> and FFI functions cannot have generic types anyway.</p>\n"}], "owner": {"reputation": 597, "user_id": 3404377, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d7df3cf3bc9180341a3e996358cc9fe4?s=128&d=identicon&r=PG&f=1", "display_name": "ddulaney", "link": "https://stackoverflow.com/users/3404377/ddulaney"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 254, "favorite_count": 0, "accepted_answer_id": 55323693, "answer_count": 1, "score": 2, "last_activity_date": 1553430687, "creation_date": 1553400844, "last_edit_date": 1553406296, "question_id": 55320663, "link": "https://stackoverflow.com/questions/55320663/is-it-safe-to-use-a-closure-to-get-a-raw-pointer-from-an-optiont", "title": "Is it safe to use a closure to get a raw pointer from an Option&lt;&amp;T&gt;?", "body": "<p>I have an <code>Option&lt;&amp;T&gt;</code> and I would like to have a raw <code>*const T</code> which is null if the option was <code>None</code>. I want to wrap an FFI call that takes a pointer to a Rust-allocated object.</p>\n\n<p>Additionally, the FFI interface I am using has borrowing semantics (I allocate something and pass in a pointer to it), not ownership semantics</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern \"C\" {\n    // Parameter may be null\n    fn ffi_call(*const T);\n}\n\nfn safe_wrapper(opt: Option&lt;&amp;T&gt;) {\n    let ptr: *const T = ???;\n    unsafe { ffi_call(ptr) }\n}\n</code></pre>\n\n<p>I could use a <code>match</code> statement to do this, but that method feels very verbose.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let ptr = match opt {\n    Some(inner) =&gt; inner as *const T,\n    None =&gt; null(),\n};\n</code></pre>\n\n<p>I could also map the reference to a pointer, then use <code>unwrap_or</code>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let ptr = opt.map(|inner| inner as *const T).unwrap_or(null());\n</code></pre>\n\n<p>However, I'm worried that the pointer might be invalidated as it passes through the closure. Does Rust make a guarantee that the final pointer will point to the same thing as the original reference? If <code>T</code> is <code>Copy</code>, does this change the semantics in a meaningful way? Is there a better way that I am overlooking?</p>\n"}, {"tags": ["string", "loops", "rust", "string-concatenation"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1553393730, "post_id": 55320038, "comment_id": 97367205, "body": "There is indeed much more simple: <a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=93eeda9e17f3722775ab1a68da8d5058\" rel=\"nofollow noreferrer\">play.integer32.com/&hellip;</a>. I let you look at the source of <a href=\"https://docs.rs/itertools/0.8.0/itertools/trait.Itertools.html#method.join\" rel=\"nofollow noreferrer\"><code>join()</code></a> that very basic"}, {"owner": {"reputation": 15015, "user_id": 1191635, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/I8bEt.jpg?s=128&g=1", "display_name": "Armeen Harwood", "link": "https://stackoverflow.com/users/1191635/armeen-harwood"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1553394698, "post_id": 55320038, "comment_id": 97367346, "body": "That is much better however it asked me do it in inside a for loop join seems to replace that loop which breaks the initial rule set.  Do you see a way to join in the forloop?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1553395005, "post_id": 55320038, "comment_id": 97367387, "body": "if you can only write in the loop than the only thing I see is to not add the space if your string is empty. But that very ugly. <code>if sentence.len() != 0 { sentence.push_str(space); } sentence.push_str(word);</code> And that doesn&#39;t produce the desired output if first words are empty."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1553428275, "post_id": 55320038, "comment_id": 97373129, "body": "See also <a href=\"https://stackoverflow.com/q/36941851/155423\">the way to answer this without the silly restrictions</a>."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1553431081, "post_id": 55323697, "comment_id": 97373922, "body": "This answer ignores the strict conditions that the OP / koan has placed: you are <i>only</i> allowed to edit the code <b>inside the for loop</b>. Removing the for loop or adding methods breaks those restrictions. Solutions for the general problem are well-described in <a href=\"https://stackoverflow.com/q/36941851/155423\">What&#39;s an idiomatic way to print an iterator separated by spaces in Rust?</a>"}, {"owner": {"reputation": 2591, "user_id": 227224, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/641a3c5c6bf3402b88999ae9b0e8d7d4?s=128&d=identicon&r=PG", "display_name": "jelford", "link": "https://stackoverflow.com/users/227224/jelford"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1553431562, "post_id": 55323697, "comment_id": 97374079, "body": "@shepmaster thanks for the clear explanation of why you don&#39;t feel this answer is correct."}, {"owner": {"reputation": 15015, "user_id": 1191635, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/I8bEt.jpg?s=128&g=1", "display_name": "Armeen Harwood", "link": "https://stackoverflow.com/users/1191635/armeen-harwood"}, "edited": false, "score": 0, "creation_date": 1553530097, "post_id": 55323697, "comment_id": 97408901, "body": "Ahh the pop at the end is clever! I should have guessed this."}], "tags": [], "owner": {"reputation": 2591, "user_id": 227224, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/641a3c5c6bf3402b88999ae9b0e8d7d4?s=128&d=identicon&r=PG", "display_name": "jelford", "link": "https://stackoverflow.com/users/227224/jelford"}, "is_accepted": true, "score": 0, "last_activity_date": 1553431127, "last_edit_date": 1553431127, "creation_date": 1553429737, "answer_id": 55323697, "question_id": 55320038, "link": "https://stackoverflow.com/questions/55320038/concatenate-strings-with-spaces-using-only-conditionals-inside-of-a-for-loop-bod/55323697#55323697", "title": "Concatenate strings with spaces using only conditionals inside of a for-loop body", "body": "<p>You can use <a href=\"https://doc.rust-lang.org/stable/std/slice/trait.SliceConcatExt.html#method.join\" rel=\"nofollow noreferrer\"><code>slice::join</code></a>:</p>\n\n<pre><code>#[test]\nfn for_loops_two() {\n    let words: [&amp;'static str; 3] = [\"I\", \"love\", \"Rust\"];\n\n    let sentence = words.join(\" \");\n\n    assert!(sentence == \"I love Rust\".to_string());\n}\n</code></pre>\n\n<p>A note on the linked <code>SliceConcatExt</code> trait: it's listed as unstable on the docs, but the <em>methods</em> are stable - the above compiles just fine under the current stable edition of Rust.</p>\n\n<p>If you'd rather stick to the constraints of the koan and use a for-loop, you can either use an <code>if</code> as you suggest (figuring out whether you're at the end using <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.enumerate\" rel=\"nofollow noreferrer\"><code>enumerate</code></a>), or <a href=\"https://doc.rust-lang.org/std/string/struct.String.html#method.pop\" rel=\"nofollow noreferrer\"><code>pop</code></a> the last space from the end of the string:</p>\n\n<pre><code>#[test]\nfn for_loops_two_with_len_check() {\n    let words: [&amp;'static str; 3] = [\"I\", \"love\", \"Rust\"];\n    const SPACE: char = ' ';\n    let number_of_words = words.len();\n    let mut sentence = String::new();\n\n    for (i, word) in words.iter().enumerate() {\n        sentence.push_str(word);\n        if i &lt; number_of_words-1 {\n            sentence.push(SPACE);\n        }\n    }\n\n    assert!(sentence == \"I love Rust\".to_string());\n}\n\n\n#[test]\nfn for_loops_two_with_pop() {\n    let words: [&amp;'static str; 3] = [\"I\", \"love\", \"Rust\"];\n    const SPACE: char = ' ';\n    let mut sentence = String::new();\n\n    for word in words.iter() {\n        sentence.push_str(word);\n        sentence.push(SPACE);\n    }\n    let _ = sentence.pop();\n\n    assert!(sentence == \"I love Rust\".to_string());\n}\n</code></pre>\n"}], "owner": {"reputation": 15015, "user_id": 1191635, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/I8bEt.jpg?s=128&g=1", "display_name": "Armeen Harwood", "link": "https://stackoverflow.com/users/1191635/armeen-harwood"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 347, "favorite_count": 2, "accepted_answer_id": 55323697, "answer_count": 1, "score": 1, "last_activity_date": 1569987592, "creation_date": 1553392073, "last_edit_date": 1569987592, "question_id": 55320038, "link": "https://stackoverflow.com/questions/55320038/concatenate-strings-with-spaces-using-only-conditionals-inside-of-a-for-loop-bod", "title": "Concatenate strings with spaces using only conditionals inside of a for-loop body", "body": "<p>I'm doing <a href=\"https://github.com/crazymykl/rust-koans\" rel=\"nofollow noreferrer\">Rust Koans</a> and am stuck on a this question:</p>\n\n<pre><code>#[test]\nfn for_loops_two() {\n    let words: [&amp;'static str; 3] = [\"I\", \"love\", \"Rust\"];\n    let space: &amp;str = \" \";\n    let mut sentence: String = String::new();\n    for word in words.iter() {\n        // __\n    }\n\n    println!(\"{:?}\", sentence);\n    assert!(sentence == \"I love Rust\".to_string());\n}\n</code></pre>\n\n<p>I know I need to concatenate the string but this will fail:</p>\n\n<pre><code>#[test]\nfn for_loops_two() {\n    let words: [&amp;'static str; 3] = [\"I\", \"love\", \"Rust\"];\n    let mut sentence: String = String::new();\n    for word in words.iter() {\n        sentence.push_str(word);\n    }\n\n    println!(\"{:?}\", sentence); // \"ILoveRust\"\n    assert!(sentence == \"I love Rust\".to_string());\n}\n</code></pre>\n\n<p>I can add a space after each iteration:</p>\n\n<pre><code>#[test]\nfn for_loops_two() {\n    let words: [&amp;'static str; 3] = [\"I\", \"love\", \"Rust\"];\n    let space: &amp;str = \" \";\n    let mut sentence: String = String::new();\n    for word in words.iter() {\n        sentence.push_str(word);\n        sentence.push_str(space);\n    }\n\n    println!(\"{:?}\", sentence); // \"I Love Rust \"\n    assert!(sentence == \"I love Rust\".to_string());\n}\n</code></pre>\n\n<p>This will also fail because the final iteration will add a space.</p>\n\n<p>I guess I could write a conditional if we are on the last iteration, but I'm struggling to get the syntax correct.  Moreover, I feel like there is a much better solution for all of this and I just can't figure out syntax.</p>\n\n<p>How can I make the assertion above pass with a conditional in the loop to not add the space on the last iteration?</p>\n"}, {"tags": ["generics", "rust", "traits"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1553376169, "post_id": 55317890, "comment_id": 97363887, "body": "The duplicate explains the same core problem for the <code>From</code> trait. TL;DR: What if <code>Fruit</code> implemented <code>Read</code>? Then it would be ambiguous which implementation to use."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1553376385, "post_id": 55317890, "comment_id": 97363938, "body": "<a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=a3350d912a4dedd58441c1627221bc83\" rel=\"nofollow noreferrer\">You can introduce a newtype to avoid the ambiguity</a>."}, {"owner": {"reputation": 1585, "user_id": 3193180, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZJHYL.jpg?s=128&g=1", "display_name": "kreo", "link": "https://stackoverflow.com/users/3193180/kreo"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1553409191, "post_id": 55317890, "comment_id": 97369182, "body": "Do I understand it right that, if I don&#39;t implement Read for Fruit in my own module, then no third party module will be able to implement it? Hence theoretically we are safe here as long as I don&#39;t implement Read myself?"}, {"owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "edited": false, "score": 0, "creation_date": 1553453349, "post_id": 55317890, "comment_id": 97380509, "body": "@kreo it&#39;s described in this <a href=\"https://doc.rust-lang.org/book/ch10-02-traits.html\" rel=\"nofollow noreferrer\">chapter</a>: <i>One restriction to note with trait implementations is that we can implement a trait on a type only if either the trait or the type is local to our crate. ... This restriction is part of a property of programs called coherence, and more specifically the orphan rule, so named because the parent type is not present. This rule ensures that other people\u2019s code can\u2019t break your code and vice versa.</i>"}], "owner": {"reputation": 1585, "user_id": 3193180, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZJHYL.jpg?s=128&g=1", "display_name": "kreo", "link": "https://stackoverflow.com/users/3193180/kreo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 550, "favorite_count": 0, "closed_date": 1553375999, "answer_count": 0, "score": 3, "last_activity_date": 1553374405, "creation_date": 1553371581, "last_edit_date": 1553374405, "question_id": 55317890, "link": "https://stackoverflow.com/questions/55317890/tryfromt-conflicting-implementation", "closed_reason": "Duplicate", "title": "TryFrom&lt;T&gt;: conflicting implementation", "body": "<p>I was writing a network app in Rust and wanted to define a set of functions that, given raw bytes sequence, would convert it into some struct. It seemed that <code>TryFrom</code> trait was a perfect fit; however, I am getting a very uninformative error message when I try to compile even the very basic example code:</p>\n\n<pre><code>#![feature(try_from)]\n\nuse std::convert::TryFrom;\nuse std::io::Read;\n\n#[derive(Debug)]\nenum Fruit {\n    Apple = 1,\n    Orange = 2,\n}\n\nimpl&lt;T: Read&gt; TryFrom&lt;T&gt; for Fruit {\n    type Error = ();\n\n    fn try_from(reader: T) -&gt; Result&lt;Fruit, ()&gt; {\n        match reader.bytes().next() {\n            Some(x) if x == Fruit::Apple as u8 =&gt; Ok(Fruit::Apple),\n            Some(x) if x == Fruit::Orange as u8 =&gt; Ok(Fruit::Orange),\n            _ =&gt; Err(())\n        }\n    }\n}\n\nfn main() {\n    let bytes = b\"\\x01\";\n    let fruit = Fruit::try_from(bytes).unwrap();\n    println!(\"The fruit is: {:?}\", fruit);\n}\n</code></pre>\n\n<p>The error  is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Error[E0119]: conflicting implementations of trait `std::convert::TryFrom&lt;_&gt;` for type `Fruit`:\n  --&gt; src/main.rs:11:1                                                           \n   |                                                                             \n11 | impl&lt;T: Read&gt; TryFrom&lt;T&gt; for Fruit {                                        \n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                          \n   |                                                                             \n   = note: conflicting implementation in crate `core`:                           \n           - impl&lt;T, U&gt; std::convert::TryFrom&lt;U&gt; for T                           \n             where T: std::convert::From&lt;U&gt;;\n</code></pre>\n\n<p>Which is very confusing to me. Could someone explain what's wrong here?</p>\n"}, {"tags": ["twitter", "rust"], "comments": [{"owner": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 2, "creation_date": 1553372454, "post_id": 55317882, "comment_id": 97362882, "body": "It&#39;s the other way around: you still have a tuple, but <code>locations</code> wants something else: <a href=\"https://docs.rs/twitter-stream/0.9.0/twitter_stream/struct.TwitterStreamBuilder.html#method.locations\" rel=\"nofollow noreferrer\">docs</a>"}, {"owner": {"reputation": 2165, "user_id": 3648957, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/hgMNo.jpg?s=128&g=1", "display_name": "Sasha Kondrashov", "link": "https://stackoverflow.com/users/3648957/sasha-kondrashov"}, "reply_to_user": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 0, "creation_date": 1553374006, "post_id": 55317882, "comment_id": 97363309, "body": "I made a mistake when editing my code to a reproducible example - now it&#39;s the right error"}, {"owner": {"reputation": 2165, "user_id": 3648957, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/hgMNo.jpg?s=128&g=1", "display_name": "Sasha Kondrashov", "link": "https://stackoverflow.com/users/3648957/sasha-kondrashov"}, "reply_to_user": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 0, "creation_date": 1553374139, "post_id": 55317882, "comment_id": 97363349, "body": "but you are right, it is still the other way around. crap I&#39;ll have to think again about it"}, {"owner": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 1, "creation_date": 1553374598, "post_id": 55317882, "comment_id": 97363470, "body": "I didn&#39;t test it, but you should be able to drop <code>Some</code> wrapping and just pass <code>locations</code> a reference to a single-element array. There&#39;s a blanket <code>impl&lt;T&gt; From&lt;T&gt; for Option&lt;T&gt;</code>, so a simple reference to a slice should be accepted by <code>locations</code>."}, {"owner": {"reputation": 2165, "user_id": 3648957, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/hgMNo.jpg?s=128&g=1", "display_name": "Sasha Kondrashov", "link": "https://stackoverflow.com/users/3648957/sasha-kondrashov"}, "reply_to_user": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 0, "creation_date": 1553375286, "post_id": 55317882, "comment_id": 97363629, "body": "just figured out that it takes a slice, not an array. so where bounds is my tuple: &amp;[bounds][..] gave me what I wanted, and I could drop the Some() like you said"}, {"owner": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 0, "creation_date": 1553375768, "post_id": 55317882, "comment_id": 97363789, "body": "I really need to be more careful with terminology, &#39;array&#39; was a very bad choice here. Glad to know it didn&#39;t cause much trouble."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2165, "user_id": 3648957, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/hgMNo.jpg?s=128&g=1", "display_name": "Sasha Kondrashov", "link": "https://stackoverflow.com/users/3648957/sasha-kondrashov"}, "edited": false, "score": 2, "creation_date": 1553378951, "post_id": 55318662, "comment_id": 97364554, "body": "@Timofey remember that you are encouraged to answer your own questions in such cases as well. We want to avoid <a href=\"https://xkcd.com/979\" rel=\"nofollow noreferrer\">XKCD 979</a>. ;-)"}, {"owner": {"reputation": 2165, "user_id": 3648957, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/hgMNo.jpg?s=128&g=1", "display_name": "Sasha Kondrashov", "link": "https://stackoverflow.com/users/3648957/sasha-kondrashov"}, "edited": false, "score": 0, "creation_date": 1553380157, "post_id": 55318662, "comment_id": 97364829, "body": "if I could write up answers at the rate you do, I might have posted my own before you!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1553377222, "creation_date": 1553377222, "answer_id": 55318662, "question_id": 55317882, "link": "https://stackoverflow.com/questions/55317882/why-does-using-some-on-a-tuple-wrap-the-type-in/55318662#55318662", "title": "Why does using Some on a tuple wrap the type in &amp;[]?", "body": "<p>You are reading the error message backwards. Cleaned up a bit, it says:</p>\n\n<blockquote>\n  <p>the trait bound <code>Option&lt;&amp;[BoundingBox]&gt;: From&lt;Option&lt;BoundingBox&gt;&gt;</code> is not satisfied</p>\n</blockquote>\n\n<p>That is, it's not possible to create an <code>&amp;[BoundingBox]</code> from a <code>BoundingBox</code>.</p>\n\n<p>The <a href=\"https://docs.rs/twitter-stream/0.9.0/twitter_stream/struct.TwitterStreamBuilder.html#method.locations\" rel=\"nofollow noreferrer\"><code>locations</code></a> method is defined as:</p>\n\n<pre><code>pub fn locations(\n    &amp;mut self, \n    locations: impl Into&lt;Option&lt;&amp;'a [BoundingBox]&gt;&gt;\n) -&gt; &amp;mut Self\n</code></pre>\n\n<p>That is, it takes any type that can be converted into an <code>Option</code> of a slice of coordinate boxes. You are attempting to provide just an <code>Option</code> of a single coordinate box.</p>\n\n<p>Instead, create an array of one value and create a slice:</p>\n\n<pre><code>.locations(Some(&amp;[bounds][..]))\n</code></pre>\n\n<p>Or</p>\n\n<pre><code>.locations(Some(std::slice::from_ref(&amp;bounds)))\n</code></pre>\n\n<p>You can also make use of the fact that <code>Option&lt;T&gt;</code> implements <code>From&lt;T&gt;</code>:</p>\n\n<pre><code>.locations(&amp;[bounds][..])\n</code></pre>\n\n<p>Or</p>\n\n<pre><code>.locations(std::slice::from_ref(&amp;bounds))\n</code></pre>\n\n<p>See also: </p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/24047686/155423\">Default function arguments in Rust</a></li>\n</ul>\n\n<hr>\n\n<p>For readability, I'm pretending that this type alias exists:</p>\n\n<pre><code>type BoundingBox = ((f64, f64), (f64, f64));\n</code></pre>\n"}], "owner": {"reputation": 2165, "user_id": 3648957, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/hgMNo.jpg?s=128&g=1", "display_name": "Sasha Kondrashov", "link": "https://stackoverflow.com/users/3648957/sasha-kondrashov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 74, "favorite_count": 0, "accepted_answer_id": 55318662, "answer_count": 1, "score": 0, "last_activity_date": 1553377222, "creation_date": 1553371517, "last_edit_date": 1553376622, "question_id": 55317882, "link": "https://stackoverflow.com/questions/55317882/why-does-using-some-on-a-tuple-wrap-the-type-in", "title": "Why does using Some on a tuple wrap the type in &amp;[]?", "body": "<p>I'm using the <code>twitter_stream</code> crate to pull data from Twitter. The API supports filtering the data by some parameter; in my case I am trying to filter using a bounding box location. The library takes an <code>Option&lt;((f64, f64), (f64, f64))&gt;</code>, so I create a tuple in that form:</p>\n\n<pre><code>let bounds = ((0.59 as f64, 0.59 as f64), (0.59 as f64, 0.59 as f64));\n</code></pre>\n\n<p>When I do <code>Some(bounds)</code> to wrap this in an <code>Option</code>, I appear to  end up with the type <code>Option&lt;&amp;[((f64, f64), (f64, f64))]&gt;</code></p>\n\n<p>This adds a <code>&amp;[]</code> around my tuple, and I don't understand what that means or why it's there. My best guess is it means that there's now a borrowed array with one element around the tuple, but I don't understand why there would be an array, and I tried adding <code>.to_owned()</code> everywhere and it didn't change a thing, so I feel like I am way off base.</p>\n\n<p>Code:</p>\n\n<pre><code>extern crate twitter_stream;\n\nuse twitter_stream::rt::{self, Future, Stream};\nuse twitter_stream::{Token, TwitterStreamBuilder};\n\nfn main() {\n    let bounds = ((0.59 as f64, 0.59 as f64), (0.59 as f64, 0.59 as f64));\n    let future = TwitterStreamBuilder::filter(Token::new(\n        \"consumer_key\",\n        \"consumer_secret\",\n        \"access_token\",\n        \"access_secret\",\n    ))\n    .locations(Some(bounds))\n    .listen()\n    .unwrap()\n    .flatten_stream()\n    .for_each(|json| {\n        println!(\"{}\", json);\n        Ok(())\n    })\n    .map_err(|e| println!(\"error: {}\", e));\n\n    rt::run(future);\n}\n</code></pre>\n\n<p>Error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `std::option::Option&lt;&amp;[((f64, f64), (f64, f64))]&gt;: std::convert::From&lt;std::option::Option&lt;((f64, f64), (f64, f64))&gt;&gt;` is not satisfied\n --&gt; src/main.rs:9:14                                                                                                  \n  |                                                                                                                    \n9 |             .locations(Some(bounds))                                                                               \n  |              ^^^^^^^^^ the trait `std::convert::From&lt;std::option::Option&lt;((f64, f64), (f64, f64))&gt;&gt;` is not implemented for `std::option::Option&lt;&amp;[((f64, f64), (f64, f64))]&gt;`\n  |                                                                                                                    \n  = help: the following implementations were found:                                                                    \n            &lt;std::option::Option&lt;&amp;'a T&gt; as std::convert::From&lt;&amp;'a std::option::Option&lt;T&gt;&gt;&gt;                             \n            &lt;std::option::Option&lt;&amp;'a mut T&gt; as std::convert::From&lt;&amp;'a mut std::option::Option&lt;T&gt;&gt;&gt;                     \n            &lt;std::option::Option&lt;T&gt; as std::convert::From&lt;T&gt;&gt;                                                          \n  = note: required because of the requirements on the impl of `std::convert::Into&lt;std::option::Option&lt;&amp;[((f64, f64), (f64, f64))]&gt;&gt;` for `std::option::Option&lt;((f64, f64), (f64, f64))&gt;`\n</code></pre>\n"}, {"tags": ["rust", "iterator"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1553356624, "last_edit_date": 1553356624, "creation_date": 1553352483, "answer_id": 55314945, "question_id": 55314607, "link": "https://stackoverflow.com/questions/55314607/how-to-store-an-iterator-over-stdin-in-a-structure/55314945#55314945", "title": "How to store an iterator over stdin in a structure?", "body": "<p>The most generic answer to your question is that you don't / can't. Locking stdin returns a type that references the <code>Stdin</code> value. You cannot create a local value (<code>stdin()</code>), take a reference to it (<code>.lock()</code>), and then return that reference.</p>\n\n<p>If you just want to do this inside of a function <strong>without returning it</strong>, then you can create a trait object:</p>\n\n<pre><code>use std::io::{self, prelude::*, BufReader};\n\nfn example(file: Option&lt;std::fs::File&gt;) {\n    let stdin;\n    let mut stdin_lines;\n    let mut file_lines;\n\n    let input: &amp;mut Iterator&lt;Item = _&gt; = match file {\n        None =&gt; {\n            stdin = io::stdin();\n            stdin_lines = stdin.lock().lines();\n            &amp;mut stdin_lines\n        }\n        Some(file) =&gt; {\n            file_lines = BufReader::new(file).lines();\n            &amp;mut file_lines\n        }\n    };\n\n    for line in input {\n        // ...\n    }\n}\n</code></pre>\n\n<p>Or create a new generic function that you can pass either type of concrete iterator to:</p>\n\n<pre><code>use std::io::{self, prelude::*, BufReader};\n\nfn example(file: Option&lt;std::fs::File&gt;) {\n    match file {\n        None =&gt; finally(io::stdin().lock().lines()),\n        Some(file) =&gt; finally(BufReader::new(file).lines()),\n    }\n}\n\nfn finally(input: impl Iterator&lt;Item = io::Result&lt;String&gt;&gt;) {\n    for line in input {\n        // ...\n    }\n}\n</code></pre>\n\n<p>You could put either the trait object or the generic type into a structure even though you can't return it:</p>\n\n<pre><code>struct A&lt;'a&gt; {\n    input: &amp;mut Iterator&lt;Item = io::Result&lt;String&gt;&gt;,\n}\n</code></pre>\n\n<pre><code>struct A&lt;I&gt; \nwhere\n    I: Iterator&lt;Item = io::Result&lt;String&gt;&gt;,\n{\n    input: I,\n}\n</code></pre>\n\n<p>If you are feeling adventurous, you might be able to use some unsafe code / crates wrapping unsafe code to store the <code>Stdin</code> value and the iterator referencing it together, which is not universally safe.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/41549516/155423\">Is there a way to use locked standard input and output in a constructor to live as long as the struct you&#39;re constructing?</a></li>\n<li><a href=\"https://stackoverflow.com/q/32682876/155423\">Is there any way to return a reference to a variable created in a function?</a></li>\n<li><a href=\"https://stackoverflow.com/q/32300132/155423\">Why can&#39;t I store a value and a reference to that value in the same struct?</a></li>\n<li><a href=\"https://stackoverflow.com/q/43952104/155423\">How can I store a Chars iterator in the same struct as the String it is iterating on?</a></li>\n<li><a href=\"https://stackoverflow.com/q/28219519/155423\">Are polymorphic variables allowed?</a></li>\n</ul>\n\n<blockquote>\n<pre><code>input: Box&lt;Lines&lt;BufRead&gt;&gt;,\n</code></pre>\n</blockquote>\n\n<p>This is invalid because <code>Lines</code> is not a trait. You want either:</p>\n\n<pre><code>use std::io::{prelude::*, Lines};\n\npub struct A {\n    pub input: Lines&lt;Box&lt;BufRead&gt;&gt;,\n}\n</code></pre>\n\n<p>Or</p>\n\n<pre><code>use std::io;\n\npub struct A {\n    pub input: Box&lt;Iterator&lt;Item = io::Result&lt;String&gt;&gt;&gt;,\n}\n</code></pre>\n"}], "owner": {"reputation": 23, "user_id": 11247329, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-_8PVo4EprWQ/AAAAAAAAAAI/AAAAAAAAAAc/PHzq-pISWac/photo.jpg?sz=128", "display_name": "Ethan Garrett", "link": "https://stackoverflow.com/users/11247329/ethan-garrett"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 368, "favorite_count": 0, "accepted_answer_id": 55314945, "answer_count": 1, "score": 2, "last_activity_date": 1553356624, "creation_date": 1553350482, "last_edit_date": 1553351216, "question_id": 55314607, "link": "https://stackoverflow.com/questions/55314607/how-to-store-an-iterator-over-stdin-in-a-structure", "title": "How to store an iterator over stdin in a structure?", "body": "<p>I created a structure where an iterator over a file or stdin should be stored, but compiler yelling at me :)</p>\n\n<p>I decided that <a href=\"https://doc.rust-lang.org/std/io/struct.Lines.html\" rel=\"nofollow noreferrer\"><code>Lines</code></a> is the struct I need to store in my struct to iterate using it later and <a href=\"https://doc.rust-lang.org/std/boxed/struct.Box.html\" rel=\"nofollow noreferrer\"><code>Box</code></a> will allow to store variable with unknown size, so I define my structure like that:</p>\n\n<pre><code>pub struct A {\n    pub input: Box&lt;Lines&lt;BufRead&gt;&gt;,\n}\n</code></pre>\n\n<p>I want to do something like this later:</p>\n\n<pre><code>let mut a = A {\n    input: /* don't know what should be here yet */,\n};\nif something {\n    a.input = Box::new(io::stdin().lock().lines());\n} else {\n    a.input = Box::new(BufReader::new(file).lines());\n}\n</code></pre>\n\n<p>And finally</p>\n\n<pre><code>for line in a.input {\n    // ...\n}\n</code></pre>\n\n<p>But I got an error from the compiler</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the size for values of type `(dyn std::io::BufRead + 'static)` cannot be known at compilation time\n  --&gt; src/context.rs:11:5\n   |\n11 |     pub input: Box&lt;Lines&lt;BufRead&gt;&gt;,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n   |\n   = help: the trait `std::marker::Sized` is not implemented for `(dyn std::io::BufRead + 'static)`\n   = note: to learn more, visit &lt;https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types-and-sized&gt;\n   = note: required by `std::io::Lines`\n</code></pre>\n\n<p>How can I achieve my goal?</p>\n"}, {"tags": ["reference", "rust", "raii"], "answers": [{"comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1554014660, "post_id": 55314470, "comment_id": 97593974, "body": "<i>&quot;so it&#39;s effectively:...&quot;</i> \u2014 The mere fact of having a <code>Drop</code> impl has other implications, so this isn&#39;t <i>quite</i> true.."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1554042327, "last_edit_date": 1554042327, "creation_date": 1553349570, "answer_id": 55314470, "question_id": 55314407, "link": "https://stackoverflow.com/questions/55314407/what-happens-when-i-call-stdmemdrop-with-a-reference-instead-of-an-owned-val/55314470#55314470", "title": "What happens when I call std::mem::drop with a reference instead of an owned value?", "body": "<blockquote>\n  <p>What happens when I call <code>std::mem::drop</code> with a reference</p>\n</blockquote>\n\n<p>The reference itself is dropped.</p>\n\n<blockquote>\n  <p>a reference instead of an owned value</p>\n</blockquote>\n\n<p>A reference <strong>is</strong> a value.</p>\n\n<blockquote>\n  <p>Why am I still able to use <code>k</code> after dropping it?</p>\n</blockquote>\n\n<p>Because immutable pointers implement <code>Copy</code>. You pass in a copy of the reference and it's dropped.</p>\n\n<blockquote>\n  <p>Does <code>drop</code> not deref a reference automatically?</p>\n</blockquote>\n\n<p>No, it does not.</p>\n\n<blockquote>\n  <p>what does the implementation of <code>Drop</code> look like for <code>&amp;str</code>? </p>\n</blockquote>\n\n<p>There isn't one for any kind of reference, immutable or mutable, so it's <em>effectively</em> <sup>1</sup>:</p>\n\n<pre><code>impl Drop for &amp;str {\n    fn drop(&amp;mut self) {}\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/43428894/155423\">Moved variable still borrowing after calling `drop`?</a></li>\n<li><a href=\"https://stackoverflow.com/q/41732404/155423\">Why does a mutable reference to a dropped object still count as a mutable reference?</a></li>\n</ul>\n\n<hr>\n\n<p><strong>1</strong> \u2014 As <a href=\"https://stackoverflow.com/questions/55314407/what-happens-when-i-call-stdmemdrop-with-a-reference-instead-of-an-owned-val#comment97593974_55314470\">Peter Hall points out</a>, there is a difference between having an empty <code>Drop</code> implementation and having no user-provided <code>Drop</code> implementation, but for the purposes of <em>this</em> question they are the same.</p>\n"}], "owner": {"reputation": 623, "user_id": 10962821, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-2LR2CPhrhu0/AAAAAAAAAAI/AAAAAAAAAAc/OGsF9pFiFOU/photo.jpg?sz=128", "display_name": "sn99", "link": "https://stackoverflow.com/users/10962821/sn99"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 247, "favorite_count": 0, "accepted_answer_id": 55314470, "answer_count": 1, "score": 4, "last_activity_date": 1590613120, "creation_date": 1553349169, "last_edit_date": 1590613120, "question_id": 55314407, "link": "https://stackoverflow.com/questions/55314407/what-happens-when-i-call-stdmemdrop-with-a-reference-instead-of-an-owned-val", "title": "What happens when I call std::mem::drop with a reference instead of an owned value?", "body": "<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let k = \"fire\";\n\n    drop(k);\n\n    println!(\"{:?}\", k);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a07ad067b84707f845e4be84af63598e\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>Why am I still able to use <code>k</code> after dropping it? Does <code>drop</code> not deref a reference automatically? If yes, then why? What does the implementation of <code>Drop</code> look like for <code>&amp;str</code>?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "edited": false, "score": 0, "creation_date": 1553540563, "post_id": 55313858, "comment_id": 97414287, "body": "Does it make a difference if I use <code>MaybeUninit&lt;[MaybeUninit&lt;T&gt;]&gt;</code>?"}, {"owner": {"reputation": 29810, "user_id": 423170, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/H9kNQ.png?s=128&g=1", "display_name": "Frxstrem", "link": "https://stackoverflow.com/users/423170/frxstrem"}, "reply_to_user": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "edited": false, "score": 1, "creation_date": 1553541694, "post_id": 55313858, "comment_id": 97414814, "body": "@llogiq No, it shouldn&#39;t. I&#39;ve added a specific example to try to clarify example what I meant here."}, {"owner": {"reputation": 29810, "user_id": 423170, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/H9kNQ.png?s=128&g=1", "display_name": "Frxstrem", "link": "https://stackoverflow.com/users/423170/frxstrem"}, "reply_to_user": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "edited": false, "score": 0, "creation_date": 1558990453, "post_id": 55313858, "comment_id": 99271296, "body": "@llogiq Apparently I overlooked a part of the documentation for <code>MaybeUninit</code> when I originally wrote my answer. I seemed to have been originally wrong (at least in the specific case of <code>MaybeUninit</code>), and I have updated my answer to reflect this."}], "tags": [], "owner": {"reputation": 29810, "user_id": 423170, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/H9kNQ.png?s=128&g=1", "display_name": "Frxstrem", "link": "https://stackoverflow.com/users/423170/frxstrem"}, "is_accepted": true, "score": 6, "last_activity_date": 1558990377, "last_edit_date": 1558990377, "creation_date": 1553345083, "answer_id": 55313858, "question_id": 55313460, "link": "https://stackoverflow.com/questions/55313460/is-it-sound-to-transmute-a-maybeuninitt-n-to-maybeuninitt-n/55313858#55313858", "title": "Is it sound to transmute a MaybeUninit&lt;[T; N]&gt; to [MaybeUninit&lt;T&gt;; N]?", "body": "<p><strong>Correction:</strong> The answer below still holds in the general case, but in the case of <code>MaybeUninit</code> there are a few handy special cases about memory layout that makes this actually safe to do:</p>\n\n<p>First, the documentation for <code>MaybeUninit</code> has a <a href=\"https://doc.rust-lang.org/beta/std/mem/union.MaybeUninit.html#layout\" rel=\"nofollow noreferrer\">layout</a> section stating that</p>\n\n<blockquote>\n  <p><code>MaybeUninit&lt;T&gt;</code> is guaranteed to have the same size and alignment as <code>T</code>.</p>\n</blockquote>\n\n<p>Secondly, the language reference says this about <a href=\"https://doc.rust-lang.org/reference/type-layout.html#array-layout\" rel=\"nofollow noreferrer\">array layouts</a>:</p>\n\n<blockquote>\n  <p>Arrays are laid out so that the <code>nth</code> element of the array is offset from the start of the array by <code>n * the size of the type</code> bytes. An array of <code>[T; n]</code> has a size of <code>size_of::&lt;T&gt;() * n</code> and the same alignment of <code>T</code>.</p>\n</blockquote>\n\n<p>This means that the layout of <code>MaybeUninit&lt;[T; n]&gt;</code> and the layout of <code>[MaybeUninit&lt;T&gt;; n]</code> are the same.</p>\n\n<hr>\n\n<p><strong>Original answer:</strong></p>\n\n<p>From what I can tell, this is one of those things that are likely to work but not guaranteed, and <em>may</em> be subject to compiler-specific or platform-specific behavior.</p>\n\n<p><a href=\"https://doc.rust-lang.org/beta/std/mem/union.MaybeUninit.html\" rel=\"nofollow noreferrer\"><code>MaybeUninit</code></a> is defined as follows in the <a href=\"https://github.com/rust-lang/rust/blob/d049c7baa701c4128507/src/libcore/mem.rs#L1097-L1103\" rel=\"nofollow noreferrer\">current source</a>:</p>\n\n<pre><code>#[allow(missing_debug_implementations)]\n#[unstable(feature = \"maybe_uninit\", issue = \"53491\")]\npub union MaybeUninit&lt;T&gt; {\n    uninit: (),\n    value: ManuallyDrop&lt;T&gt;,\n}\n</code></pre>\n\n<p>Since it's not marked with the <code>#[repr]</code> attribute (as opposed to for instance <a href=\"https://github.com/rust-lang/rust/blob/d049c7baa701c4128507/src/libcore/mem.rs#L938-L944\" rel=\"nofollow noreferrer\"><code>ManuallyDrop</code></a>), it's in the default representation, of which the reference <a href=\"https://doc.rust-lang.org/reference/type-layout.html#the-default-representation\" rel=\"nofollow noreferrer\">says this</a>:</p>\n\n<blockquote>\n  <p>Nominal types without a repr attribute have the default representation. Informally, this representation is also called the rust representation.</p>\n  \n  <p><strong>There are no guarantees of data layout made by this representation.</strong></p>\n</blockquote>\n\n<p>In order to transmute from <code>Wrapper&lt;[T]&gt;</code> to <code>[Wrapper&lt;T&gt;]</code>, it must be the case that the memory layout of <code>Wrapper&lt;T&gt;</code> is <em>exactly</em> the same as the memory layout of <code>T</code>. This is the case for a number of wrappers, such as the previously mentioned <code>ManuallyDrop</code>, and those will usually be marked with the <code>#[repr(transparent)]</code> attribute.</p>\n\n<p>But in this case, this is not <em>necessarily</em> true. Since <code>()</code> is a zero-size type, it's likely that the compiler will use the same memory layout for <code>T</code> and <code>MaybeUninit&lt;T&gt;</code> (and this is why it's working for you), but it is also possible \n that the compiler decides to use some other memory layout (e.g. for optimization purposes), in which case transmuting will not work anymore.</p>\n\n<hr>\n\n<p>As a specific example, the compiler may chose to use the following memory layout for <code>MaybeUninit&lt;T&gt;</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>+---+---+...+---+\n| T         | b |     where b is \"is initialized\" flag\n+---+---+...+---+\n</code></pre>\n\n<p>According to the above quote, the compiler is allowed to do this. In this case, <code>[MaybeUninit&lt;T&gt;]</code> and <code>MaybeUninit&lt;[T]&gt;</code> have different memory layouts, since <code>MaybeUninit&lt;[T]&gt;</code> has one <code>b</code> for the entire array, while <code>[MaybeUninit&lt;T&gt;]</code> has one <code>b</code> for each <code>MaybeUninit&lt;T&gt;</code> in the array:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>MaybeUninit&lt;[T]&gt;:\n+---+...+---+---+...+---+...+---+...+---+---+\n| T[0]      | T[1]      | \u2026 | T[n-1]    | b |\n+---+...+---+---+...+---+...+---+...+---+---+\nTotal size: n * size_of::&lt;T&gt;() + 1\n\n[MaybeUninit&lt;T&gt;]\n+---+...+---+----+---+...+---+----+...+---+...+---+------+\n| T[0]      |b[0]| T[1]      |b[1]| \u2026 | T[n-1]    |b[n-1]|\n+---+...+---+----+---+...+---+----+...+---+...+---+------+\nTotal size: (n + 1) * size_of::&lt;T&gt;()\n</code></pre>\n"}], "owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 327, "favorite_count": 2, "accepted_answer_id": 55313858, "answer_count": 1, "score": 7, "last_activity_date": 1558990377, "creation_date": 1553342093, "question_id": 55313460, "link": "https://stackoverflow.com/questions/55313460/is-it-sound-to-transmute-a-maybeuninitt-n-to-maybeuninitt-n", "title": "Is it sound to transmute a MaybeUninit&lt;[T; N]&gt; to [MaybeUninit&lt;T&gt;; N]?", "body": "<p>Is the following code sound?</p>\n\n<pre><code>#![feature(maybe_uninit)]\nuse std::mem;\nconst N: usize = 2; // or another number\ntype T = String; // or any other type\n\nfn main() {\n    unsafe {\n        // create an uninitialized array\n        let t: mem::MaybeUninit&lt;[T; N]&gt; = mem::MaybeUninit::uninitialized();\n        // convert it to an array of uninitialized values\n        let mut t: [mem::MaybeUninit&lt;T&gt;; N] = mem::transmute(t);\n        // initialize the values\n        t[0].set(\"Hi\".to_string());\n        t[1].set(\"there\".to_string());\n        // use the values\n        println!(\"{} {}\", t[0].get_ref(), t[1].get_ref());\n        // drop the values\n        mem::replace(&amp;mut t[0], mem::MaybeUninit::uninitialized()).into_initialized();\n        mem::replace(&amp;mut t[1], mem::MaybeUninit::uninitialized()).into_initialized();\n    }\n}\n</code></pre>\n\n<p>I should note that miri runs it without problems.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 27685, "user_id": 610979, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/ku5ga.png?s=128&g=1", "display_name": "Frank Schmitt", "link": "https://stackoverflow.com/users/610979/frank-schmitt"}, "edited": false, "score": 0, "creation_date": 1553334112, "post_id": 55312186, "comment_id": 97351941, "body": "Wild guess: std::self references std itself, so you import std twice with a single use statement. Is there a specific reason why you want to import std::self?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1553428625, "post_id": 55312186, "comment_id": 97373237, "body": "This works fine in a Rust 2018 project, not in a 2015. Please upgrade."}], "answers": [{"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 5, "last_activity_date": 1553429088, "last_edit_date": 1553429088, "creation_date": 1553334501, "answer_id": 55312486, "question_id": 55312186, "link": "https://stackoverflow.com/questions/55312186/why-doesnt-use-std-self-compile/55312486#55312486", "title": "Why doesn&#39;t `use std::{ self, ... };` compile?", "body": "<p><strong>This works fine in Rust 2018.</strong> You probably just want to update by adding <code>edition = \"2018\"</code> to your <code>Cargo.toml</code> or <code>--edition=2018</code> to your <code>rustc</code> invocation. Below is the answer for why this doesn't work in Rust 2015.</p>\n\n<hr>\n\n<p>From <a href=\"https://doc.rust-lang.org/stable/std/prelude/index.html\" rel=\"nofollow noreferrer\">the <code>std::prelude</code> documentation</a>:</p>\n\n<blockquote>\n  <p>On a technical level, Rust inserts</p>\n  \n  <pre class=\"lang-rust prettyprint-override\"><code>extern crate std;\n</code></pre>\n  \n  <p>into the crate root of every crate, and</p>\n  \n  <pre class=\"lang-rust prettyprint-override\"><code>use std::prelude::v1::*;\n</code></pre>\n  \n  <p>into every module.</p>\n</blockquote>\n\n<p>You can also see that in action when looking at your code <a href=\"https://stackoverflow.com/questions/28580386/how-do-i-see-the-expanded-macro-code-thats-causing-my-compile-error\">after macro expansion</a> (e.g. via <code>cargo-expand</code>). For your code this results in:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#![feature(prelude_import)]\n#![no_std]\n#[prelude_import]\nuse std::prelude::v1::*;\n#[macro_use]\nextern crate std;\n// No external crates imports or anything else.\n\nuse std::{\n    self,\n    net::{TcpListener, TcpStream},\n};\n\nfn main() {\n    // Empty.\n}\n</code></pre>\n\n<p>As you can see, <code>std</code> is already in scope due to the <code>extern crate std;</code> statement. Thus, importing it another time results in this error.</p>\n"}], "owner": {"reputation": 13, "user_id": 11246466, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/5BCcK.png?s=128&g=1", "display_name": "Anonymous", "link": "https://stackoverflow.com/users/11246466/anonymous"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 171, "favorite_count": 0, "accepted_answer_id": 55312486, "answer_count": 1, "score": 1, "last_activity_date": 1553430819, "creation_date": 1553331864, "last_edit_date": 1553430819, "question_id": 55312186, "link": "https://stackoverflow.com/questions/55312186/why-doesnt-use-std-self-compile", "title": "Why doesn&#39;t `use std::{ self, ... };` compile?", "body": "<p>I have no idea why this code can't be compiled with Rust 1.27.0. </p>\n\n<p>This is <strong>test.rs</strong> as it is on my hard drive:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::{\n  self,\n  io::prelude::*,\n  net::{ TcpListener, TcpStream },\n};\n\nfn main() {}\n</code></pre>\n\n<p>Output when trying to compile it with <code>rustc test.rs</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0254]: the name `std` is defined multiple times\n --&gt; test.rs:2:5\n  |\n2 |     self,\n  |     ^^^^ `std` reimported here\n  |\n  = note: `std` must be defined only once in the type namespace of this module\nhelp: you can use `as` to change the binding name of the import\n  |\n2 |     self as other_std,\n  |     ^^^^^^^^^^^^^^^^^\n\nwarning: unused imports: `TcpListener`, `TcpStream`, `io::prelude::*`, `self`\n --&gt; test.rs:2:5\n  |\n2 |     self,\n  |     ^^^^\n3 |     io::prelude::*,\n  |     ^^^^^^^^^^^^^^\n4 |     net::{TcpListener, TcpStream},\n  |           ^^^^^^^^^^^  ^^^^^^^^^\n  |\n  = note: #[warn(unused_imports)] on by default\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 1, "creation_date": 1553289145, "post_id": 55307746, "comment_id": 97343877, "body": "If you&#39;re a fan of method chains, there&#39;s <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.ok_or\" rel=\"nofollow noreferrer\">ok_or</a>."}, {"owner": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 0, "creation_date": 1553291209, "post_id": 55307746, "comment_id": 97344539, "body": "If you don&#39;t mind, I&#39;d prefer if you waited a bit before accepting my answer. A better one can very well appear. But that&#39;s completely up to you, of course."}, {"owner": {"reputation": 5321, "user_id": 157726, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/PY0sR.png?s=128&g=1", "display_name": "Juan Leni", "link": "https://stackoverflow.com/users/157726/juan-leni"}, "reply_to_user": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 0, "creation_date": 1553291813, "post_id": 55307746, "comment_id": 97344735, "body": "Ok, I just liked your answer very much :)"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1553300466, "post_id": 55307746, "comment_id": 97346767, "body": "what wrong with <code>x.and_then(|x| Some(x * 2)).ok_or(MyErrors::SomeError)</code> ?"}, {"owner": {"reputation": 5321, "user_id": 157726, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/PY0sR.png?s=128&g=1", "display_name": "Juan Leni", "link": "https://stackoverflow.com/users/157726/juan-leni"}, "edited": false, "score": 0, "creation_date": 1553328669, "post_id": 55307746, "comment_id": 97350827, "body": "nothing, just that given that there is a lot of code coming after, I am actually looking for an early return approach. <code>ok_or_else</code>+<code>?</code> is ideal."}], "answers": [{"comments": [{"owner": {"reputation": 791, "user_id": 4747937, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/d9d99088c98489a7e0f718631b9e82fc?s=128&d=identicon&r=PG&f=1", "display_name": "kevlarr", "link": "https://stackoverflow.com/users/4747937/kevlarr"}, "edited": false, "score": 0, "creation_date": 1591065783, "post_id": 55308191, "comment_id": 109908104, "body": "This is a nice approach - just adapted it myself for the same &#39;problem&#39;. Part of me wishes the <code>?</code> operator could actually be used for early return of <code>None</code> just like errors from <code>Result</code>, but it probably makes more sense (ie. return values are more &#39;meaningful&#39;) just to use result anyways"}, {"owner": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "reply_to_user": {"reputation": 791, "user_id": 4747937, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/d9d99088c98489a7e0f718631b9e82fc?s=128&d=identicon&r=PG&f=1", "display_name": "kevlarr", "link": "https://stackoverflow.com/users/4747937/kevlarr"}, "edited": false, "score": 1, "creation_date": 1591168422, "post_id": 55308191, "comment_id": 109948938, "body": "@kevlarr You can use <code>?</code> with <code>Option</code>s, it&#39;s mixing them with <code>Result</code>s which is a touch awkward. On nightly you can <code>impl From&lt;NoneError&gt; for MyError</code> and enable  <code>try_trait</code> feature, and it will work. Most error handling libraries, I&#39;d imagine, also provide nice helpers for this - I&#39;m mostly a <code>snafu</code> user, see <code>OptionExt</code> in its docs."}, {"owner": {"reputation": 791, "user_id": 4747937, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/d9d99088c98489a7e0f718631b9e82fc?s=128&d=identicon&r=PG&f=1", "display_name": "kevlarr", "link": "https://stackoverflow.com/users/4747937/kevlarr"}, "edited": false, "score": 0, "creation_date": 1591192924, "post_id": 55308191, "comment_id": 109962506, "body": "Wow... I didn&#39;t realize about ? with options... Sigh.. Thanks!"}], "tags": [], "owner": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "is_accepted": true, "score": 15, "last_activity_date": 1553329508, "last_edit_date": 1553329508, "creation_date": 1553291087, "answer_id": 55308191, "question_id": 55307746, "link": "https://stackoverflow.com/questions/55307746/option-types-and-early-returns-return-an-error-when-is-none/55308191#55308191", "title": "Option types and early returns. return an Error when is_none()", "body": "<p>If a longer method chain is undesirable due to complex logic inside, there are still a few readable, low-indent options.</p>\n\n<h1><code>ok_or</code> and <code>?</code></h1>\n\n<p>We can convert an <code>Option</code> to a <code>Result</code> with a desired error, and immediately unwrap it with the <code>?</code> operator. This solution probably provides the least indent possible, and can be easily used to \"unwrap\" multiple <code>Option</code>s.</p>\n\n<pre><code>fn bar1(x: Option&lt;u64&gt;) -&gt; Result&lt;u64, MyErrors&gt; {\n    let x = x.ok_or(MyErrors::SomeError)?;\n    // A lot of stuff going on.\n    Ok(x * 2)\n}\n</code></pre>\n\n<p>This will evaluate the error inside <code>ok_or</code> regardless of whether or not it will actually be used. If this computation is expensive, <code>ok_or_else</code>, which produces the error lazily, will be more efficient (<a href=\"https://stackoverflow.com/questions/45547293/why-should-i-prefer-optionok-or-else-instead-of-optionok-or\">related question</a>).</p>\n\n<h1><code>if let</code></h1>\n\n<p>This solution can still lead to a staircase of code if nested, but may be more appropriate if the <code>else</code> branch logic is more involved.</p>\n\n<pre><code>fn bar2(x: Option&lt;u64&gt;) -&gt; Result&lt;u64, MyErrors&gt; {\n    if let Some(x) = x {\n        // Lot of stuff here as well.\n        Ok(x * 2)\n    } else {\n        Err(MyErrors::SomeError)\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 5321, "user_id": 157726, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/PY0sR.png?s=128&g=1", "display_name": "Juan Leni", "link": "https://stackoverflow.com/users/157726/juan-leni"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2722, "favorite_count": 0, "accepted_answer_id": 55308191, "answer_count": 1, "score": 12, "last_activity_date": 1553329508, "creation_date": 1553288640, "last_edit_date": 1553289492, "question_id": 55307746, "link": "https://stackoverflow.com/questions/55307746/option-types-and-early-returns-return-an-error-when-is-none", "title": "Option types and early returns. return an Error when is_none()", "body": "<p>Using match (like in <code>bar</code>) seems to be a common approach..</p>\n\n<pre><code>#[derive(Debug)]\npub enum MyErrors {\n    SomeError,\n}\n\nfn foo(x: Option&lt;u64&gt;) -&gt; Result&lt;u64, MyErrors&gt; {\n    if x.is_none() {\n      return Err(MyErrors::SomeError);\n    } \n\n    // .. some long code where more options\n    // are checked and matched \n    // The ok here is just so the code is simple and compiles\n    Ok(x.unwrap() * 2)\n}\n\nfn bar(x: Option&lt;u64&gt;) -&gt; Result&lt;u64, MyErrors&gt; {\n    match x {\n        None =&gt; {\n            return Err(MyErrors::SomeError)?;\n        }\n        Some(v) =&gt; {\n           // .. some long code where more options\n           // are checked and matched \n           // The ok here is just so the code is simple and compiles\n           Ok(x.unwrap() * 2)\n        }\n    }\n}\n\n\nfn main() {\n    foo(Some(1));\n    bar(Some(2));\n}\n</code></pre>\n\n<p>However, early returns (such as in <code>foo</code>) significantly reduce how nested the code looks like. If there are multiple times when an option has to be unwrapped or an error returned, code like bar gets very nested...</p>\n\n<p>What is the recommended practice for early returning an error in the case of empty options?</p>\n"}, {"tags": ["string", "rust", "slice"], "comments": [{"owner": {"reputation": 98400, "user_id": 3001761, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/feZwC.jpg?s=128&g=1", "display_name": "jonrsharpe", "link": "https://stackoverflow.com/users/3001761/jonrsharpe"}, "edited": false, "score": 1, "creation_date": 1553259333, "post_id": 55300053, "comment_id": 97328461, "body": "It&#39;s a <a href=\"https://doc.rust-lang.org/std/ops/struct.Range.html\" rel=\"nofollow noreferrer\">range</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1553262153, "post_id": 55300053, "comment_id": 97330271, "body": "Pedantically <code>..</code> is a <a href=\"https://doc.rust-lang.org/std/ops/struct.RangeFull.html\" rel=\"nofollow noreferrer\"><code>RangeFull</code></a>, <code>[]</code> is the indexing / slicing syntax. See also <a href=\"https://doc.rust-lang.org/book/appendix-02-operators.html\" rel=\"nofollow noreferrer\">Appendix B: Operators and Symbols</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1553527002, "post_id": 55300053, "comment_id": 97407029, "body": "It is not useless \u2014 it converts a <code>&amp;String</code> into a <code>&amp;str</code> in this case. The <code>: &amp;str</code> isn&#39;t needed, but it&#39;s probably to show the types to make it easier for people to understand the types in play. Your second line does the same thing via <code>Deref</code> coercion."}], "answers": [{"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 4, "last_activity_date": 1553259480, "creation_date": 1553259480, "answer_id": 55300137, "question_id": 55300053, "link": "https://stackoverflow.com/questions/55300053/what-does-mean-for-rust-slices-and-what-is-it-called/55300137#55300137", "title": "What does [..] mean for Rust slices and what is it called?", "body": "<p>A string can be used as an array of bytes. This addition does strictly nothing:</p>\n\n<pre><code>#![feature(core_intrinsics)]\n\nfn print_type_of&lt;T&gt;(_: &amp;T) {\n    println!(\"{}\", unsafe { std::intrinsics::type_name::&lt;T&gt;() });\n}\n\nfn main() {\n    let x = \"abc\";\n\n    print_type_of(&amp;x); // &amp;str\n\n    let x = &amp;x[..];\n\n    print_type_of(&amp;x); // &amp;str\n}\n</code></pre>\n\n<p><code>[..]</code> takes the full range, and <code>&amp;</code> takes a reference to it.</p>\n"}], "owner": {"reputation": 4962, "user_id": 231441, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/P2kt4.png?s=128&g=1", "display_name": "zzeroo", "link": "https://stackoverflow.com/users/231441/zzeroo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 174, "favorite_count": 0, "closed_date": 1553261841, "answer_count": 1, "score": 0, "last_activity_date": 1553526976, "creation_date": 1553259188, "last_edit_date": 1553526976, "question_id": 55300053, "link": "https://stackoverflow.com/questions/55300053/what-does-mean-for-rust-slices-and-what-is-it-called", "closed_reason": "Duplicate", "title": "What does [..] mean for Rust slices and what is it called?", "body": "<p>I've found this example in a README: </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::env;\n\nfn main() {\n    let filename: &amp;str = &amp;env::args().nth(1).unwrap()[..];\n    let filename2: &amp;str = &amp;env::args().nth(1).unwrap();\n    println!(\"{:?}\", filename);\n    println!(\"{:?}\", filename2)\n}\n</code></pre>\n\n<p>I'm interested in the first line: <code>let filename ...</code>.</p>\n\n<p>What does the <code>[..]</code> after the <code>unwrap</code> mean?</p>\n\n<p>The second line <code>let filename2 ...</code> is my own test that both <code>filename</code> and <code>filename2</code> are the same, or do I miss something?</p>\n\n<p>What is this <code>[..]</code> called?</p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1553261555, "post_id": 55299970, "comment_id": 97329875, "body": "In <code>new</code>, <code>current_value: &amp;s.value</code> is impossible: <code>&amp;s.value</code> is a local reborrow of <code>s</code>, which means it can&#39;t have the same <code>&#39;a</code> lifetime as <code>s</code>. You can &quot;fix&quot; <code>new_value</code> by having it take <code>&amp;&#39;a mut self</code>, but you can&#39;t fix the core problem which is that <code>Consumer</code> is a self-referential struct."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1553262026, "post_id": 55299970, "comment_id": 97330195, "body": "The problem is really quite similar to <a href=\"https://stackoverflow.com/questions/32300132/why-cant-i-store-a-value-and-a-reference-to-that-value-in-the-same-struct\">Why can&#39;t I store a value and a reference to that value in the same struct?</a>. In that case, things you can do with the owning member can invalidate the reference. In your case, things you can do with the <code>storage</code> can invalidate the reference."}, {"owner": {"reputation": 916, "user_id": 4121965, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/ed23d9f7bf180f9632e5f2de23264c4f?s=128&d=identicon&r=PG", "display_name": "fpes", "link": "https://stackoverflow.com/users/4121965/fpes"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1553274657, "post_id": 55299970, "comment_id": 97337787, "body": "@trentcl Thank you - clearly I was dealing with a symptom of a different problem."}], "owner": {"reputation": 916, "user_id": 4121965, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/ed23d9f7bf180f9632e5f2de23264c4f?s=128&d=identicon&r=PG", "display_name": "fpes", "link": "https://stackoverflow.com/users/4121965/fpes"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 50, "favorite_count": 0, "closed_date": 1553262051, "answer_count": 0, "score": 1, "last_activity_date": 1553261994, "creation_date": 1553258869, "last_edit_date": 1553261994, "question_id": 55299970, "link": "https://stackoverflow.com/questions/55299970/structs-with-references-and-returns-of-references-cannot-infer-an-appropriate-l", "closed_reason": "Duplicate", "title": "Structs with references and returns of references: cannot infer an appropriate lifetime for autoref due to conflicting requirements", "body": "<p>In the code below, I understand that there seems to be a lifetime conflict between the reference returned by <code>Storage::insert</code> and the lifetime of <code>Consumer&lt;'a&gt;</code>. However, I'm having trouble:</p>\n\n<ol>\n<li><p>understanding why there is this conflict - that is, both <code>Consumer::storage</code> and <code>Consumer::current_value</code> have the same lifetimes so what other lifetime is Rust inferring that is in conflict with <code>&lt;'a&gt;</code></p></li>\n<li><p>how best to specify what the lifetimes are and why does this work</p></li>\n</ol>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Storage {\n    value: i64,\n}\n\nimpl Storage {\n    fn new() -&gt; Self {\n        Storage { value: 0 }\n    }\n\n    fn insert(&amp;mut self, v: i64) -&gt; &amp;i64 {\n        self.value = v;\n        &amp;self.value\n    }\n}\n\nstruct Consumer&lt;'a&gt; {\n    storage: &amp;'a mut Storage,\n    current_value: &amp;'a i64,\n}\n\nimpl&lt;'a&gt; Consumer&lt;'a&gt; {\n    fn new(s: &amp;'a mut Storage) -&gt; Self {\n        Consumer {\n            storage: s,\n            current_value: &amp;s.value,\n        }\n    }\n\n    fn new_value(&amp;mut self, v: i64) {\n        self.current_value = self.storage.insert(v);\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c4ee370bd9bb9ef02e63cd5344753032\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>The error resulting from this code is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for autoref due to conflicting requirements\n  --&gt; src/lib.rs:30:43\n   |\n30 |         self.current_value = self.storage.insert(v);\n   |                                           ^^^^^^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 29:5...\n  --&gt; src/lib.rs:29:5\n   |\n29 | /     fn new_value(&amp;mut self, v: i64) {\n30 | |         self.current_value = self.storage.insert(v);\n31 | |     }\n   | |_____^\nnote: ...so that reference does not outlive borrowed content\n  --&gt; src/lib.rs:30:30\n   |\n30 |         self.current_value = self.storage.insert(v);\n   |                              ^^^^^^^^^^^^\nnote: but, the lifetime must be valid for the lifetime 'a as defined on the impl at 21:6...\n  --&gt; src/lib.rs:21:6\n   |\n21 | impl&lt;'a&gt; Consumer&lt;'a&gt; {\n   |      ^^\nnote: ...so that reference does not outlive borrowed content\n  --&gt; src/lib.rs:30:30\n   |\n30 |         self.current_value = self.storage.insert(v);\n   |                              ^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>I've read the following and I'm not sure I follow how they apply to my question (perhaps they do and I'm just not reading properly):</p>\n\n<ul>\n<li><p><a href=\"https://stackoverflow.com/questions/41270052/cannot-infer-an-appropriate-lifetime-for-autoref-due-to-conflicting-requirements\">Cannot infer an appropriate lifetime for autoref due to conflicting requirements</a></p></li>\n<li><p><a href=\"https://stackoverflow.com/questions/42397056/cannot-infer-an-appropriate-lifetime-for-pattern-due-to-conflicting-requirement\">&quot;cannot infer an appropriate lifetime for pattern due to conflicting requirements&quot; in `ref mut` pattern</a></p></li>\n</ul>\n"}, {"tags": ["debugging", "visual-studio-code", "rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1553254593, "post_id": 55298650, "comment_id": 97325830, "body": "Your question is not very clear to me. There is the <code>#[derive(Debug)]</code> attribute which you can annotate your struct with and there is the <code>dbg!</code> macro which can be uses as an alternative to <code>println</code> debugging. Please clarify your question what is wrong, else this is sadly offtopic :/"}, {"owner": {"reputation": 777, "user_id": 6863221, "user_type": "registered", "accept_rate": 60, "profile_image": "https://lh4.googleusercontent.com/-f5m1FK2hI1s/AAAAAAAAAAI/AAAAAAAAABw/o6L7n6Vydlw/photo.jpg?sz=128", "display_name": "Matthias", "link": "https://stackoverflow.com/users/6863221/matthias"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1553255164, "post_id": 55298650, "comment_id": 97326145, "body": "Either using the <code>println!</code> or the <code>dbg!</code> macro: I do not want to modify the code for instrospection during debugging."}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1553255263, "post_id": 55298650, "comment_id": 97326191, "body": "I guess it was shown for the Rust code too in the VS Code if you import LLDB or GDB plugin."}, {"owner": {"reputation": 777, "user_id": 6863221, "user_type": "registered", "accept_rate": 60, "profile_image": "https://lh4.googleusercontent.com/-f5m1FK2hI1s/AAAAAAAAAAI/AAAAAAAAABw/o6L7n6Vydlw/photo.jpg?sz=128", "display_name": "Matthias", "link": "https://stackoverflow.com/users/6863221/matthias"}, "reply_to_user": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1553255367, "post_id": 55298650, "comment_id": 97326245, "body": "@AkinerAlkan What vscode extension do you mean? I am using the debug type <code>cppdbg</code> with MiMode <code>gdb</code> in vs code."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1553255402, "post_id": 55298650, "comment_id": 97326268, "body": "I use the LLDB debugger extension in vs code, and it works well AFAIK"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1553255515, "post_id": 55298650, "comment_id": 97326331, "body": "There is <code>rust-gdb</code> or <code>rust-lldb</code>. Have you tried those?"}, {"owner": {"reputation": 777, "user_id": 6863221, "user_type": "registered", "accept_rate": 60, "profile_image": "https://lh4.googleusercontent.com/-f5m1FK2hI1s/AAAAAAAAAAI/AAAAAAAAABw/o6L7n6Vydlw/photo.jpg?sz=128", "display_name": "Matthias", "link": "https://stackoverflow.com/users/6863221/matthias"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1553255544, "post_id": 55298650, "comment_id": 97326343, "body": "@hellow How do I setup lldb formatter in vscode?"}, {"owner": {"reputation": 777, "user_id": 6863221, "user_type": "registered", "accept_rate": 60, "profile_image": "https://lh4.googleusercontent.com/-f5m1FK2hI1s/AAAAAAAAAAI/AAAAAAAAABw/o6L7n6Vydlw/photo.jpg?sz=128", "display_name": "Matthias", "link": "https://stackoverflow.com/users/6863221/matthias"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1553255746, "post_id": 55298650, "comment_id": 97326470, "body": "@hellow do you mean <code>rust-lldb</code>as debug type in vs code?"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1553255896, "post_id": 55298650, "comment_id": 97326571, "body": "Yes. I never used vs code nor I have knowledge on how to use or configure it. You have to help here ;) I can only give you some bread crumbs. Try it out please!"}, {"owner": {"reputation": 777, "user_id": 6863221, "user_type": "registered", "accept_rate": 60, "profile_image": "https://lh4.googleusercontent.com/-f5m1FK2hI1s/AAAAAAAAAAI/AAAAAAAAABw/o6L7n6Vydlw/photo.jpg?sz=128", "display_name": "Matthias", "link": "https://stackoverflow.com/users/6863221/matthias"}, "edited": false, "score": 0, "creation_date": 1553255902, "post_id": 55298650, "comment_id": 97326574, "body": "Using <code>lldb</code> as debugger type is much better than gdb."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1553256796, "post_id": 55298650, "comment_id": 97327036, "body": "gdb has python pretty-printers which can be registered and will control how a given type is displayed; this may not match C#&#39;s level... mostly because gdb does not have the degree of integration that the C# debugger has."}], "owner": {"reputation": 777, "user_id": 6863221, "user_type": "registered", "accept_rate": 60, "profile_image": "https://lh4.googleusercontent.com/-f5m1FK2hI1s/AAAAAAAAAAI/AAAAAAAAABw/o6L7n6Vydlw/photo.jpg?sz=128", "display_name": "Matthias", "link": "https://stackoverflow.com/users/6863221/matthias"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 265, "favorite_count": 0, "answer_count": 0, "score": 3, "last_activity_date": 1553261697, "creation_date": 1553254159, "last_edit_date": 1553261697, "question_id": 55298650, "link": "https://stackoverflow.com/questions/55298650/is-there-something-like-cs-debug-display-attributes-for-debugging-rust-in-vs-c", "title": "Is there something like C#&#39;s debug display attributes for debugging Rust in VS Code?", "body": "<p>It is hard and time-consuming to navigate all the nested object arms of your variable object when debugging Rust code in VS Code.</p>\n\n<p>Is it possible to use a more human readable representation of the content of the variable, such as what is shown when hovering the cursor over the variable in an IDE during debugging?</p>\n\n<p>For instance, viewing the content <code>\"b\"</code> of the String variable <code>ident</code> gets displayed in Visual Studio Code like:</p>\n\n<p><a href=\"https://i.stack.imgur.com/lNnFw.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/lNnFw.png\" alt=\"Viewing a string in VS Code\"></a></p>\n\n<p>It would be nice if there was the possibility see a more concise thumbnail of the content as <a href=\"https://docs.microsoft.com/en-us/dotnet/framework/debug-trace-profile/enhancing-debugging-with-the-debugger-display-attributes\" rel=\"nofollow noreferrer\">debugger display attributes</a> in C# does.</p>\n\n<p>I don't like <code>println!</code> debugging :p</p>\n\n<p>Is there a difference between using GDB or LLDB as the debugging engine?</p>\n\n<p>As another example, a variable of type <code>Symbol</code></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct Symbol {\n    pub ident: String,\n    pub childs: Vec&lt;Symbol&gt;,\n    pub depth: u32,\n    pub fixed: bool,\n}\n</code></pre>\n\n<p>Is displayed in the VS Code debugger like:</p>\n\n<p><a href=\"https://i.stack.imgur.com/T1UTL.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/T1UTL.png\" alt=\"Display complex type\"></a></p>\n\n<p><code>fmt::Debug</code> is implemented  for that struct to return <code>A(a)</code> and not <code>{depth:2, fixed:true}</code> as shown in the picture.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1553239662, "post_id": 55293051, "comment_id": 97317786, "body": "Can&#39;t you just do <code>window.remove (window.scene())</code>?"}, {"owner": {"reputation": 564, "user_id": 612829, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/wB0H0.jpg?s=128&g=1", "display_name": "Martin Ellison", "link": "https://stackoverflow.com/users/612829/martin-ellison"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1553240200, "post_id": 55293051, "comment_id": 97318025, "body": "No, as I said in my reply to Akiner Alkan, I get <code>cannot borrow &#39;window&#39; as mutable more than once at a time</code>."}], "answers": [{"comments": [{"owner": {"reputation": 564, "user_id": 612829, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/wB0H0.jpg?s=128&g=1", "display_name": "Martin Ellison", "link": "https://stackoverflow.com/users/612829/martin-ellison"}, "edited": false, "score": 0, "creation_date": 1553233128, "post_id": 55293173, "comment_id": 97315593, "body": "Thanks for the reply, but I have coded <code>window.scene_mut().apply_to_scene_nodes_mut(&amp;mut |n| n.unlink());</code> but that crashes with <code>&#39;already borrowed: BorrowMutError&#39;</code>. If I use <code>window.remove_node(n)</code> the compiler says <code>cannot borrow &#39;window&#39; as mutable more than once at a time</code>."}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "reply_to_user": {"reputation": 564, "user_id": 612829, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/wB0H0.jpg?s=128&g=1", "display_name": "Martin Ellison", "link": "https://stackoverflow.com/users/612829/martin-ellison"}, "edited": false, "score": 1, "creation_date": 1553234832, "post_id": 55293173, "comment_id": 97316102, "body": "Could you please share the work that you have tried so maybe we can identify that problem."}, {"owner": {"reputation": 564, "user_id": 612829, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/wB0H0.jpg?s=128&g=1", "display_name": "Martin Ellison", "link": "https://stackoverflow.com/users/612829/martin-ellison"}, "edited": false, "score": 0, "creation_date": 1553240007, "post_id": 55293173, "comment_id": 97317944, "body": "I&#39;ve added some code to the question that shows the behaviour."}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "reply_to_user": {"reputation": 564, "user_id": 612829, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/wB0H0.jpg?s=128&g=1", "display_name": "Martin Ellison", "link": "https://stackoverflow.com/users/612829/martin-ellison"}, "edited": false, "score": 1, "creation_date": 1553252611, "post_id": 55293173, "comment_id": 97324749, "body": "@MartinEllison Updated your code and my answer. This way, the problem seems solved :) Good luck"}, {"owner": {"reputation": 564, "user_id": 612829, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/wB0H0.jpg?s=128&g=1", "display_name": "Martin Ellison", "link": "https://stackoverflow.com/users/612829/martin-ellison"}, "edited": false, "score": 0, "creation_date": 1553420645, "post_id": 55293173, "comment_id": 97371247, "body": "Sorry, I&#39;ve run the code in your playground link, and it does not delete anything. It should be displaying only one triangle at any time, but just keeps adding new triangles and not deleting any. I am at <code>kiss3d = &quot;0.18.0&quot;</code>, if that is relevant."}, {"owner": {"reputation": 564, "user_id": 612829, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/wB0H0.jpg?s=128&g=1", "display_name": "Martin Ellison", "link": "https://stackoverflow.com/users/612829/martin-ellison"}, "edited": false, "score": 0, "creation_date": 1553421793, "post_id": 55293173, "comment_id": 97371502, "body": "OK, I think I have it working. The new code is at <a href=\"https://gist.github.com/rust-play/b301f7d04de8eb83e537960c045ecb0c\" rel=\"nofollow noreferrer\">gist.github.com/rust-play/b301f7d04de8eb83e537960c045ecb0c</a> . Anyway, what I did was <code>let mut old_group = window.add_group();</code> before the main loop, <code>old_group.unlink();</code> to do the actual deletion and <code>let mut ng = window.add_group();  let mut c = ng.add_mesh(mesh, Vector3::new(1.0, 1.0, 1.0)); old_group = ng;</code> to add the mesh and cache the group. (There are also improvements to the graphics code but they do not affect the subject of this question)."}], "tags": [], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "is_accepted": true, "score": 2, "last_activity_date": 1553252565, "last_edit_date": 1553252565, "creation_date": 1553230834, "answer_id": 55293173, "question_id": 55293051, "link": "https://stackoverflow.com/questions/55293051/how-do-i-clear-the-scene-in-kiss3d/55293173#55293173", "title": "How do I clear the scene in kiss3d?", "body": "<p>You can get a <code>scene</code> from a <code>window</code> with the <a href=\"http://kiss3d.org/doc/kiss3d/window/struct.Window.html#method.scene_mut\" rel=\"nofollow noreferrer\"><code>Window::scene_mut</code></a> function, which will return a <a href=\"http://kiss3d.org/doc/kiss3d/scene/struct.SceneNode.html\" rel=\"nofollow noreferrer\"><code>SceneNode</code></a>.</p>\n\n<p>After you get your mutable scene node you can delete all the objects inside of the scene with the <a href=\"http://kiss3d.org/doc/kiss3d/scene/struct.SceneNode.html#method.apply_to_scene_nodes_mut\" rel=\"nofollow noreferrer\"><code>SceneNode::apply_to_scene_nodes</code></a> function.</p>\n\n<p>As documented in kiss3d docs page:</p>\n\n<blockquote>\n  <p><code>fn apply_to_scene_nodes_mut&lt;F: FnMut(&amp;mut SceneNode)&gt;(&amp;mut self, f: &amp;mut F)</code>  </p>\n  \n  <p>Applies a closure to each object contained by this node and its children.</p>\n</blockquote>\n\n<p>This is the method that takes closure in it and applies it to the all nodes inside to scene. So you don't need to add all the objects to a <code>Vec</code>.</p>\n\n<p>Note that this method is working recursively to apply the function you provided to all the childrens of the parent and itself.</p>\n\n<p>In your case it is only needed to unlink the parent scene like following:</p>\n\n<pre><code>window.scene_mut().unlink();\n</code></pre>\n\n<p>Whenever you unlink the parent scene node, then the children will be unlinked with the parent of course. So in your needs you may not need to \n<code>SceneNode::apply_to_scene_nodes</code> even.</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=349f26015fe13743d8ec1d9601f6e160\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}], "owner": {"reputation": 564, "user_id": 612829, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/wB0H0.jpg?s=128&g=1", "display_name": "Martin Ellison", "link": "https://stackoverflow.com/users/612829/martin-ellison"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 184, "favorite_count": 0, "accepted_answer_id": 55293173, "answer_count": 1, "score": 1, "last_activity_date": 1593118518, "creation_date": 1553229862, "last_edit_date": 1593118518, "question_id": 55293051, "link": "https://stackoverflow.com/questions/55293051/how-do-i-clear-the-scene-in-kiss3d", "title": "How do I clear the scene in kiss3d?", "body": "<p>This a specific question about sebcrozet/kiss3d (a graphics package for games written in rust): how do I clear the 'scene'?</p>\n<p>I can add objects to the scene by <code>window.add_mesh()</code> and similar methods, and it seems I can remove specific objects by <code>windows.remove_node()</code>, but how do I remove all the objects in a scene (e.g. to start a new scene)?</p>\n<p>I suppose I could keep a vector of all the objects in the scene, and then iterate over the vector to remove the objects, but that should not be necessary.</p>\n<p><em>Edit: here is some code that reproduces the error, excerpted from my code.</em></p>\n<pre><code>use kiss3d::resource::Mesh;\nuse kiss3d::window::Window;\nuse na::Point3;\nuse na::Vector3;\nuse rand::Rng;\nuse std::cell::RefCell;\nuse std::rc::Rc;\n\nextern crate kiss3d;\nextern crate nalgebra as na;\nextern crate rand;\n\nfn main() {\n    let mut window = Window::new(&quot;Test&quot;);\n    const FRAMES_PER: u16 = 100;\n    let mut frame_count = FRAMES_PER;\n    let mut rng = rand::thread_rng();\n    window.set_point_size(5.0);\n\n    while window.render() {\n        frame_count += 1;\n\n        if frame_count &gt; FRAMES_PER {\n            window\n                .scene_mut()\n                .apply_to_scene_nodes_mut(&amp;mut |n| n.unlink());\n            let mut vertexes: Vec&lt;Point3&lt;f32&gt;&gt; = vec![];\n            let mut indexes: Vec&lt;Point3&lt;u16&gt;&gt; = vec![];\n            vertexes.push(Point3::new(\n                rng.gen_range(-500.0, 500.0),\n                rng.gen_range(-500.0, 500.0),\n                400.0,\n            ));\n            vertexes.push(Point3::new(\n                rng.gen_range(-500.0, 500.0),\n                rng.gen_range(-500.0, 500.0),\n                400.0,\n            ));\n            vertexes.push(Point3::new(\n                rng.gen_range(-500.0, 500.0),\n                rng.gen_range(-500.0, 500.0),\n                400.0,\n            ));\n            indexes.push(Point3::new(0, 1, 2));\n\n            let mesh = Rc::new(RefCell::new(Mesh::new(\n                vertexes, indexes, None, None, false,\n            )));\n            let mut c = window.add_mesh(mesh, Vector3::new(1.0, 1.0, 1.0));\n\n            c.set_color(1.0, 0.0, 1.0);\n            c.enable_backface_culling(false);\n            frame_count = 0;\n            println!(&quot;scene regenerated&quot;);\n        }\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "borrowing"], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 1, "last_activity_date": 1553224320, "creation_date": 1553224320, "answer_id": 55292373, "question_id": 55292299, "link": "https://stackoverflow.com/questions/55292299/how-to-check-if-two-reference-variable-are-borrowing-the-same-object/55292373#55292373", "title": "How to check if two reference variable are borrowing the same object?", "body": "<p>Cast the references to raw pointers and compare them.</p>\n\n<pre><code>impl&lt;'a&gt; PartialEq for Tr&lt;'a&gt; {\n    fn eq(&amp;self, v: &amp;Tr&lt;'a&gt;) -&gt; bool {\n        self.a as *const _ == v.a as *const _\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "is_accepted": true, "score": 5, "last_activity_date": 1553239462, "last_edit_date": 1553239462, "creation_date": 1553224467, "answer_id": 55292393, "question_id": 55292299, "link": "https://stackoverflow.com/questions/55292299/how-to-check-if-two-reference-variable-are-borrowing-the-same-object/55292393#55292393", "title": "How to check if two reference variable are borrowing the same object?", "body": "<p>You can use <a href=\"https://doc.rust-lang.org/std/ptr/fn.eq.html\" rel=\"nofollow noreferrer\"><code>std::ptr::eq</code></a> to compare the addresses of two pointers. References (<code>&amp;T</code> or <code>&amp;mut T</code>) will automatically coerce to the underlying pointer (<code>*const T</code>) if fed to this function. Of course, it makes no sense for a mutable reference to have the same address as another reference, since mutable references are always exclusive references, but it can still be coerced to a <code>*const T</code>.</p>\n\n<pre><code>// This derive will use the equality of the underlying fields\n#[derive(PartialEq)]\nstruct Pt {\n    x: f32,\n    y: f32,\n}\n\nimpl Pt {\n    fn new(x: f32, y: f32) -&gt; Self {\n        Self { x, y }\n    }\n}\n\nstruct Tr&lt;'a&gt; {\n    a: &amp;'a Pt,\n}\n\nimpl&lt;'a&gt; Tr&lt;'a&gt; {\n    fn new(a: &amp;'a Pt) -&gt; Self {\n        Self { a }\n    }\n}\n\n// Here we use std::ptr::eq to compare the *addresses* of `self.a` and `other.a`\nimpl&lt;'a&gt; PartialEq for Tr&lt;'a&gt; {\n    fn eq(&amp;self, other: &amp;Tr&lt;'a&gt;) -&gt; bool {\n        std::ptr::eq(self.a, other.a)\n    }\n}\n\nfn main() {\n    let tr_base1 = Pt::new(0.0, 0.0);\n    let tr_base2 = Pt::new(0.0, 0.0);\n    assert!(tr_base1 == tr_base2);\n\n    let tr1 = Tr::new(&amp;tr_base1);\n    let tr2 = Tr::new(&amp;tr_base2);\n    let tr3 = Tr::new(&amp;tr_base1);\n\n    assert!(tr1 == tr3);\n    assert!(tr1.a == tr2.a);\n    assert!(tr1 != tr2);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=389c465b11b2020307f21e13aaf60e3e\" rel=\"nofollow noreferrer\">(playground link)</a></p>\n"}], "owner": {"reputation": 343, "user_id": 7472038, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2df0038bb87507984e3d6ddced8ef8c6?s=128&d=identicon&r=PG&f=1", "display_name": "Apliex-Ddr", "link": "https://stackoverflow.com/users/7472038/apliex-ddr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 233, "favorite_count": 0, "closed_date": 1553261125, "accepted_answer_id": 55292393, "answer_count": 2, "score": 4, "last_activity_date": 1553239462, "creation_date": 1553223665, "last_edit_date": 1553223985, "question_id": 55292299, "link": "https://stackoverflow.com/questions/55292299/how-to-check-if-two-reference-variable-are-borrowing-the-same-object", "closed_reason": "Duplicate", "title": "How to check if two reference variable are borrowing the same object?", "body": "<p>I have a struct that all store readonly references, for example:</p>\n\n<pre><code>struct Pt { x : f32, y : f32, }\nstruct Tr&lt;'a&gt; { a : &amp;'a Pt }\n</code></pre>\n\n<p>I want to <code>impl Eq</code> for <code>Tr</code> to test if the underlaying <code>a</code> reference to exactly the same <code>Pt</code> :</p>\n\n<pre><code>let trBase1 = Pt::new(0.0, 0.0);\nlet trBase2 = Pt::new(0.0, 0.0);\nassert!(trBase1 == trBase2);        // ok.\nlet tr1 = Tr::new(&amp;trBase1);\nlet tr2 = Tr::new(&amp;trBase2);\nlet tr3 = Tr::new(&amp;trBase1);\nassert!(tr1 == tr3);                // ok.\nassert!(tr1.a == te2.a);            // ok. Using Eq for Pt that compare values.\nassert!(tr1 != tr2);                // panicked! Not intended.\n</code></pre>\n\n<p>so now I have</p>\n\n<pre><code>impl&lt;'a&gt; PartialEq for Tr&lt;'a&gt; {\n    fn eq(&amp;self, v : &amp;Tr&lt;'a&gt;) -&gt; bool {\n        // self.a == v.a // doesn't work.\n    }\n}\n</code></pre>\n\n<p>what should I write?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1553231473, "post_id": 55292164, "comment_id": 97315084, "body": "you borrow <code>&amp;mut self</code>, so I expect this result, try by consume <code>self</code> =&gt; <code>get_b(self)</code>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1553258054, "post_id": 55292164, "comment_id": 97327726, "body": "@Stargateur <code>get_b</code> does borrow <code>&amp;mut self</code>, but the return value doesn&#39;t contain a lifetime, so it doesn&#39;t need to &quot;stay borrowed&quot;. I think what&#39;s happening here is the compiler considers the entire <code>if let</code> expression &quot;the current statement&quot; (i.e., it doesn&#39;t work the same way as <code>let tmp = a(4).get_b(); if let Some(B(_)) = tmp { ... }</code> which would have the same output as the similar C++ code.)"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1553259432, "post_id": 55292164, "comment_id": 97328511, "body": "@trentcl The issue explain why, <a href=\"https://github.com/rust-lang/rust/issues/37612#issuecomment-304626464\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/37612#issuecomment-30462646&zwnj;&#8203;4</a>, pattern matching extend the borrow to the scope of the pattern matching. <code>let b = a(4).get_b();     if let Some(B(v@ 0...4)) = b {         println!(&quot;some {}&quot;, v);     }</code> should work as expected."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1553260856, "post_id": 55292164, "comment_id": 97329410, "body": "It&#39;s not that the <i>borrow</i> is extended, but the lifetime of the temporary is extended even though it <i>isn&#39;t</i> borrowed. At least that&#39;s my interpretation"}, {"owner": {"reputation": 136, "user_id": 2441376, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6878207eb2c5c793b7ac57cd5a4eb414?s=128&d=identicon&r=PG", "display_name": "Aetf", "link": "https://stackoverflow.com/users/2441376/aetf"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1553272779, "post_id": 55292164, "comment_id": 97336795, "body": "@Stargateur if <code>get_b</code> consumes <code>self</code>, then that&#39;s a different situation. Temporary A will be dropped inside <code>get_b</code> body because it is moved there. That&#39;s not the same effect as dropping at the end of the statement."}, {"owner": {"reputation": 136, "user_id": 2441376, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6878207eb2c5c793b7ac57cd5a4eb414?s=128&d=identicon&r=PG", "display_name": "Aetf", "link": "https://stackoverflow.com/users/2441376/aetf"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1553273019, "post_id": 55292164, "comment_id": 97336947, "body": "@Stargateur I&#39;m aware of that issue. And I understand the borrow would be extended by the pattern matching. However, as @trentcl said, the borrow here is <code>Option&lt;B&gt;</code>. Temporary A should not be extended as it is not borrowed."}], "answers": [{"tags": [], "owner": {"reputation": 600, "user_id": 3754495, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/65fff37f6d10b64ca1676adcc33f5ffb?s=128&d=identicon&r=PG", "display_name": "notriddle", "link": "https://stackoverflow.com/users/3754495/notriddle"}, "is_accepted": true, "score": 7, "last_activity_date": 1566779367, "last_edit_date": 1566779367, "creation_date": 1553282294, "answer_id": 55306458, "question_id": 55292164, "link": "https://stackoverflow.com/questions/55292164/rust-temporary-variable-lifetime-in-method-chaining/55306458#55306458", "title": "Rust temporary variable lifetime in method chaining", "body": "<p>An <code>if let</code> construct is just syntactic sugar for a <code>match</code> construct. <code>let Some(B(v @ 0...4)) = a(4).get_b()</code> is not a conditional used in a regular <code>if</code> expression, because it is not an expression that evaluates to <code>bool</code>. Given your example:</p>\n\n<pre><code>if let Some(B(v @ 0...4)) = a(4).get_b() {\n    println!(\"some {}\", v);\n}\n</code></pre>\n\n<p>It will behave exactly the same as the below example. No exceptions. <code>if let</code> is rewritten into <code>match</code> before the type or borrow checkers are even run.</p>\n\n<pre><code>match a(4).get_b() {\n    Some(B(v @ 0...4)) =&gt; {\n        println!(\"some {}\", v);\n    }\n    _ =&gt; {}\n}\n</code></pre>\n\n<p>Temporaries live as long as they do in match blocks because they sometimes come in handy. Like if your last function was <code>fn get_b(&amp;mut self) -&gt; Option&lt;&amp;B&gt;</code>, and if the temporary didn't live for the entire match block, then it wouldn't pass borrowck.</p>\n\n<p>If conditionals don't follow the same rule because it's impossible for the last function call in an if conditional to hold a reference to anything. They have to evaluate to a plain <code>bool</code>.</p>\n\n<p>See:</p>\n\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues/37612\" rel=\"nofollow noreferrer\">Rust issue 37612</a></li>\n</ul>\n"}], "owner": {"reputation": 136, "user_id": 2441376, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6878207eb2c5c793b7ac57cd5a4eb414?s=128&d=identicon&r=PG", "display_name": "Aetf", "link": "https://stackoverflow.com/users/2441376/aetf"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1002, "favorite_count": 1, "accepted_answer_id": 55306458, "answer_count": 1, "score": 7, "last_activity_date": 1566779367, "creation_date": 1553222721, "last_edit_date": 1592644375, "question_id": 55292164, "link": "https://stackoverflow.com/questions/55292164/rust-temporary-variable-lifetime-in-method-chaining", "title": "Rust temporary variable lifetime in method chaining", "body": "<p>I'm trying to learn Rust's lifetime rules by comparing it to similar concepts in C++, which I'm more familiar with. Most of the time, my intuition works really well and I can make sense the rule. However, in the following case, I'm not sure if my understanding is correct or not.</p>\n<p>In Rust, a temporary value's lifetime is the end of its statement, except when the last temporary value is bound to a name using <code>let</code>.</p>\n<pre class=\"lang-rust prettyprint-override\"><code>struct A(u8);\nstruct B(u8);\n\nimpl A {\n    fn get_b(&amp;mut self) -&gt; Option&lt;B&gt; {\n        Some(B(self.0))\n    }\n}\n\nfn a(v: u8) -&gt; A {\n    A(v)\n}\n\n// temporary A's lifetime is the end of the statement\n// temporary B binds to a name so lives until the enclosing block\nlet b = a(1).get_b();\n\n// temporary A's lifetime is the end of the statement\n// temporary B's lifetime extends to the enclosing block,\n// so that taking reference of temporary works similar as above\nlet b = &amp;a(2).get_b();\n</code></pre>\n<p>If the temporary value is in an <code>if</code> condition, according to the <a href=\"https://doc.rust-lang.org/stable/reference/expressions.html#temporary-lifetimes\" rel=\"nofollow noreferrer\">reference</a>, the lifetime is instead limited to the conditional expression.</p>\n<pre class=\"lang-rust prettyprint-override\"><code>// Both temporary A and temporary B drops before printing some\nif a(3).get_b().unwrap().val &lt;= 3 {\n    println!(&quot;some&quot;);\n}\n</code></pre>\n<h3>Now to the question:</h3>\n<p>If putting <code>let</code> in <code>if</code> condition, because of pattern matching, we are binding to the inner part of the temporary value. I'd expect the temporary value bound by <code>let</code> to be extended to the enclosing block, while other temporary values should still have a lifetime limited by the if condition.</p>\n<p><em>(In this case actually everything is copied I would say even temporary B can be dropped, but that's a separate question.)</em></p>\n<p>However, both temporaries' lifetimes are extended to the enclosing <code>if</code> block.</p>\n<pre class=\"lang-rust prettyprint-override\"><code>// Both temporary A and temporary B's lifetime are extended to the end of the enclosing block,\n// which is the if statement\nif let Some(B(v @ 0...4)) = a(4).get_b() {\n    println!(&quot;some {}&quot;, v);\n}\n</code></pre>\n<p>Should this be considered an inconsistency in Rust? Or am I misunderstanding and there is a consistent rule that can explain this behavior?</p>\n<h3>Full code example:</h3>\n<ul>\n<li><a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2015&amp;gist=f7837817f7552b2b5f3e7fd5a6768135\" rel=\"nofollow noreferrer\">playground</a></li>\n<li>The same thing implemented in <a href=\"https://wandbox.org/permlink/5LTbZfbYRnaj194S\" rel=\"nofollow noreferrer\">C++</a> that matches my expectation</li>\n</ul>\n<p>Note the output from Rust is</p>\n<pre class=\"lang-none prettyprint-override\"><code>some 4\nDrop B 4\nDrop A 4\n</code></pre>\n<p>while the output from C++ is</p>\n<pre class=\"lang-none prettyprint-override\"><code>Drop A 4                                                                                                                                                                         \nsome 4                                                                                                                                                                           \nDrop B 4\n</code></pre>\n<p>I have read this Reddit <a href=\"https://www.reddit.com/r/rust/comments/6dynjz/psa_temporaries_in_final_expression_in_block_live/\" rel=\"nofollow noreferrer\">thread</a> and Rust <a href=\"https://github.com/rust-lang/rust/issues/37612\" rel=\"nofollow noreferrer\">issue</a>, which I think is quite relevant, but I still can't find a clear set of lifetime rule that works for all the cases in Rust.</p>\n<h3>Update:</h3>\n<p>What I'm unclear about is why the temporary lifetime rule about <code>if</code> conditional expression does <em>not</em> apply to <code>if let</code>. I think the <code>let Some(B(v @ 0...4)) = a(4).get_b()</code> should be the conditional expression, and thus the temporary A's lifetime should be limited by that, rather than the entire <code>if</code> statement.</p>\n<p>The behaviour of extending temporary B's lifetime to the entire <code>if</code> statement is expected, because that is borrowed by the pattern matching.</p>\n"}, {"tags": ["rust", "iterator"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1553221915, "post_id": 55291961, "comment_id": 97313008, "body": "Supposing <code>ManyZip</code> existed, how should it implement <code>Iterator</code> -- should it yield <code>T</code>s, or <code>Vec&lt;T&gt;</code>s, or <code>impl Iterator&lt;Item=T&gt;</code>s?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1553221970, "post_id": 55291961, "comment_id": 97313022, "body": "You may find <a href=\"https://stackoverflow.com/questions/54756166/how-do-i-efficiently-iterate-through-a-vecvect-row-by-row\">How do I efficiently iterate through a <code>Vec&lt;Vec&lt;T&gt;&gt;</code> row by row?</a> helpful."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1553222724, "post_id": 55291961, "comment_id": 97313161, "body": "<i><code>iterators: Vec&lt;T&gt;</code></i> \u2014 you want to be able to only accept a vector of iterators that are all the <b>exact</b> same type?"}, {"owner": {"reputation": 228, "user_id": 2464759, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/abf618d44ef674c508d7d6be71558b0b?s=128&d=identicon&r=PG", "display_name": "Nick", "link": "https://stackoverflow.com/users/2464759/nick"}, "edited": false, "score": 0, "creation_date": 1553231690, "post_id": 55291961, "comment_id": 97315138, "body": "Taking a (possibly owned) iterator of iterators and having next() return an iterator would be nice, but I wasn&#39;t able to work out the types on a hypothetical function signature as I was writing the question."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1553223109, "creation_date": 1553223109, "answer_id": 55292215, "question_id": 55291961, "link": "https://stackoverflow.com/questions/55291961/how-can-i-zip-together-an-unknown-at-compile-time-number-of-iterators/55292215#55292215", "title": "How can I zip together an unknown-at-compile-time number of iterators?", "body": "<p>Implement your own iterator that iterates over the input iterators and collects them:</p>\n\n<pre><code>struct Multizip&lt;T&gt;(Vec&lt;T&gt;);\n\nimpl&lt;T&gt; Iterator for Multizip&lt;T&gt;\nwhere\n    T: Iterator,\n{\n    type Item = Vec&lt;T::Item&gt;;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        self.0.iter_mut().map(Iterator::next).collect()\n    }\n}\n\nfn main() {\n    let mz = Multizip(vec![1..=2, 10..=20, 100..=200]);\n\n    for v in mz {\n        println!(\"{:?}\", v);\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 228, "user_id": 2464759, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/abf618d44ef674c508d7d6be71558b0b?s=128&d=identicon&r=PG", "display_name": "Nick", "link": "https://stackoverflow.com/users/2464759/nick"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 326, "favorite_count": 1, "accepted_answer_id": 55292215, "answer_count": 1, "score": 4, "last_activity_date": 1553223109, "creation_date": 1553221205, "last_edit_date": 1553222655, "question_id": 55291961, "link": "https://stackoverflow.com/questions/55291961/how-can-i-zip-together-an-unknown-at-compile-time-number-of-iterators", "title": "How can I zip together an unknown-at-compile-time number of iterators?", "body": "<p>I have a number of Rust iterators specified by user input that I would like to iterate through in lockstep.</p>\n\n<p>This sounds like a job for something like <a href=\"http://file:///home/trun/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/share/doc/rust/html/std/iter/trait.Iterator.html#method.zip\" rel=\"nofollow noreferrer\"><code>Iterator::zip</code></a>, except that I may need more than two iterators zipped together. I looked at <a href=\"https://docs.rs/itertools/0.8.0/itertools/fn.multizip.html\" rel=\"nofollow noreferrer\"><code>itertools::multizip</code></a> and <a href=\"https://docs.rs/itertools/0.8.0/itertools/macro.izip.html\" rel=\"nofollow noreferrer\"><code>itertools::izip</code></a>, but those both require that the number of iterators to be zipped be known at compile time. For my task the number of iterators to be zipped together depends on user input, and thus cannot be known at compile time.</p>\n\n<p>I was hoping for something like <a href=\"https://docs.python.org/3/library/functions.html#zip\" rel=\"nofollow noreferrer\">Python's <code>zip</code> function</a> which takes an iterable of iterables. I imagine the function signature might look like:</p>\n\n<pre><code>fn manyzip&lt;T&gt;(iterators: Vec&lt;T&gt;) -&gt; ManyZip&lt;T&gt;\nwhere\n    T: Iterator\n</code></pre>\n\n<p><a href=\"https://stackoverflow.com/questions/29669287/how-can-i-zip-more-than-two-iterators\">How can I zip more than two iterators?</a> only answers for the situation where the number of iterators is known at compile time.</p>\n\n<p>I can solve my particular problem using indices and such, it just feels like there ought to be a better way.</p>\n"}, {"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 1, "creation_date": 1553221017, "post_id": 55291885, "comment_id": 97312805, "body": "Looks like you meant <code>from_str</code>?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1553221385, "post_id": 55291885, "comment_id": 97312886, "body": "tl;dr: try <code>let c: AnyIpCidr = ipstr.parse();</code> If <code>AnyIpCdr</code> implements <code>FromStr</code> it will work."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1553221619, "post_id": 55291885, "comment_id": 97312947, "body": "Essentially the same or very similar questions regarding <code>FromStr</code>: <a href=\"https://stackoverflow.com/q/42030345/3650362\">stackoverflow.com/q/42030345/3650362</a>, <a href=\"https://stackoverflow.com/q/48655891/3650362\">stackoverflow.com/q/48655891/3650362</a>, <a href=\"https://stackoverflow.com/q/23391440/3650362\">stackoverflow.com/q/23391440/3650362</a>"}, {"owner": {"reputation": 199, "user_id": 1930441, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0be5c3d29445c489126d2645a37b1397?s=128&d=identicon&r=PG", "display_name": "robbie.huffman", "link": "https://stackoverflow.com/users/1930441/robbie-huffman"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1553287650, "post_id": 55291885, "comment_id": 97343361, "body": "@loganfsmyth hit it dead on. I had spent hours using from_string when it should have been from_str."}], "owner": {"reputation": 199, "user_id": 1930441, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0be5c3d29445c489126d2645a37b1397?s=128&d=identicon&r=PG", "display_name": "robbie.huffman", "link": "https://stackoverflow.com/users/1930441/robbie-huffman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 307, "favorite_count": 0, "closed_date": 1553222262, "answer_count": 0, "score": 0, "last_activity_date": 1553222276, "creation_date": 1553220552, "question_id": 55291885, "link": "https://stackoverflow.com/questions/55291885/the-fromstr-trait", "closed_reason": "Duplicate", "title": "The FromStr trait", "body": "<p>I'm trying to use the Cidr crate, and need to convert strings to CIDRs. But it's not working and I can't figure out why. I think I need to <code>use</code> something, but <code>std::str::FromStr</code> doesn't help. What's worse is that I don't even know where to look next.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>error[E0599]: no variant named `from_string` found for type `cidr::AnyIpCidr` in the current scope\n  --&gt; src/main.rs:45:30\n   |\n45 |     let c = cidr::AnyIpCidr::from_string(ipstr);\n   |             -----------------^^^^^^^^^^^\n   |             |\n   |             variant not found in `cidr::AnyIpCidr`\n</code></pre>\n"}, {"tags": ["android", "rust"], "comments": [{"owner": {"reputation": 10261, "user_id": 295004, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a29d6038e4dcb7fac98ef41c002975e1?s=128&d=identicon&r=PG", "display_name": "Morrison Chang", "link": "https://stackoverflow.com/users/295004/morrison-chang"}, "edited": false, "score": 1, "creation_date": 1553194346, "post_id": 55287295, "comment_id": 97304444, "body": "Related: <a href=\"https://github.com/tomaka/android-rs-glue/issues/177\" rel=\"nofollow noreferrer\">github.com/tomaka/android-rs-glue/issues/177</a> and <a href=\"https://github.com/CypherpunkArmory/UserLAnd/issues/700\" rel=\"nofollow noreferrer\">github.com/CypherpunkArmory/UserLAnd/issues/700</a>"}], "answers": [{"tags": [], "owner": {"reputation": 166, "user_id": 7790047, "user_type": "registered", "profile_image": "https://graph.facebook.com/1108974092542122/picture?type=large", "display_name": "Maran Subburayan", "link": "https://stackoverflow.com/users/7790047/maran-subburayan"}, "is_accepted": false, "score": 0, "last_activity_date": 1553206634, "creation_date": 1553206634, "answer_id": 55290084, "question_id": 55287295, "link": "https://stackoverflow.com/questions/55287295/android-sdk-ndk-installation-on-android/55290084#55290084", "title": "Android SDK/NDK installation on Android", "body": "<ul>\n<li><code>ANDROID_HOME</code> should be the sdk directory, not sdk/tools dir.</li>\n<li>You've to specify the jar name while adding jars to classpath. </li>\n</ul>\n\n<p>The main class com.android.sdklib.tool.sdkmanager.SdkManagerCli is in tools/lib/sdklib-26.0.0-dev.jar. But you don't have to explicitly add it to classpath since it will be added by the <code>sdkmanager</code> script itself. You can see the jar files in tools/lib directory appended to classpath by this line in the <code>sdkmanager</code> file</p>\n\n<pre><code>CLASSPATH=$APP_HOME/lib/dvlib-26.0.0-dev.jar:$APP_HOME/lib/jimfs-1.1.jar:$APP_HOME/lib/jsr305-1.3.9.jar:$APP_HOME/lib/repository-26.0.0-dev.jar:$APP_HOME/lib/j2objc-annotations-1.1.jar:$APP_HOME/lib/layoutlib-api-26.0.0-dev.jar:$APP_HOME/lib/gson-2.3.jar:$APP_HOME/lib/httpcore-4.2.5.jar:$APP_HOME/lib/commons-logging-1.1.1.jar:$APP_HOME/lib/commons-compress-1.12.jar:$APP_HOME/lib/annotations-26.0.0-dev.jar:$APP_HOME/lib/error_prone_annotations-2.0.18.jar:$APP_HOME/lib/animal-sniffer-annotations-1.14.jar:$APP_HOME/lib/httpclient-4.2.6.jar:$APP_HOME/lib/commons-codec-1.6.jar:$APP_HOME/lib/common-26.0.0-dev.jar:$APP_HOME/lib/kxml2-2.3.0.jar:$APP_HOME/lib/httpmime-4.1.jar:$APP_HOME/lib/annotations-12.0.jar:$APP_HOME/lib/sdklib-26.0.0-dev.jar:$APP_HOME/lib/guava-22.0.jar\n</code></pre>\n\n<p>where <code>APP_HOME</code> is the tools dir ( android-sdk/tools/bin/.. which resolves to /android-sdk/tools/ )</p>\n\n<p>So please make sure sdklib-26.0.0-dev.jar exists in tools/lib directory and it contains SdkManagerCli class</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user10575886"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 902, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1553206634, "creation_date": 1553193933, "last_edit_date": 1553205962, "question_id": 55287295, "link": "https://stackoverflow.com/questions/55287295/android-sdk-ndk-installation-on-android", "title": "Android SDK/NDK installation on Android", "body": "<p>I emulate Ubuntu on Android device using the <a href=\"https://play.google.com/store/apps/details?id=tech.ula&amp;pcampaignid=APPU_1_tNmTXO3TBZDB5OUPsvWpsAI\" rel=\"nofollow noreferrer\">UserLAnd app</a>. I wanna install <a href=\"https://github.com/tomaka/android-rs-glue/blob/master/README.md\" rel=\"nofollow noreferrer\">android-rs-glue</a> to package my Rust apps as APKs, but I need Android SDK/NDK properly installed. Here's the issue:</p>\n\n<blockquote>\n  <p>Install some components in the SDK:</p>\n\n<pre><code>$ ./android-sdk/tools/bin/sdkmanager \"platform-tools\" \"platforms;android-18\" \"build-tools;26.0.1\"\n</code></pre>\n</blockquote>\n\n<p>Result:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>$ sudo . \"$ANDROID_HOME/bin/sdkmanager\" \\\n        \"platform-tools\" \\\n        \"platforms;android-18\" \\\n        \"build-tools;26.0.1\"\n\n# Error: Could not find or load main class \n#   com.android.sdklib.tool.sdkmanager.SdkManagerCli\n</code></pre>\n\n<p>I did:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>$ export CLASSPATH=$CLASSPATH:$ANDROID_HOME/lib\n</code></pre>\n\n<p>After looking at <code>sdk/bin/sdkmanager</code> I deducted it also requires copy of <code>sdk/lib</code> as <code>~/lib</code>; then I get that:</p>\n\n<pre><code>Loading package information...                                                  \nLoading local repository...                                                     \nn% Loading local repository...        \nn% Fetch remote repository...\n6% Computing updates...               \n8% Computing updates...               \n8% Computing updates...               \n10% Computing updates...              \n10% Computing updates...\n\nWarning: File /root/.android/repositories.cfg could not be loaded.\nWarning: Failed to find package platforms\n</code></pre>\n\n<p>Gonna test it further.</p>\n"}, {"tags": ["rust", "lifetime", "borrow"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1553203913, "post_id": 55285018, "comment_id": 97308402, "body": "Other related questions: <a href=\"https://stackoverflow.com/q/49499188/3650362\">stackoverflow.com/q/49499188/3650362</a>, <a href=\"https://stackoverflow.com/q/43428894/3650362\">stackoverflow.com/q/43428894/3650362</a>, <a href=\"https://stackoverflow.com/q/35765440/3650362\">stackoverflow.com/q/35765440/3650362</a>"}], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1554326329, "post_id": 55285391, "comment_id": 97714966, "body": "ah sorry about that, I create a canonical question for this, <a href=\"https://stackoverflow.com/questions/55504416/how-do-i-use-a-specific-edition-of-rust/55504418#55504418\" title=\"how do i use a specific edition of rust\">stackoverflow.com/questions/55504416/&hellip;</a>, hope you don&#39;t mind"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 4, "last_activity_date": 1553250439, "last_edit_date": 1553250439, "creation_date": 1553186734, "answer_id": 55285391, "question_id": 55285018, "link": "https://stackoverflow.com/questions/55285018/rust-error-borrow-occurs-after-drop-a-mutable-borrow/55285391#55285391", "title": "Rust error: borrow occurs after drop a mutable borrow", "body": "<p>Your understanding of how scopes and lifetimes work is correct. In Rust Edition 2018, they enabled non-lexical lifetimes by default. Prior to that, the lifetime of <code>inc</code> would have been to the end of the current lexical scope (i.e. the end of the block) even though its value was moved before that.</p>\n\n<p>If you can use Rust version 1.31 or later, then just specify the edition in your <code>Cargo.toml</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[package]\nedition = \"2018\"\n</code></pre>\n\n<p>If you are using the latest Rust, this will be put there automatically when you create a new crate with <code>cargo new</code>.</p>\n\n<hr>\n\n<p>If you are not using Cargo, <code>rustc</code> defaults to Edition 2015, so you need to explicitly provide the edition:</p>\n\n<pre><code>rustc --edition 2018 main.rs\n</code></pre>\n\n<hr>\n\n<p>If you are using an older nightly build of Rust for some reason, then you can enable non-lexical lifetimes by adding this in your main file:</p>\n\n<pre><code>#![feature(nll)]\n</code></pre>\n\n<p>If you are stuck on an older release build, you can usually fix these errors by introducing a shorter scope, using a block like this:</p>\n\n<pre><code>let mut c = 0;\n{\n    let mut inc = || { c += 1; c };\n    drop(inc);\n    // scope of inc ends here\n}\nprintln!(\"{}\", c);\n</code></pre>\n"}], "owner": {"reputation": 46, "user_id": 5240330, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/052700a1c2b2063f70050ac4e09ab5c1?s=128&d=identicon&r=PG&f=1", "display_name": "Hsu Pu", "link": "https://stackoverflow.com/users/5240330/hsu-pu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 277, "favorite_count": 0, "closed_date": 1553242915, "accepted_answer_id": 55285391, "answer_count": 1, "score": 1, "last_activity_date": 1553261391, "creation_date": 1553185470, "last_edit_date": 1553189513, "question_id": 55285018, "link": "https://stackoverflow.com/questions/55285018/rust-error-borrow-occurs-after-drop-a-mutable-borrow", "closed_reason": "Duplicate", "title": "Rust error: borrow occurs after drop a mutable borrow", "body": "<p>My test code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut c = 0;\nlet mut inc = || { c += 1; c };\ndrop(inc);\nprintln!(\"{}\", c);\n</code></pre>\n\n<p>rustc says:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `c` as immutable because it is also borrowed as mutable\n  --&gt; .\\src\\closure.rs:20:24\n   |\n12 |         let mut inc = || { c += 1; c };\n   |                       --   ----- previous borrow occurs due to use of `c` in closure\n   |                       |\n   |                       mutable borrow occurs here\n...\n20 |         println!(\"{}\", c);\n   |                        ^^^^^ immutable borrow occurs here\n21 |     }\n   |     - mutable borrow ends here\n</code></pre>\n\n<p>But <code>inc</code> is dropped manually before <code>println!</code> borrow <code>c</code>, isn't it?</p>\n\n<p>So what's the problem with my code? Please help.</p>\n"}, {"tags": ["python", "macos", "rust", "dylib", "rust-cargo"], "comments": [{"owner": {"reputation": 344, "user_id": 1149206, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/759656886a1651e29ad2c27b4f786856?s=128&d=identicon&r=PG", "display_name": "Maeln", "link": "https://stackoverflow.com/users/1149206/maeln"}, "edited": false, "score": 0, "creation_date": 1553178176, "post_id": 55282165, "comment_id": 97294986, "body": "I found this issue: <a href=\"https://github.com/rust-lang/rustup.rs/issues/932\" rel=\"nofollow noreferrer\">github.com/rust-lang/rustup.rs/issues/932</a>  And running <code>rustup run beta python3 editor.py</code> does work, but still doesn&#39;t explain why only the workspace is buggy."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1553182619, "post_id": 55282165, "comment_id": 97298041, "body": "Have you tried building the dynamic library with <code>cdylib</code>?"}, {"owner": {"reputation": 344, "user_id": 1149206, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/759656886a1651e29ad2c27b4f786856?s=128&d=identicon&r=PG", "display_name": "Maeln", "link": "https://stackoverflow.com/users/1149206/maeln"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1553196398, "post_id": 55282165, "comment_id": 97305356, "body": "It&#39;s working but I lose the ability to use the lib directly has a dependency in the binary project (since its losing the rust specific info). It would mean that I would have to make ffi against my own Rust lib. Not ideal :/"}], "answers": [{"tags": [], "owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "is_accepted": true, "score": 6, "last_activity_date": 1553869217, "last_edit_date": 1553869217, "creation_date": 1553627525, "answer_id": 55364666, "question_id": 55282165, "link": "https://stackoverflow.com/questions/55282165/dylib-cannot-load-libstd-when-compiled-in-a-workspace/55364666#55364666", "title": "dylib cannot load libstd when compiled in a workspace", "body": "<p>Dynamic linking is not easy sometimes. The error message <code>Library not loaded: @rpath/libstd-d00eaa6834e55536.dylib</code> is pretty clear. You have a problem with <code>DYLD_LIBRARY_PATH</code> (macOS).</p>\n\n<h2>TL;DR</h2>\n\n<p>Your <code>DYLD_LIBRARY_PATH</code> doesn't contain Rust libraries path. Put following into your <code>~/.bash_profile</code>:</p>\n\n<pre><code>source \"$HOME/.cargo/env\"\nexport RUST_SRC_PATH=\"$(rustc --print sysroot)/lib/rustlib/src/rust/src\"\nexport DYLD_LIBRARY_PATH=\"$(rustc --print sysroot)/lib:$DYLD_LIBRARY_PATH\"\n</code></pre>\n\n<h2>Explanation</h2>\n\n<p>I followed your project structure except one thing - I removed <code>_</code> (<code>my_bin</code> -> <code>mybin</code>, ...).</p>\n\n<h2><code>cargo run --bin mybin</code> vs <code>target/debug/mybin</code></h2>\n\n<p>As a first thing, check what <code>otool -L target/debug/mybin</code> says:</p>\n\n<pre><code>target/debug/mybin:\n    /Users/robertvojta/Work/bar/target/debug/deps/libmylib.dylib (compatibility version 0.0.0, current version 0.0.0)\n    @rpath/libstd-d4fbe66ddea5f3ce.dylib (compatibility version 0.0.0, current version 0.0.0)\n    /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1252.200.5)\n    /usr/lib/libresolv.9.dylib (compatibility version 1.0.0, current version 1.0.0)\n</code></pre>\n\n<p>Notice the <code>@rpath</code>. If you don't know what it is, I'd recommend to read Mike Ash posts:</p>\n\n<ul>\n<li><a href=\"https://www.mikeash.com/pyblog/friday-qa-2009-11-06-linking-and-install-names.html\" rel=\"nofollow noreferrer\">Friday Q&amp;A 2009-11-06: Linking and Install Names</a></li>\n<li><a href=\"https://www.mikeash.com/pyblog/friday-qa-2012-11-09-dyld-dynamic-linking-on-os-x.html\" rel=\"nofollow noreferrer\">Friday Q&amp;A 2012-11-09: dyld: Dynamic Linking On OS X </a></li>\n</ul>\n\n<p>Also run <code>man dlopen</code> and read the <code>SEARCHING</code> section. It's pretty long to copy &amp; paste it here, so, just the first sentence:</p>\n\n<blockquote>\n  <p>dlopen() searches for a compatible Mach-O file in the directories specified by a set of environment variables and the process's current working directory.</p>\n</blockquote>\n\n<p>You'll learn about <code>DYLD_LIBRARY_PATH</code> and other environment variables.</p>\n\n<p>In your shell, what's the output of <code>echo $DYLD_LIBRARY_PATH</code> command? I assume it's empty / does not contain Rust libraries path.</p>\n\n<p>Add following lines to your <code>mybin:main.rs</code> ...</p>\n\n<pre><code>println!(\n    \"DYLD_LIBRARY_PATH={}\",\n    std::env::var(\"DYLD_LIBRARY_PATH\").unwrap_or(\"N/A\".to_string())\n);\n</code></pre>\n\n<p>... and run <code>cargo run --bin mybin</code>. You should see something like this:</p>\n\n<pre><code>DYLD_LIBRARY_PATH=~/.rustup/toolchains/stable-x86_64-apple-darwin/lib\n</code></pre>\n\n<p><code>cargo run</code> injects this environment variable for you.</p>\n\n<p>From where you can get the right value? Run <code>rustc --print sysroot</code> and append <code>/lib</code> to the output.</p>\n\n<p>If you'd like to run <code>mybin</code> directly (without <code>cargo</code>), you can do it in this way:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>DYLD_LIBRARY_PATH=\"$(rustc --print sysroot)/lib:$DYLD_LIBRARY_PATH\" target/debug/mybin\n</code></pre>\n\n<h2>Python script</h2>\n\n<p>Add similar lines to your <code>run.py</code> script:</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>import os\nprint('DYLD_LIBRARY_PATH: {}'.format(os.environ.get('DYLD_LIBRARY_PATH', 'N/A')))\n</code></pre>\n\n<p>If it prints <code>N/A</code>, <code>DYLD_LIBRARY_PATH</code> is not set. You can fix this in a similar way:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>DYLD_LIBRARY_PATH=\"$(rustc --print sysroot)/lib:$DYLD_LIBRARY_PATH\" python run.py\n</code></pre>\n\n<h3>macOS &amp; System Integrity Protection</h3>\n\n<p>Be aware that you can't use system Python for this ...</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>$ echo $DYLD_LIBRARY_PATH\n~/.rustup/toolchains/stable-x86_64-apple-darwin/lib:\n$ /usr/bin/python run.py\nDYLD_LIBRARY_PATH: N/A\nTraceback (most recent call last):\n  File \"./run.py\", line 21, in &lt;module&gt;\n    lib = cdll.LoadLibrary(lib_path)\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/ctypes/__init__.py\", line 443, in LoadLibrary\n    return self._dlltype(name)\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/ctypes/__init__.py\", line 365, in __init__\n    self._handle = _dlopen(self._name, mode)\nOSError: dlopen(./target/debug/libmylib.dylib, 6): Library not loaded: @rpath/libstd-d4fbe66ddea5f3ce.dylib\n  Referenced from: /Users/robertvojta/Work/bar/target/debug/libmylib.dylib\n  Reason: image not found\n</code></pre>\n\n<p>... but you can use one installed via <code>brew</code> for example ...</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>$ echo $DYLD_LIBRARY_PATH\n/Users/robertvojta/.rustup/toolchains/stable-x86_64-apple-darwin/lib:\n$ /usr/local/bin/python run.py\nDYLD_LIBRARY_PATH: /Users/robertvojta/.rustup/toolchains/stable-x86_64-apple-darwin/lib:\n</code></pre>\n\n<p>The reason is SIP. SIP was introduced in El Capitan and it can be in your way. You can experience stuff like:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>$ env | grep DYLD\n$ echo $DYLD_LIBRARY_PATH\n/Users/robertvojta/.rustup/toolchains/stable-x86_64-apple-darwin/lib:\n</code></pre>\n\n<p>Here's the <a href=\"https://support.apple.com/en-us/HT204899\" rel=\"nofollow noreferrer\">SIP description</a> page. SIP protects folders like <code>/usr</code>, <code>/bin</code>, <code>/sbin</code>, but it doesn't protect <code>/usr/local</code> for example.</p>\n\n<p>What does it mean? SIP does lot of things, but one of them is trashing <code>DYLD_LIBRARY_PATH</code> value. Shebang lines like ...</p>\n\n<ul>\n<li><code>#!/usr/bin/env python</code></li>\n<li><code>#!/usr/bin/python</code></li>\n</ul>\n\n<p>... wont work for you. You have to use Python interpreter, which is not installed in system (&amp; protected) folders. Install one via <code>brew</code>, install Anaconda, ...</p>\n\n<p>SIP can be disabled, but <strong>DON'T</strong> do this.</p>\n\n<p>Another way how to fix this is to replace <code>@rpath</code> in your <code>mylib</code> with a full path via <code>install_name_tool</code> (<code>man install_name_tool</code>). More info in <a href=\"https://stackoverflow.com/questions/9263256/why-is-install-name-tool-and-otool-necessary-for-mach-o-libraries-in-mac-os-x\">Why is install_name_tool and otool necessary for Mach-O libraries in Mac Os X?</a>.</p>\n\n<p>Example:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>$ otool -L target/debug/mybin\ntarget/debug/mybin:\n    /Users/robertvojta/Work/bar/target/debug/deps/libmylib.dylib (compatibility version 0.0.0, current version 0.0.0)\n    @rpath/libstd-d4fbe66ddea5f3ce.dylib (compatibility version 0.0.0, current version 0.0.0)\n    /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1252.200.5)\n    /usr/lib/libresolv.9.dylib (compatibility version 1.0.0, current version 1.0.0)\n$ install_name_tool -change @rpath/libstd-d4fbe66ddea5f3ce.dylib /Users/robertvojta/.rustup/toolchains/stable-x86_64-apple-darwin/lib/libstd-d4fbe66ddea5f3ce.dylib target/debug/libmylib.dylib\n$ otool -L target/debug/libmylib.dylib\ntarget/debug/libmylib.dylib:\n    /Users/robertvojta/Work/bar/target/debug/deps/libmylib.dylib (compatibility version 0.0.0, current version 0.0.0)\n    /Users/robertvojta/.rustup/toolchains/stable-x86_64-apple-darwin/lib/libstd-d4fbe66ddea5f3ce.dylib (compatibility version 0.0.0, current version 0.0.0)\n    /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1252.200.5)\n    /usr/lib/libresolv.9.dylib (compatibility version 1.0.0, current version 1.0.0)\n$ /usr/bin/python run.py\nDYLD_LIBRARY_PATH: N/A\nHallo\n</code></pre>\n\n<p>As you can see, there's no <code>@rpath</code> now, <code>DYLD_LIBRARY_PATH</code> is not set, but it works (<code>Hallo</code> is printed via <code>hallo</code> function from <code>libmylib.dylib</code>) with system Python interpreter.</p>\n\n<p>Be aware of one thing - macOS dynamic libraries behave differently when compared to Linux for example.</p>\n\n<p>If you do not want to mess with it, you can change <code>mylib</code> <code>crate-type</code> to <code>[\"rlib\", \"cdylib\"]</code>, but that's not what you probably want.</p>\n"}], "owner": {"reputation": 344, "user_id": 1149206, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/759656886a1651e29ad2c27b4f786856?s=128&d=identicon&r=PG", "display_name": "Maeln", "link": "https://stackoverflow.com/users/1149206/maeln"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 923, "favorite_count": 2, "accepted_answer_id": 55364666, "answer_count": 1, "score": 7, "last_activity_date": 1554058304, "creation_date": 1553176840, "last_edit_date": 1554058304, "question_id": 55282165, "link": "https://stackoverflow.com/questions/55282165/dylib-cannot-load-libstd-when-compiled-in-a-workspace", "title": "dylib cannot load libstd when compiled in a workspace", "body": "<p>I have a project with the following structure:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Cargo.toml\nmy_script.py\nmy_lib:\n    - Cargo.toml\n    - src\nmy_bin:\n    - Cargo.toml\n    - src\n</code></pre>\n\n<p>Where:</p>\n\n<ul>\n<li><code>my_lib</code> is a Rust library with <code>crate-type = [\"dylib\"]</code></li>\n<li><code>my_bin</code> is a Rust binary application using <code>my_lib</code></li>\n<li><code>my_script.py</code> is a Python 3 script that also uses <code>my_lib</code></li>\n</ul>\n\n<p>The root <code>Cargo.toml</code> contains a basic workspace declaration:</p>\n\n<pre><code>[workspace]\nmembers = [\n    \"my_lib\",\n    \"my_bin\"\n]\n</code></pre>\n\n<p>Everything works properly if I execute <code>cargo build</code> and <code>cargo run -p my_bin</code>. The problem comes with the Python script.</p>\n\n<p>In this script, I load the <code>my_lib</code> lib file using the following code:</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>from ctypes import cdll\nfrom sys import platform\n\nif platform == 'darwin':\n    prefix = 'lib'\n    ext = 'dylib'\nelif platform == 'win32':\n    prefix = ''\n    ext = 'dll'\nelse:\n    prefix = 'lib'\n    ext = 'so'\n\n# Working path:\n# lib_path = './my_lib/target/debug/{}my_lib.{}'.format(prefix, ext)\n\n# Buggy \"Library not loaded: @rpath/libstd-d00eaa6834e55536.dylib\" path:\nlib_path = './target/debug/{}my_lib.{}'.format(prefix, ext)\n\nlib = cdll.LoadLibrary(lib_path)\nmy_func = lib.my_func\nmy_func()\n</code></pre>\n\n<p>If I use the library file from the <em>library directory</em> (<code>./my_lib/target/...</code>), the script has no problem loading the library and executing its functions.</p>\n\n<p>But if I use the library file from the <em>workspace directory</em> (<code>./target/...</code>) I get the following error when trying to load the library:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>OSError: dlopen(./target/debug/libpeglrs.dylib, 6): Library not loaded: @rpath/libstd-d00eaa6834e55536.dylib\n</code></pre>\n\n<p>In the same fashion, trying to execute <code>my_bin</code> directly from the workspace target directory yields the same error (even though <code>cargo run -p my_bin</code> work flawlessly).</p>\n\n<p>Using the software \"Dependency Walker\", I found that the <code>my_lib</code> library cannot find the Rust <code>libstd</code> library (has the previous error message explain).</p>\n\n<p>Manually exporting the path that contains the Rust toolchain library into the environment <code>PATH</code> fixes the issue. This is however far from ideal and not portable. I also don't understand why this issue is only occurring <em>when using the <strong>workspace</strong> target</em>.</p>\n\n<p>So, why can't the workspace target find rust's <code>libstd</code> when each project target can? Is there a way to fix this issue that wouldn't require to find the toolchain path and modify an environment variable?</p>\n"}, {"tags": ["rust", "synchronization", "deadlock"], "answers": [{"tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 2, "last_activity_date": 1553177173, "last_edit_date": 1553177173, "creation_date": 1553177037, "answer_id": 55282240, "question_id": 55280339, "link": "https://stackoverflow.com/questions/55280339/how-to-avoid-a-deadlock-caused-by-a-thread-panic/55282240#55282240", "title": "How to avoid a deadlock caused by a thread panic?", "body": "<p>Instead of a <code>Barrier</code> I would use a <a href=\"https://doc.rust-lang.org/std/sync/struct.Condvar.html\" rel=\"nofollow noreferrer\"><code>Condvar</code></a> here.</p>\n\n<p>To actually solve your problem, I see at least three possible solutions:</p>\n\n<ol>\n<li>Use <a href=\"https://doc.rust-lang.org/std/sync/struct.Condvar.html#method.wait_timeout\" rel=\"nofollow noreferrer\"><code>Condvar::wait_timeout</code></a> and set the timeout to a reasonable duration (e.g. 1 second which should be enough for binding to a port)</li>\n<li>You could use the same method as above, but with a lower timeout (e.g. 10 msec) and check if the <code>Mutex</code> is poisoned.</li>\n<li>Instead of a <code>Condvar</code>, you could use a plain <a href=\"https://doc.rust-lang.org/std/sync/struct.Mutex.html\" rel=\"nofollow noreferrer\"><code>Mutex</code></a> (make sure that the <code>Mutex</code> is locked by the other thread first) and then use <a href=\"https://doc.rust-lang.org/std/sync/struct.Mutex.html#method.try_lock\" rel=\"nofollow noreferrer\"><code>Mutex::try_lock</code></a> to check if the <code>Mutex</code> <a href=\"https://doc.rust-lang.org/std/sync/enum.TryLockError.html#variant.Poisoned\" rel=\"nofollow noreferrer\">is poisoned</a></li>\n</ol>\n\n<p>I think one should prefer solution 1 or 2 over the third one, because you will avoid to make sure that the other thread has locked the <code>Mutex</code> first.</p>\n"}], "owner": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 276, "favorite_count": 0, "accepted_answer_id": 55282240, "answer_count": 1, "score": 1, "last_activity_date": 1553177173, "creation_date": 1553170941, "last_edit_date": 1553177085, "question_id": 55280339, "link": "https://stackoverflow.com/questions/55280339/how-to-avoid-a-deadlock-caused-by-a-thread-panic", "title": "How to avoid a deadlock caused by a thread panic?", "body": "<p>My server uses a <code>Barrier</code> to notify the client when it's safe to attempt to connect. Without the barrier, we risk failing randomly as there is no guarantee that the server socket would have been bound. </p>\n\n<p>Now imagine that the server panics - for instance tries to bind the socket to port 80. The client will be left <code>wait()</code>-ing forever. We cannot <code>join()</code> the server thread in order to find out if it panicked, because <code>join()</code> is a blocking operation - if we <code>join()</code> we won't be able to <code>connect()</code>.</p>\n\n<p>What's the proper way to do this kind of synchronization, given that the <code>std::sync</code> APIs do not provide methods with timeouts? </p>\n\n<p>This is just a MCVE to demonstrate the issue. I had a similar case in a unit test - it was left running forever.</p>\n\n<pre><code>use std::{\n    io::prelude::*,\n    net::{SocketAddr, TcpListener, TcpStream},\n    sync::{Arc, Barrier},\n};\n\nfn main() {\n    let port = 9090;\n    //let port = 80;\n\n    let barrier = Arc::new(Barrier::new(2));\n    let server_barrier = barrier.clone();\n\n    let client_sync = move || {\n        barrier.wait();\n    };\n\n    let server_sync = Box::new(move || {\n        server_barrier.wait();\n    });\n\n    server(server_sync, port);\n    //server(Box::new(|| { no_sync() }), port); //use to test without synchronisation\n\n    client(&amp;client_sync, port);\n    //client(&amp;no_sync, port); //use to test without synchronisation\n}\n\nfn no_sync() {\n    // do nothing in order to demonstrate the need for synchronization\n}\n\nfn server(sync: Box&lt;Fn() + Send + Sync&gt;, port: u16) {\n    std::thread::spawn(move || {\n        std::thread::sleep_ms(100); //there is no guarantee when the os will schedule the thread. make it 100% reproducible\n        let addr = SocketAddr::from(([127, 0, 0, 1], port));\n        let socket = TcpListener::bind(&amp;addr).unwrap();\n        println!(\"server socket bound\");\n        sync();\n\n        let (mut client, _) = socket.accept().unwrap();\n\n        client.write_all(b\"hello mcve\").unwrap();\n    });\n}\n\nfn client(sync: &amp;Fn(), port: u16) {\n    sync();\n\n    let addr = SocketAddr::from(([127, 0, 0, 1], port));\n    let mut socket = TcpStream::connect(&amp;addr).unwrap();\n    println!(\"client socket connected\");\n\n    let mut buf = String::new();\n    socket.read_to_string(&amp;mut buf).unwrap();\n    println!(\"client received: {}\", buf);\n}\n</code></pre>\n"}, {"tags": ["io", "rust", "epoll"], "answers": [{"tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 4, "last_activity_date": 1553165111, "creation_date": 1553165111, "answer_id": 55278666, "question_id": 55277780, "link": "https://stackoverflow.com/questions/55277780/how-would-one-duplicate-the-behavior-of-poll-for-pollpri-in-mio/55278666#55278666", "title": "How would one duplicate the behavior of poll for POLLPRI in mio?", "body": "<p>You can use <a href=\"https://carllerche.github.io/mio/mio/unix/struct.UnixReady.html#method.priority\" rel=\"nofollow noreferrer\"><code>priority()</code></a>:</p>\n\n<blockquote>\n  <p>Returns a Ready representing priority (EPOLLPRI) readiness</p>\n</blockquote>\n\n<p>Example (based on doc):</p>\n\n<pre><code>use mio::net::TcpStream;\nuse mio::unix::UnixReady;\nuse mio::{Poll, PollOpt, Ready, Token};\n\nfn main() -&gt; Result&lt;(), Box&lt;dyn std::error::Error&gt;&gt; {\n    let addr = \"216.58.193.68:80\".parse()?;\n    let socket = TcpStream::connect(&amp;addr)?;\n\n    let poll = Poll::new()?;\n\n    poll.register(\n        &amp;socket,\n        Token(0),\n        Ready::readable() | UnixReady::priority() | UnixReady::error(),\n        PollOpt::edge(),\n    )?;\n\n    Ok(())\n}\n</code></pre>\n"}], "owner": {"reputation": 2798, "user_id": 492747, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/6175ac3e7ef6faba1f1ac2a3decbec7b?s=128&d=identicon&r=PG", "display_name": "evading", "link": "https://stackoverflow.com/users/492747/evading"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 54, "favorite_count": 0, "accepted_answer_id": 55278666, "answer_count": 1, "score": 0, "last_activity_date": 1553176814, "creation_date": 1553162245, "last_edit_date": 1553176814, "question_id": 55277780, "link": "https://stackoverflow.com/questions/55277780/how-would-one-duplicate-the-behavior-of-poll-for-pollpri-in-mio", "title": "How would one duplicate the behavior of poll for POLLPRI in mio?", "body": "<p>I have a driver that emits a <code>POLLPRI</code> event when new data is ready since the device is always readable (last data).</p>\n"}, {"tags": ["rust", "sdl-2", "msvcrt"], "comments": [{"owner": {"reputation": 117699, "user_id": 62576, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/15264f7bf48e10ce32dfa4865a13763c?s=128&d=identicon&r=PG", "display_name": "Ken White", "link": "https://stackoverflow.com/users/62576/ken-white"}, "edited": false, "score": 0, "creation_date": 1553133967, "post_id": 55272754, "comment_id": 97276559, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/12573816/what-is-an-undefined-reference-unresolved-external-symbol-error-and-how-do-i-fix\">What is an undefined reference/unresolved external symbol error and how do I fix it?</a>"}, {"owner": {"reputation": 2425, "user_id": 3486684, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/308961d6e6a4d9649e2ee9f81a4448ba?s=128&d=identicon&r=PG&f=1", "display_name": "user89", "link": "https://stackoverflow.com/users/3486684/user89"}, "reply_to_user": {"reputation": 117699, "user_id": 62576, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/15264f7bf48e10ce32dfa4865a13763c?s=128&d=identicon&r=PG", "display_name": "Ken White", "link": "https://stackoverflow.com/users/62576/ken-white"}, "edited": false, "score": 0, "creation_date": 1553135196, "post_id": 55272754, "comment_id": 97276819, "body": "@KenWhite Thanks for linking that. I went through it, and I think this answer is the relevant one: <a href=\"https://stackoverflow.com/a/12574400/3486684\">stackoverflow.com/a/12574400/3486684</a>  --- however, I still have to try to apply its fix, so let me try that out to see if it works."}, {"owner": {"reputation": 117699, "user_id": 62576, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/15264f7bf48e10ce32dfa4865a13763c?s=128&d=identicon&r=PG", "display_name": "Ken White", "link": "https://stackoverflow.com/users/62576/ken-white"}, "edited": false, "score": 0, "creation_date": 1553136225, "post_id": 55272754, "comment_id": 97277041, "body": "Just FYI, the issue has nothing to do with SDL2.dll. The problem is in a missing <b>.lib</b> file. DLLs are used at runtime, and can&#39;t cause a LNK error at compile/link time."}, {"owner": {"reputation": 2425, "user_id": 3486684, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/308961d6e6a4d9649e2ee9f81a4448ba?s=128&d=identicon&r=PG&f=1", "display_name": "user89", "link": "https://stackoverflow.com/users/3486684/user89"}, "reply_to_user": {"reputation": 117699, "user_id": 62576, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/15264f7bf48e10ce32dfa4865a13763c?s=128&d=identicon&r=PG", "display_name": "Ken White", "link": "https://stackoverflow.com/users/62576/ken-white"}, "edited": false, "score": 0, "creation_date": 1553136534, "post_id": 55272754, "comment_id": 97277119, "body": "@KenWhite following the suggestion of the answer, I looked up the function causing an issue, without the <code>__imp_</code> prefix in MSDN: <a href=\"https://docs.microsoft.com/en-us/windows/desktop/api/shobjidl_core/nf-shobjidl_core-shcreateitemfromparsingname\" rel=\"nofollow noreferrer\"><code>SHCreateItemFromParsingName function</code></a>. But, the doc page doesn&#39;t refer to any libraries which might be missing, as the answer suggests?"}, {"owner": {"reputation": 117699, "user_id": 62576, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/15264f7bf48e10ce32dfa4865a13763c?s=128&d=identicon&r=PG", "display_name": "Ken White", "link": "https://stackoverflow.com/users/62576/ken-white"}, "edited": false, "score": 0, "creation_date": 1553136761, "post_id": 55272754, "comment_id": 97277159, "body": "You can find the library information in the MSDN documentation for the function. It&#39;s in Shell32.dll, which means you need the import library for Shell32."}, {"owner": {"reputation": 2425, "user_id": 3486684, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/308961d6e6a4d9649e2ee9f81a4448ba?s=128&d=identicon&r=PG&f=1", "display_name": "user89", "link": "https://stackoverflow.com/users/3486684/user89"}, "reply_to_user": {"reputation": 117699, "user_id": 62576, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/15264f7bf48e10ce32dfa4865a13763c?s=128&d=identicon&r=PG", "display_name": "Ken White", "link": "https://stackoverflow.com/users/62576/ken-white"}, "edited": false, "score": 0, "creation_date": 1553137235, "post_id": 55272754, "comment_id": 97277261, "body": "@KenWhite Sorry, for the silly questions, I am out of my element here. Was the page I linked to not the MSDN documentation for the function? Also, it is not clear to me how I figure out which library goes along with Shell32. I found some relevant pages for Shell32 on MSDN, but have not gotten a clear lead on what library is missing."}, {"owner": {"reputation": 117699, "user_id": 62576, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/15264f7bf48e10ce32dfa4865a13763c?s=128&d=identicon&r=PG", "display_name": "Ken White", "link": "https://stackoverflow.com/users/62576/ken-white"}, "edited": false, "score": 0, "creation_date": 1553137478, "post_id": 55272754, "comment_id": 97277321, "body": "It is on that page, which was what I was pointing out. Look at the bottom, which tells you it&#39;s in Shell32.dll. That means you need the import library for Shell32, which is Shell32.lib. It&#39;s in your SDK (now called &quot;Windows Kit&quot;) folder tree."}, {"owner": {"reputation": 2425, "user_id": 3486684, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/308961d6e6a4d9649e2ee9f81a4448ba?s=128&d=identicon&r=PG&f=1", "display_name": "user89", "link": "https://stackoverflow.com/users/3486684/user89"}, "reply_to_user": {"reputation": 117699, "user_id": 62576, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/15264f7bf48e10ce32dfa4865a13763c?s=128&d=identicon&r=PG", "display_name": "Ken White", "link": "https://stackoverflow.com/users/62576/ken-white"}, "edited": false, "score": 0, "creation_date": 1553137717, "post_id": 55272754, "comment_id": 97277374, "body": "Ah I see! Alright, let me see if including that library fixes issues."}, {"owner": {"reputation": 2425, "user_id": 3486684, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/308961d6e6a4d9649e2ee9f81a4448ba?s=128&d=identicon&r=PG&f=1", "display_name": "user89", "link": "https://stackoverflow.com/users/3486684/user89"}, "reply_to_user": {"reputation": 117699, "user_id": 62576, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/15264f7bf48e10ce32dfa4865a13763c?s=128&d=identicon&r=PG", "display_name": "Ken White", "link": "https://stackoverflow.com/users/62576/ken-white"}, "edited": false, "score": 0, "creation_date": 1553138052, "post_id": 55272754, "comment_id": 97277451, "body": "@KenWhite I think the issue is obliquely related to <code>shell32.lib</code>. Making sure I explicitly include <code>shell32.lib</code> (i.e. by dumping it in the rust toolchain lib) causes the same error. However, someone else has reported this, and it seems to be an issue with the <code>nfd</code> crate for rust: <a href=\"https://github.com/saurvs/nfd-rs/issues/14\" rel=\"nofollow noreferrer\">github.com/saurvs/nfd-rs/issues/14</a>"}], "owner": {"reputation": 2425, "user_id": 3486684, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/308961d6e6a4d9649e2ee9f81a4448ba?s=128&d=identicon&r=PG&f=1", "display_name": "user89", "link": "https://stackoverflow.com/users/3486684/user89"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 436, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1553133768, "creation_date": 1553133768, "question_id": 55272754, "link": "https://stackoverflow.com/questions/55272754/error-lnk2019-unresolved-external-symbol-imp-shcreateitemfromparsingname-refe", "title": "error LNK2019: unresolved external symbol __imp_SHCreateItemFromParsingName referenced in function &quot;enum nfdresult_t __cdecl SetDefaultPath&quot;", "body": "<p>I am having a problem building <a href=\"https://github.com/pcwalton/pathfinder/tree/pf3\" rel=\"nofollow noreferrer\">Pathfinder 3</a>'s demo on my Windows 10 machine.</p>\n\n<p>I know that someone else has been able to run the demo on Windows 10, so it is possible. However, I am running into an issue which has been difficult to troubleshoot.</p>\n\n<p>I cloned the repo, and commented out the single reference to <code>jemalloc</code> (which does not target Win10). </p>\n\n<p>To set up SDL2, I followed the instructions under header <a href=\"https://github.com/Rust-SDL2/rust-sdl2\" rel=\"nofollow noreferrer\"><strong>Windows (MSVC)</strong></a> of the Rust SDL2 readme. </p>\n\n<p>To run the demo, I use the following commands via powershell, after changing into the <code>demo/native</code> directory:</p>\n\n<p><code>$env:RUSTFLAGS += \"-C target-cpu=native\"</code></p>\n\n<p><code>cargo run --release</code></p>\n\n<p>If I do not have the SDL2 lib files under <code>.multirust/toolchains/stable-x86_64-pc-windows-msvc/lib/rustlib/x86_64-pc-windows-msvc</code>, then I get an error complaining about *.lib files not being found: </p>\n\n<blockquote>\n  <p>fatal error LNK1181: cannot open input file 'SDL2.lib'</p>\n</blockquote>\n\n<p>Putting the *.lib files into that folder fixes this issue.</p>\n\n<p>If I put the SDL2.dll file in the main pathfinder folder, I get the error: </p>\n\n<blockquote>\n  <p>error LNK2019: unresolved external symbol __imp_SHCreateItemFromParsingName referenced in function \"enum nfdresult_t __cdecl SetDefaultPath(struct IFileDialog *,char const *)\"</p>\n</blockquote>\n\n<p>If I put the SDL2.dll in the <code>demo/native</code> folder, I get the same error as above. </p>\n\n<p>I have tried using the developer command prompts of VS2015, and VS2017, but with no luck. In particular, when trying to build using these prompts, I cannot use the <code>RUSTFLAGS</code> suggested, so I omit them. </p>\n\n<p>I also tried using git bash, but the same error noted in the title occurs. What can I try next?</p>\n"}]