[{"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1527110792, "post_id": 50497410, "comment_id": 88008296, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/32300132/155423\">Why can&#39;t I store a value and a reference to that value in the same struct?</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/50497410/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 988, "user_id": 8346513, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EE0l8.jpg?s=128&g=1", "display_name": "Dr_Derp", "link": "https://stackoverflow.com/users/8346513/dr-derp"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1527112923, "post_id": 50497410, "comment_id": 88009081, "body": "It&#39;s similar but not the same. In that answer, the person is trying to store both <code>c</code> and <code>&amp;c</code> in the same place. My problem is I have already stored <code>c</code> and I&#39;m trying to access <code>&amp;c</code> in a mutable way but when I try to reference it the lifetimes screw up. I will try to edit the question to make this more clear."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1527112998, "post_id": 50497410, "comment_id": 88009099, "body": "Did you read the section &quot;There&#39;s one specific case where you can create a type with a reference to itself.&quot; ?"}, {"owner": {"reputation": 988, "user_id": 8346513, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EE0l8.jpg?s=128&g=1", "display_name": "Dr_Derp", "link": "https://stackoverflow.com/users/8346513/dr-derp"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1527113526, "post_id": 50497410, "comment_id": 88009274, "body": "That seems like that might work. I gave that a try, but then basically ran into the same error. I put an example up above to show"}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1527114109, "post_id": 50497410, "comment_id": 88009443, "body": "I still don&#39;t see how this is different from any other self reference example. Except for the last example, which is returning a reference to a stack variable."}, {"owner": {"reputation": 988, "user_id": 8346513, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EE0l8.jpg?s=128&g=1", "display_name": "Dr_Derp", "link": "https://stackoverflow.com/users/8346513/dr-derp"}, "edited": false, "score": 0, "creation_date": 1527114192, "post_id": 50497410, "comment_id": 88009471, "body": "I imagine it&#39;s probably the same. I just don&#39;t understand how to apply the lessons in that other example to the code I have here. Which is more of a failure on my part then anything else."}], "owner": {"reputation": 988, "user_id": 8346513, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EE0l8.jpg?s=128&g=1", "display_name": "Dr_Derp", "link": "https://stackoverflow.com/users/8346513/dr-derp"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 51, "favorite_count": 0, "closed_date": 1527114430, "answer_count": 0, "score": 0, "last_activity_date": 1527113500, "creation_date": 1527109334, "last_edit_date": 1527113500, "question_id": 50497410, "link": "https://stackoverflow.com/questions/50497410/how-to-tell-the-compiler-what-the-lifetime-of-a-referenced-struct-variable-is", "closed_reason": "Duplicate", "title": "How to tell the compiler what the lifetime of a referenced struct variable is?", "body": "<p>Please bear in mind the following code is a simplified example to illustrate my problem, hence the <code>\"test\".to_string()</code> which otherwise I wouldn't do.</p>\n\n<pre><code>struct Container&lt;'a&gt; {\n    string: String,\n    list: Vec&lt;Item&lt;'a&gt;&gt;,\n}\n\nimpl&lt;'a&gt; Container&lt;'a&gt; {\n    pub fn create() -&gt; Container&lt;'a&gt; {\n        let string = \"test\".to_string();\n\n        Container {\n            string,\n            list: vec![],\n        }\n    }\n\n    pub fn add(&amp;mut self) {\n        self.list.push(Item::create(&amp;self.string));\n    }\n}\n\nstruct Item&lt;'a&gt; {\n    string: &amp;'a str,\n}\n\nimpl&lt;'a&gt; Item&lt;'a&gt; {\n    pub fn create(string: &amp;'a str) -&gt; Item&lt;'a&gt; {\n        Item { string }\n    }\n}\n\nfn main() {\n    let container = Container::create();\n    container.add();\n    container.add();\n}\n</code></pre>\n\n<p>When I attempt to compile this, I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for borrow expression due to conflicting requirements\n  --&gt; src/main.rs:17:37\n   |\n17 |         self.list.push(Item::create(&amp;self.string));\n   |                                     ^^^^^^^^^^^^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 16:5...\n  --&gt; src/main.rs:16:5\n   |\n16 | /     pub fn add(&amp;mut self) {\n17 | |         self.list.push(Item::create(&amp;self.string));\n18 | |     }\n   | |_____^\nnote: ...so that reference does not outlive borrowed content\n  --&gt; src/main.rs:17:37\n   |\n17 |         self.list.push(Item::create(&amp;self.string));\n   |                                     ^^^^^^^^^^^^\nnote: but, the lifetime must be valid for the lifetime 'a as defined on the impl at 6:1...\n  --&gt; src/main.rs:6:1\n   |\n6  | impl&lt;'a&gt; Container&lt;'a&gt; {\n   | ^^^^^^^^^^^^^^^^^^^^^^\n   = note: ...so that the expression is assignable:\n           expected Item&lt;'a&gt;\n              found Item&lt;'_&gt;\n</code></pre>\n\n<p>I realize this is because the compiler can't figure out what lifetime it should use for <code>self.string</code>. I have looked at many other examples of lifetimes and I know what needs to be done, but I don't know what syntax I am supposed to use to accomplish this.</p>\n\n<p>I know this is probably a really simple thing, but I haven't found anything in the Rust Book or here that explains the exact situation I'm in, and I don't understand lifetimes well enough to apply other solutions to what I'm trying to do.</p>\n\n<p>These are other things I've tried:</p>\n\n<pre><code>self.list.push(Item::create(&amp;'a self.string));\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: expected `:`, found `self`\n  --&gt; lifeTest.rs:17:36\n   |\n17 |             self.list.push(Item::create(&amp;'a self.string));\n   |   \n</code></pre>\n\n\n\n<pre><code>let reference: &amp;'a str = &amp;self.string;\nself.list.push(Item::create(reference));\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for borrow expression due to conflicting requirements\n  --&gt; lifeTest.rs:17:29\n   |\n17 |             let reference: &amp;'a str = &amp;self.string;\n   |                                      ^^^^^^^^^^^^\n   |\n</code></pre>\n\n\n\n<pre><code>pub fn add(&amp;'a mut self) {\n    self.list.push(Item::create(&amp;self.string));\n}\n...\nlet mut container = Container::create();\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `container` as mutable more than once at a time\n  --&gt; lifeTest.rs:36:3\n   |\n35 |         container.add();\n   |         --------- first mutable borrow occurs here\n36 |         container.add();\n   |         ^^^^^^^^^ second mutable borrow occurs here\n37 |     }\n   |     - first borrow ends here\n</code></pre>\n\n\n\n<pre><code>struct Container&lt;'a&gt; {\n    string: Option&lt;&amp;'a String&gt;,\n    list: Vec&lt;Item&lt;'a&gt;&gt;\n}\n\n....\n\nlet string = \"test\".to_string();\n\nContainer {\n    string: Some(&amp;string),\n    list: vec![]\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `string` does not live long enough\n  --&gt; lifeTest.rs:11:19\n   |\n11 |                 string: Some(&amp;string),\n   |                               ^^^^^^ borrowed value does not live long enough\n...\n</code></pre>\n\n<p>I feel like I'm getting close with the last one, but I'd like to avoid making the container mutable, if possible.</p>\n\n<p>How do I tell the compiler to use the lifetime <code>'a</code> for the reference that it passes into <code>Item</code>?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1527109690, "post_id": 50497364, "comment_id": 88007871, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/47996700/155423\">generic type without a lifetime parameter</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/50497364/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 1, "creation_date": 1527111523, "post_id": 50497364, "comment_id": 88008564, "body": "<a href=\"https://stackoverflow.com/a/47997981/3131852\">This answer</a> to the linked question applies here as well."}, {"owner": {"reputation": 761, "user_id": 491426, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/fefa0ec76c08bd63c39dff52ee418f0c?s=128&d=identicon&r=PG", "display_name": "Kotte", "link": "https://stackoverflow.com/users/491426/kotte"}, "edited": false, "score": 0, "creation_date": 1527140019, "post_id": 50497364, "comment_id": 88015587, "body": "Ah, thank you. That gave me exactly what I needed :-)."}], "owner": {"reputation": 761, "user_id": 491426, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/fefa0ec76c08bd63c39dff52ee418f0c?s=128&d=identicon&r=PG", "display_name": "Kotte", "link": "https://stackoverflow.com/users/491426/kotte"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 35, "favorite_count": 0, "closed_date": 1527139321, "answer_count": 0, "score": 0, "last_activity_date": 1527109123, "creation_date": 1527109123, "question_id": 50497364, "link": "https://stackoverflow.com/questions/50497364/declaring-lifetimes-for-trait-parameters-taking-references", "closed_reason": "Duplicate", "title": "Declaring lifetimes for Trait parameters taking references", "body": "<p>I'm almost certain that this has been asked in multiple ways before. But I'm not really sure on what to search for.</p>\n\n<p>I'm trying write a faculty function that operates on <code>Integer</code>s, and since integers can be <code>BigInts</code> I would like to try to use references as much as possible. And also of course to better understand how to use lifetimes and references.</p>\n\n<p>The code looks like this</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn faculty&lt;T&gt;(mut n: T) -&gt; T\nwhere\n    T: num::Integer + num::Unsigned + MulAssign&lt;&amp;T&gt; + SubAssign&lt;&amp;T&gt;,\n{\n    let one: T = T::one();\n    let mut result: T = T::one();\n\n    while n &gt; one {\n        result *= &amp;n;\n        n -= &amp;one;\n    }\n\n    result\n}\n</code></pre>\n\n<p>However, the compiler tells me that I'm missing lifetime specifiers for <code>MulAssign</code> and <code>SubAssign</code>, and it seems a bit off adding lifetime parameters to a function that neither takes a reference nor returns one.</p>\n\n<p>I tried doing something like</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn faculty&lt;'a, 'b, 'c, T: 'c&gt;(mut n: T) -&gt; T\nwhere\n    T: num::Integer + num::Unsigned + MulAssign&lt;&amp;'a T&gt; + SubAssign&lt;&amp;'b T&gt;,\n</code></pre>\n\n<p>Which gives the error \"The parameter type <code>T</code> may not live long enough\".</p>\n\n<p>So, how do write my function correctly, so I can use operations like <code>result *= &amp;n;</code> in my code?</p>\n"}, {"tags": ["rust", "borrow-checker", "rwlock"], "answers": [{"comments": [{"owner": {"reputation": 808, "user_id": 1025817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/37189d25c4bf5679bd6d24d361978e88?s=128&d=identicon&r=PG", "display_name": "Samuel Moriarty", "link": "https://stackoverflow.com/users/1025817/samuel-moriarty"}, "edited": false, "score": 0, "creation_date": 1527113026, "post_id": 50498024, "comment_id": 88009104, "body": "Woah, this is amazing. I&#39;d drown you in all my upvotes if I could. This is exactly what I need. Huge thanks!"}, {"owner": {"reputation": 18645, "user_id": 50385, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/2faf0c72f6a7f65431e7df489878be24?s=128&d=identicon&r=PG", "display_name": "Joseph Garvin", "link": "https://stackoverflow.com/users/50385/joseph-garvin"}, "edited": false, "score": 0, "creation_date": 1596936614, "post_id": 50498024, "comment_id": 111970363, "body": "Is there any newer recommendation now that rental&#39;s repo is read only?"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 8, "last_activity_date": 1527115184, "last_edit_date": 1527115184, "creation_date": 1527112455, "answer_id": 50498024, "question_id": 50496879, "link": "https://stackoverflow.com/questions/50496879/returning-a-rwlockreadguard-independently-from-a-method/50498024#50498024", "title": "Returning a RWLockReadGuard independently from a method", "body": "<p>As described in <a href=\"https://stackoverflow.com/q/32300132/155423\">Why can&#39;t I store a value and a reference to that value in the same struct?</a>, the <a href=\"https://crates.io/crates/rental\" rel=\"noreferrer\">Rental crate</a> allows for self-referential structs in certain cases.</p>\n\n<pre><code>#[macro_use]\nextern crate rental;\n\nuse std::sync::{Arc, RwLock};\n\nstruct SessionData;\nimpl SessionData {\n    fn hello(&amp;self) -&gt; u8 { 42 }\n}\n\nrental! {\n    mod owning_lock {\n        use std::sync::{Arc, RwLock, RwLockReadGuard};\n\n        #[rental(deref_suffix)]\n        pub struct OwningReadGuard&lt;T&gt;\n        where\n            T: 'static,\n        {\n            lock: Arc&lt;RwLock&lt;T&gt;&gt;,\n            guard: RwLockReadGuard&lt;'lock, T&gt;,\n        }\n    }\n}\n\nuse owning_lock::OwningReadGuard;\n\nfn owning_lock(session: Arc&lt;RwLock&lt;SessionData&gt;&gt;) -&gt; OwningReadGuard&lt;SessionData&gt; {\n    OwningReadGuard::new(session, |s| s.read().unwrap())\n}\n\nfn main() {\n    let session = Arc::new(RwLock::new(SessionData));\n\n    let lock = owning_lock(session.clone());\n    println!(\"{}\", lock.hello());\n\n    assert!(session.try_read().is_ok());\n    assert!(session.try_write().is_err());\n\n    drop(lock);\n\n    assert!(session.try_write().is_ok());\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/40095383/155423\">How to return a reference to a sub-value of a value that is under a mutex?</a></li>\n<li><a href=\"https://stackoverflow.com/q/30281664/155423\">Returning the T borrowed from RefCell&lt;T&gt;</a></li>\n<li><a href=\"https://stackoverflow.com/q/32300132/155423\">Why can&#39;t I store a value and a reference to that value in the same struct?</a></li>\n</ul>\n"}], "owner": {"reputation": 808, "user_id": 1025817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/37189d25c4bf5679bd6d24d361978e88?s=128&d=identicon&r=PG", "display_name": "Samuel Moriarty", "link": "https://stackoverflow.com/users/1025817/samuel-moriarty"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1166, "favorite_count": 1, "accepted_answer_id": 50498024, "answer_count": 1, "score": 5, "last_activity_date": 1527115184, "creation_date": 1527106996, "last_edit_date": 1527111195, "question_id": 50496879, "link": "https://stackoverflow.com/questions/50496879/returning-a-rwlockreadguard-independently-from-a-method", "title": "Returning a RWLockReadGuard independently from a method", "body": "<p>I have an object of type</p>\n\n<pre><code>Arc&lt;RwLock&lt;SessionData&gt;&gt;\n</code></pre>\n\n<p>And I have a method that is supposed to take some kind of reference to <code>SessionData</code></p>\n\n<pre><code>fn some_method(session: ...)\n</code></pre>\n\n<p>I'm using Rocket (a web-framework for Rust), and I can't directly invoke the method, because it is invoked by Rocket. However, I can provide it with an implementation that creates an object that will be passed to the handler. It looks a bit like this:</p>\n\n<pre><code>impl&lt;'a, 'r&gt; request::FromRequest&lt;'a, 'r&gt; for SomeType {\n    type Error = ();\n\n    fn from_request(request: &amp;'a request::Request&lt;'r&gt;) -&gt; request::Outcome&lt;Self, Self::Error&gt; {\n        // return object here\n    }\n}\n</code></pre>\n\n<p>I want to avoid returning an <code>RwLock</code> directly, because I want the handler to have an already-locked object passed to it. However, I can't return a reference or a <code>RwLockReadGuard</code>, because both of them depend on the <code>RwLock</code>, which would go out of scope.</p>\n\n<p>Instead, I am trying to create some kind of self-sufficient type that would contain an <code>Arc&lt;RwLock&lt;SessionData&gt;&gt;</code>, contain the lock guard to this lock, and deref to a <code>SessionData</code> object.</p>\n\n<p>So far, I have tried some combinations of the following:</p>\n\n<ul>\n<li>A <code>Session</code> object that contains an <code>Arc&lt;RwLock&lt;SessionData&gt;&gt;</code> and a <code>RwLockReadGuard&lt;SessionData&gt;</code> </li>\n<li>An object that contains an <code>Arc&lt;RwLock&lt;SessionData&gt;&gt;</code> and a <code>RwLockReadGuardRef&lt;SessionData&gt;</code> from the <a href=\"https://kimundi.github.io/owning-ref-rs\" rel=\"noreferrer\">owning-ref</a> library.</li>\n<li>An object that would use the <code>OwnedHandle</code> type from the <a href=\"https://kimundi.github.io/owning-ref-rs\" rel=\"noreferrer\">owning-ref</a> library.</li>\n</ul>\n\n<p>However, I haven't been able to do what I want to do, running into various lifetime borrowing issues and whatnot.</p>\n\n<p>Is it at all possible to create a sort of a <strong>self-contained 'Handle'-like object that would contain both the lock and the lock guard to the object that it points to?</strong></p>\n\n<p>This is a similar, but slightly different situation than described in <a href=\"https://stackoverflow.com/questions/40095383/how-to-return-reference-to-a-sub-value-of-a-value-that-is-under-a-mutex\">How to return reference to a sub-value of a value that is under a mutex?</a>. In there, the <code>MutexGuardRef</code> internally depends on <code>Mutex</code>, and cannot exist if the <code>Mutex</code> (or <code>MyStruct</code>) goes out of scope. In order to achieve similar behaviour, I'd have to pass a struct that contains my <code>RwLock</code> and then do the locking inside the method. This is fine, but I'm wondering if I can go another step further, and pass a struct that is both <strong>independent</strong> and serves as a <strong><code>RwLockGuard</code></strong>, avoiding the need to lock manually.</p>\n\n<p>Basically, I want to move the locking of the <code>RwLock</code> from the client to the provider of the value.</p>\n"}, {"tags": ["sorting", "rust", "closures"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1527102609, "post_id": 50495709, "comment_id": 88004320, "body": "<i>I know why this does not compile</i> \u2014 and why is that?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1527102818, "post_id": 50495709, "comment_id": 88004431, "body": "What should happen when <code>sort_by</code> is neither &quot;name&quot; or &quot;age&quot;?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1527102939, "post_id": 50495709, "comment_id": 88004483, "body": "Have you tried this code <i>without</i> any conditionals? It doesn&#39;t work even in that case."}, {"owner": {"reputation": 22064, "user_id": 15677, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/6d694c8bf7fbebd7a67ddc74a5018133?s=128&d=identicon&r=PG", "display_name": "miracle2k", "link": "https://stackoverflow.com/users/15677/miracle2k"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1527103391, "post_id": 50495709, "comment_id": 88004736, "body": "If sort_by is neither name or age, let&#39;s say it panics."}, {"owner": {"reputation": 1632, "user_id": 2429333, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5eb897104dc190de7ea7da0ac29a59ae?s=128&d=identicon&r=PG", "display_name": "pbn", "link": "https://stackoverflow.com/users/2429333/pbn"}, "edited": false, "score": 0, "creation_date": 1527103454, "post_id": 50495709, "comment_id": 88004769, "body": "To sort a collection you need a comparison function for given collection element&#39;s type. This comparison function usually takes two arguments <code>a</code> and <code>b</code>  which are of the same type. What you are trying to achieve is to hack a single, &quot;generic&quot;, lambda instead of providing multiple lambdas with same signature."}, {"owner": {"reputation": 1632, "user_id": 2429333, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5eb897104dc190de7ea7da0ac29a59ae?s=128&d=identicon&r=PG", "display_name": "pbn", "link": "https://stackoverflow.com/users/2429333/pbn"}, "edited": false, "score": 0, "creation_date": 1527103593, "post_id": 50495709, "comment_id": 88004848, "body": "Your algorithm have no way to sort e.g. in descending order for your &quot;age&quot; key. It&#39;s hardcoded somewhere in your sort_by_key. Usually standard libraries give user a way to provide lambda taking two parameters and returning boolean value which is stricly defining which one of the parameters is &quot;greater&quot;."}], "answers": [{"comments": [{"owner": {"reputation": 22064, "user_id": 15677, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/6d694c8bf7fbebd7a67ddc74a5018133?s=128&d=identicon&r=PG", "display_name": "miracle2k", "link": "https://stackoverflow.com/users/15677/miracle2k"}, "edited": false, "score": 0, "creation_date": 1527251305, "post_id": 50496407, "comment_id": 88070055, "body": "Thanks! I really wanted to use <code>sort_by_key</code>, since determining the data to sort by in my case involves a bit of ceremony in many cases (fetching related data from auxiliary storage), and the code is just more verbose having to do this twice for <code>a</code> and `b. I was also vaguely wondering if sort_by_key could be faster, since the key might be cached, but I suppose looking at the code now this is not the case."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 22064, "user_id": 15677, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/6d694c8bf7fbebd7a67ddc74a5018133?s=128&d=identicon&r=PG", "display_name": "miracle2k", "link": "https://stackoverflow.com/users/15677/miracle2k"}, "edited": false, "score": 0, "creation_date": 1527257397, "post_id": 50496407, "comment_id": 88074105, "body": "@miracle2k it sounds like you want the unstable <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.sort_by_cached_key\" rel=\"nofollow noreferrer\"><code>sort_by_cached_key</code></a> method (which may still not work for your case)."}], "tags": [], "owner": {"reputation": 32558, "user_id": 101090, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/066290971688c0a44cc4159a9f210dcf?s=128&d=identicon&r=PG", "display_name": "Jorge Israel Pe&#241;a", "link": "https://stackoverflow.com/users/101090/jorge-israel-pe%c3%b1a"}, "is_accepted": false, "score": 4, "last_activity_date": 1527257337, "last_edit_date": 1527257337, "creation_date": 1527105005, "answer_id": 50496407, "question_id": 50495709, "link": "https://stackoverflow.com/questions/50495709/sort-a-vector-with-one-of-many-closures-depending-on-a-setting/50496407#50496407", "title": "Sort a vector with one of many closures depending on a setting", "body": "<p>As you seem to recognize, the problem is that <code>key_func</code> can only have a single specific type, but each of those two closures have different types.</p>\n\n<p>One is a type that implements <code>FnMut(&amp;Person) -&gt; &amp;u32</code> and the other is a type that implements <code>FnMut(&amp;Person) -&gt; &amp;String</code>.</p>\n\n<p>Even if they both returned the same type, <em>even if</em> they were completely syntactically identical, they would be two distinct types. It's like trying to do <code>let num: i32 = if predicate { 0 } else { \"thing\" }</code>. You could box them into trait objects of the same trait, but boxing <code>FnMut</code>s is tricky because <code>Box&lt;FnMut...&gt;</code> doesn't implement <code>FnMut</code>.</p>\n\n<p>There's an even more fundamental problem: you <a href=\"https://stackoverflow.com/q/47121985/155423\">can't use <code>sort_by_key</code> with functions that return references</a>.</p>\n\n<p>One thing you can do is use the more general <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.sort_by\" rel=\"nofollow noreferrer\"><code>sort_by</code></a>, which is <code>FnMut(&amp;T, &amp;T) -&gt; Ordering</code> and have logic in there to know what <code>Ordering</code> to return based on which fields, perhaps guided by some kind of <code>SortBy</code> enum if you really want to.</p>\n\n<p>Another option is to simply call <code>sort_by_key</code> within the branches themselves, so that the <code>Vec</code> is sorted coming out of it, or if you want to defer the sort, then again maintain some kind of indicator such as a <code>SortBy</code> enum which you then use to perform the sort concretely when you actually need to do it.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1527105505, "creation_date": 1527105505, "answer_id": 50496527, "question_id": 50495709, "link": "https://stackoverflow.com/questions/50495709/sort-a-vector-with-one-of-many-closures-depending-on-a-setting/50496527#50496527", "title": "Sort a vector with one of many closures depending on a setting", "body": "<p>You already know the problem, so I don't need to explain it again. Here's the code.</p>\n\n<pre><code> let mut cmp_func: Box&lt;Fn(&amp;Person, &amp;Person) -&gt; std::cmp::Ordering&gt; = match sort_by {\n    \"age\" =&gt; Box::new(|a, b| a.age.cmp(&amp;b.age)),\n    \"name\" =&gt; Box::new(|a, b| a.name.cmp(&amp;b.name)),\n    _ =&gt; panic!(\"unknown sort\"),\n};\n\nif reverse {\n    cmp_func = Box::new(move |a, b| cmp_func(a, b).reverse());\n}\n\nx.sort_by(|a, b| cmp_func(a, b));\n</code></pre>\n\n<p>Or the more efficient, non-heap-allocating version</p>\n\n<pre><code>x.sort_by(|a, b| {\n    let ord = match sort_by {\n        \"age\" =&gt; a.age.cmp(&amp;b.age),\n        \"name\" =&gt; a.name.cmp(&amp;b.name),\n        _ =&gt; panic!(\"unknown sort\"),\n    };\n\n    if reverse {\n        ord.reverse()\n    } else {\n        ord\n    }\n});\n</code></pre>\n"}], "owner": {"reputation": 22064, "user_id": 15677, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/6d694c8bf7fbebd7a67ddc74a5018133?s=128&d=identicon&r=PG", "display_name": "miracle2k", "link": "https://stackoverflow.com/users/15677/miracle2k"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 290, "favorite_count": 0, "accepted_answer_id": 50496527, "answer_count": 2, "score": 0, "last_activity_date": 1527257337, "creation_date": 1527102216, "last_edit_date": 1527102547, "question_id": 50495709, "link": "https://stackoverflow.com/questions/50495709/sort-a-vector-with-one-of-many-closures-depending-on-a-setting", "title": "Sort a vector with one of many closures depending on a setting", "body": "<p>I want to get this code to compile:</p>\n\n<pre><code>struct Person {\n    name: String,\n    age: u32,\n}\n\nfn main() {\n    let sort_by = \"age\";\n\n    let x = vec![\n        Person {\n            name: \"Peter\".to_string(),\n            age: 18,\n        },\n        Person {\n            name: \"Frank\".to_string(),\n            age: 55,\n        },\n    ];\n\n    let key_func;\n\n    if sort_by == \"age\" {\n        key_func = |item: &amp;Person| {\n            return &amp;item.age;\n        };\n    } else if sort_by == \"name\" {\n        key_func = |item: &amp;Person| {\n            return &amp;item.name;\n        };\n    }\n\n    x.sort_by_key(key_func);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=0508d9d28d53f43b70271e69894eaa25&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>I know why this does not compile, but I don't know how I can solve it. I tried a couple of different things, including wrapping the closures in <code>Box::new()</code>, but I couldn't get it to work. </p>\n\n<p>At first, I wanted to ignore the problem and just move all the sorting logic, including the conditionals, inside a single closure, but then I had to add a reverse sorting option. Because I really would like to use <code>*_by_key</code> for simplicity, I tried with <code>std::cmp::Reverse</code>, and this happened:</p>\n\n<pre><code>use std::cmp::Reverse;\n\nfn main() {\n    let reverse = false;\n\n    // ....\n\n    let key_func = |item: &amp;Person| {\n        if reverse {\n            return Reverse(&amp;item.age);\n        } else {\n            return &amp;item.age;\n        }\n    };\n\n    x.sort_by_key(key_func);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=482bd2290dbaba3ee330f5881b8b6b93&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>Again, I understand why the error occurs, but I am not sure how to fix it.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 28990, "user_id": 1114966, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/af8712b05e5cfb862323a07c83749054?s=128&d=identicon&r=PG", "display_name": "squiguy", "link": "https://stackoverflow.com/users/1114966/squiguy"}, "edited": false, "score": 1, "creation_date": 1527095905, "post_id": 50493989, "comment_id": 88001002, "body": "It will reallocate if needed. Some important reading <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#capacity-and-reallocation\" rel=\"nofollow noreferrer\">here</a>.  Specifically: &quot;push and insert will never (re)allocate if the reported capacity is sufficient. push and insert will (re)allocate if len==capacity.&quot;"}], "answers": [{"tags": [], "owner": {"reputation": 32558, "user_id": 101090, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/066290971688c0a44cc4159a9f210dcf?s=128&d=identicon&r=PG", "display_name": "Jorge Israel Pe&#241;a", "link": "https://stackoverflow.com/users/101090/jorge-israel-pe%c3%b1a"}, "is_accepted": true, "score": 7, "last_activity_date": 1527097753, "last_edit_date": 1527097753, "creation_date": 1527095920, "answer_id": 50494078, "question_id": 50493989, "link": "https://stackoverflow.com/questions/50493989/why-is-there-no-error-when-i-push-more-elements-than-a-vecs-capacity/50494078#50494078", "title": "Why is there no error when I push more elements than a Vec&#39;s capacity?", "body": "<p><code>Vec</code> can grow dynamically, it's similar to C++'s <code>std::vector</code>. The fact that you specify <code>with_capacity</code> simply means that it can hold that many elements without reallocating. See the <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.with_capacity\" rel=\"nofollow noreferrer\">documentation for <code>Vec::with_capacity</code></a>:</p>\n\n<blockquote>\n  <p>Constructs a new, empty <code>Vec&lt;T&gt;</code> with the specified capacity.</p>\n  \n  <p>The vector will be able to hold exactly <code>capacity</code> elements without reallocating. If <code>capacity</code> is 0, the vector will not allocate.</p>\n  \n  <p>It is important to note that although the returned vector has the capacity specified, the vector will have a zero length. For an explanation of the difference between length and capacity, see <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#capacity-and-reallocation\" rel=\"nofollow noreferrer\">Capacity and reallocation</a>.</p>\n</blockquote>\n\n<p>Here's an excerpt from <code>Vec</code>'s documentation on <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#capacity-and-reallocation\" rel=\"nofollow noreferrer\">Capacity and Reallocation</a>:</p>\n\n<blockquote>\n  <p>The capacity of a vector is the amount of space allocated for any future elements that will be added onto the vector. This is not to be confused with the <em>length</em> of a vector, which specifies the number of actual elements within the vector. If a vector's length exceeds its capacity, its capacity will automatically be increased, but its elements will have to be reallocated.</p>\n  \n  <p>For example, a vector with capacity 10 and length 0 would be an empty vector with space for 10 more elements. Pushing 10 or fewer elements onto the vector will not change its capacity or cause reallocation to occur. However, if the vector's length is increased to 11, it will have to reallocate, which can be slow. For this reason, it is recommended to use <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.with_capacity\" rel=\"nofollow noreferrer\"><code>Vec::with_capacity</code></a> whenever possible to specify how big the vector is expected to get.</p>\n</blockquote>\n\n<p>This is different from a <a href=\"https://doc.rust-lang.org/std/primitive.array.html\" rel=\"nofollow noreferrer\">fixed-length array</a> which may not exceed the specified length.</p>\n"}], "owner": {"reputation": 169, "user_id": 7584077, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fc90486d17862893ad21a3d9936216bc?s=128&d=identicon&r=PG&f=1", "display_name": "Ashniu123", "link": "https://stackoverflow.com/users/7584077/ashniu123"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 173, "favorite_count": 0, "accepted_answer_id": 50494078, "answer_count": 1, "score": 2, "last_activity_date": 1527097753, "creation_date": 1527095659, "last_edit_date": 1527097615, "question_id": 50493989, "link": "https://stackoverflow.com/questions/50493989/why-is-there-no-error-when-i-push-more-elements-than-a-vecs-capacity", "title": "Why is there no error when I push more elements than a Vec&#39;s capacity?", "body": "<p>I came across this potential bug:</p>\n\n<pre><code>#[derive(Debug)]\nenum StackType {\n    Int(i64),\n    Float(f64),\n    Word(String),\n}\n\nfn main() {\n    let mut stack: Vec&lt;StackType&gt; = Vec::with_capacity(1);\n    stack.push(StackType::Int(5));\n    stack.push(StackType::Float(5_f64));\n    stack.push(StackType::Word(String::from(\"ABC\")));\n    println!(\"{:?}\", stack);\n}\n</code></pre>\n\n<p>I am using Rust v1.26.0 (a77568041 2018-05-07) on Windows 10.</p>\n\n<p>When I compile and run the above program, I expect an error since the capacity specified is 1 and I have used push 3 times but the output is proper:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[Int(5), Float(5.0), Word(\"ABC\")]\n</code></pre>\n"}, {"tags": ["multithreading", "rust", "traits"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1527089108, "post_id": 50492087, "comment_id": 87997151, "body": "To what end would this be useful? Just don&#39;t send things between threads if you don&#39;t want them to be."}, {"owner": {"reputation": 2731, "user_id": 109414, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2b68fe77303968e573ca1e7004462ae7?s=128&d=identicon&r=PG", "display_name": "Edd Barrett", "link": "https://stackoverflow.com/users/109414/edd-barrett"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1527089184, "post_id": 50492087, "comment_id": 87997210, "body": "It would be nice to have it enforced by the compiler, no?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1527089445, "post_id": 50492087, "comment_id": 87997400, "body": "I honestly don&#39;t see how. If you try to send things that can&#39;t be sent, the compiler will already tell you. Substitute <code>Hash</code> or <code>PartialEq</code> for <code>Send</code> \u2014 what does enforcing that some type <i>not</i> implement a trait actually buy you?"}, {"owner": {"reputation": 2731, "user_id": 109414, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2b68fe77303968e573ca1e7004462ae7?s=128&d=identicon&r=PG", "display_name": "Edd Barrett", "link": "https://stackoverflow.com/users/109414/edd-barrett"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1527089833, "post_id": 50492087, "comment_id": 87997664, "body": "The problem is, in one of the implementers the stuff that I don&#39;t want to be sent is behind an opaque pointer to some data structures that Rust has no knowledge of. Otherwise it would be automatic, like you said."}, {"owner": {"reputation": 2731, "user_id": 109414, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2b68fe77303968e573ca1e7004462ae7?s=128&d=identicon&r=PG", "display_name": "Edd Barrett", "link": "https://stackoverflow.com/users/109414/edd-barrett"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1527089915, "post_id": 50492087, "comment_id": 87997717, "body": "I guess this implementer is not <code>Send</code> by virtue of that raw pointer then..."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1527094344, "post_id": 50492087, "comment_id": 88000224, "body": "Thinking of trait constraints as a subtraction of capabilities is bound to bring ugly looking edge cases. It might be best fo focus on what implementers can do, rather than what they cannot."}], "answers": [{"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1527162402, "post_id": 50505545, "comment_id": 88029002, "body": "Sorry, this doesn&#39;t do what you think. (<a href=\"https://play.rust-lang.org/?gist=5143ae8d2ec3fea8396ecac9f7f71c9d&amp;version=nightly&amp;mode=debug\" rel=\"nofollow noreferrer\">playground</a>) You unimplement <code>Scary</code> for the <i>type</i> <code>ThreadThing</code> (the type of trait objects of <code>ThreadThing</code>, as in <code>Box&lt;ThreadThing&gt;</code> and <code>&amp;ThreadThing</code>). <a href=\"https://github.com/Ixrec/rfcs/blob/dyn-trait-syntax/text/2113-dyn-trait-syntax.md\" rel=\"nofollow noreferrer\">In the future</a>, this will be written <code>impl !Scary for dyn ThreadThing</code> and there will be a lint to warn when you use &quot;bare trait&quot; syntax, because it probably doesn&#39;t do what you want."}], "tags": [], "owner": {"reputation": 2731, "user_id": 109414, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2b68fe77303968e573ca1e7004462ae7?s=128&d=identicon&r=PG", "display_name": "Edd Barrett", "link": "https://stackoverflow.com/users/109414/edd-barrett"}, "is_accepted": false, "score": 0, "last_activity_date": 1527153586, "creation_date": 1527153586, "answer_id": 50505545, "question_id": 50492087, "link": "https://stackoverflow.com/questions/50492087/can-i-define-a-trait-whose-implementations-must-be-send/50505545#50505545", "title": "Can I define a trait whose implementations must be `!Send`?", "body": "<p>The answer is: yes, you can, under some very specific conditions. Whether you should need to do this is another matter.</p>\n\n<p>You can define a negative trait implementation for another trait if the trait you are negating is:</p>\n\n<ul>\n<li>an auto-trait.</li>\n<li>from the current crate.</li>\n</ul>\n\n<p>So the following will work (<a href=\"https://play.rust-lang.org/?gist=9e27115e9e6e0e00d562896242e5eab8&amp;version=nightly&amp;mode=debug\" rel=\"nofollow noreferrer\">playground</a>):</p>\n\n<pre><code>#![feature(optin_builtin_traits)]\n\nauto trait Scary {}\n\ntrait ThreadThing { }\nimpl !Scary for ThreadThing {}\n</code></pre>\n\n<p>But it would not work if you were trying to do:</p>\n\n<pre><code>impl !Send for ThreadThing {}\n</code></pre>\n\n<p>Or if <code>Scary</code> was not an auto-trait.</p>\n\n<p>Note however that, in general it should not be necessary to mark a trait <code>!Send</code> in this way. The concrete implementations of the trait will be marked <code>Send</code> or <code>!Send</code> by the Rust compiler based upon the contents of the implementing struct.</p>\n"}, {"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": false, "score": 2, "last_activity_date": 1527162094, "creation_date": 1527162094, "answer_id": 50508500, "question_id": 50492087, "link": "https://stackoverflow.com/questions/50492087/can-i-define-a-trait-whose-implementations-must-be-send/50508500#50508500", "title": "Can I define a trait whose implementations must be `!Send`?", "body": "<p>No, you can't make <code>!Send</code> a condition of <code>ThreadThing</code>. The compiler just doesn't support that kind of logic.</p>\n\n<p>If it would be possible for someone <em>using</em> your crate to make a type that is implicitly <code>Send</code>, contains no unsafe code in its implementation anywhere, and <em>make it unsafe</em> just by implementing <code>ThreadThing</code> for it -- in that case, you would make <code>ThreadThing</code> an <a href=\"https://doc.rust-lang.org/book/second-edition/ch19-01-unsafe-rust.html#implementing-an-unsafe-trait\" rel=\"nofollow noreferrer\"><code>unsafe trait</code></a> to indicate that there is unsafe code somewhere that relies on an invariant that can't be described in the type system: the invariant \"Things that are <code>Send</code> don't implement <code>ThreadThing</code>\".</p>\n\n<p>If, as is more likely, it's only unsafe to implement <code>Send</code> manually for a type that implements <code>ThreadThing</code> -- in that case, you don't need to do anything, because <a href=\"https://doc.rust-lang.org/nomicon/send-and-sync.html\" rel=\"nofollow noreferrer\">manually implementing <code>Send</code> is unsafe already</a>. If an implementor of <code>ThreadThing</code> decides to manually implement <code>Send</code>, they take on the burden of guaranteeing not only their own invariants, but also <code>ThreadThing</code>'s.</p>\n"}], "owner": {"reputation": 2731, "user_id": 109414, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2b68fe77303968e573ca1e7004462ae7?s=128&d=identicon&r=PG", "display_name": "Edd Barrett", "link": "https://stackoverflow.com/users/109414/edd-barrett"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 203, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1527162094, "creation_date": 1527088942, "last_edit_date": 1527089206, "question_id": 50492087, "link": "https://stackoverflow.com/questions/50492087/can-i-define-a-trait-whose-implementations-must-be-send", "title": "Can I define a trait whose implementations must be `!Send`?", "body": "<p>I'd like to define a trait which forces its implementors to under no circumstances be sent to, or shared between, threads. It should suffice to mark the trait as <code>!Send</code>, but Rust doesn't seem to let me.</p>\n\n<p>Is it possible?</p>\n\n<p>Example (<a href=\"https://play.rust-lang.org/?gist=639a6e290a61436b0803999278993e62&amp;version=nightly&amp;mode=debug\" rel=\"nofollow noreferrer\">playground</a>):</p>\n\n<pre><code>#![feature(optin_builtin_traits)]\n\n// This is a syntax error\n//trait ThreadThing : !Send {}\n\n// This doesn't work either\ntrait ThreadThing { }\nimpl !Send for ThreadThing {}\n</code></pre>\n"}, {"tags": ["rust", "biginteger"], "comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1527066564, "post_id": 50484012, "comment_id": 87981494, "body": "What should be a &quot;truncation&quot; of a big int fitting into an i32 ? You should probably check whether the Option contains a value and use it only in that case."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1527066625, "post_id": 50484012, "comment_id": 87981537, "body": "Why do you want this feature ???"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1527067209, "post_id": 50484012, "comment_id": 87981981, "body": "What do you want exactly? Please explain the expected result with different cases and your usecase. Otherwise, your question is too broad."}, {"owner": {"reputation": 80989, "user_id": 466862, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d873f397779db38cd510d9ee5416fd43?s=128&d=identicon&r=PG", "display_name": "Mark Rotteveel", "link": "https://stackoverflow.com/users/466862/mark-rotteveel"}, "edited": false, "score": 0, "creation_date": 1527068169, "post_id": 50484012, "comment_id": 87982649, "body": "Specifically, Java specifies on <a href=\"https://docs.oracle.com/javase/10/docs/api/java/math/BigInteger.html#intValue()\" rel=\"nofollow noreferrer\"><code>intValue()</code></a>: <i>&quot;This conversion is analogous to a narrowing primitive conversion from long to int as defined in The Java\u2122 Language Specification: if this BigInteger is too big to fit in an int, only the low-order 32 bits are returned.&quot;</i>"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "reply_to_user": {"reputation": 80989, "user_id": 466862, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d873f397779db38cd510d9ee5416fd43?s=128&d=identicon&r=PG", "display_name": "Mark Rotteveel", "link": "https://stackoverflow.com/users/466862/mark-rotteveel"}, "edited": false, "score": 0, "creation_date": 1527069122, "post_id": 50484012, "comment_id": 87983308, "body": "@MarkRotteveel Java returned value in case of not fitting value is implementation leaking and makes no functional sense. This should not be reproduced in rust."}, {"owner": {"reputation": 80989, "user_id": 466862, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d873f397779db38cd510d9ee5416fd43?s=128&d=identicon&r=PG", "display_name": "Mark Rotteveel", "link": "https://stackoverflow.com/users/466862/mark-rotteveel"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 3, "creation_date": 1527069944, "post_id": 50484012, "comment_id": 87983886, "body": "@DenysS&#233;guret I posted my comment so people would know what the equivalent behaviour would need to be. Given the behaviour is explicitly defined to behave similar as what happens when casting a long to int, it is not &quot;implementation leaking&quot;, it was a deliberate design choice. And if you don&#39;t want this type of behavior, you can use <a href=\"https://docs.oracle.com/javase/10/docs/api/java/math/BigInteger.html#intValueExact()\" rel=\"nofollow noreferrer\"><code>intValueExact()</code></a> which will throw an exception if the value is out of range for an int."}, {"owner": {"reputation": 80989, "user_id": 466862, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d873f397779db38cd510d9ee5416fd43?s=128&d=identicon&r=PG", "display_name": "Mark Rotteveel", "link": "https://stackoverflow.com/users/466862/mark-rotteveel"}, "edited": false, "score": 0, "creation_date": 1527070406, "post_id": 50484012, "comment_id": 87984216, "body": "I don&#39;t know Rust, but if I had to guess, the same behavior could be achieved by using <code>to_signed_bytes_be</code> and then taking the last 4 bytes, converting that back to int. It would be a hack, sure, and you&#39;d need to consider if you really need this."}], "answers": [{"comments": [{"owner": {"reputation": 2512, "user_id": 5808553, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/6be8254e63e22cc820bb14938d532814?s=128&d=identicon&r=PG&f=1", "display_name": "Rajeev Ranjan", "link": "https://stackoverflow.com/users/5808553/rajeev-ranjan"}, "edited": false, "score": 0, "creation_date": 1527074817, "post_id": 50484312, "comment_id": 87987072, "body": "Thanks @Denys but i really need the behavior as in Java I would rather not attempt to use <code>to_i32</code> at all if it cannot suffice in all the cases. I would anyhow have to use the other logic for the cases when returned option contains no value."}], "tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": false, "score": 4, "last_activity_date": 1527069676, "last_edit_date": 1527069676, "creation_date": 1527066728, "answer_id": 50484312, "question_id": 50484012, "link": "https://stackoverflow.com/questions/50484012/can-a-biginteger-be-truncated-to-an-i32-in-rust/50484312#50484312", "title": "Can a BigInteger be truncated to an i32 in Rust?", "body": "<p>There's no natural truncation of a big integer into a smaller one. Either it fits or you have to decide what value you want.</p>\n\n<p>You could do this:</p>\n\n<pre><code>println!(\"Truncation of {} is {:?}.\", num1, num1.to_i32().unwrap_or(-1));\n</code></pre>\n\n<p>or</p>\n\n<pre><code>println!(\"Truncation of {} is {:?}.\", num1, num1.to_i32().unwrap_or(std::i32::MAX));\n</code></pre>\n\n<p>but your application logic should probably dictate what's the desired behavior when the returned option contains no value.</p>\n"}, {"comments": [{"owner": {"reputation": 2512, "user_id": 5808553, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/6be8254e63e22cc820bb14938d532814?s=128&d=identicon&r=PG&f=1", "display_name": "Rajeev Ranjan", "link": "https://stackoverflow.com/users/5808553/rajeev-ranjan"}, "edited": false, "score": 0, "creation_date": 1527074589, "post_id": 50485697, "comment_id": 87986926, "body": "Thanks @kennytm. This would be another way of doing what i want if there is no natural truncation. I am switching over from Java to Rust hence contrasting with Java."}], "tags": [], "owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "is_accepted": true, "score": 8, "last_activity_date": 1527095481, "last_edit_date": 1527095481, "creation_date": 1527070507, "answer_id": 50485697, "question_id": 50484012, "link": "https://stackoverflow.com/questions/50484012/can-a-biginteger-be-truncated-to-an-i32-in-rust/50485697#50485697", "title": "Can a BigInteger be truncated to an i32 in Rust?", "body": "<p>Java's <a href=\"https://docs.oracle.com/javase/10/docs/api/java/math/BigInteger.html#intValue()\" rel=\"nofollow noreferrer\"><code>intValue()</code></a> returns the lowest 32 bits of the integer. This could be done by a bitwise-AND operation <code>x &amp; 0xffffffff</code>. A <a href=\"https://docs.rs/num-bigint/*/num_bigint/struct.BigInt.html\" rel=\"nofollow noreferrer\"><code>BigInt</code> in Rust</a> doesn't support bitwise manipulation, but you could first convert it to a <code>BigUint</code> which <a href=\"https://docs.rs/num-bigint/*/num_bigint/struct.BigUint.html#impl-BitAnd%3CBigUint%3E\" rel=\"nofollow noreferrer\">supports</a> such operations.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn truncate_biguint_to_u32(a: &amp;BigUint) -&gt; u32 {\n    use std::u32;\n    let mask = BigUint::from(u32::MAX);\n    (a &amp; mask).to_u32().unwrap()\n}\n</code></pre>\n\n<p>Converting <code>BigInt</code> to <code>BigUint</code> will be successful only when it is not negative. If the <code>BigInt</code> is negative (-x), we could find the lowest 32 bits of its absolute value (x), then negate the result.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn truncate_bigint_to_u32(a: &amp;BigInt) -&gt; u32 {\n    use num_traits::Signed;\n\n    let was_negative = a.is_negative();\n    let abs = a.abs().to_biguint().unwrap();\n    let mut truncated = truncate_biguint_to_u32(&amp;abs);\n    if was_negative {\n        truncated.wrapping_neg()\n    } else {\n        truncated\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=e43befa6456cd5877d6a8b5ebaafdc49&amp;version=nightly&amp;mode=debug\" rel=\"nofollow noreferrer\">Demo</a></p>\n\n<p>You may use <code>truncate_bigint_to_u32(a) as i32</code> if you need a signed number.</p>\n\n<hr>\n\n<p>There is also a <a href=\"https://docs.rs/num-bigint/*/num_bigint/struct.BigInt.html#method.to_signed_bytes_le\" rel=\"nofollow noreferrer\"><code>to_signed_bytes_le()</code></a> method with which you could extract the bytes and decode that into a primitive integer directly:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn truncate_bigint_to_u32_slow(a: &amp;BigInt) -&gt; u32 {\n    let mut bytes = a.to_signed_bytes_le();\n    bytes.resize(4, 0);\n    bytes[0] as u32 | (bytes[1] as u32) &lt;&lt; 8 | (bytes[2] as u32) &lt;&lt; 16 | (bytes[3] as u32) &lt;&lt; 24\n}\n</code></pre>\n\n<p>This method is extremely slow compared to the above methods and I don't recommend using it.</p>\n"}], "owner": {"reputation": 2512, "user_id": 5808553, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/6be8254e63e22cc820bb14938d532814?s=128&d=identicon&r=PG&f=1", "display_name": "Rajeev Ranjan", "link": "https://stackoverflow.com/users/5808553/rajeev-ranjan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1047, "favorite_count": 1, "accepted_answer_id": 50485697, "answer_count": 2, "score": 3, "last_activity_date": 1527095481, "creation_date": 1527065823, "last_edit_date": 1527095416, "question_id": 50484012, "link": "https://stackoverflow.com/questions/50484012/can-a-biginteger-be-truncated-to-an-i32-in-rust", "title": "Can a BigInteger be truncated to an i32 in Rust?", "body": "<p>In Java, <code>intValue()</code> gives back a truncated portion of the <code>BigInteger</code> instance. I wrote a similar program in Rust but it appears not to truncate:</p>\n\n<pre><code>extern crate num;\n\nuse num::bigint::{BigInt, RandBigInt};\nuse num::ToPrimitive;\n\nfn main() {\n    println!(\"Hello, world!\");\n    truncate_num(\n        BigInt::parse_bytes(b\"423445324324324324234324\", 10).unwrap(),\n        BigInt::parse_bytes(b\"22447\", 10).unwrap(),\n    );\n}\n\nfn truncate_num(num1: BigInt, num2: BigInt) -&gt; i32 {\n    println!(\"Truncation of {} is {:?}.\", num1, num1.to_i32());\n    println!(\"Truncation of {} is {:?}.\", num2, num2.to_i32());\n    return 0;\n}\n</code></pre>\n\n<p>The output I get from this is </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Hello, world!\nTruncation of 423445324324324324234324 is None.\nTruncation of 22447 is Some(22447).\n</code></pre>\n\n<p>How can I achieve this in Rust? Should I try a conversion to <code>String</code> and then truncate manually? This would be my last resort.</p>\n"}, {"tags": ["rust", "traits"], "answers": [{"comments": [{"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1527070716, "post_id": 50485607, "comment_id": 87984422, "body": "Please note, that the last notation is somewhat controversial, but I won&#39;t go into depth in this answer."}, {"owner": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "edited": false, "score": 0, "creation_date": 1527073417, "post_id": 50485607, "comment_id": 87986181, "body": "Thanks for this answer. Re. the first part, I think you missed my point: I&#39;m not trying to enforce Foo: Sized, but on the contrary, Foo: ?Sized (i.e. &quot;Foo could be not Sized&quot;). Re. the second part, I had the idea of implementing Foo for &amp;[u32] but then I have to pass a &amp;&amp;[u32] to <code>bar</code>, which seemed a little awkward..."}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "reply_to_user": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "edited": false, "score": 0, "creation_date": 1527073515, "post_id": 50485607, "comment_id": 87986253, "body": "@Pierre-Antoine So did the answer solved your Problem, or not?"}, {"owner": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "edited": false, "score": 0, "creation_date": 1527074277, "post_id": 50485607, "comment_id": 87986732, "body": "Not quite: it makes that particular example compile, but my goal was to let the compiler know that Foo+?Sized should be used anywhere I bind a type parameter to Foo. Apparently, this is not possible... :-("}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "reply_to_user": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "edited": false, "score": 0, "creation_date": 1527074594, "post_id": 50485607, "comment_id": 87986931, "body": "@Pierre-Antoine No, this does not work. See both quotes in my answer. <i>all generic types on functions implicitly have the Sized bound, regardless of how they are used.</i> This implies, that you always need the bound."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "edited": false, "score": 1, "creation_date": 1527080432, "post_id": 50485607, "comment_id": 87991012, "body": "@Pierre-Antoine Note that Tim&#39;s second example changed <code>bar</code> to take <code>T</code> instead of <code>&amp;T</code>; therefore, no <code>&amp;&amp;</code> is required (<code>T</code> becomes <code>&amp;[u32]</code>)."}], "tags": [], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "is_accepted": false, "score": 2, "last_activity_date": 1527178607, "last_edit_date": 1527178607, "creation_date": 1527070281, "answer_id": 50485607, "question_id": 50483245, "link": "https://stackoverflow.com/questions/50483245/can-i-declare-that-implementations-of-a-given-trait-should-not-be-expected-to-be/50485607#50485607", "title": "Can I declare that implementations of a given trait should not be expected to be Sized?", "body": "<h1>Why does the compiler complain about <code>trait Foo: ?Sized</code>?</h1>\n\n<blockquote>\n  <p>When you say that every <code>Foo</code> is <code>Sized</code>, you're kind of hiding the truth to yourself. Yes, every <code>Foo</code> is <code>Sized</code> but actually every type has a given size at some point. The real important information is that you're not saying how much this size is.</p>\n</blockquote>\n\n<p>In this case you asking for a sized <code>[u32]</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `[u32]: std::marker::Sized` is not satisfied\n  |\n  | impl Foo for [u32] {\n  |      ^^^ `[u32]` does not have a constant size known at compile-time\n  |\n  = help: the trait `std::marker::Sized` is not implemented for `[u32]`\n</code></pre>\n\n<p>For further information consult <a href=\"https://stackoverflow.com/a/31516384/3131852\">this answer</a> of <a href=\"https://stackoverflow.com/questions/31515921/trait-implementing-sized\"><em>Trait implementing Sized</em></a>.</p>\n\n<h1>Why can't <code>T</code> be unsized, since we only have a reference?</h1>\n\n<p>Let me quote again from <a href=\"https://stackoverflow.com/a/44344518/3131852\">this answer</a> from <a href=\"https://stackoverflow.com/questions/44343818/why-does-a-reference-to-a-trait-in-a-generic-function-have-to-implement-sized/44344518#44344518\"><em>Why does a reference to a trait in a generic function have to implement <code>Sized</code>?</em></a></p>\n\n<blockquote>\n  <p>By default, <strong>all</strong> generic types on functions implicitly have the <code>Sized</code> bound, regardless of how they are used. You need to explicitly opt-out of that requirement using <code>?Sized</code></p>\n</blockquote>\n\n<p>This will solve your problem:</p>\n\n<pre><code>fn bar&lt;T&gt;(f: &amp;T) -&gt; u32\nwhere\n    T: Foo + ?Sized,\n{\n    f.foo() + 1\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=01bad768e9c0adea3d9949d336c54193&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>It would also be possible to implement <code>Foo</code> for <code>&amp;[u32]</code>:</p>\n\n<pre><code>impl&lt;'a&gt; Foo for &amp;'a [u32] {\n    fn foo(&amp;self) -&gt; u32 {\n        self[0]\n    }\n}\n\nfn bar&lt;T&gt;(f: T) -&gt; u32\nwhere\n    T: Foo,\n{\n    f.foo() + 1\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=dbe34aa553ebb1389270db8274717373&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>In this particular case, you could even generalize your implementation for <code>Foo</code> and it would work on <code>Vec</code>s and arrays as well as references to those types:</p>\n\n<pre><code>impl&lt;T: AsRef&lt;[u32]&gt;&gt; Foo for T {\n    fn foo(&amp;self) -&gt; u32 {\n        self.as_ref()[0]\n    }\n}\n</code></pre>\n\n<p>With the new <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1522-conservative-impl-trait.md\" rel=\"nofollow noreferrer\">impl Trait</a> syntax, <code>bar</code> can be shortened in the last two cases to</p>\n\n<pre><code>fn bar(f: impl Foo) -&gt; u32 {\n    f.foo() + 1\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=48c657ed405ffd9e04d5ee432c8ccbdd&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}], "owner": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 109, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1527178607, "creation_date": 1527063484, "last_edit_date": 1527178409, "question_id": 50483245, "link": "https://stackoverflow.com/questions/50483245/can-i-declare-that-implementations-of-a-given-trait-should-not-be-expected-to-be", "title": "Can I declare that implementations of a given trait should not be expected to be Sized?", "body": "<p>I defined a trait <code>Foo</code>, implemented this trait for <code>[u32]</code>, and wrote a function <code>bar</code> taking this trait as argument (<a href=\"https://play.rust-lang.org/?gist=b20c6d9ae4503ac596a76ab66ea675e0&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">playground</a>):</p>\n\n<pre><code>trait Foo {\n    fn foo(&amp;self) -&gt; u32;\n}\n\nimpl Foo for [u32] {\n    fn foo(&amp;self) -&gt; u32 {\n        self[0]\n    }\n}\n\nfn bar&lt;T&gt;(f: &amp;T) -&gt; u32\nwhere\n    T: Foo,\n{\n    f.foo() + 1\n}\n\nfn main() {\n    let f: &amp;[u32] = &amp;[42];\n    bar(f);\n}\n</code></pre>\n\n<p>This does not compile because <code>bar</code> implicitly expects its arguments to be <code>Sized</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `[u32]: std::marker::Sized` is not satisfied\n  --&gt; src/main.rs:20:5\n   |\n20 |     bar(f);\n   |     ^^^ `[u32]` does not have a constant size known at compile-time\n   |\n   = help: the trait `std::marker::Sized` is not implemented for `[u32]`\nnote: required by `bar`\n  --&gt; src/main.rs:11:1\n   |\n11 | / fn bar&lt;T&gt;(f: &amp;T) -&gt; u32\n12 | | where\n13 | |     T: Foo,\n14 | | {\n15 | |     f.foo() + 1\n16 | | }\n   | |_^\n</code></pre>\n\n<p>I can fix it with <code>T: Foo + ?Sized</code>, but then I would have to do this for <em>every</em> function expecting a <code>Foo</code>, which is a pain...</p>\n\n<p>Can I declare once and for all that implementations of <code>Foo</code> should not be expected to be <code>Sized</code>? I tried <code>trait Foo: ?Sized</code> in line 1, but the compiler complains about it.</p>\n\n<p>This question is not the same as <a href=\"https://stackoverflow.com/questions/31515921\">Trait implementing Sized</a>. In that question, the <code>Foo</code> parameter is moved, so it is normal that the compiler wants to know its size at compile time. In my case, the parameter is a reference, so it does not <em>need</em> to be sized -- but still the compiler implicitly assumes it is, unless explicitly told (using <code>+ ?Sized</code>). What I would like to change is this implicit assumption, for this particular trait.</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "is_accepted": true, "score": 9, "last_activity_date": 1527061367, "last_edit_date": 1592644375, "creation_date": 1527060505, "answer_id": 50482322, "question_id": 50482210, "link": "https://stackoverflow.com/questions/50482210/how-to-unwrap-a-result/50482322#50482322", "title": "How to unwrap a &amp;Result&lt;_,_&gt;?", "body": "<p>You are looking for <a href=\"https://doc.rust-lang.org/std/result/enum.Result.html#method.as_ref\" rel=\"noreferrer\"><code>Result::as_ref</code></a>:</p>\n<blockquote>\n<p>Converts from <code>Result&lt;T, E&gt;</code> to <code>Result&lt;&amp;T, &amp;E&gt;</code>.</p>\n<p>Produces a new <code>Result</code>, containing a reference into the original, leaving the original in place.</p>\n</blockquote>\n<p>The following code solves your problem:</p>\n<pre><code>let entry: &amp;DirEntry = result.as_ref().unwrap();\n</code></pre>\n<p>For a mutable version, <a href=\"https://doc.rust-lang.org/std/result/enum.Result.html#method.as_mut\" rel=\"noreferrer\"><code>Result::as_mut</code></a> is provided.</p>\n"}], "owner": {"reputation": 2058, "user_id": 3958875, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f6149ddd4636bcab17c52b751d79f7fd?s=128&d=identicon&r=PG&f=1", "display_name": "Prime_Aqasix", "link": "https://stackoverflow.com/users/3958875/prime-aqasix"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 252, "favorite_count": 0, "accepted_answer_id": 50482322, "answer_count": 1, "score": 5, "last_activity_date": 1527065619, "creation_date": 1527060103, "last_edit_date": 1527065619, "question_id": 50482210, "link": "https://stackoverflow.com/questions/50482210/how-to-unwrap-a-result", "title": "How to unwrap a &amp;Result&lt;_,_&gt;?", "body": "<p>What is a good way to extract data from a <code>&amp;Result</code> type?</p>\n\n<p>In my specific case, I have a <code>&amp;Result&lt;DirEntry, Error&gt;</code> type, which I can't unwrap because I don't own the object. I tried to dereference and clone it <code>(*left_item).clone()</code>, but that just gives me a error with the note: </p>\n\n<pre><code>the method `clone` exists but the following trait bounds were not satisfied:\n`std::result::Result&lt;std::fs::DirEntry, std::io::Error&gt; : std::clone::Clone`\n</code></pre>\n"}, {"tags": ["loops", "rust", "break", "lifetime"], "comments": [{"owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "edited": false, "score": 1, "creation_date": 1527060165, "post_id": 50482130, "comment_id": 87977294, "body": "Does <a href=\"https://stackoverflow.com/q/22905752/3005167\">stackoverflow.com/q/22905752/3005167</a> provide any insights?"}], "answers": [{"comments": [{"owner": {"reputation": 947, "user_id": 8139481, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/qq5cI.jpg?s=128&g=1", "display_name": "Griffort", "link": "https://stackoverflow.com/users/8139481/griffort"}, "edited": false, "score": 4, "creation_date": 1527060411, "post_id": 50482219, "comment_id": 87977471, "body": "Ahhh, makes sense. Is there a specific reason the language designers chose to go with the same syntax of lifetimes? Seems unnecessarily confusing. :/"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 947, "user_id": 8139481, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/qq5cI.jpg?s=128&g=1", "display_name": "Griffort", "link": "https://stackoverflow.com/users/8139481/griffort"}, "edited": false, "score": 6, "creation_date": 1527062461, "post_id": 50482219, "comment_id": 87978804, "body": "@Griffort: Probably in part because (with the exception of <code>&#39;static</code>), lifetimes can be thought of as scope labels.  They&#39;re often tied in some way to actual lexical scopes, and nest just like scopes do.  It also avoids any possible overlap or conflict with type ascription syntax; the two would have been disjoint, but might have been a little visually confusing."}], "tags": [], "owner": {"reputation": 647, "user_id": 1359796, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/pS4eq.png?s=128&g=1", "display_name": "HEDMON", "link": "https://stackoverflow.com/users/1359796/hedmon"}, "is_accepted": true, "score": 9, "last_activity_date": 1527060140, "creation_date": 1527060140, "answer_id": 50482219, "question_id": 50482130, "link": "https://stackoverflow.com/questions/50482130/what-does-it-mean-for-loop-to-have-a-lifetime/50482219#50482219", "title": "What does it mean for loop to have a lifetime?", "body": "<p><strong><a href=\"https://doc.rust-lang.org/book/first-edition/loops.html#loop-labels\" rel=\"noreferrer\">Loop labels</a></strong></p>\n\n<blockquote>\n  <p>You may also encounter situations where you have nested loops and need\n  to specify which one your break or continue statement is for. Like\n  most other languages, Rust's break or continue apply to the innermost\n  loop. In a situation where you would like to break or continue for one\n  of the outer loops, you can use labels to specify which loop the break\n  or continue statement applies to.</p>\n  \n  <p>In the example below, we continue to the next iteration of outer loop\n  when x is even, while we continue to the next iteration of inner loop\n  when y is even. So it will execute the println! when both x and y are\n  odd.</p>\n</blockquote>\n\n<pre><code>'outer: for x in 0..10 {\n    'inner: for y in 0..10 {\n        if x % 2 == 0 { continue 'outer; } // Continues the loop over `x`.\n        if y % 2 == 0 { continue 'inner; } // Continues the loop over `y`.\n        println!(\"x: {}, y: {}\", x, y);\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 947, "user_id": 8139481, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/qq5cI.jpg?s=128&g=1", "display_name": "Griffort", "link": "https://stackoverflow.com/users/8139481/griffort"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 700, "favorite_count": 1, "accepted_answer_id": 50482219, "answer_count": 1, "score": 6, "last_activity_date": 1527060140, "creation_date": 1527059844, "question_id": 50482130, "link": "https://stackoverflow.com/questions/50482130/what-does-it-mean-for-loop-to-have-a-lifetime", "title": "What does it mean for loop to have a lifetime?", "body": "<p>I was looking at some Rust code and saw something along the lines of this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>'running: loop {\n    // insert code here\n    if(/* some condition */) {\n        break 'running;\n    }\n}\n</code></pre>\n\n<p>What does it mean to \"label\" the loop with a lifetime? What are the benefits and differences between just doing:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>loop {\n    // insert code here\n    if(/* some condition */) {\n        break;\n    }\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1527063132, "post_id": 50479712, "comment_id": 87979200, "body": "not sure what you try to do here, as your &quot;buffer&quot; is just one element, what is the point to have <code>element_count</code> ?"}, {"owner": {"reputation": 912, "user_id": 6792709, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d5e86a4cf40fa66135705468f335a88e?s=128&d=identicon&r=PG&f=1", "display_name": "Jarak", "link": "https://stackoverflow.com/users/6792709/jarak"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1527131866, "post_id": 50479712, "comment_id": 88013415, "body": "Good point! It&#39;s a holdover from trying to directly copy C&#39;s fread, and then fiddling with it a bit. Originally it accepted an element count AND a element size counter, but I got rid of the latter in the process of genericising it."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1527085880, "post_id": 50481535, "comment_id": 87994913, "body": "Oh, <code>_of_val</code>. That&#39;s nasty."}, {"owner": {"reputation": 912, "user_id": 6792709, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d5e86a4cf40fa66135705468f335a88e?s=128&d=identicon&r=PG&f=1", "display_name": "Jarak", "link": "https://stackoverflow.com/users/6792709/jarak"}, "edited": false, "score": 0, "creation_date": 1527132049, "post_id": 50481535, "comment_id": 88013449, "body": "Ah, that makes a lot of sense. Thanks :-)"}], "tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": true, "score": 4, "last_activity_date": 1527085901, "last_edit_date": 1527085901, "creation_date": 1527057993, "answer_id": 50481535, "question_id": 50479712, "link": "https://stackoverflow.com/questions/50479712/why-does-a-generic-function-replicating-cs-fread-for-unsigned-integers-always-r/50481535#50481535", "title": "Why does a generic function replicating C&#39;s fread for unsigned integers always return zero?", "body": "<p>Your problem is that this line:</p>\n\n<pre><code>let mut buf = Vec::with_capacity(element_count * type_size);\n</code></pre>\n\n<p>creates a <strong>zero-length</strong> vector, even though it allocates memory for <code>element_count * type_size</code> bytes. Therefore you are asking <code>stream.read_exact</code> to read zero bytes. One way to fix this is to replace the above line with:</p>\n\n<pre><code>let mut buf = vec![0; element_count * type_size];\n</code></pre>\n\n<p>Side note: when the read succeeds, <code>bytes_read</code> receives the number of bytes you expected to read, not the number of bytes you actually read. You should probably use <code>std::mem::size_of_val (buf_slice)</code> to get the true byte count.</p>\n"}, {"comments": [{"owner": {"reputation": 912, "user_id": 6792709, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d5e86a4cf40fa66135705468f335a88e?s=128&d=identicon&r=PG&f=1", "display_name": "Jarak", "link": "https://stackoverflow.com/users/6792709/jarak"}, "edited": false, "score": 0, "creation_date": 1527132176, "post_id": 50490600, "comment_id": 88013479, "body": "I knew there must be a better way. Thanks."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1527084651, "creation_date": 1527084651, "answer_id": 50490600, "question_id": 50479712, "link": "https://stackoverflow.com/questions/50479712/why-does-a-generic-function-replicating-cs-fread-for-unsigned-integers-always-r/50490600#50490600", "title": "Why does a generic function replicating C&#39;s fread for unsigned integers always return zero?", "body": "<blockquote>\n  <p>in that there's almost certainly a better Rust way to repeatedly read some bytes from a file and pack them into one unsigned integer</p>\n</blockquote>\n\n<p>Yes, use the <a href=\"https://crates.io/crates/byteorder\" rel=\"nofollow noreferrer\">byteorder crate</a>. This requires no unneeded heap allocation (the <code>Vec</code> in the original code):</p>\n\n<pre><code>extern crate byteorder;\n\nuse byteorder::{LittleEndian, ReadBytesExt};\nuse std::{\n    fs::File, io::{self, BufReader, Read},\n};\n\nfn read_instructions_to_end&lt;R&gt;(mut rdr: R) -&gt; io::Result&lt;Vec&lt;u16&gt;&gt;\nwhere\n    R: Read,\n{\n    let mut instructions = Vec::new();\n    loop {\n        match rdr.read_u16::&lt;LittleEndian&gt;() {\n            Ok(instruction) =&gt; instructions.push(instruction),\n            Err(e) =&gt; {\n                return if e.kind() == std::io::ErrorKind::UnexpectedEof {\n                    Ok(instructions)\n                } else {\n                    Err(e)\n                }\n            }\n        }\n    }\n}\n\nfn main() -&gt; Result&lt;(), std::io::Error&gt; {\n    let name = std::env::args().skip(1).next().expect(\"no file name\");\n\n    let f = File::open(name)?;\n    let mut f = BufReader::new(f);\n\n    let base_address = f.read_u16::&lt;LittleEndian&gt;()?;\n    let instructions = read_instructions_to_end(f)?;\n\n    println!(\"{:#04x}\", base_address);\n\n    for i in &amp;instructions {\n        println!(\"0x{:04x}\", i);\n    }\n\n    Ok(())\n}\n</code></pre>\n"}], "owner": {"reputation": 912, "user_id": 6792709, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d5e86a4cf40fa66135705468f335a88e?s=128&d=identicon&r=PG&f=1", "display_name": "Jarak", "link": "https://stackoverflow.com/users/6792709/jarak"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 252, "favorite_count": 0, "accepted_answer_id": 50481535, "answer_count": 2, "score": 3, "last_activity_date": 1527085901, "creation_date": 1527049070, "last_edit_date": 1527083477, "question_id": 50479712, "link": "https://stackoverflow.com/questions/50479712/why-does-a-generic-function-replicating-cs-fread-for-unsigned-integers-always-r", "title": "Why does a generic function replicating C&#39;s fread for unsigned integers always return zero?", "body": "<p>I am trying to read in binary 16-bit machine instructions from a 16-bit architecture (the exact nature of that is irrelevant here), and print them back out as hexadecimal values.  In C, I found this simple by using the <code>fread</code>  function to read 16 bits into a <code>uint16_t</code>.</p>\n\n<p>I figured that I would try to replicate <code>fread</code> in Rust.  It seems to be reasonably trivial if I can know ahead-of-time the exact size of the variable that is being read into, and I had that working specifically for 16 bits.</p>\n\n<p>I decided that I wanted to try to make the <code>fread</code> function generic over the various built-in unsigned integer types.  For that I came up with the below function, using some traits from the Num crate:</p>\n\n<pre><code>fn fread&lt;T&gt;(\n    buffer: &amp;mut T,\n    element_count: usize,\n    stream: &amp;mut BufReader&lt;File&gt;,\n) -&gt; Result&lt;usize, std::io::Error&gt;\nwhere\n    T: num::PrimInt + num::Unsigned,\n{\n    let type_size = std::mem::size_of::&lt;T&gt;();\n    let mut buf = Vec::with_capacity(element_count * type_size);\n    let buf_slice = buf.as_mut_slice();\n\n    let bytes_read = match stream.read_exact(buf_slice) {\n        Ok(()) =&gt; element_count * type_size,\n        Err(ref e) if e.kind() == std::io::ErrorKind::UnexpectedEof =&gt; 0,\n        Err(e) =&gt; panic!(\"{}\", e),\n    };\n\n    *buffer = buf_slice\n        .iter()\n        .enumerate()\n        .map(|(i, &amp;b)| {\n            let mut holder2: T = num::zero();\n            holder2 = holder2 | T::from(b).expect(\"Casting from u8 to T failed\");\n            holder2 &lt;&lt; ((type_size - i) * 8)\n        })\n        .fold(num::zero(), |acc, h| acc | h);\n    Ok(bytes_read)\n}\n</code></pre>\n\n<p>The issue is that when I call it in the main function, I seem to always get <code>0x00</code> back out, but the number of bytes read that is returned by the function is always 2, so that the program enters an infinite loop:</p>\n\n<pre><code>extern crate num;\n\nuse std::fs::File;\nuse std::io::BufReader;\nuse std::io::prelude::Read;\n\nfn main() -&gt; Result&lt;(), std::io::Error&gt; {\n    let cmd_line_args = std::env::args().collect::&lt;Vec&lt;_&gt;&gt;();\n\n    let f = File::open(&amp;cmd_line_args[1])?;\n    let mut reader = BufReader::new(f);\n    let mut instructions: Vec&lt;u16&gt; = Vec::new();\n\n    let mut next_instruction: u16 = 0;\n    fread(&amp;mut next_instruction, 1, &amp;mut reader)?;\n\n    let base_address = next_instruction;\n\n    while fread(&amp;mut next_instruction, 1, &amp;mut reader)? &gt; 0 {\n        instructions.push(next_instruction);\n    }\n\n    println!(\"{:#04x}\", base_address);\n\n    for i in instructions {\n        println!(\"0x{:04x}\", i);\n    }\n\n    Ok(())\n}\n</code></pre>\n\n<p>It appears to me that I'm somehow never reading anything from the file, so the function always just returns the number of bytes it was supposed to read.  I'm clearly not using something correctly here, but I'm honestly unsure what I'm doing wrong. </p>\n\n<p>This is compiled on Rust 1.26 stable for Windows if that matters.</p>\n\n<p>What am I doing wrong, and what should I do differently to replicate <code>fread</code>?  I realise that this is probably a case of the XY problem (in that there's almost certainly a better Rust way to repeatedly read some bytes from a file and pack them into one unsigned integer), but I'm really curious as to what I'm doing wrong here. </p>\n"}, {"tags": ["rust", "hashset"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1527012419, "last_edit_date": 1527012419, "creation_date": 1527007852, "answer_id": 50472822, "question_id": 50472697, "link": "https://stackoverflow.com/questions/50472697/take-element-with-lowest-value-from-a-hashset/50472822#50472822", "title": "Take element with lowest value from a HashSet?", "body": "<p>Luckily, since you are taking <code>self</code> by value, this is an easy problem to solve. Just throw away everything that isn't the minimum <code>Node</code>:</p>\n\n<pre><code>fn consume(self) -&gt; Node {\n    self.pool\n        .into_iter()\n        .min_by(|a, b| a.f.partial_cmp(&amp;b.f).expect(\"Found a NaN\"))\n        .expect(\"There was no minimum\")\n}\n</code></pre>\n\n<p>If you need to keep the <code>Heap</code> afterwards, you need to disassociate the found value from the heap before removing it. Cloning is the easiest solution:</p>\n\n<pre><code>fn consume(&amp;mut self) -&gt; Node {\n    let min = self.pool\n        .iter()\n        .min_by(|a, b| a.f.partial_cmp(&amp;b.f).expect(\"Found a NaN\"))\n        .cloned()\n        .expect(\"There was no minimum\");\n\n    self.pool.remove(&amp;min);\n\n    min\n}\n</code></pre>\n\n<p>This does require that you perform an \"extra\" hash lookup. Since you are iterating through the entire <code>HashSet</code>, that seems like it will be a comparatively small cost.</p>\n\n<hr>\n\n<p>If you cannot easily clone the element, buckle up. Using the ideas from <a href=\"https://stackoverflow.com/q/45786717/155423\">How to implement HashMap with two keys?</a>, we can construct a <em>trait object</em> that can be used to look up a key based on parallel but equivalent hashing / equality implementations:</p>\n\n<pre><code>use std::borrow::Borrow;\n\ntrait Key {\n    fn as_bits(&amp;self) -&gt; u128;\n}\n\nimpl Key for Node {\n    fn as_bits(&amp;self) -&gt; u128 {\n        let xb = self.x.to_bits() as u128;\n        let yb = self.y.to_bits() as u128;\n        (xb &lt;&lt; 64) + yb\n    }\n}\n\nimpl Key for u128 {\n    fn as_bits(&amp;self) -&gt; u128 { *self }\n}\n\nimpl&lt;'a&gt; Hash for Key + 'a {\n    fn hash&lt;H: Hasher&gt;(&amp;self, h: &amp;mut H) {\n        self.as_bits().hash(h)\n    }\n}\n\nimpl&lt;'a&gt; PartialEq for Key + 'a {\n    fn eq(&amp;self, other: &amp;Self) -&gt; bool {\n        self.as_bits() == other.as_bits()        \n    }\n}\n\nimpl&lt;'a&gt; Eq for Key + 'a {}\n\nimpl&lt;'a&gt; Borrow&lt;Key + 'a&gt; for Node {\n    fn borrow(&amp;self) -&gt; &amp;(Key + 'a) {\n        self\n    }\n}\n\nimpl&lt;'a&gt; Borrow&lt;Key + 'a&gt; for u128 {\n    fn borrow(&amp;self) -&gt; &amp;(Key + 'a) {\n        self\n    }\n}\n</code></pre>\n\n<p>With this support, we can then convert the found element into a lightweight owned key and then look up again using it:</p>\n\n\n\n<pre><code>fn consume(&amp;mut self) -&gt; Node {\n    let min_key = self.pool\n        .iter()\n        .min_by(|a, b| a.f.partial_cmp(&amp;b.f).expect(\"Found a NaN\"))\n        .map(Node::as_bits)\n        .expect(\"There was no minimum\");\n\n    let min_key: &amp;Key = min_key.borrow();\n    self.pool.take(min_key).unwrap()\n}\n</code></pre>\n"}], "owner": {"reputation": 15633, "user_id": 2091169, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/MT8tZ.jpg?s=128&g=1", "display_name": "Jivan", "link": "https://stackoverflow.com/users/2091169/jivan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 679, "favorite_count": 0, "accepted_answer_id": 50472822, "answer_count": 1, "score": 1, "last_activity_date": 1527012419, "creation_date": 1527007365, "last_edit_date": 1527008385, "question_id": 50472697, "link": "https://stackoverflow.com/questions/50472697/take-element-with-lowest-value-from-a-hashset", "title": "Take element with lowest value from a HashSet?", "body": "<p>I'm trying to make a heap with a method that returns the node having the minimum <code>f</code>-value, and at the same time remove it from the heap itself.</p>\n\n<p>The heap should still be usable afterwards, only without the removed value:</p>\n\n<p>The <code>Node</code> struct and its implementations:</p>\n\n<pre><code>use std::hash::{Hash, Hasher};\n\n#[derive(Debug)]\nstruct Node {\n    x: f64,\n    y: f64,\n    f: f64,\n}\n\nimpl Node {\n    fn to_bits(&amp;self) -&gt; u128 {\n        let xb = self.x.to_bits() as u128;\n        let yb = self.y.to_bits() as u128;\n        (xb &lt;&lt; 64) + yb\n    }\n}\n\nimpl PartialEq for Node {\n    fn eq(&amp;self, other: &amp;Node) -&gt; bool {\n        self.x == other.x &amp;&amp; self.y == other.y\n    }\n}\n\nimpl Eq for Node {}\n\nimpl Hash for Node {\n    fn hash&lt;H&gt;(&amp;self, state: &amp;mut H) where H: Hasher {\n        self.to_bits().hash(state)\n    }\n}\n</code></pre>\n\n<p>The <code>Heap</code> struct:</p>\n\n<pre><code>use std::f64;\nuse std::collections::HashSet;\n\n#[derive(Debug)]\nstruct Heap {\n    pool: HashSet&lt;Node&gt;,\n}\n\nimpl Heap {\n    fn add(mut self, node: Node) -&gt; Heap {\n        self.pool.insert(node);\n        self\n    }\n\n    fn consume(mut self) -&gt; Node {\n      // find the node with minimum f-value in self.pool\n      // and \"take\" it, aka remove it from the pool\n      // and then return it\n      Node { x: 0.0, y: 0.0, f: 0.0 } // dummy node so that the code compiles\n    }\n}\n</code></pre>\n\n<p>And the <code>main</code> function:</p>\n\n<pre><code>fn main() {\n    let n1 = Node { x: 10.0, y: 11.0, f: 5.0 };\n    let n2 = Node { x: 11.0, y: 12.0, f: 7.0 };\n    let n3 = Node { x: 12.0, y: 13.0, f: 3.0 };\n    let n4 = Node { x: 14.0, y: 14.0, f: 4.0 };\n\n    let mut heap = Heap { pool: HashSet::new() };\n    heap = heap.add(n1);\n    heap = heap.add(n2);\n    heap = heap.add(n3);\n    heap = heap.add(n4);\n\n    let minimal_n1 = heap.consume();\n    println!(\"{:?}\", minimal_n1);\n    // should print\n    // Node { x: 12.0, y: 13.0, f: 3.0 }\n\n    let minimal_n2 = heap.consume();\n    println!(\"{:?}\", minimal_n2);\n    // should print\n    // Node { x: 14.0, y: 14.0, f: 4.0 }\n\n    println!(\"Heap has {} nodes\", heap.pool.len());\n    // should print\n    // Heap has 2 nodes\n}\n</code></pre>\n\n<p>Here is what I've tried so far with regards to <code>consume</code>:</p>\n\n<pre><code>fn consume(mut self) -&gt; Node {\n    let mut min_f = f64::MAX;\n    let mut min_node: Option&lt;&amp;Node&gt; = None;\n\n    for n in self.pool.iter() {\n        if n.f &lt; min_f {\n            min_f = n.f;\n            min_node = Some(n);\n        }\n    }\n\n    self.pool.take(&amp;min_node.unwrap()).unwrap()\n}\n</code></pre>\n\n<p>The issue is that <code>self.pool</code> is borrowed immutably by the <code>iter()</code> method, and therefore the <code>self.pool.take()</code> cannot borrow it mutably at the same moment.</p>\n\n<p>What would be the best approach to make this <code>consume</code> method take and return the node with has the minimal <code>f</code>-value among the <code>pool</code>?</p>\n\n<p>Notes:</p>\n\n<ul>\n<li>a Set (or a Map) is needed because other methods need to retrieve any Node in O(1)</li>\n<li>I don't use an ordered set (which would easily solve the above issue) because add/update operations have to stay O(1)</li>\n<li>The <code>heap</code> needs to be accessed after having removed the minimum-f node, as shown in the example</li>\n</ul>\n"}, {"tags": ["rust", "reqwest"], "comments": [{"owner": {"reputation": 694, "user_id": 5179678, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/HDDwl.jpg?s=128&g=1", "display_name": "mgul", "link": "https://stackoverflow.com/users/5179678/mgul"}, "edited": false, "score": 0, "creation_date": 1527002809, "post_id": 50471218, "comment_id": 87956203, "body": "Have you looked at the crate zip? <a href=\"https://github.com/mvdnes/zip-rs\" rel=\"nofollow noreferrer\">github.com/mvdnes/zip-rs</a>"}, {"owner": {"reputation": 1499, "user_id": 2491452, "user_type": "registered", "accept_rate": 27, "profile_image": "https://www.gravatar.com/avatar/a3546ced2b00cdbadfcc0d4c3b4ef4c5?s=128&d=identicon&r=PG", "display_name": "brielov", "link": "https://stackoverflow.com/users/2491452/brielov"}, "reply_to_user": {"reputation": 694, "user_id": 5179678, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/HDDwl.jpg?s=128&g=1", "display_name": "mgul", "link": "https://stackoverflow.com/users/5179678/mgul"}, "edited": false, "score": 0, "creation_date": 1527003390, "post_id": 50471218, "comment_id": 87956585, "body": "I did, but I am just getting started with rust and reqwest + zip example would really come in handy."}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1534088780, "post_id": 50471218, "comment_id": 90575616, "body": "Have you considered accepting an answer or starting a bounty for this question?"}], "answers": [{"comments": [{"owner": {"reputation": 1499, "user_id": 2491452, "user_type": "registered", "accept_rate": 27, "profile_image": "https://www.gravatar.com/avatar/a3546ced2b00cdbadfcc0d4c3b4ef4c5?s=128&d=identicon&r=PG", "display_name": "brielov", "link": "https://stackoverflow.com/users/2491452/brielov"}, "edited": false, "score": 0, "creation_date": 1527005336, "post_id": 50471949, "comment_id": 87957876, "body": "Is this example reading the entire file into a buffer? Have in mind that is a big file."}, {"owner": {"reputation": 694, "user_id": 5179678, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/HDDwl.jpg?s=128&g=1", "display_name": "mgul", "link": "https://stackoverflow.com/users/5179678/mgul"}, "reply_to_user": {"reputation": 1499, "user_id": 2491452, "user_type": "registered", "accept_rate": 27, "profile_image": "https://www.gravatar.com/avatar/a3546ced2b00cdbadfcc0d4c3b4ef4c5?s=128&d=identicon&r=PG", "display_name": "brielov", "link": "https://stackoverflow.com/users/2491452/brielov"}, "edited": false, "score": 0, "creation_date": 1527005882, "post_id": 50471949, "comment_id": 87958182, "body": "You could use <code>read</code> and fixed size buffers to read chunk by chunk. See this page for more information on <code>Read</code>: <a href=\"https://doc.rust-lang.org/std/io/trait.Read.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/io/trait.Read.html</a>"}], "tags": [], "owner": {"reputation": 694, "user_id": 5179678, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/HDDwl.jpg?s=128&g=1", "display_name": "mgul", "link": "https://stackoverflow.com/users/5179678/mgul"}, "is_accepted": false, "score": 1, "last_activity_date": 1527004623, "creation_date": 1527004623, "answer_id": 50471949, "question_id": 50471218, "link": "https://stackoverflow.com/questions/50471218/how-to-unzip-a-reqwest-hyper-response-using-streams/50471949#50471949", "title": "How to unzip a Reqwest/Hyper response using streams?", "body": "<p>That's how I'd read the file <em>hello.txt</em> with content <code>hello world</code> from the archive <em>hello.zip</em> located on a local server:</p>\n\n<pre><code>extern crate reqwest;\nextern crate zip;\n\nuse std::io::Read;\n\nfn main() {\n    let mut res = reqwest::get(\"http://localhost:8000/hello.zip\").unwrap();\n\n    let mut buf: Vec&lt;u8&gt; = Vec::new();\n    let _ = res.read_to_end(&amp;mut buf);\n\n    let reader = std::io::Cursor::new(buf);\n    let mut zip = zip::ZipArchive::new(reader).unwrap();\n\n    let mut file_zip = zip.by_name(\"hello.txt\").unwrap();\n    let mut file_buf: Vec&lt;u8&gt; = Vec::new();\n    let _ = file_zip.read_to_end(&amp;mut file_buf);\n\n    let content = String::from_utf8(file_buf).unwrap();\n\n    println!(\"{}\", content);\n}\n</code></pre>\n\n<p>This will output <code>hello world</code></p>\n"}, {"tags": [], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "is_accepted": false, "score": 5, "last_activity_date": 1527008784, "last_edit_date": 1527008784, "creation_date": 1527004640, "answer_id": 50471953, "question_id": 50471218, "link": "https://stackoverflow.com/questions/50471218/how-to-unzip-a-reqwest-hyper-response-using-streams/50471953#50471953", "title": "How to unzip a Reqwest/Hyper response using streams?", "body": "<p>With <a href=\"https://crates.io/crates/reqwest\" rel=\"nofollow noreferrer\"><code>reqwest</code></a> you can get the <code>.zip</code> file:</p>\n\n<pre><code>reqwest::get(\"myfile.zip\")\n</code></pre>\n\n<p>Since <code>reqwest</code> can only be used for retrieving the file, <a href=\"http://mvdnes.github.io/rust-docs/zip-rs/zip/read/struct.ZipArchive.html\" rel=\"nofollow noreferrer\"><code>ZipArchive</code></a> from the <a href=\"https://crates.io/crates/zip\" rel=\"nofollow noreferrer\"><code>zip</code></a> crate can be used for unpacking it. It's not possible to stream the <code>.zip</code> file into <code>ZipArchive</code>, since <a href=\"http://mvdnes.github.io/rust-docs/zip-rs/zip/read/struct.ZipArchive.html#method.new\" rel=\"nofollow noreferrer\"><code>ZipArchive::new(reader: R)</code></a> requires <code>R</code> to implement <a href=\"https://doc.rust-lang.org/std/io/trait.Read.html\" rel=\"nofollow noreferrer\"><code>Read</code></a> (which is fulfilled by the <a href=\"https://docs.rs/reqwest/0.8.5/reqwest/struct.Response.html\" rel=\"nofollow noreferrer\"><code>Response</code></a> of <code>reqwest</code>) and <a href=\"https://doc.rust-lang.org/std/io/trait.Seek.html\" rel=\"nofollow noreferrer\"><code>Seek</code></a>, which is not implemented by <code>Response</code>. </p>\n\n<p>As a workaround you may use a temporary file: </p>\n\n<pre><code>copy_to(&amp;mut tmpfile)\n</code></pre>\n\n<p>As <a href=\"https://doc.rust-lang.org/std/fs/struct.File.html\" rel=\"nofollow noreferrer\"><code>File</code></a> implements both <code>Seek</code> and <code>Read</code>, <a href=\"https://crates.io/crates/zip\" rel=\"nofollow noreferrer\"><code>zip</code></a> can be used here:</p>\n\n<pre><code>zip::ZipArchive::new(tmpfile)\n</code></pre>\n\n<p>This is a working example of the described method:</p>\n\n<pre><code>extern crate reqwest;\nextern crate tempfile;\nextern crate zip;\n\nuse std::io::Read;\n\nfn main() {\n    let mut tmpfile = tempfile::tempfile().unwrap();\n    reqwest::get(\"myfile.zip\").unwrap().copy_to(&amp;mut tmpfile);\n    let mut zip = zip::ZipArchive::new(tmpfile).unwrap();\n    println!(\"{:#?}\", zip);\n}\n</code></pre>\n\n<p><a href=\"https://crates.io/crates/tempfile\" rel=\"nofollow noreferrer\"><code>tempfile</code></a> is a handy crate, which lets you create a temporary file, so you don't have to think of a name.</p>\n"}], "owner": {"reputation": 1499, "user_id": 2491452, "user_type": "registered", "accept_rate": 27, "profile_image": "https://www.gravatar.com/avatar/a3546ced2b00cdbadfcc0d4c3b4ef4c5?s=128&d=identicon&r=PG", "display_name": "brielov", "link": "https://stackoverflow.com/users/2491452/brielov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1723, "favorite_count": 0, "answer_count": 2, "score": 4, "last_activity_date": 1527011877, "creation_date": 1527002347, "last_edit_date": 1527011877, "question_id": 50471218, "link": "https://stackoverflow.com/questions/50471218/how-to-unzip-a-reqwest-hyper-response-using-streams", "title": "How to unzip a Reqwest/Hyper response using streams?", "body": "<p>I need to download a 60MB ZIP file and extract the only file that comes within it. I want to download it and extract it using streams. How can I achieve this using Rust?</p>\n\n<pre><code>fn main () {\n    let mut res = reqwest::get(\"myfile.zip\").unwrap();\n    // extract the response body to myfile.txt\n}\n</code></pre>\n\n<p>In Node.js I would do something like this:</p>\n\n<pre><code>http.get('myfile.zip', response =&gt; {\n  response.pipe(unzip.Parse())\n  .on('entry', entry =&gt; {\n    if (entry.path.endsWith('.txt')) {\n      entry.pipe(fs.createWriteStream('myfile.txt'))\n    }\n  })\n})\n</code></pre>\n"}, {"tags": ["rust", "libc"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1526995182, "post_id": 50468294, "comment_id": 87950645, "body": "The duplicate&#39;s answer applied to this problem: <code>let mut statfs_result: libc::statfs = ::std::mem::zeroed();</code>"}], "owner": {"reputation": 115, "user_id": 2802364, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5cd00ff4ba1ec006c87b435062ba5a19?s=128&d=identicon&r=PG&f=1", "display_name": "thanasis2028", "link": "https://stackoverflow.com/users/2802364/thanasis2028"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 35, "favorite_count": 0, "closed_date": 1526995728, "answer_count": 0, "score": 1, "last_activity_date": 1526993854, "creation_date": 1526993768, "last_edit_date": 1526993854, "question_id": 50468294, "link": "https://stackoverflow.com/questions/50468294/instantiating-a-struct-that-has-private-fields", "closed_reason": "Duplicate", "title": "Instantiating a struct that has private fields", "body": "<p>I am trying to use the c-like <code>statfs</code> method from the <code>nix</code> crate, which is declared like: </p>\n\n<p><code>pub fn statfs&lt;P: ?Sized + NixPath&gt;(path: &amp;P, stat: &amp;mut statfs) -&gt; Result&lt;()&gt;</code></p>\n\n<p>So, I understand that I have to create a <a href=\"https://docs.rs/libc/0.2.36/libc/struct.statfs.html\" rel=\"nofollow noreferrer\">libc::statfs</a> struct and then pass a mutable pointer to it, so that statfs fills it with the correct values, something like:</p>\n\n<pre><code>let mut statfs_result = libc::statfs::default();\nstatfs::statfs(\"/\", &amp;mut statfs_result);\n</code></pre>\n\n<p>However, statfs has no <code>new</code> or <code>default</code> methods, so I can't create it this way. Also it has some private fields, so the following fails to compile as well, since f_spare and __val are private:</p>\n\n<pre><code>let mut statfs_result = libc::statfs {\n    f_type: 0,\n    f_bsize: 0,\n    f_blocks: 0,\n    f_bfree: 0,\n    f_bavail: 0,\n    f_files: 0,\n    f_ffree: 0,\n    f_fsid: libc::fsid_t {__val: [0, 0]},\n    f_namelen: 0,\n    f_frsize: 0,\n    f_spare: [0, 0, 0, 0, 0]\n};\nstatfs::statfs(\"/\", &amp;mut statfs_result);\n</code></pre>\n\n<p>Is there a way to instantiate the struct and call the method, or is this problematic design with the library, making the method unusable?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1527002578, "post_id": 50467621, "comment_id": 87956035, "body": "The first two sentences of the README for the exercises are (emphasis mine): <i>Small exercises to get you used to reading and writing Rust code. <b>Includes practice reading and responding to compiler messages!</i></b>"}], "answers": [{"comments": [{"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "reply_to_user": {"reputation": 177, "user_id": 8416338, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/f237316dfac68f79da895e6b5693af3f?s=128&d=identicon&r=PG&f=1", "display_name": "Sikai Yao", "link": "https://stackoverflow.com/users/8416338/sikai-yao"}, "edited": false, "score": 2, "creation_date": 1527031589, "post_id": 50467861, "comment_id": 87969097, "body": "@SikaiYao Please don&#39;t add &quot;thanks&quot; as comments. <a href=\"https://stackoverflow.com/help/privileges/vote-up\">Upvoting</a> and accepting answers is the Stack Overflow way of saying thank you. See <a href=\"https://stackoverflow.com/help/someone-answers\">What should I do when someone answers my question?</a>"}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 7, "last_activity_date": 1526992486, "creation_date": 1526992486, "answer_id": 50467861, "question_id": 50467621, "link": "https://stackoverflow.com/questions/50467621/how-do-i-solve-the-rustlings-exercise-move-semantics3-rs/50467861#50467861", "title": "How do I solve the Rustlings exercise &quot;move_semantics3.rs&quot;?", "body": "<p>If you copy/paste the code into the playground, the compiler complains:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0596]: cannot borrow immutable argument `vec` as mutable\n  --&gt; src/main.rs:20:5\n   |\n19 | fn fill_vec(vec: Vec&lt;i32&gt;) -&gt; Vec&lt;i32&gt; {\n   |             --- consider changing this to `mut vec`\n20 |     vec.push(22);\n   |     ^^^ cannot borrow mutably\n</code></pre>\n\n<p>The compiler says everything: you must replace <code>vec</code> with <code>mut vec</code> because by default in Rust variable are not mutable.</p>\n"}], "owner": {"reputation": 177, "user_id": 8416338, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/f237316dfac68f79da895e6b5693af3f?s=128&d=identicon&r=PG&f=1", "display_name": "Sikai Yao", "link": "https://stackoverflow.com/users/8416338/sikai-yao"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1066, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1527002518, "creation_date": 1526991885, "last_edit_date": 1527002518, "question_id": 50467621, "link": "https://stackoverflow.com/questions/50467621/how-do-i-solve-the-rustlings-exercise-move-semantics3-rs", "title": "How do I solve the Rustlings exercise &quot;move_semantics3.rs&quot;?", "body": "<p>I am doing the <a href=\"https://github.com/rustlings/rustlings\" rel=\"nofollow noreferrer\">Rustlings exercises</a> and there is an exercise \"move_semantics3.rs\":</p>\n\n<pre><code>// move_semantics3.rs\n// Make me compile without adding new lines-- just changing existing lines!\n// (no lines with multiple semicolons necessary!)\n// Scroll down for hints :)\n\npub fn main() {\n    let vec0 = Vec::new();\n\n    let mut vec1 = fill_vec(vec0);\n\n    println!(\"{} has length {} content `{:?}`\", \"vec1\", vec1.len(), vec1);\n\n    vec1.push(88);\n\n    println!(\"{} has length {} content `{:?}`\", \"vec1\", vec1.len(), vec1);\n\n}\n\nfn fill_vec(vec: Vec&lt;i32&gt;) -&gt; Vec&lt;i32&gt; {\n    vec.push(22);\n    vec.push(44);\n    vec.push(66);\n\n    vec\n}\n</code></pre>\n\n<p>The hint says: </p>\n\n<blockquote>\n  <p>The difference between this one and the previous ones is that the\n  first line of <code>fn fill_vec</code> that had <code>let mut vec = vec;</code> is no longer\n  there. You can, instead of adding that line back, add <code>mut</code> in one\n  place that will change an existing binding to be a mutable binding\n  instead of an immutable one :)</p>\n</blockquote>\n\n<p>I have no idea how to correct this code by adding only one <code>mut</code>.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1526981374, "post_id": 50464159, "comment_id": 87941604, "body": "<i>e.g. takes the first letter</i> \u2014 that&#39;s not how Unicode works. See <a href=\"https://stackoverflow.com/q/38406793/155423\">Why is capitalizing the first letter of a string so convoluted in Rust?</a> for a discussion of how this is the wrong view to have."}, {"owner": {"reputation": 8137, "user_id": 2559709, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/RHGiu.jpg?s=128&g=1", "display_name": "Alex Zhukovskiy", "link": "https://stackoverflow.com/users/2559709/alex-zhukovskiy"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1526982651, "post_id": 50464159, "comment_id": 87942489, "body": "@Shepmaster okay, takes first byte and don&#39;t care what is it. Thank you for pointing that out, but it&#39;s just a badly written example."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1526982266, "last_edit_date": 1526982266, "creation_date": 1526981893, "answer_id": 50464431, "question_id": 50464159, "link": "https://stackoverflow.com/questions/50464159/how-can-i-implement-a-method-to-work-with-str-boxstr-rcstr-etc/50464431#50464431", "title": "How can I implement a method to work with &amp;str, Box&lt;str&gt;, Rc&lt;str&gt;, etc.?", "body": "<p>Regardless of what type you start with, the end type of slicing a <code>&amp;str</code> is always a <code>&amp;str</code> so your return type needs to be a <code>&amp;str</code>.</p>\n\n<p>Then it's a matter of implementing the trait for references to a type so that you can tie the input and output lifetimes together:</p>\n\n<pre><code>use std::rc::Rc;\n\ntrait Tr&lt;'a&gt; {\n    fn trim_indent(self) -&gt; &amp;'a str;\n}\n\nimpl&lt;'a, T&gt; Tr&lt;'a&gt; for &amp;'a T\nwhere\n    T: AsRef&lt;str&gt; + 'a,\n{\n    fn trim_indent(self) -&gt; &amp;'a str {\n        &amp;self.as_ref()[..1] // Take the first **byte**\n    }\n}\n\nfn main() {\n    let s: &amp;str = \"aaa\";\n    println!(\"{}\", s.trim_indent());\n\n    let s: Box&lt;str&gt; = Box::from(\"bbb\");\n    println!(\"{}\", s.trim_indent());\n\n    let s: Rc&lt;str&gt; = Rc::from(\"ccc\");\n    println!(\"{}\", s.trim_indent());\n}\n</code></pre>\n\n<p>In this case, since all the types you've listed implement <a href=\"https://doc.rust-lang.org/std/ops/trait.Deref.html\" rel=\"nofollow noreferrer\"><code>Deref</code></a> anyway, you can just implement the trait for <code>&amp;str</code> and all of the types can use it:</p>\n\n<pre><code>trait Tr {\n    fn trim_indent(&amp;self) -&gt; &amp;str;\n}\n\nimpl Tr for str {\n    fn trim_indent(&amp;self) -&gt; &amp;str {\n        &amp;self[..1]\n    }\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/38406793/155423\">Why is capitalizing the first letter of a string so convoluted in Rust?</a></li>\n</ul>\n"}], "owner": {"reputation": 8137, "user_id": 2559709, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/RHGiu.jpg?s=128&g=1", "display_name": "Alex Zhukovskiy", "link": "https://stackoverflow.com/users/2559709/alex-zhukovskiy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 440, "favorite_count": 0, "accepted_answer_id": 50464431, "answer_count": 1, "score": 1, "last_activity_date": 1526982266, "creation_date": 1526981137, "last_edit_date": 1526981307, "question_id": 50464159, "link": "https://stackoverflow.com/questions/50464159/how-can-i-implement-a-method-to-work-with-str-boxstr-rcstr-etc", "title": "How can I implement a method to work with &amp;str, Box&lt;str&gt;, Rc&lt;str&gt;, etc.?", "body": "<p>I have code that transforms a string reference in some way, e.g. takes the first letter</p>\n\n<pre><code>trait Tr {\n    fn trim_indent(self) -&gt; Self;\n}\n\nimpl&lt;'a&gt; Tr for &amp;'a str {\n    fn trim_indent(self) -&gt; Self {\n        &amp;self[..1] // some transformation here\n    }\n}\n\nfn main() {\n    let s = \"aaa\".trim_indent();\n    println!(\"{}\", s);\n}\n</code></pre>\n\n<p>Now I'm trying to generalize this code for any particular type that implements <code>AsRef&lt;str&gt;</code>. My final try was</p>\n\n<pre><code>use std::ops::Deref;\n\ntrait Tr&lt;'a&gt; {\n    fn trim_indent(self) -&gt; Deref&lt;Target = str&gt; + 'a + Sized;\n}\n\nimpl&lt;'a, T: AsRef&lt;str&gt;&gt; Tr&lt;'a&gt; for T {\n    fn trim_indent(self) -&gt; Deref&lt;Target = str&gt; + 'a + Sized {\n        self.as_ref()[..1] // some transformation here\n    }\n}\n\nfn main() {\n    let s = \"aaa\".trim_indent();\n    println!(\"{}\", s);\n}\n</code></pre>\n\n<p>I'm stuck because without <code>Sized</code> I get an error that type is unknown at compile time, but with <code>Size</code> I get an error that I cannot use marker trait explicitly. </p>\n"}, {"tags": ["csv", "struct", "callback", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1526980757, "post_id": 50462046, "comment_id": 87941180, "body": "What does the first error you&#39;ve pasted have to do with your question?"}, {"owner": {"reputation": 5940, "user_id": 4605629, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/741edb45b2f1d3e3c3d9555085004ad1?s=128&d=identicon&r=PG&f=1", "display_name": "Greg", "link": "https://stackoverflow.com/users/4605629/greg"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1526983655, "post_id": 50462046, "comment_id": 87943181, "body": "@Shepmaster It has nothing to do with my question. I included it in for completeness as I didn&#39;t know how to fix it... Thank you for answering the question, solution 2 is appropriate as the callback function is implemented by a third party library and I do not control what it passes as arguments. I have to read up on lifetimes again and the where clause. Thank you"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1526981033, "last_edit_date": 1526981033, "creation_date": 1526980229, "answer_id": 50463891, "question_id": 50462046, "link": "https://stackoverflow.com/questions/50462046/how-to-use-an-external-object-in-a-struct-callback-such-as-when-appending-data-t/50463891#50463891", "title": "How to use an external object in a struct callback such as when appending data to a CSV?", "body": "<p>I <strong>strongly</strong> encourage you to go back and re-read <a href=\"https://doc.rust-lang.org/book/second-edition/\" rel=\"nofollow noreferrer\"><em>The Rust Programming Language</em></a>, specifically the chapter about <a href=\"https://doc.rust-lang.org/book/second-edition/ch03-03-how-functions-work.html\" rel=\"nofollow noreferrer\">functions</a>. This code appears to show fundamental issues around the entire model of how functions work.</p>\n\n<p>For example, the code attempts to make use of the variable <code>wtr</code> in the function <code>callback</code> without it being passed in either directly or indirectly.</p>\n\n<p>If such code worked<sup>1</sup>, programmers would likely hate dealing with this language because it would be almost impossible to tell <em>what</em> and <em>where</em> the value <code>wtr</code> even came from.</p>\n\n<p>The solution is straightforward: pass any value that a piece of code needs to that code. Then it's easy (or easier) to tell where the value came from. There are multiple avenues that can work.</p>\n\n<ol>\n<li><p>Pass an argument to the <code>callback</code> method:</p>\n\n<pre><code>use std::io::Write;\n\nimpl Process {\n    fn start&lt;R&gt;(&amp;self, wtr: &amp;mut csv::Writer&lt;R&gt;)\n    where\n        R: Write,\n    {\n        loop {\n            // ...\n            self.callback(wtr, event);\n        }\n    }\n\n    fn callback&lt;R&gt;(&amp;self, wtr: &amp;mut csv::Writer&lt;R&gt;, event: Event)\n    where\n        R: Write,\n    {\n        // ...\n    }\n}\n\nfn main() {\n    // ...\n    process.start(&amp;mut wtr);\n}\n</code></pre></li>\n<li><p>Pass an argument to the constructor and save it inside the struct:</p>\n\n<pre><code>use std::io::Write;\n\nstruct Process&lt;'a, R&gt;\nwhere\n    R: Write + 'a,\n{\n    wtr: &amp;'a mut csv::Writer&lt;R&gt;,\n}\n\nimpl&lt;'a, R&gt; Process&lt;'a, R&gt;\nwhere\n    R: Write,\n{\n    fn new(wtr: &amp;'a mut csv::Writer&lt;R&gt;) -&gt; Self {\n        Process { wtr }\n    }\n\n    // ...\n\n    fn callback(&amp;self, event: Event) {\n        // ...\n        self.wtr.write_record(event).unwrap();\n        self.wtr.flush().unwrap();\n    }\n}\n\nfn main() {\n    // ...\n    let process = Process::new(&amp;mut wtr);\n}\n</code></pre></li>\n</ol>\n\n<p>The code has other issues in how it uses the CSV library that I'm ignoring because they are unrelated to your question. I encourage you to start with a simpler piece of code, get it working, then make it more complex. That way you are only dealing with simpler errors at first.</p>\n\n<p>Once you understand this basic usage of functions, you may wish to learn about <a href=\"https://doc.rust-lang.org/book/second-edition/ch13-01-closures.html\" rel=\"nofollow noreferrer\"><em>closures</em></a>. These allow you to \"capture\" variables from an outer scope and pass them in (in the same two methods as above) without having to deal with the specific count or type of variables.</p>\n\n<blockquote>\n  <p>objects created outside of the scope are available inside the scope </p>\n</blockquote>\n\n<p>This is true for a single function. It does not apply across functions.</p>\n\n<blockquote>\n  <p>hence things such as shadowing allowed</p>\n</blockquote>\n\n<p>Shadowing has nothing to to with scopes. You are allowed to shadow inside the same scope:</p>\n\n<pre><code>let a = Some(32);\nlet a = a.unwrap();\n</code></pre>\n\n<hr>\n\n<p><strong>1</strong>.  Such languages exist; they are languages with <a href=\"https://en.wikipedia.org/wiki/Scope_(computer_science)#Dynamic_scoping\" rel=\"nofollow noreferrer\">dynamic scope</a> and some people prefer them. They are in the minority, programs written in these languages are hard to reason about!</p>\n"}], "owner": {"reputation": 5940, "user_id": 4605629, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/741edb45b2f1d3e3c3d9555085004ad1?s=128&d=identicon&r=PG&f=1", "display_name": "Greg", "link": "https://stackoverflow.com/users/4605629/greg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 140, "favorite_count": 0, "accepted_answer_id": 50463891, "answer_count": 1, "score": -1, "last_activity_date": 1526981033, "creation_date": 1526973930, "last_edit_date": 1526978700, "question_id": 50462046, "link": "https://stackoverflow.com/questions/50462046/how-to-use-an-external-object-in-a-struct-callback-such-as-when-appending-data-t", "title": "How to use an external object in a struct callback such as when appending data to a CSV?", "body": "<p>My understanding was that objects created outside of the scope are available inside the scope (hence things such as shadowing allowed), but it does not seem to work in this scenario:</p>\n\n<pre><code>extern crate csv;\nextern crate rand;\n\nuse rand::Rng;\nuse std::path::Path;\nuse std::time::SystemTime;\n\n#[derive(Debug)]\nstruct Event {\n    time: SystemTime,\n    value: u32,\n}\n\nimpl Event {\n    fn new(t: SystemTime, n: u32) -&gt; Event {\n        Event {\n            time: SystemTime,\n            value: n,\n        }\n    }\n}\n\nstruct Process;\n\nimpl Process {\n    fn new() -&gt; Process {\n        Process {}\n    }\n\n    fn start(&amp;self) {\n        loop {\n            let now = SystemTime::now();\n            let random_number: u32 = rand::thread_rng().gen();\n            let event = Event::new(now, random_number);\n            self.callback(event);\n        }\n    }\n\n    fn callback(&amp;self, event: Event) {\n        println!(\"{:?}\", event);\n        wtr.write_record(&amp;event).unwrap();\n        wtr.flush().unwrap();\n    }\n}\n\nfn main() {\n    let file_path = Path::new(\"test.csv\");\n    let mut wtr = csv::Writer::from_path(file_path).unwrap();\n\n    let process: Process = Process::new();\n    process.start();\n}\n</code></pre>\n\n<p>The errors are:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0423]: expected value, found struct `SystemTime`\n  --&gt; src/main.rs:17:19\n   |\n17 |             time: SystemTime,\n   |                   ^^^^^^^^^^ constructor is not visible here due to private fields\n\nerror[E0425]: cannot find value `wtr` in this scope\n  --&gt; src/main.rs:41:9\n   |\n41 |         wtr.write_record(&amp;event).unwrap();\n   |         ^^^ not found in this scope\n\nerror[E0425]: cannot find value `wtr` in this scope\n  --&gt; src/main.rs:42:9\n   |\n42 |         wtr.flush().unwrap();\n   |         ^^^ not found in this scope\n</code></pre>\n\n<p>How can I append data (<code>Event</code>) to a CSV file from inside the callback function for <code>Process</code>?</p>\n"}, {"tags": ["rust", "segmentation-fault"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1526956438, "post_id": 50458782, "comment_id": 87931241, "body": "&quot;If the error is in the external libraries, RUST_BACKTRACE will do the job or not?&quot;, I don&#39;t think, rust will show you the backtrace when it&#39;s panic, but a segfault will stop your program. try <code>vagrind .&#47;target&#47;debug&#47;grin-miner</code>"}], "answers": [{"comments": [{"owner": {"reputation": 1389, "user_id": 3831478, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/jhJdG.jpg?s=128&g=1", "display_name": "gary", "link": "https://stackoverflow.com/users/3831478/gary"}, "edited": false, "score": 0, "creation_date": 1526957319, "post_id": 50458990, "comment_id": 87931432, "body": "Thanks Shepmaster. I switch to lldb and get the backtraces.  <code>$ rust-lldb .&#47;target&#47;debug&#47;grin-miner</code> and then when <code>Segmentation fault</code> happen, input <code>thread backtrace</code>"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1526956681, "creation_date": 1526956681, "answer_id": 50458990, "question_id": 50458782, "link": "https://stackoverflow.com/questions/50458782/why-do-i-not-get-a-backtrace-when-my-program-has-a-segmentation-fault-even-thoug/50458990#50458990", "title": "Why do I not get a backtrace when my program has a segmentation fault even though RUST_BACKTRACE=1 is set?", "body": "<p><code>RUST_BACKTRACE</code> only prints out a backtrace for Rust-generated panics. A segfault is a lower-level failure than a panic. You will need to use a debugger (GDB, LLDB, WinDbg, etc.) to investigate the failure. </p>\n"}], "owner": {"reputation": 1389, "user_id": 3831478, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/jhJdG.jpg?s=128&g=1", "display_name": "gary", "link": "https://stackoverflow.com/users/3831478/gary"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1088, "favorite_count": 0, "accepted_answer_id": 50458990, "answer_count": 1, "score": 4, "last_activity_date": 1526956765, "creation_date": 1526954723, "last_edit_date": 1526956765, "question_id": 50458782, "link": "https://stackoverflow.com/questions/50458782/why-do-i-not-get-a-backtrace-when-my-program-has-a-segmentation-fault-even-thoug", "title": "Why do I not get a backtrace when my program has a segmentation fault even though RUST_BACKTRACE=1 is set?", "body": "<p>I want to see the backtrace of a random segmentation fault, so I set the <code>RUST_BACKTRACE=1</code> environment variable. Normally it prints the backtrace info, but this time it doesn't. Why doesn't <code>RUST_BACKTRACE</code> work?</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ RUST_BACKTRACE=1 ./target/debug/grin-miner\n...\nSegmentation fault: 11\n</code></pre>\n\n<p>I have tried multiple times and always get no backtraces. If the error is in external libraries, will <code>RUST_BACKTRACE</code> do the job or not?</p>\n"}, {"tags": ["rust", "formatting", "string-formatting", "number-formatting"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 61, "last_activity_date": 1559897415, "last_edit_date": 1559897415, "creation_date": 1526949372, "answer_id": 50458236, "question_id": 50458144, "link": "https://stackoverflow.com/questions/50458144/what-is-the-easiest-way-to-pad-a-string-with-0-to-the-left/50458236#50458236", "title": "What is the easiest way to pad a string with 0 to the left?", "body": "<p>The <a href=\"https://doc.rust-lang.org/std/fmt/\" rel=\"noreferrer\"><code>fmt</code> module documentation</a> describes all the formatting options:</p>\n\n<blockquote>\n  <h2><a href=\"https://doc.rust-lang.org/std/fmt/#fillalignment\" rel=\"noreferrer\">Fill / Alignment</a></h2>\n  \n  <p>The fill character is provided normally in conjunction with the\n  <code>width</code> parameter. This indicates that if the value being formatted is\n  smaller than <code>width</code> some extra characters will be printed around it.\n  The extra characters are specified by <code>fill</code>, and the alignment can be\n  one of the following options:</p>\n  \n  <ul>\n  <li><code>&lt;</code> - the argument is left-aligned in <code>width</code> columns</li>\n  <li><code>^</code> - the argument is center-aligned in <code>width</code> columns</li>\n  <li><code>&gt;</code> - the argument is right-aligned in <code>width</code> columns</li>\n  </ul>\n</blockquote>\n\n<hr>\n\n<pre><code>assert_eq!(\"00000110\", format!(\"{:0&gt;8}\", \"110\"));\n//                                |||\n//                                ||+-- width\n//                                |+--- align\n//                                +---- fill\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/41820818/155423\">How can I 0-pad a number by a variable amount when formatting with std::fmt?</a></li>\n<li><a href=\"https://stackoverflow.com/q/44690439/155423\">How do I print an integer in binary with leading zeros?</a></li>\n<li><a href=\"https://stackoverflow.com/q/48972370/155423\">Hexadecimal formating with padded zeroes</a></li>\n<li><a href=\"https://stackoverflow.com/q/26285550/155423\">Convert binary string to hex string with leading zeroes in Rust</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 11, "last_activity_date": 1526949517, "creation_date": 1526949517, "answer_id": 50458253, "question_id": 50458144, "link": "https://stackoverflow.com/questions/50458144/what-is-the-easiest-way-to-pad-a-string-with-0-to-the-left/50458253#50458253", "title": "What is the easiest way to pad a string with 0 to the left?", "body": "<p>As an alternative to Shepmaster's answer, if you are actually starting with a number rather than a string, and you want to display it as binary, the way to format that is:</p>\n\n<pre><code>let n: u32 = 0b11110000;\n// 0 indicates pad with zeros\n// 8 is the target width\n// b indicates to format as binary\nlet formatted = format!(\"{:08b}\", n);\n</code></pre>\n"}], "owner": {"reputation": 383, "user_id": 9746592, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d18827b5232f5f271d7c5d72cfb9f839?s=128&d=identicon&r=PG&f=1", "display_name": "SeaEyeHay", "link": "https://stackoverflow.com/users/9746592/seaeyehay"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 11455, "favorite_count": 6, "accepted_answer_id": 50458236, "answer_count": 2, "score": 30, "last_activity_date": 1559897415, "creation_date": 1526948491, "last_edit_date": 1549368018, "question_id": 50458144, "link": "https://stackoverflow.com/questions/50458144/what-is-the-easiest-way-to-pad-a-string-with-0-to-the-left", "title": "What is the easiest way to pad a string with 0 to the left?", "body": "<p>What is the easiest way to pad a string with 0 to the left so that</p>\n\n<ul>\n<li><p>\"110\" = \"00000110\"</p></li>\n<li><p>\"11110000\" = \"11110000\"</p></li>\n</ul>\n\n<p>I have tried to use the <code>format!</code> macro but it only pads to the right with space:</p>\n\n<pre><code>format!(\"{:08}\", string);\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1527509467, "post_id": 50474927, "comment_id": 88142315, "body": "Very interesting, I wasn&#39;t aware of the behavior of default associated types with provided methods. I found <a href=\"https://play.rust-lang.org/?gist=c61fe3fe296a98699e989c37e5b287e5&amp;version=nightly&amp;mode=debug\" rel=\"nofollow noreferrer\">another way to enforce the type restriction</a>, I think. But yeah, unstable and a bit hacky. Maybe I just won&#39;t do it like that ;-)"}], "tags": [], "owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "is_accepted": true, "score": 2, "last_activity_date": 1527016344, "last_edit_date": 1592644375, "creation_date": 1527016344, "answer_id": 50474927, "question_id": 50456527, "link": "https://stackoverflow.com/questions/50456527/alias-for-associated-type-of-supertrait/50474927#50474927", "title": "Alias for associated type of supertrait", "body": "<p>The <a href=\"https://github.com/aturon/rfcs/blob/associated-items/active/0000-associated-items.md\" rel=\"nofollow noreferrer\">associated item RFC</a> states:</p>\n<blockquote>\n<p>Type parameters to traits can either be &quot;inputs&quot; or &quot;outputs&quot;:</p>\n<ul>\n<li><p>Inputs. An &quot;input&quot; type parameter is used to determine which impl to use.</p>\n</li>\n<li><p>Outputs. An &quot;output&quot; type parameter is uniquely determined by the impl, but plays no role in   selecting the impl.</p>\n</li>\n</ul>\n</blockquote>\n<p>The RFC also clarifies trait matching by:</p>\n<blockquote>\n<ul>\n<li>Treating all trait type parameters as input types, and</li>\n<li>Providing associated types, which are output types.</li>\n</ul>\n</blockquote>\n<p>From these descriptions it is clear that an associated type is by design in control by the <code>impl</code>, so it is not possible to block implementors from overwriting the type.</p>\n<p>A workaround for obtaining some form of control over the implementor may be to define a default method that uses the associated type, for example:</p>\n<pre><code>pub trait Map: Index&lt;&lt;Self as Map&gt;::Key&gt; {\n    type Key;\n    type Value = &lt;Self as Index&lt;&lt;Self as Map&gt;::Key&gt;&gt;::Output;\n\n    #[doc(hidden)]\n    fn invalid_operation() -&gt; Option&lt;&amp;'static &lt;Self as Index&lt;&lt;Self as Map&gt;::Key&gt;&gt;::Output&gt; {\n        None\n    }\n}\n</code></pre>\n<p>Now for the implementors is not more possible to simply override the default <code>Value</code> type because the default method <code>invalid_operation</code> no longer typecheck.</p>\n<p>Note also the <code>doc(hidden)</code> feature that strips the default method from the docs.</p>\n<p>The hidden method name may be chosen to convey some information.\nFor the above example, the implementor get the error message:</p>\n<pre><code> error[E0399]: the following trait items need to be reimplemented as `Value` was overridden: `invalid_operation`\n</code></pre>\n<p>As you already know, assigning default associated types is not permitted in current stable Rust, a nightly version must be used and the feature has to be enabled with:</p>\n<pre><code>#![feature(associated_type_defaults)]\n</code></pre>\n"}], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 485, "favorite_count": 1, "accepted_answer_id": 50474927, "answer_count": 1, "score": 2, "last_activity_date": 1527509347, "creation_date": 1526936224, "last_edit_date": 1527509347, "question_id": 50456527, "link": "https://stackoverflow.com/questions/50456527/alias-for-associated-type-of-supertrait", "title": "Alias for associated type of supertrait", "body": "<p>I have the following trait:</p>\n\n<pre><code>use std::ops::Index;\n\ntrait Map: Index&lt;&lt;Self as Map&gt;::Key&gt; {\n    type Key;\n}\n</code></pre>\n\n<p><code>Index</code> has the associated type <code>Output</code>. I semantically want this type, but I don't like the name <code>Output</code> in my API. Thus I would like to add an alias for that type. </p>\n\n<p>I tried this (the same syntax for normal type aliases):</p>\n\n<pre><code>trait Map: Index&lt;&lt;Self as Map&gt;::Key&gt; {\n    type Key;\n    type Value = &lt;Self as Index&lt;Self::Key&gt;&gt;::Output;\n}\n</code></pre>\n\n<p>However, this results in an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0658]: associated type defaults are unstable (see issue #29661)\n --&gt; src/main.rs:9:9\n  |\n9 |         type Value = &lt;Self as Index&gt;::Output;\n  |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>From <a href=\"https://github.com/rust-lang/rust/issues/29661\" rel=\"nofollow noreferrer\">the tracking issue</a> I could gather that this syntax is apparently used for associated types that can be overwritten by implementors. But I don't want implementors to overwrite this type, I always want <code>Map::Value == Map::Output</code>.</p>\n\n<p>Is this possible somehow?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1526925117, "post_id": 50454094, "comment_id": 87921589, "body": "Why would you create a minimal example that <i>does</i> work, but not one that <i>doesn&#39;t</i>?"}, {"owner": {"reputation": 1176, "user_id": 1371191, "user_type": "registered", "accept_rate": 71, "profile_image": "https://lh4.googleusercontent.com/-7bV-CLvBrNE/AAAAAAAAAAI/AAAAAAAAAE8/i44ypczz624/photo.jpg?sz=128", "display_name": "Mike Lui", "link": "https://stackoverflow.com/users/1371191/mike-lui"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1526925310, "post_id": 50454094, "comment_id": 87921697, "body": "That is exactly my confusion. I originally created that minimal example expecting it <b>not</b> to work, and was surprised when it did, since I am still hazy on Rust references. The original question was going to be why would I need <code>mut t: &amp;mut Trait</code> since that seemed strange to me, but then realized that I <b>didn&#39;t</b> need to make the parameter mutable. So now I&#39;m confused as to whether my minimal example isn&#39;t doing what I think it&#39;s doing, or whether there&#39;s some caveat for the specific API function I&#39;m using. To me, <code>read_message</code> and <code>foo</code> look to be passed the same type."}], "answers": [{"comments": [{"owner": {"reputation": 1176, "user_id": 1371191, "user_type": "registered", "accept_rate": 71, "profile_image": "https://lh4.googleusercontent.com/-7bV-CLvBrNE/AAAAAAAAAAI/AAAAAAAAAE8/i44ypczz624/photo.jpg?sz=128", "display_name": "Mike Lui", "link": "https://stackoverflow.com/users/1371191/mike-lui"}, "edited": false, "score": 1, "creation_date": 1526926667, "post_id": 50454326, "comment_id": 87922277, "body": "<i>These two signatures are different:</i> Aaaah, that was precisely my confusion. I assumed they were analogous and had difficulty narrowing down my misconceptions. Thank you."}, {"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "reply_to_user": {"reputation": 1176, "user_id": 1371191, "user_type": "registered", "accept_rate": 71, "profile_image": "https://lh4.googleusercontent.com/-7bV-CLvBrNE/AAAAAAAAAAI/AAAAAAAAAE8/i44ypczz624/photo.jpg?sz=128", "display_name": "Mike Lui", "link": "https://stackoverflow.com/users/1371191/mike-lui"}, "edited": false, "score": 1, "creation_date": 1526992624, "post_id": 50454326, "comment_id": 87948840, "body": "@MikeLui: You&#39;re not the first to get confused by that distinction - <a href=\"https://rust-lang-nursery.github.io/edition-guide/2018/transitioning/traits/dyn-trait.html\" rel=\"nofollow noreferrer\">a new <code>dyn Trait</code> syntax</a> is being added in the next version of Rust to make it clearer what is and isn&#39;t a trait object. Once Rust 2018 comes out later this year, this will be recommended over the bare trait object syntax (i.e. the compiler will tell you to change <code>&amp;mut BufRead</code> to <code>&amp;mut dyn BufRead</code>)."}, {"owner": {"reputation": 1176, "user_id": 1371191, "user_type": "registered", "accept_rate": 71, "profile_image": "https://lh4.googleusercontent.com/-7bV-CLvBrNE/AAAAAAAAAAI/AAAAAAAAAE8/i44ypczz624/photo.jpg?sz=128", "display_name": "Mike Lui", "link": "https://stackoverflow.com/users/1371191/mike-lui"}, "edited": false, "score": 0, "creation_date": 1527130688, "post_id": 50454326, "comment_id": 88013166, "body": "I ended up passing a Box&lt;BufRead&gt;. I still find the fact that Box&lt;BufRead&gt; works fine and &amp;BufRead causes issues to be strange, but that may just be because my head is still in C++ world. They both look like just base pointers to me. <i>shrugs</i>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1176, "user_id": 1371191, "user_type": "registered", "accept_rate": 71, "profile_image": "https://lh4.googleusercontent.com/-7bV-CLvBrNE/AAAAAAAAAAI/AAAAAAAAAE8/i44ypczz624/photo.jpg?sz=128", "display_name": "Mike Lui", "link": "https://stackoverflow.com/users/1371191/mike-lui"}, "edited": false, "score": 0, "creation_date": 1527131845, "post_id": 50454326, "comment_id": 88013409, "body": "@MikeLui <code>Box&lt;BufRead&gt;</code> is indirection without need. Chances are that you won&#39;t ever see the performance hit, but it&#39;s the principle of the matter. <a href=\"https://play.rust-lang.org/?gist=59eeadcfb37ece36d62301545d29d73a&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">This is what I&#39;d do</a>."}, {"owner": {"reputation": 1176, "user_id": 1371191, "user_type": "registered", "accept_rate": 71, "profile_image": "https://lh4.googleusercontent.com/-7bV-CLvBrNE/AAAAAAAAAAI/AAAAAAAAAE8/i44ypczz624/photo.jpg?sz=128", "display_name": "Mike Lui", "link": "https://stackoverflow.com/users/1371191/mike-lui"}, "edited": false, "score": 0, "creation_date": 1527134612, "post_id": 50454326, "comment_id": 88014088, "body": "@Shepmaster Thank you for the example. I can see how that would be faster with static dispatch. In my case, a file can either be gzipped or raw bytes, so I don&#39;t know my <code>BufReader</code> type ahead of time (<code>File</code> or <code>GzDecoder</code>), and chose dynamic dispatch over generating two entire code paths depending on the type."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1176, "user_id": 1371191, "user_type": "registered", "accept_rate": 71, "profile_image": "https://lh4.googleusercontent.com/-7bV-CLvBrNE/AAAAAAAAAAI/AAAAAAAAAE8/i44ypczz624/photo.jpg?sz=128", "display_name": "Mike Lui", "link": "https://stackoverflow.com/users/1371191/mike-lui"}, "edited": false, "score": 0, "creation_date": 1527134832, "post_id": 50454326, "comment_id": 88014144, "body": "@MikeLui ah yes, in the dynamic case it is a reasonable choice. You may be able to <a href=\"https://stackoverflow.com/a/28220053/155423\">avoid the heap allocation if you really wanted to though</a>."}, {"owner": {"reputation": 1176, "user_id": 1371191, "user_type": "registered", "accept_rate": 71, "profile_image": "https://lh4.googleusercontent.com/-7bV-CLvBrNE/AAAAAAAAAAI/AAAAAAAAAE8/i44ypczz624/photo.jpg?sz=128", "display_name": "Mike Lui", "link": "https://stackoverflow.com/users/1371191/mike-lui"}, "edited": false, "score": 0, "creation_date": 1527181315, "post_id": 50454326, "comment_id": 88041686, "body": "@Shepmaster One last clarification to ask. I actually made a helper function to return a Box&lt;BufRead&gt; depending on the file extension. I don&#39;t think I can return a &amp;BufRead trait object because the lifetimes of the stack allocated BufReaders&lt;R&gt; would go out of scope. Do I have that right?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1176, "user_id": 1371191, "user_type": "registered", "accept_rate": 71, "profile_image": "https://lh4.googleusercontent.com/-7bV-CLvBrNE/AAAAAAAAAAI/AAAAAAAAAE8/i44ypczz624/photo.jpg?sz=128", "display_name": "Mike Lui", "link": "https://stackoverflow.com/users/1371191/mike-lui"}, "edited": false, "score": 0, "creation_date": 1527182210, "post_id": 50454326, "comment_id": 88042176, "body": "@MikeLui that&#39;s correct! If you <i>reallllly</i> wanted to avoid it, <a href=\"https://play.rust-lang.org/?gist=201cb02a1dc7d05ededbe1c942f1e071&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">you could through some closures</a>, but boxed trait objects are certainly a good tool to use for your case."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1526926087, "last_edit_date": 1526926087, "creation_date": 1526925702, "answer_id": 50454326, "question_id": 50454094, "link": "https://stackoverflow.com/questions/50454094/confused-about-forwarding-a-reference-through-multiple-functions/50454326#50454326", "title": "Confused about forwarding a reference through multiple functions", "body": "<p>Creating a <a href=\"/help/mcve\">Minimal, Complete, and Verifiable example</a> that reproduces the problem is a useful step:</p>\n\n<pre><code>use std::io::BufRead;\n\npub fn read_message&lt;R&gt;(read: &amp;mut R)\nwhere\n    R: BufRead,\n{}\n\nfn parse_capnp(read: &amp;mut BufRead) {\n    read_message(read);\n}\n\nfn main() {}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `std::io::BufRead: std::marker::Sized` is not satisfied\n --&gt; src/main.rs:9:5\n  |\n9 |     read_message(read);\n  |     ^^^^^^^^^^^^ `std::io::BufRead` does not have a constant size known at compile-time\n  |\n  = help: the trait `std::marker::Sized` is not implemented for `std::io::BufRead`\nnote: required by `read_message`\n --&gt; src/main.rs:3:1\n  |\n3 | / pub fn read_message&lt;R&gt;(read: &amp;mut R)\n4 | | where\n5 | |     R: BufRead,\n6 | | {}\n  | |__^\n</code></pre>\n\n<p>The error message is well covered in existing questions:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/42620022/155423\">Why does a generic method inside a trait require trait object to be sized?</a></li>\n<li><a href=\"https://stackoverflow.com/q/28044231/155423\">What does &quot;Sized is not implemented&quot; mean?</a></li>\n<li><a href=\"https://stackoverflow.com/q/34758233/155423\">Working with trait objects requiring sized</a></li>\n<li><a href=\"https://stackoverflow.com/q/30938499/155423\">Why is the `Sized` bound necessary in this trait?</a></li>\n</ul>\n\n<p>TL;DR: trait objects aren't guaranteed to have a size, but generics have a <code>Sized</code> trait bound by default.</p>\n\n<blockquote>\n  <p><code>read</code> is getting passed by value</p>\n</blockquote>\n\n<p>Yes, everything in Rust is <strong>always</strong> passed by value. Sometimes that value happens to be a reference though.</p>\n\n<blockquote>\n  <p><code>read_message</code> is expecting a <code>&amp;mut BufRead</code></p>\n</blockquote>\n\n<p>It is not. It is expecting a generic type that implements the trait <code>BufRead</code>. These two signatures are different:</p>\n\n<pre><code>// Reference to a concrete type\npub fn read_message&lt;R&gt;(read: &amp;mut R)\nwhere\n    R: BufRead,\n</code></pre>\n\n\n\n<pre><code>// Trait object\npub fn read_message&lt;R&gt;(read: &amp;mut BufRead)\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/45151770/155423\">What is the difference between &lt;T: Trait&gt; Box&lt;T&gt; and &amp;Trait / Box&lt;Trait&gt;?</a></li>\n<li><a href=\"https://stackoverflow.com/q/27567849/155423\">What makes something a &quot;trait object&quot;?</a></li>\n</ul>\n\n<blockquote>\n  <p>a <code>&amp;mut &amp;mut BufRead</code>, which is not the expected type</p>\n</blockquote>\n\n<p>It's a perfectly cromulent type. <code>BufRead</code> is <a href=\"https://doc.rust-lang.org/std/io/trait.BufRead.html#implementors\" rel=\"nofollow noreferrer\">implemented for</a> any mutable reference to any type that implements <code>BufRead</code> itself:</p>\n\n<pre><code>impl&lt;'a, B: BufRead + ?Sized&gt; BufRead for &amp;'a mut B\n</code></pre>\n\n<p>Besides, in this case you don't have a <code>&amp;mut &amp;mut BufRead</code>, you have a <code>&amp;mut &amp;mut R</code>. The concrete monomorphization for the types you've shown is actually a <code>&amp;mut &amp;mut Bufreader</code>.</p>\n\n<hr>\n\n<p>You can fix it by :</p>\n\n<ol>\n<li><p>changing the <code>read_message</code> function to accept unsized types. This is fine since <code>R</code> is always behind a pointer:</p>\n\n<pre><code>pub fn read_message&lt;R&gt;(read: &amp;mut R)\nwhere\n    R: ?Sized + BufRead,\n</code></pre></li>\n<li><p>changing the <code>parse_capnp</code> function to take a reference to a concrete type instead of a trait object:</p>\n\n<pre><code>fn parse_capnp&lt;R&gt;(read: &amp;mut R)\nwhere\n    R: BufRead,\n{\n    read_message(read);\n}\n</code></pre></li>\n<li><p>changing the <code>parse_capnp</code> function to take a concrete type instead of a trait object. You then need to take a reference to it yourself:</p>\n\n<pre><code>fn parse_capnp&lt;R&gt;(mut read: R)\nwhere\n    R: BufRead,\n{\n    read_message(&amp;mut read);\n}\n</code></pre></li>\n</ol>\n"}], "owner": {"reputation": 1176, "user_id": 1371191, "user_type": "registered", "accept_rate": 71, "profile_image": "https://lh4.googleusercontent.com/-7bV-CLvBrNE/AAAAAAAAAAI/AAAAAAAAAE8/i44ypczz624/photo.jpg?sz=128", "display_name": "Mike Lui", "link": "https://stackoverflow.com/users/1371191/mike-lui"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 149, "favorite_count": 0, "accepted_answer_id": 50454326, "answer_count": 1, "score": 1, "last_activity_date": 1526926087, "creation_date": 1526924727, "last_edit_date": 1526925006, "question_id": 50454094, "link": "https://stackoverflow.com/questions/50454094/confused-about-forwarding-a-reference-through-multiple-functions", "title": "Confused about forwarding a reference through multiple functions", "body": "<p>I'm having trouble understanding how references get forwarded through functions. The following scenario seems to compile as expected:</p>\n\n<pre><code>trait Trait {}\n\nstruct ImplementsTrait {}\nimpl Trait for ImplementsTrait {}\n\nfn foo(t: &amp;mut Trait) {\n    // ... use the mutable reference\n}\n\nfn forward(t: &amp;mut Trait) {\n    foo(t); // forward the type '&amp;mut Trait' to foo\n}\n\nfn main() {\n    let mut t = ImplementsTrait{};\n    forward(&amp;mut t); // need to pass as reference because Trait has no static size\n}\n</code></pre>\n\n<p>However, in using the API for the <a href=\"https://docs.capnproto-rust.org/capnp/index.html\" rel=\"nofollow noreferrer\">capnp crate</a>, I get unexpected behavior:</p>\n\n<pre><code>fn parse_capnp(read: &amp;mut BufRead) {\n    let reader = serialize_packed::read_message(read, message::ReaderOptions::new());\n    Ok(())\n}\n\nfn main() {\n    // ... ///\n    let mut br = BufReader::new(f);\n    parse_capnp(&amp;mut br);\n    Ok(())\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `std::io::BufRead: std::marker::Sized` is not satisfied\n  --&gt; src/main.rs:18:16\n   |\n18 |     let reader = serialize_packed::read_message(read, message::ReaderOptions::new());\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `std::io::BufRead` does not have a constant size known at compile-time\n</code></pre>\n\n<p>The signature of <code>read_message</code> is:</p>\n\n<pre><code>pub fn read_message&lt;R&gt;(\n    read: &amp;mut R, \n    options: ReaderOptions\n) -&gt; Result&lt;Reader&lt;OwnedSegments&gt;&gt; \nwhere\n    R: BufRead,\n</code></pre>\n\n<p>It appears that <code>read</code> is getting passed by value when it is a <code>&amp;mut BufRead</code> and <code>read_message</code> is expecting a <code>&amp;mut BufRead</code>. The only way to get this snippet to compile for me is changing this to:</p>\n\n<pre><code>fn parse_capnp(mut read: &amp;mut BufRead) {\n    let reader = serialize_packed::read_message(&amp;mut read, message::ReaderOptions::new());\n    Ok(())\n}\n</code></pre>\n\n<p>I believe I am missing something simple about the types here. To me, this appears to pass a <code>&amp;mut &amp;mut BufRead</code>, which is not the expected type, but compiles.</p>\n\n<p>Could someone add clarity to the types of <code>read</code> and <code>t</code> for the two examples?</p>\n\n<p>I've looked at the following threads:</p>\n\n<ul>\n<li><a href=\"https://www.reddit.com/r/rust/comments/2sjicp/use_of_mut_in_function_signature/\" rel=\"nofollow noreferrer\">Use of <code>mut</code> in function signature</a></li>\n<li><a href=\"https://stackoverflow.com/questions/28519997/what-are-rusts-exact-auto-dereferencing-rules\">What are Rust&#39;s exact auto-dereferencing rules?</a></li>\n</ul>\n\n<p>For the first thread, I'd say the comparison to C-style pointers is faulty due to the dereferencing rules that Rust applies.</p>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 3, "last_activity_date": 1526972940, "creation_date": 1526972940, "answer_id": 50461751, "question_id": 50450909, "link": "https://stackoverflow.com/questions/50450909/drop-in-compiler-replacement-cant-find-std-crate/50461751#50461751", "title": "Drop-in compiler replacement can&#39;t find std crate", "body": "<p>Just a guess here, but I think your <code>tool1</code> is not installed in the same folder as <code>rustc</code>. Note that you may have an executable called <code>rustc</code> in your cargo bin folder alongside your <code>tool1</code>, but this <code>rustc</code> is probably a <code>rustup</code> wrapper that redirects to the real compiler somewhere in your toolchain folder (probably <code>$HOME/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rustc</code>).</p>\n\n<p>You will need to either install your <code>tool1</code> inside the toolchain folder or call it with a <code>-L</code> argument pointing to the toolchain libraries (probably <code>$HOME/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib</code>).</p>\n"}, {"comments": [{"owner": {"reputation": 74890, "user_id": 246776, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/PZwCJ.jpg?s=128&g=1", "display_name": "eonil", "link": "https://stackoverflow.com/users/246776/eonil"}, "edited": false, "score": 1, "creation_date": 1527073821, "post_id": 50463214, "comment_id": 87986445, "body": "Thanks a lot. This works! And just a note for macOS. Use <code>otool -L</code> instead of <code>ldd</code>. Library files are supposed to be at <code>$HOME&#47;.rustup&#47;toolchains&#47;nightly-x86_64-apple-darwin&#47;lib&#47;rus&zwnj;&#8203;tlib&#47;x86_64-apple-da&zwnj;&#8203;rwin&#47;lib</code>."}], "tags": [], "owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "is_accepted": true, "score": 3, "last_activity_date": 1527074726, "last_edit_date": 1527074726, "creation_date": 1526978022, "answer_id": 50463214, "question_id": 50450909, "link": "https://stackoverflow.com/questions/50450909/drop-in-compiler-replacement-cant-find-std-crate/50463214#50463214", "title": "Drop-in compiler replacement can&#39;t find std crate", "body": "<p>Inspecting <code>tool1</code> shared libraries requirements reveals that the system can not locate Rust shared libraries (I'm on a Linux system so I use <code>ldd</code>): </p>\n\n<pre><code>&gt; ldd /home/adona/.cargo/bin/tool1\n    linux-vdso.so.1 =&gt;  (0x00007ffed5938000)\n    librustc_driver-aabc67f1ff8e0e97.so =&gt; not found\n    libstd-46fff00efefae8a8.so =&gt; not found\n    libc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007fa2d6f54000)\n    /lib64/ld-linux-x86-64.so.2 (0x00007fa2d7521000)\n</code></pre>\n\n<p>Set <code>RUSTFLAGS</code> with the <code>-L</code> option if you want build through <code>cargo</code>, for example:</p>\n\n<pre><code>export RUSTFLAGS=\"-L $HOME/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib\"\n</code></pre>\n\n<p>If you want use <code>tool1</code> directly from command line you have to configure the linker library path with <code>ldconfig</code> command or with <code>LD_LIBRARY_PATH</code> env variable:</p>\n\n<pre><code>export LD_LIBRARY_PATH=$HOME/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib:$LD_LIBRARY_PATH\n</code></pre>\n"}], "owner": {"reputation": 74890, "user_id": 246776, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/PZwCJ.jpg?s=128&g=1", "display_name": "eonil", "link": "https://stackoverflow.com/users/246776/eonil"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 479, "favorite_count": 0, "accepted_answer_id": 50463214, "answer_count": 2, "score": 5, "last_activity_date": 1527074726, "creation_date": 1526912489, "last_edit_date": 1526954214, "question_id": 50450909, "link": "https://stackoverflow.com/questions/50450909/drop-in-compiler-replacement-cant-find-std-crate", "title": "Drop-in compiler replacement can&#39;t find std crate", "body": "<p>I am trying to make a <a href=\"https://github.com/nrc/stupid-stats\" rel=\"nofollow noreferrer\">drop-in compiler replacement</a>. Here's my source code.</p>\n\n<pre><code>#![feature(rustc_private)]\n#![feature(link_args)]\n\nextern crate rustc_driver;\n\nfn main() {\n    rustc_driver::set_sigpipe_handler();\n    rustc_driver::main();\n}\n</code></pre>\n\n<p>This is actually an exact copy of <code>rustc</code> source code.\nI built, installed and exported this tool using an environment variable.</p>\n\n<pre><code>cargo install\nexport RUSTC=tool1    # `tool1` is name of binary\n</code></pre>\n\n<p>And I tried to build another project <code>example1</code>.\nHere's source code of <code>example1</code>.</p>\n\n<pre><code>fn main() {}\n</code></pre>\n\n<p>Build failed with an error.</p>\n\n<pre><code>error[E0463]: can't find crate for `std`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: Could not compile `foo2`.\n\nTo learn more, run the command again with --verbose.\n</code></pre>\n\n<p>I confirmed <code>example1</code> got built well with normal <code>cargo</code>. It gets broken only with <code>tool1</code>. (<code>export RUSTC=tool1</code>) If I <code>unset RUSTC</code>, it works again.</p>\n\n<p>It seems I made some fault, but I can't figure out what. How can I make it work?</p>\n\n<hr>\n\n<p>Here're my tool informations.</p>\n\n<pre><code>rustc -V\nrustc 1.28.0-nightly (a1d4a9503 2018-05-20)\n\ncargo -V\ncargo 1.28.0-nightly (f352115d5 2018-05-15)\n</code></pre>\n\n<p><a href=\"https://github.com/eonil/rust-drop-in-replacement-fail\" rel=\"nofollow noreferrer\">Here's full example source code</a>.</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1526911872, "creation_date": 1526911872, "answer_id": 50450743, "question_id": 50450480, "link": "https://stackoverflow.com/questions/50450480/is-there-a-way-to-construct-a-conditional-from-an-array/50450743#50450743", "title": "Is there a way to construct a conditional from an array?", "body": "<p>You can create a closure that uses <code>b</code> and does whatever logic you need. In this case, you can use <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.any\" rel=\"nofollow noreferrer\"><code>Iterator::any</code></a> and <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.all\" rel=\"nofollow noreferrer\"><code>Iterator::all</code></a> to test if all the values meet some criteria:</p>\n\n<pre><code>let is_divisible = |i| {\n    b.iter().any(|b| i % b == 0)\n};\n</code></pre>\n\n<p>I wouldn't usually write it as a separate variable and I'd use <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.filter\" rel=\"nofollow noreferrer\"><code>Iterator::filter</code></a> instead of the <code>if</code>:</p>\n\n<pre><code>for i in a.iter().filter(|&amp;i| b.iter().any(|&amp;b| i % b == 0)) {\n    println!(\"{} is true\", i);\n}\n</code></pre>\n"}], "owner": {"reputation": 23, "user_id": 9707210, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-UNBiEYyc3Cw/AAAAAAAAAAI/AAAAAAAAAF8/a_CQH0psf1A/photo.jpg?sz=128", "display_name": "Scott DeJong", "link": "https://stackoverflow.com/users/9707210/scott-dejong"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 61, "favorite_count": 0, "accepted_answer_id": 50450743, "answer_count": 1, "score": 2, "last_activity_date": 1526911872, "creation_date": 1526910897, "last_edit_date": 1526911383, "question_id": 50450480, "link": "https://stackoverflow.com/questions/50450480/is-there-a-way-to-construct-a-conditional-from-an-array", "title": "Is there a way to construct a conditional from an array?", "body": "<p>Given the following two arrays, is there a way to construct a conditional from <code>b</code> to use in a loop of values in <code>a</code> like the following code? I would like <code>is_divisible</code> to look something like <code>(i % 3 == 0) || (i % 5 == 0) || (i % 7 == 0)</code></p>\n\n<pre><code>fn main() {\n    let a: Vec&lt;u32&gt; = vec![80, 90, 101, 254];\n    let b: Vec&lt;u32&gt; = vec![3, 5, 7];\n\n    let is_divisible = // ???\n\n    for i in a {\n        if is_divisible {\n            println!(\"{} is true\", i);\n        }\n    }\n}\n</code></pre>\n"}, {"tags": ["configuration", "rust", "rust-cargo"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1526901746, "post_id": 50447703, "comment_id": 87908858, "body": "In all the libs built like this I saw, there is a default backend, and the user can select another backend with an option."}], "answers": [{"comments": [{"owner": {"reputation": 2731, "user_id": 109414, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2b68fe77303968e573ca1e7004462ae7?s=128&d=identicon&r=PG", "display_name": "Edd Barrett", "link": "https://stackoverflow.com/users/109414/edd-barrett"}, "edited": false, "score": 0, "creation_date": 1526911647, "post_id": 50450643, "comment_id": 87914389, "body": "Thanks. I was hoping the client would be able to choose one of the available backends at its compile time. This would work if there is exactly one backend per platform, but this may not be the case."}, {"owner": {"reputation": 2731, "user_id": 109414, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2b68fe77303968e573ca1e7004462ae7?s=128&d=identicon&r=PG", "display_name": "Edd Barrett", "link": "https://stackoverflow.com/users/109414/edd-barrett"}, "edited": false, "score": 0, "creation_date": 1526911694, "post_id": 50450643, "comment_id": 87914408, "body": "(as it happens the API is generic using a trait, but the <code>new</code> is backend specific because of differing configuration options)"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 2731, "user_id": 109414, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2b68fe77303968e573ca1e7004462ae7?s=128&d=identicon&r=PG", "display_name": "Edd Barrett", "link": "https://stackoverflow.com/users/109414/edd-barrett"}, "edited": false, "score": 0, "creation_date": 1526911758, "post_id": 50450643, "comment_id": 87914452, "body": "Then you probably should be have a config per platform instead of per backend."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 2731, "user_id": 109414, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2b68fe77303968e573ca1e7004462ae7?s=128&d=identicon&r=PG", "display_name": "Edd Barrett", "link": "https://stackoverflow.com/users/109414/edd-barrett"}, "edited": false, "score": 1, "creation_date": 1526912693, "post_id": 50450643, "comment_id": 87914966, "body": "I think you need to update your question to include these points, since an answer that takes those into account will not be an answer to your more broad question."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 1, "last_activity_date": 1526915640, "last_edit_date": 1526915640, "creation_date": 1526911507, "answer_id": 50450643, "question_id": 50447703, "link": "https://stackoverflow.com/questions/50447703/can-you-share-cfg-up-the-dependency-tree-using-cargo/50450643#50450643", "title": "Can you share `cfg!` up the dependency tree using Cargo?", "body": "<p>You do not have access to a library's config from outside.</p>\n\n<p>You will never be able to know the concrete types of the backends from consumer code, so you have to come up with some machinery to be able to construct them, taking into account the different needs of each of their constructors.</p>\n\n<p>The basic idea here, is to introduce a context, something like a dependency injection context that you might use in an object-oriented language. The context holds values that might be needed by a constructor.</p>\n\n<p>To create trait objects, you need a trait:</p>\n\n<pre><code>pub trait Backend {\n    // all the common stuff for backends\n}\n</code></pre>\n\n<p>A trait for constructing backends, and a struct to hold all the possible configuration variables needed by these backends. This can't be the same trait as <code>Backend</code> because the <code>new</code> method prevents it from being made into an object. Most of the variables are optional, since not all backends need them:</p>\n\n<pre><code>pub trait BackendContstruct {\n    fn new(ctx: &amp;BackendContext) -&gt; Result&lt;Box&lt;Backend&gt;, BackendError&gt;;\n}\n\npub struct BackendContext&lt;'a&gt; {\n    var_1: Option&lt;&amp;'a str&gt;,\n    var_2: Option&lt;&amp;'a str&gt;,\n    another: Option&lt;bool&gt;,\n    // etc\n}\n</code></pre>\n\n<p>If you provide the wrong variables, then you need to get an error back. Making the construction dynamic unfortunately means that errors are runtime instead of at compile-time:</p>\n\n<pre><code>pub struct BackendError(String);\n</code></pre>\n\n<p>The availability of each backend depends on platform support. So make their definitions dependant on the platform:</p>\n\n<pre><code>#[cfg(platform1)]\nmod backend1 {\n    pub struct Backend1;\n    impl ::Backend for Backend1 {}\n    impl ::BackendContstruct for Backend1 {\n        fn new(ctx: &amp;::BackendContext) -&gt; Result&lt;Box&lt;::Backend&gt;, ::BackendError&gt; {\n            if ctx.var_1.is_none() {\n                Err(::BackendError(\"Backend1 requires val_1 to initialize\".to_string()))\n            } else {\n                Ok(Box::new(Backend1 {}))\n            }\n        }\n    }\n}\n\n#[cfg(platform1)]\n#[cfg(platform2)]\nmod backend2 {\n    pub struct Backend2;\n    impl ::Backend for Backend2 {}\n    impl ::BackendContstruct for Backend2 {\n        fn new(ctx: &amp;::BackendContext) -&gt; Result&lt;Box&lt;::Backend&gt;, ::BackendError&gt; {\n            Ok(Box::new(Backend2 {}))\n        }\n    }\n}\n</code></pre>\n\n<p>None of the concrete types are public, and any might just not exist. So provide an enum so that consumers can specify which backend they want:</p>\n\n<pre><code>pub enum BackendType {\n    // these names are available in all configurations\n    Default, Backend1, Backend2, Backend3\n}\n</code></pre>\n\n<p>And a function for constructing the backends. It will be an <code>Err</code> to request an unsupported backend or to miss out required variables in the context. Consumers should be encouraged to use the <code>Default</code> variant, which should have a valid backend on any platform:</p>\n\n<pre><code>pub fn create_backend(backend: BackendType, ctx: &amp;BackendContext) -&gt; Result&lt;Box&lt;Backend&gt;, BackendError&gt; {\n    match backend {\n        #[cfg(platform1)]\n        #[cfg(platform2)]\n        BackendType::Default =&gt; Backend2::new(ctx),\n        #[cfg(platform1)]\n        BackendType::Backend1 =&gt; Backend1::new(ctx),\n        #[cfg(platform1)]\n        #[cfg(platform2)]\n        BackendType::Backend2 =&gt; Backend2::new(ctx),\n        _ =&gt; Err(BackendError(\"Backend not available\".to_string()))\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1526919373, "post_id": 50452098, "comment_id": 87918697, "body": "The problem is still that the code in the question is trying to use the types statically. The function to return the list of backends would be dynamic, and you would have to construct the backends dynamically too."}, {"owner": {"reputation": 2731, "user_id": 109414, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2b68fe77303968e573ca1e7004462ae7?s=128&d=identicon&r=PG", "display_name": "Edd Barrett", "link": "https://stackoverflow.com/users/109414/edd-barrett"}, "edited": false, "score": 0, "creation_date": 1526919476, "post_id": 50452098, "comment_id": 87918753, "body": "if you guard use of the backend-specific parts inside a  <code>#[cfg(has_backend1)] {...}</code>, if the library didn&#39;t have backend1 it&#39;s as if the guarded code didn&#39;t exist."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1526927528, "post_id": 50452098, "comment_id": 87922680, "body": "I misread the answer. It could actually work. Though it does commit consumers of the library to using a build script."}], "tags": [], "owner": {"reputation": 8789, "user_id": 539465, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/2acba600ecfbe1cc2e7f3c94b686ac84?s=128&d=identicon&r=PG", "display_name": "Valentin Lorentz", "link": "https://stackoverflow.com/users/539465/valentin-lorentz"}, "is_accepted": false, "score": 0, "last_activity_date": 1526916728, "creation_date": 1526916728, "answer_id": 50452098, "question_id": 50447703, "link": "https://stackoverflow.com/questions/50447703/can-you-share-cfg-up-the-dependency-tree-using-cargo/50452098#50452098", "title": "Can you share `cfg!` up the dependency tree using Cargo?", "body": "<p>You could have a function that returns a list of backends available.</p>\n\n<p>Then, when an app wants to use your library, it can call that function from its <code>build.rs</code>, select one of the backends available, and pass it as an option to the compiler.</p>\n"}], "owner": {"reputation": 2731, "user_id": 109414, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2b68fe77303968e573ca1e7004462ae7?s=128&d=identicon&r=PG", "display_name": "Edd Barrett", "link": "https://stackoverflow.com/users/109414/edd-barrett"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 114, "favorite_count": 2, "answer_count": 2, "score": 2, "last_activity_date": 1526916728, "creation_date": 1526901441, "last_edit_date": 1526916017, "question_id": 50447703, "link": "https://stackoverflow.com/questions/50447703/can-you-share-cfg-up-the-dependency-tree-using-cargo", "title": "Can you share `cfg!` up the dependency tree using Cargo?", "body": "<p>I have a Rust library that has some platform abstractions in the form of \"backends\". The library uses a <code>build.rs</code> to do some platform checks and sets some compile time configuration variables according to what backends can be built. Then in the code, backend code is guarded like this:</p>\n\n<pre><code>#[cfg(backend1)]\nstruct Backend1 { ... }\n#[cfg(backend2)]\nstruct Backend2 { ... }\n...\n</code></pre>\n\n<p>A consumer of this library wants to instantiate a backend suitable for the current platform. Ideally you'd do something like:</p>\n\n<pre><code>fn get_backend() -&gt; Box&lt;Backend&gt; {\n    #[cfg(backend1)]\n    return mylib::backends::Backend1::new(...);\n    #[cfg(backend2)]\n    return mylib::backends::Backend2::new(...);\n    ...\n}\n</code></pre>\n\n<p>However, the configuration variables inside <code>mylib</code> do not get shared to consumers, so <code>#[cfg(backend1)]</code> won't work as expected.</p>\n\n<p>Is there a way to achieve the desired behaviour without requiring manual intervention for the person building the consumer of the library? I don't want users to have to manually pass a list of available backends. It seems this should be automatable.</p>\n\n<p>Note that the structs for backends not built-in to <code>mylib</code> are totally absent, meaning that consumers can't reference them. Consumers would need to use conditional compilation to ensure that only backends built in to <code>mylib</code> are referenced.</p>\n\n<p>There may be more than one backend for any given platform, and in that case, the consumer should be able to choose which one.</p>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 7, "last_activity_date": 1526912424, "last_edit_date": 1526912424, "creation_date": 1526896855, "answer_id": 50446357, "question_id": 50446200, "link": "https://stackoverflow.com/questions/50446200/what-is-the-difference-between-cargos-environment-variables-rustc-and-rustc-wra/50446357#50446357", "title": "What is the difference between Cargo&#39;s environment variables RUSTC and RUSTC_WRAPPER?", "body": "<p>As the documentation states:</p>\n\n<ul>\n<li><p>If <code>RUSTC</code> is defined, Cargo will not execute this line:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rustc &lt;parameters&gt;\n</code></pre>\n\n<p>but this one:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$RUSTC &lt;parameters&gt;\n</code></pre>\n\n<p>That is like the variable <code>CC</code> in Makefiles to set an alternative compiler.</p></li>\n<li><p>If <code>RUSTC_WRAPPER</code> is defined, Cargo will not call the compiler itself. It will instead call the following line:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$RUSTC_WRAPPER rustc &lt;parameters&gt;\n</code></pre>\n\n<p>You can add the options you want, or do whatever you want before the compilation, but you have to call the compiler yourself. Well, that's the purpose of a wrapper.</p></li>\n</ul>\n"}], "owner": {"reputation": 74890, "user_id": 246776, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/PZwCJ.jpg?s=128&g=1", "display_name": "eonil", "link": "https://stackoverflow.com/users/246776/eonil"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 307, "favorite_count": 0, "accepted_answer_id": 50446357, "answer_count": 1, "score": 3, "last_activity_date": 1526912424, "creation_date": 1526896374, "last_edit_date": 1526912371, "question_id": 50446200, "link": "https://stackoverflow.com/questions/50446200/what-is-the-difference-between-cargos-environment-variables-rustc-and-rustc-wra", "title": "What is the difference between Cargo&#39;s environment variables RUSTC and RUSTC_WRAPPER?", "body": "<p>Cargo's environment variables are explained <a href=\"https://doc.rust-lang.org/cargo/reference/environment-variables.html\" rel=\"nofollow noreferrer\">here</a>.</p>\n\n<ul>\n<li><code>RUSTC</code> - Instead of running <code>rustc</code>, Cargo will execute this specified compiler instead.</li>\n<li><code>RUSTC_WRAPPER</code> - Instead of simply running <code>rustc</code>, Cargo will execute this specified wrapper instead, passing as its commandline arguments the <code>rustc</code> invocation, with the first argument being <code>rustc</code>.</li>\n</ul>\n\n<p><code>RUSTC</code> and <code>RUSTC_WRAPPER</code> variables look like they are doing the same thing. How are they different?</p>\n"}, {"tags": ["lambda", "functional-programming", "rust"], "answers": [{"comments": [{"owner": {"reputation": 1318, "user_id": 5329711, "user_type": "registered", "accept_rate": 46, "profile_image": "https://i.stack.imgur.com/8KGqg.gif?s=128&g=1", "display_name": "madeinQuant", "link": "https://stackoverflow.com/users/5329711/madeinquant"}, "edited": false, "score": 0, "creation_date": 1526887706, "post_id": 50443724, "comment_id": 87901649, "body": "thank you for your help. An error message was shown &quot;_^ expected struct <code>std::vec::Vec</code>, found struct `std::iter::Map&quot;. compile successfully with the following modification &quot;distance = iter::repeat(())         .enumerate()         .map(|(i, _)| (x[i].powi(2) + y[i].powi(2)).sqrt())         .take(numIteration)         .collect::&lt;Vec&lt;f64&gt;&gt;();&quot;"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 1318, "user_id": 5329711, "user_type": "registered", "accept_rate": 46, "profile_image": "https://i.stack.imgur.com/8KGqg.gif?s=128&g=1", "display_name": "madeinQuant", "link": "https://stackoverflow.com/users/5329711/madeinquant"}, "edited": false, "score": 0, "creation_date": 1526887837, "post_id": 50443724, "comment_id": 87901701, "body": "@madeinQuant I didn&#39;t write the full code... only the problematic part."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 1318, "user_id": 5329711, "user_type": "registered", "accept_rate": 46, "profile_image": "https://i.stack.imgur.com/8KGqg.gif?s=128&g=1", "display_name": "madeinQuant", "link": "https://stackoverflow.com/users/5329711/madeinquant"}, "edited": false, "score": 0, "creation_date": 1526888136, "post_id": 50443724, "comment_id": 87901821, "body": "@madeinQuant I did write the <code>collect</code> as well, if you want."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 4, "last_activity_date": 1526913058, "last_edit_date": 1526913058, "creation_date": 1526886824, "answer_id": 50443724, "question_id": 50443267, "link": "https://stackoverflow.com/questions/50443267/alternative-functional-style-written-in-rust/50443724#50443724", "title": "Alternative functional style written in rust", "body": "<p><code>iter::repeat(())</code> creates an iterator that yields <code>()</code> (the unit type). Then you map those iterated items with this closure:</p>\n\n<pre><code>|i| (x[i].powi(2) + y[i].powi(2)).sqrt()\n</code></pre>\n\n<p><code>i</code> is thus of type <code>()</code>. You cannot index something with <code>()</code> as said by the compiler:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>the trait `std::slice::SliceIndex&lt;[f64]&gt;` is not implemented for `()`\n</code></pre>\n\n<p>One way to solve this could be to enumerate:</p>\n\n<pre><code>distance = iter::repeat(()).enumerate()\n    .map(|(i, _)| (x[i].powi(2) + y[i].powi(2)).sqrt())\n    .take(numIteration)\n    .collect();\n</code></pre>\n\n<p>But your first solution is better because the <code>iter::repeat</code> stuff is useless.</p>\n\n<hr>\n\n<p>Note that you make some unnecessary allocations if you do not need to keep the <code>x</code>s and <code>y</code>s. This code can be simply written as:</p>\n\n<pre><code>extern crate rand;\n\nuse rand::Rng;\n\nfn estimate_area_circle_monteCarlo() {\n    let num_iteration = 100000;\n    let mut rng = rand::thread_rng();\n\n    let distances: Vec&lt;_&gt; = (0..num_iteration)\n        .map(|_| {\n            let x: f32 = rng.gen_range(-1., 1.);\n            let y: f32 = rng.gen_range(-1., 1.);\n            (x.powi(2) + y.powi(2)).sqrt()\n        })\n        .collect();\n\n    println!(\"last distance = {}\", distances.last().unwrap());\n}\n</code></pre>\n\n<p>Use <code>collect</code> only if you actually want a <code>Vec</code>, an <code>HashSet</code> or whatever. If your purpose is to iterate over some data, keep the iterator as is.</p>\n"}, {"tags": [], "owner": {"reputation": 1318, "user_id": 5329711, "user_type": "registered", "accept_rate": 46, "profile_image": "https://i.stack.imgur.com/8KGqg.gif?s=128&g=1", "display_name": "madeinQuant", "link": "https://stackoverflow.com/users/5329711/madeinquant"}, "is_accepted": false, "score": -1, "last_activity_date": 1526910586, "last_edit_date": 1526910586, "creation_date": 1526888083, "answer_id": 50444011, "question_id": 50443267, "link": "https://stackoverflow.com/questions/50443267/alternative-functional-style-written-in-rust/50444011#50444011", "title": "Alternative functional style written in rust", "body": "<p>There is a final version for reference.</p>\n\n<pre><code>distance = iter::repeat(())\n        .enumerate()\n        .map(|(i, _)| (x[i].powi(2) + y[i].powi(2)).sqrt())\n        .take(numIteration)\n        .collect::&lt;Vec&lt;f64&gt;&gt;();\n</code></pre>\n"}], "owner": {"reputation": 1318, "user_id": 5329711, "user_type": "registered", "accept_rate": 46, "profile_image": "https://i.stack.imgur.com/8KGqg.gif?s=128&g=1", "display_name": "madeinQuant", "link": "https://stackoverflow.com/users/5329711/madeinquant"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 105, "favorite_count": 0, "answer_count": 2, "score": -1, "last_activity_date": 1526913058, "creation_date": 1526884607, "last_edit_date": 1526886935, "question_id": 50443267, "link": "https://stackoverflow.com/questions/50443267/alternative-functional-style-written-in-rust", "title": "Alternative functional style written in rust", "body": "<p>How to correct the syntax error in the section 2? An error message was shown</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277] slice indices are of type `usize` or ranges of `usize`\n</code></pre>\n\n<p>when the section 2 was compiled. (Section 1 and section 2; both are same functionality in different programming styles.)</p>\n\n<pre><code>extern crate rand;\n\nuse std::iter;\nuse rand::Rng;\n\nfn estimateAreaCircleMonteCarlo() {\n    let box_area = 4.0;\n    let numIteration = 100000;\n\n    let mut x = Vec::&lt;f64&gt;::with_capacity(numIteration);\n    let mut y = Vec::&lt;f64&gt;::with_capacity(numIteration);\n    let mut distance = Vec::&lt;f64&gt;::with_capacity(numIteration);\n    let mut rng = rand::thread_rng();\n\n    x = iter::repeat(())\n        .map(|()| rng.gen_range(-1., 1.))\n        .take(numIteration)\n        .collect::&lt;Vec&lt;f64&gt;&gt;();\n\n    y = iter::repeat(())\n        .map(|()| rng.gen_range(-1., 1.))\n        .take(numIteration)\n        .collect::&lt;Vec&lt;f64&gt;&gt;();\n\n    // section 1, it is able to be compiled.\n    distance = (0..numIteration)\n        .map(|i| (x[i].powi(2) + y[i].powi(2)).sqrt())\n        .collect::&lt;Vec&lt;f64&gt;&gt;();\n\n    // section 2, same functionality as section 1 but it cannot be compiled.\n    // error[E0277]^^^^ slice indices are of type `usize` or ranges of `usize`\n    /*\n    distance = iter::repeat(())\n        .map(|i| (x[i].powi(2) + y[i].powi(2)).sqrt())\n        .take(numIteration)\n        .collect::&lt;Vec&lt;f64&gt;&gt;();\n    */\n\n    println!(\"x={}\", x[numIteration - 1]);\n    println!(\"y={}\", y[numIteration - 1]);\n    println!(\"distance={}\", distance[numIteration - 1]);\n}\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1526873245, "creation_date": 1526873245, "answer_id": 50441602, "question_id": 50441503, "link": "https://stackoverflow.com/questions/50441503/biguint-and-cannot-move-out-of-borrowed-content-error/50441602#50441602", "title": "BigUint and &quot;cannot move out of borrowed content&quot; error", "body": "<pre><code>fn next(&amp;mut self) -&gt; Option&lt;BigUint&gt; {\n    let b_next = &amp;self.a + &amp;self.b; \n    let b_prev = std::mem::replace(&amp;mut self.b, b_next);\n    self.a = b_prev;\n    Some(self.a.clone())\n}\n</code></pre>\n\n<ol>\n<li><p><code>BigUint</code> does not implement <code>Copy</code>, but the <a href=\"https://doc.rust-lang.org/std/ops/trait.Add.html\" rel=\"nofollow noreferrer\"><code>Add</code></a> trait takes both arguments by value. <code>BigUint</code> implements <code>Add</code> for references as well, so you can take references of the values instead.</p></li>\n<li><p>We would like to replace the current value of <code>b</code> with the next value of <code>b</code>, but we need to keep the old value. We can use <a href=\"https://doc.rust-lang.org/std/mem/fn.replace.html\" rel=\"nofollow noreferrer\"><code>mem::replace</code></a> for that.</p></li>\n<li><p>Assigning the old <code>b</code> value to <code>a</code> is straightforward.</p></li>\n<li><p>Now we wish to return the value in <code>a</code>, so we need to <a href=\"https://doc.rust-lang.org/std/clone/trait.Clone.html\" rel=\"nofollow noreferrer\"><code>clone</code></a> the entire value.</p></li>\n</ol>\n\n<blockquote>\n  <p><code>BigUint</code> type is not primitive thus it does not have the <code>Copy</code> trait</p>\n</blockquote>\n\n<p>Something being a primitive and something implementing the <code>Copy</code> trait have nothing to do with each other. User types can implement <code>Copy</code> and some primitives do not implement <code>Copy</code>.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/31798737/155423\">How to swap two variables?</a></li>\n<li><a href=\"https://stackoverflow.com/q/28005134/155423\">How do I implement the Add trait for a reference to a struct?</a></li>\n<li><a href=\"https://stackoverflow.com/q/27856991/155423\">Operator overloading by value results in use of moved value</a></li>\n</ul>\n"}], "owner": {"reputation": 587, "user_id": 314185, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/24a70cc156a107485b4638c810b31374?s=128&d=identicon&r=PG", "display_name": "Gong-Yi Liao", "link": "https://stackoverflow.com/users/314185/gong-yi-liao"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 64, "favorite_count": 0, "accepted_answer_id": 50441602, "answer_count": 1, "score": 0, "last_activity_date": 1526873245, "creation_date": 1526872327, "last_edit_date": 1526872616, "question_id": 50441503, "link": "https://stackoverflow.com/questions/50441503/biguint-and-cannot-move-out-of-borrowed-content-error", "title": "BigUint and &quot;cannot move out of borrowed content&quot; error", "body": "<p>I tried to follow the iterator approach described in <a href=\"https://doc.rust-lang.org/stable/rust-by-example/trait/iter.html\" rel=\"nofollow noreferrer\">Rust by Example's Iterator section</a> with <a href=\"https://github.com/rust-num/num-bigint\" rel=\"nofollow noreferrer\"><code>BigUint</code></a>:</p>\n\n<pre><code>extern crate num_bigint;\n\nuse num_bigint::{BigUint, ToBigUint};\n\nstruct FibState {\n    a: BigUint,\n    b: BigUint,\n}\n\nimpl Iterator for FibState {\n    type Item = BigUint;\n    fn next(&amp;mut self) -&gt; Option&lt;BigUint&gt; {\n        let b_n = self.a + self.b;\n        self.a = self.b;\n        self.b = b_n;\n        Some(self.a)\n    }\n}\n\nfn fibs_0() -&gt; FibState {\n    FibState {\n        a: 0.to_biguint().unwrap(),\n        b: 1.to_biguint().unwrap(),\n    }\n}\n\nfn fib2(n: usize) -&gt; BigUint {\n    if n &lt; 2 {\n        n.to_biguint().unwrap()\n    } else {\n        fibs_0().skip(n - 1).next().unwrap()\n    }\n}\n\nfn main() {\n    println!(\"Fib1(300) = {}\", fib2(300));\n}\n</code></pre>\n\n<p>The above code does not compile:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n  --&gt; src/main.rs:13:19\n   |\n13 |         let b_n = self.a + self.b;\n   |                   ^^^^ cannot move out of borrowed content\n\nerror[E0507]: cannot move out of borrowed content\n  --&gt; src/main.rs:13:28\n   |\n13 |         let b_n = self.a + self.b;\n   |                            ^^^^ cannot move out of borrowed content\n\nerror[E0507]: cannot move out of borrowed content\n  --&gt; src/main.rs:14:18\n   |\n14 |         self.a = self.b;\n   |                  ^^^^ cannot move out of borrowed content\n\nerror[E0507]: cannot move out of borrowed content\n  --&gt; src/main.rs:16:14\n   |\n16 |         Some(self.a)\n   |              ^^^^ cannot move out of borrowed content\n</code></pre>\n\n<p>I am not sure if it is due to the <code>BigUint</code> type is not primitive thus it does not have the <code>Copy</code> trait. How can I modify the iterator to make it works with the <code>FibState</code> struct? </p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1526859451, "post_id": 50440286, "comment_id": 87894918, "body": "<a href=\"https://github.com/rust-lang/rust/issues/48855\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/48855</a>"}], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 356, "favorite_count": 1, "answer_count": 0, "score": 6, "last_activity_date": 1526860144, "creation_date": 1526858958, "last_edit_date": 1526860144, "question_id": 50440286, "link": "https://stackoverflow.com/questions/50440286/how-to-disable-warnings-on-proc-macros", "title": "How to disable warnings on proc-macros?", "body": "<p>I'm using the <a href=\"https://crates.io/crates/enumflags\" rel=\"noreferrer\">enumflags</a> crate, which provides the custom derive <code>EnumFlags</code> on enums via <a href=\"https://crates.io/crates/enumflags_derive\" rel=\"noreferrer\">enumflags_derive</a>. Additionally, I'm using <a href=\"https://github.com/rust-lang-nursery/rust-clippy\" rel=\"noreferrer\">Clippy</a> with <a href=\"https://rust-lang-nursery.github.io/rust-clippy/master/index.html#write_literal\" rel=\"noreferrer\"><code>write_literal</code></a> enabled. </p>\n\n<p>When deriving a struct with <code>EnumFlags</code>, Clippy warns me:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning: writing a literal with an empty format string\n    |\n    | #[derive(Copy, Clone, EnumFlags)]\n    |                       ^^^^^^^^^\n    |\n    = note: #[warn(write_literal)] on by default\n    = help: for further information visit https://rust-lang-nursery.github.io/rust-clippy/v0.0.202/index.html#write_literal\n</code></pre>\n\n<p>How can I get rid of this warning without globally disabling the warning?</p>\n\n<pre><code>#[cfg_attr(feature = \"cargo-clippy\", allow(write_literal))]\n</code></pre>\n\n<p>does not work on proc-macros.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1526857216, "post_id": 50440074, "comment_id": 87894501, "body": "<i>using an <code>UnsafeCell</code></i> \u2014 why did you go all the way to <code>UnsafeCell</code> as opposed to e.g. just a <code>Cell</code>?"}], "answers": [{"comments": [{"owner": {"reputation": 173, "user_id": 3941747, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1481162ed1e28a82e46fa5c3cea87660?s=128&d=identicon&r=PG&f=1", "display_name": "Oliver", "link": "https://stackoverflow.com/users/3941747/oliver"}, "edited": false, "score": 0, "creation_date": 1526893722, "post_id": 50441383, "comment_id": 87904422, "body": "Thank you for the very in depth explanation. It&#39;s funny I hadn&#39;t thought about using a simple indexed loop. I can&#39;t test right now but that should be one way to solve my problem. Also I had only skimmed the chapter about cells so I didn&#39;t have it on my radar. The compiler have me the idea about UnsafeCell when I tried to std::mem::transmute my immutable reference."}, {"owner": {"reputation": 173, "user_id": 3941747, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1481162ed1e28a82e46fa5c3cea87660?s=128&d=identicon&r=PG&f=1", "display_name": "Oliver", "link": "https://stackoverflow.com/users/3941747/oliver"}, "edited": false, "score": 0, "creation_date": 1526943766, "post_id": 50441383, "comment_id": 87928782, "body": "Having implement two different versions, one with an indexed loop and one with std::cell::Cell using interior mutability, it seems from some preliminary benchmarks, that using the indexed loop is significantly faster and using interior mutability is significantly slower when compared to my previous implementation, where I used an Unsafe cell to alter the value, not quite sure why that is but it&#39;s pretty interesting."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 173, "user_id": 3941747, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1481162ed1e28a82e46fa5c3cea87660?s=128&d=identicon&r=PG&f=1", "display_name": "Oliver", "link": "https://stackoverflow.com/users/3941747/oliver"}, "edited": false, "score": 0, "creation_date": 1526945170, "post_id": 50441383, "comment_id": 87929102, "body": "@Oliver that&#39;s actually very counter-intuitive to me. <code>Cell</code> doesn&#39;t have <i>any</i> runtime cost, while indexing an array should have a (tiny) out-of-bounds check. You did run your benchmarking with <code>--release</code> or <code>cargo bench</code>, correct?"}, {"owner": {"reputation": 173, "user_id": 3941747, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1481162ed1e28a82e46fa5c3cea87660?s=128&d=identicon&r=PG&f=1", "display_name": "Oliver", "link": "https://stackoverflow.com/users/3941747/oliver"}, "edited": false, "score": 0, "creation_date": 1527029966, "post_id": 50441383, "comment_id": 87968682, "body": "Yes I did. I also did the best I could that the different implementations differ as little as possible, so implementation a) uses two indexed loops (x,y) and unchecked_get_mut() to access each cell and implementation b) uses cells and an coordinate aware iterator. When I use two indexed loops with regular get_mut() access  the results are much more close together but the loops still win. I don&#39;t know why that is but I had assumed that one version might allow for more compiler optimizations."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1526871331, "creation_date": 1526871331, "answer_id": 50441383, "question_id": 50440074, "link": "https://stackoverflow.com/questions/50440074/when-is-it-necessary-to-circumvent-rusts-borrow-checker/50441383#50441383", "title": "When is it necessary to circumvent Rust&#39;s borrow checker?", "body": "<blockquote>\n  <p>When is it necessary to circumvent Rust's borrow checker?</p>\n</blockquote>\n\n<p>It is needed when:</p>\n\n<ul>\n<li>the borrow checker is not advanced enough to see that your usage is safe</li>\n<li>you do not wish to (or cannot) write the code in a different pattern</li>\n</ul>\n\n<p>As a concrete case, the compiler cannot tell that this is safe:</p>\n\n<pre><code>let mut array = [1, 2];\nlet a = &amp;mut array[0];\nlet b = &amp;mut array[1];\n</code></pre>\n\n<p>The compiler doesn't know what the implementation of <code>IndexMut</code> for a slice does at this point of compilation (this is a deliberate design choice). For all it knows, arrays always return the exact same reference, regardless of the index argument. <em>We</em> can tell that this code is safe, but the compiler disallows it.</p>\n\n<p>You can rewrite this in a way that is obviously safe to the compiler:</p>\n\n<pre><code>let mut array = [1, 2];\nlet (a, b) = array.split_at_mut(1);\nlet a = &amp;mut a[0];\nlet b = &amp;mut b[0];\n</code></pre>\n\n<p>How is this done? <a href=\"https://github.com/rust-lang/rust/blob/1.26.0/src/libcore/slice/mod.rs#L452-L462\" rel=\"noreferrer\"><code>split_at_mut</code> performs a runtime check</a> to ensure that it actually <em>is</em> safe:</p>\n\n<pre><code>fn split_at_mut(&amp;mut self, mid: usize) -&gt; (&amp;mut [T], &amp;mut [T]) {\n    let len = self.len();\n    let ptr = self.as_mut_ptr();\n\n    unsafe {\n        assert!(mid &lt;= len);\n\n        (from_raw_parts_mut(ptr, mid),\n         from_raw_parts_mut(ptr.offset(mid as isize), len - mid))\n    }\n}\n</code></pre>\n\n<p>For an example where the borrow checker is not <em>yet</em> as advanced as it can be, see <a href=\"https://stackoverflow.com/q/50251487/155423\">What are non-lexical lifetimes?</a>.</p>\n\n<blockquote>\n  <p>I borrow <code>self.board</code> mutably in the <code>iter_mut()</code> method and then try to borrow it again immutably to get all the neighbours of the read cell.</p>\n</blockquote>\n\n<p>If you know that the references don't overlap, then you can choose to use unsafe code to express it. However, this means <em>you</em> are also choosing to take on the responsibility of upholding all of Rust's invariants and avoiding <a href=\"https://doc.rust-lang.org/reference/behavior-considered-undefined.html\" rel=\"noreferrer\">undefined behavior</a>. </p>\n\n<p>The good news is that this heavy burden is what every C and C++ programmer has to (or at least <em>should</em>) have on their shoulders for <strong>every single line of code they write</strong>. At least in Rust, you can let the compiler deal with 99% of the cases.</p>\n\n<p>In many cases, there's tools like <a href=\"https://doc.rust-lang.org/std/cell/struct.Cell.html\" rel=\"noreferrer\"><code>Cell</code></a> and <a href=\"https://doc.rust-lang.org/std/cell/struct.RefCell.html\" rel=\"noreferrer\"><code>RefCell</code></a> to allow for interior mutation. In other cases, you can rewrite your algorithm to take advantage of a value being a <code>Copy</code> type. In other cases you can use an index into a slice for a shorter period. In other cases you can have a multi-phase algorithm.</p>\n\n<p>If you do need to resort to <code>unsafe</code> code, then try your best to hide it in a small area and expose safe interfaces.</p>\n\n<p>Above all, many common problems have been asked about (many times) before:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/46003212/155423\">How to iterate over mutable elements inside another mutable iteration over the same elements?</a></li>\n<li><a href=\"https://stackoverflow.com/q/29859892/155423\">Mutating an item inside of nested loops</a></li>\n<li><a href=\"https://stackoverflow.com/q/36281585/155423\">How can a nested loop with mutations on a HashMap be achieved in Rust?</a></li>\n<li><a href=\"https://stackoverflow.com/q/29414171/155423\">What&#39;s the Rust way to modify a structure within nested loops?</a> </li>\n<li><a href=\"https://stackoverflow.com/q/38779588/155423\">Nesting an iterator&#39;s loops</a></li>\n</ul>\n"}], "owner": {"reputation": 173, "user_id": 3941747, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1481162ed1e28a82e46fa5c3cea87660?s=128&d=identicon&r=PG&f=1", "display_name": "Oliver", "link": "https://stackoverflow.com/users/3941747/oliver"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 575, "favorite_count": 1, "accepted_answer_id": 50441383, "answer_count": 1, "score": 4, "last_activity_date": 1526871331, "creation_date": 1526856526, "last_edit_date": 1526857071, "question_id": 50440074, "link": "https://stackoverflow.com/questions/50440074/when-is-it-necessary-to-circumvent-rusts-borrow-checker", "title": "When is it necessary to circumvent Rust&#39;s borrow checker?", "body": "<p>I'm implementing Conway's game of life to teach myself Rust. The idea is to implement a single-threaded version first, optimize it as much as possible, then do the same for a multi-threaded version.</p>\n\n<p>I wanted to implement an alternative data layout which I thought might be more cache-friendly. The idea is to store the status of two cells for each point on a board next to each other in memory in a vector, one cell for reading the current generation's status from and one for writing the next generation's status to, alternating the access pattern for each\ngeneration's computation (which can be determined at compile time).</p>\n\n<p>The basic data structures are as follows:</p>\n\n<pre><code>#[repr(u8)]\npub enum CellStatus {\n    DEAD,\n    ALIVE,\n}\n\n/** 2 bytes */\npub struct CellRW(CellStatus, CellStatus);\n\npub struct TupleBoard {\n    width: usize,\n    height: usize,\n    cells: Vec&lt;CellRW&gt;,\n}\n\n/** used to keep track of current pos with iterator e.g. */\npub struct BoardPos {\n    x_pos: usize,\n    y_pos: usize,\n    offset: usize,\n}\n\npub struct BoardEvo {\n    board: TupleBoard,\n}\n</code></pre>\n\n<p>The function that is causing me troubles:</p>\n\n<pre><code>impl BoardEvo {\n    fn evolve_step&lt;T: RWSelector&gt;(&amp;mut self) {\n        for (pos, cell) in self.board.iter_mut() {\n            //pos: BoardPos, cell: &amp;mut CellRW\n            let read: &amp;CellStatus = T::read(cell); //chooses the right tuple half for the current evolution step\n            let write: &amp;mut CellStatus = T::write(cell);\n\n            let alive_count = pos.neighbours::&lt;T&gt;(&amp;self.board).iter() //&lt;- can't borrow self.board again!\n                    .filter(|&amp;&amp;status| status == CellStatus::ALIVE)\n                    .count();\n\n            *write = CellStatus::evolve(*read, alive_count);\n        }\n    }\n}\n\nimpl BoardPos {\n    /* ... */\n    pub fn neighbours&lt;T: RWSelector&gt;(&amp;self, board: &amp;BoardTuple) -&gt; [CellStatus; 8] {\n        /* ... */\n    }\n}\n</code></pre>\n\n<p>The trait <code>RWSelector</code> has static functions for reading from and writing to a cell tuple (<code>CellRW</code>). It is implemented for two zero-sized types <code>L</code> and <code>R</code> and is mainly a way to avoid having to write different methods for the different access patterns.</p>\n\n<p>The <code>iter_mut()</code> method returns a <code>BoardIter</code> struct which is a wrapper around a mutable slice iterator for the cells vector and thus has <code>&amp;mut CellRW</code> as <code>Item</code> type. It is also aware of the current <code>BoardPos</code> (x and y coordinates, offset).</p>\n\n<p>I thought I'd iterate over all cell tuples, keep track of the coordinates, count the number of alive neighbours (I need to know coordinates/offsets for this) for each (read) cell, compute the cell status for the next generation and write to the respective another half of the tuple.</p>\n\n<p>Of course, in the end, the compiler showed me the fatal flaw in my design, as I borrow <code>self.board</code> mutably in the <code>iter_mut()</code> method and then try to borrow it again immutably to get all the neighbours of the read cell.</p>\n\n<p>I have not been able to come up with a good solution for this problem so far. I did manage to get it working by making all\nreferences immutable and then using an <code>UnsafeCell</code> to turn the immutable reference to the write cell into a mutable one.\nI then write to the nominally immutable reference to the writing part of the tuple through the <code>UnsafeCell</code>.\nHowever, that doesn't strike me as a sound design and I suspect I might run into issues with this when attempting to parallelize things.</p>\n\n<p>Is there a way to implement the data layout I proposed in safe/idiomatic Rust or is this actually a case where you actually have to use tricks to circumvent Rust's aliasing/borrow restrictions?</p>\n\n<p>Also, as a broader question, is there a recognizable pattern for problems which require you to circumvent Rust's borrow restrictions?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1526842220, "post_id": 50438092, "comment_id": 87890470, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/50438092/edit\">edit</a> your question to include it. We cannot tell what crates, types, traits, fields, etc. are present in the code. Ideally, produce something that reproduces your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1526842289, "post_id": 50438092, "comment_id": 87890487, "body": "<i>I get a lifetime error</i> \u2014 that&#39;s not a lifetime error, FWIW."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 0, "last_activity_date": 1526844331, "last_edit_date": 1526844331, "creation_date": 1526843958, "answer_id": 50438564, "question_id": 50438092, "link": "https://stackoverflow.com/questions/50438092/how-can-i-disambiguate-a-mixed-iterator-and-futures-call-chain-without-moving-se/50438564#50438564", "title": "How can I disambiguate a mixed Iterator and Futures call chain without moving self?", "body": "<p>You can avoid moving out of the borrowed value by not attempting to move out of the borrowed value:</p>\n\n<pre><code>extern crate futures;\n\nuse futures::prelude::*;\n\nstruct Message;\nstruct Websocket;\n\nimpl Stream for Websocket {\n    type Item = Message;\n    type Error = ();\n\n    fn poll(&amp;mut self) -&gt; Result&lt;Async&lt;Option&lt;Self::Item&gt;&gt;, Self::Error&gt; {\n        Err(())\n    }\n}\n\nimpl Iterator for Websocket {\n    type Item = Message;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        let a = Stream::take(self, 1);\n        let mut b = a.wait();\n        let c = Iterator::next(&amp;mut b);\n        c.and_then(Result::ok)\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>There's no need to call <code>Stream::by_ref</code> since the starting type is already a <code>&amp;mut Websocket</code>, so I've removed it.</p>\n\n<p>You can recombine these to one line if desired:</p>\n\n<pre><code>fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n    Stream::take(self, 1)\n        .wait()\n        .next()\n        .and_then(Result::ok)\n}\n</code></pre>\n"}], "owner": {"reputation": 2340, "user_id": 2250791, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/e72d4f734d39c777f543025d36d4de4e?s=128&d=identicon&r=PG", "display_name": "Camden Narzt", "link": "https://stackoverflow.com/users/2250791/camden-narzt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 116, "favorite_count": 0, "accepted_answer_id": 50438564, "answer_count": 1, "score": -2, "last_activity_date": 1526844331, "creation_date": 1526840684, "last_edit_date": 1526844100, "question_id": 50438092, "link": "https://stackoverflow.com/questions/50438092/how-can-i-disambiguate-a-mixed-iterator-and-futures-call-chain-without-moving-se", "title": "How can I disambiguate a mixed Iterator and Futures call chain without moving self?", "body": "<p>I'm trying to add a Futures <code>Stream</code> implementation to an existing struct which already has a synchronous <code>Iterator</code> implementation. In order to keep the code DRY, I want to modify the <code>Iterator</code> implementation to call the new <code>Stream</code> implementation and wait on it.</p>\n\n<p>I modeled my implementation of <code>Iterator</code> after <a href=\"https://docs.rs/futures/0.1.21/futures/stream/trait.Stream.html#method.by_ref\" rel=\"nofollow noreferrer\">the code sample for <code>Stream::by_ref</code></a>:</p>\n\n<pre><code>stream.by_ref().take(2)\n</code></pre>\n\n<p>My implementation wound up looking like this:</p>\n\n<pre><code>impl Iterator for Websocket {\n    type Item = Message;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        self.by_ref().take(1).wait().next().and_then(Result::ok)\n    }\n}\n</code></pre>\n\n<p>However I get an error with multiple applicable items:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0034]: multiple applicable items in scope\n   --&gt; src/websocket/websocket.rs:330:14\n    |\n330 |         self.by_ref().take(1).wait().next().and_then(Result::ok)\n    |              ^^^^^^ multiple `by_ref` found\n    |\nnote: candidate #1 is defined in an impl of the trait `websocket::websocket::futures::Stream` for the type `websocket::websocket::Websocket`\n   --&gt; src/websocket/websocket.rs:149:1\n    |\n149 | impl Stream for Websocket {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: candidate #2 is defined in an impl of the trait `std::iter::Iterator` for the type `websocket::websocket::Websocket`\n   --&gt; src/websocket/websocket.rs:324:1\n    |\n324 | impl Iterator for Websocket {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: candidate #3 is defined in the trait `std::io::Write`\n    = help: to disambiguate the method call, write `std::io::Write::by_ref(&amp;mut self)` instead\n</code></pre>\n\n<p>The methods I wanted to call from left to right are:</p>\n\n<ul>\n<li><a href=\"https://docs.rs/futures/0.1.21/futures/stream/trait.Stream.html#method.by_ref\" rel=\"nofollow noreferrer\"><code>Stream::by_ref</code></a></li>\n<li><a href=\"https://docs.rs/futures/0.1.21/futures/stream/trait.Stream.html#method.take\" rel=\"nofollow noreferrer\"><code>Stream::take</code></a></li>\n<li><a href=\"https://docs.rs/futures/0.1.21/futures/stream/trait.Stream.html#method.wait\" rel=\"nofollow noreferrer\"><code>Stream::wait</code></a></li>\n<li><a href=\"https://doc.rust-lang.org/core/iter/trait.Iterator.html#tymethod.next\" rel=\"nofollow noreferrer\"><code>Iterator::next</code></a></li>\n<li><a href=\"https://doc.rust-lang.org/core/option/enum.Option.html#method.and_then\" rel=\"nofollow noreferrer\"><code>Option::and_then</code></a></li>\n<li><a href=\"https://doc.rust-lang.org/core/result/enum.Result.html#method.ok\" rel=\"nofollow noreferrer\"><code>Result::ok</code></a></li>\n</ul>\n\n<p>If I disambiguate the code it looks like this:</p>\n\n<pre><code>impl Iterator for Websocket {\n    type Item = Message;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        &lt;Self as Stream&gt;::take(*&lt;Self as Stream&gt;::by_ref(self),1).wait().next().and_then(Result::ok)\n    }\n}\n</code></pre>\n\n<p>However then I get a lifetime error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n   --&gt; src/websocket/websocket.rs:331:32\n    |\n331 |         &lt;Self as Stream&gt;::take(*&lt;Self as Stream&gt;::by_ref(self),1).wait().next().and_then(Result::ok)\n    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n</code></pre>\n\n<p>How do I make this unambiguous but keep the ability to call <code>take</code> on the result of <code>by_ref</code>?</p>\n\n<p>I know there's a new version of Futures, but I can't use it due to other libraries I'm using needing to be API compatible with the version of Futures I use.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1526841178, "post_id": 50437953, "comment_id": 87890189, "body": "<a href=\"https://play.rust-lang.org/?gist=578f81f8830f7d6cb7dc3224ddfe6ab0&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">this</a> should work, see <a href=\"https://stackoverflow.com/questions/24145823/how-do-i-convert-a-c-string-into-a-rust-string-and-back-via-ffi/24148033#24148033\">this</a> answer for more information, maybe a duplicate ?"}, {"owner": {"reputation": 81656, "user_id": 8446, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/8f9c683775bfbe76ed4855a19b73dc81?s=128&d=identicon&r=PG", "display_name": "Roger Lipscombe", "link": "https://stackoverflow.com/users/8446/roger-lipscombe"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1526842269, "post_id": 50437953, "comment_id": 87890482, "body": "The linked question <i>returns</i> a string, rather than using an out param, so I couldn&#39;t see how to adapt it. Your example seems to work; post it as an answer, maybe?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1526844582, "post_id": 50437953, "comment_id": 87891267, "body": "<i>Everything I&#39;ve tried</i> \u2014 would you care to show some of those attempts?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1526844644, "post_id": 50437953, "comment_id": 87891282, "body": "Combining <a href=\"https://stackoverflow.com/q/42727935/155423\">Passing a Rust variable to a C function that expects to be able to modify it</a> and <a href=\"https://stackoverflow.com/q/24145823/155423\">How do I convert a C string into a Rust string and back via FFI?</a> should be sufficient."}, {"owner": {"reputation": 81656, "user_id": 8446, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/8f9c683775bfbe76ed4855a19b73dc81?s=128&d=identicon&r=PG", "display_name": "Roger Lipscombe", "link": "https://stackoverflow.com/users/8446/roger-lipscombe"}, "edited": false, "score": 1, "creation_date": 1526886504, "post_id": 50437953, "comment_id": 87901106, "body": "Yeah; they&#39;re <i>not</i> sufficient. There&#39;s a difference between a <code>char **</code> argument and a <code>char *</code> return value, and also between an <code>int *</code> argument and ` char **` argument. I&#39;m new to Rust; I have <i>no idea</i> how to combine them."}, {"owner": {"reputation": 81656, "user_id": 8446, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/8f9c683775bfbe76ed4855a19b73dc81?s=128&d=identicon&r=PG", "display_name": "Roger Lipscombe", "link": "https://stackoverflow.com/users/8446/roger-lipscombe"}, "edited": false, "score": 0, "creation_date": 1526886686, "post_id": 50437953, "comment_id": 87901179, "body": "&quot;would you care to show some of those attempts?&quot;; no, because they&#39;re not relevant. It&#39;s a simple question."}], "answers": [{"tags": [], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "is_accepted": true, "score": 4, "last_activity_date": 1526914544, "last_edit_date": 1592644375, "creation_date": 1526899830, "answer_id": 50447227, "question_id": 50437953, "link": "https://stackoverflow.com/questions/50437953/provide-char-argument-to-c-function-from-rust/50447227#50447227", "title": "Provide `char **` argument to C function from Rust?", "body": "<p>First of all, <a href=\"https://doc.rust-lang.org/beta/std/primitive.char.html\" rel=\"nofollow noreferrer\"><code>char</code> in Rust</a> is <strong>not</strong> the equivalent to a <a href=\"https://en.wikipedia.org/wiki/C_data_types#Basic_types\" rel=\"nofollow noreferrer\"><code>char</code> in C</a>:</p>\n<blockquote>\n<p>The <code>char</code> type represents a single character. More specifically, since 'character' isn't a well-defined concept in Unicode, <code>char</code> is a '<a href=\"http://www.unicode.org/glossary/#unicode_scalar_value\" rel=\"nofollow noreferrer\">Unicode scalar value</a>', which is similar to, but not the same as, a '<a href=\"http://www.unicode.org/glossary/#code_point\" rel=\"nofollow noreferrer\">Unicode code point</a>'.</p>\n</blockquote>\n<p>In Rust you may use <code>u8</code> or <code>i8</code> depending in the operating system. You can use <a href=\"https://doc.rust-lang.org/beta/std/os/raw/type.c_char.html\" rel=\"nofollow noreferrer\"><code>std::os::raw::c_char</code></a> for this:</p>\n<blockquote>\n<p>Equivalent to C's <code>char</code> type.</p>\n<p><a href=\"https://en.wikipedia.org/wiki/C_data_types#Basic_types\" rel=\"nofollow noreferrer\">C's <code>char</code> type</a> is completely unlike <a href=\"https://doc.rust-lang.org/beta/std/primitive.char.html\" rel=\"nofollow noreferrer\">Rust's <code>char</code> type</a>; while Rust's type represents a unicode scalar value, C's <code>char</code> type is just an ordinary integer. This type will always be either <code>i8</code> or <code>u8</code>, as the type is defined as being one byte long.</p>\n<p>C chars are most commonly used to make C strings. Unlike Rust, where the length of a string is included alongside the string, C strings mark the end of a string with the character <code>'\\0'</code>. See <a href=\"https://doc.rust-lang.org/beta/std/ffi/struct.CStr.html\" rel=\"nofollow noreferrer\"><code>CStr</code></a> for more information.</p>\n</blockquote>\n<p>First, we need a variable, which can be passed to the function:</p>\n<pre><code>let mut ptr: *const c_char = std::mem::uninitialized();\n</code></pre>\n<p>To pass it as <code>*mut</code> you simply can use a reference:</p>\n<pre><code>get_string(&amp;mut ptr);\n</code></pre>\n<p>Now use the <code>*const c_char</code> for creating a <a href=\"https://doc.rust-lang.org/beta/std/ffi/struct.CStr.html\" rel=\"nofollow noreferrer\"><code>CStr</code></a>:</p>\n<pre><code>let c_str = CStr::from_ptr(ptr);\n</code></pre>\n<p>For converting it to a <code>String</code> you can choose:</p>\n<pre><code>c_str.to_string_lossy().to_string()\n</code></pre>\n<p>or</p>\n<pre><code>c_str().to_str().unwrap().to_string()\n</code></pre>\n<p>However, you shouldn't use <code>String</code> if you don't really need to. In most scenarios, a <a href=\"https://doc.rust-lang.org/std/borrow/enum.Cow.html\" rel=\"nofollow noreferrer\"><code>Cow&lt;str&gt;</code></a> fulfills the needs. It can be obtained with <code>c_str.to_string_lossy()</code>:</p>\n<blockquote>\n<p>If the contents of the <code>CStr</code> are valid UTF-8 data, this function will return a <code>Cow::Borrowed([&amp;str])</code> with the the corresponding <code>[&amp;str]</code> slice. Otherwise, it will replace any invalid UTF-8 sequences with <code>U+FFFD REPLACEMENT CHARACTER</code> and return a <code>Cow::[Owned](String)</code> with the result.</p>\n</blockquote>\n<p>You can see this in action on the <a href=\"https://play.rust-lang.org/?gist=578f81f8830f7d6cb7dc3224ddfe6ab0&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">Playground</a>. <a href=\"https://play.rust-lang.org/?gist=be54841578572384bd721194c044d963&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">This Playground</a> shows the usage with <code>to_string_lossy()</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 0, "last_activity_date": 1526911140, "creation_date": 1526911140, "answer_id": 50450545, "question_id": 50437953, "link": "https://stackoverflow.com/questions/50437953/provide-char-argument-to-c-function-from-rust/50450545#50450545", "title": "Provide `char **` argument to C function from Rust?", "body": "<p>Combine <a href=\"https://stackoverflow.com/q/42727935/155423\">Passing a Rust variable to a C function that expects to be able to modify it</a></p>\n\n<pre><code>unsafe { \n    let mut c_buf = std::ptr::null();\n    get_string(&amp;mut c_buf);\n}\n</code></pre>\n\n<p>With <a href=\"https://stackoverflow.com/q/24145823/155423\">How do I convert a C string into a Rust string and back via FFI?</a>:</p>\n\n<pre><code>extern crate libc;\n\nuse libc::c_char;\nuse std::ffi::CStr;\nuse std::str;\n\nextern \"C\" {\n    fn get_string(s: *mut *const c_char);\n}\n\nfn main() {\n    unsafe {\n        let mut c_buf = std::ptr::null();\n        get_string(&amp;mut c_buf);\n        let c_str = CStr::from_ptr(c_buf);\n        let str_slice: &amp;str = c_str.to_str().unwrap();\n        let str_buf: String = str_slice.to_owned(); // if necessary\n    };\n}\n</code></pre>\n"}], "owner": {"reputation": 81656, "user_id": 8446, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/8f9c683775bfbe76ed4855a19b73dc81?s=128&d=identicon&r=PG", "display_name": "Roger Lipscombe", "link": "https://stackoverflow.com/users/8446/roger-lipscombe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1474, "favorite_count": 0, "accepted_answer_id": 50447227, "answer_count": 2, "score": 1, "last_activity_date": 1598643067, "creation_date": 1526839821, "question_id": 50437953, "link": "https://stackoverflow.com/questions/50437953/provide-char-argument-to-c-function-from-rust", "title": "Provide `char **` argument to C function from Rust?", "body": "<p>I've got a C function that (simplified) looks like this:</p>\n\n<pre><code>static char buffer[13];\n\nvoid get_string(const char **s) {\n    sprintf(buffer, \"Hello World!\");\n    *s = buffer;\n}\n</code></pre>\n\n<p>I've declared it in Rust:</p>\n\n<pre><code>extern pub fn get_string(s: *mut *const c_char);\n</code></pre>\n\n<p>But I can't figure out the required incantation to call it, and convert the result to a Rust string. Everything I've tried either fails to compile, or causes a SEGV.</p>\n\n<p>Any pointers?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 12, "last_activity_date": 1555010855, "last_edit_date": 1555010855, "creation_date": 1526839195, "answer_id": 50437859, "question_id": 50437732, "link": "https://stackoverflow.com/questions/50437732/how-do-i-convert-a-usize-to-a-u32-using-tryfrom/50437859#50437859", "title": "How do I convert a usize to a u32 using TryFrom?", "body": "<p>Since this answer was created, <a href=\"https://github.com/rust-lang/rust/pull/51564\" rel=\"nofollow noreferrer\">it was decided</a> to have the implementation of <code>TryFrom&lt;usize&gt;</code> always allow for the possibility of failure, regardless of the current platform. The original code now compiles successfully in Rust 1.34. </p>\n\n<h1>Original answer</h1>\n\n<blockquote>\n  <p>having <code>TryFrom&lt;usize&gt;</code> for <code>u32</code> is dependent on having <code>From&lt;usize&gt;</code> for <code>u32</code>, which seems somewhat strange to me</p>\n</blockquote>\n\n<p>This is because there's a blanket implementation of <code>TryFrom</code> for anything that implements <code>From</code>:</p>\n\n<pre><code>impl&lt;T, U&gt; TryFrom&lt;U&gt; for T\nwhere\n    T: From&lt;U&gt;,\n{\n    type Error = !;\n}\n</code></pre>\n\n<p>As you mentioned, since Rust supports platforms where the native integer length is 16, 32, or 64 bits, having such an implementation of <code>From</code> / <code>Into</code> would not be lossless on some of these platforms. </p>\n\n<p>This error occurs because there's no direct implementation of <code>TryFrom</code> / <code>TryInto</code> for these types. This is because users of these traits prefer that the implementations be infallible when platform-appropriate (The <code>type Error = !</code>). </p>\n\n<p>There is a separate <a href=\"https://github.com/rust-lang/rust/issues/49415\" rel=\"nofollow noreferrer\">tracking issue 49415</a> specifically for deciding this issue. </p>\n\n<blockquote>\n  <p>I think that I can write my own function that does the conversion</p>\n</blockquote>\n\n<p>Yes, that is what you should do. Something like this untested piece of code:</p>\n\n<pre><code>use std::u32;\n\nstruct SomeError;\n\n// usize is a u16 or u32, which always fits in a u32\n#[cfg(any(target_pointer_width = \"16\", target_pointer_width = \"32\"))]\nfn my_thing(a: usize) -&gt; Result&lt;u32, SomeError&gt; {\n    Ok(a as u32)\n}\n\n// usize is a u64, which might be too big\n#[cfg(target_pointer_width = \"64\")]\nfn my_thing(a: usize) -&gt; Result&lt;u32, SomeError&gt; {\n    if a &gt; u32::MAX as usize {\n        Err(SomeError)\n    } else {\n        Ok(a as u32)\n    }\n}\n</code></pre>\n\n<blockquote>\n  <p>I would be surprised if Rust doesn't have some idiomatic way to do this conversion. <code>usize</code> and <code>u32</code> are two basic types, after all.</p>\n</blockquote>\n\n<p>The problem is that <code>usize</code> isn't really a \"basic\" type because it changes size depending on the target platform. Getting this correct, performant <strong>and</strong> ergonomic is not easy.</p>\n"}], "owner": {"reputation": 549, "user_id": 4275937, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/49b88e050dd8cc0e4dbbe301ccecd40d?s=128&d=identicon&r=PG&f=1", "display_name": "real", "link": "https://stackoverflow.com/users/4275937/real"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 6708, "favorite_count": 0, "accepted_answer_id": 50437859, "answer_count": 1, "score": 10, "last_activity_date": 1617739735, "creation_date": 1526838419, "last_edit_date": 1526839386, "question_id": 50437732, "link": "https://stackoverflow.com/questions/50437732/how-do-i-convert-a-usize-to-a-u32-using-tryfrom", "title": "How do I convert a usize to a u32 using TryFrom?", "body": "<p>I want to convert a <code>usize</code> typed variable into a <code>u32</code> typed variable in Rust. I am aware that the <code>usize</code> variable might contain a value larger than 2^32, and in that case the conversion should fail. I am trying to use the <code>TryFrom</code> trait to perform the conversion.</p>\n\n<p>This is a simple example (Nightly Rust, <a href=\"https://play.rust-lang.org/?gist=281307fc542247e4c17ce43a1cbf6292&amp;version=nightly&amp;mode=debug\" rel=\"noreferrer\">Playground</a>):</p>\n\n<pre><code>#![feature(try_from)]\nuse std::convert::TryFrom;\n\nfn main() {\n    let a: usize = 0x100;\n    let res = u32::try_from(a);\n    println!(\"res = {:?}\", res);\n}\n</code></pre>\n\n<p>The code doesn't compile, with the following compilation error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `u32: std::convert::From&lt;usize&gt;` is not satisfied\n --&gt; src/main.rs:6:15\n  |\n6 |     let res = u32::try_from(a);\n  |               ^^^^^^^^^^^^^ the trait `std::convert::From&lt;usize&gt;` is not implemented for `u32`\n  |\n  = help: the following implementations were found:\n            &lt;u32 as std::convert::From&lt;std::net::Ipv4Addr&gt;&gt;\n            &lt;u32 as std::convert::From&lt;u8&gt;&gt;\n            &lt;u32 as std::convert::From&lt;char&gt;&gt;\n            &lt;u32 as std::convert::From&lt;u16&gt;&gt;\n  = note: required because of the requirements on the impl of `std::convert::TryFrom&lt;usize&gt;` for `u32`\n</code></pre>\n\n<p>I deduce from the compilation error that having <code>TryFrom&lt;usize&gt;</code> for <code>u32</code> is dependent on having <code>From&lt;usize&gt;</code> for <code>u32</code>, which seems somewhat strange to me.</p>\n\n<p>Is there any other way I could utilize <code>TryFrom</code> to convert from <code>usize</code> to <code>u32</code>? If not, is there any other idiomatic way to perform this conversion?</p>\n\n<p>I know that I can use the <code>as</code> keyword, but it doesn't notify me if something went wrong with the conversion. In addition, I think that I can write my own function that does the conversion, but I would be surprised if Rust doesn't have some idiomatic way to do this conversion. <code>usize</code> and <code>u32</code> are two basic types, after all.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1526833889, "post_id": 50436963, "comment_id": 87888040, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/25877285/155423\">How to disable unused code warnings in Rust?</a>. TL;DR: <code>let _ = foo()</code>. If you disagree, please <a href=\"https://stackoverflow.com/posts/50436963/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 131, "user_id": 4492422, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-hbWz8DRYJrw/AAAAAAAAAAI/AAAAAAAAOsU/i9YYnpAnzx4/photo.jpg?sz=128", "display_name": "Robert Jacobson", "link": "https://stackoverflow.com/users/4492422/robert-jacobson"}, "edited": false, "score": 0, "creation_date": 1598740160, "post_id": 50436963, "comment_id": 112558711, "body": "I believe this question is incorrectly marked as a duplicate of two other questions. It is related only in the sense that they are about silencing warnings. This question is specifically about a case for which a single line <code>allow</code> does not work. No answer in the other questions addresses this."}], "owner": {"reputation": 657, "user_id": 2547570, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/66ac34b6d04aa0bf9c738ef391c8b722?s=128&d=identicon&r=PG", "display_name": "mq7", "link": "https://stackoverflow.com/users/2547570/mq7"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1969, "favorite_count": 1, "closed_date": 1526835043, "answer_count": 0, "score": 5, "last_activity_date": 1526902435, "creation_date": 1526833443, "last_edit_date": 1526902435, "question_id": 50436963, "link": "https://stackoverflow.com/questions/50436963/allowunused-must-use-for-one-line", "closed_reason": "Duplicate", "title": "#[allow(unused_must_use)] for one line", "body": "<p>I have lines that return <code>Result</code>. The result does not matter and I don't want <code>unwrap()</code> or any logging. (The frequent failures are expected)</p>\n\n<p>How can I silence the unused warnings for only these lines?</p>\n\n<p><code>#[allow(unused_must_use)]</code> seems to work when applied to fn level, but this does not work:</p>\n\n<pre><code>#[allow(unused_must_use)]\nstd::fs::remove_file(&amp;path1);\n#[allow(unused_must_use)]\nstd::fs::remove_file(&amp;path2);\n</code></pre>\n\n<p><strong>Edit:</strong>\nwhile <code>let _ = ..</code> works as a workaround, <code>#[allow(unused..)]</code> specifically exists for this case, and the compiler also suggests to use it. Reading <code>let _ = ..</code> adds another layer of thinking. (assign and then abandon) So I prefer <code>#[allow(..)]</code> although it is more verbose. (If I see <code>let _ = ..</code> frequent enough and I get used to it, I may change my preference)</p>\n\n<p>So I searched around and found some codes that apply macros to the statement level.\nThis question asks for why <code>#[allow(unused_must_use)]</code> for a line doesn't work-- wrong syntax? bug? just unimplemented yet for <code>unused_must_use</code>?</p>\n\n<p><strong>Edit:</strong>\nAccording to this:</p>\n\n<p><a href=\"https://stackoverflow.com/questions/39269408/how-to-quiet-a-warning-for-a-single-statement-in-rust\">How to quiet a warning for a single statement in Rust?</a>\nMy code should work.</p>\n\n<p>Reading  these:</p>\n\n<p><a href=\"https://github.com/rust-lang/rust/issues/36675\" rel=\"noreferrer\">https://github.com/rust-lang/rust/issues/36675</a></p>\n\n<p><a href=\"https://github.com/rust-lang/rust/issues/15701\" rel=\"noreferrer\">https://github.com/rust-lang/rust/issues/15701</a></p>\n\n<p>I tried the allow on the scope level and it worked.</p>\n\n<pre><code>#[allow(unused_must_use)] {\n    std::fs::remove_file(&amp;path1);\n    std::fs::remove_file(&amp;path2);\n}\n</code></pre>\n"}, {"tags": ["enums", "rust"], "comments": [{"owner": {"reputation": 14766, "user_id": 27779, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/b3c28efaa2a3b032a91632e8984cb477?s=128&d=identicon&r=PG", "display_name": "Gregory Higley", "link": "https://stackoverflow.com/users/27779/gregory-higley"}, "edited": false, "score": 5, "creation_date": 1526830055, "post_id": 50436337, "comment_id": 87886884, "body": "You should use lowercase for the names of local variables and for the names of methods and functions. For instance <code>let R1</code> should be <code>let r1</code>. This won&#39;t fix your compiler error, but it is better Rust style."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1526830261, "creation_date": 1526830261, "answer_id": 50436447, "question_id": 50436337, "link": "https://stackoverflow.com/questions/50436337/why-cant-i-return-an-explicitly-typed-result-enum-from-a-function/50436447#50436447", "title": "Why can&#39;t I return an explicitly-typed Result enum from a function?", "body": "<p>Because that's a syntax error. The correct syntax uses the <em>turbofish</em> (<code>::&lt;&gt;</code>) on the <em>enum variant</em>:</p>\n\n<pre><code>std::result::Result::Ok::&lt;i32, std::string::String&gt;(100)\n</code></pre>\n\n<hr>\n\n<p>You also <em>shouldn't</em> use an explicit type unless you really need it \u2014 it's not idiomatic. Rust variables and functions use <code>snake_case</code>.</p>\n\n<pre><code>fn main() {\n    let r1 = test_result(10, 20);\n    match r1 {\n        Ok(value) =&gt; println!(\"{}\", value),\n        Err(error) =&gt; println!(\"{}\", error),\n    }\n}\n\nfn test_result(a1: i32, a2: i32) -&gt; Result&lt;i32, String&gt; {\n    if a1 &gt; a2 {\n        Ok(100)\n    } else {\n        Err(String::from(\"Error Happens!\"))\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 1227, "user_id": 1878565, "user_type": "registered", "accept_rate": 20, "profile_image": "https://i.stack.imgur.com/oMZ6l.png?s=128&g=1", "display_name": "Pole_Zhang", "link": "https://stackoverflow.com/users/1878565/pole-zhang"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1555, "favorite_count": 1, "accepted_answer_id": 50436447, "answer_count": 1, "score": 1, "last_activity_date": 1526830274, "creation_date": 1526829626, "last_edit_date": 1526830274, "question_id": 50436337, "link": "https://stackoverflow.com/questions/50436337/why-cant-i-return-an-explicitly-typed-result-enum-from-a-function", "title": "Why can&#39;t I return an explicitly-typed Result enum from a function?", "body": "<p>Simple code as below:</p>\n\n<pre><code>fn main() {\n    let R1 = TestResult(10, 20);\n    match R1 {\n        Ok(value) =&gt; println!(\"{}\", value),\n        Err(error) =&gt; println!(\"{}\", error),\n    }\n}\n\nfn TestResult(a1: i32, a2: i32) -&gt; Result&lt;i32, String&gt; {\n    if a1 &gt; a2 {\n        //Compile Pass\n        //Ok(100)\n\n        //Compile with error why ?\n        std::result::Result&lt;i32, std::string::String&gt;::Ok(100)\n    } else {\n        Err(String::from(\"Error Happens!\"))\n    }\n}\n</code></pre>\n\n<p>I get the error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: expected one of `!`, `.`, `::`, `;`, `?`, `{`, `}`, or an operator, found `,`\n  --&gt; src/main.rs:15:32\n   |\n15 |         std::result::Result&lt;i32, std::string::String&gt;::Ok(100)\n   |                                ^ expected one of 8 possible tokens here\n\nerror[E0423]: expected value, found enum `std::result::Result`\n  --&gt; src/main.rs:15:9\n   |\n15 |         std::result::Result&lt;i32, std::string::String&gt;::Ok(100)\n   |         ^^^^^^^^^^^^^^^^^^^\n   |\n   = note: did you mean to use one of the following variants?\n           - `std::result::Result::Err`\n           - `std::result::Result::Ok`\n\nerror[E0423]: expected value, found builtin type `i32`\n  --&gt; src/main.rs:15:29\n   |\n15 |         std::result::Result&lt;i32, std::string::String&gt;::Ok(100)\n   |                             ^^^ not a value\n\nerror[E0308]: mismatched types\n  --&gt; src/main.rs:15:9\n   |\n9  | fn TestResult(a1: i32, a2: i32) -&gt; Result&lt;i32, String&gt; {\n   |                                    ------------------- expected `std::result::Result&lt;i32, std::string::String&gt;` because of return type\n...\n15 |         std::result::Result&lt;i32, std::string::String&gt;::Ok(100)\n   |         ^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::result::Result`, found bool\n   |\n   = note: expected type `std::result::Result&lt;i32, std::string::String&gt;`\n              found type `bool`\n</code></pre>\n\n<p>I'm using Rust 1.26.0.</p>\n"}, {"tags": ["types", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1526825165, "post_id": 50435553, "comment_id": 87885372, "body": "Specifically <a href=\"https://stackoverflow.com/a/19076878/155423\">this answer</a> does exactly what you want."}], "answers": [{"tags": [], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "is_accepted": false, "score": 7, "last_activity_date": 1526824974, "creation_date": 1526824974, "answer_id": 50435616, "question_id": 50435553, "link": "https://stackoverflow.com/questions/50435553/convert-u8-to-string/50435616#50435616", "title": "Convert &amp;[u8] to String", "body": "<p>It's working with <a href=\"https://doc.rust-lang.org/std/str/fn.from_utf8.html\" rel=\"noreferrer\"><code>std::str::from_utf8</code></a>:</p>\n\n<pre><code>std::str::from_utf8(byte_array).unwrap().to_string();\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=1bf9314ca311992e1bdec327ad1faa51&amp;version=stable&amp;mode=debug\" rel=\"noreferrer\">Playground</a></p>\n"}], "owner": {"reputation": 3502, "user_id": 2558108, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/DUiG3.jpg?s=128&g=1", "display_name": "Qwertie", "link": "https://stackoverflow.com/users/2558108/qwertie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4317, "favorite_count": 1, "closed_date": 1526824926, "answer_count": 1, "score": 6, "last_activity_date": 1526824974, "creation_date": 1526824486, "question_id": 50435553, "link": "https://stackoverflow.com/questions/50435553/convert-u8-to-string", "closed_reason": "Duplicate", "title": "Convert &amp;[u8] to String", "body": "<p>I have a byte array which I would like to return as <code>std::string::String</code>. The other answers and docs I found were converting Vectors to strings. </p>\n\n<p>How would I convert a byte array <code>&amp;[u8]</code> to a <code>String</code>?</p>\n"}, {"tags": ["c", "linker", "rust", "embedded", "ffi"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1526833867, "post_id": 50433610, "comment_id": 87888037, "body": "can you post <code>nm librust.a</code> ? and your <code>Cargo.toml</code> ? And how do you link you program ?"}, {"owner": {"reputation": 311, "user_id": 8070904, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2e2cc3ccbae5a59a2ddf4df942d1835?s=128&d=identicon&r=PG&f=1", "display_name": "chocol4te", "link": "https://stackoverflow.com/users/8070904/chocol4te"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1526835563, "post_id": 50433610, "comment_id": 87888535, "body": "I&#39;ve added the output of nm and my Cargo.toml is as default except for &quot;crate-type = [&quot;staticlib&quot;]&quot;. arm-none-eabi-ld is the linker, using ordinary Makefiles. The <a href=\"https://github.com/numworks/epsilon/blob/master/build/toolchain.arm-gcc.mak\" rel=\"nofollow noreferrer\">flags are here</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1526846446, "post_id": 50433610, "comment_id": 87891805, "body": "Can you share your complete linking command line? Also try swapping the order of your code and the Rust static library when linking."}], "answers": [{"tags": [], "owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "is_accepted": true, "score": 3, "last_activity_date": 1526934195, "last_edit_date": 1526934195, "creation_date": 1526921928, "answer_id": 50453432, "question_id": 50433610, "link": "https://stackoverflow.com/questions/50433610/multiple-definition-of-memcmp-error-when-linking-rust-staticlib-with-embedded/50453432#50453432", "title": "&quot;multiple definition of `memcmp&quot; error when linking Rust staticlib with embedded C program", "body": "<p>You have a bunch of duplicated symbols coming from your customized \"standard library\" <code>liba</code> and from generated <em>builtin</em> symbols inserted into <code>librust.a</code>:</p>\n\n<pre><code>memset, memcpy, memmove, ecc, ecc\n</code></pre>\n\n<p>Your problem arises because the order of object files matters when linking.</p>\n\n<p>If you put <code>librust.a</code> too early in the ordered sequence of files to link, then files before <code>librust.a</code> will resolve symbols from <code>librust.a</code> and files coming after <code>librust.a</code> will resolve the same symbols from <code>liba</code> and this generates duplicate symbol errors.   </p>\n\n<p>To avoid this problem, put the Rust library at the end of object files to link.</p>\n\n<p>In epsilon Makefile change the link commands as:</p>\n\n<pre><code>RUST_LIB_DIR = &lt;path_to_librust.a&gt;\n\n.SECONDARY: $(objs)\n%.$(EXE):\n    @echo \"LD      $@\"\n    $(Q) $(LD) $^ $(LDFLAGS) -L$(RUST_LIB_DIR) -l:librust.a -o $@ \n</code></pre>\n\n<p>This recipe links successfully on my side.\nMy basic <code>epsilon/apps/main.cpp</code> instrumentation:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>#include \"global_preferences.h\"\n#include \"apps_container_storage.h\"\n\nextern \"C\" int hello_world(int a, int b);\n\nvoid ion_main(int argc, char * argv[]) {\n\n  hello_world(1,2);\n  ...\n</code></pre>\n"}], "owner": {"reputation": 311, "user_id": 8070904, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2e2cc3ccbae5a59a2ddf4df942d1835?s=128&d=identicon&r=PG&f=1", "display_name": "chocol4te", "link": "https://stackoverflow.com/users/8070904/chocol4te"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1052, "favorite_count": 0, "accepted_answer_id": 50453432, "answer_count": 1, "score": 5, "last_activity_date": 1526934195, "creation_date": 1526810425, "last_edit_date": 1526835674, "question_id": 50433610, "link": "https://stackoverflow.com/questions/50433610/multiple-definition-of-memcmp-error-when-linking-rust-staticlib-with-embedded", "title": "&quot;multiple definition of `memcmp&quot; error when linking Rust staticlib with embedded C program", "body": "<p>I have a Rust function I would like to call from a <a href=\"http://github.com/numworks/epsilon\" rel=\"nofollow noreferrer\">C project</a> that runs on an STM32F412 MCU, but I am getting a series of \"multiple definition of\" linker errors.</p>\n\n<p>Here is my lib.rs: </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#![crate_type = \"staticlib\"]\n#![feature(lang_items)]\n#![no_std]\n#![no_builtins]\n\n#[no_mangle]\npub extern \"C\" fn hello_world(a: i32, b: i32) -&gt; i32 {\n    a + b\n}\n\n#[lang = \"eh_personality\"] extern fn eh_personality() {}\n#[lang = \"panic_fmt\"] fn panic_fmt() -&gt; ! { loop {} }\n</code></pre>\n\n<p>Building with <code>cargo build --release --target=thumbv7em-none-eabihf</code> produces a <code>librust.a</code> which I added as an object to the C Makefile. </p>\n\n<p>The complete list of linker errors can be <a href=\"https://pastebin.com/raw/bqiKyvTw\" rel=\"nofollow noreferrer\">found here</a>. <code>nm</code> shows all the conflicting functions as global text symbols (T), <a href=\"https://pastebin.com/raw/1MYBPCCq\" rel=\"nofollow noreferrer\">full output here</a>.</p>\n\n<p>The C project does not have a normal standard C library, instead it uses a custom libc a device-specific implementation that covers a small portion of the standard. Can I tell the Rust library to use those functions?</p>\n\n<p>Reading through the Rust features list, there is <code>#![feature(compiler_builtins_lib)]</code> but this does the exact opposite of what I want, for if you are getting \"undefined reference to\" linker errors.</p>\n"}, {"tags": ["rust", "coredump"], "comments": [{"owner": {"reputation": 26680, "user_id": 1806780, "user_type": "registered", "accept_rate": 0, "profile_image": "https://i.stack.imgur.com/NCB41.jpg?s=128&g=1", "display_name": "Sami Kuhmonen", "link": "https://stackoverflow.com/users/1806780/sami-kuhmonen"}, "edited": false, "score": 4, "creation_date": 1526793814, "post_id": 50431910, "comment_id": 87878122, "body": "So you\u2019re saying your machine has like over a terabyte of memory?"}, {"owner": {"reputation": 158, "user_id": 5721092, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e77a5378e3cc6c8b2103953eb265023e?s=128&d=identicon&r=PG", "display_name": "CorruptComputer", "link": "https://stackoverflow.com/users/5721092/corruptcomputer"}, "reply_to_user": {"reputation": 26680, "user_id": 1806780, "user_type": "registered", "accept_rate": 0, "profile_image": "https://i.stack.imgur.com/NCB41.jpg?s=128&g=1", "display_name": "Sami Kuhmonen", "link": "https://stackoverflow.com/users/1806780/sami-kuhmonen"}, "edited": false, "score": 0, "creation_date": 1526793932, "post_id": 50431910, "comment_id": 87878148, "body": "Huh? I didn&#39;t say that anywhere here?"}, {"owner": {"reputation": 26680, "user_id": 1806780, "user_type": "registered", "accept_rate": 0, "profile_image": "https://i.stack.imgur.com/NCB41.jpg?s=128&g=1", "display_name": "Sami Kuhmonen", "link": "https://stackoverflow.com/users/1806780/sami-kuhmonen"}, "edited": false, "score": 0, "creation_date": 1526794051, "post_id": 50431910, "comment_id": 87878172, "body": "Your code does. You want to allocate an array of over 600 billion booleans. It takes a lot of memory. So first make that number a lot smaller and see if that\u2019s the problem."}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 5, "creation_date": 1526802670, "post_id": 50431910, "comment_id": 87879703, "body": "&quot;I thought rust was all about safety and avoiding core dumps?&quot; - No, it&#39;s about safety and avoiding undefined behavior. Sudden program aborts are safe and defined. Rust tries to minimize those, but they&#39;re by no means impossible. In many situations, there&#39;s simply nothing else to do that is safe."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 2, "creation_date": 1526804546, "post_id": 50431910, "comment_id": 87880127, "body": "Orthogonal to the actual problem: are you sure about <code>ln()</code> (aka. the natural logarithm) there? I have the feeling you meant <code>sqrt()</code> as there are plenty of non-prime numbers where there aren&#39;t any divisors smaller than <code>ln(n)</code>. Also note that your numeric types are a bit faulty: (a) why isn&#39;t your starting number <code>u64</code>? (b) not all numbers in <code>i64</code> or <code>u64</code> can be exactly represented as <code>f64</code>, so you&#39;ll loose precision. (c) You cast to <code>usize</code> at one point; you shouldn&#39;t use <code>usize</code> in these situations, but rather <code>u64</code>."}, {"owner": {"reputation": 504, "user_id": 7024293, "user_type": "registered", "accept_rate": 68, "profile_image": "https://lh3.googleusercontent.com/-_iHS8SMGqHA/AAAAAAAAAAI/AAAAAAAAAbE/HudebqQ1IF4/photo.jpg?sz=128", "display_name": "stevensonmt", "link": "https://stackoverflow.com/users/7024293/stevensonmt"}, "edited": false, "score": 0, "creation_date": 1526829690, "post_id": 50431910, "comment_id": 87886764, "body": "You may wish to look into using a segmented seive as outlined here: <a href=\"https://www.geeksforgeeks.org/segmented-sieve/\" rel=\"nofollow noreferrer\">geeksforgeeks.org/segmented-sieve</a>"}], "answers": [{"comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1526803910, "post_id": 50432178, "comment_id": 87879966, "body": "It might be worth stating the actual problem (specifically that OP is trying to allocate around 600GiB) in the beginning of your answer... which might be obvious to you, but not necessarily to other people (including OP). I also don&#39;t quite get, why you&#39;re naming the amount of memory in octets. At least I never cared about the number of octets and I don&#39;t think it&#39;s a very intuitive unit."}, {"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1526807306, "post_id": 50432178, "comment_id": 87880781, "body": "@LukasKalbertodt: Bytes isn\u2019t a very intuitive unit?"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1526811698, "post_id": 50432178, "comment_id": 87881793, "body": "@LukasKalbertodt I believe that Stargateur wanted to avoid the use of &quot;byte&quot; here, because in C and C++, a byte isn&#39;t necessarily composed of 8 bits. Still, since this isn&#39;t C nor C++, a more human-readable measure would have been fine."}, {"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 2, "creation_date": 1526811977, "post_id": 50432178, "comment_id": 87881868, "body": "@E_net4: I think it\u2019s because it\u2019s the French word for byte."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 2, "creation_date": 1526814312, "post_id": 50432178, "comment_id": 87882434, "body": "@Stargateur Ah ok, I misunderstood. But then you have a small error: <code>Vec&lt;bool&gt;</code> occupies exactly as many bytes as <code>Vec&lt;u8&gt;</code> with the same number of elements. <code>Vec&lt;bool&gt;</code> isn&#39;t specialized as <code>std::vector&lt;bool&gt;</code>. So no need to divide by 8. And yes, I think &quot;bytes&quot; would be easier to understand :P"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1526817157, "post_id": 50432178, "comment_id": 87883173, "body": "@Ry-: I confirm it&#39;s French for the word byte, and that Stargateur is French ;) I approved Jan&#39;s edit to switch to byte, should be easier to read for non-French folks now ^^"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1526830678, "post_id": 50432178, "comment_id": 87887084, "body": "<i>that rust don&#39;t optimize the size</i> \u2014 it cannot while still allowing mutable references to elements. If you need the space savings you use a <code>BitVec</code>"}, {"owner": {"reputation": 158, "user_id": 5721092, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e77a5378e3cc6c8b2103953eb265023e?s=128&d=identicon&r=PG", "display_name": "CorruptComputer", "link": "https://stackoverflow.com/users/5721092/corruptcomputer"}, "edited": false, "score": 0, "creation_date": 1526836189, "post_id": 50432178, "comment_id": 87888724, "body": "Ah, I have never had to think about memory when programming anything. Its always just been &#39;enough&#39; and worked. So when this happened I didn&#39;t even think of that, thanks!"}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 5, "last_activity_date": 1526833098, "last_edit_date": 1526833098, "creation_date": 1526796809, "answer_id": 50432178, "question_id": 50431910, "link": "https://stackoverflow.com/questions/50431910/why-does-creating-and-writing-to-a-very-large-vector-cause-a-core-dump/50432178#50432178", "title": "Why does creating and writing to a very large vector cause a core dump?", "body": "<p>The problem is that you run out of memory.</p>\n\n<p>A lot of operating systems are \"lazy\" to allocate memory. This means that the OS will not actually allocate the real amount of memory you ask for until you use it. You are asking for at least <code>75 106 434 393</code> <a href=\"https://en.wikipedia.org/wiki/Octet_(computing)\" rel=\"nofollow noreferrer\">octets</a> (a.k.a. 70 Gio) but <a href=\"https://stackoverflow.com/a/43717473/7076153\">Rust don't optimize the size of <code>Vec&lt;bool&gt;</code></a>, so you are asking for <code>600 851 475 143</code> bytes (a.k.a. 600 GiB) \u2014 your OS must not have found enough memory.</p>\n\n<p>It's an error that your OS can't handle because it already told you \"OK\" when you asked for the memory. It's a critical error, so it ends your process with a core dump.</p>\n\n<blockquote>\n  <p>I thought Rust was all about safety and avoiding core dumps?</p>\n</blockquote>\n\n<p>A core dump doesn't necessarily imply that your program is not safe. As you see, your program didn't do an out of bounds memory access, it just doesn't have enough memory. It's the best way to handle this error from your OS point of view and there is nothing unsafe according to the definition of safe in Rust.</p>\n\n<hr>\n\n<p>BTW, on my machine (archlinux), your program is simply killed:</p>\n\n<blockquote>\n  <pre class=\"lang-none prettyprint-override\"><code>[1]    4901 killed     cargo run\n</code></pre>\n</blockquote>\n"}], "owner": {"reputation": 158, "user_id": 5721092, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e77a5378e3cc6c8b2103953eb265023e?s=128&d=identicon&r=PG", "display_name": "CorruptComputer", "link": "https://stackoverflow.com/users/5721092/corruptcomputer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 164, "favorite_count": 0, "accepted_answer_id": 50432178, "answer_count": 1, "score": -1, "last_activity_date": 1526833098, "creation_date": 1526793654, "last_edit_date": 1526825644, "question_id": 50431910, "link": "https://stackoverflow.com/questions/50431910/why-does-creating-and-writing-to-a-very-large-vector-cause-a-core-dump", "title": "Why does creating and writing to a very large vector cause a core dump?", "body": "<p>I'm creating a Sieve of Eratosthenes so I can see all the prime numbers up to the starting number. Just the following code causes a core dump on Rust 1.26. There are no compiler warnings or errors, and the core dump isn't very helpful either with no error message. </p>\n\n<pre><code>fn main() {\n    let starting_number: i64 = 600851475143;\n    let mut primes = vec![true; 600851475143];\n\n    primes[0] = false;\n    primes[1] = false;\n\n    for i in 2..((starting_number as f64).ln() as usize) {\n        if primes[i] {\n            let mut j = i + i;\n            while j &lt; primes.len() {\n                primes[j] = false;\n                j += i;\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>I thought Rust was all about safety and avoiding core dumps? Is this a legit error with my code which isn't caught by the compiler or something different?</p>\n"}, {"tags": ["rust", "undefined-behavior", "unsafe"], "comments": [{"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1526802905, "post_id": 50431702, "comment_id": 87879746, "body": "I think, though I&#39;m not sure, that Rust&#39;s aliasing rules would make this undefined behavior. If the compiler doesn&#39;t see an <code>UnsafeCell</code>, it&#39;s going to assume no aliasing can happen."}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "reply_to_user": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1526805662, "post_id": 50431702, "comment_id": 87880406, "body": "@SebastianRedl in the block where the mutation happens there still is an <code>UnsafeCell</code>, so the knot tying part is perfectly fine."}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1526806233, "post_id": 50431702, "comment_id": 87880525, "body": "afaik: even if <code>ReallyImmutable</code> and <code>NotReallyImmutable</code> were <code>#[repr(C)]</code> neither <code>UnsafeCell</code> nor <code>Rc</code> have a defined reliable layout."}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1526806354, "post_id": 50431702, "comment_id": 87880560, "body": "also: transmuting means that the destructor will be called with a different type than the data was constructed with, same for memory allocation. Not sure whether this is explicitly said to be UB, but I don&#39;t think it is guaranteed to be safe in any way, even if the data layouts match perfectly."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1526816523, "post_id": 50431702, "comment_id": 87882993, "body": "@Stefan <i>&quot;neither UnsafeCell nor Rc have a defined reliable layout.&quot;</i> \u2014 <code>UnsafeCell</code> takes up zero (extra) space. I don&#39;t think it is feasible that a future version of Rust would change that."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1526817300, "post_id": 50431702, "comment_id": 87883214, "body": "I would definitely be uncomfortable going from <code>T</code> to <code>UnsafeCell&lt;T&gt;</code>... even in the absence of aliasing I could see the compiler making assumptions there."}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1526817542, "post_id": 50431702, "comment_id": 87883272, "body": "@PeterHall What currently works, what probably keeps working and what is guaranteed to keep working are separate things; afaict OP wants to know mainly about the last part. It would be nice though if we could rely on newtype wrappers (or plain 1-element tuples) to use the inner layout."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1526821056, "post_id": 50431702, "comment_id": 87884183, "body": "Seems like <code>#[repr(transparent)]</code> might specify this. <a href=\"https://github.com/rust-lang/rfcs/pull/1758\" rel=\"nofollow noreferrer\">PR #1758</a> and <a href=\"https://github.com/rust-lang/rust/issues/43036\" rel=\"nofollow noreferrer\">tracking issue</a>"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1526821824, "post_id": 50431702, "comment_id": 87884392, "body": "@Stefan Those arguments are equally valid for the more general question: &quot;is it safe to transmute between X and Y?&quot;. You can never be <i>certain</i> that layout won&#39;t change in the future, or that someone won&#39;t decide to implement <code>Drop</code>, so you should <i>never</i> use <code>transmute</code>! In this particular case, the Rust core developers are constrained - changing how <code>UnsafeCell</code> affects its data&#39;s layout would be a breaking change, and so would implementing <code>Drop</code> for <code>UnsafeCell</code>. If these two risks are the only concerns then this feels very safe."}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1526825639, "post_id": 50431702, "comment_id": 87885494, "body": "@PeterHall I don&#39;t see why changing the <code>UnsafeCell</code> data layout would be a breaking change; they made no promises about the layout afaict. Even if the newtype layout would be defined, they&#39;d still need to promise not to add more fields. But I&#39;d worry more about rust eliminating fields from a type that aren&#39;t used or optimizing the field order for different access patterns."}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1526826163, "post_id": 50431702, "comment_id": 87885647, "body": "Not an answer to the question, but imho a proper fix for the presented usecase: <a href=\"https://play.rust-lang.org/?gist=339d17192dc72da5736621b9b0d3af88\" rel=\"nofollow noreferrer\"><code>TieWeak</code> on playground, a weak pointer wrapper to tie the knot</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1526826277, "post_id": 50431702, "comment_id": 87885677, "body": "@Stefan you may wish to promote that to a full answer for the linked question (a far better place to save more complicated code like that)."}], "answers": [{"tags": [], "owner": {"reputation": 491, "user_id": 5282385, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2f909f7c0f578c26cc98852294a416cc?s=128&d=identicon&r=PG", "display_name": "Ralf Jung", "link": "https://stackoverflow.com/users/5282385/ralf-jung"}, "is_accepted": true, "score": 7, "last_activity_date": 1527010709, "creation_date": 1527010709, "answer_id": 50473572, "question_id": 50431702, "link": "https://stackoverflow.com/questions/50431702/is-it-safe-and-defined-behavior-to-transmute-between-a-t-and-an-unsafecellt/50473572#50473572", "title": "Is it safe and defined behavior to transmute between a T and an UnsafeCell&lt;T&gt;?", "body": "<p>(I am still new to SO and not sure if \"well, maybe\" qualifies as an answer, but here you go. ;)</p>\n\n<p>Disclaimer: The rules for these kinds of things are not (yet) set in stone. So, there is no definitive answer yet. I'm going to make some guesses based on (a) what kinds of compiler transformations LLVM does/we will eventually want to do, and (b) what kind of models I have in my head that would define the answer to this.</p>\n\n<p>Also, I see two parts to this: The data layout perspective, and the aliasing perspective.  The layout issue is that <code>NotReallyImmutable</code> could, in principle, have a totally different layout than <code>ReallyImmutable</code>.  I don't know much about data layout, but with <code>UnsafeCell</code> becoming <code>repr(transparent)</code> and that being the only difference between the two types, I think the <em>intent</em> is for this to work.  You are, however, relying on <code>repr(transparent)</code> being \"structural\" in the sense that it should allow you to replace things in larger types, which I am not sure has been written down explicitly anywhere. Sounds like a proposal for a follow-up RFC that extends the <code>repr(transparent)</code> guarantees appropriately?</p>\n\n<p>As far as aliasing is concerned, the issue is breaking the rules around <code>&amp;T</code>.  I'd say that, as long as you never have a live <code>&amp;T</code> around anywhere when writing through the <code>&amp;UnsafeCell&lt;T&gt;</code>, you are good -- but I don't think we can guarantee that quite yet.  Let's look in more detail.</p>\n\n<h2>Compiler perspective</h2>\n\n<p>The relevant optimizations here are the ones that exploit <code>&amp;T</code> being read-only.  So if you reordered the last two lines (<code>transmute</code> and the assignment), that code would likely be UB as we may want the compiler to be able to \"pre-fetch\" the value behind the shared reference and re-use that value later (i.e. after inlining this).</p>\n\n<p>But in your code, we would only emit \"read-only\" annotations (<code>noalias</code> in LLVM) after the <code>transmute</code> comes back, and the data is indeed read-only starting there.  So, this should be good.</p>\n\n<h2>Memory models</h2>\n\n<p>The \"most aggressive\" of my memory models essentially <a href=\"https://www.ralfj.de/blog/2017/07/17/types-as-contracts.html\" rel=\"noreferrer\">asserts that all values are always valid</a>, and I think even that model should be fine with your code. <code>&amp;UnsafeCell</code> is a special case in that model where validity just stops, and nothing is said about what lives behind this reference.  The moment the <code>transmute</code> returns, we grab the memory it points to and make it all read-only, and even if we did that \"recursively\" through the <code>Rc</code> (which my model doesn't, but only because I couldn't figure out a good way to make it do so) you'd be fine as you don't mutate any more after the <code>transmute</code>.  (As you may have noticed, this is the same restriction as in the compiler perspective.  The point of these models is to allow compiler optimizations, after all. ;)</p>\n\n<p>(As a side-note, I really wish miri was in better shape right now.  Seems I have to try and get validation to work again in there, because then I could tell you to just run your code in miri and it'd tell you if that version of my model is okay with what you are doing :D )</p>\n\n<p>I am thinking about other models currently that only check things \"on access\", but haven't worked out the <code>UnsafeCell</code> story for that model yet.  What this example shows is that the model may have to contain ways for a \"phase transition\" of memory first being <code>UnsafeCell</code>, but later having normal sharing with read-only guarantees. Thanks for bringing this up, that will make for some nice examples to think about!</p>\n\n<p>So, I think I can say that (at least from my side) there is the <em>intent</em> to allow this kind of code, and doing so does not seem to prevent any optimizations.  Whether we'll actually manage to find a model that everybody can agree with and that still allows this, I cannot predict.</p>\n\n<h1>The opposite direction: <code>T -&gt; UnsafeCell&lt;T&gt;</code></h1>\n\n<p>Now, this is more interesting.  The problem is that, as I said above, you must not have a <code>&amp;T</code> live when writing through an <code>UnsafeCell&lt;T&gt;</code>. But what does \"live\" mean here? That's a hard question!  In some of my models, this could be as weak as \"a reference of that type exists somewhere and the lifetime is still active\", i.e., it could have nothing to do with whether the reference is actually <em>used</em>.  (That's useful because it lets us do more optimizations, like moving a load out of a loop even if we cannot prove that the loop ever runs -- which would introduce a use of an otherwise unused reference.)  And since <code>&amp;T</code> is <code>Copy</code>, you cannot even really get rid of such a reference either.  So, if you have <code>x: &amp;T</code>, then after <code>let y: &amp;UnsafeCell&lt;T&gt; = transmute(x)</code>, the old <code>x</code> is still around and its lifetime still active, so writing through <code>y</code> could well be UB.</p>\n\n<p>I think you'd have to somehow restrict the aliasing that <code>&amp;T</code> allows, very carefully making sure that nobody still holds such a reference. I'm not going to say \"this is impossible\" because people keep surprising me (especially in this community ;) but TBH I cannot think of a way to make this work. I'd be curious if you have an example though where you think this is reasonable.</p>\n"}], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 311, "favorite_count": 2, "accepted_answer_id": 50473572, "answer_count": 1, "score": 8, "last_activity_date": 1527010709, "creation_date": 1526790962, "question_id": 50431702, "link": "https://stackoverflow.com/questions/50431702/is-it-safe-and-defined-behavior-to-transmute-between-a-t-and-an-unsafecellt", "title": "Is it safe and defined behavior to transmute between a T and an UnsafeCell&lt;T&gt;?", "body": "<p>A <a href=\"https://stackoverflow.com/q/50425910/155423\">recent question</a> was looking for the ability to construct self-referential structures. In discussing possible answers for the question, one potential answer involved using an <a href=\"https://doc.rust-lang.org/std/cell/struct.UnsafeCell.html\" rel=\"noreferrer\"><code>UnsafeCell</code></a> for interior mutability and then \"discarding\" the mutability through a <a href=\"https://doc.rust-lang.org/std/mem/fn.transmute.html\" rel=\"noreferrer\"><code>transmute</code></a>.</p>\n\n<p>Here's a small example of such an idea in action. I'm not deeply interested in the example itself, but it's just enough complication to require a bigger hammer like <code>transmute</code> as opposed to just using <a href=\"https://doc.rust-lang.org/std/cell/struct.UnsafeCell.html#new\" rel=\"noreferrer\"><code>UnsafeCell::new</code></a> and/or <a href=\"https://doc.rust-lang.org/std/cell/struct.UnsafeCell.html#method.into_inner\" rel=\"noreferrer\"><code>UnsafeCell::into_inner</code></a>:</p>\n\n<pre><code>use std::{\n    cell::UnsafeCell, mem, rc::{Rc, Weak},\n};\n\n// This is our real type.\nstruct ReallyImmutable {\n    value: i32,\n    myself: Weak&lt;ReallyImmutable&gt;,\n}\n\nfn initialize() -&gt; Rc&lt;ReallyImmutable&gt; {\n    // This mirrors ReallyImmutable but we use `UnsafeCell` \n    // to perform some initial interior mutation.\n    struct NotReallyImmutable {\n        value: i32,\n        myself: Weak&lt;UnsafeCell&lt;NotReallyImmutable&gt;&gt;,\n    }\n\n    let initial = NotReallyImmutable {\n        value: 42,\n        myself: Weak::new(),\n    };\n\n    // Without interior mutability, we couldn't update the `myself` field\n    // after we've created the `Rc`.\n    let second = Rc::new(UnsafeCell::new(initial));\n\n    // Tie the recursive knot \n    let new_myself = Rc::downgrade(&amp;second);\n\n    unsafe {\n        // Should be safe as there can be no other accesses to this field\n        (&amp;mut *second.get()).myself = new_myself;\n\n        // No one outside of this function needs the interior mutability\n        // TODO: Is this call safe?\n        mem::transmute(second)\n    }\n}\n\nfn main() {\n    let v = initialize();\n    println!(\"{} -&gt; {:?}\", v.value, v.myself.upgrade().map(|v| v.value))\n}\n</code></pre>\n\n<p>This code appears to print out what I'd expect, but that doesn't mean that it's safe or using defined semantics.</p>\n\n<p>Is transmuting from a <code>UnsafeCell&lt;T&gt;</code> to a <code>T</code> memory safe? Does it invoke undefined behavior? What about transmuting in the opposite direction, from a <code>T</code> to an <code>UnsafeCell&lt;T&gt;</code>?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 1, "last_activity_date": 1526778341, "last_edit_date": 1526778341, "creation_date": 1526769488, "answer_id": 50430110, "question_id": 50429582, "link": "https://stackoverflow.com/questions/50429582/log4rs-error-log4rsos-code-2-kind-notfound-message-no-such-file-or-dire/50430110#50430110", "title": "log4rs error Log4rs(Os { code: 2, kind: NotFound, message: &quot;No such file or directory&quot; })", "body": "<p>When you type <code>cargo run</code>, your working directory is the current directory. This means that all your relative paths will depend on this working directory.</p>\n\n<p>For example, if you are in your home directory (<code>~</code>) and you have your  project folder named <code>foo</code>. When you go in it, that gives you <code>~/foo</code>. If you now type <code>cargo run</code>, that means that when <code>log4rs</code> tries to open your file it will try to open the file <code>~/foo/log4rs.yml</code>. The file is not here but in <code>~/foo/src/log4rs.yml</code></p>\n\n<p>You have many solutions:</p>\n\n<ul>\n<li><code>log4rs::init_file(\"src/log4rs.yml\", Default::default()).unwrap();</code></li>\n<li>move <code>log4rs.yml</code> to <code>foo</code></li>\n<li>use an absolute path (not a good solution for your current case)</li>\n</ul>\n"}], "owner": {"reputation": 2260, "user_id": 5240970, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/16a645b64ff208b3ba9269dcf90305fd?s=128&d=identicon&r=PG&f=1", "display_name": "Kabard", "link": "https://stackoverflow.com/users/5240970/kabard"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 984, "favorite_count": 0, "accepted_answer_id": 50430110, "answer_count": 1, "score": 0, "last_activity_date": 1526778341, "creation_date": 1526764746, "last_edit_date": 1526778170, "question_id": 50429582, "link": "https://stackoverflow.com/questions/50429582/log4rs-error-log4rsos-code-2-kind-notfound-message-no-such-file-or-dire", "title": "log4rs error Log4rs(Os { code: 2, kind: NotFound, message: &quot;No such file or directory&quot; })", "body": "<p>I'm trying to implement log4rs by following <a href=\"https://docs.rs/log4rs/0.8.0/log4rs/\" rel=\"nofollow noreferrer\">the docs</a>. My goal is to put the result of <code>info!(\"INFO\")</code> into the file requests.log, but I get an error:</p>\n\n<blockquote>\n  <p>thread 'main' panicked at 'called <code>Result::unwrap()</code> on an <code>Err</code>\n  value: Log4rs(Os { code: 2, kind: NotFound, message: \"No such file or\n  directory\" })', libcore/result.rs:945:5</p>\n</blockquote>\n\n<p>I have the following files in the src folder:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>- main.rs\n- log4rs.yml\n- requests.log\n</code></pre>\n\n<p>main.rs:</p>\n\n<pre><code>#[macro_use]\nextern crate log;\nextern crate log4rs;\n\nfn main() {\n    println!(\"Hello, world!\");\n    log4rs::init_file(\"log4rs.yml\", Default::default()).unwrap();\n    info!(\"INFO\");\n}\n</code></pre>\n\n<p>the config file log4rs.yml:</p>\n\n<pre><code># Scan this file for changes every 30 seconds\nrefresh_rate: 30 seconds\n\nappenders:\n  # An appender named \"stdout\" that writes to stdout\n  stdout:\n    kind: console\n\n  # An appender named \"requests\" that writes to a file with a custom pattern encoder\n  requests:\n    kind: file\n    path: \"requests.log\"\n    encoder:\n      pattern: \"{d} - {m}{n}\"\n\n# Set the default logging level to \"warn\" and attach the \"stdout\" appender to the root\nroot:\n  level: warn\n  appenders:\n    - stdout\n\nloggers:\n  # Raise the maximum log level for events sent to the \"app::backend::db\" logger to \"info\"\n  app::backend::db:\n    level: info\n\n  # Route log events sent to the \"app::requests\" logger to the \"requests\" appender,\n  # and *not* the normal appenders installed at the root\n  app::requests:\n    level: info\n    appenders:\n      - requests\n    additive: false\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1526756005, "post_id": 50428447, "comment_id": 87871695, "body": "Don&#39;t you need to use OAUTH rather than simply <code>ClientSecurity::Required(tls_parameters)</code> with gmail?"}, {"owner": {"reputation": 199, "user_id": 8516499, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a589466ace74258641c9b2693ff0740d?s=128&d=identicon&r=PG&f=1", "display_name": "David", "link": "https://stackoverflow.com/users/8516499/david"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1526756103, "post_id": 50428447, "comment_id": 87871722, "body": "It works with other clients like Py, Nodemailer to send to 465 of gmail with just SSL turned on (no OAuth). I could not do same with this pkg."}, {"owner": {"reputation": 199, "user_id": 8516499, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a589466ace74258641c9b2693ff0740d?s=128&d=identicon&r=PG&f=1", "display_name": "David", "link": "https://stackoverflow.com/users/8516499/david"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1526758055, "post_id": 50428447, "comment_id": 87872188, "body": "I did it. For anyone with this problem: use Wrapper instead Required, use Protocol::Tlsv10 instead Protocol::Sslv3. It should work."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1526758301, "post_id": 50428447, "comment_id": 87872249, "body": "You can submit an answer to your own question if you have figured it out by yourself."}, {"owner": {"reputation": 199, "user_id": 8516499, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a589466ace74258641c9b2693ff0740d?s=128&d=identicon&r=PG&f=1", "display_name": "David", "link": "https://stackoverflow.com/users/8516499/david"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1526760257, "post_id": 50428447, "comment_id": 87872703, "body": "I will. Thanks."}], "answers": [{"tags": [], "owner": {"reputation": 199, "user_id": 8516499, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a589466ace74258641c9b2693ff0740d?s=128&d=identicon&r=PG&f=1", "display_name": "David", "link": "https://stackoverflow.com/users/8516499/david"}, "is_accepted": true, "score": 5, "last_activity_date": 1526778404, "last_edit_date": 1526778404, "creation_date": 1526760330, "answer_id": 50429054, "question_id": 50428447, "link": "https://stackoverflow.com/questions/50428447/send-to-smtp-gmail-com465-ssl-with-lettre-crate/50429054#50429054", "title": "Send to smtp.gmail.com:465 SSL with Lettre crate", "body": "<p>A working example:</p>\n\n<pre><code>extern crate env_logger;\nextern crate lettre;\nextern crate lettre_email;\nextern crate native_tls;\n\nuse lettre::smtp::authentication::{Credentials, Mechanism};\nuse lettre::smtp::ConnectionReuseParameters;\nuse lettre::smtp::SmtpTransportBuilder;\nuse lettre::{ClientSecurity, ClientTlsParameters, EmailTransport};\nuse lettre_email::EmailBuilder;\nuse native_tls::Protocol;\nuse native_tls::TlsConnector;\n\nfn main() {\n    env_logger::init();\n\n    let email = EmailBuilder::new()\n        .to((\"to@example.com\"))\n        .from(\"from@example.com\")\n        .subject(\"Example subject\")\n        .text(\"Example text\")\n        .build()\n        .unwrap();\n\n    pub const DEFAULT_TLS_PROT: &amp;[Protocol] = &amp;[Protocol::Tlsv10];\n\n    let mut tls_builder = TlsConnector::builder().unwrap();\n    tls_builder.supported_protocols(DEFAULT_TLS_PROT).unwrap();\n\n    let tls_parameters =\n        ClientTlsParameters::new(\"smtp.gmail.com\".to_string(), tls_builder.build().unwrap());\n\n    pub const SUBMISSION_PORT: u16 = 465;\n\n    let mut mailer = SmtpTransportBuilder::new(\n        (\"smtp.gmail.com\", SUBMISSION_PORT),\n        ClientSecurity::Wrapper(tls_parameters),\n    ).expect(\"Failed to create transport\")\n        .authentication_mechanism(Mechanism::Login)\n        .credentials(Credentials::new(\n            \"example\".to_string(),\n            \"example\".to_string(),\n        ))\n        .connection_reuse(ConnectionReuseParameters::ReuseUnlimited)\n        .build();\n\n    println!(\"{:?}\", mailer.send(&amp;email));\n\n    mailer.close();\n}\n</code></pre>\n\n<p>It's using</p>\n\n<pre><code>lettre = \"0.8\"\nlettre_email = \"0.8\"\n</code></pre>\n"}], "owner": {"reputation": 199, "user_id": 8516499, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a589466ace74258641c9b2693ff0740d?s=128&d=identicon&r=PG&f=1", "display_name": "David", "link": "https://stackoverflow.com/users/8516499/david"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 725, "favorite_count": 0, "accepted_answer_id": 50429054, "answer_count": 1, "score": 2, "last_activity_date": 1526778404, "creation_date": 1526755673, "question_id": 50428447, "link": "https://stackoverflow.com/questions/50428447/send-to-smtp-gmail-com465-ssl-with-lettre-crate", "title": "Send to smtp.gmail.com:465 SSL with Lettre crate", "body": "<p>I am unable to send to smtp servers on SSL.</p>\n\n<p>I'm using lettre \"0.8\".</p>\n\n<p>I have tried using SmtpTransportBuilder from lettre::smtp</p>\n\n<pre><code>use native_tls::TlsConnector;\nuse native_tls::{Protocol};\nuse lettre::smtp::authentication::{Credentials, Mechanism};\nuse lettre::{SimpleSendableEmail, EmailTransport, SmtpTransport, ClientTlsParameters, ClientSecurity};\nuse lettre::smtp::extension::ClientId;\nuse lettre::smtp::ConnectionReuseParameters;\nuse lettre::smtp::{SmtpTransportBuilder};\n\nfn main() {\n    env_logger::init();\n\n    let email = SimpleSendableEmail::new(\n        \"from@host.com\".to_string(),\n        &amp;[\"to@host.com\".to_string()],\n        \"message_id\".to_string(),\n        \"Hello world\".to_string(),\n    ).unwrap();\n\n    pub const DEFAULT_TLS_PROT: &amp;[Protocol] = &amp;[Protocol::Sslv3];\n\n    let mut tls_builder = TlsConnector::builder().unwrap();\n    tls_builder.supported_protocols(DEFAULT_TLS_PROT).unwrap();\n\n    let tls_parameters =\n        ClientTlsParameters::new(\"smtp.gmail.com\".to_string(), tls_builder.build().unwrap());\n\n    pub const SUBMISSION_PORT: u16 = 465;\n\n    let mut mailer = SmtpTransportBuilder::new((\"smtp.gmail.com\", SUBMISSION_PORT), ClientSecurity::Required(tls_parameters))\n        .authentication_mechanism(Mechanism::Login)\n        .credentials(Credentials::new(\"USER\".to_string(), \"PASS\".to_string()))\n        .connection_reuse(ConnectionReuseParameters::ReuseUnlimited)\n        .build();\n\n\n    let result_1 = mailer.send(&amp;email);\n    assert!(result_1.is_ok());\n\n    mailer.close();\n}\n</code></pre>\n\n<p>It freezes at <code>DEBUG 2018-05-19T18:45:09Z: lettre::smtp::client: connecting to 64.233.167.109:465</code> so it does not continue to AUTH.</p>\n"}, {"tags": ["rust", "state", "middleware", "rust-actix"], "answers": [{"tags": [], "owner": {"reputation": 154, "user_id": 7526741, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f9e7fc59fd903158f3127f1384139cf0?s=128&d=identicon&r=PG", "display_name": "Nikolay Kim", "link": "https://stackoverflow.com/users/7526741/nikolay-kim"}, "is_accepted": true, "score": 3, "last_activity_date": 1526777926, "last_edit_date": 1526777926, "creation_date": 1526756377, "answer_id": 50428541, "question_id": 50428385, "link": "https://stackoverflow.com/questions/50428385/application-state-access-from-an-actix-web-application-middleware/50428541#50428541", "title": "Application state access from an Actix web application middleware", "body": "<p>Use your state instead of <code>S</code>:</p>\n\n<pre><code>impl actix_web::middleware::Middleware&lt;::Application::State&gt; for Authenticator {\n}\n</code></pre>\n\n<p>By the way, middleware can have state too.</p>\n"}], "owner": {"reputation": 886, "user_id": 8170773, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/61b971ec934427a008d8b263ad4142b9?s=128&d=identicon&r=PG&f=1", "display_name": "hedgar2017", "link": "https://stackoverflow.com/users/8170773/hedgar2017"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1236, "favorite_count": 0, "accepted_answer_id": 50428541, "answer_count": 1, "score": 3, "last_activity_date": 1526777926, "creation_date": 1526755263, "last_edit_date": 1526756221, "question_id": 50428385, "link": "https://stackoverflow.com/questions/50428385/application-state-access-from-an-actix-web-application-middleware", "title": "Application state access from an Actix web application middleware", "body": "<p>I have a simple middleware intended to access the application's global state to perform validation of the authentication token:</p>\n\n<pre><code>use actix_web;\nuse actix_web::HttpMessage;\n\npub struct Authenticator;\n\nimpl&lt;S&gt; actix_web::middleware::Middleware&lt;S&gt; for Authenticator {\n    fn start(\n        &amp;self,\n        request: &amp;mut actix_web::HttpRequest&lt;S&gt;,\n    ) -&gt; actix_web::Result&lt;actix_web::middleware::Started&gt; {\n        //let _state = request.state() as &amp;::application::State;\n        match request.headers().get(\"Authentication\") {\n            Some(_) =&gt; Ok(actix_web::middleware::Started::Done),\n            None =&gt; Err(::view::error(\n                \"No authentication header provided\",\n                actix_web::http::StatusCode::FORBIDDEN,\n            )),\n        }\n    }\n}\n</code></pre>\n\n<p>The commented string shows how I tried to get the state. I have tried many ways actually. What is the best way of doing such stuff?</p>\n\n<p>I thought about adding a reference to needed data (e.g. <code>Arc</code>'d <code>RwLock</code>) to the <code>Authenticator</code> structure and constructing it with the reference when I register my middlewares.</p>\n\n<p>I am still not good with trait stuff, but there must be a clean way of casting the <code>S</code> type to my application-defined <code>State</code> structure:</p>\n\n<pre><code>pub struct State {\n    pub database: actix::Addr&lt;actix::Syn, ::database::Actor&gt;,\n    pub cache: ::std::sync::Arc&lt;::cache::Cache&gt;,\n    pub sessions: ::std::sync::Arc&lt;::session::Storage&gt;,\n}\n</code></pre>\n"}, {"tags": ["rust", "analysis", "rust-cargo"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1526743914, "post_id": 50426488, "comment_id": 87868270, "body": "That strange, it should work, <a href=\"https://github.com/rust-lang/rust/blob/8319ef5b78a10b3a8de4109bb8b0e6d23fbe4de1/src/bootstrap/bin/rustc.rs#L191\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/blob/&hellip;</a>"}, {"owner": {"reputation": 74890, "user_id": 246776, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/PZwCJ.jpg?s=128&g=1", "display_name": "eonil", "link": "https://stackoverflow.com/users/246776/eonil"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1526745149, "post_id": 50426488, "comment_id": 87868605, "body": "@Stargateur Yes strange, but it doesn&#39;t work. Maybe only for <code>rustc</code>, not <code>cargo</code>. FYI, I&#39;m using nightly <code>rustc 1.27.0-nightly (2f2a11dfc 2018-05-16)</code>."}], "answers": [{"tags": [], "owner": {"reputation": 74890, "user_id": 246776, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/PZwCJ.jpg?s=128&g=1", "display_name": "eonil", "link": "https://stackoverflow.com/users/246776/eonil"}, "is_accepted": false, "score": 1, "last_activity_date": 1526827207, "last_edit_date": 1526827207, "creation_date": 1526743749, "answer_id": 50426846, "question_id": 50426488, "link": "https://stackoverflow.com/questions/50426488/how-to-make-cargo-to-save-analysis/50426846#50426846", "title": "How to make cargo to save-analysis?", "body": "<p><a href=\"https://github.com/steveklabnik/rustdoc/blob/94f57807eae84207fc02e6855f118f2ba1636d0d/src/cargo.rs#L112\" rel=\"nofollow noreferrer\">Just do this</a> before calling <code>cargo build</code>.</p>\n\n<pre><code>export RUSTFLAGS=\"-Z save-analysis\"\n</code></pre>\n\n<hr>\n\n<p>Update</p>\n\n<p>Saved analysis data won't be loaded with default configuration of <code>AnalysisHost</code>. It's because <a href=\"https://github.com/nrc/rls-analysis/blob/08f5aad9143485d1d8b6f41e8c938764094d35f0/src/loader.rs#L83\" rel=\"nofollow noreferrer\"><code>CargoAnalysisLoader</code> tries to load data from non-default location</a>.</p>\n\n<p>To workaround, just move <code>save-analysis</code> directory to proper location.</p>\n\n<pre><code>target/debug/deps/save-analysis\ntarget/rls/debug/deps/save-analysis\n</code></pre>\n\n<ul>\n<li>Replace <code>debug</code> to <code>release</code> according to your build mode.</li>\n</ul>\n"}], "owner": {"reputation": 74890, "user_id": 246776, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/PZwCJ.jpg?s=128&g=1", "display_name": "eonil", "link": "https://stackoverflow.com/users/246776/eonil"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 347, "favorite_count": 1, "answer_count": 1, "score": 1, "last_activity_date": 1526827207, "creation_date": 1526741033, "last_edit_date": 1526741353, "question_id": 50426488, "link": "https://stackoverflow.com/questions/50426488/how-to-make-cargo-to-save-analysis", "title": "How to make cargo to save-analysis?", "body": "<p>How can I make cargo to <code>save-analysis</code>? I know that <a href=\"https://users.rust-lang.org/clicks/track?url=https%3A%2F%2Fgithub.com%2Fnrc%2Frls-analysis%2Fissues%2F76&amp;post_id=42801&amp;topic_id=11935\" rel=\"nofollow noreferrer\">I can do this with <code>rustc</code></a> by calling</p>\n\n<pre><code>rustc -Zsave-snalysis &lt;files...&gt;\n</code></pre>\n\n<p>But, I couldn't figure out for <code>cargo</code>. And also I like to know how I can read them back to <code>rls_analysis</code> data structures.</p>\n\n<p>I tried <a href=\"https://github.com/nrc/rust-dxr/issues/25\" rel=\"nofollow noreferrer\"><code>cargo rustc -Zsave-analysis</code></a>, but it doesn't seem to work.</p>\n\n<p>I also tried <a href=\"https://github.com/rust-lang/rust/pull/50022/files#diff-4bc384d35e57dc577b9378d4d733d7c3L760\" rel=\"nofollow noreferrer\"><code>export RUSTC_SAVE_ANALYSIS=api</code></a>, no work too.</p>\n\n<p>What I want to do is getting fully qualified path (e.g. <code>::foo1::foo2::Foo3</code>) to the types notated in source code. If there's other solution, please let me know that too.</p>\n"}, {"tags": ["reference", "rust", "smart-pointers"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1526845596, "post_id": 50425910, "comment_id": 87891576, "body": "&quot;after construction it will never be modified again&quot; -&gt; Does it have to be cleaned up before the end of the program? Because you <i>could</i> just leak it, and use <code>&amp;&#39;static</code> references instead of <code>Arc</code> and <code>Weak</code>."}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1526848985, "post_id": 50425910, "comment_id": 87892468, "body": "@trentcl While in my specific use case this would be possible, but it&#39;s no the same to leak the value. It would be possible to modify the <code>Arc</code> or has a wrong weak-count."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1526849478, "post_id": 50425910, "comment_id": 87892586, "body": "Yeah, you would use <code>Box</code> instead."}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1526849571, "post_id": 50425910, "comment_id": 87892617, "body": "@trentcl this would be a completly different scenario ;)"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1526850253, "post_id": 50425910, "comment_id": 87892841, "body": "The only real difference is that the <code>Arc</code> can be safely dropped. But yes, this was a comment, not an answer."}], "answers": [{"comments": [{"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 1, "creation_date": 1526774179, "post_id": 50425981, "comment_id": 87875558, "body": "I see, that internal mutability would be a clean approach, but it feels weird to use it just for creation of the object."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 1, "creation_date": 1526811336, "post_id": 50425981, "comment_id": 87881687, "body": "@Tim Since you said you didn&#39;t mind <code>unsafe</code> code, I have added another version which removes the interior mutability after construction."}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1526849809, "post_id": 50425981, "comment_id": 87892697, "body": "Thanks for the edit. Looking forward to an answer to <a href=\"https://stackoverflow.com/questions/50431702/is-it-safe-and-defined-behavior-to-transmute-between-a-t-and-an-unsafecellt\">Shepmasters Question on <code>UnsafeCell</code></a> :)"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 5, "last_activity_date": 1526816945, "last_edit_date": 1526816945, "creation_date": 1526737699, "answer_id": 50425981, "question_id": 50425910, "link": "https://stackoverflow.com/questions/50425910/how-to-create-a-cyclic-reference-with-arc-and-weak/50425981#50425981", "title": "How to create a cyclic reference with Arc and Weak?", "body": "<p><code>Arc::get_mut()</code> will fail if you have even existing <code>Weak</code> references so you need to consider using <em>interior mutability</em> instead. Since you are using <code>Arc</code>, I'll assume you are in a multi-threaded environment, so I'll use a <code>RwLock</code> which is thread-safe.</p>\n\n<pre><code>use std::sync::{Arc, Weak, RwLock};\nuse std::collections::HashMap;\n\nstruct A { \n    map: RwLock&lt;HashMap&lt;u32, Vec&lt;B&gt;&gt;&gt;,\n}\n\nstruct B {\n    weak: Weak&lt;A&gt;\n}\n</code></pre>\n\n<p>Now you can construct these objects something like this:</p>\n\n<pre><code>fn init_a(a: Arc&lt;A&gt;) -&gt; Arc&lt;A&gt; {\n    let b1 = B { weak: Arc::downgrade(&amp;a) };\n    let b2 = B { weak: Arc::downgrade(&amp;a) };\n    // extra block is required so that the Mutex's write lock is dropped \n    // before we return a\n    {\n        let mut map = a.map.write().unwrap();\n        let vec = map.entry(0).or_insert(Vec::new());\n        vec.push(b1);\n        vec.push(b2);\n    }\n    a\n}\n\nfn main() {\n    let mut a = Arc::new(A { map: RwLock::new(HashMap::new()) });\n    a = init_a(a);\n}\n</code></pre>\n\n<hr>\n\n<p>If you <em>really</em> want to get rid of all runtime overhead of the <code>Mutex</code>, and you don't mind using <code>unsafe</code> code, you could use an  <code>UnsafeCell</code>. It has zero overhead, but its interface requires an <code>unsafe</code> block and it's an extra layer of unwrapping in your code. Also <code>UnsafeCell</code> is not <code>Sync</code>, so you couldn't share it between threads.</p>\n\n<p>To solve those problems, by making sure that you only need to consider <code>UnsafeCell</code> during construction, you can can take advantage of the fact that <code>UnsafeCell</code> has zero size cost and does not affect layout. Instead of <code>A</code>, Use a different type for constructing, which is identical to <code>A</code> apart from the <code>UnsafeCell</code>. These types can then be used interchangeably with <code>mem::transmute</code>.</p>\n\n<pre><code>use std::collections::HashMap;\nuse std::sync::{Arc, Weak};\nuse std::cell::UnsafeCell;\nuse std::mem;\n\nstruct A { \n    map: HashMap&lt;u32, Vec&lt;B&gt;&gt;,\n}\n\nstruct B {\n    weak: Weak&lt;A&gt;\n}\n\nimpl A {\n    fn new() -&gt; Arc&lt;A&gt; {\n        let a = A { map: HashMap:: new() };\n        Self::init_a(Arc::new(a))\n    }\n\n    fn init_a(a: Arc&lt;A&gt;) -&gt; Arc&lt;A&gt; {\n        // Important: The layout is identical to A\n        struct AConstruct {\n            map: UnsafeCell&lt;HashMap&lt;u32, Vec&lt;B&gt;&gt;&gt;,\n        }\n        // Treat the object as if was an AConstruct instead\n        let a: Arc&lt;AConstruct&gt; = unsafe { mem::transmute(a) };\n        let map = unsafe { &amp;mut *a.map.get() };\n        // B's weak references are to Arc&lt;A&gt; not to Arc&lt;AConstruct&gt; \n        let weak_a: Weak&lt;A&gt; = unsafe { mem::transmute(Arc::downgrade(&amp;a)) };\n\n        // Actual initialization here\n        let vec = map.entry(0).or_insert(Vec::new());\n        let b1 = B { weak: weak_a.clone() };\n        let b2 = B { weak: weak_a.clone() };\n        vec.push(b1);\n        vec.push(b2);\n\n        // We're done. Pretend the UnsafeCells never existed\n        unsafe { mem::transmute(a) }\n    }\n}\n</code></pre>\n\n<p>You can also do this with raw pointers, but I feel a little \"safer\" with <code>UnsafeCell</code>! LLVM does some optimisations when it's given guarantees that certain data is immutable, and <code>UnsafeCell</code> does some magic to protect you when it breaks those guarantees. So I'm not 100% certain of the safety of doing this:</p>\n\n<pre><code>fn init_a(a: Arc&lt;A&gt;) -&gt; Arc&lt;A&gt; {\n    // Raw IMMUTABLE pointer to the HashMap \n    let ptr = &amp;a.map as *const HashMap&lt;_, _&gt;;\n    // Unsafely coerce it to MUTABLE\n    let map: &amp;mut HashMap&lt;_, _&gt; = unsafe { mem::transmute(ptr) };\n    let weak_a: Weak&lt;A&gt; = Arc::downgrade(&amp;a);\n\n    // Actual initialization here\n    let vec = map.entry(0).or_insert(Vec::new());\n    let b1 = B { weak: weak_a.clone() };\n    let b2 = B { weak: weak_a.clone() };\n    vec.push(b1);\n    vec.push(b2);\n\n    a\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 5, "last_activity_date": 1526815163, "last_edit_date": 1526815163, "creation_date": 1526756291, "answer_id": 50428526, "question_id": 50425910, "link": "https://stackoverflow.com/questions/50425910/how-to-create-a-cyclic-reference-with-arc-and-weak/50428526#50428526", "title": "How to create a cyclic reference with Arc and Weak?", "body": "<p>I would approach this from the opposite direction, actually.</p>\n\n<p><code>HashMap</code> is a much more complicated type than <code>Weak&lt;T: Sized&gt;</code>, and therefore it is much easier to swap <code>Weak</code> after the fact. Therefore, my approach would be:</p>\n\n<ol>\n<li>Create the <code>B</code> with a dummy reference.</li>\n<li>Create the <code>A</code>, transfer ownership of the <code>B</code>.</li>\n<li>Iterate over the <code>B</code>, swapping out the <code>A</code> for the real one.</li>\n</ol>\n\n<p>AFAIK, the standard library does not provide any way to (1) create null <code>Weak</code> and (2) atomically swap them out. Crossbeam has an example of <a href=\"https://github.com/crossbeam-rs/crossbeam/blob/master/src/sync/arc_cell.rs\" rel=\"nofollow noreferrer\"><code>ArcCell</code></a>: simply search/replacing all <code>Arc</code> by <code>Weak</code> gives us a <code>WeakCell</code>!</p>\n\n<p>With that <code>WeakCell&lt;T&gt;</code> at our disposal:</p>\n\n<pre><code>#[derive(Default)]\nstruct A { \n    map: HashMap&lt;u32, Vec&lt;B&gt;&gt;,\n}\n\nstruct B {\n    weak: WeakCell&lt;A&gt;,\n}\n\nimpl A {\n    pub fn new(map: HashMap&lt;u32, Vec&lt;B&gt;&gt;) -&gt; Arc&lt;A&gt; {\n        let a = Arc::new(A { map });\n        let weak = Arc::downgrade(&amp;a);\n        for (_, bs) in &amp;a.map {\n            for b in bs {\n                b.weak.set(weak.clone());\n            }\n        }\n        a\n    }\n}\n\nimpl B {\n    pub fn new(a: &amp;Arc&lt;A&gt;) -&gt; B { B { weak: WeakCell::new(Arc::downgrade(a)), } }\n}\n\nfn main() {\n    let dummy = Arc::new(A::default());\n\n    let (b1, b2, b3) = (B::new(&amp;dummy), B::new(&amp;dummy), B::new(&amp;dummy));\n\n    let mut map = HashMap::new();\n    map.insert(5, vec![b1, b2]);\n    map.insert(10, vec![b3]);\n\n    let _a = A::new(map);\n\n    //  Do something!\n}\n</code></pre>\n\n<p>Which you can see in action <a href=\"https://play.rust-lang.org/?gist=b4e00f0aa5ee8756eb6218f167940698&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">on the playground</a>.</p>\n\n<p>It should be possible to modify <code>WeakCell</code> to construct it from <code>0</code> (guaranteeing it would be initialized later), thus avoiding the need for the dummy reference. That's an exercise left to the reader ;)</p>\n"}], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 807, "favorite_count": 0, "accepted_answer_id": 50425981, "answer_count": 2, "score": 5, "last_activity_date": 1545613874, "creation_date": 1526737241, "last_edit_date": 1545613874, "question_id": 50425910, "link": "https://stackoverflow.com/questions/50425910/how-to-create-a-cyclic-reference-with-arc-and-weak", "title": "How to create a cyclic reference with Arc and Weak?", "body": "<p>I have two structs:</p>\n\n<pre><code>struct A { \n    map: HashMap&lt;u32, Vec&lt;B&gt;&gt;,\n}\n\nstruct B {\n    weak: Weak&lt;A&gt;\n}\n</code></pre>\n\n<p>When <code>A</code> is constructed, it will own several <code>B</code>, each of which links back to the <code>A</code> which was just constructed, similar to this:</p>\n\n<pre><code>let a = Arc::new(A { map: HashMap::new() });\n\nlet b1 = B { weak: Arc::downgrade(&amp;a) };\nlet b3 = B { weak: Arc::downgrade(&amp;a) };\nlet b2 = B { weak: Arc::downgrade(&amp;a) };\n\na.map.insert(5, vec![b1, b2]);\na.map.insert(10, vec![b3]);\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=683b6d181b3318cdeef52496cfc81a8e&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>This doesn't work since <code>Arc</code> does not provide a way to modify the map. <a href=\"https://doc.rust-lang.org/std/sync/struct.Arc.html#method.get_mut\" rel=\"nofollow noreferrer\"><code>Arc::get_mut</code></a> does not work since a <code>Weak</code> is already constructed to the value.</p>\n\n<p>How it is possible to construct an <code>A</code> with some <code>B</code>? I'm trying to avoid runtime checks when accessing <code>map</code> because after construction it will never be modified again. I have no problem using unsafe code or approved nightly features.</p>\n"}, {"tags": ["asynchronous", "rust", "future"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1526744942, "post_id": 50425052, "comment_id": 87868530, "body": "Idiomatic Rust uses <code>snake_case</code> for variables, methods, macros, and fields and <code>UpperCamelCase</code> for types. Use <code>first_time</code> instead, please."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 0, "last_activity_date": 1526749683, "creation_date": 1526749683, "answer_id": 50427661, "question_id": 50425052, "link": "https://stackoverflow.com/questions/50425052/how-can-i-implement-a-future-which-is-woken-up-from-another-thread-in-futures-0/50427661#50427661", "title": "How can I implement a Future which is woken up from another thread in Futures 0.2?", "body": "<p>While <code>Context</code> isn't able to be sent across threads, a <code>Waker</code> is:</p>\n\n<pre><code>fn poll(&amp;mut self, ctx: &amp;mut Context) -&gt; Result&lt;Async&lt;Self::Item&gt;, Never&gt; {\n    if self.first_time {\n        self.first_time = false;\n        let waker = ctx.waker().clone();\n        thread::spawn(move || {\n            thread::sleep(Duration::from_millis(10));\n            waker.wake();\n        });\n        Ok(Async::Pending)\n    } else {\n        Ok(Async::Ready(3))\n    }\n}\n</code></pre>\n\n<p>Note that this is a really inefficient way to implement timeouts. There are Futures-native methods that should be used instead.</p>\n"}], "owner": {"reputation": 25, "user_id": 2568161, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f3aa92d66724ac129e10cdcf71f0eea?s=128&d=identicon&r=PG", "display_name": "user2568161", "link": "https://stackoverflow.com/users/2568161/user2568161"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 225, "favorite_count": 0, "accepted_answer_id": 50427661, "answer_count": 1, "score": 1, "last_activity_date": 1526749683, "creation_date": 1526731110, "last_edit_date": 1526746773, "question_id": 50425052, "link": "https://stackoverflow.com/questions/50425052/how-can-i-implement-a-future-which-is-woken-up-from-another-thread-in-futures-0", "title": "How can I implement a Future which is woken up from another thread in Futures 0.2?", "body": "<p>I'm trying to find a simple way to implement the <code>Future</code> trait from the future crate, version 0.2.1:</p>\n\n<pre><code>extern crate futures;\n\nuse futures::executor::ThreadPool;\nuse futures::prelude::*;\nuse futures::task::Context;\nuse std::{thread, time::Duration};\n\nstruct SendThree {\n    firstTime: bool,\n}\n\nimpl Future for SendThree {\n    type Item = u32;\n    type Error = Never;\n\n    fn poll(&amp;mut self, ctx: &amp;mut Context) -&gt; Result&lt;Async&lt;Self::Item&gt;, Never&gt; {\n        if self.firstTime {\n            self.firstTime = false;\n            thread::spawn(move || {\n                thread::sleep(Duration::from_millis(10));\n                ctx.waker().wake();\n            });\n            Ok(Async::Pending)\n        } else {\n            Ok(Async::Ready(3))\n        }\n    }\n}\n\nfn main() {\n    let mut fut = SendThree { firstTime: true };\n    let mut executor: ThreadPool = ThreadPool::new().unwrap();\n    let result = executor.run(fut).unwrap();\n    println!(\"{}\", result);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=2811c222b163b99511e0b15576335d4a&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>My problem is that the <code>Context</code> variable is not <code>Send</code> so I can't call <code>wake</code> from another thread:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `futures::executor::Executor: std::marker::Send` is not satisfied\n  --&gt; src/main.rs:19:13\n   |\n19 |             thread::spawn(move || {\n   |             ^^^^^^^^^^^^^ `futures::executor::Executor` cannot be sent between threads safely\n   |\n   = help: the trait `std::marker::Send` is not implemented for `futures::executor::Executor`\n   = note: required because of the requirements on the impl of `std::marker::Send` for `&amp;mut futures::executor::Executor`\n   = note: required because it appears within the type `std::option::Option&lt;&amp;mut futures::executor::Executor&gt;`\n   = note: required because it appears within the type `futures::task::Context&lt;'_&gt;`\n   = note: required because of the requirements on the impl of `std::marker::Send` for `&amp;mut futures::task::Context&lt;'_&gt;`\n   = note: required because it appears within the type `[closure@src/main.rs:19:27: 22:14 ctx:&amp;mut futures::task::Context&lt;'_&gt;]`\n   = note: required by `std::thread::spawn`\n</code></pre>\n\n<p>If I change the code to this it works, but I can't do a <code>thread::sleep</code> without blocking:</p>\n\n<pre><code>if self.firstTime {\n    self.firstTime = false;\n    ctx.waker().wake();\n    Ok(Async::Pending)\n}\n</code></pre>\n\n<p>Is there an idiomatic way to implement this?</p>\n"}, {"tags": ["rust", "double", "precision", "floating-accuracy"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 6, "creation_date": 1526681675, "post_id": 50419788, "comment_id": 87855176, "body": "Why do you believe that you &quot;lost&quot; precision? Seems more likely that previously you had <i>two</i> rounding errors that just happened to cancel each other out. Now there&#39;s only one error and you can see it."}, {"owner": {"reputation": 921, "user_id": 2715671, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/UidHT.png?s=128&g=1", "display_name": "Kelson Ball", "link": "https://stackoverflow.com/users/2715671/kelson-ball"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1526681814, "post_id": 50419788, "comment_id": 87855208, "body": "that rounding errors across the number of operations involved in this perfectly canceled out seemed extremely unlikely"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 3, "creation_date": 1526683693, "post_id": 50419788, "comment_id": 87855690, "body": "Be that as it may, there are <i>very</i> few cases where floating-point calculations are exact, and this test does not appear to be one of them. If you wouldn&#39;t expect <code>0.1 + 0.2</code> to equal <code>0.3</code>, you shouldn&#39;t expect this test to pass except by random happenstance. (And if you do expect <code>0.1 + 0.2 == 0.3</code>, you should read <a href=\"https://stackoverflow.com/questions/588004/is-floating-point-math-broken\">that other question</a> first.)"}, {"owner": {"reputation": 24793, "user_id": 1798593, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/be41e365336e709f1bfc2c9866eac8e9?s=128&d=identicon&r=PG", "display_name": "Patricia Shanahan", "link": "https://stackoverflow.com/users/1798593/patricia-shanahan"}, "edited": false, "score": 5, "creation_date": 1526686513, "post_id": 50419788, "comment_id": 87856242, "body": "Assuming left-to-right evaluation of addition, the recoding changed the order of the sum, which is high risk to change the rounding."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1527082621, "post_id": 50419788, "comment_id": 87992597, "body": "I&#39;m going to suggest closing this as a dupe of <a href=\"https://stackoverflow.com/questions/588004/is-floating-point-math-broken\">Is floating point math broken?</a> While you&#39;re doing more sophisticated transformations, the answers still apply. If you&#39;re actually doing something where floating point math should be exact (only binary fractions and no rounding), then that should be in the question."}], "owner": {"reputation": 921, "user_id": 2715671, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/UidHT.png?s=128&g=1", "display_name": "Kelson Ball", "link": "https://stackoverflow.com/users/2715671/kelson-ball"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 167, "favorite_count": 0, "answer_count": 0, "score": 3, "last_activity_date": 1526681551, "creation_date": 1526681070, "last_edit_date": 1526681551, "question_id": 50419788, "link": "https://stackoverflow.com/questions/50419788/how-is-additional-rounding-error-introduced-when-using-f64mul-add", "title": "How is additional rounding error introduced when using f64::mul_add?", "body": "<p>According to the docs, <a href=\"https://doc.rust-lang.org/std/primitive.f64.html#method.mul_add\" rel=\"nofollow noreferrer\"><code>f64::mul_add</code></a> can be used to reduce the number of opportunities for rounding errors:</p>\n\n<blockquote>\n<pre><code>pub fn mul_add(self, a: f64, b: f64) -&gt; f64\n</code></pre>\n  \n  <p>Fused multiply-add. Computes <code>(self * a) + b</code> with only one rounding\n  error.  This produces a more accurate result with better performance\n  than a separate multiplication operation followed by an add.</p>\n</blockquote>\n\n<p>I am working on a linear transforms library where <code>a * b + ...</code> is very common. When I introduced <code>mul_add</code> for the dot products of my <code>AffineVector</code> struct I <strong>lost</strong> precision.</p>\n\n<p>This is the dot product method:</p>\n\n<pre><code>impl AffineVector {\n    pub fn dot(self, v: AffineVector) -&gt; f64 {\n        self.x * v.x + self.y * v.y + self.z * v.z + self.w * v.w\n        //  self.x.mul_add(v.x, self.y.mul_add(v.y, self.z.mul_add(v.z, self.w * v.w)))\n    }\n}\n</code></pre>\n\n<p><a href=\"https://github.com/KelsonBall/Rust.Positron.Transforms/tree/master/src\" rel=\"nofollow noreferrer\">complete source here</a></p>\n\n<p>With the <code>mul_add</code> implementation <strong>and no other changes</strong>, the following test fails because of a floating point precision issue on the last assert:</p>\n\n<pre><code>#[test]\nfn inverse_rotation() {\n    // create a rotation matrix for 1 radian about the Z axis\n    let rotate = AffineMatrix::new(Primitives::RotationZ(1.));\n\n    // create a matrix that undoes the rotation of 'rotate'\n    let revert = rotate.inverse();\n\n    // apply the transformation to the vector &lt;1,0,0&gt;\n    let rotated = rotate.apply_vec3(KVector3::i_hat());        \n\n    // assert that the result is &lt;cos(1),sin(1),0&gt;\n    let expected = KVector3::new(C, S, 0.0);        \n    assert_eq!(rotated, expected);\n\n    // use the 'revert' matrix to undo the rotation\n    let returned = revert.apply_vec3(rotated);     \n\n    // assert that the result is back to &lt;1,0,0&gt;   \n    assert_eq!(returned, KVector3::i_hat());\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>panicked at 'assertion failed: `(left == right)`   \nleft: `KVector3 { x: 1.0, y: 0.000000000000000023419586346110148, z: 0.0 }`,  \nright: `KVector3 { x: 1.0, y: 0.0, z: 0.0 }`',\n</code></pre>\n\n<p>How and why did using <code>mul_add</code> decrease the precision? How can I use it effectively?</p>\n"}, {"tags": ["hashmap", "rust", "lifetime", "borrowing"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1526678393, "creation_date": 1526678393, "answer_id": 50419411, "question_id": 50419093, "link": "https://stackoverflow.com/questions/50419093/why-do-strings-from-a-csvreaders-records-not-live-long-enough-when-inserted-i/50419411#50419411", "title": "Why do strings from a csv::Reader&#39;s records not live long enough when inserted into a HashMap?", "body": "<p>Look at this piece of code:</p>\n\n<pre><code>let mut topics: HashMap&lt;(&amp;str, &amp;str), &amp;str&gt; = HashMap::new();\nfor filename in files {\n    let mut rdr = csv::Reader::from_path(filename).unwrap();\n\n    for rec in rdr.records() {\n        let rr = rec.unwrap();\n        let value1 = rr.get(0).unwrap();\n        let value2 = rr.get(1).unwrap();\n        topics.insert((filename, value1), value2);\n    }\n}\n</code></pre>\n\n<p>It creates a <code>HashMap</code> that contains references to some strings, but what is the owner of those strings? It is <code>rr</code>; thus your error message.</p>\n\n<p>Following the code:</p>\n\n<ol>\n<li><p><code>Reader::from_path</code> reads the CSV from disk and <code>rdr</code> owns that result. </p></li>\n<li><p>The documentation for <a href=\"https://docs.rs/csv/1.0.0/csv/struct.Reader.html#method.records\" rel=\"nofollow noreferrer\"><code>Reader::records</code></a> says (emphasis mine):</p>\n\n<blockquote>\n  <p>Returns <strong>a borrowed iterator</strong> over all records as strings.</p>\n</blockquote>\n\n<p>Thus the iterator cannot outlive the <code>Reader</code>.</p></li>\n<li><p><a href=\"https://docs.rs/csv/1.0.0/csv/struct.StringRecord.html#method.get\" rel=\"nofollow noreferrer\"><code>StringRecord::get</code></a>'s API is:</p>\n\n<blockquote>\n<pre><code>pub fn get(&amp;self, i: usize) -&gt; Option&lt;&amp;str&gt;\n</code></pre>\n</blockquote>\n\n<p>This returns a string reference that only lives as long as <code>self</code> does.</p></li>\n</ol>\n\n<p>By tracing this, the string slices you are attempting to insert actually reference data owned by the <code>StringRecord</code>. These records are dropped at the end of the <code>for</code> loop's body, as shown in the error message. It would cause memory unsafety to allow you to have these references after the loop, thus the compiler stops you.</p>\n\n<p>Inserting <code>String</code>s instead allows the code to continue:</p>\n\n<pre><code>topics.insert((filename, value1.to_owned()), value2.to_owned());\n</code></pre>\n\n<blockquote>\n  <p>I thought insertion into the <code>HashMap</code> transfers ownership</p>\n</blockquote>\n\n<p>Yes, it does. The ownership <strong>of the references</strong> is transferred. The thing  those references refer to is not.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/36645452/155423\">variable does not live long enough when storing a csv::DecodedRecords iterator</a></li>\n<li><a href=\"https://stackoverflow.com/q/45284132/155423\">Not live long enough with CSV and dataflow</a></li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1526739119, "post_id": 50424440, "comment_id": 87866902, "body": "Please <a href=\"https://stackoverflow.com/posts/50424440/edit\">edit</a> your answer to highlight how it differs from the existing answers. As it is right now, it doesn&#39;t seem to add anything new."}], "tags": [], "owner": {"reputation": 406, "user_id": 583614, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5282d39adf1437d1bad41539b44b7d72?s=128&d=identicon&r=PG", "display_name": "Mark", "link": "https://stackoverflow.com/users/583614/mark"}, "is_accepted": false, "score": 0, "last_activity_date": 1526772928, "last_edit_date": 1526772928, "creation_date": 1526726824, "answer_id": 50424440, "question_id": 50419093, "link": "https://stackoverflow.com/questions/50419093/why-do-strings-from-a-csvreaders-records-not-live-long-enough-when-inserted-i/50424440#50424440", "title": "Why do strings from a csv::Reader&#39;s records not live long enough when inserted into a HashMap?", "body": "<p>The trouble is the CSV fields only live as long as the CSV line lives and you're trying to save borrows of the fields into topic that lives longer than the CSV reader.</p>\n\n<p>To do that you need the <code>HashMap</code> to take ownership of the CSV fields by copying or moving the fields into the hashmap. To do that you need to use <code>String</code>s in the map rather than <code>&amp;str</code>s.</p>\n\n<p>This will do what you want:</p>\n\n<pre><code>extern crate csv;\n\nuse std::collections::HashMap;\n\nfn main() {\n    let files = vec![\"file1.csv\", \"file2.csv\", \"file3.csv\"];\n\n    let mut topics: HashMap&lt;(String, String), String&gt; = HashMap::new();\n    for filename in files {\n        let mut rdr = csv::Reader::from_path(filename).unwrap();\n\n        for rec in rdr.records() {\n            let rr = rec.unwrap();\n            let value1 = rr.get(0).unwrap();\n            let value2 = rr.get(1).unwrap();\n            topics.insert((filename.into(), value1.into()), value2.into());\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 23, "user_id": 4726162, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9b98f45319a54ce3e7c6c8e714fba9f5?s=128&d=identicon&r=PG&f=1", "display_name": "flock0", "link": "https://stackoverflow.com/users/4726162/flock0"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 131, "favorite_count": 0, "accepted_answer_id": 50419411, "answer_count": 2, "score": 1, "last_activity_date": 1526772928, "creation_date": 1526676671, "last_edit_date": 1526679677, "question_id": 50419093, "link": "https://stackoverflow.com/questions/50419093/why-do-strings-from-a-csvreaders-records-not-live-long-enough-when-inserted-i", "title": "Why do strings from a csv::Reader&#39;s records not live long enough when inserted into a HashMap?", "body": "<p>I'm new to the whole lifetime concept of Rust. I'm trying to read some data from CSV files and put them into a <code>HashMap</code>:</p>\n\n<pre><code>extern crate csv;\n\nuse std::collections::HashMap;\n\nfn main() {\n    let files = vec![\"file1.csv\", \"file2.csv\", \"file3.csv\"];\n\n    let mut topics: HashMap&lt;(&amp;str, &amp;str), &amp;str&gt; = HashMap::new();\n    for filename in files {\n        let mut rdr = csv::Reader::from_path(filename).unwrap();\n\n        for rec in rdr.records() {\n            let rr = rec.unwrap();\n            let value1 = rr.get(0).unwrap();\n            let value2 = rr.get(1).unwrap();\n            topics.insert((filename, value1), value2);\n        }\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=69038f3368ad65cdcf9304f76d08a480&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">Playground link</a></p>\n\n<p>However the following error occurs:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `rr` does not live long enough\n  --&gt; src/main.rs:14:26\n   |\n14 |             let value1 = rr.get(0).unwrap();\n   |                          ^^ borrowed value does not live long enough\n...\n17 |         }\n   |         - `rr` dropped here while still borrowed\n18 |     }\n19 | }\n   | - borrowed value needs to live until here\n</code></pre>\n\n<p>I thought insertion into the <code>HashMap</code> transfers ownership and thus the records are available also outside of the loop. What am I doing wrong here?</p>\n"}, {"tags": ["r", "docker", "rust", "rstudio"], "comments": [{"owner": {"reputation": 329671, "user_id": 143305, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/4e96ca7ae02c37e7d940d17997d780e5?s=128&d=identicon&r=PG", "display_name": "Dirk Eddelbuettel", "link": "https://stackoverflow.com/users/143305/dirk-eddelbuettel"}, "edited": false, "score": 0, "creation_date": 1526672654, "post_id": 50418020, "comment_id": 87852057, "body": "As I told you when you asked in the GH issue ticket, I would install the rust toolchain via <code>apt-get</code>."}, {"owner": {"reputation": 2063, "user_id": 2774153, "user_type": "registered", "accept_rate": 53, "profile_image": "https://i.stack.imgur.com/RpYQx.jpg?s=128&g=1", "display_name": "Suman Khanal", "link": "https://stackoverflow.com/users/2774153/suman-khanal"}, "reply_to_user": {"reputation": 329671, "user_id": 143305, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/4e96ca7ae02c37e7d940d17997d780e5?s=128&d=identicon&r=PG", "display_name": "Dirk Eddelbuettel", "link": "https://stackoverflow.com/users/143305/dirk-eddelbuettel"}, "edited": false, "score": 0, "creation_date": 1526724422, "post_id": 50418020, "comment_id": 87862980, "body": "@DirkEddelbuettel Unfortunately I am not able to install <code>cargo</code> in <code>rocker&#47;tidyverse</code>. Looks like its not in the <code>debian:stretch</code> archive."}, {"owner": {"reputation": 329671, "user_id": 143305, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/4e96ca7ae02c37e7d940d17997d780e5?s=128&d=identicon&r=PG", "display_name": "Dirk Eddelbuettel", "link": "https://stackoverflow.com/users/143305/dirk-eddelbuettel"}, "edited": false, "score": 0, "creation_date": 1526734080, "post_id": 50418020, "comment_id": 87865575, "body": "What makes you think our containers use Debian stable? They do not; and that is plainly document. And testing and unstable <a href=\"https://packages.debian.org/search?keywords=cargo\" rel=\"nofollow noreferrer\">have cargo as seen here</a>."}, {"owner": {"reputation": 329671, "user_id": 143305, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/4e96ca7ae02c37e7d940d17997d780e5?s=128&d=identicon&r=PG", "display_name": "Dirk Eddelbuettel", "link": "https://stackoverflow.com/users/143305/dirk-eddelbuettel"}, "edited": false, "score": 0, "creation_date": 1526735379, "post_id": 50418020, "comment_id": 87865934, "body": "At least -- &quot;my&quot; containers do. Carl may use a mix, but I&#39;d be surprised if there wasn&#39;t a tidyverse variant starting from testing too.  Choose your starting container carefully."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1526680774, "post_id": 50419706, "comment_id": 87854936, "body": "This is all well and good, but clearly it should be <code>... exec -it ...</code> \u2014 it just reads better ;-)."}, {"owner": {"reputation": 24192, "user_id": 8416610, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-cmim3CrZ9Wo/AAAAAAAAAAI/AAAAAAAAAjs/hnKTOHALc6M/photo.jpg?sz=128", "display_name": "Ralf Stubner", "link": "https://stackoverflow.com/users/8416610/ralf-stubner"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1526681039, "post_id": 50419706, "comment_id": 87855006, "body": "@Shepmaster here you go :-)"}, {"owner": {"reputation": 2063, "user_id": 2774153, "user_type": "registered", "accept_rate": 53, "profile_image": "https://i.stack.imgur.com/RpYQx.jpg?s=128&g=1", "display_name": "Suman Khanal", "link": "https://stackoverflow.com/users/2774153/suman-khanal"}, "edited": false, "score": 0, "creation_date": 1526731201, "post_id": 50419706, "comment_id": 87864814, "body": "@RalfStubner For your first option, I tried using <code>apt-get</code> but <code>cargo</code> was not available for the base image <code>rocker&#47;tidyverse</code>. So I opted for your second option and this is the <a href=\"https://hub.docker.com/r/sumdoc/rust-rstudio/\" rel=\"nofollow noreferrer\">docker image</a> I built. But when I try to run <code>cargo</code>, it throws <code>error: no default toolchain configured</code>."}, {"owner": {"reputation": 24192, "user_id": 8416610, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-cmim3CrZ9Wo/AAAAAAAAAAI/AAAAAAAAAjs/hnKTOHALc6M/photo.jpg?sz=128", "display_name": "Ralf Stubner", "link": "https://stackoverflow.com/users/8416610/ralf-stubner"}, "reply_to_user": {"reputation": 2063, "user_id": 2774153, "user_type": "registered", "accept_rate": 53, "profile_image": "https://i.stack.imgur.com/RpYQx.jpg?s=128&g=1", "display_name": "Suman Khanal", "link": "https://stackoverflow.com/users/2774153/suman-khanal"}, "edited": false, "score": 0, "creation_date": 1526742647, "post_id": 50419706, "comment_id": 87867952, "body": "@SumanKhanal You also have to set <code>RUSTUP_HOME</code> and <code>CARGO_HOME</code> for the rstudio user."}, {"owner": {"reputation": 2063, "user_id": 2774153, "user_type": "registered", "accept_rate": 53, "profile_image": "https://i.stack.imgur.com/RpYQx.jpg?s=128&g=1", "display_name": "Suman Khanal", "link": "https://stackoverflow.com/users/2774153/suman-khanal"}, "edited": false, "score": 0, "creation_date": 1526747485, "post_id": 50419706, "comment_id": 87869306, "body": "@RalfStubner I am not able to do that. Can you give more tips ?"}, {"owner": {"reputation": 24192, "user_id": 8416610, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-cmim3CrZ9Wo/AAAAAAAAAAI/AAAAAAAAAjs/hnKTOHALc6M/photo.jpg?sz=128", "display_name": "Ralf Stubner", "link": "https://stackoverflow.com/users/8416610/ralf-stubner"}, "reply_to_user": {"reputation": 2063, "user_id": 2774153, "user_type": "registered", "accept_rate": 53, "profile_image": "https://i.stack.imgur.com/RpYQx.jpg?s=128&g=1", "display_name": "Suman Khanal", "link": "https://stackoverflow.com/users/2774153/suman-khanal"}, "edited": false, "score": 2, "creation_date": 1526747677, "post_id": 50419706, "comment_id": 87869356, "body": "@SumanKhanal Just add <code>export RUSTUP_HOME=&#47;usr&#47;local&#47;rustup</code> and <code>export CARGO_HOME=&#47;usr&#47;local&#47;cargo</code> at the end of the <code>profile</code> file you are including in your docker image."}, {"owner": {"reputation": 2063, "user_id": 2774153, "user_type": "registered", "accept_rate": 53, "profile_image": "https://i.stack.imgur.com/RpYQx.jpg?s=128&g=1", "display_name": "Suman Khanal", "link": "https://stackoverflow.com/users/2774153/suman-khanal"}, "edited": false, "score": 0, "creation_date": 1526753759, "post_id": 50419706, "comment_id": 87871150, "body": "@RalfStubner Finally did it with your help. Many thanks."}, {"owner": {"reputation": 24192, "user_id": 8416610, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-cmim3CrZ9Wo/AAAAAAAAAAI/AAAAAAAAAjs/hnKTOHALc6M/photo.jpg?sz=128", "display_name": "Ralf Stubner", "link": "https://stackoverflow.com/users/8416610/ralf-stubner"}, "reply_to_user": {"reputation": 2063, "user_id": 2774153, "user_type": "registered", "accept_rate": 53, "profile_image": "https://i.stack.imgur.com/RpYQx.jpg?s=128&g=1", "display_name": "Suman Khanal", "link": "https://stackoverflow.com/users/2774153/suman-khanal"}, "edited": false, "score": 0, "creation_date": 1526761244, "post_id": 50419706, "comment_id": 87872938, "body": "@SumanKhanal You are welcome. Feel free to accept the answer."}], "tags": [], "owner": {"reputation": 24192, "user_id": 8416610, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-cmim3CrZ9Wo/AAAAAAAAAAI/AAAAAAAAAjs/hnKTOHALc6M/photo.jpg?sz=128", "display_name": "Ralf Stubner", "link": "https://stackoverflow.com/users/8416610/ralf-stubner"}, "is_accepted": true, "score": 2, "last_activity_date": 1526742596, "last_edit_date": 1526742596, "creation_date": 1526680425, "answer_id": 50419706, "question_id": 50418020, "link": "https://stackoverflow.com/questions/50418020/accessing-rust-from-rstudio-terminal/50419706#50419706", "title": "Accessing Rust from RStudio terminal", "body": "<p>If you log into the  running container using</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ docker exec -it &lt;container-name&gt;  bash\n</code></pre>\n\n<p>you will find something like this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>root@58906b77cc2f:/# echo $PATH\n/usr/local/cargo/bin:/usr/lib/rstudio-server/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nroot@58906b77cc2f:/# which cargo\n/usr/local/cargo/bin/cargo\nroot@58906b77cc2f:/# cargo\nRust's package manager\n\nUSAGE:\n    cargo [OPTIONS] [SUBCOMMAND]\n[...]\n</code></pre>\n\n<p>However, the RStudio Server is executed as user <code>rstudio</code>, and there the situation is different:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>root@58906b77cc2f:/# su - rstudio\n$ echo $PATH\n/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games\n$ cargo\nsh: 2: cargo: not found\n</code></pre>\n\n<p>So either install Rust into a location that is part of the default <code>PATH</code>, e.g. using <code>apt</code> as suggested by Dirk in the comments. Or make setting <code>PATH</code>, <code>RUSTUP_HOME</code> and <code>CARGO_HOME</code> applicable to other users, e.g. by adding it to <code>/etc/profile</code>.</p>\n"}], "owner": {"reputation": 2063, "user_id": 2774153, "user_type": "registered", "accept_rate": 53, "profile_image": "https://i.stack.imgur.com/RpYQx.jpg?s=128&g=1", "display_name": "Suman Khanal", "link": "https://stackoverflow.com/users/2774153/suman-khanal"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 180, "favorite_count": 0, "accepted_answer_id": 50419706, "answer_count": 1, "score": 1, "last_activity_date": 1526742596, "creation_date": 1526671445, "last_edit_date": 1526672076, "question_id": 50418020, "link": "https://stackoverflow.com/questions/50418020/accessing-rust-from-rstudio-terminal", "title": "Accessing Rust from RStudio terminal", "body": "<p>This is the Dockerfile I created to install Rust within RStudio in the Rocker project maintained by Carl Boettiger and Dirk Eddelbuettel:</p>\n\n<pre><code>FROM rocker/tidyverse\nRUN apt-get update \\\n    &amp;&amp; apt-get install -y wget\nENV RUSTUP_HOME=/usr/local/rustup \\\n    CARGO_HOME=/usr/local/cargo\n\nRUN set -eux; \\\n    \\\n    url=\"https://static.rust-lang.org/rustup/dist/x86_64-unknown-linux-gnu/rustup-init\"; \\\n    wget \"$url\"; \\\n    chmod +x rustup-init; \\\n    ./rustup-init -y --no-modify-path --default-toolchain stable; \\\n    rm rustup-init; \\\n    chmod -R a+w $RUSTUP_HOME $CARGO_HOME;\n\nENV PATH /usr/local/cargo/bin:$PATH\n</code></pre>\n\n<p>The image gets built fine, but when I run the image with\n<code>docker run -d -p 8787:8787 dockerimage</code> I am not able to access <code>cargo</code> the Rust package manager within the terminal of RStudio Server.</p>\n\n<p><a href=\"https://i.stack.imgur.com/6isih.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/6isih.png\" alt=\"enter image description here\"></a></p>\n\n<p>What am I missing?</p>\n"}, {"tags": ["rust", "webassembly"], "comments": [{"owner": {"reputation": 2001, "user_id": 2707195, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/RlRWZ.jpg?s=128&g=1", "display_name": "Andrei CACIO", "link": "https://stackoverflow.com/users/2707195/andrei-cacio"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1526661986, "post_id": 50415623, "comment_id": 87847442, "body": "@Stargateur I am using the exposed alloc method to allocate heap for the image array buffer and obtain a c_void pointer so I can pass it to the read_img method. This way I can load up the image buffer into WebAssembly&#39;s shared memory."}], "answers": [{"comments": [{"owner": {"reputation": 2001, "user_id": 2707195, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/RlRWZ.jpg?s=128&g=1", "display_name": "Andrei CACIO", "link": "https://stackoverflow.com/users/2707195/andrei-cacio"}, "edited": false, "score": 0, "creation_date": 1526705628, "post_id": 50419599, "comment_id": 87858735, "body": "weird tough as loading an image seems to be such a basic operation. Are there maybe ways of working around this?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2001, "user_id": 2707195, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/RlRWZ.jpg?s=128&g=1", "display_name": "Andrei CACIO", "link": "https://stackoverflow.com/users/2707195/andrei-cacio"}, "edited": false, "score": 0, "creation_date": 1526752429, "post_id": 50419599, "comment_id": 87870759, "body": "@AndreiCACIO none that I am aware of. I think you basically have to trace through the image crate to figure out what code path is causing that error. Maybe you will find some piece of code that can be written in a different way."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1527449945, "last_edit_date": 1527449945, "creation_date": 1526679613, "answer_id": 50419599, "question_id": 50415623, "link": "https://stackoverflow.com/questions/50415623/cant-get-imageload-from-memory-to-work-when-compiled-to-webassembly/50419599#50419599", "title": "Can&#39;t get image::load_from_memory() to work when compiled to WebAssembly", "body": "<p>It's basically impossible to debug things without access to a debugger or the ability to print out messages. Because of this, I ported your code to use <a href=\"https://github.com/rustwasm/wasm-bindgen\" rel=\"nofollow noreferrer\">wasm-bindgen</a>, purely for the ability to access the console from inside Rust code:</p>\n\n<pre><code>#![feature(proc_macro, wasm_custom_section, wasm_import_module)]\n\nextern crate wasm_bindgen;\nextern crate image;\n\nuse wasm_bindgen::prelude::*;\nuse std::mem;\n\npub mod console {\n    use wasm_bindgen::prelude::*;\n\n    #[wasm_bindgen]\n    extern {\n        #[wasm_bindgen(js_namespace = console)]\n        pub fn log(s: &amp;str);\n    }\n}\n\n#[wasm_bindgen]\npub fn alloc(len: usize) -&gt; *mut u8 {\n    let mut buf = Vec::with_capacity(len);\n    let ptr = buf.as_mut_ptr();\n    mem::forget(buf);\n    ptr\n}\n\n#[wasm_bindgen]\npub fn read_img(ptr: *mut u8, len: usize) {\n    let img = unsafe { Vec::from_raw_parts(ptr, len, len) };\n\n    if let Err(e) = image::load_from_memory(&amp;img) {\n        console::log(&amp;e.to_string());\n    }\n}\n</code></pre>\n\n<p>The updated JavaScript:</p>\n\n<pre><code>const js = import(\"./imaj_bg\");\n\nasync function loadImgIntoMem(img, { alloc, memory }) {\n  const resp = await fetch(img);\n  const buf = await resp.arrayBuffer();\n\n  const len = buf.byteLength;\n  const ptr = alloc(len);\n\n  const imgArray = new Uint8Array(memory.buffer, ptr, len);    \n  imgArray.set(new Uint8Array(buf));\n\n  return { ptr, len };\n}\n\nasync function go(js) {\n  const { ptr, len } = await loadImgIntoMem('cat.jpg', js);\n  js.read_img(ptr, len);\n};\n\njs.then(go);\n</code></pre>\n\n<p>Building and serving the code:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo build --target wasm32-unknown-unknown --release\n$ wasm-bindgen target/wasm32-unknown-unknown/release/imaj.wasm --out-dir=.\n$ yarn serve\n</code></pre>\n\n<p>Accessing the page and reviewing the console log shows this anticlimactic message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>operation not supported on wasm yet\n</code></pre>\n\n<p>The truth is that there's large parts of the Rust standard library that don't exist yet in WebAssembly. Many of these are stubbed out to return this error.</p>\n\n<p>I don't know exactly which platform support that is missing for your code. The most obvious one is threading, required by the <code>jpeg_rayon</code> and <code>hdr</code> feature, but turning off all of image's features except <code>jpeg</code> still reports same error. It's likely there's something else needed.</p>\n\n<p>However, it does seem to be specific to a given image codec. If you try the same code but load a PNG image, it's successful:</p>\n\n<pre><code>pub fn read_img(ptr: *mut u8, len: usize) {\n    let img = unsafe { Vec::from_raw_parts(ptr, len, len) };\n\n    let img = match image::load_from_memory(&amp;img) {\n        Ok(i) =&gt; i,\n        Err(e) =&gt; {\n            console::log(&amp;e.to_string());\n            return;\n        }\n    };\n\n    console::log(&amp;format!(\"{:?}\", img.to_rgba()));\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>ImageBuffer { width: 305, height: 314, _phantom: PhantomData, data: [255, 255, 255, 0 /* remaining pixels skipped */\n</code></pre>\n\n<p>This indicates that the JPEG code does not yet work with WASM. A given codec may or may not work yet; it's probably best to file issues with the upstream maintainers.</p>\n"}], "owner": {"reputation": 2001, "user_id": 2707195, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/RlRWZ.jpg?s=128&g=1", "display_name": "Andrei CACIO", "link": "https://stackoverflow.com/users/2707195/andrei-cacio"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 918, "favorite_count": 0, "accepted_answer_id": 50419599, "answer_count": 1, "score": 5, "last_activity_date": 1527449945, "creation_date": 1526660718, "last_edit_date": 1526672360, "question_id": 50415623, "link": "https://stackoverflow.com/questions/50415623/cant-get-imageload-from-memory-to-work-when-compiled-to-webassembly", "title": "Can&#39;t get image::load_from_memory() to work when compiled to WebAssembly", "body": "<p>I am trying to load an image from JavaScript to WebAssembly with Rust using the <a href=\"https://crates.io/crates/image\" rel=\"noreferrer\">image crate</a>.</p>\n\n<p>I have the following Rust code:</p>\n\n<pre><code>extern crate image;\nextern crate libc;\n\nuse libc::c_void;\nuse std::mem;\n\n#[no_mangle]\npub extern \"C\" fn alloc(size: usize) -&gt; *mut c_void {\n    let mut buf = Vec::with_capacity(size);\n    let ptr = buf.as_mut_ptr();\n    mem::forget(buf);\n\n    return ptr as *mut c_void;\n}\n\n#[no_mangle]\npub extern \"C\" fn read_img(buff_ptr: *mut u8, buff_len: usize) -&gt; *mut i32 {\n    let mut img: Vec&lt;u8&gt; = unsafe { Vec::from_raw_parts(buff_ptr, buff_len, buff_len) };\n    let ok = Box::new([333]);\n    let err = Box::new([331]);\n\n    return match image::load_from_memory(&amp;img) {\n        Ok(img) =&gt; Box::into_raw(ok) as *mut i32,\n        Err(_) =&gt; Box::into_raw(err) as *mut i32,\n    };\n}\n\nfn main() {}\n</code></pre>\n\n<p>which I compile using the following tools:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>cargo +nightly build --target wasm32-unknown-unknown --release\n</code></pre>\n\n<p>In the <code>read_img()</code> function, I naively handle errors via two vectors: <code>[333]</code> for OK and <code>[331]</code> for any error. I read these vectors on the JavaScript side to know if the image was loaded successfully.</p>\n\n<p>The <code>load_from_memory</code> method fails because I get the <code>[331]</code> vector. If I replace the <code>load_from_memory</code> method with the <code>guess_format</code> method, I get the <code>[333]</code> vector. I also did some pattern matching for PNG and JPG and it reads the buffer correctly.</p>\n\n<p>I couldn't find how can I more thoroughly debug such behaviour.</p>\n\n<p>On the JavaScript part, I simply load up the image's <code>arrayBuffer</code> into WASM's shared memory.</p>\n\n<p>Here is what I am doing on the JavaScript side:</p>\n\n<pre><code>function compile(wasmFile = 'distil_wasm.gc.wasm') {\n    return fetch(wasmFile)\n        .then(r =&gt; r.arrayBuffer())\n        .then(r =&gt; {\n            let module = new WebAssembly.Module(r);\n            let importObject = {}\n            for (let imp of WebAssembly.Module.imports(module)) {\n                if (typeof importObject[imp.module] === \"undefined\")\n                    importObject[imp.module] = {};\n                switch (imp.kind) {\n                case \"function\": importObject[imp.module][imp.name] = () =&gt; {}; break;\n                case \"table\": importObject[imp.module][imp.name] = new WebAssembly.Table({ initial: 256, maximum: 256, element: \"anyfunc\" }); break;\n                case \"memory\": importObject[imp.module][imp.name] = new WebAssembly.Memory({ initial: 256 }); break;\n                case \"global\": importObject[imp.module][imp.name] = 0; break;\n                }\n            }\n\n            return WebAssembly.instantiate(r, importObject);\n        });\n}\n\nfunction loadImgIntoMem(img, memory, alloc) {\n    return new Promise(resolve =&gt; {\n        fetch(img)\n            .then(r =&gt; r.arrayBuffer())\n            .then(buff =&gt; {\n                const imgPtr = alloc(buff.byteLength);\n                const imgHeap = new Uint8Array(memory.buffer, imgPtr, buff.byteLength);\n\n                imgHeap.set(new Uint8Array(buff));\n\n                resolve({ imgPtr, len: buff.byteLength });\n            });\n    });\n}\n\n\nfunction run(img) {\n    return compile().then(m =&gt; {\n        return loadImgIntoMem(img, m.instance.exports.memory, m.instance.exports.alloc).then(r =&gt; {\n            window.WASM = m;\n            return m.instance.exports.read_img(r.imgPtr, r.len);\n        });\n    });\n}\n\nrun('img-2.jpg')\n   .then(ptr =&gt; console.log(new Int32Array(WASM.instance.exports.memory.buffer, ptr, 1)))\n</code></pre>\n\n<p>This console logs:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Int32Array [ 331 ]\n</code></pre>\n"}, {"tags": ["c++", "visual-studio", "visual-c++", "rust"], "comments": [{"owner": {"reputation": 69264, "user_id": 256138, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/ed9e8c0ff767e38f8fade11f5af00a45?s=128&d=identicon&r=PG", "display_name": "rubenvb", "link": "https://stackoverflow.com/users/256138/rubenvb"}, "edited": false, "score": 0, "creation_date": 1526636228, "post_id": 50408212, "comment_id": 87831845, "body": "The VS Build tools are notoriously difficult to find: on the website, on your PC (subtle but important differences between minor/major versions, etc). Last time I tried installing the VS2017 build tools, the installed size (bare minimum of C++ development with latest toolchain) was larger than the equivalent VS2017 Community install. So I just gave up on them and installed the &quot;normal&quot; IDE package."}, {"owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "edited": false, "score": 0, "creation_date": 1526637102, "post_id": 50408212, "comment_id": 87832462, "body": "Does <a href=\"https://stackoverflow.com/a/47380501/3005167\">stackoverflow.com/a/47380501/3005167</a> answer your question?"}, {"owner": {"reputation": 1051, "user_id": 7983596, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/1d5148aeced685c36901188ede736d85?s=128&d=identicon&r=PG&f=1", "display_name": "Ben Gubler", "link": "https://stackoverflow.com/users/7983596/ben-gubler"}, "reply_to_user": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "edited": false, "score": 0, "creation_date": 1526637833, "post_id": 50408212, "comment_id": 87832894, "body": "@kazemakase no, I don&#39;t have the MinGW linker. I just want to figure out how to get my VS C++ build tools to work with Rust"}, {"owner": {"reputation": 1636, "user_id": 3370124, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f73352b4adb282c092738f34883488dd?s=128&d=identicon&r=PG&f=1", "display_name": "Richard Critten", "link": "https://stackoverflow.com/users/3370124/richard-critten"}, "edited": false, "score": 0, "creation_date": 1526637887, "post_id": 50408212, "comment_id": 87832933, "body": "Here you go: <a href=\"http://landinghub.visualstudio.com/visual-cpp-build-tools\" rel=\"nofollow noreferrer\">landinghub.visualstudio.com/visual-cpp-build-tools</a>"}, {"owner": {"reputation": 1051, "user_id": 7983596, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/1d5148aeced685c36901188ede736d85?s=128&d=identicon&r=PG&f=1", "display_name": "Ben Gubler", "link": "https://stackoverflow.com/users/7983596/ben-gubler"}, "reply_to_user": {"reputation": 1636, "user_id": 3370124, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f73352b4adb282c092738f34883488dd?s=128&d=identicon&r=PG&f=1", "display_name": "Richard Critten", "link": "https://stackoverflow.com/users/3370124/richard-critten"}, "edited": false, "score": 0, "creation_date": 1526638224, "post_id": 50408212, "comment_id": 87833131, "body": "@RichardCritten I downloaded those and restarted my computer, but Rust is still throwing the same error."}, {"owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "edited": false, "score": 0, "creation_date": 1526638251, "post_id": 50408212, "comment_id": 87833148, "body": "@BenGubler You don&#39;t need the MinGW linker, rustup will get you anything it needs. I&#39;d argue that the GNU toolchain is the simpler approach if you just want to work with rust, but <a href=\"https://www.urbandictionary.com/define.php?term=ymmv\" rel=\"nofollow noreferrer\">YMMV</a> :)"}, {"owner": {"reputation": 1051, "user_id": 7983596, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/1d5148aeced685c36901188ede736d85?s=128&d=identicon&r=PG&f=1", "display_name": "Ben Gubler", "link": "https://stackoverflow.com/users/7983596/ben-gubler"}, "reply_to_user": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "edited": false, "score": 0, "creation_date": 1526638545, "post_id": 50408212, "comment_id": 87833282, "body": "@kazemakase what should I do to install? It keeps throwing the error described in my question-- should I select the <code>continue</code> option? Would that impact any features?"}, {"owner": {"reputation": 1470, "user_id": 2075745, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/6f9a084d236381e1882c4e28edb5151f?s=128&d=identicon&r=PG", "display_name": "user25064", "link": "https://stackoverflow.com/users/2075745/user25064"}, "edited": false, "score": 0, "creation_date": 1526653018, "post_id": 50408212, "comment_id": 87842236, "body": "This may be a path issue, try installing rust from the &quot;Developer Command Prompt&quot; start menu item."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1526654283, "post_id": 50408212, "comment_id": 87843132, "body": "Can you confirm you followed <a href=\"https://github.com/rust-lang-nursery/rustup.rs/issues/1363#issuecomment-369953262\" rel=\"nofollow noreferrer\">these steps</a>?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1526654417, "post_id": 50408212, "comment_id": 87843219, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/50337099/cargo-build-fails-with-linking-error-link-exe-failed-exit-code-325595\">`cargo build` fails with linking error &quot;link.exe failed: exit code: 325595&quot;</a>"}], "answers": [{"tags": [], "owner": {"reputation": 1051, "user_id": 7983596, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/1d5148aeced685c36901188ede736d85?s=128&d=identicon&r=PG&f=1", "display_name": "Ben Gubler", "link": "https://stackoverflow.com/users/7983596/ben-gubler"}, "is_accepted": true, "score": 7, "last_activity_date": 1526656975, "creation_date": 1526656975, "answer_id": 50414582, "question_id": 50408212, "link": "https://stackoverflow.com/questions/50408212/rust-cant-find-microsoft-c-build-tools/50414582#50414582", "title": "Rust can&#39;t find Microsoft C++ build tools", "body": "<p>I found the answer! Turns out I was installing 'Microsoft Visual C++ Redistributable for Visual Studio 2017' instead of 'Build Tools for Visual Studio 2017'. Funny how a simple error can cause a lot of headache!</p>\n"}], "owner": {"reputation": 1051, "user_id": 7983596, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/1d5148aeced685c36901188ede736d85?s=128&d=identicon&r=PG&f=1", "display_name": "Ben Gubler", "link": "https://stackoverflow.com/users/7983596/ben-gubler"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3219, "favorite_count": 0, "accepted_answer_id": 50414582, "answer_count": 1, "score": 6, "last_activity_date": 1526656975, "creation_date": 1526636053, "question_id": 50408212, "link": "https://stackoverflow.com/questions/50408212/rust-cant-find-microsoft-c-build-tools", "title": "Rust can&#39;t find Microsoft C++ build tools", "body": "<p>I'm a beginner who's just barely started learning Rust online, and I want to now use Rust on my computer. I installed the Rust installer, ran it, and it output this message:</p>\n\n<pre><code>Rust requires the Microsoft C++ build tools for Visual Studio 2013 or later,\nbut they don't seem to be installed.\n</code></pre>\n\n<p>I installed the Microsoft C++ 2017 build tools and restarted my computer, but it still outputs this error. From looking on Github, I understand that a lot of people have this issue, but the comments are full of technical jargon that I don't understand.</p>\n\n<p>How can I set Rust up so it works? (Explained so that a beginner can understand)</p>\n"}, {"tags": ["linux", "networking", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1526654883, "post_id": 50408040, "comment_id": 87843567, "body": "<i>so I can&#39;t choose which</i> \u2014 why does this logically follow from the fact that they have the same mask/route/broadcast address? How would you do it if that were not the case?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1526661153, "post_id": 50408040, "comment_id": 87847089, "body": "I don&#39;t think Rust should handle that, you must configure your OS to route specific IP to specific interface."}, {"owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 0, "creation_date": 1526671741, "post_id": 50408040, "comment_id": 87851711, "body": "untested idea: use an ipv4-mapped IPv6 address and add a scope identifier. If that doesn&#39;t work you&#39;ll probably have to use lower-level APIs to bind the socket to a device."}, {"owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "edited": false, "score": 0, "creation_date": 1526714221, "post_id": 50408040, "comment_id": 87860350, "body": "Usually the bind call assigning a transport address to a socket. I never used rust <code>UdpSocket</code> but I see there is a bind method. Have you already verified that it does not work in your scenario?"}, {"owner": {"reputation": 288867, "user_id": 207421, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG", "display_name": "user207421", "link": "https://stackoverflow.com/users/207421/user207421"}, "edited": false, "score": 0, "creation_date": 1526792940, "post_id": 50408040, "comment_id": 87878016, "body": "If they all have link-local addresses you can&#39;t send a UDP packet anywhere except to yourself anyway, so why do you care?"}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1526802626, "post_id": 50408040, "comment_id": 87879695, "body": "<a href=\"https://tools.ietf.org/html/rfc3927#section-3\" rel=\"nofollow noreferrer\">RFC 3927, IPv4 Link-Local Addresses</a> warns in section 3 about the problems arising from using IPv4 Link-Local on multiple interfaces; it mainly lists the problems that need to be solved, but doesn&#39;t offer much in order to solve them. I&#39;d recommend using IPv6 Link-Local instead where those problems are mostly solved (-&gt; scope id).  If you have some C code someone might be able to help you port it to rust."}, {"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 1, "creation_date": 1526805546, "post_id": 50408040, "comment_id": 87880376, "body": "In the C socket API you can specify the interface for a socket, so I presume that is what the OP wants to do."}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "reply_to_user": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 1, "creation_date": 1526809750, "post_id": 50408040, "comment_id": 87881304, "body": "@starblue You mean <code>SO_BINDTODEVICE</code>? <a href=\"https://linux.die.net/man/7/socket\" rel=\"nofollow noreferrer\">socket(7)</a> describes it as &quot;only packets received from that particular interface are processed&quot;, but it&#39;s not clear to me whether it works for sending too. Or <code>IP_UNICAST_IF</code> (from windows, but I read some claims it got ported to linux for wine)?"}, {"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "reply_to_user": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 2, "creation_date": 1526814788, "post_id": 50408040, "comment_id": 87882573, "body": "@Stefan <code>SO_BINDTODEVICE</code>, and it also works for sending, if I remember correctly (it was in a commercial project and I don&#39;t have access to the code any more). A quick look into the Linux kernel seems to confirm that, though it is hard to be sure because everything in the network stack is so indirect."}], "answers": [{"comments": [{"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1526717499, "post_id": 50423166, "comment_id": 87861185, "body": "That is a good idea as long as you don&#39;t happen to use the same IP on multiple interfaces :) IIRC the &quot;random generator&quot; to pick an address is seeded with the MAC address, so using different MAC addresses should lower the odds, but there are still only <code>2^16</code> IPs in that network."}, {"owner": {"reputation": 354, "user_id": 3605805, "user_type": "registered", "profile_image": "https://graph.facebook.com/1122914619/picture?type=large", "display_name": "cvanbrederode", "link": "https://stackoverflow.com/users/3605805/cvanbrederode"}, "edited": false, "score": 1, "creation_date": 1545147593, "post_id": 50423166, "comment_id": 94520874, "body": "bind only works for receiving packets.  For sending UDP (datagram) packets, you are not required to bind to a socket."}], "tags": [], "owner": {"reputation": 24802, "user_id": 232918, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/b5897762377de1c8ffb9a98673262e91?s=128&d=identicon&r=PG", "display_name": "doron", "link": "https://stackoverflow.com/users/232918/doron"}, "is_accepted": false, "score": 2, "last_activity_date": 1526717214, "creation_date": 1526717214, "answer_id": 50423166, "question_id": 50408040, "link": "https://stackoverflow.com/questions/50408040/how-to-send-a-udp-packet-from-a-specific-interface-under-linux/50423166#50423166", "title": "How to send a UDP packet from a specific interface under Linux?", "body": "<p>Assuming you know which local IP address belongs to which network, you can use <code>bind</code> to bind the socket to that IP address.</p>\n"}], "owner": {"reputation": 51, "user_id": 3953006, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e9934f96be7c456d391d4afcfb236c39?s=128&d=identicon&r=PG&f=1", "display_name": "Xavier Bestel", "link": "https://stackoverflow.com/users/3953006/xavier-bestel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1416, "favorite_count": 0, "answer_count": 1, "score": 4, "last_activity_date": 1526998286, "creation_date": 1526635513, "last_edit_date": 1526998286, "question_id": 50408040, "link": "https://stackoverflow.com/questions/50408040/how-to-send-a-udp-packet-from-a-specific-interface-under-linux", "title": "How to send a UDP packet from a specific interface under Linux?", "body": "<p>I have several Ethernet interfaces with IPv4 Link-Local addresses, which means I have multiple routes to <code>169.254.0.0/16</code> on different interfaces. (Those interfaces are not necessarily on the same layer 2 network, so the same IP in this range can be used by different systems on different interfaces.)</p>\n\n<p>When sending a UDP packet to an address in <code>169.254.0.0/16</code> I can't pick which interface will be used to send the packet using Rust's standard library <code>UdpSocket</code>, but without specifying the interface it is very likely to use the wrong one.</p>\n\n<p>How can I send a UDP packet from a specific interface?</p>\n\n<p>(IPv6 Link-Local <code>fe80::/64</code> has a similar problem, but <code>SocketAddrV6</code> has a <code>scope_id</code> which can be used to set the index of the interface to use).</p>\n"}, {"tags": ["c", "events", "rust"], "comments": [{"owner": {"reputation": 574, "user_id": 2656421, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6d8a27cef8664dd07145fb80c3191423?s=128&d=identicon&r=PG", "display_name": "Doug", "link": "https://stackoverflow.com/users/2656421/doug"}, "edited": false, "score": 0, "creation_date": 1526638472, "post_id": 50407999, "comment_id": 87833243, "body": "Many GUIs are written as event-handling loops - so they could register event handlers that the library could call when an event occurs.  And your library would just generate the events, queue them up, and pass them up to the registered handlers."}, {"owner": {"reputation": 116557, "user_id": 918959, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/b9051b2917c3d55d55b3d7042fa49f6c?s=128&d=identicon&r=PG", "display_name": "Antti Haapala", "link": "https://stackoverflow.com/users/918959/antti-haapala"}, "edited": false, "score": 0, "creation_date": 1526641577, "post_id": 50407999, "comment_id": 87835053, "body": "&quot;I could have a blocking function that returns once an event occurs. (inconvenient, especially when I want to stop the application)&quot; - so <i>why</i> would you want to stop the application if not due to an external event occurring?"}, {"owner": {"reputation": 2198, "user_id": 2476219, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/89yiG.jpg?s=128&g=1", "display_name": "Aart Stuurman", "link": "https://stackoverflow.com/users/2476219/aart-stuurman"}, "edited": false, "score": 0, "creation_date": 1526641801, "post_id": 50407999, "comment_id": 87835178, "body": "E.g. if the user click an exit button in the GUI. But I guess it&#39;s not that much of an inconvenience, as I could have a function that tells the library to shutdown, releasing the thread."}], "answers": [{"tags": [], "owner": {"reputation": 23946, "user_id": 3100312, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/486be6e961e6c8a2e4705058600e666f?s=128&d=identicon&r=PG&f=1", "display_name": "Paul Ogilvie", "link": "https://stackoverflow.com/users/3100312/paul-ogilvie"}, "is_accepted": true, "score": 1, "last_activity_date": 1526641162, "last_edit_date": 1526641162, "creation_date": 1526640821, "answer_id": 50409750, "question_id": 50407999, "link": "https://stackoverflow.com/questions/50407999/what-are-efficient-ways-to-pass-events-between-a-library-and-the-gui/50409750#50409750", "title": "What are efficient ways to pass events between a library and the GUI?", "body": "<p>You can provide the library with a <code>post_event</code> function. Whenever an event occurrs that the library wants to post to the GUI, it calls this function.</p>\n\n<p>The post function could be blocking (it returns once the event has been handled) or non-blocking (it just posts the event in the GUI's message loop and returns immediately). Or it could be blocking for some events and not for others.</p>\n\n<p>As an example:</p>\n\n<p>User calls Library initialization:</p>\n\n<pre><code>int post_event(int eventID, long prm1, long prm2); // prototype\nmyLibInit(post_event);                            // call\n</code></pre>\n\n<p>Inside library initialization:</p>\n\n<pre><code>static int (*libPostEvent)(int eventID, long prm1, long prm2); // global variable with pointer to user's post function\nvoid myLibInit( int(*f)(int,long,long)) {\n    libPostEvent= f;\n}\n</code></pre>\n\n<p>Event occurrs in library</p>\n\n<pre><code>    ...\n    switch (libPostEvent(eventID, prm1, prm2)) {\n    case ... // handle result\n    }\n</code></pre>\n\n<p>Inside GUI:</p>\n\n<pre><code>int post_event(int eventID, long prm1, long prm2)\n{\n    switch (eventID) {\n    case EVENT1: putmsgqueu(EVENT1, prm1); return 1; // non-blocking\n    case EVENT2: return(do_something());             // blocking\n    }\n    return 0; // not handled\n}\n</code></pre>\n"}], "owner": {"reputation": 2198, "user_id": 2476219, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/89yiG.jpg?s=128&g=1", "display_name": "Aart Stuurman", "link": "https://stackoverflow.com/users/2476219/aart-stuurman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 67, "favorite_count": 0, "closed_date": 1526654410, "accepted_answer_id": 50409750, "answer_count": 1, "score": -1, "last_activity_date": 1526654405, "creation_date": 1526635392, "last_edit_date": 1526654405, "question_id": 50407999, "link": "https://stackoverflow.com/questions/50407999/what-are-efficient-ways-to-pass-events-between-a-library-and-the-gui", "closed_reason": "Needs more focus", "title": "What are efficient ways to pass events between a library and the GUI?", "body": "<p>I'm writing a library that does some IO asynchronously. Different types of GUIs will use this library to create the same application but for different platforms. The library generates events that the GUI wants to use. The library is written in Rust, but I envision it having a C interface where the GUI will provide some memory and call initialization functions.</p>\n\n<ul>\n<li>I could poll the library often. (not efficient)</li>\n<li>I could have a blocking function that returns once an event occurs. (inconvenient, especially when I want to stop the application)</li>\n</ul>\n"}, {"tags": ["windows", "debugging", "rust", "visual-studio-code"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1526655705, "post_id": 50406322, "comment_id": 87844099, "body": "You are trying to read from standard in \u2014 is that supported inside your debugger?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1526659915, "post_id": 50406322, "comment_id": 87846509, "body": "I can not reproduce this issue on a Windows 10 VM using Rust 1.26 (<code>x86_64-pc-windows-msvc</code>)."}, {"owner": {"reputation": 57, "user_id": 5761999, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9560bceb3b3124edcb01aee7f7cb662c?s=128&d=identicon&r=PG", "display_name": "fis", "link": "https://stackoverflow.com/users/5761999/fis"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1526973947, "post_id": 50406322, "comment_id": 87937078, "body": "@Shepmaster I don&#39;t actually know. It may not. Where can I find that out ?   Edit: Tried with an SDL2 example project, same thing. It&#39;s not using stdin."}], "owner": {"reputation": 57, "user_id": 5761999, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9560bceb3b3124edcb01aee7f7cb662c?s=128&d=identicon&r=PG", "display_name": "fis", "link": "https://stackoverflow.com/users/5761999/fis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 264, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1526973783, "creation_date": 1526629645, "last_edit_date": 1526973783, "question_id": 50406322, "link": "https://stackoverflow.com/questions/50406322/rust-application-crashes-when-trying-to-debug-with-visual-studio-code", "title": "Rust Application crashes when trying to debug with Visual Studio Code", "body": "<p>I am trying to debug a very simple Rust application in VS Code. The application crashes on line 5. It runs fine without the debugger.</p>\n\n<pre><code>use std::io;\nfn main() {\n    println!(\"Hi\");\n    let mut lim = String::new();\n    io::stdin().read_line(&amp;mut lim).expect(\"Error reading line\"); //crash\n    println!(\"Upper limit: {}\", lim);\n}\n</code></pre>\n\n<p>The launch.json looks like this:</p>\n\n<pre><code>{\n    // Verwendet IntelliSense zum Ermitteln m\u00f6glicher Attribute.\n    // Zeigen Sie auf vorhandene Attribute, um die zugeh\u00f6rigen Beschreibungen anzuzeigen.\n    // Weitere Informationen finden Sie unter https://go.microsoft.com/fwlink/?linkid=830387\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"name\": \"(Windows) Launch\",\n            \"type\": \"cppvsdbg\",\n            \"request\": \"launch\",\n            \"program\": \"${workspaceRoot}/target/debug/learn.exe\",\n            \"args\": [],\n            \"stopAtEntry\": false,\n            \"cwd\": \"${workspaceFolder}\",\n            \"environment\": [],\n            \"externalConsole\": true,\n            \"preLaunchTask\": \"compile\"\n        }\n    ]\n}\n</code></pre>\n\n<p>And the tasks.json:</p>\n\n<pre><code>{\n    \"version\": \"2.0.0\",\n    \"tasks\": [\n        {\n            \"label\": \"compile\",\n            \"command\": \"cargo\", // Could be any other shell command\n            \"args\": [\n                \"build\"\n            ],\n            \"type\": \"shell\"\n        }\n    ]\n}\n</code></pre>\n\n<p>I really don't know what more is there to say. This is really the bare minimum of code one could imagine, I followed the tutorials with setting this up. I updated Rust, all the other dependencies are freshly installed. </p>\n\n<p>The error looks like this:</p>\n\n<blockquote>\n  <p>Exception thrown at 0x00007FF9C03CC09B (ntdll.dll) in learn.exe: 0xC0000005: Access violation writing location 0x0000000000000000.</p>\n</blockquote>\n\n<p>There's really not a lot I can see that might be a mistake on my side.</p>\n\n<p>Update:\nUsing the following versions:</p>\n\n<blockquote>\n  <p>rustup 1.11.0 (e751ff9f8 2018-02-13)</p>\n  \n  <p>cargo 0.19.0-nightly (fa7584c14 2017-04-26)</p>\n  \n  <p>rustc 1.19.0-nightly (6a5fc9eec 2017-05-02)</p>\n  \n  <p>VSCode 1.23.1</p>\n  \n  <p>Plugins:<br>\n  C/C++ 0.17.1<br>\n  Rust 0.4.2<br>\n  rls 0.4.4  </p>\n</blockquote>\n"}, {"tags": ["random", "rust"], "answers": [{"tags": [], "owner": {"reputation": 17989, "user_id": 365102, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/e3139989e6548e7deac2cd45253d60df?s=128&d=identicon&r=PG", "display_name": "Mateen Ulhaq", "link": "https://stackoverflow.com/users/365102/mateen-ulhaq"}, "is_accepted": true, "score": 4, "last_activity_date": 1526618680, "creation_date": 1526618680, "answer_id": 50403936, "question_id": 50403898, "link": "https://stackoverflow.com/questions/50403898/how-to-convert-a-mutating-loop-into-functional-style/50403936#50403936", "title": "How to convert a mutating loop into functional style?", "body": "<p>Converting section 2 is just a simple <code>map</code>:</p>\n\n<pre><code>numbers = numbers.into_iter()\n    .map(|x| x * dt.sqrt())\n    .collect::&lt;Vec&lt;_&gt;&gt;();\n</code></pre>\n\n<p>To combine, just throw in the <code>map</code> at some point: </p>\n\n<pre><code>numbers = iter::repeat(())\n    .map(|()| rng.gen_range(0., 1.))\n    .map(|x| x * dt.sqrt())\n    .take(N)\n    .collect::&lt;Vec&lt;f64&gt;&gt;();\n</code></pre>\n\n<p>Or if you prefer:</p>\n\n<pre><code>numbers = iter::repeat(())\n    .map(|()| rng.gen_range(0., 1.) * dt.sqrt())\n    .take(N)\n    .collect::&lt;Vec&lt;f64&gt;&gt;();\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 1318, "user_id": 5329711, "user_type": "registered", "accept_rate": 46, "profile_image": "https://i.stack.imgur.com/8KGqg.gif?s=128&g=1", "display_name": "madeinQuant", "link": "https://stackoverflow.com/users/5329711/madeinquant"}, "edited": false, "score": 0, "creation_date": 1526654427, "post_id": 50413689, "comment_id": 87843223, "body": "Thanks for your help, much appreciated."}], "tags": [], "owner": {"reputation": 1470, "user_id": 2075745, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/6f9a084d236381e1882c4e28edb5151f?s=128&d=identicon&r=PG", "display_name": "user25064", "link": "https://stackoverflow.com/users/2075745/user25064"}, "is_accepted": false, "score": 2, "last_activity_date": 1526654031, "creation_date": 1526654031, "answer_id": 50413689, "question_id": 50403898, "link": "https://stackoverflow.com/questions/50403898/how-to-convert-a-mutating-loop-into-functional-style/50413689#50413689", "title": "How to convert a mutating loop into functional style?", "body": "<p>Here is one solution <a href=\"http://play.integer32.com/?gist=83352becb8179ae6ef5ad82d861790d9&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<pre><code>extern crate rand;\n\nuse rand::*;\n\nfn main() {\n    let t: f64 = 1.0;\n    let n = 256;\n    let dt = t / f64::from(n);\n    let sdt = dt.sqrt();\n\n    let mut rng = rand::thread_rng();\n    let numbers: Vec&lt;f64&gt; = (0..n).map(|_| rng.gen_range(0., 1.) * sdt).collect();\n\n    println!(\"{:#?}\", numbers);\n}\n</code></pre>\n\n<p>Some small changes that were suggested by clippy were made.</p>\n"}], "owner": {"reputation": 1318, "user_id": 5329711, "user_type": "registered", "accept_rate": 46, "profile_image": "https://i.stack.imgur.com/8KGqg.gif?s=128&g=1", "display_name": "madeinQuant", "link": "https://stackoverflow.com/users/5329711/madeinquant"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 101, "favorite_count": 0, "accepted_answer_id": 50403936, "answer_count": 2, "score": 2, "last_activity_date": 1526654031, "creation_date": 1526618401, "last_edit_date": 1526630660, "question_id": 50403898, "link": "https://stackoverflow.com/questions/50403898/how-to-convert-a-mutating-loop-into-functional-style", "title": "How to convert a mutating loop into functional style?", "body": "<p>I want to implement an array with 256 random numbers and the numbers must be a value between 0 and 1 inclusively.</p>\n\n<p>This code works, but I would like to make it more functional. How can I convert section 2 into a functional style and chain it with the expression in section 1? </p>\n\n<pre><code>let t: f64 = 1.0;\nlet n = 256;\nlet dt: f64 = t / n as f64;\n\nlet mut numbers = Vec::&lt;f64&gt;::with_capacity(n);\nlet mut rng = rand::thread_rng();\n\n// section 1\nnumbers = iter::repeat(())\n    .map(|()| rng.gen_range(0., 1.))\n    .take(n)\n    .collect::&lt;Vec&lt;f64&gt;&gt;();\n\n// section 2  \nfor i in 0 .. n {\n    numbers[i] = numbers[i] * dt.sqrt();\n}\n</code></pre>\n"}, {"tags": ["multidimensional-array", "rust"], "answers": [{"comments": [{"owner": {"reputation": 1873, "user_id": 1725553, "user_type": "registered", "accept_rate": 40, "profile_image": "https://lh3.googleusercontent.com/-CsRuoQmwqLo/AAAAAAAAAAI/AAAAAAAAAFM/hESpKGJTWZo/photo.jpg?sz=128", "display_name": "paddyg", "link": "https://stackoverflow.com/users/1725553/paddyg"}, "edited": false, "score": 0, "creation_date": 1526601954, "post_id": 50401760, "comment_id": 87819768, "body": "thanks, I had initially tried putting things all into one line (the equivalent in your example of just doing a.slice_mut(s![20..,..]) += &amp;array...; but it&#39;s probably much clearer to break it down"}, {"owner": {"reputation": 142, "user_id": 7492244, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5702e8b82b30a476ff8fdfacde19ffaf?s=128&d=identicon&r=PG", "display_name": "Ploppz", "link": "https://stackoverflow.com/users/7492244/ploppz"}, "edited": false, "score": 0, "creation_date": 1551998019, "post_id": 50401760, "comment_id": 96857311, "body": "How can I assign rather than add-assign to the LHS?"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 142, "user_id": 7492244, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5702e8b82b30a476ff8fdfacde19ffaf?s=128&d=identicon&r=PG", "display_name": "Ploppz", "link": "https://stackoverflow.com/users/7492244/ploppz"}, "edited": false, "score": 1, "creation_date": 1551998144, "post_id": 50401760, "comment_id": 96857347, "body": "@Ploppz <code>ArrayBase</code> has an <a href=\"https://docs.rs/ndarray/0.12.1/ndarray/struct.ArrayBase.html#method.assign\" rel=\"nofollow noreferrer\"><code>assign</code></a> method, which should do the trick."}], "tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 13, "last_activity_date": 1543672407, "last_edit_date": 1543672407, "creation_date": 1526599229, "answer_id": 50401760, "question_id": 50400966, "link": "https://stackoverflow.com/questions/50400966/is-there-a-rust-ndarray-equivalent-for-numpy-arithmetic-on-a-slice/50401760#50401760", "title": "Is there a Rust ndarray equivalent for numpy arithmetic on a slice?", "body": "<p>That can be done with the same two steps as those performed in Python: <a href=\"https://docs.rs/ndarray/0.11.2/ndarray/struct.ArrayBase.html#slicing\" rel=\"nofollow noreferrer\">slicing</a>, then <em>add-assigning</em> to a <a href=\"https://docs.rs/ndarray/0.11.2/ndarray/struct.ArrayBase.html#broadcasting\" rel=\"nofollow noreferrer\">broadcast</a> right-handed array.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use ndarray::Array2;\n\nlet mut a: Array2&lt;f32&gt; = Array2::zeros((100, 4));\n{ \n    let mut slice = a.slice_mut(s![20.., ..]);\n    slice += &amp;ArrayView::from(&amp;[1.0, 2.0, 3.0, 4.0]);\n}\n</code></pre>\n\n<p>Slicing is done with <a href=\"https://docs.rs/ndarray/0.11.2/ndarray/struct.ArrayBase.html#method.slice_mut\" rel=\"nofollow noreferrer\"><code>slice_mut</code></a> and the <a href=\"https://docs.rs/ndarray/0.11.2/ndarray/macro.s.html\" rel=\"nofollow noreferrer\"><code>s!</code></a> macro for defining the intended range.\nThe outcome of a slice is a mutable array view, and so, most operations seen in <a href=\"https://docs.rs/ndarray/0.11.2/ndarray/struct.ArrayBase.html\" rel=\"nofollow noreferrer\"><code>ArrayBase</code></a> are available, including arithmetic operations. \nBy broadcasting rules, a right-handed array of shape <code>[4]</code> can be automatically broadcast to one of shape <code>[100, 4]</code> for the <code>+=</code> operator.</p>\n\n<hr>\n\n<p>In case of other confusions in the transition from Python to Rust's <code>ndarray</code> crate, the documentation contains a <a href=\"https://docs.rs/ndarray/0.11.2/ndarray/doc/ndarray_for_numpy_users/index.html\" rel=\"nofollow noreferrer\">guide for Python users</a>.</p>\n"}], "owner": {"reputation": 1873, "user_id": 1725553, "user_type": "registered", "accept_rate": 40, "profile_image": "https://lh3.googleusercontent.com/-CsRuoQmwqLo/AAAAAAAAAAI/AAAAAAAAAFM/hESpKGJTWZo/photo.jpg?sz=128", "display_name": "paddyg", "link": "https://stackoverflow.com/users/1725553/paddyg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2537, "favorite_count": 0, "accepted_answer_id": 50401760, "answer_count": 1, "score": 7, "last_activity_date": 1543672407, "creation_date": 1526593608, "last_edit_date": 1526627309, "question_id": 50400966, "link": "https://stackoverflow.com/questions/50400966/is-there-a-rust-ndarray-equivalent-for-numpy-arithmetic-on-a-slice", "title": "Is there a Rust ndarray equivalent for numpy arithmetic on a slice?", "body": "<p>The following Python code will repeatedly add the vector <code>[1, 2, 3, 4]</code> to  each row in the two-dimensional array <code>a</code>, starting only from the 20th row.</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>import numpy as np\n\n# an array of shape (100, 4)\na = np.zeros((100, 4), dtype=np.float32)\n\n# and this is the operation explained above\na[20:, :] += [1.0, 2.0, 3.0, 0.0]\n</code></pre>\n\n<p>Is there a simple equivalent of this with <code>ndarray</code>?\nI can already do what I need with more complicated messy looking code but feel there is probably a tidy ndarray.rs equivalent.</p>\n\n<p>OK so, at the risk of over complicating a question I thought might have a simple answer that I just couldn't unearth...</p>\n\n<p>I am using arrays of f32 shape (n, 8) representing three vertex locations, three normal components and two texture mapping coordinates. I am merging buffers from multiple 3D objects into one for more efficient graphics rendering. Within the 8 wide array the first three values need to be scaled i.e. multiplied by <code>&amp;[sx, sy, sz]</code> then rotated using a standard <code>rz.dot(&amp;rx.dot(&amp;ry.dot()))</code> function and finally have a displacement <code>&amp;[dx, dy, dz]</code> added. The normals just need to be rotated. My current system involves holding data in intermediate array variables.</p>\n\n<pre><code>use ndarray as nd;\narray_buffer: nd::Array2&lt;f32&gt;, loc: &amp;[f32; 3], scl: &amp;[f32; 3]...\n...\n// scale then rotate new verts then add displacement\nlet new_verts = &amp;new_buf.array_buffer.slice(s![.., 0..3]) * &amp;nd::arr1(scl);\nlet new_verts = rotate_vec(rot, &amp;new_verts) + &amp;nd::arr1(loc);\n// then add them to existing verts\nlet mut verts = nd::stack(nd::Axis(0),\n                &amp;[old_buf.array_buffer.slice(s![.., 0..3]),\n                  new_verts.view()]).unwrap();\n...\n</code></pre>\n\n<p>I know I won't be able to reduce it to the numpy one liner</p>\n\n<pre><code>verts = np.append(old_buf.array_buffer[:,0:3], \n        rotate_vec(rot, (new_buf.array_buffer[:,0:3] * scl) + loc))\n</code></pre>\n\n<p>but I thought that maybe some of the map or zip variants or macros might help me. </p>\n"}, {"tags": ["rust", "webassembly"], "comments": [{"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 3, "creation_date": 1526582544, "post_id": 50398348, "comment_id": 87812630, "body": "Andrei, you&#39;re returning a dangling pointer. In order to be shared, the memory must be owned by someone."}, {"owner": {"reputation": 2001, "user_id": 2707195, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/RlRWZ.jpg?s=128&g=1", "display_name": "Andrei CACIO", "link": "https://stackoverflow.com/users/2707195/andrei-cacio"}, "reply_to_user": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 0, "creation_date": 1526582936, "post_id": 50398348, "comment_id": 87812884, "body": "@ArtemGr can you point me into the right direction on how can I fix this? I don&#39;t know how to give ownership of that pointer"}, {"owner": {"reputation": 2001, "user_id": 2707195, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/RlRWZ.jpg?s=128&g=1", "display_name": "Andrei CACIO", "link": "https://stackoverflow.com/users/2707195/andrei-cacio"}, "reply_to_user": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 0, "creation_date": 1526583155, "post_id": 50398348, "comment_id": 87813019, "body": "should I give it a `static lifetime maybe?"}, {"owner": {"reputation": 2001, "user_id": 2707195, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/RlRWZ.jpg?s=128&g=1", "display_name": "Andrei CACIO", "link": "https://stackoverflow.com/users/2707195/andrei-cacio"}, "reply_to_user": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 0, "creation_date": 1526586179, "post_id": 50398348, "comment_id": 87814548, "body": "@ArtemGr I think this questions might deserve to be deduped because it solves the problem in a different way"}, {"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 0, "creation_date": 1526586606, "post_id": 50398348, "comment_id": 87814766, "body": "If you formulate the question a bit differently, as reading a <a href=\"https://doc.rust-lang.org/book/first-edition/const-and-static.html\" rel=\"nofollow noreferrer\">static array</a> instead of a <a href=\"https://doc.rust-lang.org/book/second-edition/ch08-01-vectors.html\" rel=\"nofollow noreferrer\">vector</a>, then yes, it will be a different question! (Might be easier to make a new question though, given that this one was already marked as a duplicate)."}, {"owner": {"reputation": 4491, "user_id": 1264974, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/6558cf06df3ccf1c49329f38fd843b7d?s=128&d=identicon&r=PG", "display_name": "justinas", "link": "https://stackoverflow.com/users/1264974/justinas"}, "edited": false, "score": 2, "creation_date": 1526593121, "post_id": 50398348, "comment_id": 87817534, "body": "I think your &#39;fixed&#39; version only works by accident as well. You can not return a pointer to function&#39;s stack frame and expect it to be valid. Either return the array by value or heap allocated, whichever suits wasm better."}, {"owner": {"reputation": 2001, "user_id": 2707195, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/RlRWZ.jpg?s=128&g=1", "display_name": "Andrei CACIO", "link": "https://stackoverflow.com/users/2707195/andrei-cacio"}, "reply_to_user": {"reputation": 4491, "user_id": 1264974, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/6558cf06df3ccf1c49329f38fd843b7d?s=128&d=identicon&r=PG", "display_name": "justinas", "link": "https://stackoverflow.com/users/1264974/justinas"}, "edited": false, "score": 0, "creation_date": 1526626137, "post_id": 50398348, "comment_id": 87825940, "body": "@justinas well whatever works for FFI should work form wasm. What would you recommend for a valid FFI?"}, {"owner": {"reputation": 2001, "user_id": 2707195, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/RlRWZ.jpg?s=128&g=1", "display_name": "Andrei CACIO", "link": "https://stackoverflow.com/users/2707195/andrei-cacio"}, "edited": false, "score": 0, "creation_date": 1526629041, "post_id": 50398348, "comment_id": 87827484, "body": "also kinds thanks. I will try with a boxed vector and see how that goes :)"}, {"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 0, "creation_date": 1526653433, "post_id": 50398348, "comment_id": 87842533, "body": "<code>Box::into_raw</code> should work, by leaking memory."}], "owner": {"reputation": 2001, "user_id": 2707195, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/RlRWZ.jpg?s=128&g=1", "display_name": "Andrei CACIO", "link": "https://stackoverflow.com/users/2707195/andrei-cacio"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 322, "favorite_count": 0, "closed_date": 1526583738, "answer_count": 0, "score": 1, "last_activity_date": 1526633181, "creation_date": 1526582098, "last_edit_date": 1526633181, "question_id": 50398348, "link": "https://stackoverflow.com/questions/50398348/cant-read-rust-vector-from-javascript-with-webassembly", "closed_reason": "Duplicate", "title": "Can&#39;t read Rust vector from JavaScript with WebAssembly", "body": "<p>This code worked a few months back but now it stopped working and I can't figure out why:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[no_mangle]\npub fn simple_arr() -&gt; *mut i32 {\n    let vec = &amp;mut [111, 222, 333, 444];\n\n    return vec.as_mut_ptr();\n}\n\nfn main() {\n    println!(\"Hello, world!\");\n}\n</code></pre>\n\n<p>I am compiling the code using the following tools:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo +nightly build --target wasm32-unknown-unknown --release\n$ wasm-gc target/wasm32-unknown-unknown/release/wasm-examples.wasm m.wasm\n</code></pre>\n\n<p>I then fire up a HTTP server and I run the following code in the browser:</p>\n\n<pre><code>fetch('m.wasm')\n   .then(r =&gt; r.arrayBuffer())\n   .then(r =&gt; WebAssembly.instantiate(r))\n   .then(m =&gt; window.m = m);\n\nvar HEAP32 = new Int32Array(m.instance.exports.memory.buffer);\nvar arrayPtr = m.instance.exports.simple_arr();\n\nconsole.log(HEAP32[arrayPtr / Int32Array.BYTES_PER_ELEMENT]);\n</code></pre>\n\n<p>and I get 0. I keep getting 0 or random numbers even if I keep incrementing the offset/pointer.</p>\n\n<p>I can't figure out what am I missing.</p>\n\n<p>I also tried this form:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::os::raw::c_void;\n\n#[no_mangle]\npub fn simple_arr() -&gt; *mut c_void {\n    let mut vec = vec![100, 200, 300, 400];\n\n    vec.as_mut_ptr() \n}\n\nfn main() {\n    println!(\"Hello, world!\");\n}\n</code></pre>\n\n<p>but I still get the same result.</p>\n\n<p>I also tried compiling it with Emscripten and still the same result. </p>\n\n<p>Update:</p>\n\n<p>I tried exposing a static string and that works (via <a href=\"https://stackoverflow.com/questions/47529643/how-to-return-a-string-or-similar-from-rust-in-webassembly\">How to return a string (or similar) from Rust in WebAssembly?</a>). However exposing a vector seems different and I don't think this result applies to me. </p>\n\n<p>I tried declaring the vector static</p>\n\n<pre><code>#[no_mangle]\npub fn simple_arr() -&gt; *mut c_void {\n    static mut vec: &amp;'static [i32] = &amp;[100, 200, 300, 400];\n\n    unsafe { vec.as_mut_ptr() as *mut c_void }\n}\n</code></pre>\n\n<p>but I can't get it to compile.</p>\n\n<p>Update: I got it to work!!</p>\n\n<pre><code>#[no_mangle]\npub fn simple_arr() -&gt; *const i32 {\n    let vec = &amp;[100, 200, 300, 400];\n\n    vec.as_ptr() as *const i32\n}\n</code></pre>\n\n<p>As far as I understand, the pointer lifetime ended right after the function was executed. So with const we extend the lifetime of that pointer.</p>\n\n<p>Final update:</p>\n\n<p>ok so the final final version is to expose a wrapped pointer from a Boxed vector:</p>\n\n<pre><code>#[no_mangle]\npub fn simple_arr() -&gt; *mut i32 {\n    let vec = Box::new([100, 200, 300, 400]);\n\n    Box::into_raw(vec) as *mut i32\n}\n</code></pre>\n\n<p>I hope this is the \"non accidental\" version. If not so please leave a comment. </p>\n\n<p>Thanks everybody!</p>\n"}, {"tags": ["rust", "future", "rust-tokio"], "answers": [{"tags": [], "owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "is_accepted": true, "score": 2, "last_activity_date": 1561019996, "last_edit_date": 1561019996, "creation_date": 1526590059, "answer_id": 50400275, "question_id": 50394915, "link": "https://stackoverflow.com/questions/50394915/how-to-add-special-notready-logic-to-tokio-io/50400275#50400275", "title": "How to add special NotReady logic to tokio-io?", "body": "<p>If you need more data you need to call <code>poll_read</code> again until you either find what you were looking for or <code>poll_read</code> returns <code>NotReady</code>.</p>\n\n<p>You might want to avoid looping in one task for too long, so you can build yourself a <code>yield_task</code> function to call instead if <code>poll_read</code> didn't return <code>NotReady</code>; it makes sure your task gets called again ASAP after other pending tasks were run.</p>\n\n<p>To use it just run <code>return yield_task();</code>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn yield_inner() {\n    use futures::task;\n    task::current().notify();\n}\n\n#[inline(always)]\npub fn yield_task&lt;T, E&gt;() -&gt; Poll&lt;T, E&gt; {\n    yield_inner();\n    Ok(Async::NotReady)\n}\n</code></pre>\n\n<p>Also see <a href=\"https://github.com/rust-lang-nursery/futures-rs/issues/354\" rel=\"nofollow noreferrer\">futures-rs#354: Handle long-running, always-ready futures fairly #354</a>.</p>\n\n<hr>\n\n<p>With the new async/await API <code>futures::task::current</code> is gone; instead you'll need a <a href=\"https://doc.rust-lang.org/std/task/struct.Context.html\" rel=\"nofollow noreferrer\"><code>std::task::Context</code></a> reference, which is provided as parameter to the new <a href=\"https://doc.rust-lang.org/std/future/trait.Future.html#tymethod.poll\" rel=\"nofollow noreferrer\"><code>std::future::Future::poll</code></a> trait method.</p>\n\n<p>If you're already manually implementing the <a href=\"https://doc.rust-lang.org/std/future/trait.Future.html\" rel=\"nofollow noreferrer\"><code>std::future::Future</code></a> trait you can simply insert:</p>\n\n<pre><code>context.waker().wake_by_ref();\nreturn std::task::Poll::Pending;\n</code></pre>\n\n<p>Or build yourself a <a href=\"https://doc.rust-lang.org/std/future/trait.Future.html\" rel=\"nofollow noreferrer\"><code>Future</code></a>-implementing type that yields exactly once:</p>\n\n<pre><code>pub struct Yield {\n    ready: bool,\n}\n\nimpl core::future::Future for Yield {\n    type Output = ();\n\n    fn poll(self: core::pin::Pin&lt;&amp;mut Self&gt;, cx: &amp;mut core::task::Context&lt;'_&gt;) -&gt; core::task::Poll&lt;Self::Output&gt; {\n        let this = self.get_mut();\n        if this.ready {\n            core::task::Poll::Ready(())\n        } else {\n            cx.waker().wake_by_ref();\n            this.ready = true; // ready next round\n            core::task::Poll::Pending\n        }\n    }\n}\n\npub fn yield_task() -&gt; Yield {\n    Yield { ready: false }\n}\n</code></pre>\n\n<p>And then use it in <code>async</code> code like this:</p>\n\n<pre><code>yield_task().await;\n</code></pre>\n"}], "owner": {"reputation": 3261, "user_id": 113134, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/fd3877ba75ec0f883bdc21784f4124c7?s=128&d=identicon&r=PG&f=1", "display_name": "Michael Pankov", "link": "https://stackoverflow.com/users/113134/michael-pankov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 279, "favorite_count": 0, "accepted_answer_id": 50400275, "answer_count": 1, "score": 2, "last_activity_date": 1561019996, "creation_date": 1526569960, "last_edit_date": 1526575266, "question_id": 50394915, "link": "https://stackoverflow.com/questions/50394915/how-to-add-special-notready-logic-to-tokio-io", "title": "How to add special NotReady logic to tokio-io?", "body": "<p>I'm trying to make a <code>Stream</code> that would wait until a specific character is in buffer. I know there's <code>read_until()</code> on <code>BufRead</code> but I actually need a custom solution, as this is a stepping stone to implement waiting until a specific string in in buffer (or, for example, a regexp match happens).</p>\n\n<p>In my project where I first encountered the problem, problem was that future processing just hanged when I get a <code>Ready(_)</code> from inner future and return <code>NotReady</code> from my function. I discovered I shouldn't do that <a href=\"https://tokio.rs/docs/getting-started/futures/#returning-not-ready\" rel=\"nofollow noreferrer\">per docs</a> (last paragraph). However, what I didn't get, is what's the actual alternative that is promised in that paragraph. I read all the published documentation on the Tokio site and it doesn't make sense for me at the moment.</p>\n\n<p>So following is my current code. Unfortunately I couldn't make it simpler and smaller as it's already broken. Current result is this:</p>\n\n<pre><code>Err(Custom { kind: Other, error: Error(Shutdown) })\nErr(Custom { kind: Other, error: Error(Shutdown) })\nErr(Custom { kind: Other, error: Error(Shutdown) })\n&lt;ad infinum&gt;\n</code></pre>\n\n<p>Expected result is getting some <code>Ok(Ready(_))</code> out of it, while printing <code>W</code> and <code>W'</code>, and waiting for specific character in buffer.</p>\n\n<pre><code>extern crate futures;\nextern crate tokio_core;\nextern crate tokio_io;\nextern crate tokio_io_timeout;\nextern crate tokio_process;\n\nuse futures::stream::poll_fn;\nuse futures::{Async, Poll, Stream};\nuse tokio_core::reactor::Core;\nuse tokio_io::AsyncRead;\nuse tokio_io_timeout::TimeoutReader;\nuse tokio_process::CommandExt;\n\nuse std::process::{Command, Stdio};\nuse std::sync::{Arc, Mutex};\nuse std::thread;\nuse std::time::Duration;\n\nstruct Process {\n    child: tokio_process::Child,\n    stdout: Arc&lt;Mutex&lt;tokio_io_timeout::TimeoutReader&lt;tokio_process::ChildStdout&gt;&gt;&gt;,\n}\n\nimpl Process {\n    fn new(\n        command: &amp;str,\n        reader_timeout: Option&lt;Duration&gt;,\n        core: &amp;tokio_core::reactor::Core,\n    ) -&gt; Self {\n        let mut cmd = Command::new(command);\n        let cat = cmd.stdout(Stdio::piped());\n        let mut child = cat.spawn_async(&amp;core.handle()).unwrap();\n\n        let stdout = child.stdout().take().unwrap();\n        let mut timeout_reader = TimeoutReader::new(stdout);\n        timeout_reader.set_timeout(reader_timeout);\n        let timeout_reader = Arc::new(Mutex::new(timeout_reader));\n\n        Self {\n            child,\n            stdout: timeout_reader,\n        }\n    }\n}\n\nfn work() -&gt; Result&lt;(), ()&gt; {\n    let window = Arc::new(Mutex::new(Vec::new()));\n\n    let mut core = Core::new().unwrap();\n    let process = Process::new(\"cat\", Some(Duration::from_secs(20)), &amp;core);\n\n    let mark = Arc::new(Mutex::new(b'c'));\n\n    let read_until_stream = poll_fn({\n        let window = window.clone();\n        let timeout_reader = process.stdout.clone();\n        move || -&gt; Poll&lt;Option&lt;u8&gt;, std::io::Error&gt; {\n            let mut buf = [0; 8];\n            let poll;\n            {\n                let mut timeout_reader = timeout_reader.lock().unwrap();\n                poll = timeout_reader.poll_read(&amp;mut buf);\n            }\n            match poll {\n                Ok(Async::Ready(0)) =&gt; Ok(Async::Ready(None)),\n                Ok(Async::Ready(x)) =&gt; {\n                    {\n                        let mut window = window.lock().unwrap();\n                        println!(\"W: {:?}\", *window);\n                        println!(\"buf: {:?}\", &amp;buf[0..x]);\n                        window.extend(buf[0..x].into_iter().map(|x| *x));\n                        println!(\"W': {:?}\", *window);\n                        if let Some(_) = window.iter().find(|c| **c == *mark.lock().unwrap()) {\n                            Ok(Async::Ready(Some(1)))\n                        } else {\n                            Ok(Async::NotReady)\n                        }\n                    }\n                }\n                Ok(Async::NotReady) =&gt; Ok(Async::NotReady),\n                Err(e) =&gt; Err(e),\n            }\n        }\n    });\n\n    let _stream_thread = thread::spawn(move || {\n        for o in read_until_stream.wait() {\n            println!(\"{:?}\", o);\n        }\n    });\n\n    match core.run(process.child) {\n        Ok(_) =&gt; {}\n        Err(e) =&gt; {\n            println!(\"Child error: {:?}\", e);\n        }\n    }\n\n    Ok(())\n}\n\nfn main() {\n    work().unwrap();\n}\n</code></pre>\n\n<p><a href=\"https://github.com/mkpankov/window-read-test\" rel=\"nofollow noreferrer\">This is complete example project</a>.</p>\n"}, {"tags": ["rust", "stdin", "chars"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 9, "last_activity_date": 1526655885, "last_edit_date": 1526655885, "creation_date": 1526574783, "answer_id": 50396438, "question_id": 50394209, "link": "https://stackoverflow.com/questions/50394209/how-can-i-create-an-efficient-iterator-of-chars-from-stdin-with-rust/50396438#50396438", "title": "How can I create an efficient iterator of chars from stdin with Rust?", "body": "<p><a href=\"https://github.com/rust-lang/rust/issues/27802#issuecomment-377537778\" rel=\"nofollow noreferrer\">The corresponding issue for deprecation</a> nicely sums up the problems with <code>Read::chars</code> and offers suggestions:</p>\n\n<blockquote>\n  <p>Code that does not care about processing data incrementally can use\n  <code>Read::read_to_string</code> instead. Code that does care presumably also\n  wants to control its buffering strategy and work with <code>&amp;[u8]</code> and\n  <code>&amp;str</code> slices that are as large as possible, rather than one <code>char</code> at\n  a time. It should be based on the <code>str::from_utf8</code> function as well as\n  the <code>valid_up_to</code> and <code>error_len</code> methods of the\n  <a href=\"https://doc.rust-lang.org/nightly/std/str/struct.Utf8Error.html\" rel=\"nofollow noreferrer\"><code>Utf8Error</code></a>\n  type. One tricky aspect is dealing with cases where a single <code>char</code> is\n  represented in UTF-8 by multiple bytes where those bytes happen to be\n  split across separate <code>read</code> calls / buffer chunks.\n  (<code>Utf8Error::error_len</code> returning <code>None</code> indicates that this may be\n  the case.) <a href=\"https://crates.io/crates/utf-8\" rel=\"nofollow noreferrer\">The <code>utf-8</code> crate</a> solves\n  this, but in order to be flexible provides an API that probably has\n  too much surface to be included in the standard library.</p>\n  \n  <p>Of course the above is for data that is always UTF-8. If other\n  character encoding need to be supported, consider using the\n  <a href=\"https://crates.io/crates/encoding_rs\" rel=\"nofollow noreferrer\"><code>encoding_rs</code></a> or\n  <a href=\"https://crates.io/crates/encoding\" rel=\"nofollow noreferrer\"><code>encoding</code></a> crate.</p>\n</blockquote>\n\n<h3>Your own iterator</h3>\n\n<p>The <em>most efficient</em> solution in terms of <strong>number of I/O calls</strong> is to read everything into a giant buffer <code>String</code> and iterate over that:</p>\n\n<pre><code>use std::io::{self, Read};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut s = String::new();\n    stdin.lock().read_to_string(&amp;mut s).expect(\"Couldn't read\");\n    for c in s.chars() {\n        println!(\"&gt;{}&lt;\", c);\n    }\n}\n</code></pre>\n\n<p>You can combine this with an answer from <a href=\"https://stackoverflow.com/q/47193584/155423\">Is there an owned version of String::chars?</a>:</p>\n\n<pre><code>use std::io::{self, Read};\n\nfn reader_chars&lt;R: Read&gt;(mut rdr: R) -&gt; io::Result&lt;impl Iterator&lt;Item = char&gt;&gt; {\n    let mut s = String::new();\n    rdr.read_to_string(&amp;mut s)?;\n    Ok(s.into_chars()) // from https://stackoverflow.com/q/47193584/155423\n}\n\nfn main() -&gt; io::Result&lt;()&gt; {\n    let stdin = io::stdin();\n\n    for c in reader_chars(stdin.lock())? {\n        println!(\"&gt;{}&lt;\", c);\n    }\n\n    Ok(())\n}\n</code></pre>\n\n<p>We now have a function that returns an iterator of <code>char</code>s for any type that implements <code>Read</code>.</p>\n\n<p>Once you have this pattern, it's just a matter of deciding where to make the tradeoff of memory allocation vs I/O requests. Here's a similar idea that uses line-sized buffers:</p>\n\n<pre><code>use std::io::{BufRead, BufReader, Read};\n\nfn reader_chars&lt;R: Read&gt;(rdr: R) -&gt; impl Iterator&lt;Item = char&gt; {\n    // We use 6 bytes here to force emoji to be segmented for demo purposes\n    // Pick more appropriate size for your case\n    let reader = BufReader::with_capacity(6, rdr);\n\n    reader\n        .lines()\n        .flat_map(|l| l) // Ignoring any errors\n        .flat_map(|s| s.into_chars())  // from https://stackoverflow.com/q/47193584/155423\n}\n\nfn main() {\n    // emoji are 4 bytes each\n    let data = \"\ud83d\ude3b\ud83e\uddd0\ud83d\udc2a\ud83d\udca9\";\n    let data = data.as_bytes();\n\n    for c in reader_chars(data) {\n        println!(\"&gt;{}&lt;\", c);\n    }\n}\n</code></pre>\n\n<p>The far extreme would be to perform one I/O request for every character. This wouldn't take much memory, but would have a lot of I/O overhead.</p>\n\n<h3>A pragmatic answer</h3>\n\n<p>Copy and paste the implementation of <code>Read::chars</code> into your own code. It will work as well as it used to.</p>\n\n<p>See also: </p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/47193584/155423\">Is there an owned version of String::chars?</a></li>\n<li><a href=\"https://stackoverflow.com/q/22118221/155423\">How do you iterate over a string by character</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 2199, "user_id": 1542038, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/sq0X6.png?s=128&g=1", "display_name": "maxcountryman", "link": "https://stackoverflow.com/users/1542038/maxcountryman"}, "is_accepted": true, "score": 4, "last_activity_date": 1526854208, "creation_date": 1526854208, "answer_id": 50439862, "question_id": 50394209, "link": "https://stackoverflow.com/questions/50394209/how-can-i-create-an-efficient-iterator-of-chars-from-stdin-with-rust/50439862#50439862", "title": "How can I create an efficient iterator of chars from stdin with Rust?", "body": "<p>As a couple others have mentioned, it is possible to copy <a href=\"https://doc.rust-lang.org/1.26.0/src/std/io/mod.rs.html#2025\" rel=\"nofollow noreferrer\">the deprecated implementation of <code>Read::chars</code></a> for use in your own code. Whether this is truly ideal or not will depend on your use-case--for me, this proved to be good enough for now although it is likely that my application will outgrow this approach in the near-future.</p>\n\n<p>To illustrate how this can be done, let's look at a concrete example:</p>\n\n<pre><code>use std::io::{self, Error, ErrorKind, Read};\nuse std::result;\nuse std::str;\n\nstruct MyReader&lt;R&gt; {\n    inner: R,\n}\n\nimpl&lt;R: Read&gt; MyReader&lt;R&gt; {\n    fn new(inner: R) -&gt; MyReader&lt;R&gt; {\n        MyReader {\n            inner,\n        }\n    }\n\n#[derive(Debug)]\nenum MyReaderError {\n    NotUtf8,\n    Other(Error),\n}\n\nimpl&lt;R: Read&gt; Iterator for MyReader&lt;R&gt; {\n    type Item = result::Result&lt;char, MyReaderError&gt;;\n\n    fn next(&amp;mut self) -&gt; Option&lt;result::Result&lt;char, MyReaderError&gt;&gt; {\n        let first_byte = match read_one_byte(&amp;mut self.inner)? {\n            Ok(b) =&gt; b,\n            Err(e) =&gt; return Some(Err(MyReaderError::Other(e))),\n        };\n        let width = utf8_char_width(first_byte);\n        if width == 1 {\n            return Some(Ok(first_byte as char));\n        }\n        if width == 0 {\n            return Some(Err(MyReaderError::NotUtf8));\n        }\n        let mut buf = [first_byte, 0, 0, 0];\n        {\n            let mut start = 1;\n            while start &lt; width {\n                match self.inner.read(&amp;mut buf[start..width]) {\n                    Ok(0) =&gt; return Some(Err(MyReaderError::NotUtf8)),\n                    Ok(n) =&gt; start += n,\n                    Err(ref e) if e.kind() == ErrorKind::Interrupted =&gt; continue,\n                    Err(e) =&gt; return Some(Err(MyReaderError::Other(e))),\n                }\n            }\n        }\n        Some(match str::from_utf8(&amp;buf[..width]).ok() {\n            Some(s) =&gt; Ok(s.chars().next().unwrap());\n            None =&gt; Err(MyReaderError::NotUtf8),\n        })\n    }\n}\n</code></pre>\n\n<p>The above code also requires <code>read_one_byte</code> and <code>utf8_char_width</code> to be implemented. Those should look something like:</p>\n\n<pre><code>static UTF8_CHAR_WIDTH: [u8; 256] = [\n1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1, // 0x1F\n1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1, // 0x3F\n1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1, // 0x5F\n1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1, // 0x7F\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, // 0x9F\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, // 0xBF\n0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,\n2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2, // 0xDF\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3, // 0xEF\n4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0, // 0xFF\n];\n\nfn utf8_char_width(b: u8) -&gt; usize {\n    return UTF8_CHAR_WIDTH[b as usize] as usize;\n}\n\nfn read_one_byte(reader: &amp;mut Read) -&gt; Option&lt;io::Result&lt;u8&gt;&gt; {\n    let mut buf = [0];\n    loop {\n        return match reader.read(&amp;mut buf) {\n            Ok(0) =&gt; None,\n            Ok(..) =&gt; Some(Ok(buf[0])),\n            Err(ref e) if e.kind() == ErrorKind::Interrupted =&gt; continue,\n            Err(e) =&gt; Some(Err(e)),\n        };\n    }\n}\n</code></pre>\n\n<p>Now we can use the <code>MyReader</code> implementation to produce an iterator of <code>char</code>s over some reader, like <a href=\"https://doc.rust-lang.org/std/io/struct.Stdin.html\" rel=\"nofollow noreferrer\"><code>io::stdin::Stdin</code></a>:</p>\n\n<pre><code>fn main() {\n    let stdin = io::stdin();\n    let mut reader = MyReader::new(stdin.lock());\n    for c in reader {\n        println!(\"{}\", c);\n    }\n}\n</code></pre>\n\n<p>The limitations of this approach are discussed at length in the <a href=\"https://github.com/rust-lang/rust/issues/27802\" rel=\"nofollow noreferrer\">original issue thread</a>. <a href=\"https://github.com/rust-lang/rust/issues/27802#issuecomment-327289332\" rel=\"nofollow noreferrer\">One particular concern</a> worth pointing out however is that this iterator will not handle non-UTF-8 encoded streams correctly.</p>\n"}], "owner": {"reputation": 2199, "user_id": 1542038, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/sq0X6.png?s=128&g=1", "display_name": "maxcountryman", "link": "https://stackoverflow.com/users/1542038/maxcountryman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2241, "favorite_count": 1, "accepted_answer_id": 50439862, "answer_count": 2, "score": 6, "last_activity_date": 1614623022, "creation_date": 1526567864, "last_edit_date": 1526576864, "question_id": 50394209, "link": "https://stackoverflow.com/questions/50394209/how-can-i-create-an-efficient-iterator-of-chars-from-stdin-with-rust", "title": "How can I create an efficient iterator of chars from stdin with Rust?", "body": "<p>Now that the <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.chars\" rel=\"nofollow noreferrer\"><code>Read::chars</code></a> iterator <a href=\"https://github.com/rust-lang/rust/issues/27802#issuecomment-383940293\" rel=\"nofollow noreferrer\">has been officially deprecated</a>, what is the the proper way to obtain an iterator over the chars coming from a <code>Reader</code> like stdin without reading the entire stream into memory?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1526568360, "creation_date": 1526568360, "answer_id": 50394359, "question_id": 50393874, "link": "https://stackoverflow.com/questions/50393874/is-there-a-succinct-way-to-spawn-new-threads-with-copies-of-existing-data/50394359#50394359", "title": "Is there a succinct way to spawn new threads with copies of existing data?", "body": "<blockquote>\n  <p>Is there a better way?</p>\n</blockquote>\n\n<p>Nope, not using the standard library. There's <a href=\"https://github.com/rust-lang/rfcs/issues/2407\" rel=\"nofollow noreferrer\">a proto-RFC about supporting some syntax</a> for this, but that's a far way from happening. It does have multiple solutions that you can use today, such as the <a href=\"https://github.com/koute/stdweb/blob/8f6a2e5f4398601e8e5880ccedb723120b1844ff/examples/echo/src/main.rs#L24-L31\" rel=\"nofollow noreferrer\"><code>enclose</code> macro</a></p>\n\n<pre><code>macro_rules! enclose {\n    ( ($( $x:ident ),*) $y:expr ) =&gt; {\n        {\n            $(let $x = $x.clone();)*\n            $y\n        }\n    };\n}\n</code></pre>\n\n<p>This allows you to write your code like this:</p>\n\n<pre><code>enclose!((data, more_data) {\n    thread::spawn(move || foo(data, more_data));\n})\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": false, "score": 3, "last_activity_date": 1526569662, "creation_date": 1526569662, "answer_id": 50394804, "question_id": 50393874, "link": "https://stackoverflow.com/questions/50393874/is-there-a-succinct-way-to-spawn-new-threads-with-copies-of-existing-data/50394804#50394804", "title": "Is there a succinct way to spawn new threads with copies of existing data?", "body": "<p>You could use <code>iter::repeat()</code> to clone the data for you:</p>\n\n<pre><code>use std::thread;\n\nfn main() {\n    let data = vec![42; 10];\n    let more_data = \"Important data\".to_string();\n    let threads: Vec&lt;_&gt; = std::iter::repeat((data, more_data))\n        .take(5)\n        .map(|(data, more_data)| thread::spawn(|| foo(data, more_data)))\n        .collect();\n    let result: Vec&lt;_&gt; = threads.into_iter().map(|x| x.join()).collect();\n    result.iter().for_each(|x| {\n        println!(\"{:?}\", x);\n    });\n}\n\nfn foo(_data: Vec&lt;u64&gt;, _more_data: String) -&gt; u64 {\n    println!(\"Hello\");\n    42\n}\n</code></pre>\n"}], "owner": {"reputation": 194, "user_id": 7732825, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/42efe0f0ead85ed3e4ac7685e982be7b?s=128&d=identicon&r=PG&f=1", "display_name": "Morten Lohne", "link": "https://stackoverflow.com/users/7732825/morten-lohne"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 135, "favorite_count": 0, "accepted_answer_id": 50394359, "answer_count": 2, "score": 2, "last_activity_date": 1526569662, "creation_date": 1526566904, "last_edit_date": 1526568445, "question_id": 50393874, "link": "https://stackoverflow.com/questions/50393874/is-there-a-succinct-way-to-spawn-new-threads-with-copies-of-existing-data", "title": "Is there a succinct way to spawn new threads with copies of existing data?", "body": "<p>I'm trying to spawn several new threads, where each thread gets its own <em>copy</em> of some state. What I want is this: </p>\n\n<pre><code>use std::thread;\n\nfn main() {\n    let data = vec![42; 10];\n    let more_data = \"Important data\".to_string();\n    for _ in 1..=4 {\n        thread::spawn(|| foo(data.clone(), more_data.clone()));\n    }\n}\n\nfn foo(_data: Vec&lt;u64&gt;, _more_data: String) {}\n</code></pre>\n\n<p>This does not compile, because the clone is done on the new thread, which might outlive the main thread. Fair enough, but there seems to be no good way to tell Rust to do the clone on the main thread, and <em>then</em> move ownership to the new thread. Whenever I face this problem, I end up doing this:</p>\n\n<pre><code>use std::thread;\n\nfn main() {\n    let data = vec![42; 10];\n    let more_data = \"Important data\".to_string();\n    for _ in 1..=4 {\n        let cloned_data = data.clone();\n        let cloned_more_data = more_data.clone();\n        thread::spawn(move || foo(cloned_data, cloned_more_data));\n    }\n}\n\nfn foo(_data: Vec&lt;u64&gt;, _more_data: String) {}\n</code></pre>\n\n<p>It does what I want, but it's very noisy and boilerplaty, especially with lots of arguments. Is there a better way?</p>\n"}, {"tags": ["generics", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1526574051, "post_id": 50392257, "comment_id": 87808235, "body": "Don&#39;t put &quot;type&quot; in the name of the type; it&#39;s redundant. <code>Point</code> will suffice."}], "answers": [{"tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": false, "score": 1, "last_activity_date": 1526580807, "last_edit_date": 1526580807, "creation_date": 1526564315, "answer_id": 50392919, "question_id": 50392257, "link": "https://stackoverflow.com/questions/50392257/no-method-named-len-found-for-type-t-as-traittype-in-the-current-scope/50392919#50392919", "title": "No method named len found for type &lt;T as Trait&gt;::Type in the current scope", "body": "<blockquote>\n  <p>I want to inform <code>VecLengthDirector</code> that <code>AbstractVecLengthBuider</code>'s Associated Type is always <code>[i32; n]</code> (n \u2208 N).</p>\n</blockquote>\n\n<p>You can't.  If you want to use a particular operation on an associated type, you need to use one or more trait constraints.</p>\n\n<p>For example, indexing requires an implementation of the <a href=\"https://doc.rust-lang.org/std/ops/trait.Index.html\" rel=\"nofollow noreferrer\"><code>Index</code></a> trait.</p>\n\n<p>There is no trait that includes <code>&lt;[_]&gt;::len</code>.  That said, you can write one that should cover most relevant cases by abusing iterators:</p>\n\n<pre><code>pub trait Length {\n    fn len(self) -&gt; usize;\n}\n\nimpl&lt;'a, T&gt; Length for &amp;'a T\nwhere\n    &amp;'a T: IntoIterator,\n    &lt;&amp;'a T as IntoIterator&gt;::IntoIter: ::std::iter::ExactSizeIterator,\n{\n    fn len(self) -&gt; usize {\n        self.into_iter().len()\n    }\n}\n\npub trait RefLength {\n    fn len(&amp;self) -&gt; usize;\n}\n\nimpl&lt;T&gt; RefLength for T\nwhere\n    for&lt;'a&gt; &amp;'a T: Length,\n{\n    fn len(&amp;self) -&gt; usize {\n        Length::len(self)\n    }\n}\n</code></pre>\n\n<p>You could then use something like <code>type PointType: Index&lt;usize&gt; + RefLength;</code> in the trait definition.</p>\n"}, {"tags": [], "owner": {"reputation": 1503, "user_id": 672780, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hpTuM.png?s=128&g=1", "display_name": "LoganMzz", "link": "https://stackoverflow.com/users/672780/loganmzz"}, "is_accepted": true, "score": 2, "last_activity_date": 1526573577, "last_edit_date": 1526573577, "creation_date": 1526571906, "answer_id": 50395600, "question_id": 50392257, "link": "https://stackoverflow.com/questions/50392257/no-method-named-len-found-for-type-t-as-traittype-in-the-current-scope/50395600#50395600", "title": "No method named len found for type &lt;T as Trait&gt;::Type in the current scope", "body": "<p><strong>Quickfix</strong></p>\n\n<p>You need to specify the kind of <code>PointType</code>. For example <code>T: AbstractVecLengthBuider&lt;PointType = [i32]&gt;&gt;</code>. However, the size of <code>[i32]</code> is not known at compile time so you can replace it with <code>Vec&lt;i32&gt;</code>: <code>T: AbstractVecLengthBuider&lt;PointType = Vec&lt;i32&gt;&gt;</code>.</p>\n\n<p>If you still want to be generic, you can constrain <code>PointType</code> to be borrowable as <code>[i32]</code>:</p>\n\n<pre><code>impl&lt;T, P&gt; VecLengthDirector&lt;T&gt;\nwhere\n    T: AbstractVecLengthBuider&lt;PointType = P&gt;,\n    P: ::std::borrow::Borrow&lt;[i32]&gt;,\n{\n    fn construct(&amp;self) -&gt; f64 {\n        let s = self.builder.get_start_point().borrow();\n        let e = self.builder.get_end_point().borrow();\n        // ...\n    }\n}\n</code></pre>\n\n<p>This is not idiomatic Rust.</p>\n\n<p><strong>Idiomatic Rust way</strong></p>\n\n<p>Your loop can be rewritten to more idiomatic Rust:</p>\n\n<pre><code>s.iter()\n    .zip(e.iter())\n    .map(|(se, ee)| (se - ee).pow(2) as f64)\n    .sum()\n</code></pre>\n\n<p>Then you just need to constrain <code>PointType</code> to be iterable over <code>i32</code>: </p>\n\n<pre><code>impl&lt;T, P&gt; VecLengthDirector&lt;T&gt;\nwhere\n    T: AbstractVecLengthBuider&lt;PointType = P&gt;,\n    P: ::std::iter::IntoIterator&lt;Item = i32&gt;,\n{\n    fn construct(&amp;self) -&gt; f64 {\n        let s = self.builder.get_start_point();\n        let e = self.builder.get_end_point();\n\n        s.into_iter()\n            .zip(e.into_iter())\n            .map(|(se, ee)| (se - ee).pow(2) as f64)\n            .sum::&lt;f64&gt;()\n            .sqrt()\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 87, "user_id": 9795022, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "yutaaa", "link": "https://stackoverflow.com/users/9795022/yutaaa"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 871, "favorite_count": 0, "accepted_answer_id": 50395600, "answer_count": 2, "score": 2, "last_activity_date": 1527153991, "creation_date": 1526562412, "last_edit_date": 1527153991, "question_id": 50392257, "link": "https://stackoverflow.com/questions/50392257/no-method-named-len-found-for-type-t-as-traittype-in-the-current-scope", "title": "No method named len found for type &lt;T as Trait&gt;::Type in the current scope", "body": "<p>I want to inform <code>VecLengthDirector</code> that <code>AbstractVecLengthBuider</code>'s associated type is always <code>[i32; n]</code> (n \u2208 N). I wrote the following code:</p>\n\n<pre><code>struct VecLengthDirector&lt;T&gt; {\n    builder: T,\n}\n\nimpl&lt;T&gt; VecLengthDirector&lt;T&gt;\nwhere\n    T: AbstractVecLengthBuider,\n{\n    fn construct(&amp;self) -&gt; f64 {\n        let s = self.builder.get_start_point();\n        let e = self.builder.get_end_point();\n\n        let mut sum: i32 = 0;\n        for i in 0..s.len() {\n            sum += (s[i] - e[i]).pow(2);\n        }\n\n        (sum as f64).sqrt()\n    }\n}\n\ntrait AbstractVecLengthBuider {\n    type PointType;\n    fn add_start_point(&amp;mut self, point: Self::PointType);\n    fn get_start_point(&amp;self) -&gt; Self::PointType;\n    fn add_end_point(&amp;mut self, point: Self::PointType);\n    fn get_end_point(&amp;self) -&gt; Self::PointType;\n}\n</code></pre>\n\n<p>And the errors reported.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `len` found for type `&lt;T as AbstractVecLengthBuider&gt;::PointType` in the current scope\n  --&gt; src/main.rs:14:23\n   |\n14 |         for i in 0..s.len() {\n   |                       ^^^\n\nerror[E0608]: cannot index into a value of type `&lt;T as AbstractVecLengthBuider&gt;::PointType`\n  --&gt; src/main.rs:15:21\n   |\n15 |             sum += (s[i] - e[i]).pow(2);\n   |                     ^^^^\n\nerror[E0608]: cannot index into a value of type `&lt;T as AbstractVecLengthBuider&gt;::PointType`\n  --&gt; src/main.rs:15:28\n   |\n15 |             sum += (s[i] - e[i]).pow(2);\n   |                            ^^^^\n</code></pre>\n"}, {"tags": ["asynchronous", "rust", "future", "mutable", "rust-tokio"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1526566616, "post_id": 50391668, "comment_id": 87803165, "body": "Thank you for providing a good quality minimal example."}], "answers": [{"comments": [{"owner": {"reputation": 1936, "user_id": 1584012, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/382084cea852ce1fd7c613db8e3bfcbe?s=128&d=identicon&r=PG", "display_name": "wigy", "link": "https://stackoverflow.com/users/1584012/wigy"}, "edited": false, "score": 1, "creation_date": 1526573062, "post_id": 50394159, "comment_id": 87807652, "body": "Shit. This is one badass leaky abstraction. Thanks for clearing it up for us."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 8, "last_activity_date": 1526567725, "creation_date": 1526567725, "answer_id": 50394159, "question_id": 50391668, "link": "https://stackoverflow.com/questions/50391668/running-asynchronous-mutable-operations-with-rust-futures/50394159#50394159", "title": "Running asynchronous mutable operations with Rust futures", "body": "<p>Sometimes, it's easier to see lifetime errors if you split values up onto multiple lines. Let's try that with the closure in question:</p>\n\n<pre><code>.and_then(move |_| {\n    let c = processor_clone;\n    let mut d = c.borrow_mut();\n    let e = d.process(request);\n    e\n});\n</code></pre>\n\n<p>If you compile this... it works. If we try recombining the lines, we can get this to fail:</p>\n\n<pre><code>.and_then(move |_| {\n    let c = processor_clone;\n    c.borrow_mut().process(request)\n});\n</code></pre>\n\n<p>And this to work:</p>\n\n<pre><code>.and_then(move |_| {\n    let c = processor_clone;\n    return c.borrow_mut().process(request);\n});\n</code></pre>\n\n<p>The only difference is the explicit return and the semicolon. This is very similar to <a href=\"https://stackoverflow.com/q/43590162/155423\">When returning the outcome of consuming a StdinLock, why was the borrow to stdin retained?</a>, so let's try the suggestion of one of the answers to enable <a href=\"https://stackoverflow.com/q/50251487/155423\"><em>non-lexical lifetimes</em></a>. This allows your original code to compile as well.</p>\n\n<p>TL;DR: It's a weakness in Rust's current borrow checker implementation and will be magically fixed at some point. In the meantime, I suggest writing it as two lines:</p>\n\n<pre><code>.and_then(move |_| {\n    let mut c = processor_clone.borrow_mut();\n    c.process(request)\n});\n</code></pre>\n"}], "owner": {"reputation": 2030, "user_id": 1069278, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0507d3e2796540aab634041439f84be7?s=128&d=identicon&r=PG", "display_name": "Z&#243;lyomi Istv&#225;n", "link": "https://stackoverflow.com/users/1069278/z%c3%b3lyomi-istv%c3%a1n"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 863, "favorite_count": 1, "accepted_answer_id": 50394159, "answer_count": 1, "score": 7, "last_activity_date": 1526567725, "creation_date": 1526560626, "last_edit_date": 1526566478, "question_id": 50391668, "link": "https://stackoverflow.com/questions/50391668/running-asynchronous-mutable-operations-with-rust-futures", "title": "Running asynchronous mutable operations with Rust futures", "body": "<p>I'm building a service in Rust using tokio-rs and was happy with this tech stack so far. I'm now trying to chain up async operations that includes writes and having a hard time with the borrow checker.</p>\n\n<p>My simplified minimal code sample is this:</p>\n\n<pre><code>extern crate futures; // 0.1.21\n\nuse futures::Future;\nuse std::{cell::RefCell, rc::Rc};\n\ntrait RequestProcessor {\n    fn prepare(&amp;self) -&gt; Box&lt;Future&lt;Item = (), Error = ()&gt;&gt;;\n    fn process(&amp;mut self, request: String) -&gt; Box&lt;Future&lt;Item = (), Error = ()&gt;&gt;;\n}\n\nstruct Service {\n    processor: Rc&lt;RefCell&lt;RequestProcessor&gt;&gt;,\n}\n\nimpl Service {\n    fn serve(&amp;mut self, request: String) -&gt; Box&lt;Future&lt;Item = (), Error = ()&gt;&gt; {\n        let processor_clone = self.processor.clone();\n        let result_fut = self\n            .processor\n            .borrow()\n            .prepare()\n            .and_then(move |_| processor_clone.borrow_mut().process(request));\n        Box::new(result_fut)\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>As a short summary, after an async preparation step I'm trying to run another async operation that writes a field of <code>self</code>. Without mutability this works easily with a plain <code>Rc</code> member, but mutability breaks it, producing the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `processor_clone` does not live long enough\n  --&gt; src/main.rs:22:32\n   |\n22 |             .and_then(move |_| processor_clone.borrow_mut().process(request));\n   |                                ^^^^^^^^^^^^^^^                             - `processor_clone` dropped here while still borrowed\n   |                                |\n   |                                borrowed value does not live long enough\n   |\n   = note: values in a scope are dropped in the opposite order they are created\n</code></pre>\n\n<p>I'd expect this should work, I don't see where the mutable reference is still borrowed. I think <code>process()</code> should release the processor's <code>&amp;mut self</code> after the future is returned, so the compile error shouldn't occur.</p>\n\n<p>Could you please explain the underlying reasons? How should this example be changed to be accepted by the compiler?</p>\n"}, {"tags": ["pointers", "memory-management", "rust", "traits", "lifetime"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1526558625, "post_id": 50390682, "comment_id": 87797449, "body": "Your example can be minimized a lot. The issue is that the compiler cannot infer the lifetime of <code>&amp;mut self</code> in <code>stop</code>. I think that it cannot infer this, you must be explicit: <code>&amp;&#39;b mut self</code>, but that makes you &quot;pollute&quot; your trait."}], "answers": [{"comments": [{"owner": {"reputation": 2731, "user_id": 109414, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2b68fe77303968e573ca1e7004462ae7?s=128&d=identicon&r=PG", "display_name": "Edd Barrett", "link": "https://stackoverflow.com/users/109414/edd-barrett"}, "edited": false, "score": 0, "creation_date": 1526594387, "post_id": 50399110, "comment_id": 87817987, "body": "Hi Shepmaster. Youch. Seems I&#39;ve really misunderstood. Now I&#39;m wondering why the commenter in the other question suggested I use PhantomData to improve the type safety of my raw pointer? Is there anything I could have done?"}, {"owner": {"reputation": 2731, "user_id": 109414, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2b68fe77303968e573ca1e7004462ae7?s=128&d=identicon&r=PG", "display_name": "Edd Barrett", "link": "https://stackoverflow.com/users/109414/edd-barrett"}, "edited": false, "score": 0, "creation_date": 1526594719, "post_id": 50399110, "comment_id": 87818081, "body": "The rust docs say something about raw pointers and PhantomData, but I perhaps got it wrong: <a href=\"https://doc.rust-lang.org/1.22.1/std/marker/struct.PhantomData.html#examples\" rel=\"nofollow noreferrer\">doc.rust-lang.org/1.22.1/std/marker/&hellip;</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2731, "user_id": 109414, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2b68fe77303968e573ca1e7004462ae7?s=128&d=identicon&r=PG", "display_name": "Edd Barrett", "link": "https://stackoverflow.com/users/109414/edd-barrett"}, "edited": false, "score": 0, "creation_date": 1526606780, "post_id": 50399110, "comment_id": 87820789, "body": "@EddBarrett I&#39;ve replied to your last comment. Let me know how that is."}, {"owner": {"reputation": 2731, "user_id": 109414, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2b68fe77303968e573ca1e7004462ae7?s=128&d=identicon&r=PG", "display_name": "Edd Barrett", "link": "https://stackoverflow.com/users/109414/edd-barrett"}, "edited": false, "score": 0, "creation_date": 1526631837, "post_id": 50399110, "comment_id": 87829097, "body": "Thanks. I think I get it. I&#39;m probably not going to use <code>PhantomData</code> at all, and instead: a) ensure <code>Trace</code> never leaks its raw pointer to the outside world, and b) that <code>Trace</code> itself only dereferences <code>buf</code> when it is safe. I think that&#39;s the best I can do."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 0, "last_activity_date": 1526606658, "last_edit_date": 1526606658, "creation_date": 1526584955, "answer_id": 50399110, "question_id": 50390682, "link": "https://stackoverflow.com/questions/50390682/can-i-return-a-struct-which-uses-phantomdata-from-a-trait-implementation-to-add/50399110#50399110", "title": "Can I return a struct which uses PhantomData from a trait implementation to add a lifetime to a raw pointer without polluting the interface?", "body": "<p>I'm going to ignore your direct question because I believe you arrived at it after misunderstanding several initial steps.</p>\n\n<blockquote>\n  <p>I could in <em>theory</em> move the <code>buf</code> pointer out of a <code>MyTrace</code> and use if after the struct has died</p>\n</blockquote>\n\n<p>Copy the pointer, not move it, but yes.</p>\n\n<blockquote>\n  <p>By using a <code>PhantomData</code> we can ensure that only references to <code>buf</code> can be obtained</p>\n</blockquote>\n\n<p>This is not true. It is still equally easy to get a copy of the raw pointer and misuse it even when you add a <code>PhantomData</code>. </p>\n\n<blockquote>\n  <p>Did I understand the motivation for <code>PhantomData</code> in this scenario correctly?</p>\n</blockquote>\n\n<p>No. <code>PhantomData</code> is used when you want to act like you have a value of some type without actually having it. Pretending to have a reference to something is only useful when there is <em>something to have a reference to</em>. There's no such value to reference in your example.</p>\n\n<blockquote>\n  <p><a href=\"https://doc.rust-lang.org/1.22.1/std/marker/struct.PhantomData.html#examples\" rel=\"nofollow noreferrer\">The Rust docs say something about raw pointers and <code>PhantomData</code></a>, but I perhaps got it wrong</p>\n</blockquote>\n\n<p>That example actually shows my point well. The <code>Slice</code> type is intended to behave as if it has a reference to the <code>Vec</code> that it's borrowed from:</p>\n\n<pre><code>fn borrow_vec&lt;'a, T&gt;(vec: &amp;'a Vec&lt;T&gt;) -&gt; Slice&lt;'a, T&gt;\n</code></pre>\n\n<p>Since this <code>Slice</code> type doesn't actually have a reference, it needs a <code>PhantomData</code> to <em>act</em> like it has a reference. Note that the lifetime <code>'a</code> isn't just made up out of whole cloth \u2014 it's related to an existing value (the <code>Vec</code>). It would cause memory unsafety for the <code>Slice</code> to exist after the <code>Vec</code> has moved, thus it makes sense to include a lifetime of the <code>Vec</code>.</p>\n\n<blockquote>\n  <p>why the commenter in the other question suggested I use <code>PhantomData</code> to improve the type safety of my raw pointer</p>\n</blockquote>\n\n<p>You can use <code>PhantomData</code> to improve the safety of raw pointers that act as references, but yours doesn't have some existing Rust value to reference. You can also use it for correctness if your pointer owns some value behind the reference, which yours seemingly does. However, since it's a <code>c_void</code>, it's not really useful. You'd usually see it as <code>PhantomData&lt;MyOwnedType&gt;</code>.</p>\n\n<blockquote>\n  <p>Where is <code>'static</code> coming from in the error message?</p>\n</blockquote>\n\n<p><a href=\"https://stackoverflow.com/q/42028470/155423\">Why is adding a lifetime to a trait with the plus operator (Iterator&lt;Item = &amp;Foo&gt; + &#39;a) needed?</a></p>\n"}], "owner": {"reputation": 2731, "user_id": 109414, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2b68fe77303968e573ca1e7004462ae7?s=128&d=identicon&r=PG", "display_name": "Edd Barrett", "link": "https://stackoverflow.com/users/109414/edd-barrett"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 95, "favorite_count": 1, "answer_count": 1, "score": 2, "last_activity_date": 1526606658, "creation_date": 1526557648, "last_edit_date": 1526580591, "question_id": 50390682, "link": "https://stackoverflow.com/questions/50390682/can-i-return-a-struct-which-uses-phantomdata-from-a-trait-implementation-to-add", "title": "Can I return a struct which uses PhantomData from a trait implementation to add a lifetime to a raw pointer without polluting the interface?", "body": "<p>In <a href=\"https://stackoverflow.com/questions/50258359/can-a-struct-containing-a-raw-pointer-implement-send-and-be-ffi-safe/50341075\">this question</a> someone commented that you could use <code>PhantomData</code> to add a lifetime bound to a raw pointer inside a struct. I thought I'd try doing this on an existing piece of code I've been working on.</p>\n\n<p>Here's our (minimised) starting point. This compiles (<a href=\"https://play.rust-lang.org/?gist=d440ef5a51abad1ea656e965e9d5ef41&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">playground</a>):</p>\n\n<pre><code>extern crate libc;\n\nuse libc::{c_void, free, malloc};\n\ntrait Trace {}\n\nstruct MyTrace {\n    #[allow(dead_code)]\n    buf: *mut c_void,\n}\n\nimpl MyTrace {\n    fn new() -&gt; Self {\n        Self {\n            buf: unsafe { malloc(128) },\n        }\n    }\n}\n\nimpl Trace for MyTrace {}\n\nimpl Drop for MyTrace {\n    fn drop(&amp;mut self) {\n        unsafe { free(self.buf) };\n    }\n}\n\ntrait Tracer {\n    fn start(&amp;mut self);\n    fn stop(&amp;mut self) -&gt; Box&lt;Trace&gt;;\n}\n\nstruct MyTracer {\n    trace: Option&lt;MyTrace&gt;,\n}\n\nimpl MyTracer {\n    fn new() -&gt; Self {\n        Self { trace: None }\n    }\n}\n\nimpl Tracer for MyTracer {\n    fn start(&amp;mut self) {\n        self.trace = Some(MyTrace::new());\n        // Pretend the buffer is mutated in C here...\n    }\n\n    fn stop(&amp;mut self) -&gt; Box&lt;Trace&gt; {\n        Box::new(self.trace.take().unwrap())\n    }\n}\n\nfn main() {\n    let mut tracer = MyTracer::new();\n    tracer.start();\n    let _trace = tracer.stop();\n    println!(\"Hello, world!\");\n}\n</code></pre>\n\n<p>I think that the problem with the above code is that I could <em>in theory</em> move the <code>buf</code> pointer out of a <code>MyTrace</code> and use if after the struct has died. In this case the underlying buffer will have been freed due to the <code>Drop</code> implementation.</p>\n\n<p>By using a <code>PhantomData</code> we can ensure that only references to <code>buf</code> can be obtained, and that the lifetimes of those references are bound to the instances of <code>MyTrace</code> from whence they came.</p>\n\n<p>We can proceed like this (<a href=\"https://play.rust-lang.org/?gist=1f000c34eabff4283eaacfa87c0d89d6&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">playground</a>):</p>\n\n<pre><code>extern crate libc;\n\nuse libc::{c_void, free, malloc};\nuse std::marker::PhantomData;\n\ntrait Trace {}\n\nstruct MyTrace&lt;'b&gt; {\n    #[allow(dead_code)]\n    buf: *mut c_void,\n    _phantom: PhantomData&lt;&amp;'b c_void&gt;,\n}\n\nimpl&lt;'b&gt; MyTrace&lt;'b&gt; {\n    fn new() -&gt; Self {\n        Self {\n            buf: unsafe { malloc(128) },\n            _phantom: PhantomData,\n        }\n    }\n}\n\nimpl&lt;'b&gt; Trace for MyTrace&lt;'b&gt; {}\n\nimpl&lt;'b&gt; Drop for MyTrace&lt;'b&gt; {\n    fn drop(&amp;mut self) {\n        unsafe { free(self.buf) };\n    }\n}\n\ntrait Tracer {\n    fn start(&amp;mut self);\n    fn stop(&amp;mut self) -&gt; Box&lt;Trace&gt;;\n}\n\nstruct MyTracer&lt;'b&gt; {\n    trace: Option&lt;MyTrace&lt;'b&gt;&gt;,\n}\n\nimpl&lt;'b&gt; MyTracer&lt;'b&gt; {\n    fn new() -&gt; Self {\n        Self { trace: None }\n    }\n}\n\nimpl&lt;'b&gt; Tracer for MyTracer&lt;'b&gt; {\n    fn start(&amp;mut self) {\n        self.trace = Some(MyTrace::new());\n        // Pretend the buffer is mutated in C here...\n    }\n\n    fn stop(&amp;mut self) -&gt; Box&lt;Trace&gt; {\n        Box::new(self.trace.take().unwrap())\n    }\n}\n\nfn main() {\n    let mut tracer = MyTracer::new();\n    tracer.start();\n    let _trace = tracer.stop();\n    println!(\"Hello, world!\");\n}\n</code></pre>\n\n<p>But this will give the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime due to conflicting requirements\n  --&gt; src/main.rs:53:36\n   |\n53 |         Box::new(self.trace.take().unwrap())\n   |                                    ^^^^^^\n   |\nnote: first, the lifetime cannot outlive the lifetime 'b as defined on the impl at 46:1...\n  --&gt; src/main.rs:46:1\n   |\n46 | impl&lt;'b&gt; Tracer for MyTracer&lt;'b&gt; {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   = note: ...so that the types are compatible:\n           expected std::option::Option&lt;MyTrace&lt;'_&gt;&gt;\n              found std::option::Option&lt;MyTrace&lt;'b&gt;&gt;\n   = note: but, the lifetime must be valid for the static lifetime...\n   = note: ...so that the expression is assignable:\n           expected std::boxed::Box&lt;Trace + 'static&gt;\n              found std::boxed::Box&lt;Trace&gt;\n</code></pre>\n\n<p>I have three sub-questions:</p>\n\n<ul>\n<li>Did I understand the motivation for <code>PhantomData</code> in this scenario correctly?</li>\n<li>Where is <code>'static</code> coming from in the error message?</li>\n<li>Can this be made to work without changing the interface of <code>stop</code>? Specifically, without adding a lifetime to the return type?</li>\n</ul>\n"}, {"tags": ["casting", "rust", "ffi"], "comments": [{"owner": {"reputation": 32558, "user_id": 101090, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/066290971688c0a44cc4159a9f210dcf?s=128&d=identicon&r=PG", "display_name": "Jorge Israel Pe&#241;a", "link": "https://stackoverflow.com/users/101090/jorge-israel-pe%c3%b1a"}, "edited": false, "score": 1, "creation_date": 1526568808, "post_id": 50384395, "comment_id": 87804835, "body": "Wow I answered both and completely forgot, nice. I did have this vague feeling like I had before."}, {"owner": {"reputation": 77, "user_id": 9759642, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c3f2ad6d29f808e40bb8956218b96269?s=128&d=identicon&r=PG&f=1", "display_name": "Ryan C.", "link": "https://stackoverflow.com/users/9759642/ryan-c"}, "reply_to_user": {"reputation": 32558, "user_id": 101090, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/066290971688c0a44cc4159a9f210dcf?s=128&d=identicon&r=PG", "display_name": "Jorge Israel Pe&#241;a", "link": "https://stackoverflow.com/users/101090/jorge-israel-pe%c3%b1a"}, "edited": false, "score": 0, "creation_date": 1526574284, "post_id": 50384395, "comment_id": 87808365, "body": "I appreciate both answers :)"}], "answers": [{"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1526572564, "post_id": 50384784, "comment_id": 87807362, "body": "To cast away the outer reference, you don&#39;t need to specify the inner pointer type; <code>mut_ref as *mut _ as *mut *mut c_void</code> will work."}, {"owner": {"reputation": 32558, "user_id": 101090, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/066290971688c0a44cc4159a9f210dcf?s=128&d=identicon&r=PG", "display_name": "Jorge Israel Pe&#241;a", "link": "https://stackoverflow.com/users/101090/jorge-israel-pe%c3%b1a"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1526572705, "post_id": 50384784, "comment_id": 87807439, "body": "Yup, just being as explicit as possible, since the OP was having trouble following the types."}], "tags": [], "owner": {"reputation": 32558, "user_id": 101090, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/066290971688c0a44cc4159a9f210dcf?s=128&d=identicon&r=PG", "display_name": "Jorge Israel Pe&#241;a", "link": "https://stackoverflow.com/users/101090/jorge-israel-pe%c3%b1a"}, "is_accepted": true, "score": 6, "last_activity_date": 1526538787, "creation_date": 1526538787, "answer_id": 50384784, "question_id": 50384395, "link": "https://stackoverflow.com/questions/50384395/why-does-casting-from-a-reference-to-a-c-void-pointer-require-a-double-cast/50384784#50384784", "title": "Why does casting from a reference to a c_void pointer require a double cast?", "body": "<p>If you have:</p>\n\n<pre><code>let mut bar: *mut foo = ptr::null_mut();\n</code></pre>\n\n<p>Then you take <code>&amp;mut bar</code>, the type is <code>&amp;mut *mut foo</code>. But you need <code>*mut *mut foo</code>, so you can simply coerce it by doing <code>&amp;mut *mut foo as *mut *mut _</code>, where <code>_</code> is inferred as <code>foo</code> (try typing it explicitly: <code>*mut *mut foo</code>). Once you have it as a raw pointer, <em>then</em> you are able to cast to <code>*mut *mut c_void</code>.</p>\n\n<p>So to recap, the double cast is necessary to first coerce from a reference to a raw pointer, <em>then</em> from a raw pointer cast to a <code>c_void</code>, because you otherwise normally can't cast straight from a reference to a raw <code>c_void</code> pointer.</p>\n\n<p>Fully typed example:</p>\n\n<pre><code>let mut bar: *mut foo = std::ptr::null_mut();\n\nlet mut_ref: &amp;mut *mut foo = &amp;mut bar;\n\nlet raw_ptr: *mut *mut foo = mut_ref as *mut *mut _;\n\nlet void_cast: *mut *mut c_void = raw_ptr as *mut *mut c_void;\n\nunsafe { ffi(void_cast); }\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=a13bbc66ea7e35395609f64afaf3121d&amp;version=stable&amp;mode=debug\" rel=\"noreferrer\">Playground</a></p>\n"}], "owner": {"reputation": 77, "user_id": 9759642, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c3f2ad6d29f808e40bb8956218b96269?s=128&d=identicon&r=PG&f=1", "display_name": "Ryan C.", "link": "https://stackoverflow.com/users/9759642/ryan-c"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2928, "favorite_count": 1, "closed_date": 1526565969, "accepted_answer_id": 50384784, "answer_count": 1, "score": 5, "last_activity_date": 1526538787, "creation_date": 1526537208, "last_edit_date": 1526537649, "question_id": 50384395, "link": "https://stackoverflow.com/questions/50384395/why-does-casting-from-a-reference-to-a-c-void-pointer-require-a-double-cast", "closed_reason": "Duplicate", "title": "Why does casting from a reference to a c_void pointer require a double cast?", "body": "<p>When working with Foreign Function Interfaces (FFIs), I regularly see a double cast from reference-to-pointer-to-struct to pointer-to-pointer-to-void.  For example, given an FFI-like function:</p>\n\n<pre><code>unsafe fn ffi(param: *mut *mut c_void) {}\n</code></pre>\n\n<p>The way to call this is:</p>\n\n<pre><code>struct foo;\n\nlet mut bar: *mut foo = ptr::null_mut();\nunsafe { ffi(&amp;mut bar as *mut *mut _ as *mut *mut c_void); }\n</code></pre>\n\n<p>Removing the intermediate cast yields this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0606]: casting `&amp;mut *mut foo` as `*mut *mut winapi::ctypes::c_void` is invalid\n  --&gt; src\\main.rs:36:18\n   |\n36 |     unsafe { ffi(&amp;mut bar as *mut *mut c_void); }\n   |\n</code></pre>\n\n<p>I tried to get the compiler to tell me what the intermediate type is by forcing it into an obviously wrong type:</p>\n\n<pre><code>let mut bar: *mut foo = ptr::null_mut();\nlet mut test: u8 = &amp;mut bar as *mut *mut _;\n</code></pre>\n\n<p>Which resulted in this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src\\main.rs:36:24\n   |\n36 |     let mut test: u8 = &amp;mut bar as *mut *mut _;\n   |                        ^^^^^^^^^^^^^^^^^^^^^^^ expected u8, found *-ptr\n   |\n   = note: expected type `u8`\n              found type `*mut *mut _`\n</code></pre>\n\n<p>But <code>*-ptr</code> doesn't seem to be an actual type that I can put in place of <code>_</code>.  Why is the intermediate <code>as *mut *mut _</code> required, and what is the inferred type?</p>\n\n<p>I found this question which is related (<a href=\"https://stackoverflow.com/questions/24191249/working-with-c-void-in-an-ffi\">Working with c_void in an FFI</a>) but it doesn't actually explain anything about the double cast.</p>\n"}]