[{"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 4, "creation_date": 1457556103, "post_id": 35901547, "comment_id": 59464712, "body": "There is interest is expanding the concept of <code>Pattern</code> to arbitrary slices: <a href=\"https://github.com/rust-lang/rust/issues/27721#issuecomment-185405392\" rel=\"nofollow noreferrer\">comment</a>, <a href=\"https://github.com/rust-lang/rfcs/issues/984\" rel=\"nofollow noreferrer\">RFC</a>."}], "answers": [{"comments": [{"owner": {"reputation": 1406, "user_id": 701211, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/bc08db90032b212b492536d31464550e?s=128&d=identicon&r=PG&f=1", "display_name": "JasonN", "link": "https://stackoverflow.com/users/701211/jasonn"}, "edited": false, "score": 0, "creation_date": 1457584260, "post_id": 35907071, "comment_id": 59475145, "body": "Very nice. I think I basically did it by hand with two nested for loops. The subarrays I&#39;m looking for are all very small, so doing something more complex like KMP would be useless for my issues."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 4, "creation_date": 1457607399, "post_id": 35907071, "comment_id": 59487630, "body": "While this is a short and nice solution, please note that the algorithm runs in O(|haystack| * |needle|). This won&#39;t matter in most cases, but for more advanced and (asymptotically) faster algorithms, see <a href=\"https://en.wikipedia.org/wiki/String_searching_algorithm\" rel=\"nofollow noreferrer\">String searching algorithm (Wikipedia)</a>."}, {"owner": {"reputation": 1406, "user_id": 701211, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/bc08db90032b212b492536d31464550e?s=128&d=identicon&r=PG&f=1", "display_name": "JasonN", "link": "https://stackoverflow.com/users/701211/jasonn"}, "edited": false, "score": 1, "creation_date": 1457622508, "post_id": 35907071, "comment_id": 59498679, "body": "This winds up being unacceptably slow. windows().position() is 100x slower than two nested loops."}, {"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "reply_to_user": {"reputation": 1406, "user_id": 701211, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/bc08db90032b212b492536d31464550e?s=128&d=identicon&r=PG&f=1", "display_name": "JasonN", "link": "https://stackoverflow.com/users/701211/jasonn"}, "edited": false, "score": 2, "creation_date": 1457702497, "post_id": 35907071, "comment_id": 59538635, "body": "@JasonN 100x sounds extreme. Are you sure you&#39;re compiling with optimizations?"}, {"owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "reply_to_user": {"reputation": 1406, "user_id": 701211, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/bc08db90032b212b492536d31464550e?s=128&d=identicon&r=PG&f=1", "display_name": "JasonN", "link": "https://stackoverflow.com/users/701211/jasonn"}, "edited": false, "score": 1, "creation_date": 1587891167, "post_id": 35907071, "comment_id": 108682295, "body": "@JasonN how did you do with two nested loops? This solution should compile into the same thing as one loop."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 26, "last_activity_date": 1457584612, "last_edit_date": 1457584612, "creation_date": 1457580767, "answer_id": 35907071, "question_id": 35901547, "link": "https://stackoverflow.com/questions/35901547/how-can-i-find-a-subsequence-in-a-u8-slice/35907071#35907071", "title": "How can I find a subsequence in a &amp;[u8] slice?", "body": "<p>Here's a simple implementation based on the <a href=\"http://doc.rust-lang.org/stable/std/primitive.slice.html#method.windows\" rel=\"noreferrer\"><code>windows</code></a> iterator.</p>\n\n<pre><code>fn find_subsequence(haystack: &amp;[u8], needle: &amp;[u8]) -&gt; Option&lt;usize&gt; {\n    haystack.windows(needle.len()).position(|window| window == needle)\n}\n\nfn main() {\n    assert_eq!(find_subsequence(b\"qwertyuiop\", b\"tyu\"), Some(4));\n    assert_eq!(find_subsequence(b\"qwertyuiop\", b\"asd\"), None);\n}\n</code></pre>\n\n<p>The <code>find_subsequence</code> function can also be made generic:</p>\n\n<pre><code>fn find_subsequence&lt;T&gt;(haystack: &amp;[T], needle: &amp;[T]) -&gt; Option&lt;usize&gt;\n    where for&lt;'a&gt; &amp;'a [T]: PartialEq\n{\n    haystack.windows(needle.len()).position(|window| window == needle)\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 1005, "user_id": 1250948, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9dff2715003554162c9212d2e703e4b4?s=128&d=identicon&r=PG", "display_name": "aseyboldt", "link": "https://stackoverflow.com/users/1250948/aseyboldt"}, "is_accepted": false, "score": 4, "last_activity_date": 1524424519, "last_edit_date": 1524424519, "creation_date": 1472117904, "answer_id": 39141708, "question_id": 35901547, "link": "https://stackoverflow.com/questions/35901547/how-can-i-find-a-subsequence-in-a-u8-slice/39141708#39141708", "title": "How can I find a subsequence in a &amp;[u8] slice?", "body": "<p>I don't think the standard library contains a function for this. Some libcs have <code>memmem</code>, but at the moment the libc crate does not wrap this. You can use the <a href=\"https://github.com/bluss/twoway\" rel=\"nofollow noreferrer\"><code>twoway</code> crate</a> however. <code>rust-bio</code> implements some pattern matching algorithms, too. All of those should be faster than using <code>haystack.windows(..).position(..)</code></p>\n"}, {"tags": [], "owner": {"reputation": 2037, "user_id": 481812, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/9rtTd.png?s=128&g=1", "display_name": "Rbjz", "link": "https://stackoverflow.com/users/481812/rbjz"}, "is_accepted": false, "score": 3, "last_activity_date": 1583844850, "last_edit_date": 1583844850, "creation_date": 1508756227, "answer_id": 46887684, "question_id": 35901547, "link": "https://stackoverflow.com/questions/35901547/how-can-i-find-a-subsequence-in-a-u8-slice/46887684#46887684", "title": "How can I find a subsequence in a &amp;[u8] slice?", "body": "<p>How about <a href=\"https://docs.rs/regex/1/regex/bytes/\" rel=\"nofollow noreferrer\">Regex on bytes</a>? That looks very powerful. See this <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=9461e5c8e9cbb429cb87d7c52c127009\" rel=\"nofollow noreferrer\">Rust playground demo</a>. </p>\n\n<pre><code>extern crate regex;\n\nuse regex::bytes::Regex;\n\nfn main() {\n    //see https://doc.rust-lang.org/regex/regex/bytes/\n\n    let re = Regex::new(r\"say [^,]*\").unwrap();\n\n    let text = b\"say foo, say bar, say baz\";\n\n    // Extract all of the strings without the null terminator from each match.\n    // The unwrap is OK here since a match requires the `cstr` capture to match.\n    let cstrs: Vec&lt;usize&gt; =\n        re.captures_iter(text)\n          .map(|c| c.get(0).unwrap().start())\n          .collect();\n\n    assert_eq!(cstrs, vec![0, 9, 18]);\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 3848, "user_id": 149111, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f8002215f46e37b6281be9085c20bcb8?s=128&d=identicon&r=PG", "display_name": "Wez Furlong", "link": "https://stackoverflow.com/users/149111/wez-furlong"}, "is_accepted": false, "score": 0, "last_activity_date": 1532748919, "last_edit_date": 1532748919, "creation_date": 1532748505, "answer_id": 51567763, "question_id": 35901547, "link": "https://stackoverflow.com/questions/35901547/how-can-i-find-a-subsequence-in-a-u8-slice/51567763#51567763", "title": "How can I find a subsequence in a &amp;[u8] slice?", "body": "<p>I found the <a href=\"https://docs.rs/memmem/0.1.1/memmem/\" rel=\"nofollow noreferrer\"><code>memmem</code> crate</a> useful for this task:</p>\n\n<pre><code>use memmem::{Searcher, TwoWaySearcher};\n\nlet search = TwoWaySearcher::new(\"dog\".as_bytes());\nassert_eq!(\n    search.search_in(\"The quick brown fox jumped over the lazy dog.\".as_bytes()),\n    Some(41)\n);\n</code></pre>\n"}], "owner": {"reputation": 1406, "user_id": 701211, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/bc08db90032b212b492536d31464550e?s=128&d=identicon&r=PG&f=1", "display_name": "JasonN", "link": "https://stackoverflow.com/users/701211/jasonn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5639, "favorite_count": 1, "accepted_answer_id": 35907071, "answer_count": 4, "score": 28, "last_activity_date": 1583844850, "creation_date": 1457553981, "last_edit_date": 1457584131, "question_id": 35901547, "link": "https://stackoverflow.com/questions/35901547/how-can-i-find-a-subsequence-in-a-u8-slice", "title": "How can I find a subsequence in a &amp;[u8] slice?", "body": "<p>I have a <code>&amp;[u8]</code> slice over a binary buffer. I need to parse it, but a lot of the methods that I would like to use (such as <code>str::find</code>) don't seem to be available on slices.</p>\n\n<p>I've seen that I can covert both by buffer slice and my pattern to <code>str</code> by using <code>from_utf8_unchecked()</code> but that seems a little dangerous (and also really hacky).</p>\n\n<p>How can I find a subsequence in this slice? I actually need the index of the pattern, not just a slice view of the parts, so I don't think <code>split</code> will work.</p>\n"}, {"tags": ["pointers", "rust", "ffi"], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1457512098, "post_id": 35886166, "comment_id": 59434468, "body": "It was from <code>Option&lt;&amp;mut T&gt;</code> not <code>Option&lt;*mut T&gt;</code>; you&#39;re close!"}], "tags": [], "owner": {"reputation": 644, "user_id": 5326062, "user_type": "registered", "accept_rate": 67, "profile_image": "https://lh3.googleusercontent.com/-wyQqFvVdnKo/AAAAAAAAAAI/AAAAAAAAAwY/atuvPb80mWU/photo.jpg?sz=128", "display_name": "Ivan Temchenko", "link": "https://stackoverflow.com/users/5326062/ivan-temchenko"}, "is_accepted": false, "score": 0, "last_activity_date": 1457511082, "creation_date": 1457511082, "answer_id": 35886166, "question_id": 35885670, "link": "https://stackoverflow.com/questions/35885670/convert-optionmut-t-to-mut-t/35886166#35886166", "title": "Convert Option&lt;&amp;mut T&gt; to *mut T", "body": "<p>Will this do what you expect?</p>\n\n<pre><code>trait AsMutPtr&lt;T&gt; {\n    fn as_mut_ptr(self) -&gt; *mut T;\n}\n\nimpl&lt;T&gt; AsMutPtr&lt;T&gt; for Option&lt;*mut T&gt; {\n    fn as_mut_ptr(self) -&gt; *mut T {\n        match self {\n            Some(val) =&gt; val as *mut _,\n            None =&gt; ptr::null_mut(),\n        }\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 129, "user_id": 6037727, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cca27c93999c1377e690482c67e2cc5a?s=128&d=identicon&r=PG&f=1", "display_name": "Brian", "link": "https://stackoverflow.com/users/6037727/brian"}, "edited": false, "score": 0, "creation_date": 1457549220, "post_id": 35888360, "comment_id": 59460516, "body": "Thank you for that explanation--I still have a long ways to go before I fully understand the borrow checker, and this helps a lot."}, {"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "edited": false, "score": 0, "creation_date": 1457647443, "post_id": 35888360, "comment_id": 59515019, "body": "&quot;I think it is okay if it gets converted to a raw pointer immediately and does not leak out&quot; \u2192 I&#39;m not so sure, having two active aliasing <code>&amp;mut</code>s certainly seems illegal. The rule I&#39;ve heard is that you should never mix <code>*</code> and <code>&amp;</code> lest you end up in situations like this."}], "tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": true, "score": 4, "last_activity_date": 1553430012, "last_edit_date": 1553430012, "creation_date": 1457517686, "answer_id": 35888360, "question_id": 35885670, "link": "https://stackoverflow.com/questions/35885670/convert-optionmut-t-to-mut-t/35888360#35888360", "title": "Convert Option&lt;&amp;mut T&gt; to *mut T", "body": "<p>Unfortunately, writing the trait impl for <code>&amp;mut T</code> instead of <code>&amp;T</code> <em>does</em> make a big difference. <code>&amp;mut T</code>, as opposed to <code>&amp;T</code>, is not <code>Copy</code>, therefore you cannot extract it out of a shared reference directly:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>&amp; &amp;T      ---&gt;  &amp;T\n&amp; &amp;mut T  -/-&gt;  &amp;mut T\n</code></pre>\n\n<p>This is fairly natural - otherwise aliasing of mutable references would be possible, which violates Rust borrowing rules.</p>\n\n<p>You may ask where that outer <code>&amp;</code> comes from. It actually comes from <code>&amp;self</code> in <code>as_mut_ptr()</code> method. If you have an immutable reference to something, even if that something contains mutable references inside it, you won't be able to use them to mutate the data behind them. This also would be a violation of borrowing semantics.</p>\n\n<p>Unfortunately, I see no way to do this without unsafe. You need to have <code>&amp;mut T</code> \"by value\" in order to cast it to <code>*mut T</code>, but you can't get it \"by value\" through a shared reference. Therefore, I suggest you to use <code>ptr::read()</code>:</p>\n\n<pre><code>use std::ptr;\n\nimpl&lt;'a, T&gt; AsMutPtr&lt;T&gt; for Option&lt;&amp;'a mut T&gt; {\n    fn as_mut_ptr(&amp;self) -&gt; *mut T {\n        match *self {\n            Some(ref val) =&gt; unsafe { ptr::read(val) as *mut _ },\n            None =&gt; ptr::null_mut(),\n        }\n    }\n}\n</code></pre>\n\n<p><code>val</code> here is <code>&amp; &amp;mut T</code> because of <code>ref</code> qualifier in the pattern, therefore <code>ptr::read(val)</code> returns <code>&amp;mut T</code>, aliasing the mutable reference. I think it is okay if it gets converted to a raw pointer immediately and does not leak out, but even though the result would be a raw pointer, it still means that you have two aliased mutable pointers. You should be very careful with what you do with them.</p>\n\n<p>Alternatively, you may modify <code>AsMutPtr::as_mut_ptr()</code> to consume its target by value:</p>\n\n<pre><code>trait AsMutPtr&lt;T&gt; {\n    fn as_mut_ptr(self) -&gt; *mut T;\n}\n\nimpl&lt;'a, T&gt; AsMutPtr&lt;T&gt; for Option&lt;&amp;'a mut T&gt; {\n    fn as_mut_ptr(self) -&gt; *mut T {\n        match self {\n            Some(value) =&gt; value as *mut T,\n            None =&gt; ptr::null_mut()\n        }\n    }\n}\n</code></pre>\n\n<p>However, in this case <code>Option&lt;&amp;mut T&gt;</code> will be consumed by <code>as_mut_ptr()</code>. This may not be feasible if, for example, this <code>Option&lt;&amp;mut T&gt;</code> is stored in a structure. I'm not really sure whether it is possible to somehow perform reborrowing manually with <code>Option&lt;&amp;mut T&gt;</code> as opposed to just <code>&amp;mut T</code> (it won't be triggered automatically); if it is possible, then by-value <code>as_mut_ptr()</code> is probably the best overall solution.</p>\n"}, {"tags": [], "owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "is_accepted": false, "score": 2, "last_activity_date": 1457647326, "creation_date": 1457647326, "answer_id": 35928221, "question_id": 35885670, "link": "https://stackoverflow.com/questions/35885670/convert-optionmut-t-to-mut-t/35928221#35928221", "title": "Convert Option&lt;&amp;mut T&gt; to *mut T", "body": "<p>The problem is that you are reading an <code>&amp;mut</code> out of an <code>&amp;</code>, but <code>&amp;mut</code>s are not <code>Copy</code> so must be moved - and you can't move out of a const reference. This actually explains Vladimir Matveev insight about <code>&amp;&amp;mut \u2192 &amp;</code>s in terms of more fundamental properties.</p>\n\n<p>This is actually relatively simply solved. If you can read a <code>*const _</code>, you can read a <code>*mut _</code>. The two are the same type, bar a flag that says \"be careful, this is being shared\". Since dereferences are unsafe either way, there's actually no reason to stop you casting between the two.</p>\n\n<p>So you can actually do</p>\n\n<pre><code>match *self {\n    Some(ref val) =&gt; val as *const _ as *mut _,\n    None =&gt; ptr::null_mut(),\n}\n</code></pre>\n\n<p>Read the immutable reference, make it an immutable pointer and then make it a mutable pointer. Plus it's all done through safe Rust so we know we're not breaking any aliasing rules.</p>\n\n<p>That said, it's probably a really bad idea to actually use that <code>*mut</code> pointer until the <code>&amp;mut</code> reference is gone. I would be very hesitant with this, and try to rethink your wrapper to something safer.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 0, "last_activity_date": 1553430548, "creation_date": 1553430548, "answer_id": 55323803, "question_id": 35885670, "link": "https://stackoverflow.com/questions/35885670/convert-optionmut-t-to-mut-t/55323803#55323803", "title": "Convert Option&lt;&amp;mut T&gt; to *mut T", "body": "<p>To avoid <code>unsafe</code> code, change the trait to accept <code>&amp;mut self</code> instead of either <code>self</code> or <code>&amp;self</code>:</p>\n\n<pre><code>trait AsMutPtr&lt;T&gt; {\n    fn as_mut_ptr(&amp;mut self) -&gt; *mut T;\n}\n\nimpl&lt;'a, T&gt; AsMutPtr&lt;T&gt; for Option&lt;&amp;'a mut T&gt; {\n    fn as_mut_ptr(&amp;mut self) -&gt; *mut T {\n        match self {\n            Some(v) =&gt; *v,\n            None =&gt; ptr::null_mut(),\n        }\n    }\n}\n</code></pre>\n\n<p>You could also reduce the implementation to one line, if you felt like it:</p>\n\n<pre><code>fn as_mut_ptr(&amp;mut self) -&gt; *mut T {\n    self.as_mut().map_or_else(ptr::null_mut, |v| *v)\n}\n</code></pre>\n\n<p>This can be used to give you multiple mutable raw pointers from the same source. This can easily lead you to causing mutable <em>aliasing</em>, so be careful:</p>\n\n<pre><code>fn example(mut v: Option&lt;&amp;mut u8&gt;) {\n    let b = v.as_mut_ptr();\n    let a = v.as_mut_ptr();\n}\n</code></pre>\n\n<p>I would recommend not converting the <strong>immutable</strong> reference to a <strong>mutable</strong> pointer as this is <em>very</em> likely to cause undefined behavior.</p>\n"}], "owner": {"reputation": 129, "user_id": 6037727, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cca27c93999c1377e690482c67e2cc5a?s=128&d=identicon&r=PG&f=1", "display_name": "Brian", "link": "https://stackoverflow.com/users/6037727/brian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1150, "favorite_count": 0, "accepted_answer_id": 35888360, "answer_count": 4, "score": 4, "last_activity_date": 1553430548, "creation_date": 1457509186, "last_edit_date": 1553429939, "question_id": 35885670, "link": "https://stackoverflow.com/questions/35885670/convert-optionmut-t-to-mut-t", "title": "Convert Option&lt;&amp;mut T&gt; to *mut T", "body": "<p>I'm writing a Rust wrapper around a C library and while doing so I'm trying to take advantage of the \"nullable pointer optimization\" mentioned in <a href=\"https://doc.rust-lang.org/1.30.0/book/first-edition/ffi.html#the-nullable-pointer-optimization\" rel=\"nofollow noreferrer\">The Book</a>, but I can't find a good way to convert <code>Option&lt;&amp;T&gt;</code> to <code>*const T</code> and <code>Option&lt;&amp;mut T&gt;</code> to <code>*mut T</code> like what they're describing. </p>\n\n<p>What I really want is to be able to call <code>Some(&amp;foo) as *const _</code>. Unfortunately that doesn't work, so the next best thing I can think of is a trait on <code>Option&lt;T&gt;</code> that enables me to call <code>Some(&amp;foo).as_ptr()</code>. The following code is a working definition and implementation for that trait:</p>\n\n<pre><code>use std::ptr;\n\ntrait AsPtr&lt;T&gt; {\n    fn as_ptr(&amp;self) -&gt; *const T;\n}\n\nimpl&lt;'a, T&gt; AsPtr&lt;T&gt; for Option&lt;&amp;'a T&gt; {\n    fn as_ptr(&amp;self) -&gt; *const T {\n        match *self {\n            Some(val) =&gt; val as *const _,\n            None =&gt; ptr::null(),\n        }\n    }\n}\n</code></pre>\n\n<p>Now that I can call <code>Some(&amp;foo).as_ptr()</code> to get a <code>*const _</code>, I want to be able to call <code>Some(&amp;mut foo).as_ptr()</code> to get a <code>*mut _</code>. The following is the new trait I made to do this:</p>\n\n<pre><code>trait AsMutPtr&lt;T&gt; {\n    fn as_mut_ptr(&amp;self) -&gt; *mut T;\n}\n\nimpl&lt;'a, T&gt; AsMutPtr&lt;T&gt; for Option&lt;&amp;'a mut T&gt; {\n    fn as_mut_ptr(&amp;self) -&gt; *mut T {\n        match *self {\n            Some(val) =&gt; val as *mut _,\n            None =&gt; ptr::null_mut(),\n        }\n    }\n}\n</code></pre>\n\n<p>The problem is, the <code>AsMutPtr</code> trait won't compile. When I try, I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n  --&gt; src/lib.rs:22:15\n   |\n22 |         match *self {\n   |               ^^^^^\n   |               |\n   |               cannot move out of borrowed content\n   |               help: consider removing the `*`: `self`\n23 |             Some(val) =&gt; val as *mut _,\n   |                  --- data moved here\n   |\nnote: move occurs because `val` has type `&amp;mut T`, which does not implement the `Copy` trait\n  --&gt; src/lib.rs:23:18\n   |\n23 |             Some(val) =&gt; val as *mut _,\n   |                  ^^^\n</code></pre>\n\n<p>I don't see what changed between the two traits that causes it to fail \u2014 I didn't think adding <code>mut</code> would make that big a difference. I tried adding a <code>ref</code>, but that just causes a different error, and I wouldn't expect to need that anyway.</p>\n\n<p>Why doesn't the <code>AsMutPtr</code> trait work?</p>\n"}, {"tags": ["multithreading", "rust"], "answers": [{"comments": [{"owner": {"reputation": 2509, "user_id": 3719101, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/Z4L8i.jpg?s=128&g=1", "display_name": "iago-lito &#39;considering leaving", "link": "https://stackoverflow.com/users/3719101/iago-lito-considering-leaving"}, "edited": false, "score": 0, "creation_date": 1581354947, "post_id": 35883773, "comment_id": 106396308, "body": "If the thread never sends a message, but <code>try_recv</code> yields <a href=\"https://doc.rust-lang.org/stable/std/sync/mpsc/enum.TryRecvError.html#variant.Disconnected\" rel=\"nofollow noreferrer\"><code>Disconnected</code></a>, can we conclude that the thread has terminated anyway?"}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "reply_to_user": {"reputation": 2509, "user_id": 3719101, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/Z4L8i.jpg?s=128&g=1", "display_name": "iago-lito &#39;considering leaving", "link": "https://stackoverflow.com/users/3719101/iago-lito-considering-leaving"}, "edited": false, "score": 1, "creation_date": 1581385980, "post_id": 35883773, "comment_id": 106407096, "body": "Not necessarily; a thread could drop its sender early (using <code>drop(sender);</code> or <code>let _ = sender;</code>, for example)."}, {"owner": {"reputation": 2509, "user_id": 3719101, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/Z4L8i.jpg?s=128&g=1", "display_name": "iago-lito &#39;considering leaving", "link": "https://stackoverflow.com/users/3719101/iago-lito-considering-leaving"}, "edited": false, "score": 0, "creation_date": 1581424970, "post_id": 35883773, "comment_id": 106421607, "body": "Very true. Now, if those are the only cases of false positive, then I guess the thread could receive <code>_sender</code> as an argument and never use it. This way, <code>_sender</code> would act as a lifeline.. unless the compiler decides to immediately deallocate it?"}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "reply_to_user": {"reputation": 2509, "user_id": 3719101, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/Z4L8i.jpg?s=128&g=1", "display_name": "iago-lito &#39;considering leaving", "link": "https://stackoverflow.com/users/3719101/iago-lito-considering-leaving"}, "edited": false, "score": 1, "creation_date": 1581470780, "post_id": 35883773, "comment_id": 106442109, "body": "No, <code>_sender</code> is a valid variable name (unlike <code>_</code>), so the destructor will run when that variable goes out of scope, not earlier, unless you move out of that variable yourself. No level of optimization will change that."}, {"owner": {"reputation": 2509, "user_id": 3719101, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/Z4L8i.jpg?s=128&g=1", "display_name": "iago-lito &#39;considering leaving", "link": "https://stackoverflow.com/users/3719101/iago-lito-considering-leaving"}, "edited": false, "score": 1, "creation_date": 1581497327, "post_id": 35883773, "comment_id": 106449948, "body": "Great! So I can check whether a child thread has exited without blocking and with only <code>std</code>. The trick is to <code>let (rx, tx) = mpsc::channel();</code>, move the <code>tx</code> side to the child thread and regularly check <code>rx.try_recv()</code> until it yields <a href=\"https://doc.rust-lang.org/std/sync/mpsc/enum.TryRecvError.html#variant.Disconnected\" rel=\"nofollow noreferrer\"><code>Err(Disconnected)</code></a>. On its side, the thread needs to receive <code>_tx</code> and promise not to use it at all. The only downside I can think of is that I cannot enforce that the child thread won&#39;t drop <code>_tx</code> early if I it has been written by somebody else :\\"}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 15, "last_activity_date": 1457501982, "creation_date": 1457501982, "answer_id": 35883773, "question_id": 35883390, "link": "https://stackoverflow.com/questions/35883390/how-to-check-if-a-thread-has-finished-in-rust/35883773#35883773", "title": "How to check if a thread has finished in Rust?", "body": "<p>As of Rust 1.7, there's no API in the standard library to check if a child thread has exited without blocking.</p>\n\n<p>A portable workaround would be to use <a href=\"http://doc.rust-lang.org/stable/std/sync/mpsc/\" rel=\"noreferrer\">channels</a> to send a message from the child to the parent to signal that the child is about to exit. <a href=\"http://doc.rust-lang.org/stable/std/sync/mpsc/struct.Receiver.html\" rel=\"noreferrer\"><code>Receiver</code></a> has a non-blocking <a href=\"http://doc.rust-lang.org/stable/std/sync/mpsc/struct.Receiver.html#method.try_recv\" rel=\"noreferrer\"><code>try_recv</code></a> method. When <code>try_recv</code> does receive a message, you can then use <code>join()</code> on the <code>JoinHandle</code> to retrieve the thread's result.</p>\n\n<p>There are also unstable platform-specific extension traits that let you obtain the raw thread handle. You'd then have to write platform-specific code to test whether the thread has exited or not.</p>\n\n<p>If you think this feature should be in Rust's standard library, you can <a href=\"https://github.com/rust-lang/rfcs\" rel=\"noreferrer\">submit an RFC</a> (be sure to read the README first!).</p>\n\n<blockquote>\n  <p>Bonus points if you know how to kill a child thread.</p>\n</blockquote>\n\n<p>Threads in Rust are implemented using native OS threads. Even though the operating system might provide a way to kill a thread, <strong>it's a bad idea</strong> to do so, because the resources that the thread allocated will not be cleaned up until the <em>process</em> ends.</p>\n"}, {"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 10, "last_activity_date": 1457515269, "last_edit_date": 1495540798, "creation_date": 1457515269, "answer_id": 35887456, "question_id": 35883390, "link": "https://stackoverflow.com/questions/35883390/how-to-check-if-a-thread-has-finished-in-rust/35887456#35887456", "title": "How to check if a thread has finished in Rust?", "body": "<p>The short answer is not possible yet. But this is not the point that should really be addressed.</p>\n\n<blockquote>\n  <p>Bonus points if you know how to kill a child thread.</p>\n</blockquote>\n\n<p><strong>NEVER</strong></p>\n\n<p>Even in languages that do support killing threads (<a href=\"https://stackoverflow.com/questions/671049/how-do-you-kill-a-thread-in-java\">see Java here</a>), it is recommended not to.</p>\n\n<p>A thread's execution is generally coded with <em>explicit</em> points of interactions, and there are often <em>implicit assumptions</em> that no other interruption will occur.</p>\n\n<p>The most egregious example is of course resources: the naive \"kill\" method would be to stop executing the thread; this would mean not releasing any resource. You may think about memory, it's the least of your worries. Imagine, instead, all the <code>Mutex</code> that are not unlocked and will create deadlocks later...</p>\n\n<p>The other option would be to inject a <code>panic</code> in the thread, which would cause unwinding. However, you cannot <em>just</em> start unwinding at any point! The program would have to define <em>safe points</em> at which injecting a <code>panic</code> would be guaranteed to be safe (injecting it at any other point means potentially corrupting shared objects); how to define such safe points and inject the <code>panic</code> there is an open research problem in native languages, especially those executed on systems <code>W^X</code> (where memory pages are either Writable or Executable but never both).</p>\n\n<p>In summary, there is no known way to safely (both memory-wise and functionality-wise) kill a thread.</p>\n"}, {"tags": [], "owner": {"reputation": 8171, "user_id": 311655, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/6bad9300ce17b6a89678ed9343647906?s=128&d=identicon&r=PG", "display_name": "DenisKolodin", "link": "https://stackoverflow.com/users/311655/deniskolodin"}, "is_accepted": false, "score": 10, "last_activity_date": 1474488769, "last_edit_date": 1474488769, "creation_date": 1474457008, "answer_id": 39615208, "question_id": 35883390, "link": "https://stackoverflow.com/questions/35883390/how-to-check-if-a-thread-has-finished-in-rust/39615208#39615208", "title": "How to check if a thread has finished in Rust?", "body": "<p>It's possible, friends. Use <strong>refcounters</strong> which Rust will drop on <strong>end</strong> or <strong>panic</strong>. 100% safe. Example:</p>\n\n<pre><code>use std::time::Duration;\nuse std::sync::Arc;\nuse std::sync::atomic::{AtomicBool, Ordering};\nuse std::thread;\n\nfn main() {\n    // Play with this flag\n    let fatal_flag = true;\n    let do_stop = true;\n\n    let working = Arc::new(AtomicBool::new(true));\n    let control = Arc::downgrade(&amp;working);\n\n    thread::spawn(move || {\n        while (*working).load(Ordering::Relaxed) {\n            if fatal_flag {\n                panic!(\"Oh, my God!\");\n            } else {\n                thread::sleep(Duration::from_millis(20));\n                println!(\"I'm alive!\");\n            }\n        }\n    });\n\n    thread::sleep(Duration::from_millis(50));\n\n    // To stop thread\n    if do_stop {\n        match control.upgrade() {\n            Some(working) =&gt; (*working).store(false, Ordering::Relaxed),\n            None =&gt; println!(\"Sorry, but thread died already.\"),\n        }\n    }\n\n    thread::sleep(Duration::from_millis(50));\n\n    // To check it's alive / died\n    match control.upgrade() {\n        Some(_) =&gt; println!(\"Thread alive!\"),\n        None =&gt; println!(\"Thread ends!\"),\n    }\n}\n</code></pre>\n\n<p>Gist: <a href=\"https://gist.github.com/DenisKolodin/edea80f2f5becb86f718c330219178e2\" rel=\"noreferrer\">https://gist.github.com/DenisKolodin/edea80f2f5becb86f718c330219178e2</a></p>\n\n<p>At playground: <a href=\"https://play.rust-lang.org/?gist=9a0cf161ba0bbffe3824b9db4308e1fb&amp;version=stable&amp;backtrace=0\" rel=\"noreferrer\">https://play.rust-lang.org/?gist=9a0cf161ba0bbffe3824b9db4308e1fb&amp;version=stable&amp;backtrace=0</a></p>\n\n<p><strong>UPD</strong>: I've created <code>thread-control</code> crate which implements this approach: <a href=\"https://github.com/DenisKolodin/thread-control\" rel=\"noreferrer\">https://github.com/DenisKolodin/thread-control</a></p>\n"}, {"tags": [], "owner": {"reputation": 13, "user_id": 13981463, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6862772c8d66c5d891e5aa51cbd1c7cb?s=128&d=identicon&r=PG&f=1", "display_name": "kingmeng", "link": "https://stackoverflow.com/users/13981463/kingmeng"}, "is_accepted": false, "score": 0, "last_activity_date": 1607676686, "creation_date": 1607676686, "answer_id": 65248242, "question_id": 35883390, "link": "https://stackoverflow.com/questions/35883390/how-to-check-if-a-thread-has-finished-in-rust/65248242#65248242", "title": "How to check if a thread has finished in Rust?", "body": "<p>I think Arc can be used to solve this problem\nIf the thread exits, the reference counter is reduced by one</p>\n"}], "owner": {"reputation": 4930, "user_id": 171236, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d3b966fda9859d4bcd97c46b6a851210?s=128&d=identicon&r=PG", "display_name": "Doctor J", "link": "https://stackoverflow.com/users/171236/doctor-j"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5087, "favorite_count": 1, "answer_count": 4, "score": 20, "last_activity_date": 1607676686, "creation_date": 1457500262, "question_id": 35883390, "link": "https://stackoverflow.com/questions/35883390/how-to-check-if-a-thread-has-finished-in-rust", "title": "How to check if a thread has finished in Rust?", "body": "<p>When I <code>spawn</code> a thread in Rust, I get a <code>JoinHandle</code>, which is good for... joining (a blocking operation), and not much else.  How can I check if a child thread has exited (i.e., <code>JoinHandle.join()</code> would not block) from the parent thread?  Bonus points if you know how to kill a child thread.</p>\n\n<p>I imagine you could do this by creating a channel, sending something to the child, and catching errors, but that seems like needless complexity and overhead.</p>\n"}, {"tags": ["struct", "rust"], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 24, "last_activity_date": 1457498983, "creation_date": 1457498983, "answer_id": 35883126, "question_id": 35882994, "link": "https://stackoverflow.com/questions/35882994/is-there-any-way-to-get-the-address-of-a-struct-in-rust/35883126#35883126", "title": "Is there any way to get the address of a `struct` in Rust?", "body": "<p>You need to use the <code>&amp;</code> operator to get the address of any variable, so you need to write <code>&amp;my_struct as *const _</code> (where <code>_</code> can be a literal <code>_</code>, or the type of the value behind the pointer).</p>\n"}], "owner": {"reputation": 409, "user_id": 5150012, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/40c29ca36d80155da6f6c16d7b1b31a7?s=128&d=identicon&r=PG&f=1", "display_name": "EpicPotato", "link": "https://stackoverflow.com/users/5150012/epicpotato"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 6714, "favorite_count": 2, "accepted_answer_id": 35883126, "answer_count": 1, "score": 13, "last_activity_date": 1570119809, "creation_date": 1457498324, "last_edit_date": 1457530462, "question_id": 35882994, "link": "https://stackoverflow.com/questions/35882994/is-there-any-way-to-get-the-address-of-a-struct-in-rust", "title": "Is there any way to get the address of a `struct` in Rust?", "body": "<p>I have tried using raw pointer casts, like <code>my_struct as *const usize</code>, but this results in a <code>non-scalar cast</code> error. Raw pointers seem to work fine when finding the address of primitives, but not custom <code>struct</code>s.</p>\n"}, {"tags": ["c", "arrays", "performance", "rust"], "comments": [{"owner": {"reputation": 663663, "user_id": 15168, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WtEI9.png?s=128&g=1", "display_name": "Jonathan Leffler", "link": "https://stackoverflow.com/users/15168/jonathan-leffler"}, "edited": false, "score": 0, "creation_date": 1457495036, "post_id": 35882430, "comment_id": 59427798, "body": "What happens in Rust if you reverse the loop controls for <code>i</code> and <code>j</code> without changing the expression inside the loop?  Does it make a difference to the performance of Rust?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 4, "creation_date": 1457495138, "post_id": 35882430, "comment_id": 59427823, "body": "Please <a href=\"https://stackoverflow.com/posts/35882430/edit\">edit</a> your question to include how you are compiling each program. Rust and C both have optimized and non optimized builds that drastically affect times. Also, you use heap-allocation in C but not in Rust."}, {"owner": {"reputation": 14502, "user_id": 2505965, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5056f8ef1dc81df419a479f24d5f80f5?s=128&d=identicon&r=PG", "display_name": "Oka", "link": "https://stackoverflow.com/users/2505965/oka"}, "edited": false, "score": 0, "creation_date": 1457495178, "post_id": 35882430, "comment_id": 59427830, "body": "Never used Rust; how is the expression <code>0..1000</code> handled? If it&#39;s not optimized away, and actually builds some kind of range object every iteration (and sub iteration), that might be an issue."}, {"owner": {"reputation": 34083, "user_id": 1287251, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/IQkBy.png?s=128&g=1", "display_name": "Cornstalks", "link": "https://stackoverflow.com/users/1287251/cornstalks"}, "edited": false, "score": 5, "creation_date": 1457495273, "post_id": 35882430, "comment_id": 59427848, "body": "If I turn on <code>rustc</code>&#39;s optimizations to level 3 (with <code>-C opt-level=3</code>), it finishes execution instantaneously. What optimizations have you enabled in your profilings? Additionally, you&#39;re code is not the same between the two. In the Rust version, you use an array on the stack. In the C version, you use the heap. That&#39;s probably in Rust&#39;s favor, but I wanted to note you&#39;re not exactly comparing apples to apples."}, {"owner": {"reputation": 129565, "user_id": 1505939, "user_type": "registered", "accept_rate": 52, "profile_image": "https://www.gravatar.com/avatar/131c67ef492a8d8352c6cf642a52e20f?s=128&d=identicon&r=PG", "display_name": "M.M", "link": "https://stackoverflow.com/users/1505939/m-m"}, "edited": false, "score": 0, "creation_date": 1457496150, "post_id": 35882430, "comment_id": 59428066, "body": "The C version makes 1001 separate allocations (IDK whether Rust does this or not). Note that it is possible to write a C version that uses a single allocation."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 5, "creation_date": 1457514290, "post_id": 35882430, "comment_id": 59435665, "body": "I&#39;m voting to close this question as off-topic because insufficient information is provided. Questions on the performance of programs should include the command used to compile said programs."}], "answers": [{"comments": [{"owner": {"reputation": 4376, "user_id": 2850543, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/2bb15c1da6de8180d9adc99954f167f7?s=128&d=identicon&r=PG&f=1", "display_name": "Millie Smith", "link": "https://stackoverflow.com/users/2850543/millie-smith"}, "edited": false, "score": 0, "creation_date": 1457497938, "post_id": 35882837, "comment_id": 59428517, "body": "What happens if you wrap the current programs in timers and print all the values out outside the timers so rust can&#39;t remove all the operations?"}, {"owner": {"reputation": 34083, "user_id": 1287251, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/IQkBy.png?s=128&g=1", "display_name": "Cornstalks", "link": "https://stackoverflow.com/users/1287251/cornstalks"}, "reply_to_user": {"reputation": 4376, "user_id": 2850543, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/2bb15c1da6de8180d9adc99954f167f7?s=128&d=identicon&r=PG&f=1", "display_name": "Millie Smith", "link": "https://stackoverflow.com/users/2850543/millie-smith"}, "edited": false, "score": 0, "creation_date": 1457498341, "post_id": 35882837, "comment_id": 59428657, "body": "@MillieSmith: Then you&#39;re profiling printing values to the terminal, because that&#39;s going to be the most expensive part of the program (by far). And it&#39;s not a very meaningful comparison. And it&#39;s not just the Rust compiler that will optimize the program away; the C compiler likely will too with any meaningful optimizations turned on."}, {"owner": {"reputation": 34083, "user_id": 1287251, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/IQkBy.png?s=128&g=1", "display_name": "Cornstalks", "link": "https://stackoverflow.com/users/1287251/cornstalks"}, "edited": false, "score": 0, "creation_date": 1457498452, "post_id": 35882837, "comment_id": 59428700, "body": "FYI, <code>-O</code> for <code>rustc</code> is closer in equivalence to <code>-O2</code> for <code>gcc</code>. The man page for <code>rustc</code> says <code>-O</code> is &quot;Equivalent to <code>-C opt-level=2</code>.&quot;"}, {"owner": {"reputation": 4376, "user_id": 2850543, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/2bb15c1da6de8180d9adc99954f167f7?s=128&d=identicon&r=PG&f=1", "display_name": "Millie Smith", "link": "https://stackoverflow.com/users/2850543/millie-smith"}, "reply_to_user": {"reputation": 34083, "user_id": 1287251, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/IQkBy.png?s=128&g=1", "display_name": "Cornstalks", "link": "https://stackoverflow.com/users/1287251/cornstalks"}, "edited": false, "score": 0, "creation_date": 1457498458, "post_id": 35882837, "comment_id": 59428703, "body": "@Cornstalks No you stop the timer before the print operations. And you use the timer APIs in both languages. I.e. stop using the &quot;time&quot; linux command."}, {"owner": {"reputation": 34083, "user_id": 1287251, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/IQkBy.png?s=128&g=1", "display_name": "Cornstalks", "link": "https://stackoverflow.com/users/1287251/cornstalks"}, "reply_to_user": {"reputation": 4376, "user_id": 2850543, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/2bb15c1da6de8180d9adc99954f167f7?s=128&d=identicon&r=PG&f=1", "display_name": "Millie Smith", "link": "https://stackoverflow.com/users/2850543/millie-smith"}, "edited": false, "score": 0, "creation_date": 1457498647, "post_id": 35882837, "comment_id": 59428762, "body": "@MillieSmith: Then you&#39;re likely to just be measuring the performance of the timer APIs. Profiling the performance of iteration itself is really hard because it&#39;s so dang fast and cheap that it just gets buried by everything else."}, {"owner": {"reputation": 4376, "user_id": 2850543, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/2bb15c1da6de8180d9adc99954f167f7?s=128&d=identicon&r=PG&f=1", "display_name": "Millie Smith", "link": "https://stackoverflow.com/users/2850543/millie-smith"}, "reply_to_user": {"reputation": 34083, "user_id": 1287251, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/IQkBy.png?s=128&g=1", "display_name": "Cornstalks", "link": "https://stackoverflow.com/users/1287251/cornstalks"}, "edited": false, "score": 0, "creation_date": 1457498842, "post_id": 35882837, "comment_id": 59428828, "body": "@Cornstalks, if the timer wants to take 45 seconds to start itself and stop itself in release mode while optimization is turned on, something is very wrong with that timer API. The OP benchmark used debug which massively increased the time, and this answer&#39;s benchmark optimized the entire program away, which, well, pretty well made the whole thing useless. Might as well find a middle ground. If what I&#39;m suggesting takes more than a few seconds in Rust, there&#39;s still quite a difference in the languages."}, {"owner": {"reputation": 34083, "user_id": 1287251, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/IQkBy.png?s=128&g=1", "display_name": "Cornstalks", "link": "https://stackoverflow.com/users/1287251/cornstalks"}, "reply_to_user": {"reputation": 4376, "user_id": 2850543, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/2bb15c1da6de8180d9adc99954f167f7?s=128&d=identicon&r=PG&f=1", "display_name": "Millie Smith", "link": "https://stackoverflow.com/users/2850543/millie-smith"}, "edited": false, "score": 0, "creation_date": 1457499241, "post_id": 35882837, "comment_id": 59428929, "body": "@MillieSmith: And what I&#39;m saying is that the middle ground is useless information that doesn&#39;t tell you anything meaningful (and even if it did, it&#39;s hard to find the real middle ground because there are lots of traps that are easy to fall into). The languages are different, certainly, but with optimizations turned on in this situation, they should be (and indeed are) the same."}, {"owner": {"reputation": 4376, "user_id": 2850543, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/2bb15c1da6de8180d9adc99954f167f7?s=128&d=identicon&r=PG&f=1", "display_name": "Millie Smith", "link": "https://stackoverflow.com/users/2850543/millie-smith"}, "reply_to_user": {"reputation": 34083, "user_id": 1287251, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/IQkBy.png?s=128&g=1", "display_name": "Cornstalks", "link": "https://stackoverflow.com/users/1287251/cornstalks"}, "edited": false, "score": 0, "creation_date": 1457499436, "post_id": 35882837, "comment_id": 59428986, "body": "@Cornstalks, you can&#39;t tell with either of these benchmarks whether the languages perform the same. Timer APIs are fast. It takes well under a second to start and stop one. You&#39;re hand-waving away any improvement of these benchmarks, of which there is plenty to be done. My suggestions <i>do</i> produce valuable results."}, {"owner": {"reputation": 34083, "user_id": 1287251, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/IQkBy.png?s=128&g=1", "display_name": "Cornstalks", "link": "https://stackoverflow.com/users/1287251/cornstalks"}, "reply_to_user": {"reputation": 4376, "user_id": 2850543, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/2bb15c1da6de8180d9adc99954f167f7?s=128&d=identicon&r=PG&f=1", "display_name": "Millie Smith", "link": "https://stackoverflow.com/users/2850543/millie-smith"}, "edited": false, "score": 0, "creation_date": 1457499965, "post_id": 35882837, "comment_id": 59429147, "body": "@MillieSmith: I can tell if the languages will perform the same, because it&#39;s not magic how they and static analyzers work. The languages and the compilers aren&#39;t an unknowable black box. The only major difference between the two (once the C version is corrected to use stack-based arrays) is that Rust does bounds checking, but that is trivially optimized away by the static analyzer (as is the whole program). And timer APIs may not be that fast. At best they&#39;re a single instruction to the CPU clock. At worst they&#39;re a full function call into a library or the kernel."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 9, "last_activity_date": 1457497303, "creation_date": 1457497303, "answer_id": 35882837, "question_id": 35882430, "link": "https://stackoverflow.com/questions/35882430/iteration-over-2d-array-performance-in-rust-vs-c/35882837#35882837", "title": "Iteration over 2D array performance in Rust vs C", "body": "<p>First of all, I'm going to assume you've compiled <em>without</em> optimisations, because I <em>cannot</em> reproduce the times you're describing without compiling in debug mode, which specifically <em>does not</em> optimise aggressively.  In this case, the difference is not so surprising given that Rust is doing more work <em>and</em> it's known to generate suboptimal code in debug mode.</p>\n\n<p>Secondly, the two programs aren't equivalent.  The C code is allocating 1001 heap arrays, the Rust code isn't allocating <em>any</em>.  As a result, as soon as you <em>do</em> switch optimisation on, the Rust code runs <em>faster</em> than the C code.</p>\n\n<p>So now we need to modify the C program to <em>not</em> allocate.  Given this:</p>\n\n<pre><code>#define ARRSIZE 1000\n\nint main() {\n    int arr[ARRSIZE][ARRSIZE] = { { 0 } };\n    int i, j, t;\n\n    for (t = 0; t &lt; ARRSIZE; ++t) {\n        for (i = 0; i &lt; ARRSIZE; ++i) {\n            for (j = 0; j &lt; ARRSIZE; ++j) {\n                arr[i][j] = i * j;\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>The results I get compiling with <code>gcc -O</code> (with GCC 4.8.4) and <code>rustc -O</code> (with Rust 1.7.0) are:</p>\n\n<pre><code>$ time ./c-2; time ./rs-1\n\nreal    0m0.335s\nuser    0m0.328s\nsys 0m0.000s\n\nreal    0m0.002s\nuser    0m0.000s\nsys 0m0.000s\n</code></pre>\n\n<p>Which are so short as to be meaningless.  <em>But it gets worse</em>.  The reason the Rust program is so fast is that the program is so simple, LLVM <em>completely removes it</em>.  The program has no visible side-effects, so it just compiles to an empty binary that immediately exits.</p>\n\n<p>There is <em>nothing</em> meaningful that can be gleaned from this benchmark, save that Rust produces slow debug executables (which is already reasonably well known).</p>\n"}, {"comments": [{"owner": {"reputation": 34083, "user_id": 1287251, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/IQkBy.png?s=128&g=1", "display_name": "Cornstalks", "link": "https://stackoverflow.com/users/1287251/cornstalks"}, "edited": false, "score": 0, "creation_date": 1457540804, "post_id": 35887337, "comment_id": 59454855, "body": "Excellent answer and comparison."}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 0, "creation_date": 1457881307, "post_id": 35887337, "comment_id": 59597704, "body": "Add a <code>&quot;memory&quot;</code> clobber to your asm statement to tell the compiler that it can access memory other than it&#39;s inputs/outputs, so memory contents need to reflect the C source.  See <a href=\"http://goo.gl/8soc6v\" rel=\"nofollow noreferrer\">this godbolt link</a> for a working version, using <code>asm (&quot;&quot; : : &quot;g&quot; (arr) : &quot;memory&quot;);</code> to defeat the optimizer.  Note that initializing the array to zero and then storing to it is a waste of a memset.  gcc and clang unfortunately don&#39;t optimize away the zeroing before the loop.  Also note that with <code>-ftree-vectorize</code>, gcc and clang will auto-vectorize with SSE / AVX."}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": false, "score": 10, "last_activity_date": 1457514923, "last_edit_date": 1495539971, "creation_date": 1457514923, "answer_id": 35887337, "question_id": 35882430, "link": "https://stackoverflow.com/questions/35882430/iteration-over-2d-array-performance-in-rust-vs-c/35887337#35887337", "title": "Iteration over 2D array performance in Rust vs C", "body": "<p><em>In addition to <a href=\"https://stackoverflow.com/a/35882837/2408867\">the answer of DK.</a></em></p>\n\n<p>To test this in a (more or less) meaningful way (and for others to play with), I modified the programs like so:</p>\n\n<p><strong>Rust</strong>:</p>\n\n<pre><code>#![feature(test)]\nextern crate test;\n\nfn main() {\n    let mut arr: [[i32; 1000]; 1000] = [[0; 1000]; 1000];\n\n    for _ in 0..1000 {\n        for i in 0..1000 {\n            for j in 0..1000 {\n                arr[i][j] = (i * j) as i32;\n            }\n        }\n    }\n    test::black_box(arr);\n}\n</code></pre>\n\n<p><strong>C</strong> (uses stack, code mostly by DK.):</p>\n\n<pre><code>#define ARRSIZE 1000\n\nint main() {\n    int arr[ARRSIZE][ARRSIZE] = { { 0 } };\n    int i, j, t;\n\n    for (t = 0; t &lt; ARRSIZE; ++t) {\n        for (i = 0; i &lt; ARRSIZE; ++i) {\n            for (j = 0; j &lt; ARRSIZE; ++j) {\n                arr[i][j] = i * j;\n            }\n        }\n    }\n    asm (\"\" : : \"r\" (arr));\n}\n</code></pre>\n\n<p>The <code>black_box</code> and <code>asm(...)</code> are used to prevent the optimizer from removing all the code. However, I used <code>clang</code> instead of <code>gcc</code> to make this work. So in comparison:</p>\n\n<pre><code>$ rustc -O test.rs      |      $ clang -O2 test.c \n$ time ./test           |      $ time ./a.out \n                        |    \nreal    0m0.537s        |      real    0m0.546s\nuser    0m0.532s        |      user    0m0.544s\nsys     0m0.004s        |      sys     0m0.004s\n</code></pre>\n\n<p>The execution time between single executions of the same program varies more than these two programs differ in runtime. </p>\n\n<p>What I want to say (and what DK. already said): the difference should be insignificant. Both should be doing exactly the same work; only that Rust also does bound checks. But those are probably removed by the LLVM optimizer in this case. Just remember to build in release mode ;)</p>\n"}], "owner": {"reputation": 280, "user_id": 2316672, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/167e3ceba3ab249986c7b61b08792abe?s=128&d=identicon&r=PG", "display_name": "Robfz", "link": "https://stackoverflow.com/users/2316672/robfz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1451, "favorite_count": 0, "closed_date": 1457880258, "accepted_answer_id": 35882837, "answer_count": 2, "score": 2, "last_activity_date": 1457514923, "creation_date": 1457494757, "question_id": 35882430, "link": "https://stackoverflow.com/questions/35882430/iteration-over-2d-array-performance-in-rust-vs-c", "closed_reason": "Not suitable for this site", "title": "Iteration over 2D array performance in Rust vs C", "body": "<p>I am new to Rust and I have been messing around with it lately. I was curious about the performance of accessing an array with indexes in Rust compared to C.</p>\n\n<p>I made these two programs:</p>\n\n<pre><code>fn main() {\n\n    let mut arr: [[i32; 1000]; 1000] = [[0; 1000]; 1000];\n\n    for t in 0..1000 {\n        for i in 0..1000 {\n            for j in 0..1000 {\n                arr[i][j] = (i * j) as i32;\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>and in C:</p>\n\n<pre><code>#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n\n#define ARRSIZE 1000\n\nint main() {\n\n    int ** arr = malloc(sizeof(int*) * ARRSIZE);\n    int i, j, t;\n\n    for (i = 0; i &lt; ARRSIZE; ++i) {\n        arr[i] = malloc(sizeof(int) * ARRSIZE);\n        memset((void*) arr[i], 0, sizeof(int) * ARRSIZE);\n    }\n\n    for (t = 0; t &lt; ARRSIZE; ++t) {\n        for (i = 0; i &lt; ARRSIZE; ++i) {\n            for (j = 0; j &lt; ARRSIZE; ++j) {\n                arr[i][j] = i * j;\n            }\n        }\n    }\n\n    for (i = 0; i &lt; ARRSIZE; ++i) {\n        free(arr[i]);\n    }\n\n    free(arr);\n\n}\n</code></pre>\n\n<p>The idea is to create a 1000x1000 2D array, and iterate over each element 1000 times doing a simple arithmetic operation in each iteration.</p>\n\n<p>The performance gap between the two is big (C version takes almost 3 seconds, Rust version takes 45 seconds). Is this normal, or am I doing something wrong in the Rust version?</p>\n\n<p>Edit: I tried with bounds checking disabled and got the same results.</p>\n\n<p>Thanks.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1457513038, "post_id": 35878196, "comment_id": 59434972, "body": "Note: niko was mentioning thinking of *super-*fat pointers, today fat pointers are (pointer to v-table, pointer to data) and tomorrow they could be (pointer to v-table 0, pointer to v-table 1, ..., pointer to data). This would, in turn, allow having a <code>Read + Write</code> bound."}, {"owner": {"reputation": 775, "user_id": 2861181, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/5504ac4f8f9b9d83bc777f7e688af73d?s=128&d=identicon&r=PG", "display_name": "mattforni", "link": "https://stackoverflow.com/users/2861181/mattforni"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1457530255, "post_id": 35878196, "comment_id": 59446733, "body": "Unfortunately aliasing the traits I wanted into a super trait didn&#39;t work either. I&#39;ve decided to restructure how I&#39;m storing my defaults to store <code>HashMap&lt;String, String&gt;</code> and then have a method <code>pub fn get_value&lt;T: FromStr&gt;(...) {}</code>. Seems like a decent alternative, but I&#39;m open to suggestions if anyone has any ideas.  @MatthieuM. That would be awesome!!"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 775, "user_id": 2861181, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/5504ac4f8f9b9d83bc777f7e688af73d?s=128&d=identicon&r=PG", "display_name": "mattforni", "link": "https://stackoverflow.com/users/2861181/mattforni"}, "edited": false, "score": 0, "creation_date": 1457530884, "post_id": 35878196, "comment_id": 59447196, "body": "@mattforni: Aliasing into a super-trait <i>should</i> work! You may want to ask a question as to why it didn&#39;t."}], "tags": [], "owner": {"reputation": 15480, "user_id": 105760, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/HjFvK.jpg?s=128&g=1", "display_name": "Clark Gaebel", "link": "https://stackoverflow.com/users/105760/clark-gaebel"}, "is_accepted": true, "score": 7, "last_activity_date": 1457498131, "last_edit_date": 1457498131, "creation_date": 1457471848, "answer_id": 35878196, "question_id": 35878079, "link": "https://stackoverflow.com/questions/35878079/unable-to-use-builtin-traits-from-and-partialord-for-box-object-bounds/35878196#35878196", "title": "Unable to use builtin traits From and PartialOrd for Box object bounds", "body": "<pre class=\"lang-none prettyprint-override\"><code>$ rustc --explain E0225\nYou attempted to use multiple types as bounds for a closure or trait object.\nRust does not currently support this. A simple example that causes this error:\n\nfn main() {\n    let _: Box&lt;std::io::Read+std::io::Write&gt;;\n}\n\nBuiltin traits are an exception to this rule: it's possible to have bounds of\none non-builtin type, plus any number of builtin types. For example, the\nfollowing compiles correctly:\n\nfn main() {\n    let _: Box&lt;std::io::Read+Copy+Sync&gt;;\n}\n</code></pre>\n\n<p><code>PartialOrd</code> and <code>From</code> aren't built-in, they're defined in the standard library. Traits like <code>Copy</code> and <code>Sync</code> are built-in.</p>\n\n<p>You can work around this by defining a new trait with the traits you want as supertraits:</p>\n\n<pre><code>trait MyTrait: Any + From&lt;String&gt; + PartialOrd {}\n</code></pre>\n\n<p>Then you can provide a blanket impl for all types that implement all of the traits you want (you can specify multiple traits in bounds, but not in trait objects):</p>\n\n<pre><code>impl&lt;T&gt; MyTrait for T where T: Any + From&lt;String&gt; + PartialOrd {}\n</code></pre>\n"}], "owner": {"reputation": 775, "user_id": 2861181, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/5504ac4f8f9b9d83bc777f7e688af73d?s=128&d=identicon&r=PG", "display_name": "mattforni", "link": "https://stackoverflow.com/users/2861181/mattforni"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 722, "favorite_count": 0, "accepted_answer_id": 35878196, "answer_count": 1, "score": 4, "last_activity_date": 1457498131, "creation_date": 1457471485, "question_id": 35878079, "link": "https://stackoverflow.com/questions/35878079/unable-to-use-builtin-traits-from-and-partialord-for-box-object-bounds", "title": "Unable to use builtin traits From and PartialOrd for Box object bounds", "body": "<p>Admittedly, I'm fairly new to Rust, but I love what I'm seeing so far. That said, I'm running into an issue where I'm getting the error:</p>\n\n<pre><code>error: only the builtin traits can be used as closure or object bounds [E0225]\ndefaults: HashMap&lt;String, Box&lt;Any + From&lt;String&gt; + PartialOrd&gt;&gt;,\n                                    ^~~~~~~~~~~~\n</code></pre>\n\n<p>for the following code:</p>\n\n<pre><code>pub struct Builder {                                                                                                                                                                                                                           \n    defaults: HashMap&lt;String, Box&lt;Any + From&lt;String&gt; + PartialOrd&gt;&gt;,                                                                                                                                                                           \n    ...\n}\n</code></pre>\n\n<p>If I remove the bound on <code>From</code> I get the same error but for <code>PartialOrd</code>. I don't understand why since I'm fairly certain both <code>From</code> and <code>PartialOrd</code> are builtin traits. Any help would be appreciated.    </p>\n"}, {"tags": ["rust", "readonly", "move-semantics", "traits"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1457461891, "last_edit_date": 1457461891, "creation_date": 1457458274, "answer_id": 35874068, "question_id": 35873497, "link": "https://stackoverflow.com/questions/35873497/getting-value-from-a-collection-without-using-the-clone-trait/35874068#35874068", "title": "Getting value from a collection without using the Clone trait", "body": "<blockquote>\n  <p>Is it possible to get a value from a collection and apply a method to it which accepts only <code>self</code> and not <code>&amp;self</code>?</p>\n</blockquote>\n\n<p>In general, no, not without removing it from the collection. The collection owns the value. Methods that take <code>self</code> want to transform the item while consuming the ownership, so you have to transfer ownership.</p>\n\n<p>Cloning or copying an item creates a new item with new ownership that you can then give to the method.</p>\n\n<p>In your particular case, you can <em>almost</em> get away with this exciting <code>where</code> clause:</p>\n\n<pre><code>where for&lt;'a&gt; &amp;'a B: Into&lt;i32&gt;\n</code></pre>\n\n<p>Except <code>From&lt;&amp;i32&gt;</code> is not implemented for <code>i32</code>. You can write a trait that does what you want though:</p>\n\n<pre><code>use std::collections::HashMap;\n\ntrait RefInto&lt;T&gt; {\n    fn into(&amp;self) -&gt; T;\n}\n\nimpl RefInto&lt;i32&gt; for i32 {\n    fn into(&amp;self) -&gt; i32 { *self }\n}\n\nfn get&lt;B&gt;(key: i32, h: HashMap&lt;i32, Vec&lt;(i32, B)&gt;&gt;) -&gt; i32\n    where B: RefInto&lt;i32&gt;\n{\n    let v = h.get(&amp;key).unwrap();\n    let val = &amp;v.first().unwrap().1;\n\n    val.into()\n}\n\n// ----\n\nfn main() {\n    let mut map = HashMap::new();\n    map.insert(42, vec![(100, 200)]);\n    let v = get(42, map);\n    println!(\"{:?}\", v);\n}\n</code></pre>\n\n<p>Alternatively, you might be able to make use of <a href=\"http://doc.rust-lang.org/std/borrow/trait.Borrow.html\" rel=\"nofollow\"><code>Borrow</code></a>:</p>\n\n<pre><code>use std::collections::HashMap;\nuse std::borrow::Borrow;\n\nfn get&lt;B&gt;(key: i32, h: HashMap&lt;i32, Vec&lt;(i32, B)&gt;&gt;) -&gt; i32\n    where B: Borrow&lt;i32&gt;\n{\n    let v = h.get(&amp;key).unwrap();\n    let val = &amp;v.first().unwrap().1;\n\n    *val.borrow()\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 2379, "user_id": 5045375, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/17ed0af705e0449fe49b74d8814a8ce2?s=128&d=identicon&r=PG", "display_name": "Filip Allberg", "link": "https://stackoverflow.com/users/5045375/filip-allberg"}, "edited": false, "score": 0, "creation_date": 1457474583, "post_id": 35874438, "comment_id": 59421163, "body": "I want the <code>HashMap</code> to still associate the key with the same vector that it had."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2379, "user_id": 5045375, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/17ed0af705e0449fe49b74d8814a8ce2?s=128&d=identicon&r=PG", "display_name": "Filip Allberg", "link": "https://stackoverflow.com/users/5045375/filip-allberg"}, "edited": false, "score": 2, "creation_date": 1457485120, "post_id": 35874438, "comment_id": 59425123, "body": "@FilipAllberg A.B.&#39;s point is <i>very</i> important though. By accepting a <code>h: HashMap</code>, you are transferring the ownership of the map <i>to the function</i>. It basically doesn&#39;t matter what the function does to the map as nothing else will ever be able to use the map."}, {"owner": {"reputation": 2379, "user_id": 5045375, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/17ed0af705e0449fe49b74d8814a8ce2?s=128&d=identicon&r=PG", "display_name": "Filip Allberg", "link": "https://stackoverflow.com/users/5045375/filip-allberg"}, "edited": false, "score": 0, "creation_date": 1457696198, "post_id": 35874438, "comment_id": 59534595, "body": "Noted, now using <code>&amp;h</code>. Thanks!"}], "tags": [], "owner": {"reputation": 11927, "user_id": 2301531, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/0e05b25685a72ab6268dce396da1b76f?s=128&d=identicon&r=PG", "display_name": "A.B.", "link": "https://stackoverflow.com/users/2301531/a-b"}, "is_accepted": false, "score": 1, "last_activity_date": 1457460236, "last_edit_date": 1457460236, "creation_date": 1457459402, "answer_id": 35874438, "question_id": 35873497, "link": "https://stackoverflow.com/questions/35873497/getting-value-from-a-collection-without-using-the-clone-trait/35874438#35874438", "title": "Getting value from a collection without using the Clone trait", "body": "<p>The function consumes the <code>HashMap</code>. I'm assuming this is your intent and that you therefore don't care about any of its content except the one element you wish to convert into an <code>i32</code>.</p>\n\n<p>You can use the <code>HashMap::remove</code> method to extract a value. You can then use <code>Vec::swap_remove</code> to extract the first element.</p>\n\n<pre><code>use std::collections::HashMap;\n\nfn get&lt;B&gt;(key: i32, mut h: HashMap&lt;i32, Vec&lt;(i32, B)&gt;&gt;) -&gt; i32 where B: Into&lt;i32&gt; {\n    h.remove(&amp;key)\n        .unwrap()\n        .swap_remove(0)\n        .1\n        .into()\n}\n</code></pre>\n\n<p>If <code>B</code> is cheap to copy, then it makes more sense to write a function where it is copied.</p>\n\n<p>The above doesn't handle errors. A version with error handling could look like this:</p>\n\n<pre><code>use std::collections::HashMap;\n\nfn get&lt;B&gt;(key: i32, mut h: HashMap&lt;i32, Vec&lt;(i32, B)&gt;&gt;) -&gt; Option&lt;i32&gt; where B: Into&lt;i32&gt; {\n    h.remove(&amp;key)\n        .and_then(|mut vec| {\n            if vec.is_empty() { None } \n            else { Some(vec.swap_remove(0).1.into()) }\n        })\n}\n</code></pre>\n\n<p><code>Vec::swap_remove</code> isn't ideal. The functionality of moving an element at an arbitrary index out of the vector without any other work would be handled by the <code>IndexMove</code> trait which doesn't yet exist though.</p>\n"}], "owner": {"reputation": 2379, "user_id": 5045375, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/17ed0af705e0449fe49b74d8814a8ce2?s=128&d=identicon&r=PG", "display_name": "Filip Allberg", "link": "https://stackoverflow.com/users/5045375/filip-allberg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 670, "favorite_count": 0, "accepted_answer_id": 35874068, "answer_count": 2, "score": 4, "last_activity_date": 1457461974, "creation_date": 1457456617, "last_edit_date": 1457461974, "question_id": 35873497, "link": "https://stackoverflow.com/questions/35873497/getting-value-from-a-collection-without-using-the-clone-trait", "title": "Getting value from a collection without using the Clone trait", "body": "<p>Is it possible to get a value from a collection and apply a method to it which accepts only <code>self</code> and not <code>&amp;self</code>?</p>\n\n<p><strong>Minimal Working Example</strong></p>\n\n<p>What I would like to write is something akin to:</p>\n\n<pre><code>use std::collections::HashMap;\n\nfn get&lt;B&gt;(key: i32, h: HashMap&lt;i32, Vec&lt;(i32, B)&gt;&gt;) -&gt; i32 where B: Into&lt;i32&gt; {\n    let v: &amp;Vec&lt;(i32, B)&gt; = h.get(&amp;key).unwrap();\n    let val: &amp;B = v.first().unwrap().1;\n\n    // Do something to be able to call into\n    // I only need the value as read-only\n    // Does B have to implement the Clone trait?\n    return val.into();\n}\n</code></pre>\n\n<p>I have tried in vain to dribble <code>mut</code> here and there to try to appease compiler error after compiler error, but this is really a fool's errand.</p>\n\n<pre><code>use std::collections::HashMap;\n\nfn get&lt;B&gt;(key: i32, mut h: HashMap&lt;i32, Vec&lt;(i32, B)&gt;&gt;) -&gt; i32 where B: Into&lt;i32&gt; {\n    let mut v: &amp;Vec&lt;(i32, B)&gt; = h.get_mut(&amp;key).unwrap();\n    let ref mut val: B = v.first_mut().unwrap().1;\n    return (*val).into();\n}\n</code></pre>\n\n<p>Is this sort of thing even possible or does <code>B</code> have to implement the <code>Clone</code> trait?</p>\n\n<p>I've also tried:</p>\n\n<ul>\n<li>Unsafe  </li>\n<li>Raw pointers  </li>\n</ul>\n\n<p>I've not tried:</p>\n\n<ul>\n<li><code>Box</code></li>\n<li>Other Rust constructs that I have not encountered,\nI mention this to explicitly state that I have not\nomitted any approaches that I know of.</li>\n</ul>\n"}, {"tags": ["tcp", "rust", "tcp-ip"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1457445214, "post_id": 35869078, "comment_id": 59402248, "body": "Duplicate of <a href=\"http://stackoverflow.com/questions/33114619/access-to-components-of-a-read-wrapped-by-take-or-chain\" title=\"access to components of a read wrapped by take or chain\">stackoverflow.com/questions/33114619/&hellip;</a> or <a href=\"http://stackoverflow.com/a/31503269/155423\">stackoverflow.com/a/31503269/155423</a>."}], "answers": [{"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 4, "last_activity_date": 1457445289, "creation_date": 1457445289, "answer_id": 35869288, "question_id": 35869078, "link": "https://stackoverflow.com/questions/35869078/if-bufreader-takes-ownership-of-a-stream-how-can-i-read-and-write-lines-on-it/35869288#35869288", "title": "If BufReader takes ownership of a stream, how can I read and write lines on it?", "body": "<p>You have several possibilities:</p>\n\n<ul>\n<li>do not use a <code>BufReader</code></li>\n<li>temporarily borrow the stream from the <code>BufReader</code> using <a href=\"https://doc.rust-lang.org/std/io/struct.BufReader.html#method.get_mut\" rel=\"nofollow\"><code>get_mut</code></a></li>\n<li>discard the <code>BufReader</code> entirely and recover the stream using <a href=\"https://doc.rust-lang.org/std/io/struct.BufReader.html#method.into_inner\" rel=\"nofollow\"><code>into_inner</code></a></li>\n</ul>\n\n<p>I would personally advise not using a <code>BufReader</code> unless you really need to bufferize the input; for a single line it does not seem worth it.</p>\n\n<p>Otherwise, if you are done with the buffering, you can recover the underlying stream and if you are not you can temporarily buffer it.</p>\n\n<p><strong>Caution</strong>: <em>Do be aware that the <code>BufReader</code> bufferizes reads, so when you borrow/recover the inner stream you short-circuit the buffered data; for reading it's an issue, in your case (writing) it should be fine.</em></p>\n"}, {"comments": [{"owner": {"reputation": 460, "user_id": 5879759, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/06d960499e952f8462074dd56a20edaf?s=128&d=identicon&r=PG&f=1", "display_name": "a544jh", "link": "https://stackoverflow.com/users/5879759/a544jh"}, "edited": false, "score": 0, "creation_date": 1529355479, "post_id": 35869336, "comment_id": 88834747, "body": "For crates that don&#39;t implement Read and Write for references, such as <a href=\"https://gitlab.com/susurrus/serialport-rs\" rel=\"nofollow noreferrer\">serialport</a>, you can use <a href=\"https://github.com/alexcrichton/bufstream\" rel=\"nofollow noreferrer\">bufstream</a>"}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 24, "last_activity_date": 1566487140, "last_edit_date": 1566487140, "creation_date": 1457445445, "answer_id": 35869336, "question_id": 35869078, "link": "https://stackoverflow.com/questions/35869078/if-bufreader-takes-ownership-of-a-stream-how-can-i-read-and-write-lines-on-it/35869336#35869336", "title": "If BufReader takes ownership of a stream, how can I read and write lines on it?", "body": "<h3>Solution: use references.</h3>\n\n<pre><code>let mut stream = ...;\nlet reader = BufReader::new(&amp;stream);\nlet writer = BufWriter::new(&amp;stream);\n</code></pre>\n\n<hr>\n\n<h3>Explanation</h3>\n\n<p>If we take a closer look at <code>BufReader::new</code>, we see that it takes an argument <code>inner</code> of type <code>R</code>, where <code>R</code> is just any type that implements <code>Read</code>:</p>\n\n<pre><code>impl&lt;R: Read&gt; BufReader&lt;R&gt; {\n    pub fn new(inner: R) -&gt; BufReader&lt;R&gt; { ... }\n}\n</code></pre>\n\n<p>We then take a look at <code>Read</code> and see this implementation:</p>\n\n<pre><code>impl&lt;'a&gt; Read for &amp;'a TcpStream\n</code></pre>\n\n<p>So we can just pass a reference to the <code>new</code> function, like so:</p>\n\n<pre><code>let reader = BufReader::new(&amp;stream);\n</code></pre>\n\n<p>We will do the same for <code>BufWriter</code> and <code>Write</code> and will see that indeed there is this implementation:</p>\n\n<pre><code>impl&lt;'a&gt; Write for &amp;'a TcpStream\n</code></pre>\n\n<p>So we can, again, use an immutable reference to create the <code>BufWriter</code>.</p>\n"}], "owner": {"reputation": 2289, "user_id": 1454653, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/FvI1V.jpg?s=128&g=1", "display_name": "dragostis", "link": "https://stackoverflow.com/users/1454653/dragostis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2584, "favorite_count": 2, "accepted_answer_id": 35869336, "answer_count": 2, "score": 18, "last_activity_date": 1566487140, "creation_date": 1457444692, "last_edit_date": 1457445134, "question_id": 35869078, "link": "https://stackoverflow.com/questions/35869078/if-bufreader-takes-ownership-of-a-stream-how-can-i-read-and-write-lines-on-it", "title": "If BufReader takes ownership of a stream, how can I read and write lines on it?", "body": "<p>I want to read a line from a <code>TCPStream</code>, write another line to it, and then repeat. The issue is that <code>BufReader::new</code> takes ownership of my <code>TCPStream</code> variable:</p>\n\n<pre><code>let stream = ...; // TCPStream\n\nlet reader = BufReader::new(stream); // moved its value\n\n// can't use stream here anymore\n</code></pre>\n\n<p>What is a simple solution to this?</p>\n"}, {"tags": ["parallel-processing", "iterator", "rust", "rayon"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1457430864, "post_id": 35863996, "comment_id": 59392287, "body": "We cannot help without the code :( Do you have a small (reduced) example exhibiting the issue?"}], "answers": [{"comments": [{"owner": {"reputation": 48136, "user_id": 161922, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/16e12e337f6edc3750681492656097ed?s=128&d=identicon&r=PG", "display_name": "Rory", "link": "https://stackoverflow.com/users/161922/rory"}, "edited": false, "score": 1, "creation_date": 1457431711, "post_id": 35864306, "comment_id": 59392850, "body": "I used a for loop initially. I only wrote it as a <code>.map().count()</code> so that I could use <code>.par_iter()</code>."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 48136, "user_id": 161922, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/16e12e337f6edc3750681492656097ed?s=128&d=identicon&r=PG", "display_name": "Rory", "link": "https://stackoverflow.com/users/161922/rory"}, "edited": false, "score": 4, "creation_date": 1457431814, "post_id": 35864306, "comment_id": 59392920, "body": "I already assumed that :) Just wanted to state this for future readers, since one can easily become trapped in the &quot;iterators are awesome - iterator adapters for everything&quot; mindset, like I did ^_^"}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": false, "score": 5, "last_activity_date": 1457431386, "creation_date": 1457431386, "answer_id": 35864306, "question_id": 35863996, "link": "https://stackoverflow.com/questions/35863996/cannot-use-rayons-par-iter/35864306#35864306", "title": "Cannot use Rayon&#39;s `.par_iter()`", "body": "<p>No, the <code>Iterator</code> trait has nothing to do with the <code>iter()</code> method. Yes, this is slightly confusing.</p>\n\n<p>There are a few different concepts here. An <code>Iterator</code> is a type that can spit out values; it only needs to implement <code>next()</code> and has many other methods, but none of these is <code>iter()</code>. Then there is <code>IntoIterator</code> which says that a type can be transformed into an <code>Iterator</code>. This trait has the <code>into_iter()</code> method. Now the <code>iter()</code> method is not <em>really</em> related to any of those two traits. It's just a normal method of many types, that often works similar to <code>into_iter()</code>.</p>\n\n<p>Now to your Rayon problem: it looks like you can't just take any normal iterator and turn it into a parallel one. However, I never used this library, so takes this with a grain of salt. To me it looks like you need to collect your iterator into a <code>Vec</code> to be able to use <code>par_iter()</code>.</p>\n\n<p>And just as a note: when using normal iterators, you shouldn't use <code>map()</code> and <code>count()</code>, but rather use a standard <code>for</code> loop.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1457446169, "last_edit_date": 1495542363, "creation_date": 1457446169, "answer_id": 35869613, "question_id": 35863996, "link": "https://stackoverflow.com/questions/35863996/cannot-use-rayons-par-iter/35869613#35869613", "title": "Cannot use Rayon&#39;s `.par_iter()`", "body": "<p>Rayon 0.3.1 defines <a href=\"https://github.com/nikomatsakis/rayon/blob/v0.3.1/src/par_iter/mod.rs#L57-L62\" rel=\"nofollow noreferrer\"><code>par_iter</code></a> as:</p>\n\n<pre><code>pub trait IntoParallelRefIterator&lt;'data&gt; {\n    type Iter: ParallelIterator&lt;Item=&amp;'data Self::Item&gt;;\n    type Item: Sync + 'data;\n\n    fn par_iter(&amp;'data self) -&gt; Self::Iter;\n}\n</code></pre>\n\n<p>There is only <a href=\"https://github.com/nikomatsakis/rayon/blob/v0.3.1/src/par_iter/slice.rs#L26-L33\" rel=\"nofollow noreferrer\">one type that implements this trait in Rayon itself: <code>[T]</code></a>:</p>\n\n<pre><code>impl&lt;'data, T: Sync + 'data&gt; IntoParallelRefIterator&lt;'data&gt; for [T] {\n    type Item = T;\n    type Iter = SliceIter&lt;'data, T&gt;;\n\n    fn par_iter(&amp;'data self) -&gt; Self::Iter {\n        self.into_par_iter()\n    }\n}\n</code></pre>\n\n<p>That's why <a href=\"https://stackoverflow.com/a/35864306/155423\">Lukas Kalbertodt's answer</a> to <code>collect</code> to a <code>Vec</code> will work; <code>Vec</code> dereferences to a slice.</p>\n\n<p>Generally, Rayon could not assume that <em>any</em> iterator would be amenable to parallelization, so it cannot default to including all <code>Iterator</code>s.</p>\n\n<p>Since you have defined <code>generate_values</code>, you could implement the appropriate Rayon trait for it as well:</p>\n\n<ol>\n<li><code>IntoParallelIterator</code></li>\n<li><code>IntoParallelRefIterator</code></li>\n<li><code>IntoParallelRefMutIterator</code></li>\n</ol>\n\n<p>That should allow you to avoid collecting into a temporary vector.</p>\n"}], "owner": {"reputation": 48136, "user_id": 161922, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/16e12e337f6edc3750681492656097ed?s=128&d=identicon&r=PG", "display_name": "Rory", "link": "https://stackoverflow.com/users/161922/rory"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3339, "favorite_count": 1, "accepted_answer_id": 35869613, "answer_count": 2, "score": 4, "last_activity_date": 1457446169, "creation_date": 1457430492, "last_edit_date": 1457445419, "question_id": 35863996, "link": "https://stackoverflow.com/questions/35863996/cannot-use-rayons-par-iter", "title": "Cannot use Rayon&#39;s `.par_iter()`", "body": "<p>I have a struct which implements <code>Iterator</code> and it works fine as an iterator. It produces values, and using <code>.map()</code>, I download each item from a local HTTP server and save the results. I now want to parallelize this operation, and <a href=\"https://github.com/nikomatsakis/rayon\" rel=\"nofollow\">Rayon</a> looks friendly.</p>\n\n<p>I am getting a compiler error when trying to follow the example in the documentation.</p>\n\n<p>This is the code that works sequentially. <code>generate_values</code> returns the struct which implements <code>Iterator</code>. <code>dl</code> downloads the values and saves them (i.e. it has side effects). Since iterators are lazy in Rust, I have put a <code>.count()</code> at the end so that it will actually run it.</p>\n\n<pre><code>generate_values(14).map(|x| { dl(x, &amp;path, &amp;upstream_url); }).count();\n</code></pre>\n\n<p>Following the Rayon example I tried this:</p>\n\n<pre><code>generate_values(14).par_iter().map(|x| { dl(x, &amp;path, &amp;upstream_url); }).count();\n</code></pre>\n\n<p>and got the following error:</p>\n\n<pre><code>src/main.rs:69:27: 69:37 error: no method named `par_iter` found for type `MyIterator` in the current scope\n</code></pre>\n\n<p>Interestingly, when I use <code>.iter()</code>, which many Rust things use, I get a similar error:</p>\n\n<pre><code>src/main.rs:69:27: 69:33 error: no method named `iter` found for type `MyIterator` in the current scope\nsrc/main.rs:69     generate_values(14).iter().map(|tile| { dl_tile(tile, &amp;tc_path, &amp;upstream_url); }).count();\n</code></pre>\n\n<p>Since I implement <code>Iterator</code>, I should get <code>.iter()</code> for free right? Is this why <code>.par_iter()</code> doesn't work?</p>\n\n<p>Rust 1.6 and Rayon 0.3.1</p>\n\n<pre><code>$ rustc --version\nrustc 1.6.0 (c30b771ad 2016-01-19)\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1457425997, "post_id": 35860619, "comment_id": 59389117, "body": "sorry for ripping of your text 1:1, but it&#39;s just a perfect fit ;)"}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": false, "score": 11, "last_activity_date": 1457435939, "last_edit_date": 1457435939, "creation_date": 1457418943, "answer_id": 35860619, "question_id": 35860264, "link": "https://stackoverflow.com/questions/35860264/whats-the-easiest-way-to-read-several-ints-from-stdin-if-its-ok-to-fail/35860619#35860619", "title": "What&#39;s the easiest way to read several ints from stdin if it&#39;s ok to fail?", "body": "<p>You can use <a href=\"https://crates.io/crates/scan-rules\" rel=\"noreferrer\"><code>scan-rules</code></a> for this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>/*!\nAdd this to your `Cargo.toml`, or just run with `cargo script`:\n\n```cargo\n[dependencies]\nscan-rules = \"0.1.1\"\n```\n*/\n#[macro_use] extern crate scan_rules;\n\nfn main() {\n    print!(\"Enter 3 ints: \");\n    readln! {\n        (let a: i32, let b: i32, let c: i32) =&gt; {\n            println!(\"a, b, c: {}, {}, {}\", a, b, c);\n        }\n    }\n}\n</code></pre>\n\n<p>If you want to do something a little more involved, you can use multiple rules and type inference, and specify what to do if the input doesn't match any of the rules given (by default it <code>panic!</code>s):</p>\n\n<pre><code>    readln! {\n        // Space-separated ints\n        (let a: i32, let b: i32, let c: i32) =&gt; {\n            println!(\"a b c: {} {} {}\", a, b, c);\n        },\n\n        // Comma-separated ints, using inference.\n        (let a, \",\", let b, \",\", let c) =&gt; {\n            let a: i32 = a;\n            let b: i32 = b;\n            let c: i32 = c;\n            println!(\"a, b, c: {}, {}, {}\", a, b, c);\n        },\n\n        // Comma-separated list of *between* 1 and 3 integers.\n        ([let ns: i32],{1,3}) =&gt; {\n            println!(\"ns: {:?}\", ns);\n        },\n\n        // Fallback if none of the above match.\n        (..line) =&gt; {\n            println!(\"Invalid input: {:?}\", line);\n        }\n    }\n</code></pre>\n\n<p><strong>Disclaimer</strong>: I am the author of <code>scan-rules</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1457435966, "post_id": 35862507, "comment_id": 59395674, "body": "sorry for ripping of your second example, but you started this ;)"}], "tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": true, "score": 7, "last_activity_date": 1457534087, "last_edit_date": 1457534087, "creation_date": 1457425980, "answer_id": 35862507, "question_id": 35860264, "link": "https://stackoverflow.com/questions/35860264/whats-the-easiest-way-to-read-several-ints-from-stdin-if-its-ok-to-fail/35862507#35862507", "title": "What&#39;s the easiest way to read several ints from stdin if it&#39;s ok to fail?", "body": "<p>You can use <a href=\"https://crates.io/crates/text_io\" rel=\"nofollow\"><code>text_io</code></a> for this:</p>\n\n<pre><code>#[macro_use] extern crate text_io;\n\nfn main() {\n    // reads until a whitespace is encountered\n    let a: i32 = read!();\n    let b: i32 = read!();\n    let c: i32 = read!();\n}\n</code></pre>\n\n<hr>\n\n<p><code>text_io</code> <code>0.1.3</code> also supports a <code>scan!</code> macro:</p>\n\n<pre><code>let (a, b, c): (i32, i32, i32);\nscan!(\"{}, {}, {}\\n\", a, b, c);\n</code></pre>\n\n<hr>\n\n<p>in case you want to read from a file or some other source, you can also use both macros on any type that implements <code>Iterator&lt;Item=u8&gt;</code>:</p>\n\n<pre><code>use std::io::Read;\nlet mut file = std::fs::File::open(\"text.txt\").unwrap()\n                                              .bytes()\n                                              .map(Result::unwrap);\nlet x: i32 = read!(\"{}\\n\", file);\n</code></pre>\n\n<p>or</p>\n\n<pre><code>let (x, y, z): (i32, i32, i32);\nscan!(file =&gt; \"{}, {}: {}\", x, y, z);\n</code></pre>\n\n<hr>\n\n<p>You can leave off the <code>: i32</code>s if the compiler can infer those types from context.</p>\n\n<p><strong>Disclaimer</strong>: I am the author of <code>text_io</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 396, "user_id": 9728299, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/YJr4z.png?s=128&g=1", "display_name": "Matt Bussing", "link": "https://stackoverflow.com/users/9728299/matt-bussing"}, "is_accepted": false, "score": 0, "last_activity_date": 1551659516, "creation_date": 1551659516, "answer_id": 54975209, "question_id": 35860264, "link": "https://stackoverflow.com/questions/35860264/whats-the-easiest-way-to-read-several-ints-from-stdin-if-its-ok-to-fail/54975209#54975209", "title": "What&#39;s the easiest way to read several ints from stdin if it&#39;s ok to fail?", "body": "<p>I am new to Rust so I may not have all this down exactly but I have made a solution. I discovered you can use <a href=\"https://doc.rust-lang.org/std/string/struct.String.html#method.split_whitespace\" rel=\"nofollow noreferrer\">split_white_space</a> to put the integers in the string into an iterator. Then you unwrap it out of  <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.unwrap\" rel=\"nofollow noreferrer\">std::option::Option&lt;&amp;str></a> using \".unwrap()\". After parse the &amp;str using \"<a href=\"https://doc.rust-lang.org/std/primitive.str.html#method.parse\" rel=\"nofollow noreferrer\">.parse()</a>\" and unwrap its result using \".unwrap()\". Then you have an int if you have specified the type of variable using \"variable_name: i32 =...\". Checkout what I did:</p>\n\n<pre><code>let mut numbers = String::new();\nio::stdin()\n    .read_line(&amp;mut numbers)\n    .ok()\n    .expect(\"read error\");\nlet mut iter = numbers.split_whitespace();\nlet mut x: i32 = iter.next().unwrap().parse().unwrap();\nlet mut y: i32 = iter.next().unwrap().parse().unwrap();\nlet mut n: i32 = iter.next().unwrap().parse().unwrap();\nprintln!(\"{},{},{}\", x, y, n);\n</code></pre>\n"}], "owner": {"reputation": 1074, "user_id": 430693, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/de186c14eba2fe3d03fee2887ec2b1f3?s=128&d=identicon&r=PG", "display_name": "Oleg Eterevsky", "link": "https://stackoverflow.com/users/430693/oleg-eterevsky"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1055, "favorite_count": 0, "accepted_answer_id": 35862507, "answer_count": 3, "score": 9, "last_activity_date": 1551659516, "creation_date": 1457417494, "last_edit_date": 1457629717, "question_id": 35860264, "link": "https://stackoverflow.com/questions/35860264/whats-the-easiest-way-to-read-several-ints-from-stdin-if-its-ok-to-fail", "title": "What&#39;s the easiest way to read several ints from stdin if it&#39;s ok to fail?", "body": "<p>Suppose I expect a line with 3 integers from stdin. What's the easiest way to read and parse them? What's the Rust equivalent of <code>a, b, c = map(int, input().split())</code> in Python or <code>scanf(\"%d %d %d\", &amp;a, &amp;b, &amp;c);</code> in C?</p>\n\n<p>The best way I came up with was something like:</p>\n\n<pre><code>let mut line = String::new();\nio::stdin().read_line(&amp;mut line).unwrap();\nlet parts: Vec&lt;&amp;str&gt; = line.split_whitespace().collect();\nlet a: i32 = parts[0].parse().unwrap();\nlet b: i32 = parts[1].parse().unwrap();\nlet c: i32 = parts[2].parse().unwrap();\n</code></pre>\n\n<p>Is there a simpler way?</p>\n"}, {"tags": ["unit-testing", "environment-variables", "rust"], "answers": [{"comments": [{"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 2, "creation_date": 1457408984, "post_id": 35858448, "comment_id": 59382244, "body": "I like the &quot;by controlling X&quot; answer. I will definitely use that going forward :)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1457409398, "post_id": 35858448, "comment_id": 59382361, "body": "@SimonWhitehead and it applies to your answer as well; in that case you are controlling <i>access</i> to the variables and using dependency injection as the method of control. ^_^"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 14, "last_activity_date": 1457408106, "creation_date": 1457408106, "answer_id": 35858448, "question_id": 35858323, "link": "https://stackoverflow.com/questions/35858323/how-can-i-test-rust-methods-that-depend-on-environment-variables/35858448#35858448", "title": "How can I test Rust methods that depend on environment variables?", "body": "<p>\"How do I test X\" is almost always answered with \"by controlling X\". In this case, you need to control the environment variables:</p>\n\n<pre><code>use std::env;\n\nfn env_is_set() -&gt; bool {\n    match env::var(\"ENVIRONMENT_VARIABLE\") {\n        Ok(s) =&gt; s == \"yes\",\n        _ =&gt; false\n    }\n}\n\n#[test]\nfn when_set_yes() {\n    env::set_var(\"ENVIRONMENT_VARIABLE\", \"yes\");\n    assert!(env_is_set());\n}\n\n#[test]\nfn when_set_no() {\n    env::set_var(\"ENVIRONMENT_VARIABLE\", \"no\");\n    assert!(!env_is_set());\n}\n\n#[test]\nfn when_unset() {\n    env::remove_var(\"ENVIRONMENT_VARIABLE\");\n    assert!(!env_is_set());\n}\n</code></pre>\n\n<p>However, you need to be aware that environment variables are a shared resource. From <a href=\"http://doc.rust-lang.org/std/env/fn.set_var.html\">the docs for <code>set_var</code></a>, emphasis mine:</p>\n\n<blockquote>\n  <p>Sets the environment variable <code>k</code> to the value <code>v</code> for the <strong>currently running process</strong>.</p>\n</blockquote>\n\n<p>You may also need to be aware that the Rust test runner runs tests in parallel by default, so it's possible to have one test clobber another.</p>\n\n<p>Additionally, you may wish to \"reset\" your environment variables to a known good state after the test.</p>\n"}, {"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1457424024, "post_id": 35858566, "comment_id": 59388049, "body": "Note: you can prefix arguments/variables names with an underscore <code>_</code> to avoid warnings that they are unused. This avoids using the directive <code>#[allow(unused_variables)]</code>."}, {"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1457427677, "post_id": 35858566, "comment_id": 59390159, "body": "Thanks @MatthieuM. - I always forget that! I&#39;m still very early on in my Rust journey."}], "tags": [], "owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "is_accepted": false, "score": 6, "last_activity_date": 1457408837, "creation_date": 1457408837, "answer_id": 35858566, "question_id": 35858323, "link": "https://stackoverflow.com/questions/35858323/how-can-i-test-rust-methods-that-depend-on-environment-variables/35858566#35858566", "title": "How can I test Rust methods that depend on environment variables?", "body": "<p>Your other option (if you don't want to mess around with actually setting environment variables) is to abstract the call away. I am only just learning Rust and so I am not sure if this is \"the Rust way(tm)\" to do it... but this is certainly how I would do it in another language/environment:</p>\n\n<pre><code>use std::env;\n\npub trait QueryEnvironment {\n    fn get_var(&amp;self, var: &amp;'static str) -&gt; Result&lt;String, std::env::VarError&gt;;\n}\n\nstruct MockQuery;\nstruct ActualQuery;\n\nimpl QueryEnvironment for MockQuery {\n    #[allow(unused_variables)]\n    fn get_var(&amp;self, var: &amp;'static str) -&gt; Result&lt;String, std::env::VarError&gt; {\n        Ok(\"Some Mocked Result\".to_string()) // Returns a mocked response\n    }\n}\n\nimpl QueryEnvironment for ActualQuery {\n    fn get_var(&amp;self, var: &amp;'static str) -&gt; Result&lt;String, std::env::VarError&gt; {\n        env::var(var) // Returns an actual response\n    }\n}\n\nfn main() {\n    let mocked_query = MockQuery;\n    let actual_query = ActualQuery;\n\n    println!(\"The mocked environment value is: {}\", func_name(mocked_query).unwrap());\n    println!(\"The actual environment value is: {}\", func_name(actual_query).unwrap());\n}\n\npub fn func_name&lt;T: QueryEnvironment&gt;(query: T) -&gt; Option&lt;String&gt; {\n    match query.get_var(\"ENVIRONMENT_VARIABLE\") {\n        Ok(s) =&gt; Some(s),\n        Err(_) =&gt; None\n    }\n}\n</code></pre>\n\n<p>Example on the playpen: <a href=\"http://is.gd/QhUlDW\" rel=\"noreferrer\">http://is.gd/QhUlDW</a></p>\n\n<p>Notice how the <em>actual</em> call panics. This is the implementation you would use in <em>actual</em> code. For your tests, you would use the mocked ones.</p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1465474168, "post_id": 37725288, "comment_id": 62922327, "body": "Looks like you&#39;d want to use <a href=\"http://doc.rust-lang.org/std/iter/fn.empty.html\" rel=\"nofollow noreferrer\"><code>iter::empty</code></a>."}, {"owner": {"reputation": 3125, "user_id": 156831, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d4a7fc39d443767abbe16fc219bf3910?s=128&d=identicon&r=PG", "display_name": "lifeless", "link": "https://stackoverflow.com/users/156831/lifeless"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1465500196, "post_id": 37725288, "comment_id": 62940366, "body": "Or content in the slice :) - I was mainly focused on the function, so I&#39;ve just put some data in, so as to demonstrate how you&#39;d use it in tests."}], "tags": [], "owner": {"reputation": 3125, "user_id": 156831, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d4a7fc39d443767abbe16fc219bf3910?s=128&d=identicon&r=PG", "display_name": "lifeless", "link": "https://stackoverflow.com/users/156831/lifeless"}, "is_accepted": false, "score": 0, "last_activity_date": 1465500129, "last_edit_date": 1465500129, "creation_date": 1465473312, "answer_id": 37725288, "question_id": 35858323, "link": "https://stackoverflow.com/questions/35858323/how-can-i-test-rust-methods-that-depend-on-environment-variables/37725288#37725288", "title": "How can I test Rust methods that depend on environment variables?", "body": "<p>A third option, and one I think is better, is to pass in the existing type - rather than creating a new abstraction that everyone would have to coerce to.</p>\n\n<pre><code>pub fn new&lt;I&gt;(vars: I)\n    where I: Iterator&lt;Item = (String, String)&gt;\n{\n    for (x, y) in vars {\n        println!(\"{}: {}\", x, y)\n    }\n}\n\n#[test]\nfn trivial_call() {\n    let vars = [(\"fred\".to_string(), \"jones\".to_string())];\n    new(vars.iter().cloned());\n}\n</code></pre>\n\n<p>Thanks to qrlpz on #rust for helping me get this sorted for my program, just sharing the result to help others :)</p>\n"}], "owner": {"reputation": 255, "user_id": 1527069, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/90d0279f562504ff47d88f62a51b7f19?s=128&d=identicon&r=PG", "display_name": "IceyEC", "link": "https://stackoverflow.com/users/1527069/iceyec"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2928, "favorite_count": 1, "accepted_answer_id": 35858448, "answer_count": 3, "score": 6, "last_activity_date": 1465500129, "creation_date": 1457407317, "last_edit_date": 1457408128, "question_id": 35858323, "link": "https://stackoverflow.com/questions/35858323/how-can-i-test-rust-methods-that-depend-on-environment-variables", "title": "How can I test Rust methods that depend on environment variables?", "body": "<p>I am building a library that interrogates its running environment to return values to the asking program. Sometimes as simple as </p>\n\n<pre><code>pub fn func_name() -&gt; Option&lt;String&gt; {\n    match env::var(\"ENVIRONMENT_VARIABLE\") {\n        Ok(s) =&gt; Some(s),\n        Err(e) =&gt; None\n    }\n}\n</code></pre>\n\n<p>but sometimes a good bit more complicated, or even having a result composed of various environment variables. How can I test that these methods are functioning as expected?</p>\n"}, {"tags": ["docker", "rust"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1457339026, "post_id": 35836378, "comment_id": 59344333, "body": "Which version of Rust are you using? There were recent changes regarding the use of RPATH that might either help or hinder here."}, {"owner": {"reputation": 1680, "user_id": 1154808, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/6e7fb6c9219ad0cb694b3b6b71ffe5da?s=128&d=identicon&r=PG", "display_name": "Rustavore", "link": "https://stackoverflow.com/users/1154808/rustavore"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1457367175, "post_id": 35836378, "comment_id": 59362538, "body": "@MatthieuM. added rustc and cargo version numbers. Thanks for asking!"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1457367546, "post_id": 35836378, "comment_id": 59362853, "body": "1.7.0 is precisely the version that activated the use of the <a href=\"https://en.wikipedia.org/wiki/Rpath\" rel=\"nofollow noreferrer\"><code>RPATH</code></a>, however according to the <a href=\"https://github.com/rust-lang/rust/blob/master/RELEASES.md#misc\" rel=\"nofollow noreferrer\">release notes</a> it should not take precedence over the LD_LIBRARY_PATH :/"}, {"owner": {"reputation": 1680, "user_id": 1154808, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/6e7fb6c9219ad0cb694b3b6b71ffe5da?s=128&d=identicon&r=PG", "display_name": "Rustavore", "link": "https://stackoverflow.com/users/1154808/rustavore"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1457369408, "post_id": 35836378, "comment_id": 59364248, "body": "I think maybe I just don&#39;t understand how dynamic linking works. Should I be disabling or changing the RPATH at compile time to work with my container?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1457372185, "post_id": 35836378, "comment_id": 59366100, "body": "If your application booted inside docker, the problem is not one dynamic loading as far as I can tell."}, {"owner": {"reputation": 1680, "user_id": 1154808, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/6e7fb6c9219ad0cb694b3b6b71ffe5da?s=128&d=identicon&r=PG", "display_name": "Rustavore", "link": "https://stackoverflow.com/users/1154808/rustavore"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1457376378, "post_id": 35836378, "comment_id": 59368606, "body": "@MatthieuM. I&#39;m super unfamiliar with dynamic linking prior to this, so I suspect you&#39;re right. However, it&#39;s odd that my binary works outside the container but not inside. Could a different glibc be present inside the container that takes precedence over the ones copied in?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1457380703, "post_id": 35836378, "comment_id": 59371416, "body": "I would first note that your <code>curl</code> command differs (no <code>&#47;health</code> at the end) but otherwise the issue might be less due to the code itself and more to the networking configuration of your Docker image? I am afraid I don&#39;t have any experience in Docker images though :/"}, {"owner": {"reputation": 1680, "user_id": 1154808, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/6e7fb6c9219ad0cb694b3b6b71ffe5da?s=128&d=identicon&r=PG", "display_name": "Rustavore", "link": "https://stackoverflow.com/users/1154808/rustavore"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1457487519, "post_id": 35836378, "comment_id": 59425774, "body": "Yay!! I have it working now. Looks like copying all the libraries into /usr/lib on a buxybox:glibc base image and setting --net=host at docker run did the trick. Thanks @MatthieuM."}], "owner": {"reputation": 1680, "user_id": 1154808, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/6e7fb6c9219ad0cb694b3b6b71ffe5da?s=128&d=identicon&r=PG", "display_name": "Rustavore", "link": "https://stackoverflow.com/users/1154808/rustavore"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 909, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1457376537, "creation_date": 1457326263, "last_edit_date": 1457376537, "question_id": 35836378, "link": "https://stackoverflow.com/questions/35836378/how-can-i-use-dynamic-linking-in-a-docker-image-based-on-busybox", "title": "How can I use dynamic linking in a Docker image based on busybox?", "body": "<p>On my Ubuntu machine, I have a http server Rust binary dynamically linked against glibc (the default target), and I want to put <em>my-rust-app</em> into the Docker busybox base image. Copying each of the libraries into busybox at <code>/usr/lib</code> didn't seem to work and <code>LD_LIBRARY_PATH</code> didn't seem to work at runtime either. Do I need to pass special options to cargo at compile time?</p>\n\n<p>Here's my current setup:</p>\n\n<pre><code>$ rustc --version\nrustc 1.7.0 (a5d1e7a59 2016-02-29)\n$ cargo --version\ncargo 0.8.0-nightly (28a0cbb 2016-01-17)\n</code></pre>\n\n<p><strong>UPDATE 1:</strong></p>\n\n<p>The build process and my linked libraries:</p>\n\n<pre><code>/$ cargo build --release\n/$ cd target/release\n/target/release$ mkdir so\n/target/release$ ldd my-rust-app\n    linux-vdso.so.1 =&gt;  (0x00007fffc0b97000)\n    libdl.so.2 =&gt; /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f1f270d7000)\n    libpthread.so.0 =&gt; /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f1f26eb9000)\n    libgcc_s.so.1 =&gt; /lib/x86_64-linux-gnu/libgcc_s.so.1 (0x00007f1f26ca3000)\n    libc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007f1f268de000)\n    /lib64/ld-linux-x86-64.so.2 (0x00007f1f27686000)\n    libm.so.6 =&gt; /lib/x86_64-linux-gnu/libm.so.6 (0x00007f1f265d8000)\n</code></pre>\n\n<p>I copy each of those (except <em>linux-vdso.so</em> which is injected into the process at runtime):</p>\n\n<pre><code>/target/release$ mkdir so\n/target/release$ cp /lib/x86_64-linux-gnu/libdl.so.2 so/\n/target/release$ cp /lib/x86_64-linux-gnu/libpthread.so.0 so/\n/target/release$ cp /lib/x86_64-linux-gnu/libgcc_s.so.1 so/\n/target/release$ cp /lib/x86_64-linux-gnu/libc.so.6 so/\n/target/release$ cp /lib/x86_64-linux-gnu/libm.so.6 so/\n</code></pre>\n\n<p>My Dockerfile uses the <code>busybox</code> image at the <code>glibc</code> tag:</p>\n\n<pre><code>/target/release$ cat Dockerfile \nFROM busybox:glibc\nEXPOSE 3000\nWORKDIR /usr/bin\nCOPY my-rust-app .\nCOPY so/ /usr/lib\nENV LD_LIBRARY_PATH=\"/usr/lib\"\nENTRYPOINT [\"/usr/bin/my-rust-app\"]\n</code></pre>\n\n<p>Once the image <em>my-rust-app</em> is built, I try to run the app in the container:</p>\n\n<pre><code>/target/release$ docker run -d -p 3000:3000 --name my-rust-app my-rust-app\n9aaf3c9b0e6d52511723382b5248da3c59397acca5f60637644ba311ec394d5e\n</code></pre>\n\n<p>Looking at <code>docker logs</code>, I see output from my server:</p>\n\n<pre><code>/target/release$ docker logs my-rust-app\nListening on port 3000\n</code></pre>\n\n<p>However, I am unable to curl the endpoint:</p>\n\n<pre><code>/target/release$ curl http://127.0.0.1:3000/\ncurl: (56) Recv failure: Connection reset by peer\n</code></pre>\n\n<p>If I try to run the same <em>my-rust-app</em> directly in my Ubuntu host, I can start the server and curl it successfully:</p>\n\n<pre><code>/target/release$ ./my-rust-app &amp;\n[1] 6131\nListening on port 3000\n\n/target/release$ curl http://127.0.0.1:3000/health\nGot request for /health\n{\"status\":\"ok\"}\n</code></pre>\n\n<p>What's wrong with my container or Rust binary?</p>\n"}, {"tags": ["rust", "ascii"], "answers": [{"comments": [{"owner": {"reputation": 662, "user_id": 1610406, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/797acb30e840e430de10015eb96fcb61?s=128&d=identicon&r=PG&f=1", "display_name": "user1610406", "link": "https://stackoverflow.com/users/1610406/user1610406"}, "edited": false, "score": 0, "creation_date": 1457312772, "post_id": 35833580, "comment_id": 59336261, "body": "Thanks, I guess since ascii values don&#39;t really ever change I&#39;d be good using <code>&amp;&#39;static str</code>"}], "tags": [], "owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "is_accepted": true, "score": 10, "last_activity_date": 1458478875, "last_edit_date": 1458478875, "creation_date": 1457304407, "answer_id": 35833580, "question_id": 35833329, "link": "https://stackoverflow.com/questions/35833329/how-to-convert-i32-to-a-string-representing-the-ascii-character/35833580#35833580", "title": "How to convert i32 to a string representing the ASCII character", "body": "<p>First, you don't need to return a <code>String</code>, a <code>&amp;'static str</code> is sufficient. Second, you could simply set up an array of <code>&amp;'static str</code>s with all code representations you like, and use <code>.get(_)</code> to get the relevant string slices, as long as all your char codes are consecutive (which they should be if I have my ASCII right). Even if they aren't, you can always put empty strings in the gaps.</p>\n\n<p>The code should look like the following:</p>\n\n<pre><code>const CHARS: [&amp;'static str; 128] = [\"NUL\", \"SOH\", \"STX\", .., \"DEL\"];\n\nfn get_char_code(c: i32) -&gt; &amp;'static str {\n    CHARS.get(c as usize).unwrap_or(\"\")\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1457314034, "post_id": 35833634, "comment_id": 59336555, "body": "How would this return <code>&quot;NUL&quot;</code> for 0 (or any other of the multiple character mappings?)"}], "tags": [], "owner": {"reputation": 3566, "user_id": 5138648, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1fdbc41d6ae88135845b5d965dac0b13?s=128&d=identicon&r=PG", "display_name": "aSpex", "link": "https://stackoverflow.com/users/5138648/aspex"}, "is_accepted": false, "score": 2, "last_activity_date": 1457408694, "last_edit_date": 1457408694, "creation_date": 1457304773, "answer_id": 35833634, "question_id": 35833329, "link": "https://stackoverflow.com/questions/35833329/how-to-convert-i32-to-a-string-representing-the-ascii-character/35833634#35833634", "title": "How to convert i32 to a string representing the ASCII character", "body": "<p>You may use the <code>format!</code> macro to convert <code>char</code> to <code>String</code>: </p>\n\n<pre><code>fn to_ascii(i: &amp;i32) -&gt; String {\n    match *i {\n        x@0...127 =&gt; format!(\"{:?}\", x as u8 as char),\n        _ =&gt; \"\".into(),\n    }\n}\n\nfn main() {\n    for x in 0x09..0x12 {\n        print!(\"{} \", to_ascii(&amp;x));\n    }\n    println!(\"\");\n    //'\\t' '\\n' '\\u{b}' '\\u{c}' '\\r' '\\u{e}' '\\u{f}' '\\u{10}' '\\u{11}' \n\n    for x in 0x30..0x40 {\n        print!(\"{} \", to_ascii(&amp;x));\n    }\n    println!(\"\");\n    //'0' '1' '2' '3' '4' '5' '6' '7' '8' '9' ':' ';' '&lt;' '=' '&gt;' '?' \n}\n</code></pre>\n\n<hr>\n\n<p>This returns <code>'\\u{0}'</code> instead of <code>\"NUL\"</code> i.e. escape codes instead of an abbreviation. If you do not like how it looks, you can use a huge match or string array. </p>\n\n<p>Actually you need to redefine only 33 control code characters. For other printable characters you can still use <code>format!</code>:</p>\n\n<pre><code>fn to_ascii(i: &amp;i32) -&gt; String {\n    match *i {\n        x@0...32 =&gt; [\"NUL\", \"SOH\", \"STX\", ..., \"SPC\"][x as usize].into(),\n        x@33...126 =&gt; format!(\"{}\", x as u8 as char),\n        127 =&gt; \"DEL\".into(),\n        _ =&gt; \"\".into(),\n    }\n}\n</code></pre>\n\n<p>For a more Rust-like way, you may use smart pointers like <a href=\"http://doc.rust-lang.org/std/borrow/enum.Cow.html\" rel=\"nofollow\"><code>Cow</code></a> as the return type:</p>\n\n<pre><code>use std::borrow::Cow;\n\nfn to_ascii(i: &amp;i32) -&gt; Cow&lt;'static, str&gt; {\n    match *i {\n        x@0...32 =&gt; [\"NUL\", \"SOH\", \"STX\", ..., \"SPC\"][x as usize].into(),\n        x@32...126 =&gt; format!(\"{}\", x as u8 as char).into(),\n        127 =&gt; \"DEL\".into(),\n        _ =&gt; \"\".into(),\n    }\n}\n</code></pre>\n\n<p>Read more about <code>Cow</code> usage <a href=\"http://hermanradtke.com/2015/05/29/creating-a-rust-function-that-returns-string-or-str.html\" rel=\"nofollow\">here</a>.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 4, "last_activity_date": 1457314310, "last_edit_date": 1495541790, "creation_date": 1457314310, "answer_id": 35834845, "question_id": 35833329, "link": "https://stackoverflow.com/questions/35833329/how-to-convert-i32-to-a-string-representing-the-ascii-character/35834845#35834845", "title": "How to convert i32 to a string representing the ASCII character", "body": "<p>For what it's worth, I wouldn't mind the <code>match</code> version. The only tweak is that you don't need a temporary variable. I'd encourage you to follow <a href=\"https://stackoverflow.com/a/35833580/155423\">llogiq's answer</a> and return a <code>&amp;'static str</code>, which your caller could convert to a <code>String</code> if needed:</p>\n\n<pre><code>fn get_char_code(i: &amp;i32) -&gt; &amp;'static str {\n    match *i {\n        0 =&gt; \"NUL\",\n        1 =&gt; \"SOH\",\n        2 =&gt; \"STX\",\n        // ...\n        125 =&gt; \"}\",\n        126 =&gt; \"~\",\n        127 =&gt; \"DEL\",\n        _ =&gt; \"\",\n    }\n}\n</code></pre>\n\n<p>Additionally, I'd <strong>highly</strong> recommend not using the word \"ASCII\" in this code. Most programmers associate an \"ASCII character\" as a single <code>u8</code> worth of data that maps to specific characters, punctuation, or control codes.</p>\n"}, {"tags": [], "owner": {"reputation": 3206, "user_id": 818766, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/684198cd272837e4651b9770dbe21ae4?s=128&d=identicon&r=PG", "display_name": "manyways", "link": "https://stackoverflow.com/users/818766/manyways"}, "is_accepted": false, "score": 0, "last_activity_date": 1572178945, "creation_date": 1572178945, "answer_id": 58579387, "question_id": 35833329, "link": "https://stackoverflow.com/questions/35833329/how-to-convert-i32-to-a-string-representing-the-ascii-character/58579387#58579387", "title": "How to convert i32 to a string representing the ASCII character", "body": "<p>You can cast as below:</p>\n\n<pre><code>println!(\"{}\", 'A' as i8); // prints 65\nprintln!(\"{}\", 65 as char); // prints 'A'\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 80945, "user_id": 1002260, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/5ec9c21c8d54825b04def7a41998d18d?s=128&d=identicon&r=PG", "display_name": "Steven Penny", "link": "https://stackoverflow.com/users/1002260/steven-penny"}, "is_accepted": false, "score": 0, "last_activity_date": 1604328949, "last_edit_date": 1604328949, "creation_date": 1604328864, "answer_id": 64647873, "question_id": 35833329, "link": "https://stackoverflow.com/questions/35833329/how-to-convert-i32-to-a-string-representing-the-ascii-character/64647873#64647873", "title": "How to convert i32 to a string representing the ASCII character", "body": "<p>Instead of <code>i32</code>, you can use <code>u32</code> with <a href=\"https://doc.rust-lang.org/std/char/fn.from_u32.html\" rel=\"nofollow noreferrer\"><code>from_u32</code></a>:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use std::char::from_u32;\n\nfn main() -&gt; Result&lt;(), u32&gt; {\n   let n = 0x21;\n   let c = from_u32(n).ok_or(n)?;\n   println!(&quot;{}&quot;, c);\n   Ok(())\n}\n</code></pre>\n"}], "owner": {"reputation": 662, "user_id": 1610406, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/797acb30e840e430de10015eb96fcb61?s=128&d=identicon&r=PG&f=1", "display_name": "user1610406", "link": "https://stackoverflow.com/users/1610406/user1610406"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3335, "favorite_count": 1, "accepted_answer_id": 35833580, "answer_count": 5, "score": 3, "last_activity_date": 1604328949, "creation_date": 1457302796, "last_edit_date": 1457313945, "question_id": 35833329, "link": "https://stackoverflow.com/questions/35833329/how-to-convert-i32-to-a-string-representing-the-ascii-character", "title": "How to convert i32 to a string representing the ASCII character", "body": "<p>I'm re-doing a project in Rust this weekend and I need to convert an i32 to an ASCII character using it as the character code. All I have so far is a monstrous <code>match</code> that I'm hiding at the end of a file. Unfortunately, <code>std::ascii</code> does not support this conversion. Currently I'm just looking for a less ridiculous/more Rust-like(?) way to do this.</p>\n\n<pre><code>fn to_ascii(i: &amp;i32) -&gt; String {\n    let a = match *i {\n        0 =&gt; \"NUL\",\n        1 =&gt; \"SOH\",\n        2 =&gt; \"STX\",\n        // ...\n        125 =&gt; \"}\",\n        126 =&gt; \"~\",\n        127 =&gt; \"DEL\",\n        _ =&gt; \"\",\n    }\n    a\n}\n</code></pre>\n"}, {"tags": ["recursion", "types", "closures", "rust", "continuations"], "answers": [{"tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": true, "score": 11, "last_activity_date": 1457342340, "last_edit_date": 1457342340, "creation_date": 1457301013, "answer_id": 35833033, "question_id": 35832419, "link": "https://stackoverflow.com/questions/35832419/function-signature-for-returning-a-recursive-closure/35833033#35833033", "title": "Function signature for returning a recursive closure", "body": "<p>Because Rust supports recursive types, you just need to encode the recursion in a separate structure:</p>\n\n<pre><code>enum Msg { \n    Inc,\n    Dec,\n}\n\n// in this particular example Fn(Msg) -&gt; F should work as well\nstruct F(Box&lt;FnMut(Msg) -&gt; F&gt;);\n\nfn counter(state: i32) -&gt; F {\n    F(Box::new(move |msg| match msg {\n        Msg::Inc =&gt; {\n            println!(\"{}\", state);\n            counter(state + 1)\n        }\n        Msg::Dec =&gt; {\n            println!(\"{}\", state);\n            counter(state - 1)\n        }\n    }))\n}\n\nfn main() {\n    let mut c = counter(1);\n    for _ in 0..1000 {\n        c = c.0(Msg::Inc);\n    }\n}\n</code></pre>\n\n<p>We cannot do away with boxing here, unfortunately - since unboxed closures have unnameable types, we need to box them into a trait object to be able to name them inside the structure declaration.</p>\n"}], "owner": {"reputation": 705, "user_id": 1121705, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c723ca9f7ba138b9df58d93e100d7146?s=128&d=identicon&r=PG", "display_name": "Brandon Ogle", "link": "https://stackoverflow.com/users/1121705/brandon-ogle"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 388, "favorite_count": 2, "accepted_answer_id": 35833033, "answer_count": 1, "score": 11, "last_activity_date": 1457342340, "creation_date": 1457297646, "last_edit_date": 1457317054, "question_id": 35832419, "link": "https://stackoverflow.com/questions/35832419/function-signature-for-returning-a-recursive-closure", "title": "Function signature for returning a recursive closure", "body": "<p>I am attempting to implement a function that returns a recursive closure., though I am not sure how to express that in the function signature. Here is example code of a working implementation in Python</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>def counter(state):\n    def handler(msg):\n        if msg == 'inc':\n            print state\n            return counter(state + 1)\n\n        if msg == 'dec':\n            print state\n            return counter(state - 1)\n    return handler\n\nc = counter(1)\nfor x in range(1000000):\n    c = c('inc')\n</code></pre>\n\n<p>and pseudo code for Rust.</p>\n\n<pre><code>enum Msg {\n    Inc,\n    Dec\n}\n\nfn counter(state: Int) -&gt; ? {\n    move |msg| match msg {\n        Msg::Inc =&gt; counter(state + 1),\n        Msg::Dec =&gt; counter(state - 1),\n    }\n}\n</code></pre>\n"}, {"tags": ["windows", "openssl", "rust", "iron"], "answers": [{"comments": [{"owner": {"reputation": 487, "user_id": 5388450, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh5.googleusercontent.com/-qLG4_TrbSJg/AAAAAAAAAAI/AAAAAAAAAj4/SKl5L6G8Z38/photo.jpg?sz=128", "display_name": "\u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440 \u041c\u0435\u043d\u044c\u0448\u0438\u043a\u043e\u0432", "link": "https://stackoverflow.com/users/5388450/%d0%90%d0%bb%d0%b5%d0%ba%d1%81%d0%b0%d0%bd%d0%b4%d1%80-%d0%9c%d0%b5%d0%bd%d1%8c%d1%88%d0%b8%d0%ba%d0%be%d0%b2"}, "edited": false, "score": 0, "creation_date": 1457346823, "post_id": 35837375, "comment_id": 59348755, "body": "I tried both GNU and MSVC. When You say &quot;add the gcc to PATH&quot; do You mean add &quot;msys64\\usr\\share\\bash-completion\\completions&quot; where &quot;gcc&quot; file placed? I added it and &quot;msys64\\usr\\bin&quot; too, also switched to GNU edition, but problem still here."}, {"owner": {"reputation": 487, "user_id": 5388450, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh5.googleusercontent.com/-qLG4_TrbSJg/AAAAAAAAAAI/AAAAAAAAAj4/SKl5L6G8Z38/photo.jpg?sz=128", "display_name": "\u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440 \u041c\u0435\u043d\u044c\u0448\u0438\u043a\u043e\u0432", "link": "https://stackoverflow.com/users/5388450/%d0%90%d0%bb%d0%b5%d0%ba%d1%81%d0%b0%d0%bd%d0%b4%d1%80-%d0%9c%d0%b5%d0%bd%d1%8c%d1%88%d0%b8%d0%ba%d0%be%d0%b2"}, "edited": false, "score": 0, "creation_date": 1457352420, "post_id": 35837375, "comment_id": 59352035, "body": "Cargo output became: <code>--- stderr cc1.exe: fatal error: Files&#47;mingw&#47;include: No such file or directory compilation terminated. thread &#39;&lt;main&gt;&#39; panicked at &#39;explicit panic&#39;, C:\\Users\\sharp_000\\.cargo\\registry\\src\\github.com-88ac128001&zwnj;&#8203;ac3a9a\\gcc-0.3.25\\sr&zwnj;&#8203;c\\lib.rs:818</code>"}, {"owner": {"reputation": 152, "user_id": 5974452, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh4.googleusercontent.com/-QVXEmZ-6WJc/AAAAAAAAAAI/AAAAAAAAABI/nZqax0SHiMY/photo.jpg?sz=128", "display_name": "Matrix", "link": "https://stackoverflow.com/users/5974452/matrix"}, "reply_to_user": {"reputation": 487, "user_id": 5388450, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh5.googleusercontent.com/-qLG4_TrbSJg/AAAAAAAAAAI/AAAAAAAAAj4/SKl5L6G8Z38/photo.jpg?sz=128", "display_name": "\u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440 \u041c\u0435\u043d\u044c\u0448\u0438\u043a\u043e\u0432", "link": "https://stackoverflow.com/users/5388450/%d0%90%d0%bb%d0%b5%d0%ba%d1%81%d0%b0%d0%bd%d0%b4%d1%80-%d0%9c%d0%b5%d0%bd%d1%8c%d1%88%d0%b8%d0%ba%d0%be%d0%b2"}, "edited": false, "score": 0, "creation_date": 1457352745, "post_id": 35837375, "comment_id": 59352247, "body": "the gcc path depend on which arch you used, i use mingw64, so the gcc is at C:\\MSYS64\\mingw64\\bin, the another one is mingw32."}, {"owner": {"reputation": 152, "user_id": 5974452, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh4.googleusercontent.com/-QVXEmZ-6WJc/AAAAAAAAAAI/AAAAAAAAABI/nZqax0SHiMY/photo.jpg?sz=128", "display_name": "Matrix", "link": "https://stackoverflow.com/users/5974452/matrix"}, "reply_to_user": {"reputation": 487, "user_id": 5388450, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh5.googleusercontent.com/-qLG4_TrbSJg/AAAAAAAAAAI/AAAAAAAAAj4/SKl5L6G8Z38/photo.jpg?sz=128", "display_name": "\u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440 \u041c\u0435\u043d\u044c\u0448\u0438\u043a\u043e\u0432", "link": "https://stackoverflow.com/users/5388450/%d0%90%d0%bb%d0%b5%d0%ba%d1%81%d0%b0%d0%bd%d0%b4%d1%80-%d0%9c%d0%b5%d0%bd%d1%8c%d1%88%d0%b8%d0%ba%d0%be%d0%b2"}, "edited": false, "score": 0, "creation_date": 1457353257, "post_id": 35837375, "comment_id": 59352561, "body": "1) install MSYS2, and install gcc, pacman -S mingw-w64-x86_64-gcc, and add C:\\MSYS64\\mingw64\\bin to PATH 2) install rust gnu 3) edit Cargo.toml,  [dependencies] iron = &quot;*&quot;  the cargo will build everything that iron depend on"}, {"owner": {"reputation": 152, "user_id": 5974452, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh4.googleusercontent.com/-QVXEmZ-6WJc/AAAAAAAAAAI/AAAAAAAAABI/nZqax0SHiMY/photo.jpg?sz=128", "display_name": "Matrix", "link": "https://stackoverflow.com/users/5974452/matrix"}, "reply_to_user": {"reputation": 487, "user_id": 5388450, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh5.googleusercontent.com/-qLG4_TrbSJg/AAAAAAAAAAI/AAAAAAAAAj4/SKl5L6G8Z38/photo.jpg?sz=128", "display_name": "\u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440 \u041c\u0435\u043d\u044c\u0448\u0438\u043a\u043e\u0432", "link": "https://stackoverflow.com/users/5388450/%d0%90%d0%bb%d0%b5%d0%ba%d1%81%d0%b0%d0%bd%d0%b4%d1%80-%d0%9c%d0%b5%d0%bd%d1%8c%d1%88%d0%b8%d0%ba%d0%be%d0%b2"}, "edited": false, "score": 0, "creation_date": 1457430050, "post_id": 35837375, "comment_id": 59391752, "body": "sorry, it also need install mingw-w64-x86_64-openssl"}], "tags": [], "owner": {"reputation": 152, "user_id": 5974452, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh4.googleusercontent.com/-QVXEmZ-6WJc/AAAAAAAAAAI/AAAAAAAAABI/nZqax0SHiMY/photo.jpg?sz=128", "display_name": "Matrix", "link": "https://stackoverflow.com/users/5974452/matrix"}, "is_accepted": true, "score": 0, "last_activity_date": 1457358390, "last_edit_date": 1457358390, "creation_date": 1457331559, "answer_id": 35837375, "question_id": 35829278, "link": "https://stackoverflow.com/questions/35829278/cant-build-iron-hello-world-on-windows/35837375#35837375", "title": "Can&#39;t build Iron hello world on Windows", "body": "<p>Which Rust edition are you using? I had the same problem with the Rust MSVC edition.</p>\n\n<p>I installed GCC with MSYS2 and changed Rust to the GNU edition, added <code>gcc</code> to my <code>PATH</code> and everything was OK.</p>\n"}], "owner": {"reputation": 487, "user_id": 5388450, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh5.googleusercontent.com/-qLG4_TrbSJg/AAAAAAAAAAI/AAAAAAAAAj4/SKl5L6G8Z38/photo.jpg?sz=128", "display_name": "\u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440 \u041c\u0435\u043d\u044c\u0448\u0438\u043a\u043e\u0432", "link": "https://stackoverflow.com/users/5388450/%d0%90%d0%bb%d0%b5%d0%ba%d1%81%d0%b0%d0%bd%d0%b4%d1%80-%d0%9c%d0%b5%d0%bd%d1%8c%d1%88%d0%b8%d0%ba%d0%be%d0%b2"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 418, "favorite_count": 0, "accepted_answer_id": 35837375, "answer_count": 1, "score": 1, "last_activity_date": 1457358390, "creation_date": 1457281044, "last_edit_date": 1495539859, "question_id": 35829278, "link": "https://stackoverflow.com/questions/35829278/cant-build-iron-hello-world-on-windows", "title": "Can&#39;t build Iron hello world on Windows", "body": "<p>I'm trying to build the <a href=\"http://ironframework.io/doc/iron/\" rel=\"nofollow noreferrer\">Iron hello world example</a>, but have a problem with OpenSSL.</p>\n\n<p>My OS is Windows 1 and I have tried Rust stable (1.7) and nightly (1.9).</p>\n\n<p>I've <a href=\"https://github.com/sfackler/rust-openssl#windows\" rel=\"nofollow noreferrer\">installed OpenSSL with mingw</a> and set the environment variables <code>OPENSSL_LIB_DIR</code> and <code>OPENSSL_INCLUDE_DIR</code>. Just in case, I've added the paths to the <code>PATH</code> variable. None of these changes fix the problem.</p>\n\n<p>Cargo's output like in this question: <a href=\"https://stackoverflow.com/questions/31000685/compilation-of-openssl-sys-fails-with-openssl-hmac-h-no-such-file-or-directory\">compilation of openssl-sys fails with `openssl/hmac.h: No such file or directory`</a></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>failed to run custom build command for `openssl-sys-extras v0.7.6`\nProcess didn't exit successfully: `C:\\Users\\sharp_000\\Dropbox\\\u041a\u043e\u0434\\Rust\\MTFQ\\target\\release\\build\\openssl-sys-extras-52d5315fb71d3c6d\\build-script-build` (exit code: 101)\n--- stderr\nthread '&lt;main&gt;' panicked at 'explicit panic', C:\\Users\\sharp_000\\.cargo\\registry\\src\\githubcom-88ac128001ac3a9a\\gcc-0.3.25\\src\\lib.rs:818\n</code></pre>\n\n<p>I copied the <code>include/openssl</code> directory, <code>libssl32.dll</code>, and <code>libeay32.dll</code> to the Cargo directory and output changes to:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>cc1.exe: fatal error: Files/mingw/include: No such file or directory compilation terminated.\nthread '&lt;main&gt;' panicked at 'explicit panic', C:\\Users\\sharp_000\\.cargo\\registry\\src\\github.com-88ac128001ac3a9a\\gcc-0.3.25\\src\\lib.rs:818\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\n</code></pre>\n\n<p>Deleting the <code>target</code> directory before building doesn't help.</p>\n"}, {"tags": ["iterator", "rust", "borrow-checker"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1457274156, "post_id": 35823029, "comment_id": 59322531, "body": "Is <code>some_index</code> constant? Or can it be predicted?"}, {"owner": {"reputation": 2196, "user_id": 775195, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/fd0baf309d203f280bfe819cda1eda1b?s=128&d=identicon&r=PG", "display_name": "loudandclear", "link": "https://stackoverflow.com/users/775195/loudandclear"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1457302172, "post_id": 35823029, "comment_id": 59333389, "body": "It solely depends on the specific contents of <code>inner</code> at each iteration."}], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 3, "last_activity_date": 1457241866, "creation_date": 1457241866, "answer_id": 35823462, "question_id": 35823029, "link": "https://stackoverflow.com/questions/35823029/how-to-mutate-another-item-in-a-vector-but-not-the-vector-itself-while-iterati/35823462#35823462", "title": "How to mutate another item in a vector, but not the vector itself, while iterating over the vector?", "body": "<p>You can wrap each of the inner vectors in a <code>RefCell</code>.</p>\n\n<pre><code>use std::cell::RefCell;\n\nfn main() {\n    let my_vec : Vec&lt;RefCell&lt;Vec&lt;i32&gt;&gt;&gt; = vec![\n        RefCell::new(vec![1,2]),\n        RefCell::new(vec![3,4]),\n        RefCell::new(vec![5,6])];\n    for inner in my_vec.iter() {\n        // ...\n        let value = inner.borrow()[0];\n        my_vec[some_index].borrow_mut().push(value);\n    }\n}\n</code></pre>\n\n<p>Note that the <code>value</code> binding here is important if you need to be able to push to the vector that <code>inner</code> refers to. <code>value</code> happens to be a type that doesn't contain references (it's <code>i32</code>), so it doesn't keep the first borrow active (it ends by the end of the statement). Then, the next statement may borrow the same vector or another vector mutably and it'll work.</p>\n\n<p>If we wrote <code>my_vec[some_index].borrow_mut().push(inner.borrow()[0]);</code> instead, then both borrows would be active until the end of the statement. If both <code>my_vec[some_index]</code> and <code>inner</code> refer to the same <code>RefCell&lt;Vec&lt;i32&gt;&gt;</code>, this will panic with <code>RefCell&lt;T&gt; already mutably borrowed</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 3, "last_activity_date": 1457274373, "creation_date": 1457274373, "answer_id": 35828043, "question_id": 35823029, "link": "https://stackoverflow.com/questions/35823029/how-to-mutate-another-item-in-a-vector-but-not-the-vector-itself-while-iterati/35828043#35828043", "title": "How to mutate another item in a vector, but not the vector itself, while iterating over the vector?", "body": "<p>Without changing the type of <code>my_vec</code>, you could simply use access by indexing and <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.split_at_mut\" rel=\"nofollow\"><code>split_at_mut</code></a>:</p>\n\n<pre><code>for index in 0..my_vec.len() {\n    let (first, second) = my_vec.split_at_mut(index);\n\n    first[some_index].push(second[0]);\n}\n</code></pre>\n\n<p><em>Note: beware, the indices in <code>second</code> are off by <code>index</code>.</em></p>\n\n<p>This is safe, relatively easy, and very flexible. It does not, however, work with iterator adaptors.</p>\n"}], "owner": {"reputation": 2196, "user_id": 775195, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/fd0baf309d203f280bfe819cda1eda1b?s=128&d=identicon&r=PG", "display_name": "loudandclear", "link": "https://stackoverflow.com/users/775195/loudandclear"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 378, "favorite_count": 1, "answer_count": 2, "score": 4, "last_activity_date": 1457279984, "creation_date": 1457237654, "last_edit_date": 1457279984, "question_id": 35823029, "link": "https://stackoverflow.com/questions/35823029/how-to-mutate-another-item-in-a-vector-but-not-the-vector-itself-while-iterati", "title": "How to mutate another item in a vector, but not the vector itself, while iterating over the vector?", "body": "<p>It is quite clear to me that iterating over a vector shouldn't let the loop body mutate the vector arbitrarily. This prevents iterator invalidation, which is prone to bugs.</p>\n\n<p>However, not all kinds of mutation lead to iterator invalidation. See the following example:</p>\n\n<pre><code>let mut my_vec: Vec&lt;Vec&lt;i32&gt;&gt; = vec![vec![1,2], vec![3,4], vec![5,6]];\nfor inner in my_vec.iter_mut() {        // &lt;- or .iter()\n    // ...\n    my_vec[some_index].push(inner[0]);  // &lt;-- ERROR\n}\n</code></pre>\n\n<p>Such a mutation does not invalidate the iterator of <code>my_vec</code>, however it is disallowed. It could invalidate any references to the specific elements in <code>my_vec[some_index]</code> but we do not use any such references anyway.</p>\n\n<p>I know that these questions are common, and I'm not asking for an explanation. I am looking for a way to refactor this so that I can get rid of this loop. In my actual code I have a huge loop body and I can't modularize it unless I express this bit nicely. </p>\n\n<p>What I have thought of so far:</p>\n\n<ol>\n<li>Wrapping the vector with <code>Rc&lt;RefCell&lt;...&gt;&gt;</code>. I think this would still fail at runtime, since the <code>RefCell</code> would be borrowed by the iterator and then will fail when the loop body tries to borrow it.</li>\n<li>Using a temporary vector to accumulate the future pushes, and push them after the loop ends. This is okay, but needs more allocations than pushing them on the fly.</li>\n<li>Unsafe code, and messing with pointers.</li>\n<li>Anything listed in the <a href=\"https://doc.rust-lang.org/stable/std/iter/trait.Iterator.html\" rel=\"nofollow\"><code>Iterator</code> documentation</a> does not help. I checked out <a href=\"http://bluss.github.io/rust-itertools/doc/itertools/index.html\" rel=\"nofollow\">itertools</a> and it looks like it wouldn't help either.</li>\n<li>Using a <code>while</code> loop and indexing instead of using an iterator making use of a reference to the outer vector. This is okay, but does not let me use iterators and adapters. I just want to get rid of this outer loop and use <code>my_vec.foreach(...)</code>.</li>\n</ol>\n\n<p>Are there any idioms or any libraries which would let me do this nicely Unsafe functions would be okay as long as they don't expose pointers to me.</p>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 13, "last_activity_date": 1563778597, "last_edit_date": 1563778597, "creation_date": 1457220579, "answer_id": 35821207, "question_id": 35821185, "link": "https://stackoverflow.com/questions/35821185/how-to-download-the-documentation-of-a-crate-with-cargo/35821207#35821207", "title": "How to download the documentation of a crate with Cargo?", "body": "<p>You can build the documentation for all crates that are currently specified in your <em>Cargo.toml</em> by using the command </p>\n\n<pre><code>cargo doc\n</code></pre>\n\n<p>A list of common Cargo commands can be found with <code>cargo --help</code>, and detailed information for a command can be found with <code>cargo COMMAND --help</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo doc --help\ncargo-doc \nBuild a package's documentation\n\nUSAGE:\n    cargo doc [OPTIONS]\n\nOPTIONS:\n    -q, --quiet                     No output printed to stdout\n        --open                      Opens the docs in a browser after the operation\n    -p, --package &lt;SPEC&gt;...         Package to document\n        --all                       Document all packages in the workspace\n        --exclude &lt;SPEC&gt;...         Exclude packages from the build\n        --no-deps                   Don't build documentation for dependencies\n        --document-private-items    Document private items\n    -j, --jobs &lt;N&gt;                  Number of parallel jobs, defaults to # of CPUs\n        --lib                       Document only this package's library\n        --bin &lt;NAME&gt;...             Document only the specified binary\n        --bins                      Document all binaries\n        --release                   Build artifacts in release mode, with optimizations\n        --features &lt;FEATURES&gt;       Space-separated list of features to activate\n        --all-features              Activate all available features\n        --no-default-features       Do not activate the `default` feature\n        --target &lt;TRIPLE&gt;           Build for the target triple\n        --target-dir &lt;DIRECTORY&gt;    Directory for all generated artifacts\n        --manifest-path &lt;PATH&gt;      Path to Cargo.toml\n        --message-format &lt;FMT&gt;      Error format [default: human]  [possible values: human, json, short]\n    -v, --verbose                   Use verbose output (-vv very verbose/build.rs output)\n        --color &lt;WHEN&gt;              Coloring: auto, always, never\n        --frozen                    Require Cargo.lock and cache are up to date\n        --locked                    Require Cargo.lock is up to date\n        --offline                   Run without accessing the network\n    -Z &lt;FLAG&gt;...                    Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details\n    -h, --help                      Prints help information\n\nBy default the documentation for the local package and all dependencies is\nbuilt. The output is all placed in `target/doc` in rustdoc's usual format.\n\nAll packages in the workspace are documented if the `--all` flag is supplied. The\n`--all` flag is automatically assumed for a virtual manifest.\nNote that `--exclude` has to be specified in conjunction with the `--all` flag.\n\nIf the `--package` argument is given, then SPEC is a package ID specification\nwhich indicates which package should be documented. If it is not given, then the\ncurrent package is documented. For more information on SPEC and its format, see\nthe `cargo help pkgid` command.\n</code></pre>\n\n<p>Especially useful to me is the <code>--open</code> flag, which opens the generated documentation in a browser.</p>\n\n<p>I do not believe that there is any way to generate the documentation for an arbitrary package that you are not using. You could always create a new Cargo project, add the desired crates as dependencies, then follow the above steps.</p>\n"}], "owner": {"reputation": 837, "user_id": 5784051, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/smjWQ.jpg?s=128&g=1", "display_name": "Xwtek", "link": "https://stackoverflow.com/users/5784051/xwtek"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1359, "favorite_count": 0, "answer_count": 1, "score": 8, "last_activity_date": 1563778597, "creation_date": 1457220401, "last_edit_date": 1457220505, "question_id": 35821185, "link": "https://stackoverflow.com/questions/35821185/how-to-download-the-documentation-of-a-crate-with-cargo", "title": "How to download the documentation of a crate with Cargo?", "body": "<p>In Haskell's Cabal, one can download the documentation for a package. Is it possible with Rust's Cargo? I searched on the Internet but found nothing.</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1457189934, "post_id": 35813487, "comment_id": 59298852, "body": "FWIW, there appears to <a href=\"https://crates.io/crates/winrt\" rel=\"nofollow noreferrer\">be a library for WinRT already</a>. You may also want to ping the maintainer of the <a href=\"https://github.com/retep998/winapi-rs\" rel=\"nofollow noreferrer\">winapi crate</a> as they have some way of making automated bindings. Actually, <a href=\"https://crates.io/crates/mincore-sys\" rel=\"nofollow noreferrer\">mincore-sys</a> already exists as a placeholder."}, {"owner": {"reputation": 8075, "user_id": 2169853, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/68b89009f4066d3e1adbe72d4329c8d3?s=128&d=identicon&r=PG", "display_name": "Jens", "link": "https://stackoverflow.com/users/2169853/jens"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1457378655, "post_id": 35813487, "comment_id": 59370046, "body": "@Shepmaster Thanks. I&#39;ve checked out the WinRT library but seems to be no very complete. I am actually doing this a toy learning project, but I stuck right now. Do you have any idea why the link attribute is not picked up by the linker?"}], "owner": {"reputation": 8075, "user_id": 2169853, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/68b89009f4066d3e1adbe72d4329c8d3?s=128&d=identicon&r=PG", "display_name": "Jens", "link": "https://stackoverflow.com/users/2169853/jens"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 698, "favorite_count": 0, "answer_count": 0, "score": 4, "last_activity_date": 1457188734, "creation_date": 1457177104, "last_edit_date": 1457188734, "question_id": 35813487, "link": "https://stackoverflow.com/questions/35813487/rust-executable-linking-to-a-system-library-works-but-a-library-has-unresolved", "title": "Rust executable linking to a system library works, but a library has unresolved references", "body": "<p>I am trying to use WinRT function from Rust in a library. When I create a simple example program which declares external functions and uses them everything compiles and links:</p>\n\n<pre><code>extern crate winapi;\nuse winapi::winerror::{HRESULT};\n\n#[repr(C)]\npub enum RO_INIT_TYPE {\n    RO_INIT_SINGLETHREADED = 0,\n    RO_INIT_MULTITHREADED  = 1      \n}\n\n#[link(name=\"mincore\", kind=\"static\")]\nextern \"system\" {\n    pub fn RoInitialize(threadingModel: RO_INIT_TYPE) -&gt; HRESULT;\n    pub fn RoUninitialize();\n}\n\nfn main() {\n    unsafe {\n        RoInitialize(RO_INIT_TYPE::RO_INIT_MULTITHREADED);\n        RoUninitialize();\n    }\n}\n</code></pre>\n\n<p>However, when I try to create a library which encapsulates the WinRT API, I get unresolved references from the linker. I have a library <code>winrt</code> with a module <code>roapi</code> which contains</p>\n\n<pre><code>#[repr(C)]\npub enum RO_INIT_TYPE {\n    RO_INIT_SINGLETHREADED = 0,\n    RO_INIT_MULTITHREADED  = 1      \n}\n\n#[link(name=\"mincore\", kind=\"static\")]\nextern \"system\" {\n    pub fn RoInitialize(threadingModel: RO_INIT_TYPE) -&gt; HRESULT;\n    pub fn RoUninitialize();\n}\n\npub struct RoApi {\n    marker: PhantomData&lt;()&gt;\n}\n\nimpl RoApi {\n    pub fn multi_threaded() -&gt; Result&lt;RoApi, HRESULT&gt;\n\n    pub fn single_threaded() -&gt; Result&lt;RoApi, HRESULT&gt;\n</code></pre>\n\n<p>I thought that the <code>link</code> attribute would specify that whenever the lib is linked, <code>mincore</code> is a dependency and is also linked. When I now create a sample program which uses this library, the <code>mincore</code> dependency is not used:</p>\n\n<pre><code>extern crate winrt;\n\nfn main() {\n    use winrt::RoApi;\n\n    let api = RoApi::multi_threaded().unwrap();\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>note: \"G:\\\\Programme\\\\Visual Studio 2015\\\\VC\\\\bin\\\\amd64\\\\link.exe\" \"/LIBPATH:G:\\\\Programme\\\\Visual Studio 2015\\\\VC\\\\lib\\\\amd64\" \"/LIBPATH:C:\\\\Program Files (x86)\\\\Windows Kits\\\\10\\\\Lib\\\\10.0.10586.0\\\\ucrt\\\\x64\" \"/LIBPATH:C:\\\\Program Files (x86)\\\\Windows Kits\\\\10\\\\lib\\\\10.0.10586.0\\\\um\\\\x64\" \"/NOLOGO\" \"/NXCOMPAT\" \"/LIBPATH:C:\\\\Program Files\\\\Rust stable MSVC 1.6\\\\lib\\\\rustlib\\\\x86_64-pc-windows-msvc\\\\lib\" \"G:\\\\dev\\\\rustrt\\\\target\\\\debug\\\\examples\\\\simpleExample.0.o\" \"/OUT:G:\\\\dev\\\\rustrt\\\\target\\\\debug\\\\examples\\\\simpleExample.exe\" \"/OPT:REF,ICF\" \"/DEBUG\" \"/LIBPATH:G:\\\\dev\\\\rustrt\\\\target\\\\debug\" \"/LIBPATH:G:\\\\dev\\\\rustrt\\\\target\\\\debug\\\\deps\" \"/LIBPATH:C:\\\\Program Files (x86)\\\\Windows Kits\\\\10\\\\Lib\\\\10.0.10240.0\\\\um\\\\x86\" \"/LIBPATH:C:\\\\Program Files\\\\Rust stable MSVC 1.6\\\\lib\\\\rustlib\\\\x86_64-pc-windows-msvc\\\\lib\" \"G:\\\\dev\\\\rustrt\\\\target\\\\debug\\\\libwinrt.rlib\" \"G:\\\\dev\\\\rustrt\\\\target\\\\debug\\\\deps\\\\liblibc-c862fb1c783dd674.rlib\" \"G:\\\\dev\\\\rustrt\\\\target\\\\debug\\\\deps\\\\libwinapi-96db160368c72f00.rlib\" \"C:\\\\Program Files\\\\Rust stable MSVC 1.6\\\\lib\\\\rustlib\\\\x86_64-pc-windows-msvc\\\\lib\\\\libstd-ca9f0d77.rlib\" \"C:\\\\Program Files\\\\Rust stable MSVC 1.6\\\\lib\\\\rustlib\\\\x86_64-pc-windows-msvc\\\\lib\\\\libcollections-ca9f0d77.rlib\" \"C:\\\\Program Files\\\\Rust stable MSVC 1.6\\\\lib\\\\rustlib\\\\x86_64-pc-windows-msvc\\\\lib\\\\librustc_unicode-ca9f0d77.rlib\" \"C:\\\\Program Files\\\\Rust stable MSVC 1.6\\\\lib\\\\rustlib\\\\x86_64-pc-windows-msvc\\\\lib\\\\librand-ca9f0d77.rlib\" \"C:\\\\Program Files\\\\Rust stable MSVC 1.6\\\\lib\\\\rustlib\\\\x86_64-pc-windows-msvc\\\\lib\\\\liballoc-ca9f0d77.rlib\" \"C:\\\\Program Files\\\\Rust stable MSVC 1.6\\\\lib\\\\rustlib\\\\x86_64-pc-windows-msvc\\\\lib\\\\liballoc_system-ca9f0d77.rlib\" \"C:\\\\Program Files\\\\Rust stable MSVC 1.6\\\\lib\\\\rustlib\\\\x86_64-pc-windows-msvc\\\\lib\\\\liblibc-ca9f0d77.rlib\" \"C:\\\\Program Files\\\\Rust stable MSVC 1.6\\\\lib\\\\rustlib\\\\x86_64-pc-windows-msvc\\\\lib\\\\libcore-ca9f0d77.rlib\" \"msvcrt.lib\" \"ws2_32.lib\" \"userenv.lib\" \"shell32.lib\" \"advapi32.lib\" \"msvcrt.lib\" \"compiler-rt.lib\"\nnote: libwinrt.rlib(winrt.0.o) : error LNK2019: unresolved external symbol RoInitialize referenced in function _ZN5roapi14initialize_api20h8bd5c81277d9b36ePaaE\nlibwinrt.rlib(winrt.0.o) : error LNK2019: unresolved external symbol RoUninitialize referenced in function _ZN5roapi13_$LT$impl$GT$4drop20hc8297115a3f3e3f3KbaE\nlibwinrt.rlib(winrt.0.o) : error LNK2019: unresolved external symbol WindowsCreateString referenced in function _ZN7hstring13_$LT$impl$GT$3new20h20fb25fe5124490e9daE\nlibwinrt.rlib(winrt.0.o) : error LNK2019: unresolved external symbol WindowsDeleteString referenced in function _ZN7hstring13_$LT$impl$GT$4drop20hca8ceaa76b908af66eaE\n</code></pre>\n\n<p>I have added a <code>build.rs</code> build script which sets the library path to find the libraries, and a <code>links = \"mincore\"</code> to the cargo config, but it is not used.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 2, "creation_date": 1457178519, "post_id": 35810843, "comment_id": 59295417, "body": "In addition to Chris Morgans answer: you can read about the so called interior mutability <a href=\"https://doc.rust-lang.org/std/cell/index.html\" rel=\"nofollow noreferrer\">in the official <code>std</code> documentation</a>. <code>RefCell</code> is another example."}], "answers": [{"comments": [{"owner": {"reputation": 71, "user_id": 12185226, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e9f928e2f1251693cb0061ba54b8bf01?s=128&d=identicon&r=PG&f=1", "display_name": "Deuchie", "link": "https://stackoverflow.com/users/12185226/deuchie"}, "edited": false, "score": 0, "creation_date": 1610421606, "post_id": 35810996, "comment_id": 116121351, "body": "Rust&#39;s &quot;internal mutability&quot; is much more overwhelmingly common than <code>const_cast</code> is in C++. Perhaps it was a bad decision to name it with (im)mutability."}], "tags": [], "owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "is_accepted": false, "score": 15, "last_activity_date": 1457211475, "last_edit_date": 1457211475, "creation_date": 1457159928, "answer_id": 35810996, "question_id": 35810843, "link": "https://stackoverflow.com/questions/35810843/why-do-rusts-atomic-types-use-non-mutable-functions-to-mutate-the-value/35810996#35810996", "title": "Why do Rust&#39;s `Atomic*` types use non-mutable functions to mutate the value?", "body": "<p>It wouldn\u2019t be very useful if it <em>didn\u2019t</em> work this way. With <code>&amp;mut</code> references, only one can exist at a time, and no <code>&amp;</code> references at that time, so the whole question of atomicity of operation would be moot.</p>\n\n<p>Another way of looking at it is <code>&amp;mut</code> are <em>unique</em> references, and <code>&amp;</code> <em>aliasable</em> references. For normal types, mutation can only safely occur if you have a unique reference, but atomic types are all about mutation (via replacement) without needing a unique reference.</p>\n\n<p>The naming of <code>&amp;</code> and <code>&amp;mut</code> has been a fraught matter, with much fear, uncertainty and doubt in the community and documents like <a href=\"http://smallcultfollowing.com/babysteps/blog/2014/05/13/focusing-on-ownership/\" rel=\"noreferrer\">Focusing on Ownership</a> explaining how things actually are. The language has ended up staying with <code>&amp;</code> and <code>&amp;mut</code>, but <code>&amp;mut</code> is actually about uniqueness rather than mutability (it\u2019s just that most of the time the two are equivalent).</p>\n"}], "owner": {"reputation": 289, "user_id": 5901356, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/4c666fecb5274110986882d680082cf9?s=128&d=identicon&r=PG&f=1", "display_name": "Ronald Smith", "link": "https://stackoverflow.com/users/5901356/ronald-smith"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 465, "favorite_count": 0, "answer_count": 1, "score": 11, "last_activity_date": 1457211475, "creation_date": 1457158714, "last_edit_date": 1457211341, "question_id": 35810843, "link": "https://stackoverflow.com/questions/35810843/why-do-rusts-atomic-types-use-non-mutable-functions-to-mutate-the-value", "title": "Why do Rust&#39;s `Atomic*` types use non-mutable functions to mutate the value?", "body": "<p>I notice that Rust's <code>Atomic*</code> structs have functions which modify the value, such as <a href=\"https://doc.rust-lang.org/std/sync/atomic/struct.AtomicUsize.html#method.fetch_add\" rel=\"noreferrer\"><code>fetch_add</code></a>. For instance, I can write this program:</p>\n\n<pre><code>use std::sync::atomic::{AtomicUsize, Ordering};\n\nstruct Tester {\n    counter: AtomicUsize\n}\n\nimpl Tester {\n    fn run(&amp;self) {\n        let counter = self.counter.fetch_add(1, Ordering::Relaxed);\n        println!(\"Hi there, this has been run {} times\", counter);\n    }\n}\n\nfn main() {\n    let t = Tester { counter: AtomicUsize::new(0) };\n    t.run();\n    t.run();\n}\n</code></pre>\n\n<p>This compiles and runs fine, but if I change the <code>AtomicUsize</code> to a normal integer, it will (correctly) fail to compile due to mutability concerns:</p>\n\n<pre><code>struct Tester {\n    counter: u64\n}\n\nimpl Tester {\n    fn run(&amp;self) {\n        self.counter = self.counter + 1;\n        println!(\"Hi there, this has been run {} times\", self.counter);\n    }\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1457145136, "post_id": 35806568, "comment_id": 59287768, "body": "Out of curiosity, why are you interested in what version of the compiler you are using?"}, {"owner": {"reputation": 7873, "user_id": 2225104, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/195de66794c596e35bc145c80e9f5515?s=128&d=identicon&r=PG", "display_name": "BitTickler", "link": "https://stackoverflow.com/users/2225104/bittickler"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1457152288, "post_id": 35806568, "comment_id": 59289025, "body": "Oh - I have some VS integrated rust version. Now I downloaded a new version of rust (1.7) and wondered if it is used by what I have in the IDE. So I thought - write 3 lines of codes and find out... ;)"}], "answers": [{"tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 9, "last_activity_date": 1457145417, "creation_date": 1457145417, "answer_id": 35809314, "question_id": 35806568, "link": "https://stackoverflow.com/questions/35806568/is-there-a-way-to-detect-the-compiler-version-from-within-a-rust-program/35809314#35809314", "title": "Is there a way to detect the compiler version from within a Rust program?", "body": "<p>Not directly.</p>\n\n<p>There is the <a href=\"https://crates.io/crates/rustc_version\"><code>rustc_version</code></a> crate which tells you the version of <code>rustc</code> accessible on the command-line; this is designed to be used in a build script.  There's also <a href=\"https://crates.io/crates/rustc_version_runtime\"><code>rustc_version_runtime</code></a> which does something similar, but exposes the information as a runtime call (<em>i.e.</em> it detects the compiler version at compile time, but exposes it at runtime).</p>\n\n<p>Standard disclaimer: be <em>very</em> careful writing anything that depends on compiler version.  You should ideally only test for minimum versions for which features are supported using semver (which both of the above libraries support directly).</p>\n"}], "owner": {"reputation": 7873, "user_id": 2225104, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/195de66794c596e35bc145c80e9f5515?s=128&d=identicon&r=PG", "display_name": "BitTickler", "link": "https://stackoverflow.com/users/2225104/bittickler"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2332, "favorite_count": 1, "accepted_answer_id": 35809314, "answer_count": 1, "score": 10, "last_activity_date": 1457145417, "creation_date": 1457127725, "last_edit_date": 1457128072, "question_id": 35806568, "link": "https://stackoverflow.com/questions/35806568/is-there-a-way-to-detect-the-compiler-version-from-within-a-rust-program", "title": "Is there a way to detect the compiler version from within a Rust program?", "body": "<p>In C++, you could use something like <code>__clang_version__</code>. Is there something similar for Rust? I searched on the internet, but found nothing.</p>\n"}, {"tags": ["json", "serialization", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1457125955, "post_id": 35806069, "comment_id": 59281627, "body": "Please ask <a href=\"http://meta.stackexchange.com/q/39223/281829\">only one question per question</a>. Pick one and you can ask the other one as a follow up question."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 2, "creation_date": 1457127401, "post_id": 35806069, "comment_id": 59282340, "body": "I edited your question to use &quot;raw string literals&quot;. Those greatly improve readability when dealing with these kinds of strings. <a href=\"https://doc.rust-lang.org/reference.html#raw-string-literals\" rel=\"nofollow noreferrer\">More details</a>"}, {"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 0, "creation_date": 1457172222, "post_id": 35806069, "comment_id": 59293527, "body": "Serde ignores default fields, cf. <a href=\"https://erickt.github.io/blog/2016/02/26/serde-0-dot-7/\" rel=\"nofollow noreferrer\">erickt.github.io/blog/2016/02/26/serde-0-dot-7</a>"}], "answers": [{"tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": false, "score": 2, "last_activity_date": 1457157331, "creation_date": 1457157331, "answer_id": 35810659, "question_id": 35806069, "link": "https://stackoverflow.com/questions/35806069/rust-and-json-serialization/35810659#35810659", "title": "Rust and JSON serialization", "body": "<ol>\n<li><p>No, there is no such way. For that, you need to use <a href=\"https://github.com/serde-rs/serde\" rel=\"nofollow\">serde</a>. Serde also has lots of other features, but unfortunately it is not as easy to use as rustc_serialize on stable Rust.</p></li>\n<li><p>Well, how should it? <code>Json::from_str</code> returns a JSON AST, which consists of maps, arrays, strings, numbers and other JSON types. It simply cannot contain values of your enum. And also there is no way to indicate that you want some other type instead of string, naturally.</p></li>\n</ol>\n"}, {"tags": [], "owner": {"reputation": 71, "user_id": 4017042, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d162c3f29d09071e5008ff5cf0a5de99?s=128&d=identicon&r=PG&f=1", "display_name": "user185578", "link": "https://stackoverflow.com/users/4017042/user185578"}, "is_accepted": false, "score": 3, "last_activity_date": 1461177439, "last_edit_date": 1461177439, "creation_date": 1461176882, "answer_id": 36752192, "question_id": 35806069, "link": "https://stackoverflow.com/questions/35806069/rust-and-json-serialization/36752192#36752192", "title": "Rust and JSON serialization", "body": "<p>Regarding the first question, you can use <code>Option</code>. For example:</p>\n\n<pre><code>pub struct JMessage {\n    msg_type: Option&lt;String&gt;,\n    mtype: MessageType,\n}\n</code></pre>\n\n<p>Which <a href=\"https://github.com/rust-lang/rust/pull/16971\" rel=\"nofollow\">defaults to <code>None</code></a> if the field does not exist.</p>\n"}], "owner": {"reputation": 125, "user_id": 2262126, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/768939c954a89140c8d0c5b975c860f4?s=128&d=identicon&r=PG", "display_name": "Sergey ", "link": "https://stackoverflow.com/users/2262126/sergey"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1152, "favorite_count": 0, "answer_count": 2, "score": -2, "last_activity_date": 1461177439, "creation_date": 1457125792, "last_edit_date": 1457127648, "question_id": 35806069, "link": "https://stackoverflow.com/questions/35806069/rust-and-json-serialization", "title": "Rust and JSON serialization", "body": "<p>If the JSON object is missing some fields, the <code>decode</code> function throws an exception. For example:</p>\n\n<pre><code>extern crate rustc_serialize;\nuse rustc_serialize::json;\nuse rustc_serialize::json::Json;\n\n#[derive(RustcDecodable, RustcEncodable, Debug)]\nenum MessageType {\n    PING,\n    PONG,\n    OPT,\n}\n\n#[derive(RustcDecodable, RustcEncodable, Debug)]\npub struct JMessage {\n    msg_type: String,\n    mtype: MessageType,\n}\n\nfn main() {\n    let result3 = json::decode::&lt;JMessage&gt;(r#\"{\"msg_type\":\"TEST\"}\"#);\n    println!(\"{:?}\", result3);\n    // this will print `Err(MissingFieldError(\"mtype\"))`\n\n    let result = json::decode::&lt;JMessage&gt;(r#\"{\"msg_type\":\"TEST\", \"mtype\":\"PING\"}\"#);\n    println!(\"{:?}\", &amp;result);\n    // This will print Ok(JMessage { msg_type: \"TEST\", mtype: PING })\n\n    let result2 = Json::from_str(r#\"{\"msg_type\":\"TEST\", \"mtype\":\"PING\"}\"#).unwrap();\n    println!(\"{:?}\", &amp;result2);\n    // this will print Object({\"msg_type\": String(\"TEST\"), \"mtype\": String(\"PING\")})\n}\n</code></pre>\n\n<ol>\n<li>Is there a way to specify that some fields in a struct are optional?</li>\n<li>Why does the function <code>from_str</code> not serialize <code>mtype</code> as an enum? </li>\n</ol>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 173, "user_id": 1146180, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4cb002db611580cd592ed4559f2761ed?s=128&d=identicon&r=PG", "display_name": "Jean", "link": "https://stackoverflow.com/users/1146180/jean"}, "edited": false, "score": 1, "creation_date": 1457106420, "post_id": 35799889, "comment_id": 59269978, "body": "Thanks, that worked perfectly! Incidentally, is there a way to make my third attempt work (the one where trait definition and <code>impl</code> block are separate)? If I try to use <code>Self</code> in the <code>impl</code> line, rustc complains."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 173, "user_id": 1146180, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4cb002db611580cd592ed4559f2761ed?s=128&d=identicon&r=PG", "display_name": "Jean", "link": "https://stackoverflow.com/users/1146180/jean"}, "edited": false, "score": 2, "creation_date": 1457108100, "post_id": 35799889, "comment_id": 59271179, "body": "@Jean: the syntax would be <code>impl&lt;T: Trait&gt; Index&lt;&lt;T as Trait&gt;::Associated&gt; for T</code> but there is a coherence issue here. You cannot only implement a <code>trait</code> from another crate for a type of your own crate (to avoid multiple people providing conflicting implementations of a given trait for a given type). Here, <code>T</code> is not restricting to the types of your crate... so it is forbidden."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 22, "last_activity_date": 1526918587, "last_edit_date": 1526918587, "creation_date": 1457105605, "answer_id": 35799889, "question_id": 35799682, "link": "https://stackoverflow.com/questions/35799682/how-do-i-bound-a-trait-with-a-supertrait-that-uses-the-traits-associated-type-a/35799889#35799889", "title": "How do I bound a trait with a supertrait that uses the trait&#39;s associated type as a parameter?", "body": "<p>You are close, very close.</p>\n\n<p>The <code>Trait</code> does not assume that any reference to <code>Trait</code> in its definition refers to the current type. After all, you could wish to refer to other types also implementing <code>Trait</code>.</p>\n\n<p>In order to specify that you want a specific type, you should heed the compilers note: use <code>&lt;Type as Trait&gt;::Associated</code>, where <code>Type</code> is the current type.</p>\n\n<p>When defining the <code>Trait</code>, how do you refer to the concrete type for which it will be instantiated? You use <code>Self</code>!</p>\n\n<p>The solution is:</p>\n\n<pre><code>pub trait Trait: Index&lt;&lt;Self as Trait&gt;::Associated&gt; {\n    type Associated;\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 13479, "user_id": 1830736, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/gwUf7.jpg?s=128&g=1", "display_name": "George Hilliard", "link": "https://stackoverflow.com/users/1830736/george-hilliard"}, "is_accepted": false, "score": 1, "last_activity_date": 1526918616, "last_edit_date": 1526918616, "creation_date": 1457106294, "answer_id": 35800133, "question_id": 35799682, "link": "https://stackoverflow.com/questions/35799682/how-do-i-bound-a-trait-with-a-supertrait-that-uses-the-traits-associated-type-a/35800133#35800133", "title": "How do I bound a trait with a supertrait that uses the trait&#39;s associated type as a parameter?", "body": "<p>I think the following provides the semantics you want, taking the approach of your second attempt.</p>\n\n<pre><code>pub trait Trait {\n    type Associated;\n}\n\nimpl&lt;T&gt; Index&lt;T&gt; for Trait&lt;Associated = T&gt; {\n    type Output = str;\n\n    fn index(&amp;self, associated: T) -&gt; &amp;'static str {\n        \"sup\"\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 173, "user_id": 1146180, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4cb002db611580cd592ed4559f2761ed?s=128&d=identicon&r=PG", "display_name": "Jean", "link": "https://stackoverflow.com/users/1146180/jean"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2187, "favorite_count": 4, "accepted_answer_id": 35799889, "answer_count": 2, "score": 17, "last_activity_date": 1526918616, "creation_date": 1457105018, "last_edit_date": 1526918422, "question_id": 35799682, "link": "https://stackoverflow.com/questions/35799682/how-do-i-bound-a-trait-with-a-supertrait-that-uses-the-traits-associated-type-a", "title": "How do I bound a trait with a supertrait that uses the trait&#39;s associated type as a parameter?", "body": "<p>I have a trait <code>Trait</code> with an associated type <code>Trait::Associated</code>. I am trying to bound the trait by requiring that it be indexable by its associated type, as shown here:</p>\n\n<pre><code>use std::ops::Index;\n\npub trait Trait: Index&lt;Trait::Associated&gt; {\n    type Associated;\n}\n</code></pre>\n\n<p>However, the compiler complains that the associated type is ambiguous</p>\n\n<blockquote>\n  <pre class=\"lang-none prettyprint-override\"><code>error[E0223]: ambiguous associated type\n --&gt; src/main.rs:3:24\n  |\n3 | pub trait Trait: Index&lt;Trait::Associated&gt; {\n  |                        ^^^^^^^^^^^^^^^^^ ambiguous associated type\n  |\n  = note: specify the type using the syntax `&lt;Type as Trait&gt;::Associated`\n</code></pre>\n</blockquote>\n\n<p>I also tried referring to the associated type as <code>Self::Associated</code>, but  then the compiler protests about a cyclic reference between the type and the trait:</p>\n\n<blockquote>\n  <pre class=\"lang-none prettyprint-override\"><code>error[E0391]: cyclic dependency detected\n --&gt; src/main.rs:3:1\n  |\n3 | pub trait Trait: Index&lt;Self::Associated&gt; {\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cyclic reference\n  |\nnote: the cycle begins when computing the supertraits of `Trait`...\n --&gt; src/main.rs:3:1\n  |\n3 | pub trait Trait: Index&lt;Self::Associated&gt; {\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  = note: ...which then again requires computing the supertraits of `Trait`, completing the cycle.\n</code></pre>\n</blockquote>\n\n<p>Finally, I also tried explicitly implementing <code>Index</code> for <code>Trait</code>:</p>\n\n<pre><code>pub trait Trait {\n    type Associated;\n}\n\nimpl&lt;T: Trait&gt; Index&lt;T::Associated&gt; for T {\n    type Output = str;\n\n    fn index(&amp;self, associated: T::Associated) -&gt; &amp;'static str {\n        \"sup\"\n    }\n}\n</code></pre>\n\n<p>Unfortunately that fails too:</p>\n\n<blockquote>\n  <pre class=\"lang-none prettyprint-override\"><code>error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g. `MyStruct&lt;T&gt;`)\n --&gt; src/main.rs:7:1\n  |\n7 | impl&lt;T: Trait&gt; Index&lt;T::Associated&gt; for T {\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n  |\n  = note: only traits defined in the current crate can be implemented for a type parameter\n</code></pre>\n</blockquote>\n\n<p>Am I trying to do something unreasonable here? Is there a way of achieving something similar, without having to use generics?</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=fd462df10e06bb6a86b29461fed3975e&amp;version=stable&amp;mode=debug\" rel=\"noreferrer\">Playground</a>.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 1477, "user_id": 1004379, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f6f5679275c965b9ea897e27026be433?s=128&d=identicon&r=PG", "display_name": "SacWebDeveloper", "link": "https://stackoverflow.com/users/1004379/sacwebdeveloper"}, "edited": false, "score": 0, "creation_date": 1457066695, "post_id": 35787949, "comment_id": 59247068, "body": "This worked for me. I added fn main(){} before it though. rustc --version? Are you running rustdoc foo.rs?"}, {"owner": {"reputation": 33, "user_id": 3284913, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/087a1c725815540a5d35c37067735be0?s=128&d=identicon&r=PG&f=1", "display_name": "user3284913", "link": "https://stackoverflow.com/users/3284913/user3284913"}, "reply_to_user": {"reputation": 1477, "user_id": 1004379, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f6f5679275c965b9ea897e27026be433?s=128&d=identicon&r=PG", "display_name": "SacWebDeveloper", "link": "https://stackoverflow.com/users/1004379/sacwebdeveloper"}, "edited": false, "score": 0, "creation_date": 1457067564, "post_id": 35787949, "comment_id": 59247344, "body": "rustc version is 1.6.0.  I&#39;m not running rustdoc, just &quot;cargo test&quot;"}], "answers": [{"comments": [{"owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "edited": false, "score": 0, "creation_date": 1457080114, "post_id": 35789644, "comment_id": 59252605, "body": "I&#39;d like to add that you can start lines in example code with <code>&#47;&#47;&#47;#</code> so they are omitted in the docs."}], "tags": [], "owner": {"reputation": 33, "user_id": 3284913, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/087a1c725815540a5d35c37067735be0?s=128&d=identicon&r=PG&f=1", "display_name": "user3284913", "link": "https://stackoverflow.com/users/3284913/user3284913"}, "is_accepted": false, "score": 0, "last_activity_date": 1457073836, "creation_date": 1457073836, "answer_id": 35789644, "question_id": 35787949, "link": "https://stackoverflow.com/questions/35787949/rust-documentation-test-unresolved-name/35789644#35789644", "title": "Rust Documentation Test unresolved name", "body": "<p>I think I figured it out.  I added the following line to lib.rs:</p>\n\n<pre><code>pub use self::foo::foo\n</code></pre>\n\n<p>Then I modified foo.rs to:</p>\n\n<pre><code>/// Foo function inside foo.rs\n///\n/// # Examples\n///\n/// ```\n/// use foo::foo;\n/// foo();\n/// ```\nfn foo() {\n}\n</code></pre>\n\n<p>After doing so, the documentation test ran successfully.  </p>\n"}], "owner": {"reputation": 33, "user_id": 3284913, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/087a1c725815540a5d35c37067735be0?s=128&d=identicon&r=PG&f=1", "display_name": "user3284913", "link": "https://stackoverflow.com/users/3284913/user3284913"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 571, "favorite_count": 0, "closed_date": 1457101187, "answer_count": 1, "score": 1, "last_activity_date": 1457073836, "creation_date": 1457065464, "question_id": 35787949, "link": "https://stackoverflow.com/questions/35787949/rust-documentation-test-unresolved-name", "closed_reason": "Duplicate", "title": "Rust Documentation Test unresolved name", "body": "<p>I wanted to add documentation tests to my code, but I can't seem to get a very basic example working.  Here is what I have:</p>\n\n<pre><code>/// Foo function inside foo.rs\n///\n/// # Examples\n///\n/// ```\n/// foo();\n/// ```\nfn foo() {\n}\n</code></pre>\n\n<p>The error I get is: </p>\n\n<blockquote>\n  <p>&lt;anon&gt;:2:5: 2:8 error: unresolved name <code>foo</code> [E0425]</p>\n</blockquote>\n\n<p>I also have a lib.rs but its only contents are:</p>\n\n<pre><code>// Contents of lib.rs\npub mod foo;\n</code></pre>\n"}, {"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1457076157, "post_id": 35786878, "comment_id": 59250689, "body": "Actually, in a 64-bits environment, a pointer would quadruple <code>MyStruct</code>&#39;s size from 32 bits to 128 bits (64 pointer, 32 value, 32 padding)."}, {"owner": {"reputation": 1788, "user_id": 2033557, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/b01f4a07ec9019af3c695a46c153b9ab?s=128&d=identicon&r=PG", "display_name": "TheHansinator", "link": "https://stackoverflow.com/users/2033557/thehansinator"}, "edited": false, "score": 0, "creation_date": 1458916245, "post_id": 35786878, "comment_id": 60075124, "body": "Do you care about the actual ordering you end up with, or are you simply trying to put the <code>MyStruct</code> instances in a map? If it&#39;s the latter, it would make much more sense to use a <a href=\"https://doc.rust-lang.org/std/collections/struct.HashMap.html\" rel=\"nofollow noreferrer\"><code>HashMap</code></a>"}, {"owner": {"reputation": 2196, "user_id": 775195, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/fd0baf309d203f280bfe819cda1eda1b?s=128&d=identicon&r=PG", "display_name": "loudandclear", "link": "https://stackoverflow.com/users/775195/loudandclear"}, "edited": false, "score": 0, "creation_date": 1458949117, "post_id": 35786878, "comment_id": 60090723, "body": "Oh, well, for the sake of the question let&#39;s assume that we need the order. I guess a similar problem would occur with a <code>BinaryHeap</code> if you need to pop the min/max value from time to time."}], "answers": [{"comments": [{"owner": {"reputation": 2196, "user_id": 775195, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/fd0baf309d203f280bfe819cda1eda1b?s=128&d=identicon&r=PG", "display_name": "loudandclear", "link": "https://stackoverflow.com/users/775195/loudandclear"}, "edited": false, "score": 0, "creation_date": 1457069863, "post_id": 35788530, "comment_id": 59248029, "body": "Is there anything in the language specification that prevents the use of them? If a data structure takes a closure as an argument in its constructor and store it, that should be enough. So I guess the problem isn&#39;t that &quot;it&#39;s not possible&quot;, it&#39;s just that the standard library isn&#39;t designed that way?"}, {"owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "reply_to_user": {"reputation": 2196, "user_id": 775195, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/fd0baf309d203f280bfe819cda1eda1b?s=128&d=identicon&r=PG", "display_name": "loudandclear", "link": "https://stackoverflow.com/users/775195/loudandclear"}, "edited": false, "score": 2, "creation_date": 1457074001, "post_id": 35788530, "comment_id": 59249664, "body": "Exactly. You <i>can</i> do it, just not with <code>std::collections</code> as it is."}, {"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 0, "creation_date": 1457097368, "post_id": 35788530, "comment_id": 59263538, "body": "libstd collections can add support for this in a later version by adding defaulted type parameters."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 0, "creation_date": 1457104501, "post_id": 35788530, "comment_id": 59268615, "body": "@bluss: Indeed, much like 1.7 now offers the ability to customize the hash algorithm in hash maps!"}], "tags": [], "owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "is_accepted": false, "score": 6, "last_activity_date": 1457076074, "last_edit_date": 1457076074, "creation_date": 1457068722, "answer_id": 35788530, "question_id": 35786878, "link": "https://stackoverflow.com/questions/35786878/how-can-i-implement-ord-when-the-comparison-depends-on-data-not-part-of-the-comp/35788530#35788530", "title": "How can I implement Ord when the comparison depends on data not part of the compared items?", "body": "<p>Rust (more specifically Rust's libcollections) currently has no comparator-like construct, so using a mutable static is probably your best bet. This is also used within <code>rustc</code>, e.g. the string interner is static. With that said, the use case isn't exactly uncommon, so maybe if we petition for it, Rust will get external comparators one day.</p>\n"}, {"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1457086522, "post_id": 35791329, "comment_id": 59256556, "body": "@ker: I&#39;ve been trying to toy with creating a second one which would allow per-map dictionary... and to be honest I haven&#39;t exactly been wildly successful!"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1457087606, "post_id": 35791329, "comment_id": 59257298, "body": "@ker: I was thinking of rewrapping the <code>BTreeMap</code> and then each time a method is invoked switching a thread-local-variable (and restoring its previous value at the end of the invocation) but... I kinda need some <code>AnyMap</code> for the thread-local-variable to be able to express it in a generic manner (maybe I should just dump genericity) and lifetimes will force me into using unsafe code, and there&#39;s a lot of interface to wrap, ... it&#39;s rather painful"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1457102721, "post_id": 35791329, "comment_id": 59267316, "body": "@ker: I have added your example in the answer to avoid it being lost in case comments are cleaned up. Another solution would be for you to provide it as an answer, in which case I would remove it from mine and upvote you :)"}, {"owner": {"reputation": 2196, "user_id": 775195, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/fd0baf309d203f280bfe819cda1eda1b?s=128&d=identicon&r=PG", "display_name": "loudandclear", "link": "https://stackoverflow.com/users/775195/loudandclear"}, "edited": false, "score": 0, "creation_date": 1457126823, "post_id": 35791329, "comment_id": 59282060, "body": "Thanks! I&#39;ve seen discussions mentioning that creating a new type and implementing Ord would be enough for simulating different comparison methods, so custom comparators aren&#39;t necessary. However, it doesn&#39;t simulate closures. Did the discussions you saw mention this issue, if they did can you provide a link?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 2196, "user_id": 775195, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/fd0baf309d203f280bfe819cda1eda1b?s=128&d=identicon&r=PG", "display_name": "loudandclear", "link": "https://stackoverflow.com/users/775195/loudandclear"}, "edited": false, "score": 0, "creation_date": 1457185852, "post_id": 35791329, "comment_id": 59297589, "body": "@loudandclear: to be honest it was more than a year ago (before 1.0) so I have no idea how to find the discussion again. As for closures, I do not remember if (or how) they were discussed. The only interest of closures is closing over an environment, so if you embark the environment within your structures (via a shared pointer, for example) then closures are not necessary any longer... but this does inflate the size of the structures."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 8, "last_activity_date": 1457102621, "last_edit_date": 1495541414, "creation_date": 1457080346, "answer_id": 35791329, "question_id": 35786878, "link": "https://stackoverflow.com/questions/35786878/how-can-i-implement-ord-when-the-comparison-depends-on-data-not-part-of-the-comp/35791329#35791329", "title": "How can I implement Ord when the comparison depends on data not part of the compared items?", "body": "<p>I remember the debate over whether allowing a custom comparator was worth it or not, and it was decided that this complicated the API a lot when most of the times one could achieve the same effect by using a new (wrapping) type and redefine <code>PartialOrd</code> for it.</p>\n\n<p>It was, ultimately, a trade-off: weighing API simplicity versus unusual needs (which are probably summed up as access to external resources).</p>\n\n<hr>\n\n<p>In your specific case, there are two solutions:</p>\n\n<ul>\n<li>use the API the way it was intended: create a wrapper structure containing both an instance of <code>MyStruct</code> and a reference to the dictionary, then define <code>Ord</code> on that wrapper and use this as key in the <code>BTreeMap</code></li>\n<li>circumvent the API... somehow</li>\n</ul>\n\n<p>I would personally advise starting with using the API as intended, and measure, before going down the road of trying to circumvent it.</p>\n\n<hr>\n\n<p><a href=\"https://stackoverflow.com/users/1103681/ker\">@ker</a> was kind enough to provide the following illustration of achieving wrapping in comments (<a href=\"https://play.rust-lang.org/?gist=053d6ebaeede239ae4ad&amp;version=stable\" rel=\"nofollow noreferrer\">playground version</a>):</p>\n\n<pre><code>#[derive(Eq, PartialEq, Debug)]\nstruct MyStruct {\n   value: i32,\n}\n\n#[derive(Debug)]\nstruct MyStructAsKey&lt;'a&gt; {\n    inner: MyStruct,\n    dict: &amp;'a Dictionary,\n}\n\nimpl&lt;'a&gt; Eq for MyStructAsKey&lt;'a&gt; {}\n\nimpl&lt;'a&gt; PartialEq for MyStructAsKey&lt;'a&gt; {\n    fn eq(&amp;self, other: &amp;Self) -&gt; bool {\n        self.inner == other.inner &amp;&amp; self.dict as *const _ as usize == other.dict as *const _ as usize\n    }\n}\n\nimpl&lt;'a&gt; Ord for MyStructAsKey&lt;'a&gt; {\n    fn cmp(&amp;self, other: &amp;Self) -&gt; ::std::cmp::Ordering {\n        self.dict.lookup(&amp;self.inner).cmp(&amp;other.dict.lookup(&amp;other.inner))\n    }\n}\n\nimpl&lt;'a&gt; PartialOrd for MyStructAsKey&lt;'a&gt; {\n    fn partial_cmp(&amp;self, other: &amp;Self) -&gt; Option&lt;::std::cmp::Ordering&gt; {\n        Some(self.dict.lookup(&amp;self.inner).cmp(&amp;other.dict.lookup(&amp;other.inner)))\n    }\n}\n\n#[derive(Default, Debug)]\nstruct Dictionary(::std::cell::RefCell&lt;::std::collections::HashMap&lt;i32, u64&gt;&gt;);\n\nimpl Dictionary {\n    fn ord_key&lt;'a&gt;(&amp;'a self, ms: MyStruct) -&gt; MyStructAsKey&lt;'a&gt; {\n        MyStructAsKey {\n            inner: ms,\n            dict: self,\n        }\n    }\n    fn lookup(&amp;self, key: &amp;MyStruct) -&gt; u64 {\n        self.0.borrow()[&amp;key.value]\n    }\n    fn create(&amp;self, value: u64) -&gt; MyStruct {\n        let mut map = self.0.borrow_mut();\n        let n = map.len();\n        assert!(n as i32 as usize == n);\n        let n = n as i32;\n        map.insert(n, value);\n        MyStruct {\n            value: n,\n        }\n    }\n}\n\nfn main() {\n    let dict = Dictionary::default();\n    let a = dict.create(99);\n    let b = dict.create(42);\n    let mut set = ::std::collections::BTreeSet::new();\n    set.insert(dict.ord_key(a));\n    set.insert(dict.ord_key(b));\n    println!(\"{:#?}\", set);\n    let c = dict.create(1000);\n    let d = dict.create(0);\n    set.insert(dict.ord_key(c));\n    set.insert(dict.ord_key(d));\n    println!(\"{:#?}\", set);\n}\n</code></pre>\n"}], "owner": {"reputation": 2196, "user_id": 775195, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/fd0baf309d203f280bfe819cda1eda1b?s=128&d=identicon&r=PG", "display_name": "loudandclear", "link": "https://stackoverflow.com/users/775195/loudandclear"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 705, "favorite_count": 0, "answer_count": 2, "score": 12, "last_activity_date": 1457102621, "creation_date": 1457058264, "last_edit_date": 1457058855, "question_id": 35786878, "link": "https://stackoverflow.com/questions/35786878/how-can-i-implement-ord-when-the-comparison-depends-on-data-not-part-of-the-comp", "title": "How can I implement Ord when the comparison depends on data not part of the compared items?", "body": "<p>I have a small struct containing only an <code>i32</code>:</p>\n\n<pre><code>struct MyStruct {\n   value: i32,\n}\n</code></pre>\n\n<p>I want to implement <code>Ord</code> in order to store <code>MyStruct</code> in a <code>BTreeMap</code> or any other data structure that requires you to have <code>Ord</code> on its elements.</p>\n\n<p>In my case, comparing two instances of <code>MyStruct</code> does not depend on the <code>value</code>s in them, but asking another data structure (a dictionary), and that data structure is unique for each instance of the <code>BTreeMap</code> I will create. So ideally it would look like this:</p>\n\n<pre><code>impl Ord for MyStruct {\n    fn cmp(&amp;self, other: &amp;Self, dict: &amp;Dictionary) -&gt; Ordering {\n        dict.lookup(self.value).cmp(dict.lookup(other.value))\n    }\n}\n</code></pre>\n\n<p>However this won't be possible, since an <code>Ord</code> implementation only can access two instances of <code>MyStruct</code>, nothing more.</p>\n\n<p>One solution would be storing a pointer to the dictionary in <code>MyStruct</code> but that's overkill. <code>MyStruct</code> is supposed to be a simple wrapper and the pointer would double its size. Another solution is to use a static global, but that's not a good solution either.</p>\n\n<p>In C++ the solution would be easy: Most STL algorithms/data structures let you pass a comparator, where it can be a function object with some state. So I believe Rust would have an idiom to match this somehow, is there any way to accomplish this?</p>\n"}, {"tags": ["rust", "lexer"], "answers": [{"tags": [], "owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "is_accepted": false, "score": 3, "last_activity_date": 1457054002, "last_edit_date": 1457054002, "creation_date": 1457053062, "answer_id": 35786091, "question_id": 35780830, "link": "https://stackoverflow.com/questions/35780830/can-i-use-the-rust-lexer-or-parser-to-retrieve-a-list-of-functions-within-a-rust/35786091#35786091", "title": "Can I use the Rust lexer or parser to retrieve a list of functions within a Rust file?", "body": "<p>You could use <a href=\"https://crates.io/crates/syntex\" rel=\"nofollow\">syntex</a> to parse the Rust code in a build script.</p>\n"}, {"comments": [{"owner": {"reputation": 4415, "user_id": 2230347, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/wrVIW.jpg?s=128&g=1", "display_name": "Will Squire", "link": "https://stackoverflow.com/users/2230347/will-squire"}, "edited": false, "score": 0, "creation_date": 1457115791, "post_id": 35788787, "comment_id": 59276106, "body": "Hm, I didn&#39;t consider macros. Excluding macros though, would the <code>syntex</code> library be able just to get me just the functions in a file, including their start and end positions?"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 4415, "user_id": 2230347, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/wrVIW.jpg?s=128&g=1", "display_name": "Will Squire", "link": "https://stackoverflow.com/users/2230347/will-squire"}, "edited": false, "score": 0, "creation_date": 1457145147, "post_id": 35788787, "comment_id": 59287774, "body": "You could parse the source file into an AST, then walk the AST to find <code>fn</code> items, yes.  Keep in mind that you won&#39;t get <i>any</i> type information; <code>syntex</code> operates at a level before type (or even name) resolution is performed.  If whatever you&#39;re planning involves knowing the types involved, it might not be possible without building on top of the compiler."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 4, "last_activity_date": 1475411050, "last_edit_date": 1475411050, "creation_date": 1457070009, "answer_id": 35788787, "question_id": 35780830, "link": "https://stackoverflow.com/questions/35780830/can-i-use-the-rust-lexer-or-parser-to-retrieve-a-list-of-functions-within-a-rust/35788787#35788787", "title": "Can I use the Rust lexer or parser to retrieve a list of functions within a Rust file?", "body": "<p>No. I mean, not <em>really</em>.  Whether you write your own parser or re-use <a href=\"https://crates.io/crates/syntex\" rel=\"nofollow\"><code>syntex</code></a>, you're going to hit a fundamental limitation: <em>macros</em>.</p>\n\n<p>So let's say you go all-out and expand <code>macro_rules!</code>-based macros, <em>including</em> the ones defined in external crates (which means you'll also need to extract <code>rustc</code>'s crate metadata loading... which isn't stable).  What about procedural macros and custom derive attributes?  Those are defined in code and depend on compiler-internal interfaces to function.</p>\n\n<p>The only way this is likely to ever work <em>correctly</em> is if you build <em>on top</em> of the compiler, or duplicate a huge amount of work (which also involves unstable binary interfaces).</p>\n"}], "owner": {"reputation": 4415, "user_id": 2230347, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/wrVIW.jpg?s=128&g=1", "display_name": "Will Squire", "link": "https://stackoverflow.com/users/2230347/will-squire"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 211, "favorite_count": 0, "accepted_answer_id": 35788787, "answer_count": 2, "score": 1, "last_activity_date": 1475411050, "creation_date": 1457031959, "last_edit_date": 1457041858, "question_id": 35780830, "link": "https://stackoverflow.com/questions/35780830/can-i-use-the-rust-lexer-or-parser-to-retrieve-a-list-of-functions-within-a-rust", "title": "Can I use the Rust lexer or parser to retrieve a list of functions within a Rust file?", "body": "<p>The lexer/parser file located <a href=\"https://github.com/rust-lang/rust/blob/master/src/libsyntax/parse/lexer/mod.rs\" rel=\"nofollow\">here</a> is quite large and I'm not sure if it is suitable for just retrieving a list of Rust functions. Perhaps writing my own/using another library would be a better route to take?</p>\n\n<p>The end objective would be to create a kind of execution manager. To contextualise, it would be able to read a list of function calls wrapped in a function. The function calls that are within the function will then be able to be re/ordered from some web interface. Thought it might be nice to manage larger applications this way.</p>\n"}, {"tags": ["struct", "rust", "lifetime"], "comments": [{"owner": {"reputation": 889, "user_id": 1879192, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/54f9ed64051a86b03fe99f82805ac6d5?s=128&d=identicon&r=PG", "display_name": "Thierry", "link": "https://stackoverflow.com/users/1879192/thierry"}, "edited": false, "score": 2, "creation_date": 1457355079, "post_id": 35772635, "comment_id": 59353785, "body": "As a side note; your statement that &quot;a struct is a value type - therefore its memory lies on the stack&quot; is also not quite correct. Value types merely are allocated &#39;inline&#39;. If the variable containing the <code>Person</code> struct is e.g. a local variable of a function, then the struct will be allocated on the stack. But the <code>Person</code> struct may very well be boxed, may be in an <code>Arc</code>, may be in a <code>Vec</code>, etc., and hence be allocated on the heap. You&#39;re correct in thinking that the <code>struct</code> keyword doesn&#39;t <i>make</i> something reside on the heap, but it doesn&#39;t <i>prevent</i> it either."}, {"owner": {"reputation": 4354, "user_id": 5967828, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/fJ7P2.jpg?s=128&g=1", "display_name": "xetra11", "link": "https://stackoverflow.com/users/5967828/xetra11"}, "reply_to_user": {"reputation": 889, "user_id": 1879192, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/54f9ed64051a86b03fe99f82805ac6d5?s=128&d=identicon&r=PG", "display_name": "Thierry", "link": "https://stackoverflow.com/users/1879192/thierry"}, "edited": false, "score": 0, "creation_date": 1457360204, "post_id": 35772635, "comment_id": 59357289, "body": "thank you for your clarifications!"}], "answers": [{"tags": [], "owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "is_accepted": false, "score": 7, "last_activity_date": 1457009895, "creation_date": 1457009895, "answer_id": 35772831, "question_id": 35772635, "link": "https://stackoverflow.com/questions/35772635/struct-needs-a-lifetime-because/35772831#35772831", "title": "Struct needs a lifetime because?", "body": "<p>It's the other way around: The struct contains a reference, thus it may not outlive the thing the reference points to.</p>\n"}, {"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 9, "last_activity_date": 1457011848, "last_edit_date": 1495542690, "creation_date": 1457011848, "answer_id": 35773575, "question_id": 35772635, "link": "https://stackoverflow.com/questions/35772635/struct-needs-a-lifetime-because/35773575#35773575", "title": "Struct needs a lifetime because?", "body": "<blockquote>\n  <p>As lifetime elision helps to omit explicitly describing a lifetime (<strong>?</strong>) there are cases where we need to describe them.</p>\n</blockquote>\n\n<p>No <em>As</em> here, lifetime elision is simply about making your life easier (both as writer and reader). The lifetimes are still present (semantically) but need not be explicitly denoted (syntactically).</p>\n\n<p>Lifetime elision does not work in <code>struct</code> definition, as far as I know. It works in functions signatures and bodies.</p>\n\n<blockquote>\n  <p>But since this struct holds a reference to a Car and this reference might be borrowed to somewhere else - the struct NEEDS to stay alive as long as the Car reference is in use.</p>\n</blockquote>\n\n<p>No. The goal of lifetime is to avoid <em>dangling references</em>, and indicate borrowing relationships.</p>\n\n<ul>\n<li>Dangling references are references that refer to (long-)dead values, possibly in freed memory or (worse) in reused memory.</li>\n<li>Borrowing relationships are used by the borrow checker to track whether someone still has a reference into a value or not; while someone has a reference into a value, it should not be moved or changed to another type lest said reference becomes dangling.</li>\n</ul>\n\n<p>For a deeper explanation of dangling references, <a href=\"https://stackoverflow.com/questions/6441218/can-a-local-variables-memory-be-accessed-outside-its-scope\">I recommend this question</a>.</p>\n\n<p>Therefore, lifetimes are about ensuring that a reference NEVER outlives the value it refers to.</p>\n\n<p>The constraint, therefore, is the opposite of your belief: the goal of <code>'a</code> here is to let the compiler ensure that your <code>Person</code> never outlives the <code>Car</code> it refers to.</p>\n"}], "owner": {"reputation": 4354, "user_id": 5967828, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/fJ7P2.jpg?s=128&g=1", "display_name": "xetra11", "link": "https://stackoverflow.com/users/5967828/xetra11"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 549, "favorite_count": 0, "accepted_answer_id": 35773575, "answer_count": 2, "score": 3, "last_activity_date": 1457012624, "creation_date": 1457009384, "last_edit_date": 1457012624, "question_id": 35772635, "link": "https://stackoverflow.com/questions/35772635/struct-needs-a-lifetime-because", "title": "Struct needs a lifetime because?", "body": "<p><em>(Every statement marked with <strong>?</strong> wishes to be asserted)</em></p>\n\n<p>I'm just coming along with lifetimes slowly.</p>\n\n<p>As lifetime elision helps to omit explicitly describing a lifetime(<strong>?</strong>) there are cases where we need to describe them.  </p>\n\n<p>An example might be a struct which holds a reference:</p>\n\n<pre><code>struct Person&lt;a'&gt;{\ncar: &amp;'a Car\n}\n</code></pre>\n\n<p>Am I right with the following assumption that, </p>\n\n<blockquote>\n  <p>a struct is a value type - therefore its memory lies on the stack. After the scope ends where this struct is used in - the struct will die. But since this struct holds a reference to a <strong>Car</strong> and this reference might be borrowed to somewhere else - the struct NEEDS to stay alive as long as the Car reference is in use. The Lifetime <strong>'a</strong> therefore tells the Person struct to stay alive as long as Car is in use.(<strong>?</strong>)</p>\n</blockquote>\n\n<p>to be honest I don't believe myself with this statement above. Because in other definitions of the rust lifetime I understood it so - that the Car needs to stay alive at least as long as <strong>'a</strong> so Person won't have a dangling pointer.</p>\n"}, {"tags": ["generics", "rust"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1456992692, "post_id": 35766261, "comment_id": 59205008, "body": "You do realize that a number of <code>i32</code> values cannot be represented (exactly) as a <code>f32</code> because by IEEE standard <code>f32</code> only has a 23 bits mantissa (so it could represent an hypothetical <code>i24</code> but no more)."}], "answers": [{"tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": false, "score": 3, "last_activity_date": 1456993494, "creation_date": 1456993494, "answer_id": 35766790, "question_id": 35766261, "link": "https://stackoverflow.com/questions/35766261/how-do-i-cast-generic-t-to-f32-if-i-know-that-its-possible/35766790#35766790", "title": "How do I cast generic T to f32 if I know that it&#39;s possible?", "body": "<p>You can simply add the cast as a method to your <code>MyInt</code> trait:</p>\n\n<pre><code>trait MyInt {\n    fn to_f32_lossy(self) -&gt; f32;\n}\n\nimpl MyInt for i32 {\n    fn to_f32_lossy(self) -&gt; f32 {\n        self as f32\n    }\n}\n\nimpl MyInt for f32 {\n    fn to_f32_lossy(self) -&gt; f32 {\n        self\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 221, "user_id": 4481876, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/dedc3f9101eaa933cec2ab03a546d0ed?s=128&d=identicon&r=PG&f=1", "display_name": "estw272", "link": "https://stackoverflow.com/users/4481876/estw272"}, "edited": false, "score": 0, "creation_date": 1457000168, "post_id": 35766805, "comment_id": 59210146, "body": "Thanks for you reply. Can you explain what this line <code>trait MyInt: Copy + Into&lt;f64&gt;</code> means? Types implementing <code>MyInt</code> trait also should  have <code>Copy</code> and <code>Into</code> traits implemented?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 221, "user_id": 4481876, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/dedc3f9101eaa933cec2ab03a546d0ed?s=128&d=identicon&r=PG&f=1", "display_name": "estw272", "link": "https://stackoverflow.com/users/4481876/estw272"}, "edited": false, "score": 1, "creation_date": 1457002012, "post_id": 35766805, "comment_id": 59211503, "body": "@ehsisthatsweird: yes, the portion after the <code>:</code> spells out the requirement that a type has to fulfill for <code>MyInt</code> to be implementable; it also means that when using a type that implements <code>MyInt</code> you know it necessarily implements those other traits."}], "tags": [], "owner": {"reputation": 11927, "user_id": 2301531, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/0e05b25685a72ab6268dce396da1b76f?s=128&d=identicon&r=PG", "display_name": "A.B.", "link": "https://stackoverflow.com/users/2301531/a-b"}, "is_accepted": true, "score": 3, "last_activity_date": 1456993524, "creation_date": 1456993524, "answer_id": 35766805, "question_id": 35766261, "link": "https://stackoverflow.com/questions/35766261/how-do-i-cast-generic-t-to-f32-if-i-know-that-its-possible/35766805#35766805", "title": "How do I cast generic T to f32 if I know that it&#39;s possible?", "body": "<p>You are right, <code>as</code> only works with concrete types.</p>\n\n<p>Using the <code>From</code> or <code>Into</code> trait for the conversion is a good approach, but these are not implemented for a i32 -> f32 conversion. The reason is most likely that it's a potentially lossy conversion as Matthieu M. says.</p>\n\n<p>You'll have to work with <code>f64</code> instead of <code>f32</code>.</p>\n\n<p>I would suggest changing the trait to this:</p>\n\n<pre><code>trait MyInt: Copy + Into&lt;f64&gt; {\n    fn blank();\n}\n</code></pre>\n\n<p>Then you can add the method to do the conversion:</p>\n\n<pre><code>fn to_f64(&amp;self) -&gt; f64 {\n    self.field.into()\n}\n</code></pre>\n"}], "owner": {"reputation": 221, "user_id": 4481876, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/dedc3f9101eaa933cec2ab03a546d0ed?s=128&d=identicon&r=PG&f=1", "display_name": "estw272", "link": "https://stackoverflow.com/users/4481876/estw272"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1807, "favorite_count": 1, "accepted_answer_id": 35766805, "answer_count": 2, "score": 4, "last_activity_date": 1456993524, "creation_date": 1456991785, "question_id": 35766261, "link": "https://stackoverflow.com/questions/35766261/how-do-i-cast-generic-t-to-f32-if-i-know-that-its-possible", "title": "How do I cast generic T to f32 if I know that it&#39;s possible?", "body": "<p>I have a generic <code>struct</code> with one field, that can only be <code>i32</code> or <code>f32</code>.</p>\n\n<pre><code>trait MyInt {\n    fn blank();\n}\n\nimpl MyInt for i32 {\n    fn blank() {\n        unimplemented!()\n    }\n}\n\nimpl MyInt for f32 {\n    fn blank() {\n        unimplemented!()\n    }\n}\n\nstruct MyStruct&lt;T&gt; where T: MyInt {\n    field: T\n}\n\nimpl&lt;T&gt; MyStruct&lt;T&gt; where T: MyInt {\n    fn new(var: T) -&gt; MyStruct&lt;T&gt; {\n        MyStruct {\n            field: var\n        }\n    }\n}\n</code></pre>\n\n<p>Now I want to add a method which returns field value <code>as f32</code>, whether it's <code>i32</code> or <code>f32</code>. I know that this cast should always be possible since field types are limited to two mentioned above, but how do I go about it? Apparently <code>as</code> only works on primitive types and I tried going the <code>From</code> route, but I am doing something wrong, this doesn't work.</p>\n\n<pre><code>fn to_f32(&amp;self) -&gt; f32 where T: From&lt;i32&gt; {\n        f32::from(self.field);\n}\n</code></pre>\n"}, {"tags": ["rust", "borrow-checker"], "answers": [{"comments": [{"owner": {"reputation": 4354, "user_id": 5967828, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/fJ7P2.jpg?s=128&g=1", "display_name": "xetra11", "link": "https://stackoverflow.com/users/5967828/xetra11"}, "edited": false, "score": 0, "creation_date": 1456992519, "post_id": 35766076, "comment_id": 59204904, "body": "&quot;because immutable references are Copy&quot; Are you sure that a immu ref is a copy? So if the value it refers to is changed the receiver of that immu ref wont notice or wouldnt print ie. the new value? Because it has the copied state not the reference to it?  Or am I failing hard with my brain again? ;)"}, {"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "reply_to_user": {"reputation": 4354, "user_id": 5967828, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/fJ7P2.jpg?s=128&g=1", "display_name": "xetra11", "link": "https://stackoverflow.com/users/5967828/xetra11"}, "edited": false, "score": 0, "creation_date": 1456994217, "post_id": 35766076, "comment_id": 59205924, "body": "@xetra11, if you have an immutable reference, <b>there is no way</b> to change the data it points to, neither through this reference nor by any other means (except <code>unsafe</code>, of course). More concretely, if you have an immutable reference to some variable, you neither can take a mutable reference to the same variable or its internals nor you can modify this variable directly even if it is stored in a <code>mut</code> slot. This is one of the cornerstones of Rust ownership/borrowing concept, and this is what makes aliasing of immutable references safe. Also note that mutable references are not copyable."}, {"owner": {"reputation": 4354, "user_id": 5967828, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/fJ7P2.jpg?s=128&g=1", "display_name": "xetra11", "link": "https://stackoverflow.com/users/5967828/xetra11"}, "edited": false, "score": 0, "creation_date": 1456995542, "post_id": 35766076, "comment_id": 59206796, "body": "Ah yea youre right. It says if there is one mutable borrow around you cannot have an immut ref to that value. In other words there will only exist mut refs or copys of values?! (unless not unsafe)"}, {"owner": {"reputation": 14813, "user_id": 141502, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/zgvfq.png?s=128&g=1", "display_name": "Daniel", "link": "https://stackoverflow.com/users/141502/daniel"}, "reply_to_user": {"reputation": 4354, "user_id": 5967828, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/fJ7P2.jpg?s=128&g=1", "display_name": "xetra11", "link": "https://stackoverflow.com/users/5967828/xetra11"}, "edited": false, "score": 0, "creation_date": 1457001844, "post_id": 35766076, "comment_id": 59211371, "body": "@xetra11: Whether a reference is <code>Copy</code> is orthogonal to whether the underlying data is <code>Copy</code>.  Immutable references don&#39;t copy the underlying data, but the reference itself is copyable (<code>impl Copy for &amp;T</code>) -- this why you can share immutable references.  <code>&amp;mut T</code> references on the other hand are not copyable."}, {"owner": {"reputation": 4354, "user_id": 5967828, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/fJ7P2.jpg?s=128&g=1", "display_name": "xetra11", "link": "https://stackoverflow.com/users/5967828/xetra11"}, "edited": false, "score": 0, "creation_date": 1457007321, "post_id": 35766076, "comment_id": 59215116, "body": "Ok I think i got it now. A mut ref is never copied because if it would be - two workers could mutate its state. An immu ref will copy the reference to the underlying data so many workers can read them but because of immutability never change them."}], "tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": true, "score": 16, "last_activity_date": 1541342931, "last_edit_date": 1541342931, "creation_date": 1456991194, "answer_id": 35766076, "question_id": 35765440, "link": "https://stackoverflow.com/questions/35765440/what-are-the-options-to-end-a-mutable-borrow-in-rust/35766076#35766076", "title": "What are the options to end a mutable borrow in Rust?", "body": "<p>There is no other way; using blocks is <em>the</em> way to do it. Before Rust 2018 (available in Rust 1.31) all borrows are lexical, that is, they always correspond to some lexical scope. The only scope which is larger than a single statement is that of a block, so blocks are your only tool to limit borrow scopes.</p>\n\n<p><code>drop()</code> would not work for two reasons: first, because it would require non-lexical scope which is not supported before Rust 2018, and second, it cannot be a general-purpose tool for managing borrows: for example, it wouldn't be able to end an <em>immutable</em> borrow simply because immutable references are <code>Copy</code> and can't be \"dropped\".</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/43428894/155423\">Moved variable still borrowing after calling `drop`?</a></li>\n<li><a href=\"https://stackoverflow.com/q/50251487/155423\">What are non-lexical lifetimes?</a></li>\n</ul>\n"}], "owner": {"reputation": 4354, "user_id": 5967828, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/fJ7P2.jpg?s=128&g=1", "display_name": "xetra11", "link": "https://stackoverflow.com/users/5967828/xetra11"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3680, "favorite_count": 0, "accepted_answer_id": 35766076, "answer_count": 1, "score": 7, "last_activity_date": 1553203710, "creation_date": 1456989143, "last_edit_date": 1553203710, "question_id": 35765440, "link": "https://stackoverflow.com/questions/35765440/what-are-the-options-to-end-a-mutable-borrow-in-rust", "title": "What are the options to end a mutable borrow in Rust?", "body": "<p>I'm strugglin' with the borrow checker - wonder o' wonder.</p>\n\n<p>While I found a solution by adding a block, I am curious if there are other ways to end a mutable borrow so the next statement can access a binding afterwards.</p>\n\n<p>Here's what I did so far:</p>\n\n<pre><code>let mut canvas: Canvas = Canvas {\n    width: 5,\n    height: 5,\n    array: vec!['x'; 5*5],\n};\n\n{\n    let mut renderer: CanvasRenderer = CanvasRenderer::new(&amp;mut canvas);\n\n    renderer.render_point('x', 3, 3);\n}\n\nprintln!(\"The Value in the array is: {}\", canvas.array[9]);\n</code></pre>\n\n<p>I wrap a block around the binding of a <code>CanvasRenderer</code> object and after mutating the canvas and the scope ends, the <code>CanvasRenderer</code> dies and my mutable borrowed <code>canvas</code> is available to be read or whatever.</p>\n\n<p>This works - but now I'd like to see other solutions!</p>\n\n<p>I heard about <code>drop(stuff)</code> but it did not work as I thought it should.</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 11927, "user_id": 2301531, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/0e05b25685a72ab6268dce396da1b76f?s=128&d=identicon&r=PG", "display_name": "A.B.", "link": "https://stackoverflow.com/users/2301531/a-b"}, "is_accepted": true, "score": 5, "last_activity_date": 1456992000, "creation_date": 1456992000, "answer_id": 35766340, "question_id": 35765248, "link": "https://stackoverflow.com/questions/35765248/function-to-read-and-parse-string-into-iterator-in-rust/35766340#35766340", "title": "Function to read and parse string into Iterator in Rust", "body": "<p>Iterators are lazy. This means the data they are operating on needs to exist as long as the iterator itself, but <code>buf</code> ceases to exist when the function returns. If we keep <code>buf</code> around for longer it can work though.</p>\n\n<p>Writing functions that return complex iterators is tricky at the moment, but it's possible:</p>\n\n<pre><code>use std::io;\nuse std::iter::{Iterator, Map};\nuse std::str::SplitWhitespace;\n\nfn read_and_iter_u32_line(buf: &amp;mut String) -&gt; Map&lt;SplitWhitespace, fn(&amp;str) -&gt; u32&gt; {\n    buf.truncate(0);\n    io::stdin().read_line(buf).unwrap();\n    buf.split_whitespace().map(parse)\n}\n\nfn parse(s: &amp;str) -&gt; u32 {\n    s.parse::&lt;u32&gt;().unwrap()\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 3, "last_activity_date": 1456992465, "creation_date": 1456992465, "answer_id": 35766490, "question_id": 35765248, "link": "https://stackoverflow.com/questions/35765248/function-to-read-and-parse-string-into-iterator-in-rust/35766490#35766490", "title": "Function to read and parse string into Iterator in Rust", "body": "<p>Iterators are lazy, therefore they must borrow their input:</p>\n\n<ul>\n<li>this requires that their input lives longer than they do</li>\n<li>this requires, for safety reason, that the borrowing relationship be exposed at function boundaries</li>\n</ul>\n\n<p>The former point requires that the <code>buf</code> be passed as a reference and not a value.</p>\n\n<p>The latter point prevents you from returning a generic <code>Iterator&lt;Item=u32&gt;</code> (even boxed) because it hides the borrowing relationship between the returned iterator and the passed in buffer. So instead you must be explicit:</p>\n\n<pre><code>use std::io;\n\nfn read_and_iter_u32_line&lt;'a&gt;(buf: &amp;'a mut String)\n    -&gt; std::iter::Map&lt;std::str::SplitWhitespace&lt;'a&gt;, fn(&amp;'a str) -&gt; u32&gt;\n{\n    fn convert(s: &amp;str) -&gt; u32 { s.parse().unwrap() }\n\n    buf.truncate(0);\n    io::stdin().read_line(buf).unwrap();\n\n    buf.split_whitespace().map(convert)\n}\n\nfn main() {\n    let mut buf = \"\".to_string();\n    for i in read_and_iter_u32_line(&amp;mut buf) {\n        println!(\"{}\", i);\n    }\n}\n</code></pre>\n\n<p><em>Note: actually, the lifetime annotation can be elided, but I have exposed it here to highlight why the generic iterator is not possible.</em></p>\n"}], "owner": {"reputation": 4372, "user_id": 274205, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/d8b4499ee7677412f4e1bbc0852e0f8b?s=128&d=identicon&r=PG", "display_name": "Timofey Gorshkov", "link": "https://stackoverflow.com/users/274205/timofey-gorshkov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 804, "favorite_count": 0, "accepted_answer_id": 35766340, "answer_count": 2, "score": 2, "last_activity_date": 1456992465, "creation_date": 1456988490, "question_id": 35765248, "link": "https://stackoverflow.com/questions/35765248/function-to-read-and-parse-string-into-iterator-in-rust", "title": "Function to read and parse string into Iterator in Rust", "body": "<p>Is there a way to write a function that will look like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn read_and_iter_u32_line&lt;'a&gt;(mut buf: String) -&gt; Iterator&lt;Item=u32&gt; {\n    buf.truncate(0);\n    io::stdin().read_line(&amp;mut buf).unwrap();\n    buf.split_whitespace()\n        .map(|s| s.parse::&lt;u32&gt;().unwrap())\n}\n</code></pre>\n"}]