[{"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1507136986, "post_id": 46569399, "comment_id": 80094567, "body": "You join two futures with... <a href=\"https://docs.rs/futures/0.1.16/futures/future/trait.Future.html#method.join\" rel=\"nofollow noreferrer\"><code>Future::join</code></a>. Just like the code that you have commented out."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 4, "creation_date": 1507137301, "post_id": 46569399, "comment_id": 80094720, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>, emphasis on <b>minimal</b>. For example, why is <code>serde_json</code> present but not used? Where is the <b>error message</b> that you are getting? You&#39;ve already asked essentially this question and <a href=\"https://stackoverflow.com/a/46555236/155423\">received an answer</a>, so you are expected to go above and beyond to make <i>this question</i> distinct. Commenting out either <code>reader</code> or <code>writer</code> from that answer and returning the other one works."}, {"owner": {"reputation": 6262, "user_id": 691032, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/04fa8b0cca5a7dfef2d281be67a2b7a2?s=128&d=identicon&r=PG", "display_name": "sinan", "link": "https://stackoverflow.com/users/691032/sinan"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1507138556, "post_id": 46569399, "comment_id": 80095397, "body": "@Shepmaster sorry, forgot to mention that the code works unless I enable the commented-out code. Updated the question."}, {"owner": {"reputation": 6262, "user_id": 691032, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/04fa8b0cca5a7dfef2d281be67a2b7a2?s=128&d=identicon&r=PG", "display_name": "sinan", "link": "https://stackoverflow.com/users/691032/sinan"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1507138601, "post_id": 46569399, "comment_id": 80095428, "body": "@Shepmaster<code>Future::join</code> raises crazy errors, and that&#39;s my question. How do I make that work?"}, {"owner": {"reputation": 6262, "user_id": 691032, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/04fa8b0cca5a7dfef2d281be67a2b7a2?s=128&d=identicon&r=PG", "display_name": "sinan", "link": "https://stackoverflow.com/users/691032/sinan"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1507138942, "post_id": 46569399, "comment_id": 80095615, "body": "@Shepmaster made the example somewhat smaller."}], "answers": [{"tags": [], "owner": {"reputation": 6262, "user_id": 691032, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/04fa8b0cca5a7dfef2d281be67a2b7a2?s=128&d=identicon&r=PG", "display_name": "sinan", "link": "https://stackoverflow.com/users/691032/sinan"}, "is_accepted": true, "score": 3, "last_activity_date": 1507180451, "creation_date": 1507180451, "answer_id": 46578292, "question_id": 46569399, "link": "https://stackoverflow.com/questions/46569399/rust-futures-join-two-futures-together/46578292#46578292", "title": "Rust futures -- join two futures together", "body": "<p>I needed two <code>map_err</code> calls, one for mapping websocket errors from <code>stream</code>, one for mapping sender errors from <code>send</code>:</p>\n\n<pre><code>pub fn main(recv: Receiver&lt;String&gt;, send: Sender&lt;websocket::OwnedMessage&gt;) -&gt; Box&lt;FnBox() -&gt; () + Send&gt; {\n    Box::new(move || {\n        let mut core = Core::new().unwrap();\n        let handle = core.handle();\n\n        let f = ClientBuilder::new(\"wss://...\")\n            .unwrap()\n            .async_connect(None, &amp;handle)\n            .from_err::&lt;Error&gt;()\n            .map(|(duplex, _)| duplex.split())\n            .and_then(|(sink, stream): (SplitSink&lt;_&gt;, SplitStream&lt;_&gt;)| {\n\n                let writer: Map&lt;SendAll&lt;SinkFromErr&lt;SplitSink&lt;_&gt;, _&gt;, _&gt;, _&gt; =\n                    sink\n                    .sink_from_err()\n                    .send_all(recv.map(websocket::OwnedMessage::Text).map_err(Error::Receiver))\n                    .map(|_| ());\n\n                let reader =\n                    stream\n                    .map_err(Error::WebSocket)\n                    .forward(send.sink_map_err(Error::Sender));\n\n                reader.join(writer)\n            });\n\n        core.run(f).expect(\"Unable to run\");\n    })\n}\n</code></pre>\n"}], "owner": {"reputation": 6262, "user_id": 691032, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/04fa8b0cca5a7dfef2d281be67a2b7a2?s=128&d=identicon&r=PG", "display_name": "sinan", "link": "https://stackoverflow.com/users/691032/sinan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1399, "favorite_count": 0, "accepted_answer_id": 46578292, "answer_count": 1, "score": -1, "last_activity_date": 1507180451, "creation_date": 1507133102, "last_edit_date": 1507138897, "question_id": 46569399, "link": "https://stackoverflow.com/questions/46569399/rust-futures-join-two-futures-together", "title": "Rust futures -- join two futures together", "body": "<p>I have this code</p>\n\n<pre><code>use futures::Map;\nuse futures::sink::SendAll;\nuse futures::sink::SinkFromErr;\nuse futures::stream::Forward;\nuse futures::sync::mpsc::Receiver;\nuse futures::sync::mpsc::Sender;\nuse futures::{Future, Stream, Sink};\nuse std::boxed::FnBox;\nuse tokio_core::reactor::Core;\nuse websocket::async::futures::stream::SplitSink;\nuse websocket::async::futures::stream::SplitStream;\nuse websocket::ClientBuilder;\nuse websocket;\n\npub fn main(recv: Receiver&lt;String&gt;, send: Sender&lt;websocket::OwnedMessage&gt;) -&gt; Box&lt;FnBox() -&gt; () + Send&gt; {\n    Box::new(move || {\n        let mut core = Core::new().unwrap();\n        let handle = core.handle();\n\n        let f = ClientBuilder::new(\"wss://...\")\n            .unwrap()\n            .async_connect(None, &amp;handle)\n            .from_err::&lt;Error&gt;()\n            .map(|(duplex, _)| duplex.split())\n            .and_then(|(sink, stream): (SplitSink&lt;_&gt;, SplitStream&lt;_&gt;)| {\n\n                let writer: Map&lt;SendAll&lt;SinkFromErr&lt;SplitSink&lt;_&gt;, _&gt;, _&gt;, _&gt; =\n                    sink\n                    .sink_from_err()\n                    .send_all(recv.map(websocket::OwnedMessage::Text).map_err(Error::Receiver))\n                    .map(|_| ());\n\n                // Trying to uncomment these lines:\n                // let reader =\n                //     stream\n                //     .forward(send);\n                //\n                // reader.join(writer)\n\n                // Comment this out:\n                writer\n            });\n\n        core.run(f).expect(\"Unable to run\");\n    })\n}\n\nquick_error! {\n    #[derive(Debug)]\n    pub enum Error {\n        WebSocket(err: websocket::WebSocketError) {\n            from()\n            description(\"websocket error\")\n            display(\"WebSocket error: {}\", err)\n            cause(err)\n        }\n        Receiver(err: ()) {\n            description(\"receiver error\")\n            display(\"Receiver error\")\n        }\n    }\n}\n</code></pre>\n\n<p>I added some type annotation for clarity. This version compiles, but I want another future, that reads from the stream (<code>stream</code>) and writes to <code>send</code>. I can't make it compile and I type errors are completely incomprehensible. So my questions are:</p>\n\n<ol>\n<li>How do I make the <code>forward()</code> call compile? (try to enable the commented-out code)</li>\n<li>How did you come up with the code that makes this compile? In my experience, futures-heavy code is impossible to write and understand because types are too complex and type errors are incomprehensible.</li>\n</ol>\n"}, {"tags": ["ios", "rust", "static-linking"], "comments": [{"owner": {"reputation": 322, "user_id": 1591873, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a4cf94f099b647d51cead0c3ce890e12?s=128&d=identicon&r=PG", "display_name": "Mikola", "link": "https://stackoverflow.com/users/1591873/mikola"}, "edited": false, "score": 0, "creation_date": 1507211743, "post_id": 46568656, "comment_id": 80128068, "body": "You could try compiling both dependencies into a single .a library with just rust first, and then integrating the resulting .a into your project."}, {"owner": {"reputation": 15722, "user_id": 284318, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/1e0588e345236881aff23040eb1d5dc3?s=128&d=identicon&r=PG", "display_name": "Danilo Bargen", "link": "https://stackoverflow.com/users/284318/danilo-bargen"}, "reply_to_user": {"reputation": 322, "user_id": 1591873, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a4cf94f099b647d51cead0c3ce890e12?s=128&d=identicon&r=PG", "display_name": "Mikola", "link": "https://stackoverflow.com/users/1591873/mikola"}, "edited": false, "score": 1, "creation_date": 1507212212, "post_id": 46568656, "comment_id": 80128385, "body": "Sure, that would work in my case, but it can&#39;t be a good solution in the general case if you integrate third party libraries."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1507468349, "post_id": 46631270, "comment_id": 80212329, "body": "<i>the prevalent theory</i>; <i>it has been suggested</i>. Does this actually work? Have you tried it?"}, {"owner": {"reputation": 166, "user_id": 3656109, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/456e9cd7dd8028bdcd5214ae41f12dd2?s=128&d=identicon&r=PG&f=1", "display_name": "vaz", "link": "https://stackoverflow.com/users/3656109/vaz"}, "edited": false, "score": 0, "creation_date": 1579801388, "post_id": 46631270, "comment_id": 105897521, "body": "I confirm this solved my problem. Just <code>lto = false</code> in <code>Cargo.toml</code>"}], "tags": [], "owner": {"reputation": 435, "user_id": 6517909, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/542422dbe372e54be780ad815e253206?s=128&d=identicon&r=PG&f=1", "display_name": "Doe", "link": "https://stackoverflow.com/users/6517909/doe"}, "is_accepted": false, "score": 1, "last_activity_date": 1507466943, "creation_date": 1507466943, "answer_id": 46631270, "question_id": 46568656, "link": "https://stackoverflow.com/questions/46568656/adding-multiple-static-rust-libraries-in-an-ios-app/46631270#46631270", "title": "Adding multiple static Rust libraries in an iOS app", "body": "<p>At the time of this posting, the prevalent theory is that this issue occurs when Link-Time Optimization (LTO) is enabled and is caused by a bug in the static libraries that rustc produces <a href=\"https://github.com/rust-lang/rust/issues/44322#issuecomment-330059725\" rel=\"nofollow noreferrer\">(link)</a>.</p>\n\n<p>As a temporary measure, it has been suggested that LTO should not be enabled until this issue has been resolved.</p>\n"}], "owner": {"reputation": 15722, "user_id": 284318, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/1e0588e345236881aff23040eb1d5dc3?s=128&d=identicon&r=PG", "display_name": "Danilo Bargen", "link": "https://stackoverflow.com/users/284318/danilo-bargen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 191, "favorite_count": 2, "answer_count": 1, "score": 6, "last_activity_date": 1507466943, "creation_date": 1507130944, "last_edit_date": 1507212619, "question_id": 46568656, "link": "https://stackoverflow.com/questions/46568656/adding-multiple-static-rust-libraries-in-an-ios-app", "title": "Adding multiple static Rust libraries in an iOS app", "body": "<p>I have two libraries (with C compatible interface) written in Rust that I'm trying to integrate into an iOS app.</p>\n\n<p>When integrating the two .a files in the same project, I get errors because symbols from the Rust standard library are now present multiple times:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>duplicate symbol _rust_eh_personality in:\n    /Users/x/Development/ios-client/Y/Rust/lib1_ffi.a(lib1_ffi.0.o)\n    /Users/x/Development/ios-client/Y/Rust/lib2_ffi.a(lib2_ffi.0.o)\n...\n</code></pre>\n\n<p>How can this be solved? Could the Rust symbols be extracted into a separate library? Or can the symbols be namespaced?</p>\n"}, {"tags": ["intellij-idea", "rust"], "answers": [{"comments": [{"owner": {"reputation": 463, "user_id": 2219819, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/29fb541b25e63a53c6a8c2299c517b5a?s=128&d=identicon&r=PG", "display_name": "Hoeze", "link": "https://stackoverflow.com/users/2219819/hoeze"}, "edited": false, "score": 0, "creation_date": 1507133810, "post_id": 46567537, "comment_id": 80092927, "body": "OK, after moving the file from &quot;src&quot; to &quot;examples&quot; I got such an arrow. Thank you for pushing me in the right direction :)"}, {"owner": {"reputation": 593, "user_id": 5858426, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Q6XuU.jpg?s=128&g=1", "display_name": "InternetUnexplorer", "link": "https://stackoverflow.com/users/5858426/internetunexplorer"}, "reply_to_user": {"reputation": 463, "user_id": 2219819, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/29fb541b25e63a53c6a8c2299c517b5a?s=128&d=identicon&r=PG", "display_name": "Hoeze", "link": "https://stackoverflow.com/users/2219819/hoeze"}, "edited": false, "score": 2, "creation_date": 1507134748, "post_id": 46567537, "comment_id": 80093427, "body": "@Hoeze If my answer solved your problem, please mark it as accepted. Otherwise, please let me know what problem you are having so I can revise my answer."}], "tags": [], "owner": {"reputation": 593, "user_id": 5858426, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Q6XuU.jpg?s=128&g=1", "display_name": "InternetUnexplorer", "link": "https://stackoverflow.com/users/5858426/internetunexplorer"}, "is_accepted": true, "score": 2, "last_activity_date": 1507129471, "last_edit_date": 1507129471, "creation_date": 1507127546, "answer_id": 46567537, "question_id": 46566648, "link": "https://stackoverflow.com/questions/46566648/how-do-i-run-my-main-function-when-using-the-rust-intellij-plugin/46567537#46567537", "title": "How do I run my main function when using the Rust IntelliJ plugin?", "body": "<p>I see two reasons why you might be unable to run your program:</p>\n\n<p><strong>The name of the file you are trying to run:</strong></p>\n\n<p>Cargo looks for a <code>lib.rs</code> or <code>main.rs</code> (for binary projects) in your <code>src/</code> directory when building your project.</p>\n\n<p>If you want to build using Cargo, you should rename your <code>Main2.rs</code> to <code>main.rs</code> and make sure that it is in your <code>src/</code> directory (and that there is no <code>lib.rs</code> there).</p>\n\n<p><strong>You have no run configurations:</strong></p>\n\n<p>If your file is named <code>main.rs</code>/<code>lib.rs</code>, you should see a green arrow next to your <code>fn main()</code>. Clicking this will automatically add a new run configuration and run your program.</p>\n\n<p>You can also manually add a run configuration by clicking on the dropdown menu next to 'Build' on your toolbar and selecting 'Edit Configurations...'.</p>\n\n<p>More information on creating and editing run configurations is available <a href=\"https://www.jetbrains.com/help/idea/creating-and-editing-run-debug-configurations.html\" rel=\"nofollow noreferrer\">here</a>.</p>\n"}], "owner": {"reputation": 463, "user_id": 2219819, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/29fb541b25e63a53c6a8c2299c517b5a?s=128&d=identicon&r=PG", "display_name": "Hoeze", "link": "https://stackoverflow.com/users/2219819/hoeze"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 601, "favorite_count": 0, "accepted_answer_id": 46567537, "answer_count": 1, "score": 1, "last_activity_date": 1507129471, "creation_date": 1507125055, "last_edit_date": 1507125334, "question_id": 46566648, "link": "https://stackoverflow.com/questions/46566648/how-do-i-run-my-main-function-when-using-the-rust-intellij-plugin", "title": "How do I run my main function when using the Rust IntelliJ plugin?", "body": "<p>I'm coming from Eclipse + Java, so I'm used to writing a <code>main</code> function inside some class file if I'd like to quick-and-dirty test something.\nIn Eclipse I can simply click the \"run\" button or hit <kbd>ctrl</kbd>+<kbd>F11</kbd> to launch my <code>main</code> function.</p>\n\n<p>I'd like to do the same thing in Rust + IntelliJ. I've created a new file \"Main2.rs\" and pasted a hello world sample into it:</p>\n\n<p><a href=\"https://i.stack.imgur.com/5P71c.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/5P71c.png\" alt=\"IntelliJ + Rust sample; run button is disabled\"></a></p>\n\n<p>I hit the compile button and voila - <strong>the run button stays disabled?!?</strong></p>\n\n<p><code>rustc \"Main2.rs\" &amp;&amp; ./Main2</code> works of course, but how can I get IntelliJ to execute that simple \"Hello World\" by pressing the \"run\" button?</p>\n"}, {"tags": ["c++", "pointers", "casting", "bluetooth", "rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 2, "creation_date": 1507112002, "post_id": 46562030, "comment_id": 80078063, "body": "1) Can you show us what you have tried so far? I don&#39;t see any Rust code in there. 2) Requesting such examples is off-topic for Stack Overflow."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1507112406, "post_id": 46562030, "comment_id": 80078334, "body": "What you say <i>&quot;How do I replicate <code>(struct sockaddr *) &amp;SockAddrBthServer</code> in rust?&quot;</i> do you mean how to create a similar structure, or how to create something with identical representation in memory?"}, {"owner": {"reputation": 227, "user_id": 984112, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fe3f6fa43950367839a04b96aea3044e?s=128&d=identicon&r=PG", "display_name": "Tom Gangemi", "link": "https://stackoverflow.com/users/984112/tom-gangemi"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1507112725, "post_id": 46562030, "comment_id": 80078528, "body": "@E_net4, I tried using transmute like so:  <code>mem::transmute::&lt;SOCKADDR_BTH, ws2def::SOCKADDR&gt;(bt_sock_addr)</code> but transmute does not allow different size structs.  @PeterHall, the rust version of the connection function (as defined in ws2_32) accepts a <code>*const SOCKADDR</code> which I assume works like the C++ version. Which I take to mean it needs the data from the <code>SOCKADDR_BTH</code> but typecast as <code>SOCKADDR</code>."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1507113183, "post_id": 46562030, "comment_id": 80078811, "body": "Don&#39;t try to truncate. Instead write an explicit conversion function from the larger struct to the smaller one."}, {"owner": {"reputation": 227, "user_id": 984112, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fe3f6fa43950367839a04b96aea3044e?s=128&d=identicon&r=PG", "display_name": "Tom Gangemi", "link": "https://stackoverflow.com/users/984112/tom-gangemi"}, "edited": false, "score": 0, "creation_date": 1507115158, "post_id": 46562030, "comment_id": 80080000, "body": "I think I&#39;m starting to understand the issue now. I think the connect function is not really respecting the type and instead using a combination of the <code>family</code> short and the third parameter to decide how to interpret the pointer. I&#39;m guessing I&#39;ll have to write my own FFI code to make this work."}], "answers": [{"comments": [{"owner": {"reputation": 227, "user_id": 984112, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fe3f6fa43950367839a04b96aea3044e?s=128&d=identicon&r=PG", "display_name": "Tom Gangemi", "link": "https://stackoverflow.com/users/984112/tom-gangemi"}, "edited": false, "score": 1, "creation_date": 1507130861, "post_id": 46565194, "comment_id": 80090980, "body": "Thanks, that did it. My understanding of Rust pointers was all wrong. Also, for the sake of others who come across this - I had to add the <code>repr(packed)</code> attribute to my SOCKADDR_BTH struct otherwise it was 40 bytes instead of the expected 30."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 227, "user_id": 984112, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fe3f6fa43950367839a04b96aea3044e?s=128&d=identicon&r=PG", "display_name": "Tom Gangemi", "link": "https://stackoverflow.com/users/984112/tom-gangemi"}, "edited": false, "score": 1, "creation_date": 1507131428, "post_id": 46565194, "comment_id": 80091348, "body": "@TomGangemi I&#39;d encourage you to find the <code>SOCKADDR_BTH </code> struct in the appropriate Windows crate or to submit a PR to one to add it. Maintaining your own representation of it is fraught with peril."}, {"owner": {"reputation": 227, "user_id": 984112, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fe3f6fa43950367839a04b96aea3044e?s=128&d=identicon&r=PG", "display_name": "Tom Gangemi", "link": "https://stackoverflow.com/users/984112/tom-gangemi"}, "edited": false, "score": 1, "creation_date": 1507132611, "post_id": 46565194, "comment_id": 80092180, "body": "@Sheepmaster, I figured that would be the proper way to do things but was just focused on getting the code working for now."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1507120996, "creation_date": 1507120996, "answer_id": 46565194, "question_id": 46562030, "link": "https://stackoverflow.com/questions/46562030/how-do-i-replicate-a-c-cast-of-windows-sockaddr-bth-to-a-sockaddr-in-rust/46565194#46565194", "title": "How do I replicate a C++ cast of Windows SOCKADDR_BTH to a SOCKADDR in Rust?", "body": "<p>You are overthinking the problem. If Windows says it's cool to cast a <code>SOCKADDR_BTH</code> pointer to a <code>SOCKADDR</code> pointer, then just do that. In Rust, you have to add one extra cast to leave the safe world of references and get to a raw pointer, then you can cast that to whatever you want:</p>\n\n<pre><code>use std::mem;\n\nstruct SomeErrorType;\n\nfn example(LocalSocket: SOCKET) -&gt; Result&lt;SOCKADDR_BTH, SomeErrorType&gt; {\n    unsafe {\n        let SockAddrBthServer: SOCKADDR_BTH = mem::uninitialized();\n        let retval = connect(\n            LocalSocket,\n            &amp;SockAddrBthServer as *const SOCKADDR_BTH as *const SOCKADDR,\n            mem::size_of::&lt;SOCKADDR_BTH&gt;() as i32,\n        );\n        // PERFORM REAL ERROR CHECKING HERE\n        if retval == 42 {\n            Ok(SockAddrBthServer)\n        } else {\n            Err(SomeErrorType)\n        }\n    }\n}\n</code></pre>\n\n<p>(Untested because I don't have a Windows machine handy)</p>\n\n<p>Under the hood, this will only work as long as the initial members of <code>SOCKADDR_BTH</code> exactly match the members of <code>SOCKADDR</code>. </p>\n"}], "owner": {"reputation": 227, "user_id": 984112, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fe3f6fa43950367839a04b96aea3044e?s=128&d=identicon&r=PG", "display_name": "Tom Gangemi", "link": "https://stackoverflow.com/users/984112/tom-gangemi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 473, "favorite_count": 2, "accepted_answer_id": 46565194, "answer_count": 1, "score": 3, "last_activity_date": 1507120996, "creation_date": 1507111134, "last_edit_date": 1507120413, "question_id": 46562030, "link": "https://stackoverflow.com/questions/46562030/how-do-i-replicate-a-c-cast-of-windows-sockaddr-bth-to-a-sockaddr-in-rust", "title": "How do I replicate a C++ cast of Windows SOCKADDR_BTH to a SOCKADDR in Rust?", "body": "<p>I am writing a Bluetooth utility on Windows in Rust, using winsock2 (but happy to use any other libraries) and have hit a roadblock. The following C++ sample from the <a href=\"https://code.msdn.microsoft.com/windowsdesktop/Bluetooth-Connection-e3263296/sourcecode?fileId=42913&amp;pathId=2083610005\" rel=\"nofollow noreferrer\">Windows Bluetooth Connection Sample</a> is what I am using as a reference:.</p>\n\n<pre><code>SOCKADDR_BTH SockAddrBthServer;\n# code to set SockAddrBthServer vals in here \nconnect(LocalSocket, (struct sockaddr *) &amp;SockAddrBthServer, sizeof(SOCKADDR_BTH));\n</code></pre>\n\n<p>The structs are defined like so:</p>\n\n<pre><code>typedef struct _SOCKADDR_BTH\n{\n    USHORT      addressFamily;  // Always AF_BTH\n    BTH_ADDR    btAddr;         // Bluetooth device address\n    GUID        serviceClassId; // [OPTIONAL] system will query SDP for port\n    ULONG       port;           // RFCOMM channel or L2CAP PSM\n} SOCKADDR_BTH, *PSOCKADDR_BTH;\n\n\ntypedef struct sockaddr {\n\n#if (_WIN32_WINNT &lt; 0x0600)\n    u_short sa_family;\n#else\n    ADDRESS_FAMILY sa_family;           // Address family.\n#endif //(_WIN32_WINNT &lt; 0x0600)\n\n    CHAR sa_data[14];                   // Up to 14 bytes of direct address.\n} SOCKADDR, *PSOCKADDR, FAR *LPSOCKADDR;\n</code></pre>\n\n<p>How do I replicate the <code>(struct sockaddr *) &amp;SockAddrBthServer</code> cast from the connect line above in Rust? So far, I'm making use of the winapi, user32 and ws2_32 crates.</p>\n\n<p>Here is the Rust version of the <a href=\"https://retep998.github.io/doc/ws2_32/fn.connect.html\" rel=\"nofollow noreferrer\"><code>connect</code> function from the ws2_32 crate</a>.</p>\n\n<pre><code>pub unsafe extern \"system\" fn connect(s: SOCKET, name: *const SOCKADDR, namelen: c_int) -&gt; c_int\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "is_accepted": true, "score": 3, "last_activity_date": 1507121337, "last_edit_date": 1507121337, "creation_date": 1507105111, "answer_id": 46560144, "question_id": 46559186, "link": "https://stackoverflow.com/questions/46559186/what-is-the-difference-between-these-two-linked-list-implementations/46560144#46560144", "title": "What is the difference between these two linked list implementations?", "body": "<p>The second layout is actually either</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[More(ptr)] -&gt; (Elem A, More(ptr)) -&gt; (Elem B, Empty)\n</code></pre>\n\n<p>or</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[Elem A, More(ptr)] -&gt; (Elem B, Empty)\n</code></pre>\n\n<p>There are no heap allocations for empty elements.</p>\n"}, {"tags": [], "owner": {"reputation": 304245, "user_id": 216074, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/609c93bafd659500f83fde04802a9be5?s=128&d=identicon&r=PG", "display_name": "poke", "link": "https://stackoverflow.com/users/216074/poke"}, "is_accepted": false, "score": 5, "last_activity_date": 1507108931, "last_edit_date": 1507108931, "creation_date": 1507106271, "answer_id": 46560473, "question_id": 46559186, "link": "https://stackoverflow.com/questions/46559186/what-is-the-difference-between-these-two-linked-list-implementations/46560473#46560473", "title": "What is the difference between these two linked list implementations?", "body": "<p>Since this example is taken from that <a href=\"http://cglab.ca/~abeinges/blah/too-many-lists/book/\" rel=\"nofollow noreferrer\">\u201cLearning Rust With Entirely Too Many Linked Lists\u201d book</a>, I\u2019ll just quote <a href=\"http://cglab.ca/~abeinges/blah/too-many-lists/book/first-layout.html\" rel=\"nofollow noreferrer\">the explanations from there</a>:</p>\n\n<blockquote>\n<pre><code>[Elem A, ptr] -&gt; (Elem B, ptr) -&gt; (Empty *junk*)\n</code></pre>\n  \n  <p>There are two key issues:</p>\n  \n  <ul>\n  <li>We're allocating a node that just says \"I'm not actually a Node\"</li>\n  <li>One of our nodes isn't allocated at all.</li>\n  </ul>\n  \n  <p>On the surface, these two seem to cancel each-other out. We allocate an extra node, but one of our nodes doesn't need to be allocated at all. However, consider the following potential layout for our list:</p>\n\n<pre><code>[ptr] -&gt; (Elem A, ptr) -&gt; (Elem B, *null*)\n</code></pre>\n  \n  <p>In this layout we now unconditionally heap allocate our nodes. The key difference is the absence of the <em>junk</em> from our first layout.</p>\n  \n  <p>[\u2026]</p>\n  \n  <p>The big takeaway here is that even though <code>Empty</code> is a single bit of information, it necessarily consumes enough space for a pointer and an element, because it has to be ready to become an <code>Elem</code> at any time. Therefore the first layout heap allocates an extra element that's just full of junk, consuming a bit more space than the second layout.</p>\n  \n  <p>One of our nodes not being allocated at all is also, perhaps surprisingly, worse than always allocating it. This is because it gives us a <em>non-uniform</em> node layout. This doesn't have much of an appreciable effect on pushing and popping nodes, but it does have an effect on splitting and merging lists.</p>\n  \n  <p>[\u2026]</p>\n  \n  <p>One of the few nice things about a linked list is that you can construct the element in the node itself, and then freely shuffle it around lists without ever moving it. You just fiddle with pointers and stuff gets \"moved\". Layout 1 trashes this property.</p>\n</blockquote>\n\n<p>This is just some of the key points from there. I actually think the explanations given by the author of that book are really <em>excellent</em> in providing proper reasoning and the thinking process involved to move from the first iteration to the next.</p>\n\n<p>I\u2019d suggest you to <em>reread</em> the whole chapter and make sure you understand the points there. If you have explicit questions about individual statements, you can ask about them specifically.</p>\n"}], "owner": {"reputation": 1674, "user_id": 5420686, "user_type": "registered", "accept_rate": 49, "profile_image": "https://www.gravatar.com/avatar/2c318e16c4b5f17dd1375df8cb1425e5?s=128&d=identicon&r=PG&f=1", "display_name": "Jal", "link": "https://stackoverflow.com/users/5420686/jal"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 146, "favorite_count": 0, "accepted_answer_id": 46560144, "answer_count": 2, "score": 1, "last_activity_date": 1507121337, "creation_date": 1507101696, "last_edit_date": 1507121298, "question_id": 46559186, "link": "https://stackoverflow.com/questions/46559186/what-is-the-difference-between-these-two-linked-list-implementations", "title": "What is the difference between these two linked list implementations?", "body": "<p>Consider this implementation:</p>\n\n<pre><code>pub enum List {\n    Empty,\n    Elem(i32, Box&lt;List&gt;),\n}\n</code></pre>\n\n<p>The memory layout of a 2 element node is this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[] = Stack\n() = Heap\n\n[Elem A, ptr] -&gt; (Elem B, ptr) -&gt; (Empty *junk*)\n</code></pre>\n\n<p>Consider another linked list implementation:</p>\n\n<pre><code>struct Node {\n    elem: i32,\n    next: List,\n}\n\npub enum List {\n    Empty,\n    More(Box&lt;Node&gt;),\n}\n</code></pre>\n\n<p>The memory layout of a 2 element node is this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[ptr] -&gt; (Elem A, ptr) -&gt; (Elem B, ptr) -&gt; (Empty, *junk*)\n</code></pre>\n\n<p>The two memory layouts are very similar, and I don't really see how the second implementation is better than the first one, as <a href=\"http://cglab.ca/~abeinges/blah/too-many-lists/book/first-layout.html\" rel=\"nofollow noreferrer\">claimed by <em>Learning Rust With Entirely Too Many Linked Lists</em></a>.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 4048, "user_id": 2173516, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/P3SKn.png?s=128&g=1", "display_name": "Noel Widmer", "link": "https://stackoverflow.com/users/2173516/noel-widmer"}, "edited": false, "score": 0, "creation_date": 1576329752, "post_id": 46557737, "comment_id": 104868998, "body": "I understand that. But how does the compiler know if all-zeros is an invalid value? I assume the optimization only kicks in for specific built-in types. If so, which ones?"}, {"owner": {"reputation": 168655, "user_id": 582, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ev49G.png?s=128&g=1", "display_name": "Lily Ballard", "link": "https://stackoverflow.com/users/582/lily-ballard"}, "reply_to_user": {"reputation": 4048, "user_id": 2173516, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/P3SKn.png?s=128&g=1", "display_name": "Noel Widmer", "link": "https://stackoverflow.com/users/2173516/noel-widmer"}, "edited": false, "score": 5, "creation_date": 1576446158, "post_id": 46557737, "comment_id": 104892595, "body": "The compiler has built-in knowledge about the memory layout of various types. For example, it knows that <code>&amp;</code>-references can never be null. It also knows that <code>String</code> and <code>Vec</code> can never be all zeroes; following this down into the implementation, <code>String</code> is backed by <code>Vec</code>, which is backed by <code>RawVec</code>, which is backed by <code>Unique</code>, which contains a <code>*const T</code> but has a compiler attribute that declares that it can&#39;t be null. Similarly there&#39;s a stdlib <code>NonNull&lt;T&gt;</code> type that acts like a <code>*mut T</code> that can never be null."}, {"owner": {"reputation": 168655, "user_id": 582, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ev49G.png?s=128&g=1", "display_name": "Lily Ballard", "link": "https://stackoverflow.com/users/582/lily-ballard"}, "reply_to_user": {"reputation": 4048, "user_id": 2173516, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/P3SKn.png?s=128&g=1", "display_name": "Noel Widmer", "link": "https://stackoverflow.com/users/2173516/noel-widmer"}, "edited": false, "score": 4, "creation_date": 1576446225, "post_id": 46557737, "comment_id": 104892613, "body": "To elaborate, empty strings and vectors don&#39;t point to null, they point to a fixed nonnull address with zero capacity. Same thing with other containers like HashMaps that can be cheaply created. The Rust stdlib tries very hard to avoid nulls in pointers specifically so the all-zeroes value can be reserved for things like the null pointer optimization."}], "tags": [], "owner": {"reputation": 168655, "user_id": 582, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ev49G.png?s=128&g=1", "display_name": "Lily Ballard", "link": "https://stackoverflow.com/users/582/lily-ballard"}, "is_accepted": true, "score": 51, "last_activity_date": 1507095638, "creation_date": 1507095638, "answer_id": 46557737, "question_id": 46557608, "link": "https://stackoverflow.com/questions/46557608/what-is-the-null-pointer-optimization-in-rust/46557737#46557737", "title": "What is the null pointer optimization in Rust?", "body": "<p>The null pointer optimization basically means that if you have an enum with two variants, where one variant has no associated data, and the other variant has associated data where the bit pattern of all zeros isn't a valid value, then the enum itself will take exactly the same amount of space as that associated value, using the all zeroes bit pattern to indicate that it's the other variant.</p>\n\n<p>In other words, this means that <code>Option&lt;&amp;T&gt;</code> is exactly the same size as <code>&amp;T</code> instead of requiring an extra word.</p>\n"}, {"comments": [{"owner": {"reputation": 437, "user_id": 4284929, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5651b6aefc2999bd4a4ca28c3cd35e6d?s=128&d=identicon&r=PG&f=1", "display_name": "mvlabat", "link": "https://stackoverflow.com/users/4284929/mvlabat"}, "edited": false, "score": 10, "creation_date": 1572519978, "post_id": 46557739, "comment_id": 103589375, "body": "The second example seems to be a little bit inaccurate, taking into account that <code>0x00</code> is a valid bit pattern for an integer, thus it&#39;s ambiguous meaning both <code>Foo::A</code> and <code>Foo::B(0)</code>."}], "tags": [], "owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "is_accepted": false, "score": 18, "last_activity_date": 1507121795, "last_edit_date": 1507121795, "creation_date": 1507095644, "answer_id": 46557739, "question_id": 46557608, "link": "https://stackoverflow.com/questions/46557608/what-is-the-null-pointer-optimization-in-rust/46557739#46557739", "title": "What is the null pointer optimization in Rust?", "body": "<p><code>enum</code> is a tagged union. Without optimization it looks like</p>\n\n<pre><code>Foo::A;    // tag 0x00 data 0xXX\nFoo::B(2); // tag 0x01 data 0x02\n</code></pre>\n\n<p>The null pointer optimization removes the separate tag field.</p>\n\n<pre><code>Foo::A;    // tag+data 0x00\nFoo::B(2); // tag+data 0x02\n</code></pre>\n"}], "owner": {"reputation": 1674, "user_id": 5420686, "user_type": "registered", "accept_rate": 49, "profile_image": "https://www.gravatar.com/avatar/2c318e16c4b5f17dd1375df8cb1425e5?s=128&d=identicon&r=PG&f=1", "display_name": "Jal", "link": "https://stackoverflow.com/users/5420686/jal"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3189, "favorite_count": 4, "accepted_answer_id": 46557737, "answer_count": 2, "score": 34, "last_activity_date": 1507121795, "creation_date": 1507094977, "last_edit_date": 1507121762, "question_id": 46557608, "link": "https://stackoverflow.com/questions/46557608/what-is-the-null-pointer-optimization-in-rust", "title": "What is the null pointer optimization in Rust?", "body": "<p>In <a href=\"http://cglab.ca/~abeinges/blah/too-many-lists/book/first-layout.html\" rel=\"noreferrer\"><em>Learning Rust With Entirely Too Many Linked Lists</em></a>, the author mentions:</p>\n\n<blockquote>\n  <p>However, if we have a special kind of enum:</p>\n\n<pre><code>enum Foo {\n    A,\n    B(ContainsANonNullPtr),\n}\n</code></pre>\n  \n  <p>the null pointer optimization kicks in, which <em>eliminates the space needed for the tag</em>. If the variant is <code>A</code>, the whole enum is set to all <code>0</code>'s. Otherwise, the variant is <code>B</code>. This works because <code>B</code> can never be all <code>0</code>'s, since it contains a non-zero pointer. </p>\n</blockquote>\n\n<p>I guess that the author is saying that (assuming <code>A</code> is 4 bits, and <code>B</code> is 4 bits)</p>\n\n<pre><code>let test = Foo::A\n</code></pre>\n\n<p>the memory layout is </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>0000 0000\n</code></pre>\n\n<p>but</p>\n\n<pre><code>let test = Foo::B\n</code></pre>\n\n<p>the memory layout is </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>some 8 bit non 0 value\n</code></pre>\n\n<p>What exactly is optimized here? Aren't both representation always 8 bits What does it mean when the author claims</p>\n\n<blockquote>\n  <p>It means <code>&amp;</code>, <code>&amp;mut</code>, <code>Box</code>, <code>Rc</code>, <code>Arc</code>, <code>Vec</code>, and several other important types in Rust have no overhead when put in an <code>Option</code></p>\n</blockquote>\n"}, {"tags": ["rust", "closures"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 3, "creation_date": 1507047762, "post_id": 46549011, "comment_id": 80052579, "body": "In general, LLVM does a very good job at removing overhead of abstractions like that. But, if you aren&#39;t sure, usually the best thing to do is run some benchmarks!"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1507048232, "post_id": 46549011, "comment_id": 80052827, "body": "As far as the latest compiler can go, that specific example would compile to <code>println!(&quot;{}&quot;, 42)</code>. And if you <code>black_box</code> the input to <code>add7</code>, you get <code>println!(&quot;{}&quot;, 35 + 7)</code>. You might need a more complex example in order to find a place where overhead does happen. :)"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1507048379, "post_id": 46549011, "comment_id": 80052912, "body": "@E_net4 Please do not take this example literally. It was just a simplistic example of partial application."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1507048660, "post_id": 46549011, "comment_id": 80053069, "body": "Sure sure. On the other hand, we would like to know whether you have a less trivial use of partial application, and of course, whether you&#39;re thinking of an alternate implementation or a baseline (as in, something with the same capabilities but without closures for partial application)."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1507049104, "post_id": 46549011, "comment_id": 80053279, "body": "@E_net4 Edited."}, {"owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 0, "creation_date": 1507049597, "post_id": 46549011, "comment_id": 80053544, "body": "Your second example does nothing and gets optimized out by dead code elimination. Ultimately all optimizations (except specialization on the library level) depend on how far the compiler can see and how much it chooses to inline. Presence of trait objects (dynamic dispatch) can also hinder some optimizations."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 0, "creation_date": 1507049938, "post_id": 46549011, "comment_id": 80053753, "body": "@the8472 Let me correct my example."}], "answers": [{"tags": [], "owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "is_accepted": false, "score": 5, "last_activity_date": 1507050432, "creation_date": 1507050432, "answer_id": 46549888, "question_id": 46549011, "link": "https://stackoverflow.com/questions/46549011/does-partial-application-in-rust-have-overhead/46549888#46549888", "title": "Does partial application in Rust have overhead?", "body": "<p>In your particular example, yes, extend can get inlined as a loop, containing another loop for the <code>flat_map</code> which in turn just puts <code>ThingMultiplier</code> instances into the same stack slots holding <code>n</code> and <code>thing</code>.</p>\n\n<p>But you're barking up the wrong efficiency tree here. Instead of wondering whether an allocation of a small struct holding two fields gets optimized away you should rather wonder how efficient that <code>clone</code> is, especially for large inputs.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1507051921, "last_edit_date": 1507051921, "creation_date": 1507050452, "answer_id": 46549896, "question_id": 46549011, "link": "https://stackoverflow.com/questions/46549011/does-partial-application-in-rust-have-overhead/46549896#46549896", "title": "Does partial application in Rust have overhead?", "body": "<p>There should not be a <em>performance</em> difference between defining the closure before it's used versus defining and using it it directly. There is a type system difference \u2014 <a href=\"https://github.com/rust-lang/rust/issues/41078\" rel=\"noreferrer\">the compiler doesn't fully know how to infer types in a closure that isn't immediately called</a>.</p>\n\n<p>In code:</p>\n\n<pre><code>let create_new_multiplier = |thing| ThingMultiplier::new(thing, n);\nthings.clone().into_iter().flat_map(create_new_multiplier)\n</code></pre>\n\n<p>will be the exact same as</p>\n\n<pre><code>things.clone().into_iter().flat_map(|thing| { \n    ThingMultiplier::new(thing, n)\n})\n</code></pre>\n\n<hr>\n\n<p>In general, there should not be a performance cost for using closures. This is what Rust means by \"zero cost abstraction\": the programmer could not have written it better themselves.</p>\n\n<p>The compiler <a href=\"https://stackoverflow.com/q/30177395/155423\">converts a closure into implementations of the <code>Fn*</code> traits on an anonymous struct</a>. At that point, all the normal compiler optimizations kick in. Because of techniques like monomorphization, it may even be <em>faster</em>. This does mean that you need to do normal profiling to see if they are a bottleneck.</p>\n"}], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2040, "favorite_count": 1, "accepted_answer_id": 46549896, "answer_count": 2, "score": 4, "last_activity_date": 1507051921, "creation_date": 1507047008, "last_edit_date": 1507050064, "question_id": 46549011, "link": "https://stackoverflow.com/questions/46549011/does-partial-application-in-rust-have-overhead", "title": "Does partial application in Rust have overhead?", "body": "<p>I like using partial application, because it permits (among other things) to split a complicated function call, that is more readable.</p>\n\n<p>An example of partial application:</p>\n\n<pre><code>fn add(x: i32, y: i32) -&gt; i32 {\n    x + y\n}\n\nfn main() {\n    let add7 = |x| add(7, x);\n\n    println!(\"{}\", add7(35));\n}\n</code></pre>\n\n<p>Is there overhead to this practice?</p>\n\n<p>Here is the kind of thing I like to do (from a real code):</p>\n\n<pre><code>fn foo(n: u32, things: Vec&lt;Things&gt;) {\n    let create_new_multiplier = |thing| ThingMultiplier::new(thing, n); // ThingMultiplier is an Iterator\n    let new_things = things.clone().into_iter().flat_map(create_new_multiplier);\n\n    things.extend(new_things);\n}\n</code></pre>\n\n<p>This is purely visual. I do not like to imbricate too much the stuff.</p>\n"}, {"tags": ["vector", "syntax", "rust", "operator-overloading"], "answers": [{"comments": [{"owner": {"reputation": 195, "user_id": 7419679, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/201735092000ec70e4246c77437ae490?s=128&d=identicon&r=PG&f=1", "display_name": "omrisim210", "link": "https://stackoverflow.com/users/7419679/omrisim210"}, "edited": false, "score": 0, "creation_date": 1507041698, "post_id": 46546728, "comment_id": 80048684, "body": "Thanks a lot! You&#39;re right, since <code>libtcod</code> maps <code>0,0</code> to the top left corner of the screen (meaning you can&#39;t, or rather don&#39;t want to go below <code>0,0</code>) I should use <code>u32</code> instead if <code>i32</code>."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 6, "last_activity_date": 1507040446, "last_edit_date": 1507040446, "creation_date": 1507040057, "answer_id": 46546728, "question_id": 46546321, "link": "https://stackoverflow.com/questions/46546321/implementing-2d-vector-syntax-for-accessing-a-1d-vector/46546728#46546728", "title": "Implementing 2D vector syntax for accessing a 1D vector?", "body": "<p>Make your struct indexible over objects of type <code>(i32, i32)</code>.</p>\n\n<pre><code>type Pos = (i32, i32);\n\nimpl std::ops::Index&lt;Pos&gt; for Level {\n    type Output = Tile;\n    fn index(&amp;self, (x, y): Pos) -&gt; &amp;Self::Output {\n        &amp;self.map[(y * MAP_WIDTH + x) as usize]\n    }\n}\n</code></pre>\n\n<p>Which you can then access with, for example:</p>\n\n<pre><code>let tile = level[(3, 4)];\n</code></pre>\n\n<p>Since you are using <code>i32</code>, you need to make sure that the values are within range, and can be coerced to <code>usize</code>, which is what <code>Vec</code>s are indexed over. Probably you should just stick with <code>u32</code> or <code>usize</code> values from the start. Otherwise, you'll need to keep track of the minimum <code>x</code> and <code>y</code> values, and subtract them, to keep the position in range. It's definitely simpler to deal with positive coordinates and make the assumption that the corner of your map is <code>(0, 0)</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1507043419, "last_edit_date": 1507043419, "creation_date": 1507040059, "answer_id": 46546729, "question_id": 46546321, "link": "https://stackoverflow.com/questions/46546321/implementing-2d-vector-syntax-for-accessing-a-1d-vector/46546729#46546729", "title": "Implementing 2D vector syntax for accessing a 1D vector?", "body": "<p>You cannot do this without exposing internal details about your implementation. <code>Index</code> is defined as:</p>\n\n<pre><code>pub trait Index&lt;Idx&gt; \nwhere\n    Idx: ?Sized, \n{\n    type Output: ?Sized;\n    fn index(&amp;self, index: Idx) -&gt; &amp;Self::Output;\n}\n</code></pre>\n\n<p>In order to support <code>game[x][y]</code>, the return value of <code>game[x]</code> would need to:</p>\n\n<ol>\n<li>Be a reference to something. (<code>&amp;Self::Output</code>)</li>\n<li>Implement <code>Index</code> itself.</li>\n</ol>\n\n<p>There's no value to return a reference to other than <code>self</code>, and <code>self</code> would already implement <code>Index</code> for a <code>usize</code> so you can't reuse it.</p>\n\n<p>Instead, you can implement indexing for a tuple:</p>\n\n<pre><code>impl std::ops::Index&lt;(usize, usize)&gt; for Level {\n    type Output = Tile;\n    fn index(&amp;self, (x, y): (usize, usize)) -&gt; &amp;Self::Output {\n        &amp;self.map[MAP_WIDTH as usize * y + x]\n    }\n} \n</code></pre>\n\n<p>This can be used as <code>level[(43, 12)]</code>.</p>\n\n<hr>\n\n<p>If you <a href=\"https://stackoverflow.com/a/46547122/155423\">implement <code>Index</code> to return a slice</a>, you should be aware that you are <strong>forever</strong> requiring that your internal data structure be something that is based on slices. For example, you cannot use a \"sparse\" structure like a <code>HashMap</code> because it cannot return a <code>&amp;[Tile]</code>. The ability to return a <code>&amp;[Tile]</code> is now a part of the <strong>public API</strong> of the struct. It's certainly a possibility that the representation will change, especially since it's already changed once.</p>\n"}, {"comments": [{"owner": {"reputation": 195, "user_id": 7419679, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/201735092000ec70e4246c77437ae490?s=128&d=identicon&r=PG&f=1", "display_name": "omrisim210", "link": "https://stackoverflow.com/users/7419679/omrisim210"}, "edited": false, "score": 0, "creation_date": 1507041999, "post_id": 46547122, "comment_id": 80048891, "body": "In my game <code>Tile</code>s store two <code>bool</code>s, <code>blocked</code> and <code>block_sight</code>. The info about their position is in <code>Vector</code> itself. But thanks for the help. I think I&#39;ll just use a tuple for now as it&#39;s easier for me to understand, but I will definitely save this snippet for later use."}, {"owner": {"reputation": 195, "user_id": 7419679, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/201735092000ec70e4246c77437ae490?s=128&d=identicon&r=PG&f=1", "display_name": "omrisim210", "link": "https://stackoverflow.com/users/7419679/omrisim210"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1507042078, "post_id": 46547122, "comment_id": 80048944, "body": "@Boiethios you&#39;re right, this actually solves the problem I asked about, so I&#39;ll accept this answer even though I&#39;ll be using tuples."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1507043150, "post_id": 46547122, "comment_id": 80049686, "body": "You should be aware that by doing this, you are <b>forever</b> requiring that your internal data structure be something that is based on slices. For example, you cannot use a &quot;sparse&quot; structure like a <code>HashMap</code> because it cannot return a <code>&amp;[Tile]</code>. The ability to return a <code>&amp;[Tile]</code> is now a part of the <b>public API</b> of the struct. It&#39;s certainly a possibility that the representation will change, especially since OP has already changed the representation once."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1522922542, "post_id": 46547122, "comment_id": 86348954, "body": "@Shepmaster If this is an issue, the OP just needs to create its own struct <code>Row</code> that implements <code>Index</code>: <code>Level</code> --index--&gt; <code>Row</code> --index--&gt; <code>Tile</code>."}], "tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": true, "score": 5, "last_activity_date": 1507041234, "creation_date": 1507041234, "answer_id": 46547122, "question_id": 46546321, "link": "https://stackoverflow.com/questions/46546321/implementing-2d-vector-syntax-for-accessing-a-1d-vector/46547122#46547122", "title": "Implementing 2D vector syntax for accessing a 1D vector?", "body": "<p>It is possible, though not obvious.</p>\n\n<p>First of all, I suggest having the <code>MAP_WIDTH</code> and <code>MAP_HEIGHT</code> in <code>usize</code>, as they are positive integers:</p>\n\n<pre><code>const MAP_WIDTH: usize = 80;\nconst MAP_HEIGHT: usize = 45;\n</code></pre>\n\n<p>Then you need to implement <code>Index</code> (and possibly <code>IndexMut</code>) to return a slice; in this case I'm assuming that you want the first coordinate to be the row:</p>\n\n<pre><code>impl std::ops::Index&lt;usize&gt; for Level {\n    type Output = [Tile];\n\n    fn index(&amp;self, row: usize) -&gt; &amp;[Tile] {\n        let start = MAP_WIDTH * row;\n        &amp;self.map[start .. start + MAP_WIDTH]\n    }\n}\n\nimpl std::ops::IndexMut&lt;usize&gt; for Level {\n    fn index_mut(&amp;mut self, row: usize) -&gt; &amp;mut [Tile] {\n        let start = MAP_WIDTH * row;\n        &amp;mut self.map[start .. start + MAP_WIDTH]\n    }\n}\n</code></pre>\n\n<p>Then, when you index a <code>Level</code>, it first returns a slice with the applicable row; then you can index that slice with the column number.</p>\n\n<p>Below is an example implementation with a substitute <code>Tile</code>:</p>\n\n<pre><code>const MAP_WIDTH: usize = 80;\nconst MAP_HEIGHT: usize = 45;\n\n#[derive(Clone, Debug)]\npub struct Tile {\n    x: u32,\n    y: u32\n}\n\npub struct Level {\n    map: Vec&lt;Tile&gt;,\n}\n\nimpl Level {\n    pub fn new() -&gt; Self {\n        Level { map: vec![Tile { x: 0, y: 0 }; (MAP_HEIGHT * MAP_WIDTH) as usize] }\n    }\n}\n\nimpl std::ops::Index&lt;usize&gt; for Level {\n    type Output = [Tile];\n\n    fn index(&amp;self, row: usize) -&gt; &amp;[Tile] {\n        let start = MAP_WIDTH * row;\n        &amp;self.map[start .. start + MAP_WIDTH]\n    }\n}\n\nimpl std::ops::IndexMut&lt;usize&gt; for Level {\n    fn index_mut(&amp;mut self, row: usize) -&gt; &amp;mut [Tile] {\n        let start = MAP_WIDTH * row;\n        &amp;mut self.map[start .. start + MAP_WIDTH]\n    }\n}\n\nfn main() {\n    let mut lvl = Level::new(); \n\n    lvl[5][2] = Tile { x: 5, y: 2 };\n\n    println!(\"{:?}\", lvl[5][2]); // Tile { x: 5, y: 2 }\n}\n</code></pre>\n"}], "owner": {"reputation": 195, "user_id": 7419679, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/201735092000ec70e4246c77437ae490?s=128&d=identicon&r=PG&f=1", "display_name": "omrisim210", "link": "https://stackoverflow.com/users/7419679/omrisim210"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 617, "favorite_count": 0, "accepted_answer_id": 46547122, "answer_count": 3, "score": 4, "last_activity_date": 1545613341, "creation_date": 1507038822, "last_edit_date": 1545613341, "question_id": 46546321, "link": "https://stackoverflow.com/questions/46546321/implementing-2d-vector-syntax-for-accessing-a-1d-vector", "title": "Implementing 2D vector syntax for accessing a 1D vector?", "body": "<p>I'm making a toy roguelike and have a <code>Level</code> structure for storing the game map, for which the most naive implementation is a 2D vector.  </p>\n\n<p>I'm following <a href=\"http://tomassedovic.github.io/roguelike-tutorial/\" rel=\"nofollow noreferrer\">this tutorial</a> which uses a <code>Vector</code> of <code>Vector</code>s, but states that for performance gains it's also possible to use a single <code>Vector</code> of size <code>MAP_HEIGHT * MAP_WIDTH</code>, and to access a tile at <code>(x, y)</code> one can simply access <code>map[y * MAP_WIDTH + x]</code>.</p>\n\n<p>I'm trying to implement this faster method but using getters and setters is clunky, and public fields aren't that great either. I'd much prefer it to feel like a 2D vector. </p>\n\n<p>In order to do that I need to implement the <code>Index</code> trait for my class, but I'm not sure how to get the result I want. Maybe by nesting the <code>impl</code>s? I really no idea.</p>\n\n<p>Here is my code with a terrible attempt at implementing <code>Index</code> for my structure, which obviously won't work for my purposes because it's one dimensional:</p>\n\n<pre><code>const MAP_WIDTH: i32 = 80;\nconst MAP_HEIGHT: i32 = 45;\n\npub struct Level {\n    map: Vec&lt;Tile&gt;,\n}\n\nimpl Level {\n    pub fn new() -&gt; Self {\n        Level { map: vec![Tile::empty(); (MAP_HEIGHT * MAP_WIDTH) as usize] }\n    }\n}\n\nimpl std::ops::Index&lt;i32&gt; for Level {\n    type Output = Tile;\n    fn index(&amp;self, x: i32) -&gt; &amp;Self::Output {\n        self[MAP_WIDTH + x]; // We have x and y values; how do we make this work?\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "operator-overloading"], "comments": [{"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 1, "creation_date": 1507033857, "post_id": 46544516, "comment_id": 80043225, "body": "Signature of <code>index</code> is <code>index(&amp;self, Idx) -&gt; &amp;Self::Output</code>, not <code>index(mut self, ...) ...</code>"}], "answers": [{"comments": [{"owner": {"reputation": 195, "user_id": 7419679, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/201735092000ec70e4246c77437ae490?s=128&d=identicon&r=PG&f=1", "display_name": "omrisim210", "link": "https://stackoverflow.com/users/7419679/omrisim210"}, "edited": false, "score": 0, "creation_date": 1507034749, "post_id": 46544904, "comment_id": 80043820, "body": "I realized that and changed it to just addition instead of mutation, I&#39;ll edit the question"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 195, "user_id": 7419679, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/201735092000ec70e4246c77437ae490?s=128&d=identicon&r=PG&f=1", "display_name": "omrisim210", "link": "https://stackoverflow.com/users/7419679/omrisim210"}, "edited": false, "score": 0, "creation_date": 1507034791, "post_id": 46544904, "comment_id": 80043855, "body": "@omrisim210 so, you wish to invalidate the answer? That&#39;s very frowned on."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 195, "user_id": 7419679, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/201735092000ec70e4246c77437ae490?s=128&d=identicon&r=PG&f=1", "display_name": "omrisim210", "link": "https://stackoverflow.com/users/7419679/omrisim210"}, "edited": false, "score": 0, "creation_date": 1507034823, "post_id": 46544904, "comment_id": 80043876, "body": "@omrisim210 for example - <a href=\"https://meta.stackoverflow.com/q/266946/155423\">meta.stackoverflow.com/q/266946/155423</a>"}, {"owner": {"reputation": 195, "user_id": 7419679, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/201735092000ec70e4246c77437ae490?s=128&d=identicon&r=PG&f=1", "display_name": "omrisim210", "link": "https://stackoverflow.com/users/7419679/omrisim210"}, "edited": false, "score": 0, "creation_date": 1507035128, "post_id": 46544904, "comment_id": 80044085, "body": "Well, I didn&#39;t think about invalidating the answer. Should I ask a new question if this answer works for my case? Perhaps you could edit your answer (as awkward as it sounds)?"}, {"owner": {"reputation": 195, "user_id": 7419679, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/201735092000ec70e4246c77437ae490?s=128&d=identicon&r=PG&f=1", "display_name": "omrisim210", "link": "https://stackoverflow.com/users/7419679/omrisim210"}, "edited": false, "score": 1, "creation_date": 1507035200, "post_id": 46544904, "comment_id": 80044140, "body": "And I understand that what I&#39;m doing is not idiomatic, but I just wanted to learn how to use <code>Index</code>. In a real world scenario I wouldn&#39;t have even wrapped <code>i32</code> in a <code>struct</code>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1507035388, "last_edit_date": 1507035388, "creation_date": 1507034627, "answer_id": 46544904, "question_id": 46544516, "link": "https://stackoverflow.com/questions/46544516/how-do-i-implement-stdopsindex-to-mutate-the-value-being-indexed/46544904#46544904", "title": "How do I implement std::ops::Index to mutate the value being indexed?", "body": "<blockquote>\n  <p>Editor's note: This answer applied to the original question before the OP completely changed it. It is no longer applicable to the posted question.</p>\n</blockquote>\n\n<hr>\n\n<p>The <a href=\"https://doc.rust-lang.org/std/ops/trait.Index.html\" rel=\"nofollow noreferrer\"><code>Index</code> documentation</a> says, emphasis mine:</p>\n\n<blockquote>\n  <p>The <code>Index</code> trait is used to specify the functionality of indexing operations like <code>container[index]</code> <strong>when used in an immutable context</strong>.</p>\n</blockquote>\n\n<p>You are attempting to <em>mutate</em> the value, which is simply not possible. You can also tell this from the signature of <code>index</code>:</p>\n\n<pre><code>pub trait Index&lt;Idx&gt; \nwhere\n    Idx: ?Sized, \n{\n    type Output: ?Sized;\n    fn index(&amp;self, index: Idx) -&gt; &amp;Self::Output;\n}\n</code></pre>\n\n<p>There's no <code>mut</code> anywhere here; you cannot \"implement\" a trait with a completely different signature! You also cannot change the type of one of the arguments (in this case, <code>self</code>).</p>\n\n<hr>\n\n<p>Bluntly put, <code>Index</code> is the <strong>wrong</strong> trait to use. Additionally, idiomatic Rust users would be <em>really</em> upset if you did implement the code this way; we generally aren't of the \"reuse an operator for a completely different meaning\" crowd.</p>\n\n<p>Instead, this should just be a function with a name:</p>\n\n<pre><code>impl Integer {\n    fn increment(&amp;mut self, to_add: i32) {\n        self.val += to_add;\n    }\n}\n</code></pre>\n\n<p>Alternatively, you could implement <code>DerefMut</code>:</p>\n\n<pre><code>use std::ops::{Deref, DerefMut};\n\nimpl Deref for Integer {\ntype Target = i32;\n    fn deref(&amp;self) -&gt; &amp;Self::Target { &amp;self.val }\n}\n\nimpl DerefMut for Integer {\n    fn deref_mut(&amp;mut self) -&gt; &amp;mut Self::Target { &amp;mut self.val }\n}\n</code></pre>\n\n<p>And then use it like</p>\n\n<pre><code>let mut i = Integer::new(20);\n*i += 20;\nprintln!(\"i[20] is: {:?}\", i);\n</code></pre>\n"}], "owner": {"reputation": 195, "user_id": 7419679, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/201735092000ec70e4246c77437ae490?s=128&d=identicon&r=PG&f=1", "display_name": "omrisim210", "link": "https://stackoverflow.com/users/7419679/omrisim210"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 110, "favorite_count": 0, "closed_date": 1507035317, "accepted_answer_id": 46544904, "answer_count": 1, "score": 0, "last_activity_date": 1507035388, "creation_date": 1507033338, "last_edit_date": 1507035291, "question_id": 46544516, "link": "https://stackoverflow.com/questions/46544516/how-do-i-implement-stdopsindex-to-mutate-the-value-being-indexed", "closed_reason": "Duplicate", "title": "How do I implement std::ops::Index to mutate the value being indexed?", "body": "<p>I want to learn how to use the <code>Index</code> trait for my toy roguelike but can't even get it to work in a useless, dummy scenario.</p>\n\n<pre><code>use std::ops::Index;\n\n// Dummy struct that wraps i32\n#[derive(Clone, Copy, Debug)]\npub struct Integer {\n    pub val: i32,\n}\n\nimpl Integer {\n    fn new(num: i32) -&gt; Self {\n        Integer { val: num }\n    }\n}\n\n// Using the index operator on an Integer should add the index to the Integer's value.\n// let i = Integer::new(20);\n// i[20];\n// The above code should make it so i.val == 40\nimpl Index&lt;Integer&gt; for Integer {\n    type Output = i32;\n\n    // The error is in the following line:\n    fn index(&amp;self, to_add: Integer) -&gt; &amp;Self::Output {\n        self.val + to_add.val;\n    }\n}\n\n// The code causes an error before it reaches this\nfn main() {\n    let mut i = Integer::new(20);\n    let mut n = Integer::new(30);\n    println!(\"i[20] is: {:?}\", i[n]);\n}\n</code></pre>\n\n<p>I get this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:23:55\n   |\n23 |       fn index(&amp;self, to_add: Integer) -&gt; &amp;Self::Output {\n   |  _______________________________________________________^\n24 | |         self.val + to_add.val;\n25 | |     }\n   | |_____^ expected &amp;i32, found ()\n   |\n   = note: expected type `&amp;i32`\n              found type `()`\n</code></pre>\n\n<p>I don't really know what I'm talking about but I guess that the value dies before it reaches the end of the function or something like that? I don't yet fully understand lifetimes.</p>\n\n<p>I know this looks like a \"NO IDEA WHAT IM DOING FIX PLS\" question, but I'd love to know what I'm doing wrong here so I can learn from it.</p>\n"}, {"tags": ["multithreading", "rust", "multiprocessing", "threadpool", "fibers"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1507029937, "post_id": 46539826, "comment_id": 80040762, "body": "Are you compiling and running your program with the <b>--release</b> flag?"}, {"owner": {"reputation": 95, "user_id": 3521339, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/FmOYe.png?s=128&g=1", "display_name": "Maximus12793", "link": "https://stackoverflow.com/users/3521339/maximus12793"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1507049032, "post_id": 46539826, "comment_id": 80053242, "body": "@Shepmaster yes with optimization level 3"}], "answers": [{"comments": [{"owner": {"reputation": 95, "user_id": 3521339, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/FmOYe.png?s=128&g=1", "display_name": "Maximus12793", "link": "https://stackoverflow.com/users/3521339/maximus12793"}, "edited": false, "score": 0, "creation_date": 1507049439, "post_id": 46544747, "comment_id": 80053458, "body": "Thanks! Isn&#39;t most of the overhead waiting for the network so if I have spawned a future for each request shouldn&#39;t it <b>not</b> block until the response is available and I can write to file? Is tokio generally well suited for other io bound tasks like writing to many files etc?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 95, "user_id": 3521339, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/FmOYe.png?s=128&g=1", "display_name": "Maximus12793", "link": "https://stackoverflow.com/users/3521339/maximus12793"}, "edited": false, "score": 0, "creation_date": 1507051100, "post_id": 46544747, "comment_id": 80054328, "body": "@Maximus12793 <i>Isn&#39;t most of the overhead waiting for the network</i>  \u2014 yes, which is why I said &quot;Downloading a file is [...] IO-bound&quot;. <i>shouldn&#39;t it not block</i> \u2014 yes, except that you have performed a blocking call (<code>.perform()</code>). <i>Is tokio generally well suited for other io bound</i> \u2014 yes, I&#39;m pretty sure that&#39;s why it&#39;s called Tok<b>io</b>, and AFAIK is the entire reason Tokio exists. <i>like writing to many files</i> \u2014 sadly, there&#39;s <a href=\"http://blog.libtorrent.org/2012/10/asynchronous-disk-io/\" rel=\"nofollow noreferrer\">basically no good async disk IO</a>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1507034146, "creation_date": 1507034146, "answer_id": 46544747, "question_id": 46539826, "link": "https://stackoverflow.com/questions/46539826/why-do-my-futures-not-max-out-the-cpu/46544747#46544747", "title": "Why do my Futures not max out the CPU?", "body": "<blockquote>\n  <p>From what I understand, if I have a <code>CpuPool</code> managing <code>Future</code>s across <strong>N</strong> cores, this is functionally what the Go runtime/goroutine combo is doing, just via fibers instead of futures.</p>\n</blockquote>\n\n<p>This is not correct. The <a href=\"https://docs.rs/futures-cpupool/0.1.6/futures_cpupool/struct.CpuPool.html\" rel=\"nofollow noreferrer\">documentation for <code>CpuPool</code> states</a>, emphasis mine:</p>\n\n<blockquote>\n  <p>A thread pool intended to run <strong>CPU intensive work</strong>.</p>\n</blockquote>\n\n<p>Downloading a file is <em>not</em> CPU-bound, it's IO-bound. All you have done is spin up many threads then told each thread to block while waiting for IO to complete. </p>\n\n<p>Instead, use <a href=\"https://crates.io/crates/tokio-curl\" rel=\"nofollow noreferrer\">tokio-curl</a>, which adapts the curl library to the <code>Future</code> abstraction. You can then remove the threadpool completely. This should drastically improve your throughput.</p>\n"}], "owner": {"reputation": 95, "user_id": 3521339, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/FmOYe.png?s=128&g=1", "display_name": "Maximus12793", "link": "https://stackoverflow.com/users/3521339/maximus12793"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 537, "favorite_count": 0, "accepted_answer_id": 46544747, "answer_count": 1, "score": 1, "last_activity_date": 1507034146, "creation_date": 1507017675, "last_edit_date": 1507032407, "question_id": 46539826, "link": "https://stackoverflow.com/questions/46539826/why-do-my-futures-not-max-out-the-cpu", "title": "Why do my Futures not max out the CPU?", "body": "<p>I am creating a few hundred requests to download the same file (<em>this is a toy example</em>). When I run the equivalent logic with Go, I get 200% CPU usage and return in ~5 seconds w/ 800 reqs. In Rust with only 100 reqs, it takes nearly 5 seconds and spawns 16 OS threads with 37% CPU utilization.</p>\n\n<p>Why is there such a difference? </p>\n\n<p>From what I understand, if I have a <code>CpuPool</code> managing <code>Future</code>s across <strong>N</strong> cores, this is functionally what the Go runtime/goroutine combo is doing, just via fibers instead of futures.</p>\n\n<p>From the perf data, it seems like I am only using 1 core despite the <code>ThreadPoolExecutor</code>.</p>\n\n<pre><code>extern crate curl;\nextern crate fibers;\nextern crate futures;\nextern crate futures_cpupool;\n\nuse std::io::{Write, BufWriter};\nuse curl::easy::Easy;\nuse futures::future::*;\nuse std::fs::File;\nuse futures_cpupool::CpuPool;\n\n\nfn make_file(x: i32, data: &amp;mut Vec&lt;u8&gt;) {\n    let f = File::create(format!(\"./data/{}.txt\", x)).expect(\"Unable to open file\");\n    let mut writer = BufWriter::new(&amp;f);\n    writer.write_all(data.as_mut_slice()).unwrap();\n}\n\nfn collect_request(x: i32, url: &amp;str) -&gt; Result&lt;i32, ()&gt; {\n    let mut data = Vec::new();\n    let mut easy = Easy::new();\n    easy.url(url).unwrap();\n    {\n        let mut transfer = easy.transfer();\n        transfer\n            .write_function(|d| {\n                data.extend_from_slice(d);\n                Ok(d.len())\n            })\n            .unwrap();\n        transfer.perform().unwrap();\n\n    }\n    make_file(x, &amp;mut data);\n    Ok(x)\n}\n\nfn main() {\n    let url = \"https://en.wikipedia.org/wiki/Immanuel_Kant\";\n    let pool = CpuPool::new(16);\n    let output_futures: Vec&lt;_&gt; = (0..100)\n        .into_iter()\n        .map(|ind| {\n            pool.spawn_fn(move || {\n                let output = collect_request(ind, url);\n                output\n            })\n        })\n        .collect();\n\n    // println!(\"{:?}\", output_futures.Item());\n    for i in output_futures {\n        i.wait().unwrap();\n    }\n}\n</code></pre>\n\n<p><a href=\"https://stackoverflow.com/questions/46510272/golang-speeding-up-response-writing-time?noredirect=1#comment80006414_46510272\">My equivalent Go code</a></p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1507075340, "post_id": 46537490, "comment_id": 80064350, "body": "This was <a href=\"https://users.rust-lang.org/t/futures-question-split-connection-into-sink-stream-in-two-tasks/13156?u=shepmaster\" rel=\"nofollow noreferrer\">cross-posted to the Users Forum</a>."}], "answers": [{"comments": [{"owner": {"reputation": 6262, "user_id": 691032, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/04fa8b0cca5a7dfef2d281be67a2b7a2?s=128&d=identicon&r=PG", "display_name": "sinan", "link": "https://stackoverflow.com/users/691032/sinan"}, "edited": false, "score": 0, "creation_date": 1507094077, "post_id": 46555236, "comment_id": 80068697, "body": "Thanks, I&#39;ll try this in ~12 hours and let you know if it works."}, {"owner": {"reputation": 6262, "user_id": 691032, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/04fa8b0cca5a7dfef2d281be67a2b7a2?s=128&d=identicon&r=PG", "display_name": "sinan", "link": "https://stackoverflow.com/users/691032/sinan"}, "edited": false, "score": 0, "creation_date": 1507096992, "post_id": 46555236, "comment_id": 80069748, "body": "Btw, your receiver no longer returns a <code>String</code>. In the original code receiver returned a <code>String</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 6262, "user_id": 691032, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/04fa8b0cca5a7dfef2d281be67a2b7a2?s=128&d=identicon&r=PG", "display_name": "sinan", "link": "https://stackoverflow.com/users/691032/sinan"}, "edited": false, "score": 0, "creation_date": 1507137371, "post_id": 46555236, "comment_id": 80094759, "body": "@sinan yes, it doesn&#39;t need to take a <code>String</code> because the sender can just construct an <code>OwnedMessage</code> and put that directly into the channel. That way, you can send any of the 5 possible message types."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1507076460, "last_edit_date": 1507076460, "creation_date": 1507076106, "answer_id": 46555236, "question_id": 46537490, "link": "https://stackoverflow.com/questions/46537490/split-a-futures-connection-into-a-sink-and-a-stream-and-use-them-in-two-differen/46555236#46555236", "title": "Split a futures connection into a sink and a stream and use them in two different tasks", "body": "<p><a href=\"https://docs.rs/futures/0.1.16/futures/stream/struct.SplitSink.html\" rel=\"nofollow noreferrer\"><code>SplitSink</code></a> implements <a href=\"https://docs.rs/futures/0.1.16/futures/sink/trait.Sink.html\" rel=\"nofollow noreferrer\"><code>Sink</code></a> which defines <code>send</code> to take ownership:</p>\n\n<pre><code>fn send(self, item: Self::SinkItem) -&gt; Send&lt;Self&gt;\nwhere\n    Self: Sized,\n</code></pre>\n\n<p>On the other hand, <a href=\"https://docs.rs/futures/0.1.16/futures/future/fn.loop_fn.html\" rel=\"nofollow noreferrer\"><code>loop_fn</code></a> requires that the closure be able to be called multiple times. These two things are fundamentally incompatible \u2014 how can you call something multiple times which requires consuming a value?</p>\n\n<hr>\n\n<p>Here's a <strong>completely untested</strong> piece of code that compiles \u2014 I don't have rogue WebSocket servers lying about.</p>\n\n<pre><code>#[macro_use]\nextern crate quick_error;\n\nextern crate futures;\nextern crate tokio_core;\nextern crate websocket;\n\nuse futures::{Future, Stream, Sink};\nuse futures::sync::mpsc::channel;\nuse tokio_core::reactor::Core;\n\nuse websocket::ClientBuilder;\n\npub fn main() {\n    let mut core = Core::new().unwrap();\n    let handle = core.handle();\n\n    let (send, recv) = channel(100);\n\n    let f = ClientBuilder::new(\"wss://...\")\n        .unwrap()\n        .async_connect(None, &amp;handle)\n        .from_err::&lt;Error&gt;()\n        .map(|(duplex, _)| duplex.split())\n        .and_then(|(sink, stream)| {\n            let reader = stream\n                .for_each(|i| {\n                    println!(\"Read a {:?}\", i);\n                    Ok(())\n                })\n                .from_err();\n\n            let writer = sink\n               .sink_from_err()\n               .send_all(recv.map_err(Error::Receiver))\n               .map(|_| ());\n\n            reader.join(writer)\n        });\n\n    drop(send); // Close the sending channel manually\n\n    core.run(f).expect(\"Unable to run\");\n}\n\nquick_error! {\n    #[derive(Debug)]\n    pub enum Error {\n        WebSocket(err: websocket::WebSocketError) {\n            from()\n            description(\"websocket error\")\n            display(\"WebSocket error: {}\", err)\n            cause(err)\n        }\n        Receiver(err: ()) {\n            description(\"receiver error\")\n            display(\"Receiver error\")\n        }\n    }\n}\n</code></pre>\n\n<p>The points that stuck out during implementation were:</p>\n\n<ol>\n<li><em>everything</em> has to become a <code>Future</code> eventually</li>\n<li>it's <em>way</em> easier to define an error type and convert to it</li>\n<li>Knowing if the <code>Item</code> and <code>Error</code> associated types were \"right\" was tricky. I ended up doing a lot of \"type assertions\" (<code>{ let x: &amp;Future&lt;Item = (), Error = ()&gt; = &amp;reader; }</code>).</li>\n</ol>\n"}], "owner": {"reputation": 6262, "user_id": 691032, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/04fa8b0cca5a7dfef2d281be67a2b7a2?s=128&d=identicon&r=PG", "display_name": "sinan", "link": "https://stackoverflow.com/users/691032/sinan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1238, "favorite_count": 1, "accepted_answer_id": 46555236, "answer_count": 1, "score": 0, "last_activity_date": 1507082323, "creation_date": 1507006802, "last_edit_date": 1507082323, "question_id": 46537490, "link": "https://stackoverflow.com/questions/46537490/split-a-futures-connection-into-a-sink-and-a-stream-and-use-them-in-two-differen", "title": "Split a futures connection into a sink and a stream and use them in two different tasks", "body": "<p>I'm experimenting with the futures API using the <code>websocket</code> library. I have this code:</p>\n\n<pre><code>use futures::future::Future;\nuse futures::future;\nuse futures::sink::Sink;\nuse futures::stream::Stream;\nuse futures::sync::mpsc::channel;\nuse futures::sync::mpsc::{Sender, Receiver};\nuse tokio_core::reactor::Core;\n\nuse websocket::{ClientBuilder, OwnedMessage};\n\npub fn main() {\n    let mut core = Core::new().unwrap();\n    let handle = core.handle();\n\n    let handle_clone = handle.clone();\n\n    let (send, recv): (Sender&lt;String&gt;, Receiver&lt;String&gt;) = channel(100);\n\n    let f = ClientBuilder::new(\"wss://...\")\n        .unwrap()\n        .async_connect(None, &amp;handle_clone)\n        .map_err(|e| println!(\"error: {:?}\", e))\n\n        .map(|(duplex, _)| duplex.split())\n        .and_then(move |(sink, stream)| {\n\n            // this task consumes the channel, writes messages to the websocket\n            handle_clone.spawn(future::loop_fn(recv, |recv: Receiver&lt;String&gt;| {\n                sink.send(OwnedMessage::Close(None))\n                    .and_then(|_| future::ok(future::Loop::Break(())))\n                    .map_err(|_| ())\n            }));\n\n            // the main tasks listens the socket\n            future::loop_fn(stream, |stream| {\n                stream\n                    .into_future()\n                    .and_then(|_| future::ok(future::Loop::Break(())))\n                    .map_err(|_| ())\n            })\n        });\n\n    loop {\n        core.turn(None)\n    }\n}\n</code></pre>\n\n<p>After connecting to the server, I want to run \"listener\" and \"sender\" tasks without one blocking the other one. The problem is I can't use <code>sink</code> in the new task, it fails with:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of captured outer variable in an `FnMut` closure\n  --&gt; src/slack_conn.rs:29:17\n   |\n25 |         .and_then(move |(sink, stream)| {\n   |                          ---- captured outer variable\n...\n29 |                 sink.send(OwnedMessage::Close(None))\n   |                 ^^^^ cannot move out of captured outer variable in an `FnMut` closure\n</code></pre>\n\n<p>I could directly use <code>duplex</code> to send and receive, but that leads to worse errors. </p>\n\n<p>Any ideas on how to make this work? Indeed, I'd be happy with any <code>futures</code> code that allows me to non-blockingly connect to a server and spawn two async tasks:</p>\n\n<ul>\n<li>one that reads from the connection and takes some action (prints to screen etc.)</li>\n<li>one that reads from a mpsc channel and writes to the connection</li>\n</ul>\n\n<p>It's fine if I have to write it in a different style.</p>\n"}, {"tags": ["iterator", "rust"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1506984259, "post_id": 46534725, "comment_id": 80024191, "body": "<code>.iter()</code> is for creating an iterator, but you&#39;ve already got one. <code>xs</code> is already an <code>Iterator</code>."}, {"owner": {"reputation": 4989, "user_id": 1685095, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/5f06068bb9b4c00f12582ccc0ba64c4a?s=128&d=identicon&r=PG", "display_name": "user1685095", "link": "https://stackoverflow.com/users/1685095/user1685095"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1506984331, "post_id": 46534725, "comment_id": 80024211, "body": "@loganfsmyth Oh, okay. What is the type for something that has <code>.iter()</code> method?"}, {"owner": {"reputation": 168655, "user_id": 582, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ev49G.png?s=128&g=1", "display_name": "Lily Ballard", "link": "https://stackoverflow.com/users/582/lily-ballard"}, "edited": false, "score": 0, "creation_date": 1506986562, "post_id": 46534725, "comment_id": 80024754, "body": "I don&#39;t believe there is one. There is however an <code>IntoIterator</code> which defines the <code>into_iter()</code> method. This is automatically implemented for all <code>Iterator</code>s, so if you have an API that takes an <code>IntoIterator</code> and you don&#39;t want to actually consume the argument, the caller can just call <code>.iter()</code> themselves and pass in the resulting iterator."}], "answers": [{"comments": [{"owner": {"reputation": 4989, "user_id": 1685095, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/5f06068bb9b4c00f12582ccc0ba64c4a?s=128&d=identicon&r=PG", "display_name": "user1685095", "link": "https://stackoverflow.com/users/1685095/user1685095"}, "edited": false, "score": 0, "creation_date": 1507011113, "post_id": 46535558, "comment_id": 80030676, "body": "Thanks a lot. I think I don&#39;t understand only one thing. Why is <code>Box</code> needed here?"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 4989, "user_id": 1685095, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/5f06068bb9b4c00f12582ccc0ba64c4a?s=128&d=identicon&r=PG", "display_name": "user1685095", "link": "https://stackoverflow.com/users/1685095/user1685095"}, "edited": false, "score": 1, "creation_date": 1507018155, "post_id": 46535558, "comment_id": 80034022, "body": "@user1685095 The linked question <a href=\"https://stackoverflow.com/questions/27535289/what-is-the-correct-way-to-return-an-iterator\">&quot;What is the correct way to return an Iterator?&quot;</a> answers this question."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1580756102, "last_edit_date": 1580756102, "creation_date": 1506990596, "answer_id": 46535558, "question_id": 46534725, "link": "https://stackoverflow.com/questions/46534725/implement-a-pairwise-iterator/46535558#46535558", "title": "Implement a pairwise iterator", "body": "<blockquote>\n<pre><code>fn pairwise&lt;I, T&gt;(&amp;xs: &amp;I) -&gt; I\n</code></pre>\n</blockquote>\n\n<p>This doesn't make sense. See <a href=\"https://stackoverflow.com/q/27535289/155423\">What is the correct way to return an Iterator (or any other trait)?</a> and <a href=\"https://stackoverflow.com/q/45197826/155423\">What is the difference between `e1` and `&amp;e2` when used as the for-loop variable?</a>.</p>\n\n<blockquote>\n<pre><code>I: Iterator&lt;Item = T&gt;,\n</code></pre>\n</blockquote>\n\n<p>There's no reason to specify that the <code>Item</code> is a <code>T</code>.</p>\n\n<blockquote>\n<pre><code>[None].iter()\n</code></pre>\n</blockquote>\n\n<p>It's better to use <a href=\"https://doc.rust-lang.org/std/iter/fn.once.html\" rel=\"nofollow noreferrer\"><code>iter::once</code></a>.</p>\n\n<blockquote>\n<pre><code>xs.iter()\n</code></pre>\n</blockquote>\n\n<p>There's no trait in the standard library that defines an <code>iter</code> method. Perhaps you meant <a href=\"https://doc.rust-lang.org/std/iter/trait.IntoIterator.html\" rel=\"nofollow noreferrer\"><code>IntoIterator</code></a>?</p>\n\n<blockquote>\n<pre><code>let data: Vec&lt;i32&gt; = vec![1, 2, 3]\n</code></pre>\n</blockquote>\n\n<p>There's no reason to specify the type here; <code>i32</code> is the default integral type.</p>\n\n<blockquote>\n<pre><code>Vec&lt;Option&lt;i32&gt;, i32&gt;\nVec&lt;Option&lt;i32&gt;, i32&gt;&gt; // original version\n</code></pre>\n</blockquote>\n\n<p>This is not a valid type for <code>Vec</code>, and your original form doesn't even have balanced symbols.</p>\n\n<hr>\n\n<p>After all that, you are faced with tough choices. Your example code passes in an iterator which has <em>references</em> to the slice but you've written your assertion such that you expect to get non-references back. You've also attempted to use an arbitrary iterator twice; there's no guarantee that such a thing is viable.</p>\n\n<p>The most generic form I see is:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::iter;\n\nfn pairwise&lt;I&gt;(right: I) -&gt; impl Iterator&lt;Item = (Option&lt;I::Item&gt;, I::Item)&gt;\nwhere\n    I: IntoIterator + Clone,\n{\n    let left = iter::once(None).chain(right.clone().into_iter().map(Some));\n    left.zip(right)\n}\n\nfn main() {\n    let data = vec![1, 2, 3];\n\n    let newdata: Vec&lt;_&gt; = pairwise(&amp;data).collect();\n    assert_eq!(newdata, [(None, &amp;1), (Some(&amp;1), &amp;2), (Some(&amp;2), &amp;3)]);\n\n    let newdata: Vec&lt;_&gt; = pairwise(data.iter().copied()).collect();\n    assert_eq!(newdata, [(None, 1), (Some(1), 2), (Some(2), 3)]);\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/40613725/155423\">Iterating over a slice&#39;s values instead of references in Rust?</a></li>\n<li><a href=\"https://stackoverflow.com/q/30467085/155423\">How to iterate over and filter an array?</a></li>\n<li><a href=\"https://stackoverflow.com/q/26953280/155423\">How to create a non consuming iterator from a Vector</a></li>\n<li><a href=\"https://stackoverflow.com/q/34572784/155423\">Why can I iterate over a slice twice, but not a vector?</a></li>\n<li><a href=\"https://stackoverflow.com/q/40053550/155423\">The compiler suggests I add a &#39;static lifetime because the parameter type may not live long enough, but I don&#39;t think that&#39;s what I want</a></li>\n<li><a href=\"https://stackoverflow.com/q/27535289/155423\">What is the correct way to return an Iterator (or any other trait)?</a></li>\n</ul>\n"}], "owner": {"reputation": 4989, "user_id": 1685095, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/5f06068bb9b4c00f12582ccc0ba64c4a?s=128&d=identicon&r=PG", "display_name": "user1685095", "link": "https://stackoverflow.com/users/1685095/user1685095"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1064, "favorite_count": 1, "accepted_answer_id": 46535558, "answer_count": 1, "score": 1, "last_activity_date": 1580756102, "creation_date": 1506983970, "last_edit_date": 1506988619, "question_id": 46534725, "link": "https://stackoverflow.com/questions/46534725/implement-a-pairwise-iterator", "title": "Implement a pairwise iterator", "body": "<p>I have trouble writing code for a function that takes an iterator and returns an iterator that iterates in pairs <code>(Option&lt;T&gt;, T)</code> like so</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>a = [1,2,3]\nassert pairwise(a) == `[(None, 1), (Some(1), 2), (Some(2), 3)]\n</code></pre>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn pairwise&lt;I, T&gt;(&amp;xs: &amp;I) -&gt; I\nwhere\n    I: Iterator&lt;Item = T&gt;,\n{\n    [None].iter().chain(xs.iter().map(Some)).zip(xs.iter())\n}\n\nfn main() {\n    let data: Vec&lt;i32&gt; = vec![1, 2, 3];\n    let newdata: Vec&lt;Option&lt;i32&gt;, i32&gt; = pairwise(&amp;data).collect();\n    println!(\"{:?}\", newdata);\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `iter` found for type `I` in the current scope\n --&gt; src/main.rs:3:28\n  |\n3 |     [None].iter().chain(xs.iter().map(Some)).zip(xs.iter())\n  |                            ^^^^\n  |\n</code></pre>\n\n<p>Not sure why <code>xs</code> isn't iterable. I've stated it in the <code>where</code> clause haven't I?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1506980108, "post_id": 46534032, "comment_id": 80022908, "body": "<a href=\"https://meta.stackexchange.com/q/39223/281829\">One question per post, please</a>. I&#39;ve removed your &quot;extra&quot; question; you are welcome to ask it separately."}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1506983906, "post_id": 46534032, "comment_id": 80024083, "body": "This is much easier to do with enums. Bonus: enums are always &quot;sealed&quot;."}], "owner": {"reputation": 3646, "user_id": 223590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/69f8c12ecf044390a92c9ab9f32eddf5?s=128&d=identicon&r=PG&f=1", "display_name": "racetrack", "link": "https://stackoverflow.com/users/223590/racetrack"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 77, "favorite_count": 0, "closed_date": 1506980500, "answer_count": 0, "score": 0, "last_activity_date": 1506980076, "creation_date": 1506979970, "last_edit_date": 1506980076, "question_id": 46534032, "link": "https://stackoverflow.com/questions/46534032/how-can-i-define-equality-for-a-specific-traits-implementors", "closed_reason": "Duplicate", "title": "How can I define equality for a specific trait&#39;s implementors?", "body": "<p>I'm trying to define equality for a specific trait's implementors. This is a very simplified version of the problem I'm trying to solve:</p>\n\n<pre><code>trait Tree {}\n\nstruct Plum;\nstruct Cherry;\n\nimpl Tree for Plum {}\nimpl Tree for Cherry {}\n\nimpl PartialEq for Tree {\n    fn eq(&amp;self, other: &amp;Tree) -&gt; bool {\n        match (self, other) {\n            (Plum, Plum) =&gt; true,\n            (Cherry, Cherry) =&gt; true,\n            _ =&gt; false,\n        }\n    }\n}\nfn main() {\n    let p: &amp;Tree = &amp;Plum {};\n    let c: &amp;Tree = &amp;Cherry {};\n    println!(\"{}\", p == c);\n}\n</code></pre>\n\n<p>I realize that in this simplified version I can just derive equality, but my actual problem is more involved. For example, there might be something like:</p>\n\n<pre><code>struct Graftage&lt;'a&gt; {\n    scion: &amp;'a mut Tree,\n    stock: &amp;'a mut Tree,\n}\n\nimpl Tree for Graftage&lt;'a&gt; {}\n</code></pre>\n\n<p>I also tried this variation:</p>\n\n<pre><code>#[derive(PartialEq)]\nstruct Plum;\n\n#[derive(PartialEq)]\nstruct Cherry;\n\nimpl PartialEq for Tree {\n    fn eq(&amp;self, other: &amp;Tree) -&gt; bool {\n        self == other\n    }\n}\n</code></pre>\n\n<p>But I'm unable to get it compiled.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 5143, "user_id": 600351, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/7a2a3b9fd62972fa271deb3d0e31256c?s=128&d=identicon&r=PG", "display_name": "Geob-o-matic", "link": "https://stackoverflow.com/users/600351/geob-o-matic"}, "edited": false, "score": 0, "creation_date": 1506972978, "post_id": 46532501, "comment_id": 80019606, "body": "I was going to do match v.as_bool() {                     Some(b) =&gt; Some(!b),                     None =&gt; None,                 } but seems that map works!"}, {"owner": {"reputation": 168655, "user_id": 582, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ev49G.png?s=128&g=1", "display_name": "Lily Ballard", "link": "https://stackoverflow.com/users/582/lily-ballard"}, "reply_to_user": {"reputation": 5143, "user_id": 600351, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/7a2a3b9fd62972fa271deb3d0e31256c?s=128&d=identicon&r=PG", "display_name": "Geob-o-matic", "link": "https://stackoverflow.com/users/600351/geob-o-matic"}, "edited": false, "score": 10, "creation_date": 1506973006, "post_id": 46532501, "comment_id": 80019618, "body": "That&#39;s basically what <code>map</code> does internally."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 4, "creation_date": 1507021822, "post_id": 46532501, "comment_id": 80036037, "body": "You can also do <code>opt.map(Not::not)</code>. It&#39;s a matter of preference though."}], "tags": [], "owner": {"reputation": 168655, "user_id": 582, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ev49G.png?s=128&g=1", "display_name": "Lily Ballard", "link": "https://stackoverflow.com/users/582/lily-ballard"}, "is_accepted": true, "score": 12, "last_activity_date": 1506972846, "creation_date": 1506972846, "answer_id": 46532501, "question_id": 46532460, "link": "https://stackoverflow.com/questions/46532460/is-there-a-way-to-negate-an-optionbool/46532501#46532501", "title": "Is there a way to negate an Option&lt;bool&gt;?", "body": "<p>Have you tried <code>opt.map(|b| !b)</code>?</p>\n"}], "owner": {"reputation": 5143, "user_id": 600351, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/7a2a3b9fd62972fa271deb3d0e31256c?s=128&d=identicon&r=PG", "display_name": "Geob-o-matic", "link": "https://stackoverflow.com/users/600351/geob-o-matic"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 371, "favorite_count": 0, "accepted_answer_id": 46532501, "answer_count": 1, "score": 5, "last_activity_date": 1506976672, "creation_date": 1506972679, "last_edit_date": 1506976672, "question_id": 46532460, "link": "https://stackoverflow.com/questions/46532460/is-there-a-way-to-negate-an-optionbool", "title": "Is there a way to negate an Option&lt;bool&gt;?", "body": "<p>I'm facing a provided function that takes an <code>Into&lt;Option&lt;bool&gt;&gt;</code> as a parameter but I want to pass it the opposite value of my current bool.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 2, "creation_date": 1506965136, "post_id": 46529282, "comment_id": 80015779, "body": "The source you&#39;re copying from used an iterator struct with a lifetime parameter (<code>PixelIterator&lt;&#39;a&gt;</code>). The Book contains a <a href=\"https://doc.rust-lang.org/book/second-edition/ch10-03-lifetime-syntax.html#lifetime-annotations-in-struct-definitions\" rel=\"nofollow noreferrer\">relevant section</a> on using generic lifetime annotations in structs. Can you be more specific about how lifetime parameters are confusing you?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1506965731, "post_id": 46529282, "comment_id": 80016067, "body": "Did you read the whole (accepted) answer to the linked question? Shepmaster also included an example of an iterator that doesn&#39;t consume the type. Notice that <code>IntoIterator</code> is implemented for <code>&amp;&#39;a Pixel</code> instead of <code>Pixel</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1506966319, "post_id": 46529282, "comment_id": 80016370, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. You&#39;ve said &quot;then I added lifetimes&quot; but you <b>didn&#39;t show us what that meant</b>."}, {"owner": {"reputation": 2093, "user_id": 912757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/b38d27249794c92de5cb131b848cdd89?s=128&d=identicon&r=PG", "display_name": "Nil", "link": "https://stackoverflow.com/users/912757/nil"}, "edited": false, "score": 0, "creation_date": 1506969498, "post_id": 46529282, "comment_id": 80017948, "body": "I did read the second book and the accepted answer from the linked question (which was iterating over POD, I&#39;m not). That didn&#39;t make me an expert, sadly. My bad for the &quot;verifiable example&quot; though. I didn&#39;t add it because I simply added some <code>&lt;&#39;a&gt;</code> that looked quite random to me. I was wrong."}], "answers": [{"comments": [{"owner": {"reputation": 2093, "user_id": 912757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/b38d27249794c92de5cb131b848cdd89?s=128&d=identicon&r=PG", "display_name": "Nil", "link": "https://stackoverflow.com/users/912757/nil"}, "edited": false, "score": 0, "creation_date": 1506969939, "post_id": 46530830, "comment_id": 80018163, "body": "Right, as you guessed, I forgot the <code>&amp;&#39;a</code> in <code>next</code> signature. Using <code>Self::Item</code> is indeed a good idea to avoid errors. Thank you for your answer."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1506966563, "last_edit_date": 1506966563, "creation_date": 1506966259, "answer_id": 46530830, "question_id": 46529282, "link": "https://stackoverflow.com/questions/46529282/cannot-infer-an-appropriate-lifetime-when-returning-a-slice-from-an-iterator/46530830#46530830", "title": "Cannot infer an appropriate lifetime when returning a slice from an iterator", "body": "<blockquote>\n  <p>cannot infer an appropriate lifetime for lifetime parameter in generic type due to conflicting requirements</p>\n</blockquote>\n\n<p>That's because you aren't correctly implementing <code>Iterator</code> and have something like this:</p>\n\n<pre><code>impl&lt;'a&gt; Iterator for StreamlinesIterator&lt;'a&gt; {\n    type Item = &amp;'a [Point];\n\n    fn next(&amp;mut self) -&gt; Option&lt;&amp;[Point]&gt; { /* ... */ }\n\n    // ...\n}\n</code></pre>\n\n<p>Due to lifetime inference, this is equivalent to:</p>\n\n<pre><code>impl&lt;'a&gt; Iterator for StreamlinesIterator&lt;'a&gt; {\n    type Item = &amp;'a [Point];\n\n    fn next&lt;'b&gt;(&amp;'b mut self) -&gt; Option&lt;&amp;'b [Point]&gt; { /* ... */ }\n\n    // ...\n}\n</code></pre>\n\n<p>This is attempting to return a reference that lives as long as the iterator, <a href=\"https://stackoverflow.com/questions/30422177/how-do-i-write-an-iterator-that-returns-references-to-itself\">which you cannot do</a>.</p>\n\n<p>If you correctly implement <code>Iterator</code>, it works:</p>\n\n<pre><code>impl&lt;'a&gt; Iterator for StreamlinesIterator&lt;'a&gt; {\n    type Item = &amp;'a [Point];\n\n    fn next(&amp;mut self) -&gt; Option&lt;&amp;'a [Point]&gt; { /* ... */ }\n\n    // Even better:   \n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; { /* ... */ }\n\n    // ...\n}\n</code></pre>\n\n<blockquote>\n  <p>I don't actually know what I'm doing with the damn <code>&lt;'a&gt;</code>.</p>\n</blockquote>\n\n<p>You should go back and re-read <a href=\"https://doc.rust-lang.org/stable/book/second-edition/ch10-00-generics.html\" rel=\"noreferrer\"><em>The Rust Programming Language</em>, second edition</a>. When you have <em>specific</em> questions, Stack Overflow, IRC, the User's Forum will all be waiting.</p>\n"}], "owner": {"reputation": 2093, "user_id": 912757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/b38d27249794c92de5cb131b848cdd89?s=128&d=identicon&r=PG", "display_name": "Nil", "link": "https://stackoverflow.com/users/912757/nil"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 259, "favorite_count": 0, "accepted_answer_id": 46530830, "answer_count": 1, "score": 1, "last_activity_date": 1506966563, "creation_date": 1506960109, "last_edit_date": 1506966286, "question_id": 46529282, "link": "https://stackoverflow.com/questions/46529282/cannot-infer-an-appropriate-lifetime-when-returning-a-slice-from-an-iterator", "title": "Cannot infer an appropriate lifetime when returning a slice from an iterator", "body": "<p>I have a <code>Vec&lt;Point&gt;</code> with a simple <code>struct Point {x: f32, y: f32, z: f32}</code>. My vector represents hundreds of thousands of lines in 3D (it could be a <code>Vec&lt;Vec&lt;Point&gt;&gt;</code> in fact), so I keep track of the start/end of all lines.</p>\n\n<pre><code>pub struct Streamlines {\n    lengths: Vec&lt;usize&gt;,\n    offsets: Vec&lt;usize&gt;,  // cumulative sum of lengths\n    data: Vec&lt;Point&gt;,\n}\n</code></pre>\n\n<p>I want to create a <strong>non-consuming</strong> iterator for it, usable like:</p>\n\n<pre><code>for streamline in &amp;streamlines {\n    for point in &amp;streamline {\n        println!(\"{} {} {}\", point.x, point.y, point.z);\n    }\n    println!(\"\")\n}\n</code></pre>\n\n<p>I found <a href=\"https://stackoverflow.com/questions/30218886/how-to-implement-iterator-and-intoiterator-for-a-simple-struct\">How to implement Iterator and IntoIterator for a simple struct?</a> and started copyi-err, adapting :)</p>\n\n<pre><code>impl IntoIterator for Streamlines {\n    type Item = &amp;[Point];\n    type IntoIter = StreamlinesIterator;\n\n    fn into_iter(self) -&gt; Self::IntoIter {\n        StreamlinesIterator {\n            streamlines: self,\n            it_idx: 0\n        }\n    }\n}\n\nstruct StreamlinesIterator {\n    streamlines: &amp;Streamlines,\n    it_idx: usize\n}\n\nimpl Iterator for StreamlinesIterator {\n    type Item = &amp;[Point];\n\n    fn next(&amp;mut self) -&gt; Option&lt;&amp;[Point]&gt; {\n        if self.it_idx &lt; self.streamlines.lengths.len() {\n            let start = self.streamlines.offsets[self.it_idx];\n            self.it_idx += 1;\n            let end = self.streamlines.offsets[self.it_idx];\n\n            Some(self.streamlines.data[start..end])\n        }\n        else {\n            None\n        }\n    }\n}\n</code></pre>\n\n<p>I used slices because I only want to return parts of the vector, then I added lifetimes because it's required, but now I have this error <code>cannot infer an appropriate lifetime for lifetime parameter in generic type due to conflicting requirements</code></p>\n\n<p>In fact, I don't actually know what I'm doing with the damn <code>&lt;'a&gt;</code>.</p>\n"}, {"tags": ["c++", "string", "rust", "interop"], "comments": [{"owner": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 0, "creation_date": 1506944851, "post_id": 46524781, "comment_id": 80003491, "body": "C++ compiler/stdlib vendors don&#39;t have this figured out; I wouldn&#39;t expect Rust to. ;-] (To be clear, <code>std::string</code> is a mandated interface, not a mandated implementation, and if you want to pass <i>anything</i> by value you at least need to know its size/layout.)"}, {"owner": {"reputation": 5007, "user_id": 23059, "user_type": "registered", "accept_rate": 47, "profile_image": "https://www.gravatar.com/avatar/28d1534c68a23bb158022f3d5f0985ad?s=128&d=identicon&r=PG", "display_name": "Cameron Taggart", "link": "https://stackoverflow.com/users/23059/cameron-taggart"}, "reply_to_user": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 0, "creation_date": 1506946991, "post_id": 46524781, "comment_id": 80004638, "body": "I&#39;m trying to interop with GNU Octave on Ubuntu Linux to begin with. The compiler is gcc 6.3.0 from <code>gcc -dumpversion</code> and the stdlib is libstdc++.so.6 (libc6,x86-64) =&gt; /usr/lib/x86_64-linux-gnu/libstdc++.so.6 from <code>ldconfig -p | grep stdc++</code>. <a href=\"https://stackoverflow.com/a/10355215/23059\">stackoverflow.com/a/10355215/23059</a>"}, {"owner": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 1, "creation_date": 1506947242, "post_id": 46524781, "comment_id": 80004785, "body": "And is that with or without <code>_GLIBCXX_USE_CXX11_ABI </code> defined? ;-] Point being, if it hasn&#39;t been abstracted properly in C++-building tools, doing so elsewhere has a very slim chance. E.g. my system has libc++, libstdc++, and Dinkumware stdlibs available."}, {"owner": {"reputation": 5007, "user_id": 23059, "user_type": "registered", "accept_rate": 47, "profile_image": "https://www.gravatar.com/avatar/28d1534c68a23bb158022f3d5f0985ad?s=128&d=identicon&r=PG", "display_name": "Cameron Taggart", "link": "https://stackoverflow.com/users/23059/cameron-taggart"}, "reply_to_user": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 0, "creation_date": 1506949572, "post_id": 46524781, "comment_id": 80006110, "body": "I don&#39;t know. I see <code>-lstdc++</code> referenced in some of the Octave build files. I&#39;m not sure I need something abstract. I can add a function to the Octave libraries when I build it."}, {"owner": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 0, "creation_date": 1506950182, "post_id": 46524781, "comment_id": 80006439, "body": "<code>-lstdc++</code> is a linker command, which only implies some (shared) object files to link to; because even the C++ compiler doesn&#39;t know the answer to the &quot;<i>what is a <code>std::string</code>, anyway?</i>&quot; question other than the source code you feed to it."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 0, "creation_date": 1506967471, "post_id": 46524781, "comment_id": 80016946, "body": "@ildjarn: Actually, the fact that <code>std::string</code> is defined in a library is purely coincidental; it is perfectly fine as far as the Standard is concerned to special-case a standard library type in the compiler."}], "answers": [{"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 8, "last_activity_date": 1506968785, "last_edit_date": 1506968785, "creation_date": 1506968315, "answer_id": 46531362, "question_id": 46524781, "link": "https://stackoverflow.com/questions/46524781/rust-interop-with-c-stdstring/46531362#46531362", "title": "Rust interop with C++ std::string", "body": "<p>This is a classic FFI issue and the solution is to use a \"hour-glass\" design: Language A &lt;=> Common ABI &lt;=> Language B.</p>\n\n<p>It could be possible, of course, to evolve bindgen so that it can faithfully reproduce a C++ ABI, but in practice it would require a full C++ compiler which is probably too much effort.</p>\n\n<p>Using a \"hour-glass\" design, each of the languages with a difficult ABI use their own specialized toolchain to convert to a specific well-known ABI. In this case, it would be C++ &lt;=> C &lt;=> Rust.</p>\n\n<p>A possible solution is to create a C wrapper library around the C++ API, and then use bindgen on that. This is what the LLVM and Clang projects do.</p>\n\n<p>It is the simplest solution, and the Octavo project may very well be willing to integrate such an octavo-c facade in-tree (which is always best to guarantee it's up-to-date).</p>\n\n<hr>\n\n<p>Another solution would be to create a C++ companion library for bindgen, which takes care of providing a C-ABI for common C++ types (such as <code>std::string</code>). This would be a more difficult endeavor, especially since:</p>\n\n<ul>\n<li>C has no generics, thus C++ templates would have to be either out-of-scope, or pre-instantiated templates would have to be wrapped one at a time,</li>\n<li>C does not know how to invoke move or copy constructors, so unless the C++ types are already PODs, they have to be manipulated through opaque pointers,</li>\n<li>C does not know ...</li>\n</ul>\n"}], "owner": {"reputation": 5007, "user_id": 23059, "user_type": "registered", "accept_rate": 47, "profile_image": "https://www.gravatar.com/avatar/28d1534c68a23bb158022f3d5f0985ad?s=128&d=identicon&r=PG", "display_name": "Cameron Taggart", "link": "https://stackoverflow.com/users/23059/cameron-taggart"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2214, "favorite_count": 0, "answer_count": 1, "score": 8, "last_activity_date": 1506968785, "creation_date": 1506944459, "last_edit_date": 1506948297, "question_id": 46524781, "link": "https://stackoverflow.com/questions/46524781/rust-interop-with-c-stdstring", "title": "Rust interop with C++ std::string", "body": "<p>I'm trying to build Octave functions in Rust. Octave's API is in C++, so I've generated bindings using rust-bindgen. I'm currently working through the problems that occur when trying to generate <a href=\"https://github.com/ctaggart/octh/issues/28\" rel=\"noreferrer\">bindings that include <code>std::string</code></a>. It would be nice if I could leave it opaque and valid pointer to a <a href=\"https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html\" rel=\"noreferrer\">C++ <code>std::string</code></a>. Would it be possible to build a utility function on the C++ side any time I needed to pass in a C++ <code>std::string</code>?</p>\n\n<p>I was naive when I first attempted this. It is clearly wrong. A Rust <a href=\"https://doc.rust-lang.org/std/ffi/struct.CString.html\" rel=\"noreferrer\"><code>std::ffi:CString</code></a> is for C strings, not C++ strings. I found <a href=\"https://embeddedartistry.com/blog/2017/7/24/stdstring-vs-c-strings\" rel=\"noreferrer\">this recent blog</a> helpful when comparing the two. My first attempt looks <a href=\"https://github.com/ctaggart/octh_examples/blob/723cfaf9fc6d16e0c0caec6148ecf1e1dbc62831/src/lib.rs\" rel=\"noreferrer\">like this</a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#![allow(non_snake_case)]\n#![allow(unused_variables)]\n\nextern crate octh;\n\n// https://thefullsnack.com/en/string-ffi-rust.html\nuse std::ffi::CString;\n\n#[no_mangle]\npub unsafe extern \"C\"  fn Ghelloworld (shl: *const octh::root::octave::dynamic_library, relative: bool) -&gt; *mut octh::root::octave_dld_function {\n    let name = CString::new(\"helloworld\").unwrap();\n    let pname = name.as_ptr() as *const octh::root::std::string;\n    std::mem::forget(pname);\n\n    let doc = CString::new(\"Hello World Help String\").unwrap();\n    let pdoc = doc.as_ptr() as *const octh::root::std::string;\n    std::mem::forget(pdoc);\n\n    octh::root::octave_dld_function_create(Some(Fhelloworld), shl, pname, pdoc)\n}    \n\npub unsafe extern \"C\" fn Fhelloworld (args: *const octh::root::octave_value_list, nargout: ::std::os::raw::c_int) -&gt; octh::root::octave_value_list {\n    let list_ptr = ::std::ptr::null_mut();\n    octh::root::octave_value_list_new(list_ptr);\n    ::std::ptr::read(list_ptr)\n}\n</code></pre>\n\n<p>I need to pass in the function name and documentation as strings to <code>octave_dld_function_create</code>. I wish there was a <code>CppString</code> that I could use instead. Any suggestions on how to proceed? </p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 91, "user_id": 8706910, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21ab5dabdc4ab080436915b5050ac3cd?s=128&d=identicon&r=PG&f=1", "display_name": "Nicolas Chan", "link": "https://stackoverflow.com/users/8706910/nicolas-chan"}, "edited": false, "score": 0, "creation_date": 1506930144, "post_id": 46521163, "comment_id": 79996484, "body": "This doesn&#39;t compile because <code>encoder</code> is moved to <code>Builder::new(encoder)</code> but is later used in <code>encoder.finish()</code>."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 91, "user_id": 8706910, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21ab5dabdc4ab080436915b5050ac3cd?s=128&d=identicon&r=PG&f=1", "display_name": "Nicolas Chan", "link": "https://stackoverflow.com/users/8706910/nicolas-chan"}, "edited": false, "score": 5, "creation_date": 1506930433, "post_id": 46521163, "comment_id": 79996616, "body": "@NicolasChan Gosh, I&#39;m sorry! I wasn&#39;t able to test it, and my brain is not a valid Rust compiler yet :o I edited my answer, the code should work now."}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 10, "last_activity_date": 1506963441, "last_edit_date": 1506963441, "creation_date": 1506929395, "answer_id": 46521163, "question_id": 46520870, "link": "https://stackoverflow.com/questions/46520870/how-to-create-a-gzipped-tar-file-without-using-a-lot-of-ram/46521163#46521163", "title": "How to create a gzipped tar file without using a lot of RAM?", "body": "<p>To understand why you are using RAM and why <code>tar</code> reports an error for large files, let's understand what exactly your code is doing:</p>\n\n<hr>\n\n<pre><code>let mut archive = Builder::new(Vec::new());\n</code></pre>\n\n<p>Looking at the <a href=\"https://docs.rs/tar/0.4.13/tar/struct.Builder.html#method.new\" rel=\"nofollow noreferrer\"><code>Builder::new</code></a> documentation, we can already see the main problem: \"Create a new archive builder with the underlying object as the destination of all data written\". Since you are passing a <code>Vec</code> (which implements <code>Write</code>), the destination of all the tar-compressed data will be written into the vector. But the vector is stored in RAM.</p>\n\n<pre><code>archive.append_dir_all(\"myfiles\", \"myfiles\")?;\n</code></pre>\n\n<p>This line already compresses the files into the vector, so in this line, the RAM fills up.</p>\n\n<p>Skipping a few lines:</p>\n\n<pre><code>encoder.write(&amp;archive.into_inner()?)?;\n</code></pre>\n\n<p>Here you tell the encoder to write the vector you just filled. <em>But</em>, it is important to remember, that <a href=\"https://doc.rust-lang.org/stable/std/io/trait.Write.html#tymethod.write\" rel=\"nofollow noreferrer\"><code>Write::write()</code></a> has no guarantee how much data is written! It is a lower level building block for higher level functions which are more reliable. You want to use <a href=\"https://doc.rust-lang.org/stable/std/io/trait.Write.html#method.write_all\" rel=\"nofollow noreferrer\"><code>write_all()</code></a> instead which will repeatedly call <code>write()</code> until all data is written. So since you're just using <code>write()</code>, only a part of the data is written. When you have very little data, it can usually be written all at once, but once you have more data, the bug becomes noticeable.</p>\n\n<hr>\n\n<p>So what to do instead? Simple: the <code>Builder::new()</code> expects something that implements <code>Write</code> and uses that as destination. But your <code>tar</code> <code>encoder</code> does implement <code>Write</code>. Thus, this should work:</p>\n\n<pre><code>// Create Gzip file\nlet compressed_file = File::create(\"backup.tar.gz\")?;\nlet mut encoder = GzEncoder::new(compressed_file, Compression::Default);\n\n{\n    // Create tar archive and compress files \n    let mut archive = Builder::new(&amp;mut encoder);\n    archive.append_dir_all(\"myfiles\", \"myfiles\")?;\n}\n\n// Finish Gzip file\nencoder.finish()?;\n</code></pre>\n"}], "owner": {"reputation": 91, "user_id": 8706910, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21ab5dabdc4ab080436915b5050ac3cd?s=128&d=identicon&r=PG&f=1", "display_name": "Nicolas Chan", "link": "https://stackoverflow.com/users/8706910/nicolas-chan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 713, "favorite_count": 1, "accepted_answer_id": 46521163, "answer_count": 1, "score": 8, "last_activity_date": 1506963441, "creation_date": 1506928073, "last_edit_date": 1506947753, "question_id": 46520870, "link": "https://stackoverflow.com/questions/46520870/how-to-create-a-gzipped-tar-file-without-using-a-lot-of-ram", "title": "How to create a gzipped tar file without using a lot of RAM?", "body": "<p>I'm trying to create a gzipped tar file without it taking up a lot of RAM. The Bash equivalent of what I want to do is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>tar -cf - -C $INPUT . | gzip -cv - &gt; $OUTPUT\n</code></pre>\n\n<p>I'm using the <a href=\"https://docs.rs/tar/0.4.13/tar/index.html\" rel=\"nofollow noreferrer\">tar</a> and <a href=\"https://docs.rs/flate2/0.2.20/flate2/index.html\" rel=\"nofollow noreferrer\">flate2</a> libraries, which both say they support streaming. I cannot figure out how to stream one into the other. I have tried looking at the <code>Write</code> implementors, but do not see a type of stream that fits my needs.</p>\n\n<p>My current implementation has the desired output (namely a .tar.gz file), but it uses up a lot of RAM, especially when the file size is large. The created file also gives \"tar: Unexpected EOF in archive\" when the input size is large, but is fine with small inputs. This indicates to me that it is not piping the streams as Bash would.</p>\n\n<pre><code>use flate2::write::GzEncoder;\nuse flate2::Compression;\nuse std::fs::File;\nuse tar::Builder;\n\n// Create tar archive\nlet mut archive = Builder::new(Vec::new());\narchive.append_dir_all(\"myfiles\", \"myfiles\")?;\n\n// Gzip tar archive and write to file\nlet compressed_file = File::create(\"backup.tar.gz\")?;\nlet mut encoder = GzEncoder::new(compressed_file, Compression::Default);\nencoder.write(&amp;archive.into_inner()?)?;\nencoder.finish()?;\n</code></pre>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1506965340, "post_id": 46518205, "comment_id": 80015884, "body": "Please read <a href=\"https://stackoverflow.com/questions/how-to-ask\">How to Ask</a> and how to write a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. There is an enormous lack of detail in the question, and that led to an answer which did not fully solve your problem."}], "answers": [{"comments": [{"owner": {"reputation": 3, "user_id": 4502336, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fd4db0facf7b26cfbbd604e7d785a5b7?s=128&d=identicon&r=PG&f=1", "display_name": "Vladimir Tatarchevskiy", "link": "https://stackoverflow.com/users/4502336/vladimir-tatarchevskiy"}, "edited": false, "score": 0, "creation_date": 1506958834, "post_id": 46520416, "comment_id": 80012157, "body": "OK, but now I&#39;ve got this:    Compiling peg-syntax-ext v0.5.2 error[E0554]: #[feature] may not be used on the stable release channel  --&gt; /home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/p&zwnj;&#8203;eg-syntax-ext-0.5.2/&zwnj;&#8203;lib.rs:1:1   | 1 | #![feature(plugin_registrar, quote, rustc_private, box_patterns)]   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&zwnj;&#8203;^^^^^  error: aborting due to previous error  error: Could not compile <code>peg-syntax-ext</code>."}, {"owner": {"user_type": "does_not_exist", "display_name": "user707650"}, "reply_to_user": {"reputation": 3, "user_id": 4502336, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fd4db0facf7b26cfbbd604e7d785a5b7?s=128&d=identicon&r=PG&f=1", "display_name": "Vladimir Tatarchevskiy", "link": "https://stackoverflow.com/users/4502336/vladimir-tatarchevskiy"}, "edited": false, "score": 0, "creation_date": 1506980032, "post_id": 46520416, "comment_id": 80022879, "body": "@VladimirTatarchevskiy &quot; #[feature] may not be used on the stable release channel&quot;: use the nightly compiler. You could have easily searched for that error message though."}, {"owner": {"user_type": "does_not_exist", "display_name": "user707650"}, "reply_to_user": {"reputation": 3, "user_id": 4502336, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fd4db0facf7b26cfbbd604e7d785a5b7?s=128&d=identicon&r=PG&f=1", "display_name": "Vladimir Tatarchevskiy", "link": "https://stackoverflow.com/users/4502336/vladimir-tatarchevskiy"}, "edited": false, "score": 0, "creation_date": 1506980066, "post_id": 46520416, "comment_id": 80022895, "body": "@VladimirTatarchevskiy It may be good to read up a bit more on using the rust compiler, rust attributes and unstable features, as it seems you&#39;re trying to use something without knowing what it does,and that can lead to a lot more complications than just a few questions on StackOverflow."}], "tags": [], "owner": {"user_type": "does_not_exist", "display_name": "user707650"}, "is_accepted": false, "score": 1, "last_activity_date": 1506925446, "creation_date": 1506925446, "answer_id": 46520416, "question_id": 46518205, "link": "https://stackoverflow.com/questions/46518205/cant-find-crate-peg-syntax-ext/46520416#46520416", "title": "Can&#39;t find crate peg_syntax_ext", "body": "<p>Add the <code>peg-syntax-ext</code> create to your <code>Cargo.toml</code> file, as follows:</p>\n\n<pre><code>[dependencies]\npeg-syntax-ext = \"0.5.2\"\n</code></pre>\n"}], "owner": {"reputation": 3, "user_id": 4502336, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fd4db0facf7b26cfbbd604e7d785a5b7?s=128&d=identicon&r=PG&f=1", "display_name": "Vladimir Tatarchevskiy", "link": "https://stackoverflow.com/users/4502336/vladimir-tatarchevskiy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 174, "favorite_count": 0, "answer_count": 1, "score": -4, "last_activity_date": 1506925446, "creation_date": 1506904660, "question_id": 46518205, "link": "https://stackoverflow.com/questions/46518205/cant-find-crate-peg-syntax-ext", "title": "Can&#39;t find crate peg_syntax_ext", "body": "<p>Can't find crate peg_syntax_ext.</p>\n\n<p>This is the beginning of the main.rs:</p>\n\n<pre><code>#![feature(plugin)]\n#![plugin(peg_syntax_ext)]\n</code></pre>\n\n<p>What to do?</p>\n"}, {"tags": ["rust", "constants", "associated-types"], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 5, "last_activity_date": 1506889858, "creation_date": 1506889858, "answer_id": 46516623, "question_id": 46516312, "link": "https://stackoverflow.com/questions/46516312/when-is-it-useful-for-an-associated-constant-to-use-a-lifetime-other-than-stati/46516623#46516623", "title": "When is it useful for an associated constant to use a lifetime other than &#39;static?", "body": "<p>One might consider a constant that is a function:</p>\n\n<pre><code>trait Foo&lt;'a&gt; {\n    const BAR: fn(&amp;Self) -&gt; &amp;'a str;\n}\n\nstruct MyFoo&lt;'a&gt; {\n    x: &amp;'a str,\n}\n\nimpl&lt;'a&gt; Foo&lt;'a&gt; for MyFoo&lt;'a&gt; {\n    const BAR: fn(&amp;Self) -&gt; &amp;'a str = my_bar;\n}\n\nfn my_bar&lt;'a&gt;(a: &amp;MyFoo&lt;'a&gt;) -&gt; &amp;'a str {\n    &amp;a.x\n}\n</code></pre>\n\n<p>Right now, I can't think of how this would be more beneficial than a method.</p>\n"}], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 318, "favorite_count": 0, "accepted_answer_id": 46516623, "answer_count": 1, "score": 7, "last_activity_date": 1506889858, "creation_date": 1506887700, "question_id": 46516312, "link": "https://stackoverflow.com/questions/46516312/when-is-it-useful-for-an-associated-constant-to-use-a-lifetime-other-than-stati", "title": "When is it useful for an associated constant to use a lifetime other than &#39;static?", "body": "<p><a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1623-static.md\" rel=\"noreferrer\">RFC 1623</a>, stabilized in Rust 1.17.0, made it so that we do not have to explicitly specify the <code>'static</code> lifetime in a <code>static</code> or <code>const</code>:</p>\n\n<pre><code>const MY_DEFAULT_NAME: &amp;str = \"Anna\";\n//                      ^ Look, ma! No 'static!\n</code></pre>\n\n<p><a href=\"https://github.com/rust-lang/rfcs/blob/master/text/0195-associated-items.md\" rel=\"noreferrer\">RFC 195</a> defined <em>associated constants</em>, which were stabilized in Rust 1.20.0:</p>\n\n<pre><code>struct A;\n\nimpl A {\n    const B: i32 = 42;\n}\n</code></pre>\n\n<p>When trying to combine these two, an error is raised:</p>\n\n<pre><code>struct A;\n\nimpl A {\n    const MY_DEFAULT_NAME: &amp;str = \"Anna\";\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0106]: missing lifetime specifier\n --&gt; src/main.rs:4:28\n  |\n4 |     const MY_DEFAULT_NAME: &amp;str = \"Anna\";\n  |                            ^ expected lifetime parameter\n</code></pre>\n\n<p>The <a href=\"https://github.com/rust-lang/rust/issues/38831\" rel=\"noreferrer\">related GitHub issue #38831</a> has <a href=\"https://github.com/rust-lang/rust/issues/38831#issuecomment-305864245\" rel=\"noreferrer\">a comment</a>:</p>\n\n<blockquote>\n  <p>We decided against it because, in that case, there might be other\n  lifetimes you would want. For example:</p>\n\n<pre><code>trait Foo&lt;'a&gt; {\n    const T: &amp;'a str;\n}\n</code></pre>\n  \n  <p>that said, revisiting this explanation, it feel a bit weak, since the\n  value of an associated constant would still have to be all consisting\n  of static data. So it seems like <code>'static</code> is a pretty good default if\n  you don't say otherwise.</p>\n</blockquote>\n\n<p>What is an example of an associated constant with a non-<code>'static</code> lifetime? What benefit does providing a non-<code>'static</code> lifetime bring?</p>\n"}, {"tags": ["serialization", "rust", "lifetime", "serde"], "comments": [{"owner": {"reputation": 26541, "user_id": 188535, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/d04ab2422a8f061608f58708de9bb138?s=128&d=identicon&r=PG", "display_name": "detly", "link": "https://stackoverflow.com/users/188535/detly"}, "edited": false, "score": 0, "creation_date": 1604492762, "post_id": 46514290, "comment_id": 114362473, "body": "Arg I just tried to do exactly this."}], "answers": [{"tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": false, "score": 4, "last_activity_date": 1506882159, "last_edit_date": 1506882159, "creation_date": 1506881113, "answer_id": 46515305, "question_id": 46514290, "link": "https://stackoverflow.com/questions/46514290/how-can-we-write-a-generic-function-for-checking-serde-serialization-and-deseria/46515305#46515305", "title": "How can we write a generic function for checking Serde serialization and deserialization?", "body": "<p>The <a href=\"https://stackoverflow.com/a/46515438/1233251\">answer from Francis Gagn\u00e9</a> has shown that we cannot do this efficiently without generic associated types. Establishing deep ownership of the deserialized object is a possible work-around which I describe here.</p>\n\n<p>The third attempt is very close to a flexible solution, but it falls short due to how <a href=\"https://doc.rust-lang.org/stable/std/borrow/trait.ToOwned.html\" rel=\"nofollow noreferrer\"><code>std::borrow::ToOwned</code></a> works. The trait is not suitable for retrieving a deeply owned version of an object. Attempting to use the implementation of ToOwned for <code>&amp;str</code>, for instance, gives you another string slice.</p>\n\n<pre><code>let a: &amp;str = \"hello\";\nlet b: String = (&amp;a).to_owned(); // expected String, got &amp;str\n</code></pre>\n\n<p>Likewise, the <code>Owned</code> type for a struct containing string slices cannot be a struct containing <code>String</code>s. In code:</p>\n\n<pre><code>#[derive(Debug, PartialEq, Serialize, Deserialize)]\nstruct Foo&lt;'a&gt;(&amp;str, i32);\n\n#[derive(Debug, PartialEq, Serialize, Deserialize)]\nstruct FooOwned(String, i32);\n</code></pre>\n\n<p>We cannot impl <code>ToOwned</code> for <code>Foo</code> to provide <code>FooOwned</code> because:</p>\n\n<ul>\n<li>If we derive <code>Clone</code>, the implementation of <code>ToOwned</code> for <code>T: Clone</code> is only applicable to <code>Owned = Self</code>.</li>\n<li>Even with a custom implementation of <code>ToOwned</code>, the trait requires that the owned type can be borrowed into the original type (due to the constraint <code>Owned: Borrow&lt;Self&gt;</code>). That is, we are supposed to be able to retrieve a <code>&amp;Foo(&amp;str, i32)</code> out of a <code>FooOwned</code>, but their internal structure is different, and so this is not attainable.</li>\n</ul>\n\n<p>This means that, in order to follow the third approach, we need a different trait. Let's have a new trait <code>ToDeeplyOwned</code> which turns an object into a fully owned one, with no slices or references involved.</p>\n\n<pre><code>pub trait ToDeeplyOwned {\n    type Owned;\n    fn to_deeply_owned(&amp;self) -&gt; Self::Owned;\n}\n</code></pre>\n\n<p>The intent here is to produce a deep copy out of anything. There doesn't seem to be an easy catch-all implementation, but some tricks are possible. First, we can implement it to all reference types where <code>T: ToDeeplyOwned</code>.</p>\n\n<pre><code>impl&lt;'a, T: ?Sized + ToDeeplyOwned&gt; ToDeeplyOwned for &amp;'a T {\n    type Owned = T::Owned;\n    fn to_deeply_owned(&amp;self) -&gt; Self::Owned {\n        (**self).to_deeply_owned()\n    }\n}\n</code></pre>\n\n<p>At this point we would have to selectively implement it to non-reference types where we know it's ok. I wrote a macro for making this process less verbose, which uses <code>to_owned()</code> internally.</p>\n\n<pre><code>macro_rules! impl_deeply_owned {\n    ($t: ty, $t2: ty) =&gt; { // turn $t into $t2\n        impl ToDeeplyOwned for $t {\n            type Owned = $t2;\n            fn to_deeply_owned(&amp;self) -&gt; Self::Owned {\n                self.to_owned()\n            }\n        }\n    };\n    ($t: ty) =&gt; { // turn $t into itself, self-contained type\n        impl ToDeeplyOwned for $t {\n            type Owned = $t;\n            fn to_deeply_owned(&amp;self) -&gt; Self::Owned {\n                self.to_owned()\n            }\n        }\n    };\n}\n</code></pre>\n\n<p>For the examples in the question to work, we need at least these:</p>\n\n<pre><code>impl_deeply_owned!(i32);\nimpl_deeply_owned!(String);\nimpl_deeply_owned!(Vec&lt;i32&gt;);\nimpl_deeply_owned!(str, String);\n</code></pre>\n\n<p>Once we implement the necessary traits on <code>Foo</code>/<code>FooOwned</code> and adapt <code>serde_check</code> to use the new trait, the code now compiles and runs successfully (<a href=\"https://play.rust-lang.org/?gist=d6cb76ed7d937b73fe54b083bca9ef99&amp;version=stable\" rel=\"nofollow noreferrer\">Playground</a>):</p>\n\n<pre><code>#[derive(Debug, PartialEq, Serialize)]\nstruct Foo&lt;'a&gt;(&amp;'a str, i32);\n\n#[derive(Debug, PartialEq, Clone, Deserialize)]\nstruct FooOwned(String, i32);\n\nimpl&lt;'a&gt; ToDeeplyOwned for Foo&lt;'a&gt; {\n    type Owned = FooOwned;\n\n    fn to_deeply_owned(&amp;self) -&gt; FooOwned {\n        FooOwned(self.0.to_string(), self.1)\n    }\n}\n\nimpl&lt;'a&gt; PartialEq&lt;FooOwned&gt; for Foo&lt;'a&gt; {\n    fn eq(&amp;self, o: &amp;FooOwned) -&gt; bool {\n        self.0 == o.0 &amp;&amp; self.1 == o.1\n    }\n}\n\npub fn check_serde&lt;'a, T: ?Sized&gt;(o: &amp;'a T)\nwhere\n    T: Debug + ToDeeplyOwned + PartialEq&lt;&lt;T as ToDeeplyOwned&gt;::Owned&gt; + Serialize,\n    &lt;T as ToDeeplyOwned&gt;::Owned: Debug + DeserializeOwned,\n{\n    let buf: Vec&lt;u8&gt; = to_vec(&amp;o).unwrap();\n    let o2: T::Owned = from_slice(&amp;buf).unwrap();\n    assert_eq!(o, &amp;o2);\n}\n\n// all of these are ok\ncheck_serde(&amp;5);\ncheck_serde(&amp;vec![1, 2, 5]);\ncheck_serde(&amp;\"five\".to_string());\ncheck_serde(\"wait\");\ncheck_serde(&amp;\"wait\");\ncheck_serde(&amp;Foo(\"There's more!\", 36));\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1612800511, "post_id": 46515438, "comment_id": 116873558, "body": "Might be worth revisiting this answer, now that we supposedly have enough of GATs implemented in nightly for this. Unfortunately, the given code doesn&#39;t work even after a few tweaks. <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=913b9ef8c6878df62f7b85d50b2ec880\" rel=\"nofollow noreferrer\">This</a> was the best I could do so far, it doesn&#39;t compile."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 7, "last_activity_date": 1612825169, "last_edit_date": 1612825169, "creation_date": 1506881909, "answer_id": 46515438, "question_id": 46514290, "link": "https://stackoverflow.com/questions/46514290/how-can-we-write-a-generic-function-for-checking-serde-serialization-and-deseria/46515438#46515438", "title": "How can we write a generic function for checking Serde serialization and deserialization?", "body": "<p>Unfortunately, what you need is a feature that is not yet implemented in Rust: generic associated types.</p>\n<p>Let's look at a different variant of <code>check_serde</code>:</p>\n<pre><code>pub fn check_serde&lt;T&gt;(o: T)\nwhere\n    for&lt;'a&gt; T: Debug + PartialEq&lt;T&gt; + Serialize + Deserialize&lt;'a&gt;,\n{\n    let buf: Vec&lt;u8&gt; = to_vec(&amp;o).unwrap();\n    let o2: T = from_slice(&amp;buf).unwrap();\n    assert_eq!(o, o2);\n}\n\nfn main() {\n    check_serde(&quot;wait&quot;); // [E0279]\n}\n</code></pre>\n<p>The problem here is that <code>o2</code> cannot be of type <code>T</code>: <code>o2</code> refers to <code>buf</code>, which is a local variable, but type parameters cannot be inferred to types constrained by a lifetime that is restricted to the function's body. We'd like for <code>T</code> to be something like <code>&amp;str</code> <em>without</em> a specific lifetime attached to it.</p>\n<p>With generic associated types, this could be solved with something like this (obviously I can't test it, since it's not implemented yet):</p>\n<pre><code>trait SerdeFamily {\n    type Member&lt;'a&gt;: Debug + for&lt;'b&gt; PartialEq&lt;Self::Member&lt;'b&gt;&gt; + Serialize + Deserialize&lt;'a&gt;;\n}\n\nstruct I32Family;\nstruct StrFamily;\n\nimpl SerdeFamily for I32Family {\n    type Member&lt;'a&gt; = i32; // ignoring a parameter is allowed\n}\n\nimpl SerdeFamily for StrFamily {\n    type Member&lt;'a&gt; = &amp;'a str;\n}\n\npub fn check_serde&lt;'a, Family&gt;(o: Family::Member&lt;'a&gt;)\nwhere\n    Family: SerdeFamily,\n{\n    let buf: Vec&lt;u8&gt; = to_vec(&amp;o).unwrap();\n    // `o2` is of type `Family::Member&lt;'b&gt;`\n    // with a lifetime 'b different from 'a\n    let o2: Family::Member = from_slice(&amp;buf).unwrap();\n    assert_eq!(o, o2);\n}\n\nfn main() {\n    check_serde::&lt;I32Family&gt;(5);\n    check_serde::&lt;StrFamily&gt;(&quot;wait&quot;);\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 1211, "user_id": 10051099, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-zEhaK71cFsM/AAAAAAAAAAI/AAAAAAAAAAA/AAnnY7pY3uj2Rs4X15NaJSIsOYxNzX4COQ/mo/photo.jpg?sz=128", "display_name": "Yohei", "link": "https://stackoverflow.com/users/10051099/yohei"}, "is_accepted": false, "score": 1, "last_activity_date": 1611024613, "creation_date": 1611024613, "answer_id": 65784861, "question_id": 46514290, "link": "https://stackoverflow.com/questions/46514290/how-can-we-write-a-generic-function-for-checking-serde-serialization-and-deseria/65784861#65784861", "title": "How can we write a generic function for checking Serde serialization and deserialization?", "body": "<p>Simple (but a little awkward) solution: Provide <code>buf</code> from outside of the function.</p>\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn check_serde&lt;'a, T&gt;(o: &amp;'a T, buf: &amp;'a mut Vec&lt;u8&gt;)\nwhere\n    T: Debug + PartialEq&lt;T&gt; + Serialize + Deserialize&lt;'a&gt;,\n{\n    *buf = to_vec(o).unwrap();\n    let o2: T = from_slice(buf).unwrap();\n    assert_eq!(o, &amp;o2);\n}\n</code></pre>\n<p><code>buf</code> can be reused with <code>Cursor</code></p>\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn check_serde_with_cursor&lt;'a, T&gt;(o: &amp;'a T, buf: &amp;'a mut Vec&lt;u8&gt;)\nwhere\n    T: Debug + PartialEq&lt;T&gt; + Serialize + Deserialize&lt;'a&gt;,\n{\n    buf.clear();\n    let mut cursor = Cursor::new(buf);\n    to_writer(&amp;mut cursor, o).unwrap();\n    let o2: T = from_slice(cursor.into_inner()).unwrap();\n    assert_eq!(o, &amp;o2);\n}\n</code></pre>\n"}], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1122, "favorite_count": 0, "accepted_answer_id": 46515438, "answer_count": 3, "score": 13, "last_activity_date": 1612825169, "creation_date": 1506874329, "last_edit_date": 1506891863, "question_id": 46514290, "link": "https://stackoverflow.com/questions/46514290/how-can-we-write-a-generic-function-for-checking-serde-serialization-and-deseria", "title": "How can we write a generic function for checking Serde serialization and deserialization?", "body": "<p>In a project where custom Serde (1.0) serialization and deserialization methods are involved, I have relied on this test routine to check whether serializing an object and back would yield an equivalent object.</p>\n\n<pre><code>// let o: T = ...;\nlet buf: Vec&lt;u8&gt; = to_vec(&amp;o).unwrap();\nlet o2: T = from_slice(&amp;buf).unwrap();\nassert_eq!(o, o2);\n</code></pre>\n\n<p>Doing this inline works pretty well. My next step towards reusability was to make a function <code>check_serde</code> for this purpose.</p>\n\n<pre><code>pub fn check_serde&lt;T&gt;(o: T)\nwhere\n    T: Debug + PartialEq&lt;T&gt; + Serialize + DeserializeOwned,\n{\n    let buf: Vec&lt;u8&gt; = to_vec(&amp;o).unwrap();\n    let o2: T = from_slice(&amp;buf).unwrap();\n    assert_eq!(o, o2);\n}\n</code></pre>\n\n<p>This works well for owning types, but not for types with lifetime bounds (<a href=\"https://play.rust-lang.org/?gist=3d4c3085d89f325a0ebc521c3c173a7a&amp;version=stable\" rel=\"noreferrer\">Playground</a>):</p>\n\n<pre><code>check_serde(5);\ncheck_serde(vec![1, 2, 5]);\ncheck_serde(\"five\".to_string());\ncheck_serde(\"wait\"); // [E0279]\n</code></pre>\n\n<p>The error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0279]: the requirement `for&lt;'de&gt; 'de : ` is not satisfied (`expected bound lifetime parameter 'de, found concrete lifetime`)\n  --&gt; src/main.rs:24:5\n   |\n24 |     check_serde(\"wait\"); // [E0277]\n   |     ^^^^^^^^^^^\n   |\n   = note: required because of the requirements on the impl of `for&lt;'de&gt; serde::Deserialize&lt;'de&gt;` for `&amp;str`\n   = note: required because of the requirements on the impl of `serde::de::DeserializeOwned` for `&amp;str`\n   = note: required by `check_serde`\n</code></pre>\n\n<p>As I wish to make the function work with these cases (including structs with string slices), I attempted a new version with an explicit object deserialization lifetime:</p>\n\n<pre><code>pub fn check_serde&lt;'a, T&gt;(o: &amp;'a T)\nwhere\n    T: Debug + PartialEq&lt;T&gt; + Serialize + Deserialize&lt;'a&gt;,\n{\n    let buf: Vec&lt;u8&gt; = to_vec(o).unwrap();\n    let o2: T = from_slice(&amp;buf).unwrap();\n    assert_eq!(o, &amp;o2);\n}\n\ncheck_serde(&amp;5);\ncheck_serde(&amp;vec![1, 2, 5]);\ncheck_serde(&amp;\"five\".to_string());\ncheck_serde(&amp;\"wait\"); // [E0405]\n</code></pre>\n\n<p>This implementation leads to another issue, and it won't compile (<a href=\"https://play.rust-lang.org/?gist=0ae370cf4c8ccd2daa57ce3c1c83cd3b&amp;version=stable\" rel=\"noreferrer\">Playground</a>).</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `buf` does not live long enough\n  --&gt; src/main.rs:14:29\n   |\n14 |     let o2: T = from_slice(&amp;buf).unwrap();\n   |                             ^^^ does not live long enough\n15 |     assert_eq!(o, &amp;o2);\n16 | }\n   | - borrowed value only lives until here\n   |\nnote: borrowed value must be valid for the lifetime 'a as defined on the function body at 10:1...\n  --&gt; src/main.rs:10:1\n   |\n10 | / pub fn check_serde&lt;'a, T&gt;(o: &amp;'a T)\n11 | |     where T: Debug + PartialEq&lt;T&gt; + Serialize + Deserialize&lt;'a&gt;\n12 | | {\n13 | |     let buf: Vec&lt;u8&gt; = to_vec(o).unwrap();\n14 | |     let o2: T = from_slice(&amp;buf).unwrap();\n15 | |     assert_eq!(o, &amp;o2);\n16 | | }\n   | |_^\n</code></pre>\n\n<p>I have already expected this one: this version implies that the serialized content (and so the deserialized object) lives as long as the input object, which is not true. The buffer is only meant to live as long as the function's scope.</p>\n\n<p>My third attempt seeks to build owned versions of the original input, thus evading the issue of having a deserialized object with different lifetime boundaries. The <code>ToOwned</code> trait appears to suit this use case.</p>\n\n<pre><code>pub fn check_serde&lt;'a, T: ?Sized&gt;(o: &amp;'a T)\nwhere\n    T: Debug + ToOwned + PartialEq&lt;&lt;T as ToOwned&gt;::Owned&gt; + Serialize,\n    &lt;T as ToOwned&gt;::Owned: Debug + DeserializeOwned,\n{\n    let buf: Vec&lt;u8&gt; = to_vec(&amp;o).unwrap();\n    let o2: T::Owned = from_slice(&amp;buf).unwrap();\n    assert_eq!(o, &amp;o2);\n}\n</code></pre>\n\n<p>This makes the function work for plain string slices now, but not for composite objects containing them (<a href=\"https://play.rust-lang.org/?gist=f078f918304eb95e8ab7833800e8eadd&amp;version=stable\" rel=\"noreferrer\">Playground</a>):</p>\n\n<pre><code>check_serde(&amp;5);\ncheck_serde(&amp;vec![1, 2, 5]);\ncheck_serde(&amp;\"five\".to_string());\ncheck_serde(\"wait\");\ncheck_serde(&amp;(\"There's more!\", 36)); // [E0279]\n</code></pre>\n\n<p>Again, we stumble upon the same error kind as the first version:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0279]: the requirement `for&lt;'de&gt; 'de : ` is not satisfied (`expected bound lifetime parameter 'de, found concrete lifetime`)\n  --&gt; src/main.rs:25:5\n   |\n25 |     check_serde(&amp;(\"There's more!\", 36)); // [E0279]\n   |     ^^^^^^^^^^^\n   |\n   = note: required because of the requirements on the impl of `for&lt;'de&gt; serde::Deserialize&lt;'de&gt;` for `&amp;str`\n   = note: required because of the requirements on the impl of `for&lt;'de&gt; serde::Deserialize&lt;'de&gt;` for `(&amp;str, {integer})`\n   = note: required because of the requirements on the impl of `serde::de::DeserializeOwned` for `(&amp;str, {integer})`\n   = note: required by `check_serde`\n</code></pre>\n\n<p>Granted, I'm at a loss. How can we build a generic function that, using Serde, serializes an object and deserializes it back into a new object? In particular, can this function be made in Rust (stable or nightly), and if so, what adjustments to my implementation are missing?</p>\n"}, {"tags": ["sorting", "vector", "rust"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1506861838, "post_id": 46512227, "comment_id": 79979082, "body": "There are quite a few different parts of your problem. You apparently already found out about <code>sort_by()</code>: it lets you pass a custom comparator to do comparisons between elements. But then you have to parse a string specifying how the vector should be sorted, then you have to use this to do the actual sorting. Since there are so many things, this question is not focused enough. So please tell us: what exactly is your problem now?"}, {"owner": {"reputation": 1210, "user_id": 1786723, "user_type": "registered", "accept_rate": 36, "profile_image": "https://i.stack.imgur.com/iYxxc.jpg?s=128&g=1", "display_name": "ZeroTek", "link": "https://stackoverflow.com/users/1786723/zerotek"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1506867084, "post_id": 46512227, "comment_id": 79980557, "body": "Parsing the String is no Problem, thought about splitting it into a vec of strings and proccess each individually. The Problem is the second part: dynamically generate the compare function. The sort_string might contain any or none Attribute to sort with in decreasing priority. The order of these is dynamic as well. So the compare Funktion needs to be created dynamically and i dont now how to do this. Maybe there is another way without using build in sort methods?"}], "answers": [{"comments": [{"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1506882453, "post_id": 46514082, "comment_id": 79985146, "body": "Nice answer. I didn&#39;t know about <code>Ordering::then_width</code>, and I like the tie-in with <code>Iterator::fold</code>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1506873023, "creation_date": 1506873023, "answer_id": 46514082, "question_id": 46512227, "link": "https://stackoverflow.com/questions/46512227/sort-a-vector-with-a-comparator-which-changes-its-behavior-dynamically/46514082#46514082", "title": "Sort a vector with a comparator which changes its behavior dynamically", "body": "<blockquote>\n  <p>How do I dynamically generate that function</p>\n</blockquote>\n\n<p>You don't. You have a specific closure that has dynamic behavior inside of it.</p>\n\n<p>Here, we have a list of sorts to apply. When we need to compare two items, we iterate through the list. We use <a href=\"https://doc.rust-lang.org/std/cmp/enum.Ordering.html#method.then_with\" rel=\"noreferrer\"><code>Ordering::then_with</code></a> to only apply the comparison when the previous comparison was <code>Equal</code>:</p>\n\n<pre><code>use std::cmp::Ordering;\n\n#[derive(Debug, Copy, Clone)]\nenum Field {\n    Artist,\n    Title,\n    Date,\n}\n\nstruct TheStruct {\n    artist: String,\n    title: String,\n    date: String,\n}\n\nfn main() {\n    let mut items: Vec&lt;TheStruct&gt; = vec![];\n\n    use Field::*;\n    let orders = vec![Artist, Title];\n\n    items.sort_by(|a, b| {\n        orders.iter().fold(Ordering::Equal, |acc, &amp;field| {\n            acc.then_with(|| {\n                match field {\n                    Artist =&gt; a.artist.cmp(&amp;b.artist),\n                    Title =&gt; a.title.cmp(&amp;b.title),\n                    Date =&gt; a.date.cmp(&amp;b.date),\n                }\n            })\n        })\n    })\n}\n</code></pre>\n\n<p>I used an enum for the fields because I didn't want to deal with what to do when one of the sorts is an unknown field.</p>\n"}], "owner": {"reputation": 1210, "user_id": 1786723, "user_type": "registered", "accept_rate": 36, "profile_image": "https://i.stack.imgur.com/iYxxc.jpg?s=128&g=1", "display_name": "ZeroTek", "link": "https://stackoverflow.com/users/1786723/zerotek"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 910, "favorite_count": 0, "accepted_answer_id": 46514082, "answer_count": 1, "score": 0, "last_activity_date": 1506873023, "creation_date": 1506859578, "last_edit_date": 1506872330, "question_id": 46512227, "link": "https://stackoverflow.com/questions/46512227/sort-a-vector-with-a-comparator-which-changes-its-behavior-dynamically", "title": "Sort a vector with a comparator which changes its behavior dynamically", "body": "<p>I have a vector of a custom struct and a list of attributes to use for ordering that vector in descending priority. For example: </p>\n\n<pre><code>struct TheStruct {\n    artist: String,\n    title: String,\n    date: String,\n}\n\nlet order_vec: Vec&lt;String&gt; = vec![\"artist\".to_string(),\"title\".to_string(),\"date\".to_string()];\nlet item_vec: Vec&lt;TheStruct&gt; = Vec::new();\n</code></pre>\n\n<p>I want the vector to be ordered as given by <code>order_vec</code>. In this example, it should first be ordered by the artists name, when this is equal it should be ordered by the title. I do not want to hard-code this ordering as <code>order_vec</code> changes dynamically.</p>\n\n<p>I found <code>Vec::sort_by</code> which takes a compare function. How do I dynamically generate that function? Is there a way to do this without <code>sort_by</code>?</p>\n"}, {"tags": ["date", "time", "rust", "seconds", "rust-chrono"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 2, "creation_date": 1506857329, "post_id": 46511792, "comment_id": 79977895, "body": "The seconds from when? And have you really read the documentation? Either <a href=\"https://docs.rs/chrono/0.4.0/chrono/struct.DateTime.html#method.timestamp\" rel=\"nofollow noreferrer\"><code>timestamp</code></a> or <a href=\"https://docs.rs/chrono/0.4.0/chrono/trait.Timelike.html#tymethod.second\" rel=\"nofollow noreferrer\"><code>second</code></a> look like they could be your answer."}, {"owner": {"reputation": 560, "user_id": 8551315, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NZw6F.jpg?s=128&g=1", "display_name": "CFV", "link": "https://stackoverflow.com/users/8551315/cfv"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1506866352, "post_id": 46511792, "comment_id": 79980332, "body": "The seconds from the current date."}, {"owner": {"reputation": 560, "user_id": 8551315, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NZw6F.jpg?s=128&g=1", "display_name": "CFV", "link": "https://stackoverflow.com/users/8551315/cfv"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1506866591, "post_id": 46511792, "comment_id": 79980409, "body": "Now timestamp is working! I have forgotten to use the brackets! Thank you!"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1506866847, "creation_date": 1506866847, "answer_id": 46513189, "question_id": 46511792, "link": "https://stackoverflow.com/questions/46511792/how-can-i-use-the-chrono-library-to-get-seconds/46513189#46513189", "title": "How can I use the Chrono library to get seconds?", "body": "<p>Use <a href=\"https://docs.rs/chrono/0.4.0/chrono/trait.Timelike.html#tymethod.second\" rel=\"nofollow noreferrer\"><code>Timelike::second</code></a>:</p>\n\n<pre><code>extern crate chrono;\n\nuse chrono::prelude::*;\n\nfn main() {\n    let local: DateTime&lt;Local&gt; = Local::now();\n    println!(\"{}\", local.second()); \n} \n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 560, "user_id": 8551315, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NZw6F.jpg?s=128&g=1", "display_name": "CFV", "link": "https://stackoverflow.com/users/8551315/cfv"}, "is_accepted": true, "score": 1, "last_activity_date": 1506867800, "last_edit_date": 1506867800, "creation_date": 1506866884, "answer_id": 46513198, "question_id": 46511792, "link": "https://stackoverflow.com/questions/46511792/how-can-i-use-the-chrono-library-to-get-seconds/46513198#46513198", "title": "How can I use the Chrono library to get seconds?", "body": "<p>I solved the problem using the function <code>timestamp</code> as written in the docs.\nIt didn't work before because I forgot to use the brackets to call <code>timestamp</code>.</p>\n\n<pre><code>extern crate chrono;\n\nuse chrono::prelude::*;\n\nfn main() {\n    let local: DateTime&lt;Local&gt; = Local::now();\n    println!(\"{}\", local.timestamp()); // I forgot the brackets after timestamp\n}\n</code></pre>\n\n<p>Thanks to <a href=\"https://stackoverflow.com/questions/46511792/how-can-i-use-the-chrono-library-to-get-seconds#comment79977895_46511792\">mcarton</a>.</p>\n"}], "owner": {"reputation": 560, "user_id": 8551315, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NZw6F.jpg?s=128&g=1", "display_name": "CFV", "link": "https://stackoverflow.com/users/8551315/cfv"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 766, "favorite_count": 0, "accepted_answer_id": 46513198, "answer_count": 2, "score": -4, "last_activity_date": 1506867800, "creation_date": 1506856068, "last_edit_date": 1506862384, "question_id": 46511792, "link": "https://stackoverflow.com/questions/46511792/how-can-i-use-the-chrono-library-to-get-seconds", "title": "How can I use the Chrono library to get seconds?", "body": "<p>I can get the date, the hours, minutes, seconds and nanoseconds in the date format, but I can't get seconds as a floating point or integer number.</p>\n\n<pre><code>extern crate chrono;\nuse chrono::prelude::*;\nfn main() {\n    let local: DateTime&lt;Local&gt; = Local::now();\n    println!(\"{}\", local); \n} \n</code></pre>\n\n<p>I have already read the docs.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 1, "creation_date": 1506936032, "post_id": 46509583, "comment_id": 79999436, "body": "The code in this question uses a closure, which means that some of the solutions from <a href=\"https://stackoverflow.com/q/27535289/1600898\">the other question</a> don&#39;t apply here - for example, it is impossible return the equivalent of a newtype embedding <code>str::Split&lt;&#39;a, char&gt;</code> or a type alias. The answer to the other question also doesn&#39;t mention the possibility of implementing the iterator manually, which is probably the only reasonable thing to do for the OP here (until <code>impl Trait</code> stabilizes). Nominating for reopen."}], "answers": [{"comments": [{"owner": {"reputation": 1540, "user_id": 2606171, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/F4ncy.png?s=128&g=1", "display_name": "belst", "link": "https://stackoverflow.com/users/2606171/belst"}, "edited": false, "score": 2, "creation_date": 1506843882, "post_id": 46509606, "comment_id": 79974624, "body": "for stable you can use a Trait object: <code>Box&lt;Iterator&lt;Item=(i32, u32)&gt;&gt;</code>"}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 2, "last_activity_date": 1506836896, "creation_date": 1506836896, "answer_id": 46509606, "question_id": 46509583, "link": "https://stackoverflow.com/questions/46509583/what-return-type-should-i-use-for-an-iterable-expression/46509606#46509606", "title": "What return type should I use for an iterable expression?", "body": "<p>If you're OK with using a nightly compiler, you can use the unstable <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1522-conservative-impl-trait.md\" rel=\"nofollow noreferrer\"><code>impl Trait</code> syntax</a>:</p>\n\n<pre><code>#![feature(conservative_impl_trait)]\n\npub fn grid_coords() -&gt; impl Iterator&lt;Item = (i32, i32)&gt; {\n    (0..SIZE).flat_map(|y| (0..SIZE).map(move |x| (x, y)))\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 2190, "user_id": 318125, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cc5f799b5cdf41a69a7c8e32656498a8?s=128&d=identicon&r=PG", "display_name": "Kazetsukai", "link": "https://stackoverflow.com/users/318125/kazetsukai"}, "edited": false, "score": 0, "creation_date": 1506891895, "post_id": 46511626, "comment_id": 79987940, "body": "Thanks! I appreciate the discussion of efficiency as with the current approach it is about half of my execution time."}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "reply_to_user": {"reputation": 2190, "user_id": 318125, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cc5f799b5cdf41a69a7c8e32656498a8?s=128&d=identicon&r=PG", "display_name": "Kazetsukai", "link": "https://stackoverflow.com/users/318125/kazetsukai"}, "edited": false, "score": 0, "creation_date": 1506892396, "post_id": 46511626, "comment_id": 79988065, "body": "@Kazetsukai You&#39;re welcome. And - ouch!"}], "tags": [], "owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "is_accepted": true, "score": 2, "last_activity_date": 1506892453, "last_edit_date": 1506892453, "creation_date": 1506854784, "answer_id": 46511626, "question_id": 46509583, "link": "https://stackoverflow.com/questions/46509583/what-return-type-should-i-use-for-an-iterable-expression/46511626#46511626", "title": "What return type should I use for an iterable expression?", "body": "<p>In current (stable) Rust the easiest way to return a \"conceptual\" iterator is to return a boxed trait object implementing <code>Iterator</code>:</p>\n\n<pre><code>pub fn grid_coords() -&gt; Box&lt;Iterator&lt;Item=(i32, i32)&gt;&gt; {\n    let real_iter = (0..SIZE).flat_map(|y| (0..SIZE).map(move |x| (x, y)));\n    Box::new(real_iter)\n}\n</code></pre>\n\n<p>Using a box effectively <a href=\"http://davekilian.com/cpp-type-erasure.html\" rel=\"nofollow noreferrer\">erases the type</a> of the concrete iterator object with the upside that the caller doesn't need to know about the fact that it's implemented using <code>flat_map</code>. If you later switch <code>grid_coords</code> to use a different iteration primitive, such as <a href=\"https://doc.rust-lang.org/nightly/std/ops/trait.Generator.html\" rel=\"nofollow noreferrer\"><code>yield</code></a> once it stabilizes, the signature the function will not change and you are guaranteed not to break its callers. You could even go one step further and completely hide the box from the caller:</p>\n\n<pre><code>pub struct GridCoordIter {\n    inner: Box&lt;Iterator&lt;Item=(i32, i32)&gt;&gt;\n}\n\nimpl Iterator for GridCoordIter {\n    type Item = (i32, i32);\n    fn next(&amp;mut self) -&gt; Option&lt;(i32, i32)&gt; {\n        self.inner.next()\n    }\n}\n\npub fn grid_coords() -&gt; GridCoordIter {\n    let real_iter = (0..SIZE).flat_map(|y| (0..SIZE).map(move |x| (x, y)));\n    GridCoordIter { inner: Box::new(real_iter) }\n}\n</code></pre>\n\n<p>The downside of the boxed return is that it requires a small heap allocation for each call to <code>grid_coords</code>, and that each call to <code>next()</code> goes through a vtable-style indirection, neither of which is optimized away by current Rust. Whether this is a problem in practice depends on your usage, but if <code>grid_coords()</code> is a very basic function that might be called millions of times, it is not to be dismissed.</p>\n\n<p>It is possible to eliminate the allocation and the indirection by using a different implementation of <code>GridCoordIter</code>. Unfortunately it is not possible to make the <code>inner</code> field a <code>FlatMap</code> value and retain the current implementation of <code>grid_coords</code>. The inner <code>FlatMap</code> would need to refer to the function's type, and the types of closures used by <code>grid_coords</code> are anonymous. This can be worked around by rewriting closures as callable structs, but at that point the convenience of using <code>flat_map</code> and <code>map</code> in the first place is lost, and it is easier to just implement <code>GridCoordIter::next</code> with the required logic:</p>\n\n<pre><code>pub struct GridCoordIter {\n    i: i32,\n    j: i32,\n}\n\nimpl Iterator for GridCoordIter {\n    type Item = (i32, i32);\n\n    fn next(&amp;mut self) -&gt; Option&lt;(i32, i32)&gt; {\n        if self.j == SIZE {\n            return None;\n        }\n        let coord = (self.i, self.j);\n        self.i += 1;\n        if self.i == SIZE {\n            self.i = 0;\n            self.j += 1;\n        }\n        Some(coord)\n    }\n}\n\npub fn grid_coords() -&gt; GridCoordIter {\n    GridCoordIter { i: 0, j: 0 }\n}\n</code></pre>\n\n<p>Achieving both efficiency and brevity requires the <code>impl Trait</code> feature from unstable Rust, as shown in <a href=\"https://stackoverflow.com/a/46509606/1600898\">Francis's answer</a>. It allows the function to directly return a value of an anonymous type that the caller doesn't need to know anything about, except that it implements a particular trait.</p>\n"}], "owner": {"reputation": 2190, "user_id": 318125, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cc5f799b5cdf41a69a7c8e32656498a8?s=128&d=identicon&r=PG", "display_name": "Kazetsukai", "link": "https://stackoverflow.com/users/318125/kazetsukai"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 180, "favorite_count": 0, "closed_date": 1506862422, "accepted_answer_id": 46511626, "answer_count": 2, "score": 3, "last_activity_date": 1506892453, "creation_date": 1506836611, "question_id": 46509583, "link": "https://stackoverflow.com/questions/46509583/what-return-type-should-i-use-for-an-iterable-expression", "closed_reason": "Duplicate", "title": "What return type should I use for an iterable expression?", "body": "<p>I have a function that returns something that I feel should be iterable, but so far I have been collecting it and returning it as a vector.</p>\n\n<pre><code>pub fn grid_coords() -&gt; Vec&lt;(i32, i32)&gt; {\n    (0..SIZE).flat_map(|y| (0..SIZE).map(move |x| (x, y))).collect()\n}\n</code></pre>\n\n<p>I assume that this will iterate before returning, and then the code calling this will just have to iterate again.</p>\n\n<p>I tried removing the <code>.collect()</code> and letting the compiler guide me and ended up with something looking like <code>FlatMap&lt;Range&lt;i32&gt;, Map&lt;Range&lt;i32&gt;, Fn&gt;, Fn&gt;</code>, is there a less ugly looking type I could use?</p>\n"}, {"tags": ["stream", "rust", "rust-tokio"], "answers": [{"tags": [], "owner": {"reputation": 549, "user_id": 4275937, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/49b88e050dd8cc0e4dbbe301ccecd40d?s=128&d=identicon&r=PG&f=1", "display_name": "real", "link": "https://stackoverflow.com/users/4275937/real"}, "is_accepted": true, "score": 1, "last_activity_date": 1506783723, "creation_date": 1506783723, "answer_id": 46503946, "question_id": 46502627, "link": "https://stackoverflow.com/questions/46502627/delaying-a-tokio-stream/46503946#46503946", "title": "Delaying a Tokio Stream", "body": "<p>As I suspected, the problem was was the manipulation (using <code>and_then</code>) of the newly created <code>Timeout</code>. We either need to first unwrap the result from the call to <code>reactor::Timeout::new</code>, which could become messy if done manually, or use <code>into_future</code>, to convert the result into a <code>Future</code>, and then work with it using <code>Future</code> combinators.</p>\n\n<p>Code for solving the problem:</p>\n\n<pre><code>extern crate tokio_core;\nextern crate futures;\n\nuse std::time::Duration;\n\nuse futures::{Future, Stream, stream, Sink, IntoFuture};\nuse self::futures::sync::{mpsc};\nuse tokio_core::reactor;\n\nconst NUM_ITEMS: u32 = 8;\n\nfn main() {\n    let mut core = reactor::Core::new().unwrap();\n    let handle = core.handle();\n    let chandle = handle.clone();\n\n    let (sink, stream) = mpsc::channel::&lt;u32&gt;(0);\n\n    let send_stream = stream::iter_ok(0 .. NUM_ITEMS)\n        .and_then(move |i: u32| {\n                  let cchandle = chandle.clone();\n                  println!(\"Creating a timeout object...\");\n                  reactor::Timeout::new(Duration::new(1,0), &amp;cchandle)\n                      .into_future()\n                      .and_then(move |timeout| timeout.and_then(move |_| Ok(i)))\n                      .map_err(|_| ())\n        });\n\n    let sink = sink.sink_map_err(|_| ());\n    handle.spawn(sink.send_all(send_stream).and_then(|_| Ok(())));\n\n    let mut incoming_items = Vec::new();\n    {\n        let keep_messages = stream.for_each(|item| {\n            incoming_items.push(item);\n            println!(\"item = {}\", item);\n            Ok(())\n        });\n\n        core.run(keep_messages).unwrap();\n    }\n    assert_eq!(incoming_items, (0 .. NUM_ITEMS).collect::&lt;Vec&lt;u32&gt;&gt;());\n}\n</code></pre>\n\n<p>Note that two <code>and_then</code> are being used. The first one unwraps the <code>Result</code> obtained from calling <code>reactor::Timeout::new</code>. The second one actually waits for the <code>Timeout</code> to fire.</p>\n"}], "owner": {"reputation": 549, "user_id": 4275937, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/49b88e050dd8cc0e4dbbe301ccecd40d?s=128&d=identicon&r=PG&f=1", "display_name": "real", "link": "https://stackoverflow.com/users/4275937/real"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 967, "favorite_count": 0, "accepted_answer_id": 46503946, "answer_count": 1, "score": 3, "last_activity_date": 1506783723, "creation_date": 1506773907, "last_edit_date": 1506775342, "question_id": 46502627, "link": "https://stackoverflow.com/questions/46502627/delaying-a-tokio-stream", "title": "Delaying a Tokio Stream", "body": "<p>Given a <code>Stream</code>, I want to create a new <code>Stream</code> where elements are yielded with a time delay between them.</p>\n\n<p>I tried to write code that does that using <code>tokio_core::reactor::Timeout</code> and  the <code>and_then</code> combinator for <code>Stream</code>s, but the delay doesn't work: I get all the elements immediately, without a delay.</p>\n\n<p>Here is a self contained example (<a href=\"https://play.rust-lang.org/?gist=d54ff4af1692598fc6d93e82a836537e&amp;version=stable\" rel=\"nofollow noreferrer\">playground</a>):</p>\n\n<pre><code>extern crate tokio_core;\nextern crate futures;\n\nuse std::time::Duration;\n\nuse futures::{Future, Stream, stream, Sink};\nuse self::futures::sync::{mpsc};\nuse tokio_core::reactor;\n\nconst NUM_ITEMS: u32 = 8;\n\nfn main() {\n    let mut core = reactor::Core::new().unwrap();\n    let handle = core.handle();\n    let chandle = handle.clone();\n\n    let (sink, stream) = mpsc::channel::&lt;u32&gt;(0);\n\n    let send_stream = stream::iter_ok(0 .. NUM_ITEMS)\n        .and_then(move |i: u32| {\n                  let cchandle = chandle.clone();\n                  println!(\"Creating a timeout object...\");\n                  reactor::Timeout::new(Duration::new(1,0), &amp;cchandle)\n                      .map_err(|_| ())\n                      .and_then(|_| Ok(i))\n        });\n\n    let sink = sink.sink_map_err(|_| ());\n    handle.spawn(sink.send_all(send_stream).and_then(|_| Ok(())));\n\n    let mut incoming_items = Vec::new();\n    {\n        let keep_messages = stream.for_each(|item| {\n            incoming_items.push(item);\n            println!(\"item = {}\", item);\n            Ok(())\n        });\n\n        core.run(keep_messages).unwrap();\n    }\n    assert_eq!(incoming_items, (0 .. NUM_ITEMS).collect::&lt;Vec&lt;u32&gt;&gt;());\n}\n</code></pre>\n\n<p>For completeness, this is the output I get:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Creating a timeout object...\nCreating a timeout object...\nitem = 0\nCreating a timeout object...\nitem = 1\nCreating a timeout object...\nitem = 2\nCreating a timeout object...\nitem = 3\nCreating a timeout object...\nitem = 4\nCreating a timeout object...\nitem = 5\nCreating a timeout object...\nitem = 6\nitem = 7\n</code></pre>\n\n<p>I suspect that the problem is somewhere in these lines:</p>\n\n<pre><code>reactor::Timeout::new(Duration::new(1,0), &amp;cchandle)\n    .map_err(|_| ())\n    .and_then(|_| Ok(i))\n</code></pre>\n\n<p>It is possible that I don't really wait on the returned <code>Timeout</code> object, though I'm not sure how to solve it.</p>\n"}, {"tags": ["tcp", "rust", "tcpclient"], "answers": [{"comments": [{"owner": {"reputation": 2489, "user_id": 1923869, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/zLRld.jpg?s=128&g=1", "display_name": "xhallix", "link": "https://stackoverflow.com/users/1923869/xhallix"}, "edited": false, "score": 0, "creation_date": 1506759703, "post_id": 46500887, "comment_id": 79956060, "body": "Thank you for your helpful answer at first.  The problem I have - is the same as with the read_to_end. It really takes up to 3 seconds to fill the buffer, where as the python script runs in a matter of milliseconds. Since rust is a fast language I believe I miss something"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 2489, "user_id": 1923869, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/zLRld.jpg?s=128&g=1", "display_name": "xhallix", "link": "https://stackoverflow.com/users/1923869/xhallix"}, "edited": false, "score": 0, "creation_date": 1506760185, "post_id": 46500887, "comment_id": 79956176, "body": "@xhallix Strange. In that case, you have to add more information to your question. Your <code>TcpBuilder</code> is not from the standard library, so where is it from?"}, {"owner": {"reputation": 2489, "user_id": 1923869, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/zLRld.jpg?s=128&g=1", "display_name": "xhallix", "link": "https://stackoverflow.com/users/1923869/xhallix"}, "edited": false, "score": 0, "creation_date": 1506760323, "post_id": 46500887, "comment_id": 79956207, "body": "It is from <a href=\"https://github.com/rust-lang-nursery/net2-rs\" rel=\"nofollow noreferrer\">github.com/rust-lang-nursery/net2-rs</a>. But I have the same issue with the standard TcpStream.  The tcpBuilder actually gives me the <code>std::net::TcpStream</code>  btw. if you&#39;d like we can continue this chat on <code>gitter</code>or else where - to prevent spamming this thread"}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 7, "last_activity_date": 1582661804, "last_edit_date": 1582661804, "creation_date": 1506759179, "answer_id": 46500887, "question_id": 46500747, "link": "https://stackoverflow.com/questions/46500747/reading-from-tcpstream-results-in-empty-buffer/46500887#46500887", "title": "Reading from TcpStream results in empty buffer", "body": "<p>The two methods you tried don't work for different reasons:</p>\n\n<ul>\n<li><p><a href=\"https://doc.rust-lang.org/stable/std/io/trait.Read.html#tymethod.read\" rel=\"nofollow noreferrer\"><code>read()</code></a>: \"does not provide any guarantees about whether it blocks waiting for data\". In general, <code>read()</code> is unreliable from a users perspective and should only be used as a building block for higher level functions, like <code>read_to_end()</code>.</p>\n\n<p>But maybe more importantly, you have a bug in your code: you create your vector via <code>with_capacity()</code> which reserves memory internally, but doesn't change the length of the vector. It is still empty! When you now slice it like <code>&amp;buf</code>, you pass an empty slice to <code>read()</code>, thus <code>read()</code> cannot read any actual data. To fix that, the elements of your vector need to be initialized: <code>let mut buf = vec![0; 1024]</code> or something like that.</p></li>\n<li><p><a href=\"https://doc.rust-lang.org/stable/std/io/trait.Read.html#method.read_to_end\" rel=\"nofollow noreferrer\"><code>read_to_end()</code></a>: calls <code>read()</code> repeatedly until EOF is encountered. This doesn't really make sense in most TCP stream situations.</p></li>\n</ul>\n\n<p>So what should you use instead? In your Python code you read a specific number of bytes into a buffer. You can do that in Rust, too: <a href=\"https://doc.rust-lang.org/stable/std/io/trait.Read.html#method.read_exact\" rel=\"nofollow noreferrer\"><code>read_exact()</code></a>. It works like this:</p>\n\n<pre><code>const BUFFER_SIZE: usize = 1024;\n\nlet mut stream = ...;\nlet mut buf = [0; BUFFER_SIZE];\nstream.read_exact(&amp;mut buf);\n\nprintln!(\"{:?}\", buf);\n</code></pre>\n\n<p>You could also use <a href=\"https://doc.rust-lang.org/stable/std/io/trait.Read.html#method.take\" rel=\"nofollow noreferrer\"><code>take()</code></a>. That way you can use <code>read_to_end()</code>:</p>\n\n<pre><code>const BUFFER_SIZE: usize = 1024;\n\nlet mut stream = ...;\nlet mut buf = Vec::with_capacity(BUFFER_SIZE);\nstream.take(BUFFER_SIZE).read_to_end(&amp;mut buf);\n\nprintln!(\"{:?}\", buf);\n</code></pre>\n\n<p>If you want to use the stream multiple times, you probably want to use <a href=\"https://doc.rust-lang.org/stable/std/io/trait.Read.html#method.by_ref\" rel=\"nofollow noreferrer\"><code>by_ref()</code></a> before calling <code>take()</code>.</p>\n\n<p>The two code snippets are not equivalent though! Please read the documentation for more details. </p>\n"}], "owner": {"reputation": 2489, "user_id": 1923869, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/zLRld.jpg?s=128&g=1", "display_name": "xhallix", "link": "https://stackoverflow.com/users/1923869/xhallix"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2047, "favorite_count": 0, "accepted_answer_id": 46500887, "answer_count": 1, "score": 4, "last_activity_date": 1582661804, "creation_date": 1506758029, "last_edit_date": 1506775205, "question_id": 46500747, "link": "https://stackoverflow.com/questions/46500747/reading-from-tcpstream-results-in-empty-buffer", "title": "Reading from TcpStream results in empty buffer", "body": "<p>I want to read data from a TCP stream but it results in an empty <code>Vec</code>:</p>\n\n<pre><code>extern crate net2;\n\nuse net2::TcpBuilder;\nuse std::io::Read;\nuse std::io::Write;\nuse std::io::BufReader;\n\nlet tcp = TcpBuilder::new_v4().unwrap();\nlet mut stream = tcp.connect(\"127.0.0.1:3306\").unwrap();\nlet mut buf = Vec::with_capacity(1024);\nstream.read(&amp;mut buf);    \nprintln!(\"{:?}\", buf); // prints []\n</code></pre>\n\n<p>When I use <code>stream.read_to_end</code> the buffer is filled but this takes way too long.</p>\n\n<p>In Python I can do something like </p>\n\n<pre class=\"lang-py prettyprint-override\"><code>import socket \n\nTCP_IP = '127.0.0.1'\nTCP_PORT = 3306\nBUFFER_SIZE = 1024\n\ns = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\ns.connect((TCP_IP, TCP_PORT))\n#s.send(MESSAGE)\ndata = s.recv(BUFFER_SIZE)\ns.close() \nprint \"received data:\", data\n</code></pre>\n\n<p>How can I achieve this in Rust?</p>\n"}, {"tags": ["math", "rust", "documentation"], "answers": [{"comments": [{"owner": {"reputation": 2860, "user_id": 1013173, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/072162a90979f670d87c36ae8818ea13?s=128&d=identicon&r=PG", "display_name": "Sergey Potapov", "link": "https://stackoverflow.com/users/1013173/sergey-potapov"}, "edited": false, "score": 0, "creation_date": 1506711257, "post_id": 46495210, "comment_id": 79944981, "body": "Thanks! Looks like Latex support was moved out: <a href=\"https://github.com/rust-lang/rust/pull/17390#issuecomment-61195381\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/pull/17390#issuecomment-61195381</a>. As a workaround I can use also MathML, but not all browsers support it :("}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 6, "last_activity_date": 1506711175, "last_edit_date": 1506711175, "creation_date": 1506710779, "answer_id": 46495210, "question_id": 46495063, "link": "https://stackoverflow.com/questions/46495063/how-to-write-math-formulas-for-rust-documentation/46495210#46495210", "title": "How to write math formulas for Rust documentation?", "body": "<blockquote>\n  <p>Looks like there is basic support of LaTeX</p>\n</blockquote>\n\n<p>Not quite. There is support for <em>Markdown</em>, not LaTeX. Stack Overflow also supports Markdown, but a different flavor. For example: <code>a^b</code> => a^b, but <code>a&lt;sup&gt;b&lt;/sup&gt;</code> => a<sup>b</sup>. Markdown doesn't have support for arbitrary LaTeX. Indeed, your example:</p>\n\n<pre><code>/// Hi\n///\n/// $ 2^8 $\npub fn what() {\n\n}\n</code></pre>\n\n<p>Generates something that still contains the <code>$</code>:</p>\n\n<p><a href=\"https://i.stack.imgur.com/yHGK2.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/yHGK2.png\" alt=\"enter image description here\"></a></p>\n\n<p>The next best thing might be to generate pre-rendered images and then include them in your documentation instead, but <a href=\"https://github.com/rust-lang/rust/issues/32104\" rel=\"noreferrer\">an open issue</a> seems to indicate that this isn't currently possible unless you are hosting the images somewhere else.</p>\n\n<p>There was even <a href=\"https://github.com/rust-lang/rust/issues/16300\" rel=\"noreferrer\">an issue to support MathJax in rustdoc</a>, but that was closed.</p>\n"}, {"tags": [], "owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "is_accepted": false, "score": 2, "last_activity_date": 1506963179, "creation_date": 1506963179, "answer_id": 46530088, "question_id": 46495063, "link": "https://stackoverflow.com/questions/46495063/how-to-write-math-formulas-for-rust-documentation/46530088#46530088", "title": "How to write math formulas for Rust documentation?", "body": "<p>You can make it work with MathJax and <code>rustdoc</code>'s <code>--html-in-header</code> to pass in a link to the script tag it needs. This is very hacky, and won't work on docs.rs, but it can work if you host your own docs.</p>\n"}, {"comments": [{"owner": {"reputation": 1447, "user_id": 4301453, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/dTvct.png?s=128&g=1", "display_name": "Jonathan Woollett-light", "link": "https://stackoverflow.com/users/4301453/jonathan-woollett-light"}, "edited": false, "score": 0, "creation_date": 1588766430, "post_id": 54573800, "comment_id": 109023474, "body": "When executing <code>RUSTDOCFLAGS</code> command on the command line I get <code>&#39;RUSTDOCFLAGS&#39; is not recognized as an internal or external command</code>, any idea why?"}, {"owner": {"reputation": 406, "user_id": 3480746, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/82ea5145c00df3fab42f8e7a88e80ce8?s=128&d=identicon&r=PG", "display_name": "victe", "link": "https://stackoverflow.com/users/3480746/victe"}, "reply_to_user": {"reputation": 1447, "user_id": 4301453, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/dTvct.png?s=128&g=1", "display_name": "Jonathan Woollett-light", "link": "https://stackoverflow.com/users/4301453/jonathan-woollett-light"}, "edited": false, "score": 1, "creation_date": 1588947629, "post_id": 54573800, "comment_id": 109104240, "body": "RUSTDOCFLAGS is not a command, is an environmental variable. If you are in Windows: with <code>cmd</code> do <code>set RUSTDOCFLAGS=--html-in-header src\\docs-header.html</code> followed by <code>cargo doc --no-deps --open</code>. In <code>PowerShell</code>, set envvar with <code>$env:RUSTDOCFLAGS=&quot;--html-in-header .\\src\\docs-header.html&quot;</code>."}], "tags": [], "owner": {"reputation": 406, "user_id": 3480746, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/82ea5145c00df3fab42f8e7a88e80ce8?s=128&d=identicon&r=PG", "display_name": "victe", "link": "https://stackoverflow.com/users/3480746/victe"}, "is_accepted": true, "score": 9, "last_activity_date": 1589027932, "last_edit_date": 1589027932, "creation_date": 1549543936, "answer_id": 54573800, "question_id": 46495063, "link": "https://stackoverflow.com/questions/46495063/how-to-write-math-formulas-for-rust-documentation/54573800#54573800", "title": "How to write math formulas for Rust documentation?", "body": "<p>Similar to <a href=\"https://stackoverflow.com/users/24817/steve-klabnik\">Steve's</a> <a href=\"https://stackoverflow.com/a/46530088\">answer</a>, using katex you could follow the approaches from:</p>\n\n<ul>\n<li><a href=\"https://docs.rs/rustdoc-katex-demo/0.1.5/rustdoc_katex_demo/\" rel=\"nofollow noreferrer\">https://docs.rs/rustdoc-katex-demo/0.1.5/rustdoc_katex_demo/</a>, see also the resources section. <a href=\"https://github.com/paulkernfeld\" rel=\"nofollow noreferrer\">Kernfeld</a>.</li>\n<li><a href=\"https://docs.rs/katex-doc/0.1.0/katex_doc/\" rel=\"nofollow noreferrer\">https://docs.rs/katex-doc/0.1.0/katex_doc/</a>, <a href=\"https://github.com/CAD97\" rel=\"nofollow noreferrer\">Durham</a>.</li>\n</ul>\n\n<p>You need to put an html file in your crate in some place with the code to include with the <code>--html-in-header</code> option. Then execute:</p>\n\n<p>Linux:</p>\n\n<pre><code>RUSTDOCFLAGS=\"--html-in-header path-to-your-header-file.html\" cargo doc --no-deps\n</code></pre>\n\n<p>Windows cmd:</p>\n\n<pre><code>set RUSTDOCFLAGS=--html-in-header path-to-your-header-file.html\ncargo doc --no-deps --open\n</code></pre>\n\n<p>Windows PowerShell:</p>\n\n<pre><code>$env:RUSTDOCFLAGS=\"--html-in-header .\\path-to-your-header-file.html\"\ncargo doc --no-deps --open\n</code></pre>\n\n<p><code>--no-deps</code> is not strictly necessary, but convenient if you do not want to add the header to the doc of another external crates.</p>\n\n<p>For use in <a href=\"http://docs.rs\" rel=\"nofollow noreferrer\">http://docs.rs</a> you must place this on <code>Cargo.toml</code>:</p>\n\n<pre><code>[package.metadata.docs.rs]\nrustdoc-args = [ \"--html-in-header\", \"path-to-your-header-file.html\" ]\n</code></pre>\n\n<p>The content of the header html file could be (this is the solution of <a href=\"https://github.com/paulkernfeld\" rel=\"nofollow noreferrer\">Kernfeld</a>):</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/katex@0.10.0/dist/katex.min.css\" integrity=\"sha384-9eLZqc9ds8eNjO3TmqPeYcDj8n+Qfa4nuSiGYa6DjLNcv9BtN69ZIulL9+8CqC9Y\" crossorigin=\"anonymous\"&gt;\n&lt;script src=\"https://cdn.jsdelivr.net/npm/katex@0.10.0/dist/katex.min.js\"                  integrity=\"sha384-K3vbOmF2BtaVai+Qk37uypf7VrgBubhQreNQe9aGsz9lB63dIFiQVlJbr92dw2Lx\" crossorigin=\"anonymous\"&gt;&lt;/script&gt;\n&lt;script src=\"https://cdn.jsdelivr.net/npm/katex@0.10.0/dist/contrib/auto-render.min.js\"    integrity=\"sha384-kmZOZB5ObwgQnS/DuDg6TScgOiWWBiVt0plIRkZCmE6rDZGrEOQeHM5PcHi+nyqe\" crossorigin=\"anonymous\"&gt;&lt;/script&gt;\n&lt;script&gt;\n    document.addEventListener(\"DOMContentLoaded\", function() {\n        renderMathInElement(document.body, {\n            delimiters: [\n                {left: \"$$\", right: \"$$\", display: true},\n                {left: \"\\\\(\", right: \"\\\\)\", display: false},\n                {left: \"$\", right: \"$\", display: false},\n                {left: \"\\\\[\", right: \"\\\\]\", display: true}\n            ]\n        });\n    });\n&lt;/script&gt;\n</code></pre>\n\n<p><a href=\"https://docs.rs/pwnies/0.0.13/pwnies/\" rel=\"nofollow noreferrer\">See pwnies</a> for another example (no LaTeX) of extending the possibilities of doc html pages.</p>\n\n<p><strong>UPDATE</strong>:</p>\n\n<p>I made a <a href=\"https://github.com/victe/rust-latex-doc-minimal-example\" rel=\"nofollow noreferrer\">minimal example repo</a> showing all the above. The <a href=\"https://crates.io/crates/rust-latex-doc-minimal-example\" rel=\"nofollow noreferrer\">crate</a> with associated <a href=\"https://docs.rs/rust-latex-doc-minimal-example/\" rel=\"nofollow noreferrer\">documentation</a> using <code>LaTeX</code>.</p>\n"}], "owner": {"reputation": 2860, "user_id": 1013173, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/072162a90979f670d87c36ae8818ea13?s=128&d=identicon&r=PG", "display_name": "Sergey Potapov", "link": "https://stackoverflow.com/users/1013173/sergey-potapov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1671, "favorite_count": 2, "accepted_answer_id": 54573800, "answer_count": 3, "score": 4, "last_activity_date": 1589027932, "creation_date": 1506710175, "last_edit_date": 1506710794, "question_id": 46495063, "link": "https://stackoverflow.com/questions/46495063/how-to-write-math-formulas-for-rust-documentation", "title": "How to write math formulas for Rust documentation?", "body": "<p>I'd like to write a math formula in Rust documentation for my crate.\nLooks like there is basic support of LaTeX as at least <code>power</code> works:</p>\n\n<pre><code>/// $ 2^8 $\n</code></pre>\n\n<p>Is rendered like:</p>\n\n<p><a href=\"https://i.stack.imgur.com/jV32V.jpg\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/jV32V.jpg\" alt=\"enter image description here\"></a></p>\n\n<p>I'd like to use a fraction in my formula, but unfortunately, this does not work:</p>\n\n<pre><code>/// $ \\frac{x}y $\n</code></pre>\n"}, {"tags": ["caching", "rust", "closures"], "answers": [{"comments": [{"owner": {"reputation": 65, "user_id": 2135320, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/09e3b4ff01b4ad11513002c89112b2f0?s=128&d=identicon&r=PG", "display_name": "Avishay Matayev", "link": "https://stackoverflow.com/users/2135320/avishay-matayev"}, "edited": false, "score": 0, "creation_date": 1506702955, "post_id": 46492608, "comment_id": 79941030, "body": "Can you explain why is <code>&amp;I</code> used rather than <code>I</code> at <code>F: Fn(&amp;I) -&gt; O</code>?"}, {"owner": {"reputation": 65, "user_id": 2135320, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/09e3b4ff01b4ad11513002c89112b2f0?s=128&d=identicon&r=PG", "display_name": "Avishay Matayev", "link": "https://stackoverflow.com/users/2135320/avishay-matayev"}, "edited": false, "score": 1, "creation_date": 1506703185, "post_id": 46492608, "comment_id": 79941152, "body": "Oh, nevermind, I think I understand. We don&#39;t know whether <code>I</code> will implement the copy trait so we prefer to borrow it rather than take ownership."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 65, "user_id": 2135320, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/09e3b4ff01b4ad11513002c89112b2f0?s=128&d=identicon&r=PG", "display_name": "Avishay Matayev", "link": "https://stackoverflow.com/users/2135320/avishay-matayev"}, "edited": false, "score": 1, "creation_date": 1506703193, "post_id": 46492608, "comment_id": 79941155, "body": "@AvishayMatayev you need to reason through the ownership of the value. If you were to transfer ownership of the <code>X</code> to the closure (<code>Fn(X) -&gt; Y</code>), then you would no longer have it to store in the <code>HashMap</code>. Equally importantly, we&#39;ve already transferred ownership of the argument to <code>entry</code>; we can only get back a reference. Again, these are decisions that you could work around by requiring that the key be copyable or clonable."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1506702830, "last_edit_date": 1506702830, "creation_date": 1506700303, "answer_id": 46492608, "question_id": 46492188, "link": "https://stackoverflow.com/questions/46492188/expected-type-parameter-found-reference-to-type-parameter-when-implementing-a/46492608#46492608", "title": "&quot;Expected type parameter, found reference to type parameter&quot; when implementing a generic cache struct", "body": "<p>You've stated that your closure returns a reference:</p>\n\n<pre><code>T: Fn(&amp;X) -&gt; &amp;Y,\n</code></pre>\n\n<p>but then you are trying to store something that isn't a reference:</p>\n\n<pre><code>results: HashMap&lt;X, Y&gt;,\n</code></pre>\n\n<p>This is fundamentally incompatible; you need to unify the types.</p>\n\n<p>In many cases, there's no reason to have a <em>reference</em> to a generic type because a generic type can already <em>be</em> a reference. Additionally, forcing the closure to return a reference means that a closure like <code>|_| 42</code> would not be valid. Because of that, I'd say you should return and store the value type.</p>\n\n<p>Next you need to apply similar logic to <code>value</code>, as it needs to take the argument by value in order to store it. Additionally, remove all the lifetimes from it as elision does the right thing: <code>fn value(&amp;mut self, arg: X) -&gt; &amp;Y</code>.</p>\n\n<p>Once you've straightened that out, apply the knowledge from <a href=\"https://stackoverflow.com/questions/28512394/how-to-lookup-from-and-insert-into-a-hashmap-efficiently\">How to lookup from and insert into a HashMap efficiently?</a>:</p>\n\n<pre><code>fn value(&amp;mut self, arg: X) -&gt; &amp;Y {\n    match self.results.entry(arg) {\n        Entry::Occupied(e) =&gt; e.into_mut(),\n        Entry::Vacant(e) =&gt; {\n            let res = (self.calculation)(e.key());\n            e.insert(res)\n        }\n    }\n}\n</code></pre>\n\n<p>Round it off with some tests that assert it's only called once, and you are good to go. Note that we had to make decisions along the way, but they aren't the only ones we could have chosen. For example, we could have made it so that the cached value is cloned when returned.</p>\n\n<hr>\n\n<pre><code>use std::collections::HashMap;\nuse std::collections::hash_map::Entry;\nuse std::hash::Hash;\n\nstruct Cacher&lt;F, I, O&gt;\nwhere\n    F: Fn(&amp;I) -&gt; O,\n    I: Eq + Hash,\n{\n    calculation: F,\n    results: HashMap&lt;I, O&gt;,\n}\n\nimpl&lt;F, I, O&gt; Cacher&lt;F, I, O&gt;\nwhere\n    F: Fn(&amp;I) -&gt; O,\n    I: Eq + Hash,\n{\n    fn new(calculation: F) -&gt; Self {\n        Cacher {\n            calculation,\n            results: HashMap::new(),\n        }\n    }\n\n    fn value(&amp;mut self, arg: I) -&gt; &amp;O {\n        match self.results.entry(arg) {\n            Entry::Occupied(e) =&gt; e.into_mut(),\n            Entry::Vacant(e) =&gt; {\n                let res = (self.calculation)(e.key());\n                e.insert(res)\n            }\n        }\n    }\n}\n\n#[test]\nfn called_once() {\n    use std::sync::atomic::{AtomicUsize, Ordering};\n    let calls = AtomicUsize::new(0);\n\n    let mut c = Cacher::new(|&amp;()| {\n        calls.fetch_add(1, Ordering::SeqCst);\n        ()\n    });\n\n    c.value(());\n    c.value(());\n    c.value(());\n\n    assert_eq!(1, calls.load(Ordering::SeqCst));\n}\n</code></pre>\n"}], "owner": {"reputation": 65, "user_id": 2135320, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/09e3b4ff01b4ad11513002c89112b2f0?s=128&d=identicon&r=PG", "display_name": "Avishay Matayev", "link": "https://stackoverflow.com/users/2135320/avishay-matayev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1525, "favorite_count": 0, "accepted_answer_id": 46492608, "answer_count": 1, "score": 1, "last_activity_date": 1506702830, "creation_date": 1506698961, "last_edit_date": 1506699180, "question_id": 46492188, "link": "https://stackoverflow.com/questions/46492188/expected-type-parameter-found-reference-to-type-parameter-when-implementing-a", "title": "&quot;Expected type parameter, found reference to type parameter&quot; when implementing a generic cache struct", "body": "<p>In <a href=\"https://doc.rust-lang.org/book/second-edition/ch13-01-closures.html\" rel=\"nofollow noreferrer\">the Closures chapter of the second edition of <em>The Rust Programming Language</em></a>, the writer implements a <code>Cache</code> struct and leaves it with a few problems for the reader to fix up, such as:</p>\n\n<ul>\n<li>Accepting generic parameters and return values on the closure function</li>\n<li>Allowing more than one value to be cached</li>\n</ul>\n\n<p>I've attempted to fix those problems but I am quite stuck and can't make it work.</p>\n\n<pre><code>use std::collections::HashMap;\nuse std::hash::Hash;\n\nstruct Cacher&lt;T, X, Y&gt;\nwhere\n    T: Fn(&amp;X) -&gt; &amp;Y,\n    X: Eq + Hash,\n{\n    calculation: T,\n    results: HashMap&lt;X, Y&gt;,\n}\n\nimpl&lt;T, X, Y&gt; Cacher&lt;T, X, Y&gt;\nwhere\n    T: Fn(&amp;X) -&gt; &amp;Y,\n    X: Eq + Hash,\n{\n    fn new(calculation: T) -&gt; Cacher&lt;T, X, Y&gt; {\n        Cacher {\n            calculation,\n            results: HashMap::new(),\n        }\n    }\n\n    fn value&lt;'a&gt;(&amp;'a mut self, arg: &amp;'a X) -&gt; &amp;'a Y {\n        match self.results.get(arg) {\n            Some(v) =&gt; v,\n            None =&gt; {\n                let res = (self.calculation)(arg);\n                self.results.insert(*arg, res);\n                res\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>Where <code>T</code> is the closure function type, <code>X</code> is the argument type and <code>Y</code> is the return value type.</p>\n\n<p>The error I get:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:30:43\n   |\n30 |                 self.results.insert(*arg, res);\n   |                                           ^^^ expected type parameter, found &amp;Y\n   |\n   = note: expected type `Y`\n              found type `&amp;Y`\n</code></pre>\n\n<p>I understand this, but I can't think of an elegant solution for the whole ordeal.</p>\n"}, {"tags": ["regex", "rust"], "answers": [{"comments": [{"owner": {"reputation": 447, "user_id": 2816391, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/4a81809defa9e2b3b0b1e0540b699616?s=128&d=identicon&r=PG&f=1", "display_name": "user103185", "link": "https://stackoverflow.com/users/2816391/user103185"}, "edited": false, "score": 0, "creation_date": 1506703246, "post_id": 46492004, "comment_id": 79941177, "body": "Thanks. It&#39;s the first time I see this &quot;nested import&quot;, I thought regex::Regex imported everything in that module. I use both &amp;[u8] and strings so I had to rename the u8 version using &quot;use regex::bytes::Regex as Regex_u8;&quot;."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 447, "user_id": 2816391, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/4a81809defa9e2b3b0b1e0540b699616?s=128&d=identicon&r=PG&f=1", "display_name": "user103185", "link": "https://stackoverflow.com/users/2816391/user103185"}, "edited": false, "score": 2, "creation_date": 1506703719, "post_id": 46492004, "comment_id": 79941387, "body": "@user103185 <code>use regex::Regex</code> brings in only the type <code>regex::Regex</code>. <code>use regex::*</code> would bring in all of the types / traits in the <code>regex</code> module (non-recursively). You could also say <code>use regex::bytes; bytes::Regex::new()</code>, etc."}, {"owner": {"reputation": 447, "user_id": 2816391, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/4a81809defa9e2b3b0b1e0540b699616?s=128&d=identicon&r=PG&f=1", "display_name": "user103185", "link": "https://stackoverflow.com/users/2816391/user103185"}, "edited": false, "score": 0, "creation_date": 1506704071, "post_id": 46492004, "comment_id": 79941523, "body": "I&#39;m afraid that the docs, as a mostly standard feature, omit the &quot;extern&quot; and &quot;use&quot; clauses, so they do not compile. Suggesting that an example is working because all examples are compiled and verified (as I already knew) helps to confuse newbies even more. As modules and imports are critical to using Rust, it would be highly benificial if every sample included these clauses, for daily practice. But when not, at least a link to a page, showing how to compile and run an example, would be highly appreciated. Once a gain thanks for clarifying the import."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 447, "user_id": 2816391, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/4a81809defa9e2b3b0b1e0540b699616?s=128&d=identicon&r=PG&f=1", "display_name": "user103185", "link": "https://stackoverflow.com/users/2816391/user103185"}, "edited": false, "score": 2, "creation_date": 1506704442, "post_id": 46492004, "comment_id": 79941670, "body": "@user103185 at some point there has to be a line drawn; I hope we&#39;d both agree that it would not be reasonable for the documentation to show how to purchase a computer, install an operating system, connect to the internet, install Rust, use the command line, etc. Less obviously, should <i>every</i> crate&#39;s documentation show how to edit <code>Cargo.toml</code>, how to add an <code>extern crate</code>, how modules/imports work, what ownership and lifetimes are? I don&#39;t believe so, that&#39;s why we have <a href=\"https://doc.rust-lang.org/stable/book/second-edition/\" rel=\"nofollow noreferrer\">the book</a>, but I can understand why it would cause you frustration."}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "reply_to_user": {"reputation": 447, "user_id": 2816391, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/4a81809defa9e2b3b0b1e0540b699616?s=128&d=identicon&r=PG&f=1", "display_name": "user103185", "link": "https://stackoverflow.com/users/2816391/user103185"}, "edited": false, "score": 3, "creation_date": 1506706785, "post_id": 46492004, "comment_id": 79942833, "body": "@user103185 There is a full example in the README: <a href=\"https://github.com/rust-lang/regex#usage-match-regular-expressions-on-u8\" rel=\"nofollow noreferrer\">github.com/rust-lang/&hellip;</a> --- If you&#39;d like to submit a PR to add an example to the <code>bytes</code> module docs, then that&#39;d be great!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1506698762, "last_edit_date": 1506698762, "creation_date": 1506698328, "answer_id": 46492004, "question_id": 46491927, "link": "https://stackoverflow.com/questions/46491927/how-to-use-rust-regex-on-bytes-vecu8-or-u8/46492004#46492004", "title": "How to use Rust regex on bytes (Vec&lt;u8&gt; or &amp;[u8])?", "body": "<blockquote>\n  <p>and added a few declarations</p>\n</blockquote>\n\n<p>Unfortunately, you added the wrong ones. Note how the documentation you've linked to is for the struct <strong><code>regex::bytes::Regex</code></strong>, not <code>regex::Regex</code> \u2014 they are two different types!</p>\n\n<pre><code>extern crate regex;\nuse regex::bytes::Regex;\n//         ^^^^^\n\nfn main() {\n    let re = Regex::new(r\"'([^']+)'\\s+\\((\\d{4})\\)\").unwrap();\n    let text = b\"Not my favorite movie: 'Citizen Kane' (1941).\";\n    let caps = re.captures(text).unwrap();\n\n    assert_eq!(&amp;caps[1], &amp;b\"Citizen Kane\"[..]);\n    assert_eq!(&amp;caps[2], &amp;b\"1941\"[..]);\n    assert_eq!(&amp;caps[0], &amp;b\"'Citizen Kane' (1941)\"[..]);\n\n    assert_eq!(&amp;caps[1], b\"Citizen Kane\");\n    assert_eq!(&amp;caps[2], b\"1941\");\n    assert_eq!(&amp;caps[0], b\"'Citizen Kane' (1941)\");\n}\n</code></pre>\n\n<blockquote>\n  <p>as the docs fail to provide working examples (as they regularly do)</p>\n</blockquote>\n\n<p>Note that code blocks in documentation are <strong>compiled and executed by default</strong>, so my experience is that it's pretty rare that the examples don't work. </p>\n"}], "owner": {"reputation": 447, "user_id": 2816391, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/4a81809defa9e2b3b0b1e0540b699616?s=128&d=identicon&r=PG&f=1", "display_name": "user103185", "link": "https://stackoverflow.com/users/2816391/user103185"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 600, "favorite_count": 0, "accepted_answer_id": 46492004, "answer_count": 1, "score": 0, "last_activity_date": 1506698762, "creation_date": 1506698098, "last_edit_date": 1506698540, "question_id": 46491927, "link": "https://stackoverflow.com/questions/46491927/how-to-use-rust-regex-on-bytes-vecu8-or-u8", "title": "How to use Rust regex on bytes (Vec&lt;u8&gt; or &amp;[u8])?", "body": "<p>I have a <code>&amp;[u8]</code> and I need to verify if it conforms to some pattern. There are examples of using regexes on <code>&amp;[u8]</code> in the <a href=\"https://doc.rust-lang.org/regex/regex/bytes/struct.Regex.html\" rel=\"nofollow noreferrer\"><code>Regex</code> documentation</a> and in <a href=\"https://doc.rust-lang.org/regex/regex/bytes/index.html\" rel=\"nofollow noreferrer\">the module documentation</a>. I took the code from <a href=\"https://doc.rust-lang.org/regex/regex/bytes/struct.Regex.html#examples\" rel=\"nofollow noreferrer\">the examples section</a> and put it inside a <code>main()</code> and added a few declarations:</p>\n\n<pre><code>extern crate regex;\nuse regex::Regex;\n\nfn main() {\n    let re = Regex::new(r\"'([^']+)'\\s+\\((\\d{4})\\)\").unwrap();\n    let text = b\"Not my favorite movie: 'Citizen Kane' (1941).\";\n    let caps = re.captures(text).unwrap();\n    assert_eq!(&amp;caps[1], &amp;b\"Citizen Kane\"[..]);\n    assert_eq!(&amp;caps[2], &amp;b\"1941\"[..]);\n    assert_eq!(&amp;caps[0], &amp;b\"'Citizen Kane' (1941)\"[..]);\n    // You can also access the groups by index using the Index notation.\n    // Note that this will panic on an invalid index.\n    assert_eq!(&amp;caps[1], b\"Citizen Kane\");\n    assert_eq!(&amp;caps[2], b\"1941\");\n    assert_eq!(&amp;caps[0], b\"'Citizen Kane' (1941)\");\n}\n</code></pre>\n\n<p>I don't understand how this example code differs from regular string matching, and indeed the compiler complains about expecting a <code>&amp;str</code>. In general the code does not hint how it differs from the usual string matching, with which I have no problems.</p>\n\n<p>I presume I did something basic wrong, like a missing or more precise import. I am in a guessing game here, as the docs fail to provide working examples (as they regularly do), and this time the compiler also fails to nudge me in the right direction. </p>\n\n<p>Here are the compiler messages:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; src/main.rs:7:28\n  |\n7 |     let caps = re.captures(text).unwrap();\n  |                            ^^^^ expected str, found array of 45 elements\n  |\n  = note: expected type `&amp;str`\n             found type `&amp;[u8; 45]`\n\nerror[E0277]: the trait bound `str: std::cmp::PartialEq&lt;[u8]&gt;` is not satisfied\n --&gt; src/main.rs:8:5\n  |\n8 |     assert_eq!(&amp;caps[1], &amp;b\"Citizen Kane\"[..]);\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ can't compare `str` with `[u8]`\n  |\n  = help: the trait `std::cmp::PartialEq&lt;[u8]&gt;` is not implemented for `str`\n  = note: required because of the requirements on the impl of `std::cmp::PartialEq&lt;&amp;[u8]&gt;` for `&amp;str`\n  = note: this error originates in a macro outside of the current crate\n\nerror[E0277]: the trait bound `str: std::cmp::PartialEq&lt;[u8]&gt;` is not satisfied\n --&gt; src/main.rs:9:5\n  |\n9 |     assert_eq!(&amp;caps[2], &amp;b\"1941\"[..]);\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ can't compare `str` with `[u8]`\n  |\n  = help: the trait `std::cmp::PartialEq&lt;[u8]&gt;` is not implemented for `str`\n  = note: required because of the requirements on the impl of `std::cmp::PartialEq&lt;&amp;[u8]&gt;` for `&amp;str`\n  = note: this error originates in a macro outside of the current crate\n\nerror[E0277]: the trait bound `str: std::cmp::PartialEq&lt;[u8]&gt;` is not satisfied\n  --&gt; src/main.rs:10:5\n   |\n10 |     assert_eq!(&amp;caps[0], &amp;b\"'Citizen Kane' (1941)\"[..]);\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ can't compare `str` with `[u8]`\n   |\n   = help: the trait `std::cmp::PartialEq&lt;[u8]&gt;` is not implemented for `str`\n   = note: required because of the requirements on the impl of `std::cmp::PartialEq&lt;&amp;[u8]&gt;` for `&amp;str`\n   = note: this error originates in a macro outside of the current crate\n\nerror[E0277]: the trait bound `str: std::cmp::PartialEq&lt;[u8; 12]&gt;` is not satisfied\n  --&gt; src/main.rs:13:5\n   |\n13 |     assert_eq!(&amp;caps[1], b\"Citizen Kane\");\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ can't compare `str` with `[u8; 12]`\n   |\n   = help: the trait `std::cmp::PartialEq&lt;[u8; 12]&gt;` is not implemented for `str`\n   = note: required because of the requirements on the impl of `std::cmp::PartialEq&lt;&amp;[u8; 12]&gt;` for `&amp;str`\n   = note: this error originates in a macro outside of the current crate\n\nerror[E0277]: the trait bound `str: std::cmp::PartialEq&lt;[u8; 4]&gt;` is not satisfied\n  --&gt; src/main.rs:14:5\n   |\n14 |     assert_eq!(&amp;caps[2], b\"1941\");\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ can't compare `str` with `[u8; 4]`\n   |\n   = help: the trait `std::cmp::PartialEq&lt;[u8; 4]&gt;` is not implemented for `str`\n   = note: required because of the requirements on the impl of `std::cmp::PartialEq&lt;&amp;[u8; 4]&gt;` for `&amp;str`\n   = note: this error originates in a macro outside of the current crate\n\nerror[E0277]: the trait bound `str: std::cmp::PartialEq&lt;[u8; 21]&gt;` is not satisfied\n  --&gt; src/main.rs:15:5\n   |\n15 |     assert_eq!(&amp;caps[0], b\"'Citizen Kane' (1941)\");\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ can't compare `str` with `[u8; 21]`\n   |\n   = help: the trait `std::cmp::PartialEq&lt;[u8; 21]&gt;` is not implemented for `str`\n   = note: required because of the requirements on the impl of `std::cmp::PartialEq&lt;&amp;[u8; 21]&gt;` for `&amp;str`\n   = note: this error originates in a macro outside of the current crate\n</code></pre>\n"}, {"tags": ["multithreading", "rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1506696328, "post_id": 46491293, "comment_id": 79937075, "body": "You cannot share any object between threads. You must use a Mutex."}, {"owner": {"reputation": 6375, "user_id": 188533, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/ee6df2c2f3fa08aab32b10fde7023545?s=128&d=identicon&r=PG", "display_name": "drahnr", "link": "https://stackoverflow.com/users/188533/drahnr"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1506696765, "post_id": 46491293, "comment_id": 79937362, "body": "So essentially error-chain declares some static entities which I want to use in multpile threads. How do I handle this use case with error-chain?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1506700251, "post_id": 46491293, "comment_id": 79939508, "body": "I do not know this crate, but maybe you should ask in an github issue?"}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1506799169, "post_id": 46491293, "comment_id": 79966846, "body": "@Boiethios The OP is not trying to share an object between multiple threads, but (according to the error message) to <b>send</b> (move) an object between threads. <code>Send</code> supported by almost any object in Rust, with the exception of the few specifically blacklisted ones, such as <code>Rc</code>."}], "answers": [{"comments": [{"owner": {"reputation": 6375, "user_id": 188533, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/ee6df2c2f3fa08aab32b10fde7023545?s=128&d=identicon&r=PG", "display_name": "drahnr", "link": "https://stackoverflow.com/users/188533/drahnr"}, "edited": false, "score": 0, "creation_date": 1506875350, "post_id": 46507221, "comment_id": 79983005, "body": "Excellent explanation."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 2, "last_activity_date": 1506807184, "creation_date": 1506807184, "answer_id": 46507221, "question_id": 46491293, "link": "https://stackoverflow.com/questions/46491293/multithreaded-application-fails-to-compile-with-error-chain/46507221#46507221", "title": "Multithreaded application fails to compile with error-chain", "body": "<p><code>mqttc::Error</code> contains a <code>mqttc::netopt::Error</code>, which in turns contains a <code>Box&lt;std::error::Error&gt;</code> (which desugars to <code>std::boxed::Box&lt;std::error::Error + 'static&gt;</code>. <code>std::error::Error</code> here is a trait object. Because the <code>Error</code> trait doesn't have <code>Send</code> as a supertrait, implementations of <code>Error</code> are not required to implement <code>Send</code>. Therefore, <code>Box&lt;std::error::Error&gt;</code> doesn't implement <code>Send</code> because not all types <code>T: std::error::Error</code> implement <code>Send</code>.</p>\n\n<p>This could be fixed by changing the <code>mqttc::netopt::Error</code> type to use <code>Box&lt;std::error::Error + Send&gt;</code> instead of <code>Box&lt;std::error::Error&gt;</code> (which would be a breaking change for the library).</p>\n"}], "owner": {"reputation": 6375, "user_id": 188533, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/ee6df2c2f3fa08aab32b10fde7023545?s=128&d=identicon&r=PG", "display_name": "drahnr", "link": "https://stackoverflow.com/users/188533/drahnr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 147, "favorite_count": 1, "accepted_answer_id": 46507221, "answer_count": 1, "score": 3, "last_activity_date": 1506807184, "creation_date": 1506696179, "last_edit_date": 1506696308, "question_id": 46491293, "link": "https://stackoverflow.com/questions/46491293/multithreaded-application-fails-to-compile-with-error-chain", "title": "Multithreaded application fails to compile with error-chain", "body": "<p>I introduced <code>error-chain</code> into a previously working application. The error itself is clear, <code>std::error::Error + 'static</code> lacks an implementation of the <code>trait std::marker::Send</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `std::error::Error + 'static: std::marker::Send` is not satisfied\n  --&gt; src/main.rs:35:5\n   |\n35 | /     error_chain!{\n36 | |\n37 | |         foreign_links {\n38 | |             Mqttc(::mqttc::Error);\n...  |\n53 | |         }\n54 | |     }\n   | |_____^ `std::error::Error + 'static` cannot be sent between threads safely\n   |\n   = help: the trait `std::marker::Send` is not implemented for `std::error::Error + 'static`\n   = note: required because of the requirements on the impl of `std::marker::Send` for `std::ptr::Unique&lt;std::error::Error + 'static&gt;`\n   = note: required because it appears within the type `std::boxed::Box&lt;std::error::Error + 'static&gt;`\n   = note: required because it appears within the type `mqttc::netopt::Error`\n   = note: required because it appears within the type `mqttc::Error`\n   = note: required because it appears within the type `errors::ErrorKind`\n   = note: required because it appears within the type `errors::Error`\n   = note: required by `error_chain::ChainedError`\n   = note: this error originates in a macro outside of the current crate\n</code></pre>\n\n<p>I am not sure how to resolve this. Note that I am using the more <a href=\"https://github.com/amikhalev/rust-mq\" rel=\"nofollow noreferrer\">up to date fork of <code>mqttc/mqtt3</code></a> instead of the upstream crates.</p>\n"}, {"tags": ["rust", "rust-rocket"], "answers": [{"comments": [{"owner": {"reputation": 504, "user_id": 7024293, "user_type": "registered", "accept_rate": 68, "profile_image": "https://lh3.googleusercontent.com/-_iHS8SMGqHA/AAAAAAAAAAI/AAAAAAAAAbE/HudebqQ1IF4/photo.jpg?sz=128", "display_name": "stevensonmt", "link": "https://stackoverflow.com/users/7024293/stevensonmt"}, "edited": false, "score": 0, "creation_date": 1506693459, "post_id": 46490371, "comment_id": 79935207, "body": "Yes, just figured that out this second."}, {"owner": {"reputation": 8576, "user_id": 327074, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/785321440230453d4a2a721f753bd538?s=128&d=identicon&r=PG", "display_name": "icc97", "link": "https://stackoverflow.com/users/327074/icc97"}, "edited": false, "score": 0, "creation_date": 1556607892, "post_id": 46490371, "comment_id": 98485399, "body": "For reference, see the <a href=\"https://rocket.rs/v0.4/guide/overview/#mounting\" rel=\"nofollow noreferrer\">Mounting section</a> in the Rocket guide: <i>The <code>mount</code> method takes as input: ... A list of routes via the <code>routes!</code> macro.</i>"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1506693426, "creation_date": 1506693426, "answer_id": 46490371, "question_id": 46490245, "link": "https://stackoverflow.com/questions/46490245/rocket-not-parsing-rawstr-in-a-url-to-match-route/46490371#46490371", "title": "Rocket not parsing RawStr in a URL to match route", "body": "<p>Rocket doesn't know about your routes <em>unless you tell it about them</em>:</p>\n\n<pre><code>fn main() {\n    rocket::ignite().mount(\"/\", routes![user, user_int, user_str]).launch();\n    //                                      ^^^^^^^^^^^^^^^^^^^^\n}\n</code></pre>\n"}], "owner": {"reputation": 504, "user_id": 7024293, "user_type": "registered", "accept_rate": 68, "profile_image": "https://lh3.googleusercontent.com/-_iHS8SMGqHA/AAAAAAAAAAI/AAAAAAAAAbE/HudebqQ1IF4/photo.jpg?sz=128", "display_name": "stevensonmt", "link": "https://stackoverflow.com/users/7024293/stevensonmt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 422, "favorite_count": 0, "accepted_answer_id": 46490371, "answer_count": 1, "score": 1, "last_activity_date": 1506693495, "creation_date": 1506693041, "last_edit_date": 1506693495, "question_id": 46490245, "link": "https://stackoverflow.com/questions/46490245/rocket-not-parsing-rawstr-in-a-url-to-match-route", "title": "Rocket not parsing RawStr in a URL to match route", "body": "<p>The <a href=\"https://rocket.rs/guide/requests/\" rel=\"nofollow noreferrer\">guide on Rocket's site</a> suggests that dynamic routes can be ranked. The example uses different types for the dynamic portion as the matching criteria for the routes.  When I put a url with anything other than a <code>usize</code>, I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>GET /user/three text/html:\n    =&gt; Matched: GET /user/&lt;id&gt;\n    =&gt; Failed to parse 'id': RawStr(\"three\")\n    =&gt; Outcome: Forward\n    =&gt; Error: No matching routes for GET /user/three text/html.\n    =&gt; Warning: Responding with 404 Not Found catcher.\n    =&gt; Response succeeded.\n</code></pre>\n\n<p>The code I'm using:</p>\n\n<pre><code>#![feature(plugin)]\n#![plugin(rocket_codegen)]\n\nextern crate rocket;\nuse rocket::http::RawStr;\n\n#[get(\"/user/&lt;id&gt;\")]\nfn user(id: usize) -&gt; String { format!(\"First rank\") }\n\n#[get(\"/user/&lt;id&gt;\", rank = 2)]\nfn user_int(id: isize) -&gt; String { format!(\"second rank\") }\n\n#[get(\"/user/&lt;id&gt;\", rank = 3)]\nfn user_str(id: &amp;RawStr) -&gt; String { format!(\"last rank\") }\n\nfn main() {\n    rocket::ignite().mount(\"/\", routes![user]).launch();\n}\n</code></pre>\n\n<p>I would expect instead of a <code>404 error</code> a page at <code>/user/three</code> displaying the test <code>last rank</code>.  Why is it not doing this?</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1506679985, "post_id": 46486134, "comment_id": 79927641, "body": "From my experience, Cargo will include any files and folders it finds. You can use the <a href=\"https://doc.rust-lang.org/std/macro.include.html\" rel=\"nofollow noreferrer\">include! macro</a> to access them (relative to the source file you are calling from), or get them at runtime from the file system using <code>std::fs::File</code> (relative to the root directory of your project)."}, {"owner": {"reputation": 11388, "user_id": 220485, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bTrsL.jpg?s=128&g=1", "display_name": "Daniel Fath", "link": "https://stackoverflow.com/users/220485/daniel-fath"}, "edited": false, "score": 3, "creation_date": 1506680794, "post_id": 46486134, "comment_id": 79928108, "body": "I&#39;m not sure what this is asking. Is it asking how to load configuration in Rust via Cargo? Because Maven doesn&#39;t do that, it just puts things under a different classpath. What are you trying to achieve?"}], "answers": [{"comments": [{"owner": {"reputation": 2918, "user_id": 5194348, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/91884122e7f9b08a3132ac2cd91a031a?s=128&d=identicon&r=PG&f=1", "display_name": "Lhooq", "link": "https://stackoverflow.com/users/5194348/lhooq"}, "edited": false, "score": 0, "creation_date": 1590268995, "post_id": 46487292, "comment_id": 109619711, "body": "Hi. I&#39;m actually facing a problem. You say that to load a resource file at runtime one could write <code>File::open(&quot;resources&#47;hello.txt&quot;).unwrap();</code> but &quot;This assuming that you are running the application with cargo run from where it was built.&quot;. How one could actually open this file running the application from wherever he wants. In my case it&#39;s an XML file I need to read when starting my program and I can&#39;t find an elegant way to do it properly. I still have the &quot;provide the path to your command line&quot; but it shouldn&#39;t be optional nor a parameter, my file is always there, in <code>.&#47;rsc&#47;file.xml</code>"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 3, "last_activity_date": 1603460896, "last_edit_date": 1603460896, "creation_date": 1506682255, "answer_id": 46487292, "question_id": 46486134, "link": "https://stackoverflow.com/questions/46486134/how-to-avoid-hard-coded-values-in-rust/46487292#46487292", "title": "How to avoid hard-coded values in Rust", "body": "<p>Maven doesn't include everything from your source. In fact, it includes the binary but doesn't even have to include the source at all in a <code>.jar</code>. You can configure it to say what to include, which by default is everything in the <code>resources</code> directory.</p>\n<p>Cargo packages source code. <em>Everything</em> will be included in the crate, with the exception of things that match your <code>.gitignore</code> file. You can fine-tune that in your <code>Cargo.toml</code> file, by adding an <a href=\"http://doc.crates.io/manifest.html#the-exclude-and-include-fields-optional\" rel=\"nofollow noreferrer\"><code>include</code> or <code>exclude</code></a> entry in the <code>[package]</code> section.</p>\n<p>To access these files, there are a few options.</p>\n<p>For example, if your project looks like this:</p>\n<pre class=\"lang-none prettyprint-override\"><code>- Cargo.toml\n- src\n   - main.rs\n- resources\n   - hello.txt\n</code></pre>\n<p>There are three main ways to access <code>hello.txt</code>, as follows.</p>\n<h2>The  <code>include!</code> macro</h2>\n<p>With the <code>include!</code> macro, you can access <code>hello.txt</code> from <code>main.rs</code> like this:</p>\n<pre><code>let hello: &amp;str = include!(&quot;../resources/hello.txt&quot;);\n</code></pre>\n<p>Be aware that the macro will include the file directly in the source, exactly as if you copy &amp; pasted the contents of the file. So the example I gave there would work only if the contents of the file include <code>&quot;&quot;</code> quotes. Any Rust source can go there, and it has to be included at compile-time. This can be convenient for including complicated Rust structs, without having to write parsing code. Notice that the path is relative to the source <code>.rs</code> file that included it.</p>\n<h2>The  <code>include_bytes!</code> and <code>include_str!</code> macros</h2>\n<p>The <code>include_bytes!</code> macro creates a fixed-size array of <code>u8</code> from the file, to be included at compile-time.</p>\n<pre><code>let bytes = include_bytes!(&quot;../resources/hello.txt&quot;).\nlet hello: String = String::from_bytes_lossy(bytes).to_string();\n</code></pre>\n<p>This is convenient for incorporating arbitrary binary data into your application, for example an image, without having to load it at runtime. The array has <code>'static</code> lifetime, so will stay in memory for the entire lifetime of your application.</p>\n<p>The <code>include_str!</code> macro works similarly, but will result in a string slice, also with <code>'static</code> lifetime.</p>\n<h2>At runtime</h2>\n<p>To load a file at run-time, you can use:</p>\n<pre><code>let hello = std::fs::read_to_string(&quot;resources/hello.txt&quot;).unwrap();\n</code></pre>\n<p>The path here is relative to the root of your crate. This assuming that you are running the application with <code>cargo run</code> from where it was built. If you are deploying a binary, you may have to supply a path to where your application should find its resources.</p>\n<p>Usually, this is the preferred method. It's more flexible as you can swap the config at runtime or use application arguments to load from a different location. There are lots of crates for parsing different file formats, including <a href=\"https://crates.io/crates/serde_json\" rel=\"nofollow noreferrer\">json</a>, <a href=\"https://crates.io/crates/toml\" rel=\"nofollow noreferrer\">toml</a> and plenty of others. You have control over the lifetime of the data you load, so you can make sure it's deallocated when you are finished with it.</p>\n"}], "owner": {"reputation": 3215, "user_id": 855474, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/8JCP8.png?s=128&g=1", "display_name": "BalaB", "link": "https://stackoverflow.com/users/855474/balab"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 832, "favorite_count": 1, "accepted_answer_id": 46487292, "answer_count": 1, "score": 3, "last_activity_date": 1603460896, "creation_date": 1506678174, "last_edit_date": 1507862717, "question_id": 46486134, "link": "https://stackoverflow.com/questions/46486134/how-to-avoid-hard-coded-values-in-rust", "title": "How to avoid hard-coded values in Rust", "body": "<p>Below is a Maven/Java directory structure.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>- src\n  - main\n    - java\n    - resources\n  - test\n    - java\n    - resources\n\n- target\n</code></pre>\n\n<p>Here, the <strong>resources</strong> folder holds application-related configuration files and resource files, to avoid hard-coding their contents in source files.</p>\n\n<p>How can I achieve the same in Rust with Cargo?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1506650093, "post_id": 46479952, "comment_id": 79916193, "body": "We get a <i>lot</i> of poorly-formatted, overly large posts with hard-to-follow questions. I&#39;d like to recognize that this question was none of those and shows great effort!"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1506657125, "last_edit_date": 1506657125, "creation_date": 1506650008, "answer_id": 46480631, "question_id": 46479952, "link": "https://stackoverflow.com/questions/46479952/from-trait-only-works-on-values-but-i-have-references/46480631#46480631", "title": "From trait only works on values, but I have references", "body": "<p>Because you accept anything that can be turned into an iterator, you can convert each item in the iterator into the dereferenced form. The easiest thing to do here is to use <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.cloned\" rel=\"nofollow noreferrer\"><code>Iterator::cloned</code></a>:</p>\n\n<pre><code>assert_eq!(vec![0.0, 1.0, 2.0], int_to_float([0, 1, 2].iter().cloned()));\n</code></pre>\n"}], "owner": {"reputation": 191, "user_id": 7606550, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d280cfb4b941e8d99e8ee7c8ba3873ff?s=128&d=identicon&r=PG&f=1", "display_name": "David Sanders", "link": "https://stackoverflow.com/users/7606550/david-sanders"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 85, "favorite_count": 0, "accepted_answer_id": 46480631, "answer_count": 1, "score": 3, "last_activity_date": 1506657125, "creation_date": 1506643569, "last_edit_date": 1506649858, "question_id": 46479952, "link": "https://stackoverflow.com/questions/46479952/from-trait-only-works-on-values-but-i-have-references", "title": "From trait only works on values, but I have references", "body": "<p>I want to turn a list of any numeric type into a list of floats. The following code fails to compile:</p>\n\n<pre><code>#[cfg(test)]\nmod tests {\n    #[test]\n    fn test_int_to_float() {\n        use super::int_to_float;\n        assert_eq!(vec![0.0, 1.0, 2.0], int_to_float(&amp;[0, 1, 2]));\n    }\n}\n\npub fn int_to_float&lt;I&gt;(xs: I) -&gt; Vec&lt;f64&gt;\nwhere\n    I: IntoIterator,\n    f64: From&lt;I::Item&gt;,\n{\n    xs.into_iter().map(f64::from).collect()\n}\n</code></pre>\n\n<p>The error message is</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `f64: std::convert::From&lt;&amp;{integer}&gt;` is not satisfied\n --&gt; src/main.rs:6:41\n  |\n6 |         assert_eq!(vec![0.0, 1.0, 2.0], int_to_float(&amp;[0, 1, 2]));\n  |                                         ^^^^^^^^^^^^ the trait `std::convert::From&lt;&amp;{integer}&gt;` is not implemented for `f64`\n  |\n  = help: the following implementations were found:\n            &lt;f64 as std::convert::From&lt;i8&gt;&gt;\n            &lt;f64 as std::convert::From&lt;i16&gt;&gt;\n            &lt;f64 as std::convert::From&lt;f32&gt;&gt;\n            &lt;f64 as std::convert::From&lt;u16&gt;&gt;\n          and 3 others\n  = note: required by `int_to_float`\n</code></pre>\n\n<p>I understand that <code>I::Item</code> is a reference to an <code>i32</code> (<code>&amp;i32</code>), but <code>f64::from</code> is only implemented for values. How do I get this to compile?</p>\n"}, {"tags": ["rust", "rust-piston"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1506615166, "post_id": 46473666, "comment_id": 79902565, "body": "I have <i>no idea</i> what you are really trying to ask. Yes, a <code>Vec</code> is a great way of storing a collection of things. A <code>HashMap</code> is also a great way of storing a collection of things; there are lots of available collections (in the standard library and outside). You then mention <code>Result</code> and the fact that you have to use crates and use statements but not why any of those present problems for you. Why do you think you have to &quot;pull in almost everything that Piston has&quot;?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1506615381, "post_id": 46473666, "comment_id": 79902677, "body": "Do you want to create a vec (or a hashmap) of textures from a vec of paths?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1506615771, "post_id": 46473666, "comment_id": 79902866, "body": "What are all the imports? From what I can tell, you can obtain the <code>Factory</code> impl from the <code>PistonWindow</code>, which you must already have. Then there are two new imports: <code>TextureSettings</code> and <code>Flip</code>, which both can be constructed with no other dependencies."}], "answers": [{"comments": [{"owner": {"reputation": 758, "user_id": 992006, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/a06f6f95cac06d59acd366322095c378?s=128&d=identicon&r=PG", "display_name": "tamato", "link": "https://stackoverflow.com/users/992006/tamato"}, "edited": false, "score": 2, "creation_date": 1506618157, "post_id": 46474351, "comment_id": 79904213, "body": "This does answer my question and shows that I wasn&#39;t asking the right question."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 2, "last_activity_date": 1506617472, "last_edit_date": 1506617472, "creation_date": 1506617098, "answer_id": 46474351, "question_id": 46473666, "link": "https://stackoverflow.com/questions/46473666/what-is-the-idiomatic-way-in-rust-to-store-a-collection-of-objects-to-be-used-as/46474351#46474351", "title": "What is the idiomatic way in Rust to store a collection of objects to be used as Piston textures or sprites?", "body": "<p>You probably want to map over a collection of paths and create a texture for each. When collecting on an iterator of <code>Result</code>s you can have them unwrapped and move the result to the outside of the final collection:</p>\n\n<pre><code>let images: Result&lt;Vec&lt;Texture&lt;_&gt;&gt;, String&gt; = paths.iter()\n    .map(|path| Texture::from_path(\n            &amp;mut *window.factory.borrow_mut(),\n            &amp;path,\n            Flip::None,\n            &amp;TextureSettings::new())\n    )\n    .collect();\n</code></pre>\n\n<p>You shouldn't need the <code>R</code> parameter for <code>Texture&lt;R&gt;</code> because it can be inferred from the <code>Factory&lt;R&gt;</code> instance that you get from <code>PistonWindow</code>, which is why I just put a <code>_</code>. In fact, you can reduce the type of <code>images</code> to just <code>Result&lt;Vec&lt;_&gt;&gt;</code> if you wanted to, as even that can be inferred.</p>\n\n<p><em>Disclaimer: I wasn't able to actually run this code where I am. But it should only need small changes if it doesn't work.</em></p>\n"}], "owner": {"reputation": 758, "user_id": 992006, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/a06f6f95cac06d59acd366322095c378?s=128&d=identicon&r=PG", "display_name": "tamato", "link": "https://stackoverflow.com/users/992006/tamato"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 157, "favorite_count": 0, "accepted_answer_id": 46474351, "answer_count": 1, "score": 3, "last_activity_date": 1506618048, "creation_date": 1506614683, "last_edit_date": 1506618048, "question_id": 46473666, "link": "https://stackoverflow.com/questions/46473666/what-is-the-idiomatic-way-in-rust-to-store-a-collection-of-objects-to-be-used-as", "title": "What is the idiomatic way in Rust to store a collection of objects to be used as Piston textures or sprites?", "body": "<p>All the examples I've seen for getting access to a texture object is to do something like the following:</p>\n\n<pre><code>let img = Texture::from_path(...) \n</code></pre>\n\n<p>This gives the impression that in order to have an array of textures it should be something like <code>let mut images: Vec&lt;Texture&gt;;</code>, but <code>from_path</code> returns a <code>Result&lt;Texture&lt;R&gt;, String&gt;</code>.</p>\n\n<p>And its the <code>Texture&lt;R&gt;</code> that is really getting in the way. In order to be able make a <code>Texture&lt;R&gt;</code>, an awful lot of <code>crates</code> and <code>use ...</code> are needed and it feels completely wrong. </p>\n\n<p>Is the right thing:</p>\n\n<pre><code>let loaded_textures:Vec&lt;Option&lt;T&gt;&gt; = Texture::from_path(...)\n</code></pre>\n\n<p>Or pull in almost everything that Piston has? Or something else?  </p>\n\n<p>My goal is to have</p>\n\n<pre><code>struct Drawables {\n    obj_name: &amp;'static str,\n    image: Texture&lt;gfx_device_gl::Resources&gt;, // or something else\n}\n\nlet mut my_objects: Vec&lt;Drawable&gt;;\n\nfn LoadDrawables(window: &amp;mut PistonWindow) -&gt; Vec&lt;Drawable&gt; {\n    let assets = find_folder::Search::ParentsThenKids(3, 3)\n        .for_folder(\"assets\")\n        .unwrap();\n    let img1 = assets.join(\"some_img0.png\");\n    let img1 = Texture::from_path(\n        &amp;mut window.factory,\n        &amp;img1,\n        Flip::None,\n        &amp;TextureSettings::new(),\n    ).unwrap();\n    let img2 = assets.join(\"some_img1.png\");\n    let img2 = Texture::from_path(\n        &amp;mut window.factory,\n        &amp;img2,\n        Flip::None,\n        &amp;TextureSettings::new(),\n    ).unwrap();\n    vec![\n        Drawable {\n            obj_name: \"orc\",\n            image: rogue,\n        },\n        Drawable {\n            obj_name: \"bat\",\n            image: floor,\n        },\n    ]\n}\n</code></pre>\n\n<p>The crate I'm trying to avoid pulling in is <code>gfx_device_gl</code>. This create feels wrong to include, its seems a little to low level if I'm already including a game engine such as Piston.  </p>\n"}, {"tags": ["rust", "closures", "dereference"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1506610294, "post_id": 46472082, "comment_id": 79899352, "body": "<code>t.deref_mut()()</code> works. Interesting."}], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1506611412, "post_id": 46472421, "comment_id": 79900126, "body": "Given this is a work-around, I would really favour using a method-name. It makes finding the pattern more easily (search for <code>deref_mut()(</code>)."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1583847365, "last_edit_date": 1583847365, "creation_date": 1506610924, "answer_id": 46472421, "question_id": 46472082, "link": "https://stackoverflow.com/questions/46472082/why-does-a-mutable-borrow-of-a-closure-through-derefmut-not-work/46472421#46472421", "title": "Why does a mutable borrow of a closure through DerefMut not work?", "body": "<p>This is <a href=\"https://github.com/rust-lang/rust/issues/26186\" rel=\"nofollow noreferrer\">a known issue</a> regarding how the function traits are inferred through <code>Deref</code>. As a workaround, you need to explicitly get a mutable reference by doing a mutable reborrow:</p>\n\n<pre><code>let mut t = Foo;\n(&amp;mut *t)();\n</code></pre>\n\n<p>or by calling <code>DerefMut::deref_mut</code>:</p>\n\n<pre><code>let mut t = Foo;\nt.deref_mut()();\n</code></pre>\n"}], "owner": {"reputation": 833, "user_id": 3297655, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/df1bc6c2cef925a8f52d36b3290958b9?s=128&d=identicon&r=PG&f=1", "display_name": "chabapok", "link": "https://stackoverflow.com/users/3297655/chabapok"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 815, "favorite_count": 0, "accepted_answer_id": 46472421, "answer_count": 1, "score": 6, "last_activity_date": 1583847365, "creation_date": 1506610051, "last_edit_date": 1583845026, "question_id": 46472082, "link": "https://stackoverflow.com/questions/46472082/why-does-a-mutable-borrow-of-a-closure-through-derefmut-not-work", "title": "Why does a mutable borrow of a closure through DerefMut not work?", "body": "<p>I am trying to mutably borrow a mutable variable. <code>Deref</code> and <code>DerefMut</code> are implemented for <code>Foo</code>, but compilation fails:</p>\n\n<pre><code>use std::ops::{Deref, DerefMut};\n\nstruct Foo;\n\nimpl Deref for Foo {\n    type Target = FnMut() + 'static;\n    fn deref(&amp;self) -&gt; &amp;Self::Target {\n        unimplemented!()\n    }\n}\n\nimpl DerefMut for Foo {\n    fn deref_mut(&amp;mut self) -&gt; &amp;mut Self::Target {\n        unimplemented!()\n    }\n}\n\nfn main() {\n    let mut t = Foo;\n    t();\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0596]: cannot borrow immutable borrowed content as mutable\n  --&gt; src/main.rs:20:5\n   |\n20 |     t();\n   |     ^ cannot borrow as mutable\n</code></pre>\n\n<p>Newer versions of the compiler have an updated error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0596]: cannot borrow data in a dereference of `Foo` as mutable\n  --&gt; src/main.rs:20:5\n   |\n20 |     t();\n   |     ^ cannot borrow as mutable\n   |\n   = help: trait `DerefMut` is required to modify through a dereference, but it is not implemented for `Foo`\n</code></pre>\n"}, {"tags": ["json", "rust"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1506609973, "post_id": 46471631, "comment_id": 79899134, "body": "Do you know what an <code>enum</code> is? Have you tried using a custom <code>enum</code> instead of a pair of <code>Option&lt;V&gt;</code>?"}, {"owner": {"reputation": 4989, "user_id": 1685095, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/5f06068bb9b4c00f12582ccc0ba64c4a?s=128&d=identicon&r=PG", "display_name": "user1685095", "link": "https://stackoverflow.com/users/1685095/user1685095"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1506623208, "post_id": 46471631, "comment_id": 79907015, "body": "Yes, I know. What about three parameters or four? Making enum with every possible permutation doesn&#39;t scale."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1506668739, "post_id": 46471631, "comment_id": 79921293, "body": "What about 7 to 97 parameters? With only prime numbers of elements being valid? Not all invariants can be captured statically... at no cost. My advice is to focus on the current case and attempt to solve it as best as possible; when future comes and requirements change, we&#39;ll see then."}, {"owner": {"reputation": 4989, "user_id": 1685095, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/5f06068bb9b4c00f12582ccc0ba64c4a?s=128&d=identicon&r=PG", "display_name": "user1685095", "link": "https://stackoverflow.com/users/1685095/user1685095"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1506680406, "post_id": 46471631, "comment_id": 79927880, "body": "@MatthieuM. You wouldn&#39;t create a constructor with 97 parameters. I think what I&#39;m asking is a very reasonable requirement and it would be nice if it would be achievable. You seem to be mistaken about the nature of my question. I never said that I&#39;m trying to solve <code>this particular example of the problem</code> or that it should be <code>one of two</code> arguments. I&#39;m asking about general case. If it&#39;s not possible - just say so and explain why it is the case. This would be a valid answer."}], "answers": [{"comments": [{"owner": {"reputation": 4989, "user_id": 1685095, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/5f06068bb9b4c00f12582ccc0ba64c4a?s=128&d=identicon&r=PG", "display_name": "user1685095", "link": "https://stackoverflow.com/users/1685095/user1685095"}, "edited": false, "score": 0, "creation_date": 1506623071, "post_id": 46473008, "comment_id": 79906958, "body": "Well, I also told about capturing invariants statically. Maybe in this case this is easy with enum, but suppose there would be more than two parameters one on which should be present."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 2, "last_activity_date": 1506612552, "creation_date": 1506612552, "answer_id": 46473008, "question_id": 46471631, "link": "https://stackoverflow.com/questions/46471631/can-i-use-types-to-express-that-at-least-one-argument-should-be-some-for-a-const/46473008#46473008", "title": "Can I use types to express that at least one argument should be Some for a constructor?", "body": "<p>It's better to model the problem to capture the invariants statically, rather than relying on runtime checks. Matthieu's suggestion of using an <code>enum</code> might look like this:</p>\n\n<pre><code>enum RangeBound&lt;V&gt; {\n    Between(V, V),\n    LowerBounded(V),\n    UpperBounded(V),\n}\n\nstruct Range&lt;S, E, V: Ord&gt;(\n    RangeBound&lt;V&gt;,\n    #[serde(skip)] S,\n    #[serde(skip)] E,\n);\n</code></pre>\n\n<p>It is not possible to create a <code>RangeBound</code> without at least one value.</p>\n\n<p>This approach will probably require a custom <code>Deserialize</code> implementation though.</p>\n"}], "owner": {"reputation": 4989, "user_id": 1685095, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/5f06068bb9b4c00f12582ccc0ba64c4a?s=128&d=identicon&r=PG", "display_name": "user1685095", "link": "https://stackoverflow.com/users/1685095/user1685095"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 62, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1506612552, "creation_date": 1506608841, "last_edit_date": 1506609160, "question_id": 46471631, "link": "https://stackoverflow.com/questions/46471631/can-i-use-types-to-express-that-at-least-one-argument-should-be-some-for-a-const", "title": "Can I use types to express that at least one argument should be Some for a constructor?", "body": "<p>With some help, I've been able to create this code which tries to describe a range of numbers:</p>\n\n<pre><code>#[derive(Debug, Default)]\nstruct Inclusive;\n#[derive(Debug, Default)]\nstruct Exclusive;\n\n#[derive(Deserialize)]\nstruct Range&lt;S, E, V: Ord&gt;(\n    Option&lt;V&gt;,\n    Option&lt;V&gt;,\n    #[serde(skip)] S,\n    #[serde(skip)] E,\n);\n\n\nfn main () {\n    let data = \"[[1, null]]\";\n    let rs: Vec&lt;Range&lt;Inclusive, Exclusive, i32&gt;&gt; = serde_json::from_str(data)\n         .expect(\"Error\");\n    println!(\"Range from {:?} to {:?}\", rs[0].0, rs[0].1);\n}\n</code></pre>\n\n<p>Is it possible to describe via types that <code>Range</code> should have at least one bound so that <code>[null, null]</code> would throw a deserialization error at runtime?</p>\n"}, {"tags": ["rust", "serde", "phantom-types", "serde-json"], "answers": [{"comments": [{"owner": {"reputation": 4989, "user_id": 1685095, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/5f06068bb9b4c00f12582ccc0ba64c4a?s=128&d=identicon&r=PG", "display_name": "user1685095", "link": "https://stackoverflow.com/users/1685095/user1685095"}, "edited": false, "score": 0, "creation_date": 1506605231, "post_id": 46469782, "comment_id": 79895750, "body": "Oh, thanks! Seems like a nice solution. Is there a way to constrain <code>Range</code> constructor so that exactly one of the bounds would be <code>Some</code>?"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 4989, "user_id": 1685095, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/5f06068bb9b4c00f12582ccc0ba64c4a?s=128&d=identicon&r=PG", "display_name": "user1685095", "link": "https://stackoverflow.com/users/1685095/user1685095"}, "edited": false, "score": 0, "creation_date": 1506605309, "post_id": 46469782, "comment_id": 79895809, "body": "@user1685095 That, I believe, would make a separate question. Consider using an enum."}], "tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": false, "score": 3, "last_activity_date": 1506605237, "last_edit_date": 1506605237, "creation_date": 1506603456, "answer_id": 46469782, "question_id": 46469334, "link": "https://stackoverflow.com/questions/46469334/deserialize-json-array-into-tuple-and-give-it-type-tags/46469782#46469782", "title": "Deserialize JSON array into tuple and give it type tags", "body": "<p>You seem to want serde to ignore certain fields entirely. That can be done with <a href=\"https://serde.rs/field-attrs.html#serdeskip\" rel=\"nofollow noreferrer\"><code>#[serde(skip)]</code></a>. Serde will fetch a default value from <code>Default::default()</code>, which is available for <code>PhantomData</code>.</p>\n\n<pre><code>#[derive(Debug, Deserialize)]\nstruct Range&lt;S, E, V: Ord&gt;(\n    Option&lt;V&gt;,\n    Option&lt;V&gt;,\n    #[serde(skip)] PhantomData&lt;S&gt;,\n    #[serde(skip)] PhantomData&lt;E&gt;,\n);\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=d6026ebda78893657ba2bd71f32b9260&amp;version=stable\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>On (possibly) a side note, if your types <code>Inclusive</code> and <code>Exclusive</code> are always unit-like and not singletons, you might consider holding them directly instead of <code>PhantomData</code>, since they will also be zero-sized.</p>\n\n<pre><code>#[derive(Debug, Default)]\nstruct Inclusive;\n#[derive(Debug, Default)]\nstruct Exclusive;\n\n#[derive(Deserialize)]\nstruct Range&lt;S, E, V: Ord&gt;(\n    Option&lt;V&gt;,\n    Option&lt;V&gt;,\n    #[serde(skip)] S,\n    #[serde(skip)] E,\n);\n</code></pre>\n"}], "owner": {"reputation": 4989, "user_id": 1685095, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/5f06068bb9b4c00f12582ccc0ba64c4a?s=128&d=identicon&r=PG", "display_name": "user1685095", "link": "https://stackoverflow.com/users/1685095/user1685095"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 432, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1538856446, "creation_date": 1506602126, "last_edit_date": 1538856446, "question_id": 46469334, "link": "https://stackoverflow.com/questions/46469334/deserialize-json-array-into-tuple-and-give-it-type-tags", "title": "Deserialize JSON array into tuple and give it type tags", "body": "<p>I have JSON that looks like:</p>\n\n<pre><code>[{\"range\": [1, 2]}, {\"range\": [2, 5]}]\n</code></pre>\n\n<p>The objects in array have fields other than <code>range</code> of course, but it doesn't matter.</p>\n\n<p>Would it be possible to deserialize them into tuples that have two phantom types to indicate whether the start and end are inclusive or exclusive automatically?</p>\n\n<p>This could also be solved with deserialzing numbers into some kind of tuples with phantom types.</p>\n\n<pre><code>#[macro_use]\nextern crate serde_derive;\nextern crate serde_json;\n\nuse std::marker::PhantomData;\n\n#[derive(Debug)]\nstruct Inclusive;\n#[derive(Debug)]\nstruct Exclusive;\n\n#[derive(Deserialize)]\nstruct Range&lt;S, E, V: Ord&gt;(Option&lt;V&gt;, Option&lt;V&gt;, PhantomData&lt;S&gt;, PhantomData&lt;E&gt;);\n\nfn main() {\n    let data = \"[1, 2]\";\n    let r: Range&lt;Inclusive, Exclusive, i32&gt; = serde_json::from_str(data).expect(\"Error\");\n    println!(\"Range from {:?} to {:?}\", r.0, r.1);\n}\n</code></pre>\n\n<p>This doesn't work because <code>serde_json</code> seems to be ignorant about <code>PhantomData</code> and expects arrays of size <code>4</code>, which can be solved by implementing <code>Deserializer</code> manually, which is exactly the thing I'd like to avoid.</p>\n\n<p>I don't have high hopes, but maybe this can be done and I don't know something.</p>\n"}]