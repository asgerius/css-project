[{"tags": ["reference", "rust", "traits"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1534374929, "post_id": 51867505, "comment_id": 90687111, "body": "Did you mean <code>T: Test</code> in these cases? When you write <code>&amp;&#39;a Test</code> it&#39;s the same as <code>&amp;&#39;a dyn Test</code>, a trait object."}, {"owner": {"reputation": 43, "user_id": 10019567, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/l4D4m.png?s=128&g=1", "display_name": "Alsafi", "link": "https://stackoverflow.com/users/10019567/alsafi"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1534375216, "post_id": 51867505, "comment_id": 90687184, "body": "Peter Hall I tried using impl&lt;T: Test&gt;, but that caused a problem because I might not want to return the same type as the inputs. The only guarantee is that the output also implements Test. Perhaps I&#39;m not understanding you correctly. I&#39;ll have to look up dyn."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1534375851, "post_id": 51867505, "comment_id": 90687325, "body": "<code>dyn</code> is just newer syntax for what you&#39;ve written, which emphasises that the concrete type is not known at compile-time."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1534377389, "post_id": 51867505, "comment_id": 90687641, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/29256519/i-implemented-a-trait-for-another-trait-but-cannot-call-methods-from-both-traits\">I implemented a trait for another trait but cannot call methods from both traits</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1534377461, "post_id": 51867505, "comment_id": 90687658, "body": "Actually, <a href=\"https://stackoverflow.com/questions/43989065/cant-implement-a-trait-i-dont-own-for-all-types-that-implement-a-trait-i-do-ow?noredirect=1&amp;lq=1\">Can&#39;t implement a trait I don&#39;t own for all types that implement a trait I do own</a> might be more precise"}], "answers": [{"comments": [{"owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "edited": false, "score": 1, "creation_date": 1534410253, "post_id": 51868349, "comment_id": 90698144, "body": "You can combine this with your original approach to avoid <code>Box</code>ing everything: <code>impl&lt;&#39;a, &#39;b, T1: Test, T2: Test&gt; Add&lt;V&lt;&amp;&#39;b T2&gt;&gt; for V&lt;&amp;&#39;a T1&gt;</code>"}], "tags": [], "owner": {"reputation": 43, "user_id": 10019567, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/l4D4m.png?s=128&g=1", "display_name": "Alsafi", "link": "https://stackoverflow.com/users/10019567/alsafi"}, "is_accepted": false, "score": 1, "last_activity_date": 1534382596, "last_edit_date": 1534382596, "creation_date": 1534381815, "answer_id": 51868349, "question_id": 51867505, "link": "https://stackoverflow.com/questions/51867505/rust-cant-find-trait-implementation/51868349#51868349", "title": "Rust can&#39;t find trait implementation", "body": "<p>I found another approach that changes the behavior slightly, but works.</p>\n\n<pre><code>struct V&lt;T&gt;(T);\n\nuse std::ops::Add;\nimpl&lt;T1: Test, T2: Test&gt; Add&lt;V&lt;Box&lt;T2&gt;&gt;&gt; for V&lt;Box&lt;T1&gt;&gt; {\n    type Output = V&lt;Box&lt;Test&gt;&gt;;\n    fn add(self, other: V&lt;Box&lt;T2&gt;&gt;) -&gt; Self::Output {\n        unimplemented!()\n    }\n}\n</code></pre>\n\n<p>That allows it to return any type that implements <code>Test</code>, at the cost of wrapping everything in a <code>Box</code> and a dummy struct <code>V</code>. Not very elegant, and I still don't understand why my original code doesn't work, but at least this has the behavior I wanted.</p>\n"}, {"tags": [], "owner": {"reputation": 129, "user_id": 2958778, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2480b04b9493594c5f1d6750041b3963?s=128&d=identicon&r=PG&f=1", "display_name": "Scott Maddox", "link": "https://stackoverflow.com/users/2958778/scott-maddox"}, "is_accepted": false, "score": 1, "last_activity_date": 1534772017, "last_edit_date": 1534772017, "creation_date": 1534732766, "answer_id": 51923523, "question_id": 51867505, "link": "https://stackoverflow.com/questions/51867505/rust-cant-find-trait-implementation/51923523#51923523", "title": "Rust can&#39;t find trait implementation", "body": "<p>The problem is that the compiler cannot implicitly convert from <code>&amp;Foo</code> into <code>&amp;Test</code>. If you explicitly convert it into <code>&amp;Test</code> first, then the operator overloading works:</p>\n\n<pre><code>fn test_add() {\n    let foo: &amp;Test = &amp;Foo(5);\n    foo + &amp;Bar(5);\n}\n</code></pre>\n\n<p>Alternatively, you can use the <a href=\"https://doc.rust-lang.org/book/second-edition/ch19-03-advanced-traits.html#fully-qualified-syntax-for-disambiguation-calling-methods-with-the-same-name\" rel=\"nofollow noreferrer\">fully qualified syntax</a>:</p>\n\n<pre><code>fn test_add() {\n    &lt;&amp;Test as Add&lt;&amp;Test&gt;&gt;::add(&amp;Foo(5), &amp;Bar(5));\n}\n</code></pre>\n"}], "owner": {"reputation": 43, "user_id": 10019567, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/l4D4m.png?s=128&g=1", "display_name": "Alsafi", "link": "https://stackoverflow.com/users/10019567/alsafi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1487, "favorite_count": 1, "answer_count": 2, "score": 0, "last_activity_date": 1571645024, "creation_date": 1534373561, "last_edit_date": 1571645024, "question_id": 51867505, "link": "https://stackoverflow.com/questions/51867505/rust-cant-find-trait-implementation", "title": "Rust can&#39;t find trait implementation", "body": "<p>I'm trying to implement the <code>Add</code> trait for anything that implements another trait (in the example code the <code>Test</code> trait). I'm using references in the <code>Add</code> implementation because not everything that implements <code>Test</code> will be the same size. The code below compiles fine:</p>\n\n<pre><code>use std::ops::Add;\n\nstruct Foo(i32);\nstruct Bar(i64);\n\ntrait Test {}\n\nimpl Test for Foo {}\nimpl Test for Bar {}\n\nimpl&lt;'a, 'b&gt; Add&lt;&amp;'b Test&gt; for &amp;'a Test {\n    type Output = Box&lt;Test&gt;;\n\n    fn add(self, other: &amp;'b Test) -&gt; Box&lt;Test&gt; {\n        if true {\n            Box::new(Foo(5))\n        } else {\n            Box::new(Bar(5))\n        }\n    }   \n}\n</code></pre>\n\n<p>When I try to actually use <code>Add</code>, as below, it says that the operation could not be applied because the implementation of <code>Add</code> for <code>&amp;Foo</code> is missing.</p>\n\n<pre><code>fn test_add() {\n    &amp;Foo(5) + &amp;Bar(5)\n}\n</code></pre>\n\n<p>Have I defined the implementation incorrectly? Have I called it incorrectly? The goal is to make the function add take two references to objects which both implement <code>Test</code>, and return a reference (or box) to a new object that implements <code>Test</code> (and might not be the same underlying type as either of the inputs).</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1534364911, "post_id": 51865445, "comment_id": 90684118, "body": "This is basically a duplicate of <a href=\"https://stackoverflow.com/questions/38006421/rust-borrow-checker-only-complains-about-borrowing-as-mutable-multiple-times-whe\">Rust Borrow checker only complains about borrowing as mutable multiple times when a function that returns a reference with the same lifetime assigned</a>"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1534365228, "post_id": 51865445, "comment_id": 90684237, "body": "@Shepmaster Note quite? That question is about returning with the same lifetime. The question here <a href=\"https://play.rust-lang.org/?gist=719d29227e850e96d4af0b141452160d&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">fails just as well</a> when the functions don&#39;t return anything."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1534365436, "post_id": 51865445, "comment_id": 90684314, "body": "@mcarton I&#39;m still looking for the true duplicate which uses methods instead of functions. The closures and methods both have the same root problem which is that they can store the reference inside of themselves, as you point out."}], "answers": [{"comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1534364617, "post_id": 51865695, "comment_id": 90683993, "body": "@Shepmaster I&#39;m seriously wondering if don&#39;t just have a rustfmt bot editing every single question and answer on the Rust tag. When do you even sleep? :D"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1534364782, "post_id": 51865695, "comment_id": 90684057, "body": "I mean... I basically created my implementation of the playground for the sole purpose of being able to run rustfmt. In this Q&amp;A it was particularly egregious, with the generic declarations looking awfully close to Perl-level line noise. \ud83d\ude07"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1534365531, "post_id": 51865695, "comment_id": 90684353, "body": "<i>due to lifetime elision rules</i> \u2014 is it actually lifetime elision? I didn&#39;t think that HRTBs were part of <i>elision</i>. I guess they kind of have to be?"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1534365630, "post_id": 51865695, "comment_id": 90684389, "body": "Well, what allows you elide lifetimes but lifetime elision rules?"}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 4, "last_activity_date": 1534364411, "last_edit_date": 1534364411, "creation_date": 1534363614, "answer_id": 51865695, "question_id": 51865445, "link": "https://stackoverflow.com/questions/51865445/references-passed-to-functions-passed-to-functions-remain-borrowed/51865695#51865695", "title": "References passed to functions passed to functions remain borrowed", "body": "<p>Let's consider <a href=\"https://play.rust-lang.org/?gist=5a9b60946378f434777314578e01352d&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">this example</a>:</p>\n\n<pre><code>fn foo&lt;'a, T, F, G&gt;(x: &amp;'a mut T, mut f: F, g: G)\nwhere\n    T: 'a,\n    F: FnMut(&amp;'a T) -&gt; &amp;'a T,\n    G: Fn(&amp;'a mut T) -&gt; &amp;'a mut T,\n{\n    {\n        f(x);\n    }\n}\n\nfn main() {\n    let mut x = 5;\n    let mut y = std::cell::RefCell::new(&amp;0);\n    foo(&amp;mut x, |a| { y.replace(&amp;a); a }, |a| a);\n}\n</code></pre>\n\n<p>This is perfectly legal because the function <code>f</code> is guaranteed to take a reference with the same lifetime as <code>x</code>, so it <em>can</em> store a reference to <code>x</code>. But then you can't call <code>g</code> with <code>x</code> because <code>f</code> might have stored <code>x</code> already.</p>\n\n<p>If you change <code>foo</code> to:</p>\n\n<pre><code>fn foo&lt;T, F, G&gt;(x: &amp;mut T, mut f: F, g: G)\nwhere\n    F: FnMut(&amp;T) -&gt; &amp;T,\n    G: Fn(&amp;T) -&gt; &amp;T,\n</code></pre>\n\n<p>which is equivalent (due to lifetime elision rules) to:</p>\n\n<pre><code>fn foo&lt;'a, T, F, G&gt;(x: &amp;'a mut T, mut f: F, g: G)\nwhere\n    T: 'a,\n    F: for&lt;'b&gt; FnMut(&amp;'b T) -&gt; &amp;'b T,\n    G: for&lt;'c&gt; Fn(&amp;'c T) -&gt; &amp;'c T,\n</code></pre>\n\n<p>Then <code>f</code> <a href=\"https://play.rust-lang.org/?gist=d21c6d73b56f88c4e2b1790a982f2725&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">isn't allowed to store the reference <code>x</code></a>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: borrowed data cannot be stored outside of its closure\n  --&gt; src/main.rs:14:33\n   |\n13 |     let mut y = std::cell::RefCell::new(&amp;0);\n   |         -----                           -- cannot infer an appropriate lifetime...\n   |         |\n   |         ...so that variable is valid at time of its declaration\n14 |     foo(&amp;mut x, |a| { y.replace(&amp;a); a }, |a| a);\n   |                 ---             ^^ cannot be stored outside of its closure\n   |                 |\n   |                 borrowed data cannot outlive this closure\n</code></pre>\n\n<p>but calling <code>foo</code> as <code>foo(&amp;mut x, |a| a, |a| a);</code> <a href=\"https://play.rust-lang.org/?gist=74a4be43c382517143d6b70176e7fa8d&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">becomes legal</a>.</p>\n"}], "owner": {"reputation": 589, "user_id": 4352154, "user_type": "registered", "accept_rate": 69, "profile_image": "https://lh4.googleusercontent.com/-63Z0G5h6oFA/AAAAAAAAAAI/AAAAAAAAAHg/guAmotTzoqo/photo.jpg?sz=128", "display_name": "Kai Schmidt", "link": "https://stackoverflow.com/users/4352154/kai-schmidt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 93, "favorite_count": 0, "accepted_answer_id": 51865695, "answer_count": 1, "score": 4, "last_activity_date": 1534364583, "creation_date": 1534362428, "last_edit_date": 1534364583, "question_id": 51865445, "link": "https://stackoverflow.com/questions/51865445/references-passed-to-functions-passed-to-functions-remain-borrowed", "title": "References passed to functions passed to functions remain borrowed", "body": "<p>Consider the following Rust code:</p>\n\n<pre><code>fn foo&lt;'a, T, F, G&gt;(x: &amp;'a mut T, f: F, g: G)\nwhere\n    T: 'a,\n    F: Fn(&amp;'a T) -&gt; &amp;'a T,\n    G: Fn(&amp;'a mut T) -&gt; &amp;'a mut T,\n{\n    {\n        f(x);\n    }\n    g(x);\n}\n\nfn main() {\n    let mut x = 5;\n    foo(&amp;mut x, |a| a, |a| a);\n}\n</code></pre>\n\n<p>This gives the compiler error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `*x` as mutable because it is also borrowed as immutable\n  --&gt; src/main.rs:10:7\n   |\n8  |         f(x);\n   |           - immutable borrow occurs here\n9  |     }\n10 |     g(x);\n   |       ^ mutable borrow occurs here\n11 | }\n   | - immutable borrow ends here\n</code></pre>\n\n<p>I do not understand why the immutable borrow of <code>x</code> ends on line 11. For one, <code>f(x)</code> is in an inner scope which ends on line 9. However, the return value of <code>f(x)</code> is not bound to any variable, so I would think the borrow should end on line 8, and the inner scope shouldn't even be necessary.</p>\n"}, {"tags": ["rust", "borrowing"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1534358868, "post_id": 51864616, "comment_id": 90681489, "body": "<i>Converts the character to a String to a &amp;str</i> \u2014 but why?"}, {"owner": {"reputation": 1651, "user_id": 1738415, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/cf9cfa75d371c16d38c833867d545593?s=128&d=identicon&r=PG&f=1", "display_name": "Simon Carlson", "link": "https://stackoverflow.com/users/1738415/simon-carlson"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1534358935, "post_id": 51864616, "comment_id": 90681511, "body": "@Shepmaster Don&#39;t know how to convert a char to a &amp;str otherwise"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1534359016, "post_id": 51864616, "comment_id": 90681548, "body": "@SimonCarlson but why do you need to convert in the first place?"}, {"owner": {"reputation": 1651, "user_id": 1738415, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/cf9cfa75d371c16d38c833867d545593?s=128&d=identicon&r=PG&f=1", "display_name": "Simon Carlson", "link": "https://stackoverflow.com/users/1738415/simon-carlson"}, "edited": false, "score": 0, "creation_date": 1534359178, "post_id": 51864616, "comment_id": 90681616, "body": "When pushing the char into the stack, I get the error &quot;expected char, found str&quot; for instance when matching <code>&quot;(&quot; | &quot;[&quot; | &quot;{&quot; =&gt; stack.push(c)</code>. I did not find a way to create or compare with char literals, hence tried going for string slices instead, and now I&#39;m at this stage."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 3, "creation_date": 1534359220, "post_id": 51864616, "comment_id": 90681638, "body": "<code>&quot;(&quot;</code> is indeed a string literal, if you want a <code>char</code> literal, you should use <code>&#39;(&#39;</code>"}, {"owner": {"reputation": 1651, "user_id": 1738415, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/cf9cfa75d371c16d38c833867d545593?s=128&d=identicon&r=PG&f=1", "display_name": "Simon Carlson", "link": "https://stackoverflow.com/users/1738415/simon-carlson"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1534359280, "post_id": 51864616, "comment_id": 90681671, "body": "@mcarton That solves a lot of issues. For the sake of learning though, say we have a stack with string slices, how can one deal with the lifetime issues posed in the question?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1534420408, "post_id": 51864616, "comment_id": 90704039, "body": "If you had a stack with string slices, you wouldn&#39;t have lifetime issues because you could <code>match</code> against each slice directly with no conversion: <a href=\"https://play.rust-lang.org/?gist=6e2e0e6e30bc750ee02206d34876b9ef&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a>"}], "answers": [{"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 4, "last_activity_date": 1534361287, "last_edit_date": 1534361287, "creation_date": 1534359868, "answer_id": 51864892, "question_id": 51864616, "link": "https://stackoverflow.com/questions/51864616/lifetime-issues-while-balancing-brackets/51864892#51864892", "title": "Lifetime issues while balancing brackets", "body": "<p>You seem to confuse a string literal <code>\"(\"</code> with a <code>char</code> literal <code>'('</code>. If you replace all string literals, your code works:</p>\n\n<pre><code>for &amp;c in &amp;self.stack {\n    match c {\n        '(' | '[' | '{' =&gt; stack.push(c),\n        ')' | ']' | '}' =&gt; {\n            let popped = stack.pop();\n            match popped {\n                Some(')') =&gt; {\n                    if c != '(' {\n                        return false;\n                    };\n                }\n                Some(']') =&gt; {\n                    if c != '[' {\n                        return false;\n                    };\n                }\n                Some('}') =&gt; {\n                    if c != '{' {\n                        return false;\n                    };\n                }\n                _ =&gt; return false,\n            }\n        }\n        _ =&gt; continue,\n    }\n}\n</code></pre>\n\n<p>Rust, unlike for example Python or Bash, has a different type for <code>char</code> and for strings. It is slightly misleading though, as it doesn't really represent a character, but rather a Unicode scalar value. Some things that you would consider a character are not actually representable by a <code>char</code> (e.g. lots of emojis, or some accentuated letters like <code>\u0254\u0303</code>). This means that you might want to think twice whether to use <code>char</code>s or strings for some applications. For the purpose of balancing brackets however, it's perfectly fine to use <code>char</code>; I don't expect even fancy Unicode brackets to not have their own scalar value.</p>\n\n<p>Note that I have also have changed the loop to use <code>&amp;c</code>, this is because iterating the stack would yield references to its elements (so <code>&amp;char</code> in our case), but that's slightly inconvenient in this case. Using <code>&amp;c</code> makes sure that <code>c</code> itself is a <code>char</code> (<code>&amp;c: &amp;char</code> &lt;=> <code>c: char</code>).</p>\n\n<p>As for the follow-up question</p>\n\n<blockquote>\n  <p>say we have a stack with string slices, how can one deal with the lifetime issues</p>\n</blockquote>\n\n<p>Well, that would depend exactly on why the string would need to be saved (which we have seen to not be necessary).</p>\n\n<p>As the problem comes from trying to store a reference to a temporary string (the <code>c.to_string()</code> in your code), you could store owned <code>String</code>s instead (you've already allocated them anyways).</p>\n"}], "owner": {"reputation": 1651, "user_id": 1738415, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/cf9cfa75d371c16d38c833867d545593?s=128&d=identicon&r=PG&f=1", "display_name": "Simon Carlson", "link": "https://stackoverflow.com/users/1738415/simon-carlson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 58, "favorite_count": 0, "accepted_answer_id": 51864892, "answer_count": 1, "score": 1, "last_activity_date": 1534361287, "creation_date": 1534358655, "last_edit_date": 1534358799, "question_id": 51864616, "link": "https://stackoverflow.com/questions/51864616/lifetime-issues-while-balancing-brackets", "title": "Lifetime issues while balancing brackets", "body": "<p>I'm facing issues with lifetimes. The implementation should balance three kinds of brackets: <code>(</code>, <code>[</code>, and <code>{</code>. I'm using a stack for it but running into some issues.</p>\n\n<pre><code>pub struct Brackets {\n    stack: Vec&lt;char&gt;,\n}\n\nimpl&lt;'a&gt; From&lt;&amp;'a str&gt; for Brackets {\n    fn from(input: &amp;str) -&gt; Self {\n        let mut stack: Vec&lt;char&gt; = Vec::new();\n        for c in input.chars() {\n            stack.push(c);\n        }\n\n        Brackets { stack }\n    }\n}\n\nimpl&lt;'a&gt; Brackets {\n    pub fn are_balanced(&amp;self) -&gt; bool {\n        let mut stack = Vec::new();\n        for c in &amp;self.stack {\n            // Converts the character to a String to a &amp;str... Feels dumb\n            let slice = &amp;c.to_string()[..];\n            match slice {\n                \"(\" | \"[\" | \"{\" =&gt; stack.push(slice),\n                \")\" | \"]\" | \"}\" =&gt; {\n                    let popped = stack.pop();\n                    match popped {\n                        Some(\")\") =&gt; {\n                            if slice != \"(\" {\n                                return false;\n                            };\n                        }\n                        Some(\"]\") =&gt; {\n                            if slice != \"[\" {\n                                return false;\n                            };\n                        }\n                        Some(\"}\") =&gt; {\n                            if slice != \"{\" {\n                                return false;\n                            };\n                        }\n                        _ =&gt; return false,\n                    }\n                }\n                _ =&gt; continue,\n            }\n        }\n\n        true\n    }\n}\n</code></pre>\n\n<p>I want to push an opening bracket, and pop a closing bracket. If a closing bracket does not match an opening bracket, the brackets are not balanced. Any non-bracket input I ignore. </p>\n\n<p>The issue I'm having:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: borrowed value does not live long enough\n  --&gt; src/main.rs:21:26\n   |\n21 |             let slice = &amp;c.to_string()[..];\n   |                          ^^^^^^^^^^^^^ temporary value does not live long enough\n...\n47 |         }\n   |         - temporary value dropped here while still borrowed\n...\n50 |     }\n   |     - temporary value needs to live until here\n</code></pre>\n\n<p>I understand that the stack in the <code>are_balanced(&amp;self)</code> function lives longer than the <code>slice</code> variable I'm pushing into the stack. How can I get around this?  I've tried changing the type of the stacks to <code>&amp;'a str</code> and put a lifetime on the <code>Brackets</code> struct but have not succeeded. A guess is that it could be solved by using owned <code>String</code>s everywhere, but it seems unnecessarily expensive and I'd really like to see a solution to this..</p>\n"}, {"tags": ["rust", "unsafe"], "answers": [{"comments": [{"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1534363199, "post_id": 51865162, "comment_id": 90683356, "body": "Assuming, you only return values, i.e. clone the <code>Item</code>, would this be safe?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1534364878, "post_id": 51865162, "comment_id": 90684098, "body": "@Tim If <code>next</code> returned <code>Option&lt;(i32, i32)&gt;</code>? I think that would be safe, but I&#39;m not totally convinced in my own mind yet."}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1534364925, "post_id": 51865162, "comment_id": 90684127, "body": "Yup, that is actually my use case but I dropped it in order to make a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. Aktually, I have a <code>(&amp;u64, &amp;DirEntry)</code> which will be converted to <code>(u64, PathBuf)</code>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 1, "creation_date": 1534421517, "post_id": 51865162, "comment_id": 90704695, "body": "@Tim Here&#39;s what I&#39;ve found so far: It seems like this should be safe by analogy to <a href=\"https://doc.rust-lang.org/nightly/std/cell/struct.Ref.html#method.map\" rel=\"nofollow noreferrer\">Ref::map</a>; however, there is a subtle interaction with concurrency that makes the equivalent of <code>map</code> for <code>RwLockReadGuard</code> <a href=\"https://github.com/rust-lang/rust/issues/44189\" rel=\"nofollow noreferrer\">unsound, or at least potentially unsound with future changes to the stdlib on Windows</a>. I don&#39;t understand the issue well enough to say for sure whether your proposed <code>MapIter</code> would also be unsound."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1534421760, "post_id": 51865162, "comment_id": 90704856, "body": "However, it seems very improbable that you could trigger this soundness bug by accident. So if it&#39;s very unlikely to be triggered and you&#39;re not even sure it&#39;s there, you might find the risk acceptable. I believe the API can be implemented safely, so even if the implementation is wrong, it can be fixed in the future. At least guarantee that <code>iter</code> is dropped before <code>guard</code>, to avoid problems from that angle."}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1534421775, "post_id": 51865162, "comment_id": 90704863, "body": "I already stumbled across the issue too. I worked around the <code>MapIter</code>, it&#39;s a bit slower though, but it&#39;s cold code anyway."}], "tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 4, "last_activity_date": 1534361245, "creation_date": 1534361245, "answer_id": 51865162, "question_id": 51863819, "link": "https://stackoverflow.com/questions/51863819/how-do-i-return-an-iterator-over-a-collection-encapsulated-by-a-refcell-rwlock-r/51865162#51865162", "title": "How do I return an Iterator over a collection encapsulated by a RefCell/RwLock Ref/Guard using unsafe code?", "body": "<p>No, it's not safe. I can use <code>Container</code> to create a dangling reference in safe code:</p>\n\n<pre><code>let container = Container::new();       // create a container\nlet r = {\n    let mut it = container.iter();\n    it.next()                           // obtain a reference to part of it\n};\ncontainer.map.write().unwrap().clear(); // empty the container\nprintln!(\"{:?}\", r);                    // oh dear.\n</code></pre>\n\n<p>In <a href=\"https://play.rust-lang.org/?gist=08c3753344ad8c61fb7c9c88ba0a5cdf&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">the playground</a> this compiles, which isn't good, because <code>r</code> contains references to data that are invalidated when the <code>HashMap</code> is cleared.</p>\n\n<p><a href=\"https://stackoverflow.com/a/33542412/3650362\">Vladimir Matveev's answer to a similar question</a> explains in more detail why this is unsound, and contains the following concise summary:</p>\n\n<blockquote>\n  <p>You cannot do this because it would allow you to circumvent runtime checks for uniqueness violations.</p>\n</blockquote>\n"}], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 340, "favorite_count": 1, "accepted_answer_id": 51865162, "answer_count": 1, "score": 1, "last_activity_date": 1534361245, "creation_date": 1534355124, "last_edit_date": 1534357058, "question_id": 51863819, "link": "https://stackoverflow.com/questions/51863819/how-do-i-return-an-iterator-over-a-collection-encapsulated-by-a-refcell-rwlock-r", "title": "How do I return an Iterator over a collection encapsulated by a RefCell/RwLock Ref/Guard using unsafe code?", "body": "<p>Multiple questions were  already asked regarding this topic:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/33541492/returning-iterator-of-a-vec-in-a-refcell\">Returning iterator of a Vec in a RefCell</a></li>\n<li><a href=\"https://stackoverflow.com/questions/42676541/how-do-i-return-an-iterator-that-has-a-reference-to-something-inside-a-refcell\">How do I return an iterator that has a reference to something inside a RefCell?</a></li>\n<li><a href=\"https://stackoverflow.com/questions/51664098/how-can-i-return-an-iterator-over-a-locked-struct-member-in-rust\">How can I return an iterator over a locked struct member in Rust?</a></li>\n</ul>\n\n<p>The answers are more or less: <em>It's not possible</em> (without unsafe).</p>\n\n<p>I tried the unsafe variant myself and want to ask if this way is safe. </p>\n\n<p>The idea is that I wrap the guard in a struct that implements <code>Iterator</code>. Besides the guard, an iterator is stored which will be created from the stored guard:</p>\n\n<pre><code>struct MapIter&lt;'a&gt; {\n    guard: RwLockReadGuard&lt;'a, HashMap&lt;i32, i32&gt;&gt;,\n    iter:  Iter&lt;'a, i32, i32&gt;,\n}\n</code></pre>\n\n<p>It's created with these lines:</p>\n\n<pre><code>impl&lt;'a&gt; MapIter&lt;'a&gt; {\n    fn new(map: &amp;'a RwLock&lt;HashMap&lt;i32, i32&gt;&gt;) -&gt; Box&lt;Self&gt; {\n        // create a `box Self`\n        // the iterator remains uninitialized.\n        let mut boxed = Box::new(Self {\n            guard: map.read().expect(\"ToDo\"),\n            iter:  unsafe { mem::uninitialized() },\n        });\n\n        // create the iterator from `box Self`.\n        boxed.iter = unsafe { \n            (*(&amp;boxed.guard as *const RwLockReadGuard&lt;'a, HashMap&lt;i32, i32&gt;&gt;)).iter() \n        };\n        boxed\n    }\n}\n</code></pre>\n\n<p>Now it can implement <code>Iterator</code>:</p>\n\n<pre><code>impl&lt;'a&gt; Iterator for MapIter&lt;'a&gt; {\n    type Item = (&amp;'a i32, &amp;'a i32);\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        self.iter.next()\n    }\n}\n</code></pre>\n\n<p>Is this code safe?</p>\n\n<p>See this code in action at the <a href=\"https://play.rust-lang.org/?gist=fa1425dccbaca26d0afe0274b1a9a167&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a>.</p>\n\n<p>Additionally I get a <em>trivial cast</em> warning</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning: trivial cast: warning: trivial cast: `&amp;std::sync::RwLockReadGuard&lt;'_, std::collections::HashMap&lt;i32, i32&gt;&gt;` as `*const std::sync::RwLockReadGuard&lt;'a, std::collections::HashMap&lt;i32, i32&gt;&gt;`. Cast can be replaced by coercion, this might require type ascription or a temporary variable\n   |\n   | unsafe { (*(&amp;boxed.guard as *const RwLockReadGuard&lt;'a, HashMap&lt;i32, i32&gt;&gt;)).iter() };\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n</code></pre>\n\n<p>How to get around this?</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1534343512, "post_id": 51860663, "comment_id": 90673672, "body": "How would this hypothetical library deal with the user calling <code>exit</code> or the process being killed via the OS? It&#39;s definitely not a good idea."}, {"owner": {"reputation": 939, "user_id": 2870802, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-lHzULJklIJg/AAAAAAAAAAI/AAAAAAAABwk/_pJZF95FiAY/photo.jpg?sz=128", "display_name": "ozkriff", "link": "https://stackoverflow.com/users/2870802/ozkriff"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1534344376, "post_id": 51860663, "comment_id": 90674203, "body": "It won&#39;t handle these situations at all I guess. That&#39;s one reason why such a library is not a good idea in practice - it&#39;s a theoretical question."}, {"owner": {"reputation": 17491, "user_id": 901827, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/86a6acccf7e8dbe398ebda4f8524ed50?s=128&d=identicon&r=PG", "display_name": "LinearZoetrope", "link": "https://stackoverflow.com/users/901827/linearzoetrope"}, "edited": false, "score": 0, "creation_date": 1534367766, "post_id": 51860663, "comment_id": 90685245, "body": "You may be able to check RUSTFLAGS in a build.rs <a href=\"https://doc.rust-lang.org/cargo/reference/environment-variables.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/cargo/reference/environment-variables.html</a> and try to amend <code>-C panic=$PROFILE</code> to <code>-C panic=unwind</code>, but I&#39;m not sure it&#39;d work. See the original PR for panic=abort: <a href=\"https://github.com/rust-lang/rust/pull/36794\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/pull/36794</a>"}, {"owner": {"reputation": 17491, "user_id": 901827, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/86a6acccf7e8dbe398ebda4f8524ed50?s=128&d=identicon&r=PG", "display_name": "LinearZoetrope", "link": "https://stackoverflow.com/users/901827/linearzoetrope"}, "edited": false, "score": 0, "creation_date": 1534369518, "post_id": 51860663, "comment_id": 90685800, "body": "Note, I&#39;m not advocating subtly altering behavior, my suspicion is it&#39;ll cause a linker error."}, {"owner": {"reputation": 11412, "user_id": 617159, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/fc43cf2d76ce0981a21c0e5a817f96f5?s=128&d=identicon&r=PG", "display_name": "Lambda Fairy", "link": "https://stackoverflow.com/users/617159/lambda-fairy"}, "reply_to_user": {"reputation": 17491, "user_id": 901827, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/86a6acccf7e8dbe398ebda4f8524ed50?s=128&d=identicon&r=PG", "display_name": "LinearZoetrope", "link": "https://stackoverflow.com/users/901827/linearzoetrope"}, "edited": false, "score": 0, "creation_date": 1591072763, "post_id": 51860663, "comment_id": 109909519, "body": "@LinearZoetrope <code>RUSTFLAGS</code> is for the user to pass through extra flags; it&#39;s not set in a typical build. As far as I know, Cargo doesn&#39;t tell the build script what flags it&#39;s passing to rustc."}], "owner": {"reputation": 939, "user_id": 2870802, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-lHzULJklIJg/AAAAAAAAAAI/AAAAAAAABwk/_pJZF95FiAY/photo.jpg?sz=128", "display_name": "ozkriff", "link": "https://stackoverflow.com/users/2870802/ozkriff"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 306, "favorite_count": 1, "answer_count": 0, "score": 14, "last_activity_date": 1534343415, "creation_date": 1534343288, "last_edit_date": 1534343415, "question_id": 51860663, "link": "https://stackoverflow.com/questions/51860663/is-it-possible-to-check-if-panic-is-set-to-abort-while-a-library-is-compilin", "title": "Is it possible to check if `panic` is set to `abort` while a library is compiling?", "body": "<p>It may be not a good idea or not idiomatic, but let's assume that for some reason a library relies on <a href=\"https://doc.rust-lang.org/std/panic/fn.catch_unwind.html\" rel=\"noreferrer\"><code>catch_unwind</code></a> for its business logic.</p>\n\n<p>Can I somehow warn (by failing the compilation with an error message?) a user of this library if <a href=\"https://doc.rust-lang.org/cargo/reference/manifest.html#the-profile-sections\" rel=\"noreferrer\">they set <code>panic = \"abort\"</code></a> in <code>Cargo.toml</code> of their \"terminal\" crate?</p>\n\n<p>I was thinking about checking some environment variable in <code>build.rs</code> but <a href=\"https://doc.rust-lang.org/cargo/reference/environment-variables.html\" rel=\"noreferrer\">can't find any variables with this information</a>.</p>\n"}, {"tags": ["vector", "rust"], "comments": [{"owner": {"reputation": 939, "user_id": 2870802, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-lHzULJklIJg/AAAAAAAAAAI/AAAAAAAABwk/_pJZF95FiAY/photo.jpg?sz=128", "display_name": "ozkriff", "link": "https://stackoverflow.com/users/2870802/ozkriff"}, "edited": false, "score": 1, "creation_date": 1534338494, "post_id": 51859222, "comment_id": 90670752, "body": "Check this question <a href=\"https://stackoverflow.com/questions/13102786/two-dimensional-vectors-in-rust\" title=\"two dimensional vectors in rust\">stackoverflow.com/questions/13102786/&hellip;</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1534339251, "post_id": 51859222, "comment_id": 90671178, "body": "Idiomatic Rust uses <code>snake_case</code> for variables, methods, macros, and fields; <code>UpperCamelCase</code> for types; and <code>SCREAMING_SNAKE_CASE</code> for statics and constants. Use <code>print_vector</code> instead, please."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1534341578, "post_id": 51859222, "comment_id": 90672538, "body": "See also <a href=\"https://stackoverflow.com/q/29523895/155423\">What type should I use for a 2-dimensional array?</a>; <a href=\"https://stackoverflow.com/q/35630131/155423\">Creating a Vector of Vectors in Rust</a>; <a href=\"https://stackoverflow.com/q/50056778/155423\">How can you easily borrow a Vec&lt;Vec&lt;T&gt;&gt; as a &amp;[&amp;[T&#93;&#93;?</a>."}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 4, "creation_date": 1534342464, "post_id": 51859222, "comment_id": 90673027, "body": "How do you want to pass <code>v</code> to the function? As value? As <a href=\"https://doc.rust-lang.org/std/primitive.reference.html\" rel=\"nofollow noreferrer\">reference</a>? Do you need the function to handle <code>Vec</code> or is a <a href=\"https://doc.rust-lang.org/std/slice/\" rel=\"nofollow noreferrer\">slice</a> enough? See <i><a href=\"https://stackoverflow.com/questions/27305585\">What is the difference between passing a value to a function by reference and passing it by Box?</a></i>"}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 1, "creation_date": 1534343493, "post_id": 51859222, "comment_id": 90673663, "body": "It has nothing to do with offending eyes or something. This is the warning from the rust compiler: <i>warning: function <code>printVector</code> should have a snake case name such as <code>print_vector</code></i>"}, {"owner": {"reputation": 622, "user_id": 1710501, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/e308decda9992832f6c0634f134fb7b1?s=128&d=identicon&r=PG", "display_name": "camccar", "link": "https://stackoverflow.com/users/1710501/camccar"}, "edited": false, "score": 1, "creation_date": 1534348125, "post_id": 51859222, "comment_id": 90676383, "body": "I&#39;m aware of the compiler warnings. It&#39;s just a silly thing to complain about. Lots of helpful people gave me actual solutions rather than nit pick the question syntax. Those are the people who actually make stackover flow worth using."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1534351459, "post_id": 51859222, "comment_id": 90678087, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/50056778/how-can-you-easily-borrow-a-vecvect-as-a-t\">How can you easily borrow a Vec&lt;Vec&lt;T&gt;&gt; as a &amp;&#91;&amp;&#91;T&#93;&#93;?</a>"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 3, "creation_date": 1534351772, "post_id": 51859222, "comment_id": 90678228, "body": "@camccar After his comment on the syntax, Shepmaster did your job and researched similar questions, and then gave you links to 3 different relevant questions. Those are the people who actually make stackoverflow worth using."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1534341389, "post_id": 51859390, "comment_id": 90672424, "body": "\ud83d\udc4d\ud83c\udffd This is the only answer which accepts a <code>Vec</code> as an argument, not a reference to one."}], "tags": [], "owner": {"reputation": 13441, "user_id": 2199600, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8sl6u.jpg?s=128&g=1", "display_name": "Igor Drozdov", "link": "https://stackoverflow.com/users/2199600/igor-drozdov"}, "is_accepted": false, "score": 4, "last_activity_date": 1534339538, "last_edit_date": 1534339538, "creation_date": 1534338619, "answer_id": 51859390, "question_id": 51859222, "link": "https://stackoverflow.com/questions/51859222/how-do-i-pass-a-vecveci32-to-a-function/51859390#51859390", "title": "How do I pass a Vec&lt;Vec&lt;i32&gt;&gt; to a function?", "body": "<p>Since you're going to pass vectors to your function, the following code should work:</p>\n\n<pre><code>fn print_vector(vector: Vec&lt;Vec&lt;i32&gt;&gt;) {\n    println!(\"Length{}\", vector.len())\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 176, "user_id": 5417267, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ht3hN.jpg?s=128&g=1", "display_name": "veekxt", "link": "https://stackoverflow.com/users/5417267/veekxt"}, "is_accepted": true, "score": 0, "last_activity_date": 1534343893, "last_edit_date": 1534343893, "creation_date": 1534338622, "answer_id": 51859391, "question_id": 51859222, "link": "https://stackoverflow.com/questions/51859222/how-do-i-pass-a-vecveci32-to-a-function/51859391#51859391", "title": "How do I pass a Vec&lt;Vec&lt;i32&gt;&gt; to a function?", "body": "<pre><code>fn printVector(vector: &amp;Vec&lt;Vec&lt;i32&gt;&gt;) {\n    println!(\"Length{}\", vector.len())\n}\n\nlet v = vec![\n    vec![1, 1, 1],\n    vec![0, 1, 0],\n    vec![0, 1, 0],\n];\nprintVector(&amp;v);\n</code></pre>\n\n<p>In this example, <code>&amp;Vec&lt;Vec&lt;i32&gt;</code> and <code>&amp;[Vec&lt;i32&gt;]</code> are no different; maybe you want to change to this:</p>\n\n<pre><code>fn print_vector(vector: &amp;[Vec&lt;i32&gt;]) {\n    for i in vector {\n        for j in i {\n            println!(\"{}\", j)\n        }\n    }\n}\n\nlet v = vec![\n    vec![1, 1, 1],\n    vec![0, 1, 0],\n    vec![0, 1, 0],\n];\nprint_vector(&amp;v);\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 939, "user_id": 2870802, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-lHzULJklIJg/AAAAAAAAAAI/AAAAAAAABwk/_pJZF95FiAY/photo.jpg?sz=128", "display_name": "ozkriff", "link": "https://stackoverflow.com/users/2870802/ozkriff"}, "is_accepted": false, "score": 3, "last_activity_date": 1534338705, "creation_date": 1534338705, "answer_id": 51859411, "question_id": 51859222, "link": "https://stackoverflow.com/questions/51859222/how-do-i-pass-a-vecveci32-to-a-function/51859411#51859411", "title": "How do I pass a Vec&lt;Vec&lt;i32&gt;&gt; to a function?", "body": "<p>You need to pass a slice of vectors - <code>&amp;[Vec&lt;i32&gt;]</code>, not a slice of slices:</p>\n\n<pre><code>fn print_vector(vector: &amp;[Vec&lt;i32&gt;]) {\n    println!(\"Length {}\", vector.len())\n}\n\nfn main() {\n    let v = vec![vec![1, 1, 1], vec![0, 1, 0], vec![0, 1, 0]];\n    print_vector(&amp;v);\n}\n</code></pre>\n\n<p><a href=\"http://play.rust-lang.org/?gist=b5ebdc1768148ceb14d40eac79efa3eb&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}, {"tags": [], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "is_accepted": false, "score": 7, "last_activity_date": 1534344880, "last_edit_date": 1534344880, "creation_date": 1534340445, "answer_id": 51859869, "question_id": 51859222, "link": "https://stackoverflow.com/questions/51859222/how-do-i-pass-a-vecveci32-to-a-function/51859869#51859869", "title": "How do I pass a Vec&lt;Vec&lt;i32&gt;&gt; to a function?", "body": "<p>You may use a function which accepts a slice of <code>T</code> where <code>T</code> can also be referenced as a slice:</p>\n\n<pre><code>fn print_vector&lt;T&gt;(value: &amp;[T])\nwhere\n    T: AsRef&lt;[i32]&gt;,\n{\n    for slice in value {\n        println!(\"{:?}\", slice.as_ref())\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=ecbcdcb5354e7e4c9b3360f555caf40b&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>If you want to accept any type instead of just <code>i32</code>, you can also generalize this:</p>\n\n<pre><code>fn print_vector&lt;T, D&gt;(value: &amp;[T])\nwhere\n    T: AsRef&lt;[D]&gt;,\n    D: Debug,\n{\n    for slice in value {\n        println!(\"{:?}\", slice.as_ref())\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=3957f5b3647c33de9c65d850d98093b9&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a></p>\n"}], "owner": {"reputation": 622, "user_id": 1710501, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/e308decda9992832f6c0634f134fb7b1?s=128&d=identicon&r=PG", "display_name": "camccar", "link": "https://stackoverflow.com/users/1710501/camccar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1038, "favorite_count": 1, "accepted_answer_id": 51859391, "answer_count": 4, "score": 1, "last_activity_date": 1534344880, "creation_date": 1534337996, "last_edit_date": 1534338762, "question_id": 51859222, "link": "https://stackoverflow.com/questions/51859222/how-do-i-pass-a-vecveci32-to-a-function", "title": "How do I pass a Vec&lt;Vec&lt;i32&gt;&gt; to a function?", "body": "<p>Given a 2D vector of <code>i32</code>s:</p>\n\n<pre><code>let v = vec![\n    vec![1, 1, 1], \n    vec![0, 1, 0], \n    vec![0, 1, 0],\n];\n</code></pre>\n\n<p>How can I pass it to a function to ultimately print its details? I tried: </p>\n\n<pre><code>fn printVector(vector: &amp;[[i32]]) {\n    println!(\"Length{}\", vector.len())\n}\n</code></pre>\n"}, {"tags": ["sql", "postgresql", "rust", "rust-diesel"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1534515288, "last_edit_date": 1534515288, "creation_date": 1534513920, "answer_id": 51896910, "question_id": 51852226, "link": "https://stackoverflow.com/questions/51852226/how-do-i-count-the-number-of-distinct-elements-in-an-array-column-with-diesel/51896910#51896910", "title": "How do I count the number of distinct elements in an array column with Diesel?", "body": "<h1>Add a view</h1>\n\n<p>The simplest thing to do as of Diesel 1.3<sup>1</sup> is to add a view to the database:</p>\n\n<pre class=\"lang-sql prettyprint-override\"><code>CREATE VIEW unique_labels AS (SELECT DISTINCT unnest(labels) FROM t);\n</code></pre>\n\n<p>You can then tell Diesel about the view:</p>\n\n<pre><code>table! {\n    unique_labels (unnest) {\n        unnest -&gt; Text,\n    }\n}\n</code></pre>\n\n<p>And query it directly:</p>\n\n<pre><code>fn count_distinct_labels(conn: &amp;PgConnection) -&gt; i64 {\n    use schema::unique_labels::dsl::*;\n    use diesel::dsl;\n\n    unique_labels.select(dsl::count_star()).first(conn).unwrap()\n}\n</code></pre>\n\n<h1>Use <code>sql_query</code></h1>\n\n<p>You can always fall back to the \"big hammer\" of directly executing SQL:</p>\n\n<pre><code>fn count_distinct_labels(conn: &amp;PgConnection) -&gt; i64 {\n    use diesel::sql_types::BigInt;\n\n    #[derive(QueryableByName)]\n    struct Count {\n        #[sql_type = \"BigInt\"]\n        count: i64,\n    }\n\n    diesel::sql_query(r#\"SELECT COUNT(*) FROM (SELECT DISTINCT unnest(labels) FROM t) AS label\"#)\n        .load::&lt;Count&gt;(conn)\n        .expect(\"Query failed\")\n        .pop()\n        .expect(\"No rows\")\n        .count\n}\n</code></pre>\n\n<hr>\n\n<p><sup>1</sup> Diesel 1.3 does not have the ability to pass your own <code>FROM</code> clause manually, perhaps among other restrictions.</p>\n"}], "owner": {"reputation": 205, "user_id": 8554666, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c0d80205451b80f1cf78061ae20608bd?s=128&d=identicon&r=PG&f=1", "display_name": "pandaman", "link": "https://stackoverflow.com/users/8554666/pandaman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1740, "favorite_count": 0, "accepted_answer_id": 51896910, "answer_count": 1, "score": 1, "last_activity_date": 1534515288, "creation_date": 1534300856, "last_edit_date": 1534510686, "question_id": 51852226, "link": "https://stackoverflow.com/questions/51852226/how-do-i-count-the-number-of-distinct-elements-in-an-array-column-with-diesel", "title": "How do I count the number of distinct elements in an array column with Diesel?", "body": "<p>I'm trying to implement the <code>count_distinct_labels</code> function to count the distinct elements in a column of arrays with Diesel and PostgreSQL.</p>\n\n<p>For example, I have a table like this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>------------------\n|     labels     |\n------------------\n| ['foo', 'bar'] |\n------------------\n| ['bar', 'baz'] |\n------------------\n</code></pre>\n\n<p>In this case, <code>count_distinct_labels()</code> should be <code>3</code>, because there are 3 unique labels (<code>'foo', 'bar', 'baz'</code>).</p>\n\n<p>I found that the following SQL returns the desired result, but I don't know how to translate this into a Diesel expression.</p>\n\n<pre class=\"lang-sql prettyprint-override\"><code>SELECT COUNT(*) FROM (SELECT DISTINCT unnest(labels) FROM t) AS label;\n</code></pre>\n\n<p>Here is my source code: </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[macro_use]\nextern crate diesel;\nextern crate dotenv;\n\nuse diesel::pg::PgConnection;\nuse diesel::prelude::*;\nuse dotenv::dotenv;\nuse std::env;\n\nmod schema {\n    table! {\n        t (id) {\n            id -&gt; Int4,\n            labels -&gt; Array&lt;Text&gt;,\n        }\n    }\n\n    #[derive(Insertable)]\n    #[table_name = \"t\"]\n    pub struct NewRow&lt;'a&gt; {\n        pub labels: &amp;'a [String],\n    }\n}\n\nfn count_distinct_labels(conn: &amp;PgConnection) -&gt; i64 {\n    // SELECT COUNT(*) FROM (SELECT DISTINCT unnest(labels) FROM t) AS label\n    unimplemented!()\n}\n\nfn main() {\n    dotenv().ok();\n\n    let database_url = env::var(\"DATABASE_URL\").expect(\"DATABASE_URL must be set\");\n    let conn = PgConnection::establish(&amp;database_url)\n        .expect(&amp;format!(\"Error connecting to {}\", database_url));\n\n    diesel::insert_into(schema::t::dsl::t)\n        .values(&amp;vec![\n            schema::NewRow {\n                labels: &amp;[\"foo\".to_string(), \"bar\".to_string()],\n            },\n            schema::NewRow {\n                labels: &amp;[\"bar\".to_string(), \"baz\".to_string()],\n            },\n        ]).execute(&amp;conn)\n        .unwrap();\n\n    // how to implement?\n    assert_eq!(count_distinct_labels(&amp;conn), 3);\n}\n</code></pre>\n\n<p>and Cargo.toml:</p>\n\n\n\n<pre><code>[package]\nname = \"how-to-count-distinct\"\nversion = \"0.1.0\"\nauthors = [\"name\"]\n\n[dependencies]\ndiesel = { version = \"1.0\", features = [\"postgres\"] }\ndotenv = \"0.13\"\n</code></pre>\n\n<p>I also created <a href=\"https://github.com/pandaman64/how-to-count-distinct/blob/master/src/main.rs\" rel=\"nofollow noreferrer\">a repo containing the full example</a>. If you want to reproduce, clone this repo and <code>cargo run</code>. Note you have to start the Postgres service before you run the code.</p>\n"}, {"tags": ["assembly", "x86", "rust", "inline-assembly"], "comments": [{"owner": {"reputation": 52454, "user_id": 547981, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/90042f6f33a9f87769fac02096ceea68?s=128&d=identicon&r=PG", "display_name": "Jester", "link": "https://stackoverflow.com/users/547981/jester"}, "edited": false, "score": 6, "creation_date": 1534294606, "post_id": 51851508, "comment_id": 90656026, "body": "I don&#39;t know rust but: I suggest you first try a <code>nop</code> then maybe something like <code>mov ebx, 42</code> to see if the problem is the <code>cpuid</code> (it shouldn&#39;t be). Also verify you are supposed to list the clobbers in a single string and not as <code>&quot;eax&quot;, &quot;ebx&quot;, &quot;ecx&quot;, &quot;edx&quot;</code>. Also use a debugger if possible to see what causes the fault directly."}, {"owner": {"reputation": 189, "user_id": 2312304, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/35c7b78e2b7e42f8f46c259729f1d0cd?s=128&d=identicon&r=PG&f=1", "display_name": "Barry", "link": "https://stackoverflow.com/users/2312304/barry"}, "reply_to_user": {"reputation": 52454, "user_id": 547981, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/90042f6f33a9f87769fac02096ceea68?s=128&d=identicon&r=PG", "display_name": "Jester", "link": "https://stackoverflow.com/users/547981/jester"}, "edited": false, "score": 0, "creation_date": 1534295263, "post_id": 51851508, "comment_id": 90656137, "body": "Thank you Jester. Your clobbers comment was genius. Made it like your syntax and it is now working."}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 1, "creation_date": 1534297162, "post_id": 51851508, "comment_id": 90656485, "body": "Are you sure it makes sense to declare a clobber on EBX when it&#39;s also an output operand?  GNU C inline asm would complain about that.  Also, for CPUID specifically, isn&#39;t there a built-in for it?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1534300578, "post_id": 51851508, "comment_id": 90657085, "body": "See also <a href=\"https://stackoverflow.com/q/48098907/155423\">How do I translate x86 GCC-style C inline assembly to Rust inline assembly?</a>; <a href=\"https://stackoverflow.com/q/34477497/155423\">Rust inline assembly template syntax</a>; <a href=\"https://stackoverflow.com/q/27587201/155423\">Inline assembly confusion when using parameters</a>."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 52454, "user_id": 547981, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/90042f6f33a9f87769fac02096ceea68?s=128&d=identicon&r=PG", "display_name": "Jester", "link": "https://stackoverflow.com/users/547981/jester"}, "edited": false, "score": 0, "creation_date": 1534340461, "post_id": 51851508, "comment_id": 90671897, "body": "@Jester: Since your comment solved the issue, you may wish to morph it into an answer."}], "answers": [{"comments": [{"owner": {"reputation": 189, "user_id": 2312304, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/35c7b78e2b7e42f8f46c259729f1d0cd?s=128&d=identicon&r=PG&f=1", "display_name": "Barry", "link": "https://stackoverflow.com/users/2312304/barry"}, "edited": false, "score": 0, "creation_date": 1534311176, "post_id": 51852139, "comment_id": 90659332, "body": "There is no need for people to react strongly and downvote etc. These are the first lines of Rust I&#39;ve ever written. Just to easily play with the Intel api for education purposes. I&#39;m just trying to have fun."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 189, "user_id": 2312304, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/35c7b78e2b7e42f8f46c259729f1d0cd?s=128&d=identicon&r=PG&f=1", "display_name": "Barry", "link": "https://stackoverflow.com/users/2312304/barry"}, "edited": false, "score": 1, "creation_date": 1534323750, "post_id": 51852139, "comment_id": 90663848, "body": "I&#39;d agree with @Barry here. The title is not about cpuid, it&#39;s about inline assembly, and cpuid just happened to be used as an example. Of course, this might just mean that the question is a duplicate."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1534335612, "post_id": 51852139, "comment_id": 90669192, "body": "@MatthieuM. I actually think that the original title is far too broad. We&#39;d dislike the question &quot;Rust with function example&quot; / &quot;Rust with variable example&quot; / &quot;Rust with trait example&quot; or any formulation of &quot;write examples of &lt;feature&gt; for me&quot;. Additionally, OP wouldn&#39;t want just <i>any</i> inline assembly example \u2014 something that just calls NOP would provide an example but probably not what they want. I&#39;ve made the title more specifically reflect their question body."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 4, "creation_date": 1534338684, "post_id": 51852139, "comment_id": 90670874, "body": "@Shepmaster: Sure, the issue I see however in your answer is that the OP is less inquiring about how to use cpuid, and more about how to use inline assembly; cpuid is just an excuse to learn inline assembly. Or otherwise said, they&#39;re asking how to fish, not asking for a fish, and your answer start with &quot;don&#39;t fish yourself, here are fishes&quot;, which is not helpful. Instead, the answer should address the issues with the OP&#39;s assembly (output/clobbers if I understand correctly), and maybe at the end mention that for cpuid there exists intrinsics/crates."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 6, "last_activity_date": 1534341120, "last_edit_date": 1534341120, "creation_date": 1534300100, "answer_id": 51852139, "question_id": 51851508, "link": "https://stackoverflow.com/questions/51851508/provide-an-example-of-querying-intel-cpu-capabilities-using-rusts-inline-assemb/51852139#51852139", "title": "Provide an example of querying Intel CPU capabilities using Rust&#39;s inline assembly", "body": "<p>You can just copy <a href=\"https://github.com/shepmaster/cupid/blob/c5e95cd0a14c92d6e899961b497f1f74335a2468/src/lib.rs#L45-L67\" rel=\"nofollow noreferrer\">my old implementation of cpuid</a> if you feel a burning need to ignore my following advice:</p>\n\n<pre><code>fn cpuid(code: RequestType) -&gt; (u32, u32, u32, u32) {\n    let res1;\n    let res2;\n    let res3;\n    let res4;\n\n    unsafe {\n        asm!(\"cpuid\"\n             : // output operands\n             \"={eax}\"(res1),\n             \"={ebx}\"(res2),\n             \"={ecx}\"(res3),\n             \"={edx}\"(res4)\n             : // input operands\n             \"{eax}\"(code as u32),\n             \"{ecx}\"(0 as u32)\n             : // clobbers\n             : // options\n             );\n    }\n\n    (res1, res2, res3, res4)\n}\n</code></pre>\n\n<p>There's no need to mark anything as clobbered because all of the affected registers are marked as outputs. All of the input values are provided as well.</p>\n\n<hr>\n\n<p>That being said, <em>don't write this code</em>. </p>\n\n<ol>\n<li><p>It's already written. Multiple times:</p>\n\n<ul>\n<li><p>The standard library contains <a href=\"https://doc.rust-lang.org/std/arch/index.html\" rel=\"nofollow noreferrer\">intrinsics</a> for all the important CPU features. In this case, use <a href=\"https://doc.rust-lang.org/core/arch/x86/fn.__cpuid.html\" rel=\"nofollow noreferrer\"><code>core::arch::x86::__cpuid</code></a> / <a href=\"https://doc.rust-lang.org/core/arch/x86_64/fn.__cpuid.html\" rel=\"nofollow noreferrer\"><code>core::arch::x86_64::__cpuid</code></a>. These are also available in <code>std</code> but not documented for some reason.</p></li>\n<li><p>Crates like my own: <a href=\"https://crates.io/crates/cupid\" rel=\"nofollow noreferrer\">cupid</a></p></li>\n</ul></li>\n<li><p>Writing inline assembly <strong>requires</strong> a nightly compiler and will probably never be stabilized. It's really only useful for <em>extremely</em> niche cases, such as bootstrapping an OS or embedded system, dumping the state of all registers, and other very low-level details that the intrinsics don't cover (yet?).</p></li>\n</ol>\n"}], "owner": {"reputation": 189, "user_id": 2312304, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/35c7b78e2b7e42f8f46c259729f1d0cd?s=128&d=identicon&r=PG&f=1", "display_name": "Barry", "link": "https://stackoverflow.com/users/2312304/barry"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 312, "favorite_count": 0, "answer_count": 1, "score": 7, "last_activity_date": 1534341120, "creation_date": 1534294111, "last_edit_date": 1534335443, "question_id": 51851508, "link": "https://stackoverflow.com/questions/51851508/provide-an-example-of-querying-intel-cpu-capabilities-using-rusts-inline-assemb", "title": "Provide an example of querying Intel CPU capabilities using Rust&#39;s inline assembly", "body": "<p>I am trying to use inline assembly in Rust. The code I'm including is supposed to query Intel CPU capabilities and right now I just want to get the <code>ebx</code> register state after the system call.</p>\n\n<p>Using an nightly build of Rust compiler (required to use the <code>asm!</code> macro) the code compiles. When I run the program, I get random values for the <code>ebx</code> register and a segmentation fault. I'm pretty sure my <code>asm!</code> macro syntax is just wrong but the documentation of this feature is very weak. Does anyone have any pointers as to what I could improve?</p>\n\n<pre><code>#![feature(asm)]\nfn main() {\n    let result: u32;\n    unsafe {\n        asm!(\"mov eax, 07H;\n              mov ecx, 0;\n              cpuid;\"\n              : \"={ebx}\"(result)\n              :\n              : \"eax, ebx, ecx, edx\"\n              : \"intel\"\n        )\n    }\n    println!(\"ebx from cpuid is {}\", result);\n}\n</code></pre>\n"}, {"tags": ["vector", "iterator", "rust", "ownership"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1534269972, "creation_date": 1534269972, "answer_id": 51847394, "question_id": 51847257, "link": "https://stackoverflow.com/questions/51847257/it-is-possible-to-collect-a-mut-from-an-iterator/51847394#51847394", "title": "It is possible to collect a &amp;mut from an iterator?", "body": "<p>No, it is not possible. For this to be possible, <code>collect</code> would have to return a reference to something it created, and <a href=\"https://stackoverflow.com/q/32682876/155423\">that's not possible</a>.</p>\n\n<p>You are looking for <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.retain\" rel=\"noreferrer\"><code>Vec::retain</code></a>:</p>\n\n<pre><code>fn search(word: &amp;str, data: &amp;mut Vec&lt;String&gt;) {\n    data.retain(|x| x.contains(word));\n}\n</code></pre>\n\n<p>If you didn't want to mutate the passed-in data, you would indeed need to return a new <code>Vec</code>:</p>\n\n<pre><code>fn search&lt;'a&gt;(word: &amp;str, data: &amp;'a [String]) -&gt; Vec&lt;&amp;'a String&gt; {\n    data.iter().filter(|x| x.contains(word)).collect()\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/32682876/155423\">Is there any way to return a reference to a variable created in a function?</a></li>\n<li><a href=\"https://stackoverflow.com/q/40006219/155423\">Why is it discouraged to accept a reference to a String (&amp;String), Vec (&amp;Vec) or Box (&amp;Box) as a function argument?</a></li>\n</ul>\n"}], "owner": {"reputation": 35, "user_id": 4572696, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/87b801d24e0119435591d482eb92d9d3?s=128&d=identicon&r=PG&f=1", "display_name": "Daniel DeBruno", "link": "https://stackoverflow.com/users/4572696/daniel-debruno"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 164, "favorite_count": 0, "accepted_answer_id": 51847394, "answer_count": 1, "score": 3, "last_activity_date": 1534269972, "creation_date": 1534269381, "last_edit_date": 1534269773, "question_id": 51847257, "link": "https://stackoverflow.com/questions/51847257/it-is-possible-to-collect-a-mut-from-an-iterator", "title": "It is possible to collect a &amp;mut from an iterator?", "body": "<p>I am trying to learn more about ownership. Here is some code that doesn't work because <code>collect</code> doesn't let you get a <code>&amp;mut String</code>:</p>\n\n<pre><code>fn search(word: &amp;str, data: &amp;mut Vec&lt;String&gt;) {\n    data = data\n        .iter()\n        .filter(|x| x.contains(word))\n        .collect::&lt;&amp;mut Vec&lt;String&gt;&gt;();\n}\n</code></pre>\n\n<p>I think I could just return a cloned version, but is this the only/preferred way to do it?</p>\n"}, {"tags": ["printing", "rust", "tuples"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1534266931, "post_id": 51846320, "comment_id": 90646578, "body": "See also <a href=\"https://stackoverflow.com/questions/29148544/how-to-iterate-or-map-over-tuples\">How to iterate or map over tuples?</a>"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 4, "creation_date": 1534267997, "post_id": 51846320, "comment_id": 90647137, "body": "Note, that a tuple of 12 element don&#39;t make any sense at least for me."}], "answers": [{"comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 5, "creation_date": 1534266253, "post_id": 51846460, "comment_id": 90646282, "body": "AFAIK, there is no relation between tuples and const generics. Const generics could allow eg. to implement <code>Debug</code> on arbitrary sized arrays, but not tuples, as they still don&#39;t provide syntax to represent an arbitrary sized tuple and access an arbitrary index."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1534266779, "post_id": 51846460, "comment_id": 90646514, "body": "The RFC you point to does not even contain the word &quot;tuple&quot;. I think const generics could be a base for it, but are definitely not enough."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1534267117, "post_id": 51846460, "comment_id": 90646691, "body": "The type of an array can be precisely determined by the combination of its element type and its length. This is not the case for tuples, since every element can have a different type. Describing &quot;all tuples&quot; would need some very fancy new type-level syntax."}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1534282818, "post_id": 51846460, "comment_id": 90653488, "body": "@mcarton Removed the RFC-Part. Confused it with arrays. Thanks for pointing out!"}], "tags": [], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "is_accepted": false, "score": 3, "last_activity_date": 1534282793, "last_edit_date": 1534282793, "creation_date": 1534266028, "answer_id": 51846460, "question_id": 51846320, "link": "https://stackoverflow.com/questions/51846320/why-is-tuple-formatting-limited-to-12-items-in-rust/51846460#51846460", "title": "Why is tuple formatting limited to 12 items in Rust?", "body": "<p><a href=\"https://doc.rust-lang.org/std/fmt/trait.Debug.html\" rel=\"nofollow noreferrer\"><code>Debug</code></a> is only <a href=\"https://doc.rust-lang.org/std/primitive.tuple.html#impl-Debug\" rel=\"nofollow noreferrer\">implemented</a> on tuples up to 12 elements. This is why printing <code>short</code> works, but <code>long</code> fails.</p>\n"}, {"comments": [{"owner": {"reputation": 4252, "user_id": 2173891, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/09b35dd19699f9660ad65111314b61ba?s=128&d=identicon&r=PG", "display_name": "magu_", "link": "https://stackoverflow.com/users/2173891/magu"}, "edited": false, "score": 0, "creation_date": 1534268883, "post_id": 51846577, "comment_id": 90647609, "body": "Hm, yes this makes sense. I still feel that the mixed case could be solved. But I guess the pressure to do so wasn&#39;t big enough."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 4252, "user_id": 2173891, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/09b35dd19699f9660ad65111314b61ba?s=128&d=identicon&r=PG", "display_name": "magu_", "link": "https://stackoverflow.com/users/2173891/magu"}, "edited": false, "score": 2, "creation_date": 1534269457, "post_id": 51846577, "comment_id": 90647914, "body": "Yes, it is likely that the drawbacks and concerns about the implementations were too important for little benefit (big tuples are quite rare, and small tuples can be dealt with quite easily using macros). Note that big arrays do suffer the same problems and are much more common, but as @Tim mentioned, const generics should fix their case."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1534342535, "post_id": 51846577, "comment_id": 90673072, "body": "@mcarton: I&#39;m not sure it&#39;s just a matter of benefits/drawbacks as much as it&#39;s a matter of timing. When setting up the priorities, const generics and variadic generics were pushed back in favor of more pressing concerns: NLL and async, notably. Const generics is already slated to see some work before the end of year (there have been internal refactorings going on already to prepare the terrain), and I&#39;m sure that at some point variadic generics will also be worked on... but there&#39;s little pressure to improve tuples right now and it&#39;ll take time to do so properly."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1534346890, "post_id": 51846577, "comment_id": 90675682, "body": "@MatthieuM. Sure, but &quot;We don&#39;t have time to define/implement feature X&quot; is also a drawback of &quot;feature X&quot;. NLL for example also took a while to get to the point they are now and we could have said &quot;We don&#39;t have time&quot;, but the benefit of them were big enough that time was actually allocated to this."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1534347380, "post_id": 51846577, "comment_id": 90675984, "body": "@mcarton: Oh sure. There&#39;s definitely prioritization going on. My point was more that the feature has not been outright rejected; it&#39;s just that it&#39;s known to be a big feature, which will take time and focus to get right, and there&#39;s not much of either available because other features are judged more pressing. Interestingly, variadic generics would probably have been a greater priority had the language not supported tuples as built-in types :)"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1534350688, "post_id": 51846577, "comment_id": 90677720, "body": "Yes, that C++ tuples are just built out of variadic generics is actually really nice feature. Although C++ being C++, you sometimes need to sacrifice a sheep to get it to work, so let&#39;s hope Rust will get those right-er :)"}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 17, "last_activity_date": 1534267773, "last_edit_date": 1534267773, "creation_date": 1534266531, "answer_id": 51846577, "question_id": 51846320, "link": "https://stackoverflow.com/questions/51846320/why-is-tuple-formatting-limited-to-12-items-in-rust/51846577#51846577", "title": "Why is tuple formatting limited to 12 items in Rust?", "body": "<p>Printing tuples is currently implemented using a <a href=\"https://doc.rust-lang.org/src/core/fmt/mod.rs.html#2008-2019\" rel=\"noreferrer\">macro that only works up to 12 elements</a>.</p>\n\n<p>Functionality to statically iterate/manipulate tuples has been proposed, but has been postponed (see e.g. <a href=\"https://github.com/rust-lang/rfcs/pull/1582\" rel=\"noreferrer\">this RFC</a>). There was some concerns about the implementation of these (e.g. you'd expect to be able to get the head &amp; tail of a tuple, but there is actually no guarantee that a tuple will be stored in the same order as you specified, because the compiler is allowed to optimize for space, which means getting the tail wouldn't be a trivial operation).</p>\n\n<p>As for why you need special support for that, consider the following tuple:</p>\n\n<pre><code>let mixed = (42, true, 3.14, \"foo\");\n</code></pre>\n\n<p>How you would iterate this tuple, given that all its elements have a different type? This can't simply be done using regular iterators and a <code>for</code> loop. You would need some new type-level syntax, which Rust is currently lacking.</p>\n"}], "owner": {"reputation": 4252, "user_id": 2173891, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/09b35dd19699f9660ad65111314b61ba?s=128&d=identicon&r=PG", "display_name": "magu_", "link": "https://stackoverflow.com/users/2173891/magu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1922, "favorite_count": 0, "accepted_answer_id": 51846577, "answer_count": 2, "score": 10, "last_activity_date": 1534282793, "creation_date": 1534265515, "last_edit_date": 1534267028, "question_id": 51846320, "link": "https://stackoverflow.com/questions/51846320/why-is-tuple-formatting-limited-to-12-items-in-rust", "title": "Why is tuple formatting limited to 12 items in Rust?", "body": "<p>I just started a <a href=\"https://doc.rust-lang.org/rust-by-example/primitives/tuples.html\" rel=\"noreferrer\">tutorial in Rust</a> and I can't get my head around the limitation of tuple printing:</p>\n\n<pre><code>fn main() {\n    // Tuple definition\n    let short = (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11);\n    let long = (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12);\n\n    println!(\"{:?}\", short); // Works fine\n    println!(\"{:?}\", long);  // ({integer}...{integer})` cannot be formatted using `:?` because it doesn't implement `std::fmt::Debug`\n}\n</code></pre>\n\n<p>In my ignorant view the printing could be easily achieved by iterating over the entire tuple \u2014 this would allow displaying without size constraint. If the solution would be that simple it would be implemented, what am I missing here?</p>\n"}, {"tags": ["visual-studio-code", "rust", "vscode-debugger"], "answers": [{"comments": [{"owner": {"reputation": 4300, "user_id": 313522, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/e6dd88ec54643689069f97f0d52398ca?s=128&d=identicon&r=PG", "display_name": "gorn", "link": "https://stackoverflow.com/users/313522/gorn"}, "edited": false, "score": 0, "creation_date": 1534264489, "post_id": 51845191, "comment_id": 90645359, "body": "Parto of the error seems to disappear when I put the <code>.gdbinit</code> into home directory, however the debugign still does not work - the script gets executed, but for example breakpoints are not functional etc."}, {"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "reply_to_user": {"reputation": 4300, "user_id": 313522, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/e6dd88ec54643689069f97f0d52398ca?s=128&d=identicon&r=PG", "display_name": "gorn", "link": "https://stackoverflow.com/users/313522/gorn"}, "edited": false, "score": 0, "creation_date": 1534277927, "post_id": 51845191, "comment_id": 90651569, "body": "Okay, let&#39;s hope <code>flatpak</code> users will stop by and add more. Are you using <a href=\"http://docs.flatpak.org/en/latest/debugging.html\" rel=\"nofollow noreferrer\"><code>--devel</code></a>?"}], "tags": [], "owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "is_accepted": false, "score": 1, "last_activity_date": 1534261355, "creation_date": 1534261355, "answer_id": 51845191, "question_id": 51845064, "link": "https://stackoverflow.com/questions/51845064/visual-studio-code-errors-when-debugging-rust-with-missing-auto-load-debug-gdb/51845191#51845191", "title": "Visual Studio Code errors when debugging Rust with &quot;Missing auto-load debug_gdb_scripts&quot;", "body": "<p>The real problem is the <code>Error disabling address space randomization: Operation not permitted</code>. The <code>Missing auto-load script</code> warning you can usually ignore.</p>\n\n<p>The problem is likely caused by virtualization.</p>\n\n<p>Try adding <a href=\"https://stackoverflow.com/a/35860616/257568\"><code>set disable-randomization off</code></a> into the <a href=\"http://man7.org/linux/man-pages/man5/gdbinit.5.html\" rel=\"nofollow noreferrer\"><code>.gdbinit</code></a>.</p>\n\n<p>You might also follow this <a href=\"https://github.com/flatpak/flatpak/issues/1301\" rel=\"nofollow noreferrer\">flatpak issue 1301</a>.</p>\n"}], "owner": {"reputation": 4300, "user_id": 313522, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/e6dd88ec54643689069f97f0d52398ca?s=128&d=identicon&r=PG", "display_name": "gorn", "link": "https://stackoverflow.com/users/313522/gorn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 396, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1534264935, "creation_date": 1534260897, "last_edit_date": 1534264935, "question_id": 51845064, "link": "https://stackoverflow.com/questions/51845064/visual-studio-code-errors-when-debugging-rust-with-missing-auto-load-debug-gdb", "title": "Visual Studio Code errors when debugging Rust with &quot;Missing auto-load debug_gdb_scripts&quot;", "body": "<p>I installed flatpak Visual Studio Code on Linux Mint. I'm trying to debug the \"Hello world app\" from the Rust book in VS Code. </p>\n\n<p><strong>src/main.rs</strong>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n  println!(\"Hello, world!\");\n}\n</code></pre>\n\n<p><strong>launch.json</strong>:</p>\n\n<pre><code>{\n \"version\": \"0.2.0\",\n \"configurations\": [\n   {\n    \"name\": \"Debug program\",\n    \"type\": \"gdb\",\n    \"request\": \"launch\",\n    \"target\": \"../target/debug/hello\",\n    \"cwd\": \"${workspaceRoot}\"\n  }\n ]\n}\n</code></pre>\n\n<p>When I <code>cargo build</code> the program and try to debug it, I get this error in Debug console:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning: Missing auto-load script at offset 0 in section .debug_gdb_scripts\nof file /home/gorn/nextcloud/viptrader/rust/target/debug/hello.\nUse `info auto-load python-scripts [REGEXP]' to list them.\nRunning executable\nwarning: Error disabling address space randomization: Operation not permitted\n</code></pre>\n\n<p>I have installed these extensions:</p>\n\n<ul>\n<li>rust-lang.rust</li>\n<li><a href=\"https://github.com/WebFreak001/code-debug\" rel=\"nofollow noreferrer\">webfreak.debug</a></li>\n</ul>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1534260483, "post_id": 51844745, "comment_id": 90643214, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/28005134/how-do-i-implement-the-add-trait-for-a-reference-to-a-struct\">How do I implement the Add trait for a reference to a struct?</a>"}, {"owner": {"reputation": 7540, "user_id": 4474230, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/713c7ce18010e541853962264a719d83?s=128&d=identicon&r=PG&f=1", "display_name": "Jeffrey", "link": "https://stackoverflow.com/users/4474230/jeffrey"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1534261091, "post_id": 51844745, "comment_id": 90643564, "body": "@trentcl thanks!! Consider making this an answer. I&#39;m still processing the other options, but since I don&#39;t know yet what a lifetime is, I&#39;m having difficulty comparing them. Your suggestion fixes my issue, but I&#39;m not sure the copy is the correct trade-off."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1534261448, "post_id": 51844745, "comment_id": 90643770, "body": "@Jeffrey The <code>Copy</code> marker permits to silently copy your struct when needed."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1534340016, "post_id": 51844745, "comment_id": 90671628, "body": "I don&#39;t think the last paragraph is a legitimate constraint to put on a question. Would you ask your driving teacher &quot;How do I parallel park? Oh, but I can&#39;t turn the wheel, because I&#39;m not at <i>steering</i> yet.&quot; Fortunately, in this case lifetimes are not required (witness my answer), and the linked question does not address the question as posed anyway (you would have to use <code>&amp;x - &amp;y</code> instead of <code>x - y</code>)."}], "answers": [{"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 6, "last_activity_date": 1534262859, "creation_date": 1534262859, "answer_id": 51845616, "question_id": 51844745, "link": "https://stackoverflow.com/questions/51844745/how-do-i-implement-one-of-the-stdopsadd-sub-mul-div-operators-without-mo/51845616#51845616", "title": "How do I implement one of the std::ops:{Add, Sub, Mul, Div} operators without moving out the the arguments?", "body": "<p>In the example, the compiler tells you why <code>x</code> has been invalidated by the move:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>   = note: move occurs because `x` has type `Vec3`, which does not implement the `Copy` trait\n</code></pre>\n\n<p>In this case, you can simply add <code>#[derive(Copy)]</code> to give <code>Vec3</code> <em>copy semantics</em>:</p>\n\n<pre><code>#[derive(Clone, Copy, Debug)]\npub struct Vec3 {\n    pub v: [f64; 3],\n}\n</code></pre>\n\n<p><code>Copy</code> is a marker trait that indicates to the compiler that values of a type do not become invalid when they are moved from. A type with this property is said to have copy semantics, while a type that does not implement <code>Copy</code> is said to have move semantics. <a href=\"https://stackoverflow.com/questions/24253344/is-it-possible-to-make-a-type-only-movable-and-not-copyable/24253573#24253573\">Is it possible to make a type only movable and not copyable?</a> and <a href=\"https://stackoverflow.com/questions/29490670/how-does-rust-provide-move-semantics\">How does Rust provide move semantics?</a> explain this concept in more detail.</p>\n\n<hr>\n\n<p>However, you can only implement <code>Copy</code> for types that contain only other <code>Copy</code> types. If <code>Vec3</code> actually held a <code>Vec</code> inside it, the compiler would not let you implement <code>Copy</code> for it. Fortunately, references do implement <code>Copy</code>, so you can instead implement <code>Sub</code> for a <em>reference</em> to <code>Vec3</code>, using the approach described in <a href=\"https://stackoverflow.com/questions/28005134/how-do-i-implement-the-add-trait-for-a-reference-to-a-struct\">How do I implement the Add trait for a reference to a struct?</a></p>\n"}], "owner": {"reputation": 7540, "user_id": 4474230, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/713c7ce18010e541853962264a719d83?s=128&d=identicon&r=PG&f=1", "display_name": "Jeffrey", "link": "https://stackoverflow.com/users/4474230/jeffrey"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 906, "favorite_count": 0, "accepted_answer_id": 51845616, "answer_count": 1, "score": 2, "last_activity_date": 1534300469, "creation_date": 1534259868, "last_edit_date": 1534300469, "question_id": 51844745, "link": "https://stackoverflow.com/questions/51844745/how-do-i-implement-one-of-the-stdopsadd-sub-mul-div-operators-without-mo", "title": "How do I implement one of the std::ops:{Add, Sub, Mul, Div} operators without moving out the the arguments?", "body": "<p>I'm writing a ray-tracer and I want to be able to subtract my 3D vectors:</p>\n\n<pre><code>use std::ops::Sub;\n\n#[derive(Clone, Debug)]\npub struct Vec3 {\n    pub v: [f64; 3],\n}\n\nimpl Sub for Vec3 {\n    type Output = Vec3;\n\n    fn sub(self, other: Vec3) -&gt; Vec3 {\n        Vec3 {\n            v: [\n                self.v[0] - other.v[0],\n                self.v[1] - other.v[1],\n                self.v[2] - other.v[2],\n            ],\n        }\n    }\n}\n</code></pre>\n\n<p>This seems to work. However, when I try to use it:</p>\n\n<pre><code>fn main() {\n    let x = Vec3 { v: [0., 0., 0.] };\n    let y = Vec3 { v: [0., 0., 0.] };\n    let a = x - y;\n    let b = x - y;\n}\n</code></pre>\n\n<p>I get complaints from the compiler:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0382]: use of moved value: `x`\n  --&gt; src/main.rs:26:13\n   |\n25 |     let a = x - y;\n   |             - value moved here\n26 |     let b = x - y;\n   |             ^ value used here after move\n   |\n   = note: move occurs because `x` has type `Vec3`, which does not implement the `Copy` trait\n\nerror[E0382]: use of moved value: `y`\n  --&gt; src/main.rs:26:17\n   |\n25 |     let a = x - y;\n   |                 - value moved here\n26 |     let b = x - y;\n   |                 ^ value used here after move\n   |\n   = note: move occurs because `y` has type `Vec3`, which does not implement the `Copy` trait\n</code></pre>\n\n<p>How can I write the subtraction operator so that the code above works?</p>\n\n<p>Please don't tell me I should an existing 3D math module. I'm sure there's something better, but I'm after learning how to do it myself to learn the language.</p>\n\n<p><a href=\"https://stackoverflow.com/questions/28005134\">How do I implement the Add trait for a reference to a struct?</a> doesn't help as it requires specifying lifetimes for object which I'm not at yet. </p>\n"}, {"tags": ["unit-testing", "testing", "rust", "rust-cargo"], "answers": [{"tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 3, "last_activity_date": 1534253647, "last_edit_date": 1534253647, "creation_date": 1534252508, "answer_id": 51842395, "question_id": 51842332, "link": "https://stackoverflow.com/questions/51842332/how-to-access-functions-from-the-main-crate-when-writing-integration-tests/51842395#51842395", "title": "How to access functions from the main crate when writing integration tests?", "body": "<blockquote>\n  <p>How can I access functions in \u00b4projectname/src/main.rs\u00b4 from projectname/tests/test.rs?</p>\n</blockquote>\n\n<p><strong>You cannot.</strong></p>\n\n<hr>\n\n<p>A binary cannot be used a an external crate (the same way as you can't use a ELF binary as a shared object/library)</p>\n\n<p>You just have to change your initialisation to</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>cargo init --lib projectname\n</code></pre>\n\n<p>or rename your <code>main.rs</code> to <code>lib.rs</code></p>\n\n<p>If you really want to stick with a main, you may look at <a href=\"https://stackoverflow.com/questions/26946646/rust-package-with-both-a-library-and-a-binary\">Rust package with both a library and a binary?</a>.</p>\n"}], "owner": {"reputation": 13, "user_id": 10223510, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c51874f47722f41dc4e63d90cfae734?s=128&d=identicon&r=PG&f=1", "display_name": "Phillip Jay Doe", "link": "https://stackoverflow.com/users/10223510/phillip-jay-doe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 173, "favorite_count": 0, "accepted_answer_id": 51842395, "answer_count": 1, "score": 1, "last_activity_date": 1534253647, "creation_date": 1534252313, "last_edit_date": 1534253606, "question_id": 51842332, "link": "https://stackoverflow.com/questions/51842332/how-to-access-functions-from-the-main-crate-when-writing-integration-tests", "title": "How to access functions from the main crate when writing integration tests?", "body": "<p>When creating a project with a test like so:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>cargo init --bin projectname\nmkdir projectname/tests\necho \"extern crate projectname;\" &gt; projectname/tests/test.rs\ncd projectname/\ncargo build\n</code></pre>\n\n<p>I get this error when testing:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>cargo test\n   Compiling projectname v0.1.0 (file:///home/username/Lab/projectname)\nerror[E0463]: can't find crate for `projectname`\n --&gt; tests/test.rs:1:1\n  |\n1 | extern crate projectname;\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^ can't find crate\n</code></pre>\n\n<p>How can I access the functions in \u00b4projectname/src/main.rs\u00b4 from <code>projectname/tests/test.rs</code>?</p>\n"}, {"tags": ["compiler-errors", "rust", "hyper"], "answers": [{"tags": [], "owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "is_accepted": false, "score": 2, "last_activity_date": 1534253335, "last_edit_date": 1534253335, "creation_date": 1534251331, "answer_id": 51841996, "question_id": 51841791, "link": "https://stackoverflow.com/questions/51841791/why-do-i-get-the-error-wrong-number-of-type-arguments-when-i-use-hyperclient/51841996#51841996", "title": "Why do I get the error &quot;wrong number of type arguments&quot; when I use hyper::Client in my method signature?", "body": "<p><a href=\"https://docs.rs/hyper/0.12.8/hyper/client/struct.Client.html\" rel=\"nofollow noreferrer\"><code>hyper::Client</code></a> takes type parameters. You can omit them in the associated function call <code>Client::new()</code> because the compiler will deduce them, but it won't do that in the function signature.</p>\n\n<p>You want the return type to be <code>Client&lt;HttpConnector, Body&gt;</code>.</p>\n\n<p>The problem with that is that your builder method returns a <code>Client&lt;HttpsConnector, Body&gt;</code>, which is different. You might have to define your own trait to abstract over the connector.</p>\n"}, {"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": true, "score": 2, "last_activity_date": 1534253409, "last_edit_date": 1534253409, "creation_date": 1534252765, "answer_id": 51842489, "question_id": 51841791, "link": "https://stackoverflow.com/questions/51841791/why-do-i-get-the-error-wrong-number-of-type-arguments-when-i-use-hyperclient/51842489#51842489", "title": "Why do I get the error &quot;wrong number of type arguments&quot; when I use hyper::Client in my method signature?", "body": "<p>Look at the <a href=\"https://docs.rs/hyper/0.12.8/hyper/client/struct.Client.html\" rel=\"nofollow noreferrer\">documentation for <code>Client</code></a>: <code>Client</code> is a <a href=\"https://doc.rust-lang.org/stable/book/second-edition/ch10-01-syntax.html\" rel=\"nofollow noreferrer\">generic type</a> which depends on two type parameters: a connector type <code>C</code> and an optional body type <code>B</code>. You would need to specify which type parameters apply to the <code>Client</code> that you return, except that in your specific case it looks like you want to return either a <code>Client&lt;HttpConnector&gt;</code> or a <code>Client&lt;HttpsConnector&gt;</code> depending on the URI scheme. You can't do that, period.</p>\n\n<p>Depending on how you intend to use your <code>get_client</code> function, you can wrap the return value in an <code>enum</code>:</p>\n\n<pre><code>enum MyClient {\n    HttpClient (Client&lt;HttpConnector&gt;),\n    HttpsClient (Client&lt;HttpsConnector&gt;),\n}\nimpl MyClient {\n    pub fn get(&amp;self, uri: Uri) -&gt; ResponseFuture {\n        match self {\n            HttpClient (c) =&gt; c.get (uri),\n            HttpsClient (c) =&gt; c.get (uri),\n        }\n    }\n}\n\nfn get_client(uri: Uri) -&gt; MyClient { /* \u2026 */ }\n</code></pre>\n\n<p>or you can define a trait, implement it for <code>Client&lt;HttpConnector&gt;</code> and <code>Client&lt;HttpsConnector&gt;</code> and have <code>get_client</code> return a boxed instance of your trait, something like:</p>\n\n<pre><code>trait MyClient {\n    pub fn get(&amp;self, uri: Uri) -&gt; ResponseFuture;\n}\nimpl&lt;C&gt; MyClient for Client&lt;C&gt; {\n    pub fn get(&amp;self, uri: Uri) -&gt; ResponseFuture {\n        Client&lt;C&gt;::get (&amp;self, uri)\n    }\n}\n\nfn get_client(uri: Uri) -&gt; Box&lt;MyClient&gt; { /* \u2026 */ }\n</code></pre>\n"}], "owner": {"reputation": 21030, "user_id": 15619, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/2f169a510b7cba5a57e86d520b268447?s=128&d=identicon&r=PG", "display_name": "Riduidel", "link": "https://stackoverflow.com/users/15619/riduidel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1037, "favorite_count": 0, "accepted_answer_id": 51842489, "answer_count": 2, "score": 0, "last_activity_date": 1534253409, "creation_date": 1534250735, "last_edit_date": 1534253309, "question_id": 51841791, "link": "https://stackoverflow.com/questions/51841791/why-do-i-get-the-error-wrong-number-of-type-arguments-when-i-use-hyperclient", "title": "Why do I get the error &quot;wrong number of type arguments&quot; when I use hyper::Client in my method signature?", "body": "<p>I want to get a <code>hyper::Client</code> configured according to the URL scheme. For that, I created a small method:</p>\n\n<pre><code>extern crate http; // 0.1.8\nextern crate hyper; // 0.12.7\nextern crate hyper_tls; // 0.1.4\n\nuse http::uri::Scheme;\nuse hyper::{Body, Client, Uri};\nuse hyper_tls::HttpsConnector;\n\n#[derive(Clone, Debug)]\npub struct Feed;\n\nimpl Feed {\n    fn get_client(uri: Uri) -&gt; Client {\n        match uri.scheme_part() {\n            Some(Scheme::HTTP) =&gt; Client::new(),\n            Some(Scheme::HTTPS) =&gt; {\n                let https = HttpsConnector::new(4).expect(\"TLS initialization failed\");\n                let client = Client::builder().build::&lt;_, Body&gt;(https);\n            }\n            _ =&gt; panic!(\"We don't support schemes other than HTTP/HTTPS\"),\n        }\n    }\n}\n</code></pre>\n\n<p>When I try to compile it, I get this error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0243]: wrong number of type arguments: expected at least 1, found 0\n  --&gt; src/main.rs:13:32\n   |\n13 |     fn get_client(uri: Uri) -&gt; Client {\n   |                                ^^^^^^ expected at least 1 type argument\n</code></pre>\n\n<p>I don't understand why it doesn't compile since</p>\n\n<ul>\n<li>I've declared my use of the hyper crate in my main.rs</li>\n<li>I declare my use in file header</li>\n</ul>\n\n<p>What am I doing wrong ?</p>\n"}, {"tags": ["data-structures", "rust", "move-semantics", "borrowing"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1534235350, "post_id": 51836940, "comment_id": 90627217, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/28158738/cannot-move-out-of-borrowed-content\">Cannot move out of borrowed content</a>"}, {"owner": {"reputation": 36166, "user_id": 393701, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/250889c646cd2a916920d9252f7c6f42?s=128&d=identicon&r=PG", "display_name": "SirDarius", "link": "https://stackoverflow.com/users/393701/sirdarius"}, "edited": false, "score": 1, "creation_date": 1534235564, "post_id": 51836940, "comment_id": 90627354, "body": "Note that a linked list is a chain of nodes, and usually a wrapper referencing the first node. Here, the <code>List</code> enumeration only represents a single node, so if you want to have a mutable list, you need a wrapper referencing the chain of <code>List</code>s."}], "answers": [{"comments": [{"owner": {"reputation": 81, "user_id": 10180179, "user_type": "registered", "profile_image": "https://graph.facebook.com/186998478777114/picture?type=large", "display_name": "Sooner", "link": "https://stackoverflow.com/users/10180179/sooner"}, "edited": false, "score": 0, "creation_date": 1534252987, "post_id": 51837280, "comment_id": 90638065, "body": "Thank you so much!"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 6, "last_activity_date": 1534248785, "last_edit_date": 1534248785, "creation_date": 1534236225, "answer_id": 51837280, "question_id": 51836940, "link": "https://stackoverflow.com/questions/51836940/how-to-implement-prepend-for-a-linked-list-without-needing-to-assign-to-a-new-va/51837280#51837280", "title": "How to implement prepend for a linked list without needing to assign to a new variable?", "body": "<p><code>List::prepend</code> <em>must</em> move <code>self</code> because that is literally what is happening. The new head of the list is a new object and the old head is moved onto the heap, making the old variable invalid.</p>\n\n<p>Inside <code>my_prepend</code> you have a mutable reference to <code>self</code>, but then you move its value so that the <code>self</code> reference becomes invalid. Even though it's only invalid temporarily, this is what the message <code>\"cannot move out of borrowed content\"</code> is complaining about.</p>\n\n<p>One way to get around this is to move <code>self</code> out into a variable and <em>simultaneously</em> replace it with <code>Nil</code>, so that the <code>self</code> reference is never invalid. You can do that with <code>mem::replace</code>:</p>\n\n<pre><code>use std::mem;\n\nfn my_prepend(&amp;mut self, elem: u32) {\n    // Move the value of self into head, and leave self as Nil so it isn't invalid\n    let head = mem::replace(self, List::Nil);\n    // Reassign to self with the prepended value\n    *self = head.prepend(elem);\n}\n</code></pre>\n"}], "owner": {"reputation": 81, "user_id": 10180179, "user_type": "registered", "profile_image": "https://graph.facebook.com/186998478777114/picture?type=large", "display_name": "Sooner", "link": "https://stackoverflow.com/users/10180179/sooner"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 139, "favorite_count": 0, "accepted_answer_id": 51837280, "answer_count": 1, "score": 2, "last_activity_date": 1545398759, "creation_date": 1534235101, "last_edit_date": 1545398759, "question_id": 51836940, "link": "https://stackoverflow.com/questions/51836940/how-to-implement-prepend-for-a-linked-list-without-needing-to-assign-to-a-new-va", "title": "How to implement prepend for a linked list without needing to assign to a new variable?", "body": "<p>Something told me how to implement a linked list:</p>\n\n<pre><code>enum List {\n    Cons(u32, Box&lt;List&gt;),\n    Nil,\n}\n\nimpl List {\n    fn prepend(self, elem: u32) -&gt; List {\n        Cons(elem, Box::new(self))\n    }\n}\n</code></pre>\n\n<p>When I want to use <code>prepend</code>, I need to do the following:</p>\n\n<pre><code>list = list.prepend(1);\n</code></pre>\n\n<p>However, I want to create a function that does not need to create a new variable every time <code>prepend</code> returns. I just want to change the <code>list</code> variable itself using <code>prepend</code>:</p>\n\n<pre><code>list.prepend(1);\n</code></pre>\n\n<p>Here is one implementation that I come up with, but it's not right:</p>\n\n<pre><code>fn my_prepend(&amp;mut self, elem: u32) {\n    *self = Cons(elem, Box::new(*self));\n}\n</code></pre>\n\n<p>The error is: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n</code></pre>\n"}, {"tags": ["binary", "rust"], "comments": [{"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 2, "creation_date": 1534233787, "post_id": 51836413, "comment_id": 90626342, "body": "It is probably there. You just can&#39;t see it, because the NUL character is invisible."}, {"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 0, "creation_date": 1534233988, "post_id": 51836413, "comment_id": 90626453, "body": "... and it confuses most applications written in C (I tried copy-and-paste into <code>hd</code>). :-)"}, {"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 1, "creation_date": 1534234727, "post_id": 51836413, "comment_id": 90626859, "body": "It&#39;s not a good idea when your code to demonstrate a problem depends on manual input."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1534252001, "post_id": 51836413, "comment_id": 90637382, "body": "<a href=\"https://stackoverflow.com/q/40006219/155423\">Why is it discouraged to accept a reference to a String (&amp;String), Vec (&amp;Vec) or Box (&amp;Box) as a function argument?</a>"}], "answers": [{"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1534234664, "post_id": 51836700, "comment_id": 90626815, "body": "You can build the string like this <code>let s: String = vec![char::from(0), &#39;a&#39;, &#39;b&#39;].into_iter().collect();</code> instead of pushing <code>char</code>s by hand."}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 5, "creation_date": 1534234666, "post_id": 51836700, "comment_id": 90626816, "body": "You could print in debug mode, though <code>&#39;\\u{0}&#39;</code> might not be an obvious sight."}, {"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "reply_to_user": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 2, "creation_date": 1534235011, "post_id": 51836700, "comment_id": 90627014, "body": "@ljedrz I wanted to use display mode to demonstrate the invisibility, but using both display and debug mode is nice."}, {"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1534235893, "post_id": 51836700, "comment_id": 90627544, "body": "@Boiethios Here pushing them one-by-one is better, because it is closer to OP&#39;s code."}], "tags": [], "owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "is_accepted": false, "score": 4, "last_activity_date": 1534235043, "last_edit_date": 1534235043, "creation_date": 1534234330, "answer_id": 51836700, "question_id": 51836413, "link": "https://stackoverflow.com/questions/51836413/how-can-i-input-binary-values-to-a-vector-in-rust/51836700#51836700", "title": "How can I input binary values to a vector in Rust?", "body": "<p>The characters corresponding to zeros are there, but you can't see them:</p>\n\n<pre><code>fn main() {\n    let mut s = String::new();\n    s.push(char::from(0));\n    s.push('a');\n    s.push('b');\n    println!(\"Hello, {}!\", s);\n    println!(\"{:?}\", s);\n    for c in s.chars() {\n        println!(\"{}\", c as u32);\n    }\n}\n</code></pre>\n\n<p>I can't show you the output, because the NUL character confuses the Stack Overflow editor as well. :-)</p>\n"}], "owner": {"reputation": 29, "user_id": 10223201, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-l2ks6xVzo3E/AAAAAAAAAAI/AAAAAAAAAA8/-1pnevGj93Y/photo.jpg?sz=128", "display_name": "AregevDev", "link": "https://stackoverflow.com/users/10223201/aregevdev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 325, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1534252164, "creation_date": 1534233301, "last_edit_date": 1534252164, "question_id": 51836413, "link": "https://stackoverflow.com/questions/51836413/how-can-i-input-binary-values-to-a-vector-in-rust", "title": "How can I input binary values to a vector in Rust?", "body": "<p>I have programmed a simple ASCII to string converter but I am facing problems in turning it to a binary to string converter.</p>\n\n<p>When I try to input binary values I am getting an error and the vector insertion skips the starting zeros in the input.</p>\n\n<p>This is the code that works with ASCII decimal values:</p>\n\n<pre><code>use std::*;\n\nfn main() {\n    println!(\"AregevDev's binary to string converter!\");\n    println!(\"Enter a sequence of binary values:\");\n\n    let mut int_seq: Vec&lt;u32&gt; = Vec::new();\n\n    loop {\n        let mut it = String::new();\n        io::stdin()\n            .read_line(&amp;mut it)\n            .expect(\"Failed to read line!\");\n        let num = match it.trim().parse::&lt;u32&gt;() {\n            Ok(num) =&gt; num,\n            Err(_) =&gt; break,\n        };\n\n        int_seq.push(num);\n    }\n\n    println!(\"Converted string: {}\", binary_to_string(&amp;int_seq));\n}\n\nfn binary_to_string(vec: &amp;Vec&lt;u32&gt;) -&gt; String {\n    let mut result = String::new();\n\n    for u in vec.iter() {\n        let ch = char::from_u32(*u).unwrap();\n        result.push(ch);\n    }\n\n    return result;\n}\n</code></pre>\n\n<p>Code that does not work:</p>\n\n<pre><code>use std::*;\n\nfn main() {\n    println!(\"AregevDev's binary to string converter!\");\n    println!(\"Enter a sequence of binary values:\");\n\n    let mut int_seq: Vec&lt;u32&gt; = Vec::new();\n\n    loop {\n        let mut it = String::new();\n        io::stdin()\n            .read_line(&amp;mut it)\n            .expect(\"Failed to read line!\");\n        let num = match it.trim().parse::&lt;u32&gt;() {\n            Ok(num) =&gt; num,\n            Err(_) =&gt; break,\n        };\n\n        int_seq.push(num);\n    }\n\n    println!(\"Vec: {:?}\", int_seq);\n    println!(\"Converted string: {:?}\", binary_to_string(&amp;int_seq));\n}\n\nfn binary_to_string(vec: &amp;Vec&lt;u32&gt;) -&gt; String {\n    let mut result = String::new();\n\n    for u in vec.iter() {\n        let ch = char::from_digit(*u, 2).unwrap();\n        result.push(ch);\n    }\n\n    return result;\n}\n</code></pre>\n\n<p>Error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>thread 'main' panicked at 'called `Option::unwrap()` on a `None` value', libcore/option.rs:345:21\nstack backtrace:\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\n             at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\n   1: std::sys_common::backtrace::print\n             at libstd/sys_common/backtrace.rs:71\n             at libstd/sys_common/backtrace.rs:59\n   2: std::panicking::default_hook::{{closure}}\n             at libstd/panicking.rs:211\n   3: std::panicking::default_hook\n             at libstd/panicking.rs:227\n   4: std::panicking::rust_panic_with_hook\n             at libstd/panicking.rs:511\n   5: std::panicking::continue_panic_fmt\n             at libstd/panicking.rs:426\n   6: rust_begin_unwind\n             at libstd/panicking.rs:337\n   7: core::panicking::panic_fmt\n             at libcore/panicking.rs:92\n   8: core::panicking::panic\n             at libcore/panicking.rs:53\n   9: rust_practices::main\n  10: std::rt::lang_start::{{closure}}\n  11: std::panicking::try::do_call\n             at libstd/rt.rs:59\n             at libstd/panicking.rs:310\n  12: __rust_maybe_catch_panic\n             at libpanic_unwind/lib.rs:105\n  13: std::rt::lang_start_internal\n             at libstd/panicking.rs:289\n             at libstd/panic.rs:392\n             at libstd/rt.rs:58\n  14: main\n  15: __libc_start_main\n  16: _start\n</code></pre>\n"}, {"tags": ["regex", "rust", "lifetime", "object-lifetime", "borrowing"], "comments": [{"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 1, "creation_date": 1534232030, "post_id": 51834111, "comment_id": 90625451, "body": "Next time please post minimal (leave out unnecessary code like <code>fn word_n()</code> ) and complete code, i.e. so that it demonstrates your problem in Rust playground."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1534251981, "post_id": 51834111, "comment_id": 90637360, "body": "<a href=\"https://stackoverflow.com/q/40006219/155423\">Why is it discouraged to accept a reference to a String (&amp;String), Vec (&amp;Vec) or Box (&amp;Box) as a function argument?</a>"}], "answers": [{"tags": [], "owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "is_accepted": true, "score": 4, "last_activity_date": 1534231821, "creation_date": 1534231821, "answer_id": 51835955, "question_id": 51834111, "link": "https://stackoverflow.com/questions/51834111/lifetime-issue-iterating-over-regex-captures/51835955#51835955", "title": "Lifetime issue iterating over regex captures", "body": "<p>The <a href=\"https://docs.rs/regex/1.0.2/regex/struct.Captures.html#impl-Index%3Cusize%3E\" rel=\"nofollow noreferrer\">documentation of <code>impl&lt;'t&gt; Index&lt;usize&gt; for Captures&lt;'t&gt;</code></a> (this is the <code>cap[0]</code> in your code) says: </p>\n\n<blockquote>\n  <p>The text can't outlive the Captures object if this method is used, because of how Index is defined (normally a[i] is part of a and can't outlive it); to do that, use get() instead.</p>\n</blockquote>\n\n<p>So with <code>get</code> it works (note that I have replaced the <code>&amp;'a String</code> argument by <code>&amp;'a str</code>):</p>\n\n<pre><code>use regex::Regex;\n\npub fn string_split&lt;'a&gt;(s: &amp;'a str) -&gt; Vec&lt;&amp;'a str&gt; {\n    let mut return_vec = Vec::new();\n    let re = Regex::new(r\"\\S+\").unwrap();\n\n    for cap in re.captures_iter(s) {\n        return_vec.push(cap.get(0).unwrap().as_str());\n    };\n\n    return_vec\n}\n\nfn main() {\n    println!(\"{:?}\", string_split(\"Hello, world!\"));\n}\n</code></pre>\n"}], "owner": {"reputation": 25, "user_id": 9433107, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8423ca843a4d6f5b3e439be0d526acff?s=128&d=identicon&r=PG&f=1", "display_name": "chrism", "link": "https://stackoverflow.com/users/9433107/chrism"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 280, "favorite_count": 0, "accepted_answer_id": 51835955, "answer_count": 1, "score": 1, "last_activity_date": 1534251726, "creation_date": 1534223548, "last_edit_date": 1534251726, "question_id": 51834111, "link": "https://stackoverflow.com/questions/51834111/lifetime-issue-iterating-over-regex-captures", "title": "Lifetime issue iterating over regex captures", "body": "<p>I'm attempting to get all non-whitespace characters from a string using regex, but I keep coming back to the same error.</p>\n\n<pre><code>extern crate regex; // 1.0.2\n\nuse regex::Regex;\nuse std::vec::Vec;\n\npub fn string_split&lt;'a&gt;(s: &amp;'a String) -&gt; Vec&lt;&amp;'a str&gt; {\n    let mut returnVec = Vec::new();\n    let re = Regex::new(r\"\\S+\").unwrap();\n\n    for cap in re.captures_iter(s) {\n        returnVec.push(&amp;cap[0]);\n    }\n\n    returnVec\n}\n\npub fn word_n(s: &amp;String, n: i32) -&gt; &amp;str {\n    let bytes = s.as_bytes();\n\n    let mut num = 0;\n    let mut word_start = 0;\n    for (i, &amp;item) in bytes.iter().enumerate() {\n        if item == b' ' || item == b'\\n' {\n            num += 1;\n            if num == n {\n                return &amp;s[word_start..i].trim();\n            }\n            word_start = i;\n            continue;\n        }\n    }\n\n    &amp;s[..]\n}\n</code></pre>\n\n<p>The error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `cap` does not live long enough\n  --&gt; src/main.rs:11:25\n   |\n11 |         returnVec.push(&amp;cap[0]);\n   |                         ^^^ borrowed value does not live long enough\n12 |     }\n   |     - borrowed value only lives until here\n   |\nnote: borrowed value must be valid for the lifetime 'a as defined on the function body at 6:1...\n  --&gt; src/main.rs:6:1\n   |\n6  | pub fn string_split&lt;'a&gt;(s: &amp;'a String) -&gt; Vec&lt;&amp;'a str&gt; {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>Plus more information:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ rustc --explain E0597\n\nThis error occurs because a borrow was made inside a variable which has a\ngreater lifetime than the borrowed one.\n\nExample of erroneous code:\n\n```\nstruct Foo&lt;'a&gt; {\n    x: Option&lt;&amp;'a u32&gt;,\n}\n\nlet mut x = Foo { x: None };\nlet y = 0;\nx.x = Some(&amp;y); // error: `y` does not live long enough\n```\nIn here, `x` is created before `y` and therefore has a greater lifetime. Always\nkeep in mind that values in a scope are dropped in the opposite order they are\ncreated. So to fix the previous example, just make the `y` lifetime greater than\nthe `x`'s one:\n\n```\nstruct Foo&lt;'a&gt; {\n    x: Option&lt;&amp;'a u32&gt;,\n}\n\nlet y = 0;\nlet mut x = Foo { x: None };\nx.x = Some(&amp;y);\n```\n</code></pre>\n\n<p>At this point I've tried several methods of extending the lifetime of the <code>cap</code> variable, but I'm not able to get anything to work after reading the borrowing and lifetime section of the Rust book. </p>\n"}, {"tags": ["types", "rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1534210283, "post_id": 51832396, "comment_id": 90619097, "body": "What would be the point? To write <code>exit::&lt;!&gt;</code> everywhere instead of just <code>exit</code>?"}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1534210797, "post_id": 51832396, "comment_id": 90619188, "body": "&quot;a T is never materialized&quot; But the type signature doesn&#39;t actually say that, it says that <i>any</i> T can be materialized."}, {"owner": {"reputation": 1915, "user_id": 2682729, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/PZlkg.gif?s=128&g=1", "display_name": "typesanitizer", "link": "https://stackoverflow.com/users/2682729/typesanitizer"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1534213020, "post_id": 51832396, "comment_id": 90619620, "body": "@trentcl, &quot;What would be the point?&quot;. Well it is one less primitive type in the language. Right now, the standard library&#39;s uninhabited type is &quot;privileged&quot; for no obvious reason by being made primitive. The type can be inferred in several contexts (e.g. if you exit on one side of a branch) and it can be left polymorphic wherever it cannot be inferred."}, {"owner": {"reputation": 1915, "user_id": 2682729, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/PZlkg.gif?s=128&g=1", "display_name": "typesanitizer", "link": "https://stackoverflow.com/users/2682729/typesanitizer"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 2, "creation_date": 1534213291, "post_id": 51832396, "comment_id": 90619677, "body": "@loganfsmyth it does though. The type of bottom is precisely <code>forall a. a</code> which is exactly what the unification rules for <code>!</code> are doing right now. From the documentation for <code>!</code>: &quot;expressions with type ! will coerce into any other type&quot;. Isn&#39;t <code>forall a. a</code> an appropriate type for something that &quot;will coerce into any type&quot;?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 4, "creation_date": 1534215194, "post_id": 51832396, "comment_id": 90620048, "body": "You can&#39;t just <i>not monomorphize</i> a generic function. It has to at least adhere to some calling convention for whatever type it &quot;returns&quot;, so <code>exit::&lt;&amp;str&gt;()</code> will compile to something different than <code>exit::&lt;f64&gt;()</code> (at least on x86_64). Unless you&#39;re suggesting that <code>std::process::exit</code> should be special-cased to just... <i>not</i>, which is basically what <code>!</code> is in the first place"}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1534228803, "post_id": 51832396, "comment_id": 90623859, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/31082098/why-would-i-use-divergent-functions\">Why would I use divergent functions?</a>"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 2, "creation_date": 1534230421, "post_id": 51832396, "comment_id": 90624629, "body": "@ljedrz: I wouldn&#39;t say it&#39;s a duplicate. The OP here does not question the use of divergent functions, or why they emerge, which is what the question you link and its answers are about. Instead the OP is questioning the encoding of divergence in the type system, and why Never was chosen when other languages do without."}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1534233561, "post_id": 51832396, "comment_id": 90626218, "body": "@MatthieuM. fair enough."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1534315486, "post_id": 51832396, "comment_id": 90660523, "body": "@theindigamer: Talk about impeccable timing, Nikolas Matsakis, the Language team lead, just wrote a blog post about uninhabited types and their relationship with memory safety/code analysis in Rust: <a href=\"http://smallcultfollowing.com/babysteps/blog/2018/08/13/never-patterns-exhaustive-matching-and-uninhabited-types-oh-my/\" rel=\"nofollow noreferrer\">smallcultfollowing.com/babysteps/blog/2018/08/13/&hellip;</a>"}, {"owner": {"reputation": 1915, "user_id": 2682729, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/PZlkg.gif?s=128&g=1", "display_name": "typesanitizer", "link": "https://stackoverflow.com/users/2682729/typesanitizer"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1534381693, "post_id": 51832396, "comment_id": 90688511, "body": "@MatthieuM. actually I read through the post and the first thing in it was a link to RFC 1216. I read through the rationale for the RFC but it didn&#39;t quite click with me (from a type system perspective); so I posted a question here. The RFC makes more sense now in the context of your explanation."}], "answers": [{"tags": [], "owner": {"reputation": 1915, "user_id": 2682729, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/PZlkg.gif?s=128&g=1", "display_name": "typesanitizer", "link": "https://stackoverflow.com/users/2682729/typesanitizer"}, "is_accepted": false, "score": 3, "last_activity_date": 1534243813, "last_edit_date": 1534243813, "creation_date": 1534221694, "answer_id": 51833828, "question_id": 51832396, "link": "https://stackoverflow.com/questions/51832396/why-does-rust-have-a-never-primitive-type/51833828#51833828", "title": "Why does Rust have a &quot;Never&quot; primitive type?", "body": "<p>I think the reasons why Rust needs a special type <code>!</code> include:</p>\n\n<ol>\n<li><p>The surface language doesn't offer any way to write <code>type Never = for&lt;T&gt;(T)</code> analogous to <code>type Never = forall a. a</code> in Haskell.</p>\n\n<p>More generally, in type aliases, one cannot use type variables (a.k.a. generic parameters) on the RHS without introducing them on the <em>LHS</em>, which is precisely what we want to do here. Using an empty struct/enum doesn't make sense because we want a type alias here so that <code>Never</code> can unify with any type, not a freshly constructed data type.</p>\n\n<p>Since this type cannot be defined by the user, it presents one reason why adding it as a primitive may make sense.</p></li>\n<li><p>If one is syntactically allowed to assign a non-monomorphizable type to the RHS (such as <code>forall a. a</code>), the compiler will need to make an arbitrary choice w.r.t. calling conventions (as pointed out by trentcl in the comments), even though the choice doesn't really matter. Haskell and OCaml can sidestep this issue because they use a uniform memory representation.</p></li>\n</ol>\n"}, {"comments": [{"owner": {"reputation": 1915, "user_id": 2682729, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/PZlkg.gif?s=128&g=1", "display_name": "typesanitizer", "link": "https://stackoverflow.com/users/2682729/typesanitizer"}, "edited": false, "score": 0, "creation_date": 1534297313, "post_id": 51835567, "comment_id": 90656506, "body": "The &quot;intent&quot; argument makes a lot of sense to me. I&#39;m not sure why you&#39;ve made a comparison with C++ though (the &quot;composability&quot; point) as I didn&#39;t really mention C++ in the question, and the Haskell solution is already perfectly composable."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 1915, "user_id": 2682729, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/PZlkg.gif?s=128&g=1", "display_name": "typesanitizer", "link": "https://stackoverflow.com/users/2682729/typesanitizer"}, "edited": false, "score": 0, "creation_date": 1534315203, "post_id": 51835567, "comment_id": 90660421, "body": "@theindigamer: Precisely because the Haskell solution is composable and I wanted to show off an alternative which wasn&#39;t."}, {"owner": {"reputation": 1915, "user_id": 2682729, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/PZlkg.gif?s=128&g=1", "display_name": "typesanitizer", "link": "https://stackoverflow.com/users/2682729/typesanitizer"}, "edited": false, "score": 0, "creation_date": 1534381792, "post_id": 51835567, "comment_id": 90688529, "body": "C++ is an easy scapegoat though :P."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 1915, "user_id": 2682729, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/PZlkg.gif?s=128&g=1", "display_name": "typesanitizer", "link": "https://stackoverflow.com/users/2682729/typesanitizer"}, "edited": false, "score": 0, "creation_date": 1534400825, "post_id": 51835567, "comment_id": 90692973, "body": "@theindigamer: Certainly; it&#39;s also the language I&#39;ve got most expertise in, so it&#39;s easy for me to find examples of what I want in it."}, {"owner": {"reputation": 353, "user_id": 1813349, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5f9c49512653eaa772fed0b1e25a9028?s=128&d=identicon&r=PG", "display_name": "Alex Shpilkin", "link": "https://stackoverflow.com/users/1813349/alex-shpilkin"}, "edited": false, "score": 0, "creation_date": 1543587604, "post_id": 51835567, "comment_id": 93983999, "body": "@Matthieu I have to mention, though, that the Haskell compiler can in fact <a href=\"https://dl.acm.org/citation.cfm?id=99404\" rel=\"nofollow noreferrer\">prove</a> that a function of type <code>forall a. t -&gt; a</code> with <code>t</code> not free in <code>a</code> returns \u22a5, using parametricity in <code>a</code> (<i>i.e.</i> that the function can\u2019t inspect which <code>a</code> it has been instantiated for, only use operations valid for any <code>a</code>). Ditto for <code>forall a. t -&gt; Either b a</code>, &amp;c. So in this case, the type system in fact represents <i>exactly</i> what\u2019s happening. I\u2019m not sure about Rust, though,\u2014is Rust\u2019s polymorphism parametric? (C++\u2019s isn\u2019t.)"}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 17, "last_activity_date": 1534254041, "last_edit_date": 1534254041, "creation_date": 1534230321, "answer_id": 51835567, "question_id": 51832396, "link": "https://stackoverflow.com/questions/51832396/why-does-rust-have-a-never-primitive-type/51835567#51835567", "title": "Why does Rust have a &quot;Never&quot; primitive type?", "body": "<h2>TL;DR: Because it enables local reasoning, and composability.</h2>\n\n<p>Your idea of replacing <code>exit() -&gt; !</code> by <code>exit&lt;T&gt;() -&gt; T</code> only considers the type system and type inference. You are right that from a type inference point of view, both are equivalent. Yet, there is more to a language than the type system.</p>\n\n<h3>Local reasoning for nonsensical code</h3>\n\n<p>The presence of <code>!</code> allows local reasoning to detect nonsensical code. For example, consider:</p>\n\n<pre><code>use std::process::exit;\n\nfn main() {\n    exit(3);\n    println!(\"Hello, World\");\n}\n</code></pre>\n\n<p>The compiler immediately flags the <code>println!</code> statement:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning: unreachable statement\n --&gt; src/main.rs:5:5\n  |\n5 |     println!(\"Hello, World\");\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: #[warn(unreachable_code)] on by default\n  = note: this error originates in a macro outside of the current crate\n          (in Nightly builds, run with -Z external-macro-backtrace for more info)\n</code></pre>\n\n<p>How? Well, <code>exit</code>'s signature makes it clear it will never return, since no instance of <code>!</code> can ever be created, therefore anything after it cannot possibly be executed.</p>\n\n<h3>Local reasoning for optimizations</h3>\n\n<p>Similarly, rustc passes on this information about the signature of <code>exit</code> to the LLVM optimizer.</p>\n\n<p>First in the declaration of <code>exit</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>; std::process::exit\n; Function Attrs: noreturn\ndeclare void @_ZN3std7process4exit17hcc1d690c14e39344E(i32) unnamed_addr #5\n</code></pre>\n\n<p>And then at the use site, just in case:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>; playground::main\n; Function Attrs: uwtable\ndefine internal void @_ZN10playground4main17h9905b07d863859afE() unnamed_addr #0 !dbg !106 {\nstart:\n; call std::process::exit\n  call void @_ZN3std7process4exit17hcc1d690c14e39344E(i32 3), !dbg !108\n  unreachable, !dbg !108\n}\n</code></pre>\n\n<h3>Composability</h3>\n\n<p>In C++, <code>[[noreturn]]</code> is an attribute. This is unfortunate, really, because it does not integrate with generic code: for a conditionally <code>noreturn</code> function you need to go through hoops, and the ways to pick a <code>noreturn</code> type are as varied as there are libraries using one.</p>\n\n<p>In Rust, <code>!</code> is a first-class construct, uniform across all libraries, and best of all... even libraries created without <code>!</code> in mind can just work.</p>\n\n<p>The best example is the <code>Result</code> type (Haskell's <code>Either</code>). Its full signature is <code>Result&lt;T, E&gt;</code> where <code>T</code> is the expected type and <code>E</code> the error type. There is nothing special about <code>!</code> in <code>Result</code>, yet it can be instantiated with <code>!</code>:</p>\n\n<pre><code>#![feature(never_type)]\n\nfn doit() -&gt; Result&lt;i32, !&gt; { Ok(3) }\n\nfn main() {\n    doit().err().unwrap();\n    println!(\"Hello, World\");\n}\n</code></pre>\n\n<p>And the compiler sees right through it:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning: unreachable statement\n --&gt; src/main.rs:7:5\n  |\n7 |     println!(\"Hello, World\");\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: #[warn(unreachable_code)] on by default\n  = note: this error originates in a macro outside of the current crate\n          (in Nightly builds, run with -Z external-macro-backtrace for more info)\n</code></pre>\n\n<h3>Composability (bis)</h3>\n\n<p>The ability to reason about types that cannot be instantiated also extends to reasoning about enum variants that cannot be instantiated.</p>\n\n<p>For example, the following program compiles:</p>\n\n<pre><code>#![feature(never_type, exhaustive_patterns)]\n\nfn doit() -&gt; Result&lt;i32, !&gt; {\n    Ok(3)\n}\n\nfn main() {\n    match doit() {\n        Ok(v) =&gt; println!(\"{}\", v),\n        // No Err needed\n    }\n\n    // `Ok` is the only possible variant\n    let Ok(v) = doit();\n    println!(\"{}\", v);\n}\n</code></pre>\n\n<p>Normally, <code>Result&lt;T, E&gt;</code> has two variants: <code>Ok(T)</code> and <code>Err(E)</code>, and therefore matching must account for both variants.</p>\n\n<p>Here, however, since <code>!</code> cannot be instantiated, <code>Err(!)</code> cannot be, and therefore <code>Result&lt;T, !&gt;</code> has a single variant: <code>Ok(T)</code>. The compiler therefore allows only considering the <code>Ok</code> case.</p>\n\n<h3>Conclusion</h3>\n\n<p>There is more to a programming language than its type system.</p>\n\n<p>A programming language is about a developer communicating its <strong>intent</strong> to other developers and the machine. The Never type makes the intent of the developer clear, allowing other parties to clearly understand what the developer meant, rather than having to reconstruct the meaning from incidental clues.</p>\n"}], "owner": {"reputation": 1915, "user_id": 2682729, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/PZlkg.gif?s=128&g=1", "display_name": "typesanitizer", "link": "https://stackoverflow.com/users/2682729/typesanitizer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1231, "favorite_count": 2, "accepted_answer_id": 51835567, "answer_count": 2, "score": 11, "last_activity_date": 1534254041, "creation_date": 1534208618, "last_edit_date": 1534252657, "question_id": 51832396, "link": "https://stackoverflow.com/questions/51832396/why-does-rust-have-a-never-primitive-type", "title": "Why does Rust have a &quot;Never&quot; primitive type?", "body": "<p>Rust's <a href=\"https://doc.rust-lang.org/std/process/fn.exit.html\" rel=\"noreferrer\"><code>std::process::exit</code></a> has the type</p>\n\n<pre><code>pub fn exit(code: i32) -&gt; !\n</code></pre>\n\n<p>where <code>!</code> is the <a href=\"https://doc.rust-lang.org/std/primitive.never.html\" rel=\"noreferrer\">\"Never\" <em>primitive</em> type</a>. </p>\n\n<p>Why does Rust need a special type for this? </p>\n\n<p>Compare this with Haskell where the type of <a href=\"https://www.stackage.org/haddock/lts-12.6/base-4.11.1.0/System-Exit.html#v:exitWith\" rel=\"noreferrer\"><code>System.Exit.exitWith</code></a> is</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>exitWith :: forall a. Int -&gt; a\n</code></pre>\n\n<p>The corresponding Rust signature would be</p>\n\n<pre><code>pub fn exit&lt;T&gt;(code: i32) -&gt; T\n</code></pre>\n\n<p>There is no need to monomorphize this function for different <code>T</code>'s because a <code>T</code> is never materialized so compilation should still work.</p>\n"}, {"tags": ["linux", "io", "rust"], "answers": [{"tags": [], "owner": {"reputation": 939, "user_id": 2870802, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-lHzULJklIJg/AAAAAAAAAAI/AAAAAAAABwk/_pJZF95FiAY/photo.jpg?sz=128", "display_name": "ozkriff", "link": "https://stackoverflow.com/users/2870802/ozkriff"}, "is_accepted": true, "score": 5, "last_activity_date": 1534253514, "last_edit_date": 1534253514, "creation_date": 1534225304, "answer_id": 51834400, "question_id": 51832359, "link": "https://stackoverflow.com/questions/51832359/does-rust-have-bindings-for-tee2/51834400#51834400", "title": "Does Rust have bindings for tee(2)?", "body": "<p>The <code>tee</code> method <a href=\"https://doc.rust-lang.org/1.6.0/std/io/trait.Read.html#method.tee\" rel=\"nofollow noreferrer\">existed in the standard library</a>, but <a href=\"https://github.com/rust-lang/rust/pull/30187\" rel=\"nofollow noreferrer\">it was deprecated in 1.6</a>.</p>\n\n<p>You can use <a href=\"https://crates.io/crates/tee\" rel=\"nofollow noreferrer\">the tee crate</a> to get the same functionality:</p>\n\n<pre><code>extern crate tee;\n\nuse tee::TeeReader;\nuse std::io::Read;\n\nfn main() {\n    let mut reader = \"It's over 9000!\".as_bytes();\n    let mut teeout = Vec::new();\n    let mut stdout = Vec::new();\n    {\n        let mut tee = TeeReader::new(&amp;mut reader, &amp;mut teeout);\n        let _ = tee.read_to_end(&amp;mut stdout);\n    }\n    println!(\"tee out -&gt; {:?}\", teeout);\n    println!(\"std out -&gt; {:?}\", stdout);\n}\n</code></pre>\n\n<p>(<a href=\"https://github.com/softprops/tee/blob/42e9fc6ee/examples/simple.rs\" rel=\"nofollow noreferrer\">example from the repo</a>)</p>\n"}], "owner": {"reputation": 187, "user_id": 3235236, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/547b82a7609507c765bb9ab7733eaafe?s=128&d=identicon&r=PG&f=1", "display_name": "Lombard", "link": "https://stackoverflow.com/users/3235236/lombard"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 122, "favorite_count": 0, "accepted_answer_id": 51834400, "answer_count": 1, "score": 3, "last_activity_date": 1534253514, "creation_date": 1534208156, "last_edit_date": 1534253471, "question_id": 51832359, "link": "https://stackoverflow.com/questions/51832359/does-rust-have-bindings-for-tee2", "title": "Does Rust have bindings for tee(2)?", "body": "<p>Does Rust have bindings for <code>tee(2)</code> in <code>std::io</code> or otherwise? And if there are no bindings, how would I get that functionality in a Rust program?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 4, "creation_date": 1534198682, "post_id": 51831126, "comment_id": 90616759, "body": "It should be noted that the OP example works as-is with NLL enabled."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1534200360, "post_id": 51831126, "comment_id": 90617182, "body": "Pragmatically, it doesn&#39;t really matter if it&#39;s mutable or immutable. You couldn&#39;t get another mutable reference either way."}], "owner": {"reputation": 147, "user_id": 8940015, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/26dcc35052997268151655e9ab26d243?s=128&d=identicon&r=PG&f=1", "display_name": "mrbus2007", "link": "https://stackoverflow.com/users/8940015/mrbus2007"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 43, "favorite_count": 0, "closed_date": 1534200297, "answer_count": 0, "score": 2, "last_activity_date": 1534200063, "creation_date": 1534197372, "last_edit_date": 1534200063, "question_id": 51831126, "link": "https://stackoverflow.com/questions/51831126/compiler-continues-to-count-the-borrow-as-mutable-when-it-is-actually-immutable", "closed_reason": "Duplicate", "title": "Compiler continues to count the borrow as mutable when it is actually immutable", "body": "<p>Consider this code, ignoring the warnings:</p>\n\n<pre><code>fn main() {}\n\npub struct TreeNode {\n    subs: Vec&lt;TreeNode&gt;,\n}\n\nimpl TreeNode {\n    pub fn do_something(&amp;mut self) {\n        if let Some(changed_node) = self.enum_node(&amp;|_| true) {\n            // Closure in real program is much more complicated and it really mutates its parameter\n            self.enum_node(&amp;|_| false); // Again, real closure is more complicated\n        };\n    }\n\n    fn enum_node&lt;'a, F&gt;(&amp;'a mut self, f: &amp;F) -&gt; Option&lt;&amp;'a Self&gt;\n    where\n        F: Fn(&amp;mut Self) -&gt; bool,\n    {\n        if f(self) {\n            Some(self)\n        } else {\n            for sub in &amp;mut self.subs {\n                if let Some(n) = Self::enum_node(sub, f) {\n                    return Some(n);\n                }\n            }\n            None\n        }\n    }\n}\n</code></pre>\n\n<p>The sense of the function <code>enum_nodes</code> is to enumerate nodes of the tree, and if the closure <code>f</code> returns <code>true</code> on some node, stop enumerating and return a reference to that node.</p>\n\n<p>It gives a compiler error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `*self` as mutable more than once at a time\n  --&gt; src/main.rs:11:13\n   |\n9  |         if let Some(changed_node) = self.enum_node(&amp;|_| true) {\n   |                                     ---- first mutable borrow occurs here\n10 |             // Closure in real program is much more complicated and it really mutates its parameter\n11 |             self.enum_node(&amp;|_| false); // Again, real closure is more complicated\n   |             ^^^^ second mutable borrow occurs here\n12 |         };\n   |         - first borrow ends here\n</code></pre>\n\n<p>I realize that</p>\n\n<ol>\n<li>This problem may be solved (I didn't actually try) by using <code>RefCell</code></li>\n<li>The lifetime of the first borrow of <code>self</code> is prolonged because the lifetime of <code>enum_node</code>'s <code>self</code> parameter and return value are the same, and I assign the return value to the <code>changed_node</code>. </li>\n</ol>\n\n<p>If I rewrite lines 9-12 as:</p>\n\n<pre><code>self.enum_node(&amp;|_| true);\n</code></pre>\n\n\n\n<pre><code>self.enum_node(&amp;|_| false);\n</code></pre>\n\n<p>then it compiles because the lifetime of the first borrow of <code>self</code> ends immediately after the first call to <code>enum_node</code>.</p>\n\n<p>That is not my question. </p>\n\n<p>After the first call to <code>enum_node</code> ends, the only way to mutate <code>self</code> is via the returned value i.e. <code>changed_node</code>, which it is immutable. Why does the compiler continue to count the <strong>borrow as mutable</strong>, is it logical?</p>\n\n<p>How can I understand this behavior of the compiler?</p>\n"}, {"tags": ["sql-server", "ssis", "rust", "ssms"], "comments": [{"owner": {"reputation": 4136, "user_id": 1443098, "user_type": "registered", "accept_rate": 2, "profile_image": "https://www.gravatar.com/avatar/943c60e4b1686ea72a0dd48fd394dee4?s=128&d=identicon&r=PG", "display_name": "user1443098", "link": "https://stackoverflow.com/users/1443098/user1443098"}, "edited": false, "score": 0, "creation_date": 1534173440, "post_id": 51825522, "comment_id": 90605333, "body": "when you say, &quot;start the job in SSMS&quot;, do you mean start an Agent job or run the package from SSISDB?"}, {"owner": {"reputation": 23468, "user_id": 4137916, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6bab91fda70af7e9beb8934d323540e8?s=128&d=identicon&r=PG", "display_name": "Jeroen Mostert", "link": "https://stackoverflow.com/users/4137916/jeroen-mostert"}, "edited": false, "score": 2, "creation_date": 1534173695, "post_id": 51825522, "comment_id": 90605488, "body": "That error code is <code>c0000135</code>, <code>STATUS_DLL_NOT_FOUND</code>. That&#39;s not generally a permissions issue, but a path or bitness issue. If all else fails and it&#39;s not clear from context, running <a href=\"https://docs.microsoft.com/sysinternals/downloads/procmon\" rel=\"nofollow noreferrer\">Process Monitor</a> can give you the exact load that failed."}, {"owner": {"reputation": 665, "user_id": 6503432, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/eea8838a8ce0721d044c9cb57c2fe117?s=128&d=identicon&r=PG&f=1", "display_name": "rongon", "link": "https://stackoverflow.com/users/6503432/rongon"}, "edited": false, "score": 0, "creation_date": 1534174195, "post_id": 51825522, "comment_id": 90605770, "body": "I just edited my question with some additional information: By &quot;start the job in SSMS&quot; I mean start an Agent job. I replaced the original script with a very basic Rust-script that just creates a file and writes &quot;test&quot; in it. Again, this script works fine as is on the server, but not in the job."}, {"owner": {"reputation": 4136, "user_id": 1443098, "user_type": "registered", "accept_rate": 2, "profile_image": "https://www.gravatar.com/avatar/943c60e4b1686ea72a0dd48fd394dee4?s=128&d=identicon&r=PG", "display_name": "user1443098", "link": "https://stackoverflow.com/users/1443098/user1443098"}, "edited": false, "score": 0, "creation_date": 1534193986, "post_id": 51825522, "comment_id": 90615299, "body": "I&#39;d guess its either related to the proxy account you configured to run SSIS jobs or that you should run it in 32-bit mode.  The latter can be required depending on what happens in the pkg"}, {"owner": {"reputation": 665, "user_id": 6503432, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/eea8838a8ce0721d044c9cb57c2fe117?s=128&d=identicon&r=PG&f=1", "display_name": "rongon", "link": "https://stackoverflow.com/users/6503432/rongon"}, "edited": false, "score": 0, "creation_date": 1534233288, "post_id": 51825522, "comment_id": 90626102, "body": "Hm, using 32bit runtime in the job step does nothing as far as I can see."}], "answers": [{"tags": [], "owner": {"reputation": 665, "user_id": 6503432, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/eea8838a8ce0721d044c9cb57c2fe117?s=128&d=identicon&r=PG&f=1", "display_name": "rongon", "link": "https://stackoverflow.com/users/6503432/rongon"}, "is_accepted": true, "score": 0, "last_activity_date": 1534316830, "creation_date": 1534316830, "answer_id": 51854324, "question_id": 51825522, "link": "https://stackoverflow.com/questions/51825522/execute-process-task-fails-to-execute-rust-script-in-job/51854324#51854324", "title": "Execute process task fails to execute Rust script in job", "body": "<p>Okay the problem was indeed with the default <em>SQL Server Service Agent</em>-account that ran the job. If I run the job with a Proxy-account it runs fine. </p>\n\n<p>I'll have to look into the configuration of the Service Agent but until then, Proxy account it is. </p>\n"}], "owner": {"reputation": 665, "user_id": 6503432, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/eea8838a8ce0721d044c9cb57c2fe117?s=128&d=identicon&r=PG&f=1", "display_name": "rongon", "link": "https://stackoverflow.com/users/6503432/rongon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 403, "favorite_count": 0, "accepted_answer_id": 51854324, "answer_count": 1, "score": 0, "last_activity_date": 1534316830, "creation_date": 1534173267, "last_edit_date": 1534174115, "question_id": 51825522, "link": "https://stackoverflow.com/questions/51825522/execute-process-task-fails-to-execute-rust-script-in-job", "title": "Execute process task fails to execute Rust script in job", "body": "<p>I have written a small Rust script for an import job. I added the script execution into the SSIS package through the <code>Execute process task</code> and set the correct working directory. Using the debugger, the script works without a problem, as it does when executed normally, e.g. through <code>cmd</code> or PowerShell. </p>\n\n<p>When I start the job in SSMS as an Agent Job, the package fails with </p>\n\n<blockquote>\n  <p>The process exit code was \"-1073741515\" while the expected was \"0\". </p>\n</blockquote>\n\n<h3>What I tried</h3>\n\n<ul>\n<li>Replacing the script with a very basic Rust script that just writes one single line to a file in the working directory to exclude the possibility that the script somehow panics, but still nothing. </li>\n<li>The script is compiled with the <code>i686-pc-windows-msvc</code> toolchain. With 64bit the script does not work at all on the server. </li>\n<li>Permissions look okay for the executing and the working directory. <code>Full control</code> for both folders. </li>\n</ul>\n\n<p>Since execution works on the server I think this should most likely be a permissions issue but I can't for the life of me not figure out what is wrong. </p>\n"}, {"tags": ["reference", "rust", "literals"], "comments": [{"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1534172249, "post_id": 51825063, "comment_id": 90604589, "body": "String <i>literals</i> are static constants. They don&#39;t need to copied to the heap or stack, you can reference them directly in program memory. Notice you can also get string slices from <a href=\"https://doc.rust-lang.org/beta/std/string/struct.String.html\" rel=\"nofollow noreferrer\">dynamically allocated strings</a>"}, {"owner": {"reputation": 4491, "user_id": 1264974, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/6558cf06df3ccf1c49329f38fd843b7d?s=128&d=identicon&r=PG", "display_name": "justinas", "link": "https://stackoverflow.com/users/1264974/justinas"}, "edited": false, "score": 0, "creation_date": 1534172285, "post_id": 51825063, "comment_id": 90604610, "body": "If you try to examine such program in Godbolt&#39;s compiler explorer, you will see the assembly pseudo-instruction (&#39;directive&#39;?) that &quot;bakes&quot; the string into the binary (around line 169 when I compiled it) <a href=\"https://godbolt.org/g/GBsmCt\" rel=\"nofollow noreferrer\">godbolt.org/g/GBsmCt</a>"}, {"owner": {"reputation": 267, "user_id": 2651045, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/sSGRv.png?s=128&g=1", "display_name": "Arthur", "link": "https://stackoverflow.com/users/2651045/arthur"}, "reply_to_user": {"reputation": 4491, "user_id": 1264974, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/6558cf06df3ccf1c49329f38fd843b7d?s=128&d=identicon&r=PG", "display_name": "justinas", "link": "https://stackoverflow.com/users/1264974/justinas"}, "edited": false, "score": 0, "creation_date": 1534172355, "post_id": 51825063, "comment_id": 90604668, "body": "@justinas I&#39;m pretty certain the example could be made shorter if you didn&#39;t have to <i>print</i> the thing, but that is a cool tool. Do I have to learn (at least a little bit of) assembly now too?"}, {"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 1, "creation_date": 1534172406, "post_id": 51825063, "comment_id": 90604697, "body": "&quot;<i>Not the stack, not the heap, but the actual place where the processor stores all the instructions that the program consists of.</i>&quot; - yes, that&#39;s what they mean by &quot;the binary&quot;. &quot;<i>A specific line of the assembly, if you will</i>&quot;, yeah, although this part is not executable code, it&#39;s plain data not instructions."}, {"owner": {"reputation": 4491, "user_id": 1264974, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/6558cf06df3ccf1c49329f38fd843b7d?s=128&d=identicon&r=PG", "display_name": "justinas", "link": "https://stackoverflow.com/users/1264974/justinas"}, "edited": false, "score": 0, "creation_date": 1534172485, "post_id": 51825063, "comment_id": 90604742, "body": "@Arthur I was worried that the compiler would optimize it out if it was unused, but it seems that &quot;-C opt-level=0&quot; helps avoid that."}], "answers": [{"tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": true, "score": 9, "last_activity_date": 1534177469, "last_edit_date": 1534177469, "creation_date": 1534171934, "answer_id": 51825120, "question_id": 51825063, "link": "https://stackoverflow.com/questions/51825063/can-a-str-contain-a-pointer-to-program-memory-in-rust/51825120#51825120", "title": "Can a `&amp;str` contain a pointer to program memory in Rust?", "body": "<p>It's true - <code>&amp;'static str</code> string literals are embedded within the binary itself. It's not unique to Rust, e.g. <a href=\"https://stackoverflow.com/questions/28640943/string-literal-in-c-program-can-it-be-found-in-binary\">C implementation often does the same thing</a>.</p>\n\n<p>Citing the <a href=\"https://doc.rust-lang.org/stable/reference/glossary.html#string-literal\" rel=\"nofollow noreferrer\">Rust Reference</a> (emphasis mine):</p>\n\n<blockquote>\n  <p>A string literal is a string <strong>stored directly in the final binary</strong>, and\n  so will be valid for the <code>'static</code> duration.</p>\n  \n  <p>Its type is <code>'static</code> duration borrowed string slice, <code>&amp;'static str</code>.</p>\n</blockquote>\n\n<p>There are programs designed specifically to find this kind of strings, e.g. <a href=\"https://serverfault.com/questions/51477/linux-command-to-find-strings-in-binary-or-non-ascii-file\">strings</a> or just <a href=\"https://serverfault.com/questions/328101/how-do-i-grep-through-binary-files-that-look-like-text\"><code>grep --text</code></a>.</p>\n\n<p>Related question: <a href=\"https://stackoverflow.com/questions/2589949/string-literals-where-do-they-go\">String literals: Where do they go?</a>.</p>\n"}], "owner": {"reputation": 267, "user_id": 2651045, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/sSGRv.png?s=128&g=1", "display_name": "Arthur", "link": "https://stackoverflow.com/users/2651045/arthur"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 189, "favorite_count": 0, "accepted_answer_id": 51825120, "answer_count": 1, "score": 7, "last_activity_date": 1534177469, "creation_date": 1534171722, "last_edit_date": 1534172366, "question_id": 51825063, "link": "https://stackoverflow.com/questions/51825063/can-a-str-contain-a-pointer-to-program-memory-in-rust", "title": "Can a `&amp;str` contain a pointer to program memory in Rust?", "body": "<p>Section 4.3 about slices of <em>The Rust Programming Language</em> <a href=\"https://doc.rust-lang.org/book/2018-edition/ch04-03-slices.html#string-literals-are-slices\" rel=\"noreferrer\">has this paragraph</a>:</p>\n\n<blockquote>\n  <p><strong>String Literals Are Slices</strong></p>\n  \n  <p>Recall that we talked about string literals being stored inside the\n  binary. Now that we know about slices, we can properly understand\n  string literals:</p>\n\n<pre><code>let s = \"Hello, world!\";\n</code></pre>\n  \n  <p>The type of <code>s</code> here is <code>&amp;str</code>: it\u2019s a slice pointing to that specific\n  point of the binary. This is also why string literals are immutable;\n  <code>&amp;str</code> is an immutable reference.</p>\n</blockquote>\n\n<p>Now, a string slice is, as they've covered earlier, a pair (of some sort) containing a pointer and a length. To me, this paragraph (specifically \"we talked about string literals being <strong>stored inside the binary</strong>\" and \"pointing to that specific point <strong>of the binary</strong>\") seems to imply that that pointer goes straight into program memory. Not the stack, not the heap, but the actual place where the processor stores all the instructions that the program consists of. A specific line of the assembly, if you will.</p>\n\n<p>Is this true? If not, what else could they mean by that, and how is it actually done? How can I figure this out myself if I have a similar question later along the line?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 2, "creation_date": 1534165462, "post_id": 51822940, "comment_id": 90600124, "body": "I think that you did not understand the purpose of the <code>?</code> operator. It is not intended to convert anything. Change the return type of your function to <code>io::Error</code>, and everything will be ok."}, {"owner": {"reputation": 5321, "user_id": 157726, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/PY0sR.png?s=128&g=1", "display_name": "Juan Leni", "link": "https://stackoverflow.com/users/157726/juan-leni"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1534166378, "post_id": 51822940, "comment_id": 90600730, "body": "I do understand the operator and it is not about converting. It will unpack, but there must be a trait available to a conversion to happen if I want a more general error type in result."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1534167072, "post_id": 51822940, "comment_id": 90601137, "body": "You should try to improve the wording of the question: as in, it is not very clear."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 4, "creation_date": 1534167403, "post_id": 51822940, "comment_id": 90601373, "body": "@Boiethios <i>It is not intended to convert anything</i> \u2014 one of the biggest benefits of <code>?</code> is that it <b>does</b> convert the error type for you. It cannot write the implementations of those conversions but it can call them. Your own answer makes use of the fact that errors are converted."}], "answers": [{"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 4, "last_activity_date": 1534166833, "creation_date": 1534166833, "answer_id": 51823496, "question_id": 51822940, "link": "https://stackoverflow.com/questions/51822940/convert-traits-for-std-error-types-are-typically-missing/51823496#51823496", "title": "Convert traits for std error types are typically missing", "body": "<p>The type that you are looking for is <code>Box&lt;dyn Error&gt;</code>. <a href=\"https://doc.rust-lang.org/std/error/trait.Error.html\" rel=\"nofollow noreferrer\"><code>std::error::Error</code></a> is a trait that all error types should implement.</p>\n\n<p>Example with multiple error types:</p>\n\n<pre><code>use std::{error::Error, fs::File, io::prelude::*};\n\nfn main() -&gt; Result&lt;(), Box&lt;dyn Error&gt;&gt; {\n    let mut file = File::create(\"foo.txt\")?; // io::Error\n    file.write_all(b\"Hello, world!\")?; // io::Error\n    let _: i32 = \"123\".parse()?; // fmt::Error\n    Ok(())\n}\n</code></pre>\n"}], "owner": {"reputation": 5321, "user_id": 157726, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/PY0sR.png?s=128&g=1", "display_name": "Juan Leni", "link": "https://stackoverflow.com/users/157726/juan-leni"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 114, "favorite_count": 0, "accepted_answer_id": 51823496, "answer_count": 1, "score": 0, "last_activity_date": 1534179472, "creation_date": 1534164998, "last_edit_date": 1534179472, "question_id": 51822940, "link": "https://stackoverflow.com/questions/51822940/convert-traits-for-std-error-types-are-typically-missing", "title": "Convert traits for std error types are typically missing", "body": "<p>It is quite common that the <code>?</code> operator results in errors. For instance, a function with return type <code>Result&lt;u32, &amp;'static str&gt;</code> may result in an error like:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>file.read(&amp;mut buffer)?;\n^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::convert::From&lt;std::io::Error&gt;` is not implemented for `&amp;str`\n</code></pre>\n\n<p>A mismatch between the function return type and the returned error requires a conversion. However, traits are sometimes not available. That makes the <code>?</code> operator inconvenient and force things like using <code>match</code>, etc. a lot. </p>\n\n<p>What is the typical return type that allows for automatic conversion of the most common std error types?</p>\n"}, {"tags": ["rust", "traits", "trait-objects"], "answers": [{"comments": [{"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1534314207, "post_id": 51848351, "comment_id": 90660083, "body": "<i>It sounds like you&#39;re asking why the <code>: Sized</code> restriction is necessary.</i>: No: <i>I&#39;m not asking, why the bound is required.</i>"}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1534314392, "post_id": 51848351, "comment_id": 90660147, "body": "However, I wasn&#39;t aware of that a <code>: Sized</code> bound makes a trait <i>not object safe</i>. You are basically answering the linked question again."}, {"owner": {"reputation": 1003, "user_id": 4957011, "user_type": "registered", "accept_rate": 82, "profile_image": "https://lh3.googleusercontent.com/-qCvohWQdhyo/AAAAAAAAAAI/AAAAAAAAAyc/5cVJx4KgEFE/photo.jpg?sz=128", "display_name": "Phoenix", "link": "https://stackoverflow.com/users/4957011/phoenix"}, "reply_to_user": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1534362991, "post_id": 51848351, "comment_id": 90683278, "body": "&quot;This question asks about, why you can&#39;t call baz from a trait object.&quot; You can&#39;t call baz from a trait object because baz is a generic function and you cannot call generic functions from trait objects."}, {"owner": {"reputation": 3134, "user_id": 58214, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/ca6e06b8f4582c770ea443f8bf4f48a3?s=128&d=identicon&r=PG", "display_name": "Beno&#238;t", "link": "https://stackoverflow.com/users/58214/beno%c3%aet"}, "edited": false, "score": 0, "creation_date": 1573384413, "post_id": 51848351, "comment_id": 103858229, "body": "So what would be the way to &quot;solve&quot; this so that this Bar trait becomes callable ?"}, {"owner": {"reputation": 1003, "user_id": 4957011, "user_type": "registered", "accept_rate": 82, "profile_image": "https://lh3.googleusercontent.com/-qCvohWQdhyo/AAAAAAAAAAI/AAAAAAAAAyc/5cVJx4KgEFE/photo.jpg?sz=128", "display_name": "Phoenix", "link": "https://stackoverflow.com/users/4957011/phoenix"}, "reply_to_user": {"reputation": 3134, "user_id": 58214, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/ca6e06b8f4582c770ea443f8bf4f48a3?s=128&d=identicon&r=PG", "display_name": "Beno&#238;t", "link": "https://stackoverflow.com/users/58214/beno%c3%aet"}, "edited": false, "score": 1, "creation_date": 1573409621, "post_id": 51848351, "comment_id": 103864760, "body": "@Beno&#238;t that&#39;s a very non-trivial question, but in this specific example, you&#39;d removed the <code>where Self: Sized</code> bound, then necessarily remove all generics from the method. Here, the generic is the <code>impl AsRef&lt;str&gt;</code>, which is kind of secretly a type parameter. Here, you could simply replace it with <code>&amp;str</code>."}], "tags": [], "owner": {"reputation": 1003, "user_id": 4957011, "user_type": "registered", "accept_rate": 82, "profile_image": "https://lh3.googleusercontent.com/-qCvohWQdhyo/AAAAAAAAAAI/AAAAAAAAAyc/5cVJx4KgEFE/photo.jpg?sz=128", "display_name": "Phoenix", "link": "https://stackoverflow.com/users/4957011/phoenix"}, "is_accepted": true, "score": 4, "last_activity_date": 1534292344, "last_edit_date": 1534292344, "creation_date": 1534274049, "answer_id": 51848351, "question_id": 51822118, "link": "https://stackoverflow.com/questions/51822118/why-can-a-function-on-a-trait-object-not-be-called-when-bounded-with-self-size/51848351#51848351", "title": "Why can a function on a trait object not be called when bounded with `Self: Sized`?", "body": "<p>Because Rust's generics system works through monomorphization. </p>\n\n<p>In Java, for example, type parameters in a generic function turn into variables of type Object, and are casted as necessary. Generics in languages like this simply serves as a tool to help verify the correctness of types within code.</p>\n\n<p>Languages such as Rust and C++ use monomorphization for generics. For each combination of type parameters a generic function is invoked with, specialized machine code is generated which runs that function with those combinations of type parameters. The function is <em>monomorphized</em>. This allows data to be stored in place, eliminates the cost of casting, and allows the generic code to call \"static\" functions on that type paramameter.</p>\n\n<p>So why can't you do that on a trait object? </p>\n\n<p>Trait objects in many languages, including Rust, are implemented using a <em>vtable</em>. When you have some type of pointer to a trait object (raw, reference, Box, reference counter, etc.), it contains two pointers: the pointer to the data, and a pointer to a <em>vtable entry</em>. The vtable entry is a collection of function pointers, stored in an immutable memory region, which point to the implementation of that trait's methods. Thus, when you call a method on a trait object, it looks up the function pointer of the implementation in the vtable, and then makes an indirect jump to that pointer.</p>\n\n<p>Unfortunately, the Rust compiler cannot monomorphize functions, if it does not know at compile time the code that implements the function, which is the case when you call a method on a trait object. For that reason, you cannot call a generic function (well, generic over types) on a trait object.</p>\n\n<p>-Edit-</p>\n\n<p>It sounds like you're asking why the <code>: Sized</code> restriction is necessary.</p>\n\n<p><code>: Sized</code> makes it so that the trait cannot be used as a trait object. I suppose there could be a couple of alternatives. Rust could implicitly make any trait with generic functions not object safe. Rust could also implicitly prevent generic functions from being called on trait objects.</p>\n\n<p>However, Rust tries to be explicit with what the compiler is doing, which these implicit approaches would go against. Wouldn't it be confusing, anyways, for a beginner to try and call a generic function on a trait object and have it fail to compile?</p>\n\n<p>Instead, Rust lets you <em>explicitly</em> make the entire trait not object safe</p>\n\n<p><code>trait Foo: Sized {</code></p>\n\n<p>Or <em>explicitly</em> make certain functions only available with static dispatch</p>\n\n<p><code>fn foo&lt;T&gt;() where Self: Sized {</code></p>\n"}, {"tags": [], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "is_accepted": false, "score": 1, "last_activity_date": 1534282720, "last_edit_date": 1592644375, "creation_date": 1534282720, "answer_id": 51850127, "question_id": 51822118, "link": "https://stackoverflow.com/questions/51822118/why-can-a-function-on-a-trait-object-not-be-called-when-bounded-with-self-size/51850127#51850127", "title": "Why can a function on a trait object not be called when bounded with `Self: Sized`?", "body": "<p>The bound makes the method not object safe. Traits that are not object safe cannot be used as types.</p>\n<blockquote>\n<p>Methods that take <code>Self</code> as an argument, return <code>Self</code> or otherwise require <code>Self: Sized</code> are not Object safe. That's because methods on a trait object are called via dynamic dispatch and the size of the trait implementation cannot be known at compile time. -- <a href=\"https://chat.stackoverflow.com/transcript/message/43582237#43582237\">Peter Hall</a></p>\n</blockquote>\n<p>Citing the <a href=\"https://doc.rust-lang.org/book/first-edition/trait-objects.html#object-safety\" rel=\"nofollow noreferrer\">official docs</a>:</p>\n<blockquote>\n<p>Only traits that are object-safe can be made into trait objects. A trait is object-safe if both of these are true:</p>\n<ul>\n<li>the trait does not require that <code>Self: Sized</code></li>\n<li>all of its methods are object-safe</li>\n</ul>\n<p>So what makes a method object-safe? Each method must require that <code>Self: Sized</code> or all of the following:</p>\n<ul>\n<li>must not have any type parameters</li>\n<li>must not use <code>Self</code></li>\n</ul>\n</blockquote>\n<hr />\n<p>See also:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/a/42621469/3131852\">this answer</a> from <em><a href=\"https://stackoverflow.com/questions/42620022\">Why does a generic method inside a trait require trait object to be sized?</a></em></li>\n</ul>\n"}], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2154, "favorite_count": 0, "accepted_answer_id": 51848351, "answer_count": 2, "score": 5, "last_activity_date": 1584370152, "creation_date": 1534162389, "last_edit_date": 1584370152, "question_id": 51822118, "link": "https://stackoverflow.com/questions/51822118/why-can-a-function-on-a-trait-object-not-be-called-when-bounded-with-self-size", "title": "Why can a function on a trait object not be called when bounded with `Self: Sized`?", "body": "<p>I have the following code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait Bar {\n    fn baz(&amp;self, arg: impl AsRef&lt;str&gt;)\n    where\n        Self: Sized;\n}\n\nstruct Foo;\n\nimpl Bar for Foo {\n    fn baz(&amp;self, arg: impl AsRef&lt;str&gt;) {}\n}\n\nfn main() {\n    let boxed: Box&lt;dyn Bar&gt; = Box::new(Foo);\n    boxed.baz();\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=6e23859c250402cf012b58193759f097&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>Which results in this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: the `baz` method cannot be invoked on a trait object\n  --&gt; src/main.rs:15:11\n   |\n15 |     boxed.baz();\n   |           ^^^\n</code></pre>\n\n<p>Why is this not possible? It works when I remove the <code>Self: Sized</code> bound, but then I can't use generics which make the function more comfortable for the caller.</p>\n\n<p>This is not a duplicate of <a href=\"https://stackoverflow.com/questions/42620022\">Why does a generic method inside a trait require trait object to be sized?</a> which asks why you can't call <code>baz</code> from a trait object. I'm not asking why the bound is required; this has <a href=\"https://chat.stackoverflow.com/transcript/message/43581572#43581572\">already been discussed</a>.</p>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 5321, "user_id": 157726, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/PY0sR.png?s=128&g=1", "display_name": "Juan Leni", "link": "https://stackoverflow.com/users/157726/juan-leni"}, "edited": false, "score": 0, "creation_date": 1534161337, "post_id": 51821632, "comment_id": 90597383, "body": "But how about cargo? Should I just add dependencies for different platforms there without any annotation?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1534161560, "post_id": 51821632, "comment_id": 90597495, "body": "Is it possible to put this annotation directly in the <code>Cargo.toml</code>?"}, {"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 0, "creation_date": 1534164684, "post_id": 51821632, "comment_id": 90599570, "body": "I&#39;ve updated my answer - I think without the target being specified in <code>Cargo.toml</code>, Cargo would still try to compile <code>nix</code> on other platforms!"}, {"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 1, "creation_date": 1534164882, "post_id": 51821632, "comment_id": 90599716, "body": "If you want a good example of this in practice - <a href=\"https://github.com/rust-random/rand\" rel=\"nofollow noreferrer\"><code>rand</code></a> has a dependency on <code>winapi</code> that only applies when built on Windows."}], "tags": [], "owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "is_accepted": true, "score": 8, "last_activity_date": 1534250889, "last_edit_date": 1534250889, "creation_date": 1534160832, "answer_id": 51821632, "question_id": 51821451, "link": "https://stackoverflow.com/questions/51821451/how-to-use-a-crate-only-for-a-given-platform/51821632#51821632", "title": "How to use a crate only for a given platform?", "body": "<p>There's two steps you need to make a dependency completely target-specific.</p>\n\n<p>First, you need to specify this in your <code>Cargo.toml</code>, like so:</p>\n\n<pre><code>[target.'cfg(target_os = \"linux\")'.dependencies]\nnix = \"0.5\"\n</code></pre>\n\n<p>This will make Cargo only include the dependency when that configuration is active. However, this means you'll get a compile error on your <code>extern crate</code> when you try to build on other platforms! To remedy this, annotate it with a <code>cfg</code> attribute, like so:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[cfg(target_os = \"linux\")]\nextern crate nix;\n</code></pre>\n\n<p>Of course, you then have to ensure that you only use the <code>nix</code> crate in code that's <em>also</em> annotated with the same <code>cfg</code> attribute.</p>\n"}], "owner": {"reputation": 5321, "user_id": 157726, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/PY0sR.png?s=128&g=1", "display_name": "Juan Leni", "link": "https://stackoverflow.com/users/157726/juan-leni"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 838, "favorite_count": 0, "accepted_answer_id": 51821632, "answer_count": 1, "score": 5, "last_activity_date": 1534250889, "creation_date": 1534160178, "last_edit_date": 1534160325, "question_id": 51821451, "link": "https://stackoverflow.com/questions/51821451/how-to-use-a-crate-only-for-a-given-platform", "title": "How to use a crate only for a given platform?", "body": "<p>I would like to use the <code>nix</code> crate in a project. </p>\n\n<p>However, this project also has an acceptable alternative implementation for OSX and Windows, where I would like to use a different crate.</p>\n\n<p>What is the current way of expressing that I only want <code>nix</code> in Linux platforms?</p>\n"}, {"tags": ["rust", "borrow-checker", "hyper"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 4, "last_activity_date": 1565625136, "last_edit_date": 1565625136, "creation_date": 1534168821, "answer_id": 51824182, "question_id": 51819892, "link": "https://stackoverflow.com/questions/51819892/cannot-move-out-of-borrowed-content-trying-to-deserialize-hyperrequest-body/51824182#51824182", "title": "Cannot move out of borrowed content trying to deserialize hyper::Request.body()", "body": "<p>I highly recommend reading (at the very least skimming) the documentation for types you use, especially when you are having trouble using them.</p>\n\n<p>For example, <a href=\"https://docs.rs/hyper/0.12.8/hyper/struct.Request.html#method.body\" rel=\"nofollow noreferrer\"><code>Request::body</code></a> is defined as:</p>\n\n<pre><code>pub fn body(&amp;self) -&gt; &amp;T\n</code></pre>\n\n<p>The very next two methods are</p>\n\n<ul>\n<li><p><a href=\"https://docs.rs/hyper/0.12.8/hyper/struct.Request.html#method.body_mut\" rel=\"nofollow noreferrer\"><code>Request::body_mut</code></a>:</p>\n\n<pre><code>pub fn body_mut(&amp;mut self) -&gt; &amp;mut T    \n</code></pre></li>\n<li><p><a href=\"https://docs.rs/hyper/0.12.8/hyper/struct.Request.html#method.into_body\" rel=\"nofollow noreferrer\"><code>Request::into_body</code></a>:</p>\n\n<pre><code>pub fn into_body(self) -&gt; T\n</code></pre></li>\n</ul>\n\n<p>You want to use <code>into_body</code>.</p>\n\n<p>I also use <kbd>Control</kbd>-<kbd>F</kbd> in my web browser to search for <code>-&gt; T</code> once I know that the non-working method returns <code>-&gt; &amp;T</code>.</p>\n"}], "owner": {"reputation": 1283, "user_id": 3243551, "user_type": "registered", "accept_rate": 30, "profile_image": "https://www.gravatar.com/avatar/a90f96da0022ca280a341573978007e1?s=128&d=identicon&r=PG&f=1", "display_name": "AunAun", "link": "https://stackoverflow.com/users/3243551/aunaun"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 498, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1565625136, "creation_date": 1534154932, "last_edit_date": 1534168576, "question_id": 51819892, "link": "https://stackoverflow.com/questions/51819892/cannot-move-out-of-borrowed-content-trying-to-deserialize-hyperrequest-body", "title": "Cannot move out of borrowed content trying to deserialize hyper::Request.body()", "body": "<p>I'm trying to parse a request body to a strongly typed object using serde_json: </p>\n\n<pre><code>#[macro_use]\nextern crate serde_derive; // 1.0.70\nextern crate futures; // 0.1.23\nextern crate hyper;   // 0.12.7\nextern crate serde_json; // 1.0.24\n\nuse futures::{Future, Stream};\nuse hyper::{Body, Request};\n\nstruct AppError;\n\n#[derive(Serialize, Deserialize)]\nstruct BasicLoginRequest {\n    email: String,\n    password: String,\n}\n\nimpl BasicLoginRequest {\n    fn from(req: Request&lt;Body&gt;) -&gt; Result&lt;BasicLoginRequest, AppError&gt; {\n        let body = req\n            .body()\n            .fold(Vec::new(), |mut v, chunk| {\n                v.extend(&amp;chunk[..]);\n                futures::future::ok::&lt;_, hyper::Error&gt;(v)\n            }).and_then(move |chunks| {\n                let p: BasicLoginRequest = serde_json::from_slice(&amp;chunks).unwrap();\n                futures::future::ok(p)\n            }).wait();\n\n        Ok(body.unwrap())\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>The error I get is: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n  --&gt; src/main.rs:20:20\n   |\n20 |           let body = req\n   |  ____________________^\n21 | |             .body()\n   | |___________________^ cannot move out of borrowed content\n</code></pre>\n\n<p>From <a href=\"https://stackoverflow.com/questions/32338659/cannot-move-out-of-borrowed-content-when-unwrapping\">Cannot move out of borrowed content when unwrapping</a> I know that this error happens when unwrapping because a value is needed but a reference was supplied.\nThe error points at <code>req.body()</code>; it seems like <code>req.body()</code> returns a reference, rather than a value...</p>\n\n<p>The code that tries to handle the body is based on an excerpt copy-pasted from  <a href=\"https://stackoverflow.com/questions/46029822/extracting-body-from-hyper-request-as-a-string\">Extracting body from Hyper request as a string</a></p>\n\n<p>How do I make this work?</p>\n"}, {"tags": ["unicode", "rust"], "answers": [{"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 6, "creation_date": 1534150548, "post_id": 51818505, "comment_id": 90590962, "body": "If you want to answer your own question, you can tick the <code>Answer your own question</code> checkbox at the bottom of the ask question page, so that you can write your question and your answer at once."}], "tags": [], "owner": {"reputation": 939, "user_id": 2870802, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-lHzULJklIJg/AAAAAAAAAAI/AAAAAAAABwk/_pJZF95FiAY/photo.jpg?sz=128", "display_name": "ozkriff", "link": "https://stackoverflow.com/users/2870802/ozkriff"}, "is_accepted": true, "score": 8, "last_activity_date": 1534166912, "last_edit_date": 1534166912, "creation_date": 1534150275, "answer_id": 51818505, "question_id": 51818497, "link": "https://stackoverflow.com/questions/51818497/how-do-i-count-unique-grapheme-clusters-in-a-string-in-rust/51818505#51818505", "title": "How do I count unique grapheme clusters in a string in Rust?", "body": "<p>We can use the <code>graphemes</code> method from <a href=\"https://crates.io/crates/unicode-segmentation\" rel=\"noreferrer\">unicode-segmentation crate</a> to iterate over the grapheme clusters and save them in a <code>HashSet&lt;&amp;str&gt;</code> to filter out the duplicates. Then we get the <code>.len()</code> of the container.</p>\n\n<pre><code>extern crate unicode_segmentation; // 1.2.1\n\nuse std::collections::HashSet;\n\nuse unicode_segmentation::UnicodeSegmentation;\n\nfn count_unique_grapheme_clusters(s: &amp;str) -&gt; usize {\n    let is_extended = true;\n    s.graphemes(is_extended).collect::&lt;HashSet&lt;_&gt;&gt;().len()\n}\n\nfn main() {\n    assert_eq!(count_unique_grapheme_clusters(\"\"), 0);\n    assert_eq!(count_unique_grapheme_clusters(\"a\"), 1);\n    assert_eq!(count_unique_grapheme_clusters(\"\ud83c\uddfa\ud83c\uddf8\"), 1);\n    assert_eq!(count_unique_grapheme_clusters(\"\ud83c\uddf7\ud83c\uddfae\u0301\"), 2);\n    assert_eq!(count_unique_grapheme_clusters(\"\ud83c\udde7\ud83c\uddf7\ud83c\uddf7\ud83c\uddfa\ud83c\udde7\ud83c\uddf7\ud83c\uddfa\ud83c\uddf8\ud83c\udde7\ud83c\uddf7\"), 3);\n}\n</code></pre>\n\n<p><a href=\"http://play.rust-lang.org/?gist=5255adc9b5f3681c484e4f86189d9eee&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"noreferrer\">Playground</a></p>\n"}], "owner": {"reputation": 939, "user_id": 2870802, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-lHzULJklIJg/AAAAAAAAAAI/AAAAAAAABwk/_pJZF95FiAY/photo.jpg?sz=128", "display_name": "ozkriff", "link": "https://stackoverflow.com/users/2870802/ozkriff"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 679, "favorite_count": 0, "accepted_answer_id": 51818505, "answer_count": 1, "score": 6, "last_activity_date": 1534166936, "creation_date": 1534150257, "last_edit_date": 1534166936, "question_id": 51818497, "link": "https://stackoverflow.com/questions/51818497/how-do-i-count-unique-grapheme-clusters-in-a-string-in-rust", "title": "How do I count unique grapheme clusters in a string in Rust?", "body": "<p>For example, for</p>\n\n<pre><code>let n = count_unique_grapheme_clusters(\"\ud83c\udde7\ud83c\uddf7 \ud83c\uddf7\ud83c\uddfa \ud83c\udde7\ud83c\uddf7 \ud83c\uddfa\ud83c\uddf8 \ud83c\udde7\ud83c\uddf7\");\nprintln!(\"{}\", n);\n</code></pre>\n\n<p>the expected output is (space and three flags: <code>\" \"</code>, <code>\"\ud83c\udde7\ud83c\uddf7\"</code>, <code>\"\ud83c\uddf7\ud83c\uddfa\"</code>, <code>\"\ud83c\uddfa\ud83c\uddf8\"</code>):</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>4\n</code></pre>\n"}, {"tags": ["intellij-idea", "rust", "clion"], "owner": {"reputation": 567, "user_id": 1111660, "user_type": "registered", "profile_image": "https://graph.facebook.com/824556066/picture?type=large", "display_name": "Dante", "link": "https://stackoverflow.com/users/1111660/dante"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 200, "favorite_count": 0, "answer_count": 0, "score": 3, "last_activity_date": 1534121422, "creation_date": 1534121422, "question_id": 51814007, "link": "https://stackoverflow.com/questions/51814007/clion-macros-for-working-directory-in-external-tools-do-not-resolve", "title": "CLion: Macros for &quot;Working Directory&quot; in External Tools do not resolve", "body": "<p>Trying to setup an external tool in CLion (run <code>cargo fmt</code> before a build).</p>\n\n<p>In \"Working Directory\" I tried to set:\n- <code>$FileDir$</code>\n- <code>$ContentRoot$</code>\n- <code>$ProjectFileDir$</code></p>\n\n<p>and testing with a <code>pwd</code> command. Every time I can see that the working director is set to <code>/Applications/CLion.app/Contents/bin</code></p>\n\n<p>No issue if I set \"Working directory\" as the absolute path to my project folder</p>\n\n<p>Is that a CLion bug or am I missing something?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1534104688, "post_id": 51812394, "comment_id": 90579831, "body": "You cannot &quot;implement&quot; <code>Sized</code>. Either something is or is not <code>Sized</code>, the compiler decides. A raw trait object will never be sized."}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1534105115, "post_id": 51812394, "comment_id": 90579928, "body": "While the struct, which implements the trait, can be <code>Sized</code>, the Trait itself cannot."}, {"owner": {"reputation": 1234, "user_id": 2232000, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/feca4a8ce6ae5868a181cf0aca7f00c9?s=128&d=identicon&r=PG&f=1", "display_name": "left4bread", "link": "https://stackoverflow.com/users/2232000/left4bread"}, "edited": false, "score": 0, "creation_date": 1534105459, "post_id": 51812394, "comment_id": 90580008, "body": "Thanks for the clarification. Yes, I can&#39;t really &quot;implement&quot; size and should have written &quot;How can I ensure <code>Sized</code> is implemented for ...&quot;. Still, how can I make it compile?"}], "answers": [{"comments": [{"owner": {"reputation": 1234, "user_id": 2232000, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/feca4a8ce6ae5868a181cf0aca7f00c9?s=128&d=identicon&r=PG&f=1", "display_name": "left4bread", "link": "https://stackoverflow.com/users/2232000/left4bread"}, "edited": false, "score": 0, "creation_date": 1534146740, "post_id": 51814109, "comment_id": 90589118, "body": "Thanks a lot! One last thing, you said &quot;that actually needs to be Sized (<i>if you read carefully</i>) is OperatorType&quot;. Could you outline &quot;how to read carefully&quot; in this example, as it is totally not clear to me?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 1234, "user_id": 2232000, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/feca4a8ce6ae5868a181cf0aca7f00c9?s=128&d=identicon&r=PG&f=1", "display_name": "left4bread", "link": "https://stackoverflow.com/users/2232000/left4bread"}, "edited": false, "score": 1, "creation_date": 1534160745, "post_id": 51814109, "comment_id": 90597005, "body": "@left4bread That wasn&#39;t meant to be patronizing. I just meant you have to ignore where the carets are pointing and focus on the error message itself to figure out what the problem is. I can&#39;t find an issue for fixing this error message in the <a href=\"https://github.com/rust-lang/rust/issues\" rel=\"nofollow noreferrer\">Rust repo</a>, but you could file a new one."}, {"owner": {"reputation": 1234, "user_id": 2232000, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/feca4a8ce6ae5868a181cf0aca7f00c9?s=128&d=identicon&r=PG&f=1", "display_name": "left4bread", "link": "https://stackoverflow.com/users/2232000/left4bread"}, "edited": false, "score": 0, "creation_date": 1534164474, "post_id": 51814109, "comment_id": 90599403, "body": "No offense taken :) I just assumed there is a &quot;standard recipe&quot; for reading these kind of error messages that I missed. Again, thank you so much for your detailed explanation!"}], "tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 8, "last_activity_date": 1615154721, "last_edit_date": 1615154721, "creation_date": 1534123087, "answer_id": 51814109, "question_id": 51812394, "link": "https://stackoverflow.com/questions/51812394/how-to-avoid-needing-stdmarkersized-when-an-associated-type-does-not-have/51814109#51814109", "title": "How to avoid needing `std::marker::Sized` when an associated type does not have a size?", "body": "<p>The error message is confusing. The <code>^^^</code>s are (misleadingly) pointing at <code>Generalization</code>, but the actual error says <code>dyn KernelDense</code>, which is <code>OperatorType</code>. Since at least Rust 1.50, you get a much better error message:</p>\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the size for values of type `(dyn KernelDense + 'static)` cannot be known at compilation time\n  --&gt; src/main.rs:42:9\n   |\n24 |         type OperatorType: KernelCompute&lt;Self::V&gt;;\n   |         ------------------------------------------ required by this bound in `Generalization::OperatorType`\n...\n42 |         type OperatorType = KernelDense;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n   |\n   = help: the trait `Sized` is not implemented for `(dyn KernelDense + 'static)`\n</code></pre>\n<p>Therefore, <code>OperatorType</code> is what really needs to be <code>Sized</code>. Associated types, <a href=\"https://stackoverflow.com/questions/28044231/what-does-sized-is-not-implemented-mean\">like generic type parameters</a>, have an implicit <code>Sized</code> bound unless you specify otherwise by adding <code>?Sized</code> instead:</p>\n<pre><code>pub trait Generalization {\n    ...\n    type OperatorType: ?Sized + KernelCompute&lt;Self::V&gt;;\n    ...\n}\n</code></pre>\n<p>But you'll immediately run into another problem (<a href=\"http://play.integer32.com/?gist=900d57314fa3d4020883fc289a8a3d99&amp;version=nightly&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a>):</p>\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:59:47\n   |\n59 |         self.computer.set_kernel(Box::new(XKernel));\n   |                                           ^^^^^^^ expected associated type, found struct `XKernel`\n   |\n   = note: expected type `&lt;T as Generalization&gt;::OperatorType`\n              found type `XKernel`\n</code></pre>\n<p>Which, if you read between the lines a little, is basically the compiler saying &quot;What do I do with a <code>Box&lt;XKernel&gt;</code>? I need a <code>Box&lt;T::OperatorType&gt;</code> and I don't even know what <code>T</code> is yet!&quot;</p>\n<p>And that should make sense. Because there's no rule that forbids adding a new kind of variant where <code>OperatorType</code> is, let's say, <code>str</code>:</p>\n<pre><code>struct StringyVariant;\n\nimpl Generalization for StringyVariant {\n    type V = f32;\n    type OperatorType = str;\n    \n    fn set_kernel(&amp;self, x: Box&lt;str&gt;) {}\n    \n    fn compute(&amp;self, v: &amp;[f32]) {}\n}\n\nimpl KernelCompute&lt;f32&gt; for str {\n    fn just_compute_it(&amp;self, vectors: &amp;[f32]) {}\n}\n</code></pre>\n<p>No rules forbid these <code>impl</code>s, and yet it's impossible to coerce <code>Box&lt;XKernel&gt;</code> into <code>Box&lt;str&gt;</code>, so the blanket <code>impl</code> on <code>BlackBox</code> must be erroneous. It's missing a requirement: the requirement that <code>Box&lt;XKernel&gt;</code> can be coerced into <code>Box&lt;T::OperatorType&gt;</code>.</p>\n<p>In stable Rust (as of 1.50) there is no way to write this requirement as a trait bound, so you must write two <code>impl</code>s (i.e., one for <code>BlackBox&lt;DenseVariant&gt;</code> and one for <code>BlackBox&lt;SparseVariant&gt;</code>), or perhaps find some other way around (like using <code>From</code> instead of coercion).</p>\n<p>However, in nightly Rust, you can solve the original problem with a <code>CoerceUnsized</code> bound and an extra <code>as _</code> to hint to the compiler that it should coerce to something that makes sense:</p>\n<pre><code>// at top of file\n#![feature(coerce_unsized)]\n\nuse std::ops::CoerceUnsized;\n\nimpl&lt;'a, T&gt; BlackBox&lt;'a, T&gt;\nwhere\n    T: Generalization,\n    Box&lt;XKernel&gt;: CoerceUnsized&lt;Box&lt;T::OperatorType&gt;&gt;,\n{\n    fn runtime_pick_operator_and_compute(&amp;mut self) {\n        self.computer.set_kernel(Box::new(XKernel) as _);\n        let s = self.elements.as_ref();\n        self.computer.compute(s);\n    }\n}\n</code></pre>\n<p><a href=\"http://play.integer32.com/?gist=0111410ddd5763ae8e7f56f6dbb9a8fa&amp;version=nightly&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Here it is in the playground.</a></p>\n"}], "owner": {"reputation": 1234, "user_id": 2232000, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/feca4a8ce6ae5868a181cf0aca7f00c9?s=128&d=identicon&r=PG&f=1", "display_name": "left4bread", "link": "https://stackoverflow.com/users/2232000/left4bread"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1626, "favorite_count": 0, "accepted_answer_id": 51814109, "answer_count": 1, "score": 6, "last_activity_date": 1615154721, "creation_date": 1534104201, "last_edit_date": 1534161642, "question_id": 51812394, "link": "https://stackoverflow.com/questions/51812394/how-to-avoid-needing-stdmarkersized-when-an-associated-type-does-not-have", "title": "How to avoid needing `std::marker::Sized` when an associated type does not have a size?", "body": "<p><strong>Background</strong></p>\n\n<p>I have a situation where I want to abstract over two different operation modes <code>Sparse</code> and <code>Dense</code>. Which one I pick is a compile time decision. </p>\n\n<p>Orthogonal to these modes I have a number of <code>Kernels</code>. The implementation details and signatures of kernels differs between the two modes, but each mode has the same kernels. The kernel will be determined during runtime, based on a model file.</p>\n\n<p>I now want to create a <code>BlackBox</code> that handles both modes and kernels. </p>\n\n<p><strong>Simplified Code</strong></p>\n\n<p>I removed additional kernels and the sparse mode.</p>\n\n<pre><code>pub struct XKernel;\n\npub trait KernelDense {\n    fn compute_dense(&amp;self, vectors: &amp;[f32]);\n}\n\nimpl KernelDense for XKernel {\n    fn compute_dense(&amp;self, vectors: &amp;[f32]) {}\n}\n\npub trait KernelCompute&lt;V&gt; {\n    fn just_compute_it(&amp;self, vectors: &amp;[V]);\n}\n\nimpl KernelCompute&lt;f32&gt; for (dyn KernelDense + 'static) {\n    fn just_compute_it(&amp;self, v: &amp;[f32]) {\n        self.compute_dense(v);\n    }\n}\n\npub trait Generalization {\n    type V: 'static;\n\n    type OperatorType: KernelCompute&lt;Self::V&gt;;\n\n    fn set_kernel(&amp;self, x: Box&lt;Self::OperatorType&gt;);\n\n    fn compute(&amp;self, v: &amp;[Self::V]);\n}\n\npub struct DenseVariant {\n    x: Box&lt;KernelDense&gt;,\n}\n\nimpl Generalization for DenseVariant {\n    type V = f32;\n    type OperatorType = KernelDense;\n\n    fn set_kernel(&amp;self, x: Box&lt;KernelDense&gt;) {}\n\n    fn compute(&amp;self, v: &amp;[Self::V]) {\n        self.x.compute_dense(v);\n    }\n}\n\nstruct BlackBox&lt;'a, T&gt;\nwhere\n    T: Generalization,\n{\n    computer: T,\n    elements: &amp;'a [T::V],\n}\n\nimpl&lt;'a, T&gt; BlackBox&lt;'a, T&gt;\nwhere\n    T: Generalization,\n{\n    fn runtime_pick_operator_and_compute(&amp;mut self) {\n        self.computer.set_kernel(Box::new(XKernel));\n        let s = self.elements.as_ref();\n        self.computer.compute(s);\n    }\n}\n\nfn main() {\n    // What I eventually want to do:\n    // let black_box = BlackBox::&lt;DenseVariant&gt;::new();\n    // black_box.runtime_pick_operator_and_compute();\n}\n</code></pre>\n\n<p><a href=\"http://play.integer32.com/?gist=540507f664abd263b2c4dbb7ce24e64c&amp;version=nightly&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\"><strong>Playground</strong></a></p>\n\n<p>The code above produces the error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the size for values of type `(dyn KernelDense + 'static)` cannot be known at compilation time\n  --&gt; src/main.rs:35:6\n   |\n35 | impl Generalization for DenseVariant {\n   |      ^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n   |\n   = help: the trait `std::marker::Sized` is not implemented for `(dyn KernelDense + 'static)`\n   = note: to learn more, visit &lt;https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types-and-sized&gt;\n</code></pre>\n\n<p>I tried adding copious amounts of <code>: Sized</code> (e.g., giving <code>BlackBox</code> a <code>where T: Generalization + Sized</code>, which eventually just produced different errors. </p>\n\n<p><strong>Questions</strong></p>\n\n<ol>\n<li>How can I implement <code>std::marker::Sized</code> for <code>(dyn KernelDense + 'static)</code> / make this program compile addressing the intention above?</li>\n<li>Why does the compiler even care about <code>Generalization</code> being <code>Sized</code> (even when I add <code>T: Generalization + Sized</code> to <code>BlackBox</code>)? Isn't <code>BlackBox</code> (the only one using <code>Generalization</code>) being monomorphized into something that is <code>Generalization</code> (such as <code>DenseVariant</code>) which then clearly has a size of <code>Box</code>)?</li>\n</ol>\n"}, {"tags": ["reflection", "rust", "polymorphism", "output", "traits"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1534102199, "post_id": 51812126, "comment_id": 90579238, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/30274091/155423\">Is it possible to check if an object implements a trait at runtime?</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/51812126/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1534102347, "post_id": 51812126, "comment_id": 90579276, "body": "You may also be interested in <a href=\"https://stackoverflow.com/q/42426239/155423\">Rust generic trait implementations for trait</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1534102610, "post_id": 51812126, "comment_id": 90579324, "body": "As well as <a href=\"https://stackoverflow.com/q/51141200/155423\">How can I implement a function differently depending on if a generic type implements a trait or not?</a>."}, {"owner": {"reputation": 886, "user_id": 8170773, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/61b971ec934427a008d8b263ad4142b9?s=128&d=identicon&r=PG&f=1", "display_name": "hedgar2017", "link": "https://stackoverflow.com/users/8170773/hedgar2017"}, "edited": false, "score": 0, "creation_date": 1534103331, "post_id": 51812126, "comment_id": 90579488, "body": "Runtime checking is not needed. Compile-time only."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1534103362, "post_id": 51812126, "comment_id": 90579496, "body": "How does it differ from the other questions?"}, {"owner": {"reputation": 886, "user_id": 8170773, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/61b971ec934427a008d8b263ad4142b9?s=128&d=identicon&r=PG&f=1", "display_name": "hedgar2017", "link": "https://stackoverflow.com/users/8170773/hedgar2017"}, "edited": false, "score": 1, "creation_date": 1534103628, "post_id": 51812126, "comment_id": 90579564, "body": "I think the other questions are not related. I need only a macro (not a function) that prints a variable with either Display or Debug if Display is not implemented."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 2, "creation_date": 1534104089, "post_id": 51812126, "comment_id": 90579675, "body": "Macros expand to code and at the time they are expanded, type information isn&#39;t available yet. So a macro wouldn&#39;t help. Any ways, if you want to format using either <code>Display</code> or <code>Debug</code>, it probably means you just want <code>Debug</code>."}, {"owner": {"reputation": 886, "user_id": 8170773, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/61b971ec934427a008d8b263ad4142b9?s=128&d=identicon&r=PG&f=1", "display_name": "hedgar2017", "link": "https://stackoverflow.com/users/8170773/hedgar2017"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1534105256, "post_id": 51812126, "comment_id": 90579963, "body": "@Boiethios, duplicate it is. Fits my question."}, {"owner": {"reputation": 886, "user_id": 8170773, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/61b971ec934427a008d8b263ad4142b9?s=128&d=identicon&r=PG&f=1", "display_name": "hedgar2017", "link": "https://stackoverflow.com/users/8170773/hedgar2017"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1534146052, "post_id": 51812126, "comment_id": 90588800, "body": "@mcarton, I have just created separate macros. I needed to implement stuff described above for DHCP options. There are around 150 of them, so I won&#39;t overload each, especially when the majority of them are complex types like <code>Vec&lt;(IpV4Addr, IpV4Addr&gt;</code>."}, {"owner": {"reputation": 335, "user_id": 573109, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5c89933210805ce89e2df1f56ac38e55?s=128&d=identicon&r=PG", "display_name": "LordCecil", "link": "https://stackoverflow.com/users/573109/lordcecil"}, "edited": false, "score": 2, "creation_date": 1558335130, "post_id": 51812126, "comment_id": 99051934, "body": "I&#39;d say this is not a duplicate. Compile time != run time.  I&#39;m trying to figure out how to assert at compile time that a variable implements a trait. Which is similar, but not quite the same question. :("}], "owner": {"reputation": 886, "user_id": 8170773, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/61b971ec934427a008d8b263ad4142b9?s=128&d=identicon&r=PG&f=1", "display_name": "hedgar2017", "link": "https://stackoverflow.com/users/8170773/hedgar2017"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1666, "favorite_count": 0, "closed_date": 1534105286, "answer_count": 0, "score": 0, "last_activity_date": 1534103464, "creation_date": 1534101847, "last_edit_date": 1534103464, "question_id": 51812126, "link": "https://stackoverflow.com/questions/51812126/how-do-i-check-if-a-trait-is-implemented-at-compile-time-in-rust", "closed_reason": "Duplicate", "title": "How do I check if a trait is implemented at compile time in Rust?", "body": "<p>I want to print a variable with the <code>Display</code> trait if it is implemented, or with the <code>Debug</code> trait otherwise. All the types are known at compile time.</p>\n\n<pre><code>let display = MyDisplayType::new(); // implements Display\nlet debug = MyDebugType::new(); // implements Debug\n\noutput!(display); // uses Display a.k.a. println!(\"{}\", display);\noutput!(debug); // uses Debug a.k.a. println!(\"{:?}\", debug);\n</code></pre>\n\n<p>What is the cleanest way?</p>\n"}, {"tags": ["io", "rust"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1534094444, "post_id": 51811064, "comment_id": 90577247, "body": "<code>lseek</code> is not supported on sockets by POSIX. This is likely because there wouldn&#39;t be a real benefit compared to just reading and discarding, and is likely why the <code>Seek</code> trait is not implemented on <code>TcpStream</code>. You are right that reading byte by byte and using <code>?</code> seems expensive. However, <code>read_exact</code> might be more efficient (but has the downside to require a buffer of the right size)."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1534095067, "post_id": 51811064, "comment_id": 90577454, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/42243355/155423\">How to advance through data from the std::io::Read trait when Seek isn&#39;t implemented?</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/51811064/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 45410, "user_id": 109549, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7d9c3b5cc4495ac7a328541287e1de87?s=128&d=identicon&r=PG", "display_name": "zslayton", "link": "https://stackoverflow.com/users/109549/zslayton"}, "edited": false, "score": 0, "creation_date": 1534100662, "post_id": 51811064, "comment_id": 90578880, "body": "Yep, that answers it, thank you!"}], "owner": {"reputation": 45410, "user_id": 109549, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7d9c3b5cc4495ac7a328541287e1de87?s=128&d=identicon&r=PG", "display_name": "zslayton", "link": "https://stackoverflow.com/users/109549/zslayton"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 47, "favorite_count": 0, "closed_date": 1534097861, "answer_count": 0, "score": 2, "last_activity_date": 1534095423, "creation_date": 1534093889, "last_edit_date": 1534095423, "question_id": 51811064, "link": "https://stackoverflow.com/questions/51811064/how-can-i-skip-a-number-of-bytes-from-a-data-source-that-implements-the-read-tra", "closed_reason": "Duplicate", "title": "How can I skip a number of bytes from a data source that implements the Read trait without a buffer?", "body": "<p>I'm writing a streaming binary encoding parser, pulling bytes from a data source that implements the <a href=\"https://doc.rust-lang.org/std/io/trait.Read.html\" rel=\"nofollow noreferrer\"><code>Read</code></a> trait. Values in the stream are prefixed with a short header that indicates what type the next value is and how many bytes it takes to represent it.</p>\n\n<p>I've been using <a href=\"https://doc.rust-lang.org/std/io/trait.Read.html#method.bytes\" rel=\"nofollow noreferrer\"><code>Read::bytes</code></a> to read the header. Then, if I'm interested in the value that the header represents, I can use the <a href=\"https://doc.rust-lang.org/std/io/trait.Read.html#tymethod.read\" rel=\"nofollow noreferrer\"><code>Read::read</code></a> method to copy the required number of bytes from the data source into a buffer. However, if I'm <em>not</em> interested in the value, I'd like to skip over those bytes without having to process them. I can achieve this by doing:</p>\n\n<pre><code>for byte_result in data_source.bytes().take(n) {\n    let _byte = byte_result?;\n}\n</code></pre>\n\n<p>However, checking on the result of each individual byte feels very expensive. Is there a way I can achieve this that only requires that I check the result of an overall <code>skip</code> operation?</p>\n\n<p>The <a href=\"https://doc.rust-lang.org/std/io/trait.Seek.html\" rel=\"nofollow noreferrer\"><code>Seek</code></a> trait is promising, but many forms of input do not implement it (<a href=\"https://doc.rust-lang.org/std/net/struct.TcpStream.html\" rel=\"nofollow noreferrer\"><code>TcpStream</code></a>, for example.)</p>\n"}, {"tags": ["c", "windows", "rust", "static-linking", "ffi"], "comments": [{"owner": {"reputation": 35031, "user_id": 1889329, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/57bec3f0b9c5879cdd9d9fa2e8629318?s=128&d=identicon&r=PG&f=1", "display_name": "IInspectable", "link": "https://stackoverflow.com/users/1889329/iinspectable"}, "edited": false, "score": 0, "creation_date": 1534093200, "post_id": 51810566, "comment_id": 90576909, "body": "While static linking may appear to deliver a better deployment story, it comes at a price: <a href=\"https://docs.microsoft.com/en-us/cpp/c-runtime-library/potential-errors-passing-crt-objects-across-dll-boundaries\" rel=\"nofollow noreferrer\">Potential Errors Passing CRT Objects Across DLL Boundaries</a>. If you are building a library and are not sure, link dynamically."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1534094844, "post_id": 51810566, "comment_id": 90577389, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/40833078/155423\">How do I specify the linker path in Rust?</a> and <a href=\"https://stackoverflow.com/q/30725579/155423\">Linking to a static lib compiled with MSVC</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/51810566/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1534094947, "post_id": 51810566, "comment_id": 90577416, "body": "That being said, I&#39;d recommend submitting a pull request to vips-sys to allow optionally providing a static library instead of using <code>pkg-config</code>."}, {"owner": {"reputation": 35031, "user_id": 1889329, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/57bec3f0b9c5879cdd9d9fa2e8629318?s=128&d=identicon&r=PG&f=1", "display_name": "IInspectable", "link": "https://stackoverflow.com/users/1889329/iinspectable"}, "reply_to_user": {"reputation": 7053, "user_id": 1162141, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/7db6bfbfbb420620e6df76c0e406098d?s=128&d=identicon&r=PG", "display_name": "technosaurus", "link": "https://stackoverflow.com/users/1162141/technosaurus"}, "edited": false, "score": 0, "creation_date": 1534189245, "post_id": 51810566, "comment_id": 90613299, "body": "@technosaurus: The issue is not about relocation. The issue is about passing objects allocated from one heap to another part of the application for cleanup, that uses a different heap. If you ship object code that statically links against the CRT, you cannot in general safely use that library in a DLL."}], "answers": [{"comments": [{"owner": {"reputation": 1, "user_id": 6149957, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7b72ac0ba43c66de2fd6ff95d216b2f8?s=128&d=identicon&r=PG&f=1", "display_name": "Fdrph", "link": "https://stackoverflow.com/users/6149957/fdrph"}, "edited": false, "score": 0, "creation_date": 1534117932, "post_id": 51813625, "comment_id": 90582270, "body": "Would electron app unzip the bins to %appdata%? I think sharp (the libvips node lib) static links everything to the executable no? or does it get it from <code>resources&#47;app.asar.unpacked</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1534118098, "post_id": 51813625, "comment_id": 90582301, "body": "<i>Static linking for complex libraries died a while ago</i> \u2014 this comment is in direct contradiction with Rust defaults (the language the question about) as well as other languages like Go."}, {"owner": {"reputation": 7702, "user_id": 894763, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5d013c9681666f0a68a6c1c00ff4d603?s=128&d=identicon&r=PG", "display_name": "jcupitt", "link": "https://stackoverflow.com/users/894763/jcupitt"}, "edited": false, "score": 0, "creation_date": 1534118680, "post_id": 51813625, "comment_id": 90582387, "body": "sharp is fully dynamic, I believe. It has a C++ layer built with MSVC which loads into the node runtime. This layer then in turn dynamically loads the libvips DLL, which is built in gcc in a cross-compiler from linux."}], "tags": [], "owner": {"reputation": 7702, "user_id": 894763, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5d013c9681666f0a68a6c1c00ff4d603?s=128&d=identicon&r=PG", "display_name": "jcupitt", "link": "https://stackoverflow.com/users/894763/jcupitt"}, "is_accepted": false, "score": 0, "last_activity_date": 1534115869, "creation_date": 1534115869, "answer_id": 51813625, "question_id": 51810566, "link": "https://stackoverflow.com/questions/51810566/statically-linking-libvips-to-a-rust-program-in-windows/51813625#51813625", "title": "Statically linking libvips to a Rust program in Windows", "body": "<p>Just ship the libvips bin area in your tree somewhere, add it to PATH on startup, and link dynamically. This is how electron apps and node.js packages that use libvips work. Static linking for complex libraries died a while ago, it's not worth trying.</p>\n\n<p>As much as anything, it would be a potential licence violation. libvips is LGPL, so you MUST link dynamically (or include enough of your code to allow relinking), or your whole application becomes open source.</p>\n"}], "owner": {"reputation": 1, "user_id": 6149957, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7b72ac0ba43c66de2fd6ff95d216b2f8?s=128&d=identicon&r=PG&f=1", "display_name": "Fdrph", "link": "https://stackoverflow.com/users/6149957/fdrph"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 620, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1534115869, "creation_date": 1534090191, "last_edit_date": 1534104571, "question_id": 51810566, "link": "https://stackoverflow.com/questions/51810566/statically-linking-libvips-to-a-rust-program-in-windows", "title": "Statically linking libvips to a Rust program in Windows", "body": "<p>There is a <a href=\"https://crates.io/crates/vips-sys\" rel=\"nofollow noreferrer\">lib-sys for libvips on crates.io</a>, however it uses pkg-config which searches the system for the library to link to dynamically, not statically.</p>\n\n<p>I want to provide libvips with the final binary of my software in .dll or .exe along with it since the user should only install one executable with everything in it, C and Rust code.</p>\n\n<p>Looking at the Rust book's <a href=\"https://doc.rust-lang.org/book/first-edition/ffi.html#linking\" rel=\"nofollow noreferrer\">FFI linking section</a>, we can link lib.a files easily, but libvips is a huge complex C library that has <a href=\"https://github.com/jcupitt/libvips/releases\" rel=\"nofollow noreferrer\">releases</a> for Windows in .dll and .exe format. I do not know how to link these Windows binaries of libvips to a Rust program statically.</p>\n\n<p>Potentially, I could build it from source manually and link it manually, but the <a href=\"https://github.com/jcupitt/build-win64\" rel=\"nofollow noreferrer\">build process</a> seems very complex and it uses scripts and Docker. I would have to replace those scripts with a build.rs of my own that did the same but that seems very hard to me since I'm a beginner at this. I know I would have to set <code>rustc-link-search</code> in build.rs, but I don't know how to compile the <code>.a</code> files for libvips. <a href=\"https://doc.rust-lang.org/cargo/reference/build-scripts.html#case-study-building-some-native-code\" rel=\"nofollow noreferrer\">Rust book on this</a> </p>\n\n<p>My goal is to FFI into libvips from Rust. I am using Windows 10 and want to <code>cargo build</code> the project and have the Rust code and libvips in one distributable binary with no other dependencies.</p>\n\n<p><strong>edit-1:</strong>\nthe <a href=\"https://github.com/jcupitt/libvips/releases/download/v8.6.5/vips-dev-w64-web-8.6.5.zip\" rel=\"nofollow noreferrer\">vips-dev-w64-web-x.y.z.zip</a> contains <code>libvips.lib</code> , <code>libvips.dll.a</code> files, pkgconfig <code>.pc</code> files, as well as the normal <code>.dll</code> and <code>vips.exe</code>. Can i use these .lib and .a files and if so exactly how? Will it link statically? Are these <code>.pc</code> files useful for my situation?</p>\n"}, {"tags": ["json", "rust", "serde"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 14, "last_activity_date": 1534084224, "last_edit_date": 1534084224, "creation_date": 1534083927, "answer_id": 51809720, "question_id": 51809603, "link": "https://stackoverflow.com/questions/51809603/why-does-serde-jsonfrom-reader-take-ownership-of-the-reader/51809720#51809720", "title": "Why does serde_json::from_reader take ownership of the reader?", "body": "<p>Because it's an <a href=\"https://rust-lang-nursery.github.io/api-guidelines/interoperability.html#generic-readerwriter-functions-take-r-read-and-w-write-by-value-c-rw-value\" rel=\"noreferrer\">API guideline</a>:</p>\n\n<blockquote>\n  <h3>Generic reader/writer functions take <code>R: Read</code> and <code>W: Write</code> by value (C-RW-VALUE)</h3>\n  \n  <p>The standard library contains these two impls:</p>\n\n<pre><code>impl&lt;'a, R: Read + ?Sized&gt; Read for &amp;'a mut R { /* ... */ }\n\nimpl&lt;'a, W: Write + ?Sized&gt; Write for &amp;'a mut W { /* ... */ }\n</code></pre>\n  \n  <p>That means any function that accepts <code>R: Read</code> or <code>W: Write</code> generic\n  parameters by value can be called with a <code>mut</code> reference if necessary.</p>\n</blockquote>\n\n<p>You either call <a href=\"https://doc.rust-lang.org/std/io/trait.Read.html#method.by_ref\" rel=\"noreferrer\"><code>Read::by_ref</code></a> or just take a reference yourself:</p>\n\n<pre><code>serde_json::from_reader(&amp;mut request.body)\n</code></pre>\n\n\n\n<pre><code>serde_json::from_reader(request.body.by_ref())\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/31501921/155423\">Read an arbitrary number of bytes from type implementing Read</a></li>\n<li><a href=\"https://stackoverflow.com/q/33831265/155423\">How to use a file with a BufReader and still be able to write to it?</a></li>\n<li><a href=\"https://stackoverflow.com/q/31374051/155423\">Why does Iterator::take_while take ownership of the iterator?</a></li>\n</ul>\n"}], "owner": {"reputation": 568, "user_id": 10180849, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j7g5f.jpg?s=128&g=1", "display_name": "\u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u0428\u0443\u043b\u0438\u0446\u043a\u0438\u0439", "link": "https://stackoverflow.com/users/10180849/%d0%94%d0%bc%d0%b8%d1%82%d1%80%d0%b8%d0%b9-%d0%a8%d1%83%d0%bb%d0%b8%d1%86%d0%ba%d0%b8%d0%b9"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 446, "favorite_count": 0, "accepted_answer_id": 51809720, "answer_count": 1, "score": 12, "last_activity_date": 1534084224, "creation_date": 1534083028, "last_edit_date": 1534083734, "question_id": 51809603, "link": "https://stackoverflow.com/questions/51809603/why-does-serde-jsonfrom-reader-take-ownership-of-the-reader", "title": "Why does serde_json::from_reader take ownership of the reader?", "body": "<p>My code:</p>\n\n<pre><code>fn request_add&lt;T&gt;(request: &amp;mut Request, collection_name: &amp;'static str) -&gt; Fallible&lt;Fallible&lt;String&gt;&gt;\nwhere\n    T: serde::Serialize + serde::de::DeserializeOwned,\n{\n    let add_dao = dao::MongoDao::new(collection_name);\n    let obj = serde_json::from_reader::&lt;Body, T&gt;(request.body)?; //cannot move out of borrowed content\n    Ok(add_dao.add(&amp;obj))\n}\n</code></pre>\n\n<p>I have a <code>cannot move out of borrowed content</code> error, because <code>request</code> is a reference, but why does <code>serde_json::from_reader</code> not use a mut reference? Why does it need ownership? And how can I fix it?</p>\n"}, {"tags": ["rust", "optional", "borrow-checker", "borrowing"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1534080802, "post_id": 51805406, "comment_id": 90573692, "body": "See also <a href=\"https://stackoverflow.com/q/31233938/155423\">Converting from Option&lt;String&gt; to Option&lt;&amp;str&gt;</a>."}], "answers": [{"tags": [], "owner": {"reputation": 1455, "user_id": 706882, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/1b8e621d3734b19dbb87061e1b9157e0?s=128&d=identicon&r=PG", "display_name": "sbditto85", "link": "https://stackoverflow.com/users/706882/sbditto85"}, "is_accepted": false, "score": 4, "last_activity_date": 1534078339, "last_edit_date": 1534078339, "creation_date": 1534043910, "answer_id": 51805407, "question_id": 51805406, "link": "https://stackoverflow.com/questions/51805406/how-can-i-borrow-the-item-in-an-option-or-create-a-new-item-when-its-none/51805407#51805407", "title": "How can I borrow the item in an Option or create a new item when it&#39;s None?", "body": "<p>The only way I've found is to create a \"dummy variable\" to hold the created item and give it a lifetime:</p>\n\n<pre><code>fn main() {\n    let my_opt: Option&lt;String&gt; = None;\n\n    let value_holder;\n    let ref_to_thing = match my_opt {\n        Some(ref t) =&gt; t,\n        None =&gt; {\n            value_holder = \"new thing created\".to_owned();\n            &amp;value_holder\n        }\n    };\n\n    println!(\"{:?}\", ref_to_thing);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=6fd697c4f6321be961a963b518daa794&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a></p>\n"}, {"comments": [{"owner": {"reputation": 1455, "user_id": 706882, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/1b8e621d3734b19dbb87061e1b9157e0?s=128&d=identicon&r=PG", "display_name": "sbditto85", "link": "https://stackoverflow.com/users/706882/sbditto85"}, "edited": false, "score": 0, "creation_date": 1536208245, "post_id": 51805610, "comment_id": 91342265, "body": "Well my attempt to simplify my problem to an example failed. I wasn&#39;t using &amp;str or String. In my original problem it was a &amp;DatabaseConnection which wasn&#39;t easily solved that way as well as having the option be part of &amp;mut of a struct which made things interesting. But yes for my example you are correct."}, {"owner": {"reputation": 1455, "user_id": 706882, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/1b8e621d3734b19dbb87061e1b9157e0?s=128&d=identicon&r=PG", "display_name": "sbditto85", "link": "https://stackoverflow.com/users/706882/sbditto85"}, "edited": false, "score": 0, "creation_date": 1536208480, "post_id": 51805610, "comment_id": 91342321, "body": "Going to mark this as the correct answer as in my lame example it is."}, {"owner": {"reputation": 1455, "user_id": 706882, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/1b8e621d3734b19dbb87061e1b9157e0?s=128&d=identicon&r=PG", "display_name": "sbditto85", "link": "https://stackoverflow.com/users/706882/sbditto85"}, "edited": false, "score": 0, "creation_date": 1536208855, "post_id": 51805610, "comment_id": 91342423, "body": "Worth noting that <code>unwrap_or</code> takes ownership of the Option which is not always possible. Like if the Option is owned by a struct and you only have an <code>&amp;mut</code> of the struct. <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.unwrap_or\" rel=\"nofollow noreferrer\">unwrap_or</a>"}], "tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": true, "score": 5, "last_activity_date": 1534080514, "last_edit_date": 1534080514, "creation_date": 1534047023, "answer_id": 51805610, "question_id": 51805406, "link": "https://stackoverflow.com/questions/51805406/how-can-i-borrow-the-item-in-an-option-or-create-a-new-item-when-its-none/51805610#51805610", "title": "How can I borrow the item in an Option or create a new item when it&#39;s None?", "body": "<p>You can also just write:</p>\n\n<pre><code>None =&gt; \"new thing created\"\n</code></pre>\n\n<p>With this adjustment your initial variant of the code will compile without the need of an extra variable binding.</p>\n\n<p>An alternative could also be:</p>\n\n<pre><code>let ref_to_thing = my_opt.unwrap_or(\"new thing created\".to_string());\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 1455, "user_id": 706882, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/1b8e621d3734b19dbb87061e1b9157e0?s=128&d=identicon&r=PG", "display_name": "sbditto85", "link": "https://stackoverflow.com/users/706882/sbditto85"}, "edited": false, "score": 0, "creation_date": 1536208333, "post_id": 51809048, "comment_id": 91342287, "body": "Interesting, learned something new. For my original problem that wouldn&#39;t work, but for the example I suppose it could. Thanks!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 3, "last_activity_date": 1534078569, "creation_date": 1534078569, "answer_id": 51809048, "question_id": 51805406, "link": "https://stackoverflow.com/questions/51805406/how-can-i-borrow-the-item-in-an-option-or-create-a-new-item-when-its-none/51809048#51809048", "title": "How can I borrow the item in an Option or create a new item when it&#39;s None?", "body": "<p>If you don't mind mutating your <code>Option</code> in place, you can use <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.get_or_insert_with\" rel=\"nofollow noreferrer\"><code>Option::method.get_or_insert_with</code></a>:</p>\n\n<pre><code>fn main() {\n    let mut my_opt: Option&lt;String&gt; = None;\n\n    let ref_to_thing = my_opt.get_or_insert_with(|| \"new thing created\".to_owned());\n\n    println!(\"{:?}\", ref_to_thing);\n}\n</code></pre>\n"}], "owner": {"reputation": 1455, "user_id": 706882, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/1b8e621d3734b19dbb87061e1b9157e0?s=128&d=identicon&r=PG", "display_name": "sbditto85", "link": "https://stackoverflow.com/users/706882/sbditto85"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 149, "favorite_count": 0, "accepted_answer_id": 51805610, "answer_count": 3, "score": 1, "last_activity_date": 1534080514, "creation_date": 1534043910, "last_edit_date": 1534078256, "question_id": 51805406, "link": "https://stackoverflow.com/questions/51805406/how-can-i-borrow-the-item-in-an-option-or-create-a-new-item-when-its-none", "title": "How can I borrow the item in an Option or create a new item when it&#39;s None?", "body": "<p>When I have an <code>Option</code> and want a reference to what's inside or create something if it's a <code>None</code> I get an error.</p>\n\n<p>Example Code:</p>\n\n<pre><code>fn main() {\n    let my_opt: Option&lt;String&gt; = None;\n\n    let ref_to_thing = match my_opt {\n        Some(ref t) =&gt; t,\n        None =&gt; &amp;\"new thing created\".to_owned(),\n    };\n\n    println!(\"{:?}\", ref_to_thing);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=b9ab48c1dd204dd005d61f5ee6527ede&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>Error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: borrowed value does not live long enough\n  --&gt; src/main.rs:6:18\n   |\n6  |         None =&gt; &amp;\"new thing created\".to_owned(),\n   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n   |                  |                            |\n   |                  |                            temporary value dropped here while still borrowed\n   |                  temporary value does not live long enough\n...\n10 | }\n   | - temporary value needs to live until here\n</code></pre>\n\n<p>Basically the created value doesn't live long enough. What is the best way to get a reference to the value in a <code>Some</code> or create a value if it's a <code>None</code> and use the reference?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1534028141, "post_id": 51804379, "comment_id": 90564636, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/32750829/155423\">How can I pass a reference to a stack variable to a thread?</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/51804379/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 42480, "user_id": 148423, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/6ed1f9b5afd258d0b73ad1eae10ac384?s=128&d=identicon&r=PG", "display_name": "Joe", "link": "https://stackoverflow.com/users/148423/joe"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1534028235, "post_id": 51804379, "comment_id": 90564651, "body": "Thanks, I did read quite a lot of questions first. Not sure if that one was included. The principal difference I thought I had was that the argument is supplied as a reference."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1534028399, "post_id": 51804379, "comment_id": 90564675, "body": "I don&#39;t follow your comment. <i>that the argument is supplied as a reference</i>, but the proposed duplicate says <i>pass a reference [...] to a thread</i>. Can you further explain what difference you see?"}, {"owner": {"reputation": 42480, "user_id": 148423, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/6ed1f9b5afd258d0b73ad1eae10ac384?s=128&d=identicon&r=PG", "display_name": "Joe", "link": "https://stackoverflow.com/users/148423/joe"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1534028426, "post_id": 51804379, "comment_id": 90564678, "body": "Ah, yes. I was hoping to understand how do this using the standard library, not extra crates, as this seems like the simplest possible useful thing I could use the library for."}, {"owner": {"reputation": 42480, "user_id": 148423, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/6ed1f9b5afd258d0b73ad1eae10ac384?s=128&d=identicon&r=PG", "display_name": "Joe", "link": "https://stackoverflow.com/users/148423/joe"}, "edited": false, "score": 0, "creation_date": 1534028517, "post_id": 51804379, "comment_id": 90564693, "body": "Per question 32750829, <code>wrapper</code> is passed into <code>run_thread</code>, not passed as a reference (my second bullet point)."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1534028710, "post_id": 51804379, "comment_id": 90564720, "body": "<i>how do this using the standard library, not extra crates</i>  \u2014 your question has nothing about this restriction. If someone had spent time writing up a great answer that told you to use a crate, they&#39;d be pretty upset if you said &quot;oh, this doesn&#39;t answer it because of something I didn&#39;t tell you beforehand&quot;."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1534028826, "post_id": 51804379, "comment_id": 90564744, "body": "<i><code>wrapper</code> is passed into <code>run_thread</code>, not passed as a reference</i> \u2014 The proposed duplicate&#39;s point is that <code>wrapper</code> is <code>Wrapper&lt;T&gt;</code> where <i>&quot;<code>T</code> is a reference to a big object I don&#39;t want copied&quot;</i>. Something being a reference versus containing a reference does not change the fundamental calculus of this problem."}, {"owner": {"reputation": 42480, "user_id": 148423, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/6ed1f9b5afd258d0b73ad1eae10ac384?s=128&d=identicon&r=PG", "display_name": "Joe", "link": "https://stackoverflow.com/users/148423/joe"}, "edited": false, "score": 0, "creation_date": 1534029053, "post_id": 51804379, "comment_id": 90564788, "body": "If we&#39;re talking about feelings, then any approach to language learning is a question of adjusting scope and error bars in comparison to other languages (if you take all assumptions off the table you have to go back to electrons). Based on past experience, my assumption was that this task seemed to be on the simple end of the spectrum wrt use of a built-in library. It seems that this isn&#39;t the case, and those crates are the way to go. I don&#39;t have a hard objection (or any objection) to using community crates, it was just a surprise."}, {"owner": {"reputation": 42480, "user_id": 148423, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/6ed1f9b5afd258d0b73ad1eae10ac384?s=128&d=identicon&r=PG", "display_name": "Joe", "link": "https://stackoverflow.com/users/148423/joe"}, "edited": false, "score": 1, "creation_date": 1534029371, "post_id": 51804379, "comment_id": 90564843, "body": "That said 32750829 does seem to be a duplicate. Thank you for your time."}], "owner": {"reputation": 42480, "user_id": 148423, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/6ed1f9b5afd258d0b73ad1eae10ac384?s=128&d=identicon&r=PG", "display_name": "Joe", "link": "https://stackoverflow.com/users/148423/joe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 888, "favorite_count": 1, "closed_date": 1534029384, "answer_count": 0, "score": 4, "last_activity_date": 1534028293, "creation_date": 1534027961, "last_edit_date": 1534028293, "question_id": 51804379, "link": "https://stackoverflow.com/questions/51804379/sharing-read-only-object-between-threads-in-rust", "closed_reason": "Duplicate", "title": "Sharing read-only object between threads in Rust?", "body": "<p>I'm trying to get started with Rust threads. In my example (contrived but based on a real problem), I want to accept a read-only <code>HashMap</code> as an argument to a function and then supply it to a number of threads which each act read from partitions of it.</p>\n\n<pre><code>use std::{\n    collections::HashMap,\n    sync::{mpsc::channel, Arc},\n    thread,\n};\n\nconst THREADS: u32 = 10;\n\n// Concurrently add the lengths of values.\npub fn concurrent_lens(inputs: &amp;HashMap&lt;u32, String&gt;) -&gt; usize {\n    let inputs_arc = Arc::new(inputs);\n\n    let (tx, rx) = channel();\n\n    // Count length of all strings in parallel.\n    // Each thread takes a partition of the data.\n    for thread_i in 0..THREADS {\n        let tx = tx.clone();\n        let inputs_clone = inputs_arc.clone();\n\n        thread::spawn(move || {\n            for (i, content) in inputs_clone.iter() {\n                // Only look at my partition's keys.\n                if (i % THREADS) == thread_i {\n                    // Something expensive with the string.\n                    let expensive_operation_result = content.len();\n\n                    tx.send(expensive_operation_result).unwrap();\n                }\n            }\n        });\n    }\n\n    // Join and sum results.\n    let mut result = 0;\n    for len in rx.iter() {\n        result += len;\n    }\n\n    result\n}\n</code></pre>\n\n<p>However, the compiler says:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0621]: explicit lifetime required in the type of `inputs`\n  --&gt; src/main.rs:21:9\n   |\n10 | pub fn concurrent_lens(inputs: &amp;HashMap&lt;u32, String&gt;) -&gt; usize {\n   |                        ------ consider changing the type of `inputs` to `&amp;'static std::collections::HashMap&lt;u32, std::string::String&gt;`\n...\n21 |         thread::spawn(move || {\n   |         ^^^^^^^^^^^^^ lifetime `'static` required\n</code></pre>\n\n<p>My options are, as I understand:</p>\n\n<ul>\n<li>Make <code>inputs</code> static. This isn't possible, as it's not static data.</li>\n<li>Let the function take ownership of <code>input</code> (not take a ref). So my function would be <code>pub fn concurrent_lens(inputs: HashMap&lt;u32, String&gt;) -&gt; usize</code>. This makes the compiler happy about its lifetime, but the data lives outside the function, and has a longer lifetime outside.</li>\n<li>Ditto, but pass in a copy. Not ideal, it's a lot of data.</li>\n<li>Let the function take an Arc as an argument, i.e. <code>pub fn concurrent_lens(inputs: Arc&lt;HashMap&lt;u32, String&gt;&gt;) -&gt; usize</code>. This works fine, but seems like a really leaky abstraction, as the calling code shouldn't have to know that it's calling a function that uses concurrency.</li>\n</ul>\n\n<p>None of these seems quite right. Am I missing something?</p>\n"}, {"tags": ["debugging", "logging", "reflection", "macros", "rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 9, "last_activity_date": 1607105986, "last_edit_date": 1607105986, "creation_date": 1534018977, "answer_id": 51803471, "question_id": 51803396, "link": "https://stackoverflow.com/questions/51803396/how-do-i-print-both-an-expression-and-its-value-in-rust/51803471#51803471", "title": "How do I print both an expression and its value in Rust?", "body": "<h1>Premade solution</h1>\n<p>Use <a href=\"https://doc.rust-lang.org/std/macro.dbg.html\" rel=\"nofollow noreferrer\"><code>dbg!</code></a>:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>dbg!(self.mega_ultra_field);\n</code></pre>\n<pre class=\"lang-none prettyprint-override\"><code>[src/main.rs:16] self.mega_ultra_field = 100500\n</code></pre>\n<h1>Writing your own</h1>\n<p>Use <a href=\"https://doc.rust-lang.org/std/macro.stringify.html\" rel=\"nofollow noreferrer\"><code>stringify!</code></a>:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>macro_rules! print_expr_and_value {\n    ($e:expr) =&gt; {\n        eprintln!(&quot;{} {}&quot;, stringify!($e), $e)\n    };\n}\n</code></pre>\n<pre class=\"lang-rust prettyprint-override\"><code>struct Foo {\n    mega_ultra_field: i32,\n}\n\nimpl Foo {\n    fn bar(&amp;mut self) {\n        self.mega_ultra_field = 100500;\n        print_expr_and_value!(self.mega_ultra_field);\n\n        dbg!(self.mega_ultra_field);\n    }\n}\n\nfn main() {\n    Foo {\n        mega_ultra_field: 0,\n    }\n    .bar();\n}\n</code></pre>\n<pre class=\"lang-none prettyprint-override\"><code>self.mega_ultra_field 100500\n</code></pre>\n"}], "owner": {"reputation": 886, "user_id": 8170773, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/61b971ec934427a008d8b263ad4142b9?s=128&d=identicon&r=PG&f=1", "display_name": "hedgar2017", "link": "https://stackoverflow.com/users/8170773/hedgar2017"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 128, "favorite_count": 0, "accepted_answer_id": 51803471, "answer_count": 1, "score": 7, "last_activity_date": 1607105986, "creation_date": 1534018408, "last_edit_date": 1534018741, "question_id": 51803396, "link": "https://stackoverflow.com/questions/51803396/how-do-i-print-both-an-expression-and-its-value-in-rust", "title": "How do I print both an expression and its value in Rust?", "body": "<p>Is there a way of doing this?</p>\n\n<pre><code>self.mega_ultra_field = 100500;\nprint_expr_and_value!(self.mega_ultra_field);\n</code></pre>\n\n<p>Output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>self.mega_ultra_field 100500\n</code></pre>\n"}, {"tags": ["namespaces", "rust"], "answers": [{"tags": [], "owner": {"reputation": 12367, "user_id": 531179, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/36b013eaaf1270f35e5157a5ea00ac22?s=128&d=identicon&r=PG", "display_name": "ulidtko", "link": "https://stackoverflow.com/users/531179/ulidtko"}, "is_accepted": false, "score": 2, "last_activity_date": 1533984208, "creation_date": 1533984208, "answer_id": 51798853, "question_id": 51798609, "link": "https://stackoverflow.com/questions/51798609/why-cant-i-use-self-in-match-arms-in-trait-impl-block/51798853#51798853", "title": "Why can&#39;t I use Self in match arms in trait impl block?", "body": "<p>From IRC:</p>\n\n<blockquote>\n  <p>(01:16PM) SpaceManiac: it's more of a missing feature than a bug<br>\n  (01:17PM) SpaceManiac: consider <code>use long_ns::Foo;</code> at the top of <code>fmt()</code> then <code>Foo::Bar</code> in the match</p>\n</blockquote>\n\n<p>Rust's <code>use</code> also <a href=\"https://doc.rust-lang.org/rust-by-example/mod/use.html\" rel=\"nofollow noreferrer\">permits renaming</a>, so I can do this:</p>\n\n<pre><code>    use sufficiently_long_namespace::Foo as _Self;\n    match self {\n        _Self::Bar  =&gt; write!(f, \"it's Foo stuff\"),\n        _Self::Buzz =&gt; write!(f, \"it's Buzz stuff\"),\n        _Self::Quux =&gt; write!(f, \"it's Quux stuff\"),\n    }\n</code></pre>\n\n<p>Though this is still better:</p>\n\n<pre><code>    use sufficiently_long_namespace::Foo;\n    match self {\n        Bar  =&gt; write!(f, \"it's Foo stuff\"),\n        Buzz =&gt; write!(f, \"it's Buzz stuff\"),\n        Quux =&gt; write!(f, \"it's Quux stuff\"),\n    }\n</code></pre>\n"}], "owner": {"reputation": 12367, "user_id": 531179, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/36b013eaaf1270f35e5157a5ea00ac22?s=128&d=identicon&r=PG", "display_name": "ulidtko", "link": "https://stackoverflow.com/users/531179/ulidtko"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 70, "favorite_count": 0, "closed_date": 1533991563, "answer_count": 1, "score": 2, "last_activity_date": 1533991523, "creation_date": 1533982182, "last_edit_date": 1533991523, "question_id": 51798609, "link": "https://stackoverflow.com/questions/51798609/why-cant-i-use-self-in-match-arms-in-trait-impl-block", "closed_reason": "Duplicate", "title": "Why can&#39;t I use Self in match arms in trait impl block?", "body": "<p>I can write this no problem:</p>\n\n<pre><code>mod sufficiently_long_namespace {\n    pub enum Foo {\n        Bar,\n        Buzz,\n        Quux,\n    }\n}\n\nuse std::fmt::{Display, Error, Formatter};\n\nimpl Display for sufficiently_long_namespace::Foo {\n    fn fmt(&amp;self, f: &amp;mut Formatter) -&gt; Result&lt;(), Error&gt; {\n        match self {\n            //-- NOTE: this works\n            sufficiently_long_namespace::Foo::Bar  =&gt; write!(f, \"it's Foo stuff\"),\n            sufficiently_long_namespace::Foo::Buzz =&gt; write!(f, \"it's Buzz stuff\"),\n            sufficiently_long_namespace::Foo::Quux =&gt; write!(f, \"it's Quux stuff\"),\n            //-- but this doesn't:\n            // Self::Bar  =&gt; write!(f, \"it's Foo stuff\"),\n            // Self::Buzz =&gt; write!(f, \"it's Buzz stuff\"),\n            // Self::Quux =&gt; write!(f, \"it's Quux stuff\"),\n        }\n    }\n}\n\nfn main() {\n    let test1 = sufficiently_long_namespace::Foo::Bar;\n    println!(\"{}\", test1);\n}\n</code></pre>\n\n<p>It compiles just fine. The commented out version using <code>Self</code>, surprisingly, doesn't:</p>\n\n<blockquote>\n  <p>error[E0599]: no variant named <code>Bar</code> found for type <code>sufficiently_long_namespace::Foo</code> in the current scope</p>\n</blockquote>\n\n<p>This is on <code>rustc 1.30.0-nightly (73c78734b 2018-08-05)</code>.</p>\n\n<p>Did I botch my namespaces, or is it a bug indeed?</p>\n\n<p>Lastly, I do want the explicit name in \n<code>impl Display for sufficiently_long_namespace::Foo</code>, but having to repeat this in <code>match</code> arms seems unwieldy.</p>\n"}, {"tags": ["performance", "memory", "rust", "lifetime"], "answers": [{"tags": [], "owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "is_accepted": true, "score": 8, "last_activity_date": 1533991470, "last_edit_date": 1533991470, "creation_date": 1533969435, "answer_id": 51797139, "question_id": 51797033, "link": "https://stackoverflow.com/questions/51797033/what-are-the-performance-differences-of-using-static-vs-a/51797139#51797139", "title": "What are the performance differences of using &#39;static vs &#39;a?", "body": "<p>The two functions will generate identical machine code. Lifetimes are removed during compilation. If your program checks out, they have no further meaning.</p>\n\n<p>In particular, it's wrong to think of lifetimes as \"this is held in memory this long\". Lifetimes are all about \"this stays alive long enough\". It's a subtle distinction, but the key thing to remember is that lifetimes are <em>descriptive</em>, not <em>prescriptive</em>. Giving something a lifetime doesn't mean it stays alive for a certain duration; either it is alive for the necessary duration for other reasons (e.g. a global variable can be referenced with <code>'static</code>), or the program won't compile.</p>\n\n<p>Second, the lifetimes in your snippets have no immediate effect at all. They're just parameters to the <code>Response</code> struct. It is up to that struct to decide what to do with the lifetime. Does it internally hold a reference to something with this lifetime? Is it just forwarded to a <code>PhantomData</code> used to associate the response with some connection?</p>\n\n<p>Third, given the way the function is defined (with the lifetime parameter only used in the return type), there is no difference in the requirements on the implementation. Because the lifetime here is chosen by the <em>caller</em>, the function must be prepared to fulfill the <code>'static</code> lifetime anyway. All this does is make the usage more annoying for the caller.</p>\n\n<p>So to sum up:</p>\n\n<ul>\n<li>Lifetimes don't work that way.</li>\n<li>The first version is not useful.</li>\n</ul>\n"}], "owner": {"reputation": 127, "user_id": 6587089, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5fec802fe3ec4b52f2825a7b1bb377a2?s=128&d=identicon&r=PG", "display_name": "Jack Fraser", "link": "https://stackoverflow.com/users/6587089/jack-fraser"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 119, "favorite_count": 0, "accepted_answer_id": 51797139, "answer_count": 1, "score": 2, "last_activity_date": 1533991470, "creation_date": 1533968223, "last_edit_date": 1533991387, "question_id": 51797033, "link": "https://stackoverflow.com/questions/51797033/what-are-the-performance-differences-of-using-static-vs-a", "title": "What are the performance differences of using &#39;static vs &#39;a?", "body": "<p>Considering the below functions, what performance differences would you expect?</p>\n\n<pre><code>pub fn foo&lt;'a&gt;(data: Request) -&gt; Response&lt;'a&gt; {\n    //\n}\n</code></pre>\n\n<p>vs.</p>\n\n<pre><code>pub fn foo(data: Request) -&gt; Response&lt;'static&gt; {\n    //\n}\n</code></pre>\n\n<p>Would the <code>Response</code> having a lifetime of <code>'static</code> keep every <code>Response</code> in memory for the life of the program?</p>\n\n<p>How long would <code>'a</code> be held in memory vs <code>'static</code>?</p>\n"}, {"tags": ["linux", "rust"], "comments": [{"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 1, "creation_date": 1533962495, "post_id": 51796417, "comment_id": 90550154, "body": "Well, there are two problems: one, environment variables don&#39;t survive beyond a process, so that command will set the variable and then immediately exit, not having any effect.  Secondly, setting an environment variable during build won&#39;t have any impact on when you <i>run</i> the program.  You need to either install the library somewhere the system knows to look for it, get the compiler to hard-code the path to the library into your program (don&#39;t know how), or continue to set the path before running the program."}, {"owner": {"reputation": 139, "user_id": 9431345, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/OVOx5.jpg?s=128&g=1", "display_name": "Mateholiker", "link": "https://stackoverflow.com/users/9431345/mateholiker"}, "reply_to_user": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1533962729, "post_id": 51796417, "comment_id": 90550186, "body": "I tried to set the variable in the build.rs. And from my understanding build.rs is executed before the program links the c-code so it could come off. But hard code cargo where to look for it would be a solution to my problem but i do not know how to hard code this."}, {"owner": {"reputation": 138, "user_id": 1144858, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b3cba17cd5c6e976d2a58ff135587aec?s=128&d=identicon&r=PG", "display_name": "David Brown", "link": "https://stackoverflow.com/users/1144858/david-brown"}, "edited": false, "score": 0, "creation_date": 1533965328, "post_id": 51796417, "comment_id": 90550540, "body": "Without a specific example to try repeating this, I can&#39;t really test this, but have you tried having your <code>build.rs</code> output a line something like <code>cargo:rustc-link-search=directory-of-shared-lib</code>? See <a href=\"https://doc.rust-lang.org/cargo/reference/build-scripts.html\" rel=\"nofollow noreferrer\">the docs</a>."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1533976983, "post_id": 51796417, "comment_id": 90552889, "body": "What&#39;s wrong wirth <a href=\"https://doc.rust-lang.org/std/env/fn.set_var.html\" rel=\"nofollow noreferrer\"><code>set_var</code></a>?"}, {"owner": {"reputation": 139, "user_id": 9431345, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/OVOx5.jpg?s=128&g=1", "display_name": "Mateholiker", "link": "https://stackoverflow.com/users/9431345/mateholiker"}, "edited": false, "score": 0, "creation_date": 1533986853, "post_id": 51796417, "comment_id": 90554859, "body": "I do not know why but i tried to use  <a href=\"https://doc.rust-lang.org/std/env/fn.set_var.html\" rel=\"nofollow noreferrer\"><code>set var</code></a>  and it did not set the variable at the right place. What i mean by that is neither could i run the program nor was the variable set on my terminal when i tested it with echo"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1534183024, "post_id": 51799351, "comment_id": 90610404, "body": "Can you verify that this continues to work if you run the program directly, outside of Cargo? That is, instead of running <code>cargo run</code>, try <code>cargo build</code> followed by <code>.&#47;target&#47;debug&#47;name_of_project</code>. My guess is that your original error will return. Is this your intended goal, it only working in <code>cargo run</code>, but not in any context outside of Cargo?"}, {"owner": {"reputation": 139, "user_id": 9431345, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/OVOx5.jpg?s=128&g=1", "display_name": "Mateholiker", "link": "https://stackoverflow.com/users/9431345/mateholiker"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1534189610, "post_id": 51799351, "comment_id": 90613431, "body": "Unfortunately it dose only work with <code>cargo run</code> and not with <code>cargo build</code> an then executing the output. Because as you said the environment variable dose not get saved into the binary. But if you run <code>export LD_LIBRARY_PATH=&lt;path&gt;</code> by hand and then run <code>.&#47;target&#47;debug&#47;name_of_project</code> everything is just fine so i think you could just write a script that exports the variable and than run <code>.&#47;target&#47;debug&#47;name_of_project</code> if you do not want to use <code>cargo run</code> to execute the program."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1534189718, "post_id": 51799351, "comment_id": 90613485, "body": "<i>you could just write a script that exports the variable</i> \u2014 You could have done that <i>without</i> this answer. The entire purpose of your question was: &quot;how can I set the variable from my program <b>while it is being executed</b>?&quot; and this answer doesn&#39;t accomplish that..."}, {"owner": {"reputation": 139, "user_id": 9431345, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/OVOx5.jpg?s=128&g=1", "display_name": "Mateholiker", "link": "https://stackoverflow.com/users/9431345/mateholiker"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1534190439, "post_id": 51799351, "comment_id": 90613811, "body": "I ask how I could run my program with only typing <code>cargo run</code> so this is the answer. If you want to execute you program without cargo the only two option I see are first: write a script that runs first(you could to this in the build.rs) or second: you add the <code>export LD_LIBRARY_PATH=&lt;path&gt;</code> to the <code>.bashrc</code> file but this is a really bad way of doing it because you cannot set the variable to two different values."}], "tags": [], "owner": {"reputation": 139, "user_id": 9431345, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/OVOx5.jpg?s=128&g=1", "display_name": "Mateholiker", "link": "https://stackoverflow.com/users/9431345/mateholiker"}, "is_accepted": true, "score": 3, "last_activity_date": 1534201055, "last_edit_date": 1534201055, "creation_date": 1533988090, "answer_id": 51799351, "question_id": 51796417, "link": "https://stackoverflow.com/questions/51796417/how-can-i-type-cargo-run-without-needing-to-set-the-ld-library-path-shell-vari/51799351#51799351", "title": "How can I type &quot;cargo run&quot; without needing to set the LD_LIBRARY_PATH shell variable?", "body": "<p>Add the following line to build.rs:</p>\n\n<pre><code>println!(\"cargo:rustc-env=LD_LIBRARY_PATH=/home/jan/Uni/Bachelorarbeit/Programme/Rust_Cpp_crossover_erneut/\");\n</code></pre>\n\n<p>This only works with <code>cargo run</code> and not with <code>cargo build</code> and then executing the output. The environment variable does not get saved into the binary.</p>\n"}], "owner": {"reputation": 139, "user_id": 9431345, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/OVOx5.jpg?s=128&g=1", "display_name": "Mateholiker", "link": "https://stackoverflow.com/users/9431345/mateholiker"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1573, "favorite_count": 0, "accepted_answer_id": 51799351, "answer_count": 1, "score": 4, "last_activity_date": 1534201061, "creation_date": 1533961058, "last_edit_date": 1534200979, "question_id": 51796417, "link": "https://stackoverflow.com/questions/51796417/how-can-i-type-cargo-run-without-needing-to-set-the-ld-library-path-shell-vari", "title": "How can I type &quot;cargo run&quot; without needing to set the LD_LIBRARY_PATH shell variable?", "body": "<p>I build a Rust program that calls a C++ function via a C interface. In order to execute the program, I have to run:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>export LD_LIBRARY_PATH=&lt;path to shared c lib&gt;\n</code></pre>\n\n<p>or I get an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error while loading shared libraries: libtest.so: cannot open shared object file: No such file or directory\n</code></pre>\n\n<p>I tried to set the variable in a build script using <code>std::process::Command</code></p>\n\n<pre><code>Command::new(\"sh\").arg(\"export\").arg(\"LD_LIBRARY_PATH=&lt;path to shared c lib&gt;\");\n</code></pre>\n\n<p>Although the command executes without an error, the variable is not set. How can I set the variable from my program while it is being executed?</p>\n\n<p>To be more concrete, I want to type only this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>cargo run\n</code></pre>\n\n<p>instead of </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>export LD_LIBRARY_PATH=&lt;path to shared c lib&gt;\ncargo run\n</code></pre>\n\n<p>My code so far:</p>\n\n<p>main.rs</p>\n\n<pre><code>/*---compile all with---\n    g++ -c -fpic foo.cpp\n    gcc -c -fpic test.c\n    g++ -shared foo.o test.o -o libtest.so\n\n    in order to execute we have to set the variable\n    export LD_LIBRARY_PATH=/home/jan/Uni/Bachelorarbeit/Programme/Rust_Cpp_crossover_erneut/$LD_LIBARY_PATH\n\n*/\n//pub extern crate c_interface;\npub extern crate libc;\nuse libc::{c_int};\n\n\n\n#[link(name = \"test\")]\nextern \"C\" {\n    fn hello_world () -&gt; c_int;\n}\n\n\nfn main() {\n    let x;\n    unsafe {\n        x = hello_world();\n    }\n    println!(\"x is: {}\", x);\n}\n</code></pre>\n\n<p>test.c</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>#include \"foo.h\"\n\nint hello_world () {\n    int a = foo();\n    return a;\n}\n</code></pre>\n\n<p>foo.cpp</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>#include &lt;iostream&gt;\n#include \"foo.h\"\n\nusing namespace std;\n\nint foo() {\n    cout &lt;&lt; \"Hello, World!\" &lt;&lt; endl;\n    return 0;\n}\n</code></pre>\n\n<p>foo.h</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>#ifdef __cplusplus\nextern \"C\" {\n#endif\n\nint foo();\n\n#ifdef __cplusplus\n}\n#endif\n</code></pre>\n\n<p>build.rs</p>\n\n<pre><code>fn main () {\n    println!(r\"cargo:rustc-link-search=native=/home/jan/Uni/Bachelorarbeit/Programme/Rust_Cpp_crossover_erneut\");\n}\n</code></pre>\n\n<p>I have seen <a href=\"https://stackoverflow.com/questions/40833078/how-do-i-specify-the-linker-path-in-rust\">How do I specify the linker path in Rust?</a> and it is not a solution to my problem.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1533908690, "post_id": 51786498, "comment_id": 90533050, "body": "<i>Questions asking us to recommend or find a book, tool, software library, tutorial or other off-site resource are off-topic for Stack Overflow as they tend to attract opinionated answers and spam</i> \u2014 I&#39;ve removed that from your otherwise good question."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1533908911, "post_id": 51786498, "comment_id": 90533178, "body": "Overall, I think you are looking at this incorrectly. <code>expect</code> should <b>never</b> be used for errors that a user might reasonably see or cause. It&#39;s intention is for programmer-level errors. Everything else should be handled by your program."}, {"owner": {"reputation": 6165, "user_id": 1901658, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/95eee89c6704eb4d075c33821c61af72?s=128&d=identicon&r=PG", "display_name": "Fredrick Brennan", "link": "https://stackoverflow.com/users/1901658/fredrick-brennan"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1533909067, "post_id": 51786498, "comment_id": 90533270, "body": "@Shepmaster I get that. I wrote &quot;I find expect() very useful for writing quick code&quot; ... you&#39;re right that real error handling should be used in non-trivial scripts."}, {"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 0, "creation_date": 1533910655, "post_id": 51786498, "comment_id": 90534203, "body": "<code>expect</code> can be improved with a macro, <a href=\"https://crates.io/crates/unwrap\" rel=\"nofollow noreferrer\">crates.io/crates/unwrap</a> for example."}], "answers": [{"tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": false, "score": 5, "last_activity_date": 1533904295, "creation_date": 1533904295, "answer_id": 51786622, "question_id": 51786498, "link": "https://stackoverflow.com/questions/51786498/is-there-a-way-to-make-expect-output-a-more-user-friendly-message/51786622#51786622", "title": "Is there a way to make expect() output a more user-friendly message?", "body": "<p><a href=\"https://doc.rust-lang.org/src/core/option.rs.html#309-314\" rel=\"noreferrer\"><code>expect()</code></a> is just a convenient conditional call to <code>panic!()</code>:</p>\n\n<pre><code>pub fn expect(self, msg: &amp;str) -&gt; T {\n    match self {\n        Some(val) =&gt; val,\n        None =&gt; expect_failed(msg) // expect_failed calls panic!()\n    }\n}\n</code></pre>\n\n<p>Ideally you should probably handle this with the <code>?</code> operator inside a function returning an <code>Option</code> or <code>Result</code> in order to be able to handle this sort of issue in a more graceful manner.</p>\n\n<p>If you would just like to return a more friendly-looking message and quit, you could implement your own function printing the message and terminating with <a href=\"https://doc.rust-lang.org/stable/std/process/fn.exit.html\" rel=\"noreferrer\">process::exit</a>.</p>\n"}, {"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 6, "last_activity_date": 1533908760, "last_edit_date": 1533908760, "creation_date": 1533904580, "answer_id": 51786700, "question_id": 51786498, "link": "https://stackoverflow.com/questions/51786498/is-there-a-way-to-make-expect-output-a-more-user-friendly-message/51786700#51786700", "title": "Is there a way to make expect() output a more user-friendly message?", "body": "<p>You can use <a href=\"https://doc.rust-lang.org/std/panic/fn.set_hook.html\" rel=\"nofollow noreferrer\"><code>set_hook</code></a> to change the panic message. Example:</p>\n\n<pre><code>use std::panic::set_hook;\n\nfn main() {\n    set_hook(Box::new(|info| {\n        if let Some(s) = info.payload().downcast_ref::&lt;String&gt;() {\n            println!(\"{}\", s);\n        }\n    }));\n\n    // Displays: \"My error message\":\n    Option::None::&lt;i32&gt;.expect(\"My error message\");\n}\n</code></pre>\n\n<p>You can also use <code>message()</code> that is simpler, but unstable (for now):</p>\n\n<pre><code>#![feature(panic_info_message)]\n\nuse std::panic::set_hook;\n\nfn main() {\n    set_hook(Box::new(|info| {\n        println!(\"{:?}\", info.message().unwrap());\n    }));\n\n    Option::None::&lt;i32&gt;.expect(\"My error message\");\n}\n</code></pre>\n\n<p>Note that you can create your own extension method that panics with a custom type. In the panic hook, if you can downcast to your custom type, you are certain of the origin of the panic.</p>\n"}], "owner": {"reputation": 6165, "user_id": 1901658, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/95eee89c6704eb4d075c33821c61af72?s=128&d=identicon&r=PG", "display_name": "Fredrick Brennan", "link": "https://stackoverflow.com/users/1901658/fredrick-brennan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 375, "favorite_count": 0, "accepted_answer_id": 51786700, "answer_count": 2, "score": 3, "last_activity_date": 1533908760, "creation_date": 1533903867, "last_edit_date": 1533908644, "question_id": 51786498, "link": "https://stackoverflow.com/questions/51786498/is-there-a-way-to-make-expect-output-a-more-user-friendly-message", "title": "Is there a way to make expect() output a more user-friendly message?", "body": "<p>I find the message produced by <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.expect\" rel=\"nofollow noreferrer\"><code>expect()</code></a> to be very unfriendly for users. Consider the following short example...</p>\n\n<pre><code>use std::env;\n\nfn main() {\n    let imagefn = env::args().skip(1).next().expect(\"Filename not provided.\");\n    println!(\"{}\", imagefn);\n}\n</code></pre>\n\n<p>That errors with:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>thread 'main' panicked at 'Filename not provided.', libcore/option.rs:960:5\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\n</code></pre>\n\n<p>I find <code>expect()</code> very useful for writing quick code, but wish I could output something more like this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Filename not provided.\n</code></pre>\n\n<p>With all the other information hidden unless I actually provide the environment variable, which I, as a developer, should know about. I guess my questions are:</p>\n\n<ol>\n<li>Is there a way I can override <code>expect()</code> to do this?</li>\n<li>Why does <code>expect()</code> output its unfriendly message even in release builds?</li>\n</ol>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 2210, "user_id": 747032, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/39fc02d6a812edf6daa8914247e9b4c0?s=128&d=identicon&r=PG", "display_name": "JeanMertz", "link": "https://stackoverflow.com/users/747032/jeanmertz"}, "edited": false, "score": 0, "creation_date": 1533901288, "post_id": 51785457, "comment_id": 90528388, "body": "I&#39;ve also been looking for this. I know that you can at least do <code>cargo run -p foo</code> to use package <code>foo</code> every time you run <code>cargo run</code>. There&#39;s also the option to have your top-level folder be both a crate, and a workspace for nested crates, but I didn&#39;t go that route, as it adds more confusion. I&#39;d also like to see me being able to set the default binary crate at the virtual manifest level."}], "answers": [{"comments": [{"owner": {"reputation": 40487, "user_id": 322806, "user_type": "registered", "accept_rate": 40, "profile_image": "https://i.stack.imgur.com/TDQGm.jpg?s=128&g=1", "display_name": "Winston Ewert", "link": "https://stackoverflow.com/users/322806/winston-ewert"}, "edited": false, "score": 4, "creation_date": 1568335478, "post_id": 51790493, "comment_id": 102250538, "body": "To aid anyone who might be a bit confused like me. Adding default-run to the Cargo.toml for the binary you want to be default does work, even though it may seem surprising that the default-run for an inner Cargo.toml shouldn&#39;t affect what happens when you invoke <code>cargo run</code> at the workspace root."}, {"owner": {"reputation": 11121, "user_id": 12958, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/f1bb6e5c84ee4cbf4790d08b4515e62c?s=128&d=identicon&r=PG", "display_name": "justin.m.chase", "link": "https://stackoverflow.com/users/12958/justin-m-chase"}, "edited": false, "score": 0, "creation_date": 1595127843, "post_id": 51790493, "comment_id": 111365382, "body": "How can I make cargo run multiple binaries? I have a client and a server I want to test together for example."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 11121, "user_id": 12958, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/f1bb6e5c84ee4cbf4790d08b4515e62c?s=128&d=identicon&r=PG", "display_name": "justin.m.chase", "link": "https://stackoverflow.com/users/12958/justin-m-chase"}, "edited": false, "score": 1, "creation_date": 1595252501, "post_id": 51790493, "comment_id": 111401835, "body": "@justin.m.chase that&#39;s not something that Cargo supports natively. One thing you could do is create a third binary that uses <a href=\"https://doc.rust-lang.org/std/process/struct.Command.html\" rel=\"nofollow noreferrer\"><code>std::process::Command</code></a> to spawn the server and client."}, {"owner": {"reputation": 11121, "user_id": 12958, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/f1bb6e5c84ee4cbf4790d08b4515e62c?s=128&d=identicon&r=PG", "display_name": "justin.m.chase", "link": "https://stackoverflow.com/users/12958/justin-m-chase"}, "edited": false, "score": 1, "creation_date": 1595253643, "post_id": 51790493, "comment_id": 111402450, "body": "@Shepmaster Great minds think alike. That is exactlly what I ended up doing, its a little hacky but works fine for now."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 11, "last_activity_date": 1565905839, "last_edit_date": 1565905839, "creation_date": 1533918008, "answer_id": 51790493, "question_id": 51785457, "link": "https://stackoverflow.com/questions/51785457/how-can-i-specify-which-crate-cargo-run-runs-by-default-in-the-root-of-a-cargo/51790493#51790493", "title": "How can I specify which crate `cargo run` runs by default in the root of a Cargo workspace?", "body": "<h1>Single Binary</h1>\n\n<p>This <a href=\"https://github.com/rust-lang/cargo/pull/5877\" rel=\"nofollow noreferrer\">is available as of Rust 1.30</a>. Here is the complete set of files I tested with:</p>\n\n<p><strong>Cargo.toml</strong></p>\n\n<pre><code>[workspace]\nmembers = [\n    \"foo\",\n    \"bar\",\n    \"baz\",\n]\n</code></pre>\n\n<p><strong>foo/Cargo.toml</strong></p>\n\n<pre><code>[package]\nname = \"foo\"\nversion = \"0.1.0\"\nauthors = [\"An Devloper &lt;an.devloper@example.com&gt;\"]\n\n[dependencies]\n</code></pre>\n\n<p><strong>foo/src/main.rs</strong></p>\n\n<pre><code>fn main() {\n    println!(\"Hello, world!\");\n}\n</code></pre>\n\n<p><strong>bar/Cargo.toml</strong></p>\n\n<pre><code>[package]\nname = \"bar\"\nversion = \"0.1.0\"\nauthors = [\"An Devloper &lt;an.devloper@example.com&gt;\"]\n\n[dependencies]\n</code></pre>\n\n<p><strong>bar/src/lib.rs</strong></p>\n\n<pre><code>#[cfg(test)]\nmod tests {\n    #[test]\n    fn it_works() {\n        assert_eq!(2 + 2, 4);\n    }\n}\n</code></pre>\n\n<p><strong>baz/Cargo.toml</strong></p>\n\n<pre><code>[package]\nname = \"baz\"\nversion = \"0.1.0\"\nauthors = [\"An Devloper &lt;an.devloper@example.com&gt;\"]\n\n[dependencies]\n</code></pre>\n\n<p><strong>baz/src/lib.rs</strong></p>\n\n<pre><code>#[cfg(test)]\nmod tests {\n    #[test]\n    fn it_works() {\n        assert_eq!(2 + 2, 4);\n    }\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ tree .\n.\n\u251c\u2500\u2500 Cargo.lock\n\u251c\u2500\u2500 Cargo.toml\n\u251c\u2500\u2500 bar\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Cargo.toml\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 src\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 lib.rs\n\u251c\u2500\u2500 baz\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Cargo.toml\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 src\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 lib.rs\n\u251c\u2500\u2500 foo\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Cargo.toml\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 src\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 main.rs\n\u251c\u2500\u2500 src\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 lib.rs\n\u2514\u2500\u2500 target\n    \u2514\u2500\u2500 ...\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo run\n   Compiling baz v0.1.0 (file:///private/tmp/example/baz)\n   Compiling bar v0.1.0 (file:///private/tmp/example/bar)\n   Compiling foo v0.1.0 (file:///private/tmp/example/foo)\n    Finished dev [unoptimized + debuginfo] target(s) in 0.39s\n     Running `target/debug/foo`\nHello, world!\n</code></pre>\n\n<h1>Multiple Binaries</h1>\n\n<p>As of Rust 1.37.0 you can use Cargo's \"default-run\" feature to specify which one to use. </p>\n\n<p><strong>foo/Cargo.toml</strong></p>\n\n<pre><code>[package]\nname = \"foo\"\nversion = \"0.0.1\"\nauthors = [\"An Devloper &lt;an.devloper@example.com&gt;\"]\ndefault-run = \"foo\"\n</code></pre>\n"}], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3226, "favorite_count": 4, "accepted_answer_id": 51790493, "answer_count": 1, "score": 12, "last_activity_date": 1565905839, "creation_date": 1533900239, "last_edit_date": 1533914989, "question_id": 51785457, "link": "https://stackoverflow.com/questions/51785457/how-can-i-specify-which-crate-cargo-run-runs-by-default-in-the-root-of-a-cargo", "title": "How can I specify which crate `cargo run` runs by default in the root of a Cargo workspace?", "body": "<p>Right now I have a Cargo workspace with three members.</p>\n\n<pre><code>[workspace]\nmembers = [\n    \"foo\",\n    \"bar\",\n    \"baz\",\n]\n</code></pre>\n\n<p>If I run <code>cargo run</code> in the root directory, I get this error:</p>\n\n<blockquote>\n  <p><strong>error</strong>: manifest path <code>/home/lukas/dev/mahboi/Cargo.toml</code> is a virtual manifest, but this command requires running against an actual package in this workspace</p>\n</blockquote>\n\n<p>That makes sense. I can run <code>cargo run -p foo</code> and it works. But the thing is: <code>foo</code> is the only crate that is executable and I will execute it very often, so it would be nice if I could just run <code>cargo run</code> and execute it. </p>\n\n<p>I tried to use the <code>default-members</code> key, but this didn't help:</p>\n\n<pre><code>default-members = [\"foo\"]\n</code></pre>\n\n<hr>\n\n<p>Is there another way to tell Cargo that <code>cargo run</code> should execute the <code>foo</code> crate (equivalent to running <code>cargo run</code> in the <code>foo/</code> subdirectory)? I would also accept answers that make the root crate non virtual (i.e. add a <code>[package]</code> key).</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1533894444, "post_id": 51783590, "comment_id": 90524446, "body": "I wonder what could be your usecase"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 4, "creation_date": 1533895092, "post_id": 51783590, "comment_id": 90524838, "body": "<code>&quot;one two free&quot;</code> and <code>r#&quot;one two free&quot;#</code> are literally the same thing.  They&#39;re the same string written two different ways."}, {"owner": {"reputation": 279, "user_id": 5917243, "user_type": "registered", "accept_rate": 40, "profile_image": "https://lh4.googleusercontent.com/-qtep2iMqRfc/AAAAAAAAAAI/AAAAAAAAABE/OpjnOORf7ac/photo.jpg?sz=128", "display_name": "Vladislav Aniskin", "link": "https://stackoverflow.com/users/5917243/vladislav-aniskin"}, "edited": false, "score": 0, "creation_date": 1533895143, "post_id": 51783590, "comment_id": 90524866, "body": "I need to convert many strings to raw strings."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 1, "creation_date": 1533895339, "post_id": 51783590, "comment_id": 90524985, "body": "But <i>why</i>.  Raw strings are just another way of writing strings.  As far as I know, there is nothing in the language that cares whether you&#39;re using raw strings or non-raw strings."}, {"owner": {"reputation": 279, "user_id": 5917243, "user_type": "registered", "accept_rate": 40, "profile_image": "https://lh4.googleusercontent.com/-qtep2iMqRfc/AAAAAAAAAAI/AAAAAAAAABE/OpjnOORf7ac/photo.jpg?sz=128", "display_name": "Vladislav Aniskin", "link": "https://stackoverflow.com/users/5917243/vladislav-aniskin"}, "edited": false, "score": 0, "creation_date": 1533895652, "post_id": 51783590, "comment_id": 90525171, "body": "One difference it is raw string contain data that have unparsed cpecify symbols example (&quot;) form ."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 2, "creation_date": 1533895726, "post_id": 51783590, "comment_id": 90525220, "body": "But so can regular strings, you just need to escape them.  And there&#39;s no point in &quot;converting&quot; a regular string into a raw string, because the regular string won&#39;t let you <i>write</i> those special characters without escaping."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 2, "creation_date": 1533895786, "post_id": 51783590, "comment_id": 90525260, "body": "If we haven&#39;t convinced you there&#39;s no reason to do this, I think you need to show what it is you&#39;re trying to do, and why you believe converting to raw strings would work."}], "answers": [{"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 10, "last_activity_date": 1533898113, "creation_date": 1533898113, "answer_id": 51784831, "question_id": 51783590, "link": "https://stackoverflow.com/questions/51783590/how-i-can-convert-string-to-raw-string-via-macros/51784831#51784831", "title": "How I can convert string to raw string via macros?", "body": "<p><strong>You can't.</strong></p>\n\n<p>The reason is quite simple: macros by example (the things you declare with <code>macro_rules!</code>) <strong>work on a token stream, not a stream of characters</strong>. The input to a macro invocation has to be a valid token stream. This means that the compiler has to tokenize the code before expanding any macros. But the difference between normal string literals <code>\"foo\"</code> and raw string literals <code>r#\"foo\"#</code> is only during tokenization! A string literal is one token.</p>\n\n<p>This means that this:</p>\n\n<pre><code>fmt_wrap!(\"foo \" bar\");\n</code></pre>\n\n<p>Will never work. Before expanding <code>fmt_wrap</code>, the compiler has to convert its input into a valid token stream. But that's not possible!</p>\n"}], "owner": {"reputation": 279, "user_id": 5917243, "user_type": "registered", "accept_rate": 40, "profile_image": "https://lh4.googleusercontent.com/-qtep2iMqRfc/AAAAAAAAAAI/AAAAAAAAABE/OpjnOORf7ac/photo.jpg?sz=128", "display_name": "Vladislav Aniskin", "link": "https://stackoverflow.com/users/5917243/vladislav-aniskin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 548, "favorite_count": 0, "closed_date": 1533935638, "accepted_answer_id": 51784831, "answer_count": 1, "score": 0, "last_activity_date": 1533898148, "creation_date": 1533894155, "last_edit_date": 1533895167, "question_id": 51783590, "link": "https://stackoverflow.com/questions/51783590/how-i-can-convert-string-to-raw-string-via-macros", "closed_reason": "Needs more focus", "title": "How I can convert string to raw string via macros?", "body": "<p>I have a line example <code>\"one two free\"</code> and I need programatically to convert this to <code>r#\"one two free\"#</code> via macros, is this possible?</p>\n\n<pre><code>#[macro_export]\nmacro_rules! fmt_wrap {\n    ($msg:block) =&gt; {\n\n    }\n}\n\nfn main() {\n    println!(fmt_wrap!(\"one two free\"));\n}\n</code></pre>\n"}, {"tags": ["rust", "constants", "let"], "answers": [{"tags": [], "owner": {"reputation": 50119, "user_id": 32133, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/68175c95b0ed231f35bb3e1be2805169?s=128&d=identicon&r=PG", "display_name": "Tim Robinson", "link": "https://stackoverflow.com/users/32133/tim-robinson"}, "is_accepted": true, "score": 6, "last_activity_date": 1533908276, "last_edit_date": 1533908276, "creation_date": 1533893029, "answer_id": 51783209, "question_id": 51783042, "link": "https://stackoverflow.com/questions/51783042/can-i-shadow-a-const-binding-with-a-local-variable/51783209#51783209", "title": "Can I shadow a const binding with a local variable?", "body": "<p>I think I get it... when I use <code>let SOME_CONST</code>, the compiler thinks I'm pattern matching.</p>\n\n<p>When I fix the types:</p>\n\n<pre><code>const x: i32 = 10;\nlet x: i32 = x + 1;\nassert_eq!(11, x);\n</code></pre>\n\n<p>I get a different error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0005]: refutable pattern in local binding: `_` not covered\n --&gt; src/main.rs:3:9\n  |\n3 |     let x: i32 = x + 1;\n  |         ^ interpreted as a constant pattern, not new variable\n</code></pre>\n\n<p>As if I had taken all occurrences of <code>x</code> in the program and expanded them to the constant <code>10</code>:</p>\n\n<pre><code>let 10: i32 = 10 + 1;\nassert_eq!(11, x);\n</code></pre>\n"}], "owner": {"reputation": 50119, "user_id": 32133, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/68175c95b0ed231f35bb3e1be2805169?s=128&d=identicon&r=PG", "display_name": "Tim Robinson", "link": "https://stackoverflow.com/users/32133/tim-robinson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 271, "favorite_count": 0, "accepted_answer_id": 51783209, "answer_count": 1, "score": 6, "last_activity_date": 1533908276, "creation_date": 1533892604, "last_edit_date": 1533908230, "question_id": 51783042, "link": "https://stackoverflow.com/questions/51783042/can-i-shadow-a-const-binding-with-a-local-variable", "title": "Can I shadow a const binding with a local variable?", "body": "<p>I thought this would work:</p>\n\n<pre><code>const x: &amp;str = \"10\";            // declare a const\nlet x: i32 = x.parse().unwrap(); // reuse the same name for a let binding\nassert_eq!(10, x);\n</code></pre>\n\n<p>But:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; src/main.rs:3:9\n  |\n3 |     let x: i32 = x.parse().unwrap(); // reuse the same name for a let binding\n  |         ^ expected i32, found reference\n  |\n  = note: expected type `i32`\n             found type `&amp;'static str`\n\nerror[E0277]: the trait bound `{integer}: std::cmp::PartialEq&lt;&amp;str&gt;` is not satisfied\n --&gt; src/main.rs:4:5\n  |\n4 |     assert_eq!(10, x);\n  |     ^^^^^^^^^^^^^^^^^^ can't compare `{integer}` with `&amp;str`\n  |\n  = help: the trait `std::cmp::PartialEq&lt;&amp;str&gt;` is not implemented for `{integer}`\n  = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n</code></pre>\n\n<p>This works:</p>\n\n<pre><code>const x: &amp;str = \"10\";\nlet y: i32 = x.parse().unwrap();\nassert_eq!(10, y);\n</code></pre>\n\n<p>And so does this:</p>\n\n<pre><code>let x: &amp;str = \"10\";\nlet x: i32 = x.parse().unwrap();\nassert_eq!(10, x);\n</code></pre>\n\n<p>Am I doing something wrong, or is it not possible to shadow an existing <code>const</code> binding with a <code>let</code> under the same name?</p>\n"}, {"tags": ["rust", "command-line-interface"], "answers": [{"comments": [{"owner": {"reputation": 2713, "user_id": 2295193, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/rX1ss.png?s=128&g=1", "display_name": "Reinstate Monica", "link": "https://stackoverflow.com/users/2295193/reinstate-monica"}, "edited": false, "score": 1, "creation_date": 1533908209, "post_id": 51780040, "comment_id": 90532753, "body": "It&#39;s not the best idea to set any random folder to your $PATH (some malicious app could take advantage of it)."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1533912036, "post_id": 51780040, "comment_id": 90535036, "body": "Can you name an example? You can always use a full path as a malicious app, so why rely on $PATH?"}, {"owner": {"reputation": 99643, "user_id": 445517, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/57e2ba76e6290c4e9e19821a068bc8c1?s=128&d=identicon&r=PG", "display_name": "CodesInChaos", "link": "https://stackoverflow.com/users/445517/codesinchaos"}, "edited": false, "score": 0, "creation_date": 1533972785, "post_id": 51780040, "comment_id": 90552021, "body": "@hellow Security issues arise if the directory (or any parent) is writable by a different user than the user who adds it to their path. It&#39;s easier to keep track of permissions if you limit yourself to a few dedicated directories for this."}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 1, "last_activity_date": 1533908113, "last_edit_date": 1533908113, "creation_date": 1533881384, "answer_id": 51780040, "question_id": 51779809, "link": "https://stackoverflow.com/questions/51779809/run-rust-program-without-cargo-run/51780040#51780040", "title": "Run Rust program without cargo run", "body": "<p>This is more like a generic question (and I think a duplicate too, but I can't find any).</p>\n\n<p>You have to copy your executable that is generated by <code>cargo build --release</code> (you can find it in <code>target/release/</code><em><code>crate_name</code></em>) to a folder in your <code>$PATH</code>.</p>\n\n<p>I'm not an expert in macOS, so I can't tell you what is a folder that is included in the <code>$PATH</code>, but you can find that out by yourself by opening a terminal and typing <code>echo $PATH</code>. Use one of the paths and it should be available in your terminal without cargo or using any path.</p>\n\n<p>As an alternative, you can add a folder to your <code>$PATH</code> variable and put it there, e.g. </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>export PATH /home/foobar/.bin:$PATH\ncp target/release/brainfast /home/foobar/.bin\nbrainfast abc.txt 1 3 99 u\n</code></pre>\n"}], "owner": {"reputation": 493, "user_id": 8234642, "user_type": "registered", "accept_rate": 86, "profile_image": "https://lh3.googleusercontent.com/-vf_HkR3DFnI/AAAAAAAAAAI/AAAAAAAAAF4/1k3QCnQMEeI/photo.jpg?sz=128", "display_name": "Nic Bonetto", "link": "https://stackoverflow.com/users/8234642/nic-bonetto"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 798, "favorite_count": 0, "accepted_answer_id": 51780040, "answer_count": 1, "score": 0, "last_activity_date": 1533908113, "creation_date": 1533880355, "last_edit_date": 1533908003, "question_id": 51779809, "link": "https://stackoverflow.com/questions/51779809/run-rust-program-without-cargo-run", "title": "Run Rust program without cargo run", "body": "<p>I built a simple CLI written in Rust that executes with the command <code>cargo run &lt;ARGUMENTS&gt;</code>. I want to be able to run the CLI from any directory. I used the clap crate and want to be able to call the script with the name passed to clap: <code>brainfast &lt;ARGUMENTS&gt;</code>. I am running on macOS. </p>\n"}, {"tags": ["rust", "borrow-checker", "borrowing"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1533862415, "last_edit_date": 1533862415, "creation_date": 1533862007, "answer_id": 51777498, "question_id": 51777187, "link": "https://stackoverflow.com/questions/51777187/why-does-returning-a-u8-rather-than-u8-from-a-function-in-rust-borrow-self/51777498#51777498", "title": "Why does returning a &amp;[u8] rather than u8 from a function in Rust borrow self?", "body": "<p>I highly recommend going back and re-reading <a href=\"https://doc.rust-lang.org/book/second-edition/\" rel=\"nofollow noreferrer\"><em>The Rust Programming Language</em></a>, specifically the chapter about <a href=\"https://doc.rust-lang.org/book/second-edition/ch04-02-references-and-borrowing.html\" rel=\"nofollow noreferrer\">references and borrowing</a>.</p>\n\n<blockquote>\n  <p>Why does returning a &amp;[u8] rather than u8 from a function in Rust borrow self?</p>\n</blockquote>\n\n<p>You are <em>essentially</em> asking</p>\n\n<blockquote>\n  <p>why does returning \u00absomething that is borrowed\u00bb rather than \u00absomething that is not borrowed\u00bb from a function \u00abrequire a borrow\u00bb?</p>\n</blockquote>\n\n<p>The contrite answer is: because a <code>u8</code> is not borrowed while a <code>&amp;[u8]</code> is borrowed.</p>\n\n<blockquote>\n  <p>Why is it that Rust doesn't let me use the <code>value</code> property </p>\n</blockquote>\n\n<p>Because the compiler doesn't know what values of <code>self</code> are returned as part of <code>get</code> when checking the body of <code>get_and_increment</code>. It's entirely possible that your implementation of <code>get</code> returns a reference to <code>value</code>, <em>or it might in the future</em>, so the compiler has to take the conservative route and disallow it.</p>\n\n<blockquote>\n  <p>but only when both functions return <code>&amp;[u8]</code>?</p>\n</blockquote>\n\n<p>This is not accurate. The return type of <code>get_and_increment</code> has no impact on the error. The return type of <code>get</code> only matters in that it contains a reference.</p>\n\n<hr>\n\n<p>There's no obvious reason for you to return a reference, however:</p>\n\n<pre><code>pub fn get(&amp;self) -&gt; [u8; 2] {\n    [3; 2]\n}\n</code></pre>\n\n<p>If you wanted to return a reference for some reason, it doesn't need to be tied to the lifetime of <code>self</code> (which your code does due to <a href=\"https://doc.rust-lang.org/book/second-edition/ch10-03-lifetime-syntax.html#lifetime-elision\" rel=\"nofollow noreferrer\"><em>lifetime elision</em></a>):</p>\n\n<pre><code>pub fn get(&amp;self) -&gt; &amp;'static [u8] {\n    &amp;[3; 2]\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/50345139/155423\">Why can I return a reference to a local literal but not a variable?</a></li>\n</ul>\n"}], "owner": {"reputation": 121, "user_id": 3719067, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/01e44e501ea5c91da08b758eaab4fc11?s=128&d=identicon&r=PG&f=1", "display_name": "linuxuser", "link": "https://stackoverflow.com/users/3719067/linuxuser"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 588, "favorite_count": 0, "accepted_answer_id": 51777498, "answer_count": 1, "score": -1, "last_activity_date": 1533862415, "creation_date": 1533858927, "last_edit_date": 1533861721, "question_id": 51777187, "link": "https://stackoverflow.com/questions/51777187/why-does-returning-a-u8-rather-than-u8-from-a-function-in-rust-borrow-self", "title": "Why does returning a &amp;[u8] rather than u8 from a function in Rust borrow self?", "body": "<p>I have the following code</p>\n\n<pre><code>pub struct Something {\n    value: usize,\n}\n\nimpl Something {\n    pub fn get_and_increment(&amp;mut self) -&gt; &amp;[u8] {\n        let res = self.get();\n        self.value += 1;\n\n        res\n    }\n\n    pub fn get(&amp;self) -&gt; &amp;[u8] {\n        &amp;[3; 2]\n    }\n}\n</code></pre>\n\n<p>When I try to compile this I get this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0506]: cannot assign to `self.value` because it is borrowed\n --&gt; src/main.rs:8:9\n  |\n7 |         let res = self.get();\n  |                   ---- borrow of `self.value` occurs here\n8 |         self.value += 1;\n  |         ^^^^^^^^^^^^^^^ assignment to borrowed `self.value` occurs here\n</code></pre>\n\n<p>If I change the return type of each function to <code>u8</code> rather than <code>&amp;[u8]</code> it compiles just fine:</p>\n\n<pre><code>pub struct Something {\n    value: usize,\n}\n\nimpl Something {\n    pub fn get_and_increment(&amp;mut self) -&gt; u8 {\n        let res = self.get();\n        self.value += 1;\n\n        res\n    }\n\n    pub fn get(&amp;self) -&gt; u8 {\n        3\n    }\n}\n</code></pre>\n\n<p>Why is it that Rust doesn't let me use the <code>value</code> property of <code>Something</code> in the <code>get_and_increment</code> function after <code>self.get</code> is called but only when both functions return <code>&amp;[u8]</code>?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1533865208, "post_id": 51776161, "comment_id": 90513737, "body": "I think the <a href=\"https://doc.rust-lang.org/stable/error-index.html#E0389\" rel=\"nofollow noreferrer\">explanation</a> of the error explain it very well"}, {"owner": {"reputation": 11, "user_id": 8822976, "user_type": "registered", "profile_image": "https://graph.facebook.com/1975503506042184/picture?type=large", "display_name": "fishbone", "link": "https://stackoverflow.com/users/8822976/fishbone"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1533935279, "post_id": 51776161, "comment_id": 90545753, "body": "I don&#39;t think so. If you run it with <code>*z += 10;</code> and it will give <code>help: += can be used on &#39;i32&#39;, you can dereference *z: **z</code>. And the error is exactly the same as <code>y += 10;</code>, but <code>*y += 10;</code> will work and <code>**z += 10;</code> won&#39;t work."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1533854561, "post_id": 51776653, "comment_id": 90511768, "body": "I understood OP to be asking specifically <i>why</i>, not <i>what changes do I need to make to get my code to work</i>."}, {"owner": {"reputation": 11, "user_id": 8822976, "user_type": "registered", "profile_image": "https://graph.facebook.com/1975503506042184/picture?type=large", "display_name": "fishbone", "link": "https://stackoverflow.com/users/8822976/fishbone"}, "edited": false, "score": 1, "creation_date": 1533854820, "post_id": 51776653, "comment_id": 90511842, "body": "But I don&#39;t want <code>y</code> itself to be mutable. Here I&#39;d like the value borrowed by <code>y</code> to be mutable. In this example, <code>z</code> will have the ability to change the value of <code>y</code>, like <code>*z = &amp;mut i;</code>,  which is not what I want."}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1533855121, "post_id": 51776653, "comment_id": 90511921, "body": "This is not possible here. When looking at my second snippet, you can see why: You cannot borrow a reference as mutable if the reference itself is not mutable."}, {"owner": {"reputation": 11, "user_id": 8822976, "user_type": "registered", "profile_image": "https://graph.facebook.com/1975503506042184/picture?type=large", "display_name": "fishbone", "link": "https://stackoverflow.com/users/8822976/fishbone"}, "edited": false, "score": 0, "creation_date": 1533855597, "post_id": 51776653, "comment_id": 90512032, "body": "In this case we&#39;d like to put <code>z</code> in a block. To be specific, what I mean is like this one <a href=\"https://gist.github.com/1dbd220e8685911086b109e3652f78b1\" rel=\"nofollow noreferrer\">example code</a>. And I still don&#39;t understand why <code>mut</code> is necessary even <code>*z</code> has the same type as <code>y</code>."}], "tags": [], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "is_accepted": false, "score": -1, "last_activity_date": 1533854801, "last_edit_date": 1533854801, "creation_date": 1533854398, "answer_id": 51776653, "question_id": 51776161, "link": "https://stackoverflow.com/questions/51776161/why-cant-i-update-a-value-through-an-immutable-reference-of-a-mutable-reference/51776653#51776653", "title": "Why can&#39;t I update a value through an immutable reference of a mutable reference of a mutable value?", "body": "<p>You missed a few <code>mut</code>:</p>\n\n<pre><code>fn main() {\n    let mut x: i32 = 10;\n    {\n        let mut y: &amp;mut i32 = &amp;mut x;\n        *y += 10;\n        println!(\"y={}\", *y);\n        let z: &amp;mut &amp;mut i32 = &amp;mut y;\n        println!(\"z={}\", z); // output: z=20\n        println!(\"*z={}\", *z); // output: *z=20\n        println!(\"**z={}\", **z); // output: **z=20\n\n        **z += 10;\n    }\n    println!(\"x={}\", x);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=ccc47560055b66038199f6157b5609fa&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<ul>\n<li>you want <code>y</code> to be mutable -> <code>let mut y</code>.</li>\n<li>you want <code>&amp;y</code> to be mutable -> <code>... = &amp;mut y</code>.</li>\n<li>you want to assign it to a <code>&amp;mut z</code> and reference this as mutable => <code>let z: &amp;mut &amp;mut i32 = ...</code></li>\n</ul>\n\n<p>I think it's more intuitive when omiting the type:</p>\n\n<pre><code>fn main() {\n    let mut x = 10;\n    {\n        let mut y = &amp;mut x;\n        *y += 10;\n        println!(\"y={}\", *y);\n        let z = &amp;mut y;\n\n        **z += 10;\n    }\n    println!(\"x={}\", x);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=0400c680a81fa19532d5bdc261a72820&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a></p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1533916702, "post_id": 51789056, "comment_id": 90537734, "body": "<i><code>&amp;mut</code> references are really unique references: they cannot be aliased</i> \u2014 nitpick: <a href=\"https://play.rust-lang.org/?gist=1efac93dfa7b254c8afa0b002f62f3e9&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">the <b>references</b> can be aliased, the referred-to-value may not</a>. While we are usually pretty lax around this terminology, in questions specific to these details it&#39;s worth being very specific. There are a few other issues of this kind in the answer."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1533920276, "post_id": 51789056, "comment_id": 90539434, "body": "@Shepmaster I&#39;m using the term the same way the Nomicon does: <a href=\"https://doc.rust-lang.org/nomicon/aliasing.html#aliasing\" rel=\"nofollow noreferrer\">variables and pointers alias if they refer to overlapping regions of memory.</a> There are arguments to be had about liveness and reborrowing but I don&#39;t agree that your example demonstrates aliasing of a <code>&amp;mut</code> reference."}, {"owner": {"reputation": 11, "user_id": 8822976, "user_type": "registered", "profile_image": "https://graph.facebook.com/1975503506042184/picture?type=large", "display_name": "fishbone", "link": "https://stackoverflow.com/users/8822976/fishbone"}, "edited": false, "score": 0, "creation_date": 1533935579, "post_id": 51789056, "comment_id": 90545846, "body": "Thanks for the answer. After reading it, somehow I get the feeling that <code>&amp;</code> is only a concept for the language and if we have  <code>let y : &amp;mut 32 = &amp;mut x;</code> actually for compiler, if without any optimization, we won&#39;t have <code>y</code> allocated in the stack, am I right?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 11, "user_id": 8822976, "user_type": "registered", "profile_image": "https://graph.facebook.com/1975503506042184/picture?type=large", "display_name": "fishbone", "link": "https://stackoverflow.com/users/8822976/fishbone"}, "edited": false, "score": 0, "creation_date": 1533950843, "post_id": 51789056, "comment_id": 90548776, "body": "@fishbone I&#39;m not sure what you mean exactly. If you&#39;re familiar with C, Rust&#39;s underlying execution model is essentially the same as C&#39;s, but <code>&amp;</code> and <code>&amp;mut</code> references are language features that allow the compiler to more easily reason about relationships that would be hard or impossible to express in C. Does that begin to address your question?"}, {"owner": {"reputation": 11, "user_id": 8822976, "user_type": "registered", "profile_image": "https://graph.facebook.com/1975503506042184/picture?type=large", "display_name": "fishbone", "link": "https://stackoverflow.com/users/8822976/fishbone"}, "edited": false, "score": 0, "creation_date": 1533952600, "post_id": 51789056, "comment_id": 90548994, "body": "@trentcl thanks for the explanation. It&#39;s very clear."}], "tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": false, "score": 4, "last_activity_date": 1533912589, "last_edit_date": 1592644375, "creation_date": 1533912589, "answer_id": 51789056, "question_id": 51776161, "link": "https://stackoverflow.com/questions/51776161/why-cant-i-update-a-value-through-an-immutable-reference-of-a-mutable-reference/51789056#51789056", "title": "Why can&#39;t I update a value through an immutable reference of a mutable reference of a mutable value?", "body": "<h1><code>mut</code> is short for <code>unique</code></h1>\n<p>There's a blurry line between &quot;mutable&quot; and &quot;unique&quot;, but &quot;mutable&quot; may lead to the wrong intuition in this case. <code>&amp;mut</code> references are really <em>unique</em> references: they cannot be aliased. If you have a <code>&amp;mut T</code>, you know that <em>while the reference exists</em>, the <code>T</code> will not be accessed (either to mutate or just to read) through <em>any</em> other reference.</p>\n<p>(Although you normally need a unique reference to mutate a value, there are references that allow both aliasing and mutation. <code>&amp;Cell&lt;T&gt;</code> is one: you don't need unique access to a <code>Cell</code> to mutate its contents. <code>&amp;mut</code> references are always unique.)</p>\n<p>The compiler may use the knowledge that a <code>&amp;mut</code> reference cannot be aliased to perform optimizations. The <a href=\"https://doc.rust-lang.org/nomicon/aliasing.html\" rel=\"nofollow noreferrer\">Aliasing section of the Rustonomicon</a> has some more details.</p>\n<h1><code>&amp;</code> references are shared references</h1>\n<p><code>&amp;</code> references, on the other hand, can always be aliased by other <code>&amp;</code> references. Anything that requires unique access to a <code>T</code> must guarantee that no other reference can be used to access the <code>T</code>. But a <code>&amp;&amp;mut T</code> can't guarantee that, because it could be aliased by <em>another</em> <code>&amp;&amp;mut T</code> -- exclusive access to the <code>T</code> is not preserved. But you can still use a <code>&amp;&amp;mut T</code> to get a regular <code>&amp;T</code>, because that doesn't require unique access to the <code>&amp;mut T</code>.</p>\n<p>Naturally, this is all enforced by Rust's type system. Consider how <code>Deref</code> and <code>DerefMut</code> are defined:</p>\n<ol>\n<li><a href=\"https://doc.rust-lang.org/std/ops/trait.Deref.html#tymethod.deref\" rel=\"nofollow noreferrer\"><code>Deref::deref</code></a> takes <code>&amp;self</code> and returns <code>&amp;Self::Target</code>. So you don't need unique access to <code>self</code> to get shared access to <code>*self</code>.</li>\n<li><a href=\"https://doc.rust-lang.org/std/ops/trait.DerefMut.html#tymethod.deref_mut\" rel=\"nofollow noreferrer\"><code>DerefMut::deref_mut</code></a> takes <code>&amp;mut self</code> to return <code>&amp;mut Self::Target</code>. So you <em>do</em> need unique access to <code>self</code> to get unique access to <code>*self</code>.</li>\n</ol>\n<p>And one more thing prevents you from getting a <code>&amp;mut T</code> by simply dereferencing a <code>&amp;&amp;mut T</code>:</p>\n<ol start=\"3\">\n<li><code>&amp;mut</code> references don't implement <a href=\"https://doc.rust-lang.org/std/marker/trait.Copy.html\" rel=\"nofollow noreferrer\"><code>Copy</code></a>.</li>\n</ol>\n"}], "owner": {"reputation": 11, "user_id": 8822976, "user_type": "registered", "profile_image": "https://graph.facebook.com/1975503506042184/picture?type=large", "display_name": "fishbone", "link": "https://stackoverflow.com/users/8822976/fishbone"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 491, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1533948962, "creation_date": 1533851011, "last_edit_date": 1533948962, "question_id": 51776161, "link": "https://stackoverflow.com/questions/51776161/why-cant-i-update-a-value-through-an-immutable-reference-of-a-mutable-reference", "title": "Why can&#39;t I update a value through an immutable reference of a mutable reference of a mutable value?", "body": "<p>I found the following hard to understand:</p>\n\n<pre><code>fn main() {\n    let mut x: i32 = 10;\n    {\n        let y: &amp;mut i32 = &amp;mut x;\n        *y += 10;\n        println!(\"y={}\", *y);\n        let z: &amp;&amp;mut i32 = &amp;y;\n\n        // z += 10; // error[E0368]: binary assignment operation `+=` cannot be applied to type `&amp;mut i32`\n        // *z += 10; // binary assignment operation `+=` cannot be applied to type `&amp;mut i32`\n        // **z += 10; //cannot assign to data in a `&amp;` reference\n    }\n    println!(\"x={}\", x);\n}\n</code></pre>\n\n<p>When I include <code>*z += 10</code>, the error message is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0368]: binary assignment operation `+=` cannot be applied to type `&amp;mut i32`\n  --&gt; src/main.rs:10:9\n   |\n10 |         *z += 10; // binary assignment operation `+=` cannot be applied to type `&amp;mut i32`\n   |         --^^^^^^\n   |         |\n   |         cannot use `+=` on type `&amp;mut i32`\n   |\n   = help: `+=` can be used on 'i32', you can dereference `*z`: `**z`\n</code></pre>\n\n<p>which is exactly the same as <code>y += 10;</code></p>\n\n<p>Since <code>*z</code> has the type <code>&amp;mut i32</code>, which is the same as <code>y</code>, why can <code>*y</code> be used to update the value of <code>x</code>, but <code>**z</code> can't?</p>\n"}, {"tags": ["rust", "closures"], "answers": [{"comments": [{"owner": {"reputation": 1, "user_id": 1114, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/FFE8V.gif?s=128&g=1", "display_name": "Jeremy", "link": "https://stackoverflow.com/users/1114/jeremy"}, "edited": false, "score": 0, "creation_date": 1533831565, "post_id": 51771574, "comment_id": 90502294, "body": "Thanks Shep. The point that most caught me was that I thought adding <code>&#39;static</code> meant I was somehow declaring that my data must live forever, but after reading <a href=\"https://stackoverflow.com/a/40053649/1114\">this answer</a> you linked, it finally clicked that I&#39;m just saying that my data can&#39;t have any references that aren&#39;t themselves <code>&#39;static</code>, which does make sense (I don&#39;t intend for it to have <i>any</i> references)."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1533831697, "last_edit_date": 1533831697, "creation_date": 1533830688, "answer_id": 51771574, "question_id": 51771465, "link": "https://stackoverflow.com/questions/51771465/can-you-use-impl-fn-to-accept-arbitrarily-sized-closures-as-arguments/51771574#51771574", "title": "Can you use impl Fn to accept arbitrarily-sized closures as arguments?", "body": "<blockquote>\n  <p>Can you use impl Fn to accept arbitrarily-sized closures as arguments?</p>\n</blockquote>\n\n<p>Yes. </p>\n\n<p><code>impl trait</code> in argument position is the exact same as a generic. These are identical:</p>\n\n<pre><code>fn foo1(_: impl Fn(u8) -&gt; i8) {}\n</code></pre>\n\n\n\n<pre><code>fn foo2&lt;F&gt;(_: F)\nwhere\n    F: Fn(u8) -&gt; i8,\n{}\n</code></pre>\n\n<p>This is in fact the <em>generally preferred</em> way to accept a closure (or many other trait implementations) because it allows the compiler to <em>monomorphize</em> the result and avoids any unneeded indirection.</p>\n\n<hr>\n\n<p>Compiling your code has this help text (<a href=\"https://github.com/rust-lang/rust/issues/50817\" rel=\"nofollow noreferrer\">which currently has some rendering glitches</a>):</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>help: consider adding an explicit lifetime bound `impl Fn(&amp;mut State): 'static`...\n   |\n8  |     fn apply(&amp;mut self, update: impl Fn(&amp;mut State): 'static +  {\n   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>What it means to say is to add <code>+ 'static</code>:</p>\n\n<pre><code>fn apply(&amp;mut self, update: impl Fn(&amp;mut State) + 'static)\n</code></pre>\n\n<p>This works.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/47929824/155423\">What makes `impl Trait` as an argument &quot;universal&quot; and as a return value &quot;existential&quot;?</a></li>\n<li><a href=\"https://stackoverflow.com/q/42028470/155423\">Why is adding a lifetime to a trait with the plus operator (Iterator&lt;Item = &amp;Foo&gt; + &#39;a) needed?</a></li>\n<li><a href=\"https://stackoverflow.com/q/40053550/155423\">The compiler suggests I add a &#39;static lifetime because the parameter type may not live long enough, but I don&#39;t think that&#39;s what I want</a></li>\n</ul>\n"}], "owner": {"reputation": 1, "user_id": 1114, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/FFE8V.gif?s=128&g=1", "display_name": "Jeremy", "link": "https://stackoverflow.com/users/1114/jeremy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 271, "favorite_count": 0, "accepted_answer_id": 51771574, "answer_count": 1, "score": 0, "last_activity_date": 1533831697, "creation_date": 1533830331, "question_id": 51771465, "link": "https://stackoverflow.com/questions/51771465/can-you-use-impl-fn-to-accept-arbitrarily-sized-closures-as-arguments", "title": "Can you use impl Fn to accept arbitrarily-sized closures as arguments?", "body": "<p>I have a <code>History</code> type which contains an initial state, a current state, and a list of closures with every change required to compute the current state from the initial state. These are applied with an <code>.apply(...)</code> method which takes a boxed closure, uses it to modify the current state, and adds it to the list. Because I want these to be deterministically reusable they are <code>Fn</code>, not <code>FnMut</code> or <code>FnOnce</code>.</p>\n\n<pre><code>struct History&lt;State: Clone&gt; {\n    initial: State,\n    current: State,\n    updates: Vec&lt;Box&lt;dyn Fn(&amp;mut State)&gt;&gt;,\n}\n\nimpl&lt;State: Clone&gt; History&lt;State&gt; {\n    fn apply(&amp;mut self, update: Box&lt;dyn Fn(&amp;mut State)&gt;) {\n        update(&amp;mut self.current);\n        self.updates.push(update);\n    }\n}\n</code></pre>\n\n<p>I am currently taking closures as <code>Box&lt;dyn Fn(&amp;mut State)&gt;</code>, and it works fine:</p>\n\n<pre><code>fn main() {\n    let mut history = History::&lt;usize&gt; {\n        initial: 0,\n        current: 0,\n        updates: vec![],\n    };\n\n    let delta = 10;\n    history.apply(Box::new(move |mut value| *value += delta));\n\n    println!(\"{}\", history.current);\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>10\n</code></pre>\n\n<p>This got me thinking about whether it would be possible for a method to accept arbitrary <em>unboxed</em> closures by using <code>impl Trait</code> instead of <code>dyn Trait</code>. In this case, our method could box the closures itself, so the call site would become:</p>\n\n<pre><code>    history.apply(move |mut value| *value += delta);\n</code></pre>\n\n<p><em>(Please entertain the question of whether this is even possible, even if it's a bad idea in this case.)</em></p>\n\n<p>I am imagining that each closure site is like a distinct data type, instantiated with the enclosed values each time it's used, so <code>impl</code> Trait could specialize the method for each implicit closure like it does for each explicit type. But I'm not sure whether Rust actually works like that.</p>\n\n<p>However, when I try making the change in the code, I get a new lifetime error:</p>\n\n<pre><code>    fn apply(&amp;mut self, update: impl Fn(&amp;mut State)) {\n        update(&amp;mut self.current);\n        self.updates.push(Box::new(update));\n    }\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0310]: the parameter type `impl Fn(&amp;mut State)` may not live long enough\n  --&gt; src/main.rs:10:27\n   |\n10 |         self.updates.push(Box::new(update));\n   |                           ^^^^^^^^^^^^^^^^\n   |\nnote: ...so that the type `impl Fn(&amp;mut State)` will meet its required lifetime bounds\n  --&gt; src/main.rs:10:27\n   |\n10 |         self.updates.push(Box::new(update));\n   |                           ^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>This confuses me. I'm not sure where there's a reference that could be going bad.</p>\n\n<p>In my head, the entire closure state is now being moved into <code>apply</code> via the <code>impl Fn</code> parameter, then moved into a <code>Box</code> that is owned by <code>self</code>. But it's complaining that I can't move the contents to a box, because I have a potentially-stale reference, not just owned data? Where am I borrowing anything? Why didn't this occur when I boxed the closure directly in <code>main</code> instead of in <code>apply</code>?</p>\n\n<hr>\n\n<p>Is it possible to use <code>impl Fn</code> to accept an (arbitrarily-sized) closure as an argument? If so, how?</p>\n"}, {"tags": ["firefox", "rust", "browser-addons"], "comments": [{"owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "edited": false, "score": 0, "creation_date": 1533814037, "post_id": 51765062, "comment_id": 90490043, "body": "Related: <a href=\"https://stackoverflow.com/questions/851109/what-programming-language-required-to-created-a-firefox-plugin\" title=\"what programming language required to created a firefox plugin\">stackoverflow.com/questions/851109/&hellip;</a>"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1533816115, "post_id": 51765062, "comment_id": 90491481, "body": "Hum, I doubt that Rust would be an user-friendly way to write add-ons. There is no Rust ABI, so you have to use the C ABI with FFI. Related: <a href=\"https://stackoverflow.com/questions/44708483/idiomatic-rust-plugin-system/44715785\" title=\"idiomatic rust plugin system\">stackoverflow.com/questions/44708483/&hellip;</a>"}, {"owner": {"reputation": 199, "user_id": 8572843, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Jf3W8.png?s=128&g=1", "display_name": "gotocoffee", "link": "https://stackoverflow.com/users/8572843/gotocoffee"}, "edited": false, "score": 2, "creation_date": 1533822432, "post_id": 51765062, "comment_id": 90496136, "body": "Maybe you can write them in rust and compile them to WebAsm. But i dont know if WebExtensions support WebAsm."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1533827673, "post_id": 51765062, "comment_id": 90499782, "body": "@Boiethios There is no C ABI, it&#39;s the Operating system ABI if you want but C same as Rust don&#39;t define their ABI in their specification."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 199, "user_id": 8572843, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Jf3W8.png?s=128&g=1", "display_name": "gotocoffee", "link": "https://stackoverflow.com/users/8572843/gotocoffee"}, "edited": false, "score": 0, "creation_date": 1533827787, "post_id": 51765062, "comment_id": 90499863, "body": "@gotocoffee If it does not, you should bring up the idea because it is a nice one!"}], "answers": [{"tags": [], "owner": {"reputation": 1906, "user_id": 38820, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a572775f003705896160fa44c4d26291?s=128&d=identicon&r=PG", "display_name": "Wes", "link": "https://stackoverflow.com/users/38820/wes"}, "is_accepted": false, "score": 2, "last_activity_date": 1534145459, "creation_date": 1534145459, "answer_id": 51817273, "question_id": 51765062, "link": "https://stackoverflow.com/questions/51765062/can-you-use-rust-to-write-firefox-add-ons-extensions/51817273#51817273", "title": "Can you use Rust to write Firefox add-ons/extensions?", "body": "<p>I don't think it is possible to write a complete add-on in Rust. Although you could use Native Messaging to communicate from the add-on to a binary built with Rust. When an add-on uses native messaging the browser starts a native binary on the system and exchanges messages encoded in JSON over stdio.</p>\n\n<p>Mozilla has <a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/Native_messaging\" rel=\"nofollow noreferrer\">detailed information about native messaging on MDN</a>.</p>\n"}, {"tags": [], "owner": {"reputation": 2833, "user_id": 5008962, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/dEV9B.png?s=128&g=1", "display_name": "rugk", "link": "https://stackoverflow.com/users/5008962/rugk"}, "is_accepted": false, "score": 5, "last_activity_date": 1550559118, "last_edit_date": 1550559118, "creation_date": 1550506708, "answer_id": 54751390, "question_id": 51765062, "link": "https://stackoverflow.com/questions/51765062/can-you-use-rust-to-write-firefox-add-ons-extensions/54751390#54751390", "title": "Can you use Rust to write Firefox add-ons/extensions?", "body": "<p>Nowadays, you can do with WebExtensions and <a href=\"https://webassembly.org/\" rel=\"noreferrer\">WebAssembly</a> (<a href=\"https://developer.mozilla.org/docs/WebAssembly/Rust_to_wasm\" rel=\"noreferrer\">guide how to compile here</a>). You then just embed it as <code>wasm</code> code in your add-on like in any website.</p>\n\n<p>This <a href=\"https://github.com/lukaslueg/macro_railroad_ext\" rel=\"noreferrer\">add-on e.g. did so</a>. (<a href=\"https://www.reddit.com/r/rust/comments/a40yfr/can_i_write_a_firefox_webextension_in_rust/\" rel=\"noreferrer\">found on reddit</a>)</p>\n"}], "owner": {"reputation": 269, "user_id": 9025957, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/7v7wS.png?s=128&g=1", "display_name": "typo", "link": "https://stackoverflow.com/users/9025957/typo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1952, "favorite_count": 1, "closed_date": 1550527372, "answer_count": 2, "score": 9, "last_activity_date": 1550559118, "creation_date": 1533811953, "last_edit_date": 1533815512, "question_id": 51765062, "link": "https://stackoverflow.com/questions/51765062/can-you-use-rust-to-write-firefox-add-ons-extensions", "closed_reason": "Needs more focus", "title": "Can you use Rust to write Firefox add-ons/extensions?", "body": "<p>Mozilla has the <a href=\"https://wiki.mozilla.org/Oxidation\" rel=\"noreferrer\">Oxidation project</a>:</p>\n\n<blockquote>\n  <p>The goal of Oxidation is to make it easier and more pleasant to use Rust in Firefox, and correspondingly to increase the amount of Rust code in Firefox. </p>\n</blockquote>\n\n<p>But it does not mention anything about whether Rust is supported for add-ons or not.</p>\n"}, {"tags": ["concurrency", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1533832995, "post_id": 51762512, "comment_id": 90503029, "body": "<i>Don&#39;t communicate by sharing memory; share memory by communicating.</i>"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1533833026, "post_id": 51762512, "comment_id": 90503044, "body": "I think your approach is a bit wrong. You will never need more than three threads, one per row. Each row will process its cells from left to right. Processing a cell will block on its down neighbour being ready (it&#39;s left neighbour <i>must</i> be ready)"}, {"owner": {"reputation": 4068, "user_id": 862193, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/60a062a625895665d619c40b96f82d6a?s=128&d=identicon&r=PG", "display_name": "Tim", "link": "https://stackoverflow.com/users/862193/tim"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1533834688, "post_id": 51762512, "comment_id": 90503909, "body": "@PeterHall, I agree that it is wrong. The problem is the threads need to be diagonal across the grid. If the dependency was simply one way, it would be easy. Shepmaster, are you saying that the shared memory is the data and biquad and should be fetched upon receiving the message? I tried that, but I run into the same problem once the thread in the pool tries to get shared data, it needs to borrow it from somewhere..."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1533838488, "post_id": 51762512, "comment_id": 90505672, "body": "<i>once the thread in the pool tries to get shared data, it needs to borrow it from somewhere</i> \u2014 but why share anything at all, especially mutable things? Fan out the work to threads, send it back to one thread to store it somewhere. Otherwise, you are very likely to be strung out to dry by false sharing."}, {"owner": {"reputation": 4068, "user_id": 862193, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/60a062a625895665d619c40b96f82d6a?s=128&d=identicon&r=PG", "display_name": "Tim", "link": "https://stackoverflow.com/users/862193/tim"}, "edited": false, "score": 0, "creation_date": 1533838665, "post_id": 51762512, "comment_id": 90505754, "body": "There&#39;s a performance hit if each thread has to work on a copy of the data."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1533838844, "post_id": 51762512, "comment_id": 90505850, "body": "You cannot make such a statement about this code because you don&#39;t have working code to benchmark. Are you already aware of false sharing? Are you preventing it somehow? That&#39;s a straightforward case of when sharing makes your code slower. Additionally, there are multiple ways to <i>transfer</i> ownership of something instead of <i>copying</i> it."}, {"owner": {"reputation": 4068, "user_id": 862193, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/60a062a625895665d619c40b96f82d6a?s=128&d=identicon&r=PG", "display_name": "Tim", "link": "https://stackoverflow.com/users/862193/tim"}, "edited": false, "score": 0, "creation_date": 1533839249, "post_id": 51762512, "comment_id": 90506035, "body": "I said borrow, but you&#39;re correct what I really want is ownership transfer (which is what the sample code doing by sending slices and biquads to the receiver, right?) I think the problem is to transfer the ownership of both the biquad and the slice of input data to the thread that is doing the work, but once that thread is done, to transfer the data and biquad to new, but different threads."}], "owner": {"reputation": 4068, "user_id": 862193, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/60a062a625895665d619c40b96f82d6a?s=128&d=identicon&r=PG", "display_name": "Tim", "link": "https://stackoverflow.com/users/862193/tim"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 102, "favorite_count": 0, "answer_count": 0, "score": 3, "last_activity_date": 1533832933, "creation_date": 1533804240, "last_edit_date": 1533832933, "question_id": 51762512, "link": "https://stackoverflow.com/questions/51762512/preventing-multiple-borrows-in-concurrent-operations", "title": "Preventing multiple borrows in concurrent operations", "body": "<p>I'm trying to parallelize an infinite impulse response filter, represented as a cascade of biquads:</p>\n\n<p><a href=\"https://i.stack.imgur.com/QEMpy.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/QEMpy.png\" alt=\"An infinite impulse response filter, represented as a cascade of biquads\"></a></p>\n\n<p>The input data is divided into 5 chunks (the columns). The IIR has 3 biquad cascades (the rows). To run a biquad (one of the blocks), both the data to the immediate left and below the block must have been computed. The number in the block represents the earliest ordering of computation possible for that block.</p>\n\n<p>I'm using <a href=\"https://doc.rust-lang.org/std/sync/mpsc/index.html\" rel=\"nofollow noreferrer\"><code>mpsc</code></a> and <a href=\"https://crates.io/crates/scoped_threadpool\" rel=\"nofollow noreferrer\">scoped_threadpool</a> to try and build an algorithm that can compute as many blocks in parallel as possible.</p>\n\n<pre><code>extern crate scoped_threadpool;\n\nuse scoped_threadpool::Pool;\nuse std::sync::mpsc::channel;\n\nfn main() {}\n\npub struct BiQuad {}\n\nimpl BiQuad {\n    pub fn new() -&gt; BiQuad {\n        BiQuad {}\n    }\n\n    #[inline]\n    pub fn apply(&amp;mut self, _data: &amp;mut [f64]) {}\n}\n\npub struct Filter {\n    biquads: Vec&lt;BiQuad&gt;,\n}\n\nimpl Filter {\n    pub fn new() -&gt; Filter {\n        Filter {\n            biquads: Vec::new(),\n        }\n    }\n\n    pub fn add_biquad(&amp;mut self, biquad: BiQuad) {\n        self.biquads.push(biquad);\n    }\n\n    pub fn apply_concurrently(&amp;mut self, data: &amp;mut [f64], threads: usize) {\n        apply_concurrently_internal(&amp;mut self.biquads, data, threads);\n    }\n}\n\nfn apply_concurrently_internal(biquads: &amp;mut [BiQuad], data: &amp;mut [f64], threads: usize) {\n    if !biquads.is_empty() {\n        let mut pool = Pool::new(threads as u32);\n        let (tx, rx) = channel();\n        let tx2 = tx.clone();\n        let chunk_size = data.len() / threads;\n\n        tx.send((0, 0, data.split_at_mut(chunk_size), biquads.split_at_mut(1)));\n\n        pool.scoped(|scope| {\n            loop {\n                match rx.recv() {\n                    Ok((\n                        biquad,\n                        block,\n                        (chunk_data, remaining),\n                        (current_biquad, cascading_biquads),\n                    )) =&gt; {\n                        let inner_tx = tx2.clone();\n\n                        println!(\"got here: {} - {}\", biquad, block);\n\n                        scope.execute(move || {\n                            current_biquad[0].apply(chunk_data);\n\n                            //Move horizontally (through data)\n                            inner_tx.send((\n                                biquad,\n                                block + 1,\n                                remaining.split_at_mut(chunk_size),\n                                (current_biquad, cascading_biquads),\n                            ));\n\n                            //Move vertically (cascade)\n                            inner_tx.send((\n                                biquad + 1,\n                                block,\n                                (chunk_data, &amp;mut []),\n                                cascading_biquads.split_at_mut(1),\n                            ));\n                        });\n                    }\n                    Err(_) =&gt; break,\n                }\n            }\n        });\n    }\n}\n</code></pre>\n\n<p>(<a href=\"http://play.rust-lang.org/?gist=087b4bcee4311ff86920c55c72a81c6c&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a>)</p>\n\n<p>After computing the first block, I want to signal that 2 blocks are available (1,0 and 0,1). The slice of biquads cannot be sent to both blocks, that's a borrow violation:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `*cascading_biquads` as mutable more than once at a time\n  --&gt; src/main.rs:77:33\n   |\n69 |                                 (current_biquad, cascading_biquads),\n   |                                                  ----------------- first mutable borrow occurs here\n...\n77 |                                 cascading_biquads.split_at_mut(1),\n   |                                 ^^^^^^^^^^^^^^^^^ second mutable borrow occurs here\n78 |                             ));\n79 |                         });\n   |                         - first borrow ends here\n</code></pre>\n\n<p>Furthermore, as written, there's nothing preventing block 2,2 from being executed 3rd instead of at least 4th.</p>\n\n<p>Is this a problem I can solve elegantly with Rust's (fearless!) concurrency features? Are there any patterns for working around cases where concurrent operations both share data and have dependencies on one another?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 4, "creation_date": 1533787636, "post_id": 51758485, "comment_id": 90476555, "body": "It&#39;s idiomatic rust to omit <code>return</code> at the end of functions. Just write <code>max_width</code> (without semicolon)."}], "answers": [{"comments": [{"owner": {"reputation": 12494, "user_id": 1402929, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/IORgE.jpg?s=128&g=1", "display_name": "Matt Harrison", "link": "https://stackoverflow.com/users/1402929/matt-harrison"}, "reply_to_user": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1533787676, "post_id": 51758573, "comment_id": 90476564, "body": "Thanks, I&#39;ll update. Do <code>&amp;String</code>&#39;s also deref to <code>&amp;str</code> and would you not pass that instead? I thought maybe OP being new to Rust just wanted to iterate a bunch of strings and a Vec seemed like an easy way to do that. The generic solution is interesting though."}, {"owner": {"reputation": 5853, "user_id": 19422, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8cf18c576cd2dd6a3186ee059ceb72a6?s=128&d=identicon&r=PG", "display_name": "pjf", "link": "https://stackoverflow.com/users/19422/pjf"}, "edited": false, "score": 0, "creation_date": 1533801248, "post_id": 51758573, "comment_id": 90482060, "body": "My apologies, I should have added my use case! I was unpacking fields from a vector of structs (<code>max_width(recipes.iter().map(|x| &amp;x.name))</code>) so I already had an iterator, hence the function using that instead of a vector."}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "reply_to_user": {"reputation": 5853, "user_id": 19422, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8cf18c576cd2dd6a3186ee059ceb72a6?s=128&d=identicon&r=PG", "display_name": "pjf", "link": "https://stackoverflow.com/users/19422/pjf"}, "edited": false, "score": 1, "creation_date": 1533803394, "post_id": 51758573, "comment_id": 90483354, "body": "@pjf If you may consider replacing it with this: <code>recipes.iter().map(|x| x.name.len()).max().unwrap_or(0)</code>"}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1533803448, "post_id": 51758573, "comment_id": 90483387, "body": "You may add your use case to the question as well :)"}], "tags": [], "owner": {"reputation": 12494, "user_id": 1402929, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/IORgE.jpg?s=128&g=1", "display_name": "Matt Harrison", "link": "https://stackoverflow.com/users/1402929/matt-harrison"}, "is_accepted": false, "score": 1, "last_activity_date": 1533788060, "last_edit_date": 1533788060, "creation_date": 1533786808, "answer_id": 51758573, "question_id": 51758485, "link": "https://stackoverflow.com/questions/51758485/why-cant-i-use-iteratoritem-string-as-an-iterator/51758573#51758573", "title": "Why can&#39;t I use `&amp;Iterator&lt;Item = &amp;String&gt;` as an iterator?", "body": "<p>If you don't specifically need the generality of iterating over any given iterator, a simpler way to write the function is to have your <code>max_width</code> function take a <code>&amp;[&amp;str]</code> (A slice of string slices) instead. You can use a slice in a <code>for</code> loop because Rust knows how to turn that into an iterator (it implements <code>IntoIterator</code> trait):</p>\n\n<pre><code>fn max_width(strings: &amp;[&amp;str]) -&gt; usize {\n    let mut max_width = 0;\n    for string in strings {\n        if string.len() &gt; max_width {\n            max_width = string.len();\n        }\n    }\n    return max_width;\n}\n\nfn main() {\n    let strings = vec![\n        \"following\",\n        \"function\",\n        \"supposed\",\n        \"return\",\n        \"longest\",\n        \"string\",\n        \"length\"\n    ];\n\n    let max_width = max_width(&amp;strings);\n\n    println!(\"Longest string had size {}\", max_width);\n}\n\n// OUTPUT: Longest string had size 9\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=4770d47bd942799b0eb1bd451d34b363&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Playground here</a></p>\n"}, {"comments": [{"owner": {"reputation": 5853, "user_id": 19422, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8cf18c576cd2dd6a3186ee059ceb72a6?s=128&d=identicon&r=PG", "display_name": "pjf", "link": "https://stackoverflow.com/users/19422/pjf"}, "edited": false, "score": 0, "creation_date": 1533788096, "post_id": 51758645, "comment_id": 90476666, "body": "This works, but I&#39;m struggling to understand the semantics. I get that <code>Iterator</code> is a trait (and thus could be anything that implements that trait), but I&#39;m confused about the <code>impl</code> keyword in this context. How does that end up with us having a known size when we didn&#39;t have it before?"}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "reply_to_user": {"reputation": 5853, "user_id": 19422, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8cf18c576cd2dd6a3186ee059ceb72a6?s=128&d=identicon&r=PG", "display_name": "pjf", "link": "https://stackoverflow.com/users/19422/pjf"}, "edited": false, "score": 0, "creation_date": 1533788434, "post_id": 51758645, "comment_id": 90476751, "body": "I recommend reading <a href=\"https://rust-lang-nursery.github.io/edition-guide/2018/transitioning/traits/impl-trait.html\" rel=\"nofollow noreferrer\">this</a>. Basically, it&#39;s the same as <code>fn max_width&lt;&#39;a, T: Iterator&lt;Item = &amp;&#39;a String&gt;(strings: T) -&gt; usize</code>."}, {"owner": {"reputation": 5853, "user_id": 19422, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8cf18c576cd2dd6a3186ee059ceb72a6?s=128&d=identicon&r=PG", "display_name": "pjf", "link": "https://stackoverflow.com/users/19422/pjf"}, "edited": false, "score": 3, "creation_date": 1533792419, "post_id": 51758645, "comment_id": 90477930, "body": "Oh! So <code>Iterator</code> <i>is the trait itself</i>, and <code>impl Iterator</code> is something that implements that trait. Thank you so much!!"}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "reply_to_user": {"reputation": 3359, "user_id": 5950725, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/6uR5y.jpg?s=128&g=1", "display_name": "Tom", "link": "https://stackoverflow.com/users/5950725/tom"}, "edited": false, "score": 1, "creation_date": 1570737817, "post_id": 51758645, "comment_id": 103018552, "body": "Thanks @Tom. I think <a href=\"https://doc.rust-lang.org/edition-guide/rust-2018/trait-system/impl-trait-for-returning-complex-types-with-ease.html\" rel=\"nofollow noreferrer\">this section</a> matches the old link."}], "tags": [], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "is_accepted": true, "score": 15, "last_activity_date": 1533817673, "last_edit_date": 1533817673, "creation_date": 1533787356, "answer_id": 51758645, "question_id": 51758485, "link": "https://stackoverflow.com/questions/51758485/why-cant-i-use-iteratoritem-string-as-an-iterator/51758645#51758645", "title": "Why can&#39;t I use `&amp;Iterator&lt;Item = &amp;String&gt;` as an iterator?", "body": "<p>Your code fails because <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html\" rel=\"noreferrer\"><code>Iterator</code></a> is not the same as <code>&amp;Iterator</code>. You can fix this if you pass <code>Iterator</code> to your function, but since <code>Iterator</code> is a trait, the size cannot be determined (You can't know, what <code>Iterator</code> you are passing). The solution is to pass anything that implements <code>Iterator</code>:</p>\n\n<pre><code>fn max_width&lt;'a&gt;(strings: impl Iterator&lt;Item = &amp;'a String&gt;) -&gt; usize\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=afa2a7d70b42cdd6dcd50e2a6daa02e6&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"noreferrer\">playground</a></p>\n\n<hr>\n\n<p>For more experienced Rust users:</p>\n\n<p>The most generic way is probably this:</p>\n\n<pre><code>fn max_width&lt;T: AsRef&lt;str&gt;&gt;(strings: impl IntoIterator&lt;Item = T&gt;) -&gt; usize {\n    let mut max_width = 0;\n    for string in strings {\n        let string = string.as_ref();\n        if string.len() &gt; max_width {\n            max_width = string.len();\n        }\n    }\n    max_width\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=e2ab041731d4aeee1392ca45c7b158db&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"noreferrer\">playground</a></p>\n\n<p>However, you can also use </p>\n\n<pre><code>fn max_width&lt;T: AsRef&lt;str&gt;&gt;(strings: impl IntoIterator&lt;Item = T&gt;) -&gt; usize {\n    strings\n        .into_iter()\n        .map(|s| s.as_ref().len())\n        .max()\n        .unwrap_or(0)\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=cfcedd56e9b7e9005df22bb13d23b2a5&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"noreferrer\">playground</a></p>\n"}, {"comments": [{"owner": {"reputation": 889, "user_id": 1879192, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/54f9ed64051a86b03fe99f82805ac6d5?s=128&d=identicon&r=PG", "display_name": "Thierry", "link": "https://stackoverflow.com/users/1879192/thierry"}, "edited": false, "score": 1, "creation_date": 1533817191, "post_id": 51766586, "comment_id": 90492253, "body": "I prefer this answer since it also offers a solution close to OP&#39;s initial intent, using dynamic polymorphism."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 5, "last_activity_date": 1533818228, "last_edit_date": 1533818228, "creation_date": 1533816382, "answer_id": 51766586, "question_id": 51758485, "link": "https://stackoverflow.com/questions/51758485/why-cant-i-use-iteratoritem-string-as-an-iterator/51766586#51766586", "title": "Why can&#39;t I use `&amp;Iterator&lt;Item = &amp;String&gt;` as an iterator?", "body": "<p>The other answers show you <em>how</em> to accept an iterator, but gloss over answering your actual question:</p>\n\n<blockquote>\n  <p>Why can't I use <code>&amp;Iterator&lt;Item = &amp;String&gt;</code> as an iterator?</p>\n</blockquote>\n\n<p>Amusingly enough, you've prevented it yourself:</p>\n\n<blockquote>\n  <p>and I certainly don't want to mutate the passed argument</p>\n</blockquote>\n\n<p>Iterators work by mutating their target \u2014 that's how the iterator can change to return a new value for each call!</p>\n\n<pre><code>pub trait Iterator {\n    type Item;\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt;;\n    //       ^^^\n}\n</code></pre>\n\n<p>By taking in an immutable <em>trait object</em>, it's impossible for your iterator to update itself, thus it's impossible to actually iterate.</p>\n\n<p>The absolute smallest thing you can do to make your code compile is to accept a mutable reference: </p>\n\n<pre><code>fn max_width(strings: &amp;mut dyn Iterator&lt;Item = &amp;String&gt;) -&gt; usize\n</code></pre>\n\n<p>However, I'd probably write the function as:</p>\n\n<pre><code>fn max_width&lt;I&gt;(strings: I) -&gt; usize\nwhere\n    I: IntoIterator,\n    I::Item: AsRef&lt;str&gt;,\n{\n    strings\n        .into_iter()\n        .map(|s| s.as_ref().len())\n        .max()\n        .unwrap_or(0)\n}\n</code></pre>\n\n<ol>\n<li>Don't use an explicit <code>return</code></li>\n<li>Use iterator combinators like <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.map\" rel=\"nofollow noreferrer\"><code>map</code></a> and <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.max\" rel=\"nofollow noreferrer\"><code>max</code></a></li>\n<li>Use <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.unwrap_or\" rel=\"nofollow noreferrer\"><code>Option::unwrap_or</code></a> to provide a default.</li>\n<li>Use <a href=\"https://doc.rust-lang.org/std/iter/trait.IntoIterator.html\" rel=\"nofollow noreferrer\"><code>IntoIterator</code></a> to accept anything that can be made into an iterator.</li>\n</ol>\n"}], "owner": {"reputation": 5853, "user_id": 19422, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8cf18c576cd2dd6a3186ee059ceb72a6?s=128&d=identicon&r=PG", "display_name": "pjf", "link": "https://stackoverflow.com/users/19422/pjf"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5063, "favorite_count": 2, "accepted_answer_id": 51758645, "answer_count": 3, "score": 11, "last_activity_date": 1533818228, "creation_date": 1533786164, "last_edit_date": 1533815661, "question_id": 51758485, "link": "https://stackoverflow.com/questions/51758485/why-cant-i-use-iteratoritem-string-as-an-iterator", "title": "Why can&#39;t I use `&amp;Iterator&lt;Item = &amp;String&gt;` as an iterator?", "body": "<p>I have the following function that's supposed to find and return the longest length of a <code>String</code> given an <code>Iterator</code>:</p>\n\n<pre><code>fn max_width(strings: &amp;Iterator&lt;Item = &amp;String&gt;) -&gt; usize {\n    let mut max_width = 0;\n    for string in strings {\n        if string.len() &gt; max_width {\n            max_width = string.len();\n        }\n    }\n    return max_width;\n}\n</code></pre>\n\n<p>However, the compiler gives me the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `&amp;std::iter::Iterator&lt;Item=&amp;std::string::String&gt;: std::iter::Iterator` is not satisfied\n --&gt; src/main.rs:3:19\n  |\n3 |     for string in strings {\n  |                   ^^^^^^^ `&amp;std::iter::Iterator&lt;Item=&amp;std::string::String&gt;` is not an iterator; maybe try calling `.iter()` or a similar method\n  |\n  = help: the trait `std::iter::Iterator` is not implemented for `&amp;std::iter::Iterator&lt;Item=&amp;std::string::String&gt;`\n  = note: required by `std::iter::IntoIterator::into_iter`\n</code></pre>\n\n<p>I'm new to Rust, and terribly confused by this, since I thought I was explicitly passing in an iterator. Calling <code>strings.iter()</code> tells me that it is not implemented, and calling <code>strings.into_iter()</code> sends me down a mutability rabbit-hole, and I certainly don't want to mutate the passed argument.</p>\n\n<p>How can I iterate over my strings?</p>\n"}]