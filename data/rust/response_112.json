[{"tags": ["rust", "lifetime"], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 2, "last_activity_date": 1488417000, "creation_date": 1488417000, "answer_id": 42545103, "question_id": 42541298, "link": "https://stackoverflow.com/questions/42541298/cant-infer-lifetimes-when-using-refmap-with-trait-objects/42545103#42545103", "title": "Can&#39;t infer lifetimes when using Ref::map with trait objects", "body": "<p>The problem is with this signature:</p>\n\n<pre><code>fn a(&amp;self) -&gt; &amp;Foo { ... }\n</code></pre>\n\n<p>By the lifetime elision rules, this expands to:</p>\n\n<pre><code>fn a&lt;'b&gt;(&amp;'b self) -&gt; &amp;'b (Foo + 'b) { ... }\n</code></pre>\n\n<p>Whoa, what's that <code>+ 'b</code> bit?</p>\n\n<p>Trait objects have a lifetime bound that specifies the shortest lifetime of the references contained in the object. If the type doesn't contain any references, that lifetime bound will be <code>'static</code>.</p>\n\n<p>If you implement the trait on a type that contains references, for example a pair of references:</p>\n\n<pre><code>impl&lt;'a, 'b&gt; Foo for (&amp;'a u32, &amp;'b u32) {}\n</code></pre>\n\n<p>then you have a variable of type <code>&amp;Foo</code> that happens to be a reference to a <code>(&amp;'a u32, &amp;'b u32)</code> (to be clear, that's a reference to a pair of references), where did the lifetime information about the two <code>&amp;u32</code> references go? That's where the lifetime bound on the trait object comes in. The full expanded type of <code>&amp;Foo</code> will look like <code>&amp;'c (Foo + 'd)</code>, where <code>'d</code> is the shortest of <code>'a</code> and <code>'b</code> (or possibly even shorter, thanks to covariance).</p>\n\n<p>There are many other places where you didn't specify a lifetime bound explicitly. All places <em>expect the return type of a function</em> will default to a <code>'static</code> lifetime bound. That's what happens, for example, to the <code>Box&lt;Foo&gt;</code> in <code>struct A</code>: it's actually interpreted as <code>Box&lt;Foo + 'static&gt;</code>.</p>\n\n<hr>\n\n<p>The easy solution to your problem is to specify that <code>A::a</code> returns a trait object with a <code>'static</code> lifetime bound:</p>\n\n<pre><code>fn a(&amp;self) -&gt; &amp;(Foo + 'static) { ... }\n</code></pre>\n\n<p>This makes a lot of sense, because we are returning a pointer to the interior of a <code>Box&lt;Foo + 'static&gt;</code>!</p>\n\n<p><code>BoxedA::a</code> might eventually cause you similar issues, so you might want to fix this one too while you're at it:</p>\n\n<pre><code>fn a(&amp;self) -&gt; Ref&lt;Foo + 'static&gt; { ... }\n</code></pre>\n\n<hr>\n\n<p>Now that you're aware of these lifetime bounds, you might want to consider whether it makes sense to make <code>A</code> and <code>BoxedA</code> generic over that lifetime bound, instead of enforcing <code>'static</code>. If you want to maximize genericity, your code would look like this:</p>\n\n<pre><code>struct A&lt;'a&gt; {\n    a: Box&lt;Foo + 'a&gt;\n}\n\nimpl&lt;'a&gt; A&lt;'a&gt; {\n    fn new(a: Box&lt;Foo + 'a&gt;) -&gt; A&lt;'a&gt; {\n        A { a: a }\n    }\n\n    fn a(&amp;self) -&gt; &amp;(Foo + 'a) {\n        &amp;*self.a\n    }\n}\n\nstruct BoxedA&lt;'a&gt; {\n    a: Rc&lt;RefCell&lt;A&lt;'a&gt;&gt;&gt;\n}\n\nimpl&lt;'a&gt; BoxedA&lt;'a&gt; {\n    fn new(a: Box&lt;Foo + 'a&gt;) -&gt; BoxedA&lt;'a&gt; {\n        BoxedA {\n            a: Rc::new(RefCell::new(A::new(a)))\n        }\n    }\n\n    fn a(&amp;self) -&gt; Ref&lt;Foo + 'a&gt; {\n        Ref::map(self.a.borrow(), |a| a.a())\n    }\n}\n</code></pre>\n\n<p>It's up to you to decide if you need this level of genericity or not.</p>\n"}], "owner": {"reputation": 97, "user_id": 7559077, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/51e6e079bc1a96b993c26ba63ccc53ca?s=128&d=identicon&r=PG&f=1", "display_name": "Marik", "link": "https://stackoverflow.com/users/7559077/marik"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 107, "favorite_count": 0, "accepted_answer_id": 42545103, "answer_count": 1, "score": 3, "last_activity_date": 1488417000, "creation_date": 1488399668, "question_id": 42541298, "link": "https://stackoverflow.com/questions/42541298/cant-infer-lifetimes-when-using-refmap-with-trait-objects", "title": "Can&#39;t infer lifetimes when using Ref::map with trait objects", "body": "<p>I have a struct <code>A</code> with boxed trait (<code>Foo</code>), a another struct <code>BoxedA</code> which has a <code>Rc&lt;RefCell&lt;A&gt;&gt;</code> in it. I'm trying to create a method on <code>BoxedA</code> that returns refrence to boxed trait, but keep running into problems with lifetimes when mapping <code>Ref&lt;A&gt;</code> to <code>Ref&lt;Foo&gt;</code>.</p>\n\n<p>Here's my code:</p>\n\n<pre><code>use std::rc::Rc;\nuse std::cell::{RefCell, Ref};\n\ntrait Foo {\n\n}\n\nstruct A {\n    a: Box&lt;Foo&gt;\n}\n\nimpl A {\n    fn new(a: Box&lt;Foo&gt;) -&gt; A {\n        A { a: a }\n    }\n\n    fn a(&amp;self) -&gt; &amp;Foo {\n        &amp;*self.a\n    }\n}\n\nstruct BoxedA {\n    a: Rc&lt;RefCell&lt;A&gt;&gt;\n}\n\nimpl BoxedA {\n    fn new(a: Box&lt;Foo&gt;) -&gt; BoxedA {\n        BoxedA {\n            a: Rc::new(RefCell::new(A::new(a)))\n        }\n    }\n\n    fn a(&amp;self) -&gt; Ref&lt;Foo&gt; {\n        Ref::map(self.a.borrow(), |a| a.a())\n    }\n}\n\nimpl Foo for i32 {\n\n}\n\nfn main() {\n    let a = BoxedA::new(Box::new(3));\n\n    let a_ref = a.a();\n}\n</code></pre>\n\n<p>Rust playground link: <a href=\"https://play.rust-lang.org/?gist=d0348ad9b06a152770f3877864b01531&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?gist=d0348ad9b06a152770f3877864b01531&amp;version=stable&amp;backtrace=0</a></p>\n\n<p>I get following compilation errors:</p>\n\n<pre><code>error[E0495]: cannot infer an appropriate lifetime for autoref due to      conflicting requirements\n  --&gt; &lt;anon&gt;:34:41\n   |\n34 |         Ref::map(self.a.borrow(), |a| a.a())\n   |                                         ^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the body at 34:38...\n  --&gt; &lt;anon&gt;:34:39\n   |\n34 |         Ref::map(self.a.borrow(), |a| a.a())\n   |                                       ^^^^^\nnote: ...so that reference does not outlive borrowed content\n  --&gt; &lt;anon&gt;:34:39\n   |\n34 |         Ref::map(self.a.borrow(), |a| a.a())\n   |                                       ^\nnote: but, the lifetime must be valid for the anonymous lifetime #1 defined on the body at 33:28...\n  --&gt; &lt;anon&gt;:33:29\n   |\n33 |       fn a(&amp;self) -&gt; Ref&lt;Foo&gt; {\n   |  _____________________________^ starting here...\n34 | |         Ref::map(self.a.borrow(), |a| a.a())\n35 | |     }\n   | |_____^ ...ending here\nnote: ...so that the declared lifetime parameter bounds are satisfied\n  --&gt; &lt;anon&gt;:34:9\n   |\n34 |         Ref::map(self.a.borrow(), |a| a.a())\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>Oddly enough, code compiles if i replace all <code>Foo</code>'s with <code>i32</code>.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 3, "creation_date": 1488396538, "post_id": 42540227, "comment_id": 72216471, "body": "What&#39;s inelegant about <code>into_vec</code>?"}, {"owner": {"reputation": 764, "user_id": 240760, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5483d38c83f881636c400abab782f3c5?s=128&d=identicon&r=PG", "display_name": "Adrian Willenb&#252;cher", "link": "https://stackoverflow.com/users/240760/adrian-willenb%c3%bccher"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1488397434, "post_id": 42540227, "comment_id": 72216987, "body": "@PeterHall: Because it constructs a vector just to deconstruct it immediately, without giving the compiler any new information. It&#39;s not horribly inelegant, but it seems weird that I can&#39;t move things out of an owned container without detours."}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 5, "creation_date": 1488415647, "post_id": 42540227, "comment_id": 72225437, "body": "Few people use <code>Box&lt;[T]&gt;</code>, so it hasn&#39;t received as much care and attention as <code>Vec&lt;T&gt;</code>. It certainly would be possible to implement <code>IntoIterator</code> for <code>Box&lt;[T]&gt;</code>, it&#39;s just that nobody bothered to do so yet."}, {"owner": {"reputation": 17388, "user_id": 921321, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/3f4c4737cb30134f58cc76f06ef5113a?s=128&d=identicon&r=PG", "display_name": "Lukazoid", "link": "https://stackoverflow.com/users/921321/lukazoid"}, "edited": false, "score": 0, "creation_date": 1488546515, "post_id": 42540227, "comment_id": 72291913, "body": "You can&#39;t move elements out of a slice so I think you have to use <code>into_vec</code>."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1597758939, "creation_date": 1597758939, "answer_id": 63470201, "question_id": 42540227, "link": "https://stackoverflow.com/questions/42540227/how-can-i-move-elements-out-of-a-boxed-slice-consuming-the-slice-in-the-process/63470201#63470201", "title": "How can I move elements out of a boxed slice, consuming the slice in the process?", "body": "<p>The best thing you can do in stable Rust is convert it into a <code>Vec</code>:</p>\n<pre><code>let v = Vec::from(s);\nfor t in v {\n    consume(t);\n}\n</code></pre>\n<p>I don't believe that this will have any negative performance downside as the conversion to the <code>Vec</code> basically adds a single <code>usize</code>.</p>\n<p>Nightly Rust has <a href=\"https://doc.rust-lang.org/std/array/struct.IntoIter.html\" rel=\"nofollow noreferrer\"><code>array::IntoIter</code></a> which supports iterating directly over an array, so you should be able to convert it into a <code>Box&lt;[T; N]&gt;</code> and use that.</p>\n<p>You could probably also submit a PR adding an implementation of <code>Iterator</code> for <code>Box&lt;[T]&gt;</code>.</p>\n"}], "owner": {"reputation": 764, "user_id": 240760, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5483d38c83f881636c400abab782f3c5?s=128&d=identicon&r=PG", "display_name": "Adrian Willenb&#252;cher", "link": "https://stackoverflow.com/users/240760/adrian-willenb%c3%bccher"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 606, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1597758939, "creation_date": 1488396104, "last_edit_date": 1597758644, "question_id": 42540227, "link": "https://stackoverflow.com/questions/42540227/how-can-i-move-elements-out-of-a-boxed-slice-consuming-the-slice-in-the-process", "title": "How can I move elements out of a boxed slice, consuming the slice in the process?", "body": "<p>For example:</p>\n<pre><code>struct T(u32); // No Copy implementation\n\nfn consume(t: T) {}\n\nfn main() {\n    let v = vec![T(1), T(2)];\n    let s = v.into_boxed_slice();\n    // Get a Box&lt;[T]&gt; from somewhere and consume it:\n    for t in s {\n        consume(t);\n    }\n}\n</code></pre>\n<p>results in the compiler error:</p>\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: `[T]` is not an iterator\n --&gt; src/main.rs:9:14\n  |\n9 |     for t in s {\n  |              ^ `[T]` is not an iterator\n  |\n  = help: the trait `std::iter::Iterator` is not implemented for `[T]`\n  = note: required because of the requirements on the impl of `std::iter::Iterator` for `std::boxed::Box&lt;[T]&gt;`\n</code></pre>\n<p>I could use <code>s.into_vec()</code> to construct a <code>Vec</code> from the boxed slice, and then consume the vector. That would be close to a no-op performance-wise, but is there a more elegant way?</p>\n"}, {"tags": ["struct", "rust", "lifetime"], "comments": [{"owner": {"reputation": 338, "user_id": 5573030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/91fcac7046f8930290c23c81870e7d4c?s=128&d=identicon&r=PG&f=1", "display_name": "BookOwl", "link": "https://stackoverflow.com/users/5573030/bookowl"}, "edited": false, "score": 0, "creation_date": 1489454566, "post_id": 42538463, "comment_id": 72667579, "body": "Why the downvote?"}], "answers": [{"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1488422716, "post_id": 42539470, "comment_id": 72227379, "body": "@FrancisGagn&#233; AHA! That&#39;s the one I wanted to link to but I could only find <a href=\"http://stackoverflow.com/questions/20698384/lifetime-of-rust-structs-that-reference-each-other\">this one</a> by searching. Thanks"}, {"owner": {"reputation": 338, "user_id": 5573030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/91fcac7046f8930290c23c81870e7d4c?s=128&d=identicon&r=PG&f=1", "display_name": "BookOwl", "link": "https://stackoverflow.com/users/5573030/bookowl"}, "edited": false, "score": 0, "creation_date": 1488467427, "post_id": 42539470, "comment_id": 72252313, "body": "Thank you for the great answer!"}, {"owner": {"reputation": 338, "user_id": 5573030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/91fcac7046f8930290c23c81870e7d4c?s=128&d=identicon&r=PG&f=1", "display_name": "BookOwl", "link": "https://stackoverflow.com/users/5573030/bookowl"}, "edited": false, "score": 0, "creation_date": 1488471628, "post_id": 42539470, "comment_id": 72255325, "body": "I think that I will just not use a struct and have the calling code create the context, module, and builder and then pass them in to the code generator function."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1489092433, "post_id": 42539470, "comment_id": 72532114, "body": "@trentcl do you this is this a duplicate of either <a href=\"http://stackoverflow.com/q/32300132/234590\">stackoverflow.com/q/32300132/234590</a> or <a href=\"http://stackoverflow.com/questions/20698384/lifetime-of-rust-structs-that-reference-each-other\" title=\"lifetime of rust structs that reference each other\">stackoverflow.com/questions/20698384/&hellip;</a>?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1489095692, "post_id": 42539470, "comment_id": 72533866, "body": "@Shepmaster Actually, I think the key to this answer was realizing that an <code>&#39;a</code> had been elided. But I guess I did go into a bit more detail and some of it is redundant"}], "tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 2, "last_activity_date": 1489003913, "last_edit_date": 1495542725, "creation_date": 1488393595, "answer_id": 42539470, "question_id": 42538463, "link": "https://stackoverflow.com/questions/42538463/value-doesnt-live-long-enough-when-put-in-struct/42539470#42539470", "title": "Value doesn&#39;t live long enough when put in struct", "body": "<p>This looks like one of those situations where lifetime elision makes things less clear.</p>\n\n<p>Here's the <a href=\"https://tombebbington.github.io/llvm-rs/src/llvm/src/builder.rs.html#44\" rel=\"nofollow noreferrer\">prototype</a> of <code>Builder::new</code>:</p>\n\n<pre><code>pub fn new(context: &amp;Context) -&gt; CSemiBox&lt;Builder&gt;\n</code></pre>\n\n<p>Which might make you think that the <code>CSemiBox</code> doesn't have any relation to the lifetime of <code>context</code>. But the <a href=\"https://tombebbington.github.io/llvm-rs/llvm/struct.CSemiBox.html\" rel=\"nofollow noreferrer\">definition</a> of <code>CSemiBox</code> has a lifetime parameter:</p>\n\n<pre><code>pub struct CSemiBox&lt;'a, D&gt;\n</code></pre>\n\n<p>As I understand it, when the output type of a function (in this case <code>Builder::new</code>) has a lifetime parameter, it can be elided if there is only one input lifetime. (The lifetime elision rules are described in <a href=\"https://doc.rust-lang.org/book/lifetimes.html#lifetime-elision\" rel=\"nofollow noreferrer\">the book</a> and in <a href=\"https://stackoverflow.com/questions/40325690/lifetime-elision\">this question</a>.) In this case, the output lifetime is taken to be the same as the input lifetime. That means the prototype from before is actually equivalent to the following:</p>\n\n<pre><code>pub fn new&lt;'a&gt;(context: &amp;'a Context) -&gt; CSemiBox&lt;'a, Builder&gt;\n</code></pre>\n\n<p>I hope this clarifies what's happening: after <code>Builder::new(&amp;c)</code>, the <code>CSemiBox</code> contains a reference to the <code>Context</code> it was created from (<code>b</code> contains a reference to <code>c</code>). You can't put <code>b</code> and <code>c</code> in the same struct because the compiler has to be able to prove that <code>c</code> outlives <code>b</code>. For a more thorough explanation, see <a href=\"https://stackoverflow.com/questions/32300132/why-cant-i-store-a-value-and-a-reference-to-that-value-in-the-same-struct\">Why can't I store a value and a reference to that value in the same struct?</a></p>\n\n<p>There are two ways I can think of to handle this. (You can't use <code>Rc</code> because you don't control the crate.)</p>\n\n<ol>\n<li><p>Don't store the <code>Context</code> inside the <code>CodeGen</code> struct. You're limited in how you can structure your code, but that's not necessarily bad.</p></li>\n<li><p>Since the <code>Context</code> is stored on the heap, you can use <code>unsafe</code> to make the references (appear to) have a <code>'static</code> lifetime. Something like the following snippet ought to work, which removes the lifetime annotation from <code>CodeGen</code>. If you do this (as any time you use <code>unsafe</code>), <strong>you take responsibility for ensuring the safety of the exposed interface</strong>. That means, for example, <code>CodeGen</code> can't hand out references to <code>builder</code> and <code>module</code>, because that could leak a <code>'static</code> reference to <code>context</code>.</p>\n\n<pre><code>pub struct CodeGen {\n    context: CBox&lt;Context&gt;,\n    builder: CSemiBox&lt;'static, Builder&gt;,\n    module: CSemiBox&lt;'static, Module&gt;,\n}\nimpl CodeGen {\n    pub fn new() -&gt; CodeGen {\n        let c = Context::new();  // returns a CBox&lt;Context&gt;\n        let c_static_ref: &amp;'static _ = unsafe {\n            let c_ptr = c.as_ptr() as *const _;  // get the underlying heap pointer\n            &amp;*c_ptr\n        };\n        let b = Builder::new(c_static_ref);\n        let m = Module::new(\"test\", c_static_ref);\n        CodeGen {\n            context: c,\n            builder: b,\n            module: m,\n        }\n    }\n}\n</code></pre></li>\n</ol>\n"}], "owner": {"reputation": 338, "user_id": 5573030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/91fcac7046f8930290c23c81870e7d4c?s=128&d=identicon&r=PG&f=1", "display_name": "BookOwl", "link": "https://stackoverflow.com/users/5573030/bookowl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 645, "favorite_count": 0, "accepted_answer_id": 42539470, "answer_count": 1, "score": 1, "last_activity_date": 1489003913, "creation_date": 1488390105, "question_id": 42538463, "link": "https://stackoverflow.com/questions/42538463/value-doesnt-live-long-enough-when-put-in-struct", "title": "Value doesn&#39;t live long enough when put in struct", "body": "<p>I'm trying to work with LLVM in Rust using <a href=\"https://github.com/TomBebb/llvm-rs\" rel=\"nofollow noreferrer\">this crate</a>. I'm trying to create a code generator struct to hold the context, module, and builder for me, but when I try to compile I get an error message that says <code>c does not live long enough</code>. How can I get this to compile, and why isn't c living long enough?</p>\n\n<p>Code:</p>\n\n<pre><code>use llvm::*;\nuse llvm::Attribute::*;\npub struct CodeGen&lt;'l&gt; {\n    context: CBox&lt;Context&gt;,\n    builder: CSemiBox&lt;'l, Builder&gt;,\n    module: CSemiBox&lt;'l, Module&gt;,\n}\nimpl&lt;'l&gt; CodeGen&lt;'l&gt; {\n    pub fn new() -&gt; CodeGen&lt;'l&gt; {\n        let c = Context::new();\n        let b = Builder::new(&amp;c);\n        let m = Module::new(\"test\", &amp;c);\n        CodeGen {\n            context: c,\n            builder: b,\n            module: m,\n        }\n    }\n}\n</code></pre>\n\n<p>Full error message:</p>\n\n<pre><code>error: `c` does not live long enough\n  --&gt; src/codegen.rs:17:31\n   |\n17 |         let b = Builder::new(&amp;c);\n   |                               ^ does not live long enough\n...\n24 |     }\n   |     - borrowed value only lives until here\n   |\nnote: borrowed value must be valid for the lifetime 'l as defined on the body at 15:32...\n  --&gt; src/codegen.rs:15:33\n   |\n15 |     pub fn new() -&gt; CodeGen&lt;'l&gt; {\n   |                                 ^\n\nerror: `c` does not live long enough\n  --&gt; src/codegen.rs:18:38\n   |\n18 |         let m = Module::new(\"test\", &amp;c);\n   |                                      ^ does not live long enough\n...\n24 |     }\n   |     - borrowed value only lives until here\n   |\nnote: borrowed value must be valid for the lifetime 'l as defined on the body at 15:32...\n  --&gt; src/codegen.rs:15:33\n   |\n15 |     pub fn new() -&gt; CodeGen&lt;'l&gt; {\n   |                                 ^\n\nerror: aborting due to 2 previous errors\n</code></pre>\n"}, {"tags": ["multithreading", "time", "rust", "atomic"], "comments": [{"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 1, "creation_date": 1488389010, "post_id": 42537228, "comment_id": 72211899, "body": "If one thread is writing, it absolutely needs to be atomic or otherwise synchronised.  You also don&#39;t necessarily need a timestamp; a simple atomic flag could do if all you want to know is &quot;has the thread done something since last time I checked?&quot;."}], "answers": [{"comments": [{"owner": {"reputation": 42755, "user_id": 116639, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/30700279c97553494d9479ec7d667483?s=128&d=identicon&r=PG", "display_name": "Tom Anderson", "link": "https://stackoverflow.com/users/116639/tom-anderson"}, "edited": false, "score": 0, "creation_date": 1488478625, "post_id": 42544744, "comment_id": 72259894, "body": "That&#39;s a huge revelation about Sync and Send! It&#39;s a real shame they aren&#39;t included in the generated documentation too, but i can live with it, using your compiling trick."}, {"owner": {"reputation": 42755, "user_id": 116639, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/30700279c97553494d9479ec7d667483?s=128&d=identicon&r=PG", "display_name": "Tom Anderson", "link": "https://stackoverflow.com/users/116639/tom-anderson"}, "edited": false, "score": 1, "creation_date": 1488478846, "post_id": 42544744, "comment_id": 72260028, "body": "I&#39;d like to avoid a mutex if possible. The manager thread has a lot of time on its hands, but the worker thread is doing work where, potentially, every cycle counts, so i&#39;d like the fastest possible way to share the data."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 2, "last_activity_date": 1488414506, "creation_date": 1488414506, "answer_id": 42544744, "question_id": 42537228, "link": "https://stackoverflow.com/questions/42537228/sharing-a-timestamp-from-thread-to-another/42544744#42544744", "title": "Sharing a timestamp from thread to another", "body": "<p><a href=\"https://play.rust-lang.org/?gist=cc542e3dedbafe1b0150e2d110d0d65a&amp;version=stable&amp;backtrace=1\" rel=\"nofollow noreferrer\"><code>std::time::Instant</code> actually does implement <code>Send</code></a>. You don't see all the types that implement <code>Send</code> or <code>Sync</code> in the documentation; you only see negative implementations (e.g. <code>Rc</code>) and explicit implementations (e.g. <code>Arc</code>). <code>Send</code> and <code>Sync</code> use a language feature (that is still unstable as of Rust 1.15.1) that makes the compiler implement them for custom types if all their fields implement the trait (i.e. if all the fields are <code>Send</code>, the type is <code>Send</code>; likewise with <code>Sync</code>). The explicit implementations (which must be marked as <code>unsafe</code> because the traits are defined as <code>unsafe</code>) exist to override negative implementations (the root of which are the raw pointer types; the other negative implementations are completely superfluous but they're there for documentation purposes). Naturally, when a type has private fields, you can't tell just by looking at the documentation if that type implements <code>Send</code> and/or <code>Sync</code>. The best way to check is to just try to compile a bit of code that requires it.</p>\n\n<p>Therefore, if you need a shared, mutable <code>Instant</code>, just use an <code>Arc&lt;Mutex&lt;Instant&gt;&gt;</code>!</p>\n"}, {"tags": [], "owner": {"reputation": 42755, "user_id": 116639, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/30700279c97553494d9479ec7d667483?s=128&d=identicon&r=PG", "display_name": "Tom Anderson", "link": "https://stackoverflow.com/users/116639/tom-anderson"}, "is_accepted": false, "score": 3, "last_activity_date": 1488479638, "creation_date": 1488479638, "answer_id": 42563246, "question_id": 42537228, "link": "https://stackoverflow.com/questions/42537228/sharing-a-timestamp-from-thread-to-another/42563246#42563246", "title": "Sharing a timestamp from thread to another", "body": "<p>What i've done so far is write my own AtomicInstant. The content of an Instant is platform-specific and well-hidden, but it can be converted into an offset from another Instant, in the form of Duration, which can in turn be converted into a nanosecond count. That, in turn, can be stuffed into a usize, which will work as long as the times you're measuring don't get too big with respect to your machine's word size (a day is about 2**46 nanoseconds; a 64-bit machine can measure about 350 years). That chain of transformations can all be reversed to read a value.</p>\n\n<p>The code looks like this (edited slightly, so it's possible this is wrong):</p>\n\n<pre><code>struct AtomicInstant {\n    base: Instant,\n    offset: AtomicUsize,\n}\n\nimpl AtomicInstant {\n    fn new(base: Instant) -&gt; AtomicInstant {\n        AtomicInstant {\n            base: base,\n            offset: AtomicUsize::new(0),\n        }\n    }\n\n    fn load(&amp;self, order: Ordering) -&gt; Instant {\n        let offset_nanos = self.offset.load(order) as u64;\n        let secs = offset_nanos / 1_000_000_000;\n        let subsec_nanos = (offset_nanos % 1_000_000_000) as u32;\n        let offset = Duration::new(secs, subsec_nanos);\n        return self.base + offset;\n    }\n\n    fn store(&amp;self, val: Instant, order: Ordering) {\n        let offset = val - self.base;\n        let offset_nanos = offset.as_secs() * 1_000_000_000 + offset.subsec_nanos() as u64;\n        self.offset.store(offset_nanos as usize, order);\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 42755, "user_id": 116639, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/30700279c97553494d9479ec7d667483?s=128&d=identicon&r=PG", "display_name": "Tom Anderson", "link": "https://stackoverflow.com/users/116639/tom-anderson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 310, "favorite_count": 0, "answer_count": 2, "score": 4, "last_activity_date": 1488479638, "creation_date": 1488386353, "question_id": 42537228, "link": "https://stackoverflow.com/questions/42537228/sharing-a-timestamp-from-thread-to-another", "title": "Sharing a timestamp from thread to another", "body": "<p>I have a worker thread that is running in a loop, occasionally doing work. I would like to have a manager thread that <a href=\"http://cdn.quotesgram.com/img/25/66/1934361440-Bill-Lumbergh-Gary-Cole-Office-Space.jpg\" rel=\"nofollow noreferrer\">keeps a watchful eye on whether the first thread has done any work recently</a>.</p>\n\n<p>I think the simplest way to do this is to have a variable containing a timestamp; when the worker thread does some work, it writes the current time to the variable, and when the manager thread wants to check on the worker, it reads the time from the variable and measures the difference from the current time.</p>\n\n<p>Firstly, does this variable need to be atomic? My instinct is to use an atomic when communicating between threads, but in this case, there is no read-modify-write cycle, and only one thread is making the update. The time value should be small enough to fit into a single word, so perhaps there is no worry about word tearing either. Should it still be atomic to somehow encourage timely propagation between threads? If not, what is the right way to share the timestamp?</p>\n\n<p>Secondly, what is a suitable type for representing the timestamp, and how do i get an instance of it? std::time::Instant seems like the obvious choice, but it's not Sync or Send, and i don't know how i'd have an atomic one. Is there a better choice?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 5, "last_activity_date": 1488380047, "creation_date": 1488380047, "answer_id": 42534925, "question_id": 42534811, "link": "https://stackoverflow.com/questions/42534811/why-does-the-closure-take-ownership-of-the-vector-here/42534925#42534925", "title": "Why does the closure take ownership of the vector here?", "body": "<p>The answer lies in the signature of the closure: what does <code>takes_num</code> return?</p>\n\n<p>It returns <code>nums</code>, whose type is <code>Vec&lt;i32&gt;</code>.</p>\n\n<p>To give ownership of something to someone, you must first own it, otherwise it's not yours to give. The same rule applies to the closure.</p>\n"}], "owner": {"reputation": 325, "user_id": 3688659, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/6265083c30ede6204e64facc809859d2?s=128&d=identicon&r=PG&f=1", "display_name": "SphericalCow", "link": "https://stackoverflow.com/users/3688659/sphericalcow"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 135, "favorite_count": 0, "accepted_answer_id": 42534925, "answer_count": 1, "score": 4, "last_activity_date": 1488380047, "creation_date": 1488379766, "question_id": 42534811, "link": "https://stackoverflow.com/questions/42534811/why-does-the-closure-take-ownership-of-the-vector-here", "title": "Why does the closure take ownership of the vector here?", "body": "<p>The rust documentation has this example in the <a href=\"https://doc.rust-lang.org/book/closures.html\" rel=\"nofollow noreferrer\">Closures</a> section. </p>\n\n<pre><code>let nums = vec![1, 2, 3];\n\nlet takes_nums = || nums;\n\nprintln!(\"{:?}\", nums);\n</code></pre>\n\n<p>The documentation says </p>\n\n<blockquote>\n  <p>If your closure requires it, however, Rust will take ownership and\n  move the environment instead</p>\n</blockquote>\n\n<p>And the above code results in this error</p>\n\n<pre><code>note: `nums` moved into closure environment here because it has type\n  `[closure(()) -&gt; collections::vec::Vec&lt;i32&gt;]`, which is non-copyable\nlet takes_nums = || nums;\n                 ^~~~~~~\n</code></pre>\n\n<p>for which the docs say</p>\n\n<blockquote>\n  <p>Vec has ownership over its contents, and therefore, when we refer\n  to it in our closure, we have to take ownership of nums. It\u2019s the same\n  as if we\u2019d passed nums to a function that took ownership of it.</p>\n</blockquote>\n\n<p>I don't understand why the closure doesn't just borrow the ownership of the vector as it does in this example from the documentation</p>\n\n<pre><code>let num = 5;\nlet plus_num = |x: i32| x + num;\n\nassert_eq!(10, plus_num(5));\n</code></pre>\n\n<blockquote>\n  <p>This closure, plus_num, refers to a let binding in its scope: num.\n  More specifically, it borrows the binding.</p>\n</blockquote>\n"}, {"tags": ["iterator", "rust", "lifetime"], "answers": [{"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 4, "last_activity_date": 1488381851, "creation_date": 1488381851, "answer_id": 42535622, "question_id": 42534757, "link": "https://stackoverflow.com/questions/42534757/map-boxed-values-to-mutable-dereferenced-values-in-rust/42535622#42535622", "title": "Map boxed values to mutable dereferenced values in Rust", "body": "<p>There is a tremendous difference between immutable and mutable references. The core principle of borrowing is:</p>\n\n<blockquote>\n  <p><strong>Aliasing XOR Mutability</strong></p>\n</blockquote>\n\n<p>The Rust language guarantees that if you have a mutable reference, there is no other reference which aliases the same object.</p>\n\n<hr>\n\n<p>In your case, instead of mapping again, let's collect... the addresses:</p>\n\n<pre><code>let c: Vec&lt;_&gt; = indices.iter().map(|index| vec[*index].deref())\n                              .map(|x| x as *const _ as usize)\n                              .collect();\nprintln!(\"{:?}\", c);\n</code></pre>\n\n<p>We get the list of addresses of elements in the vector.</p>\n\n<p>The <em>only</em> reason those addresses differ is because the indices differ. If we are sneaky, and initialize <code>indices</code> to <code>[0, 1, 2, 1]</code>, then we get aliasing.</p>\n\n<p>If we can get aliasing based on a runtime property, then we should NOT also get mutability; and therefore the type system enforces this.</p>\n\n<hr>\n\n<p>How is it enforced?</p>\n\n<p>The <code>vec</code> is borrowed by the closure.</p>\n\n<ul>\n<li>with <code>deref</code>, the closure borrows <code>&amp;Vec</code></li>\n<li>with <code>deref_mut</code>, the closure borrows <code>&amp;mut Vec</code></li>\n</ul>\n\n<p>You can witness the first one yourself:</p>\n\n<pre><code>let i = indices.iter().map(|index| vec[*index].deref())\n                      .map(|x| x as *const _ as usize);\n\nvec[0] = Box::new(3.0);\n</code></pre>\n\n<p>will fail with a note that the vector is already borrowed immutably by the closure.</p>\n\n<p>The second one is a logical extension:</p>\n\n<ul>\n<li><code>deref_mut</code> takes a <code>&amp;mut self</code> in argument,</li>\n<li>which requires <code>IndexMut</code> which also takes a <code>&amp;mut self</code> in argument,</li>\n<li>therefore the closure requires mutable access to the vector.</li>\n</ul>\n\n<p>So, each time you call the closure, it accesses a <code>&amp;mut Vec</code>. Therefore, each time you call the closure NOTHING must alias this <code>&amp;mut Vec</code>, and thus, <em>no reference must leak outside the closure</em>.</p>\n\n<p>How is this achieved?</p>\n\n<p>By tightening the lifetime of the reference that you get access to in the closure: each time you invoke the closure, you get a <code>&amp;'scope mut Vec</code> reference where <code>'scope</code> is the scope of the closure body <em>and no more</em>.</p>\n\n<p><em>(This also relates to reborrowing and the fact that <code>&amp;mut T</code> is not <code>Copy</code>: since you cannot be handed over a copy of the internally stored <code>&amp;mut T</code> as it's not <code>Copy</code>, you are handed over a re-borrow <code>&amp;mut *vec</code> which has a fresh lifetime).</em></p>\n\n<hr>\n\n<p>What's the solution then?</p>\n\n<p>Perform any and all computations directly in the closure where you have access to the <code>Vec</code>. In this closure, you have mutable access after all.</p>\n\n<pre><code>fn main() {\n    let indices = [0usize, 1usize, 2usize];\n    let mut vec = vec![Box::new(1.0), Box::new(2.0), Box::new(3.0)];\n    let c: Vec&lt;_&gt; =\n        indices.iter()\n               .map(|index| {\n                   *vec[*index] = *vec[*index] + 1.0;\n                   *vec[*index]\n               })\n               .collect();\n    println!(\"{:?}\", c);\n}\n</code></pre>\n\n<p>Correctly display <code>[2, 3, 4]</code>.</p>\n"}], "owner": {"reputation": 262, "user_id": 7140196, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a95eb78cd884fcb99a27a0e4c170035d?s=128&d=identicon&r=PG&f=1", "display_name": "vuilehaid", "link": "https://stackoverflow.com/users/7140196/vuilehaid"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 515, "favorite_count": 0, "accepted_answer_id": 42535622, "answer_count": 1, "score": 3, "last_activity_date": 1488381851, "creation_date": 1488379643, "last_edit_date": 1488379953, "question_id": 42534757, "link": "https://stackoverflow.com/questions/42534757/map-boxed-values-to-mutable-dereferenced-values-in-rust", "title": "Map boxed values to mutable dereferenced values in Rust", "body": "<p>I have a iterator over a series of Boxed values. I would like to map this iterator to one over mutable references to the boxed values.</p>\n\n<p>The following simplified example shows how this can be accomplished for immutable references. This example compiles fine.</p>\n\n<pre><code>let indices = [0usize, 1usize, 2usize];\nlet vec = vec![Box::new(1.0), Box::new(2.0), Box::new(3.0)];\nlet i = indices.iter().map(|index| vec[*index].deref()).map(|x| *x + 1.0);\n</code></pre>\n\n<p>However, for mutable references, like the example below, the compiler produces an error.</p>\n\n<pre><code>let indices = [0usize, 1usize, 2usize];\nlet mut vec = vec![Box::new(1.0), Box::new(2.0), Box::new(3.0)];\nlet i = indices.iter().map(|index| vec[*index].deref_mut()).map(|x| *x = *x + 1.0);\n</code></pre>\n\n<p>The compiler error is the following:</p>\n\n<pre><code>error[E0495]: cannot infer an appropriate lifetime for lifetime parameter in function call due to conflicting requirements\n   --&gt; src\\port_graph/mod.rs:200:40\n    |\n200 |     let i = indices.iter().map(|index| vec[*index].deref_mut()).map(|x| *x = *x + 1.0);\n    |                                        ^^^^^^^^^^^\n    |\nnote: first, the lifetime cannot outlive the lifetime  as defined on the body at 200:39...\n   --&gt; src\\port_graph/mod.rs:200:40\n    |\n200 |     let i = indices.iter().map(|index| vec[*index].deref_mut()).map(|x| *x = *x + 1.0);\n    |                                        ^^^^^^^^^^^^^^^^^^^^^^^\nnote: ...so that closure can access `vec`\n   --&gt; src\\port_graph/mod.rs:200:40\n    |\n200 |     let i = indices.iter().map(|index| vec[*index].deref_mut()).map(|x| *x = *x + 1.0);\n    |                                        ^^^\nnote: but, the lifetime must be valid for the scope of call-site for function at 200:39...\n   --&gt; src\\port_graph/mod.rs:200:40\n    |\n200 |     let i = indices.iter().map(|index| vec[*index].deref_mut()).map(|x| *x = *x + 1.0);\n    |                                        ^^^^^^^^^^^^^^^^^^^^^^^\nnote: ...so that return value is valid for the call\n   --&gt; src\\port_graph/mod.rs:200:32\n    |\n200 |     let i = indices.iter().map(|index| vec[*index].deref_mut()).map(|x| *x = *x + 1.0);\n    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>How could this be fixed?</p>\n\n<p>Edit: For a simple vector, one can simply do the following. However, the examples above are a simplicifation of a case where I want to iterate over a subset of nodes in a graph (petgraph crate), and I don't want to consume the graph itself.</p>\n\n<pre><code>let mut vec = vec![Box::new(1.0), Box::new(2.0), Box::new(3.0)];\nlet i = vec.iter_mut().map(|boxed| boxed.deref_mut()).map(|x| *x = *x + 1.0);\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1488385040, "post_id": 42533659, "comment_id": 72209206, "body": "Found a very similar question: <a href=\"http://stackoverflow.com/questions/30412521/how-to-read-specific-number-of-bytes-from-a-stream\">How to read specific number of bytes from a stream</a>."}], "answers": [{"comments": [{"owner": {"reputation": 2878, "user_id": 655862, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/bad65d3d7319025d73e065d7a29ee22a?s=128&d=identicon&r=PG", "display_name": "Greg Weber", "link": "https://stackoverflow.com/users/655862/greg-weber"}, "edited": false, "score": 0, "creation_date": 1488386780, "post_id": 42535161, "comment_id": 72210457, "body": "Thanks! I will see if I can add something to the Rust documentation to make it easier to come across this from iterators and readers and writers."}, {"owner": {"reputation": 2878, "user_id": 655862, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/bad65d3d7319025d73e065d7a29ee22a?s=128&d=identicon&r=PG", "display_name": "Greg Weber", "link": "https://stackoverflow.com/users/655862/greg-weber"}, "edited": false, "score": 0, "creation_date": 1488386808, "post_id": 42535161, "comment_id": 72210487, "body": "I think you need &amp;mut for the copy arguments"}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "reply_to_user": {"reputation": 2878, "user_id": 655862, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/bad65d3d7319025d73e065d7a29ee22a?s=128&d=identicon&r=PG", "display_name": "Greg Weber", "link": "https://stackoverflow.com/users/655862/greg-weber"}, "edited": false, "score": 0, "creation_date": 1488386894, "post_id": 42535161, "comment_id": 72210561, "body": "@GregWeber Thanks - forgot to add them after saying they were needed."}], "tags": [], "owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "is_accepted": true, "score": 7, "last_activity_date": 1488386862, "last_edit_date": 1488386862, "creation_date": 1488380619, "answer_id": 42535161, "question_id": 42533659, "link": "https://stackoverflow.com/questions/42533659/write-directly-from-a-reader-in-rust/42535161#42535161", "title": "Write directly from a reader in Rust", "body": "<p>Your <code>read_write</code> function sounds exactly like <a href=\"https://doc.rust-lang.org/std/io/fn.copy.html\" rel=\"noreferrer\">io::copy</a>.  So this would be</p>\n\n<pre><code>pub fn gzipped&lt;R: Read&gt;(file: String, stream: R) -&gt; io::Result&lt;u64&gt; {\n    let mut file = File::create(file)?;\n    let mut gz = BufReader::new(GzEncoder::new(stream, Compression::Default));\n    io::copy(&amp;mut gz, &amp;mut file)\n}\n</code></pre>\n\n<p>The only difference is that <code>io::copy</code> takes mutable references, and returns <code>Result&lt;u64&gt;</code>.</p>\n"}], "owner": {"reputation": 2878, "user_id": 655862, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/bad65d3d7319025d73e065d7a29ee22a?s=128&d=identicon&r=PG", "display_name": "Greg Weber", "link": "https://stackoverflow.com/users/655862/greg-weber"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1192, "favorite_count": 1, "accepted_answer_id": 42535161, "answer_count": 1, "score": 4, "last_activity_date": 1488386862, "creation_date": 1488376630, "question_id": 42533659, "link": "https://stackoverflow.com/questions/42533659/write-directly-from-a-reader-in-rust", "title": "Write directly from a reader in Rust", "body": "<p>How does one stream data from a reader to a write in Rust?</p>\n\n<p>My end goal is actually to write out some gzipped data in a streaming fashion. It seems like what I am missing is a function to iterate over data from a reader and write it out to a file.</p>\n\n<p>This task would be easy to accomplish with read_to_string, etc. But my requirement is to stream the data to keep memory usage down. I have not been able to find a simple way to do this that doesn't make lots of buffer allocations.</p>\n\n<pre><code>use std::io;\nuse std::io::prelude::*;\nuse std::io::{BufReader};\nuse std::fs::File;\nuse flate2::read::{GzEncoder};\nuse flate2::{Compression};\n\npub fn gzipped&lt;R: Read&gt;(file: String, stream: R) -&gt; io::Result&lt;()&gt; {\n    let file = File::create(file)?;\n    let gz = BufReader::new(GzEncoder::new(stream, Compression::Default));\n    read_write(gz, file)\n}\n\npub fn read_write&lt;R: BufRead, W: Write&gt;(mut r: R, mut w: W) -&gt; io::Result&lt;()&gt; {\n  // ?\n}\n</code></pre>\n"}, {"tags": ["rust", "ffi", "ownership"], "answers": [{"comments": [{"owner": {"reputation": 276, "user_id": 1923068, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cd5986e5131e9320fe090b9b0723527f?s=128&d=identicon&r=PG", "display_name": "Anthony", "link": "https://stackoverflow.com/users/1923068/anthony"}, "edited": false, "score": 0, "creation_date": 1515098596, "post_id": 42525561, "comment_id": 83181924, "body": "<code>std::unique_ptr</code> has a template parameter, <code>Deleter</code>, which defaults to <code>std::default_delete&lt;T&gt;</code>. It might be convenient to take advanage of this by providing an exposed Rust function to do the deletion instead. Alternatively, you might be able to specialize <code>std::default_delete</code> so that <i>all</i> instances <code>unique_ptr&lt;RustType&gt;</code> get deallocated correctly."}], "tags": [], "owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "is_accepted": true, "score": 13, "last_activity_date": 1529952375, "last_edit_date": 1529952375, "creation_date": 1488352925, "answer_id": 42525561, "question_id": 42523354, "link": "https://stackoverflow.com/questions/42523354/how-to-transfer-ownership-of-a-value-to-c-code-from-rust/42525561#42525561", "title": "How to transfer ownership of a value to C code from Rust?", "body": "<p>The <code>std::unique_ptr</code> type in C++ corresponds to <code>Box</code> in Rust, and <code>.release()</code> <a href=\"https://doc.rust-lang.org/std/boxed/struct.Box.html#method.into_raw\" rel=\"noreferrer\">corresponds to <code>Box::into_raw</code></a>.</p>\n\n<pre><code>let c = Box::new(SomeStruct::new());\nunsafe {\n    c_function(Box::into_raw(c));\n}\n</code></pre>\n\n<p>Note that the C function should return the ownership of the pointer to Rust to destroy the structure. It is incorrect to free the memory using C's <code>free</code> or C++'s <code>delete</code>.</p>\n\n<pre><code>pub unsafe extern \"C\" fn delete_some_struct(ptr: *mut SomeStruct) {\n    // Convert the pointer back into a Box and drop the Box.\n    Box::from_raw(ptr);\n}\n</code></pre>\n"}], "owner": {"reputation": 333, "user_id": 2056328, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/408b85b14751f4dcc4128cf5896de27d?s=128&d=identicon&r=PG", "display_name": "kkspeed", "link": "https://stackoverflow.com/users/2056328/kkspeed"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1394, "favorite_count": 2, "accepted_answer_id": 42525561, "answer_count": 1, "score": 9, "last_activity_date": 1529952375, "creation_date": 1488343312, "last_edit_date": 1529952273, "question_id": 42523354, "link": "https://stackoverflow.com/questions/42523354/how-to-transfer-ownership-of-a-value-to-c-code-from-rust", "title": "How to transfer ownership of a value to C code from Rust?", "body": "<p>I'm trying to write some Rust code with FFI that involves C taking ownership of a struct:</p>\n\n<pre><code>fn some_function() {\n    let c = SomeStruct::new();\n    unsafe {\n        c_function(&amp;mut c);\n    }\n}\n</code></pre>\n\n<p>I want <code>c_function</code> to take ownership of <code>c</code>.  In C++, this could be achieved by the <code>release</code> method of <code>unqiue_ptr</code>. Is there something similar in Rust?</p>\n"}, {"tags": ["generics", "syntax", "rust", "traits", "associated-types"], "answers": [{"comments": [{"owner": {"reputation": 155, "user_id": 2662316, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/597ba4c57e54d53deb4a7c9e9d99e6f4?s=128&d=identicon&r=PG", "display_name": "jdeastwood", "link": "https://stackoverflow.com/users/2662316/jdeastwood"}, "edited": false, "score": 0, "creation_date": 1488302665, "post_id": 42514984, "comment_id": 72167312, "body": "Well that was easy! This also simplifies the first generic example <code>Vec&lt;T&gt;: FromIterator&lt;&lt;T as BitXor&gt;::Output&gt;</code> is no longer necessary. Thanks!"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 2, "last_activity_date": 1488302298, "creation_date": 1488302298, "answer_id": 42514984, "question_id": 42514290, "link": "https://stackoverflow.com/questions/42514290/type-mismatch-between-type-parameter-and-stdopsbitxor-output-associated-type/42514984#42514984", "title": "Type mismatch between type parameter and std::ops::BitXor Output associated type", "body": "<p>You just need to tell the compiler that the associated type <code>Output</code> is the same as <code>T</code>.</p>\n\n<pre><code>fn fixed_xor_generic_inplace&lt;T&gt;(l: &amp;mut [T], r: &amp;[T])\n    where T: BitXor&lt;Output = T&gt; + Copy {\n    for (left, right) in l.iter_mut().zip(r.iter()) {\n        *left = *left ^ *right;\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 155, "user_id": 2662316, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/597ba4c57e54d53deb4a7c9e9d99e6f4?s=128&d=identicon&r=PG", "display_name": "jdeastwood", "link": "https://stackoverflow.com/users/2662316/jdeastwood"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 116, "favorite_count": 0, "accepted_answer_id": 42514984, "answer_count": 1, "score": 3, "last_activity_date": 1547896101, "creation_date": 1488300249, "last_edit_date": 1547896101, "question_id": 42514290, "link": "https://stackoverflow.com/questions/42514290/type-mismatch-between-type-parameter-and-stdopsbitxor-output-associated-type", "title": "Type mismatch between type parameter and std::ops::BitXor Output associated type", "body": "<p>I'm in the process of learning Rust. I find \"over-engineering\"toy examples to be a useful thing to do in the early stages, which has led me to this situation.</p>\n\n<p>Starting with this simple function: </p>\n\n<pre><code>extern crate data_encoding;\n\nuse std::ops::BitXor;\nuse data_encoding::hex;\nuse std::iter::FromIterator;\n\n\nfn fixed_xor_basic(l: &amp;[u8], r: &amp;[u8]) -&gt; Vec&lt;u8&gt; {\n    l.iter().zip(r.iter()).map(|(x, y)| *x ^ *y).collect()\n}\n\n#[test]\nfn test_fixed_xor_basic() {\n    let input_1 = hex::decode(b\"1C0111001F010100061A024B53535009181C\").unwrap();\n    let input_2 = hex::decode(b\"686974207468652062756C6C277320657965\").unwrap();\n\n    let expected_output = hex::decode(b\"746865206B696420646F6E277420706C6179\").unwrap();\n\n    assert_eq!(fixed_xor_basic(&amp;input_1, &amp;input_2), expected_output);\n}\n</code></pre>\n\n<p>I moved onto a simple variant getting rid of  the allocation:</p>\n\n<pre><code>fn fixed_xor_basic_inplace(l: &amp;mut [u8], r: &amp;[u8]) {\n    for (left, right) in l.iter_mut().zip(r.iter()) {\n        *left = *left ^ *right;\n    }\n}\n</code></pre>\n\n<p>And another which accepts any type which can be XORed:</p>\n\n<pre><code>fn fixed_xor_generic&lt;T&gt;(l: &amp;[T], r: &amp;[T]) -&gt; Vec&lt;T&gt;\n    where T: BitXor + Copy,\n          Vec&lt;T&gt;: FromIterator&lt;&lt;T as BitXor&gt;::Output&gt; {\n    l.iter().zip(r.iter()).map(|(x, y)| *x ^ *y).collect()\n}\n</code></pre>\n\n<p>This second variant initially didn't compile -- but the error message hinted me towards adding the constraint <code>Vec&lt;T&gt;: FromIterator&lt;&lt;T as BitXor&gt;::Output&gt;</code>.  Presumably this constraint has given the compiler some hint that <code>BitXor::Output</code> is in fact the same thing as <code>T</code>, but I'm not clear on what exactly that hint is. </p>\n\n<p>Now... combining the two has me stumped:</p>\n\n<pre><code>fn fixed_xor_generic_inplace&lt;T&gt;(l: &amp;mut [T], r: &amp;[T])\n    where T: BitXor + Copy {\n    for (left, right) in l.iter_mut().zip(r.iter()) {\n        *left = *left ^ *right;\n    }\n}\n</code></pre>\n\n<p>Produces an error:</p>\n\n<pre><code>error[E0308]: mismatched types\n  --&gt; src/xor_lib.rs:27:17\n   |\n27 |         *left = *left ^ *right;\n   |                 ^^^^^^^^^^^^^^ expected type parameter, found associated type\n   |\n   = note: expected type `T`\n   = note:    found type `&lt;T as std::ops::BitXor&gt;::Output`\n\nerror: aborting due to previous error\n</code></pre>\n\n<p>I <em>strongly suspect</em> that the two situations are similar and that I need to provide some extra bit of context to help the compiler figure out the <code>T</code> is in fact <code>&lt;T as std::ops::BitXor&gt;::Output</code> by another name. </p>\n\n<p>Am I on the right track? If so, what would this hint be?</p>\n\n<p>(also the next challenge is making the function accept IntoIterator types rather than slices -- if that might affect the solution at all).</p>\n"}, {"tags": ["rust", "fibonacci", "idioms", "fall-through"], "comments": [{"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1488288654, "post_id": 42509526, "comment_id": 72157365, "body": "TIL that a tribonacci sequence exists ^^."}], "answers": [{"comments": [{"owner": {"reputation": 791, "user_id": 678861, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/PyVWE.jpg?s=128&g=1", "display_name": "Denis Drescher", "link": "https://stackoverflow.com/users/678861/denis-drescher"}, "edited": false, "score": 0, "creation_date": 1488303377, "post_id": 42510220, "comment_id": 72167717, "body": "Great idea! My code is subtly different from that sequence (but thanks for teaching me it exists!) but I can adapt your idea to return the same results by using these anchors: <code>0 =&gt; 0, 1 =&gt; 1, 2 =&gt; 2, 3 =&gt; 4</code>. I\u2019ll add the context to my question."}], "tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": true, "score": 9, "last_activity_date": 1488292504, "last_edit_date": 1488292504, "creation_date": 1488288878, "answer_id": 42510220, "question_id": 42509526, "link": "https://stackoverflow.com/questions/42509526/idiomatic-implementation-of-the-tribonacci-sequence-in-rust/42510220#42510220", "title": "Idiomatic implementation of the tribonacci sequence in Rust", "body": "<p>Based on the <a href=\"http://mathworld.wolfram.com/TribonacciNumber.html\" rel=\"noreferrer\">definition of the tribonacci sequence</a> I found you could write it in a more concise manner like this:</p>\n\n<pre><code>fn options(stairs: i32) -&gt; i32 {\n    match stairs {\n        0 =&gt; 0,\n        1 =&gt; 1,\n        2 =&gt; 1,\n        3 =&gt; 2,\n        _ =&gt; options(stairs - 1) + options(stairs - 2) + options(stairs - 3)\n    }\n}\n</code></pre>\n\n<p>I would also recommend changing the funtion definition to only accept positive integers, e.g. <code>u32</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 791, "user_id": 678861, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/PyVWE.jpg?s=128&g=1", "display_name": "Denis Drescher", "link": "https://stackoverflow.com/users/678861/denis-drescher"}, "edited": false, "score": 0, "creation_date": 1488304079, "post_id": 42510463, "comment_id": 72168070, "body": "Thanks! Not sure which answer to accept. Yours is as generic as my question was, and is basically \u201cNo, this is fine.\u201d Ljedrz\u2019 is a very welcome improvement over my particular example. I\u2019ll sleep over it."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 791, "user_id": 678861, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/PyVWE.jpg?s=128&g=1", "display_name": "Denis Drescher", "link": "https://stackoverflow.com/users/678861/denis-drescher"}, "edited": false, "score": 1, "creation_date": 1488307690, "post_id": 42510463, "comment_id": 72169969, "body": "@DenisDrescher: I would advise to accept ljedrz&#39;s answer. On StackOverflow the score of an answer represents its usefulness in general while the &quot;accepted&quot; mark represents its usefulness for the OP; thus, since ljedrz&#39;s answer is an extremely elegant solution for this particular case, I would personally accept it rather than a more general (and vague) statement."}, {"owner": {"reputation": 791, "user_id": 678861, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/PyVWE.jpg?s=128&g=1", "display_name": "Denis Drescher", "link": "https://stackoverflow.com/users/678861/denis-drescher"}, "edited": false, "score": 0, "creation_date": 1488355023, "post_id": 42510463, "comment_id": 72188139, "body": "I see, thanks! I wasn\u2019t aware of the difference in meaning. :-)"}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 9, "last_activity_date": 1488289589, "creation_date": 1488289589, "answer_id": 42510463, "question_id": 42509526, "link": "https://stackoverflow.com/questions/42509526/idiomatic-implementation-of-the-tribonacci-sequence-in-rust/42510463#42510463", "title": "Idiomatic implementation of the tribonacci sequence in Rust", "body": "<p>To answer the generic question, I would argue that <code>match</code> and fallthrough are somewhat antithetical.</p>\n\n<p><code>match</code> is used to be able to perform different actions based on the different patterns. Most of the time, the very values extracted via pattern matching are so different than a fallthrough does not make sense.</p>\n\n<p>A fallthrough, instead, points to a <em>sequence</em> of actions. There are many ways to express sequences: recursion, iteration, ...</p>\n\n<p>In your case, for example, one could use a loop:</p>\n\n<pre><code>for i in 1..4 {\n    if stairs &gt;= i {\n        count += options(stairs - i);\n    }\n}\n</code></pre>\n\n<p>Of course, I find @ljedrz' solution even more elegant in this particular instance.</p>\n"}, {"comments": [{"owner": {"reputation": 791, "user_id": 678861, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/PyVWE.jpg?s=128&g=1", "display_name": "Denis Drescher", "link": "https://stackoverflow.com/users/678861/denis-drescher"}, "edited": false, "score": 0, "creation_date": 1488354946, "post_id": 42524449, "comment_id": 72188091, "body": "Oh darn, but as a Pythonista I can\u2019t complain. Your code is very interesting, and it\u2019ll take me a bit of research to understand. Thanks!"}], "tags": [], "owner": {"reputation": 3566, "user_id": 5138648, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1fdbc41d6ae88135845b5d965dac0b13?s=128&d=identicon&r=PG", "display_name": "aSpex", "link": "https://stackoverflow.com/users/5138648/aspex"}, "is_accepted": false, "score": 2, "last_activity_date": 1488350694, "last_edit_date": 1488350694, "creation_date": 1488348604, "answer_id": 42524449, "question_id": 42509526, "link": "https://stackoverflow.com/questions/42509526/idiomatic-implementation-of-the-tribonacci-sequence-in-rust/42524449#42524449", "title": "Idiomatic implementation of the tribonacci sequence in Rust", "body": "<p>I would advise to <a href=\"https://www.rust-lang.org/en-US/faq.html#does-rust-do-tail-call-optimization\" rel=\"nofollow noreferrer\">avoid recursion</a> in Rust. It is better to use <a href=\"https://doc.rust-lang.org/stable/book/iterators.html\" rel=\"nofollow noreferrer\">iterators</a>:</p>\n\n<pre><code>struct Trib(usize, usize, usize);\n\nimpl Default for Trib {\n    fn default() -&gt; Trib {\n        Trib(1, 0, 0)\n    }\n}\n\nimpl Iterator for Trib {\n    type Item = usize;\n    fn next(&amp;mut self) -&gt; Option&lt;usize&gt; {\n        let &amp;mut Trib(a, b, c) = self;\n        let d = a + b + c;\n        *self = Trib(b, c, d);\n        Some(d)\n    }\n}\n\nfn options(stairs: usize) -&gt; usize {\n    Trib::default().take(stairs + 1).last().unwrap()\n}\n\nfn main() {\n    for (i, v) in Trib::default().enumerate().take(10) {\n        println!(\"i={}, t={}\", i, v);\n    }\n\n    println!(\"{}\", options(0));\n    println!(\"{}\", options(1));\n    println!(\"{}\", options(3));\n    println!(\"{}\", options(7));\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=45984b98a7576a24c82a94d77406dfb6&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}], "owner": {"reputation": 791, "user_id": 678861, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/PyVWE.jpg?s=128&g=1", "display_name": "Denis Drescher", "link": "https://stackoverflow.com/users/678861/denis-drescher"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2826, "favorite_count": 1, "accepted_answer_id": 42510220, "answer_count": 3, "score": 0, "last_activity_date": 1574010778, "creation_date": 1488287110, "last_edit_date": 1574010778, "question_id": 42509526, "link": "https://stackoverflow.com/questions/42509526/idiomatic-implementation-of-the-tribonacci-sequence-in-rust", "title": "Idiomatic implementation of the tribonacci sequence in Rust", "body": "<p>I\u2019m new to Rust, but as a fan of Haskell, I greatly appreciate the way <code>match</code> works in Rust. Now I\u2019m faced with the rare case where I do need fall-through \u2013 in the sense that I would like all matching cases of several overlapping ones to be executed. This works:</p>\n\n<pre><code>fn options(stairs: i32) -&gt; i32 {\n    if stairs == 0 {\n        return 1;\n    }\n    let mut count: i32 = 0;\n    if stairs &gt;= 1 {\n        count += options(stairs - 1);\n    }\n    if stairs &gt;= 2 {\n        count += options(stairs - 2);\n    }\n    if stairs &gt;= 3 {\n        count += options(stairs - 3);\n    }\n    count\n}\n</code></pre>\n\n<p>My question is whether this is idiomatic in Rust or whether there is a better way.</p>\n\n<p>The context is a question from <em>Cracking the Coding Interview</em>: \u201cA child is running up a staircase with <em>n</em> steps and can hop either 1 step, 2 steps, or 3 steps at a time. Implement a method to count how many possible ways the child can run up the stairs.\u201d</p>\n"}, {"tags": ["generics", "enums", "macros", "rust"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1488288343, "post_id": 42509219, "comment_id": 72157158, "body": "<i>The error looks odd to me because this enum definitely derives Copy trait.</i> =&gt; it does NOT actually. Deriving <code>Copy</code>, <code>Clone</code>, ... on generics only implements the traits <i>on the condition</i> that all data members also implement the trait. Thus, for a generic <code>W</code> that is NOT constrained to implement <code>Copy</code>, the whole generic enum does NOT implement <code>Copy</code>."}, {"owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1488288440, "post_id": 42509219, "comment_id": 72157212, "body": "So how do I fix it? By adding <code>: Copy</code> to each type in <code>ty_generics</code>?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1488288648, "post_id": 42509219, "comment_id": 72157359, "body": "If I knew how to fix this, I would post an answer, not a comment. Sorry :x"}], "answers": [{"tags": [], "owner": {"reputation": 6357, "user_id": 6086311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb99289473f6393b89474785f2d294d1?s=128&d=identicon&r=PG", "display_name": "dtolnay", "link": "https://stackoverflow.com/users/6086311/dtolnay"}, "is_accepted": false, "score": 1, "last_activity_date": 1538981956, "creation_date": 1538981956, "answer_id": 52696953, "question_id": 42509219, "link": "https://stackoverflow.com/questions/42509219/how-to-implement-a-procedural-macro-which-implements-a-generic-trait-for-generic/52696953#52696953", "title": "How to implement a procedural macro which implements a generic trait for generic enums?", "body": "<p>If you require the self-type of the derive to implement <code>Copy</code>, you can have the derive macro add a bound <code>T: Copy</code> to every type parameter in the generated impl block.</p>\n\n<pre><code>extern crate proc_macro;\nuse self::proc_macro::TokenStream;\n\nuse quote::quote;\nuse syn::{parse_macro_input, parse_quote, DeriveInput, GenericParam, Generics};\n\n#[proc_macro_derive(MyProcMacro)]\npub fn my_proc_macro(input: TokenStream) -&gt; TokenStream {\n    let ast = parse_macro_input!(input as DeriveInput);\n\n    let name = &amp;ast.ident;\n    let generics = add_trait_bounds(ast.generics);\n    let (impl_generics, ty_generics, where_clause) = generics.split_for_impl();\n\n    TokenStream::from(quote! {\n        impl #impl_generics MyTrait&lt;Self&gt; for #name #ty_generics #where_clause {\n            fn change(&amp;mut self, new_obj: Self) -&gt; bool {\n                true\n            }\n        }\n    })\n}\n\n// Add a bound `T: Copy` to every type parameter T.\nfn add_trait_bounds(mut generics: Generics) -&gt; Generics {\n    for param in &amp;mut generics.params {\n        if let GenericParam::Type(ref mut type_param) = *param {\n            type_param.bounds.push(parse_quote!(Copy));\n        }\n    }\n    generics\n}\n</code></pre>\n\n<p>Invoking the macro:</p>\n\n<pre><code>use my_proc_macro::MyProcMacro;\n\npub trait MyTrait&lt;S&gt; {\n    fn change(&amp;mut self, new_obj: S) -&gt; bool;\n}\n\n#[derive(Copy, Clone, Debug, MyProcMacro)]\nenum Enum&lt;W, C, I, F&gt; {\n    A(W),\n    B(C),\n    C(I),\n    D(F),\n}\n</code></pre>\n\n<p>Using <a href=\"https://github.com/dtolnay/cargo-expand\" rel=\"nofollow noreferrer\">cargo expand</a> we can confirm that the generated code has <code>Copy</code> bounds:</p>\n\n<pre><code>impl&lt;W: Copy, C: Copy, I: Copy, F: Copy&gt; MyTrait&lt;Self&gt; for Enum&lt;W, C, I, F&gt; {\n    fn change(&amp;mut self, new_obj: Self) -&gt; bool {\n        true\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 448, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1538981956, "creation_date": 1488286198, "last_edit_date": 1488288873, "question_id": 42509219, "link": "https://stackoverflow.com/questions/42509219/how-to-implement-a-procedural-macro-which-implements-a-generic-trait-for-generic", "title": "How to implement a procedural macro which implements a generic trait for generic enums?", "body": "<p>How to implement a procedural macro for such a enum?</p>\n\n<pre><code>#[derive(Copy, Clone, Debug, MyProcMacro)]\nenum Enum&lt;W, C, I, F&gt; {\n    A(W),\n    B(C),\n    C(I),\n    D(F)\n}\n</code></pre>\n\n<p>I have tried to use <code>syn::Generics</code> but it does not compile and produces invalid code. This is a trait I want to implement:</p>\n\n<pre><code>pub trait MyTrait&lt;S&gt; {\n    fn change(&amp;mut self, new_obj: S) -&gt; bool;\n}\n</code></pre>\n\n<p>And implementation:</p>\n\n<pre><code>#[proc_macro_derive(MyProcMacro)]\npub fn my_proc_macro(input: TokenStream) -&gt; TokenStream {\n    // Construct a string representation of the type definition\n    let s = input.to_string();\n\n    // Parse the string representation\n    let ast = syn::parse_derive_input(&amp;s).unwrap();\n\n    // Build the impl\n    let gen = impl_macro(&amp;ast);\n\n    // Return the generated impl\n    gen.parse().unwrap()\n}\n\nfn impl_macro(ast: &amp;syn::DeriveInput) -&gt; Tokens {\n    let name = &amp;ast.ident;\n    let (impl_generics, ty_generics, where_clause) = ast.generics.split_for_impl();\n\nquote! {\n    impl #impl_generics mycrate::MyTrait&lt;#name #ty_generics&gt; for #name #ty_generics #where_clause {\n        fn change(&amp;mut self, new_obj: #name #ty_generics) -&gt; bool {\n            true\n        }\n    }\n}\n</code></pre>\n\n<p>It gives this code:</p>\n\n<pre><code>impl &lt; W , C , I , F &gt; mycrate :: MyTrait &lt; Enum &lt; W , C , I , F &gt; &gt; for Enum &lt; W , C , I , F &gt; { \n    fn change ( &amp; mut self , new_obj : Enum &lt; W , C , I , F &gt; ) -&gt; bool {\n        true \n    }\n}\n</code></pre>\n\n<p>I think it should be like that:</p>\n\n<pre><code>impl MyTrait&lt;Enum&lt;u64, u64, u64, u64&gt;&gt; for Enum&lt;u64, u64, u64, u64&gt; {\n    fn change(&amp;mut self, new_obj: Enum&lt;u64, u64, u64, u64&gt;) {\n        true\n    }\n}\n</code></pre>\n\n<p>As I understand we can't obtain information about needed types from procedural macro context, am I correct? I guess that is why I could not find such information in <code>syn</code> crate.</p>\n\n<p>If I leave the code I wrote untouched I get this error:</p>\n\n<pre><code>error[E0382]: use of moved value: `new_obj`\n  --&gt; src/main.rs:28:30\n   |\n28 | #[derive(Copy, Clone, Debug, MyProcMacro)]\n   |                              ^^^^^^^^^^^ value moved here in previous iteration of loop\n   |\n   = note: move occurs because `new_obj` has type `Enum&lt;W, C, I, F&gt;`, which does not implement the `Copy` trait\n</code></pre>\n\n<p>The error looks odd to me because this <code>enum</code> definitely derives <code>Copy</code> trait.</p>\n\n<p>UPD:</p>\n\n<p>Based on @Matthieu M.'s comment I was able to compile it successfully by adding <code>Copy</code> requirement to each enum type:</p>\n\n<pre><code>enum CupState&lt;W: Copy, C: Copy, I: Copy, F: Copy&gt; { ... }\n</code></pre>\n\n<p>However, I am still looking for a better solution which does not require user code manipulations.</p>\n"}, {"tags": ["rust", "lifetime", "borrowing"], "comments": [{"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 2, "creation_date": 1488269692, "post_id": 42503296, "comment_id": 72144710, "body": "You should make <code>layout</code> a <code>String</code> instead of <code>&amp;&#39;static str</code>. <a href=\"http://stackoverflow.com/questions/24158114/rust-string-versus-str\" title=\"rust string versus str\">stackoverflow.com/questions/24158114/rust-string-versus-str</a>"}, {"owner": {"reputation": 183, "user_id": 7634046, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e33f545f52f42a96ce90b1a37a0fd6c8?s=128&d=identicon&r=PG&f=1", "display_name": "\u5f6d\u7075\u4fca", "link": "https://stackoverflow.com/users/7634046/%e5%bd%ad%e7%81%b5%e4%bf%8a"}, "reply_to_user": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1488270695, "post_id": 42503296, "comment_id": 72145284, "body": "thanks,this can help me do it.but,if i want use &amp;str.how to do it?rust cannot direct edit lifetime\uff1f"}, {"owner": {"reputation": 14451, "user_id": 33499, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/17c590aa4c56918b47c7ba5e39dba5d8?s=128&d=identicon&r=PG", "display_name": "wimh", "link": "https://stackoverflow.com/users/33499/wimh"}, "edited": false, "score": 0, "creation_date": 1488275578, "post_id": 42503296, "comment_id": 72148466, "body": "@\u5f6d\u7075\u4fca why do you want to use <code>&amp;str</code>?"}, {"owner": {"reputation": 23600, "user_id": 1695172, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/6319d7eafca7852cf04c88598ca31e75?s=128&d=identicon&r=PG", "display_name": "Netwave", "link": "https://stackoverflow.com/users/1695172/netwave"}, "edited": false, "score": 0, "creation_date": 1488278121, "post_id": 42503296, "comment_id": 72150314, "body": "i dont get the part where the <code>&amp;&#39;</code> in Formater could be used with <code>b</code> since b is not a static str, you could not have a static reference to it right?"}], "answers": [{"comments": [{"owner": {"reputation": 1273, "user_id": 1114113, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/618637d5a66688a5674f67edfeeae6a8?s=128&d=identicon&r=PG", "display_name": "Lunfel", "link": "https://stackoverflow.com/users/1114113/lunfel"}, "edited": false, "score": 0, "creation_date": 1536209461, "post_id": 42506211, "comment_id": 91342596, "body": "<code>layout: &amp;&#39;a mut &amp;str</code>. I don&#39;t quite understand how there can be two ampersands in the type signature. I quite new to Rust. Is one for burrow and the other a reference? Aren&#39;t burrows references? I am confused."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 14, "last_activity_date": 1488279411, "last_edit_date": 1488279411, "creation_date": 1488277632, "answer_id": 42506211, "question_id": 42503296, "link": "https://stackoverflow.com/questions/42503296/value-does-not-live-long-enough/42506211#42506211", "title": "Value does not live long enough", "body": "<p>The scope of <code>b</code> is the <code>new</code> function, so its memory will be freed when the function returns. But you are trying to return a reference to <code>b</code> from that function. If Rust let you do this, the only code that could possibly use that reference would use it <em>after</em> the value is invalid. The borrow checker is protecting you from <em>undefined behaviour</em>.</p>\n\n<p>Making <code>layout</code> to be <code>&amp;'static str</code> sounds like you are making things simple, but it is unreasonable to expect the dynamically allocated memory from <code>regex.replace_all</code> to be static. Without getting into <code>unsafe</code> code, you should consider anything in the <code>'static</code>  lifetime to be a compile-time constant. For example, a string literal.</p>\n\n<p>As others have said, you probably want <code>layout</code> to be a <code>String</code>. A <code>String</code> is similar to <code>&amp;str</code>, but it <em>owns</em> the underlying <code>str</code>. That means when you move the <code>String</code>, the underlying <code>str</code> moves with it. A <code>&amp;str</code> is a reference and must not outlive the owner of the <code>str</code> that it points to.</p>\n\n<hr>\n\n<p>If you really want it to be <code>&amp;str</code>, an alternative but less ergonomic approach is to have the caller of <code>new()</code> own the <code>&amp;str</code>, and pass it in as a mutable reference.</p>\n\n<pre><code>pub struct Formatter&lt;'a&gt; {\n    layout: &amp;'a str,\n}\n\nimpl &lt;'a&gt; Formatter&lt;'a&gt; {\n    pub fn new(layout: &amp;'a mut &amp;str) -&gt; Formatter&lt;'a&gt; {\n        let regex = Regex::new(r\"%\\{([a-z]+)(?::(.*?[^\\\\]))?\\}\").unwrap();\n        *layout = regex.replace_all(layout, \"{}\");\n\n        return Formatter {\n            layout: layout,\n        };\n    }\n}\n</code></pre>\n\n<p>This moves the problem one layer up the call stack and means that the reference you pass to <code>new</code> will be mutated by <code>new</code>.</p>\n\n<pre><code>pub fn main() {\n    let mut s = \"blah %{blah}\";\n    {\n        let formatter = Formatter::new(&amp;mut s);\n        println!(\"{:?}\", formatter.layout); // \"blah {}\"\n    }\n    println!(\"{:?}\", s); // \"blah {}\"\n}\n</code></pre>\n\n<p>Now <code>s</code> is owned by <code>main</code>, so <code>formatter</code> is valid as long as it is used only in a smaller scope than <code>main</code>.</p>\n\n<p>But overall, I think this method is messier and you should just stick with <code>String</code> unless you have a good reason.</p>\n"}], "owner": {"reputation": 183, "user_id": 7634046, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e33f545f52f42a96ce90b1a37a0fd6c8?s=128&d=identicon&r=PG&f=1", "display_name": "\u5f6d\u7075\u4fca", "link": "https://stackoverflow.com/users/7634046/%e5%bd%ad%e7%81%b5%e4%bf%8a"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 14372, "favorite_count": 3, "accepted_answer_id": 42506211, "answer_count": 1, "score": 18, "last_activity_date": 1545065669, "creation_date": 1488269265, "last_edit_date": 1545065669, "question_id": 42503296, "link": "https://stackoverflow.com/questions/42503296/value-does-not-live-long-enough", "title": "Value does not live long enough", "body": "<p>I don't completely understand lifetimes, but I think <code>b</code>'s lifetime will end before <code>self</code>'s.</p>\n\n<p>So, how to edit this code? Do I copy something in memory? If I make a new instance, this lifetime must adhere to this case.</p>\n\n<pre><code>pub struct Formater {\n    layout: &amp;'static str,\n}\n\nimpl Formater {\n    pub fn new(layout: &amp;'static str) -&gt; Formater {\n        let regex = Regex::new(r\"%\\{([a-z]+)(?::(.*?[^\\\\]))?\\}\").unwrap();\n        let b = regex.replace_all(layout, \"{}\");\n\n        return Formater {\n            layout: &amp;b,\n        };\n    }\n}\n</code></pre>\n\n<p>The error:</p>\n\n<pre><code>error: `b` does not live long enough\n  --&gt; src/format.rs:16:22\n   |\n16 |             layout: &amp;b,\n   |                      ^ does not live long enough\n17 |         };\n18 |     }\n   |     - borrowed value only lives until here\n   |\n   = note: borrowed value must be valid for the static lifetime...\n</code></pre>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1488254778, "post_id": 42499283, "comment_id": 72138615, "body": "Is it possible to separate the World into two parts, the <code>entities</code> and everything else? If you hand out the whole World, the receiver could modify the <code>entities</code> and thus invalidate the loop."}, {"owner": {"reputation": 18146, "user_id": 646619, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/bd61a0f309ebc135d2661710c2faf379?s=128&d=identicon&r=PG", "display_name": "Colonel Thirty Two", "link": "https://stackoverflow.com/users/646619/colonel-thirty-two"}, "reply_to_user": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1488297529, "post_id": 42499283, "comment_id": 72163944, "body": "@kennytm Well, the entity being updated needs to be able to mutate existing entities (ex. a bullet entity will need to alter the player&#39;s health). It seems like the best way according to Francis&#39;s link is to use RefCell for the entities in the array."}], "owner": {"reputation": 18146, "user_id": 646619, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/bd61a0f309ebc135d2661710c2faf379?s=128&d=identicon&r=PG", "display_name": "Colonel Thirty Two", "link": "https://stackoverflow.com/users/646619/colonel-thirty-two"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 66, "favorite_count": 0, "closed_date": 1488257602, "answer_count": 0, "score": 1, "last_activity_date": 1488250137, "creation_date": 1488250137, "question_id": 42499283, "link": "https://stackoverflow.com/questions/42499283/game-loop-in-rust-while-satisfying-the-borrow-checker", "closed_reason": "Duplicate", "title": "Game loop in Rust while satisfying the borrow checker", "body": "<p>Here's a very simple stab at a game loop in Rust:</p>\n\n<pre><code>trait Entity {\n    fn update(&amp;mut self, world: &amp;mut World);\n}\n\nstruct World {\n    entities: Vec&lt;Box&lt;Entity&gt;&gt;\n}\nimpl World {\n    fn update(&amp;mut self) {\n        for ent in self.entities.iter_mut() {\n            ent.update(self);\n        }\n    }\n}\n</code></pre>\n\n<p>This, however, does not work:</p>\n\n<pre><code>error[E0499]: cannot borrow `*self` as mutable more than once at a time\n  --&gt; test.rs:12:16\n   |\n11 |                    for ent in self.entities.iter_mut() {\n   |                               ------------- first mutable borrow occurs here\n12 |                            ent.update(self);\n   |                                ^^^^ second mutable borrow occurs here\n13 |                    }\n   |                    - first borrow ends here\n\nerror: aborting due to previous error\n</code></pre>\n\n<p>In order to get the entity out of the vector, I need to do a mutable borrow of the <code>World</code> struct, which prevents the entity from using it in any way.</p>\n\n<p>What would be a good way to structure this, so that I can both mutate the entity as well as have the entity reference other objects in the world (for collision checking, etc)?</p>\n\n<p>The only way I can think of is to either have the entity return an updated copy of itself (I don't think all that allocating and copying would be good for performance) or cowboy it with <code>unsafe</code>.</p>\n"}, {"tags": ["data-structures", "rust"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1488250339, "post_id": 42499049, "comment_id": 72137490, "body": "You won&#39;t be able to do this because <code>transmute</code> is required to know the sizes at compile-time. Your solution with <code>*mut</code> pointers looks like how you have to do it"}], "answers": [{"comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1488251232, "post_id": 42499050, "comment_id": 72137696, "body": "You don&#39;t need the first two lines inside the <code>unsafe</code> block to be there. It&#39;s better to move them out in order to minimise the amount of potentially unsafe code. Also, given you don&#39;t know the size of the buffer, you need to make sure that it is big enough or else it could panic. <a href=\"https://play.rust-lang.org/?gist=f7e566dcd4bd93566761a91a24905d27&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">Here is an example</a>."}, {"owner": {"reputation": 4470, "user_id": 1884363, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/DmTLe.jpg?s=128&g=1", "display_name": "sudo", "link": "https://stackoverflow.com/users/1884363/sudo"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1488314125, "post_id": 42499050, "comment_id": 72173355, "body": "Thanks, that example is nicer than mine. I forgot to take advantage of Rust&#39;s knowledge of the vector size to make mine safer."}], "tags": [], "owner": {"reputation": 4470, "user_id": 1884363, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/DmTLe.jpg?s=128&g=1", "display_name": "sudo", "link": "https://stackoverflow.com/users/1884363/sudo"}, "is_accepted": false, "score": 0, "last_activity_date": 1586807402, "last_edit_date": 1586807402, "creation_date": 1488248607, "answer_id": 42499050, "question_id": 42499049, "link": "https://stackoverflow.com/questions/42499049/transmuting-u8-buffer-to-struct-in-rust/42499050#42499050", "title": "Transmuting u8 buffer to struct in Rust", "body": "<p>I gave up on the transmute stuff. <code>*mut</code> (raw pointers) in Rust are pretty similar to C pointers, so this was easy:</p>\n\n<pre><code>#[repr(C, packed)] // necessary\n#[derive(Debug, Copy, Clone)] // not necessary\nstruct MyStruct {\n    foo: u16,\n    bar: u8,\n}\n\nfn main() {\n    let v: Vec&lt;u8&gt; = vec![1, 2, 3];\n    let buffer = v.as_slice();\n    let mut s_safe: Option&lt;&amp;MyStruct&gt; = None;\n    let c_buf = buffer.as_ptr();\n    let s = c_buf as *mut MyStruct;\n    unsafe {\n        let ref s2 = *s;\n        s_safe = Some(s2);\n    }\n    println!(\"here is the struct: {:?}\", s_safe.unwrap());\n}\n</code></pre>\n\n<p>The <code>unsafe</code> tag there is no joke, but the way I'm using this, I know my buffer is filled and take the proper precautions involving endianness later on. </p>\n"}, {"comments": [{"owner": {"reputation": 4470, "user_id": 1884363, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/DmTLe.jpg?s=128&g=1", "display_name": "sudo", "link": "https://stackoverflow.com/users/1884363/sudo"}, "edited": false, "score": 0, "creation_date": 1488568023, "post_id": 42508686, "comment_id": 72305307, "body": "Thanks, didn&#39;t know about those read and write functions in <code>std::ptr</code>. I was looking in <code>std::mem</code> for something like that. Kinda strange IMO that those are separate modules."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 4470, "user_id": 1884363, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/DmTLe.jpg?s=128&g=1", "display_name": "sudo", "link": "https://stackoverflow.com/users/1884363/sudo"}, "edited": false, "score": 0, "creation_date": 1488629021, "post_id": 42508686, "comment_id": 72322614, "body": "@sudo: I agree that the division isn&#39;t clear to me either :("}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 13, "last_activity_date": 1576090242, "last_edit_date": 1576090242, "creation_date": 1488284589, "answer_id": 42508686, "question_id": 42499049, "link": "https://stackoverflow.com/questions/42499049/transmuting-u8-buffer-to-struct-in-rust/42508686#42508686", "title": "Transmuting u8 buffer to struct in Rust", "body": "<p>You can use methods on <a href=\"https://doc.rust-lang.org/std/primitive.pointer.html\" rel=\"nofollow noreferrer\">raw pointers</a> and functions in <a href=\"https://doc.rust-lang.org/std/ptr/index.html\" rel=\"nofollow noreferrer\"><code>std::ptr</code></a> to directly read/write objects in place. </p>\n\n<ul>\n<li><a href=\"https://doc.rust-lang.org/std/ptr/fn.read.html\" rel=\"nofollow noreferrer\"><code>std::ptr::read</code></a></li>\n<li><a href=\"https://doc.rust-lang.org/std/ptr/fn.read_unaligned.html\" rel=\"nofollow noreferrer\"><code>std::ptr::read_unaligned</code></a></li>\n<li><a href=\"https://doc.rust-lang.org/std/ptr/fn.write.html\" rel=\"nofollow noreferrer\"><code>std::ptr::write</code></a></li>\n<li><a href=\"https://doc.rust-lang.org/std/ptr/fn.write_unaligned.html\" rel=\"nofollow noreferrer\"><code>std::ptr::write_unaligned</code></a></li>\n</ul>\n\n<p>In your case:</p>\n\n<pre><code>fn main() {\n    let v: Vec&lt;u8&gt; = vec![1, 2, 3];\n    let s: MyStruct = unsafe { std::ptr::read(v.as_ptr() as *const _) };\n    println!(\"here is the struct: {:?}\", s);\n}\n</code></pre>\n\n<p>I would encourage you to wrap this in a reusable method and perform a length check on the source buffer before attempting the read.</p>\n"}, {"comments": [{"owner": {"reputation": 4470, "user_id": 1884363, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/DmTLe.jpg?s=128&g=1", "display_name": "sudo", "link": "https://stackoverflow.com/users/1884363/sudo"}, "edited": false, "score": 0, "creation_date": 1576115257, "post_id": 59292352, "comment_id": 104797336, "body": "Nice, I guess this fits the question more closely. I don&#39;t remember what I was trying to do with this back in 2017, something about interfacing with asn1c code."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 4470, "user_id": 1884363, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/DmTLe.jpg?s=128&g=1", "display_name": "sudo", "link": "https://stackoverflow.com/users/1884363/sudo"}, "edited": false, "score": 1, "creation_date": 1576115418, "post_id": 59292352, "comment_id": 104797371, "body": "@sudo <code>align_to</code> didn&#39;t exist in 2017, so the equivalent of this answer would have been a lot uglier then..."}, {"owner": {"reputation": 4470, "user_id": 1884363, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/DmTLe.jpg?s=128&g=1", "display_name": "sudo", "link": "https://stackoverflow.com/users/1884363/sudo"}, "edited": false, "score": 0, "creation_date": 1576115535, "post_id": 59292352, "comment_id": 104797403, "body": "Heh. I was using an outdated Rust version even back then too."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1576115349, "last_edit_date": 1576115349, "creation_date": 1576090799, "answer_id": 59292352, "question_id": 42499049, "link": "https://stackoverflow.com/questions/42499049/transmuting-u8-buffer-to-struct-in-rust/59292352#59292352", "title": "Transmuting u8 buffer to struct in Rust", "body": "<p>If you don't want to copy the data to the struct but instead leave it in place, you can use <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.align_to\" rel=\"noreferrer\"><code>slice::align_to</code></a>. This creates a <code>&amp;MyStruct</code> instead:</p>\n\n<pre><code>#[repr(C, packed)]\n#[derive(Debug, Copy, Clone)]\nstruct MyStruct {\n    foo: u16,\n    bar: u8,\n}\n\nfn main() {\n    let v = vec![1u8, 2, 3];\n\n    // I copied this code from Stack Overflow\n    // without understanding why this case is safe.\n    let (head, body, _tail) = unsafe { v.align_to::&lt;MyStruct&gt;() };\n    assert!(head.is_empty(), \"Data was not aligned\");\n    let my_struct = &amp;body[0];\n\n    println!(\"{:?}\", my_struct);\n}\n</code></pre>\n\n<p>Here, it's safe to use <code>align_to</code> to transmute some bytes to <code>MyStruct</code> because we've used <code>repr(C, packed)</code> and all of the types in <code>MyStruct</code> can be any arbitrary bytes.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/25410028/155423\">How to read a struct from a file in Rust?</a></li>\n<li><a href=\"https://stackoverflow.com/q/36061560/155423\">Can I take a byte array and deserialize it into a struct?</a></li>\n</ul>\n"}], "owner": {"reputation": 4470, "user_id": 1884363, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/DmTLe.jpg?s=128&g=1", "display_name": "sudo", "link": "https://stackoverflow.com/users/1884363/sudo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5984, "favorite_count": 4, "accepted_answer_id": 59292352, "answer_count": 3, "score": 10, "last_activity_date": 1586807402, "creation_date": 1488248607, "last_edit_date": 1576090309, "question_id": 42499049, "link": "https://stackoverflow.com/questions/42499049/transmuting-u8-buffer-to-struct-in-rust", "title": "Transmuting u8 buffer to struct in Rust", "body": "<p>I have a byte buffer of unknown size, and I want to create a local struct variable pointing to the memory of the beginning of the buffer. Following what I'd do in C, I tried a lot of different things in Rust and kept getting errors. This is my latest attempt:</p>\n\n<pre><code>use std::mem::{size_of, transmute};\n\n#[repr(C, packed)]\nstruct MyStruct {\n    foo: u16,\n    bar: u8,\n}\n\nfn main() {\n    let v: Vec&lt;u8&gt; = vec![1, 2, 3];\n    let buffer = v.as_slice();\n    let s: MyStruct = unsafe { transmute(buffer[..size_of::&lt;MyStruct&gt;()]) };\n}\n</code></pre>\n\n<p>I get an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the size for values of type `[u8]` cannot be known at compilation time\n   --&gt; src/main.rs:12:42\n    |\n12  |     let s: MyStruct = unsafe { transmute(buffer[..size_of::&lt;MyStruct&gt;()]) };\n    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n    |\n    = help: the trait `std::marker::Sized` is not implemented for `[u8]`\n    = note: to learn more, visit &lt;https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait&gt;\n</code></pre>\n"}, {"tags": ["generics", "rust", "traits"], "answers": [{"comments": [{"owner": {"reputation": 5777, "user_id": 1485877, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/tkdN8.jpg?s=128&g=1", "display_name": "drhagen", "link": "https://stackoverflow.com/users/1485877/drhagen"}, "edited": false, "score": 0, "creation_date": 1488462921, "post_id": 42498935, "comment_id": 72248990, "body": "How do I update the <code>RowVector</code> and <code>ColumnVector</code> traits to indicate that every struct that implements them must also implement the corresponding <code>Transpose</code>?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 5777, "user_id": 1485877, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/tkdN8.jpg?s=128&g=1", "display_name": "drhagen", "link": "https://stackoverflow.com/users/1485877/drhagen"}, "edited": false, "score": 0, "creation_date": 1488465348, "post_id": 42498935, "comment_id": 72250801, "body": "I think that will get quite complicated: there will be cyclic references between constraints on each of the traits, because you will have to define the impls in strict pairs, which is hard to express in Rust. A much simpler (and more flexible) design is to not enforce any constraints on the types themselves, but rather to put constraints on the places where the types are used."}, {"owner": {"reputation": 5777, "user_id": 1485877, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/tkdN8.jpg?s=128&g=1", "display_name": "drhagen", "link": "https://stackoverflow.com/users/1485877/drhagen"}, "edited": false, "score": 0, "creation_date": 1488467671, "post_id": 42498935, "comment_id": 72252503, "body": "So I couldn&#39;t write functions like <code>f&lt;Element&gt;(r: &amp;RowVector&lt;Element&gt;, c: &amp;ColumnVector&lt;Element&gt;)</code> and expect to be able use <code>transpose</code> in the body? I have to list <code>Transpose</code> along with the other linear algebra operations that I will need?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 5777, "user_id": 1485877, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/tkdN8.jpg?s=128&g=1", "display_name": "drhagen", "link": "https://stackoverflow.com/users/1485877/drhagen"}, "edited": false, "score": 1, "creation_date": 1488475323, "post_id": 42498935, "comment_id": 72257897, "body": "I&#39;m sure there is a way, but I can&#39;t directly see it, and it will probably take a bit of restructuring first. It <i>feels</i> like you are trying to shoehorn a Java-like paradigm - using traits in place of interfaces - and this doesn&#39;t really fit with how people program in Rust."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 2, "last_activity_date": 1488248363, "last_edit_date": 1488248363, "creation_date": 1488247876, "answer_id": 42498935, "question_id": 42498800, "link": "https://stackoverflow.com/questions/42498800/implementing-trait-with-method-returning-generic-trait/42498935#42498935", "title": "Implementing trait with method returning generic trait", "body": "<p>You are trying to return a trait. While this is possible using a <a href=\"https://doc.rust-lang.org/book/trait-objects.html\" rel=\"nofollow noreferrer\">trait object</a>, it probably isn't what you want to do. A better design would be to introduce a <code>Transpose</code> trait, which you can model in a similar way to Rust's built-in <code>From</code> and <code>Into</code> conversion traits.</p>\n\n<pre><code>trait Transpose&lt;To&gt; {\n    fn transpose(self) -&gt; To;\n}\n\nimpl&lt;Element&gt; Transpose&lt;VecColumnVector&lt;Element&gt;&gt; for VecRowVector&lt;Element&gt; {\n    fn transpose(self) -&gt; VecColumnVector&lt;Element&gt; {\n        VecColumnVector::new(self.vec)\n    }\n}\n\nimpl&lt;Element&gt; Transpose&lt;VecRowVector&lt;Element&gt;&gt; for VecColumnVector&lt;Element&gt; {\n    fn transpose(self) -&gt; VecRowVector&lt;Element&gt; {\n        VecRowVector::new(self.vec)\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 5777, "user_id": 1485877, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/tkdN8.jpg?s=128&g=1", "display_name": "drhagen", "link": "https://stackoverflow.com/users/1485877/drhagen"}, "is_accepted": false, "score": 1, "last_activity_date": 1489841016, "creation_date": 1489841016, "answer_id": 42874564, "question_id": 42498800, "link": "https://stackoverflow.com/questions/42498800/implementing-trait-with-method-returning-generic-trait/42874564#42874564", "title": "Implementing trait with method returning generic trait", "body": "<p>When two types need to be related, the best solution is often <a href=\"https://doc.rust-lang.org/book/associated-types.html\" rel=\"nofollow noreferrer\">associated types</a>. This precludes using dynamic dispatch like a trait object, but dynamic dispatch is still pretty limited in Rust. Rust is more expressive with static dispatch, which associated types leverage.</p>\n\n<pre><code>pub trait RowVector&lt;Element&gt;: Sized {\n    type Transpose: ColumnVector&lt;Element&gt;;\n\n    fn transpose(self) -&gt; Self::Transpose;\n}\n\npub trait ColumnVector&lt;Element&gt;: Sized {\n    type Transpose: RowVector&lt;Element&gt;;\n\n    fn transpose(self) -&gt; Self::Transpose;\n}\n\npub struct VecRowVector&lt;Element&gt; {\n    pub vec: Vec&lt;Element&gt;\n}\n\npub struct VecColumnVector&lt;Element&gt; {\n    pub vec: Vec&lt;Element&gt;\n}\n\nimpl&lt;Element&gt; RowVector&lt;Element&gt; for VecRowVector&lt;Element&gt; {\n    type Transpose = VecColumnVector&lt;Element&gt;;\n\n    fn transpose(self) -&gt; VecColumnVector&lt;Element&gt; {\n        VecColumnVector { vec: self.vec }\n    }\n}\n\nimpl&lt;E: Debug&gt; ColumnVector&lt;Element&gt; for VecColumnVector&lt;Element&gt; {\n    type Transpose = VecRowVector&lt;Element&gt;;\n\n    fn transpose(self) -&gt; VecRowVector&lt;Element&gt; {\n        VecRowVector { vec: self.vec }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 5777, "user_id": 1485877, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/tkdN8.jpg?s=128&g=1", "display_name": "drhagen", "link": "https://stackoverflow.com/users/1485877/drhagen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1192, "favorite_count": 0, "answer_count": 2, "score": 3, "last_activity_date": 1551269450, "creation_date": 1488246797, "last_edit_date": 1551269450, "question_id": 42498800, "link": "https://stackoverflow.com/questions/42498800/implementing-trait-with-method-returning-generic-trait", "title": "Implementing trait with method returning generic trait", "body": "<p>I am trying to design a pair of traits (e.g. <code>RowVector</code> and <code>ColumnVector</code> from linear algebra) where each trait returns the other from one of its methods (e.g. <code>transpose</code>). I want to be able to add implementations of either trait in the future (such as dense and sparse vector implementations).</p>\n\n<pre><code>#[macro_use]\nextern crate derive_new;\n\ntrait RowVector&lt;Element&gt; {\n    fn transpose(self) -&gt; ColumnVector&lt;Element&gt;;\n}\n\ntrait ColumnVector&lt;Element&gt; {\n    fn transpose(self) -&gt; RowVector&lt;Element&gt;;\n}\n\n#[derive(new, Debug)]\nstruct VecRowVector&lt;Element&gt; {\n    vec: Vec&lt;Element&gt;\n}\n\n#[derive(new, Debug)]\nstruct VecColumnVector&lt;Element&gt; {\n    vec: Vec&lt;Element&gt;\n}\n\nimpl&lt;Element&gt; RowVector&lt;Element&gt; for VecRowVector&lt;Element&gt; {\n    fn transpose(self) -&gt; VecColumnVector&lt;Element&gt; {\n        VecColumnVector::new(self.vec)\n    }\n}\n\nimpl&lt;Element&gt; ColumnVector&lt;Element&gt; for VecColumnVector&lt;Element&gt; {\n    fn transpose(self) -&gt; VecRowVector&lt;Element&gt; {\n        VecRowVector::new(self.vec)\n    }\n}\n\nfn main() {\n    let row_vector = VecRowVector::new(vec![1,2,3]);\n    let col_vector = VecColumnVector::new(vec![1,2,3]);\n    println!(\"{:?}\", row_vector.transpose());\n    println!(\"{:?}\", col_vector.transpose());\n}\n</code></pre>\n\n<p>I get an error saying that <code>VecColumnVector</code> is not a <code>ColumnVector</code> and it's expecting a <code>'static</code> value.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0053]: method `transpose` has an incompatible type for trait\n  --&gt; src\\main.rs:22:31\n   |\n4  |         fn transpose(self) -&gt; ColumnVector&lt;Element&gt;;\n   |                               --------------------- type in trait\n...\n22 |         fn transpose(self) -&gt; VecColumnVector&lt;Element&gt; {\n   |                               ^^^^^^^^^^^^^^^^^^^^^^^^ expected trait ColumnVector, found struct `VecColumnVector`\n   |\n   = note: expected type `fn(VecRowVector&lt;Element&gt;) -&gt; ColumnVector&lt;Element&gt; + 'static`\n   = note:    found type `fn(VecRowVector&lt;Element&gt;) -&gt; VecColumnVector&lt;Element&gt;`\n</code></pre>\n\n<p>Have I not made <code>VecColumnVector</code> a subtype of <code>ColumnVector</code>? Or do I somehow need to tell the trait that it doesn't need to be a <code>static</code> lifetime?</p>\n"}, {"tags": ["json", "node.js", "rust", "node-ffi"], "comments": [{"owner": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "edited": false, "score": 3, "creation_date": 1488235192, "post_id": 42496523, "comment_id": 72133427, "body": "<code>String</code>s in Rust aren&#39;t meant to cross FFI boundaries. What you probably want is for your <code>generate</code> function to return a <code>CString</code> <a href=\"https://doc.rust-lang.org/std/ffi/struct.CString.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/ffi/struct.CString.html</a>"}], "answers": [{"tags": [], "owner": {"reputation": 2912, "user_id": 5666325, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/adqCR.jpg?s=128&g=1", "display_name": "Hunter Lester", "link": "https://stackoverflow.com/users/5666325/hunter-lester"}, "is_accepted": true, "score": 4, "last_activity_date": 1502321108, "last_edit_date": 1502321108, "creation_date": 1488247709, "answer_id": 42498913, "question_id": 42496523, "link": "https://stackoverflow.com/questions/42496523/how-to-return-string-value-from-a-rust-ffi-function-in-nodejs/42498913#42498913", "title": "How to return string value from a Rust FFI function in NodeJS?", "body": "<p>Thank you Wesley Wiser for giving me a big clue with <code>CString</code>. I found the answer in <a href=\"http://jakegoulding.com/rust-ffi-omnibus/string_return/\" rel=\"nofollow noreferrer\">The Rust FFI Omnibus</a>.</p>\n\n<p>The memory for my expected JSON string was being deallocated before my NodeJS program could access it, whether I returned the JSON string or returned a <code>CString</code>.</p>\n\n<p>Here's my solution based on that article. <strong>To other novice programmers, please keep in mind that my solution may or may not be ideal:</strong></p>\n\n<h3>Rust</h3>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate rand;\nextern crate rustc_serialize;\nextern crate libc;\n\nuse libc::c_char;\nuse rand::{OsRng, Rng};\nuse std::ffi::CString;\nuse rustc_serialize::json;\n\n#[no_mangle]\npub extern \"C\" fn generate() -&gt; *mut c_char {\n    let choices: [u8; 6] = [1, 2, 3, 4, 5, 6];\n\n    let mut rand_vec: Vec&lt;u8&gt; = Vec::new();\n\n    let mut rng = match OsRng::new() {\n        Ok(t) =&gt; t,\n        Err(e) =&gt; panic!(\"Failed to create OsRng!, {}\", e),\n    };\n\n    for _ in 0..6 {\n        rand_vec.push(*rng.choose(&amp;choices).unwrap());\n    }\n\n    let json_string = CString::new(json::encode(&amp;rand_vec).unwrap()).unwrap();\n\n    json_string.into_raw()\n}\n\n#[no_mangle]\npub extern \"C\" fn free_memory(pointer: *mut c_char) {\n    unsafe {\n        if pointer.is_null() {\n            return;\n        }\n        CString::from_raw(pointer)\n    };\n}\n</code></pre>\n\n<h3>NodeJS</h3>\n\n<pre><code>var ffi = require('ffi');\nvar path = require('path');\n\nvar lib = ffi.Library(path.join(__dirname,\n  './ffi/generate_6_rand.dll'), {\n    generate: [ 'char *' , [ ]],\n    free_memory: ['void', ['char *']]\n  });\n\nvar json_string = lib.generate();\n\nvar save_json = JSON.parse(json_string.readCString());\n\nconsole.log( json_string.readCString()); // Output: [6,1,6,4,1,4]\nlib.free_memory(json_string);\nconsole.log(json_string.readCString()); // Output: \ufffd\ufffdx\ufffd\n</code></pre>\n\n<p>I set up two <code>console.log</code>s to show what the output before and after deallocation.</p>\n"}], "owner": {"reputation": 2912, "user_id": 5666325, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/adqCR.jpg?s=128&g=1", "display_name": "Hunter Lester", "link": "https://stackoverflow.com/users/5666325/hunter-lester"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1037, "favorite_count": 0, "accepted_answer_id": 42498913, "answer_count": 1, "score": 2, "last_activity_date": 1502321108, "creation_date": 1488232698, "last_edit_date": 1502321008, "question_id": 42496523, "link": "https://stackoverflow.com/questions/42496523/how-to-return-string-value-from-a-rust-ffi-function-in-nodejs", "title": "How to return string value from a Rust FFI function in NodeJS?", "body": "<p>I want to generate 6 random numbers, push them onto a vector, then use <code>rustc_serialize</code> to encode that vector as a JSON string to be consumed by NodeJS.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate rand;\nextern crate rustc_serialize;\n\nuse rand::{OsRng, Rng};\nuse rustc_serialize::json::{self, Json, ToJson};\n\n#[no_mangle]\npub extern \"C\" fn generate() -&gt; String {\n    let choices: [u8; 6] = [1, 2, 3, 4, 5, 6];\n\n    let mut rand_vec: Vec&lt;u8&gt; = Vec::new();\n\n    let mut rng = match OsRng::new() {\n        Ok(t) =&gt; t,\n        Err(e) =&gt; panic!(\"Failed to create OsRng!, {}\", e),\n    };\n\n    for _ in 0..5 {\n        rand_vec.push(*rng.choose(&amp;choices).unwrap());\n    }\n\n    json::encode(&amp;rand_vec).unwrap()\n}\n</code></pre>\n\n<p>This code is compiled as a library <code>generate_6_rand.dll</code>. I have a separate binary file that I'm using to test this code.</p>\n\n<p>If I run </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>println!(\"{:?}\", &amp;json::encode(&amp;rand_vec).unwrap());\n</code></pre>\n\n<p>Output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>\"[5,4,3,4,1,3]\" //as expected\n</code></pre>\n\n<p>I then use my <code>.dll</code> in a NodeJS program:</p>\n\n<pre><code>var ffi = require('ffi');\nvar path = require('path');\n\nvar lib = ffi.Library(path.join(__dirname,\n  './ffi/generate_6_rand.dll'), {\n    generate: [ 'string', [ ]]\n  });\n\nconsole.log(lib.generate());\n</code></pre>\n\n<h3>Tests</h3>\n\n<p><code>console.log(lib.generate())</code></p>\n\n<p>Output:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>\ufffd\ufffd.\ufffd\n</code></pre>\n\nIs it an EcmaScript <code>ArrayBuffer</code>?\n\n<p><code>console.log(new ArrayBuffer(lib.generate())</code></p>\n\n<p>Output:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>ArrayBuffer { byteLength: 0 }\n</code></pre>\n\nWhat are it's proto chain properties?\n\n<p><code>console.log(lib.generate().__proto__)</code></p>\n\n<p>Output:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>[String: '']\n</code></pre>\n\n<p>Changed code to:</p>\n\n<pre><code>var ref = require('ref');\nvar ArrayType = require('ref-array');\nvar Int32Array = ArrayType(ref.types.int32);\n\n\nvar lib = ffi.Library(path.join(__dirname,\n  '../dice_lib/target/release/generate_6_rand.dll'), {\n    generate: [ Int32Array, [ ]]\n  });\n\nconsole.log(new ArrayBuffer(lib.generate()));\n</code></pre>\n\n<p>Output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>ArrayBuffer { byteLength: 0 }\n</code></pre>\n\n<p>Why does the FFI function not return a JSON string as I'm expecting? </p>\n"}, {"tags": ["rust", "future"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1488209186, "post_id": 42489053, "comment_id": 72118437, "body": "It might be easier to answer if you provide a full code example, with the <code>match</code>ing that you want to avoid."}, {"owner": {"reputation": 959, "user_id": 6779010, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/i7Jj0.png?s=128&g=1", "display_name": "torkleyy", "link": "https://stackoverflow.com/users/6779010/torkleyy"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1488210826, "post_id": 42489053, "comment_id": 72119616, "body": "@PeterHall OK, I&#39;ve edited my question."}], "answers": [{"comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1488220677, "post_id": 42492991, "comment_id": 72125848, "body": "Glad you figured it out. <code>?</code> really tidies things up!"}, {"owner": {"reputation": 143, "user_id": 5673010, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eb78390568a1c374588c01c63253cd07?s=128&d=identicon&r=PG&f=1", "display_name": "dippi", "link": "https://stackoverflow.com/users/5673010/dippi"}, "edited": false, "score": 0, "creation_date": 1488618147, "post_id": 42492991, "comment_id": 72319585, "body": "Note that, for the very purpose of  <code>futures</code>, composition should be usually preferred over an explicit call to wait, sice it&#39;s extensible and preserve asynchronicity. Anyway the latter line of code can be written more concisely as <code>f.from_err().and_then(parse).wait()</code>."}], "tags": [], "owner": {"reputation": 959, "user_id": 6779010, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/i7Jj0.png?s=128&g=1", "display_name": "torkleyy", "link": "https://stackoverflow.com/users/6779010/torkleyy"}, "is_accepted": true, "score": 4, "last_activity_date": 1580660582, "last_edit_date": 1580660582, "creation_date": 1488219484, "answer_id": 42492991, "question_id": 42489053, "link": "https://stackoverflow.com/questions/42489053/waiting-for-a-result-mapped-future/42492991#42492991", "title": "Waiting for a result mapped future", "body": "<blockquote>\n  <p>This is for futures v0.1 (old, experimental)</p>\n</blockquote>\n\n<p>I found an answer to the question:</p>\n\n<p>You can just first <code>wait</code> on the future to finish, use <code>?</code> to return a potential error and then apply <code>parse</code> on it:</p>\n\n<pre><code>parse(f.wait()?)\n</code></pre>\n\n<p>This should have equal semantics, because, when polled, the <code>Future</code> returned by <code>map</code> executes its closure. Another solution was to map a possible error and to use <code>and_then</code>:</p>\n\n<pre><code>f.map_error(|x| x.into()).and_then(|x| parse(x)).wait()\n</code></pre>\n"}], "owner": {"reputation": 959, "user_id": 6779010, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/i7Jj0.png?s=128&g=1", "display_name": "torkleyy", "link": "https://stackoverflow.com/users/6779010/torkleyy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1648, "favorite_count": 0, "accepted_answer_id": 42492991, "answer_count": 1, "score": 6, "last_activity_date": 1580660582, "creation_date": 1488207947, "last_edit_date": 1488210803, "question_id": 42489053, "link": "https://stackoverflow.com/questions/42489053/waiting-for-a-result-mapped-future", "title": "Waiting for a result mapped future", "body": "<p>I'm using the <a href=\"https://github.com/alexcrichton/futures-rs\" rel=\"noreferrer\">future</a> library and I have a future which implements <code>Future&lt;T, E&gt;</code>. I'd like to map this future with a function <code>FnOnce(T) -&gt; D</code> where <code>D: From&lt;E&gt;</code>. Now when I want to <code>wait()</code> for this future to finsih, I'll get a <code>Result&lt;Result&lt;T, E&gt;, D&gt;</code>, however I'd like a <code>Result&lt;T, D&gt;</code>.</p>\n\n<p>Here's some example code for better understanding:</p>\n\n<pre><code>struct ReadError;\n\nenum DownloadError {\n    Read(ReadError),\n    Parse(ParseError),\n}\n\nimpl From&lt;ReadError&gt; for DownloadError { ... }\n\nfn parse(bytes: [u8; 4]) -&gt; Result&lt;i32, DownloadError&gt; { ... }\n\nfn map_and_wait&lt;F: Future&lt;Item = [u8; 4]; Error = ReadError&gt;&gt;(f: F) -&gt; Result&lt;i32, DownloadError&gt; {\n    match f.map(|x| parse(x)).wait() {\n        Ok(Ok(x)) =&gt; Ok(x),\n        Ok(Err(x)) =&gt; Err(x.into()),\n        Err(x) =&gt; Err(x),\n    }\n}\n</code></pre>\n\n<p>What's the easiest and most understandable way of doing this (without <code>match</code>ing)?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "edited": false, "score": 1, "creation_date": 1488196538, "post_id": 42484909, "comment_id": 72109812, "body": "Could you provide a minimal example of how to do this please? I see the code you mentioned but there is a lot of stuff also implemented."}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "reply_to_user": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "edited": false, "score": 2, "creation_date": 1488197635, "post_id": 42484909, "comment_id": 72110456, "body": "If you are using <code>syn</code>, then you can access the fields&#39; attributes by accessing the <code>attr</code> field of the <code>Field</code> struct. You obtain the <code>Field</code> struct by checking the <code>syn::MacroInput</code>&#39;s <code>body</code> field for the <a href=\"https://dtolnay.github.io/syn/syn/enum.Body.html\" rel=\"nofollow noreferrer\"><code>Struct</code> variant</a> and then calling the <a href=\"https://dtolnay.github.io/syn/syn/enum.VariantData.html#method.fields\" rel=\"nofollow noreferrer\"><code>fields</code> method</a> to obtain the list of <code>Field</code>s"}], "tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": true, "score": 4, "last_activity_date": 1604653722, "last_edit_date": 1604653722, "creation_date": 1488195723, "answer_id": 42484909, "question_id": 42484062, "link": "https://stackoverflow.com/questions/42484062/how-do-i-process-enum-struct-field-attributes-in-a-procedural-macro/42484909#42484909", "title": "How do I process enum/struct/field attributes in a procedural macro?", "body": "<p>You implement attributes on fields as part of the derive macro for the struct (you can only implement derive macros for structs and enums).</p>\n<p>Serde does this by checking every field for an attribute within the structures provided by <code>syn</code> and changing the code generation accordingly.</p>\n<p>You can find the relevant code here: <a href=\"https://github.com/serde-rs/serde/blob/master/serde_derive/src/internals/attr.rs\" rel=\"nofollow noreferrer\">https://github.com/serde-rs/serde/blob/master/serde_derive/src/internals/attr.rs</a></p>\n"}, {"comments": [{"owner": {"reputation": 4073, "user_id": 11498773, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/79d317da8c76af3f45f63986e9783740?s=128&d=identicon&r=PG&f=1", "display_name": "Mihir", "link": "https://stackoverflow.com/users/11498773/mihir"}, "edited": false, "score": 0, "creation_date": 1604654107, "post_id": 42526546, "comment_id": 114418519, "body": "The <code>serde_codegen_internals</code> link is invalid now. Not sure where it is intended to point otherwise would have made the edit. Also, thanks for the answer, super helpful :)."}, {"owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "reply_to_user": {"reputation": 4073, "user_id": 11498773, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/79d317da8c76af3f45f63986e9783740?s=128&d=identicon&r=PG&f=1", "display_name": "Mihir", "link": "https://stackoverflow.com/users/11498773/mihir"}, "edited": false, "score": 1, "creation_date": 1604654392, "post_id": 42526546, "comment_id": 114418630, "body": "@Mihir I&#39;ve just updated the link to point to something which resembles what it was pointing to earlier. As far as I can remember, I was referring to the serde&#39;s code where they are handling procedural macros, and this new link points to their new home. Since the time of this answer, the project has greatly evolved and so earlier it was much easier to read and understand their code, but now it is a huge chunk of code and might not be that good as a starter&#39;s reading. I believe, there are good examples out there still. I&#39;ll try adding links to what I can find as well just in a minute."}], "tags": [], "owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "is_accepted": false, "score": 25, "last_activity_date": 1604654211, "last_edit_date": 1604654211, "creation_date": 1488356397, "answer_id": 42526546, "question_id": 42484062, "link": "https://stackoverflow.com/questions/42484062/how-do-i-process-enum-struct-field-attributes-in-a-procedural-macro/42526546#42526546", "title": "How do I process enum/struct/field attributes in a procedural macro?", "body": "<ol>\n<li><p>First you must register all of your attributes in the same place you register your procedural macro. Let's say we want to add two attributes (we still don't talk what will they belong to: structs or fields or both of them):</p>\n<pre><code> #[proc_macro_derive(FiniteStateMachine, attributes(state_transitions, state_change))]\n pub fn fxsm(input: TokenStream) -&gt; TokenStream {\n     // ...\n }\n</code></pre>\n<p>After that you may already compile your user code with the following:</p>\n<pre><code> #[derive(Copy, Clone, Debug, FiniteStateMachine)]\n #[state_change(GameEvent, change_condition)] // optional\n enum GameState {\n     #[state_transitions(NeedServer, Ready)]\n     Prepare { players: u8 },\n     #[state_transitions(Prepare, Ready)]\n     NeedServer,\n     #[state_transitions(Prepare)]\n     Ready,\n }\n</code></pre>\n<p>Without that compiler will give a error with message like:</p>\n<blockquote>\n<p><code>state_change</code> does not belong to any known attribute.</p>\n</blockquote>\n<p>These attributes are optional and all we have done is allow them to be to specified. When you derive your procedural macro you may check for everything you want (including attributes existence) and <code>panic!</code> on some condition with meaningful message which will be told by the compiler.</p>\n</li>\n<li><p>Now we will talk about handling the attribute! Let's forget about <code>state_transitions</code> attribute because it's handling will not vary too much from handling struct/enum attributes (actually it is only a little bit more code) and talk about <code>state_change</code>. The <code>syn</code> crate gives you all the needed information about definitions (but not implementations unfortunately (I am talking about <code>impl</code> here) but this is enough for handling attributes of course). To be more detailed, we need <a href=\"https://docs.rs/syn/1.0.16/syn/struct.DeriveInput.html\" rel=\"nofollow noreferrer\"><code>syn::DeriveInput</code></a>, <a href=\"https://docs.rs/syn/1.0.16/syn/enum.Body.html\" rel=\"nofollow noreferrer\"><code>syn::Body</code></a>, <a href=\"https://docs.rs/syn/1.0.16/syn/struct.Variant.html\" rel=\"nofollow noreferrer\"><code>syn::Variant</code></a>, <code>syn::Attribute</code> and finally <a href=\"https://docs.rs/syn/1.0.16/syn/enum.MetaItem.html\" rel=\"nofollow noreferrer\"><code>syn::MetaItem</code></a>.</p>\n</li>\n</ol>\n<p>To handle the attribute of a field you need to go through all these structures from one to another. When you reach <code>Vec&lt;syn:: Attribute&gt;</code> - this is what you want, a list of all attributes of a field. Here our <code>state_transitions</code> can be found. When you find it, you may want to get its content and this can be done by using matching <code>syn::MetaItem</code> enum. Just read the docs :) Here is a simple example code which panics when we find <code>state_change</code> attribute on some field plus it checks does our target entity derive <code>Copy</code> or <code>Clone</code> or neither of them:</p>\n<pre><code>    #[proc_macro_derive(FiniteStateMachine, attributes(state_transitions, state_change))]\n    pub fn fxsm(input: TokenStream) -&gt; TokenStream {\n        // Construct a string representation of the type definition\n        let s = input.to_string();\n\n        // Parse the string representation\n        let ast = syn::parse_derive_input(&amp;s).unwrap();\n\n        // Build the impl\n        let gen = impl_fsm(&amp;ast);\n\n        // Return the generated impl\n        gen.parse().unwrap()\n    }\n\n    fn impl_fsm(ast: &amp;syn::DeriveInput) -&gt; Tokens {\n        const STATE_CHANGE_ATTR_NAME: &amp;'static str = &quot;state_change&quot;;\n\n        if let syn::Body::Enum(ref variants) = ast.body {\n\n            // Looks for state_change attriute (our attribute)\n            if let Some(ref a) = ast.attrs.iter().find(|a| a.name() == STATE_CHANGE_ATTR_NAME) {\n                if let syn::MetaItem::List(_, ref nested) = a.value {\n                    panic!(&quot;Found our attribute with contents: {:?}&quot;, nested);\n                }\n            }\n\n            // Looks for derive impls (not our attribute)\n            if let Some(ref a) = ast.attrs.iter().find(|a| a.name() == &quot;derive&quot;) {\n                if let syn::MetaItem::List(_, ref nested) = a.value {\n                    if derives(nested, &quot;Copy&quot;) {\n                        return gen_for_copyable(&amp;ast.ident, &amp;variants, &amp;ast.generics);\n                    } else if derives(nested, &quot;Clone&quot;) {\n                        return gen_for_clonable(&amp;ast.ident, &amp;variants, &amp;ast.generics);\n                    } else {\n                        panic!(&quot;Unable to produce Finite State Machine code on a enum which does not drive Copy nor Clone traits.&quot;);\n                    }\n                } else {\n                    panic!(&quot;Unable to produce Finite State Machine code on a enum which does not drive Copy nor Clone traits.&quot;);\n                }\n            } else {\n                panic!(&quot;How have you been able to call me without derive!?!?&quot;);\n            }\n        } else {\n            panic!(&quot;Finite State Machine must be derived on a enum.&quot;);\n        }\n    }\n\n    fn derives(nested: &amp;[syn::NestedMetaItem], trait_name: &amp;str) -&gt; bool {\n        nested.iter().find(|n| {\n            if let syn::NestedMetaItem::MetaItem(ref mt) = **n {\n                if let syn::MetaItem::Word(ref id) = *mt {\n                    return id == trait_name;\n                }\n                return false\n            }\n            false\n        }).is_some()\n    }\n</code></pre>\n<p>You may be interested in <strong>reading</strong> <a href=\"https://github.com/serde-rs/serde/tree/master/serde_derive/src/internals\" rel=\"nofollow noreferrer\">serde_codegen_internals</a>, <a href=\"https://github.com/serde-rs/serde/blob/master/serde_derive\" rel=\"nofollow noreferrer\">serde_derive</a>, <a href=\"https://github.com/serenity-rs/serenity/blob/current/command_attr\" rel=\"nofollow noreferrer\">serenity's <code>#[command]</code> attr</a>, <a href=\"https://github.com/vityafx/unique-type-id\" rel=\"nofollow noreferrer\">another small project of mine - <code>unique-type-id</code></a>, <a href=\"https://github.com/vityafx/fxsm/tree/master/fxsm-derive\" rel=\"nofollow noreferrer\">fxsm-derive</a>. The last link is actually my own project to explain to myself how to use  procedural macros in Rust.</p>\n<hr />\n<p>After some Rust 1.15 and updating the syn crate, it is no longer possible to check derives of a <code>enums/structs</code>, however, everything else works okay.</p>\n"}], "owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3878, "favorite_count": 3, "accepted_answer_id": 42484909, "answer_count": 2, "score": 16, "last_activity_date": 1604654211, "creation_date": 1488193204, "last_edit_date": 1488412811, "question_id": 42484062, "link": "https://stackoverflow.com/questions/42484062/how-do-i-process-enum-struct-field-attributes-in-a-procedural-macro", "title": "How do I process enum/struct/field attributes in a procedural macro?", "body": "<p>Serde supports applying custom attributes that are used with <code>#[derive(Serialize)]</code>:</p>\n\n<pre><code>#[derive(Serialize)]\nstruct Resource {\n    // Always serialized.\n    name: String,\n\n    // Never serialized.\n    #[serde(skip_serializing)]\n    hash: String,\n\n    // Use a method to decide whether the field should be skipped.\n    #[serde(skip_serializing_if = \"Map::is_empty\")]\n    metadata: Map&lt;String, String&gt;,\n}\n</code></pre>\n\n<p>I understand how to implement a procedural macro (<code>Serialize</code> in this example) but what should I do to implement <code>#[serde(skip_serializing)]</code>? I was unable to find this information anywhere. The <a href=\"https://doc.rust-lang.org/book/procedural-macros.html\" rel=\"noreferrer\">docs</a> don't even mention this. I have tried to look at the <code>serde-derive</code> source code but it is very complicated for me.</p>\n"}, {"tags": ["multithreading", "parallel-processing", "rust"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1488181272, "post_id": 42476389, "comment_id": 72100334, "body": "We&#39;re missing a few things here: (1) what should the result be like (does your task emit something on stdout? write a file? return something) and (2) does order of execution matter or not?"}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 1, "creation_date": 1488181562, "post_id": 42476389, "comment_id": 72100461, "body": "If the iterator is quick to produce content, but it takes time to process them, a reasonable workaround is to collect elements into small vectors and process those with Rayon&#39;s <code>par_iter()</code>. It would be better if Rayon supported this natively, though, as parallel processing of items coming from a stream is a frequently needed feature."}, {"owner": {"reputation": 3376, "user_id": 134409, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e1ec6b4e77bfbae1b992957792572630?s=128&d=identicon&r=PG", "display_name": "dpc.pw", "link": "https://stackoverflow.com/users/134409/dpc-pw"}, "reply_to_user": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1488183690, "post_id": 42476389, "comment_id": 72101417, "body": "@user4815162342: Hmmm... interesting, but it seems to me it would put unnecessary delay on reading thread, that would for each batch to completed, and I&#39;m really looking for full CPU utilization."}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1488203528, "post_id": 42476389, "comment_id": 72114500, "body": "@dpc.pw Yes; the suggestion was tied to the assumption that the iterator is quick to produce content, and that processing is the bottle-neck, as was my understanding based on the second sentence of your question. If this is not the case, then batching would indeed introduce reading delays."}], "answers": [{"comments": [{"owner": {"reputation": 3376, "user_id": 134409, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e1ec6b4e77bfbae1b992957792572630?s=128&d=identicon&r=PG", "display_name": "dpc.pw", "link": "https://stackoverflow.com/users/134409/dpc-pw"}, "edited": false, "score": 0, "creation_date": 1488517149, "post_id": 42482238, "comment_id": 72275533, "body": "I went with a thread-pool taking jobs tagged with number, through mpmc channel, and sending results through another channel. Results are collected to vector that is then sorted by the job number.I&#39;m not fully satisfied with it, but it will do for now."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 5, "last_activity_date": 1488188328, "creation_date": 1488188328, "answer_id": 42482238, "question_id": 42476389, "link": "https://stackoverflow.com/questions/42476389/how-to-parallely-map-on-a-custom-single-threaded-iterator-in-rust/42482238#42482238", "title": "How to parallely `map(...)` on a custom, single-threaded iterator in Rust?", "body": "<p>In general, preserving order is a pretty tough requirement as far as parallelization goes.</p>\n\n<p>You could try to hand-make it with a typical fan-out/fan-in setup:</p>\n\n<ul>\n<li>a single producer which tags inputs with a sequential monotonically increasing ID,</li>\n<li>a thread pool which consumes from this producer and then sends the result toward the final consumer,</li>\n<li>a consumer who buffers and reorders result so as to treat them in the sequential order.</li>\n</ul>\n\n<p>Or you could raise the level of abstraction.</p>\n\n<hr>\n\n<p>Of specific interest here: <code>Future</code>.</p>\n\n<p>A <code>Future</code> represents the result of a computation, which may or may not have happened yet. A consumer receiving an ordered list of <code>Future</code> can simply wait on each one, and let buffering occur naturally in the queue.</p>\n\n<p>For bonus points, if you use a fixed size queue, you automatically get back-pressure on the consumer.</p>\n\n<hr>\n\n<p>And therefore I would recommend building something of <a href=\"http://alexcrichton.com/futures-rs/futures_cpupool/struct.CpuPool.html\" rel=\"noreferrer\"><code>CpuPool</code></a>.</p>\n\n<p>The setup is going to be:</p>\n\n<pre><code>use std::sync::mpsc::{Receiver, Sender};\n\nfn produce(sender: Sender&lt;...&gt;) {\n    let pool = CpuPool::new_num_cpus();\n\n    for chunk in reader {\n        let future = pool.spawn_fn(|| /* do work */);\n        sender.send(future);\n    }\n\n    // Dropping the sender signals there's no more work to consumer\n}\n\nfn consume(receiver: Receiver&lt;...&gt;) {\n    while let Ok(future) = receiver.recv() {\n        let item = future.wait().expect(\"Computation Error?\");\n\n        /* do something with item */\n    }\n}\n\nfn main() {\n    let (sender, receiver) = std::sync::mpsc::channel();\n\n    std::thread::spawn(move || consume(receiver));\n\n    produce(sender);\n}\n</code></pre>\n"}], "owner": {"reputation": 3376, "user_id": 134409, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e1ec6b4e77bfbae1b992957792572630?s=128&d=identicon&r=PG", "display_name": "dpc.pw", "link": "https://stackoverflow.com/users/134409/dpc-pw"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 832, "favorite_count": 1, "accepted_answer_id": 42482238, "answer_count": 1, "score": 8, "last_activity_date": 1488188328, "creation_date": 1488158593, "last_edit_date": 1488183794, "question_id": 42476389, "link": "https://stackoverflow.com/questions/42476389/how-to-parallely-map-on-a-custom-single-threaded-iterator-in-rust", "title": "How to parallely `map(...)` on a custom, single-threaded iterator in Rust?", "body": "<p>I have a <code>MyReader</code> that implements <code>Iterator</code> and produces <code>Buffer</code>s where <code>Buffer : Send</code>. <code>MyReader</code> produces a lot of <code>Buffer</code>s very quickly, but I have a CPU-intensive job to perform on each <code>Buffer</code> (<code>.map(|buf| ...)</code>) that is my bottleneck, and then gather the results (ordered). I want to parallelize the CPU intense work - hopefully to N threads, that would use work stealing to perform them as fast as the number of cores allows.</p>\n\n<p>Edit: To be more precise. I am working on <a href=\"https://github.com/dpc/rdedup\" rel=\"noreferrer\"><code>rdedup</code></a>. <code>MyStruct</code> is <code>Chunker</code> which reads <code>io::Read</code> (typically stdio), finds parts (chunks) of data and yields them. Then <code>map()</code> is supposed, for each chunk, to calculate sha256 digest of it, compress, encrypt, save and return the digest as the result of <code>map(...)</code>. Digest of saved data is used to build <code>index</code> of the data. The order between chunks being processed by  <code>map(...)</code> does not matter, but digest returned from each <code>map(...)</code> needs to be collected in the same order that the chunks were found. The actual <code>save</code> to file step is offloaded to yet another thread (writter thread). <a href=\"https://github.com/dpc/rdedup/pull/84/files#diff-088084dd1b0c42eef28a4a1352b0e72aR795\" rel=\"noreferrer\">actual code of PR in question</a></p>\n\n<p>I hoped I can use <a href=\"http://docs.rs/rayon/\" rel=\"noreferrer\"><code>rayon</code></a> for this, but <code>rayon</code> expect an iterator that is already parallizable - eg. a <code>Vec&lt;...&gt;</code> or something like that. I have found no way to get a <code>par_iter</code> from <code>MyReader</code> - my reader is very single-threaded in nature.</p>\n\n<p>There is <a href=\"https://github.com/huonw/simple_parallel\" rel=\"noreferrer\"><code>simple_parallel</code></a> but documentation says it's not recommended for general use. And I want to make sure everything will just work.</p>\n\n<p>I could just take a spmc queue implementation and a custom <code>thread_pool</code>, but I was hopping for an existing solution that is optimized and tested.</p>\n\n<p>There's also <a href=\"https://docs.rs/pipeliner\" rel=\"noreferrer\"><code>pipeliner</code></a> but doesn't support ordered map yet.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "edited": false, "score": 0, "creation_date": 1488146853, "post_id": 42474279, "comment_id": 72090027, "body": "But then actually <code>Deref</code> trait overload <code>&amp;</code> ?"}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "reply_to_user": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "edited": false, "score": 0, "creation_date": 1488247143, "post_id": 42474279, "comment_id": 72136669, "body": "No, <code>Deref</code> really overloads <code>*</code>, but the compiler can insert <code>*</code> implicitly if the context requires it. For example, if you write <code>&amp;s</code>, the compiler may translate it to <code>&amp;*s</code>, which in turn can be translated to <code>&amp;*(s.deref())</code> (which simplifies to <code>s.deref()</code>)."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 4, "last_activity_date": 1488143264, "creation_date": 1488143264, "answer_id": 42474279, "question_id": 42473807, "link": "https://stackoverflow.com/questions/42473807/match-deref-and-mark-operator-why-they-are-not-the-same/42474279#42474279", "title": "Match: Deref and mark operator, why they are not the same?", "body": "<p>Character literals are of type <code>char</code>, while string literals are of type <code>&amp;'static str</code>. Note that string literals are always references, while character literals are not references.</p>\n\n<p><code>*s</code> is actually translated to <code>*(s.deref())</code>, not to <code>s.deref()</code>, when performing a deref coercion, because <code>deref</code> returns a reference. Thus, to match an <code>InternedString</code> against a string literal, you need to take a reference to <code>*s</code>, i.e. you need to write <code>&amp;*s</code> instead of <code>*s</code>. That works because <code>*s</code> yields an lvalue.</p>\n"}], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 265, "favorite_count": 0, "accepted_answer_id": 42474279, "answer_count": 1, "score": 2, "last_activity_date": 1488199342, "creation_date": 1488140679, "last_edit_date": 1488199342, "question_id": 42473807, "link": "https://stackoverflow.com/questions/42473807/match-deref-and-mark-operator-why-they-are-not-the-same", "title": "Match: Deref and mark operator, why they are not the same?", "body": "<p>Here is modified version of <a href=\"https://doc.rust-lang.org/std/ops/trait.Deref.html\" rel=\"nofollow noreferrer\">example of usage Deref</a>:</p>\n\n<pre><code>use std::ops::Deref;\nuse std::rc::Rc;\n\n#[derive(Clone, PartialEq, Hash, PartialOrd, Eq, Ord)]\npub struct InternedString {\n    string: Rc&lt;String&gt;,\n}\n\nimpl InternedString {\n    #[inline]\n    pub fn new(string: &amp;'static str) -&gt; InternedString {\n        InternedString {\n            string: Rc::new(string.to_owned()),\n        }\n    }\n}\n\nimpl Deref for InternedString {\n    type Target = str;\n\n    fn deref(&amp;self) -&gt; &amp;str { &amp;self.string }\n}\n\n\nstruct DerefExample&lt;T&gt; {\n    value: T\n}\n\nimpl&lt;T&gt; Deref for DerefExample&lt;T&gt; {\n    type Target = T;\n\n    fn deref(&amp;self) -&gt; &amp;T {\n        &amp;self.value\n    }\n}\n\nfn main() {\n    let x = DerefExample { value: 'a' };\n    assert_eq!('a', *x);\n\n    match *x {\n        'a' =&gt; (),\n        _ =&gt; (),\n    };\n\n    let s = InternedString::new(\"aaa\");\n    match *s {\n        \"test\" =&gt; (),\n        _ =&gt; (),\n    };\n}\n</code></pre>\n\n<p>it is not compiled, with error:</p>\n\n<pre><code>55 |         \"test\" =&gt; (),\n   |         ^^^^^^ expected str, found reference\n   |\n   = note: expected type `str`\n   = note:    found type `&amp;'static str`\n</code></pre>\n\n<p>but if I call <code>deref</code> method by hands:</p>\n\n<pre><code>match s.deref() {\n    \"test\" =&gt; (),\n    _ =&gt; (),\n}\n</code></pre>\n\n<p>all compiled without errors, what is difference between <code>*s</code> and <code>s.deref()</code>, and why for <code>char</code> all works fine?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 135, "user_id": 5662984, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c897cba88d64670a8e4bd0d85af612b?s=128&d=identicon&r=PG&f=1", "display_name": "jan", "link": "https://stackoverflow.com/users/5662984/jan"}, "edited": false, "score": 0, "creation_date": 1488129555, "post_id": 42471519, "comment_id": 72083700, "body": "I looked up the implementation of <code>UnsafeCell&lt;T&gt;</code> and wanted to experiment with raw pointers. The important part I overlooked is the attribute <code>#[lang = &quot;unsafe_cell&quot;]</code>. Thanks."}], "tags": [], "owner": {"reputation": 34083, "user_id": 1287251, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/IQkBy.png?s=128&g=1", "display_name": "Cornstalks", "link": "https://stackoverflow.com/users/1287251/cornstalks"}, "is_accepted": true, "score": 9, "last_activity_date": 1488128638, "creation_date": 1488128638, "answer_id": 42471519, "question_id": 42471415, "link": "https://stackoverflow.com/questions/42471415/pointer-dereferencing-in-rust/42471519#42471519", "title": "Pointer dereferencing in Rust", "body": "<p>You're invoking undefined behavior. From the <a href=\"https://doc.rust-lang.org/reference.html#behavior-considered-undefined\" rel=\"noreferrer\">Rust Reference</a>:</p>\n\n<blockquote>\n  <h2>12.3 Behavior considered undefined</h2>\n  \n  <p>The following is a list of behavior which is forbidden in all Rust code, including within unsafe blocks and unsafe functions. [...]</p>\n  \n  <ul>\n  <li>Mutating non-mutable data (that is, data reached through a shared reference or data owned by a <code>let</code> binding), unless that data is contained within an <code>UnsafeCell&lt;U&gt;</code>.</li>\n  </ul>\n</blockquote>\n\n<p>Since you're mutating non-mutable data, you're invoking undefined behavior. The fact that it works at all in the first version is just (bad) luck.</p>\n"}], "owner": {"reputation": 135, "user_id": 5662984, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c897cba88d64670a8e4bd0d85af612b?s=128&d=identicon&r=PG&f=1", "display_name": "jan", "link": "https://stackoverflow.com/users/5662984/jan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3121, "favorite_count": 1, "accepted_answer_id": 42471519, "answer_count": 1, "score": 6, "last_activity_date": 1488128638, "creation_date": 1488128164, "question_id": 42471415, "link": "https://stackoverflow.com/questions/42471415/pointer-dereferencing-in-rust", "title": "Pointer dereferencing in Rust", "body": "<p>I am rather confused about the following problem. If I understand it correctly</p>\n\n<pre><code>let x = &amp;42;\n</code></pre>\n\n<p>is expanded internally to</p>\n\n<pre><code>let x_value = 42;\nlet x = &amp;x;\n</code></pre>\n\n<p>I think I have seen this in the Rust book somewhere but I cannot find the reference to it.</p>\n\n<p>My problem is concerning the following code:</p>\n\n<pre><code>let x = 42;\nlet rx = &amp;x;\nlet px = rx as *const i32 as *mut i32;\nunsafe {\n  *px = 0;\n}\nprintln!(\"{}\", x);\n</code></pre>\n\n<p>As expected this prints <code>0</code>. However, if I write</p>\n\n<pre><code>let rx = &amp;42;\nlet px = rx as *const i32 as *mut i32;\nunsafe {\n  println!(\"Deref\");\n  *px = 0;\n}\nprintln!(\"{}\", x);\n</code></pre>\n\n<p>the program terminates after printing out <code>Deref</code>. Aparently something goes wrong when <code>px</code> gets dereferenced. I guess my first assessment about <code>let x = &amp;42</code> getting expanded internally is wrong.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 2, "creation_date": 1488188275, "post_id": 42469202, "comment_id": 72104166, "body": "There&#39;s some recent discussion on the internals forum: <a href=\"https://internals.rust-lang.org/t/pre-rfc-anonymous-enum/4806\" rel=\"nofollow noreferrer\">internals.rust-lang.org/t/pre-rfc-anonymous-enum/4806</a>"}], "answers": [{"tags": [], "owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "is_accepted": true, "score": 9, "last_activity_date": 1488128343, "creation_date": 1488128343, "answer_id": 42471453, "question_id": 42469202, "link": "https://stackoverflow.com/questions/42469202/anonymous-enum-in-rust/42471453#42471453", "title": "Anonymous enum in Rust", "body": "<p>It is not possible, you must give it a name, like you did in the first example.</p>\n"}], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1595, "favorite_count": 0, "accepted_answer_id": 42471453, "answer_count": 1, "score": 6, "last_activity_date": 1488128343, "creation_date": 1488116405, "question_id": 42469202, "link": "https://stackoverflow.com/questions/42469202/anonymous-enum-in-rust", "title": "Anonymous enum in Rust", "body": "<p>I use this data structure in a project:</p>\n\n<pre><code>#[derive(Serialize, Deserialize)]\npub enum Field {\n    last_name(String),\n    first_name(String),\n    /* etc. */\n}\n\n#[derive(Serialize, Deserialize)]\npub struct Update {\n    pub id: Id,\n    pub field: Field,\n}\n</code></pre>\n\n<p>The enum is not really useful by itself, I use it for deserialization of JSON. So is it possible to do something like that?</p>\n\n<pre><code>#[derive(Serialize, Deserialize)]\npub struct PersonUpdate {\n    pub id: Id,\n    pub field: enum {\n        last_name(String),\n        first_name(String),\n    }\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1488114230, "post_id": 42468681, "comment_id": 72078549, "body": "&quot;<i>The problem if ABI changed</i>&quot; ... did you mean to say &quot;API&quot;? Do I understand you correctly in that you want to make your Rust code work with  different versions of a type within a C library? I don&#39;t think you should do that. Your Rust code should target an exact version of the struct instead of using hacks like this to make it &quot;kind of work&quot;. If you want your Rust code to work with different versions of a C library, use cargo features and conditional compilation."}, {"owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1488114797, "post_id": 42468681, "comment_id": 72078717, "body": "@LukasKalbertodt It is hard to decide API or ABI, but because of after C binary update, you can rebuild Rust program without any source modification and it continues to work, I call it ABI. I can not target exact version, I want my code to work with as many versions of Windows as I can. So after I write code to work with windows 10 SDK, I want my code to work with windows 11 SDK and so on without modifications and rebuild. It is possible on <code>C</code>, why not on <code>Rust</code>?"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1488114982, "post_id": 42468681, "comment_id": 72078775, "body": "You can add a dummy array of bytes in Rust, too: <code>_filler_dummy: [u8; 4000],</code>. I am just saying that I don&#39;t think it&#39;s a good solution to this problem. But then again, I don&#39;t know too much about FFI guidelines, so maybe someone else can clarify."}, {"owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1488115310, "post_id": 42468681, "comment_id": 72078881, "body": "@LukasKalbertodt But where should I add <code>_filler_dummy</code>? Note that I can NOT modify <code>Foo</code> declaration. That&#39;s why in <code>C</code> variant I use <code>union</code>."}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 1, "creation_date": 1488188192, "post_id": 42468681, "comment_id": 72104110, "body": "Perhaps it makes sense allocating (e.g. using malloc) a buffer and transmuting the pointer to <code>*mut Foo</code> in this case?"}, {"owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "reply_to_user": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 0, "creation_date": 1488196523, "post_id": 42468681, "comment_id": 72109805, "body": "@ChrisEmerson What about align requirements for <code>*mut Foo</code> if I just allocate memory?"}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 0, "creation_date": 1488196732, "post_id": 42468681, "comment_id": 72109932, "body": "<code>malloc</code> is defined to return memory suitable for any C object&#39;s alignment (which should be fine for something you&#39;re using with C).  Otherwise I guess <a href=\"https://doc.rust-lang.org/std/mem/fn.align_of.html\" rel=\"nofollow noreferrer\">mem::align_of&lt;T&gt;()</a> can be used."}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 0, "creation_date": 1488197111, "post_id": 42468681, "comment_id": 72110146, "body": "This <a href=\"https://www.reddit.com/r/rust/comments/5weidf/no_stable_mallocfree_in_rust_stdlib/\" rel=\"nofollow noreferrer\">thread on reddit</a> covers allocating raw memory in Rust itself."}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1488830319, "post_id": 42468681, "comment_id": 72396596, "body": "Your use case is not what I&#39;d call typical C code. While it&#39;s true that some Win32 API functions do support evolving the structure, those functions typically include the size of the structure as part of the structure itself, which allows Windows itself to maintain ABI compatibility. That setup doesn&#39;t require the kind of union that you are describing. Can you give more details regarding your attempts to <code>WSALookupServiceNext </code>? Which structure would correspond to <code>Foo</code>?"}, {"owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "reply_to_user": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1488903878, "post_id": 42468681, "comment_id": 72432570, "body": "@user4815162342 <code>WSALookupServiceNext</code> take exactly one struct, this struct <code>Foo</code> is represent."}], "answers": [{"tags": [], "owner": {"reputation": 752, "user_id": 7496656, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/zMGuk.jpg?s=128&g=1", "display_name": "Jan Zerebecki", "link": "https://stackoverflow.com/users/7496656/jan-zerebecki"}, "is_accepted": false, "score": 1, "last_activity_date": 1488879326, "last_edit_date": 1488879326, "creation_date": 1488828163, "answer_id": 42633893, "question_id": 42468681, "link": "https://stackoverflow.com/questions/42468681/how-do-i-leave-space-after-end-of-struct-to-allow-for-future-abi-changes/42633893#42633893", "title": "How do I leave space after end of struct to allow for future ABI changes?", "body": "<p>You could use an enum (also called tagged union), it already includes some space for the type tag and accessing the inner value is less convenient. <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1444-union.md\" rel=\"nofollow noreferrer\">Nightly builds of Rust have untagged unions</a>, but that is not stable yet and reading or borrowing a field of it requires unsafe code. As the comments indicate you could manually allocate. The straight forward way is using a struct that includes the struct, allocating the outer:</p>\n\n<pre><code>#[repr(C)]\npub struct Foo {\n    version: u32,\n    a: u32,\n}\n\n#[repr(C)]\npub struct FooPadded {\n    foo: Foo,\n    _reserved: [u8; 4000],\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 1, "last_activity_date": 1488852537, "creation_date": 1488852537, "answer_id": 42638913, "question_id": 42468681, "link": "https://stackoverflow.com/questions/42468681/how-do-i-leave-space-after-end-of-struct-to-allow-for-future-abi-changes/42638913#42638913", "title": "How do I leave space after end of struct to allow for future ABI changes?", "body": "<p>Nightly builds of Rust have <a href=\"https://github.com/rust-lang/rust/issues/32836\" rel=\"nofollow noreferrer\">untagged unions</a>, so you could the same workaround you would use in C/C++.</p>\n\n<pre><code>#![feature(untagged_unions)]\n\n#[repr(C)]\npub struct Foo {\n    version: u32,\n    a: u32,\n    b: f64,\n}\n\n#[repr(C)]\nunion PaddedFoo {\n    foo: Foo,\n    _padding: [u8; 4000],\n}\n\nfn main() {\n    println!(\"{}\", std::mem::size_of::&lt;Foo&gt;());\n    println!(\"{}\", std::mem::size_of::&lt;PaddedFoo&gt;());\n}\n</code></pre>\n"}], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 89, "favorite_count": 0, "accepted_answer_id": 42638913, "answer_count": 2, "score": 1, "last_activity_date": 1488879326, "creation_date": 1488113154, "last_edit_date": 1488833073, "question_id": 42468681, "link": "https://stackoverflow.com/questions/42468681/how-do-i-leave-space-after-end-of-struct-to-allow-for-future-abi-changes", "title": "How do I leave space after end of struct to allow for future ABI changes?", "body": "<p>I want to call <a href=\"https://msdn.microsoft.com/ru-ru/library/windows/desktop/ms741641(v=vs.85).aspx\" rel=\"nofollow noreferrer\"><code>WSALookupServiceNext</code></a>, which is an <code>extern C</code> function with a simplified interface like:</p>\n\n<pre><code>#[repr(C)]\npub struct Foo {\n    version: u32,\n    a: u32,\n}\n\nextern \"C\" {\n    pub fn get_foo(p: *mut Foo, nbytes: *mut u32) -&gt; i32;\n}\n</code></pre>\n\n<p>You give it pointer to a <code>Foo</code> struct and <code>nbytes = ::std::mem::size_of::&lt;Foo&gt;()</code>, and it fills the struct if everything is OK.</p>\n\n<p>If the ABI changes after the program is compiled, like this:</p>\n\n<pre><code>#[repr(C)]\npub struct Foo {\n    version: u32,\n    a: u32,\n    b: f64,\n}\n</code></pre>\n\n<p>Then the function indicates a failure and <code>nbytes</code> will contain the correct size of <code>Foo</code>. How should I handle such situation?</p>\n\n<p>In C or C++, I would simplify my life and do:</p>\n\n<pre><code>union {\n  struct Foo foo;\n  char buf[4000];//should be enough for 10 years\n} a;\nuint32_t nbytes = sizeof(a);\nif (get_foo(&amp;a.foo, &amp;nbytes) != 0) {\n  return -1;\n}\n</code></pre>\n\n<p>Is this possible in Rust? If not, how I should alloc space with size > <code>size_of::&lt;Foo&gt;()</code> but with a pointer to <code>Foo</code>? <code>Foo</code> is generated by <a href=\"https://github.com/servo/rust-bindgen\" rel=\"nofollow noreferrer\">bindgen</a> so I can not change its declaration and add bytes to the end of it.</p>\n\n<p>I'm using Rust 1.15.1.</p>\n"}, {"tags": ["multithreading", "rust"], "answers": [{"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 12, "last_activity_date": 1488109831, "creation_date": 1488109831, "answer_id": 42468102, "question_id": 42467829, "link": "https://stackoverflow.com/questions/42467829/sharing-string-between-threads-in-rust/42468102#42468102", "title": "Sharing String between threads in Rust", "body": "<p>Adding the <code>move</code> is the correct solution to your first problem. The second error indicates a problem in your code that was there before already, but is detected only in a later compiler stage. So what does this second error mean?</p>\n\n<p>Well, a spawned thread <em>can</em> run forever (more precisely: as long as the main thread/the whole program runs). In your case they don't, because you block the calling thread waiting for the results from the channel. But the compiler doesn't know that. Therefore, <code>thread::spawn()</code> requires the passed closure to be <code>: 'static</code> which means that it doesn't reference anything that lives shorter than the whole program. </p>\n\n<p>But in your case the closure has a reference to the url, a <code>&amp;str</code>. But how long does the string behind that reference actually live? Not necessarily forever! That's the problem here. </p>\n\n<p>The typical solution to problems like these is to use an <code>Arc</code> and wrap the owned value in it. But this is not possible here, because your function does not have access to the owned value. There are a few possible solutions for you:</p>\n\n<ul>\n<li><p>Use a <em>scoped thread API</em>, like <a href=\"https://github.com/aturon/crossbeam\" rel=\"noreferrer\"><code>crossbeam</code></a> <a href=\"http://aturon.github.io/crossbeam-doc/crossbeam/fn.scope.html\" rel=\"noreferrer\">offers</a>. This API makes sure that the spawned thread doesn't outlive its parent, so you can just reference the <code>&amp;str</code> inside of your closure. I think this is actually the best solution with the only downside of pulling in a new dependency.</p></li>\n<li><p>Change your function signature to <code>fn fetch(urls: Vec&lt;&amp;'static str&gt;)</code>. It works, but it limits the callers of your function as they have to provide static strings. I guess that the list of URLs is not just a list of string literals, but dynamically generated; so this is not really a solution for you.</p></li>\n<li><p>Clone the <code>&amp;str</code> to move the resulting <code>String</code> into the closure. This is not really a nice solution, though, as useless clones should be avoided. But it could be tolerable in your situation as the HTTP request will takes a whole lot longer than cloning a rather small (url) string. </p></li>\n</ul>\n"}], "owner": {"reputation": 755, "user_id": 1567340, "user_type": "registered", "accept_rate": 29, "profile_image": "https://i.stack.imgur.com/amsaC.png?s=128&g=1", "display_name": "Huy Tran", "link": "https://stackoverflow.com/users/1567340/huy-tran"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2453, "favorite_count": 1, "accepted_answer_id": 42468102, "answer_count": 1, "score": 3, "last_activity_date": 1488109905, "creation_date": 1488108129, "last_edit_date": 1488109905, "question_id": 42467829, "link": "https://stackoverflow.com/questions/42467829/sharing-string-between-threads-in-rust", "title": "Sharing String between threads in Rust", "body": "<p>I'm trying to request multiple URLs with multiple <code>std::thread</code>. This is how my code looks so far:</p>\n\n<pre><code>fn fetch(urls: Vec&lt;&amp;str&gt;) {\n    let (tx, rx) = mpsc::channel();\n\n    for url in urls {\n        let tx = tx.clone();\n\n        thread::spawn(|| {\n            let ssl = NativeTlsClient::new().unwrap();\n            let connector = HttpsConnector::new(ssl);\n            let client = Client::with_connector(connector);\n            let mut res = client.get(url).send().unwrap();\n            let mut result = String::new();\n            res.read_to_string(&amp;mut result);\n\n            tx.send(result).unwrap();  \n        });\n    }\n\n    //let mut result: Vec&lt;String&gt; = vec![];\n    for _ in urls {\n        println!(\"{}\", rx.recv().unwrap());\n    }\n}\n</code></pre>\n\n<p>But I got an error that said:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `std::sync::mpsc::Sender&lt;std::string::String&gt;: std::marker::Sync` is not satisfied\n    --&gt; src/lib.rs:18:9\n    |\n 18 |         thread::spawn(|| {\n    |         ^^^^^^^^^^^^^ the trait `std::marker::Sync` is not implemented for `std::sync::mpsc::Sender&lt;std::string::String&gt;`\n    |\n    = note: `std::sync::mpsc::Sender&lt;std::string::String&gt;` cannot be shared between threads safely\n    = note: required because of the requirements on the impl of `std::marker::Send` for `&amp;std::sync::mpsc::Sender&lt;std::string::String&gt;`\n    = note: required because it appears within the type `[closure@src/lib.rs:18:23: 29:10 url:&amp;&amp;str, tx:&amp;std::sync::mpsc::Sender&lt;std::string::String&gt;]`\n    = note: required by `std::thread::spawn`\n</code></pre>\n\n<p>When I tried to put the <code>move</code> in the <code>thread::spawn</code>:</p>\n\n<pre><code>thread::spawn(move || {\n    ...\n</code></pre>\n\n<p>I got another error related to lifetime:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime due to conflicting requirements\n  --&gt; src/lib.rs:15:16\n   |\n15 |     for url in urls {\n   |                ^^^^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the block at 12:26...\n  --&gt; src/lib.rs:12:27\n   |\n12 | fn fetch(urls: Vec&lt;&amp;str&gt;) {\n   |                           ^\nnote: ...so that expression is assignable (expected std::vec::Vec&lt;&amp;str&gt;, found std::vec::Vec&lt;&amp;str&gt;)\n  --&gt; src/lib.rs:15:16\n   |\n15 |     for url in urls {\n   |                ^^^^\n   = note: but, the lifetime must be valid for the static lifetime...\nnote: ...so that the type `[closure@src/lib.rs:18:23: 27:10 url:&amp;str, tx:std::sync::mpsc::Sender&lt;std::string::String&gt;]` will meet its required lifetime bounds\n  --&gt; src/lib.rs:18:9\n   |\n18 |         thread::spawn(move || {\n   |         ^^^^^^^^^^^^^\n</code></pre>\n\n<p>So, what is the proper way to send strings from threads through channel here? And how can I solve the lifetime problem in the later error? </p>\n\n<p>Thank you so much!</p>\n"}, {"tags": ["linux", "windows", "rust", "rust-cargo"], "answers": [{"tags": [], "owner": {"reputation": 36, "user_id": 1943982, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/469e19535e50eb2e2a5a6b085f378070?s=128&d=identicon&r=PG", "display_name": "Demiurgo", "link": "https://stackoverflow.com/users/1943982/demiurgo"}, "is_accepted": true, "score": 2, "last_activity_date": 1488281961, "creation_date": 1488281961, "answer_id": 42507802, "question_id": 42465380, "link": "https://stackoverflow.com/questions/42465380/rustup-error-cross-compilation-from-linux-to-windows-i686/42507802#42507802", "title": "Rustup: error cross-compilation from Linux to Windows i686", "body": "<p>I was having the same problem and I solved with <a href=\"https://github.com/rust-lang/rust/issues/12859\" rel=\"nofollow noreferrer\">this insight</a> from Arnaz87.</p>\n\n<p>Add this rustflag to your ~/.cargo/config</p>\n\n<pre><code>[target.i686-pc-windows-gnu]\nrustflags = \"-C panic=abort\"\n</code></pre>\n"}], "owner": {"reputation": 248, "user_id": 6073838, "user_type": "registered", "accept_rate": 45, "profile_image": "https://graph.facebook.com/1530379783927023/picture?type=large", "display_name": "\u0410\u043d\u0434\u0440\u0435\u0439 \u0410\u043d\u0442\u043e\u043d\u043e\u0432", "link": "https://stackoverflow.com/users/6073838/%d0%90%d0%bd%d0%b4%d1%80%d0%b5%d0%b9-%d0%90%d0%bd%d1%82%d0%be%d0%bd%d0%be%d0%b2"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 590, "favorite_count": 1, "accepted_answer_id": 42507802, "answer_count": 1, "score": 0, "last_activity_date": 1488281961, "creation_date": 1488089732, "question_id": 42465380, "link": "https://stackoverflow.com/questions/42465380/rustup-error-cross-compilation-from-linux-to-windows-i686", "title": "Rustup: error cross-compilation from Linux to Windows i686", "body": "<p>What components installed</p>\n\n<pre><code>i686-pc-windows-gnu (installed)\ni686-unknown-linux-gnu (installed)\nx86_64-pc-windows-gnu (installed)\nx86_64-unknown-linux-gnu (default)\n</code></pre>\n\n<p>Rust version </p>\n\n<pre><code>rustc 1.17.0-nightly (08230775a 2017-02-24)\nbinary: rustc\ncommit-hash: 08230775a026c955873ba557e624b7f665661f37\ncommit-date: 2017-02-24\nhost: x86_64-unknown-linux-gnu\nrelease: 1.17.0-nightly\nLLVM version: 3.9\n</code></pre>\n\n<p>~/.cargo/config</p>\n\n<pre><code>[target.x86_64-pc-windows-gnu]\nlinker = \"/usr/bin/x86_64-w64-mingw32-gcc\"\n\n[target.i686-pc-windows-gnu]\nlinker = \"/usr/bin/i686-w64-mingw32-gcc\"\n</code></pre>\n\n<p>For x86_64-pc-windows-gnu compilation is okay</p>\n\n<pre><code>$ cargo rustc --target=x86_64-pc-windows-gnu --release -- -C link-args=-mwindows\n   Compiling ttt v0.1.0 (file:///tmp/ttt)\n    Finished release [optimized] target(s) in 1.21 secs\n</code></pre>\n\n<p>But for i686-pc-windows-gnu error (output too long) <a href=\"https://gist.github.com/bc4254bdd78195e83842682d3a432688\" rel=\"nofollow noreferrer\">https://gist.github.com/bc4254bdd78195e83842682d3a432688</a></p>\n\n<p>Mingw version </p>\n\n<p><code>\nUsing built-in specs.\nCOLLECT_GCC=i686-w64-mingw32-g++\nCOLLECT_LTO_WRAPPER=/usr/lib/gcc/i686-w64-mingw32/6.3.1/lto-wrapper\nTarget: i686-w64-mingw32\nConfigured with: /build/mingw-w64-gcc/src/gcc/configure --prefix=/usr --libexecdir=/usr/lib --target=i686-w64-mingw32 --enable-languages=c,lto,c++,objc,obj-c++,fortran,ada --enable-shared --enable-static --enable-threads=posix --enable-fully-dynamic-string --enable-libstdcxx-time=yes --with-system-zlib --enable-cloog-backend=isl --enable-lto --disable-dw2-exceptions --enable-libgomp --disable-multilib --enable-checking=release\nThread model: posix\ngcc version 6.3.1 20170109 (GCC)</code></p>\n"}, {"tags": ["json", "rust"], "answers": [{"comments": [{"owner": {"reputation": 10293, "user_id": 229001, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/69a180136f3c237769452a4af0bbb9a1?s=128&d=identicon&r=PG", "display_name": "tmcw", "link": "https://stackoverflow.com/users/229001/tmcw"}, "edited": false, "score": 0, "creation_date": 1488122006, "post_id": 42465587, "comment_id": 72081098, "body": "Thanks for the excellent and thorough answer! Explains so much."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 2, "last_activity_date": 1488091674, "creation_date": 1488091674, "answer_id": 42465587, "question_id": 42464230, "link": "https://stackoverflow.com/questions/42464230/rust-variable-does-not-live-long-enough-and-conflicting-requirements/42465587#42465587", "title": "Rust variable &#39;does not live long enough&#39; and &#39;conflicting requirements&#39;", "body": "<p>If you want to store references in a struct, then those references must refer to objects that have an owner that will live longer than that struct. Furthermore, <code>&amp;'static</code> references must refer to objects that will be valid for the whole duration of the program's execution. Neither is true for the <code>date</code> and the <code>song</code> fields.</p>\n\n<p>Here, the <code>SongEntry</code> struct should simply own the <code>date</code> and <code>song</code> objects.</p>\n\n<pre><code>struct SongEntry {\n    date: String,\n    song: Song,\n}\n</code></pre>\n\n<p>For the <code>date</code> field, simply convert the string slice (<code>&amp;str</code>) into an owned string (<code>String</code>) with the <a href=\"https://doc.rust-lang.org/stable/std/string/trait.ToString.html#tymethod.to_string\" rel=\"nofollow noreferrer\"><code>to_string</code></a> method. For the <code>song</code> field, you need to move ownership from the vector <code>v</code>. However, <a href=\"https://doc.rust-lang.org/stable/std/vec/struct.Vec.html#method.iter\" rel=\"nofollow noreferrer\"><code>Vec::iter</code></a> only yields borrowed references to its items. You must use <a href=\"https://doc.rust-lang.org/stable/std/vec/struct.Vec.html#method.into_iter\" rel=\"nofollow noreferrer\"><code>Vec::into_iter</code></a> instead, which returns the values directly, consuming the vector in the process.</p>\n\n<pre><code>fn main() {\n    let paths = fs::read_dir(\"./charts/\").unwrap();\n\n    let file_contents = paths.map(|path| {\n        let p = path.unwrap().path();\n        let file = File::open(&amp;p).unwrap();\n        let v: Vec&lt;Song&gt; = serde_json::from_reader(file).unwrap();\n        v.into_iter().map(move |song| {\n            let date = p.file_stem().unwrap().to_str().unwrap().to_string();\n            SongEntry {\n                date: date,\n                song: song,\n            }\n        })\n    });\n}\n</code></pre>\n\n<p>At this point, <code>file_contents</code> is an iterator over iterators of <code>SongEntry</code> objects (the outer iterator iterates over files, the inner iterator iterates over the entries in a file). If you would rather like to have an iterator of <code>SongEntry</code> objects directly, use <a href=\"https://doc.rust-lang.org/stable/std/iter/trait.Iterator.html#method.flat_map\" rel=\"nofollow noreferrer\"><code>flat_map</code></a> instead of <code>map</code> on <code>paths</code>. You can then use <a href=\"https://doc.rust-lang.org/stable/std/iter/trait.Iterator.html#method.collect\" rel=\"nofollow noreferrer\"><code>collect</code></a> on the final iterator to collect the results into a vector, if necessary (don't use <code>collect</code> if you're only going to iterate on the results once!).</p>\n"}], "owner": {"reputation": 10293, "user_id": 229001, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/69a180136f3c237769452a4af0bbb9a1?s=128&d=identicon&r=PG", "display_name": "tmcw", "link": "https://stackoverflow.com/users/229001/tmcw"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 472, "favorite_count": 0, "accepted_answer_id": 42465587, "answer_count": 1, "score": 2, "last_activity_date": 1488091674, "creation_date": 1488077857, "last_edit_date": 1488078455, "question_id": 42464230, "link": "https://stackoverflow.com/questions/42464230/rust-variable-does-not-live-long-enough-and-conflicting-requirements", "title": "Rust variable &#39;does not live long enough&#39; and &#39;conflicting requirements&#39;", "body": "<p>I'm unfortunately having a lot of trouble managing lifetimes in Rust, relating to strings and structs.</p>\n\n<pre><code>#[macro_use]\nextern crate serde_derive;\nextern crate serde_json;\nuse serde_json::Value;\nuse std::fs::File;\nuse std::path::Path;\nuse std::io::prelude::*;\nuse std::fs;\nuse std::cell::RefCell;\n\n#[derive(Serialize, Deserialize, Debug)]\nstruct Song {\n    artist: String,\n}\n\nstruct SongEntry {\n    date: &amp;'static str,\n    song: &amp;'static Song,\n}\n\nfn main() {\n    let paths = fs::read_dir(\"./charts/\").unwrap();\n\n    let fileContents = paths.map(| path | {\n        let p = path.unwrap().path();\n        let file = File::open(&amp;p).unwrap();\n        let v: Vec&lt;Song&gt; = serde_json::from_reader(file).unwrap();\n        return v.iter().map(move | song | {\n            let date = p.file_stem().unwrap().to_str().unwrap();\n            return SongEntry {\n                song: song,\n                date: date,\n            };\n        })\n    });\n}\n</code></pre>\n\n<p>I've tried <em>many</em> variations of managing memory here, but only seem to swap one error for another.</p>\n\n<p>The intent is to iterate through JSON files in a directory, parse them, and assemble an vector of objects containing the date (from the filename) and the content (from parsed JSON).</p>\n\n<p>So far I've tried declaring <code>date</code> within the inner <code>map</code>, or outside of it, tried using <code>Arc</code> to manage the <code>date</code> variable, tried the inner loop with and without the <code>move</code> keyword.</p>\n\n<p>However, I just can't find a way to get the variable bindings in these <code>map</code> methods to last for the right amount of time. Any help would be much appreciated.</p>\n\n<p>The current errors produced are:</p>\n\n<pre><code>   Compiling kanye v0.1.0 (file:///Users/tmcw/src/sandbox/kanye)\nerror[E0495]: cannot infer an appropriate lifetime for lifetime parameter in function call due to conflicting requirements\n  --&gt; src/main.rs:29:26\n   |\n29 |             let date = p.file_stem().unwrap().to_str().unwrap();\n   |                          ^^^^^^^^^\n   |\nnote: first, the lifetime cannot outlive the lifetime  as defined on the body at 28:42...\n  --&gt; src/main.rs:28:43\n   |\n28 |           return v.iter().map(move | song | {\n   |  ___________________________________________^ starting here...\n29 | |             let date = p.file_stem().unwrap().to_str().unwrap();\n30 | |             return SongEntry {\n31 | |                 song: song,\n32 | |                 date: date,\n33 | |             };\n34 | |         })\n   | |_________^ ...ending here\nnote: ...so that closure can access `p`\n  --&gt; src/main.rs:29:24\n   |\n29 |             let date = p.file_stem().unwrap().to_str().unwrap();\n   |                        ^\n   = note: but, the lifetime must be valid for the static lifetime...\nnote: ...so that reference does not outlive borrowed content\n  --&gt; src/main.rs:32:23\n   |\n32 |                 date: date,\n   |                       ^^^^\n\nerror: aborting due to previous error\n\nerror: Could not compile `kanye`.\n\nTo learn more, run the command again with --verbose.\n</code></pre>\n\n<p>Meta-questions: is this an appropriate use of <code>map</code> in Rust, or should I be using normal iteration instead? I also tried iteration before, but also got stymied by memory checking.</p>\n"}, {"tags": ["enums", "rust", "pattern-matching"], "comments": [{"owner": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 0, "creation_date": 1488067176, "post_id": 42462942, "comment_id": 72068283, "body": "<code>if let MyEnum::MyString(ref mut content) = my_enum { content.push(&#39;!&#39;); }</code>"}], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 6, "last_activity_date": 1582558012, "last_edit_date": 1582558012, "creation_date": 1488067806, "answer_id": 42463209, "question_id": 42462942, "link": "https://stackoverflow.com/questions/42462942/is-there-a-simple-way-to-mutate-an-enum-field-in-rust/42463209#42463209", "title": "Is there a simple way to mutate an enum field in Rust?", "body": "<p>As of Rust 1.15.1, the compiler won't recognize that a particular variable can only be a particular variant of an <code>enum</code> at some point of execution. As such, you always need to write an exhaustive <code>match</code> on it.</p>\n\n<p>However, some Rust developers <a href=\"http://smallcultfollowing.com/babysteps/blog/2015/08/20/virtual-structs-part-3-bringing-enums-and-structs-together/\" rel=\"nofollow noreferrer\">have been considering</a> making it such that each <code>enum</code> variant would be its own type, which would be a subtype of the <code>enum</code> itself.</p>\n\n<p>If your variant has many data fields, or if you have methods attached to it, you could consider wrapping the <code>enum</code> variant's fields in a <code>struct</code> and use that <code>struct</code> directly, bypassing the enum entirely until you do need the enum for whatever reason. If you have only a few fields, and don't need to call methods on the enum, then you might be able to get away with just keeping a mutable pointer to each field that you obtain at the beginning with an exhaustive <code>match</code>, like this:</p>\n\n<pre><code>fn main() {\n    let mut my_enum = MyEnum::MyString(\"Hello, world\".to_string());\n    let content = \n        match my_enum {\n            MyEnum::MyString(ref mut content) =&gt; content,\n            _ =&gt; unreachable!(),\n        };\n\n    /* Some actions */\n    // Mutating the string\n    content.push('!');\n\n    // Printing the string\n    println!(\"{}\", content);\n}\n</code></pre>\n\n<p>As of <a href=\"https://github.com/rust-lang/rust/blob/master/RELEASES.md#version-1260-2018-05-10\" rel=\"nofollow noreferrer\">Rust 1.26</a>, the explicit <code>ref</code> and <code>ref mut</code> keywords are no longer required.</p>\n"}, {"tags": [], "owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "is_accepted": false, "score": 7, "last_activity_date": 1582557998, "last_edit_date": 1582557998, "creation_date": 1488101319, "answer_id": 42466814, "question_id": 42462942, "link": "https://stackoverflow.com/questions/42462942/is-there-a-simple-way-to-mutate-an-enum-field-in-rust/42466814#42466814", "title": "Is there a simple way to mutate an enum field in Rust?", "body": "<p>If you have an entire section of code in which the variable is known to have a particular type, you could just put that code inside the <code>match</code>, or if there's only one <code>match</code> arm which you care about, use <code>if let</code>:</p>\n\n<pre><code>fn main() {\n    let mut my_enum = MyEnum::MyString(\"Hello, world\".to_string());\n    /* Some actions */\n    if let MyEnum::MyString(ref mut content) = my_enum {\n        content.push('!');\n        //...\n        println!(\"{}\", content);\n    }\n}\n</code></pre>\n\n<p>Alternatively, if it's just the verbose <code>match</code> (or <code>if let</code>) which is the problem, you can write methods to make it tidier:</p>\n\n<pre><code>impl MyEnum {\n    fn push(&amp;mut self, char c) {\n        if let MyEnum::MyString(ref mut content) = *self {\n            content.push(c);\n        } else {\n            unreachable!();\n        }\n    }\n\n    // In practice print might be more generic, for example implement\n    // Display\n    fn print(&amp;self) {\n        if let MyEnum::MyString(ref content) = *self {\n            println!(\"{}\", content);\n        }\n    }\n}\n\nfn main() {\n    //...\n    my_enum.push('!');\n    my_enum.print();\n}\n</code></pre>\n\n<p>As of <a href=\"https://github.com/rust-lang/rust/blob/master/RELEASES.md#version-1260-2018-05-10\" rel=\"nofollow noreferrer\">Rust 1.26</a>, the explicit <code>ref</code> and <code>ref mut</code> keywords are no longer required.</p>\n"}], "owner": {"reputation": 483, "user_id": 7208967, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/14b5042326d29e031e894c5631cc5184?s=128&d=identicon&r=PG&f=1", "display_name": "Wolfram", "link": "https://stackoverflow.com/users/7208967/wolfram"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3316, "favorite_count": 0, "accepted_answer_id": 42463209, "answer_count": 2, "score": 3, "last_activity_date": 1582558012, "creation_date": 1488065808, "question_id": 42462942, "link": "https://stackoverflow.com/questions/42462942/is-there-a-simple-way-to-mutate-an-enum-field-in-rust", "title": "Is there a simple way to mutate an enum field in Rust?", "body": "<p>Suppose we have an enum that looks like this:</p>\n\n<pre><code>enum MyEnum {\n    Field1,\n    Field2 {x: f64, y: f64},\n    /* Maybe some other fields */\n    MyString(String),\n}\n</code></pre>\n\n<p>Now I created an instance of this enum of the subtype <code>MyString</code> and after some actions I want to mutate it. For example:</p>\n\n<pre><code>fn main() {\n    let mut my_enum = MyEnum::MyString(\"Hello, world\".to_string());\n    /* Some actions */\n    // Mutating the string\n    match my_enum {\n        MyEnum::MyString(ref mut content) =&gt; {\n            content.push('!');\n        },\n        _ =&gt; {}\n    }\n    // Printing the string\n    match my_enum {\n        MyEnum::MyString(content) =&gt; {\n            println!(\"{}\", content);\n        },\n        _ =&gt; {}\n    }\n}\n</code></pre>\n\n<p>However, matching in such a way is pretty cumbersome when we know exactly from the context that <code>my_enum</code> can be <strong>only</strong> <code>MyString</code>. I would rather write something like this (not a correct Rust syntax):</p>\n\n<pre><code>my_enum@MyString.push('!');\nprintln!(\"{}\", my_enum@MyString);\n</code></pre>\n\n<p>And if, suppose, <code>my_enum</code> is of the subtype <code>Field2</code>, then to mutate <code>x</code>:</p>\n\n<pre><code>my_enum@Field2.x += 1.0;\n</code></pre>\n\n<p>Can I do something like this? I strongly suppose that the answer is \"No\", because if I remove <code>_ =&gt; {}</code> from the matches above, type checker starts complaining about non-exhaustive pattern matching:</p>\n\n<pre><code>patterns `Field1` and `Field2` not covered\n</code></pre>\n\n<p>though it can be inferred that <code>my_enum</code> can be nothing but <code>MyString</code>. By \"inferred\" I mean the compiler could track for all the variables of the type <code>MyEnum</code> what subtypes of values they can contain exactly.</p>\n\n<p>I found a place in a larger code where this could be convenient, though I guess I can rewrite it in other way. However, I think that the compiler could be smarter and at least understand that in this context the pattern <code>MyEnum::MyString</code> is exhaustive. If the answer on the question above is really \"No\", as I suspect, I'm interested if this issue was discussed among Rust developers (maybe a RFCS link?) and if it is worth to make a feature request.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 3029, "user_id": 1060004, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/ZOBMa.jpg?s=128&g=1", "display_name": "ustulation", "link": "https://stackoverflow.com/users/1060004/ustulation"}, "edited": false, "score": 0, "creation_date": 1488123119, "post_id": 42470352, "comment_id": 72081518, "body": "Dropping might not work if there are clones of sender. I think a more deterministic way would be to explicitly fire an exit condition ?"}, {"owner": {"reputation": 752, "user_id": 7496656, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/zMGuk.jpg?s=128&g=1", "display_name": "Jan Zerebecki", "link": "https://stackoverflow.com/users/7496656/jan-zerebecki"}, "reply_to_user": {"reputation": 3029, "user_id": 1060004, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/ZOBMa.jpg?s=128&g=1", "display_name": "ustulation", "link": "https://stackoverflow.com/users/1060004/ustulation"}, "edited": false, "score": 0, "creation_date": 1488126183, "post_id": 42470352, "comment_id": 72082476, "body": "I changed the example to use <code>send()</code>, using either works in the example. Making a Stream forever be not ready when an inner Stream completed is also possible in a similar way. Either way is deterministic, but I understand what you mean."}, {"owner": {"reputation": 6319, "user_id": 647380, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/07709965ee03bbc0a25288dc62102114?s=128&d=identicon&r=PG&f=1", "display_name": "pocesar", "link": "https://stackoverflow.com/users/647380/pocesar"}, "edited": false, "score": 0, "creation_date": 1555103580, "post_id": 42470352, "comment_id": 98007462, "body": "although this does work after the socket has received another connection (then it will drop), the behavior is the same as using <code>somefuture.select(for_each)</code>, the <code>for_each</code> will block the other future until its awaken by a connection"}, {"owner": {"reputation": 325758, "user_id": 415784, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/2WX9Z.jpg?s=128&g=1", "display_name": "Nawaz", "link": "https://stackoverflow.com/users/415784/nawaz"}, "edited": false, "score": 0, "creation_date": 1555228024, "post_id": 42470352, "comment_id": 98031718, "body": "Any specific reason why you took <code>unbounded()</code> instead of <code>oneshot::channel()</code>?"}], "tags": [], "owner": {"reputation": 752, "user_id": 7496656, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/zMGuk.jpg?s=128&g=1", "display_name": "Jan Zerebecki", "link": "https://stackoverflow.com/users/7496656/jan-zerebecki"}, "is_accepted": true, "score": 4, "last_activity_date": 1488125597, "last_edit_date": 1488125597, "creation_date": 1488122669, "answer_id": 42470352, "question_id": 42462441, "link": "https://stackoverflow.com/questions/42462441/how-to-cleanly-break-tokio-core-event-loop-and-futuresstream-in-rust/42470352#42470352", "title": "How to cleanly break tokio-core event loop and futures::Stream in Rust", "body": "<p>The event loop (<code>core</code>) is not being turned any more (e.g. by <code>run()</code>) or is forgotten (drop()ed). There is no synchronous exit. <code>core.run()</code> returns and stops turning the loop when the <code>Future</code> passed to it completes.</p>\n\n<p>A <code>Stream</code> completes by yielding <code>None</code> (marked with (3) in the code below).\nWhen e.g. a TCP connection is closed the <code>Stream</code> representing it completes and the other way around.</p>\n\n<pre><code>extern crate tokio_core;\nextern crate futures;\n\nuse tokio_core::reactor::Core;\nuse futures::sync::mpsc::unbounded;\nuse tokio_core::net::TcpListener;\nuse std::net::SocketAddr;\nuse std::str::FromStr;\nuse futures::{Async, Stream, Future, Poll};\nuse std::thread;\nuse std::time::Duration;\n\nstruct CompletionPact&lt;S, C&gt;\n    where S: Stream,\n          C: Stream, \n{\n    stream: S,\n    completer: C,\n}\n\nfn stream_completion_pact&lt;S, C&gt;(s: S, c: C) -&gt; CompletionPact&lt;S, C&gt;\n    where S: Stream,\n          C: Stream,\n{\n    CompletionPact {\n        stream: s,\n        completer: c,\n    }\n}\n\nimpl&lt;S, C&gt; Stream for CompletionPact&lt;S, C&gt;\n    where S: Stream,\n          C: Stream,\n{\n    type Item = S::Item;\n    type Error = S::Error;\n\n    fn poll(&amp;mut self) -&gt; Poll&lt;Option&lt;S::Item&gt;, S::Error&gt; {\n        match self.completer.poll() {\n            Ok(Async::Ready(None)) |\n            Err(_) |\n            Ok(Async::Ready(Some(_))) =&gt; {\n                // We are done, forget us\n                Ok(Async::Ready(None)) // &lt;&lt;&lt;&lt;&lt;&lt; (3)\n            },\n            Ok(Async::NotReady) =&gt; {\n                self.stream.poll()\n            },\n        }\n    }\n}\n\nfn main() {\n    // unbounded() is the equivalent of a Stream made from a channel()\n    // directly create it in this thread instead of receiving a Sender\n    let (tx, rx) = unbounded::&lt;()&gt;();\n    // A second one to cause forgetting the listener\n    let (l0tx, l0rx) = unbounded::&lt;()&gt;();\n\n    let j = thread::spawn(move || {\n        let mut core = Core::new().unwrap();\n\n        // Listener-0\n        {\n            let l = TcpListener::bind(\n                    &amp;SocketAddr::from_str(\"127.0.0.1:44444\").unwrap(),\n                    &amp;core.handle())\n                .unwrap();\n\n            // wrap the Stream of incoming connections (which usually doesn't\n            // complete) into a Stream that completes when the\n            // other side is drop()ed or sent on\n            let fe = stream_completion_pact(l.incoming(), l0rx)\n                .for_each(|(_sock, peer)| {\n                    println!(\"Accepted from {}\", peer);\n                    Ok(())\n                })\n                .map_err(|e| println!(\"----- {:?}\", e));\n\n            core.handle().spawn(fe);\n        }\n\n        // Listener1\n        {\n            let l = TcpListener::bind(\n                    &amp;SocketAddr::from_str(\"127.0.0.1:55555\").unwrap(),\n                    &amp;core.handle())\n                .unwrap();\n\n            let fe = l.incoming()\n                .for_each(|(_sock, peer)| {\n                    println!(\"Accepted from {}\", peer);\n                    Ok(())\n                })\n                .map_err(|e| println!(\"----- {:?}\", e));\n\n            core.handle().spawn(fe);\n        }\n\n        let _ = core.run(rx.into_future());\n        println!(\"Exiting event loop thread\");\n    });\n\n    thread::sleep(Duration::from_secs(2));\n    println!(\"Want to terminate listener-0\");\n    // A drop() will result in the rx side Stream being completed,\n    // which is indicated by Ok(Async::Ready(None)).\n    // Our wrapper behaves the same when something is received.\n    // When the event loop encounters a\n    // Stream that is complete it forgets about it. Which propagates to a\n    // drop() that close()es the file descriptor, which closes the port if\n    // nothing else uses it.\n    l0tx.send(()).unwrap(); // alternatively: drop(l0tx);\n    // Note that this is async and is only the signal\n    // that starts the forgetting.\n\n    thread::sleep(Duration::from_secs(2));\n    println!(\"Want to exit event loop\");\n    // Same concept. The reception or drop() will cause Stream completion.\n    // A completed Future will cause run() to return.\n    tx.send(()).unwrap();\n\n    j.join().unwrap();\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 389, "user_id": 847598, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3e7692a5956513bcf0038801961650c5?s=128&d=identicon&r=PG", "display_name": "Windel", "link": "https://stackoverflow.com/users/847598/windel"}, "is_accepted": false, "score": 1, "last_activity_date": 1577102114, "creation_date": 1577102114, "answer_id": 59454943, "question_id": 42462441, "link": "https://stackoverflow.com/questions/42462441/how-to-cleanly-break-tokio-core-event-loop-and-futuresstream-in-rust/59454943#59454943", "title": "How to cleanly break tokio-core event loop and futures::Stream in Rust", "body": "<p>I implemented graceful shutdown via a <a href=\"https://docs.rs/futures/0.3.1/futures/channel/oneshot/fn.channel.html\" rel=\"nofollow noreferrer\"><code>oneshot</code></a> channel.</p>\n\n<p>The trick was to use both a <code>oneshot</code> channel to cancel the tcp listener, and use a <a href=\"https://docs.rs/futures/0.3.1/futures/macro.select.html\" rel=\"nofollow noreferrer\"><code>select!</code></a> on the two futures. Note I'm using tokio 0.2 and futures 0.3 in the example below.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>\nuse futures::channel::oneshot;\nuse futures::{FutureExt, StreamExt};\nuse std::thread;\nuse tokio::net::TcpListener;\n\npub struct ServerHandle {\n    // This is the thread in which the server will block\n    thread: thread::JoinHandle&lt;()&gt;,\n\n    // This switch can be used to trigger shutdown of the server.\n    kill_switch: oneshot::Sender&lt;()&gt;,\n}\n\nimpl ServerHandle {\n    pub fn stop(self) {\n        self.kill_switch.send(()).unwrap();\n        self.thread.join().unwrap();\n    }\n}\n\npub fn run_server() -&gt; ServerHandle {\n    let (kill_switch, kill_switch_receiver) = oneshot::channel::&lt;()&gt;();\n\n    let thread = thread::spawn(move || {\n        info!(\"Server thread begun!!!\");\n        let mut runtime = tokio::runtime::Builder::new()\n            .basic_scheduler()\n            .enable_all()\n            .thread_name(\"Tokio-server-thread\")\n            .build()\n            .unwrap();\n\n        runtime.block_on(async {\n            server_prog(kill_switch_receiver).await.unwrap();\n        });\n\n        info!(\"Server finished!!!\");\n    });\n\n    ServerHandle {\n        thread,\n        kill_switch,\n    }\n}\n\nasync fn server_prog(kill_switch_receiver: oneshot::Receiver&lt;()&gt;) -&gt; std::io::Result&lt;()&gt; {\n    let addr = \"127.0.0.1:12345\";\n    let addr: std::net::SocketAddr = addr.parse().unwrap();\n    let mut listener = TcpListener::bind(&amp;addr).await?;\n    let mut kill_switch_receiver = kill_switch_receiver.fuse();\n    let mut incoming = listener.incoming().fuse();\n\n    loop {\n        futures::select! {\n            x = kill_switch_receiver =&gt; {\n                break;\n            },\n            optional_new_client = incoming.next() =&gt; {\n                if let Some(new_client) = optional_new_client {\n                    let peer_socket = new_client?;\n                    info!(\"Client connected!\");\n                    let peer = process_client(peer_socket, db.clone());\n                    peers.lock().unwrap().push(peer);\n                } else {\n                    info!(\"No more incoming connections.\");\n                    break;\n                }\n            },\n        };\n    }\n    Ok(())\n}\n\n</code></pre>\n\n<p>Hopes this helps others (or future me ;)).</p>\n\n<p>My code lives here:</p>\n\n<p><a href=\"https://github.com/windelbouwman/lognplot/blob/master/lognplot/src/server/server.rs\" rel=\"nofollow noreferrer\">https://github.com/windelbouwman/lognplot/blob/master/lognplot/src/server/server.rs</a></p>\n"}], "owner": {"reputation": 3029, "user_id": 1060004, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/ZOBMa.jpg?s=128&g=1", "display_name": "ustulation", "link": "https://stackoverflow.com/users/1060004/ustulation"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3025, "favorite_count": 1, "accepted_answer_id": 42470352, "answer_count": 2, "score": 5, "last_activity_date": 1577102114, "creation_date": 1488062439, "question_id": 42462441, "link": "https://stackoverflow.com/questions/42462441/how-to-cleanly-break-tokio-core-event-loop-and-futuresstream-in-rust", "title": "How to cleanly break tokio-core event loop and futures::Stream in Rust", "body": "<p>I am dabbling in tokio-core and can figure out how to spawn an event loop. However there are two things i am not sure of - how to gracefully exit the event loop and how to exit a stream running inside an event loop. For e.g consider this simple piece of code which spawns two listeners into the event loop and waits for another thread to indicate an exit condition:</p>\n\n<pre><code>extern crate tokio_core;\nextern crate futures;\n\nuse tokio_core::reactor::Core;\nuse futures::sync::mpsc::unbounded;\nuse tokio_core::net::TcpListener;\nuse std::net::SocketAddr;\nuse std::str::FromStr;\nuse futures::{Stream, Future};\nuse std::thread;\nuse std::time::Duration;\nuse std::sync::mpsc::channel;\n\nfn main() {\n    let (get_tx, get_rx) = channel();\n\n    let j = thread::spawn(move || {\n        let mut core = Core::new().unwrap();\n        let (tx, rx) = unbounded();\n        get_tx.send(tx).unwrap(); // &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; (1)\n\n        // Listener-0\n        {\n            let l = TcpListener::bind(&amp;SocketAddr::from_str(\"127.0.0.1:44444\").unwrap(),\n                                      &amp;core.handle())\n                .unwrap();\n\n            let fe = l.incoming()\n                .for_each(|(_sock, peer)| {\n                    println!(\"Accepted from {}\", peer);\n                    Ok(())\n                })\n                .map_err(|e| println!(\"----- {:?}\", e));\n\n            core.handle().spawn(fe);\n        }\n\n        // Listener1\n        {\n            let l = TcpListener::bind(&amp;SocketAddr::from_str(\"127.0.0.1:55555\").unwrap(),\n                                      &amp;core.handle())\n                .unwrap();\n\n            let fe = l.incoming()\n                .for_each(|(_sock, peer)| {\n                    println!(\"Accepted from {}\", peer);\n                    Ok(())\n                })\n                .map_err(|e| println!(\"----- {:?}\", e));\n\n            core.handle().spawn(fe);\n        }\n\n        let work = rx.for_each(|v| {\n            if v {\n                // (3) I want to shut down listener-0 above the release the resources\n                Ok(())\n            } else {\n                Err(()) // &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; (2)\n\n            }\n        });\n\n        let _ = core.run(work);\n        println!(\"Exiting event loop thread\");\n    });\n\n    let tx = get_rx.recv().unwrap();\n\n    thread::sleep(Duration::from_secs(2));\n    println!(\"Want to terminate listener-0\"); // &lt;&lt;&lt;&lt;&lt;&lt; (3)\n    tx.send(true).unwrap();\n\n    thread::sleep(Duration::from_secs(2));\n    println!(\"Want to exit event loop\");\n    tx.send(false).unwrap();\n\n    j.join().unwrap();\n}\n</code></pre>\n\n<p>So say after the sleep in the main thread i want a clean exit of the event loop thread. Currently I send something to the event loop to make it exit and thus releasing the thread.</p>\n\n<p>However both, <code>(1)</code> and <code>(2)</code> feel hacky - i am forcing an error as an exit condition. My questions are:</p>\n\n<p>1) Am I doing it right ? If not then what is the correct way to gracefully exit the event loop thread.</p>\n\n<p>2) I don't event know how to do <code>(3)</code> - i.e. indicate a condition externally to shutdown listener-0 and free all it's resources. How do i achieve this ?</p>\n"}, {"tags": ["algorithm", "graphics", "rust", "bezier"], "answers": [{"tags": [], "owner": {"reputation": 39499, "user_id": 740553, "user_type": "registered", "accept_rate": 46, "profile_image": "https://i.stack.imgur.com/s5cOX.jpg?s=128&g=1", "display_name": "Mike &#39;Pomax&#39; Kamermans", "link": "https://stackoverflow.com/users/740553/mike-pomax-kamermans"}, "is_accepted": true, "score": 5, "last_activity_date": 1529247326, "last_edit_date": 1529247326, "creation_date": 1488057685, "answer_id": 42461746, "question_id": 42459756, "link": "https://stackoverflow.com/questions/42459756/how-to-determine-the-bezier-control-points-from-calculated-points-with-lossy-app/42461746#42461746", "title": "How to determine the bezier control points from calculated points with lossy approximation?", "body": "<p>I wrote up how to do this over on \"A Primer on B\u00e9zier Curves\" in the <a href=\"http://pomax.github.io/bezierinfo/#pointcurves\" rel=\"nofollow noreferrer\">\"Creating a curve from three points\"</a> section, although you probably need to read the preceding two sections as well because they explain the supporting theory and code.</p>\n\n<p>The important information is the fact that <a href=\"http://pomax.github.io/bezierinfo/#abc\" rel=\"nofollow noreferrer\">for any given <code>t</code>, there is a fixed point on the line {start,end} that connects to your on-curve point Bezier(t)</a>. In the following image, for instance, point <code>C</code> is <em>always</em> at the same distance ratio from the start and end. It doesn't matter what the curve looks like based on where you've placed the control points: at the <code>t=0.5</code> mark, <code>C</code> will always be always mid-way between start and end. Additionally, the ratio between the length of the line segment {<code>C</code>,<code>Bezier(t)</code>} and line segment {<code>Bezier(t)</code>,<code>A</code>} are fixed. So, if you know those first two points <code>C</code> and <code>Bezier(t)</code> --which you do-- then you immediately know where <code>A</code> goes, so you have all the information needed.</p>\n\n<p><a href=\"https://i.stack.imgur.com/GCnhy.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/GCnhy.png\" alt=\"enter image description here\"></a></p>\n\n<p>With that, you can reconstruct the curve however you like, with your only free parameter being the tangent at <code>t</code>, or more precisely, the left and right interpolation distances. Without more than three points, that's pretty much a guessed value and there's a few \"aesthetically pleasing\" options but none of those apply in your case: you have a bunch of points around your chosen <code>t</code> value then you can make an educated guess about tangents based on those, and you can simply reconstruct the cubic Bezier using that information.</p>\n\n<p>And the absence of information, the safe route is to pick distances based on where the De Casteljau's algorithm says the interpolation line segments lie, and picking their centers:</p>\n\n<p><a href=\"https://i.stack.imgur.com/GCnhy.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/spilo.png\" alt=\"enter image description here\"></a></p>\n\n<p>But given your data, you can get a much better fit.</p>\n"}, {"tags": [], "owner": {"reputation": 1, "user_id": 3519387, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e655add258f054adf7fbf45de8e06799?s=128&d=identicon&r=PG&f=1", "display_name": "kuribas", "link": "https://stackoverflow.com/users/3519387/kuribas"}, "is_accepted": false, "score": 0, "last_activity_date": 1489327158, "creation_date": 1489327158, "answer_id": 42748291, "question_id": 42459756, "link": "https://stackoverflow.com/questions/42459756/how-to-determine-the-bezier-control-points-from-calculated-points-with-lossy-app/42748291#42748291", "title": "How to determine the bezier control points from calculated points with lossy approximation?", "body": "<p>Easiest would be a least squares approximation.  If B(t) is the equation of the bezier, P<sub>i</sub> are the points to approximate, t<sub>i</sub> are the corresponding parameter values, you want to minimize LSQ = &sum;<sub>i</sub>||B(t<sub>i</sub>)-P<sub>i</sub>||<sup>2</sup> = &sum;<sub>i</sub> ((B<sub>x</sub>(t<sub>i</sub>)-P<sub>xi</sub>)<sup>2</sup> + ((B<sub>y</sub>(t<sub>i</sub>)-P<sub>yi</sub>)<sup>2</sup>).  You can take the coordinates of F and E as variables, so you get four linear equations, in four variables: &part;/&part;<sub>F<sub>x</sub></sub>(LSQ)=0, &part;/&part;<sub>F<sub>y</sub></sub>(LSQ)=0, &part;/&part;<sub>E<sub>x</sub></sub>(LSQ)=0, &part;/&part;<sub>E<sub>y</sub></sub>(LSQ)=0.  They can be solved using standard methods.  To find the corresponding parameter values you can use a chord-length approximation, which gives good results: t<sub>i</sub> = ||P<sub>i</sub> - P<sub>i-1</sub>||/total, total = ||D-P<sub>n</sub>|| + &sum;||P<sub>i</sub>-P<sub>i-1</sub>|| (take P<sub>0</sub>=C).  If you need the best approximation, you can refine the parameters with an iterative algorithm.</p>\n"}], "owner": {"reputation": 157, "user_id": 5317180, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/0edf546409f34b35df5d19e4e7b8e4f6?s=128&d=identicon&r=PG&f=1", "display_name": "BiggCrazy", "link": "https://stackoverflow.com/users/5317180/biggcrazy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1842, "favorite_count": 0, "accepted_answer_id": 42461746, "answer_count": 2, "score": 2, "last_activity_date": 1529247326, "creation_date": 1488046175, "question_id": 42459756, "link": "https://stackoverflow.com/questions/42459756/how-to-determine-the-bezier-control-points-from-calculated-points-with-lossy-app", "title": "How to determine the bezier control points from calculated points with lossy approximation?", "body": "<p>I have a question about calculating the bezier controls for a curve. The problem is as the following image shows:</p>\n\n<p><a href=\"https://i.stack.imgur.com/vmgSK.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/vmgSK.png\" alt=\"Problem bezier curve\"></a></p>\n\n<p>I have the red points in an ordered list, including C and D. I need to find F and E. The problem is that not every point has to be on the curve (the curve does not need to pass through any point, except for start and end). It just has to be an \"approximation\".</p>\n\n<p>I've already read about the following:</p>\n\n<ul>\n<li><a href=\"http://blog.sklambert.com/finding-the-control-points-of-a-bezier-curve/\" rel=\"nofollow noreferrer\">Finding the control point of bezier curves</a> - only works with horizontal aligned handles, I don't have a midpoint to start from. Does also only find the user-visible control points, not F and E</li>\n<li><a href=\"https://www.cs.bgu.ac.il/~leonid/na105/Splines/Lee.pdf\" rel=\"nofollow noreferrer\">Parametric reconstruction of a NURBS curve</a> - that's fine if you want to interpolate between the red points, but that's not my goal</li>\n</ul>\n\n<p>So my thought on how to solve this was:</p>\n\n<ol>\n<li>Calculate the furthest point from a line through C and D</li>\n<li>If the number of points is even, look at the previous and next point in the list, determine which one is further away from the imaginary line and calculate the midpoint between them</li>\n<li>Three points are not enough to get the shape of the curve, I need the value at 25% and 75%. Luckily there are several methods for determining this: uniformly spaced method, arc length and centripedal method.</li>\n<li>Now I have 5 points (begin, 25%, mid, 75%, end) to describe my curve. I know the t values for each one. The curve should look like this:</li>\n</ol>\n\n<p><a href=\"https://i.stack.imgur.com/LsTSb.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/LsTSb.png\" alt=\"maybe solution\"></a></p>\n\n<p>From this, I need to somehow insert the points into the bezier formula and then reverse-calculate the control points ... how?</p>\n\n<p>Thanks in advance for any hints.</p>\n"}, {"tags": ["error-handling", "rust", "downcast"], "answers": [{"comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1488160020, "post_id": 42459379, "comment_id": 72093577, "body": "Thanks. I did some tests and found that even <code>panic!(my_str)</code> will end up being caught as a <code>String</code> when <code>my_str</code> is constructed at runtime. So the behaviour of <code>panic!()</code> is actually exactly what you described as your &quot;perhaps eventually&quot; behaviour for <code>Option::expect</code>."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 2, "last_activity_date": 1488044337, "creation_date": 1488044337, "answer_id": 42459379, "question_id": 42458210, "link": "https://stackoverflow.com/questions/42458210/why-cant-the-option-expect-message-be-downcast-as-a-static-str-when-a-panic/42459379#42459379", "title": "Why can&#39;t the Option.expect() message be downcast as a &amp;&#39;static str when a panic is handled with catch_unwind?", "body": "<p><a href=\"https://doc.rust-lang.org/stable/std/option/enum.Option.html#method.expect\" rel=\"nofollow noreferrer\"><code>Option::expect</code></a> expects a message as a <code>&amp;str</code>, i.e. a string slice with any lifetime. You can't coerce a <code>&amp;str</code> to a <code>&amp;'static str</code>, as the string slice may refer to the interior of a <code>String</code> or <code>Box&lt;str&gt;</code> that could be freed at any time. If you were to keep a copy of the <code>&amp;'static str</code> around, you would be able to use it after the <code>String</code> or <code>Box&lt;str&gt;</code> has been dropped, and that would be undefined behavior.</p>\n\n<p>An importail detail is that the <code>Any</code> trait cannot hold any lifetime information (hence the <code>'static</code> bound), as lifetimes in Rust are erased at compile time. Lifetimes are used by the compiler to validate your program, but a program cannot distinguish a <code>&amp;'a str</code> from a <code>&amp;'b str</code> from a <code>&amp;'static str</code> at runtime.</p>\n\n<blockquote>\n  <p>[...]\u00a0how would I find the correct type to downcast to in the general case?</p>\n</blockquote>\n\n<p>Unfortunately, it's not easy. <code>Any</code> has a method (unstable as of Rust 1.15.1) named <a href=\"https://doc.rust-lang.org/stable/std/any/trait.Any.html#tymethod.get_type_id\" rel=\"nofollow noreferrer\"><code>get_type_id</code></a> that lets you obtain the <a href=\"https://doc.rust-lang.org/stable/std/any/struct.TypeId.html\" rel=\"nofollow noreferrer\"><code>TypeId</code></a> of the concrete object referred to by the <code>Any</code>. That still doesn't tell you explicitly what type that is, as you still have to figure out which type this <code>TypeId</code> belongs to. You would have to get the <code>TypeId</code> of many types (using <a href=\"https://doc.rust-lang.org/stable/std/any/struct.TypeId.html#method.of\" rel=\"nofollow noreferrer\"><code>TypeId::of</code></a>) and see if it matches the one you got from the <code>Any</code>, but you could do the same with <code>downcast_ref</code>.</p>\n\n<p>In this instance, it turns out that the <code>Any</code> is a <code>String</code>. Perhaps <code>Option::expect</code> could eventually be specialized such that it panics with the string slice if its lifetime is <code>'static</code> and only allocates a <code>String</code> if it's not <code>'static</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 2348, "user_id": 864406, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/fd625e8a9c68a44bee8185847b7b59b0?s=128&d=identicon&r=PG", "display_name": "Lucretiel", "link": "https://stackoverflow.com/users/864406/lucretiel"}, "is_accepted": false, "score": 0, "last_activity_date": 1587337626, "creation_date": 1587337626, "answer_id": 61312828, "question_id": 42458210, "link": "https://stackoverflow.com/questions/42458210/why-cant-the-option-expect-message-be-downcast-as-a-static-str-when-a-panic/61312828#61312828", "title": "Why can&#39;t the Option.expect() message be downcast as a &amp;&#39;static str when a panic is handled with catch_unwind?", "body": "<p>Like Francis said, you can't in general discover and cast to the type of a <code>panic</code>. However, that being said, panics have the following rules:</p>\n\n<ul>\n<li>If you <code>panic!</code> with a single argument, the panic will have that type. Typically this is <code>&amp;'static str</code>.</li>\n<li>If you <code>panic!</code> with more than one argument, the arguments will be treated as <code>format!</code> parameters and used to create a <code>String</code> argument.</li>\n</ul>\n\n<p>These rules are documented in the <code>panic</code> documentation: <a href=\"https://doc.rust-lang.org/std/panic/fn.catch_unwind.html\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/std/panic/fn.catch_unwind.html</a>.</p>\n\n<p>With these rules in mind, we can write a function to extract the message from a panic in any case where there is a message available to be extracted, which in practice works most of the time, because most of the time the message is either <code>&amp;'static str</code> or <code>String</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn get_panic_message(panic: &amp;Box&lt;dyn Any + Send&gt;) -&gt; Option&lt;&amp;str&gt; {\n    panic\n        // Try to convert it to a String, then turn that into a str\n        .downcast_ref::&lt;String&gt;()\n        .map(String::as_str)\n        // If that fails, try to turn it into a &amp;'static str\n        .or_else(|| panic.downcast_ref::&lt;&amp;'static str&gt;().map(Deref::deref))\n}\n</code></pre>\n\n<p>I use this exact function in an assertions library I wrote a while ago; you can see some examples of its use in the relevant <a href=\"https://github.com/Lucretiel/cool_asserts/blob/ee339b5f610cd95be6e5e5f62456cd2aa45d1ba2/src/lib.rs#L39-L70\" rel=\"nofollow noreferrer\">test suite</a>.</p>\n"}], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 188, "favorite_count": 0, "accepted_answer_id": 42459379, "answer_count": 2, "score": 5, "last_activity_date": 1587337626, "creation_date": 1488038195, "last_edit_date": 1551013129, "question_id": 42458210, "link": "https://stackoverflow.com/questions/42458210/why-cant-the-option-expect-message-be-downcast-as-a-static-str-when-a-panic", "title": "Why can&#39;t the Option.expect() message be downcast as a &amp;&#39;static str when a panic is handled with catch_unwind?", "body": "<p>I have the following code:</p>\n\n<pre><code>use std::thread;\nuse std::panic;\n\npub fn main(){\n    thread::spawn(move || {\n        panic::catch_unwind(|| {\n            // panic!(\"Oh no! A horrible error.\");\n            let s: Option&lt;u32&gt; = None;\n            s.expect(\"Nothing was there!\");\n        })\n    })\n    .join()\n    .and_then(|result| {\n        match result {\n            Ok(ref val) =&gt; {\n                println!(\"No problems. Result was: {:?}\", val);\n            }\n            Err(ref err) =&gt; {\n                if let Some(err) = err.downcast_ref::&lt;&amp;'static str&gt;() {\n                    println!(\"Error: {}\", err);\n                } else {\n                    println!(\"Unknown error type: {:?}\", err);\n                }\n            }\n        }\n        result\n    });\n}\n</code></pre>\n\n<p>When I trigger a <code>panic!</code> directly (by uncommenting the line in the code above), then I get an output which includes my error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Error: Oh no! A horrible error.\n</code></pre>\n\n<p>But, if I use <code>Option::expect(&amp;str)</code>, as above, then the message cannot be downcast to <code>&amp;'static str</code>, so I can't get the error message out:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Unknown error type: Any\n</code></pre>\n\n<p>How can I get the error message, and how would I find the correct type to downcast to in the general case?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 4, "last_activity_date": 1488034648, "creation_date": 1488034648, "answer_id": 42457596, "question_id": 42456497, "link": "https://stackoverflow.com/questions/42456497/stdresultresult-panic-to-log/42457596#42457596", "title": "std::result::Result panic to log", "body": "<blockquote>\n  <p>This will commonly, but not always, be a <code>&amp;'static str</code> or <code>String</code></p>\n</blockquote>\n\n<p>This means that a developer (of one the libraries you use) could potentially use another type. In this case, the call to <code>downcast_ref</code> would fail.</p>\n\n<p>My advice is to handle the cases you know about and add a catch-all case with a default message.</p>\n\n<p>Also you should also consider printing the location, as it is incredibly useful even in the absence of message.</p>\n\n<p>All told:</p>\n\n<pre><code>use std::panic;\nuse std::ops::Deref;\n\npanic::set_hook(Box::new(|panic_info| {\n    let (filename, line) =\n        panic_info.location().map(|loc| (loc.file(), loc.line()))\n            .unwrap_or((\"&lt;unknown&gt;\", 0));\n\n    let cause = panic_info.payload().downcast_ref::&lt;String&gt;().map(String::deref);\n\n    let cause = cause.unwrap_or_else(||\n        panic_info.payload().downcast_ref::&lt;&amp;str&gt;().map(|s| *s)\n            .unwrap_or(\"&lt;cause unknown&gt;\")\n    );\n\n    error!(\"A panic occurred at {}:{}: {}\", filename, line, cause);\n}));\n</code></pre>\n\n<p>Let's unwrap it:</p>\n\n<ul>\n<li>first we fetch the filename and line from the location, providing defaults in case they are unknown,</li>\n<li>then we check whether the <code>payload</code> is a <code>String</code>, and if so dereference it,</li>\n<li>then, if not, we check if it is a <code>&amp;str</code>, and if not provide a default,</li>\n<li>finally, we print all the accumulated information.</li>\n</ul>\n"}], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 602, "favorite_count": 1, "accepted_answer_id": 42457596, "answer_count": 1, "score": 2, "last_activity_date": 1488034648, "creation_date": 1488028238, "last_edit_date": 1488033723, "question_id": 42456497, "link": "https://stackoverflow.com/questions/42456497/stdresultresult-panic-to-log", "title": "std::result::Result panic to log", "body": "<p>I run some code in a separate thread:</p>\n\n<pre><code>    fn f1() -&gt; Result&lt;(), String&gt; { Err(\"err1\".to_string()) }\n    fn f2() -&gt; Result&lt;(), String&gt; { Err(\"err2\".to_string()) }\n    ::std::thread::spawn(move || {\n      f1().expect(\"f1 failed\");\n      f2().expect(\"f2 failed\");\n    });\n</code></pre>\n\n<p>also I use <a href=\"https://doc.rust-lang.org/log/log/index.html\" rel=\"nofollow noreferrer\">log crate</a> for logging.</p>\n\n<p>As result I want <code>panic!</code> to call <code>error!</code> instead of <code>print!</code>.</p>\n\n<p>I found the <a href=\"https://doc.rust-lang.org/std/panic/struct.PanicInfo.html\" rel=\"nofollow noreferrer\">panic hook</a>, but I do not like <code>unwrap</code> in such code:</p>\n\n<pre><code>panic::set_hook(Box::new(|panic_info| {\n    error!(\"panic occured: {:?}\", panic_info.payload().downcast_ref::&lt;&amp;str&gt;().unwrap());\n}));\n</code></pre>\n\n<p>and I am worried about:</p>\n\n<blockquote>\n  <p>This will commonly, but not always, be a <code>&amp;'static str</code> or <code>String</code></p>\n</blockquote>\n\n<p>but would not <code>downcast</code> always succeeded?</p>\n"}, {"tags": ["iterator", "rust"], "answers": [{"comments": [{"owner": {"reputation": 45, "user_id": 7266608, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f697c16f03688033108be195830860a6?s=128&d=identicon&r=PG&f=1", "display_name": "Jesper Axelsson", "link": "https://stackoverflow.com/users/7266608/jesper-axelsson"}, "edited": false, "score": 0, "creation_date": 1488018640, "post_id": 42447021, "comment_id": 72052490, "body": "Thanks! I was was wondering how to pass an Iterator around, will be useful in the future."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 3, "last_activity_date": 1487965821, "last_edit_date": 1495540962, "creation_date": 1487965352, "answer_id": 42447021, "question_id": 42446844, "link": "https://stackoverflow.com/questions/42446844/mutable-iterator-for-vecveck-v/42447021#42447021", "title": "Mutable iterator for Vec&lt;Vec&lt;(K, V)&gt;&gt;", "body": "<p>You've provided no reason that you are reimplementing the standard <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.flat_map\" rel=\"nofollow noreferrer\"><code>Iterator::flat_map</code></a>, so I'd just use that and another <code>map</code> to remove the mutability you don't need:</p>\n\n<pre><code>fn main() {\n    let mut a: Vec&lt;Vec&lt;(u8, u8)&gt;&gt; = Default::default();\n    let c = a.iter_mut()\n        .flat_map(|x| x.iter_mut())\n        .map(|&amp;mut (ref a, ref mut b)| (a, b))\n        .count();\n    println!(\"{}\", c);\n}\n</code></pre>\n\n<p>Once you have that, you can just <a href=\"https://stackoverflow.com/q/27535289/155423\">return the iterator in one of the many ways</a>.</p>\n\n<pre><code>#[derive(Debug, Default)]\nstruct Thing&lt;K, V&gt;(Vec&lt;Vec&lt;(K, V)&gt;&gt;);\n\nimpl&lt;K, V&gt; Thing&lt;K, V&gt; {\n    fn iter_mut&lt;'a&gt;(&amp;'a mut self) -&gt; Box&lt;Iterator&lt;Item = (&amp;'a K, &amp;'a mut V)&gt; + 'a&gt; {\n        Box::new(self.0\n            .iter_mut()\n            .flat_map(|x| x.iter_mut())\n            .map(|&amp;mut (ref a, ref mut b)| (a, b)))\n    }\n}\n\nfn main() {\n    let mut a = Thing::&lt;u8, u8&gt;::default();\n    let c = a.iter_mut().count();\n    println!(\"{}\", c);\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 45, "user_id": 7266608, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f697c16f03688033108be195830860a6?s=128&d=identicon&r=PG&f=1", "display_name": "Jesper Axelsson", "link": "https://stackoverflow.com/users/7266608/jesper-axelsson"}, "edited": false, "score": 0, "creation_date": 1487973470, "post_id": 42447485, "comment_id": 72041731, "body": "Wow! Thanks! This is a really great answer! I am actually working on an custom hashmap."}, {"owner": {"reputation": 45, "user_id": 7266608, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f697c16f03688033108be195830860a6?s=128&d=identicon&r=PG&f=1", "display_name": "Jesper Axelsson", "link": "https://stackoverflow.com/users/7266608/jesper-axelsson"}, "edited": false, "score": 0, "creation_date": 1487975157, "post_id": 42447485, "comment_id": 72042459, "body": "Is the <code>unwrap_or_else(...)</code> for when <code>outer</code> is empty?"}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "reply_to_user": {"reputation": 45, "user_id": 7266608, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f697c16f03688033108be195830860a6?s=128&d=identicon&r=PG&f=1", "display_name": "Jesper Axelsson", "link": "https://stackoverflow.com/users/7266608/jesper-axelsson"}, "edited": false, "score": 1, "creation_date": 1487985120, "post_id": 42447485, "comment_id": 72045372, "body": "@JesperAxelsson: That&#39;s right. But I just updated that bit to not use unsafe code, using a trick that a mutable reference to an empty slice can have the <code>&#39;static</code> lifetime. I bet @MatthieuM didn&#39;t know about this one. :)"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1488021489, "post_id": 42447485, "comment_id": 72053294, "body": "@FrancisGagn&#233;: I did know about the <code>&#39;static</code>, but could not manage to coax the code into working... I was missing the extra pair of parenthesis around <code>&amp;mut []</code> :( Thanks for the edit, so much cleaner now!"}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 7, "last_activity_date": 1488021566, "last_edit_date": 1488021566, "creation_date": 1487967271, "answer_id": 42447485, "question_id": 42446844, "link": "https://stackoverflow.com/questions/42446844/mutable-iterator-for-vecveck-v/42447485#42447485", "title": "Mutable iterator for Vec&lt;Vec&lt;(K, V)&gt;&gt;", "body": "<p>When debugging cryptic error messages, I've found it easier to try and isolate the issue as much as possible.</p>\n\n<p>The first step is to break the expression into its essential constituents, let's start by splitting the indexing steps:</p>\n\n<pre><code>fn next(&amp;mut self) -&gt; Option&lt;(&amp;'a K, &amp;'a mut V)&gt; {\n\n    while self.iter.len() &lt; self.ix {\n        while self.iter[self.ix].len() &lt; self.inner_ix {\n            self.inner_ix += 1;\n            let outer: &amp;'a mut Vec&lt;_&gt; = self.iter;\n            let inner: &amp;'a mut Vec&lt;_&gt; = &amp;mut outer[self.ix];\n            let (ref k, ref mut v) = inner[self.inner_ix];\n            return Some((&amp;k, &amp;mut v));\n        }\n\n        self.ix += 1;\n    }\n\n    return None;\n}\n</code></pre>\n\n<p>The <code>Index</code> trait assumes that the lifetime of its output is linked to that of its receiver, so to get a <code>'a</code> lifetime we need the receiver to have a <code>&amp;'a</code> lifetime, and it propagates upward, leading to the above code.</p>\n\n<p>However there's an issue here: <code>let outer: &amp;'a mut Vec&lt;_&gt; = self.iter;</code> will not compile because mutable references are not <code>Copy</code>.</p>\n\n<p>So, how does one get a mutable reference from a mutable reference (which must be possible since <code>IndexMut</code> gets a mutable reference)?</p>\n\n<p>One uses re-borrowing: <code>let outer: &amp;'a mut Vec&lt;_&gt; = &amp;mut *self.iter;</code>.</p>\n\n<p>And, oh:</p>\n\n<blockquote>\n<pre><code>error[E0495]: cannot infer an appropriate lifetime for borrow expression due to conflicting requirements\n  --&gt; &lt;anon&gt;:16:45\n   |\n16 |                 let outer: &amp;'a mut Vec&lt;_&gt; = &amp;mut *self.iter;\n   |                                             ^^^^^^^^^^^^^^^\n   |\n</code></pre>\n</blockquote>\n\n<p>The reborrowed reference is not valid for <code>'a</code>, it's valid only for the (unnamed) lifetime of <code>self</code>!</p>\n\n<p><strong>Why Rust? Why?</strong></p>\n\n<p>Because doing otherwise would be unsafe.</p>\n\n<p><code>&amp;mut T</code> is guaranteed NOT to be aliasing, however your method could create aliasing references (if you forgot to advance the index):</p>\n\n<pre><code>#[inline]\nfn next(&amp;mut self) -&gt; Option&lt;(&amp;'a K, &amp;'a mut V)&gt; {\n    let (ref k, ref mut v) = self.iter[self.ix][self.inner_ix];\n    return Some((&amp;k, &amp;mut v));\n}\n</code></pre>\n\n<p>And even if you don't, there's not guarantee that you don't have a <code>rewind</code> method that would allow \"stepping back\".</p>\n\n<p><strong>TL;DR: You were about to step on a landmine, you were steered toward Stack Overflow instead ;)</strong></p>\n\n<hr>\n\n<p>Alright, but <em>how do you implement the iterator!</em>.</p>\n\n<p>Well, using iterators, of course. As Shepmaster (briefly) answers, there is the equivalent in the standard library already in the guise of <a href=\"https://doc.rust-lang.org/1.13.0/src/core/up/src/libcore/iter/mod.rs.html#1615-1646\" rel=\"nofollow noreferrer\"><code>FlatMap</code></a>. The trick is to use existing iterators for the nitty-gritty details!</p>\n\n<p>Something like:</p>\n\n<pre><code>use std::slice::IterMut;\n\npub struct MyIterMut&lt;'a, K: 'a, V: 'a&gt; {\n    outer: IterMut&lt;'a, Vec&lt;(K, V)&gt;&gt;,\n    inner: IterMut&lt;'a, (K, V)&gt;,\n}\n</code></pre>\n\n<p>Then you consume from <code>inner</code> as long as it provides items, and when empty you refill it from <code>outer</code>.</p>\n\n<pre><code>impl&lt;'a, K, V&gt; MyIterMut&lt;'a, K, V&gt; {\n    fn new(v: &amp;'a mut Vec&lt;Vec&lt;(K, V)&gt;&gt;) -&gt; MyIterMut&lt;'a, K, V&gt; {\n        let mut outer = v.iter_mut();\n        let inner = outer.next()\n                         .map(|v| v.iter_mut())\n                         .unwrap_or_else(|| (&amp;mut []).iter_mut());\n        MyIterMut { outer: outer, inner: inner }\n    }\n}\n\nimpl&lt;'a, K, V&gt; Iterator for MyIterMut&lt;'a, K, V&gt; {\n    type Item = (&amp;'a K, &amp;'a mut V);\n\n    #[inline]\n    fn next(&amp;mut self) -&gt; Option&lt;(&amp;'a K, &amp;'a mut V)&gt; {\n        loop {\n            match self.inner.next() {\n                Some(r) =&gt; return Some((&amp;r.0, &amp;mut r.1)),\n                None =&gt; (),\n            }\n\n            match self.outer.next() {\n                Some(v) =&gt; self.inner = v.iter_mut(),\n                None =&gt; return None,\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>A quick test case:</p>\n\n<pre><code>fn main() {\n    let mut v = vec![\n        vec![(1, \"1\"), (2, \"2\")],\n        vec![],\n        vec![(3, \"3\")]\n    ];\n    let iter = MyIterMut::new(&amp;mut v);\n    let c: Vec&lt;_&gt; = iter.collect();\n    println!(\"{:?}\", c);\n}\n</code></pre>\n\n<p>Prints:</p>\n\n<blockquote>\n<pre><code>[(1, \"1\"), (2, \"2\"), (3, \"3\")]\n</code></pre>\n</blockquote>\n\n<p>as expected, so it's not completely broken, but I wish I did not have to rely on the <code>&amp;[]</code> is <code>'static</code> trick (ie, that <code>std::slice::IterMut</code> implemented <code>Default</code>).</p>\n"}], "owner": {"reputation": 45, "user_id": 7266608, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f697c16f03688033108be195830860a6?s=128&d=identicon&r=PG&f=1", "display_name": "Jesper Axelsson", "link": "https://stackoverflow.com/users/7266608/jesper-axelsson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 531, "favorite_count": 0, "accepted_answer_id": 42447485, "answer_count": 2, "score": 3, "last_activity_date": 1488021566, "creation_date": 1487964698, "last_edit_date": 1487965086, "question_id": 42446844, "link": "https://stackoverflow.com/questions/42446844/mutable-iterator-for-vecveck-v", "title": "Mutable iterator for Vec&lt;Vec&lt;(K, V)&gt;&gt;", "body": "<p>I am trying to create an mutable iterator for a vector of type: <code>Vec&lt;Vec&lt;(K, V)&gt;&gt;</code></p>\n\n<p>The iterator code: </p>\n\n<pre><code>pub struct IterMut&lt;'a, K: 'a, V: 'a&gt; {\n    iter: &amp;'a mut Vec&lt;Vec&lt;(K, V)&gt;&gt;,\n    ix: usize,\n    inner_ix: usize,\n}\n\nimpl&lt;'a, K, V&gt; Iterator for IterMut&lt;'a, K, V&gt; {\n    type Item = (&amp;'a K, &amp;'a mut V);\n\n    #[inline]\n    fn next(&amp;mut self) -&gt; Option&lt;(&amp;'a K, &amp;'a mut V)&gt; {\n\n        while self.iter.len() &lt; self.ix {\n            while self.iter[self.ix].len() &lt; self.inner_ix {\n                self.inner_ix += 1;\n                let (ref k, ref mut v) = self.iter[self.ix][self.inner_ix];\n                return Some((&amp;k, &amp;mut v));\n            }\n\n            self.ix += 1;\n        }\n\n        return None;\n    }\n}\n</code></pre>\n\n<p>The error I get is: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for lifetime parameter in function call due to conflicting requirements\n  --&gt; src/main.rs:16:42\n   |\n16 |                 let (ref k, ref mut v) = self.iter[self.ix][self.inner_ix];\n   |                                          ^^^^^^^^^^^^^^^^^^\n   |\nhelp: consider using an explicit lifetime parameter as shown: fn next(&amp;'a mut self) -&gt; Option&lt;(&amp;'a K, &amp;'a mut V)&gt;\n  --&gt; src/main.rs:11:5\n   |\n11 |     fn next(&amp;mut self) -&gt; Option&lt;(&amp;'a K, &amp;'a mut V)&gt; {\n   |     ^\n</code></pre>\n\n<p>Apparently I have lifetime problems, but I don't know how to tell the compiler that this should work.</p>\n\n<p>Is this how you should implement the mutable iterator or is there a better way?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 1, "creation_date": 1487958250, "post_id": 42444983, "comment_id": 72033633, "body": "Could you use existing parsing libraries <a href=\"https://github.com/Geal/nom\" rel=\"nofollow noreferrer\">like <code>nom</code></a>? You declare the grammar and it will generate a parser for you that can handle these lookahead issues."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1487959216, "post_id": 42444983, "comment_id": 72034174, "body": "@kennytm: Not sure if nom has the concept of grapheme cluster... but then I am not quite sure the OP needs grapheme clusters to start with."}, {"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1487959502, "post_id": 42444983, "comment_id": 72034335, "body": "@MatthieuM. The <code>char</code> type OP using can only represent a code point. I think OP is confusing that &quot;one char \u21d2 multiple UTF-8 code units&quot; with &quot;one grapheme cluster \u21d2 multiple chars&quot;."}, {"owner": {"reputation": 115, "user_id": 6848961, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb93c1cd89427c8da928a1a1175f0b0e?s=128&d=identicon&r=PG&f=1", "display_name": "drajc", "link": "https://stackoverflow.com/users/6848961/drajc"}, "reply_to_user": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1487960747, "post_id": 42444983, "comment_id": 72035093, "body": "@kennytm I could use a library, but this is mostly a learning exercise and I&#39;d like to know if what I proposed is possible. I could definitely be misunderstanding the terminology. What I&#39;d like to know is how can I replicate the unstable &quot;char_at&quot; method, and how can I figure out how many bytes comprise the current character."}, {"owner": {"reputation": 115, "user_id": 6848961, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb93c1cd89427c8da928a1a1175f0b0e?s=128&d=identicon&r=PG&f=1", "display_name": "drajc", "link": "https://stackoverflow.com/users/6848961/drajc"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1487960872, "post_id": 42444983, "comment_id": 72035158, "body": "@MatthieuM I might not."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1487964435, "post_id": 42444983, "comment_id": 72037041, "body": "@drajc: To be honest, I just have strictly no idea what you&#39;re attempting to do here. So let&#39;s clarify terminology first: Unicode has the concept of Code Points and Grapheme Clusters. A Code Point is represented by a numerical value such as <code>U+1F4A9</code> (the \ud83d\udca9 emoji), Rust calls it <code>char</code>. Grapheme Clusters are combinations of multiple Code Points which merge together to represent a single (complex) entity: combining the code point U+0065 (e) and U+00B4 (&#180;) produces a grapheme cluster (&#233;). It seems to me that you do not care at all about those, and just want multi-peek instead."}, {"owner": {"reputation": 115, "user_id": 6848961, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb93c1cd89427c8da928a1a1175f0b0e?s=128&d=identicon&r=PG&f=1", "display_name": "drajc", "link": "https://stackoverflow.com/users/6848961/drajc"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1487968229, "post_id": 42444983, "comment_id": 72039024, "body": "@MatthieuM. Thanks for the explanation! My understanding was off (I thought code point was always a single byte and that characters comprised multiple code points--you&#39;ve clarified a few things for me with your example).   Is it possible to get the number of bytes for a single code point (or grapheme cluster if two code points should be combined) that I can index in the string slice? (I&#39;ll update my question with a better example)."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1487968356, "post_id": 42444983, "comment_id": 72039079, "body": "@drajc: If you only deal with code points, the <code>chars()</code> iterator iterates over code points, so <code>chars().peekable()</code> allows you to see both the current (popped) and next code point. You don&#39;t even have to do it yourself."}, {"owner": {"reputation": 115, "user_id": 6848961, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb93c1cd89427c8da928a1a1175f0b0e?s=128&d=identicon&r=PG&f=1", "display_name": "drajc", "link": "https://stackoverflow.com/users/6848961/drajc"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1487970162, "post_id": 42444983, "comment_id": 72040019, "body": "@MatthieuM. Is there a standard way to peek two characters (or any number) ahead with a peekable iterator? Also, for your example, will <code>chars()</code> treat the U+0065 and U+0301 as two separate characters or will it combine them?"}, {"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 1, "creation_date": 1488002865, "post_id": 42444983, "comment_id": 72048682, "body": "@drajc U+0065 and U+0301 will appear as two consecutive <code>char</code>s. You cannot fit two code points into one <code>char</code> value, and <code>chars()</code> produces one <code>char</code> at a time."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1488021410, "post_id": 42444983, "comment_id": 72053275, "body": "@drajc: If you want to see multiple elements at a time, you could use the <code>windows(n)</code> iterator which is a sliding window of length <code>n</code> over the underlying slice. You cannot match on the returned slice though. Otherwise, I advise you to have a look at <a href=\"https://github.com/bluss/rust-itertools\" rel=\"nofollow noreferrer\"><code>itertools</code></a>; notably it <code>tuples</code> iterator."}, {"owner": {"reputation": 115, "user_id": 6848961, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb93c1cd89427c8da928a1a1175f0b0e?s=128&d=identicon&r=PG&f=1", "display_name": "drajc", "link": "https://stackoverflow.com/users/6848961/drajc"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1488208361, "post_id": 42444983, "comment_id": 72117837, "body": "@MatthieuM. Thanks for teaching me a bit about unicode. Hopefully some of it will stick."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1488214445, "post_id": 42444983, "comment_id": 72122010, "body": "@drajc: It never sticks the first time for me, but after battling over and over... :)"}], "answers": [{"comments": [{"owner": {"reputation": 115, "user_id": 6848961, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb93c1cd89427c8da928a1a1175f0b0e?s=128&d=identicon&r=PG&f=1", "display_name": "drajc", "link": "https://stackoverflow.com/users/6848961/drajc"}, "edited": false, "score": 1, "creation_date": 1488208309, "post_id": 42450898, "comment_id": 72117801, "body": "Thank you for the response. That is exactly what I was wondering, but my inexperience with Rust made it hard for me to reason about the amount of overhead, and the ownership complications."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 3, "last_activity_date": 1487986196, "creation_date": 1487986196, "answer_id": 42450898, "question_id": 42444983, "link": "https://stackoverflow.com/questions/42444983/finding-the-size-of-a-grapheme-cluster-in-rust/42450898#42450898", "title": "Finding the size of a grapheme cluster in Rust", "body": "<p>The iterator returned by <a href=\"https://doc.rust-lang.org/stable/std/primitive.str.html#method.chars\" rel=\"nofollow noreferrer\"><code>str::chars()</code></a>, which is of type <a href=\"https://doc.rust-lang.org/stable/std/str/struct.Chars.html\" rel=\"nofollow noreferrer\"><code>str::Chars</code></a>, implements <code>Clone</code>. This means that you can create an iterator with the same state as an existing iterator, but then iterates independently, just by calling <code>.clone()</code> on the iterator. You can use the clone for lookaheads and advance the original iterator only when you're ready to progress.</p>\n\n<p><code>str::Chars</code> simply wraps <code>iter::Slice&lt;u8&gt;</code>, which itself is just a pair of pointers. Thus, cloning a <code>str::Chars</code> merely copies these two pointers in a new value, and this doesn't involve any memory allocation. This makes cloning a <code>str::Chars</code> very cheap, so don't be shy about it!</p>\n\n<pre><code>fn main() {\n    let mut s = \"\u0447\u0435llo = ==\".chars();\n    loop {\n        let mut s2 = s.clone();\n        let c1 = s2.next();\n        let c2 = s2.next();\n        match (c1, c2) {\n            (Some('='), Some('=')) =&gt; { s.next(); println!(\"==\"); }\n            (Some('='), _        ) =&gt; { s.next(); println!(\"=\"); }\n            (Some(c)  , _        ) =&gt; { s.next(); println!(\"{}\", c); }\n            (None, _) =&gt; break,\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 115, "user_id": 6848961, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb93c1cd89427c8da928a1a1175f0b0e?s=128&d=identicon&r=PG&f=1", "display_name": "drajc", "link": "https://stackoverflow.com/users/6848961/drajc"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 835, "favorite_count": 0, "accepted_answer_id": 42450898, "answer_count": 1, "score": 4, "last_activity_date": 1487986196, "creation_date": 1487958025, "question_id": 42444983, "link": "https://stackoverflow.com/questions/42444983/finding-the-size-of-a-grapheme-cluster-in-rust", "title": "Finding the size of a grapheme cluster in Rust", "body": "<p>I am working on a scanner (or tokenizer or lexer if you prefer). I must iterate through a string slice. I have found two methods for doing so that work:</p>\n\n<p><strong>First</strong>, I can create an iterator and iterate through each character. Here is a simplified example:</p>\n\n<pre><code>let s = \"\u0447\u0435llo\".chars();\nfor c in s {\n    println!(\"{}\", c);\n}\n</code></pre>\n\n<p>However, if I want to look ahead it is a little less straightforward:</p>\n\n<pre><code>let mut s = \"\u0447\u0435llo = ==\".chars().peekable();\nloop {\n    match (s.next(), s.peek()) {\n        (Some('='), Some(&amp;'=')) =&gt; { s.next(); println!(\"==\") },\n        (Some('='), _        )  =&gt; println!(\"=\"),\n        (Some(c)  , _        )  =&gt; println!(\"{}\", c),\n        (None, _) =&gt; break,\n    }\n}\n</code></pre>\n\n<p>Unfortunately, it doesn't appear that I can do multiple peek aheads if I want to, for example, look at the next next character.</p>\n\n<p>So I can instead work on the <strong>second</strong> method. I can convert the string slice to a vector of chars. For example:</p>\n\n<pre><code>fn char_at(text: &amp;Vec&lt;char&gt;, pos: usize) -&gt; Option&lt;char&gt; {\n    if pos &lt; text.len() {\n        Some(text[pos])\n    } else {\n        None\n    }\n}\n\nlet mut text = \"\u0447\u0435llo = ==\".chars().collect();\nlet mut position: usize = 0;\nloop {\n    match (char_at(&amp;text, position), char_at(&amp;text, position + 1)) {\n        (Some('='), Some('=')) =&gt; { position += 1; println!(\"==\") },\n        (Some('='), _        ) =&gt; println!(\"=\"),\n        (Some(c)  , _        ) =&gt; println!(\"{}\", c),\n        (None     , _        ) =&gt; break,\n    }\n    position += 1;\n}\n</code></pre>\n\n<p>What I'd like to try now is a third method that is a bit of a cross between the two. Essentially, what I want is the <a href=\"https://doc.rust-lang.org/1.1.0/syntax/str/fn.char_at.html\" rel=\"nofollow noreferrer\">char_at</a> method that Rust had before and I want the ability to get the size of a grapheme cluster.</p>\n\n<p>If I had those two features, I could use a method similar to my vector of characters method, but I could do so directly on the string slice. Something like this (<strong>this is not valid Rust code</strong>):</p>\n\n<pre><code>let mut text = \"\u0447\u0435llo = ==\";\nlet mut position: usize = 0;\nloop {\n    let next_char = text.char_at(position);\n    let peek_char = text.char_at(position + next_char.len());\n    match (next_char, peek_char)) {\n        (Some('='), Some('=')) =&gt; {\n            position += peek_char.len();\n            println!(\"==\")\n        },\n        (Some('='), _        ) =&gt; println!(\"=\"),\n        (Some(c)  , _        ) =&gt; println!(\"{}\", c),\n        (None     , _        ) =&gt; break,\n    }\n    position += next_char.len();\n}\n</code></pre>\n\n<p>Note: what I want is for <code>next_char.len()</code> and <code>peek_char.len()</code> to give me the number of bytes that those graphemes comprise.</p>\n\n<p>Here is my understanding of the approaches above:</p>\n\n<ul>\n<li>The iterator approach makes it difficult to perform multi-peek.</li>\n<li>The vector approach is a bit more costly (O(n) time to create vector and it requires more memory). Neither of these costs are overly significant, but I'm trying to learn better approaches.</li>\n<li>The third approach that I've discussed introduces methods that would cause nightmares for those of us that are not unicode experts.</li>\n</ul>\n\n<p>I'm brand new to Rust. So these are my questions:</p>\n\n<ul>\n<li>Am I missing a completely alternative approach?</li>\n<li>Is there an easy way to add multi-peek to an iterator?</li>\n<li>Can my third approach be implemented using functionality of which I am currently unaware?</li>\n</ul>\n"}, {"tags": ["http", "https", "rust"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1487948332, "post_id": 42441302, "comment_id": 72027323, "body": "What code have you tried? Are you using any specific library (like tokio or hyper)?"}, {"owner": {"reputation": 33, "user_id": 4007399, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7cc8349bb74dc2830abfb881a2f3c533?s=128&d=identicon&r=PG&f=1", "display_name": "BDA", "link": "https://stackoverflow.com/users/4007399/bda"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1487948716, "post_id": 42441302, "comment_id": 72027578, "body": "I already failed while selecting a library - most didn&#39;t support asynchrous requests or didn&#39;t support TLS. I&#39;m internally using MIO but not Tokio."}], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1487956614, "post_id": 42443408, "comment_id": 72032722, "body": "Link-only answers are frowned upon. In general, I would advise to include the relevant parts of the link in the answer itself; however in this particular case... I am not sure the question is salvageable, it&#39;s way too broad. SO deals best with specific questions, not tutorials."}, {"owner": {"reputation": 33, "user_id": 4007399, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7cc8349bb74dc2830abfb881a2f3c533?s=128&d=identicon&r=PG&f=1", "display_name": "BDA", "link": "https://stackoverflow.com/users/4007399/bda"}, "edited": false, "score": 0, "creation_date": 1487960842, "post_id": 42443408, "comment_id": 72035138, "body": "I tried using that example - is there a non-blocking variant of Core#run()?"}, {"owner": {"reputation": 838, "user_id": 3613212, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NfaGR.png?s=128&g=1", "display_name": "Gr&#233;gory OBANOS", "link": "https://stackoverflow.com/users/3613212/gr%c3%a9gory-obanos"}, "edited": false, "score": 0, "creation_date": 1487961294, "post_id": 42443408, "comment_id": 72035411, "body": "No, core.run (<a href=\"https://tokio-rs.github.io/tokio-core/tokio_core/reactor/struct.Core.html#method.run\" rel=\"nofollow noreferrer\">tokio-rs.github.io/tokio-core/tokio_core/reactor/&hellip;</a>) run the event loop. If you want to add some stuff to the event loop, you could use core.handle (see <a href=\"https://tokio.rs/docs/getting-started/reactor/#handle\" rel=\"nofollow noreferrer\">tokio.rs/docs/getting-started/reactor/#handle</a>).  Maybe you could re-use an event-loop, but I don&#39;t know how :D"}, {"owner": {"reputation": 33, "user_id": 4007399, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7cc8349bb74dc2830abfb881a2f3c533?s=128&d=identicon&r=PG&f=1", "display_name": "BDA", "link": "https://stackoverflow.com/users/4007399/bda"}, "edited": false, "score": 0, "creation_date": 1487962537, "post_id": 42443408, "comment_id": 72036112, "body": "The problem is, that I already have a loop and so on in my system - I need a way to integrate everything into that loop. That&#39;s not possible with Tokio, right?"}, {"owner": {"reputation": 838, "user_id": 3613212, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NfaGR.png?s=128&g=1", "display_name": "Gr&#233;gory OBANOS", "link": "https://stackoverflow.com/users/3613212/gr%c3%a9gory-obanos"}, "edited": false, "score": 0, "creation_date": 1487963175, "post_id": 42443408, "comment_id": 72036436, "body": "I don&#39;t think so, tokio make his own wrapper for the event loop, and nothing in the doc explain how to use your own event loop."}], "tags": [], "owner": {"reputation": 838, "user_id": 3613212, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NfaGR.png?s=128&g=1", "display_name": "Gr&#233;gory OBANOS", "link": "https://stackoverflow.com/users/3613212/gr%c3%a9gory-obanos"}, "is_accepted": false, "score": -1, "last_activity_date": 1487953089, "creation_date": 1487953089, "answer_id": 42443408, "question_id": 42441302, "link": "https://stackoverflow.com/questions/42441302/asynchronous-https-request-in-existing-loop/42443408#42443408", "title": "Asynchronous HTTP(S) request in existing loop", "body": "<p>The best way to make asynchronous I/O is to use tokio.</p>\n\n<p>You can find a example HTTP+TLS in doc : <a href=\"https://tokio.rs/docs/getting-started/tls/\" rel=\"nofollow noreferrer\">https://tokio.rs/docs/getting-started/tls/</a></p>\n"}], "owner": {"reputation": 33, "user_id": 4007399, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7cc8349bb74dc2830abfb881a2f3c533?s=128&d=identicon&r=PG&f=1", "display_name": "BDA", "link": "https://stackoverflow.com/users/4007399/bda"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 77, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1487972008, "creation_date": 1487947017, "last_edit_date": 1487972008, "question_id": 42441302, "link": "https://stackoverflow.com/questions/42441302/asynchronous-https-request-in-existing-loop", "title": "Asynchronous HTTP(S) request in existing loop", "body": "<p>I want to send a HTTPS request to a server but have a problem figuring out how. The best way for me to do it would be to initiate the request and regularly check back whether it has finished. How can I do this? It is even possible? What are the alternatives?</p>\n"}, {"tags": ["cookies", "rust", "session-cookies", "hyper"], "answers": [{"comments": [{"owner": {"reputation": 61, "user_id": 3991875, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/FN5zj.png?s=128&g=1", "display_name": "Le Duc Banal", "link": "https://stackoverflow.com/users/3991875/le-duc-banal"}, "edited": false, "score": 0, "creation_date": 1488122366, "post_id": 42450947, "comment_id": 72081231, "body": "Great I can retrieve it now ! But I can&#39;t reuse it... I tried to do <code>headers.set(content)</code> and... it doesn&#39;t work... I think that I confuse <code>SetCookie</code> and <code>Cookie</code>, some help ?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 61, "user_id": 3991875, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/FN5zj.png?s=128&g=1", "display_name": "Le Duc Banal", "link": "https://stackoverflow.com/users/3991875/le-duc-banal"}, "edited": false, "score": 0, "creation_date": 1488135163, "post_id": 42450947, "comment_id": 72085905, "body": "I&#39;ve added an example of sending the same cookie values back to the server"}, {"owner": {"reputation": 2369, "user_id": 4614680, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c9b36fb2c1d356a919916f77e74f1c3c?s=128&d=identicon&r=PG&f=1", "display_name": "Philipp Ludwig", "link": "https://stackoverflow.com/users/4614680/philipp-ludwig"}, "edited": false, "score": 1, "creation_date": 1521473208, "post_id": 42450947, "comment_id": 85733802, "body": "This answer seems to be outdated, since <code>hyper::client::Client</code> doesn&#39;t implemented a method which takes two parameters."}, {"owner": {"reputation": 3685, "user_id": 5812238, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/b99072b57c3ba6f1c4049e21767571cb?s=128&d=identicon&r=PG&f=1", "display_name": "diralik", "link": "https://stackoverflow.com/users/5812238/diralik"}, "edited": false, "score": 0, "creation_date": 1553291446, "post_id": 42450947, "comment_id": 97344608, "body": "@PeterHall cookie functionality <a href=\"https://github.com/hyperium/hyper/issues/1536\" rel=\"nofollow noreferrer\">was removed</a> from hyper, isn&#39;t it?"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 1, "last_activity_date": 1488135148, "last_edit_date": 1488135148, "creation_date": 1487986620, "answer_id": 42450947, "question_id": 42441129, "link": "https://stackoverflow.com/questions/42441129/keeping-cookie-between-transactions-with-hyper/42450947#42450947", "title": "Keeping cookie between transactions with Hyper", "body": "<p>Something like this should work:</p>\n\n<pre><code>match server_response.headers.get() {\n   Some(&amp;SetCookie(ref content)) =&gt; println!(\"Cookie: {:?}\", content),\n   _ =&gt; println!(\"No cookie found\"),\n}\n</code></pre>\n\n<p>Use the <code>Cookie</code> header for cookies sent <em>to</em> the server, and <code>SetCookie</code> for cookies sent <em>from</em> the server. I'm emphasising that because I only saw <code>Cookie</code> at first and it caught me out.</p>\n\n<p>Also, notice that I am requesting the <code>SetCookie</code> header just by type inference from the pattern match. I could also have used the turbo-fish: <code>headers.get::&lt;SetCookie&gt;()</code>.</p>\n\n<p>If you need to send the same cookie back the server, you can just clone the <code>SetCookie</code> values from the response back into a new <code>Cookie</code> header for the request:</p>\n\n<pre><code>let mut headers = Headers::new();\n// if you received cookies in the server response then send the same ones back\nif let Some(&amp;SetCookie(ref content)) = server_response.headers.get() {\n   headers.set(Cookie(content.clone()));\n}\n\nhyper_client.request(Method::Get, url)\n    .headers(headers)\n    .send();\n</code></pre>\n"}], "owner": {"reputation": 61, "user_id": 3991875, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/FN5zj.png?s=128&g=1", "display_name": "Le Duc Banal", "link": "https://stackoverflow.com/users/3991875/le-duc-banal"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1203, "favorite_count": 0, "accepted_answer_id": 42450947, "answer_count": 1, "score": 2, "last_activity_date": 1488135148, "creation_date": 1487946490, "question_id": 42441129, "link": "https://stackoverflow.com/questions/42441129/keeping-cookie-between-transactions-with-hyper", "title": "Keeping cookie between transactions with Hyper", "body": "<p>I would like to be able to keep the cookie of a previous request for the next one :</p>\n\n<pre><code>let hyper_client = Client::new();\nserver_response  = hyper_client.request(Method::Get, url).headers(Headers::new()).send();\n</code></pre>\n\n<p>Assuming the code above compile, how could I retrieve the cookie of this session ?</p>\n"}, {"tags": ["rust", "kcov"], "comments": [{"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1487947480, "post_id": 42440192, "comment_id": 72026660, "body": "Please provide more info about how you are invoking kcov."}], "answers": [{"tags": [], "owner": {"reputation": 752, "user_id": 7496656, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/zMGuk.jpg?s=128&g=1", "display_name": "Jan Zerebecki", "link": "https://stackoverflow.com/users/7496656/jan-zerebecki"}, "is_accepted": true, "score": 7, "last_activity_date": 1487949591, "creation_date": 1487949591, "answer_id": 42442200, "question_id": 42440192, "link": "https://stackoverflow.com/questions/42440192/how-do-i-exclude-test-functions-from-code-coverage-when-using-kcov/42442200#42442200", "title": "How do I exclude test functions from code coverage when using kcov?", "body": "<p>Have your testing code in different files and use the <code>kcov</code> arguments <code>--exclude-path=./test</code> (for the integration tests) or <code>--exclude-pattern=_test.rs</code> (if you move all your tests for foo.rs into foo_test.rs).</p>\n\n<p>Another way is to use the <code>kcov</code> argument <code>--exclude-region='#[cfg(test)]:#[cfg(testkcovstopmarker)]'</code> and make sure that each file either only has tests at the end and no non-test code following it or adds the stop marker <code>#[cfg(testkcovstopmarker)]</code> with the necessary unused definition after it to make <code>rustc</code> happy. (<code>kcov</code> finds the start and end string for a region anywhere in a line.)</p>\n\n<p>(There is also the possibility to exclude lines based on a string they contain, but that won't work for excluding tests in Rust.)</p>\n"}], "owner": {"reputation": 53, "user_id": 6463642, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97544f0fb643baa9b2e736fac9082981?s=128&d=identicon&r=PG&f=1", "display_name": "redtankd", "link": "https://stackoverflow.com/users/6463642/redtankd"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 647, "favorite_count": 1, "accepted_answer_id": 42442200, "answer_count": 1, "score": 5, "last_activity_date": 1487984046, "creation_date": 1487943813, "last_edit_date": 1487984046, "question_id": 42440192, "link": "https://stackoverflow.com/questions/42440192/how-do-i-exclude-test-functions-from-code-coverage-when-using-kcov", "title": "How do I exclude test functions from code coverage when using kcov?", "body": "<p>By default, kcov includes all sources files, including test functions, in its code coverage results. This skews the reported coverage rate. How do I tell kcov to exclude test functions?</p>\n\n<p>For example:</p>\n\n<pre><code>#[test]\nfn foo() {\n    ...\n}\n</code></pre>\n\n<p>kcov reports coverage data for <code>foo</code>, but I want to exclude it.</p>\n"}, {"tags": ["tcp", "rust"], "comments": [{"owner": {"reputation": 3265, "user_id": 2606938, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/7gIUB.jpg?s=128&g=1", "display_name": "Prabhu", "link": "https://stackoverflow.com/users/2606938/prabhu"}, "edited": false, "score": 0, "creation_date": 1487935658, "post_id": 42435723, "comment_id": 72018968, "body": "Is the connection timing out?"}, {"owner": {"reputation": 17388, "user_id": 921321, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/3f4c4737cb30134f58cc76f06ef5113a?s=128&d=identicon&r=PG", "display_name": "Lukazoid", "link": "https://stackoverflow.com/users/921321/lukazoid"}, "edited": false, "score": 0, "creation_date": 1487935760, "post_id": 42435723, "comment_id": 72019029, "body": "Could it be a firewall on your machine blocking incoming requests?"}, {"owner": {"reputation": 323, "user_id": 6039371, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/bf93ffed843f66eeb081062f5f10de04?s=128&d=identicon&r=PG&f=1", "display_name": "FrontMage", "link": "https://stackoverflow.com/users/6039371/frontmage"}, "reply_to_user": {"reputation": 3265, "user_id": 2606938, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/7gIUB.jpg?s=128&g=1", "display_name": "Prabhu", "link": "https://stackoverflow.com/users/2606938/prabhu"}, "edited": false, "score": 0, "creation_date": 1487938050, "post_id": 42435723, "comment_id": 72020445, "body": "@Prabhu It says ERR_CONNECTION_REFUSED"}, {"owner": {"reputation": 323, "user_id": 6039371, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/bf93ffed843f66eeb081062f5f10de04?s=128&d=identicon&r=PG&f=1", "display_name": "FrontMage", "link": "https://stackoverflow.com/users/6039371/frontmage"}, "reply_to_user": {"reputation": 17388, "user_id": 921321, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/3f4c4737cb30134f58cc76f06ef5113a?s=128&d=identicon&r=PG", "display_name": "Lukazoid", "link": "https://stackoverflow.com/users/921321/lukazoid"}, "edited": false, "score": 0, "creation_date": 1487938187, "post_id": 42435723, "comment_id": 72020526, "body": "@Lukazoid I use archlinux, I don&#39;t recall install any firewall, besides, another node.js serve listening port 4001 works perfectly."}, {"owner": {"reputation": 3265, "user_id": 2606938, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/7gIUB.jpg?s=128&g=1", "display_name": "Prabhu", "link": "https://stackoverflow.com/users/2606938/prabhu"}, "edited": false, "score": 0, "creation_date": 1487943572, "post_id": 42435723, "comment_id": 72023973, "body": "Can you do <code>ss -lnp</code> and see the bindings ?"}, {"owner": {"reputation": 323, "user_id": 6039371, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/bf93ffed843f66eeb081062f5f10de04?s=128&d=identicon&r=PG&f=1", "display_name": "FrontMage", "link": "https://stackoverflow.com/users/6039371/frontmage"}, "edited": false, "score": 0, "creation_date": 1487945737, "post_id": 42435723, "comment_id": 72025486, "body": "I ran <code>ss -lnp | grep 9527</code>, it says  <code>tcp    LISTEN     0      128    127.0.0.1:9527                  *:*                   users:((&quot;servo&quot;,pid=2163,fd=3))</code>"}], "answers": [{"comments": [{"owner": {"reputation": 323, "user_id": 6039371, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/bf93ffed843f66eeb081062f5f10de04?s=128&d=identicon&r=PG&f=1", "display_name": "FrontMage", "link": "https://stackoverflow.com/users/6039371/frontmage"}, "edited": false, "score": 0, "creation_date": 1487947035, "post_id": 42441149, "comment_id": 72026349, "body": "<code>tcp    LISTEN     0      128       *:9527                  *:*                   users:((&quot;servo&quot;,pid=2228,fd=3)) </code> and this solves the issue. Also wonder why <code>127.0.0.1</code> doesn&#39;t work... Thanks for helping~"}], "tags": [], "owner": {"reputation": 3265, "user_id": 2606938, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/7gIUB.jpg?s=128&g=1", "display_name": "Prabhu", "link": "https://stackoverflow.com/users/2606938/prabhu"}, "is_accepted": true, "score": 3, "last_activity_date": 1487946557, "creation_date": 1487946557, "answer_id": 42441149, "question_id": 42435723, "link": "https://stackoverflow.com/questions/42435723/rust-tcplistener-does-not-response-outside-request/42441149#42441149", "title": "Rust TcpListener does not response outside request", "body": "<p><code>ss -lnp</code> is indicating that the server is bound only to loop back address - 127.0.0.1. And hence the client receiving RST in trying to connect at <code>192.168.1.187:9527</code>. </p>\n\n<p>Try:</p>\n\n<p><code>TcpListener::bind(\"0.0.0.0:9527\").unwrap();</code> </p>\n\n<p>This shall bind to all interfaces available in the system.</p>\n\n<p>Not sure why \"192.168.1.187\" didn't work. But lets try \"0.0.0.0\" and see <code>ss</code> output.</p>\n"}], "owner": {"reputation": 323, "user_id": 6039371, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/bf93ffed843f66eeb081062f5f10de04?s=128&d=identicon&r=PG&f=1", "display_name": "FrontMage", "link": "https://stackoverflow.com/users/6039371/frontmage"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 822, "favorite_count": 1, "accepted_answer_id": 42441149, "answer_count": 1, "score": 2, "last_activity_date": 1487946557, "creation_date": 1487930575, "question_id": 42435723, "link": "https://stackoverflow.com/questions/42435723/rust-tcplistener-does-not-response-outside-request", "title": "Rust TcpListener does not response outside request", "body": "<p>My main function is this:</p>\n\n<pre><code>fn main() {\nlet listener = TcpListener::bind(\"192.168.1.187:9527\").unwrap();\nprintln!(\"Listening for connections on port {}\", 9527);\nfor stream in listener.incoming() {\n    match stream {\n        Ok(stream) =&gt; {\n            thread::spawn(move || {\n                let req_stream = &amp;stream.try_clone().unwrap();\n                let req = request::new(req_stream);\n                let res = response::new(stream.try_clone().unwrap());\n                handle_client(req, res)\n            });\n        }\n        Err(e) =&gt; println!(\"Unable to connect: {}\", e),\n    }\n}\n}\n</code></pre>\n\n<p>I can get response through <code>127.0.0.1:9527</code> but I can't get response from <code>192.168.1.187:9527</code> which is my public ip in my office, even doing this on the computer that server is deployed.</p>\n\n<p>Does rust <code>TcpListener</code> only work on localhost? How can I make it accept outside requests?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 838, "user_id": 3613212, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NfaGR.png?s=128&g=1", "display_name": "Gr&#233;gory OBANOS", "link": "https://stackoverflow.com/users/3613212/gr%c3%a9gory-obanos"}, "is_accepted": true, "score": 3, "last_activity_date": 1505738583, "last_edit_date": 1505738583, "creation_date": 1487934162, "answer_id": 42437001, "question_id": 42435216, "link": "https://stackoverflow.com/questions/42435216/closure-referring-to-a-method-of-self-borrow-error/42437001#42437001", "title": "Closure referring to a method of self: borrow error", "body": "<p>A way of doing this is to <a href=\"https://doc.rust-lang.org/book/patterns.html#destructuring\" rel=\"nofollow noreferrer\">destructure your struct</a>. Here is a sample with your code:</p>\n\n<pre><code>pub fn do_something(&amp;mut self) -&gt; () {\n    let &amp;mut S2 { ref mut s1, ref mut done } = self;\n    s1.foo(|| {\n        *done = true;\n    })\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=e046a3b23e1ca13262a8ea47f33f40d1&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}], "owner": {"reputation": 5736, "user_id": 283181, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/8cda855dadc64aa1e2a984c0ddd1f381?s=128&d=identicon&r=PG", "display_name": "Pierre", "link": "https://stackoverflow.com/users/283181/pierre"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 666, "favorite_count": 2, "closed_date": 1505738229, "accepted_answer_id": 42437001, "answer_count": 1, "score": 1, "last_activity_date": 1505739026, "creation_date": 1487929052, "last_edit_date": 1505738562, "question_id": 42435216, "link": "https://stackoverflow.com/questions/42435216/closure-referring-to-a-method-of-self-borrow-error", "closed_reason": "Duplicate", "title": "Closure referring to a method of self: borrow error", "body": "<p>Here is the interesting part:</p>\n\n<pre><code>struct S1 {}\n\nimpl S1 {\n    pub fn new() -&gt; Self {\n        S1 {}\n    }\n\n    pub fn foo&lt;F&gt;(&amp;self, mut delegate: F) -&gt; ()\n    where\n        F: FnMut() -&gt; (),\n    {\n        delegate()\n    }\n}\n\nstruct S2 {\n    s1: S1,\n    done: bool,\n}\n\nimpl S2 {\n    pub fn new() -&gt; Self {\n        S2 {\n            s1: S1::new(),\n            done: false,\n        }\n    }\n\n    fn actually_do_something(&amp;mut self) -&gt; () {\n        self.done = true\n    }\n\n    pub fn do_something(&amp;mut self) -&gt; () {\n        self.s1.foo(|| {\n            self.actually_do_something();\n        })\n    }\n}\n</code></pre>\n\n<p>The actual error generated is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0500]: closure requires unique access to `self` but `self.s1` is already borrowed\n  --&gt; src/main.rs:34:21\n   |\n34 |         self.s1.foo(|| {\n   |         -------     ^^ closure construction occurs here\n   |         |\n   |         borrow occurs here\n35 |             self.actually_do_something();\n   |             ---- borrow occurs due to use of `self` in closure\n36 |         })\n   |          - borrow ends here\n</code></pre>\n\n<p>I understand why I get this error (having multiple overlapping mutable borrows of <code>self</code>), yet I can't find a proper way to solve it. Taking multiple deep references to my object here doesn't seem to be possible as I'm calling a <code>self</code> method directly.</p>\n"}, {"tags": ["enums", "rust"], "comments": [{"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 1, "creation_date": 1487923176, "post_id": 42431973, "comment_id": 72011490, "body": "Looks like something that would be addressed by the closed <a href=\"https://github.com/rust-lang/rfcs/pull/1736\" rel=\"nofollow noreferrer\"><code>replace_with</code> RFC (#1736)</a>."}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 4, "creation_date": 1487928194, "post_id": 42431973, "comment_id": 72014156, "body": "As an alternative, would changing it to a <code>struct</code> with a <code>T</code> and a plain <code>enum</code> work in your case?"}, {"owner": {"reputation": 435, "user_id": 6517909, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/542422dbe372e54be780ad815e253206?s=128&d=identicon&r=PG&f=1", "display_name": "Doe", "link": "https://stackoverflow.com/users/6517909/doe"}, "reply_to_user": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 0, "creation_date": 1487942992, "post_id": 42431973, "comment_id": 72023582, "body": "@ChrisEmerson It very much would. I just thought that there must be a way for variants to assume the contents of their siblings since it intuitively doesn&#39;t run counter to Rusts ownership model."}, {"owner": {"reputation": 738, "user_id": 4496839, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/050b67773c3fcf861e786289b932daeb?s=128&d=identicon&r=PG&f=1", "display_name": "Ryan1729", "link": "https://stackoverflow.com/users/4496839/ryan1729"}, "edited": false, "score": 0, "creation_date": 1612251799, "post_id": 42431973, "comment_id": 116701248, "body": "I&#39;m unsure whether this is close enough to the original problem to warrant an answer, but if you are willing to have a variant that does not contain a <code>T</code>, and to tolerate an &quot;impossible&quot; path though the code, I&#39;ve written a safe, stable, version of <code>change_to_variant_b</code> <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=f731602e09c7f8be91fd4a21d8c0e7ca\" rel=\"nofollow noreferrer\">here</a> which uses <code>std::mem::replace</code>."}], "answers": [{"comments": [{"owner": {"reputation": 435, "user_id": 6517909, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/542422dbe372e54be780ad815e253206?s=128&d=identicon&r=PG&f=1", "display_name": "Doe", "link": "https://stackoverflow.com/users/6517909/doe"}, "edited": false, "score": 0, "creation_date": 1487943300, "post_id": 42436853, "comment_id": 72023778, "body": "Props for the clear answer and for listing alternatives in detail. I need <code>&amp;mut E&lt;T&gt;</code> because I&#39;m mutably iterating over a slice, so I can&#39;t(?) move elements out of it temporarily for the first solution to work."}, {"owner": {"reputation": 435, "user_id": 6517909, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/542422dbe372e54be780ad815e253206?s=128&d=identicon&r=PG&f=1", "display_name": "Doe", "link": "https://stackoverflow.com/users/6517909/doe"}, "edited": false, "score": 0, "creation_date": 1487943321, "post_id": 42436853, "comment_id": 72023791, "body": "Also, as a paragmatic solution, see <a href=\"https://stackoverflow.com/questions/42431973/how-to-change-variants-of-mutable-reference#comment72014156_42431973\" title=\"how to change variants of mutable reference%23comment72014156_42431973\">stackoverflow.com/questions/42431973/&hellip;</a>"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 435, "user_id": 6517909, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/542422dbe372e54be780ad815e253206?s=128&d=identicon&r=PG&f=1", "display_name": "Doe", "link": "https://stackoverflow.com/users/6517909/doe"}, "edited": false, "score": 0, "creation_date": 1487943946, "post_id": 42436853, "comment_id": 72024250, "body": "@Doe: Oh, if Chris solution works for you then definitely roll with it. It&#39;s always a bit difficult to come up with alternatives working on reduced examples since it&#39;s unclear what the boundaries of what can and cannot be changed are."}, {"owner": {"reputation": 435, "user_id": 6517909, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/542422dbe372e54be780ad815e253206?s=128&d=identicon&r=PG&f=1", "display_name": "Doe", "link": "https://stackoverflow.com/users/6517909/doe"}, "edited": false, "score": 0, "creation_date": 1487944974, "post_id": 42436853, "comment_id": 72024963, "body": "@perhaps &quot;solution&quot; wasn&#39;t the best word to describe Chris&#39;s comment (as it side-steps the issue entirely). However, for most visitors who are looking for a solution, Chris&#39;s comment will likely suffice. <b>No</b> is probably the only answer that meets the criteria in the OP."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 435, "user_id": 6517909, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/542422dbe372e54be780ad815e253206?s=128&d=identicon&r=PG&f=1", "display_name": "Doe", "link": "https://stackoverflow.com/users/6517909/doe"}, "edited": false, "score": 0, "creation_date": 1487950338, "post_id": 42436853, "comment_id": 72028683, "body": "@Doe: Yes, Chris, like mine, are more work-arounds. If you are (1) stuck with the <code>enum</code> and (2) stuck with the signature of the function and (3) stuck with no unsafe/no bounds... then you cannot."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 7, "last_activity_date": 1487933709, "creation_date": 1487933709, "answer_id": 42436853, "question_id": 42431973, "link": "https://stackoverflow.com/questions/42431973/is-it-possible-to-switch-variants-in-the-value-of-a-mutable-reference-to-an-enum/42436853#42436853", "title": "Is it possible to switch variants in the value of a mutable reference to an enum?", "body": "<p>I am going to go on a limb here and say <strong>No</strong>.</p>\n\n<hr>\n\n<p>It is possible with just a minor change to the signature though:</p>\n\n<pre><code>fn change_to_variant_b&lt;T&gt;(e: E&lt;T&gt;) -&gt; E&lt;T&gt; {\n    match e {\n        E::VariantA(t) =&gt; E::VariantB(t),\n        E::VariantB(t) =&gt; E::VariantB(t),\n    }\n}\n</code></pre>\n\n<hr>\n\n<p>It is possible using <code>unsafe</code>:</p>\n\n<pre><code>fn change_to_variant_b&lt;T&gt;(e: &amp;mut E&lt;T&gt;) {\n    use std::ptr;\n\n    unsafe {\n        match ptr::read(e as *const _) {\n            E::VariantA(t) =&gt; ptr::write(e as *mut _, E::VariantB(t)),\n            E::VariantB(t) =&gt; ptr::write(e as *mut _, E::VariantB(t)),\n        }\n    }\n}\n</code></pre>\n\n<hr>\n\n<p>It is possible with additional bounds (<code>Default</code>, or <code>Clone</code>):</p>\n\n<pre><code>fn change_to_variant_b&lt;T: Default&gt;(e: &amp;mut E&lt;T&gt;) {\n    match std::mem::replace(e, E::VariantA(T::default())) {\n        E::VariantA(t) =&gt; e = E::VariantB(t),\n        E::VariantB(t) =&gt; e = E::VariantB(t),\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 0, "last_activity_date": 1497543589, "last_edit_date": 1497543589, "creation_date": 1497540194, "answer_id": 44571350, "question_id": 42431973, "link": "https://stackoverflow.com/questions/42431973/is-it-possible-to-switch-variants-in-the-value-of-a-mutable-reference-to-an-enum/44571350#44571350", "title": "Is it possible to switch variants in the value of a mutable reference to an enum?", "body": "<blockquote>\n  <p>is it possible to switch variants in the value of a mutable reference</p>\n</blockquote>\n\n<p>As <a href=\"https://stackoverflow.com/a/42436853/155423\">Matthieu M. said</a>, the general answer is \"no\". The reason is that doing so would leave the enum in an indeterminate state, which would allow accessing undefined memory, which would allow breaking Rust's safety guarantees. As an example, let's pretend that this code compiled without error:</p>\n\n<pre><code>impl&lt;T&gt; E&lt;T&gt; {\n    fn promote_to_b(&amp;mut self)  {\n        if let E::VariantA(val) = *self {\n            // Things happen\n            *self = E::VariantB(val);\n        }\n    }\n}\n</code></pre>\n\n<p>The problem is once you've moved the value from <code>self</code> into <code>val</code>, what should happen to the memory representing <code>T</code> inside <code>self</code>?</p>\n\n<p>If we copied the bits and then a panic occurred in \"Things happen\", the destructor for both <code>val</code> and the <code>T</code> inside <code>self</code> would run, but since these point at the same data, this would lead to a double free.</p>\n\n<p>If we didn't copy the bits, then you couldn't safely access the <code>val</code> inside \"Things happen\", which would be of marginal usefulness.</p>\n\n<hr>\n\n<p>The by-value solution works because the compiler can track who is supposed to call the destructor: the function itself. Once you are inside the function, the compiler knows which specific lines might need to free the value and properly calls them in case of panic.</p>\n\n<p>The <code>Clone</code> or <code>Default</code> solution works because you never move the value out of the original enum. Instead, you can replace the original enum with a dummy value and take ownership of the original (using <code>Default</code>) or duplicate the entire original value (using <code>Clone</code>). </p>\n\n<hr>\n\n<p>The <a href=\"https://github.com/rust-lang/rfcs/pull/1736\" rel=\"nofollow noreferrer\"><code>replace_with</code> RFC (#1736)</a> proposed to add a method that would allow this to work while ensuring that proper memory semantics were upheld, but that RFC was not accepted.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1497540380, "creation_date": 1497540380, "answer_id": 44571413, "question_id": 42431973, "link": "https://stackoverflow.com/questions/42431973/is-it-possible-to-switch-variants-in-the-value-of-a-mutable-reference-to-an-enum/44571413#44571413", "title": "Is it possible to switch variants in the value of a mutable reference to an enum?", "body": "<p>As an alternative for this particular case, you could consider changing to a struct with a <code>T</code> and a plain enum:</p>\n\n<pre><code>struct Outer&lt;T&gt; {\n    val: T,\n    kind: Inner,\n}\n\nimpl&lt;T&gt; Outer&lt;T&gt; {\n    fn promote_to_b(&amp;mut self) {\n        self.kind.promote_to_b()\n    }\n}\n\nenum Inner {\n    VariantA,\n    VariantB,\n}\n\nimpl Inner {\n    fn promote_to_b(&amp;mut self) {\n        if let Inner::VariantA = *self {\n            *self = Inner::VariantB;\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 435, "user_id": 6517909, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/542422dbe372e54be780ad815e253206?s=128&d=identicon&r=PG&f=1", "display_name": "Doe", "link": "https://stackoverflow.com/users/6517909/doe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1087, "favorite_count": 2, "accepted_answer_id": 42436853, "answer_count": 3, "score": 10, "last_activity_date": 1497545886, "creation_date": 1487916738, "last_edit_date": 1497545886, "question_id": 42431973, "link": "https://stackoverflow.com/questions/42431973/is-it-possible-to-switch-variants-in-the-value-of-a-mutable-reference-to-an-enum", "title": "Is it possible to switch variants in the value of a mutable reference to an enum?", "body": "<p>Is it possible to switch variants in the value of a mutable reference (<code>&amp;mut E&lt;T&gt;</code>) without additional constraints on <code>T</code>, and without resorting to unsafe code?</p>\n\n<p>That is, given an enum:</p>\n\n<pre><code>enum E&lt;T&gt; {\n    VariantA(T),\n    VariantB(T)\n}\n</code></pre>\n\n<p>What is the correct way of writing this:</p>\n\n<pre><code>let x: E&lt;???&gt; = E::VariantA(??);\nchange_to_variant_b(&amp;mut x);\nassert_eq!(x, E::VariantB(??));\n</code></pre>\n"}, {"tags": ["macros", "rust", "dependency-management", "rust-cargo"], "comments": [{"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1487915746, "post_id": 42431183, "comment_id": 72008379, "body": "You need to add a dependency for <code>macro_test</code>. First see <a href=\"http://doc.crates.io/guide.html\" rel=\"nofollow noreferrer\">doc.crates.io/guide.html</a> for a tutorial how to create a crate and add dependencies."}], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 3, "last_activity_date": 1487917882, "creation_date": 1487917882, "answer_id": 42432225, "question_id": 42431183, "link": "https://stackoverflow.com/questions/42431183/how-can-i-get-similar-dependency-resolution-to-cargo-in-an-existing-project-with/42432225#42432225", "title": "How can I get similar dependency resolution to Cargo in an existing project with only rustc for code analysis?", "body": "<p>Cargo has a <code>rustc</code> subcommand for invoking <code>rustc</code> with additional arguments.</p>\n\n<pre><code>$ cargo rustc --example macro_test -- -Z unstable-options --pretty expanded\n</code></pre>\n\n<p>You can also add <code>--verbose</code> before the <code>--</code> to get Cargo to print the full <code>rustc</code> command line (among other things).</p>\n"}], "owner": {"reputation": 5006, "user_id": 2023432, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/89ZPT.png?s=128&g=1", "display_name": "bright-star", "link": "https://stackoverflow.com/users/2023432/bright-star"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 71, "favorite_count": 0, "accepted_answer_id": 42432225, "answer_count": 1, "score": 1, "last_activity_date": 1487917882, "creation_date": 1487912890, "last_edit_date": 1487913298, "question_id": 42431183, "link": "https://stackoverflow.com/questions/42431183/how-can-i-get-similar-dependency-resolution-to-cargo-in-an-existing-project-with", "title": "How can I get similar dependency resolution to Cargo in an existing project with only rustc for code analysis?", "body": "<p>The Rust book mentions that <a href=\"https://doc.rust-lang.org/book/macros.html#debugging-macro-code\" rel=\"nofollow noreferrer\">macros can be expanded</a> with the command <code>rustc --pretty expanded</code>. I'd like to use this for testing some macros I wrote in a crate, by expanding an example file with a command like</p>\n\n<pre><code>rustc -Z unstable-options --pretty expanded examples/macro_test.rs\n</code></pre>\n\n<p><code>macro_test.rs</code> would have code that looks like this:</p>\n\n<pre><code>#[macro_use] extern crate macro_crate;\n\nuse macro_crate::macros::*;\n\nmacro_foo! { foo }\n\nfn main() {}\n</code></pre>\n\n<p>However, that results in error 0463, which is that <code>rustc</code> doesn't know anything about the crate environment it's in:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0463]: can't find crate for `macro_crate`\n --&gt; examples/macro_test.rs:1:1\n  |\n1 | extern crate macro_test;\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^ can't find crate\n</code></pre>\n\n<p>What's the recommended way to work with this? The <code>cargo</code> help doesn't have anything directly related as far as I can tell.</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "is_accepted": true, "score": 3, "last_activity_date": 1487893788, "creation_date": 1487893788, "answer_id": 42428340, "question_id": 42427905, "link": "https://stackoverflow.com/questions/42427905/struct-instance-function-pointer-as-function-argument-kind-of-like-stdbind-in/42428340#42428340", "title": "Struct instance function pointer as function argument (kind of like std::bind in C++)", "body": "<p>This is about the difference between a function pointer <code>fn(i64)</code>, which is just a pointer to some code, and a closure, which is an un-nameable struct with some data (context) and a call method.</p>\n\n<p>To pass a closure, you need to make the function generic on callable types:</p>\n\n<pre><code>fn do_something_with_a_function&lt;F: FnMut(i64)&gt;(mut f: F) {\n    f(23);\n}\n</code></pre>\n\n<p>This says that it can take anything of a type which implements <code>FnMut(i64)</code>.  The <code>FnMut</code> means that it gets a mutable reference to its context when called, necessary to call mutable methods on it in this case (in other cases, <code>Fn</code> or <code>FnOnce</code> could be used; see <a href=\"https://doc.rust-lang.org/book/closures.html\" rel=\"nofollow noreferrer\">the book chapter on closures</a>).  Ordinary functions also implement these traits.  <code>f</code> has to be <code>mut</code> for the same reason as the <code>FnMut</code> is needed.</p>\n\n<p>Here's the updated caller:</p>\n\n<pre><code>fn main() {\n    do_something_with_a_function(normal_function);\n\n    let mut instance = MyStruct{x: 0};\n    let mut instance_function = |val: i64|{instance.struct_function(val)};\n    do_something_with_a_function(&amp;mut instance_function);\n    do_something_with_a_function(&amp;mut instance_function);\n}\n</code></pre>\n\n<p>Note that <code>instance_function</code> is now mutable and a <code>&amp;mut</code> reference passed into <code>do_something_with_a_function()</code>.  If it's passed by value (which works once) it's moved, so you can't use it again.</p>\n\n<p>(<a href=\"https://play.rust-lang.org/?gist=a9e09489f4d4edb64f95233e92773e3d&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">Playground</a>)</p>\n"}], "owner": {"reputation": 2200, "user_id": 1519323, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/zUWVH.png?s=128&g=1", "display_name": "davepmiller", "link": "https://stackoverflow.com/users/1519323/davepmiller"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 405, "favorite_count": 1, "accepted_answer_id": 42428340, "answer_count": 1, "score": 0, "last_activity_date": 1487893788, "creation_date": 1487891288, "question_id": 42427905, "link": "https://stackoverflow.com/questions/42427905/struct-instance-function-pointer-as-function-argument-kind-of-like-stdbind-in", "title": "Struct instance function pointer as function argument (kind of like std::bind in C++)", "body": "<p>I'd like to do something similar to C++ <code>std::bind</code> and pass a bound function pointer as an argument to another function.</p>\n\n<p>The code below demonstrates my failed attempt and hopefully illustrates what I'm trying to do.</p>\n\n<pre><code>pub struct MyStruct {\n    x: i64\n}\n\nimpl MyStruct {\n    pub fn struct_function(&amp;mut self, val: i64) {\n        self.x += val;\n    }\n}\n\nfn normal_function(val: i64) {\n    println!( \"sum -&gt; {}\", val + 1);\n}\n\nfn do_something_with_a_function(f: fn(i64)) {\n    f(23);\n}\n\nfn main() {\n    // This works as you'd expect\n    do_something_with_a_function(normal_function as fn(i64));\n\n    // What I'd like to do\n    // This attempts to use a closure, but throws an error.\n    let instance = MyStruct{x: 0};\n    let instance_function = |val: i64|{instance.struct_function(val)};\n    do_something_with_a_function(instance_function as fn(i64));\n}\n</code></pre>\n\n<p>Error:</p>\n\n<blockquote>\n  <p>error: non-scalar cast: <code>[closure@src/main.rs:25:29: 25:72 instance:&amp;mut MyStruct]</code> as <code>fn(i64)</code></p>\n</blockquote>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 1949, "user_id": 415877, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/8gxFz.png?s=128&g=1", "display_name": "ipsi", "link": "https://stackoverflow.com/users/415877/ipsi"}, "is_accepted": false, "score": 0, "last_activity_date": 1487892299, "creation_date": 1487892299, "answer_id": 42428076, "question_id": 42427806, "link": "https://stackoverflow.com/questions/42427806/cannot-borrow-member-of-own-struct-as-mutable-when-using-generics/42428076#42428076", "title": "Cannot borrow member of own struct as mutable when using generics", "body": "<p>Apparently, changing it to</p>\n\n<pre><code>pub struct BestType&lt;'a, T: 'a + Read + Write&gt; {\n    socket: &amp;'a mut T,\n}\n\nimpl&lt;'a, T: Read + Write&gt; BestType&lt;'a, T&gt; {\n    pub fn read(&amp;mut self, mut container: &amp;mut [u8]) -&gt; std::io::Result&lt;usize&gt; {\n        let mut socket = self.socket;\n        socket.read(&amp;mut container)\n    }\n}\n</code></pre>\n\n<p>Was literally all it took. That said, I don't understand why this is required, or why it's different when using generics vs not...</p>\n\n<p>Plus, in my actual code, I have to use <code>let ref mut</code>, not <code>let mut</code>, which I don't fully understand either, but at least it all compiles! I would love to accept an answer that provides a proper explanation of what's going on.</p>\n"}, {"tags": [], "owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "is_accepted": true, "score": 3, "last_activity_date": 1487894485, "creation_date": 1487894485, "answer_id": 42428474, "question_id": 42427806, "link": "https://stackoverflow.com/questions/42427806/cannot-borrow-member-of-own-struct-as-mutable-when-using-generics/42428474#42428474", "title": "Cannot borrow member of own struct as mutable when using generics", "body": "<p>Looking at your original code:</p>\n\n<pre><code>pub struct BestType&lt;'a, T: 'a + Read + Write&gt; {\n    socket: &amp;'a T,\n}\n\nimpl&lt;'a, T: Read + Write&gt; BestType&lt;'a, T&gt; {\n    pub fn read(&amp;mut self, mut container: &amp;mut [u8]) -&gt; std::io::Result&lt;usize&gt; {\n        let mut socket = self.socket;\n        socket.read(&amp;mut container)\n    }\n}\n</code></pre>\n\n<p>The <a href=\"https://doc.rust-lang.org/stable/std/io/trait.Read.html\" rel=\"nofollow noreferrer\">Read trait</a>'s <code>read</code> method takes <code>&amp;mut self</code>.  This makes sense (even though \"read\" doesn't sound like it mutates), since you may be moving a read pointer for example.</p>\n\n<p>When you call <code>socket.read()</code>, the type has to be <code>T</code> (which is the only type implementing <code>Read</code>), but you've only got an immutable reference to it.</p>\n\n<p>In your second version, instead of having an <code>&amp;T</code> where <code>T: Read</code>, you have an explicit <code>&amp;TcpStream</code>.  The key difference is that <code>Read</code> happens to be implemented not only for <code>TcpStream</code> itself, but <em>also for <code>&amp;TcpStream</code></em>.  So as well as being able to <code>read</code> from <code>&amp;mut TcpStream</code>, you can also read from <code>&amp;mut &amp;TcpStream</code>.  This is why this version compiles with <code>let mut socket = self.socket</code>.</p>\n"}], "owner": {"reputation": 1949, "user_id": 415877, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/8gxFz.png?s=128&g=1", "display_name": "ipsi", "link": "https://stackoverflow.com/users/415877/ipsi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 206, "favorite_count": 0, "accepted_answer_id": 42428474, "answer_count": 2, "score": 2, "last_activity_date": 1487894485, "creation_date": 1487890825, "last_edit_date": 1487892797, "question_id": 42427806, "link": "https://stackoverflow.com/questions/42427806/cannot-borrow-member-of-own-struct-as-mutable-when-using-generics", "title": "Cannot borrow member of own struct as mutable when using generics", "body": "<p>I have what I would consider to be the fairly trivial code:</p>\n\n\n\n<pre><code>pub struct BestType&lt;'a, T: 'a + Read + Write&gt; {\n    socket: &amp;'a T,\n}\n\nimpl&lt;'a, T: Read + Write&gt; BestType&lt;'a, T&gt; {\n    pub fn read(&amp;mut self, mut container: &amp;mut [u8]) -&gt; std::io::Result&lt;usize&gt; {\n        let mut socket = self.socket;\n        socket.read(&amp;mut container)\n    }\n}\n</code></pre>\n\n<p>But when I attempt to compile it, I get the following error:</p>\n\n<pre><code>error: cannot borrow immutable borrowed content `*socket` as mutable\n   --&gt; src\\lib.rs:780:9\n    |\n780 |         socket.read(&amp;mut container)\n    |         ^^^^^^\n</code></pre>\n\n<p>What's going on? If I have the following code instead:</p>\n\n\n\n<pre><code>pub struct BestType&lt;'a&gt; {\n    socket: &amp;'a TcpStream,\n}\n\nimpl&lt;'a&gt; BestType&lt;'a&gt; {\n    pub fn read(&amp;mut self, mut container: &amp;mut [u8]) -&gt; std::io::Result&lt;usize&gt; {\n        let mut socket = self.socket;\n        socket.read(&amp;mut container)\n    }\n}\n</code></pre>\n\n<p>That compiles just fine.</p>\n\n<p>I can't see what's causing the difference - all I'm trying to do is, instead of hard-coding a <code>TcpStream</code>, have the caller pass me a type that implements both <code>Read</code> and <code>Write</code> (like <code>TcpStream</code>!).</p>\n\n<pre><code>rustc 1.15.0 (10893a9a3 2017-01-19)\nrustc 1.15.1 (021bd294c 2017-02-08)\ncargo 0.16.0-nightly (6e0c18c 2017-01-27)\n</code></pre>\n"}, {"tags": ["rust", "closures", "lifetime", "borrow-checker", "combinators"], "answers": [{"tags": [], "owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "is_accepted": true, "score": 3, "last_activity_date": 1487895459, "creation_date": 1487895459, "answer_id": 42428623, "question_id": 42427572, "link": "https://stackoverflow.com/questions/42427572/value-getting-dropped-too-early-inside-closure-and-combinator-while-borrow-exist/42428623#42428623", "title": "Value getting dropped too early inside closure and combinator while borrow exists", "body": "<p>You're right that you're consuming the <code>PathBuf</code> returned from <code>home_dir()</code> but still trying to use references.</p>\n\n<p>I would keep it in a variable, and work from there:</p>\n\n<pre><code>fn foo() -&gt; Option&lt;String&gt; {\n    let path = std::env::home_dir();\n    path.as_ref()\n        .and_then(|d| d.file_name())\n        .and_then(|f| f.to_str())\n        .map(String::from)\n\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?gist=0a11ebb370b4e6a154d7115690ae1ac2&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">Playground</a>)</p>\n\n<p>The call to <code>path.as_ref()</code> makes an <code>Option&lt;&amp;PathBuf&gt;</code> as the starting point for the chain of <code>and_then</code>, without consuming the original owned <code>PathBuf</code> which is needed at least until <code>String::from</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 2, "last_activity_date": 1487915671, "creation_date": 1487915671, "answer_id": 42431736, "question_id": 42427572, "link": "https://stackoverflow.com/questions/42427572/value-getting-dropped-too-early-inside-closure-and-combinator-while-borrow-exist/42431736#42431736", "title": "Value getting dropped too early inside closure and combinator while borrow exists", "body": "<p>Expanding on Chris's answer: You can also fix the issue by nesting the chain starting from the second <code>and_then</code> into the closure passed to the first <code>and_then</code>. This works because it keeps <code>d</code> (which owns a <code>PathBuf</code>) alive until the borrows on it are released.</p>\n\n<pre><code>fn foo() -&gt; Option&lt;String&gt; {\n    std::env::home_dir().and_then(|d| {\n        d.file_name()\n           .and_then(|f| f.to_str())\n           .map(String::from)\n    })\n}\n</code></pre>\n"}], "owner": {"reputation": 4129, "user_id": 2081133, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/KDQEz.jpg?s=128&g=1", "display_name": "James", "link": "https://stackoverflow.com/users/2081133/james"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 935, "favorite_count": 0, "accepted_answer_id": 42428623, "answer_count": 2, "score": 4, "last_activity_date": 1487915671, "creation_date": 1487889687, "last_edit_date": 1487897620, "question_id": 42427572, "link": "https://stackoverflow.com/questions/42427572/value-getting-dropped-too-early-inside-closure-and-combinator-while-borrow-exist", "title": "Value getting dropped too early inside closure and combinator while borrow exists", "body": "<p>I'm facing a problem with a value being dropped while it is still borrowed inside an <code>Option</code>, in a closure, but I'm having a hard time grasping exactly what's going on. To illustrate, here is a working example of what I'm actually trying to achieve:</p>\n\n<pre><code>fn foo() -&gt; Option&lt;String&gt; {\n    let hd = match std::env::home_dir() {                                       \n        Some(d) =&gt; d,                                                           \n        None =&gt; return None,                                                    \n    };                                                                          \n    let fi = match hd.file_name() {                                             \n        Some(f) =&gt; f,                                                           \n        None =&gt; return None,                                                    \n    };                                                                          \n    let st = match fi.to_str() {                                                \n        Some(s) =&gt; s,                                                           \n        None =&gt; return None,                                                    \n    };                                                                          \n    Some(String::from(st))  \n}\n</code></pre>\n\n<p>The return value is the base name of the current user's home directory inside <code>Option&lt;String&gt;</code>.</p>\n\n<p>I thought I'd try refactoring this with combinators to get rid of the lines <code>None =&gt; return None,</code>.</p>\n\n<pre><code>std::env::home_dir()                                                        \n    .and_then(|d| d.file_name())                                            \n    .and_then(|f| f.to_str())                                               \n    .map(String::from)\n</code></pre>\n\n<p>But rustc detects a reference that outlives its value.</p>\n\n<pre><code>error: `d` does not live long enough\n  --&gt; src/main.rs:33:35\n   |\n33 |         .and_then(|d| d.file_name())\n   |                       -           ^ `d` dropped here while still borrowed\n   |                       |\n   |                       borrow occurs here\n34 |         .and_then(|f| f.to_str())\n35 |         .map(String::from)\n   |                          - borrowed value needs to live until here\n</code></pre>\n\n<p>I <strong>think</strong> this is because the reference in <code>Option&lt;&amp;OsStr&gt;</code> is outliving the value of type <code>PathBuf</code>. However I'm still having a hard time figuring out how to approach this without having the value go out of scope too soon.</p>\n\n<p>To further illustrate what I'm trying to achieve, here is a similar example with a type that implements the Copy trait.</p>\n\n<pre><code>let x = 42u16.checked_add(1234)                                             \n    .and_then(|i| i.checked_add(5678))                                      \n    .and_then(|i| i.checked_sub(90))                                        \n    .map(|i| i.to_string());                                                \nprintln!(\"{:?}\", x); // Some(\"6864\")\n</code></pre>\n\n<p>So I'm definitely overlooking a few things related to ownership in the prior example. Is this possible with <code>Option&lt;PathBuf&gt;</code>?</p>\n"}, {"tags": ["graph", "rust", "dataflow", "petgraph"], "comments": [{"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 1, "creation_date": 1487887517, "post_id": 42426613, "comment_id": 71999655, "body": "How about <a href=\"https://docs.rs/petgraph/0.4.3/petgraph/graph/struct.Graph.html#method.index_twice_mut\" rel=\"nofollow noreferrer\">index_twice_mut</a> ?"}, {"owner": {"reputation": 262, "user_id": 7140196, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a95eb78cd884fcb99a27a0e4c170035d?s=128&d=identicon&r=PG&f=1", "display_name": "vuilehaid", "link": "https://stackoverflow.com/users/7140196/vuilehaid"}, "reply_to_user": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 0, "creation_date": 1487888515, "post_id": 42426613, "comment_id": 72000138, "body": "Thank you, should have seen that one."}], "answers": [{"tags": [], "owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "is_accepted": true, "score": 1, "last_activity_date": 1487888772, "creation_date": 1487888772, "answer_id": 42427378, "question_id": 42426613, "link": "https://stackoverflow.com/questions/42426613/mutable-access-to-two-nodes-in-petgraph/42427378#42427378", "title": "Mutable access to two nodes in petgraph", "body": "<p>The [index_twice_mut] method is the way to do that.</p>\n\n<p>Note that it panics if you try to index the same object twice, so you need to check that first.</p>\n"}], "owner": {"reputation": 262, "user_id": 7140196, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a95eb78cd884fcb99a27a0e4c170035d?s=128&d=identicon&r=PG&f=1", "display_name": "vuilehaid", "link": "https://stackoverflow.com/users/7140196/vuilehaid"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 162, "favorite_count": 0, "accepted_answer_id": 42427378, "answer_count": 1, "score": 1, "last_activity_date": 1580252276, "creation_date": 1487885677, "last_edit_date": 1580252276, "question_id": 42426613, "link": "https://stackoverflow.com/questions/42426613/mutable-access-to-two-nodes-in-petgraph", "title": "Mutable access to two nodes in petgraph", "body": "<p>I am using the <a href=\"https://github.com/bluss/petgraph/\" rel=\"nofollow noreferrer\">petgraph</a> crate to implement a dataflow graph. I would like to copy data from an edge source node to its target node. For that I would need a mutable reference to the target node and an immutable reference to the source node. However Rust's borrow checker prevents that from happening since both a mutable and immutable reference is taken to the graph at the same time.</p>\n\n<p>Is there a function available in petgraph that provides mutable references to multiple nodes at the same time?</p>\n"}, {"tags": ["generics", "rust", "traits"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1487885789, "post_id": 42426239, "comment_id": 71998749, "body": "You are expected to mention what goes wrong when compiling that code. In this case, it doesn&#39;t compile due to conflicting implementations. See also: <a href=\"http://stackoverflow.com/q/35127870/1233251\">stackoverflow.com/q/35127870/1233251</a>"}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 2, "creation_date": 1487887217, "post_id": 42426239, "comment_id": 71999483, "body": "There is lots of discussion on this topic, eg <a href=\"https://github.com/rust-lang/rfcs/issues/1053\" rel=\"nofollow noreferrer\">github.com/rust-lang/rfcs/issues/1053</a> .  There is work going on to make this or something like it possible, but at the moment overlapping impls like that are not legal."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1487899158, "post_id": 42426239, "comment_id": 72003700, "body": "This can&#39;t work, even with Specialisation. To see why, consider a struct that implements both <code>A</code> and <code>B</code>. What output would you expect when you call <code>update()</code> on it?  With Specialisation, the &quot;most specific&quot; implementation would be used, but here <code>A</code> and <code>B</code> are completely equivalent."}], "answers": [{"comments": [{"owner": {"reputation": 585, "user_id": 2489725, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/d2bef286279a42a6c44019403a45b910?s=128&d=identicon&r=PG", "display_name": "porky11", "link": "https://stackoverflow.com/users/2489725/porky11"}, "edited": false, "score": 0, "creation_date": 1487935803, "post_id": 42429240, "comment_id": 72019053, "body": "The problem is, it doesn&#39;t even work, when different structs implement both traits. But it may also be nice, when a struct is able to implement both, like you wrote, and then is able to call both. The struct would require to impl Update itself and call the less specific versions, manually, so this would also just be suboptimal."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 585, "user_id": 2489725, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/d2bef286279a42a6c44019403a45b910?s=128&d=identicon&r=PG", "display_name": "porky11", "link": "https://stackoverflow.com/users/2489725/porky11"}, "edited": false, "score": 0, "creation_date": 1487937469, "post_id": 42429240, "comment_id": 72020082, "body": "The <a href=\"https://github.com/rust-lang/rfcs/issues/1053\" rel=\"nofollow noreferrer\">link</a>, which Chris Emerson left in the other comments, describes a few other potential enhancements to how overlapping instances might work in the future. Some possibilities are <a href=\"https://github.com/rust-lang/rfcs/pull/586\" rel=\"nofollow noreferrer\">negative bounds</a>, or <a href=\"https://github.com/rust-lang/rfcs/pull/1148\" rel=\"nofollow noreferrer\">mutually exclusive traits</a>. If either of these were ever implemented, you could make a guarantee to the compiler that there could never be an ambiguity."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 5, "last_activity_date": 1534173099, "last_edit_date": 1534173099, "creation_date": 1487899909, "answer_id": 42429240, "question_id": 42426239, "link": "https://stackoverflow.com/questions/42426239/is-there-some-way-to-implement-a-trait-on-multiple-traits/42429240#42429240", "title": "Is there some way to implement a trait on multiple traits?", "body": "<p>What would you expect the output of this program to be?</p>\n\n<pre><code>struct AAndB {}\nimpl A for AAndB {}\nimpl B for AAndB {}\n\nlet a_and_b = AAndB {};\na_and_b.update();\n</code></pre>\n\n<p>There is an unstable compiler feature, <a href=\"https://github.com/rust-lang/rust/issues/31844\" rel=\"nofollow noreferrer\">specialization</a>, which you can enable in nightly builds, which lets you have overlapping instances, and the most \"specialized\" is used.</p>\n\n<p>But, even with specialization enabled, your example won't work because <code>A</code> and <code>B</code> are completely equivalent so you could never unambiguously pick an instance.</p>\n\n<p>As soon as there is an obviously \"more specialized\" instance, it will compile and work as expected - provided you are using a <em>nightly</em> build of Rust with specialization enabled. For example, if one of the traits is bounded by the other, then it is more specialized, so this would work:</p>\n\n<pre><code>#![feature(specialization)]\n\ntrait Update {\n    fn update(&amp;mut self);\n}\n\ntrait A {}\ntrait B: A {}\n\nimpl&lt;T: A&gt; Update for T {\n    default fn update(&amp;mut self) {\n        println!(\"A\")\n    }\n}\n\nimpl&lt;U: B&gt; Update for U {\n    fn update(&amp;mut self) {\n        println!(\"B\")\n    }\n}\n</code></pre>\n\n<p>Specifying the implementation method as <code>default</code> allows another more specific implementation to define its own version of the method.</p>\n"}], "owner": {"reputation": 585, "user_id": 2489725, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/d2bef286279a42a6c44019403a45b910?s=128&d=identicon&r=PG", "display_name": "porky11", "link": "https://stackoverflow.com/users/2489725/porky11"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1603, "favorite_count": 0, "accepted_answer_id": 42429240, "answer_count": 1, "score": 6, "last_activity_date": 1534173099, "creation_date": 1487884204, "last_edit_date": 1534102427, "question_id": 42426239, "link": "https://stackoverflow.com/questions/42426239/is-there-some-way-to-implement-a-trait-on-multiple-traits", "title": "Is there some way to implement a trait on multiple traits?", "body": "<p>Why doesn't this work:</p>\n\n<pre><code>trait Update {\n    fn update(&amp;mut self);\n}\n\ntrait A {}\ntrait B {}\n\nimpl&lt;T: A&gt; Update for T {\n    fn update(&amp;mut self) {\n        println!(\"A\")\n    }\n}\n\nimpl&lt;U: B&gt; Update for U {\n    fn update(&amp;mut self) {\n        println!(\"B\")\n    }\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0119]: conflicting implementations of trait `Update`:\n  --&gt; src/main.rs:14:1\n   |\n8  | impl&lt;T: A&gt; Update for T {\n   | ----------------------- first implementation here\n...\n14 | impl&lt;U: B&gt; Update for U {\n   | ^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation\n</code></pre>\n\n<p>I would assume it is checked later if types overlap.</p>\n"}, {"tags": ["android", "rust", "assets"], "comments": [{"owner": {"reputation": 10749, "user_id": 2108972, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38a04d0ccf9b761c9373ec9905ca7e92?s=128&d=identicon&r=PG", "display_name": "greenapps", "link": "https://stackoverflow.com/users/2108972/greenapps"}, "edited": false, "score": 0, "creation_date": 1487879372, "post_id": 42424815, "comment_id": 71995123, "body": "Know nothing of Rust but i would think at develop time you would put the files in the assets directory. And at run time read them from there. It is unclear if you manage the first part already."}, {"owner": {"reputation": 959, "user_id": 6779010, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/i7Jj0.png?s=128&g=1", "display_name": "torkleyy", "link": "https://stackoverflow.com/users/6779010/torkleyy"}, "reply_to_user": {"reputation": 10749, "user_id": 2108972, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38a04d0ccf9b761c9373ec9905ca7e92?s=128&d=identicon&r=PG", "display_name": "greenapps", "link": "https://stackoverflow.com/users/2108972/greenapps"}, "edited": false, "score": 0, "creation_date": 1487879691, "post_id": 42424815, "comment_id": 71995308, "body": "@greenapps Unfortunately, there is no <code>assets</code> directory when programming in Rust."}, {"owner": {"reputation": 77347, "user_id": 1631193, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/4c713494416ceac454d71c524e15f1c6?s=128&d=identicon&r=PG&f=1", "display_name": "Gabe Sechan", "link": "https://stackoverflow.com/users/1631193/gabe-sechan"}, "edited": false, "score": 0, "creation_date": 1487880555, "post_id": 42424815, "comment_id": 71995770, "body": "@torkleyy There&#39;s an asset folder for anything in Android.  If there isn&#39;t, you&#39;ll need to fix android-rs-glue.  Its a build concept, not a language concept."}, {"owner": {"reputation": 77347, "user_id": 1631193, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/4c713494416ceac454d71c524e15f1c6?s=128&d=identicon&r=PG&f=1", "display_name": "Gabe Sechan", "link": "https://stackoverflow.com/users/1631193/gabe-sechan"}, "edited": false, "score": 0, "creation_date": 1487880603, "post_id": 42424815, "comment_id": 71995797, "body": "But notice even their examples have an assets directory.  That&#39;s how you do it."}, {"owner": {"reputation": 959, "user_id": 6779010, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/i7Jj0.png?s=128&g=1", "display_name": "torkleyy", "link": "https://stackoverflow.com/users/6779010/torkleyy"}, "reply_to_user": {"reputation": 77347, "user_id": 1631193, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/4c713494416ceac454d71c524e15f1c6?s=128&d=identicon&r=PG&f=1", "display_name": "Gabe Sechan", "link": "https://stackoverflow.com/users/1631193/gabe-sechan"}, "edited": false, "score": 0, "creation_date": 1487880884, "post_id": 42424815, "comment_id": 71995967, "body": "@GabeSechan Yes there somehow is an <code>assets</code> directory; I&#39;ve seen it in <a href=\"https://github.com/tomaka/android-rs-glue/tree/master/examples/use_assets\" rel=\"nofollow noreferrer\">this example</a>, the problem is just that there is no path which points at it (or I don&#39;t know about it) and I have to specify a path to the file because of the library API I&#39;m using. I can only get the bytes of the file..."}, {"owner": {"reputation": 77347, "user_id": 1631193, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/4c713494416ceac454d71c524e15f1c6?s=128&d=identicon&r=PG&f=1", "display_name": "Gabe Sechan", "link": "https://stackoverflow.com/users/1631193/gabe-sechan"}, "edited": false, "score": 0, "creation_date": 1487881070, "post_id": 42424815, "comment_id": 71996049, "body": "Well in Android asset files aren&#39;t actually files-  they&#39;re part of the apk.  You can&#39;t reference them as files.  Your best bet is to copy them to disk first, and then you know the path."}, {"owner": {"reputation": 959, "user_id": 6779010, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/i7Jj0.png?s=128&g=1", "display_name": "torkleyy", "link": "https://stackoverflow.com/users/6779010/torkleyy"}, "reply_to_user": {"reputation": 77347, "user_id": 1631193, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/4c713494416ceac454d71c524e15f1c6?s=128&d=identicon&r=PG&f=1", "display_name": "Gabe Sechan", "link": "https://stackoverflow.com/users/1631193/gabe-sechan"}, "edited": false, "score": 0, "creation_date": 1487881333, "post_id": 42424815, "comment_id": 71996207, "body": "@GabeSechan Seems like a pretty dirty workaround. If this is the only way I&#39;ll try to extend the API. Thanks for your help."}, {"owner": {"reputation": 77347, "user_id": 1631193, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/4c713494416ceac454d71c524e15f1c6?s=128&d=identicon&r=PG&f=1", "display_name": "Gabe Sechan", "link": "https://stackoverflow.com/users/1631193/gabe-sechan"}, "edited": false, "score": 1, "creation_date": 1487881875, "post_id": 42424815, "comment_id": 71996536, "body": "@torkleyy Its a pretty common pattern in Java Android, especially if the contents either go to a 3rd party library that takes a file or they re updatable over the web (in which case the update has to be on disk, so may as well write the original there and reduce code paths).  The other option is to write a File abstraction for the assets directory, but I think that&#39;s going to be really hard to do if you don&#39;t have direct access to AssetManager on the Java api."}], "owner": {"reputation": 959, "user_id": 6779010, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/i7Jj0.png?s=128&g=1", "display_name": "torkleyy", "link": "https://stackoverflow.com/users/6779010/torkleyy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 489, "favorite_count": 0, "answer_count": 0, "score": 3, "last_activity_date": 1487879127, "creation_date": 1487879127, "question_id": 42424815, "link": "https://stackoverflow.com/questions/42424815/how-can-i-use-files-in-my-android-application-written-in-rust", "title": "How can I use files in my Android application written in Rust?", "body": "<p>I'd like to have additional assets shipped with my Android application, which I'm programming in Rust (using <code>cargo apk</code> from <a href=\"https://github.com/tomaka/android-rs-glue\" rel=\"nofollow noreferrer\">android-rs-glue</a>).</p>\n\n<p>How can I access a directory</p>\n\n<ul>\n<li>with files which will be placed there during the installation</li>\n<li>which is optimally local to the application (isn't there some \"data\" directory)</li>\n<li>or achieve something similar where I can read a file (for example say a <code>.obj</code> file with some game models) without embedding these files into the source code</li>\n</ul>\n\n<p>?</p>\n"}, {"tags": ["windows", "linker", "rust", "rust-cargo"], "answers": [{"tags": [], "owner": {"reputation": 7560, "user_id": 1034749, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2022f0caae119ed6232cf370bb9d9d3a?s=128&d=identicon&r=PG", "display_name": "fghj", "link": "https://stackoverflow.com/users/1034749/fghj"}, "is_accepted": true, "score": 1, "last_activity_date": 1488239480, "creation_date": 1488239480, "answer_id": 42497916, "question_id": 42420704, "link": "https://stackoverflow.com/questions/42420704/link-exe-with-mt-flag/42497916#42497916", "title": "link exe with //MT flag", "body": "<p>See this <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1721-crt-static.md\" rel=\"nofollow noreferrer\">rfc</a></p>\n\n<p>You can try it with rustc nightly:</p>\n\n<pre><code>c:\\Users\\IEUser\\test2&gt;rustc -Z unstable-options -C target-feature=+crt-static test.rs\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 1, "user_id": 7987217, "user_type": "unregistered", "profile_image": "https://www.gravatar.com/avatar/46a668f1f8aecfb85f9523f2ee663399?s=128&d=identicon&r=PG", "display_name": "Savo", "link": "https://stackoverflow.com/users/7987217/savo"}, "is_accepted": false, "score": 0, "last_activity_date": 1494344616, "creation_date": 1494344616, "answer_id": 43874284, "question_id": 42420704, "link": "https://stackoverflow.com/questions/42420704/link-exe-with-mt-flag/43874284#43874284", "title": "link exe with //MT flag", "body": "<p>user1034749 answer pertains to rustc. If you want to do this with cargo, the info is here: <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1721-crt-static.md\" rel=\"nofollow noreferrer\">https://github.com/rust-lang/rfcs/blob/master/text/1721-crt-static.md</a></p>\n\n<pre><code>RUSTFLAGS='-C target-feature=+crt-static' cargo build --target x86_64-pc-windows-msvc\n</code></pre>\n"}], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 330, "favorite_count": 0, "accepted_answer_id": 42497916, "answer_count": 2, "score": 0, "last_activity_date": 1494344616, "creation_date": 1487865881, "question_id": 42420704, "link": "https://stackoverflow.com/questions/42420704/link-exe-with-mt-flag", "title": "link exe with //MT flag", "body": "<p>I want to build exe file on windows,\nwithout need of vcruntime.</p>\n\n<p>So I tried:</p>\n\n<pre><code>.cargo/config\n[target.i686-pc-windows-msvc]\nrustflags = [\"-Clink-args=/MT\"]\n</code></pre>\n\n<p>looks like cargo found config, because of <code>cargo</code> rebuild\nwhole project, but <code>dumpbin /DEPENDENTS test.exe</code>\nstill show <code>VCRUNTIME140.dll</code> as dependencies,\nany ideas how link <code>VCRUNTIME140</code> statically?</p>\n"}, {"tags": ["c++11", "struct", "rust", "bluez"], "comments": [{"owner": {"reputation": 11458, "user_id": 3435400, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/61726fe80facc93d76754f0226b49eb9?s=128&d=identicon&r=PG&f=1", "display_name": "alain", "link": "https://stackoverflow.com/users/3435400/alain"}, "edited": false, "score": 1, "creation_date": 1487861902, "post_id": 42418964, "comment_id": 71983725, "body": "I can&#39;t help with rust, but the C++ code violates the strict aliasing rule. (It should use <code>memcpy</code> instead of <code>reinterpret_cast</code>)"}, {"owner": {"reputation": 11117, "user_id": 1554020, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/49118fbd7e64a00bc99b19d41e5e28e0?s=128&d=identicon&r=PG", "display_name": "yuri kilochek", "link": "https://stackoverflow.com/users/1554020/yuri-kilochek"}, "reply_to_user": {"reputation": 11458, "user_id": 3435400, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/61726fe80facc93d76754f0226b49eb9?s=128&d=identicon&r=PG&f=1", "display_name": "alain", "link": "https://stackoverflow.com/users/3435400/alain"}, "edited": false, "score": 0, "creation_date": 1487862079, "post_id": 42418964, "comment_id": 71983864, "body": "@alain rather it should <code>read</code> directly into the struct&#39;s storage."}, {"owner": {"reputation": 211, "user_id": 3986895, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/8ac3ee54f310a1af6998e44ffacaa4fc?s=128&d=identicon&r=PG&f=1", "display_name": "E Y", "link": "https://stackoverflow.com/users/3986895/e-y"}, "edited": false, "score": 0, "creation_date": 1487862125, "post_id": 42418964, "comment_id": 71983903, "body": "Thanks. I&#39;ll update the snippet accordingly as soon as I can recompile the program."}], "answers": [{"comments": [{"owner": {"reputation": 211, "user_id": 3986895, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/8ac3ee54f310a1af6998e44ffacaa4fc?s=128&d=identicon&r=PG&f=1", "display_name": "E Y", "link": "https://stackoverflow.com/users/3986895/e-y"}, "edited": false, "score": 0, "creation_date": 1488294323, "post_id": 42421129, "comment_id": 72161506, "body": "Thanks for the response! This is very close to what I was looking for. I&#39;ll update the question to detail the problem a bit better though."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 211, "user_id": 3986895, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/8ac3ee54f310a1af6998e44ffacaa4fc?s=128&d=identicon&r=PG&f=1", "display_name": "E Y", "link": "https://stackoverflow.com/users/3986895/e-y"}, "edited": false, "score": 0, "creation_date": 1488295703, "post_id": 42421129, "comment_id": 72162551, "body": "@EleanoreY: Please don&#39;t! (I reverted your edit). An edit should be about clarifying the question, but your edit was about a completely different issue altogether. If you have a different problem, please ask a different question <i>after</i> reducing the new problem to a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 211, "user_id": 3986895, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/8ac3ee54f310a1af6998e44ffacaa4fc?s=128&d=identicon&r=PG&f=1", "display_name": "E Y", "link": "https://stackoverflow.com/users/3986895/e-y"}, "edited": false, "score": 0, "creation_date": 1488297040, "post_id": 42421129, "comment_id": 72163568, "body": "@EleanoreY: No problem :) Looking forward to your next question."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 6, "last_activity_date": 1487867008, "creation_date": 1487867008, "answer_id": 42421129, "question_id": 42418964, "link": "https://stackoverflow.com/questions/42418964/porting-a-c-program-to-rust-of-reinterpret-cast-structs-and-bluetooth/42421129#42421129", "title": "Porting a C++ Program to Rust: Of reinterpret_cast, Structs and Bluetooth", "body": "<p>In Rust you can use the <code>unsafe</code> <code>std::mem::transmute</code> function to cast from one type to another as long as they have the same size.</p>\n\n<p>In the specific case where you are only casting from one pointer to another, though, this is not even required: you can just use <code>as</code>.</p>\n\n<pre><code>struct Hello { a: i32 }\nstruct World { b: i32 }\n\nfn main() {\n    let h = Hello { a: 42 };\n    let w = &amp;h as *const Hello as *const World;\n    let w: &amp;World = unsafe { &amp;*w };\n    println!(\"{}\", w.b);\n}\n</code></pre>\n\n<p>Note that you need the <code>unsafe</code> keyword to go from pointer to reference. Rust allows you to manipulate pointers are leisure, however dereferencing a pointer is potentially <code>unsafe</code> (if said pointer is pointing where it should not).</p>\n\n<p>Since this last step is \"gated\", converting from reference to pointer, or from one pointer type to another, is safe.</p>\n\n<p>Unlike C or C++, there is no \"strict aliasing\" rule in Rust, so the above is perfectly safe and compliant.</p>\n"}], "owner": {"reputation": 211, "user_id": 3986895, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/8ac3ee54f310a1af6998e44ffacaa4fc?s=128&d=identicon&r=PG&f=1", "display_name": "E Y", "link": "https://stackoverflow.com/users/3986895/e-y"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1521, "favorite_count": 0, "accepted_answer_id": 42421129, "answer_count": 1, "score": 3, "last_activity_date": 1488295601, "creation_date": 1487861202, "last_edit_date": 1488295601, "question_id": 42418964, "link": "https://stackoverflow.com/questions/42418964/porting-a-c-program-to-rust-of-reinterpret-cast-structs-and-bluetooth", "title": "Porting a C++ Program to Rust: Of reinterpret_cast, Structs and Bluetooth", "body": "<p>I have a C++ program that statically links against <code>libbluetooth</code>/<code>BlueZ</code>, and I would like to port it to Rust as an exercise.</p>\n\n<p>One particularly ugly bit of the C++ code reads data from a UNIX file descriptor via <code>read()</code>, and the resulting buffer is then cast to a struct via <code>reinterpret_cast</code>. Unfortunately, I have no idea how to achieve a similar thing in Rust. The idea is to capture instances of <code>le_advertising_info</code> from <code>libbluetooth</code>.</p>\n\n<p>C++11 Code:</p>\n\n<pre><code>std::uint8_t buf [HCI_MAX_EVENT_SIZE];\nevt_le_meta_event* evt;\nle_advertising_info* info;\n\nif (read(_deviceFD, buf, sizeof (buf)) &gt;= HCI_EVENT_HDR_SIZE) {\n    evt = reinterpret_cast&lt;evt_le_meta_event*&gt;(buf + HCI_EVENT_HDR_SIZE + 1);\n    if (evt != nullptr &amp;&amp; evt-&gt;subevent == EVT_LE_ADVERTISING_REPORT) {\n        void* offset = evt-&gt;data + 1;\n        for (auto i = 0; i &lt; evt-&gt;data [0]; i++) {\n            info = reinterpret_cast&lt;le_advertising_info*&gt;(offset);\n            if (info != nullptr) {\n                if (isBeacon(*info)) {\n                    writeLogEntry(*info);\n                }\n                offset = info-&gt;data + info-&gt;length + 2;\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>Some pointers on how to port this bit to Rust (in an elegant and safe fashion) are greatly appreciated.</p>\n"}, {"tags": ["rust", "slice"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1487846678, "post_id": 42413034, "comment_id": 71972513, "body": "Please post a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> as it should work but without a clear example it&#39;s difficult to understand what&#39;s possibly wrong with code you are not showing. This MCVE should also include the error message you get from the compiler."}], "answers": [{"tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": false, "score": 5, "last_activity_date": 1487855737, "last_edit_date": 1487855737, "creation_date": 1487845958, "answer_id": 42413163, "question_id": 42413034, "link": "https://stackoverflow.com/questions/42413034/how-to-access-a-slice-from-pre-defined-range-in-a-struct/42413163#42413163", "title": "How to access a slice from pre-defined &#39;Range&#39; in a struct?", "body": "<p>Since <code>Index</code> is a trait requiring the following function:</p>\n\n<pre><code>fn index(&amp;self, index: Idx) -&gt; &amp;Self::Output\n</code></pre>\n\n<p>It consumes/moves the value used for indexing (<code>index</code>). In your case you are attempting to index the slice using a <code>Range</code> from a borrowed struct, but since you are only passing a reference and the range doesn't implement <code>Copy</code>, this fails.</p>\n\n<p>You can fix it by e.g. changing the definition of <code>test_slice</code> to consume <code>StructWithRange</code> or <code>clone()</code>ing the <code>s.range</code> in the index.</p>\n"}, {"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 3, "last_activity_date": 1487854946, "creation_date": 1487854946, "answer_id": 42416522, "question_id": 42413034, "link": "https://stackoverflow.com/questions/42413034/how-to-access-a-slice-from-pre-defined-range-in-a-struct/42416522#42416522", "title": "How to access a slice from pre-defined &#39;Range&#39; in a struct?", "body": "<p>The error message occurs because <code>Range</code> does not implement <code>Copy</code> and <code>Index</code> consumes its index.</p>\n\n<p>It can be solved by adding a call to <code>.clone()</code>: <code>&amp;vector[s.range.clone()]</code>.</p>\n\n<hr>\n\n<p>If you <a href=\"https://doc.rust-lang.org/src/core/ops.rs.html#2037\" rel=\"nofollow noreferrer\">check the code</a>, it links to the rejected proposal to add <code>Copy</code> to <code>Range</code> in the case where its parameter is <code>Copy</code> <a href=\"https://github.com/rust-lang/rust/pull/27186\" rel=\"nofollow noreferrer\">here</a>.</p>\n\n<p>The rejection reason is:</p>\n\n<blockquote>\n  <p>These don't have it because they're iterators.</p>\n  \n  <p>The choice of removing Copy impls instead of adjusted for loop desugaring or linting was made to prevent this problematic case:</p>\n\n<pre><code>let mut iter = 0..n;\nfor i in iter { if i &gt; 2 { break; } }\niter.collect()\n</code></pre>\n  \n  <p>Here iter is actually not mutated, but copied. <code>for i in &amp;mut iter</code> is required to mutate the iterator.</p>\n  \n  <p>We could switch to linting against using an iterator variable after it was copied by a for loop, but there was no decision towards that.</p>\n</blockquote>\n"}], "owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 351, "favorite_count": 0, "accepted_answer_id": 42416522, "answer_count": 2, "score": 2, "last_activity_date": 1487855737, "creation_date": 1487845651, "last_edit_date": 1487854104, "question_id": 42413034, "link": "https://stackoverflow.com/questions/42413034/how-to-access-a-slice-from-pre-defined-range-in-a-struct", "title": "How to access a slice from pre-defined &#39;Range&#39; in a struct?", "body": "<p>Accessing a slice is straightforward using slice syntax: <code>slice = vector[i..j]</code></p>\n\n<p>In the case where the range is stored however, from what I can tell you can't do:</p>\n\n<pre><code>struct StructWithRange {\n    range: std::ops::Range&lt;usize&gt;,\n}\n\nfn test_slice(s: &amp;StructWithRange, vector: &amp;Vec&lt;i32&gt;) {\n    let slice = &amp;vector[s.range];\n    println!(\"{:?}\", slice); // prints [2, 3]\n}\n\nfn main() {\n    let vector = vec![1,2,3,4,5];\n    let s = StructWithRange {\n        range: 1..3\n    };\n\n    test_slice(&amp;s, &amp;vector);\n}\n</code></pre>\n\n<p>This gives the error: </p>\n\n<pre><code>error[E0507]: cannot move out of borrowed content\n --&gt; src/main.rs:6:25\n  |\n6 |     let slice = &amp;vector[s.range];\n  |                         ^ cannot move out of borrowed content\n</code></pre>\n\n<p>Is there a way to get the slice from a range without expanding it?<br>eg: <code>vector[s.range.start..s.range.end]</code></p>\n\n<p>If a <code>usize</code> in a struct can be used for an index lookup, why can't a <code>Range&lt;usize&gt;</code> be used in the same way?</p>\n"}, {"tags": ["unix", "memory", "process", "rust", "fork"], "comments": [{"owner": {"reputation": 11762, "user_id": 6530695, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/53a7a617c8e419f2562f0b00e6be10b1?s=128&d=identicon&r=PG&f=1", "display_name": "Tony", "link": "https://stackoverflow.com/users/6530695/tony"}, "edited": false, "score": 1, "creation_date": 1488987166, "post_id": 42410226, "comment_id": 72475385, "body": "Share code please and why not use fork ?"}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 1, "creation_date": 1488987822, "post_id": 42410226, "comment_id": 72475871, "body": "This might be an overcommit issue. Try executing <code>echo &quot;1&quot; &gt;&#47;proc&#47;sys&#47;vm&#47;overcommit_memory</code> as the root user."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1488988397, "post_id": 42410226, "comment_id": 72476317, "body": "You could always spawn the child early on in the processes lifetime and keep it around until you need it."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1488988526, "post_id": 42410226, "comment_id": 72476436, "body": "You should probably provide details such as your version of Rust, what OS and OS version you are using, etc."}, {"owner": {"reputation": 1068, "user_id": 2316478, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/f7e96ed21433cf47c436acb8fbacb219?s=128&d=identicon&r=PG&f=1", "display_name": "Nextar", "link": "https://stackoverflow.com/users/2316478/nextar"}, "reply_to_user": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1488989336, "post_id": 42410226, "comment_id": 72477080, "body": "@user4815162342 Can you add a detailed explanation what memory overcommitment is and what is does ?"}, {"owner": {"reputation": 1068, "user_id": 2316478, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/f7e96ed21433cf47c436acb8fbacb219?s=128&d=identicon&r=PG&f=1", "display_name": "Nextar", "link": "https://stackoverflow.com/users/2316478/nextar"}, "edited": false, "score": 0, "creation_date": 1488989513, "post_id": 42410226, "comment_id": 72477218, "body": "Actually I&#39;ve seen in other questions the &quot;overcommit_memory&quot;, but for me it seems kind of problematic to change memory configurations without knowing what I&#39;m actually chaning"}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 1, "creation_date": 1488989554, "post_id": 42410226, "comment_id": 72477240, "body": "@Nextar I will post an answer to that effect if that actually makes a difference in your case. Have you tried it to see if it helps? (Also, you can <a href=\"https://www.google.com/search?q=linux+overcommit+memory\" rel=\"nofollow noreferrer\">google it</a>.)"}, {"owner": {"reputation": 80313, "user_id": 196561, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/6836267883ea7234253b2100f222dbbc?s=128&d=identicon&r=PG", "display_name": "osgx", "link": "https://stackoverflow.com/users/196561/osgx"}, "edited": false, "score": 0, "creation_date": 1488990784, "post_id": 42410226, "comment_id": 72478174, "body": "&quot;It&#39;s mandatory to keep the data in the RAM.&quot; - So did you call <code>mlock()</code> or even <code>mlockall()</code>?"}, {"owner": {"reputation": 1068, "user_id": 2316478, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/f7e96ed21433cf47c436acb8fbacb219?s=128&d=identicon&r=PG&f=1", "display_name": "Nextar", "link": "https://stackoverflow.com/users/2316478/nextar"}, "reply_to_user": {"reputation": 80313, "user_id": 196561, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/6836267883ea7234253b2100f222dbbc?s=128&d=identicon&r=PG", "display_name": "osgx", "link": "https://stackoverflow.com/users/196561/osgx"}, "edited": false, "score": 0, "creation_date": 1488992350, "post_id": 42410226, "comment_id": 72479259, "body": "@osgx No i didn&#39;t.But as the docs point out &quot;The function mlockall() causes all of the pages mapped by the address space of a process to be memory resident until unlocked or until the process exits or &gt;EXECS&lt; another process image.&quot;  And after the clone the Command::new should exec another process image."}, {"owner": {"reputation": 39406, "user_id": 371250, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/WKvHm.png?s=128&g=1", "display_name": "ninjalj", "link": "https://stackoverflow.com/users/371250/ninjalj"}, "edited": false, "score": 0, "creation_date": 1488996056, "post_id": 42410226, "comment_id": 72481575, "body": "Is there some way to call posix_spawn() from Rust?"}, {"owner": {"reputation": 80313, "user_id": 196561, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/6836267883ea7234253b2100f222dbbc?s=128&d=identicon&r=PG", "display_name": "osgx", "link": "https://stackoverflow.com/users/196561/osgx"}, "edited": false, "score": 1, "creation_date": 1488996057, "post_id": 42410226, "comment_id": 72481576, "body": "Nextar, what was the value in the <code>&#47;proc&#47;sys&#47;vm&#47;overcommit_memory</code> file and similar named &quot;overcommit&quot; in the same dir when you got the error?"}, {"owner": {"reputation": 8710, "user_id": 4897391, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9d1b93d929992f3115150952cc6e9ef9?s=128&d=identicon&r=PG", "display_name": "ffeast", "link": "https://stackoverflow.com/users/4897391/ffeast"}, "edited": false, "score": 1, "creation_date": 1489241698, "post_id": 42410226, "comment_id": 72590488, "body": "could you provide &#39;free -m&#39; output just before you launch your process, &#39;free -m&#39; just before you&#39;re running the command and the output of &#39;cat /proc/sys/vm/overcommit_memory&#39; and &#39;cat /proc/sys/vm/overcommit_ratio&#39;?"}, {"owner": {"reputation": 179940, "user_id": 20713, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/09b9758a4a83cc25547eb93891f19df7?s=128&d=identicon&r=PG", "display_name": "ephemient", "link": "https://stackoverflow.com/users/20713/ephemient"}, "edited": false, "score": 0, "creation_date": 1489384249, "post_id": 42410226, "comment_id": 72630308, "body": "One other thing to check is if you&#39;re running inside a memory cgroup or something else limiting resources."}, {"owner": {"reputation": 1068, "user_id": 2316478, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/f7e96ed21433cf47c436acb8fbacb219?s=128&d=identicon&r=PG&f=1", "display_name": "Nextar", "link": "https://stackoverflow.com/users/2316478/nextar"}, "edited": false, "score": 1, "creation_date": 1489396884, "post_id": 42410226, "comment_id": 72635689, "body": "Setting overcommit_memory to 1 fixes the issue and makes perfect sense to me. It would be great if someone can post an detailed (maybe with some docs related to overcommit_memory setting) answer for other people that have the same issue in the future. :) !"}, {"owner": {"reputation": 2860, "user_id": 5410835, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PCfZO.jpg?s=128&g=1", "display_name": "Douglas Daseeco", "link": "https://stackoverflow.com/users/5410835/douglas-daseeco"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1489424355, "post_id": 42410226, "comment_id": 72654116, "body": "@Shepmaster, I like your suggestion of spawning the child before the 20G allocation. The child could sit in a wait state until it is needed. Another step forward might be to put all the processing in children. Every time I try to do processing in the process, I have to change to a controller-only parent later. Now I just start that way."}, {"owner": {"reputation": 2860, "user_id": 5410835, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PCfZO.jpg?s=128&g=1", "display_name": "Douglas Daseeco", "link": "https://stackoverflow.com/users/5410835/douglas-daseeco"}, "edited": false, "score": 1, "creation_date": 1489424521, "post_id": 42410226, "comment_id": 72654220, "body": "Regarding the overcommit_memory = ALWAYS, we may use that kind of hack to get through a big data task and meet a deadline, but we&#39;d add going back to fix the root cause to our Agile backlog with a high priority so it gets done right before we forget what we did and get some strange bug that takes forever to correlate back to the unconditional overcommit."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2860, "user_id": 5410835, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PCfZO.jpg?s=128&g=1", "display_name": "Douglas Daseeco", "link": "https://stackoverflow.com/users/5410835/douglas-daseeco"}, "edited": false, "score": 1, "creation_date": 1489425606, "post_id": 42410226, "comment_id": 72654835, "body": "@FauChristian yep, I&#39;ve worked at a place where we had to deal with spawning arbitrary child processes <i>and</i> we used multithreading. We quickly created a system where we spawned a helper before anything. That helper did basically nothing but spawn further children, all communicating through pipes."}, {"owner": {"reputation": 2860, "user_id": 5410835, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PCfZO.jpg?s=128&g=1", "display_name": "Douglas Daseeco", "link": "https://stackoverflow.com/users/5410835/douglas-daseeco"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1489427320, "post_id": 42410226, "comment_id": 72655875, "body": "@Shepmaster, exactly. The executable starts a child which then detaches from the parent with close and wait calls so that the parent executable exits normally and no zombie is created. The child then creates pipes and dups them before forking and execvp-ing grandchildren, used where process independence benefits reliability or throughput. Whereas pthread_create can be used for convenience where that&#39;s not as much a concern. The pattern is so consistently successful in GNU projects and our laboratory work that I&#39;ve considered creating a C++ template Daemon&lt;ArgumentParser, Master, Slave&gt;."}], "answers": [{"comments": [{"owner": {"reputation": 80313, "user_id": 196561, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/6836267883ea7234253b2100f222dbbc?s=128&d=identicon&r=PG", "display_name": "osgx", "link": "https://stackoverflow.com/users/196561/osgx"}, "edited": false, "score": 0, "creation_date": 1489372119, "post_id": 42755694, "comment_id": 72627576, "body": "Is there COW mechanism in the step 2? What do you meant by &quot;memory  is doubled&quot;? Which memory, physical or virtual? What is the setting of overcommit_memory on PC with the problem?"}, {"owner": {"reputation": 80313, "user_id": 196561, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/6836267883ea7234253b2100f222dbbc?s=128&d=identicon&r=PG", "display_name": "osgx", "link": "https://stackoverflow.com/users/196561/osgx"}, "edited": false, "score": 0, "creation_date": 1489374958, "post_id": 42755694, "comment_id": 72628196, "body": "&quot;When virtual memory is allocated, it must correspond to physical memory space&quot; - not it don&#39;t. There is overcommit in Linux, enabled by default:  9.6 Overcommit and OOM of <a href=\"https://www.win.tue.nl/~aeb/linux/lk/lk-9.html\" rel=\"nofollow noreferrer\">win.tue.nl/~aeb/linux/lk/lk-9.html</a> &amp; <a href=\"http://stackoverflow.com/questions/38688824/\">stackoverflow.com/questions/38688824</a>."}, {"owner": {"reputation": 80313, "user_id": 196561, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/6836267883ea7234253b2100f222dbbc?s=128&d=identicon&r=PG", "display_name": "osgx", "link": "https://stackoverflow.com/users/196561/osgx"}, "edited": false, "score": 1, "creation_date": 1489377248, "post_id": 42755694, "comment_id": 72628699, "body": "Not. Linux usually allow to allocate more virtual memory than physical memory size (RAM+swap). This memory is not mapped to something real, on access to every page there will be interrupt of &quot;Page Fault&quot; and kernel will allocate real physical page, install correct mapping and restart failed instruction. When there will be no phys mem to allocate from there will be OOM. This can be turned off in overcommit_memory (and there are possible more complex tasks with THP). Please, add references to your answer, read some docs and try not to post when you do not understand the problem fully."}, {"owner": {"reputation": 80313, "user_id": 196561, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/6836267883ea7234253b2100f222dbbc?s=128&d=identicon&r=PG", "display_name": "osgx", "link": "https://stackoverflow.com/users/196561/osgx"}, "edited": false, "score": 0, "creation_date": 1489377499, "post_id": 42755694, "comment_id": 72628743, "body": "And on fork parent memory will be COWed: made shared between parent and child, but remarked as read-only. On first write access to every touched page (from any process) there will be page fault again with allocating of phys mem for copy and unsharing the page (COW = Copy-On-Write). So, fork will consume mem for ptes &amp; vma tables (to create new virtual mapping for child), and willl do some overcommit heuristic accounting, but it will not allocate 20 GB phys at fork."}, {"owner": {"reputation": 49065, "user_id": 13422, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/94b309d78a1253a334e9b82643a8dc97?s=128&d=identicon&r=PG", "display_name": "Zan Lynx", "link": "https://stackoverflow.com/users/13422/zan-lynx"}, "edited": false, "score": 2, "creation_date": 1489382658, "post_id": 42755694, "comment_id": 72629862, "body": "The memory is only copied when touched, so it is COW. But the VM accounting has to allow for the fact that the user might touch all of it. The overcommit logic in the kernel defaults to setting 2, not 1. Setting 2 is heuristic overcommit, which means the kernel allows <i>some</i> overcommit but will reject really excessive amounts of it."}, {"owner": {"reputation": 1068, "user_id": 2316478, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/f7e96ed21433cf47c436acb8fbacb219?s=128&d=identicon&r=PG&f=1", "display_name": "Nextar", "link": "https://stackoverflow.com/users/2316478/nextar"}, "reply_to_user": {"reputation": 80313, "user_id": 196561, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/6836267883ea7234253b2100f222dbbc?s=128&d=identicon&r=PG", "display_name": "osgx", "link": "https://stackoverflow.com/users/196561/osgx"}, "edited": false, "score": 0, "creation_date": 1489396688, "post_id": 42755694, "comment_id": 72635571, "body": "Actually I&#39;m looking more for the answer @osgx provided.  With COW the 20GB shouldn&#39;t be needed. But I Didn&#39;t know about memory_overcommit. So if memory_overcommit is set to 1 it makes perfekt sense to me why the clone() is not working"}, {"owner": {"reputation": 80313, "user_id": 196561, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/6836267883ea7234253b2100f222dbbc?s=128&d=identicon&r=PG", "display_name": "osgx", "link": "https://stackoverflow.com/users/196561/osgx"}, "reply_to_user": {"reputation": 1068, "user_id": 2316478, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/f7e96ed21433cf47c436acb8fbacb219?s=128&d=identicon&r=PG&f=1", "display_name": "Nextar", "link": "https://stackoverflow.com/users/2316478/nextar"}, "edited": false, "score": 0, "creation_date": 1489415299, "post_id": 42755694, "comment_id": 72647313, "body": "@Nextar, just do the <code>cat &#47;proc&#47;sys&#47;vm&#47;overcommit_memory</code> to see what is it, when the failing program in question fails. Please, post output of <code>free</code> command too."}, {"owner": {"reputation": 1068, "user_id": 2316478, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/f7e96ed21433cf47c436acb8fbacb219?s=128&d=identicon&r=PG&f=1", "display_name": "Nextar", "link": "https://stackoverflow.com/users/2316478/nextar"}, "edited": false, "score": 0, "creation_date": 1489480843, "post_id": 42755694, "comment_id": 72676516, "body": "@DouglasDaseeco The process is the only user process running on the system, actually there are multiple projects for each a new ec2 is created.  I also like the idea of creating the process at the beginn of the main process and let it wait :)"}], "tags": [], "owner": {"reputation": 2860, "user_id": 5410835, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PCfZO.jpg?s=128&g=1", "display_name": "Douglas Daseeco", "link": "https://stackoverflow.com/users/5410835/douglas-daseeco"}, "is_accepted": true, "score": 4, "last_activity_date": 1489423324, "last_edit_date": 1489423324, "creation_date": 1489371667, "answer_id": 42755694, "question_id": 42410226, "link": "https://stackoverflow.com/questions/42410226/why-does-process-creation-using-clone-result-in-an-out-of-memory-failure/42755694#42755694", "title": "Why does process creation using `clone` result in an out-of-memory failure?", "body": "<p><strong>The Problem</strong></p>\n\n<p>When a child process is created by the Rust call, several things happen at a C/C++ level.  This is a simplification, but it will help explain the dilemma.</p>\n\n<ol>\n<li>The streams are duplicated (with dup2 or a similar call)</li>\n<li>The parent process is forked (with the fork or clone system call)</li>\n<li>The forked process executes the child (with call from the execvp family)</li>\n</ol>\n\n<p>The parent and child are now concurrent processes.  The Rust call you are currently using appears to be a clone call that is behaving much like a pure fork, so you're 20G x 2 - 32G = 8G short, without considering the space needed by the operating system and anything else that might be running.  The clone call is returning with a negative return value and errno is set by the call to ENOMEM errno. </p>\n\n<p>If the architectural solutions of adding physical memory, compressing the data, or streaming it through a process that does not require the entirety of it to be in memory at any one time are not options, then the classic solution is reasonably simple.</p>\n\n<p><strong>Recommendation</strong></p>\n\n<p>Design the parent process to be lean.  Then spawn two worker children, one that handles your 20GB need and the other that handles your 1 GB need<sup>1</sup>. These children can be connected to one another via pipe, file, shared memory, socket, semaphore, signalling, and/or other communication mechanism(s), just as a parent and child can be.</p>\n\n<p>Many mature software packages from Apache httpd to embedded cell tower routing daemons use this design pattern.  It is reliable, maintainable, extensible, and portable.</p>\n\n<p>The 32G would then likely suffice for the 20G and 1G processing needs, along with OS and lean parent process.</p>\n\n<p>Although this solution will surely solve your problem, if the code is to be reused or extended later, there may be value in looking into potential process design changes involving data frames or multidimensional slices to support streaming of data and memory requirement reductions.  </p>\n\n<p><strong>Memory Overcommit Always</strong></p>\n\n<p>Setting overcommit_memory to 1 eliminates the clone error condition referenced in the question because the Rust call calls the LINUX clone call that reads that setting. But there are several caveats with this solution that point back to the above recommendation as superior, primarily that the value of 1 is dangerous, especially for production environments.</p>\n\n<p><strong>Background</strong></p>\n\n<p>Kernel discussions about OpenBSD rfork and the clone call ensued in the late 1990s and early 2000s.  The features stemming from those discussions permit less extreme forking than processes, which is symmetrically like the provision of more extensive independence between pthreads.  Some of these discussions have produced extensions to the traditional process spawning that have entered POSIX standardization.</p>\n\n<p>In the early 2000s, Linux Torvalds suggested a flag structure to determine what components of the execution model are shared and what are copied when execution forks, blurring the distinction between processes and threads.  From this, the clone call emerged.</p>\n\n<p>Over-committing memory is not discussed much if any in those threads.  The design goal was MORE control of the results of a fork rather than the delegation of memory usage optimization to an operating system heuristic, which is what the default setting of <code>overcommit_memory = 0</code> does.</p>\n\n<p><strong>Caveats</strong></p>\n\n<p>Memory overcommit goes beyond these extensions, adding the complexity of trade-offs of its modes<sup>2</sup>, design trend caveats<sup>3</sup>, practical run time limitations<sup>4</sup>, and performance impacts<sup>5</sup>.</p>\n\n<p><strong>Portability and Longevity</strong></p>\n\n<p>Additionally, without standardization, the code using memory overcommit may not be portable, and the question of longevity is pertinent, especially when a setting controls the behavior of a function.  There is no guarantee of backward compatibility or even some warning of deprication if the setting system changes.</p>\n\n<p><strong>Danger</strong></p>\n\n<p>The linuxdevcenter documentation<sup>2</sup> says, \"1 always overcommits. Perhaps you now realize the danger of this mode.\", and there are other indications of danger with ALWAYS overcommitting <sup>6, 7</sup>.</p>\n\n<p>The implementers of overcommit on LINUX, Windows, and VMWare may guarantee reliability, but it is a statistical game that, combined with the many other complexities of process control, may lead to certain unstable characteristics under certain conditions.  Even the name overcommit tells us something about its true character as a practice.</p>\n\n<p>A non-default overcommit_memory mode, for which several warnings are issues, but works for the immediate trial of the immediate case may later lead to intermittent reliability.</p>\n\n<p><strong>Predictability and Its Impact on System Reliability and Response Time Consistency</strong></p>\n\n<p>The idea of a process in a UNIX like operating system, from its Bell Labs beginnings, is that a process makes a concrete requests to its container, the operating system.  The result both predictable and binary.  Either the request is denied or granted.  Once granted, the process is given complete control and direct access over the resources until the use of it is relinquished by the process.</p>\n\n<p>The swap space aspect of virtual memory is a breach of this principle that appears as gross deceleration of activity on workstations, when RAM is heavily consumed.  For instance, there are times during development when one presses a key and has to wait ten seconds to see the character on the display.</p>\n\n<p><strong>Conclusion</strong></p>\n\n<p>There are many ways to get the most out of physical memory, but doing so by hoping that use of memory allocated will be sparse will likely introduce negative impacts.  Performance hits from swapping when overcommit is overused is the well documented example.  If you are keeping 20G of data in RAM, this may particularly be the case.</p>\n\n<p>Only allocating what is needed, forking in intelligent ways, using threads, and freeing memory that is surely no longer needed lead to memory thrift without impacting reliability, creating spikes in swap disk usage, and can operate without caveat up to the limits of system resources.</p>\n\n<p>The position of the designer of the <code>Command::new</code> call may be based on this perspective.  In this case, how soon after the fork the exec is called is not a determining factor in how much memory is requested during the spawn.</p>\n\n<p><strong>Notes and References</strong></p>\n\n<p>[1] Spawning worker children may require some code refactoring and appear to be too much trouble on a superficial level, but the refactoring may be surprisingly straightforward and significantly beneficial.</p>\n\n<p>[2] <a href=\"http://www.linuxdevcenter.com/pub/a/linux/2006/11/30/linux-out-of-memory.html?page=2\" rel=\"noreferrer\">http://www.linuxdevcenter.com/pub/a/linux/2006/11/30/linux-out-of-memory.html?page=2</a></p>\n\n<p>[3] <a href=\"https://www.etalabs.net/overcommit.html\" rel=\"noreferrer\">https://www.etalabs.net/overcommit.html</a></p>\n\n<p>[4] <a href=\"http://www.gabesvirtualworld.com/memory-overcommit-in-production-yes-yes-yes/\" rel=\"noreferrer\">http://www.gabesvirtualworld.com/memory-overcommit-in-production-yes-yes-yes/</a></p>\n\n<p>[5] <a href=\"https://labs.vmware.com/vmtj/memory-overcommitment-in-the-esx-server\" rel=\"noreferrer\">https://labs.vmware.com/vmtj/memory-overcommitment-in-the-esx-server</a></p>\n\n<p>[6] <a href=\"https://github.com/kubernetes/kubernetes/issues/14452\" rel=\"noreferrer\">https://github.com/kubernetes/kubernetes/issues/14452</a></p>\n\n<p>[7] <a href=\"http://linuxtoolkit.blogspot.com/2011_08_01_archive.html\" rel=\"noreferrer\">http://linuxtoolkit.blogspot.com/2011_08_01_archive.html</a></p>\n"}], "owner": {"reputation": 1068, "user_id": 2316478, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/f7e96ed21433cf47c436acb8fbacb219?s=128&d=identicon&r=PG&f=1", "display_name": "Nextar", "link": "https://stackoverflow.com/users/2316478/nextar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1261, "favorite_count": 0, "accepted_answer_id": 42755694, "answer_count": 1, "score": 5, "last_activity_date": 1489423324, "creation_date": 1487837429, "last_edit_date": 1489395977, "question_id": 42410226, "link": "https://stackoverflow.com/questions/42410226/why-does-process-creation-using-clone-result-in-an-out-of-memory-failure", "title": "Why does process creation using `clone` result in an out-of-memory failure?", "body": "<p>I have a process that allocates about 20GB of RAM on a 32GB machine.  After some events, I'm streaming the data from the parent process to stdin of the child process. It's mandatory to keep the 20GB of data in the parent process at the point when the child is spawned.</p>\n\n<p>The app is written in Rust and I'm calling <code>Command::new('path/to/command')</code> to create the child process.</p>\n\n<p>When I spawn the child process the operating system is trapping an out-of-memory error.</p>\n\n<p>strace output: </p>\n\n<blockquote>\n  <p>[pid 747] 16:04:41.128377 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7ff4c7f87b10) = -1 ENOMEM (Cannot allocate memory)</p>\n</blockquote>\n\n<p>Why does the trap occur?  The child process should not consume more than 1GB and <code>exec()</code> is called immediately after <code>clone()</code>. </p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1487878408, "post_id": 42406538, "comment_id": 71994553, "body": "For what it&#39;s worth, I think clippy is absolutely in the wrong to complain about this; sometimes nested ifs are easier to read than an <code>else if</code> chain. If you&#39;re primarily concerned about a clean bill of health from clippy, I&#39;d look for some way to turn off this lint (probably just for this instance)."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1487878718, "post_id": 42406538, "comment_id": 71994718, "body": "I went looking and there is an <a href=\"https://github.com/Manishearth/rust-clippy/issues/798\" rel=\"nofollow noreferrer\">issue</a> to disable this lint when there is a comment in the outer <code>else</code>."}], "answers": [{"tags": [], "owner": {"reputation": 1295, "user_id": 1114328, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d211889b453feb9210d9645cbcfd524e?s=128&d=identicon&r=PG", "display_name": "durka42", "link": "https://stackoverflow.com/users/1114328/durka42"}, "is_accepted": false, "score": 4, "last_activity_date": 1487822072, "creation_date": 1487822072, "answer_id": 42406726, "question_id": 42406538, "link": "https://stackoverflow.com/questions/42406538/file-or-module-level-feature-possible/42406726#42406726", "title": "File or module level &#39;feature&#39; possible?", "body": "<p>You can use a build script to create new cfg conditions. Use <code>println!(\"cargo:rustc-cfg=whatever\")</code> in the build script, and then you can use <code>#[cfg(whatever)]</code> on your functions and statements.</p>\n"}], "owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 80, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1487822072, "creation_date": 1487821030, "last_edit_date": 1487821714, "question_id": 42406538, "link": "https://stackoverflow.com/questions/42406538/file-or-module-level-feature-possible", "title": "File or module level &#39;feature&#39; possible?", "body": "<p>Some optimizations/algorithms make code considerably less readable, so it's useful to keep the ability to disable the complex-and-unwieldily functionality within a file/module so any errors introduced when modifying this code can be quickly tested against the simple code.</p>\n\n<p>Currently using <code>const USE_SOME_FEATURE: bool = true;</code> seems a reasonable way, but makes the code read a little strangely, since <code>USE_SOME_FEATURE</code> is being used like an <code>ifdef</code> in C.</p>\n\n<p>For instance, clippy wants you to write:</p>\n\n<pre><code>if foo {\n    { ..other code.. }\n} else {\n    // final case\n    if USE_SOME_FEATURE {\n        { ..fancy_code.. }\n    } else {\n        { ..simple_code.. }\n    }\n}\n</code></pre>\n\n<p>As:</p>\n\n<pre><code>if foo {\n    { ..other code.. }\n} else if USE_SOME_FEATURE {\n    // final case\n    { ..fancy_code.. }\n} else {\n    // final case\n    { ..simple_code.. }\n}\n</code></pre>\n\n<p>Which IMHO hurts readability, and can be ignored - but is caused by using a boolean where a <code>feature</code> might make more sense.</p>\n\n<p>Is there a way to expose a feature within a file without having it listed in the crate?<br><em>(since this is only for internal debugging and testing changes to code)</em>.</p>\n"}]