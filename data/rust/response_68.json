[{"tags": ["rust"], "comments": [{"owner": {"reputation": 13014, "user_id": 4140572, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/2uRSa.png?s=128&g=1", "display_name": "Angel Angel", "link": "https://stackoverflow.com/users/4140572/angel-angel"}, "reply_to_user": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "edited": false, "score": 0, "creation_date": 1461789622, "post_id": 36900241, "comment_id": 61365057, "body": "@malbarbo <code>to_string()</code> return a <code>String</code> I use <code>&amp;*</code> for <code>&amp;str</code> I think I need <code>&amp;*</code> in this case. But not if this is the best way?."}, {"owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "edited": false, "score": 0, "creation_date": 1461791248, "post_id": 36900241, "comment_id": 61365962, "body": "you are right, I rushed on this. If <code>foo</code> was a method, the <code>temp.to_string().foo()</code> would do an auto deref to <code>&amp;str</code>, but <code>foo</code> is a function, so <code>&amp;*</code> is necessary. The <code>usize</code> to <code>String</code> conversion is the right way."}, {"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 0, "creation_date": 1461842737, "post_id": 36900241, "comment_id": 61388476, "body": "What are we optimizing for?"}], "answers": [{"tags": [], "owner": {"reputation": 1295, "user_id": 1114328, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d211889b453feb9210d9645cbcfd524e?s=128&d=identicon&r=PG", "display_name": "durka42", "link": "https://stackoverflow.com/users/1114328/durka42"}, "is_accepted": false, "score": 2, "last_activity_date": 1462202499, "creation_date": 1462202499, "answer_id": 36985983, "question_id": 36900241, "link": "https://stackoverflow.com/questions/36900241/what-is-the-optimal-way-to-convert-a-usize-to-a-str/36985983#36985983", "title": "What is the optimal way to convert a `usize` to a `&amp;str`?", "body": "<p>As you noticed, <code>as_str</code> doesn't appear to do anything. In fact it returns <code>self</code>, a <code>&amp;String</code>, where a <code>&amp;str</code> is expected. This causes the compiler to insert a call to <code>Deref</code>. So your two ways are exactly the same.</p>\n"}], "owner": {"reputation": 13014, "user_id": 4140572, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/2uRSa.png?s=128&g=1", "display_name": "Angel Angel", "link": "https://stackoverflow.com/users/4140572/angel-angel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 6645, "favorite_count": 0, "answer_count": 1, "score": 7, "last_activity_date": 1517113412, "creation_date": 1461788942, "last_edit_date": 1517113412, "question_id": 36900241, "link": "https://stackoverflow.com/questions/36900241/what-is-the-optimal-way-to-convert-a-usize-to-a-str", "title": "What is the optimal way to convert a `usize` to a `&amp;str`?", "body": "<p>I need to convert a <code>usize</code> to a <code>&amp;str</code> to pass to a <code>fn foo(&amp;str)</code>. I found the following two ways, but don't know if there is a difference between using <code>as_str()</code> or <code>Deref</code>. Maybe the work done by <code>self</code> in <code>as_str</code> links with <code>Deref</code> somehow? I do not know if it may be better to use one or the other or if they actually are the same.</p>\n\n<ol>\n<li><p>Using <code>temp.to_string().as_str()</code>:</p>\n\n<pre><code>#[inline]\n#[stable(feature = \"string_as_str\", since = \"1.7.0\")]\npub fn as_str(&amp;self) -&gt; &amp;str {\n    self\n}\n</code></pre></li>\n<li><p>Using <code>&amp;*temp.to_string()</code> or <code>&amp;temp.to_string()</code>. This works via <code>Deref</code>:</p>\n\n<pre><code>#[stable(feature = \"rust1\", since = \"1.0.0\")]\nimpl ops::Deref for String {\n    type Target = str;\n\n    #[inline]\n    fn deref(&amp;self) -&gt; &amp;str {\n        unsafe { str::from_utf8_unchecked(&amp;self.vec) }\n    }\n}\n</code></pre></li>\n</ol>\n\n<blockquote>\n  <p>The question may depend on what you want to do in foo: does the passed\n  <code>&amp;str</code> need to outlive <code>foo</code> or not ?</p>\n</blockquote>\n\n<p><code>foo(&amp;str)</code> is a minimal example for <code>s: &amp;str</code> in this code:</p>\n\n<pre><code>extern crate termbox_sys as termbox;\n\npub fn print(&amp;self, x: usize, y: usize, sty: Style, fg: Color, bg: Color, s: &amp;str) {\n    let fg = Style::from_color(fg) | (sty &amp; style::TB_ATTRIB);\n    let bg = Style::from_color(bg);\n    for (i, ch) in s.chars().enumerate() {\n        unsafe {\n            self.change_cell(x + i, y, ch as u32, fg.bits(), bg.bits());\n        }\n    }\n}\n\npub unsafe fn change_cell(&amp;self, x: usize, y: usize, ch: u32, fg: u16, bg: u16) {\n    termbox::tb_change_cell(x as c_int, y as c_int, ch, fg, bg)\n}\n</code></pre>\n\n<p><a href=\"https://github.com/gchp/termbox-sys/blob/master/lib.rs\" rel=\"noreferrer\">termbox_sys</a></p>\n"}, {"tags": ["rust", "nickel"], "answers": [{"comments": [{"owner": {"reputation": 369, "user_id": 5173659, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/624d5aeb91c736829677f5ecd9f7bde6?s=128&d=identicon&r=PG&f=1", "display_name": "menawi", "link": "https://stackoverflow.com/users/5173659/menawi"}, "edited": false, "score": 0, "creation_date": 1461940902, "post_id": 36926676, "comment_id": 61441362, "body": "Through trial and error I finally did figure out my mistake. Thanks for anwering though :)"}], "tags": [], "owner": {"reputation": 1987, "user_id": 5278682, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/34509cba2b4d128dce294dcf5092d300?s=128&d=identicon&r=PG&f=1", "display_name": "Eli Friedman", "link": "https://stackoverflow.com/users/5278682/eli-friedman"}, "is_accepted": true, "score": 3, "last_activity_date": 1461883231, "creation_date": 1461883231, "answer_id": 36926676, "question_id": 36899908, "link": "https://stackoverflow.com/questions/36899908/cannot-borrow-request-as-mutable-because-it-is-also-borrowed-as-immutable/36926676#36926676", "title": "cannot borrow `*request` as mutable because it is also borrowed as immutable", "body": "<p><code>id</code> is of type <code>&amp;str</code>.  This is a pointer into the variable <code>request</code>.  Calling <code>json_as</code> takes as a parameter a mutable reference to the variable <code>request</code>.  This leads to the error \"cannot borrow <code>*request</code> as mutable because it is also borrowed as immutable\".</p>\n\n<p>There are a number of ways you could solve this; probably the most straightforward is to use <code>to_owned()</code> to convert the <code>&amp;str</code> into a <code>String</code>.</p>\n"}], "owner": {"reputation": 369, "user_id": 5173659, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/624d5aeb91c736829677f5ecd9f7bde6?s=128&d=identicon&r=PG&f=1", "display_name": "menawi", "link": "https://stackoverflow.com/users/5173659/menawi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 571, "favorite_count": 0, "accepted_answer_id": 36926676, "answer_count": 1, "score": 1, "last_activity_date": 1531248196, "creation_date": 1461787752, "last_edit_date": 1531248196, "question_id": 36899908, "link": "https://stackoverflow.com/questions/36899908/cannot-borrow-request-as-mutable-because-it-is-also-borrowed-as-immutable", "title": "cannot borrow `*request` as mutable because it is also borrowed as immutable", "body": "<p>I've written an endpoint in Rust using nickel.rs:</p>\n\n<pre><code>{\n    let client = client.clone();\n    let mongodb = MongoRepository::new(client, \"rust-users\".into());\n    router.put(\"/users/:id\",middleware!(|request, mut response| {\n\n        let id = try_with!(response, { \n            request.param(\"id\")\n                   .ok_or((StatusCode::BadRequest, \"Id parameter required\")) \n        });\n        let user = try_with!(response, {\n            request.json_as::&lt;User&gt;()\n                   .map_err(|e| \n                       (StatusCode::BadRequest, format!(\"{}\",e))\n                   )\n        });\n        let update_id = try_with!(response, {\n            mongodb.update_by_id(\"users\", id, user)\n                   .map_err(|e| \n                       (StatusCode::InternalServerError, e) \n                   )\n        });\n        ApiResult::Ok(StatusCode::Ok, update_id.to_json())\n\n    }));\n}\n</code></pre>\n\n<p>In this line:</p>\n\n<pre><code>let id = try_with!(response, { \n    request.param(\"id\")\n           .ok_or((StatusCode::BadRequest, \"Id parameter required\")) \n});\n</code></pre>\n\n<p><code>request</code> is borrowed in an immutable state, but in this line:</p>\n\n<pre><code>let user = try_with!(response, {\n    request.json_as::&lt;User&gt;()\n           .map_err(|e| \n               (StatusCode::BadRequest, format!(\"{}\",e))\n           )\n});\n</code></pre>\n\n<p>request is borrowed in a mutable state. This causes the following error:</p>\n\n<pre><code>error: cannot borrow `*request` as mutable because it is also borrowed\nas immutable\n</code></pre>\n\n<p>I tried to fix this error by wrapping the <code>id</code> line in a separate scope but the issue persisted. </p>\n\n<p>I'm not sure how else to fix the issue. Is there something else that's wrong with the code?</p>\n"}, {"tags": ["regex", "rust"], "comments": [{"owner": {"reputation": 187800, "user_id": 320615, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/65c80e12b6a33913538653f6d4ef1277?s=128&d=identicon&r=PG", "display_name": "Dogbert", "link": "https://stackoverflow.com/users/320615/dogbert"}, "edited": false, "score": 0, "creation_date": 1461761407, "post_id": 36890185, "comment_id": 61344957, "body": "It would be nice if you include the actual code that we can run to test."}, {"owner": {"reputation": 2672, "user_id": 223936, "user_type": "registered", "accept_rate": 59, "profile_image": "https://i.stack.imgur.com/j58Xn.jpg?s=128&g=1", "display_name": "Plastikfan", "link": "https://stackoverflow.com/users/223936/plastikfan"}, "reply_to_user": {"reputation": 187800, "user_id": 320615, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/65c80e12b6a33913538653f6d4ef1277?s=128&d=identicon&r=PG", "display_name": "Dogbert", "link": "https://stackoverflow.com/users/320615/dogbert"}, "edited": false, "score": 0, "creation_date": 1461761516, "post_id": 36890185, "comment_id": 61345033, "body": "I havent got any code. I am testing it in regex101.com. When I get this working, then I&#39;ll roll it into code, but thats the easy part."}, {"owner": {"reputation": 2672, "user_id": 223936, "user_type": "registered", "accept_rate": 59, "profile_image": "https://i.stack.imgur.com/j58Xn.jpg?s=128&g=1", "display_name": "Plastikfan", "link": "https://stackoverflow.com/users/223936/plastikfan"}, "reply_to_user": {"reputation": 187800, "user_id": 320615, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/65c80e12b6a33913538653f6d4ef1277?s=128&d=identicon&r=PG", "display_name": "Dogbert", "link": "https://stackoverflow.com/users/320615/dogbert"}, "edited": false, "score": 0, "creation_date": 1461761580, "post_id": 36890185, "comment_id": 61345087, "body": "If it helps, I can write a unit test and post that if thats better?"}, {"owner": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "edited": false, "score": 0, "creation_date": 1461761639, "post_id": 36890185, "comment_id": 61345134, "body": "Do you intend to make the whole regex optional? That means that the empty string matches, so every input will match (it matches a string of length zero before the end of the line <code>$</code>)."}, {"owner": {"reputation": 2672, "user_id": 223936, "user_type": "registered", "accept_rate": 59, "profile_image": "https://i.stack.imgur.com/j58Xn.jpg?s=128&g=1", "display_name": "Plastikfan", "link": "https://stackoverflow.com/users/223936/plastikfan"}, "edited": false, "score": 0, "creation_date": 1461761744, "post_id": 36890185, "comment_id": 61345213, "body": "Well actually, that&#39;s why I use the $ anchor to prevent any string from matching. If I&#39;m wrong, how should I fix it?"}, {"owner": {"reputation": 481647, "user_id": 3832970, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/64323e6cf08401474da3bf770ea13b58?s=128&d=identicon&r=PG&f=1", "display_name": "Wiktor Stribi\u017cew", "link": "https://stackoverflow.com/users/3832970/wiktor-stribi%c5%bcew"}, "edited": false, "score": 1, "creation_date": 1461761919, "post_id": 36890185, "comment_id": 61345370, "body": "I think you are wrong with your assumptions about the <i>optional</i> character of the whole pattern. Make it obligatory: <code>\\s*-\\s*(?P&lt;f1&gt;[A-Za-z][\\w\\s]*)$</code>, or even unroll the grouping as <a href=\"https://regex101.com/r/mZ1uG9/3\" rel=\"nofollow noreferrer\"><code>\\s*-\\s*(?P&lt;f1&gt;[^\\W\\d_]\\w*(?:\\s+\\w+)*)$</code></a>"}, {"owner": {"reputation": 2672, "user_id": 223936, "user_type": "registered", "accept_rate": 59, "profile_image": "https://i.stack.imgur.com/j58Xn.jpg?s=128&g=1", "display_name": "Plastikfan", "link": "https://stackoverflow.com/users/223936/plastikfan"}, "edited": false, "score": 0, "creation_date": 1461762904, "post_id": 36890185, "comment_id": 61346162, "body": "I can&#39;t make \\s*-\\s* obligatory independent of the rest, because that would allow a dash, without a name following it, which is not what is required. However, I have tried your regex, and it works better than mine. I am going to crawl under a rock for a while and think about why it works better than mine, but so far so good. I need to test it on more inoput too, so thanks"}, {"owner": {"reputation": 2672, "user_id": 223936, "user_type": "registered", "accept_rate": 59, "profile_image": "https://i.stack.imgur.com/j58Xn.jpg?s=128&g=1", "display_name": "Plastikfan", "link": "https://stackoverflow.com/users/223936/plastikfan"}, "edited": false, "score": 0, "creation_date": 1461763015, "post_id": 36890185, "comment_id": 61346261, "body": "Also, Wiktor, I&#39;m trying to force a change in the way I&#39;m writing regexes, because I keep making the same type of mistakes,hence, me crawling under a rock :)"}, {"owner": {"reputation": 481647, "user_id": 3832970, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/64323e6cf08401474da3bf770ea13b58?s=128&d=identicon&r=PG&f=1", "display_name": "Wiktor Stribi\u017cew", "link": "https://stackoverflow.com/users/3832970/wiktor-stribi%c5%bcew"}, "edited": false, "score": 1, "creation_date": 1461763090, "post_id": 36890185, "comment_id": 61346330, "body": "No, <code>\\s*-\\s*</code> is not the only obligatory pattern: the first letter is also obligatory. See this <a href=\"https://regex101.com/r/mZ1uG9/4\" rel=\"nofollow noreferrer\"><code>\\s*-\\s*(?P&lt;f1&gt;([^\\W\\d_])\\w*(?:\\s+\\w+)*)(?:\\s*&amp;\\s*(?P&lt;f2&gt;([^\\&zwnj;&#8203;W\\d_])\\w*(?:\\s+\\w+)*&zwnj;&#8203;))*$</code></a> whole regex. Please add more test cases if it does not work."}, {"owner": {"reputation": 2672, "user_id": 223936, "user_type": "registered", "accept_rate": 59, "profile_image": "https://i.stack.imgur.com/j58Xn.jpg?s=128&g=1", "display_name": "Plastikfan", "link": "https://stackoverflow.com/users/223936/plastikfan"}, "edited": false, "score": 0, "creation_date": 1461763235, "post_id": 36890185, "comment_id": 61346444, "body": "Ah yes, I see what you mean ..."}, {"owner": {"reputation": 2672, "user_id": 223936, "user_type": "registered", "accept_rate": 59, "profile_image": "https://i.stack.imgur.com/j58Xn.jpg?s=128&g=1", "display_name": "Plastikfan", "link": "https://stackoverflow.com/users/223936/plastikfan"}, "edited": false, "score": 0, "creation_date": 1461764084, "post_id": 36890185, "comment_id": 61347154, "body": "Wiktor, If you post your version of the regex as an answer, ie this one that recognises 2 names, then I can mark it as the solution. It does just what I was looking for, and confirms to me that my thinking of the optionality is wrong. Thanks"}], "answers": [{"comments": [{"owner": {"reputation": 481647, "user_id": 3832970, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/64323e6cf08401474da3bf770ea13b58?s=128&d=identicon&r=PG&f=1", "display_name": "Wiktor Stribi\u017cew", "link": "https://stackoverflow.com/users/3832970/wiktor-stribi%c5%bcew"}, "reply_to_user": {"reputation": 2672, "user_id": 223936, "user_type": "registered", "accept_rate": 59, "profile_image": "https://i.stack.imgur.com/j58Xn.jpg?s=128&g=1", "display_name": "Plastikfan", "link": "https://stackoverflow.com/users/223936/plastikfan"}, "edited": false, "score": 0, "creation_date": 1461764448, "post_id": 36891459, "comment_id": 61347474, "body": "Glad to help. When you write regex patterns, try to <i>be</i> the regex engine: follow the linear logic first: match this, capture this, do not match this... up to... end. The current pattern looks horrid (maybe it is) but it is quite linear and efficient. Short patterns do not always turn out the most efficient, BTW."}], "tags": [], "owner": {"reputation": 481647, "user_id": 3832970, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/64323e6cf08401474da3bf770ea13b58?s=128&d=identicon&r=PG&f=1", "display_name": "Wiktor Stribi\u017cew", "link": "https://stackoverflow.com/users/3832970/wiktor-stribi%c5%bcew"}, "is_accepted": true, "score": 3, "last_activity_date": 1461764314, "last_edit_date": 1461764314, "creation_date": 1461764139, "answer_id": 36891459, "question_id": 36890185, "link": "https://stackoverflow.com/questions/36890185/re2-rust-regular-expression-doesnt-work-as-expected/36891459#36891459", "title": "RE2 (Rust) regular expression doesn&#39;t work as expected", "body": "<p>The point here is that you cannot match and not match something at the same time. If you make the whole pattern optional, and the end of string obligatory, even if there is nothing of interest the end of string will be matched - always. </p>\n\n<p>The way out is to think of a subpattern you are interested in. You are interested in the names, so, make the first letter obligatory. The hyphen seems to be obligatory in all test cases you supplied, too. Everything else can be optional:</p>\n\n<pre><code>\\s*-\\s*(?P&lt;f1&gt;([^\\W\\d_])\\w*(?:\\s+\\w+)*)(?:\\s*&amp;\\s*(?P&lt;f2&gt;([^\\W\\d_])\\w*(?:\\s+\\w+\u200c\u200b)*))*$\n</code></pre>\n\n<p>See the <a href=\"https://regex101.com/r/mZ1uG9/4\" rel=\"nofollow\">regex demo</a> (the <code>\\s</code> is replaced with <code>\\h</code> and <code>\\n</code> added to the negated character classes just for demo purposes as it is  a multiline demo).</p>\n\n<p>Note that I replaced <code>[a-zA-Z]</code> with <code>[^\\W\\d_]</code> to make the pattern more flexible (<code>[^\\W\\d_]</code> just matches any letter).</p>\n"}], "owner": {"reputation": 2672, "user_id": 223936, "user_type": "registered", "accept_rate": 59, "profile_image": "https://i.stack.imgur.com/j58Xn.jpg?s=128&g=1", "display_name": "Plastikfan", "link": "https://stackoverflow.com/users/223936/plastikfan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 675, "favorite_count": 0, "accepted_answer_id": 36891459, "answer_count": 1, "score": 1, "last_activity_date": 1461779147, "creation_date": 1461760992, "last_edit_date": 1461779147, "question_id": 36890185, "link": "https://stackoverflow.com/questions/36890185/re2-rust-regular-expression-doesnt-work-as-expected", "title": "RE2 (Rust) regular expression doesn&#39;t work as expected", "body": "<p>I have a regex that seemingly is straightforward but does not act as required. The input to be parsed is described as follows (nb: {} are not part of the regex, only what's inside):</p>\n\n<ul>\n<li>A sequence of 0 or more spaces {\\s*}</li>\n<li>A dash {-}</li>\n<li>A sequence of 0 or more spaces {\\s*}</li>\n<li>A full person's name (first name, middle names, surname; all captured into f1). The name must not start with a number\nmust appear at the end of the line {[A-Za-z][\\w\\s]*)}</li>\n</ul>\n\n<p>The whole construct SPACE-SPACEf1 is optional</p>\n\n<p>Just to explain what is captured into f1:\nFor the first char, I'm using the set of chars represented by [A-Za-z]. Followed by \\w or space 0 or more times. This is captured into f1.</p>\n\n<pre><code>(?:\\s*-\\s*(?P&lt;f1&gt;[A-Za-z][\\w\\s]*))?$\n</code></pre>\n\n<p>I expect the following sequences to match and capture a value into f1:</p>\n\n<ul>\n<li>\" - Bruce\"      (f1=Bruce)</li>\n<li>\" - Bruce Dickinson\"      (f1=Bruce Dickinson)</li>\n</ul>\n\n<p>I expect the following to not match:</p>\n\n<ul>\n<li>\"Bruce\"         (there is no leading dash)</li>\n<li>\" - Bruce!\"     (there is a non word (\\w) character after the name and before end of line</li>\n</ul>\n\n<p>I expect the following match but not capture a value into f1 (I would prefer it to not match though):</p>\n\n<ul>\n<li>\" - 1Bruce\"     (leading character is numeric)</li>\n</ul>\n\n<p>These are the actual results:</p>\n\n<ul>\n<li>\" - Bruce\"      (f1=Bruce) Tick; this works</li>\n<li><p>\" - Bruce Dickinson\"      (f1=Bruce Dickinson) Tick; this works</p></li>\n<li><p>\"Bruce\"         (f1= not captured, but expression is a match. This is wrong, because Bruce doesn't match the optional part, and $ comes next which doesn't match Bruce)</p></li>\n<li><p>\" - Bruce!\"     (f1= not cpatured, but expression is a match; this is wrong, because of the !, which means that match does not appear at the end of line.</p></li>\n</ul>\n\n<p>I expect that:</p>\n\n<pre><code>(?:\\s*-\\s*(?P&lt;f1&gt;[A-Za-z][\\w\\s]*))?\n</code></pre>\n\n<p>would consume { - Bruce}, which should leave !, which should fail because of the next regex token being $; however, the computer says no, so I'm wrong but I don't know why :(</p>\n\n<ul>\n<li>\" - 1Bruce\"     (f1= not captured, but expression is match. This is understandable because the whole {space dash space f1} sequence is optional and because it doesn't match, that construct is skipped and then there is nothing else to process on the input; we hit the end of line)</li>\n</ul>\n\n<p>If I can get this to work, I can get the rest of my expression to work the way I want it to. I need somebody else to jolt me into thinking about this differently. I've spent 2 days on  this with no positive output, so very frustrating.</p>\n\n<p>PS: I am using regex101.com to test regexes. The regexes will be used as part of a Rust application whose regex engine is based on google's RE2.</p>\n\n<p>Eventually, I need to be able to recognise a sequence of names delimited by &amp;, and the whole expression is optional by the use of ? and must appear at the end of line $.</p>\n\n<p>So</p>\n\n<ul>\n<li>{ - Bruce &amp; Nicko &amp; Dave Murray } would be valid</li>\n</ul>\n\n<p>and</p>\n\n<ul>\n<li>{ - Bruce &amp; Nicko &amp; Dave Murray &amp; } should not be valid and NOT match</li>\n</ul>\n\n<p>But 1 step at a time!</p>\n"}, {"tags": ["error-handling", "rust", "optional", "idioms", "rust-result"], "comments": [{"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 2, "creation_date": 1461716163, "post_id": 36878044, "comment_id": 61322342, "body": "I am of the <code>Result&lt;(), Error&gt;</code> side of things.. I usually alias these as my own types as well. I would be interested to hear what others say. I do this though because the <code>try!</code> macro still plays very nicely with it."}], "answers": [{"comments": [{"owner": {"reputation": 2286, "user_id": 1981468, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/HnKNp.jpg?s=128&g=1", "display_name": "Others", "link": "https://stackoverflow.com/users/1981468/others"}, "edited": false, "score": 0, "creation_date": 1461730174, "post_id": 36878464, "comment_id": 61325932, "body": "I don&#39;t think I disagree, I do think Result&lt;(), WorkError&gt; is slightly nicer. However, I&#39;m wondering if there are any &quot;official&quot; sources that support your answer in any way?"}, {"owner": {"reputation": 41983, "user_id": 866732, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09f0253204000d6083ed1de21afc6fd?s=128&d=identicon&r=PG", "display_name": "WiSaGaN", "link": "https://stackoverflow.com/users/866732/wisagan"}, "reply_to_user": {"reputation": 2286, "user_id": 1981468, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/HnKNp.jpg?s=128&g=1", "display_name": "Others", "link": "https://stackoverflow.com/users/1981468/others"}, "edited": false, "score": 0, "creation_date": 1461733033, "post_id": 36878464, "comment_id": 61326836, "body": "@Others Since <code>do_work</code> is itself an conceptual example, I don&#39;t expect there will be any official convention for it. But you can get a sense of the idiom in standard library, for example: <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.read_exact\" rel=\"nofollow noreferrer\">doc.rust-lang.org/nightly/std/io/&hellip;</a>"}, {"owner": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "reply_to_user": {"reputation": 2286, "user_id": 1981468, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/HnKNp.jpg?s=128&g=1", "display_name": "Others", "link": "https://stackoverflow.com/users/1981468/others"}, "edited": false, "score": 5, "creation_date": 1461736231, "post_id": 36878464, "comment_id": 61328073, "body": "@Others the whole standard library uses <code>Result&lt;(), _&gt;</code> pervasively when an operation that may fail doesn&#39;t return anything useful (e.g. many functions of <code>std::io</code> and <code>std::fs</code>). It is the correct choice."}, {"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "reply_to_user": {"reputation": 2286, "user_id": 1981468, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/HnKNp.jpg?s=128&g=1", "display_name": "Others", "link": "https://stackoverflow.com/users/1981468/others"}, "edited": false, "score": 0, "creation_date": 1461751010, "post_id": 36878464, "comment_id": 61337243, "body": "@Others, using <code>Result</code> is officially endorsed at <a href=\"https://aturon.github.io/errors/signaling.html#obstructions\" rel=\"nofollow noreferrer\">aturon.github.io/errors/signaling.html#obstructions</a> (per RFC 236)."}, {"owner": {"reputation": 41983, "user_id": 866732, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09f0253204000d6083ed1de21afc6fd?s=128&d=identicon&r=PG", "display_name": "WiSaGaN", "link": "https://stackoverflow.com/users/866732/wisagan"}, "reply_to_user": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 0, "creation_date": 1461756548, "post_id": 36878464, "comment_id": 61341169, "body": "@ArtemGr Note that the alternative discussed in that page would be <code>Option&lt;()&gt;</code> in OP question&#39;s context instead of <code>Option&lt;WorkError&gt;</code>. <code>None</code> in former means work is not done properly, while <code>None</code> in latter means work is done properly."}, {"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 0, "creation_date": 1461843130, "post_id": 36878464, "comment_id": 61388782, "body": "@WiSaGaN Option does not assign a success/failure meaning to its variants, only present, not present."}, {"owner": {"reputation": 41983, "user_id": 866732, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09f0253204000d6083ed1de21afc6fd?s=128&d=identicon&r=PG", "display_name": "WiSaGaN", "link": "https://stackoverflow.com/users/866732/wisagan"}, "reply_to_user": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 0, "creation_date": 1461846975, "post_id": 36878464, "comment_id": 61391748, "body": "@bluss yeah, usually the difference between <code>Result&lt;Value, Error&gt;</code> and <code>Option&lt;Value&gt;</code> is obvious. Very rarely there is indeed some usage not that obvious. For example, to non-blockingly get an item from a queue, <code>Option&lt;Item&gt;</code> seems reasonable here, while it&#39;s not uncommon to have <code>Result&lt;Item, TryError&gt;</code>, which maps <code>TryError</code> to something like POSIX <code>WOULDBLOCK</code>."}], "tags": [], "owner": {"reputation": 41983, "user_id": 866732, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09f0253204000d6083ed1de21afc6fd?s=128&d=identicon&r=PG", "display_name": "WiSaGaN", "link": "https://stackoverflow.com/users/866732/wisagan"}, "is_accepted": true, "score": 41, "last_activity_date": 1461718766, "creation_date": 1461718766, "answer_id": 36878464, "question_id": 36878044, "link": "https://stackoverflow.com/questions/36878044/what-is-the-idiomatic-way-to-return-an-error-from-a-function-with-no-result-if-s/36878464#36878464", "title": "What is the idiomatic way to return an error from a function with no result if successful?", "body": "<p>Use <code>fn do_work() -&gt; Result&lt;(), WorkError&gt;</code>.</p>\n\n<p><code>Result&lt;(), WorkError&gt;</code> means you want the work to be done, but it may fail.</p>\n\n<p><code>Option&lt;WorkError&gt;</code> means you want to get an error, but it may be absent.</p>\n\n<p>You probably want the work to be done but not to get an error when you write <code>do_work()</code>, so <code>Result&lt;(), WorkError&gt;</code> is the better choice.</p>\n\n<p>I would expect <code>Option&lt;WorkError&gt;</code> only be used in cases like <code>fn get_last_work_error() -&gt; Option&lt;WorkError&gt;</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 22050, "user_id": 497364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8fd4eb2ae966a16e698b3e61217a7e1?s=128&d=identicon&r=PG", "display_name": "Paolo Falabella", "link": "https://stackoverflow.com/users/497364/paolo-falabella"}, "is_accepted": false, "score": 6, "last_activity_date": 1461773584, "last_edit_date": 1461773584, "creation_date": 1461760639, "answer_id": 36890049, "question_id": 36878044, "link": "https://stackoverflow.com/questions/36878044/what-is-the-idiomatic-way-to-return-an-error-from-a-function-with-no-result-if-s/36890049#36890049", "title": "What is the idiomatic way to return an error from a function with no result if successful?", "body": "<p>Rust is \"pretty strongly typed\" (and please, please don't call me out on how I measure how strongly typed a language is...). I mean this in the sense that Rust generally gives you the tools to let types \"speak\" for you and document your code, therefore it's idiomatic to use this feature to write readable code.</p>\n\n<p>In other words, the question you're asking should be more \"which type represents best what the function does to anyone who reads its signature?\"</p>\n\n<p>For <code>Result&lt;(), Workerror&gt;</code> you can see straight <a href=\"http://doc.rust-lang.org/std/result/enum.Result.html\" rel=\"nofollow\">from the docs</a></p>\n\n<blockquote>\n  <p>Result is a type that represents either success (Ok) or failure (Err)</p>\n</blockquote>\n\n<p>So, specialized for your case, it means your function returns nothing if it's successful (represented by <code>Ok&lt;()&gt;</code>) or <code>WorkError</code> if there's an error (<code>Err&lt;WorkError&gt;</code>). This is a very direct representation in code of the way you described the function in your question.</p>\n\n<p>Compare this to <code>Option&lt;WorkError&gt;</code> or <code>Option&lt;()&gt;</code> </p>\n\n<blockquote>\n  <p>Type Option represents an optional value: every Option is either Some and contains a value or None, and does not</p>\n</blockquote>\n\n<p>In your case <code>Option&lt;WorkError&gt;</code> would be saying to the reader \"this function should return a <code>WorkError</code> but it may return nothing\". You can document that the \"return nothing\" case means that the function was actually successful, but that's not very evident from types alone.</p>\n\n<p><code>Option&lt;()&gt;</code> says \"this function can return nothing or have no meaningful return\", which can be a reasonable thing to say if <code>WorkError</code> contains no other info (like an error type or an error message) and it's practically only a way to say \"an error has occurred\". In this case a simple <code>bool</code> carries the same information... Otherwise the <code>Result</code> lets you return some more info associated with the error.</p>\n"}], "owner": {"reputation": 2286, "user_id": 1981468, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/HnKNp.jpg?s=128&g=1", "display_name": "Others", "link": "https://stackoverflow.com/users/1981468/others"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 10669, "favorite_count": 7, "accepted_answer_id": 36878464, "answer_count": 2, "score": 39, "last_activity_date": 1556752619, "creation_date": 1461716075, "last_edit_date": 1556752619, "question_id": 36878044, "link": "https://stackoverflow.com/questions/36878044/what-is-the-idiomatic-way-to-return-an-error-from-a-function-with-no-result-if-s", "title": "What is the idiomatic way to return an error from a function with no result if successful?", "body": "<p>In Rust, I believe the idiomatic way to deal with recoverable errors is to use Result. For example this function clearly is idiomatic:</p>\n\n<pre><code>fn do_work() -&gt; Result&lt;u64, WorkError&gt; {...}\n</code></pre>\n\n<p>Of course, there are also functions that have a single, obvious, failure state, and therefore use the Option type instead. An idiomatic example would be this:</p>\n\n<pre><code>fn do_work() -&gt; Option&lt;u64&gt;\n</code></pre>\n\n<p>This all is straightforwardly addressed in the documentation. However, I'm confused about the case where a function can fail, but has no meaningful value when successful. Compare the following two functions:</p>\n\n<pre><code>fn do_work() -&gt; Option&lt;WorkError&gt;\n// vs\nfn do_work() -&gt; Result&lt;(), WorkError&gt;\n</code></pre>\n\n<p>I'm just not sure which one of these is more idiomatic, or is used more often in real world Rust code. My go-to resource for questions like this is the Rust book, but I don't think this is addressed in its \"<a href=\"https://doc.rust-lang.org/book/error-handling.html\">Error Handling</a>\" section. I haven't had much luck with any other Rust documentation either.</p>\n\n<p>Of course this seems pretty subjective, but I'm looking for authoritative sources that either state which form is idiomatic, or on why one form is superior (or inferior) to the other. (I'm also curious how the convention compares to other languages that heavily utilize \"errors as values\", like Go and Haskell.)</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 167, "user_id": 4538001, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/931c27881afb46a895204a88f1a940e7?s=128&d=identicon&r=PG&f=1", "display_name": "Andrew", "link": "https://stackoverflow.com/users/4538001/andrew"}, "edited": false, "score": 0, "creation_date": 1461710577, "post_id": 36877060, "comment_id": 61320684, "body": "Thanks for correcting let mut foo, but my goal is for f1 function definition to remain fn f1(&amp;self)"}, {"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "reply_to_user": {"reputation": 167, "user_id": 4538001, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/931c27881afb46a895204a88f1a940e7?s=128&d=identicon&r=PG&f=1", "display_name": "Andrew", "link": "https://stackoverflow.com/users/4538001/andrew"}, "edited": false, "score": 0, "creation_date": 1461710726, "post_id": 36877060, "comment_id": 61320743, "body": "I only just noticed that sentence. Unfortunately as far as I am aware that isn&#39;t possible on a <code>self</code> reference. You may be able to get away with using a <code>RefCell</code> or similar construct for a property on your object.. but not the object itself."}], "tags": [], "owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "is_accepted": true, "score": 5, "last_activity_date": 1461711004, "last_edit_date": 1461711004, "creation_date": 1461710326, "answer_id": 36877060, "question_id": 36876962, "link": "https://stackoverflow.com/questions/36876962/how-to-make-mut-self-from-self/36877060#36877060", "title": "How to make &amp;mut self from &amp;self?", "body": "<p>EDIT:</p>\n\n<p>After missing that last sentence.. you <em>could</em> get away with wrapping the property in a <code>Cell</code>:</p>\n\n<pre><code>use std::cell::Cell;\n\nstruct Foo { value: Cell&lt;i32&gt; }\n\nimpl Foo {\n  fn f1(&amp;self) {\n    self.f2();\n  }\n\n  fn f2(&amp;self) {\n    self.value.set(5);\n  }\n}\n\nfn main() {\n    let foo = Foo { value: Cell::new(0) };\n    foo.f1();\n    println!(\"{:?}\", foo.value.get()); // prints 5\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "edited": false, "score": 2, "creation_date": 1461710916, "post_id": 36877109, "comment_id": 61320802, "body": "Using <code>UnsafeCell</code> is a bad idea; almost always you&#39;d want to use <code>RefCell</code> or <code>Cell</code>, the latter for <code>Copy</code> data."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "reply_to_user": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "edited": false, "score": 0, "creation_date": 1461711243, "post_id": 36877109, "comment_id": 61320924, "body": "@VladimirMatveev: Oh, ok. I&#39;ve updated the answer with <code>RefCell</code> (It could also be done with <code>Cell</code>)."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1461747431, "post_id": 36877109, "comment_id": 61334692, "body": "@rodrigo: To expand on Vladimir&#39;s point. <code>UnsafeCell</code> is the basic unsafe functionality which underlies both <code>Cell</code> and <code>RefCell</code>, so it is used in the end, what matters is that being <code>unsafe</code> you have to be aware of the invariants that your code need to maintain. The authors of <code>Cell</code> and <code>RefCell</code> are aware of those invariants and have provided a safe interface which maintain them automatically for you; thus making your job easier."}], "tags": [], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "is_accepted": false, "score": 4, "last_activity_date": 1461711147, "last_edit_date": 1461711147, "creation_date": 1461710592, "answer_id": 36877109, "question_id": 36876962, "link": "https://stackoverflow.com/questions/36876962/how-to-make-mut-self-from-self/36877109#36877109", "title": "How to make &amp;mut self from &amp;self?", "body": "<p>What you want cannot be done: you cannot convert a non-mutable reference into a mutable one.</p>\n\n<p>But you can get almost that with <a href=\"https://doc.rust-lang.org/core/cell/struct.RefCell.html\" rel=\"nofollow\"><code>RefCell</code></a>:</p>\n\n<pre><code>struct Foo { value: RefCell&lt;i32&gt; }\n\nimpl Foo {\n    fn f1(&amp;self) {\n        let mutValue = self.value.borrow_mut();\n        *mutValue = 5;\n    }\n}\n</code></pre>\n\n<p>I didn't even need the <code>f2</code> function!</p>\n"}], "owner": {"reputation": 167, "user_id": 4538001, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/931c27881afb46a895204a88f1a940e7?s=128&d=identicon&r=PG&f=1", "display_name": "Andrew", "link": "https://stackoverflow.com/users/4538001/andrew"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 890, "favorite_count": 0, "accepted_answer_id": 36877060, "answer_count": 2, "score": 2, "last_activity_date": 1461760810, "creation_date": 1461709878, "last_edit_date": 1461760810, "question_id": 36876962, "link": "https://stackoverflow.com/questions/36876962/how-to-make-mut-self-from-self", "title": "How to make &amp;mut self from &amp;self?", "body": "<p>I want to expose a public function with immutable self which calls a private function with mutable self.</p>\n\n<pre><code>struct Foo {\n    value: i32,\n}\n\nimpl Foo {\n    fn f1(&amp;self) {\n        self.f2(); // &lt;--- is it possible to make self mutable?\n    }\n\n    fn f2(&amp;mut self) {\n        self.value = 5;\n    }\n}\n\nfn main() {\n    let foo = Foo { value: 0 };\n    foo.f1();\n}\n</code></pre>\n\n<p>When compiling this code I get an error</p>\n\n<blockquote>\n  <p>cannot borrow immutable borrowed content <code>*self</code> as mutable</p>\n</blockquote>\n\n<p>Is it possible to make self mutable?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 55268, "user_id": 941764, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/b874953e067d60b5f07bb98c74bf48c8?s=128&d=identicon&r=PG", "display_name": "jgillich", "link": "https://stackoverflow.com/users/941764/jgillich"}, "edited": false, "score": 0, "creation_date": 1461709655, "post_id": 36876741, "comment_id": 61320375, "body": "Here is a better example: <a href=\"https://play.rust-lang.org/?gist=a44bfda4a8b6b6f31dbafdd582d82080&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> - but I guess the answer is still &quot;no&quot;, which I pretty much expected anyways. Thanks! :)"}], "tags": [], "owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "is_accepted": true, "score": 10, "last_activity_date": 1461708809, "creation_date": 1461708809, "answer_id": 36876741, "question_id": 36876570, "link": "https://stackoverflow.com/questions/36876570/return-first-item-of-vector/36876741#36876741", "title": "Return first item of vector", "body": "<p>Not in its current state.. no.</p>\n\n<p>Basically, when <code>first()</code> returns here, <code>v</code> is dropped. Which makes returning a reference out of the function unsafe, because now the reference points into a void.</p>\n\n<p>One option is to pass the vector in and return a reference to the first item out:</p>\n\n<pre><code>fn main () {\n    let v = vec![1,2,3,4];\n\n    println!(\"{:?}\", first(&amp;v).unwrap()); // Prints 1\n}\n\nfn first&lt;T&gt;(v: &amp;Vec&lt;T&gt;) -&gt; Option&lt;&amp;T&gt; {\n    v.first()\n}\n</code></pre>\n\n<p>This seems redundant though and so without knowing exactly what you're trying to do this seems like an okay option.</p>\n\n<p>If you expand your question I will expand my answer.</p>\n"}, {"tags": [], "owner": {"reputation": 13014, "user_id": 4140572, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/2uRSa.png?s=128&g=1", "display_name": "Angel Angel", "link": "https://stackoverflow.com/users/4140572/angel-angel"}, "is_accepted": false, "score": 1, "last_activity_date": 1461718490, "creation_date": 1461718490, "answer_id": 36878420, "question_id": 36876570, "link": "https://stackoverflow.com/questions/36876570/return-first-item-of-vector/36878420#36878420", "title": "Return first item of vector", "body": "<p>Maybe this can help you</p>\n\n<pre><code>pub fn first&lt;T&gt;(v: &amp;Vec&lt;T&gt;) -&gt; Option&lt;&amp;T&gt; {\n\n    let mut v_temp = Vec::new();\n    //some work on v\n    v_temp.first().cloned()\n}\n\npub fn first1() -&gt; Option&lt;u8&gt; {\n    let mut v: Vec&lt;u8&gt; = Vec::new();\n    //some work on v\n    v.push(1);\n    v.first().cloned()\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 2409, "user_id": 2284570, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/9bd1d26aad2cfb7ece066d94c128d529?s=128&d=identicon&r=PG", "display_name": "user2284570", "link": "https://stackoverflow.com/users/2284570/user2284570"}, "edited": false, "score": 0, "creation_date": 1609113518, "post_id": 60584127, "comment_id": 115751248, "body": "and how to do this using copying?"}], "tags": [], "owner": {"reputation": 226, "user_id": 7733170, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e441ab385712cb4b60855603a4f9700d?s=128&d=identicon&r=PG&f=1", "display_name": "Stanislav  Sagan", "link": "https://stackoverflow.com/users/7733170/stanislav-sagan"}, "is_accepted": false, "score": 8, "last_activity_date": 1583636340, "creation_date": 1583636340, "answer_id": 60584127, "question_id": 36876570, "link": "https://stackoverflow.com/questions/36876570/return-first-item-of-vector/60584127#60584127", "title": "Return first item of vector", "body": "<p>To take first element without copy:</p>\n\n<p><code>vec.into_iter().nth(0)</code></p>\n\n<p>But it will destroy a vector.</p>\n"}], "owner": {"reputation": 55268, "user_id": 941764, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/b874953e067d60b5f07bb98c74bf48c8?s=128&d=identicon&r=PG", "display_name": "jgillich", "link": "https://stackoverflow.com/users/941764/jgillich"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 9445, "favorite_count": 1, "accepted_answer_id": 36876741, "answer_count": 3, "score": 8, "last_activity_date": 1583636340, "creation_date": 1461708075, "question_id": 36876570, "link": "https://stackoverflow.com/questions/36876570/return-first-item-of-vector", "title": "Return first item of vector", "body": "<p>I'm trying to write a shorthand function that returns the first element of a vector:</p>\n\n<pre><code>pub fn first() -&gt; Option&lt;&amp;T&gt; {\n    let v = Vec::new();\n    v.first()\n}\n</code></pre>\n\n<p>Which of course fails with:</p>\n\n<blockquote>\n  <p>error: missing lifetime specifier [E0106]</p>\n</blockquote>\n\n<p>Is there any way to make this work?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1461698786, "post_id": 36873837, "comment_id": 61314685, "body": "Your example seems to have multiple conflated concerns. There are two different traits involved and generally traits have different meanings so you wouldn&#39;t want to reuse them exactly. What are you <i>really trying to do</i>?"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1461699000, "post_id": 36874086, "comment_id": 61314812, "body": "Why <code>Borrow</code> and not <code>AsRef</code>?"}, {"owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 4, "creation_date": 1461699130, "post_id": 36874086, "comment_id": 61314891, "body": "<code>AsRef</code> is not implemented for all <code>T</code>, <code>Borrow</code> is."}, {"owner": {"reputation": 19680, "user_id": 562222, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/jgGXb.jpg?s=128&g=1", "display_name": "qed", "link": "https://stackoverflow.com/users/562222/qed"}, "edited": false, "score": 0, "creation_date": 1461857610, "post_id": 36874086, "comment_id": 61400254, "body": "Would <code>Cow</code> be helpful here?"}, {"owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "reply_to_user": {"reputation": 19680, "user_id": 562222, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/jgGXb.jpg?s=128&g=1", "display_name": "qed", "link": "https://stackoverflow.com/users/562222/qed"}, "edited": false, "score": 0, "creation_date": 1462363635, "post_id": 36874086, "comment_id": 61604545, "body": "@qed Using <code>Cow</code> would require creating <code>Cow</code> instances explicit in the call site,  <code>Cow</code> is an enum, not a trait."}, {"owner": {"reputation": 19680, "user_id": 562222, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/jgGXb.jpg?s=128&g=1", "display_name": "qed", "link": "https://stackoverflow.com/users/562222/qed"}, "edited": false, "score": 0, "creation_date": 1462365744, "post_id": 36874086, "comment_id": 61606124, "body": "Would be nice to able to do something like <code>impl&lt;T&gt; Add&lt;T&gt; for  T where T: Borrow&lt;Point&gt;</code>, but this leads to a E0210. How can I solve this?"}, {"owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "edited": false, "score": 0, "creation_date": 1462370152, "post_id": 36874086, "comment_id": 61609748, "body": "You cannot. The problem is that <code>Add</code> is foreign trait, and the rule is &quot;only traits defined in the current crate can be implemented for a type parameter&quot;."}], "tags": [], "owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "is_accepted": true, "score": 4, "last_activity_date": 1461698926, "creation_date": 1461698926, "answer_id": 36874086, "question_id": 36873837, "link": "https://stackoverflow.com/questions/36873837/choose-to-borrow-or-pass-ownership-without-duplicating-code-in-rust/36874086#36874086", "title": "Choose to borrow or pass ownership without duplicating code in Rust", "body": "<p>You can use <a href=\"https://doc.rust-lang.org/stable/std/borrow/trait.Borrow.html\" rel=\"nofollow\"><code>Borrow</code></a> to abstract over the borrowed type</p>\n\n<pre><code>use std::ops::Add;\nuse std::borrow::Borrow;\n\n#[derive(Clone, Debug)]\nstruct Point {\n    x: i32,\n    y: i32,\n}\n\nimpl&lt;T: Borrow&lt;Point&gt;&gt; Add&lt;T&gt; for Point {\n    type Output = Point;\n    fn add(self, other: T) -&gt; Point {\n        Point { x: self.x + other.borrow().x, y: self.y + other.borrow().y }\n    }\n}\n\nfn main() {\n    let p1 = Point { x: 1, y: 0 };\n    let p2 = Point { x: 2, y: 3 };\n    let p4 = p1.clone() + &amp;p2;\n    let p3 = p1 + p2;\n    println!(\"{:?}\", p3);\n    println!(\"{:?}\", p4);\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1461779493, "post_id": 36897241, "comment_id": 61358725, "body": "This doesn&#39;t seem to address <i>How can avoid this kind of redundancy?</i>. Perhaps you can update it to do so?"}], "tags": [], "owner": {"reputation": 854, "user_id": 3989982, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6941e7388870864da83acedf9e9c7693?s=128&d=identicon&r=PG&f=1", "display_name": "Tibor Benke", "link": "https://stackoverflow.com/users/3989982/tibor-benke"}, "is_accepted": false, "score": 0, "last_activity_date": 1461779508, "last_edit_date": 1461779508, "creation_date": 1461779316, "answer_id": 36897241, "question_id": 36873837, "link": "https://stackoverflow.com/questions/36873837/choose-to-borrow-or-pass-ownership-without-duplicating-code-in-rust/36897241#36897241", "title": "Choose to borrow or pass ownership without duplicating code in Rust", "body": "<p>What if you implement <code>Add</code> for <code>&amp;Point</code>?</p>\n\n<pre><code>use std::ops::Add;\n\n#[derive(Debug)]\nstruct Point {\n    x: i32,\n    y: i32,\n}\n\nimpl Add for Point {\n    type Output = Point;\n    fn add(self, other: Point) -&gt; Point {\n        println!(\"refadd\");\n        Point { x: self.x + other.x, y: self.y + other.y }\n    }\n}\n\nimpl&lt;'a&gt; Add for &amp;'a Point {\n    type Output = Point;\n    fn add(self, other: &amp;Point) -&gt; Point {\n        Point { x: self.x + other.x, y: self.y + other.y }\n    }\n}\n\nfn main() {\n    let p1 = Point { x: 1, y: 0 };\n    let p2 = Point { x: 2, y: 3 };\n    let p4 = &amp;p1 + &amp;p2;\n    let p3 = p1 + p2;\n    println!(\"{:?}\", p3);\n    println!(\"{:?}\", p4);\n}\n</code></pre>\n"}], "owner": {"reputation": 19680, "user_id": 562222, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/jgGXb.jpg?s=128&g=1", "display_name": "qed", "link": "https://stackoverflow.com/users/562222/qed"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 82, "favorite_count": 1, "accepted_answer_id": 36874086, "answer_count": 2, "score": 2, "last_activity_date": 1461779508, "creation_date": 1461698124, "question_id": 36873837, "link": "https://stackoverflow.com/questions/36873837/choose-to-borrow-or-pass-ownership-without-duplicating-code-in-rust", "title": "Choose to borrow or pass ownership without duplicating code in Rust", "body": "<p>I wish I could choose to pass a ref or the thing itself without having to write the same function several times, like this: </p>\n\n<pre><code>use std::ops::Add;\n\n#[derive(Debug)]\nstruct Point {\n    x: i32,\n    y: i32,\n}\n\npub trait Add1&lt;RHS=Self&gt; {\n    type Output;\n    fn add1(&amp;self, rhs: &amp;RHS) -&gt; Self::Output;\n}\n\n\n\nimpl Add for Point {\n    type Output = Point;\n    fn add(self, other: Point) -&gt; Point {\n        Point { x: self.x + other.x, y: self.y + other.y }\n    }\n}\n\nimpl Add1 for Point {\n    type Output = Point;\n    fn add1(&amp;self, other: &amp;Point) -&gt; Point {\n        Point { x: self.x + other.x, y: self.y + other.y }\n    }\n}\n\nfn main() {\n    let p1 = Point { x: 1, y: 0 };\n    let p2 = Point { x: 2, y: 3 };\n    let p4 = p1.add1(&amp;p2);\n    let p3 = p1 + p2;\n    println!(\"{:?}\", p3);\n    println!(\"{:?}\", p4);\n}\n</code></pre>\n\n<p>How can avoid this kind of redundancy?</p>\n"}, {"tags": ["http", "ssh", "tcp", "rust", "tunnel"], "comments": [{"owner": {"reputation": 598, "user_id": 1826241, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/2aaac949383a1f98d77696b8e80b9fe4?s=128&d=identicon&r=PG", "display_name": "dlukes", "link": "https://stackoverflow.com/users/1826241/dlukes"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1461676195, "post_id": 36865667, "comment_id": 61298955, "body": "Thanks, you&#39;re right, better keep focus :)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1461676440, "post_id": 36865667, "comment_id": 61299148, "body": "I&#39;m having trouble getting the code to run locally, but <code>vec![0; 8192]</code> is suspicious. This creates a vector with many zeroes. if you read one byte from the socket, there will still be 8191 zeroes following it in the buffer. When you write that back out, you are writing all those zeroes, which the remote side has to deal with. You should only be sending the data you read."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1461677362, "post_id": 36865667, "comment_id": 61299860, "body": "Additionally, you probably need to read the input until the HTTP headers are complete (<code>\\r\\n\\r\\n</code>, IIRC), then send that upstream."}, {"owner": {"reputation": 598, "user_id": 1826241, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/2aaac949383a1f98d77696b8e80b9fe4?s=128&d=identicon&r=PG", "display_name": "dlukes", "link": "https://stackoverflow.com/users/1826241/dlukes"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1461677523, "post_id": 36865667, "comment_id": 61300000, "body": "re: <code>vec![0; 8192]</code>: That sounds like a trail! I mistakenly thought they just went away (or rather, that <code>stream.read()</code> truncated the pre-allocated vector if it turned out to be too long) -- simply because when I log the request to STDOUT, they&#39;re gone. But now you mention it, that&#39;s probably because the string gets truncated at the first null by the terminal emulator? I&#39;ll look into it tonight and report back."}, {"owner": {"reputation": 598, "user_id": 1826241, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/2aaac949383a1f98d77696b8e80b9fe4?s=128&d=identicon&r=PG", "display_name": "dlukes", "link": "https://stackoverflow.com/users/1826241/dlukes"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1461677922, "post_id": 36865667, "comment_id": 61300325, "body": "re: <code>\\r\\n\\r\\n</code>: Right again, this was just a quick and dirty way to pre-allocate more than enough for a typical HTTP request, since I thought (again, mistakenly) that the extra nulls were getting thrown away. The requests for the resources that turn up blank aren&#39;t getting truncated though (according to the log), so it sounds more like a case of the extra nulls messing things up rather than headers missing."}, {"owner": {"reputation": 598, "user_id": 1826241, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/2aaac949383a1f98d77696b8e80b9fe4?s=128&d=identicon&r=PG", "display_name": "dlukes", "link": "https://stackoverflow.com/users/1826241/dlukes"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1462022368, "post_id": 36865667, "comment_id": 61468465, "body": "@Shepmaster So it turns out I was approaching the entire thing too naively :) Getting rid of the nulls in the request got me started, but there&#39;s more. Basically, I need to be smarter than waiting for the end of the streams -- when they&#39;re keep-alive, they won&#39;t close automatically, so I need to partially parse the HTTP headers and detect the end of the response based on that. Would you like to close this with an answer to this general effect? I&#39;d be happy to accept it, I would&#39;ve gotten nowhere without your help."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1462022444, "post_id": 36865667, "comment_id": 61468493, "body": "nah. You figured it out, I just gave clues. Go ahead and self-answer. That is what I was (poorly) referring to when saying you should look for the end of the headers though."}, {"owner": {"reputation": 598, "user_id": 1826241, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/2aaac949383a1f98d77696b8e80b9fe4?s=128&d=identicon&r=PG", "display_name": "dlukes", "link": "https://stackoverflow.com/users/1826241/dlukes"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1462031544, "post_id": 36865667, "comment_id": 61471571, "body": "In that case I think I&#39;ll wait until I have some fully working code to post. If you change your mind in the meantime though, don&#39;t hesitate!"}], "answers": [{"tags": [], "owner": {"reputation": 598, "user_id": 1826241, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/2aaac949383a1f98d77696b8e80b9fe4?s=128&d=identicon&r=PG", "display_name": "dlukes", "link": "https://stackoverflow.com/users/1826241/dlukes"}, "is_accepted": true, "score": 1, "last_activity_date": 1465558147, "creation_date": 1465558147, "answer_id": 37747123, "question_id": 36865667, "link": "https://stackoverflow.com/questions/36865667/tcp-tunnel-over-ssh-in-rust/37747123#37747123", "title": "TCP tunnel over SSH in Rust", "body": "<p><strong>tl;dr</strong>: use Go and its networking libraries for this particular task</p>\n\n<p>Turns out my very rudimentary understanding of how HTTP works may be at fault here (I initially thought I could just shovel data back and forth over the ssh connection, but I haven't been able to achieve that -- if someone knows of a way to do this, I'm still curious!). See some of the suggestions in the comments, but basically it boils down to the intricacies of how HTTP connections are initiated, kept alive and closed. I tried using the <a href=\"https://github.com/hyperium/hyper\" rel=\"nofollow\">hyper</a> crate to abstract away these details, but it turns out that the ssh2 crate (like the underlying libssh2) is not threadsafe, which makes it impossible to use the ssh Session in hyper handlers.</p>\n\n<p>At this point, I decided there's no <em>simple</em>, <em>high-level</em> way for a <em>beginner</em> to achieve this in Rust (I'd have to do some low-level plumbing first, and since I can't do that reliably and idiomatically, I figured it's not worth doing at all). So I ended up forking this <a href=\"https://github.com/SommerEngineering/SSHTunnel\" rel=\"nofollow\">SSHTunnel</a> repository written in Go, where library support for this particular task is readily available, and my solution to the Cloud9 setup described in the OP can be found <a href=\"https://github.com/dlukes/Ground8\" rel=\"nofollow\">here</a>.</p>\n"}], "owner": {"reputation": 598, "user_id": 1826241, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/2aaac949383a1f98d77696b8e80b9fe4?s=128&d=identicon&r=PG", "display_name": "dlukes", "link": "https://stackoverflow.com/users/1826241/dlukes"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1914, "favorite_count": 1, "accepted_answer_id": 37747123, "answer_count": 1, "score": 7, "last_activity_date": 1465558147, "creation_date": 1461675493, "last_edit_date": 1461676149, "question_id": 36865667, "link": "https://stackoverflow.com/questions/36865667/tcp-tunnel-over-ssh-in-rust", "title": "TCP tunnel over SSH in Rust", "body": "<p>I'm trying to write a small program in Rust to accomplish basically what <code>ssh -L 5000:localhost:8080</code> does: establish a tunnel between <code>localhost:5000</code> on my machine and <code>localhost:8080</code> on a remote machine, so that if an HTTP server is running on port 8080 on the remote, I can access it on my local via <code>localhost:5000</code>, bypassing the remote's firewall which might be blocking external access to 8080.</p>\n\n<p>I realize <code>ssh</code> already does exactly this and reliably, this is a learning project, plus I might be adding some functionality if I get it to work :) This is a barebones (no threading, no error handling) version of what I've come up with so far (should compile on Rust 1.8):</p>\n\n<pre><code>extern crate ssh2; // see http://alexcrichton.com/ssh2-rs/\n\nuse std::io::Read;\nuse std::io::Write;\nuse std::str;\nuse std::net;\n\nfn main() {\n  // establish SSH session with remote host\n  println!(\"Connecting to host...\");\n  // substitute appropriate value for IPv4\n  let tcp = net::TcpStream::connect(\"&lt;IPv4&gt;:22\").unwrap();\n  let mut session = ssh2::Session::new().unwrap();\n  session.handshake(&amp;tcp).unwrap();\n  // substitute appropriate values for username and password\n  // session.userauth_password(\"&lt;username&gt;\", \"&lt;password&gt;\").unwrap();\n  assert!(session.authenticated());\n  println!(\"SSH session authenticated.\");\n\n  // start listening for TCP connections\n  let listener = net::TcpListener::bind(\"localhost:5000\").unwrap();\n  println!(\"Started listening, ready to accept\");\n  for stream in listener.incoming() {\n    println!(\"===============================================================================\");\n\n    // read the incoming request\n    let mut stream = stream.unwrap();\n    let mut request = vec![0; 8192];\n    let read_bytes = stream.read(&amp;mut request).unwrap();\n    println!(\"REQUEST ({} BYTES):\\n{}\", read_bytes, str::from_utf8(&amp;request).unwrap());\n\n    // send the incoming request over ssh on to the remote localhost and port\n    // where an HTTP server is listening\n    let mut channel = session.channel_direct_tcpip(\"localhost\", 8080, None).unwrap();\n    channel.write(&amp;request).unwrap();\n\n    // read the remote server's response (all of it, for simplicity's sake)\n    // and forward it to the local TCP connection's stream\n    let mut response = Vec::new();\n    let read_bytes = channel.read_to_end(&amp;mut response).unwrap();\n    stream.write(&amp;response).unwrap();\n    println!(\"SENT {} BYTES AS RESPONSE\", read_bytes);\n  };\n}\n</code></pre>\n\n<p>As it turns out, this kind of works, but not quite. E.g. if the app running on the remote server is the <a href=\"https://github.com/c9/core\" rel=\"noreferrer\">Cloud9 IDE Core/SDK</a>, the main HTML page gets loaded and some resources as well, but <strong>requests for other resources</strong> (<code>.js</code>, <code>.css</code>) <strong>systematically come back empty</strong> (whether requested by the main page or directly), i.e. <strong>nothing is read in the call to <code>channel.read_to_end()</code></strong>. Other (simpler?) web apps or static sites seem to work fine. Crucially, when using <code>ssh -L 5000:localhost:8080</code>, even Cloud9 Core works fine.</p>\n\n<p>I expect that other more complex apps will also be affected. I see various potential areas where the bug might be lurking in my code:</p>\n\n<ol>\n<li>Rust's stream reading/writing APIs: maybe the call to <code>channel.read_to_end()</code> works differently than I think and just accidentally does the right thing for some kinds of requests?</li>\n<li>HTTP: maybe I need to tinker with HTTP headers before forwarding the request to the remote server? or maybe I'm giving up to soon on the response stream by just calling <code>channel.read_to_end()</code>?</li>\n<li>Rust itself -- it's my first relatively earnest attempt at learning a systems programming language</li>\n</ol>\n\n<p>I've already tried playing with some of the above, but I'll appreciate any  suggestions of paths to explore, preferably along with an explanation as to why that might be the problem :)</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "edited": false, "score": 1, "creation_date": 1461614707, "post_id": 36848132, "comment_id": 61269021, "body": "Instead of looking at argv[0] you might want to use <code>std::env::current_exe()</code>."}], "answers": [{"comments": [{"owner": {"reputation": 3039, "user_id": 2851815, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/37MCt.png?s=128&g=1", "display_name": "\u043d\u0430\u0431\u0438\u044f\u0447\u043b\u044d\u0432\u044d\u043b\u0438", "link": "https://stackoverflow.com/users/2851815/%d0%bd%d0%b0%d0%b1%d0%b8%d1%8f%d1%87%d0%bb%d1%8d%d0%b2%d1%8d%d0%bb%d0%b8"}, "edited": false, "score": 0, "creation_date": 1461613789, "post_id": 36848555, "comment_id": 61268464, "body": "<code>functional-programming.txt</code>"}, {"owner": {"reputation": 87, "user_id": 136238, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/644531836c501d3228397b22619dd2dc?s=128&d=identicon&r=PG", "display_name": "vvv", "link": "https://stackoverflow.com/users/136238/vvv"}, "edited": false, "score": 0, "creation_date": 1461616429, "post_id": 36848555, "comment_id": 61270022, "body": "I would expect <code>env::args().next()</code> never to fail."}, {"owner": {"reputation": 87, "user_id": 136238, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/644531836c501d3228397b22619dd2dc?s=128&d=identicon&r=PG", "display_name": "vvv", "link": "https://stackoverflow.com/users/136238/vvv"}, "edited": false, "score": 0, "creation_date": 1461616588, "post_id": 36848555, "comment_id": 61270116, "body": "But, according to <a href=\"https://doc.rust-lang.org/std/env/fn.args.html\" rel=\"nofollow noreferrer\">documentation</a>, it may:  &gt; The first element is traditionally the path to the executable, but it can be set to arbitrary text, and may not even exist. This means this property should not be relied upon for security purposes."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 87, "user_id": 136238, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/644531836c501d3228397b22619dd2dc?s=128&d=identicon&r=PG", "display_name": "vvv", "link": "https://stackoverflow.com/users/136238/vvv"}, "edited": false, "score": 1, "creation_date": 1461616835, "post_id": 36848555, "comment_id": 61270276, "body": "@vvv and <a href=\"http://doc.rust-lang.org/std/env/fn.current_exe.html\" rel=\"nofollow noreferrer\">the docs for <code>current_exe</code></a> go on to add: <i>Some errors can include, but not be limited to, filesystem operations failing or general syscall failures.</i>"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 9, "last_activity_date": 1461674692, "last_edit_date": 1495539922, "creation_date": 1461609598, "answer_id": 36848555, "question_id": 36848132, "link": "https://stackoverflow.com/questions/36848132/how-to-get-the-name-of-current-program-without-the-directory-part/36848555#36848555", "title": "How to get the name of current program without the directory part?", "body": "<p>If you don't care about <em>why</em> you can't get the program name, you can handle all the potential errors with a judicious mix of <a href=\"http://doc.rust-lang.org/std/option/enum.Option.html#method.map\" rel=\"nofollow noreferrer\"><code>map</code></a> and <a href=\"http://doc.rust-lang.org/std/option/enum.Option.html#method.and_then\" rel=\"nofollow noreferrer\"><code>and_then</code></a>. Additionally, return an <code>Option</code> to indicate possible failure:</p>\n\n<pre><code>use std::env;\nuse std::path::Path;\nuse std::ffi::OsStr;\n\nfn prog() -&gt; Option&lt;String&gt; {\n    env::args().next()\n        .as_ref()\n        .map(Path::new)\n        .and_then(Path::file_name)\n        .and_then(OsStr::to_str)\n        .map(String::from)\n}\n\nfn main() {\n    println!(\"{:?}\", prog());\n}\n</code></pre>\n\n<hr>\n\n<p>If you wanted to follow <a href=\"https://stackoverflow.com/questions/36848132/how-to-get-the-name-of-current-program-without-the-directory-part/36848555?noredirect=1#comment61269021_36848132\">delnan's awesome suggestion</a> to use <a href=\"http://doc.rust-lang.org/std/env/fn.current_exe.html\" rel=\"nofollow noreferrer\"><code>std::env::current_exe</code></a> (which I just learned about!), replace <code>env::args().next()</code> with <code>env::current_exe().ok()</code>.</p>\n\n<hr>\n\n<p>If you do want to know why you can't get the program name (and knowing why  is usually the first step to fixing a problem), then check out <a href=\"https://stackoverflow.com/a/36859137/155423\">ker's answer</a>.</p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1461674880, "post_id": 36859137, "comment_id": 61297885, "body": "FYI, there&#39;s the <a href=\"https://github.com/tailhook/quick-error\" rel=\"nofollow noreferrer\">quick-error crate</a> that provides a macro to construct these error types along with the <code>From</code> implementations. Quite nice."}], "tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": false, "score": 5, "last_activity_date": 1461676002, "last_edit_date": 1461676002, "creation_date": 1461658613, "answer_id": 36859137, "question_id": 36848132, "link": "https://stackoverflow.com/questions/36848132/how-to-get-the-name-of-current-program-without-the-directory-part/36859137#36859137", "title": "How to get the name of current program without the directory part?", "body": "<p>You can also get rid of the unwraps and still report all error causes properly (instead of munching them into a \"something failed\" <code>None</code>). You aren't even required to specify the full paths to the conversion methods:</p>\n\n<pre><code>fn prog() -&gt; Result&lt;String, ProgError&gt; {\n    let path = try!(env::current_exe());\n    let name = try!(path.file_name().ok_or(ProgError::NoFile));\n    let s_name = try!(name.to_str().ok_or(ProgError::NotUtf8));\n    Ok(s_name.to_owned())\n}\n</code></pre>\n\n<p>Together with the future questionmark operator this can also be written as a single dot call chain:</p>\n\n<pre><code>fn prog() -&gt; Result&lt;String, ProgError&gt; {\n    Ok(env::current_exe()?\n        .file_name().ok_or(ProgError::NoFile)?\n        .to_str().ok_or(ProgError::NotUtf8)?\n        .to_owned())\n}\n</code></pre>\n\n<p>Of course this has the prerequisite of the <code>ProgError</code> type:</p>\n\n<pre><code>use std::io::Error;\n\n#[derive(Debug)]\nenum ProgError {\n    NoFile,\n    NotUtf8,\n    Io(Error),\n}\n\nimpl From&lt;Error&gt; for ProgError {\n    fn from(err: Error) -&gt; ProgError {\n        ProgError::Io(err)\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=44b4d4cabea10deda533bfdcb39a6db5&amp;version=nightly&amp;backtrace=0\" rel=\"nofollow\">try it out on the Playground</a></p>\n"}, {"tags": [], "owner": {"reputation": 1088, "user_id": 795856, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/fd6e8131cf36b23deb1e54a4d297da07?s=128&d=identicon&r=PG", "display_name": "imbolc", "link": "https://stackoverflow.com/users/795856/imbolc"}, "is_accepted": false, "score": 1, "last_activity_date": 1569491092, "creation_date": 1569491092, "answer_id": 58113997, "question_id": 36848132, "link": "https://stackoverflow.com/questions/36848132/how-to-get-the-name-of-current-program-without-the-directory-part/58113997#58113997", "title": "How to get the name of current program without the directory part?", "body": "<p>Just one more <code>Option</code> version :)</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn prog() -&gt; Option&lt;String&gt; {\n    std::env::current_exe()\n        .ok()?\n        .file_name()?\n        .to_str()?\n        .to_owned()\n        .into()\n}\n</code></pre>\n"}], "owner": {"reputation": 87, "user_id": 136238, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/644531836c501d3228397b22619dd2dc?s=128&d=identicon&r=PG", "display_name": "vvv", "link": "https://stackoverflow.com/users/136238/vvv"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2112, "favorite_count": 2, "answer_count": 3, "score": 4, "last_activity_date": 1569491092, "creation_date": 1461608143, "last_edit_date": 1461608885, "question_id": 36848132, "link": "https://stackoverflow.com/questions/36848132/how-to-get-the-name-of-current-program-without-the-directory-part", "title": "How to get the name of current program without the directory part?", "body": "<p>In Bash this would be <code>${0##*/}</code>.</p>\n\n<pre><code>use std::env;\nuse std::path::Path;\n\nfn prog() -&gt; String {\n    let prog = env::args().next().unwrap();\n    String::from(Path::new(&amp;prog).file_name().unwrap().to_str().unwrap())\n}\n\nfn main() {\n    println!(\"{}\", prog());\n}\n</code></pre>\n\n<p>Is there a better way? (I particularly dislike those numerous <code>unwrap()</code>s.)</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 41983, "user_id": 866732, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09f0253204000d6083ed1de21afc6fd?s=128&d=identicon&r=PG", "display_name": "WiSaGaN", "link": "https://stackoverflow.com/users/866732/wisagan"}, "edited": false, "score": 1, "creation_date": 1461593922, "post_id": 36843083, "comment_id": 61256005, "body": "You can try <code>&amp;&#39;a ScheduledItem&lt;&#39;a&gt;</code>"}], "answers": [{"tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": true, "score": 2, "last_activity_date": 1461595490, "last_edit_date": 1461595490, "creation_date": 1461593920, "answer_id": 36843238, "question_id": 36843083, "link": "https://stackoverflow.com/questions/36843083/wrong-number-of-lifetime-parameters-when-returning-vec-of-structs-with-reference/36843238#36843238", "title": "Wrong number of lifetime parameters when returning Vec of structs with reference", "body": "<p>Your struct has a generic lifetime parameter. In Rust you need to specify all generic parameters (e.g. you can't return a <code>Vec</code>, just a <code>Vec&lt;T&gt;</code>). So your return type should be <code>Vec&lt;(u32, ScheduledItem&lt;'a&gt;)&gt;</code> and your argument type should be <code>&amp;[ScheduledItem&lt;'a&gt;]</code>, since there's no benefit of <code>&amp;Vec&lt;T&gt;</code> over <code>&amp;[T]</code></p>\n\n<blockquote>\n  <p>Isn't <code>&amp;'a</code> enough?</p>\n</blockquote>\n\n<p><code>&amp;'a T</code> specifies that it's a reference with the lifetime <code>'a</code> to a <code>T</code>, meaning that the <em>object</em> it is pointing to doesn't outlive <code>'a</code>.</p>\n\n<p><code>T&lt;'a&gt;</code> on the other hand specifies that your <code>T&lt;'a&gt;</code> <em>type</em> doesn't live longer than <code>'a</code>. Which in turn means that any object of that type won't outlive <code>'a</code> and that the object cannot contain references to objects that live shorter than <code>'a</code>.</p>\n"}], "owner": {"reputation": 2359, "user_id": 1837084, "user_type": "registered", "accept_rate": 59, "profile_image": "https://i.stack.imgur.com/67dya.jpg?s=128&g=1", "display_name": "Oleg Antonyan", "link": "https://stackoverflow.com/users/1837084/oleg-antonyan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 250, "favorite_count": 0, "accepted_answer_id": 36843238, "answer_count": 1, "score": 1, "last_activity_date": 1461595490, "creation_date": 1461593509, "question_id": 36843083, "link": "https://stackoverflow.com/questions/36843083/wrong-number-of-lifetime-parameters-when-returning-vec-of-structs-with-reference", "title": "Wrong number of lifetime parameters when returning Vec of structs with reference", "body": "<p>I have a struct with a reference in it:</p>\n\n<pre><code>pub struct ScheduledItem&lt;'a&gt; {\n    pub item: &amp;'a item::Item,\n    pub timeshift: i32\n}\n</code></pre>\n\n<p>Now I want to write a function which return a Vec of references to this struct:</p>\n\n<pre><code>pub fn items_with_times&lt;'a&gt;(items: &amp;Vec&lt;ScheduledItem&gt;) -&gt; Vec&lt;(u32, &amp;'a ScheduledItem)&gt; {\n</code></pre>\n\n<p>But what I get is an error:</p>\n\n<pre><code>src/scheduled_item.rs:25:74: 25:87 error: wrong number of lifetime parameters: expected 1, found 0 [E0107]\nsrc/scheduled_item.rs:25 pub fn items_with_times&lt;'a&gt;(items: &amp;Vec&lt;ScheduledItem&gt;) -&gt; Vec&lt;(u32, &amp;'a ScheduledItem)&gt; {\n                                                                                                  ^~~~~~~~~~~~~\n</code></pre>\n\n<p>Isn't <code>&amp;'a</code> enough? What's wrong here?</p>\n"}, {"tags": ["types", "rust", "monads"], "comments": [{"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1461580244, "post_id": 36837710, "comment_id": 61246157, "body": "Your original code doesn&#39;t work because <code>and_then</code> expects a <code>Result</code>."}], "answers": [{"tags": [], "owner": {"reputation": 187800, "user_id": 320615, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/65c80e12b6a33913538653f6d4ef1277?s=128&d=identicon&r=PG", "display_name": "Dogbert", "link": "https://stackoverflow.com/users/320615/dogbert"}, "is_accepted": false, "score": 3, "last_activity_date": 1461580330, "creation_date": 1461580330, "answer_id": 36838034, "question_id": 36837710, "link": "https://stackoverflow.com/questions/36837710/using-into-inside-a-monad-pipeline/36838034#36838034", "title": "Using into() inside a monad pipeline", "body": "<blockquote>\n  <p>The problem I'm running into is that <code>map()</code> doesn't know which type it should be outputting.</p>\n</blockquote>\n\n<p>That's not the problem.</p>\n\n<p>The error is:</p>\n\n<pre><code>&lt;anon&gt;:16:25: 16:63 error: mismatched types:\n expected `core::result::Result&lt;_, ()&gt;`,\n    found `()`\n(expected enum `core::result::Result`,\n    found ()) [E0308]\n&lt;anon&gt;:16         .and_then(|enm| if enm == MyType::A { println!(\"A\"); });\n</code></pre>\n\n<p>That's because <code>Result::and_then</code>'s type is</p>\n\n<pre><code>fn and_then&lt;U, F: FnOnce(T) -&gt; Result&lt;U, E&gt;&gt;(self, op: F) -&gt; Result&lt;U, E&gt;\n</code></pre>\n\n<p>So it expects the function to return a <code>Result&lt;U, E&gt;</code>. It's meant to be used to chain functions that return a <code>Result</code> and to return the first encountered error, if it encounters any.</p>\n\n<p>If you just want to execute some code if you have an <code>Ok(_)</code>, you should use <code>if let</code> or <code>match</code>:</p>\n\n<pre><code>fn main() {\n    let a: Result&lt;i32, ()&gt; = Ok(0);\n    if let Ok(MyType::A) = a.map(|int| int.into()) {\n        println!(\"A\");\n    }\n}\n</code></pre>\n\n<p>prints</p>\n\n<pre><code>A\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": true, "score": 6, "last_activity_date": 1461580352, "creation_date": 1461580352, "answer_id": 36838044, "question_id": 36837710, "link": "https://stackoverflow.com/questions/36837710/using-into-inside-a-monad-pipeline/36838044#36838044", "title": "Using into() inside a monad pipeline", "body": "<p>You should not be implementing <code>Into</code>, you should be implementing <code>From</code>, which automatically gives you an <code>Into</code> impl. Then you can call <code>a.map(MyType::from)</code> and everything works:</p>\n\n<pre><code>impl From&lt;i32&gt; for MyType {\n    fn from(i: i32) -&gt; MyType {\n        match i {\n            0 =&gt; MyType::A,\n            _ =&gt; MyType::B\n        }\n    }\n}\n\nfn main() {\n    let a: Result&lt;i32, ()&gt; = Ok(0);\n    a.map(MyType::from)\n        .and_then(|enm| if enm == MyType::A { Err(()) } else { Ok(enm) } );\n}\n</code></pre>\n\n<p>alternatively you can call <code>a.map(Into::&lt;MyType&gt;::into)</code>, but that's rather verbose. There's a reason for the <code>From</code>/<code>Into</code> duality, it's explained in the <a href=\"https://doc.rust-lang.org/std/convert/index.html\" rel=\"noreferrer\"><code>std::convert</code> module docs</a></p>\n"}], "owner": {"reputation": 1091, "user_id": 3745005, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/yvS7i.png?s=128&g=1", "display_name": "andrey", "link": "https://stackoverflow.com/users/3745005/andrey"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 62, "favorite_count": 0, "accepted_answer_id": 36838044, "answer_count": 2, "score": 3, "last_activity_date": 1461580352, "creation_date": 1461579372, "question_id": 36837710, "link": "https://stackoverflow.com/questions/36837710/using-into-inside-a-monad-pipeline", "title": "Using into() inside a monad pipeline", "body": "<p>I'm basically trying to convert a value inside a pipeline like so:</p>\n\n<pre><code>#[derive(PartialEq)]\nenum MyType { A, B }\n\nimpl Into&lt;MyType&gt; for i32 {\n    fn into(self) -&gt; MyType {\n        match self {\n            0 =&gt; MyType::A,\n            _ =&gt; MyType::B\n        }\n    }\n}\n\nfn main() {\n    let a: Result&lt;i32, ()&gt; = Ok(0);\n    a.map(|int| int.into())\n        .and_then(|enm| if enm == MyType::A { println!(\"A\"); });\n}\n</code></pre>\n\n<p>The problem I'm running into is that <code>map()</code> doesn't know which type it should be outputting.</p>\n\n<p>Other things I've tried which didn't work:</p>\n\n<pre><code>a.map(|int| if int.into() as MyType == MyType::A { println!(\"A\"); });\n\na.map(|int| int.into::&lt;MyType&gt;())\n        .and_then(|enm| if enm == MyType::A { println!(\"A\"); });\n</code></pre>\n\n<p>This does work, but feels unnecessarily complex:</p>\n\n<pre><code>a.map(|int| {\n    let enm: MyType = int.into();\n    if enm == MyType::A { println!(\"A\"); }\n});\n</code></pre>\n\n<p>Is there a better way to do this?</p>\n"}, {"tags": ["multithreading", "rust"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1461574536, "post_id": 36835675, "comment_id": 61242395, "body": "I asked pretty much exactly the same without satisfying answer :( <a href=\"http://stackoverflow.com/questions/35093869/kill-child-process-while-waiting-for-it\" title=\"kill child process while waiting for it\">stackoverflow.com/questions/35093869/&hellip;</a>"}, {"owner": {"reputation": 41983, "user_id": 866732, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09f0253204000d6083ed1de21afc6fd?s=128&d=identicon&r=PG", "display_name": "WiSaGaN", "link": "https://stackoverflow.com/users/866732/wisagan"}, "edited": false, "score": 0, "creation_date": 1461576040, "post_id": 36835675, "comment_id": 61243345, "body": "I&#39;m afraid there is no non-blocking wait or wait with timeout for child termination. You can consider other IPC mechanisms to signal the termination of a child, and have parent wait on both that IPC mechanism and the kill message."}, {"owner": {"reputation": 1, "user_id": 6250352, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0a4953d7de468a281413c63359c022b3?s=128&d=identicon&r=PG&f=1", "display_name": "Boop", "link": "https://stackoverflow.com/users/6250352/boop"}, "edited": false, "score": 0, "creation_date": 1461578663, "post_id": 36835675, "comment_id": 61245092, "body": "ah! I missed that in my searching somehow :( sad news, I&#39;ll have to dig deeper."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1461588504, "post_id": 36835675, "comment_id": 61251781, "body": "@LukasKalbertodt do you think the two questions are duplicates?"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1461589288, "post_id": 36835675, "comment_id": 61252402, "body": "@Shepmaster Yes I think so. I wasn&#39;t able to flag it since my thread doesn&#39;t have an accepted answer. Boop: There is more information <a href=\"https://github.com/rust-lang/rfcs/issues/1294\" rel=\"nofollow noreferrer\">here</a> and <a href=\"https://github.com/passcod/cargo-watch/issues/25\" rel=\"nofollow noreferrer\">here</a>. There were also <a href=\"https://github.com/rust-lang/rfcs/pull/1359\" rel=\"nofollow noreferrer\">this</a> RFC which added two methods. Maybe those are helpful."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1461589349, "post_id": 36835675, "comment_id": 61252454, "body": "@LukasKalbertodt ah, good point. We&#39;ll have to watch both and hope for an answer on one :-)"}, {"owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "edited": false, "score": 0, "creation_date": 1461690209, "post_id": 36835675, "comment_id": 61309524, "body": "I have write an answer <a href=\"http://stackoverflow.com/questions/35093869/kill-child-process-while-waiting-for-it\" title=\"kill child process while waiting for it\">stackoverflow.com/questions/35093869/&hellip;</a>"}], "owner": {"reputation": 1, "user_id": 6250352, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0a4953d7de468a281413c63359c022b3?s=128&d=identicon&r=PG&f=1", "display_name": "Boop", "link": "https://stackoverflow.com/users/6250352/boop"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 52, "favorite_count": 0, "closed_date": 1461965289, "answer_count": 0, "score": 0, "last_activity_date": 1461574336, "creation_date": 1461573678, "last_edit_date": 1461574336, "question_id": 36835675, "link": "https://stackoverflow.com/questions/36835675/interfacing-with-a-stdprocesschild-from-different-threads", "closed_reason": "Duplicate", "title": "Interfacing with a std::process::Child from different threads", "body": "<p>I'm making a little supervisor to manage long-running processes. Currently I'm using <code>std::process::Command</code> with <code>.spawn()</code> to get a <code>std::process::Child</code>.</p>\n\n<p>What I want to achieve is: have one thread <code>.wait()</code>ing on this Child (eventually returning a message on a channel), and another waiting on a channel for a \"KILL\" message, which will then call <code>.kill()</code> on the Child.</p>\n\n<p>Child, however, isn't <code>Clone</code>, and both <code>.wait()</code> and <code>.kill()</code> are <code>&amp;mut self</code>... so am I out of luck? I don't think I can use mutexes since the <code>.wait()</code> needs to block.</p>\n\n<p>Current PoC is here...</p>\n\n<pre><code>use std::process::{Command};\n\nfn main() {\n    let child = Command::new(\"long_running_process\")\n                        .arg(\"something_something\")\n                        .spawn().unwrap();\n\n    // now, I want to have two threads; one doing child.wait(), one waiting on a mpsc or ZMQ\n    // channel to get a \"KILL\" message.\n\n    // This doesn't work.\n    {\n        let sub_child = child.clone();\n        std::thread::spawn(move || {\n            sub_child.wait();\n        });\n    }\n    // repro.rs:13:31: 13:36 error: no method named `clone` found for type `std::process::Child` in the current scope\n    // repro.rs:13         let sub_child = child.clone();\n    //                                           ^~~~~\n    // repro.rs:15:13: 15:29 error: the type of this value must be known in this context\n    // repro.rs:15             sub_child.wait();\n    //                         ^~~~~~~~~~~~~~~~\n}\n</code></pre>\n"}, {"tags": ["rust", "function-pointers", "traits"], "answers": [{"tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": true, "score": 3, "last_activity_date": 1461575633, "creation_date": 1461575633, "answer_id": 36836328, "question_id": 36834633, "link": "https://stackoverflow.com/questions/36834633/can-a-trait-be-passed-as-a-fn-reference-or-closure/36836328#36836328", "title": "Can a trait be passed as a Fn reference or closure", "body": "<p>This is not possible on stable Rust, because the exact <a href=\"https://doc.rust-lang.org/std/ops/trait.Fn.html\" rel=\"nofollow\">definition of the <code>Fn</code></a> trait is unstable.</p>\n\n<p>On nightly Rust you can implement the <code>Fn</code> traits, but only for concrete types, so it's not very helpful.</p>\n\n<pre><code>impl&lt;'a&gt; std::ops::Fn&lt;()&gt; for MyRunnable {\n    extern \"rust-call\" fn call(&amp;self, ():()) {\n        self.run();\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 366, "user_id": 1576773, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/69471561f6a3b2bde06c5f74f47106ad?s=128&d=identicon&r=PG", "display_name": "Azriel", "link": "https://stackoverflow.com/users/1576773/azriel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 64, "favorite_count": 0, "accepted_answer_id": 36836328, "answer_count": 1, "score": 0, "last_activity_date": 1461575633, "creation_date": 1461570149, "question_id": 36834633, "link": "https://stackoverflow.com/questions/36834633/can-a-trait-be-passed-as-a-fn-reference-or-closure", "title": "Can a trait be passed as a Fn reference or closure", "body": "<p>In rust, you can take in a reference to a <code>Fn</code> as <a href=\"https://doc.rust-lang.org/book/closures.html#taking-closures-as-arguments\" rel=\"nofollow\">documented</a>:</p>\n\n<pre><code>fn call_with_one(some_closure: &amp;Fn(i32) -&gt; i32) -&gt; i32 {\n    some_closure(1)\n}\nlet answer = call_with_one(&amp;|x| x + 2);\n</code></pre>\n\n<p>However I want to write a trait that, if implemented, the Runnable can be passed to anything that expects a <code>Fn()</code>. Is this possible?</p>\n\n<pre><code>trait Runnable {\n    fn run(&amp;self);\n}\n\nstruct MyRunnable;\nimpl Runnable for MyRunnable {\n    fn run(&amp;self) {}\n}\n\nstruct StructThatTakesClosure&lt;'life&gt; {\n    closure_field: &amp;'life Fn(),\n}\n\nfn main() {\n    // is there a way to change the Runnable trait to automatically match the\n    // Fn() interface such that the MyRunnable instance can be passed directly?\n    StructThatTakesClosure { closure_field: &amp;|| MyRunnable.run() };\n}\n</code></pre>\n\n<p>I have tried implementing the 3 normally <code>extern</code> calls as default functions but I didn't manage to get it working.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1461540315, "post_id": 36827436, "comment_id": 61231196, "body": "<i>I have tried loads of different techniques</i> \u2014 you should show some of those attempts. Otherwise all that&#39;s left is to write the code for you."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1461540435, "post_id": 36827436, "comment_id": 61231225, "body": "FWIW, <code>panic!(&quot;nyi&quot;)</code> is idiomatically written <code>unimplemented!()</code>"}], "answers": [{"comments": [{"owner": {"reputation": 1960, "user_id": 549531, "user_type": "registered", "accept_rate": 18, "profile_image": "https://i.stack.imgur.com/qV5qe.png?s=128&g=1", "display_name": "Evgeni Nabokov", "link": "https://stackoverflow.com/users/549531/evgeni-nabokov"}, "edited": false, "score": 0, "creation_date": 1600061102, "post_id": 36827948, "comment_id": 112957671, "body": "Unfortunately your code has nothing to do with removal of a node."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 0, "last_activity_date": 1461526469, "creation_date": 1461526469, "answer_id": 36827948, "question_id": 36827436, "link": "https://stackoverflow.com/questions/36827436/cannot-build-a-delete-function-for-a-binary-search-tree-in-rust-because-the-borr/36827948#36827948", "title": "Cannot build a delete function for a binary search tree in Rust because the borrowed value does not live long enough", "body": "<p>This recursive solution compiles:</p>\n\n<pre><code>use std::cmp::Ordering::{Less,Equal,Greater};\n\ntype Child = Option&lt;Box&lt;Node&gt;&gt;;\n\n#[derive(Debug)]\nstruct Node {\n    val: i32,\n    left: Child,\n    right: Child,\n}\n\n\nimpl Node {\n    fn new(val: i32) -&gt; Node {\n        Node {\n            val: val,\n            left: None,\n            right: None,\n        }\n    }\n\n    fn delete(&amp;mut self, val: i32) {\n        fn find_node_to_delete(node: &amp;mut Node, val: i32) -&gt; Option&lt;&amp;mut Node&gt; {\n            match val.cmp(&amp;node.val) {\n                Less =&gt; {\n                    if let Some(ref mut left) = node.left {\n                        find_node_to_delete(left, val)\n                    } else {\n                        None\n                    }\n                }\n                Equal =&gt; Some(node),\n                Greater =&gt; unimplemented!(),\n            }\n        }\n\n        //find the node for deletion\n        let node = find_node_to_delete(self, val);\n        // once found, check if the node has children and delete accordingly\n    }   \n}\n\nfn main() {\n    let mut node = Node::new(10);\n    node.right = Some(Box::new(Node::new(20)));\n}\n</code></pre>\n"}], "owner": {"reputation": 584, "user_id": 3660618, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/cf9482a9f5ee2aeb70476daf65c42a49?s=128&d=identicon&r=PG&f=1", "display_name": "pezpezpez", "link": "https://stackoverflow.com/users/3660618/pezpezpez"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 366, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1461540250, "creation_date": 1461523771, "last_edit_date": 1461540250, "question_id": 36827436, "link": "https://stackoverflow.com/questions/36827436/cannot-build-a-delete-function-for-a-binary-search-tree-in-rust-because-the-borr", "title": "Cannot build a delete function for a binary search tree in Rust because the borrowed value does not live long enough", "body": "<p>I am struggling to code a delete method for a BST:</p>\n\n<pre><code>use std::cmp::Ordering::{Less,Equal,Greater};\n\ntype Child = Option&lt;Box&lt;Node&gt;&gt;;\n\n#[derive(Debug)]\nstruct Node {\n    val: i32,\n    left: Child,\n    right: Child,\n}\n\n\nimpl Node {\n    fn new(val: i32) -&gt; Node {\n        Node {\n            val: val,\n            left: None,\n            right: None,\n        }\n    }\n\n    fn delete(&amp;mut self, val: i32) {\n        //find the node for deletion\n        let mut node: &amp;mut Node = self;\n        loop {\n            match val.cmp(&amp;self.val) {\n                Less =&gt; {\n                    if self.left.is_some() {\n                        node = &amp;mut (self.left.as_mut().unwrap());\n                    } else {\n                        break;\n                    }\n                }\n                Equal =&gt; break,\n                Greater =&gt; node = panic!(\"nyi\"),\n            }\n        }\n        // once found, check if the node has children and delete accordingly\n    }   \n}\n\nfn main() {\n    let mut node = Node::new(10);\n    node.right = Some(Box::new(Node::new(20)));\n}\n</code></pre>\n\n<p>I have tried loads of different techniques using recursion and iteration but the borrow checker complains. For example:</p>\n\n<pre><code>error: borrowed value does not live long enough\n              node = &amp;mut (self.left.as_mut().unwrap());\n                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n</code></pre>\n\n<p>Is it possible to write a delete function using safe Rust?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 187800, "user_id": 320615, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/65c80e12b6a33913538653f6d4ef1277?s=128&d=identicon&r=PG", "display_name": "Dogbert", "link": "https://stackoverflow.com/users/320615/dogbert"}, "is_accepted": true, "score": 0, "last_activity_date": 1461496741, "creation_date": 1461496741, "answer_id": 36822401, "question_id": 36822135, "link": "https://stackoverflow.com/questions/36822135/error-non-scalar-cast-coreoptionoptioni32-as-usize/36822401#36822401", "title": "error: non-scalar cast: `core::option::Option&lt;i32&gt;` as `usize`", "body": "<p><code>Vec::pop()</code> returns an <code>Option&lt;T&gt;</code> because if the Vec is empty, there's no value present to pop. If you're sure your Vec contains atleast 1 value before you call <code>Vec::pop()</code>, you can use <code>Option::unwrap()</code>, which will convert your <code>Option&lt;i32&gt;</code> to <code>i32</code> (and panic if <code>Vec::pop</code> returned <code>None</code> because the Vec was empty).</p>\n\n<pre><code>ans_vertex = s.pop().unwrap() as usize;\n</code></pre>\n\n<p>You can also choose to handle the cases differently using <code>match</code> or <code>if let</code>:</p>\n\n<pre><code>if let Some(popped) = s.pop() {\n    // Successfully popped `popped`. `popped` here is an i32.\n} else {\n    // `s` was empty.\n}\n</code></pre>\n"}], "owner": {"reputation": 35, "user_id": 5231791, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bb37f78587db40fca35aa10821e1d2b6?s=128&d=identicon&r=PG&f=1", "display_name": "singh", "link": "https://stackoverflow.com/users/5231791/singh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 262, "favorite_count": 0, "accepted_answer_id": 36822401, "answer_count": 1, "score": 0, "last_activity_date": 1461507896, "creation_date": 1461495052, "last_edit_date": 1461507896, "question_id": 36822135, "link": "https://stackoverflow.com/questions/36822135/error-non-scalar-cast-coreoptionoptioni32-as-usize", "title": "error: non-scalar cast: `core::option::Option&lt;i32&gt;` as `usize`", "body": "<p>I am new to Rust. My code is given below:</p>\n\n<pre><code>use std::*;\n\nfn DFS(A: i32, grid: &amp;mut [[i32; 500]; 500], visited: &amp;mut [i32; 500]) -&gt; (usize, usize) {\n    let mut s = Vec::new();\n    s.push(A);\n    visited[A as usize] = 1;\n    let mut flag;\n    let mut max_height = 0;\n    let mut ans_vertex: usize = A as usize;\n    let mut x;\n\n    'outer: while let Some(top) = s.pop() {\n        s.push(top);\n        x = top as usize;\n\n        flag = 0;\n        'inner: for i in 1..500 {\n            if visited[grid[x][i] as usize] == 0 &amp;&amp; grid[x][i] != 0 {\n                flag = 1;\n                s.push(grid[x][i]);\n                visited[grid[x][i] as usize] = 1;\n                break 'outer;\n            }\n        }\n        if s.len() &gt; max_height {\n            max_height = s.len();\n            ans_vertex = s.pop() as usize;\n        }\n        if flag != 0 {\n            s.pop();\n        }\n    }\n    println!(\"{}, {}\", ans_vertex, max_height);\n    return (ans_vertex, max_height);\n}\n\nfn fc(grid: &amp;mut [[i32; 500]; 500]) {\n    for i in 1..500 {\n        for j in 1..500 {\n            grid[i][j] = 0;\n        }\n    }\n\n    grid[1][2] = 1;\n    grid[2][1] = 1;\n    grid[2][3] = 1;\n    grid[3][2] = 1;\n    grid[3][4] = 1;\n    grid[4][3] = 1;\n}\n\nfn main() {\n    let mut visited: [i32; 500] = [0; 500];\n    let mut grid: [[i32; 500]; 500] = [[0; 500]; 500];\n\n    fc(&amp;mut grid);\n    let B = DFS(1, &amp;mut grid, &amp;mut visited);\n    println!(\"{}\", B.0);\n}\n</code></pre>\n\n<p>I already tried changing <code>usize</code> to <code>u32</code> and other types, but I'm not getting any results. When I run <code>rustc newdia.rs</code>, it shows:</p>\n\n<pre><code>  newdia.rs:26:17: 26:33 error: non-scalar cast: `core::option::Option&lt;i32&gt;` as `usize`\n  newdia.rs:26          ans_vertex = s.pop() as usize;\n                                 ^~~~~~~~~~~~~~~~\n  error: aborting due to previous error\n</code></pre>\n"}, {"tags": ["rust", "borrow-checker"], "answers": [{"comments": [{"owner": {"reputation": 313, "user_id": 357947, "user_type": "registered", "accept_rate": 20, "profile_image": "https://www.gravatar.com/avatar/eb90ca6d8f33d1a39543ff05aa669841?s=128&d=identicon&r=PG", "display_name": "micah", "link": "https://stackoverflow.com/users/357947/micah"}, "edited": false, "score": 0, "creation_date": 1461527289, "post_id": 36818978, "comment_id": 61227198, "body": "Thank you, this works great! I think I should read up on <code>std::borrow</code>, it seems like I&#39;ll need to use it often."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 2, "last_activity_date": 1461468520, "creation_date": 1461468520, "answer_id": 36818978, "question_id": 36818944, "link": "https://stackoverflow.com/questions/36818944/how-come-this-rust-function-doesnt-work/36818978#36818978", "title": "How come this Rust function doesn&#39;t work?", "body": "<blockquote>\n  <p>Since I'm ultimately returning a &amp;str that's pointing somewhere inside homedir, maybe when the filename_in_homedir scope ends and homedir gets deleted, that &amp;str does too, which is why it's throwing this error?</p>\n</blockquote>\n\n<p>That's correct: you're trying to return a pointer to a value owned by <code>filename_in_homedir</code>'s stack frame, which will be dropped once it returns, invalidating the pointer. You need to return a <code>String</code>, rather than a <code>&amp;str</code>. Here's one way to do it:</p>\n\n<pre><code>use std::env;\nuse std::borrow::ToOwned;\n\nfn filename_in_homedir(filename: &amp;str) -&gt; Option&lt;String&gt; {\n    let mut homedir = match env::home_dir() {\n        None =&gt; return None,\n        Some(p) =&gt; p\n    };  \n    homedir.push(filename);\n    homedir.to_str().map(ToOwned::to_owned)\n}\n\nfn main() {\n    match filename_in_homedir(\".ssh/id_rsa.pub\") {\n        Some(s) =&gt; println!(\"{}\", s), \n        None =&gt; println!(\"Oops can't get it\")\n    };\n}\n</code></pre>\n"}], "owner": {"reputation": 313, "user_id": 357947, "user_type": "registered", "accept_rate": 20, "profile_image": "https://www.gravatar.com/avatar/eb90ca6d8f33d1a39543ff05aa669841?s=128&d=identicon&r=PG", "display_name": "micah", "link": "https://stackoverflow.com/users/357947/micah"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 92, "favorite_count": 0, "closed_date": 1461469290, "accepted_answer_id": 36818978, "answer_count": 1, "score": 0, "last_activity_date": 1461468520, "creation_date": 1461468118, "last_edit_date": 1592644375, "question_id": 36818944, "link": "https://stackoverflow.com/questions/36818944/how-come-this-rust-function-doesnt-work", "closed_reason": "Duplicate", "title": "How come this Rust function doesn&#39;t work?", "body": "<p>I'm trying to understand how to do some simple things in Rust, but I keep ending up fighting the borrow checker and I'm not sure why. I've written a simple function where you pass it a filename and it gives you the path to that file in your home directory.</p>\n<p>Here's the program:</p>\n<pre><code>use std::env;\n\nfn filename_in_homedir(filename: &amp;str) -&gt; Option&lt;&amp;str&gt; {\n    let mut homedir = match env::home_dir() {\n        None =&gt; return None,\n        Some(p) =&gt; p\n    };  \n    homedir.push(filename);\n    homedir.to_str()\n}\n\nfn main() {\n    match filename_in_homedir(&quot;.ssh/id_rsa.pub&quot;) {\n        Some(s) =&gt; println!(&quot;{}&quot;, s), \n        None =&gt; println!(&quot;Oops can't get it&quot;)\n    };  \n}\n</code></pre>\n<p>When I try building it I get this error:</p>\n<pre><code>$ cargo build\n   Compiling homedir-test v0.1.0 (file:///home/user/code/homedir-test)\nsrc/main.rs:9:5: 9:12 error: `homedir` does not live long enough\nsrc/main.rs:9     homedir.to_str()\n                  ^~~~~~~\nsrc/main.rs:3:56: 10:2 note: reference must be valid for the anonymous lifetime #1 defined on the block at 3:55...\nsrc/main.rs:3 fn filename_in_homedir(filename: &amp;str) -&gt; Option&lt;&amp;str&gt; {\nsrc/main.rs:4     let mut homedir = match env::home_dir() {\nsrc/main.rs:5         None =&gt; return None,\nsrc/main.rs:6         Some(p) =&gt; p\nsrc/main.rs:7     };\nsrc/main.rs:8     homedir.push(filename);\n              ...\nsrc/main.rs:7:7: 10:2 note: ...but borrowed value is only valid for the block suffix following statement 0 at 7:6\nsrc/main.rs: 7     };\nsrc/main.rs: 8     homedir.push(filename);\nsrc/main.rs: 9     homedir.to_str()\nsrc/main.rs:10 }\nerror: aborting due to previous error\nCould not compile `homedir-test`.\n</code></pre>\n<p>I don't understand why doesn't work. If <code>env::home_dir()</code> fails, the function returns <code>None</code>. If it succeeds, then the mutable variable homedir gets its value (which is a <code>std::path::PathBuf</code>). At this point, the <code>homedir</code> variable should be owned by the <code>filename_in_homedir</code> scope. The next line modifies <code>homedir</code> to add the filename to the end, and this works fine. The final line, calling <code>.to_str()</code>, <a href=\"https://doc.rust-lang.org/std/path/struct.PathBuf.html#method.to_str\" rel=\"nofollow noreferrer\">returns</a> an <code>Option&lt;&amp;str&gt;</code> itself.</p>\n<p>Since I'm ultimately returning a <code>&amp;str</code> that's pointing somewhere inside <code>homedir</code>, maybe when the <code>filename_in_homedir</code> scope ends and <code>homedir</code> gets deleted, that <code>&amp;str</code> does too, which is why it's throwing this error?</p>\n<p>How do I modify this function to work properly, and what am I doing wrong?</p>\n"}, {"tags": ["rust", "borrow-checker", "mio"], "answers": [{"comments": [{"owner": {"reputation": 125, "user_id": 2262126, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/768939c954a89140c8d0c5b975c860f4?s=128&d=identicon&r=PG", "display_name": "Sergey ", "link": "https://stackoverflow.com/users/2262126/sergey"}, "edited": false, "score": 0, "creation_date": 1461457515, "post_id": 36817852, "comment_id": 61208260, "body": "thanks for answer, i missed that Clone is implemented for Sender."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 1, "last_activity_date": 1461456397, "creation_date": 1461456397, "answer_id": 36817852, "question_id": 36817663, "link": "https://stackoverflow.com/questions/36817663/how-to-save-reference-to-handler-in-hashmap-field/36817852#36817852", "title": "How to save reference to handler in hashmap field", "body": "<p>You are trying to return a <code>WSHandler</code> from <code>connection_made</code> while also storing a reference to the <code>WSHandler</code> in the <code>WSConnectionFactory</code> struct. This is impossible (with borrowed pointers), because by returning a <code>WSHandler</code>, you have no control on what will happen to it (it could be moved or dropped, which would invalidate your pointer). You are also storing borrowed pointers when you should just be storing values directly.</p>\n\n<blockquote>\n  <p><code>WSConnectionFactory</code> creates <code>WSHandler</code> which handle incoming messages and send them to other clients according to arbitrary rules.</p>\n</blockquote>\n\n<p>If you want to send messages to other clients, you actually need a <a href=\"http://housleyjk.github.io/ws-rs/ws/struct.Sender.html\" rel=\"nofollow\"><code>Sender</code></a>, not a <code>WSHandler</code>. Thankfully, <code>Sender</code> implements <code>Clone</code>, and from looking quickly through the code, cloning a <code>Sender</code> should give you a second \"handle\" to the same endpoint. Therefore, you should put a <code>Sender</code> in your <code>HashMap</code>, not a <code>WSHandler</code>.</p>\n\n<pre><code>extern crate rand;\nextern crate rustc_serialize;\nextern crate ws;\n#[macro_use]\nextern crate log;\n#[macro_use]\nextern crate env_logger;\n\nuse std::collections::HashMap;\nuse rand::random;\nuse ws::{Factory, Sender, Handler, Handshake, Message, CloseCode, WebSocket};\nuse ws::Result as WSResult;\nuse ws::util::Token;\n\nstruct WSConnectionFactory {\n    handlers: HashMap&lt;u32, Sender&gt;,\n}\n\n#[derive(Debug)]\nstruct WSHandler {\n    uid: u32,\n    ws: Sender,\n}\n\nimpl Factory for WSConnectionFactory {\n    type Handler = WSHandler;\n\n    fn connection_made(&amp;mut self, ws: Sender) -&gt; Self::Handler {\n        println!(\"factory.connection_made token={:?}\", &amp;ws.token());\n        let uid = random::&lt;u32&gt;();\n        let handler = WSHandler {\n            uid: uid,\n            ws: ws.clone(),\n        };\n        self.handlers.insert(uid, ws);\n        handler\n    }\n}\n\nimpl Handler for WSHandler {\n    fn on_open(&amp;mut self, _handshake: Handshake) -&gt; WSResult&lt;()&gt; {\n        println!(\"handler.on_open\");\n        Ok(())\n    }\n    fn on_message(&amp;mut self, msg: Message) -&gt; WSResult&lt;()&gt; {\n        println!(\"handler.on_message {:?}\", msg);\n        Ok(())\n    }\n    fn on_timeout(&amp;mut self, _token: Token) -&gt; WSResult&lt;()&gt; {\n        println!(\"handler.on_timeout {:?}\", _token);\n        Ok(())\n    }\n    fn on_close(&amp;mut self, code: CloseCode, reason: &amp;str) {\n        println!(\"handler.on_close code={:?}, reason={:?}\", code, reason);\n    }\n}\n\nfn main() {\n    let factory = WSConnectionFactory { handlers: HashMap::new() };\n    let ws_socket = WebSocket::new(factory).expect(\"Can't create WebSocket\");\n    ws_socket.listen(\"127.0.0.1:8080\").expect(\"Can't bind to socket\");\n}\n</code></pre>\n"}], "owner": {"reputation": 125, "user_id": 2262126, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/768939c954a89140c8d0c5b975c860f4?s=128&d=identicon&r=PG", "display_name": "Sergey ", "link": "https://stackoverflow.com/users/2262126/sergey"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 180, "favorite_count": 0, "accepted_answer_id": 36817852, "answer_count": 1, "score": 1, "last_activity_date": 1461456397, "creation_date": 1461454570, "question_id": 36817663, "link": "https://stackoverflow.com/questions/36817663/how-to-save-reference-to-handler-in-hashmap-field", "title": "How to save reference to handler in hashmap field", "body": "<p>I am learning Rust and trying to write a websocket server. The logic is following: WSConnectionFactory creates WSHandler which handle incoming messages and send them to other clients according to arbitrary rules.\nThe problem is that I don't know how to implement such behavior.</p>\n\n<p>Limitation: I can't change signature of Factory and Handler traits because they are provided by <a href=\"https://github.com/housleyjk/ws-rs.git\" rel=\"nofollow\" title=\"ws-rs\">ws-rs</a> library.</p>\n\n<p>Question: How to implement this using RefCell/Cell?</p>\n\n<pre><code>extern crate rand;\nextern crate rustc_serialize;\nextern crate ws;\n#[macro_use]\nextern crate log;\n#[macro_use]\nextern crate env_logger;\n\nuse std::cell::RefCell;\nuse std::collections::HashMap;\nuse rand::random;\nuse ws::{Factory, Sender, Handler, Handshake, Message, CloseCode, WebSocket};\nuse ws::Result as WSResult;\nuse ws::util::Token;\n\nstruct WSConnectionFactory&lt;'p&gt; {\n    handlers: HashMap&lt;&amp;'p u32, RefCell&lt;&amp;'p WSHandler&lt;'p&gt;&gt;&gt;,\n}\n\n#[derive(Debug)]\nstruct WSHandler&lt;'h&gt; {\n    uid: &amp;'h u32,\n    ws: RefCell&lt;&amp;'h Sender&gt;,\n}\n\nimpl&lt;'p&gt; Factory for WSConnectionFactory&lt;'p&gt; {\n    type Handler = WSHandler&lt;'p&gt;;\n\n    fn connection_made(&amp;mut self, ws: Sender) -&gt; Self::Handler {\n        println!(\"factory.connection_made token={:?}\", &amp;ws.token());\n        let uid = &amp;random::&lt;u32&gt;();\n        let handler = WSHandler {\n            uid: uid,\n            ws: RefCell::new(&amp;ws),\n        };\n        self.handlers.insert(uid, RefCell::new(&amp;handler));\n        handler\n    }\n}\n\nimpl&lt;'h&gt; Handler for WSHandler&lt;'h&gt; {\n    fn on_open(&amp;mut self, _handshake: Handshake) -&gt; WSResult&lt;()&gt; {\n        println!(\"handler.on_open\");\n        Ok(())\n    }\n    fn on_message(&amp;mut self, msg: Message) -&gt; WSResult&lt;()&gt; {\n        println!(\"handler.on_message {:?}\", msg);\n        Ok(())\n    }\n    fn on_timeout(&amp;mut self, _token: Token) -&gt; WSResult&lt;()&gt; {\n        println!(\"handler.on_timeout {:?}\", _token);\n        Ok(())\n    }\n    fn on_close(&amp;mut self, code: CloseCode, reason: &amp;str) {\n        println!(\"handler.on_close code={:?}, reason={:?}\", code, reason);\n    }\n}\n\nfn main() {\n    let factory = WSConnectionFactory { handlers: HashMap::new() };\n    let ws_socket = WebSocket::new(factory).expect(\"Can't create WebSocket\");\n    ws_socket.listen(\"127.0.0.1:8080\").expect(\"Can't bind to socket\");\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25982, "user_id": 305973, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/cd49db0b676767ea4358b1047c4cddd2?s=128&d=identicon&r=PG", "display_name": "robinst", "link": "https://stackoverflow.com/users/305973/robinst"}, "edited": false, "score": 0, "creation_date": 1483493676, "post_id": 36816072, "comment_id": 70116249, "body": "In addition to the other answers, keep an eye on <a href=\"https://github.com/rust-lang/rfcs/issues/1545\" rel=\"nofollow noreferrer\">this RFC issue</a> for any future RFCs regarding this."}, {"owner": {"reputation": 11878, "user_id": 588759, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/216ea4da5cae7be4030b6242ab90631c?s=128&d=identicon&r=PG", "display_name": "rofrol", "link": "https://stackoverflow.com/users/588759/rofrol"}, "edited": false, "score": 0, "creation_date": 1526652265, "post_id": 36816072, "comment_id": 87841733, "body": "use chrono <a href=\"http://exercism.io/submissions/1264089798d244e5b8278e588919901c\" rel=\"nofollow noreferrer\">exercism.io/submissions/1264089798d244e5b8278e588919901c</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1546266489, "post_id": 36816072, "comment_id": 94814374, "body": "See also <a href=\"https://stackoverflow.com/q/26593387/155423\">How can I get the current time in milliseconds?</a>"}, {"owner": {"reputation": 8841, "user_id": 756233, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/ySRUp.jpg?s=128&g=1", "display_name": "Ray Hulha", "link": "https://stackoverflow.com/users/756233/ray-hulha"}, "edited": false, "score": 0, "creation_date": 1618009460, "post_id": 36816072, "comment_id": 118481640, "body": "As of today, I could successfully use num_milliseconds."}], "answers": [{"comments": [{"owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "edited": false, "score": 7, "creation_date": 1461493326, "post_id": 36816264, "comment_id": 61215299, "body": "I&#39;d rather multiply seconds by 1000, then add <code>nanos&#47;1000000</code>. Less risk of overflow."}, {"owner": {"reputation": 13635, "user_id": 547365, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ddefbca930fdd39846b698bab7ac3146?s=128&d=identicon&r=PG", "display_name": "w.brian", "link": "https://stackoverflow.com/users/547365/w-brian"}, "edited": false, "score": 0, "creation_date": 1489367751, "post_id": 36816264, "comment_id": 72626617, "body": "<code>subsec_nanos</code> doesn&#39;t return the number of elapsed nanoseconds. It represents the precision of the Duration."}, {"owner": {"reputation": 376, "user_id": 1468798, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae282b36a465ca18159c29e902870e2e?s=128&d=identicon&r=PG", "display_name": "poros", "link": "https://stackoverflow.com/users/1468798/poros"}, "reply_to_user": {"reputation": 13635, "user_id": 547365, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ddefbca930fdd39846b698bab7ac3146?s=128&d=identicon&r=PG", "display_name": "w.brian", "link": "https://stackoverflow.com/users/547365/w-brian"}, "edited": false, "score": 2, "creation_date": 1517337173, "post_id": 36816264, "comment_id": 84051460, "body": "@w.brian the example in the documentation <a href=\"https://doc.rust-lang.org/std/time/struct.Duration.html#method.subsec_nanos\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/time/&hellip;</a> supports the facts that the method returns the fractional part of the duration in nanoseconds, so the answer seems correct to me."}], "tags": [], "owner": {"reputation": 48731, "user_id": 329700, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/41910a452554b187d044c00c576866b1?s=128&d=identicon&r=PG", "display_name": "Kevin Burke", "link": "https://stackoverflow.com/users/329700/kevin-burke"}, "is_accepted": false, "score": 4, "last_activity_date": 1461444617, "creation_date": 1461444617, "answer_id": 36816264, "question_id": 36816072, "link": "https://stackoverflow.com/questions/36816072/how-do-i-get-a-duration-as-a-number-of-milliseconds-in-rust/36816264#36816264", "title": "How do I get a Duration as a number of milliseconds in Rust", "body": "<p>Here is the solution I came up with, which is to multiply the seconds by a billion, add it to the nanoseconds, then divide by 1e6.</p>\n\n<pre><code>let nanos = timeout_duration.subsec_nanos() as u64;\nlet ms = (1000*1000*1000 * timeout_duration.as_secs() + nanos)/(1000 * 1000);\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 39, "user_id": 3566751, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/34dc762d42e7108bb8ddddf34e097531?s=128&d=identicon&r=PG&f=1", "display_name": "aeveris", "link": "https://stackoverflow.com/users/3566751/aeveris"}, "is_accepted": false, "score": 2, "last_activity_date": 1461445292, "last_edit_date": 1461445292, "creation_date": 1461445104, "answer_id": 36816332, "question_id": 36816072, "link": "https://stackoverflow.com/questions/36816072/how-do-i-get-a-duration-as-a-number-of-milliseconds-in-rust/36816332#36816332", "title": "How do I get a Duration as a number of milliseconds in Rust", "body": "<p>Use <a href=\"https://doc.rust-lang.org/time/time/struct.Duration.html\" rel=\"nofollow\"><code>time::Duration</code></a> from the <a href=\"https://crates.io/crates/time\" rel=\"nofollow\">time crate</a> on crates.io which provides a <code>num_milliseconds()</code> method.</p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1546266357, "post_id": 53986560, "comment_id": 94814329, "body": "What does Rust 2018 have to do with the problem? Why are you using <code>SystemTime</code> instead of directly using a <code>Duration</code>?"}], "tags": [], "owner": {"reputation": 469, "user_id": 5657884, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9a5d918ea4c84f54fc64b360f8673d66?s=128&d=identicon&r=PG&f=1", "display_name": "iceblue", "link": "https://stackoverflow.com/users/5657884/iceblue"}, "is_accepted": false, "score": 2, "last_activity_date": 1546360779, "last_edit_date": 1546360779, "creation_date": 1546253392, "answer_id": 53986560, "question_id": 36816072, "link": "https://stackoverflow.com/questions/36816072/how-do-i-get-a-duration-as-a-number-of-milliseconds-in-rust/53986560#53986560", "title": "How do I get a Duration as a number of milliseconds in Rust", "body": "<p>Since Rust 1.33.0, there is an <a href=\"https://doc.rust-lang.org/std/time/struct.Duration.html#method.as_millis\" rel=\"nofollow noreferrer\"><code>as_millis()</code></a> function:</p>\n\n<pre><code>use std::time::SystemTime;\n\nfn main() {\n    let now = SystemTime::now().duration_since(SystemTime::UNIX_EPOCH).expect(\"get millis error\");\n    println!(\"now millis: {}\", now.as_millis());\n}\n</code></pre>\n\n<p>Since Rust 1.27.0, there is a <a href=\"https://doc.rust-lang.org/std/time/struct.Duration.html#method.subsec_millis\" rel=\"nofollow noreferrer\"><code>subsec_millis()</code></a> function:</p>\n\n<pre><code>use std::time::SystemTime;\n\nfn main() {\n    let since_the_epoch = SystemTime::now().duration_since(SystemTime::UNIX_EPOCH).expect(\"get millis error\");\n    let seconds = since_the_epoch.as_secs();\n    let subsec_millis = since_the_epoch.subsec_millis() as u64;\n    println!(\"now millis: {}\", seconds * 1000 + subsec_millis);\n}\n</code></pre>\n\n<p>Since Rust 1.8, there is a <a href=\"https://doc.rust-lang.org/std/time/struct.Duration.html#method.subsec_nanos\" rel=\"nofollow noreferrer\"><code>subsec_nanos</code></a> function:</p>\n\n<pre><code>let in_ms = since_the_epoch.as_secs() * 1000 +\n            since_the_epoch.subsec_nanos() as u64 / 1_000_000;\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/a/44378174/5657884\">How can I get the current time in milliseconds?</a></li>\n</ul>\n"}], "owner": {"reputation": 48731, "user_id": 329700, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/41910a452554b187d044c00c576866b1?s=128&d=identicon&r=PG", "display_name": "Kevin Burke", "link": "https://stackoverflow.com/users/329700/kevin-burke"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4885, "favorite_count": 0, "answer_count": 3, "score": 12, "last_activity_date": 1546360779, "creation_date": 1461443553, "last_edit_date": 1461445046, "question_id": 36816072, "link": "https://stackoverflow.com/questions/36816072/how-do-i-get-a-duration-as-a-number-of-milliseconds-in-rust", "title": "How do I get a Duration as a number of milliseconds in Rust", "body": "<p>I have a <a href=\"https://doc.rust-lang.org/std/time/struct.Duration.html\" rel=\"noreferrer\"><code>time::Duration</code></a>. How can I get the number of milliseconds represented by this duration as an integer? There used to be a <code>num_milliseconds()</code> function, but it is no longer available.</p>\n"}, {"tags": ["syntax", "rust", "traits", "type-hinting", "method-call"], "comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "edited": false, "score": 1, "creation_date": 1461436208, "post_id": 36814704, "comment_id": 61202245, "body": "BTW <code>&lt;_ as T&gt;::foo</code> can be written <code>T::foo</code>"}, {"owner": {"reputation": 4870, "user_id": 403875, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/439b8283080e4e2255205993da9de9ca?s=128&d=identicon&r=PG", "display_name": "dspyz", "link": "https://stackoverflow.com/users/403875/dspyz"}, "edited": false, "score": 0, "creation_date": 1461436399, "post_id": 36814704, "comment_id": 61202322, "body": "Oh, right. But that still looks less like a method call and more like a function call."}], "answers": [{"tags": [], "owner": {"reputation": 1868, "user_id": 1056812, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/c894e13ca446aebde50682f617a3d0bc?s=128&d=identicon&r=PG", "display_name": "Steven P", "link": "https://stackoverflow.com/users/1056812/steven-p"}, "is_accepted": false, "score": 1, "last_activity_date": 1461436747, "last_edit_date": 1461436747, "creation_date": 1461436106, "answer_id": 36814795, "question_id": 36814704, "link": "https://stackoverflow.com/questions/36814704/rust-type-hint-with-method-call-syntax/36814795#36814795", "title": "Rust type hint with method call syntax", "body": "<p>You just have to make sure that the trait T is in scope with a <code>use</code> statement...</p>\n"}], "owner": {"reputation": 4870, "user_id": 403875, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/439b8283080e4e2255205993da9de9ca?s=128&d=identicon&r=PG", "display_name": "dspyz", "link": "https://stackoverflow.com/users/403875/dspyz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 411, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1461436747, "creation_date": 1461435610, "question_id": 36814704, "link": "https://stackoverflow.com/questions/36814704/rust-type-hint-with-method-call-syntax", "title": "Rust type hint with method call syntax", "body": "<p>Is there a way to provide a type hint for a trait method without moving the receiver into the argument list?</p>\n\n<p>For instance, if I have some x and call</p>\n\n<pre><code>x.foo(y)\n</code></pre>\n\n<p>and I need to clarify that foo is a method of the trait T, do I have to write it as:</p>\n\n<pre><code>&lt;_ as T&gt;::foo(x, y)\n</code></pre>\n\n<p>or is there some syntax that looks more like</p>\n\n<pre><code>x::&lt;as T&gt;.foo(y)\n</code></pre>\n\n<p>that I can use?</p>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 5076, "user_id": 909579, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/6c5e950fdb55c2c4592e1be5e4c0d998?s=128&d=identicon&r=PG", "display_name": "Tomas Tomecek", "link": "https://stackoverflow.com/users/909579/tomas-tomecek"}, "edited": false, "score": 0, "creation_date": 1461432202, "post_id": 36813951, "comment_id": 61200784, "body": "Thanks for such detailed answer. Small followup question: so I&#39;m in my project; when I run <code>cargo build</code>, cargo will compile all dependencies and store them in <code>target&#47;debug&#47;deps&#47;</code>?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 5076, "user_id": 909579, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/6c5e950fdb55c2c4592e1be5e4c0d998?s=128&d=identicon&r=PG", "display_name": "Tomas Tomecek", "link": "https://stackoverflow.com/users/909579/tomas-tomecek"}, "edited": false, "score": 3, "creation_date": 1461432346, "post_id": 36813951, "comment_id": 61200849, "body": "@SummerBreeze yep! And when you compile in release mode it&#39;s <code>target&#47;release</code> and docs are in <code>target&#47;docs</code>. Downloaded <i>source code</i> is placed in <code>$HOME&#47;.cargo</code> because it can be shared between projects. The built artifacts are project-specific."}, {"owner": {"reputation": 5076, "user_id": 909579, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/6c5e950fdb55c2c4592e1be5e4c0d998?s=128&d=identicon&r=PG", "display_name": "Tomas Tomecek", "link": "https://stackoverflow.com/users/909579/tomas-tomecek"}, "edited": false, "score": 4, "creation_date": 1461432978, "post_id": 36813951, "comment_id": 61201111, "body": "I wish more people were this helpful; thank you very much!"}, {"owner": {"reputation": 986, "user_id": 63376, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/093b9e3ca5270fccd55113d1b9619c8a?s=128&d=identicon&r=PG", "display_name": "Oren Ben-Kiki", "link": "https://stackoverflow.com/users/63376/oren-ben-kiki"}, "edited": false, "score": 0, "creation_date": 1614761676, "post_id": 36813951, "comment_id": 117480726, "body": "Here&#39;s a use case for &quot;installing&quot; a library I just run into: I&#39;m trying to cargo install some-thing which requires 172 dependencies. Dependency #115 fails to build due to some system configuration issue. Fiddling with the system configuration I need to re-run the &quot;cargo install some-thing&quot; command, wait for  the first 114 dependencies to build (yes, in parallel, still takes a while and sucks) to get to the failure. If I could do <code>cargo can-install the-specific-dependency</code> which would behave AS IF a crate required the dependency and just try to build it, it would ease the pain a lot."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 986, "user_id": 63376, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/093b9e3ca5270fccd55113d1b9619c8a?s=128&d=identicon&r=PG", "display_name": "Oren Ben-Kiki", "link": "https://stackoverflow.com/users/63376/oren-ben-kiki"}, "edited": false, "score": 0, "creation_date": 1615219200, "post_id": 36813951, "comment_id": 117617312, "body": "@OrenBen-Kiki in that case, <code>cargo install</code> will print out the directory it used (probably in a system temporary directory). You can then use <code>cargo install --target-dir ...</code> with that path to resume from the failed path."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 986, "user_id": 63376, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/093b9e3ca5270fccd55113d1b9619c8a?s=128&d=identicon&r=PG", "display_name": "Oren Ben-Kiki", "link": "https://stackoverflow.com/users/63376/oren-ben-kiki"}, "edited": false, "score": 0, "creation_date": 1615220906, "post_id": 36813951, "comment_id": 117618132, "body": "@OrenBen-Kiki moved that to <a href=\"https://stackoverflow.com/q/66533502/155423\">How can I avoid rebuilding dependencies when <code>cargo install</code> fails due to a system configuration issue?</a>"}, {"owner": {"reputation": 986, "user_id": 63376, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/093b9e3ca5270fccd55113d1b9619c8a?s=128&d=identicon&r=PG", "display_name": "Oren Ben-Kiki", "link": "https://stackoverflow.com/users/63376/oren-ben-kiki"}, "edited": false, "score": 0, "creation_date": 1615265742, "post_id": 36813951, "comment_id": 117631245, "body": "@Shepmaster - thanks!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 20, "last_activity_date": 1615218175, "last_edit_date": 1615218175, "creation_date": 1461431615, "answer_id": 36813951, "question_id": 36813893, "link": "https://stackoverflow.com/questions/36813893/can-i-install-a-library-using-cargo-without-a-cargo-toml/36813951#36813951", "title": "Can I install a library using Cargo without a Cargo.toml?", "body": "<h3>Practical answer</h3>\n<p>No. Use Cargo. It's <strong>extremely easy</strong> to use and it prevents you from shooting yourself in the foot with managing versions (and conflicting versions).</p>\n<blockquote>\n<p>because I was interested in the language, not packaging.</p>\n</blockquote>\n<p>From the point-of-view of 99.9% of Rust users, Cargo <em>is</em> part of the language, or at least part of the Rust ecosystem. Many things are provided in crates that you might expect in another languages standard library (random number generation is a great example).</p>\n<blockquote>\n<p>install the library on my system</p>\n</blockquote>\n<p>Ultimately, this doesn't make sense. There's no One True Version of a library that you can install. Every program that uses a crate may use a different version because it has different needs. Even further, you may compile a crate in a different manner for different projects - crates have <em>features</em> that change how they may be compiled.</p>\n<blockquote>\n<p><code>cargo install rand</code></p>\n</blockquote>\n<p>This is actually a way to use Cargo to build an entire Rust project that provides a <em>binary</em> and install it on your system. This makes more sense as it's a single, contained entity. Unfortunately, it can be confusing for just this very reason!</p>\n<p>See also:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/q/37706999/155423\">Error installing a crate via cargo: specified package has no binaries</a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/issues/2552\" rel=\"nofollow noreferrer\">cargo install &lt;library_name&gt; --library (Cargo issue #2552)</a></li>\n</ul>\n<h3>Technically correct answer</h3>\n<p>Of course you <em>can</em>; you just have to do everything that Cargo does for you by hand. That involves</p>\n<ol>\n<li>Downloading the package.</li>\n<li>This also means any dependencies of the package.</li>\n<li>And the correct versions.</li>\n<li>Compile the package.</li>\n<li>And the dependencies.</li>\n<li>Maintaining the tree of dependencies and passing it to each subsequent package.</li>\n<li>Finally, you can compile your code.</li>\n</ol>\n<p>A concrete example of compiling a single library and a single executable using that library:</p>\n<pre class=\"lang-none prettyprint-override\"><code>$ rustc --edition=2018 --crate-type=rlib --crate-name library_example src/lib.rs -o libmy_library.rlib\n$ rustc --edition=2018 --extern library_example=libmy_library.rlib examples/main.rs\n</code></pre>\n"}], "owner": {"reputation": 5076, "user_id": 909579, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/6c5e950fdb55c2c4592e1be5e4c0d998?s=128&d=identicon&r=PG", "display_name": "Tomas Tomecek", "link": "https://stackoverflow.com/users/909579/tomas-tomecek"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4380, "favorite_count": 4, "accepted_answer_id": 36813951, "answer_count": 1, "score": 17, "last_activity_date": 1615218175, "creation_date": 1461431308, "last_edit_date": 1569862404, "question_id": 36813893, "link": "https://stackoverflow.com/questions/36813893/can-i-install-a-library-using-cargo-without-a-cargo-toml", "title": "Can I install a library using Cargo without a Cargo.toml?", "body": "<p>I am going through Rust's getting started and I need to get <a href=\"https://crates.io/crates/rand\" rel=\"nofollow noreferrer\">the rand crate</a> on my system. I'm not doing the Cargo packaging stuff (e.g. creating <code>Cargo.toml</code>) because I was interested in the language, not packaging.</p>\n\n<p>Can I install the rand library on my system without creating a <code>Cargo.toml</code> using the <code>cargo</code> command?</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo install rand\n    Updating registry `https://github.com/rust-lang/crates.io-index`\nspecified package has no binaries\n</code></pre>\n"}, {"tags": ["algorithm", "rust"], "comments": [{"owner": {"reputation": 11927, "user_id": 2301531, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/0e05b25685a72ab6268dce396da1b76f?s=128&d=identicon&r=PG", "display_name": "A.B.", "link": "https://stackoverflow.com/users/2301531/a-b"}, "edited": false, "score": 0, "creation_date": 1461431351, "post_id": 36813606, "comment_id": 61200455, "body": "Probably because you are cloning <code>HashMap&lt;T, HashSet&lt;T&gt;&gt;</code> at various points in the code. Even inside a loop."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1461433042, "post_id": 36813606, "comment_id": 61201142, "body": "Following up on A.B.&#39;s comment, you can pass <a href=\"http://doc.rust-lang.org/stable/book/references-and-borrowing.html\" rel=\"nofollow noreferrer\"><i>references</i></a> of the <code>Graph</code> to the lookup functions: <code>farthest_node(graph: &amp;Graph&lt;i32&gt;, ...)</code>, <code>tree_rad(graph: &amp;Graph&lt;i32&gt;)</code>. This means you don&#39;t have to clone the <code>Graph</code> ever. Make sure you are compiling in release mode as well."}, {"owner": {"reputation": 73, "user_id": 6244985, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e7dfa02f3982345748337687d04a2bfb?s=128&d=identicon&r=PG&f=1", "display_name": "takoyaki9n", "link": "https://stackoverflow.com/users/6244985/takoyaki9n"}, "edited": false, "score": 0, "creation_date": 1461434366, "post_id": 36813606, "comment_id": 61201600, "body": "I fixed my code as you pointed out and it was successful. Thanks a lot!"}], "owner": {"reputation": 73, "user_id": 6244985, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e7dfa02f3982345748337687d04a2bfb?s=128&d=identicon&r=PG&f=1", "display_name": "takoyaki9n", "link": "https://stackoverflow.com/users/6244985/takoyaki9n"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 60, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1461431275, "creation_date": 1461429958, "last_edit_date": 1461431275, "question_id": 36813606, "link": "https://stackoverflow.com/questions/36813606/rust-code-for-calculating-tree-radius-times-out", "title": "Rust code for calculating tree radius times out", "body": "<p>I'm learning Rust and I am solving <a href=\"https://www.codingame.com/contests/sponsor/51\" rel=\"nofollow\">a coding puzzle</a> for practice. This puzzle can be solved by calculating the tree radius and\nI implemented <a href=\"https://www.quora.com/Graph-Theory-What-is-the-most-efficient-algorithm-for-finding-the-center-of-a-tree\" rel=\"nofollow\">this algorithm</a>:</p>\n\n<pre><code>use std::io;\nuse std::collections::*;\n\ntype Graph&lt;T&gt; = HashMap&lt;T, HashSet&lt;T&gt;&gt;;\n\nmacro_rules! print_err {\n    ($($arg:tt)*) =&gt; (\n        {\n            use std::io::Write;\n            writeln!(&amp;mut ::std::io::stderr(), $($arg)*).ok();\n        }\n    )\n}\n\nmacro_rules! parse_input {\n    ($x:expr, $t:ident) =&gt; ($x.trim().parse::&lt;$t&gt;().unwrap())\n}\n\nmacro_rules! add_dedge{\n    ($g: ident, $u: ident, $v: ident) =&gt; (\n        {\n            let mut adj = match $g.get(&amp;$u) {\n                Some(adj) =&gt; adj.clone(),\n                None =&gt; HashSet::new()\n            };\n            adj.insert($v);\n            $g.insert($u, adj);\n        }\n    )\n}\n\nfn tree_rad(graph: Graph&lt;i32&gt;) -&gt; i32 {\n    match graph.keys().last() {\n        Some(u) =&gt; {\n            let (v, _) = farthest_node(graph.clone(), *u, *u);\n            let (_, d) = farthest_node(graph.clone(), v, v);\n            (d + 1) / 2\n        }\n        None =&gt; 0\n    }\n}\n\nfn farthest_node(graph: Graph&lt;i32&gt;, u: i32, prev_u: i32) -&gt; (i32, i32) {\n    match graph.get(&amp;u) {\n        Some(adj) =&gt; {\n            let mut v = u;\n            let mut d = 0;\n            for w in adj {\n                if *w != prev_u {\n                    let (x, e) = farthest_node(graph.clone(), *w, u);\n                    if d &lt;=  e {\n                        v = x; d = e + 1;\n                    }\n                }\n            }\n            (v, d)\n        }\n        None =&gt; (u, 0)\n    }\n}\n\n/**\n * Auto-generated code below aims at helping you parse\n * the standard input according to the problem statement.\n **/\nfn main() {\n    let mut input_line = String::new();\n    io::stdin().read_line(&amp;mut input_line).unwrap();\n    let n = parse_input!(input_line, usize); // the number of adjacency relations\n    let mut graph: HashMap&lt;i32, HashSet&lt;i32&gt;&gt; = HashMap::new();\n    for _ in 0..n as usize {\n        let mut input_line = String::new();\n        io::stdin().read_line(&amp;mut input_line).unwrap();\n        let inputs = input_line.split(\" \").collect::&lt;Vec&lt;_&gt;&gt;();\n        let xi = parse_input!(inputs[0], i32); // the ID of a person which is adjacent to yi\n        let yi = parse_input!(inputs[1], i32); // the ID of a person which is adjacent to xi\n        add_dedge!(graph, xi, yi);\n        add_dedge!(graph, yi, xi);\n    }\n    print_err!(\"{:?}\", graph);\n    let rad = tree_rad(graph);\n\n    // The minimal amount of steps required to completely propagate the advertisement\n    println!(\"{}\", rad);\n}\n</code></pre>\n\n<p>This code passes small test cases, but times out for a big one (test 4).\nI suspected that I failed to implement the algorithm correctly, \nso I reimplemented in Python as follows and it passed all test cases.</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>import sys\nimport math\nfrom sets import Set\n\ndef farthest_node(graph, u, pu):\n    v, d = u, 0\n    for w in graph[u]:\n        if w != pu:\n            (x, e) = farthest_node(graph, w, u)\n            if d &lt;= e:\n                v, d = x, e + 1\n    return (v, d)\n\n# Auto-generated code below aims at helping you parse\n# the standard input according to the problem statement.\ngraph = {}\nn = int(raw_input())  # the number of adjacency relations\nfor i in xrange(n):\n    # xi: the ID of a person which is adjacent to yi\n    # yi: the ID of a person which is adjacent to xi\n    xi, yi = [int(j) for j in raw_input().split()]\n    if not xi in graph: graph[xi] = Set()\n    graph[xi].add(yi)\n    if not yi in graph: graph[yi] = Set()\n    graph[yi].add(xi)    \n\n# Write an action using print\n# To debug: print &gt;&gt; sys.stderr, \"Debug messages...\"    \nu = graph.keys()[0]\nv, d = farthest_node(graph, u, u)\nw, e = farthest_node(graph, v, v)\n\n# The minimal amount of steps required to completely propagate the advertisement\nprint (e + 1) &gt;&gt; 1\n</code></pre>\n\n<p>What are the problems in my code, and how can I fix them?</p>\n"}, {"tags": ["macros", "rust"], "answers": [{"tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 4, "last_activity_date": 1461424001, "creation_date": 1461424001, "answer_id": 36812481, "question_id": 36812275, "link": "https://stackoverflow.com/questions/36812275/is-there-any-way-to-differentiate-between-a-string-and-an-ident-in-rust/36812481#36812481", "title": "Is there any way to differentiate between a string and an ident in Rust?", "body": "<p>The problem is that the <code>macro_rules!</code> machinery cannot back out of a capture.  Once it starts <em>trying</em> to match a capture, it either succeeds or the <em>entire macro invocation fails</em>.</p>\n\n<p>In order to do this, you have to provide some kind of literal match <em>prior</em> to the capture that <code>macro_rules!</code> can use to distinguish between the rules.  For example:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>macro_rules! mtc {\n    ( ident $ident:ident ) =&gt; (\"ident\");\n    ( expr $string:expr ) =&gt; (\"string\");\n}\n</code></pre>\n\n<p>Also, to answer the implicit question: no, there is no way to <em>specifically</em> match a string literal, or indeed any <em>other</em> kind of literal.</p>\n"}], "owner": {"reputation": 2289, "user_id": 1454653, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/FvI1V.jpg?s=128&g=1", "display_name": "dragostis", "link": "https://stackoverflow.com/users/1454653/dragostis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 513, "favorite_count": 1, "accepted_answer_id": 36812481, "answer_count": 1, "score": 2, "last_activity_date": 1461424001, "creation_date": 1461422948, "question_id": 36812275, "link": "https://stackoverflow.com/questions/36812275/is-there-any-way-to-differentiate-between-a-string-and-an-ident-in-rust", "title": "Is there any way to differentiate between a string and an ident in Rust?", "body": "<pre><code>macro_rules! mtc {\n    ( $ident:ident ) =&gt; (\"ident\");\n    ( $string:expr ) =&gt; (\"string\");\n}\n\nfn main() {\n    println!(\"{}\", mtc!(\"hi\"));\n    println!(\"{}\", mtc!(a));\n}\n</code></pre>\n\n<p>This doesn't work. It fails with:</p>\n\n<pre><code>&lt;anon&gt;:7:25: 7:29 error: expected ident, found \"hi\"\n&lt;anon&gt;:7     println!(\"{}\", mtc!(\"hi\"));\n</code></pre>\n"}, {"tags": ["opengl", "rust", "game-engine"], "answers": [{"tags": [], "owner": {"reputation": 75, "user_id": 6244359, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IfgQg.jpg?s=128&g=1", "display_name": "Bluebird45", "link": "https://stackoverflow.com/users/6244359/bluebird45"}, "is_accepted": true, "score": 1, "last_activity_date": 1462301009, "last_edit_date": 1462301009, "creation_date": 1462300266, "answer_id": 37011770, "question_id": 36810775, "link": "https://stackoverflow.com/questions/36810775/invalidenum-error-in-piston/37011770#37011770", "title": "InvalidEnum error in Piston", "body": "<p>I can't reproduce this error, having returned to it today after an interval of ten days.</p>\n\n<p>It is most likely due to some dependency that has changed in the last ten days. It is less likely to be an error on my part somewhere else because I carefully checked and rechecked my work, and it is a very simple program with a single dependency. The version of Rust (1.8) is the same.</p>\n\n<p>The program has one dependency (piston_window) which had one commit nine days ago, so I retested by decrementing the minor version of piston_window in the toml file, followed by cargo clean  and cargo run. But the program still ran OK. That dependency, in turn, has a cascade of over 90 other dependencies, many of which have undergone revision in the last ten days, so tracking down the exact change that fixed this would not be practical, considering that it is now working and I am using it correctly.</p>\n"}], "owner": {"reputation": 75, "user_id": 6244359, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IfgQg.jpg?s=128&g=1", "display_name": "Bluebird45", "link": "https://stackoverflow.com/users/6244359/bluebird45"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 167, "favorite_count": 1, "accepted_answer_id": 37011770, "answer_count": 1, "score": 1, "last_activity_date": 1462301009, "creation_date": 1461414189, "last_edit_date": 1461422774, "question_id": 36810775, "link": "https://stackoverflow.com/questions/36810775/invalidenum-error-in-piston", "title": "InvalidEnum error in Piston", "body": "<p>I am a beginner at game development in Rust and the Piston game engine, specifically. I have compiled and run the <a href=\"https://github.com/PistonDevelopers/Piston-Tutorials/tree/master/getting-started\" rel=\"nofollow\">spinning square</a> program but the <a href=\"https://github.com/PistonDevelopers/piston\" rel=\"nofollow\">red-square</a> program won't run despite my efforts to resolve the errors.</p>\n\n<p>This is on Debian 8.3 and Rust stable (1.8) using rustup. My OpenGL version is 2.1, and so I had to change one line in spinning square to reflect that version.</p>\n\n<p>This is the error I get from \"cargo run\" on the unmodified code of red-square:</p>\n\n<blockquote>\n  <p>thread  panicked at 'Failed to get root window: XError { description: \"GLXBadFBConfig\", error_code: 178, request_code: 155, minor_code: 34 }', ../src/libcore/result.rs:746</p>\n</blockquote>\n\n<p>If I modify the code as follows (with the added lines indicated) to downgrade the OpenGL version, then I get the different error message below. </p>\n\n<pre><code>extern crate piston_window;\n\nuse piston_window::*;\n\nfn main() {\n    let opengl = OpenGL::V2_1;              //added line\n    let window: PistonWindow =\n        WindowSettings::new(\"Hello Piston!\", [640, 480])\n        .opengl(opengl)                     // added line\n        .exit_on_esc(true).build().unwrap();\n    for e in window {\n        e.draw_2d(|c, g| {\n            clear([1.0; 4], g);\n            rectangle([1.0, 0.0, 0.0, 1.0], // red\n                      [0.0, 0.0, 100.0, 100.0],\n                      c.transform, g);\n        });\n    }\n}\n</code></pre>\n\n<blockquote>\n  <p>thread  panicked at 'Error after executing command BindProgram(0): InvalidEnum', /home/user/.cargo/registry/src/github.com-88ac128001ac3a9a/gfx_device_gl-0.9.0/src/lib.rs:283</p>\n</blockquote>\n"}, {"tags": ["rust", "deprecated"], "comments": [{"owner": {"reputation": 3039, "user_id": 2851815, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/37MCt.png?s=128&g=1", "display_name": "\u043d\u0430\u0431\u0438\u044f\u0447\u043b\u044d\u0432\u044d\u043b\u0438", "link": "https://stackoverflow.com/users/2851815/%d0%bd%d0%b0%d0%b1%d0%b8%d1%8f%d1%87%d0%bb%d1%8d%d0%b2%d1%8d%d0%bb%d0%b8"}, "edited": false, "score": 0, "creation_date": 1461410801, "post_id": 36809826, "comment_id": 61193224, "body": "Asking on IRC seems like the most straightforward approach"}, {"owner": {"reputation": 42480, "user_id": 148423, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/6ed1f9b5afd258d0b73ad1eae10ac384?s=128&d=identicon&r=PG", "display_name": "Joe", "link": "https://stackoverflow.com/users/148423/joe"}, "reply_to_user": {"reputation": 3039, "user_id": 2851815, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/37MCt.png?s=128&g=1", "display_name": "\u043d\u0430\u0431\u0438\u044f\u0447\u043b\u044d\u0432\u044d\u043b\u0438", "link": "https://stackoverflow.com/users/2851815/%d0%bd%d0%b0%d0%b1%d0%b8%d1%8f%d1%87%d0%bb%d1%8d%d0%b2%d1%8d%d0%bb%d0%b8"}, "edited": false, "score": 0, "creation_date": 1461412725, "post_id": 36809826, "comment_id": 61193898, "body": "I disagree. I can&#39;t do that for every library I&#39;m using, and I would have to keep asking to check."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1461422125, "post_id": 36809826, "comment_id": 61197021, "body": "@Joe what other languages do you use that clearly indicate that a library is deprecated? Maybe there&#39;s something that Rust / Cargo can copy."}, {"owner": {"reputation": 42480, "user_id": 148423, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/6ed1f9b5afd258d0b73ad1eae10ac384?s=128&d=identicon&r=PG", "display_name": "Joe", "link": "https://stackoverflow.com/users/148423/joe"}, "edited": false, "score": 0, "creation_date": 1461434982, "post_id": 36809826, "comment_id": 61201789, "body": "There are deprecation decorators in all kinds of of languages, e.g. Java and Python. I know these apply to functions rather than whole packages but it&#39;s easy to see in the documentation e.g. <a href=\"https://docs.python.org/2/library/urllib.html?highlight=urllib#urllib.urlopen\" rel=\"nofollow noreferrer\">docs.python.org/2/library/&hellip;</a> .  And PEP4 is relevant reading <a href=\"https://www.python.org/dev/peps/pep-0004/\" rel=\"nofollow noreferrer\">python.org/dev/peps/pep-0004</a> Steve&#39;s answer about what deprecation means in Rust was useful."}], "answers": [{"comments": [{"owner": {"reputation": 42480, "user_id": 148423, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/6ed1f9b5afd258d0b73ad1eae10ac384?s=128&d=identicon&r=PG", "display_name": "Joe", "link": "https://stackoverflow.com/users/148423/joe"}, "edited": false, "score": 0, "creation_date": 1461435166, "post_id": 36812508, "comment_id": 61201859, "body": "Thanks! I didn&#39;t expect Rust, being comparatively new, to have the same kind of stability as established languages like Python. Very good to know what deprecation means in the Rust ecosystem. I feel less bad about using the time library. It will be interesting to see if packages like for example time are truly &#39;deprecated&#39; for the meaning of that attribute and will have this it applied or not."}, {"owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "reply_to_user": {"reputation": 42480, "user_id": 148423, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/6ed1f9b5afd258d0b73ad1eae10ac384?s=128&d=identicon&r=PG", "display_name": "Joe", "link": "https://stackoverflow.com/users/148423/joe"}, "edited": false, "score": 1, "creation_date": 1461435426, "post_id": 36812508, "comment_id": 61201959, "body": "Absolutely! For more context, here&#39;s how this works: <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1242-rust-lang-crates.md\" rel=\"nofollow noreferrer\">github.com/rust-lang/rfcs/blob/master/text/&hellip;</a>"}], "tags": [], "owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "is_accepted": true, "score": 3, "last_activity_date": 1461431766, "last_edit_date": 1461431766, "creation_date": 1461424156, "answer_id": 36812508, "question_id": 36809826, "link": "https://stackoverflow.com/questions/36809826/how-can-i-tell-if-a-rust-library-is-deprecated/36812508#36812508", "title": "How can I tell if a Rust library is deprecated?", "body": "<p>One problem here is that libraries often become deprecated because the maintainer doesn't have time. So the person who has the power to say \"deprecated\" also isn't in the position to do it.</p>\n\n<p>The next release of Rust (1.9) will contain a \"deprecated\" attribute, which would allow someone to mark any part of an API as deprecated, and I guess it could be applied to a whole crate too.</p>\n\n<p>That said, for \"time\", \"deprecated\" has a very specific meaning: it's a crate that was almost official, but is not any more, and has not had a new maintainer yet. If anyone wants to take over maintenance, they can request it, and it will be given to them. This only applies to crates that are in the rust-lang-nursery organization, and even that is a bit of history. In the future, I doubt many crates will end up \"deprecated\" in this way.</p>\n"}], "owner": {"reputation": 42480, "user_id": 148423, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/6ed1f9b5afd258d0b73ad1eae10ac384?s=128&d=identicon&r=PG", "display_name": "Joe", "link": "https://stackoverflow.com/users/148423/joe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 146, "favorite_count": 0, "accepted_answer_id": 36812508, "answer_count": 1, "score": 2, "last_activity_date": 1461431766, "creation_date": 1461408679, "last_edit_date": 1461422080, "question_id": 36809826, "link": "https://stackoverflow.com/questions/36809826/how-can-i-tell-if-a-rust-library-is-deprecated", "title": "How can I tell if a Rust library is deprecated?", "body": "<p>I am looking for a Rust library to parse dates and I found <a href=\"https://doc.rust-lang.org/time/time/index.html\" rel=\"nofollow\">the documentation for <code>time</code></a> which looks official.</p>\n\n<p>I wanted to report a bug so I went to <a href=\"https://crates.io/crates/time\" rel=\"nofollow\">the Crates.io page</a>, which led me to the <a href=\"https://github.com/rust-lang/time\" rel=\"nofollow\">Github repository</a> which sneakily redirected to the <a href=\"https://github.com/rust-lang-deprecated/time\" rel=\"nofollow\">rust-deprecated Github account</a>.</p>\n\n<p>Is this library deprecated or not? How can I find out? There's no indication in the documentation or the code.</p>\n"}, {"tags": ["python", "c++", "matrix", "rust", "ffi"], "answers": [{"tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": false, "score": 1, "last_activity_date": 1461406631, "creation_date": 1461406631, "answer_id": 36809477, "question_id": 36809329, "link": "https://stackoverflow.com/questions/36809329/how-can-i-pass-a-ffi-array-as-a-c-void-pointer-to-nalgebras-dmatrix2/36809477#36809477", "title": "How can I pass a FFI array as a c_void pointer to nalgebra&#39;s DMatrix2?", "body": "<p>You can use <code>std::slice::from_raw_parts</code> to obtain a slice:</p>\n\n<pre><code>let slice = std::slice::from_raw_parts(p_data, sizex*sizey);\n</code></pre>\n\n<p>To make sure that the pointer types match up, you can either change <code>p_data</code>'s type in the argument list to <code>*const N</code> where <code>N</code> is the type you use in the matrix, or use a cast like <code>p_data as *const N</code>.</p>\n"}], "owner": {"reputation": 1, "user_id": 6076561, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/699af01978711114390071257c756507?s=128&d=identicon&r=PG&f=1", "display_name": "Chris", "link": "https://stackoverflow.com/users/6076561/chris"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 186, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1461422266, "creation_date": 1461405818, "last_edit_date": 1461422266, "question_id": 36809329, "link": "https://stackoverflow.com/questions/36809329/how-can-i-pass-a-ffi-array-as-a-c-void-pointer-to-nalgebras-dmatrix2", "title": "How can I pass a FFI array as a c_void pointer to nalgebra&#39;s DMatrix2?", "body": "<p>I have a matrix in the form of an array in C++ and would like to pass it to a shared library function written in Rust. I have something like this</p>\n\n<pre><code>#![crate_type = \"dylib\"]\n\nextern crate libc;\nuse libc::c_void;\n\nextern crate nalgebra as na;\nuse na::DMatrix2;\n\n#[no_mangle]\npub extern \"C\" fn rust_fn(p_data: *const c_void, sizex: usize, sizey: usize) {\n    let matrix = DMatrix2::from_row_vector(sizey, sizex, p_data);\n    // Do something usefull with the matrix\n}\n</code></pre>\n\n<p>This doesn't compile since I pass a <code>c_void</code> to <code>from_row_vector()</code>.</p>\n\n<p>How can I do this right?</p>\n\n<p>The matrix is an array of doubles, but I'm trying to keep the interface generic so I can also call the functions from e.g. Python.</p>\n\n<p>I don't want to free the matrix when returning from the function (I want to borrow, not own the matrix).</p>\n"}, {"tags": ["rust", "dependency-management", "rust-cargo", "rust-crates", "rayon"], "answers": [{"comments": [{"owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "edited": false, "score": 1, "creation_date": 1461403962, "post_id": 36808920, "comment_id": 61191059, "body": "They&#39;d also need to move code.rs into src/lib.rs, right?"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 7, "last_activity_date": 1461422538, "last_edit_date": 1461422538, "creation_date": 1461403346, "answer_id": 36808920, "question_id": 36808868, "link": "https://stackoverflow.com/questions/36808868/cant-find-crate-for-rayon/36808920#36808920", "title": "Can&#39;t find crate for `rayon`", "body": "<p>You cannot just use an external dependency without telling the compiler where to find it. The easiest way of doing that is to create a <code>Cargo.toml</code> file and then use <code>cargo build</code> to compile your project instead of <code>rustc</code> directly.</p>\n\n<p>To create the <code>Cargo.toml</code> file, you can just go into the project directory and type:</p>\n\n<pre><code>cargo init --bin\n</code></pre>\n\n<p>This will do two things:</p>\n\n<ol>\n<li>Create the file <code>src/main.rs</code>. You should put your code in here.</li>\n<li>Create a <code>Cargo.toml</code> file, which is used by Cargo for storing dependencies and other build information</li>\n</ol>\n\n<p>You can then edit <code>Cargo.toml</code> to add the <code>rayon</code> dependency. The <a href=\"https://crates.io/crates/rayon\" rel=\"nofollow\">crates.io page for rayon</a> gives you the exact information which you can just paste in there. When you are done, it should look something like this:</p>\n\n<pre><code>[package]\nname = \"foo\"\nversion = \"0.1.0\"\nauthors = [\"singh &lt;singh@singh.com&gt;\"]\n\n[dependencies]\nrayon = \"0.3.1\"\n</code></pre>\n\n<p>Once you have this in place, you can build the project with:</p>\n\n<pre><code>cargo build\n</code></pre>\n\n<p>Or run with:</p>\n\n<pre><code>cargo run\n</code></pre>\n\n<p>You can get more information in the <a href=\"http://doc.crates.io/guide.html\" rel=\"nofollow\">Cargo guide</a>.</p>\n"}], "owner": {"reputation": 35, "user_id": 5231791, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bb37f78587db40fca35aa10821e1d2b6?s=128&d=identicon&r=PG&f=1", "display_name": "singh", "link": "https://stackoverflow.com/users/5231791/singh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1469, "favorite_count": 0, "accepted_answer_id": 36808920, "answer_count": 1, "score": 3, "last_activity_date": 1545156984, "creation_date": 1461402988, "last_edit_date": 1545156984, "question_id": 36808868, "link": "https://stackoverflow.com/questions/36808868/cant-find-crate-for-rayon", "title": "Can&#39;t find crate for `rayon`", "body": "<p>I am trying to find the diameter of a BST using parallelization:</p>\n\n<pre><code>extern crate rayon;\n\nuse std::cmp::Ordering::*;\nuse std::ops::Index;\nuse rayon::prelude::*;\n\n#[derive(Debug)]\nstruct Node&lt;K&gt; {\n    left: Option&lt;Box&lt;Node&lt;K&gt;&gt;&gt;,\n    right: Option&lt;Box&lt;Node&lt;K&gt;&gt;&gt;,\n    key: K,\n}\n\nimpl&lt;K&gt; Node&lt;K&gt; {\n    fn new(k: K) -&gt; Node&lt;K&gt; {\n        Node {\n            left: None,\n            right: None,\n            key: k,\n        }\n    }\n}\n\nimpl&lt;K: Ord&gt; Node&lt;K&gt; {\n    fn insert(&amp;mut self, n: Node&lt;K&gt;) {\n        match n.key.cmp(&amp;self.key) {\n            Less =&gt; {\n                match self.left {\n                    None =&gt; self.left = Some(Box::new(n)),\n                    Some(ref mut l) =&gt; l.insert(n),\n                }\n            }\n            Greater =&gt; {\n                match self.right {\n                    None =&gt; self.right = Some(Box::new(n)),\n                    Some(ref mut r) =&gt; r.insert(n),\n                }\n            }\n            _ =&gt; {}\n        }\n    }\n\n    fn height(&amp;self) -&gt; u32 {\n        let mut left_he = 1;\n        if let Some(ref l) = self.left {\n            left_he = 1 + l.height()\n        }\n        let mut right_he = 1;\n        if let Some(ref r) = self.right {\n            right_he = 1 + r.height()\n        }\n        if left_he &gt; right_he {\n            return left_he;\n        }\n        return right_he;\n    }\n\n    fn rec(&amp;self) -&gt; u32 {\n        let mut le = 0;\n        if let Some(ref l) = self.left {\n            le = l.height()\n        }\n        let mut re = 0;\n        if let Some(ref r) = self.right {\n            re = r.height()\n        }\n        let hei = le + re + 1;\n        let mut led = 0;\n        let mut red = 0;\n\n        let Some(ref l) = self.left;\n\n        let Some(ref r) = self.right;\n\n        rayon::join(|| led = l.rec(), || red = r.rec());\n\n        let greater_diameter;\n        if red &gt; led {\n            greater_diameter = red;\n        } else {\n            greater_diameter = led;\n        }\n\n        if hei &gt; greater_diameter {\n            return hei;\n        }\n        return greater_diameter;\n    }\n\n    fn print_recursive(nodes: Vec&lt;&amp;Self&gt;) {\n        let mut v: Vec&lt;&amp;Self&gt; = vec![];\n        for n in nodes {\n            print!(\"1 \");\n            match n.left {\n                None =&gt; {}\n                Some(ref l) =&gt; v.push(&amp;*l),\n            }\n            match n.right {\n                None =&gt; {}\n                Some(ref r) =&gt; v.push(&amp;*r),\n            }\n        }\n        println!(\"\");\n        if v.len() &gt; 0 {\n            Node::print_recursive(v);\n        }\n    }\n}\n\n#[derive(Debug, Default)]\nstruct Bst&lt;K&gt; {\n    root: Option&lt;Box&lt;Node&lt;K&gt;&gt;&gt;,\n}\nimpl&lt;K&gt; Bst&lt;K&gt; {\n    fn new() -&gt; Bst&lt;K&gt; {\n        Bst { root: None }\n    }\n}\n\nimpl&lt;K: Ord&gt; Bst&lt;K&gt; {\n    fn insert(&amp;mut self, k: K) {\n        match self.root {\n            None =&gt; self.root = Some(Box::new(Node::new(k))),\n            Some(ref mut r) =&gt; r.insert(Node::new(k)),\n        }\n    }\n\n    fn rec(&amp;self) -&gt; u32 {\n        match self.root {\n            None =&gt; 0,\n            Some(ref r) =&gt; r.rec(),\n        }\n    }\n\n    fn print(&amp;self) {\n        match self.root {\n            None =&gt; {}\n            Some(ref r) =&gt; Node::print_recursive(vec![&amp;*r]),\n        };\n    }\n}\n\nfn main() {\n    let mut bst1 = Bst::new();\n\n    bst1.insert(20);\n    bst1.insert(21);\n    bst1.insert(22);\n    bst1.insert(23);\n    bst1.insert(24);\n    bst1.insert(25);\n    bst1.insert(19);\n    bst1.insert(18);\n    bst1.insert(17);\n    bst1.insert(16);\n    bst1.insert(15);\n    bst1.insert(14);\n    bst1.print();\n\n    println!(\"{}\", bst1.rec());\n}\n</code></pre>\n\n<p>When I compile (<code>rustc code.rs</code>), it shows </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: can't find crate for `rayon` [E0463]\n</code></pre>\n\n<p>My Rust version is <code>rustc 1.8.0 (db2939409 2016-04-11)</code></p>\n"}, {"tags": ["rust", "thread-synchronization"], "answers": [{"tags": [], "owner": {"reputation": 1987, "user_id": 5278682, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/34509cba2b4d128dce294dcf5092d300?s=128&d=identicon&r=PG&f=1", "display_name": "Eli Friedman", "link": "https://stackoverflow.com/users/5278682/eli-friedman"}, "is_accepted": false, "score": 2, "last_activity_date": 1461365499, "creation_date": 1461365499, "answer_id": 36804501, "question_id": 36803532, "link": "https://stackoverflow.com/questions/36803532/is-the-destructor-of-arc-guaranteed-to-be-called-before-upgrading-a-weak-referen/36804501#36804501", "title": "Is the destructor of Arc guaranteed to be called before upgrading a Weak reference will return None?", "body": "<p>No.  What you're asking for would require <code>upgrade</code> to block while the the value is being dropped.  This is a bad idea in general because it could cause a deadlock in unexpected places.</p>\n\n<p>It's hard to suggest a better solution without knowing what you're doing; what is the shared resource in question?</p>\n"}], "owner": {"reputation": 111, "user_id": 4032476, "user_type": "registered", "accept_rate": 25, "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Pentagolo", "link": "https://stackoverflow.com/users/4032476/pentagolo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 54, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1461366242, "creation_date": 1461360194, "last_edit_date": 1461366242, "question_id": 36803532, "link": "https://stackoverflow.com/questions/36803532/is-the-destructor-of-arc-guaranteed-to-be-called-before-upgrading-a-weak-referen", "title": "Is the destructor of Arc guaranteed to be called before upgrading a Weak reference will return None?", "body": "<p>Is the destructor (<code>Drop</code>) of the wrapped value of <code>std::sync::Arc</code> guaranteed to be called / finished before the call of <code>upgrade</code> of a <code>std::sync::Weak</code> reference to the same object of any other thread may result in <code>None</code>?</p>\n\n<p>I do need this in order to ensure that a reference counted value is a singleton.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 3031, "user_id": 576488, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/6394f70dd009d4d16bb2c969c82c2ff1?s=128&d=identicon&r=PG", "display_name": "SBSTP", "link": "https://stackoverflow.com/users/576488/sbstp"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1461343624, "post_id": 36799180, "comment_id": 61172667, "body": "I&#39;ve been there, and it doesn&#39;t quite answer my question. At least not to my understanding. I know about trait inheritance. Doing <code>trait Alias: Trait&lt;T&gt;</code> doesn&#39;t do what I want, because it requires people to implement <code>Trait&lt;T&gt;</code> anyway. I want to offer a trait that hides the generics."}], "answers": [{"tags": [], "owner": {"reputation": 1686, "user_id": 1217063, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/xRgTZ.jpg?s=128&g=1", "display_name": "ampron", "link": "https://stackoverflow.com/users/1217063/ampron"}, "is_accepted": false, "score": 1, "last_activity_date": 1462055615, "last_edit_date": 1462055615, "creation_date": 1462037529, "answer_id": 36958033, "question_id": 36799180, "link": "https://stackoverflow.com/questions/36799180/alias-generic-trait-with-default-types/36958033#36958033", "title": "Alias generic trait with default types", "body": "<p>Here's my best suggestion, it's going to mean a bit more work on your part (with lots of manual trait inheritance), but it should achieve the user convenience that you want.</p>\n\n<pre><code>pub mod user_friendly {\n    pub trait GivesNum&lt;T&gt; {\n        fn get_num(&amp;self) -&gt; T;\n    }\n\n    pub trait GivesDouble {\n        fn get_double(&amp;self) -&gt; f64;\n    }\n\n    impl&lt;S&gt; GivesNum&lt;f64&gt; for S where S: GivesDouble {\n        fn get_num(&amp;self) -&gt; f64 { self.get_double() }\n    }\n}\n\n// now your library's user needs to do less\nuse user_friendly::*;\n\nstruct MyStruct { num: f64 }\n\nimpl GivesDouble for MyStruct {\n    fn get_double(&amp;self) -&gt; f64 { 2.0 * self.num }\n}\n\nfn main() {\n    let s = MyStruct{ num: 5.0 };\n    println!(\"MyStruct.get_num() = {}\", s.get_num());\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=127020a195655d5c75d90e99f08dccad&amp;version=nightly&amp;backtrace=0\" rel=\"nofollow\">Try it on Rust Playground</a></p>\n"}], "owner": {"reputation": 3031, "user_id": 576488, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/6394f70dd009d4d16bb2c969c82c2ff1?s=128&d=identicon&r=PG", "display_name": "SBSTP", "link": "https://stackoverflow.com/users/576488/sbstp"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 546, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1462055615, "creation_date": 1461343142, "last_edit_date": 1495535291, "question_id": 36799180, "link": "https://stackoverflow.com/questions/36799180/alias-generic-trait-with-default-types", "title": "Alias generic trait with default types", "body": "<p>I have a trait that is generic: <code>trait Trait&lt;T&gt;</code> and I want to create another trait that specifies the generics: <code>type Alias = Trait&lt;String&gt;</code>. This would allow <code>impl Alias for T</code> and not have to specify the type parameters. I tried a couple ways of doing this and haven't found any that works.</p>\n\n<p>This is not a duplicate of <a href=\"https://stackoverflow.com/q/26070559/155423\">Type alias for multiple traits</a> or <a href=\"https://stackoverflow.com/q/30424100/155423\">Aliasing trait with associated types</a> because doing <code>trait Alias: Trait&lt;T&gt;</code> requires people to implement <code>Trait&lt;T&gt;</code> anyway. I want to offer a trait that hides the generics.</p>\n\n<p>A clearer code sample:</p>\n\n<pre><code>trait DefaultEvents = Events&lt;UserStruct, ChannelStruct, IrcStruct&gt;;\n\nstruct MyHandler;\n\nimpl DefaultEvents for MyHandler {\n    ...\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 187800, "user_id": 320615, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/65c80e12b6a33913538653f6d4ef1277?s=128&d=identicon&r=PG", "display_name": "Dogbert", "link": "https://stackoverflow.com/users/320615/dogbert"}, "edited": false, "score": 2, "creation_date": 1461339554, "post_id": 36798026, "comment_id": 61170289, "body": "There&#39;s a <code>step</code> iterator in <code>itertools</code>: <a href=\"https://bluss.github.io/rust-itertools/doc/itertools/trait.Itertools.html#method.step\" rel=\"nofollow noreferrer\">bluss.github.io/rust-itertools/doc/itertools/&hellip;</a>"}, {"owner": {"reputation": 351, "user_id": 1482664, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ff369a4b70f05978d1b5e83dbcceaa6e?s=128&d=identicon&r=PG", "display_name": "anula", "link": "https://stackoverflow.com/users/1482664/anula"}, "reply_to_user": {"reputation": 187800, "user_id": 320615, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/65c80e12b6a33913538653f6d4ef1277?s=128&d=identicon&r=PG", "display_name": "Dogbert", "link": "https://stackoverflow.com/users/320615/dogbert"}, "edited": false, "score": 1, "creation_date": 1461339808, "post_id": 36798026, "comment_id": 61170449, "body": "Nice, though I hoped for something from standard library. Setting in which I use Rust currently makes it... inconvenient to use external crates."}, {"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "edited": false, "score": 2, "creation_date": 1461342488, "post_id": 36798026, "comment_id": 61172010, "body": "You&#39;ll have a really bad time then. Much work has been invested to make using third party crates simple, and so everyone works under the assumption that adding a dependency is a no brainer. This is not just a cultural thing, it&#39;s actively used to justify omitting things from the standard library. I have no idea what your circumstances are but you should try hard to fix that."}, {"owner": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "edited": false, "score": 3, "creation_date": 1461397997, "post_id": 36798026, "comment_id": 61189565, "body": "There&#39;s a pile of hard-to-fix reasons that one can&#39;t easily use external crates, both technical and otherwise. For instance, one might be on a locked-down corporate network (or an otherwise unreliable/slow connection), or have code review requirements for external code (e.g. for licensing). There is <a href=\"https://github.com/rust-lang/cargo/pull/2361\" rel=\"nofollow noreferrer\">ongoing work in cargo itself</a> to give people more tools for the first case."}, {"owner": {"reputation": 351, "user_id": 1482664, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ff369a4b70f05978d1b5e83dbcceaa6e?s=128&d=identicon&r=PG", "display_name": "anula", "link": "https://stackoverflow.com/users/1482664/anula"}, "edited": false, "score": 0, "creation_date": 1461414282, "post_id": 36798026, "comment_id": 61194412, "body": "In my case it is that I don&#39;t use cargo, as it doesn&#39;t really support cross-compilation. Rust advertises as a system programming language, and that is what I use it for right now. Every additional crate I need to download, provide all dependencies for and compile on my own, typically adding a few changes to support my system&#39;s API."}, {"owner": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "edited": false, "score": 1, "creation_date": 1461415397, "post_id": 36798026, "comment_id": 61194828, "body": "Hm, could you expand? In my experience cargo is one of the nicest cross-compilation experiences I&#39;ve ever had, as it&#39;s just <code>cargo build --target ...</code>, and (if you&#39;re using <code>std</code>/<code>core</code>) doubly so with <a href=\"https://internals.rust-lang.org/t/beta-testing-rustup-rs/3316\" rel=\"nofollow noreferrer\">the new <code>rustup</code></a> that makes <a href=\"https://github.com/rust-lang-nursery/rustup.rs/blob/master/README.md#cross-compilation\" rel=\"nofollow noreferrer\">installing the standard library for new targets</a> quite easy. It definitely gets much more annoying with crates with C dependencies, but pure Rust things like <code>itertools</code> should slot in seemlessly."}, {"owner": {"reputation": 351, "user_id": 1482664, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ff369a4b70f05978d1b5e83dbcceaa6e?s=128&d=identicon&r=PG", "display_name": "anula", "link": "https://stackoverflow.com/users/1482664/anula"}, "reply_to_user": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "edited": false, "score": 0, "creation_date": 1461576209, "post_id": 36798026, "comment_id": 61243449, "body": "@huon - yes, you are right. It is a lot more complicated that just &quot;lack of cross-compilation support&quot;, I shouldn&#39;t have phrased it this way. I am plugging Rust into an older project, that is written mostly in C and it is either impossible or very hard to incorporate cargo in that."}, {"owner": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "edited": false, "score": 1, "creation_date": 1461675312, "post_id": 36798026, "comment_id": 61298233, "body": "@anula, ah, makes sense. FWIW, Rust aims to be good at being integrated into older codebases and different languages, so if there&#39;s some particular pain points that make cargo not work (beyond just the difficulties of retrofitting new tools into existing infrastructure/build system), be sure to ask/provide feedback on <a href=\"https://users.rust-lang.org/\" rel=\"nofollow noreferrer\">users.rust-lang.org</a> (or feel free ask here, if it&#39;s a question that fits SO). :)"}], "answers": [{"comments": [{"owner": {"reputation": 351, "user_id": 1482664, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ff369a4b70f05978d1b5e83dbcceaa6e?s=128&d=identicon&r=PG", "display_name": "anula", "link": "https://stackoverflow.com/users/1482664/anula"}, "edited": false, "score": 0, "creation_date": 1461414683, "post_id": 36799123, "comment_id": 61194559, "body": "That is a pretty nice solution. Since there is nothing in standard library, I guess there is no other way than to implement it if I don&#39;t want external crates. I am not sure what you mean by &quot;You didn&#39;t specify where in the cycle of N the iterator picks from&quot; but I could just use <code>x.iter().skip(3).every_nth(5)</code> if I wanted to shift the window a bit."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 7, "last_activity_date": 1461342991, "last_edit_date": 1495541889, "creation_date": 1461342991, "answer_id": 36799123, "question_id": 36798026, "link": "https://stackoverflow.com/questions/36798026/iterator-that-returns-each-nth-value/36799123#36799123", "title": "Iterator that returns each Nth value", "body": "<p>As <a href=\"https://stackoverflow.com/questions/36798026/rust-iterator-that-returns-each-n-th-value#comment61170289_36798026\">Dogbert said</a>, use <a href=\"https://bluss.github.io/rust-itertools/doc/itertools/trait.Itertools.html#method.step\" rel=\"nofollow noreferrer\">itertools' <code>step</code></a>.</p>\n\n<p>You are going to be in a world of hurt if you can't use external crates. The Rust ecosystem strongly encourages everything to be pushed to crates. Maybe you should just clone the repository locally and use it that way if you can.</p>\n\n<p>Otherwise, write it yourself:</p>\n\n<pre><code>use std::iter::Fuse;\n\nstruct Nth&lt;I&gt; {\n    n: usize,\n    iter: Fuse&lt;I&gt;,\n}\n\nimpl&lt;I&gt; Iterator for Nth&lt;I&gt;\n    where I: Iterator\n{\n    type Item = I::Item;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        let mut nth = None;\n\n        for _ in 0..self.n {\n            nth = self.iter.next();\n        }\n\n        nth\n    }\n}\n\ntrait EveryNth: Iterator + Sized {\n    fn every_nth(self, n: usize) -&gt; Nth&lt;Self&gt; {\n        Nth { n: n, iter: self.fuse() }\n    }\n}\n\nimpl&lt;I&gt; EveryNth for I where I: Iterator {}\n\nfn main() {\n    let x = [1,2,3,4,5,6,7,8,9];\n\n    for v in x.iter().every_nth(1) { println!(\"{}\", v) }\n    println!(\"---\");\n    for v in x.iter().every_nth(2) { println!(\"{}\", v) }\n    println!(\"---\");\n    for v in x.iter().every_nth(3) { println!(\"{}\", v) }\n    println!(\"---\");\n    for v in x.iter().every_nth(4) { println!(\"{}\", v) }\n    println!(\"---\");\n    for v in x.iter().every_nth(5) { println!(\"{}\", v) }\n    println!(\"---\");\n    for v in x.iter().every_nth(6) { println!(\"{}\", v) }\n}\n</code></pre>\n\n<p>Note this is different behavior from itertools. You didn't specify where in the cycle of N the iterator picks from, so I chose the one that was easiest to code. </p>\n"}, {"tags": [], "owner": {"reputation": 5760, "user_id": 1863564, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/XU4XS.png?s=128&g=1", "display_name": "Fund Monica&#39;s Lawsuit", "link": "https://stackoverflow.com/users/1863564/fund-monicas-lawsuit"}, "is_accepted": true, "score": 6, "last_activity_date": 1587996056, "last_edit_date": 1587996056, "creation_date": 1563125392, "answer_id": 57029650, "question_id": 36798026, "link": "https://stackoverflow.com/questions/36798026/iterator-that-returns-each-nth-value/57029650#57029650", "title": "Iterator that returns each Nth value", "body": "<p>As of Rust 1.26, there is the <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.step_by\" rel=\"nofollow noreferrer\"><code>Iterator::step_by</code></a> method in the standard library: </p>\n\n<blockquote>\n  <p>Basic usage:</p>\n\n<pre><code>let a = [0, 1, 2, 3, 4, 5];\nlet mut iter = a.iter().step_by(2);\n\nassert_eq!(iter.next(), Some(&amp;0));\nassert_eq!(iter.next(), Some(&amp;2));\nassert_eq!(iter.next(), Some(&amp;4));\nassert_eq!(iter.next(), None);\n</code></pre>\n</blockquote>\n"}], "owner": {"reputation": 351, "user_id": 1482664, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ff369a4b70f05978d1b5e83dbcceaa6e?s=128&d=identicon&r=PG", "display_name": "anula", "link": "https://stackoverflow.com/users/1482664/anula"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2380, "favorite_count": 0, "accepted_answer_id": 57029650, "answer_count": 2, "score": 5, "last_activity_date": 1587996056, "creation_date": 1461339467, "last_edit_date": 1461341483, "question_id": 36798026, "link": "https://stackoverflow.com/questions/36798026/iterator-that-returns-each-nth-value", "title": "Iterator that returns each Nth value", "body": "<p>I have an iterator <code>iter</code>; is it possible to convert it into an iterator that iterates over each Nth element? Something like <code>iter.skip_each(n - 1)</code>?</p>\n"}, {"tags": ["rust", "floating-point", "rounding", "inline-assembly", "llvm-codegen"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1461319387, "post_id": 36789681, "comment_id": 61156212, "body": "I am afraid that this information may very much depends on the version of LLVM (which is free to add/remove passes), and as a result tied to the version of <code>rustc</code>. Which version of <code>rustc</code> are you using? Do you mind if this breaks when upgrading?"}, {"owner": {"reputation": 659, "user_id": 1886200, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/3c2cfc7d5826f8d4a2b0b941ac461324?s=128&d=identicon&r=PG", "display_name": "Houss_gc", "link": "https://stackoverflow.com/users/1886200/houss-gc"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1461321220, "post_id": 36789681, "comment_id": 61157349, "body": "I am using Rust 1.10 nightly. I don&#39;t mind if it breaks. If I understand what is causing this behavior I can with a little bit of hard work make some workaround."}, {"owner": {"reputation": 659, "user_id": 1886200, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/3c2cfc7d5826f8d4a2b0b941ac461324?s=128&d=identicon&r=PG", "display_name": "Houss_gc", "link": "https://stackoverflow.com/users/1886200/houss-gc"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1461321411, "post_id": 36789681, "comment_id": 61157491, "body": "After some reading i think that there is some scheduling passes that are moving the divide instruction before the upward() function call. (just a guess), correct me if I am wrong."}, {"owner": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "edited": false, "score": 0, "creation_date": 1461396873, "post_id": 36789681, "comment_id": 61189292, "body": "Please include the exact code you&#39;re testing with: if by &quot;one third&quot; you mean literally the expression <code>1.0&#47;3.0</code>, then this will be evaluated <i>at compile time</i> (i.e. using whatever rounding mode LLVM chooses to use at compile time) when optimisations are on. The question becomes harder to answer if you are computing &quot;one third&quot; in a way the optimiser can&#39;t see through (e.g. parsing command line arguments)."}, {"owner": {"reputation": 659, "user_id": 1886200, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/3c2cfc7d5826f8d4a2b0b941ac461324?s=128&d=identicon&r=PG", "display_name": "Houss_gc", "link": "https://stackoverflow.com/users/1886200/houss-gc"}, "reply_to_user": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "edited": false, "score": 0, "creation_date": 1461415174, "post_id": 36789681, "comment_id": 61194738, "body": "@huon This is the <a href=\"http://pastebin.com/p4EVk6wV\" rel=\"nofollow noreferrer\">code</a> that I am using to test. Can I force llvm to use some rounding mode at compile time ??."}], "answers": [{"comments": [{"owner": {"reputation": 659, "user_id": 1886200, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/3c2cfc7d5826f8d4a2b0b941ac461324?s=128&d=identicon&r=PG", "display_name": "Houss_gc", "link": "https://stackoverflow.com/users/1886200/houss-gc"}, "edited": false, "score": 0, "creation_date": 1461415389, "post_id": 36804331, "comment_id": 61194824, "body": "If I understand you right, when using the inline assembly the rounding mode set at the mxcsr or the fctrl registers is taken into account by the computation in the asm! macro?"}, {"owner": {"reputation": 1987, "user_id": 5278682, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/34509cba2b4d128dce294dcf5092d300?s=128&d=identicon&r=PG&f=1", "display_name": "Eli Friedman", "link": "https://stackoverflow.com/users/5278682/eli-friedman"}, "reply_to_user": {"reputation": 659, "user_id": 1886200, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/3c2cfc7d5826f8d4a2b0b941ac461324?s=128&d=identicon&r=PG", "display_name": "Houss_gc", "link": "https://stackoverflow.com/users/1886200/houss-gc"}, "edited": false, "score": 2, "creation_date": 1461444725, "post_id": 36804331, "comment_id": 61205029, "body": "Yes.  At that point, you&#39;re basically just writing raw assembly, so the semantics of Rust or LLVM IR doesn&#39;t matter."}, {"owner": {"reputation": 659, "user_id": 1886200, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/3c2cfc7d5826f8d4a2b0b941ac461324?s=128&d=identicon&r=PG", "display_name": "Houss_gc", "link": "https://stackoverflow.com/users/1886200/houss-gc"}, "edited": false, "score": 0, "creation_date": 1461445523, "post_id": 36804331, "comment_id": 61205284, "body": "Yes ofc, LLVM optimization are made on the IR, thank you."}], "tags": [], "owner": {"reputation": 1987, "user_id": 5278682, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/34509cba2b4d128dce294dcf5092d300?s=128&d=identicon&r=PG&f=1", "display_name": "Eli Friedman", "link": "https://stackoverflow.com/users/5278682/eli-friedman"}, "is_accepted": true, "score": 5, "last_activity_date": 1461366295, "last_edit_date": 1461366295, "creation_date": 1461364546, "answer_id": 36804331, "question_id": 36789681, "link": "https://stackoverflow.com/questions/36789681/setting-a-non-default-rounding-mode-with-rust-inline-asm-isnt-respected-by-the/36804331#36804331", "title": "Setting a non-default rounding mode with Rust inline asm isn&#39;t respected by the LLVM optimizer?", "body": "<p>Basically, you can't do this.  LLVM assumes that all floating point operations use the default rounding mode, and that the floating-point control register is never read or modified.</p>\n\n<p>There's been <a href=\"http://lists.llvm.org/pipermail/llvm-dev/2016-February/094869.html\" rel=\"nofollow\">some discussion of this issue recently on the LLVM-dev mailing list</a>, if you're interested.</p>\n\n<p>In the meantime, the only reliable workaround is to use inline assembly, like  <code>asm!(\"addsd $0, $1\"</code>.</p>\n\n<p>Rust's standard library also assumes that you don't modify the rounding mode (in particular, the code for converting between floating-point and strings is sensitive to this).</p>\n"}], "owner": {"reputation": 659, "user_id": 1886200, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/3c2cfc7d5826f8d4a2b0b941ac461324?s=128&d=identicon&r=PG", "display_name": "Houss_gc", "link": "https://stackoverflow.com/users/1886200/houss-gc"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 343, "favorite_count": 0, "accepted_answer_id": 36804331, "answer_count": 1, "score": 5, "last_activity_date": 1564866169, "creation_date": 1461316412, "last_edit_date": 1564866169, "question_id": 36789681, "link": "https://stackoverflow.com/questions/36789681/setting-a-non-default-rounding-mode-with-rust-inline-asm-isnt-respected-by-the", "title": "Setting a non-default rounding mode with Rust inline asm isn&#39;t respected by the LLVM optimizer?", "body": "<p>I am working on a Rust crate which changes the rounding mode (+inf, -inf, nearest, or truncate).</p>\n\n<p>The functions that change the rounding mode are written using inline assembly:</p>\n\n<pre><code>fn upward() {\n    let cw: u32 = 0;\n    unsafe {\n    asm!(\"stmxcsr $0;\n          mov $0, %eax;\n          or $$0x4000, %eax;\n          mov %eax, $0;\n          ldmxcsr $0;\"\n          : \"=*m\"(&amp;cw)\n          : \"*m\"(&amp;cw)\n          : \"{eax}\"\n        );\n    }\n}\n</code></pre>\n\n<p>When I compile the code in debug mode it works as intended, I get 0.3333333333337 for one-third when rounding toward positive infinity, but when I compile in release mode I get the same result no matter what rounding mode I set. I guess this behavior is due to the optimizations that the LLVM backend does.</p>\n\n<p>If I knew which LLVM passes are responsible for this optimization, I can disable them as I don't see any other workaround at the moment.</p>\n"}, {"tags": ["memory-management", "rust"], "answers": [{"tags": [], "owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "is_accepted": false, "score": 2, "last_activity_date": 1461315115, "creation_date": 1461315115, "answer_id": 36789212, "question_id": 36789046, "link": "https://stackoverflow.com/questions/36789046/how-can-i-delay-rusts-memory-auto-management/36789212#36789212", "title": "How can I delay Rust&#39;s memory auto-management?", "body": "<p>You could create the struct outside the loop once and just clear it on every iteration.</p>\n\n<p>Rust allocates variables like this on the stack, so it can't just add them indefinitely, or you'll get a stack overflow. (Also, getting rid of the memory is extremely fast; it's the Drop implementation running that is probably slow, if it has a lot of internal things like Vecs and Strings to deallocate.)</p>\n"}, {"comments": [{"owner": {"reputation": 89, "user_id": 4837852, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b7179ba8db61f24485ef85461f0dd268?s=128&d=identicon&r=PG&f=1", "display_name": "divinites", "link": "https://stackoverflow.com/users/4837852/divinites"}, "edited": false, "score": 0, "creation_date": 1461322467, "post_id": 36789733, "comment_id": 61158139, "body": "So we manually create a &quot;garbage holder&quot; to work around this problem? How if we use unsafe functions such as libc::malloc and libc::free?"}, {"owner": {"reputation": 4324, "user_id": 1045510, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/abde71672c5b271c778d3ed312347866?s=128&d=identicon&r=PG", "display_name": "Kroltan", "link": "https://stackoverflow.com/users/1045510/kroltan"}, "edited": false, "score": 0, "creation_date": 1461322994, "post_id": 36789733, "comment_id": 61158476, "body": "In the case of a single value, the garbage holder could simply be <code>Option&lt;T&gt;</code>?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 89, "user_id": 4837852, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b7179ba8db61f24485ef85461f0dd268?s=128&d=identicon&r=PG&f=1", "display_name": "divinites", "link": "https://stackoverflow.com/users/4837852/divinites"}, "edited": false, "score": 0, "creation_date": 1461326587, "post_id": 36789733, "comment_id": 61160872, "body": "@divinites: same effect as the garbage holder, less efficient, more painful :)"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 4324, "user_id": 1045510, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/abde71672c5b271c778d3ed312347866?s=128&d=identicon&r=PG", "display_name": "Kroltan", "link": "https://stackoverflow.com/users/1045510/kroltan"}, "edited": false, "score": 1, "creation_date": 1461326650, "post_id": 36789733, "comment_id": 61160922, "body": "@Kroltan: Actually, it could be a <code>let delayed_destruction;</code>. Rust tracks the move in/out of variables and thus allows uninitialized variables as long as it can prove that they will be initialized by their point of use."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1461331624, "post_id": 36789733, "comment_id": 61164643, "body": "I&#39;ve done exactly the &quot;garbage holder&quot; trick when benchmarking code. If you know the size of the loop ahead of time, you can allocate the <code>Vec</code> with that capacity and avoid reallocating in your inner loop."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 3, "last_activity_date": 1461316546, "creation_date": 1461316546, "answer_id": 36789733, "question_id": 36789046, "link": "https://stackoverflow.com/questions/36789046/how-can-i-delay-rusts-memory-auto-management/36789733#36789733", "title": "How can I delay Rust&#39;s memory auto-management?", "body": "<p>There are two potential fixes:</p>\n\n<ul>\n<li>recycling</li>\n<li>delaying</li>\n</ul>\n\n<p>In high performance systems recycling can help avoiding all the drop/create iterations by simply reusing the same object (and all its allocated memory) in place; however if not done carefully it may means leaking information from one use to the next.</p>\n\n<p>Delaying is much simpler, although not as fast. In your situation it would involve using a <code>Vec</code> to delay destruction:</p>\n\n<pre><code>let mut delayed_destruction = vec!();\n\nloop {\n    let mut example = Very_Complicated_Struct::new();\n    // very complicated data structure created\n\n    dealing_with(&amp;mut example);\n\n    // Will be destroyed later.\n    delayed_destruction.push(example);\n}\n\n\ntime_demanding_steps();\n\n// Destruction occurs here\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1461343179, "last_edit_date": 1495542233, "creation_date": 1461331853, "answer_id": 36795263, "question_id": 36789046, "link": "https://stackoverflow.com/questions/36789046/how-can-i-delay-rusts-memory-auto-management/36795263#36795263", "title": "How can I delay Rust&#39;s memory auto-management?", "body": "<p>Using a <a href=\"https://github.com/SimonSapin/rust-typed-arena\" rel=\"nofollow noreferrer\"><code>TypedArena</code></a> may also be a solution.</p>\n\n<pre><code>let arena = Arena::new()\n\nloop {\n    let example = arena.alloc(Very_Complicated_Struct::new());\n    dealing_with(example);\n}\n\ntime_demanding_steps();\n\n// Arena and all contained values are dropped\n</code></pre>\n\n<p>There are a few limitations you have to adhere to, notably the fact that you won't own the structure directly; you only get a <code>&amp;mut T</code>.</p>\n\n<p>This is a specialized case of the \"garbage holder\" pattern <a href=\"https://stackoverflow.com/a/36789733/155423\">described by Matthieu M.</a>.</p>\n"}], "owner": {"reputation": 89, "user_id": 4837852, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b7179ba8db61f24485ef85461f0dd268?s=128&d=identicon&r=PG&f=1", "display_name": "divinites", "link": "https://stackoverflow.com/users/4837852/divinites"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 181, "favorite_count": 1, "accepted_answer_id": 36795263, "answer_count": 3, "score": 2, "last_activity_date": 1461343179, "creation_date": 1461314561, "last_edit_date": 1461314871, "question_id": 36789046, "link": "https://stackoverflow.com/questions/36789046/how-can-i-delay-rusts-memory-auto-management", "title": "How can I delay Rust&#39;s memory auto-management?", "body": "<p>Rust developed a clever memory management system, but I have the following situation:</p>\n\n<pre><code>loop {\n    let mut example = Very_Complicated_Struct::new();\n    // very complicated data structure created\n\n    dealing_with(&amp;mut example);\n}\n// End of scope, so Rust is supposed to automatically drop the\n// memory of example here, which is time consuming\n\ntime_demanding_steps();\n\n// But I want Rust to drop memory here,\n// after the time_demanding_steps()\n</code></pre>\n\n<p>Is there a way in Rust to do so?</p>\n"}, {"tags": ["enums", "rust", "default"], "comments": [{"owner": {"reputation": 3039, "user_id": 2851815, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/37MCt.png?s=128&g=1", "display_name": "\u043d\u0430\u0431\u0438\u044f\u0447\u043b\u044d\u0432\u044d\u043b\u0438", "link": "https://stackoverflow.com/users/2851815/%d0%bd%d0%b0%d0%b1%d0%b8%d1%8f%d1%87%d0%bb%d1%8d%d0%b2%d1%8d%d0%bb%d0%b8"}, "edited": false, "score": 0, "creation_date": 1461259651, "post_id": 36775864, "comment_id": 61129821, "body": "You <code>impl</code> for types, is any of <code>States::{A, B, C}</code> a type?"}, {"owner": {"reputation": 689, "user_id": 1840136, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/69f106b8c06a74abbb5d7fa65753a1c9?s=128&d=identicon&r=PG&f=1", "display_name": "Bohdan Ivanov", "link": "https://stackoverflow.com/users/1840136/bohdan-ivanov"}, "reply_to_user": {"reputation": 3039, "user_id": 2851815, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/37MCt.png?s=128&g=1", "display_name": "\u043d\u0430\u0431\u0438\u044f\u0447\u043b\u044d\u0432\u044d\u043b\u0438", "link": "https://stackoverflow.com/users/2851815/%d0%bd%d0%b0%d0%b1%d0%b8%d1%8f%d1%87%d0%bb%d1%8d%d0%b2%d1%8d%d0%bb%d0%b8"}, "edited": false, "score": 0, "creation_date": 1461261949, "post_id": 36775864, "comment_id": 61131014, "body": "No, it&#39;s value, but aside of it <code>States::{A, B, C}</code>&#39;s have fields that can be initialized."}], "answers": [{"comments": [{"owner": {"reputation": 689, "user_id": 1840136, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/69f106b8c06a74abbb5d7fa65753a1c9?s=128&d=identicon&r=PG&f=1", "display_name": "Bohdan Ivanov", "link": "https://stackoverflow.com/users/1840136/bohdan-ivanov"}, "edited": false, "score": 2, "creation_date": 1461264346, "post_id": 36777679, "comment_id": 61132390, "body": "Never expected Dogbert to answer my question at SO :)  Ok, thanks, seems like boilerplate for me, and makes enum variants pretty useless for such cases for now."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 689, "user_id": 1840136, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/69f106b8c06a74abbb5d7fa65753a1c9?s=128&d=identicon&r=PG&f=1", "display_name": "Bohdan Ivanov", "link": "https://stackoverflow.com/users/1840136/bohdan-ivanov"}, "edited": false, "score": 0, "creation_date": 1461306274, "post_id": 36777679, "comment_id": 61147939, "body": "@BIvanov: To be honest, this is the first time that I&#39;ve seen this requirement; the main benefit I had seen about struct variants was the ability to <i>document</i> the fields (<code>A { left_child: Node, value: T, right_child: Node }</code> being more self-explanatory than <code>A(Node, T, Node)</code>)."}], "tags": [], "owner": {"reputation": 187800, "user_id": 320615, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/65c80e12b6a33913538653f6d4ef1277?s=128&d=identicon&r=PG", "display_name": "Dogbert", "link": "https://stackoverflow.com/users/320615/dogbert"}, "is_accepted": true, "score": 8, "last_activity_date": 1461263283, "creation_date": 1461263283, "answer_id": 36777679, "question_id": 36775864, "link": "https://stackoverflow.com/questions/36775864/use-default-trait-for-struct-as-enum-option/36777679#36777679", "title": "Use Default trait for struct as enum option", "body": "<p>This is currently not possible because enum variants are not first class types. There is an open RFC that proposes \"making enum variants first-class types\": <a href=\"https://github.com/rust-lang/rfcs/pull/1450\" rel=\"noreferrer\">RFC 1450</a>. Until that is accepted and implemented, the workaround most people use for this is to make proper structs for each variant, and then make a simple enum wrapping those structs:</p>\n\n<pre><code>struct A { opts: Vec&lt;States&gt; }\nstruct B { opts: Vec&lt;States&gt; }\nstruct C { opts: Vec&lt;States&gt; }\n\nenum States {\n    A(A),\n    B(B),\n    C(C)\n}\n</code></pre>\n\n<p>Then you can implement <code>Default</code> for <code>A</code>, <code>B</code>, and <code>C</code>.</p>\n\n<pre><code>impl Default for A {\n    fn default() -&gt; A {\n        A { opts: Vec::new() }\n    }\n}\n</code></pre>\n\n<p>and use them as <code>A::default()</code>, <code>B::default()</code>, and <code>C::default()</code>.</p>\n"}], "owner": {"reputation": 689, "user_id": 1840136, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/69f106b8c06a74abbb5d7fa65753a1c9?s=128&d=identicon&r=PG&f=1", "display_name": "Bohdan Ivanov", "link": "https://stackoverflow.com/users/1840136/bohdan-ivanov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4101, "favorite_count": 1, "accepted_answer_id": 36777679, "answer_count": 1, "score": 3, "last_activity_date": 1588859814, "creation_date": 1461257126, "last_edit_date": 1461281452, "question_id": 36775864, "link": "https://stackoverflow.com/questions/36775864/use-default-trait-for-struct-as-enum-option", "title": "Use Default trait for struct as enum option", "body": "<p>I have an enum like this:</p>\n\n<pre><code>enum States {\n    A { opts: Vec&lt;States&gt; },\n    B { opts: Vec&lt;States&gt; },\n    C { opts: Vec&lt;States&gt; },\n}\n</code></pre>\n\n<p>I'd like to implement the <code>Default</code> trait for it. Not for the enum itself:</p>\n\n<pre><code>impl Default for States {\n    fn default() -&gt; States {\n        States::A { vec![] }\n    }\n}\n</code></pre>\n\n<p>but for <code>States::A</code>, <code>States::B</code> and <code>States::C</code>, to have default values for <code>opts</code>. Is it possible?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 13014, "user_id": 4140572, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/2uRSa.png?s=128&g=1", "display_name": "Angel Angel", "link": "https://stackoverflow.com/users/4140572/angel-angel"}, "edited": false, "score": 1, "creation_date": 1461253043, "post_id": 36773923, "comment_id": 61125556, "body": "Update : I looked and I think it has to do with the use of std::cell inside Mutex -&gt; UnsafeCell <a href=\"https://doc.rust-lang.org/core/cell/struct.UnsafeCell.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/core/cell/struct.UnsafeCell.html</a> but I do not know if it&#39;s really, this."}], "answers": [{"comments": [{"owner": {"reputation": 13014, "user_id": 4140572, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/2uRSa.png?s=128&g=1", "display_name": "Angel Angel", "link": "https://stackoverflow.com/users/4140572/angel-angel"}, "edited": false, "score": 0, "creation_date": 1461256091, "post_id": 36775207, "comment_id": 61127753, "body": "Thanks for your time, I recently read about std::cell:: * and see in the code, UnsafeCell, I think I was perhaps related in some way, thanks for your explanation."}], "tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": true, "score": 12, "last_activity_date": 1461260542, "last_edit_date": 1461260542, "creation_date": 1461255242, "answer_id": 36775207, "question_id": 36773923, "link": "https://stackoverflow.com/questions/36773923/why-do-arc-and-mutex-allow-me-to-change-the-value-of-an-immutable-variable/36775207#36775207", "title": "Why do Arc and Mutex allow me to change the value of an immutable variable?", "body": "<p><code>value.lock().unwrap()</code> returns a value of type <a href=\"http://doc.rust-lang.org/std/sync/struct.MutexGuard.html\" rel=\"noreferrer\"><code>MutexGuard</code></a>, which has a <code>DerefMut</code> implementation:</p>\n\n<pre><code>impl&lt;'mutex, T: ?Sized&gt; DerefMut for MutexGuard&lt;'mutex, T&gt; {\n    fn deref_mut(&amp;mut self) -&gt; &amp;mut T { ... }\n}\n</code></pre>\n\n<p><code>DerefMut::deref_mut(x)</code> is equivalent to <code>&amp;mut *x</code>; naturally, <code>DerefMut</code> is also used for assignments under the pointer, like in your case.</p>\n\n<p>Therefore, for <code>*v += 1</code> to work, <code>v</code> should be a <code>mut</code> variable - otherwise it would be impossible for <code>DerefMut::deref_mut</code> to be invoked at all.</p>\n\n<p><code>*value.lock().unwrap() += 1</code> works because now <code>value.lock().unwrap()</code> is a temporary variable without an explicit binding, so Rust is free to assign its mutability automatically.</p>\n\n<p>The fact that <code>Mutex</code> contains an <code>UnsafeCell</code> inside is not related to this particular thing about <code>DerefMut</code> directly; however, it does mean that <code>Mutex</code> provides something called <em>internal mutability</em>, i.e. it allows one to mutate its contents through a shared reference. You can read more on it <a href=\"http://doc.rust-lang.org/book/mutability.html#interior-vs-exterior-mutability\" rel=\"noreferrer\">in the book</a>.</p>\n"}], "owner": {"reputation": 13014, "user_id": 4140572, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/2uRSa.png?s=128&g=1", "display_name": "Angel Angel", "link": "https://stackoverflow.com/users/4140572/angel-angel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3221, "favorite_count": 1, "accepted_answer_id": 36775207, "answer_count": 1, "score": 9, "last_activity_date": 1461281584, "creation_date": 1461251985, "last_edit_date": 1461281584, "question_id": 36773923, "link": "https://stackoverflow.com/questions/36773923/why-do-arc-and-mutex-allow-me-to-change-the-value-of-an-immutable-variable", "title": "Why do Arc and Mutex allow me to change the value of an immutable variable?", "body": "<p>Take this example:    </p>\n\n<pre><code>fn main() {\n    let dato = std::sync::Arc::new(std::sync::Mutex::new(1u8));\n\n    for _ in 0..3 {\n        let value = dato.clone();\n\n        std::thread::spawn(move || {\n            let v = value.lock().unwrap();\n            *v += 1; // &lt;- Error\n        });\n    }\n\n    std::thread::sleep(std::time::Duration::from_secs(1u64));\n\n    println!(\"{:?}\", dato);\n}\n</code></pre>\n\n<blockquote>\n  <p>cannot borrow immutable local variable <code>v</code> as mutable</p>\n</blockquote>\n\n<p>I know that changing to <code>mut</code> works:</p>\n\n<pre><code>std::thread::spawn(move || {\n    let mut v = value.lock().unwrap();\n    *v += 1;\n});\n</code></pre>\n\n<p>but why does this work:</p>\n\n<pre><code>let value = dato.clone();\n\nstd::thread::spawn(move || {\n    *value.lock().unwrap() += 1;    \n});\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=401b3f61be43bb67ea30562ae568fc19&amp;version=stable&amp;backtrace=0\" rel=\"noreferrer\">playground</a></p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 388, "user_id": 318266, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/62b11eb300fb7aee53c229b0ffaa0bd5?s=128&d=identicon&r=PG", "display_name": "Andrei Oprisan", "link": "https://stackoverflow.com/users/318266/andrei-oprisan"}, "edited": false, "score": 0, "creation_date": 1462880343, "post_id": 36767418, "comment_id": 61813550, "body": "I am not sure I understand how could I use a future, as I don&#39;t need one result only. The long running process has to provide its progress when requested, not only its final result."}], "tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": false, "score": 0, "last_activity_date": 1461236030, "creation_date": 1461236030, "answer_id": 36767418, "question_id": 36762819, "link": "https://stackoverflow.com/questions/36762819/how-to-implement-a-long-running-process-with-progress-in-rust-available-via-a-r/36767418#36767418", "title": "How to implement a long running process with progress in Rust, available via a Rest api?", "body": "<p>You need to register one channel per request thread, because if cloning <code>Receiver</code>s were possible the responses might/will end up with the wrong thread if two request are running at the same time.</p>\n\n<p>Instead of having your thread create a channel for answering requests, use a <a href=\"https://crates.io/crates/future\" rel=\"nofollow\"><code>future</code></a>. A <code>future</code> allows you to have a handle to an object, where the object doesn't exist yet. You can change the input channel to receive a <code>Promise</code>, which you then fulfill, no output channel necessary.</p>\n"}, {"comments": [{"owner": {"reputation": 388, "user_id": 318266, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/62b11eb300fb7aee53c229b0ffaa0bd5?s=128&d=identicon&r=PG", "display_name": "Andrei Oprisan", "link": "https://stackoverflow.com/users/318266/andrei-oprisan"}, "edited": false, "score": 0, "creation_date": 1462880186, "post_id": 36872330, "comment_id": 61813407, "body": "Thank you for your answer. That is what I ended up doing as you can see in my updated question. What I had initially in mind was something similar to actors. I did accomplished something similar in Scala using actors, where starting a long running process meant spawning an actor (actually 2, one to do the work, the other to hold the progress) that I queried on subsequent progress report requests."}], "tags": [], "owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "is_accepted": true, "score": 3, "last_activity_date": 1462903155, "last_edit_date": 1462903155, "creation_date": 1461693294, "answer_id": 36872330, "question_id": 36762819, "link": "https://stackoverflow.com/questions/36762819/how-to-implement-a-long-running-process-with-progress-in-rust-available-via-a-r/36872330#36872330", "title": "How to implement a long running process with progress in Rust, available via a Rest api?", "body": "<p>One possibility is to use a global <code>HashMap</code> that associate each worker id with the progress (and result). Here is simple example (without the rest stuff)</p>\n\n<pre><code>#[macro_use]\nextern crate lazy_static;\n\nuse std::sync::Mutex;\nuse std::collections::HashMap;\nuse std::thread;\nuse std::time::Duration;\n\nlazy_static! {\n    static ref PROGRESS: Mutex&lt;HashMap&lt;usize, usize&gt;&gt; = Mutex::new(HashMap::new());\n}\n\nfn set_progress(id: usize, progress: usize) {\n    // insert replaces the old value if there was one.\n    PROGRESS.lock().unwrap().insert(id, progress);\n}\n\nfn get_progress(id: usize) -&gt; Option&lt;usize&gt; {\n    PROGRESS.lock().unwrap().get(&amp;id).cloned()\n}\n\nfn work(id: usize) {\n    println!(\"Creating {}\", id);\n    set_progress(id, 0);\n    for i in 0..100 {\n        set_progress(id, i + 1);\n        // simulates work\n        thread::sleep(Duration::new(0, 50_000_000));\n    }\n}\n\nfn monitor(id: usize) {\n    loop {\n        if let Some(p) = get_progress(id) {\n            if p == 100 {\n                println!(\"Done {}\", id);\n                // to avoid leaks, remove id from PROGRESS.\n                // maybe save that the task ends in a data base.\n                return\n            } else {\n                println!(\"Progress {}: {}\", id, p);\n            }\n        }\n        thread::sleep(Duration::new(1, 0));\n    }\n}\n\nfn main() {\n    let w = thread::spawn(|| work(1));\n    let m = thread::spawn(|| monitor(1));\n    w.join().unwrap();\n    m.join().unwrap();\n}\n</code></pre>\n"}], "owner": {"reputation": 388, "user_id": 318266, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/62b11eb300fb7aee53c229b0ffaa0bd5?s=128&d=identicon&r=PG", "display_name": "Andrei Oprisan", "link": "https://stackoverflow.com/users/318266/andrei-oprisan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 601, "favorite_count": 0, "accepted_answer_id": 36872330, "answer_count": 2, "score": 2, "last_activity_date": 1462903155, "creation_date": 1461224124, "last_edit_date": 1462879963, "question_id": 36762819, "link": "https://stackoverflow.com/questions/36762819/how-to-implement-a-long-running-process-with-progress-in-rust-available-via-a-r", "title": "How to implement a long running process with progress in Rust, available via a Rest api?", "body": "<p>I am a beginner in Rust. </p>\n\n<p>I have a long running IO-bound process that I want to spawn and monitor via a REST API. I chose <a href=\"http://ironframework.io/\" rel=\"nofollow\">Iron</a> for that, following this <a href=\"https://github.com/brson/httptest\" rel=\"nofollow\">tutorial</a> . Monitoring means getting its progress and its final result.</p>\n\n<p>When I spawn it, I give it an id and map that id to a resource that I can GET to get the progress. I don't have to be exact with the progress; I can report the progress from 5 seconds ago.</p>\n\n<p>My first attempt was to have a channel via which I send request for progress and receive the status. I got stuck where to store the receiver, as in my understanding it belongs to one thread only. I wanted to put it in the context of the request, but that won't work as there are different threads handling subsequent requests.</p>\n\n<p>What would be the idiomatic way to do this in Rust? </p>\n\n<p>I have a <a href=\"https://github.com/aoprisan/try-rust\" rel=\"nofollow\">sample project</a>.</p>\n\n<p><strong>Later edit</strong>:</p>\n\n<p>Here is a self contained example which follows the sample principle as the answer, namely a map where each thread updates its progress:</p>\n\n<pre><code>extern crate iron;\nextern crate router;\nextern crate rustc_serialize;\n\nuse iron::prelude::*;\nuse iron::status;\nuse router::Router;\nuse rustc_serialize::json;\nuse std::io::Read;\nuse std::sync::{Mutex, Arc};\n\nuse std::thread;\nuse std::time::Duration;\nuse std::collections::HashMap;\n\n#[derive(Debug, Clone, RustcEncodable, RustcDecodable)]\npub struct Status {\n    pub progress: u64,\n    pub context: String\n}\n\n#[derive(RustcEncodable, RustcDecodable)]\nstruct StartTask {\n    id: u64\n}\n\nfn start_process(status: Arc&lt;Mutex&lt;HashMap&lt;u64, Status&gt;&gt;&gt;, task_id: u64) {\n    let c = status.clone();\n    thread::spawn(move || {\n        for i in 1..100 {\n            {\n                let m = &amp;mut c.lock().unwrap();\n                m.insert(task_id, Status{ progress: i, context: \"in progress\".to_string()});\n            }\n            thread::sleep(Duration::from_secs(1));\n        }\n        let m = &amp;mut c.lock().unwrap();\n        m.insert(task_id, Status{ progress: 100, context: \"done\".to_string()});\n    });\n}\n\nfn main() {\n    let status: Arc&lt;Mutex&lt;HashMap&lt;u64, Status&gt;&gt;&gt; = Arc::new(Mutex::new(HashMap::new()));\n    let status_clone: Arc&lt;Mutex&lt;HashMap&lt;u64, Status&gt;&gt;&gt; = status.clone();\n\n    let mut router = Router::new();\n\n    router.get(\"/:taskId\", move |r: &amp;mut Request| task_status(r, &amp;status.lock().unwrap()));\n    router.post(\"/start\", move |r: &amp;mut Request|\n        start_task(r, status_clone.clone()));\n\n    fn task_status(req: &amp;mut Request, statuses: &amp; HashMap&lt;u64,Status&gt;) -&gt; IronResult&lt;Response&gt; {\n        let ref task_id = req.extensions.get::&lt;Router&gt;().unwrap().find(\"taskId\").unwrap_or(\"/\").parse::&lt;u64&gt;().unwrap();\n        let payload = json::encode(&amp;statuses.get(&amp;task_id)).unwrap();\n        Ok(Response::with((status::Ok, payload)))\n    }\n\n    // Receive a message by POST and play it back.\n    fn start_task(request: &amp;mut Request, statuses: Arc&lt;Mutex&lt;HashMap&lt;u64, Status&gt;&gt;&gt;) -&gt; IronResult&lt;Response&gt; {\n        let mut payload = String::new();\n        request.body.read_to_string(&amp;mut payload).unwrap();\n        let task_start_request: StartTask = json::decode(&amp;payload).unwrap();\n        start_process(statuses, task_start_request.id);\n        Ok(Response::with((status::Ok, json::encode(&amp;task_start_request).unwrap())))\n    }\n\n    Iron::new(router).http(\"localhost:3000\").unwrap();\n}\n</code></pre>\n"}, {"tags": ["generics", "reference", "constraints", "rust"], "answers": [{"comments": [{"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 1, "creation_date": 1461214117, "post_id": 36759754, "comment_id": 61098846, "body": "This is great. I&#39;ve read the book multiple times and HRTB have been a source of confusion for me. This answer helped me (and I&#39;m not the OP!). Thanks again!"}, {"owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "edited": false, "score": 0, "creation_date": 1461234887, "post_id": 36759754, "comment_id": 61111651, "body": "They&#39;re not currently in the book :( they will be in the second edition"}, {"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 0, "creation_date": 1461250908, "post_id": 36759754, "comment_id": 61123961, "body": "HRTB can be limiting. The bound <code>for&lt;&#39;a&gt; &amp;&#39;a T: Operation</code> implicitly requires <code>for&lt;&#39;a&gt; T: &#39;a</code>, basically that <code>T: &#39;static</code> (contains no borrowed data)."}], "tags": [], "owner": {"reputation": 187800, "user_id": 320615, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/65c80e12b6a33913538653f6d4ef1277?s=128&d=identicon&r=PG", "display_name": "Dogbert", "link": "https://stackoverflow.com/users/320615/dogbert"}, "is_accepted": true, "score": 9, "last_activity_date": 1461213288, "creation_date": 1461213288, "answer_id": 36759754, "question_id": 36759472, "link": "https://stackoverflow.com/questions/36759472/rust-constraints-for-generic-type-reference/36759754#36759754", "title": "Rust Constraints for Generic Type Reference", "body": "<p>Yes, you can restrict <code>&amp;T</code> to be <code>Sized + Operation</code>. You need to use <a href=\"https://doc.rust-lang.org/nomicon/hrtb.html\" rel=\"noreferrer\">Higher-Rank Trait Bounds</a> and <code>where</code>.</p>\n\n<pre><code>trait Operation {\n    fn operation(self) -&gt; u32;\n}\n\nstruct Container&lt;T&gt;\n    where for&lt;'a&gt; &amp;'a T: Sized + Operation\n{\n    x: T,\n}\n\nimpl&lt;T&gt; Container&lt;T&gt;\n    where for&lt;'a&gt; &amp;'a T: Sized + Operation\n{\n    fn do_thing(&amp;self) -&gt; u32 {\n        self.x.operation()\n    }\n}\n\nimpl&lt;'a&gt; Operation for &amp;'a u32 {\n    fn operation(self) -&gt; u32 {\n        *self\n    }\n}\n\nfn main() {\n    let container = Container { x: 1 };\n    println!(\"{}\", container.do_thing());\n}\n</code></pre>\n\n<p>prints</p>\n\n<pre><code>1\n</code></pre>\n"}], "owner": {"reputation": 115, "user_id": 2896450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/02615efcea569c2d7ecf5536d2d2904f?s=128&d=identicon&r=PG&f=1", "display_name": "CSan", "link": "https://stackoverflow.com/users/2896450/csan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2876, "favorite_count": 3, "accepted_answer_id": 36759754, "answer_count": 1, "score": 7, "last_activity_date": 1461213288, "creation_date": 1461211699, "question_id": 36759472, "link": "https://stackoverflow.com/questions/36759472/rust-constraints-for-generic-type-reference", "title": "Rust Constraints for Generic Type Reference", "body": "<p>Here's the scenario: I have a structure and trait pair as follows:</p>\n\n<pre><code>trait Operation {\n    fn operation(self) -&gt; u32\n}\n\nstruct Container&lt;T: Sized + Operation&gt; {\n    x:T\n}\n\nimpl &lt;T: Sized + Operation&gt; for Container&lt;T&gt; {\n    fn do_thing(&amp;self) -&gt; u32 {\n        // Do something with the field x.\n    }\n}\n</code></pre>\n\n<p>The operation requires a pass-by-value call whenever used, and the issue comes with anything similar to \"do_thing.\" I would prefer to not have to enforce copy semantics for the type <code>T</code> and would like a workaround for this. Essentially I would like to know the following:</p>\n\n<ol>\n<li>Is it possible to enforce trait constraints on references of type parameters? Something along the lines of: <code>struct Container&lt;T: Sized + Operation&gt; where &amp;T: Operation { ... }</code>. I've tried mucking with the syntax a bit, and I've not had any success.</li>\n<li>If the above is not currently possible, is it theoretically possible; i.e. it doesn't violate any require coherence properties or something along those lines?</li>\n<li>Would it be possible to create a second trait, say <code>Middle: Operation</code>, where <code>Middle</code> can require that any implementers of <code>Middle</code>, <code>T</code>, to also be required to implement <code>Operation</code> for <code>&amp;T</code>.</li>\n<li>If neither of the above are possible, is there some other common workaround for this?</li>\n</ol>\n\n<p>Some Notes:</p>\n\n<ul>\n<li>I don't have access to change the <code>Operation</code> trait, it's given and it's what I'm to work with.</li>\n<li>There's an <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/0135-where.md\" rel=\"noreferrer\">old RFC</a> that talks about some modifications to where clauses, but I didn't find anything related to reference constraints.</li>\n<li>compiler version: <em>rustc 1.8.0 (db2939409 2016-04-11)</em></li>\n</ul>\n"}]