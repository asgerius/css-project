[{"tags": ["rust"], "comments": [{"owner": {"reputation": 1783, "user_id": 453056, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/787f07c7f788f35cd01628a783174d5e?s=128&d=identicon&r=PG", "display_name": "Kyle", "link": "https://stackoverflow.com/users/453056/kyle"}, "edited": false, "score": 0, "creation_date": 1514419363, "post_id": 47999783, "comment_id": 82968567, "body": "This section of the docs clarifies what the conventions are for functions that create iterators. It might help clarify what to expect: <a href=\"https://doc.rust-lang.org/std/iter/#the-three-forms-of-iteration\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/iter/#the-three-forms-of-iteration</a>"}], "answers": [{"comments": [{"owner": {"reputation": 75, "user_id": 5708908, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/SKo2b.jpg?s=128&g=1", "display_name": "avshyz", "link": "https://stackoverflow.com/users/5708908/avshyz"}, "edited": false, "score": 1, "creation_date": 1514421511, "post_id": 47999960, "comment_id": 82969048, "body": "Your comment makes sense. But I feel as if my question was... slightly misunderstood.  While I do understand why <code>iter</code> yields references, I just can&#39;t wrap my head around the <code>&amp;1</code> (as someone who comes from a pythonic/c++-ic background, it kinda buffles me)"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 75, "user_id": 5708908, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/SKo2b.jpg?s=128&g=1", "display_name": "avshyz", "link": "https://stackoverflow.com/users/5708908/avshyz"}, "edited": false, "score": 0, "creation_date": 1514421850, "post_id": 47999960, "comment_id": 82969118, "body": "@avshyz That was what the first sentence of my answer was for.  It&#39;s <code>&amp;1</code> because it&#39;s an iterator of pointers.  <code>1</code> isn&#39;t a pointer.  <code>&amp;1</code> is a pointer to <code>1</code>."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 4, "last_activity_date": 1514419415, "last_edit_date": 1514419415, "creation_date": 1514418964, "answer_id": 47999960, "question_id": 47999783, "link": "https://stackoverflow.com/questions/47999783/iterators-next-returns-some1-whys-that/47999960#47999960", "title": "Iterator&#39;s next returns Some(&amp;1). Why&#39;s that?", "body": "<p>Because they're pointers.  Follow the docs.</p>\n\n<ul>\n<li><code>v1</code> is a <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html\" rel=\"nofollow noreferrer\"><code>Vec&lt;i32&gt;</code></a>.  So <code>T</code> is <code>i32</code>.</li>\n<li><code>Vec</code> doesn't have an <code>iter</code> method.  It <em>does</em> <code>Deref</code> to <code>[T]</code>.  Scroll down further.</li>\n<li><code>[T]</code> has an <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.iter\" rel=\"nofollow noreferrer\"><code>iter</code></a> method.  It returns a <code>std::slice::Iter&lt;T&gt;</code>.</li>\n<li><code>v1_iter</code> is an <a href=\"https://doc.rust-lang.org/std/slice/struct.Iter.html\" rel=\"nofollow noreferrer\"><code>Iter&lt;i32&gt;</code></a>, so <code>T</code> is <code>i32</code>.</li>\n<li><code>next</code> is part of the <code>Iterator</code> trait, so scroll down and look for the <a href=\"https://doc.rust-lang.org/std/slice/struct.Iter.html#impl-Iterator\" rel=\"nofollow noreferrer\"><code>impl Iterator</code></a> section.</li>\n<li>Just below, it specifies that <code>next</code> returns an <code>Option&lt;&amp;'a T&gt;</code>.  Substitute <code>T</code>, and that gives you <code>Option&lt;&amp;'a i32&gt;</code>.</li>\n</ul>\n\n<blockquote>\n  <p>Pre-emptive: <em>Why are they pointers?</em></p>\n</blockquote>\n\n<p>Because that's what you asked for.  If you wanted to <em>move</em> the contents of the <code>Vec</code> out via an iterator, you need to use <code>Vec::into_iter</code> or <code>Vec::drain</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 4565, "user_id": 1134885, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c428466054762cf7d4b5fb5f4396fa2?s=128&d=identicon&r=PG", "display_name": "NovaDenizen", "link": "https://stackoverflow.com/users/1134885/novadenizen"}, "is_accepted": false, "score": 0, "last_activity_date": 1514419270, "creation_date": 1514419270, "answer_id": 48000002, "question_id": 47999783, "link": "https://stackoverflow.com/questions/47999783/iterators-next-returns-some1-whys-that/48000002#48000002", "title": "Iterator&#39;s next returns Some(&amp;1). Why&#39;s that?", "body": "<p>The function <code>Vec::iter()</code> is of type <code>(self :&amp;Vec&lt;T&gt;) -&gt; Q&lt;&amp;T&gt;</code>.  That is, it creates an iterator of some type <code>Q</code> that isn't important here, that iterates over references to the <code>T</code> elements in your <code>Vec</code>.  It uses an immutable reference to the <code>Vec</code>, so it doesn't take any elements out or have any effect on the <code>Vec</code> at all.  </p>\n\n<p>All <code>Iterator</code>s have a <code>cloned()</code> method that turns an iterator over <code>&amp;T</code> references into an iterator over <code>T</code> values, so long as <code>T</code> has the <code>Clone</code> trait.  It wraps the other iterator in a little bit of code that calls the <code>clone()</code> method on all the references to the elements, turning them into new <code>T</code>s.</p>\n\n<pre><code>fn iterator_demonstration() {\n    let v1 = vec![1, 2, 3];\n\n    let mut v1_iter = v1.iter().cloned();\n\n    assert_eq!(v1_iter.next(), Some(1));\n    assert_eq!(v1_iter.next(), Some(2));\n    assert_eq!(v1_iter.next(), Some(3));\n    assert_eq!(v1_iter.next(), None);\n}\n</code></pre>\n\n<p><code>Vec</code> also implements <code>IntoIterator</code>, which consumes the <code>Vec</code> into an iterator over <code>T</code>, takes all the <code>T</code> in the <code>Vec</code> and passes them back.  It destroys the <code>Vec</code> and takes ownership of all its <code>T</code> values.  You can use the <code>into_iter()</code> method to explicitly use it, and it's also used in for loops.</p>\n\n<pre><code>fn iterator_demonstration2() {\n    let v1 = vec![1, 2, 3];\n\n    let mut v1_iter = v1.into_iter();\n\n    assert_eq!(v1_iter.next(), Some(1));\n    assert_eq!(v1_iter.next(), Some(2));\n    assert_eq!(v1_iter.next(), Some(3));\n    assert_eq!(v1_iter.next(), None);\n}\n\n\nfn iterator_demonstration3() {\n    let v1 = vec![1, 2, 3];\n    for i in v1 {\n        println!(\"{}\", i);\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 75, "user_id": 5708908, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/SKo2b.jpg?s=128&g=1", "display_name": "avshyz", "link": "https://stackoverflow.com/users/5708908/avshyz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 74, "favorite_count": 0, "accepted_answer_id": 47999960, "answer_count": 2, "score": 5, "last_activity_date": 1514421817, "creation_date": 1514417133, "last_edit_date": 1514421817, "question_id": 47999783, "link": "https://stackoverflow.com/questions/47999783/iterators-next-returns-some1-whys-that", "title": "Iterator&#39;s next returns Some(&amp;1). Why&#39;s that?", "body": "<p>This may be a silly question, but it tackled me.</p>\n\n<p>I've started learning rust, from the allmighty <a href=\"https://doc.rust-lang.org/book/second-edition/ch13-02-iterators.html\" rel=\"nofollow noreferrer\">book</a>. \nIn the iterator chapter (the one linked therein) there's the following example</p>\n\n<pre><code>fn iterator_demonstration() {\n    let v1 = vec![1, 2, 3];\n\n    let mut v1_iter = v1.iter();\n\n    assert_eq!(v1_iter.next(), Some(&amp;1));\n    assert_eq!(v1_iter.next(), Some(&amp;2));\n    assert_eq!(v1_iter.next(), Some(&amp;3));\n    assert_eq!(v1_iter.next(), None);\n}\n</code></pre>\n\n<p>The book kinda glazed over it, but I wonder - why are the ampersands needed?</p>\n\n<p>edit: just to clarify - I do understand <code>iter</code> iterates through immutable references. I just don't quite grasp referencing a numeric literal (again, rookie question.)</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 28990, "user_id": 1114966, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/af8712b05e5cfb862323a07c83749054?s=128&d=identicon&r=PG", "display_name": "squiguy", "link": "https://stackoverflow.com/users/1114966/squiguy"}, "edited": false, "score": 3, "creation_date": 1514414907, "post_id": 47998835, "comment_id": 82967520, "body": "This looks like something a regex would solve although I am not entirely sure what your problem is."}, {"owner": {"reputation": 22050, "user_id": 497364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8fd4eb2ae966a16e698b3e61217a7e1?s=128&d=identicon&r=PG", "display_name": "Paolo Falabella", "link": "https://stackoverflow.com/users/497364/paolo-falabella"}, "edited": false, "score": 0, "creation_date": 1514478130, "post_id": 47998835, "comment_id": 82990146, "body": "What&#39;s in <code>data</code>? Could you add a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>?"}, {"owner": {"reputation": 4565, "user_id": 1134885, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c428466054762cf7d4b5fb5f4396fa2?s=128&d=identicon&r=PG", "display_name": "NovaDenizen", "link": "https://stackoverflow.com/users/1134885/novadenizen"}, "edited": false, "score": 0, "creation_date": 1514485324, "post_id": 47998835, "comment_id": 82993476, "body": "The simple answer is that you need to parse it, probably using a crate like <a href=\"https://doc.rust-lang.org/regex/regex/index.html\" rel=\"nofollow noreferrer\">regex</a> with a compiled pattern for each matching case."}, {"owner": {"reputation": 9980, "user_id": 1944004, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/60f3cc97f94fa3690ba406f8c1a7fc4f?s=128&d=identicon&r=PG", "display_name": "Henri Menke", "link": "https://stackoverflow.com/users/1944004/henri-menke"}, "edited": false, "score": 0, "creation_date": 1514492032, "post_id": 47998835, "comment_id": 82996379, "body": "You can only <code>match</code> a type not a value."}, {"owner": {"reputation": 22050, "user_id": 497364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8fd4eb2ae966a16e698b3e61217a7e1?s=128&d=identicon&r=PG", "display_name": "Paolo Falabella", "link": "https://stackoverflow.com/users/497364/paolo-falabella"}, "reply_to_user": {"reputation": 9980, "user_id": 1944004, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/60f3cc97f94fa3690ba406f8c1a7fc4f?s=128&d=identicon&r=PG", "display_name": "Henri Menke", "link": "https://stackoverflow.com/users/1944004/henri-menke"}, "edited": false, "score": 0, "creation_date": 1514535937, "post_id": 47998835, "comment_id": 83008193, "body": "@HenriMenke yes, you can match a (constant) value: <a href=\"https://play.rust-lang.org/?gist=cae616bcd24976f393f6660d8b72c554&amp;version=stable\" rel=\"nofollow noreferrer\">playground</a>"}, {"owner": {"reputation": 51, "user_id": 8884082, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/3e16431148d13e3fa0b3b81b1f80f217?s=128&d=identicon&r=PG&f=1", "display_name": "Raj", "link": "https://stackoverflow.com/users/8884082/raj"}, "reply_to_user": {"reputation": 22050, "user_id": 497364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8fd4eb2ae966a16e698b3e61217a7e1?s=128&d=identicon&r=PG", "display_name": "Paolo Falabella", "link": "https://stackoverflow.com/users/497364/paolo-falabella"}, "edited": false, "score": 0, "creation_date": 1514651910, "post_id": 47998835, "comment_id": 83041632, "body": "@PaoloFalabella, why constant in () ?"}], "answers": [{"tags": [], "owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "is_accepted": false, "score": 0, "last_activity_date": 1514645327, "creation_date": 1514645327, "answer_id": 48034994, "question_id": 47998835, "link": "https://stackoverflow.com/questions/47998835/destructing-a-string-in-rust/48034994#48034994", "title": "Destructing a string in Rust", "body": "<p>There's no such thing built-in in Rust, so you have to roll your own. </p>\n\n<p>In simple cases you can use slices and helper methods like <code>starts_with()</code>, but if the patterns are more complex, try using regex or parser crates.</p>\n\n<p><code>match</code> supports \"guards\" that allow you to run extra code to refine a match:</p>\n\n<pre><code>match string {\n  s if s.starts_with(\"bbb \") =&gt; format!(\"this is 'bbb' + some data: {}\", &amp;s[4..])\n}\n</code></pre>\n"}], "owner": {"reputation": 51, "user_id": 8884082, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/3e16431148d13e3fa0b3b81b1f80f217?s=128&d=identicon&r=PG&f=1", "display_name": "Raj", "link": "https://stackoverflow.com/users/8884082/raj"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 130, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1514645327, "creation_date": 1514409978, "question_id": 47998835, "link": "https://stackoverflow.com/questions/47998835/destructing-a-string-in-rust", "title": "Destructing a string in Rust", "body": "<p>How can I do a complex pattern matching on a string? Something like this:</p>\n\n<pre><code>let res = match data.as_ref() {\n    \"aaa\" =&gt; \"this is aaa\",\n    \"bbb\" =&gt; \"this is bbb \",\n    //...........\n\n\n    //aaa some_data_here\n    \"bbb {data2}\" =&gt; &amp;format!(\"this is 'bbb' + some data: {}\", data2)\n\n    x =&gt; &amp;format!(\"this is not a pattern I know of, it is {}\", x),\n};\n</code></pre>\n"}, {"tags": ["rust", "webassembly"], "answers": [{"tags": [], "owner": {"reputation": 1783, "user_id": 453056, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/787f07c7f788f35cd01628a783174d5e?s=128&d=identicon&r=PG", "display_name": "Kyle", "link": "https://stackoverflow.com/users/453056/kyle"}, "is_accepted": true, "score": 10, "last_activity_date": 1514410532, "creation_date": 1514410532, "answer_id": 47998925, "question_id": 47997306, "link": "https://stackoverflow.com/questions/47997306/rust-wasm32-unknown-unknown-math-functions-not-linking/47998925#47998925", "title": "Rust wasm32-unknown-unknown Math functions not linking", "body": "<p>According to the <a href=\"http://webassembly.org/docs/faq/\" rel=\"noreferrer\">WASM FAQ</a> <code>sin</code> isn't included. </p>\n\n<blockquote>\n  <p>\u2022WebAssembly doesn\u2019t include its own math functions like  sin ,  cos ,  exp ,  pow , and so on. WebAssembly\u2019s strategy for such functions is to allow them to be implemented as library routines in WebAssembly itself (note that x86\u2019s  sin  and  cos  instructions are slow and imprecise and are generally avoided these days anyway). Users wishing to use faster and less precise math functions on WebAssembly can simply select a math library implementation which does so.</p>\n</blockquote>\n\n<p>Rust appears to rely on LLVM to provide <code>sin</code> (<a href=\"https://github.com/rust-lang/rust/blob/8cdde6db7138cf2365dd9ceb5b8814e92a922ed4/src/libstd/f64.rs#L613\" rel=\"noreferrer\">f64 impl here</a>) which it does not do for WASM. I would think LLVM <em>should</em> provide it as part of their <code>llvm.sin.f64</code> intrinsic, but it appears that they don't guarantee implementation for every target per <a href=\"https://llvm.org/docs/LangRef.html#llvm-sin-intrinsic\" rel=\"noreferrer\">https://llvm.org/docs/LangRef.html#llvm-sin-intrinsic</a> (emphasis mine):</p>\n\n<blockquote>\n  <p>This is an overloaded intrinsic. You can use llvm.sin on any floating-point or vector of floating-point type. <strong>Not all targets support all types however.</strong></p>\n</blockquote>\n\n<p>Maybe, given this, Rust should consider implementing <code>sin</code> itself.</p>\n"}, {"comments": [{"owner": {"reputation": 64343, "user_id": 249933, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/458f2e0d08d4114f8b323798cfea141d?s=128&d=identicon&r=PG", "display_name": "ColinE", "link": "https://stackoverflow.com/users/249933/coline"}, "edited": false, "score": 0, "creation_date": 1514458855, "post_id": 47999160, "comment_id": 82980699, "body": "As another alternative, you could look at how emscripten implements trig functions. It\u2019s actually quite simple, here is sin implemented via polynomials <a href=\"https://github.com/kripken/emscripten/blob/7f89560101843198787530731f40a65288f6f15f/system/lib/libc/musl/src/math/__sin.c#L52\" rel=\"nofollow noreferrer\">github.com/kripken/emscripten/blob/&hellip;</a>"}], "tags": [], "owner": {"reputation": 6045, "user_id": 3983557, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/01A0D.jpg?s=128&g=1", "display_name": "JF Bastien", "link": "https://stackoverflow.com/users/3983557/jf-bastien"}, "is_accepted": false, "score": 2, "last_activity_date": 1514412184, "creation_date": 1514412184, "answer_id": 47999160, "question_id": 47997306, "link": "https://stackoverflow.com/questions/47997306/rust-wasm32-unknown-unknown-math-functions-not-linking/47999160#47999160", "title": "Rust wasm32-unknown-unknown Math functions not linking", "body": "<p>Kyle is spot-on on the diagnosis. I'll add two suggestions.</p>\n\n<hr>\n\n<p>I know you said you didn't want to manually add the <code>Math</code> functions to your import object, but doing so isn't too bad:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>let mathImports = {};\nfor (let name of Object.getOwnPropertyNames(Math))\n  if (typeof Math[name] === \"function\")\n    mathImports[name] = Math[name];\n</code></pre>\n\n<p>The tricky thing is figuring out how to do so before regular imports (so they don't overwrite anything you've already got), and figuring out which <code>module</code> to put imports in (because WebAssembly imports have a namespace the spec calls <code>module</code> and then a <code>field</code> which you're seeing in the error message, FWIW the error message in Safari will contain both <code>module</code> and <code>field</code>).</p>\n\n<hr>\n\n<p>You could build a subset of a C library into WebAssembly, and use that as part of your import object. I have a port of <a href=\"https://github.com/jfbastien/musl\" rel=\"nofollow noreferrer\">musl libc</a> available. The <a href=\"http://wasm-stat.us\" rel=\"nofollow noreferrer\">WebAssembly waterfall</a> builds and uses it, instructions for building <a href=\"https://github.com/WebAssembly/waterfall/blob/master/src/build.py\" rel=\"nofollow noreferrer\">are in the waterfall's source</a>.</p>\n\n<p>Again, putting its values into the import object is tricky to do right. I'd iterate over the exports of the module with <a href=\"https://github.com/WebAssembly/design/blob/master/JS.md#webassemblymoduleexports\" rel=\"nofollow noreferrer\">WebAssembly.Module.exports</a> and make sure the name mangling is right (looks like your code expects <code>sin</code> directly, and often C names are mangled with an extra underscore at the start). Then same as above, add them to an import object and get <code>module</code> / <code>field</code> right.</p>\n"}], "owner": {"reputation": 356, "user_id": 5280790, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/eac429a5a60ea7f567cc51ad67a95034?s=128&d=identicon&r=PG&f=1", "display_name": "Iceberg", "link": "https://stackoverflow.com/users/5280790/iceberg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 901, "favorite_count": 0, "accepted_answer_id": 47998925, "answer_count": 2, "score": 4, "last_activity_date": 1514412184, "creation_date": 1514401186, "question_id": 47997306, "link": "https://stackoverflow.com/questions/47997306/rust-wasm32-unknown-unknown-math-functions-not-linking", "title": "Rust wasm32-unknown-unknown Math functions not linking", "body": "<p>I'm trying the new wasm32-unknown-unknown target for Rust, and I'm experiencing issues invoking math functions (e.g. sin, cos, exp, atan2).</p>\n\n<p>Cargo.toml:</p>\n\n<pre><code>[package]\nname = \"wasm_math\"\nversion = \"0.1.0\"\nauthors = [\"...\"]\n\n[lib]\npath = \"src/lib.rs\"\ncrate-type = [\"cdylib\"]\n\n[dependencies]\n</code></pre>\n\n<p>src/lib.rs:</p>\n\n<pre><code>#[no_mangle]\npub extern \"C\" fn invoke_sin(x: f64) -&gt; f64 {\n    x.sin()\n}\n</code></pre>\n\n<p>index.html:</p>\n\n<pre><code>&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n  &lt;head&gt;&lt;meta charset=\"utf-8\"&gt;&lt;title&gt;Wasm Math&lt;/title&gt;&lt;/head&gt;\n  &lt;body&gt;&lt;/body&gt;\n  &lt;script&gt;\n    const imports = { env: { } };\n    fetch(\"target/wasm32-unknown-unknown/release/wasm_math.wasm\").then(response =&gt;\n      response.arrayBuffer()\n    ).then(bytes =&gt;\n      WebAssembly.instantiate(bytes, imports)\n    ).then(results =&gt; {\n      alert(results.instance.exports.invoke_sin(1.0));\n    });\n  &lt;/script&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>I build the project with the command</p>\n\n<pre><code>cargo build --release --target wasm32-unknown-unknown\n</code></pre>\n\n<p>When I open the html file in firefox, I get the following error:</p>\n\n<pre><code>LinkError: import object field 'sin' is not a Function\n</code></pre>\n\n<p>Is there something wrong with my setup? Or is this a shortcoming in Rust/WebAssembly/Firefox? I could manually add the <code>sin</code> function to the <code>imports.env</code> object in the javascript, but that seems very hacky and I would have to do that for every math function that I use. Is there a better way?</p>\n\n<p>I'm using the nightly Rust toolchain (nightly-x86_64-unknown-linux-gnu rustc 1.24.0-nightly (cddc4a62d 2017-12-26)) and Firefox 57.0.1 (64-bit).</p>\n"}, {"tags": ["generics", "rust", "lifetime"], "answers": [{"comments": [{"owner": {"reputation": 22380, "user_id": 284111, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7540f1aac4d78cc963f6551e8307b757?s=128&d=identicon&r=PG", "display_name": "Andrew Savinykh", "link": "https://stackoverflow.com/users/284111/andrew-savinykh"}, "edited": false, "score": 0, "creation_date": 1514408374, "post_id": 47997981, "comment_id": 82965488, "body": "That makes sense. The generic type argument needs to come from <i>somewhere</i>. Thank you for superb explanation, upvoted ;)"}, {"owner": {"reputation": 5038, "user_id": 3579309, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/Wn5ES.jpg?s=128&g=1", "display_name": "lovasoa", "link": "https://stackoverflow.com/users/3579309/lovasoa"}, "edited": false, "score": 0, "creation_date": 1514409969, "post_id": 47997981, "comment_id": 82966035, "body": "Thank you very much, I didn&#39;t know about  <i>Higher Rank Trait Bounds</i>. This answers my question."}], "tags": [], "owner": {"reputation": 4565, "user_id": 1134885, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c428466054762cf7d4b5fb5f4396fa2?s=128&d=identicon&r=PG", "display_name": "NovaDenizen", "link": "https://stackoverflow.com/users/1134885/novadenizen"}, "is_accepted": true, "score": 12, "last_activity_date": 1527110163, "last_edit_date": 1527110163, "creation_date": 1514404974, "answer_id": 47997981, "question_id": 47996700, "link": "https://stackoverflow.com/questions/47996700/how-do-i-bound-a-generic-type-with-a-trait-that-requires-a-lifetime-parameter-if/47997981#47997981", "title": "How do I bound a generic type with a trait that requires a lifetime parameter if I create the reference inside the function?", "body": "<p>You need to use <a href=\"https://doc.rust-lang.org/beta/nomicon/hrtb.html\" rel=\"noreferrer\">Higher Rank Trait Bounds</a>.  This one means basically \"For any lifetime <code>'a</code>, <code>T</code> satisfies the <code>AddAssign&lt;&amp;'a T&gt;</code> trait\":</p>\n\n<pre><code>fn fib&lt;T&gt;(n: usize) -&gt; T\nwhere\n    for&lt;'a&gt; T: Zero + One + AddAssign&lt;&amp;'a T&gt;,\n</code></pre>\n\n<p>I also had to change the way <code>fib</code> is called because the compiler couldn't figure out the return type, which could be literally any type that implements those traits. Declaring <code>x</code>'s type gives sufficient context to the compiler so that it knows what you want. </p>\n\n<pre><code>fn main() {\n    let x: num::BigUint = fib(10);\n    // let x = fib::&lt;BigUint&gt;(10); // Also works\n    println!(\"fib(10) = {}\", x);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=bccb848063239d94852719a55a5c1598&amp;version=nightly\" rel=\"noreferrer\">playground</a></p>\n"}], "owner": {"reputation": 5038, "user_id": 3579309, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/Wn5ES.jpg?s=128&g=1", "display_name": "lovasoa", "link": "https://stackoverflow.com/users/3579309/lovasoa"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1599, "favorite_count": 1, "accepted_answer_id": 47997981, "answer_count": 1, "score": 7, "last_activity_date": 1527110163, "creation_date": 1514397936, "last_edit_date": 1527109967, "question_id": 47996700, "link": "https://stackoverflow.com/questions/47996700/how-do-i-bound-a-generic-type-with-a-trait-that-requires-a-lifetime-parameter-if", "title": "How do I bound a generic type with a trait that requires a lifetime parameter if I create the reference inside the function?", "body": "<p>I want to implement a generic <code>fibonacci</code> function that works with any type implementing <code>Zero</code>, <code>One</code>, and <code>AddAssign</code>. I first implemented a version that works fine, but is specialized for <code>num::BigUint</code> (<a href=\"https://play.rust-lang.org/?gist=d3afb763eb57c9582647f7748f170093&amp;version=nightly\" rel=\"noreferrer\">see on play.rust-lang.org</a>). I than came up with the following generic implementation (<a href=\"https://play.rust-lang.org/?gist=47e1273ace46a1eaa89b8277c25e5691&amp;version=nightly\" rel=\"noreferrer\">see on play.rust-lang.org</a>):</p>\n\n<pre><code>extern crate num;\n\nuse num::{One, Zero};\nuse std::mem::swap;\nuse std::ops::AddAssign;\n\nfn fib&lt;T: Zero + One + AddAssign&lt;&amp;T&gt;&gt;(n: usize) -&gt; T {\n    let mut f0 = Zero::zero();\n    let mut f1 = One::one();\n    for _ in 0..n {\n        f0 += &amp;f1;\n        swap(&amp;mut f0, &amp;mut f1);\n    }\n    f0\n}\n</code></pre>\n\n<p>This doesn't compile:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0106]: missing lifetime specifier\n --&gt; src/main.rs:7:34\n  |\n7 | fn fib&lt;T: Zero + One + AddAssign&lt;&amp;T&gt;&gt;(n: usize) -&gt; T {\n  |                                  ^ expected lifetime parameter\n</code></pre>\n\n<p>Rust wants me to add a lifetime parameter to <code>AddAssign&lt;&amp;T&gt;</code> but I don't know how to express the lifetime of <code>f1</code>.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "edited": false, "score": 0, "creation_date": 1514382892, "post_id": 47993370, "comment_id": 82954923, "body": "I have missed the official docs on the same page... I must be very bad. I&#39;d downvote myself :)"}], "tags": [], "owner": {"reputation": 7872, "user_id": 440302, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/e785baf6d4a2626b8649d5b538c51858?s=128&d=identicon&r=PG", "display_name": "Rufflewind", "link": "https://stackoverflow.com/users/440302/rufflewind"}, "is_accepted": true, "score": 5, "last_activity_date": 1514382667, "creation_date": 1514382667, "answer_id": 47993370, "question_id": 47993287, "link": "https://stackoverflow.com/questions/47993287/why-some-rust-types-provide-static-methods-instead-of-object-methods/47993370#47993370", "title": "Why some rust types provide static methods instead of object methods?", "body": "<p>It is to prevent shadowing methods that would otherwise be visible through the <code>Deref</code> and <code>DerefMut</code> implementations of <code>Rc</code>.  To quote the <a href=\"https://doc.rust-lang.org/std/rc/struct.Rc.html\" rel=\"noreferrer\">documentation of <code>Rc</code></a>:</p>\n\n<blockquote>\n  <p>The inherent methods of <code>Rc</code> are all associated functions, which means that you have to call them as e.g. <code>Rc::get_mut(&amp;mut value)</code> instead of <code>value.get_mut()</code>. This avoids conflicts with methods of the inner type <code>T</code>.</p>\n</blockquote>\n\n<p>For example, if you have <code>Rc&lt;Foo&gt;</code> where <code>Foo</code> defines its own method called <code>weak_count</code>, using a static method would allow the user to write <code>foo.weak_count(\u2026)</code> to call <code>Foo::weak_count</code> and <code>Rc::weak_count(&amp;foo)</code> to call <code>Rc::weak_count</code>.</p>\n\n<p>(For this reason, adding an intrinsic method to a type that defines <code>Deref</code> / <code>DerefMut</code> will break backward compatibiltiy).</p>\n"}], "owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 101, "favorite_count": 0, "accepted_answer_id": 47993370, "answer_count": 1, "score": 2, "last_activity_date": 1514382667, "creation_date": 1514382288, "question_id": 47993287, "link": "https://stackoverflow.com/questions/47993287/why-some-rust-types-provide-static-methods-instead-of-object-methods", "title": "Why some rust types provide static methods instead of object methods?", "body": "<p>Looking at the <a href=\"https://doc.rust-lang.org/std/rc/struct.Rc.html\" rel=\"nofollow noreferrer\">Rc</a> interface I found that the <code>Rc</code> struct has methods but they are defined without <code>self</code> so they are static but nothing actually prevents them to be usual object methods. The question is why they are defined so? Why, for example, the <a href=\"https://doc.rust-lang.org/std/rc/struct.Rc.html#method.weak_count\" rel=\"nofollow noreferrer\">Rc::weak_count</a> is defined in the form:</p>\n\n<pre><code>fn weak_count(this: &amp;Rc&lt;T&gt;) -&gt; usize\n</code></pre>\n\n<p>instead of:</p>\n\n<pre><code>fn weak_count(&amp;self) -&gt; usize\n</code></pre>\n"}, {"tags": ["types", "rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1514384845, "post_id": 47992959, "comment_id": 82955764, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/25413201/how-do-i-implement-a-trait-i-dont-own-for-a-type-i-dont-own\">How do I implement a trait I don&#39;t own for a type I don&#39;t own?</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1514384980, "post_id": 47992959, "comment_id": 82955823, "body": "Type aliases aren&#39;t new types, they&#39;re just shorthand for existing ones. <a href=\"https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html\" rel=\"nofollow noreferrer\">Advanced Types</a> (title is slightly misleading)"}, {"owner": {"reputation": 6434, "user_id": 4443226, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/C3vUB.png?s=128&g=1", "display_name": "Nevermore", "link": "https://stackoverflow.com/users/4443226/nevermore"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1514385243, "post_id": 47992959, "comment_id": 82955963, "body": "Ok thanks, is it possible to impl Add on a type (f64, f64)?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1514385361, "post_id": 47992959, "comment_id": 82956016, "body": "You don&#39;t control the <code>Add</code> trait, and you don&#39;t control the type <code>(f64, f64)</code>, so no, the coherence rules forbid it."}, {"owner": {"reputation": 6434, "user_id": 4443226, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/C3vUB.png?s=128&g=1", "display_name": "Nevermore", "link": "https://stackoverflow.com/users/4443226/nevermore"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1514385420, "post_id": 47992959, "comment_id": 82956040, "body": "If you add that answer I can close the question, thank you"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1514385855, "post_id": 47992959, "comment_id": 82956251, "body": "The answer is essentially &quot;you can&#39;t implement a trait you don&#39;t own  for a type you don&#39;t own&quot;, which is what the linked duplicate says. What clarification do you believe is necessary?"}, {"owner": {"reputation": 6434, "user_id": 4443226, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/C3vUB.png?s=128&g=1", "display_name": "Nevermore", "link": "https://stackoverflow.com/users/4443226/nevermore"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1514385925, "post_id": 47992959, "comment_id": 82956281, "body": "I meant add it as an answer to the question so I can accept it as correct"}], "answers": [{"tags": [], "owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "is_accepted": true, "score": 3, "last_activity_date": 1514386785, "creation_date": 1514386785, "answer_id": 47994300, "question_id": 47992959, "link": "https://stackoverflow.com/questions/47992959/impl-add-for-type-alias-tuple-f64-f64/47994300#47994300", "title": "Impl Add for type alias tuple (f64, f64)", "body": "<p>No, you don't have a <code>Point</code> type. The <code>type</code> keyword unfortunately does not create a new type, but only a new name (alias) for an existing type.</p>\n\n<p>To create a type, use:</p>\n\n<pre><code>struct Point(f64, f64);\n</code></pre>\n"}], "owner": {"reputation": 6434, "user_id": 4443226, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/C3vUB.png?s=128&g=1", "display_name": "Nevermore", "link": "https://stackoverflow.com/users/4443226/nevermore"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 858, "favorite_count": 0, "accepted_answer_id": 47994300, "answer_count": 1, "score": 1, "last_activity_date": 1514386785, "creation_date": 1514380857, "question_id": 47992959, "link": "https://stackoverflow.com/questions/47992959/impl-add-for-type-alias-tuple-f64-f64", "title": "Impl Add for type alias tuple (f64, f64)", "body": "<p>I have a custom type Point</p>\n\n<pre><code>type Point = (f64, f64);\n</code></pre>\n\n<p>And I want to add two <code>Point</code>s together but I get this error</p>\n\n<pre><code>error[E0368]: binary assignment operation `+=` cannot be applied to type `(f64, f64)`\n   --&gt; src/main.rs:119:21\n    |\n119 |                     force_map[&amp;body.name] += force;\n    |                     ---------------------^^^^^^^^^\n    |                     |\n    |                     cannot use `+=` on type `(f64, f64)`\n</code></pre>\n\n<p>And when I try implementing Add, I get this error:</p>\n\n<pre><code>39 | / impl Add for (f64, f64) {\n40 | |     #[inline(always)]\n41 | |     fn add(self, other: (f64, f64)) -&gt; (f64, f64)  {\n42 | |         // Probably it will be optimized to not actually copy self and rhs for each call !\n43 | |         (self.0 + other.0, self.1 + other.1);\n44 | |     }\n45 | | }\n   | |_^ impl doesn't use types inside crate\n   |\n   = note: the impl does not reference any types defined in this crate\n   = note: define and implement a trait or new type instead\n</code></pre>\n\n<p>Is it possible to implement <code>Add</code> for a <code>type</code>? Should I use a <code>struct</code> instead?</p>\n"}, {"tags": ["rust", "lifetime", "mdns", "rust-tokio"], "answers": [{"tags": [], "owner": {"reputation": 613, "user_id": 3052732, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/09c3bb34576efcc1b5655f6479d76e1f?s=128&d=identicon&r=PG&f=1", "display_name": "Sabumnim", "link": "https://stackoverflow.com/users/3052732/sabumnim"}, "is_accepted": true, "score": 1, "last_activity_date": 1515441174, "creation_date": 1515441174, "answer_id": 48157182, "question_id": 47992794, "link": "https://stackoverflow.com/questions/47992794/tokio-corenetudpcodec-with-lifetime-on-associated-type/48157182#48157182", "title": "tokio_core::net::UdpCodec with lifetime on associated type", "body": "<p>That's a tricky one. As far as I can tell the only way to get this to work is using Rust nightly (<code>rustup toolchain install nightly</code> and <code>rustup default nightly</code>) and using the nightly feature <code>generic_associated_types</code>. The reason is that Associated Types (like <code>type In</code>) weren't originally allowed to be Generics or to have any type/lifetime arguments.</p>\n\n<pre><code>#![feature(generic_associated_types)]\n\n// ...includes...\n\npub struct MdnsCodec;\n\nimpl UdpCodec for MdnsCodec {\n    type In&lt;'a&gt; = dns_parser::Packet&lt;'a&gt;;\n    // ...rest of impl...\n}\n\nfn main() {\n    // ...code...\n}\n</code></pre>\n\n<p>There are of course the usual issues that arise with using prerelease software, for example that any unstable features you use could change at any time without warning.</p>\n"}], "owner": {"reputation": 118, "user_id": 667264, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/44802d820bf511c818453bf886cd868f?s=128&d=identicon&r=PG", "display_name": "Fulkerson", "link": "https://stackoverflow.com/users/667264/fulkerson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 83, "favorite_count": 0, "accepted_answer_id": 48157182, "answer_count": 1, "score": 0, "last_activity_date": 1515441174, "creation_date": 1514380168, "question_id": 47992794, "link": "https://stackoverflow.com/questions/47992794/tokio-corenetudpcodec-with-lifetime-on-associated-type", "title": "tokio_core::net::UdpCodec with lifetime on associated type", "body": "<p>I am trying to implement a <code>tokio_core::net::UdpCodec</code> which create a <code>dns_parser::Packet</code> from the dns_parser crate. The implementation currently look like this:</p>\n\n<pre><code>pub struct MdnsCodec;\n\nimpl UdpCodec for MdnsCodec {\n    type In = dns_parser::Packet;\n    type Out = (SocketAddr, dns_parser::Builder);\n\n    fn decode(&amp;mut self, addr: &amp;SocketAddr, buf: &amp;[u8]) -&gt; io::Result&lt;Self::In&gt; {\n        Ok(dns_parser::Packet::parse(buf).unwrap())\n    }\n\n    fn encode(&amp;mut self, (addr, builder): Self::Out, into: &amp;mut Vec&lt;u8&gt;) -&gt; SocketAddr {\n        let packet_data = builder.build().unwrap();\n        into.extend(&amp;packet_data);\n        addr\n    }\n}\n</code></pre>\n\n<p>The definition of <a href=\"https://docs.rs/dns-parser/0.7.1/dns_parser/struct.Packet.html\" rel=\"nofollow noreferrer\">dns_parser::Packet</a> is:</p>\n\n<pre><code>pub struct Packet&lt;'a&gt; {\n    pub header: Header,\n    pub questions: Vec&lt;Question&lt;'a&gt;&gt;,\n    pub answers: Vec&lt;ResourceRecord&lt;'a&gt;&gt;,\n    pub nameservers: Vec&lt;ResourceRecord&lt;'a&gt;&gt;,\n    pub additional: Vec&lt;ResourceRecord&lt;'a&gt;&gt;,\n    pub opt: Option&lt;OptRecord&lt;'a&gt;&gt;,\n</code></pre>\n\n<p>}</p>\n\n<p>This fails to compile with:</p>\n\n<pre><code>error[E0106]: missing lifetime specifier\n  --&gt; src/main.rs:18:15\n   |\n18 |     type In = dns_parser::Packet;\n   |               ^^^^^^^^^^^^^^^^^^ expected lifetime parameter\n\nerror: aborting due to previous error\n</code></pre>\n\n<p>The problem is I can't figure out what to add as a lifetime! I assume Packet needs to have the same lifetime as the buf argument. But I can't figure out how to express this properly myself.</p>\n\n<p>I have uploaded a nonworking example to github:\n<a href=\"https://github.com/Fulkerson/mdnsfuturestest\" rel=\"nofollow noreferrer\">https://github.com/Fulkerson/mdnsfuturestest</a></p>\n"}, {"tags": ["rust", "lifetime-scoping"], "answers": [{"tags": [], "owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "is_accepted": false, "score": 0, "last_activity_date": 1514388370, "creation_date": 1514388370, "answer_id": 47994659, "question_id": 47992637, "link": "https://stackoverflow.com/questions/47992637/rust-lifetimes-for-struct-references/47994659#47994659", "title": "Rust lifetimes for struct references", "body": "<p>Tree-like structures must use the <code>Box</code> pointer type (<code>Option&lt;Box&lt;TraceBit&gt;&gt;</code>). In general, in structs you should prefer owned types. </p>\n\n<p>Rust references aren't mere pointers. They are borrows (compile-time read/write locks) of data that must exist as owned somewhere else.</p>\n\n<p>So if you have an owned version of <code>TraceBit</code>:</p>\n\n<pre><code>pub struct TraceBit {\n    source_a: Option&lt;Box&lt;TraceBit&gt;&gt;,\n}\n</code></pre>\n\n<p>then reference to it is of type: <code>&amp;'a TraceBit</code>, but references to a type don't change how the type looks internally, so the type of <code>source_a</code> is still <code>Box&lt;TraceBit&gt;</code>. You can keep getting the <code>&amp;'a TraceBit</code> references recursively step by step:</p>\n\n<pre><code>trace_bit = trace_bit.source_a.as_ref().unwrap();\n</code></pre>\n\n<p>but there's no construct in Rust where taking a reference to the root of a tree suddenly changes the whole tree into a tree of references, so the type you are creating can't exist, and that's why you can't get type annotations right.</p>\n"}, {"tags": [], "owner": {"reputation": 4565, "user_id": 1134885, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c428466054762cf7d4b5fb5f4396fa2?s=128&d=identicon&r=PG", "display_name": "NovaDenizen", "link": "https://stackoverflow.com/users/1134885/novadenizen"}, "is_accepted": false, "score": 0, "last_activity_date": 1514410944, "last_edit_date": 1514410944, "creation_date": 1514407264, "answer_id": 47998384, "question_id": 47992637, "link": "https://stackoverflow.com/questions/47992637/rust-lifetimes-for-struct-references/47998384#47998384", "title": "Rust lifetimes for struct references", "body": "<p>Maybe instead of passing references around, you should use a contained and cloneable name type.</p>\n\n<pre><code>use std::rc::Rc;\n\n#[derive(Debug)]\npub enum TraceOperation {\n    AND,\n    OR,\n    XOR,\n    NOT,\n}\n\n#[derive(Debug)]\npub enum BitName&lt;T&gt; {\n    Name(Rc&lt;T&gt;),\n    Combination(Rc&lt;(TraceOperation, BitName&lt;T&gt;, BitName&lt;T&gt;)&gt;),\n}\n\nimpl&lt;T&gt; Clone for BitName&lt;T&gt; {\n    fn clone(&amp;self) -&gt; Self {\n        match self {\n            &amp;BitName::Name(ref x) =&gt; BitName::Name(Rc::clone(x)),\n            &amp;BitName::Combination(ref x) =&gt; BitName::Combination(Rc::clone(x)),\n\n        }\n    }\n}\n\nimpl&lt;T&gt; From&lt;T&gt; for BitName&lt;T&gt; {\n    fn from(x:T) -&gt; Self {\n        BitName::Name(Rc::new(x))\n    }\n}\n\nimpl&lt;T&gt; BitName&lt;T&gt; {\n    pub fn combine(op : TraceOperation, a : &amp;Self, b :&amp;Self) -&gt; Self {\n        BitName::Combination(Rc::new((op, (*a).clone(), (*b).clone())))\n    }\n}\n\nfn main() {\n    let x : BitName&lt;String&gt; = BitName::from(String::from(\"x\"));\n    let y : BitName&lt;String&gt; = BitName::from(String::from(\"y\"));\n    let xandy = BitName::combine(TraceOperation::AND, &amp;x, &amp;y);\n    println!(\"{:?}\", xandy);\n}\n</code></pre>\n"}], "owner": {"reputation": 810, "user_id": 1649108, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/bc64fd6d40ba59f8dc7a98b6e9792b11?s=128&d=identicon&r=PG", "display_name": "grasbueschel", "link": "https://stackoverflow.com/users/1649108/grasbueschel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 924, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1514410944, "creation_date": 1514379546, "question_id": 47992637, "link": "https://stackoverflow.com/questions/47992637/rust-lifetimes-for-struct-references", "title": "Rust lifetimes for struct references", "body": "<p>I've just started with Rust but can't quite grasp lifetimes so I could resolve following issue by myself:</p>\n\n<p>This test project is about simulating a bit to allow tracing it through various bitwise operations, e.g. <code>let newbit = oldbit1 ^ oldbit2</code> and looking at <code>newbit</code> I can tell afterwards it came out of an XOR operation with <code>oldbit1</code> and <code>oldbit2</code> as operands.</p>\n\n<pre><code>#[derive(Copy,Clone)]\npub enum TraceOperation {\n        AND,\n        OR,\n        XOR,\n        NOT,\n}\n\n#[derive(Copy,Clone)]\npub struct TraceBit&lt;'a&gt; {\n        source_a: Option&lt;&amp;'a TraceBit&lt;'a&gt;&gt;,\n        source_b: Option&lt;&amp;'a TraceBit&lt;'a&gt;&gt;,\n        source_op: Option&lt;TraceOperation&gt;,\n        value: bool,\n}\n</code></pre>\n\n<p>This compiles, but I don't fully understand why the lifetime parameters are needed that way. I assume that the compiler cannot expect that the members <code>source_a</code> and <code>source_b</code> live as long as the struct itself as this may not hold true, so explicit lifetimes are required. </p>\n\n<ul>\n<li>is this assumption correct?</li>\n</ul>\n\n<p>Further I don't fully understand why I have to re-specify the lifetime parameter for the reference type, i.e. why I have to write <code>source_a: Option&lt;&amp;'a TraceBit&lt;'a&gt;&gt;</code> as opposed to <code>source_a: Option&lt;&amp;'a TraceBit&gt;</code>.</p>\n\n<ul>\n<li>What is the second lifetime used for? How do I read that line out loud? I have:\n\"<code>source_a</code>  is a variable of type <code>Option</code> that may have <code>Some</code> reference (that is valid at least as long as the struct itself and as long as member <code>source_b</code>) to an instance of <code>TraceBit</code>\"</li>\n</ul>\n\n<p>My final issue is that I cannot make it to work using an overloaded operator:</p>\n\n<pre><code>use std::ops::BitXor;\nimpl&lt;'a&gt; BitXor for TraceBit&lt;'a&gt; {\n        type Output = Self;\n        fn bitxor(self, rhs: Self) -&gt; Self {\n                let valA: usize = if self.value { 1 } else { 0 };\n                let valB: usize = if rhs.value { 1 } else { 0 };\n                let val = if valA ^ valB != 0 { true } else { false };\n                TraceBit { source_a: Some(&amp;self), source_b: Some(&amp;rhs), source_op: Some(TraceOperation::XOR), value: val }\n        }\n}\n</code></pre>\n\n<p>This is basically pure guessing based on <a href=\"https://doc.rust-lang.org/std/ops/trait.BitXor.html\" rel=\"nofollow noreferrer\">BitXor documentation</a>. So what I try to do, in a very explicit manner, is to perform an xor operation on the two input variables and create a new <code>TraceBit</code> as output with the inputs stored in it as reference. </p>\n\n<pre><code>error[E0597]: `self` does not live long enough\n  --&gt; libbittrace/src/lib.rs:37:30\n   |\n37 |   TraceBit { source_a: Some(&amp;self), source_b: Some(&amp;rhs), source_op: Some(TraceOperation::XOR), value: val }\n   |                              ^^^^ does not live long enough\n38 |  }\n   |  - borrowed value only lives until here\n   |\nnote: borrowed value must be valid for the lifetime 'a as defined on the impl at 31:1...\n  --&gt; libbittrace/src/lib.rs:31:1\n   |\n31 | / impl&lt;'a&gt; BitXor for TraceBit&lt;'a&gt; {\n32 | |  type Output = Self;\n33 | |  fn bitxor(self, rhs: Self) -&gt; Self {\n34 | |   let valA: usize = if self.value { 1 } else { 0 };\n...  |\n40 | |\n41 | | }\n   | |_^\n\nerror[E0597]: `rhs` does not live long enough\n  --&gt; libbittrace/src/lib.rs:37:53\n   |\n37 |   TraceBit { source_a: Some(&amp;self), source_b: Some(&amp;rhs), source_op: Some(TraceOperation::XOR), value: val }\n   |                                                     ^^^ does not live long enough\n38 |  }\n   |  - borrowed value only lives until here\n   |\nnote: borrowed value must be valid for the lifetime 'a as defined on the impl at 31:1...\n  --&gt; libbittrace/src/lib.rs:31:1\n   |\n31 | / impl&lt;'a&gt; BitXor for TraceBit&lt;'a&gt; {\n32 | |  type Output = Self;\n33 | |  fn bitxor(self, rhs: Self) -&gt; Self {\n34 | |   let valA: usize = if self.value { 1 } else { 0 };\n...  |\n40 | |\n41 | | }\n   | |_^\n\nerror: aborting due to 2 previous errors\n</code></pre>\n\n<ul>\n<li>Seems like nothing lives longer than the xor operation itself, but how can I resolve this?</li>\n</ul>\n\n<p>I've tried various workarounds/changes to the code but to no avail and in any way I rather like to understand the issue than guessing a correct solution....</p>\n"}, {"tags": ["iterator", "rust", "traits"], "comments": [{"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 0, "creation_date": 1514370644, "post_id": 47989762, "comment_id": 82949334, "body": "Posting a <a href=\"https://stackoverflow.com/help/mcve\">Minimal, Complete, and Verifiable example (MCVE)</a> that demonstrates your problem would help you get better answers."}, {"owner": {"user_type": "does_not_exist", "display_name": "user4878753"}, "reply_to_user": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 0, "creation_date": 1514379024, "post_id": 47989762, "comment_id": 82953147, "body": "I didn&#39;t known. I&#39;ll keep it in mind for future questions."}], "answers": [{"comments": [{"owner": {"reputation": 22050, "user_id": 497364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8fd4eb2ae966a16e698b3e61217a7e1?s=128&d=identicon&r=PG", "display_name": "Paolo Falabella", "link": "https://stackoverflow.com/users/497364/paolo-falabella"}, "edited": false, "score": 0, "creation_date": 1514374993, "post_id": 47991511, "comment_id": 82951336, "body": "great answer. Adding a reference to the <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2132-copy-closures.md\" rel=\"nofollow noreferrer\">copy/clone closures RFC</a>"}, {"owner": {"user_type": "does_not_exist", "display_name": "user4878753"}, "edited": false, "score": 0, "creation_date": 1514378921, "post_id": 47991511, "comment_id": 82953097, "body": "I didn&#39;t thought of the closure. Thanks for the working code, not though either of this tuple setup. Very elegant, I&#39;ll try to use this kind of things later. Do you know a place to find those kind of tricks ?"}], "tags": [], "owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "is_accepted": true, "score": 1, "last_activity_date": 1514374791, "creation_date": 1514374791, "answer_id": 47991511, "question_id": 47989762, "link": "https://stackoverflow.com/questions/47989762/implement-trait-for-all-iterator/47991511#47991511", "title": "Implement trait for all Iterator", "body": "<p>MCVE for your question could be written as</p>\n\n<pre><code>vec![1,2,3].iter().map(|x| x).to_separated_string(\"\", \"\")\n</code></pre>\n\n<p>You were wrong in the following assumption</p>\n\n<blockquote>\n  <p><code>std::iter::Map</code> implements <code>Iterator&lt;Item = T&gt; + Clone</code></p>\n</blockquote>\n\n<p><a href=\"https://doc.rust-lang.org/std/iter/struct.Map.html#implementations\" rel=\"nofollow noreferrer\">Trait implementations</a> section for <code>std::iter::Map</code> in the Rust documentation includes</p>\n\n<pre><code>impl&lt;I, F&gt; Clone for Map&lt;I, F&gt; where\n    F: Clone,\n    I: Clone, \n</code></pre>\n\n<p>that is <code>Map</code> implements <code>Clone</code> when the source iterator <code>I</code> and the type of the function <code>F</code> both implement <code>Clone</code>.</p>\n\n<p>Unfortunately, closures don't implement <code>Clone</code> in current stable Rust version 1.22.1. The feature is available in nightly Rust under feature gate <code>clone_closures</code>. <a href=\"https://play.rust-lang.org/?gist=32023021de7236d4bdd1b6eb44d5bcdb&amp;version=nightly\" rel=\"nofollow noreferrer\">Playground link</a></p>\n\n<p>You can also remove the requirement for <code>Clone</code> by rewriting <code>to_separated_string</code> like that</p>\n\n<pre><code>fn to_separated_string(self, line_prefix: &amp;str, separator: &amp;str) -&gt; String {\n    self.fold((true, \"\".to_string()), |(first, acc), line| {\n        (\n            false,\n            format!(\n                \"{}{}{}{}\",\n                acc,\n                if first { \"\" } else { separator },\n                line_prefix,\n                line\n            ),\n        )\n    }).1\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=d35e420307b347a41c5dbf8b64dcbef6&amp;version=nightly\" rel=\"nofollow noreferrer\">Playground link</a></p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user4878753"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 399, "favorite_count": 0, "accepted_answer_id": 47991511, "answer_count": 1, "score": 0, "last_activity_date": 1514374791, "creation_date": 1514367752, "question_id": 47989762, "link": "https://stackoverflow.com/questions/47989762/implement-trait-for-all-iterator", "title": "Implement trait for all Iterator", "body": "<p>I'm creating a method to format data out of an iterator. To allow chaining, I'm trying to provide it as new method of Iterator through generics :</p>\n\n<pre><code>trait ToSeparatedString {\n    fn to_separated_string(self, line_prefix: &amp;str, separator: &amp;str) -&gt; String;\n}\n\nimpl&lt;T, I&gt; ToSeparatedString for I\nwhere\n    T: Display,\n    I: Iterator&lt;Item = T&gt; + Clone,\n{\n    fn to_separated_string(self, line_prefix: &amp;str, separator: &amp;str) -&gt; String {\n        let len = self.clone().count();\n\n        self.enumerate()\n            .map(|(i, line)| if i &lt; len - 1 {\n                (line, separator)\n            } else {\n                (line, \"\")\n            })\n            .fold::&lt;String, _&gt;(\"\".to_owned(), |acc, (line, line_end)| {\n                format!(\"{}{}{}{}\", acc, line_prefix, line, line_end)\n            })\n    }\n}\n</code></pre>\n\n<p>Then I'm using it here :</p>\n\n<pre><code>#[derive(Debug)]\npub struct TransactionDocumentBuilder&lt;'a&gt; {\n    /// Currency Id.\n    pub currency: &amp;'a str,\n    /// Document timestamp.\n    pub blockstamp: Blockstamp,\n    /// Transaction locktime (in seconds ?)\n    pub locktime: u64,\n    /// List of issuers.\n    pub issuers: Vec&lt;ed25519::PublicKey&gt;,\n    /// List of inputs.\n    pub inputs: Vec&lt;Input&gt;,\n    /// List of outputs.\n    pub outputs: Vec&lt;Output&gt;,\n    /// Transaction comment.\n    pub comment: &amp;'a str,\n}\n\nimpl&lt;'a&gt; DocumentBuilder&lt;TransactionDocument&gt; for TransactionDocumentBuilder&lt;'a&gt; {\n    fn build_with_signature(self, signature: ed25519::Signature) -&gt; TransactionDocument {\n        TransactionDocument {\n            document: GenericDocumentBuilder::new(10, \"Transaction\", self.currency)\n                .with(\"Blockstamp\", &amp;self.blockstamp.to_string())\n                .with(\"Locktime\", &amp;self.locktime.to_string())\n                .with(\"Issuers\", &amp;self.issuers.iter().to_separated_string(\"\", \"\\n\"))\n                .with(\"Inputs\", &amp;self.inputs.iter()\n                    .map(|input| input.source)\n                    .to_separated_string(\"\", \" \"))\n                // Iterate through each input unlocks\n                .with(\"Unlocks\", &amp;self.inputs.iter()\n                    .enumerate()\n                    .map(|(i, input)| {\n                        input.unlocks.iter().to_separated_string(&amp;i.to_string(), \"\\n\")\n                    })\n                    .to_separated_string(\"\", \"\\n\")\n                )\n                // more fields\n                .build_with_signature(signature),\n        };\n\n        unimplemented!()\n    }\n\n    fn build_and_sign(self, _private_key: &amp;ed25519::PrivateKey) -&gt; TransactionDocument {\n        unimplemented!()\n    }\n}\n</code></pre>\n\n<p>It's works when I'm using it after an <code>.iter()</code> but not after a <code>.map()</code>, and says it's not implemented. But <code>std::slice::Iter</code> and <code>std::iter::Map</code> implements <code>Iterator&lt;Item = T&gt; + Clone</code>, so where is the problem ?</p>\n\n<p>Thank you beforehand for you help.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 2, "creation_date": 1514362486, "post_id": 47987295, "comment_id": 82945801, "body": "Not really, it&#39;s purely stylistic.  Maybe it communicates the intent better, or you have to do less typing when copying the function signature from the trait defintion."}], "answers": [{"tags": [], "owner": {"reputation": 6357, "user_id": 6086311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb99289473f6393b89474785f2d294d1?s=128&d=identicon&r=PG", "display_name": "dtolnay", "link": "https://stackoverflow.com/users/6086311/dtolnay"}, "is_accepted": false, "score": 1, "last_activity_date": 1519600437, "creation_date": 1519600437, "answer_id": 48979489, "question_id": 47987295, "link": "https://stackoverflow.com/questions/47987295/is-there-any-advantage-to-using-the-associated-type-compared-to-the-concrete-imp/48979489#48979489", "title": "Is there any advantage to using the associated type compared to the concrete implementation type?", "body": "<p>There is no difference between the two signatures from the compiler's perspective, so the decision is going to be all about which is better suited for humans reading and understanding the code.</p>\n\n<p>I typically prefer to use the <strong>associated type</strong> rather than the concrete type.</p>\n\n<p>This comes up in implementations of the <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html\" rel=\"nofollow noreferrer\"><code>Iterator</code></a> trait. Suppose we have a type that exposes an iterator over booleans.</p>\n\n<pre><code>impl Iterator for MyBits {\n    type Item = bool;\n\n    fn next(&amp;mut self) -&gt; ??? {\n        /* ... */\n    }\n}\n</code></pre>\n\n<p>For the <code>???</code> we can put either <code>Option&lt;Self::Item&gt;</code> or <code>Option&lt;bool&gt;</code>. Someone quickly skimming this code will have an easier time reading <code>Option&lt;Self::Item&gt;</code> because it better captures the meaning of the return type -- the next item in the iteration, if there is one. If we were to write <code>Option&lt;bool&gt;</code> then the meaning is less self-evident -- maybe the bool somehow indicates whether there are remaining items...?</p>\n"}], "owner": {"reputation": 4203, "user_id": 618677, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/0474a21ea751fc27f84147ca7feae93b?s=128&d=identicon&r=PG", "display_name": "user618677", "link": "https://stackoverflow.com/users/618677/user618677"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 72, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1519814625, "creation_date": 1514355583, "last_edit_date": 1519814625, "question_id": 47987295, "link": "https://stackoverflow.com/questions/47987295/is-there-any-advantage-to-using-the-associated-type-compared-to-the-concrete-imp", "title": "Is there any advantage to using the associated type compared to the concrete implementation type?", "body": "<p>Is there any advantage to using <code>Self::Output</code> over <code>Int256</code> as the return type in this code?</p>\n\n<pre><code>impl Add for Int256 {\n    type Output = Int256;\n\n    fn add(self, v: Int256) -&gt; Self::Output {\n        // ...\n    }\n}\n\nimpl Add for Int256 {\n    type Output = Int256;\n\n    fn add(self, v: Int256) -&gt; Int256 {\n        // ...\n    }\n}\n</code></pre>\n"}, {"tags": ["parsing", "floating-point", "rust"], "comments": [{"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 0, "creation_date": 1514353315, "post_id": 47985839, "comment_id": 82942581, "body": "Where are these octal floating numbers coming from? Maybe it is easier to fix source? BTW, octal &quot;42.1&quot; is 34.125."}, {"owner": {"reputation": 4324, "user_id": 1045510, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/abde71672c5b271c778d3ed312347866?s=128&d=identicon&r=PG", "display_name": "Kroltan", "link": "https://stackoverflow.com/users/1045510/kroltan"}, "edited": false, "score": 0, "creation_date": 1514371660, "post_id": 47985839, "comment_id": 82949814, "body": "Apparently, the implementation was actually broken. And it seems that (from the link you provided) &quot;If by pure chance someone has a terrible use case for which they need this, they can damn well write their own. It\u2019s rather easy if you\u2019re only interested in one particular radix, especially since exponents aren\u2019t legal for bases other than 10 and 16. Besides, it can\u2019t possibly be more inaccurate than the current implementation.&quot;"}, {"owner": {"reputation": 4324, "user_id": 1045510, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/abde71672c5b271c778d3ed312347866?s=128&d=identicon&r=PG", "display_name": "Kroltan", "link": "https://stackoverflow.com/users/1045510/kroltan"}, "edited": false, "score": 0, "creation_date": 1514371675, "post_id": 47985839, "comment_id": 82949823, "body": "This is an excellent opportunity for a crate, though!"}], "answers": [{"comments": [{"owner": {"reputation": 466, "user_id": 2533397, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ICKak.png?s=128&g=1", "display_name": "vpzomtrrfrt", "link": "https://stackoverflow.com/users/2533397/vpzomtrrfrt"}, "edited": false, "score": 0, "creation_date": 1514393240, "post_id": 47995336, "comment_id": 82959522, "body": "I&#39;m trying to get this into a crate, but I&#39;m not sure what license to use for something you&#39;ve written"}, {"owner": {"reputation": 99643, "user_id": 445517, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/57e2ba76e6290c4e9e19821a068bc8c1?s=128&d=identicon&r=PG", "display_name": "CodesInChaos", "link": "https://stackoverflow.com/users/445517/codesinchaos"}, "reply_to_user": {"reputation": 466, "user_id": 2533397, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ICKak.png?s=128&g=1", "display_name": "vpzomtrrfrt", "link": "https://stackoverflow.com/users/2533397/vpzomtrrfrt"}, "edited": false, "score": 0, "creation_date": 1514393390, "post_id": 47995336, "comment_id": 82959602, "body": "@vpzomtrrfrt I hereby license the above code under <a href=\"https://creativecommons.org/publicdomain/zero/1.0/\" rel=\"nofollow noreferrer\">CC0</a>. Though I don&#39;t really think that this code has the quality necessary for a general purpose crate. In particular, the integer overflow issue is problematic."}, {"owner": {"reputation": 466, "user_id": 2533397, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ICKak.png?s=128&g=1", "display_name": "vpzomtrrfrt", "link": "https://stackoverflow.com/users/2533397/vpzomtrrfrt"}, "edited": false, "score": 0, "creation_date": 1514394116, "post_id": 47995336, "comment_id": 82959950, "body": "<a href=\"https://crates.io/crates/parse_float_radix\" rel=\"nofollow noreferrer\">crates.io/crates/parse_float_radix</a> is now up, but I do agree it&#39;s not likely to be useful for many purposes"}], "tags": [], "owner": {"reputation": 99643, "user_id": 445517, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/57e2ba76e6290c4e9e19821a068bc8c1?s=128&d=identicon&r=PG", "display_name": "CodesInChaos", "link": "https://stackoverflow.com/users/445517/codesinchaos"}, "is_accepted": false, "score": 0, "last_activity_date": 1514394169, "last_edit_date": 1514394169, "creation_date": 1514391393, "answer_id": 47995336, "question_id": 47985839, "link": "https://stackoverflow.com/questions/47985839/how-to-parse-an-octal-string-as-a-float-in-rust/47995336#47995336", "title": "How to parse an octal string as a float in Rust?", "body": "<pre><code>use std::fmt;\n\n#[derive(Debug, Clone, PartialEq, Eq)]\npub struct ParseFloatError {\n    _private: (),\n}\n\nimpl ParseFloatError {\n    fn new() -&gt; ParseFloatError {\n        ParseFloatError { _private: () }\n    }\n}\n\nimpl fmt::Display for ParseFloatError {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        write!(f, \"Could not parse float\")\n    }\n}\n\npub fn parse_float_radix(s: &amp;str, radix: u32) -&gt; Result&lt;f64, ParseFloatError&gt; {\n    let s2 = s.replace(\".\", \"\");\n    let i = i64::from_str_radix(&amp;s2, radix).map_err(|_| ParseFloatError::new())?;\n    let count = s.split('.').count();\n    let fraction_len: usize;\n    match count {\n        0 =&gt; unreachable!(),\n        1 =&gt; fraction_len = 0,\n        2 =&gt; fraction_len = s.split('.').last().unwrap().len(),\n        _ =&gt; return Err(ParseFloatError::new()),\n    }\n    let f = (i as f64) / f64::from(radix).powi(fraction_len as i32);\n    Ok(f)\n}\n\nfn main() {\n    println!(\"{}\", parse_float_radix(\"42.1\", 8).unwrap());\n}\n</code></pre>\n\n<p>It first parses the input as an integer and then divides it by radix^number_of_fractional_digits.</p>\n\n<p>It doesn't support scientific notation or special values like infinity or NaN. It also fails if the intermediate integer overflows.</p>\n"}, {"tags": [], "owner": {"reputation": 466, "user_id": 2533397, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ICKak.png?s=128&g=1", "display_name": "vpzomtrrfrt", "link": "https://stackoverflow.com/users/2533397/vpzomtrrfrt"}, "is_accepted": true, "score": 0, "last_activity_date": 1573542109, "creation_date": 1573542109, "answer_id": 58813554, "question_id": 47985839, "link": "https://stackoverflow.com/questions/47985839/how-to-parse-an-octal-string-as-a-float-in-rust/58813554#58813554", "title": "How to parse an octal string as a float in Rust?", "body": "<p>Since posting this question, a crate has appeared that solves this: <a href=\"https://crates.io/crates/lexical\" rel=\"nofollow noreferrer\">lexical</a>. Compiling with the <code>radix</code> feature enables a <code>parse_radix</code> function, which can parse strings into floats with radices from 2 to 36.</p>\n"}], "owner": {"reputation": 466, "user_id": 2533397, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ICKak.png?s=128&g=1", "display_name": "vpzomtrrfrt", "link": "https://stackoverflow.com/users/2533397/vpzomtrrfrt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 548, "favorite_count": 0, "accepted_answer_id": 58813554, "answer_count": 2, "score": 0, "last_activity_date": 1573542109, "creation_date": 1514343900, "last_edit_date": 1514391392, "question_id": 47985839, "link": "https://stackoverflow.com/questions/47985839/how-to-parse-an-octal-string-as-a-float-in-rust", "title": "How to parse an octal string as a float in Rust?", "body": "<p>I need to take an octal string, such as \"42.1\", and get a float from it (34.125).  What's the best way to do this in Rust?  I see <a href=\"https://internals.rust-lang.org/t/deprecate-f-32-64-from-str-radix/2405\" rel=\"nofollow noreferrer\">there previously was a from_str_radix function, but it's now removed</a>.</p>\n"}, {"tags": ["rust", "immutability", "let"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1514348689, "post_id": 47985112, "comment_id": 82941468, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/42991325/why-does-this-rust-program-ignore-immutability\">Why does this Rust program ignore immutability</a>"}], "answers": [{"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1514349069, "post_id": 47985168, "comment_id": 82941544, "body": "I wouldn&#39;t say it&#39;s universally bad; <a href=\"https://stackoverflow.com/a/42991597/3650362\">this answer</a> describes some possible uses. When the values aren&#39;t closely related, like in OP&#39;s example, that&#39;s confusing."}], "tags": [], "owner": {"reputation": 32699, "user_id": 202694, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/982e5d5973bcd2be7b77e52ec7dca27c?s=128&d=identicon&r=PG", "display_name": "Pace", "link": "https://stackoverflow.com/users/202694/pace"}, "is_accepted": false, "score": 0, "last_activity_date": 1514336040, "creation_date": 1514336040, "answer_id": 47985168, "question_id": 47985112, "link": "https://stackoverflow.com/questions/47985112/immutability-of-rust-let-bindings/47985168#47985168", "title": "immutability of rust let bindings", "body": "<p><code>a</code> is being <a href=\"https://rustbyexample.com/variable_bindings/scope.html\" rel=\"nofollow noreferrer\">shadowed</a>.</p>\n\n<pre><code>let a = 5;\na = 6; // not allowed\n\nlet a = 5;\nlet a = 6; //allowed\n</code></pre>\n\n<p>Bad form to do this in the same block like that.</p>\n"}, {"tags": [], "owner": {"reputation": 4565, "user_id": 1134885, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c428466054762cf7d4b5fb5f4396fa2?s=128&d=identicon&r=PG", "display_name": "NovaDenizen", "link": "https://stackoverflow.com/users/1134885/novadenizen"}, "is_accepted": false, "score": 1, "last_activity_date": 1514413374, "creation_date": 1514413374, "answer_id": 47999331, "question_id": 47985112, "link": "https://stackoverflow.com/questions/47985112/immutability-of-rust-let-bindings/47999331#47999331", "title": "immutability of rust let bindings", "body": "<p>Your code is more or less equivalent to this:</p>\n\n<pre><code>let first_a = [1, 2, 3, 4, 5];\nprintln! (\"{:?}\", first_a);\n\nlet (second_a, b, c) = (1,2,3);\nprintln! (\"{:?}\", second_a);\nprintln! (\"{:?}\", b);\nprintln! (\"{:?}\", c);\n</code></pre>\n\n<p>The second <code>a</code> is a completely new variable.  The first <code>a</code> is no longer accessible once you create a second one.</p>\n"}], "owner": {"reputation": 113, "user_id": 5640290, "user_type": "registered", "profile_image": "https://graph.facebook.com/10153826483713092/picture?type=large", "display_name": "Jenny Lian", "link": "https://stackoverflow.com/users/5640290/jenny-lian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 103, "favorite_count": 0, "answer_count": 2, "score": 2, "last_activity_date": 1514413374, "creation_date": 1514335398, "last_edit_date": 1514337335, "question_id": 47985112, "link": "https://stackoverflow.com/questions/47985112/immutability-of-rust-let-bindings", "title": "immutability of rust let bindings", "body": "<p>I thought that  <code>let</code> is supposed to be an immutable binding.\nWhy does the correct code work then? (assigned <code>a</code> twice)</p>\n\n<pre><code>let a = [1, 2, 3, 4, 5];\nprintln! (\"{:?}\", a);\n\nlet (a, b, c) = (1,2,3);\nprintln! (\"{:?}\", a);\nprintln! (\"{:?}\", b);\nprintln! (\"{:?}\", c);\n</code></pre>\n\n<p>And the result of cargo run is:</p>\n\n<pre><code>Guess the number! From a 1 - 100 inclusive\n[1, 2, 3, 4, 5]\n1\n2\n3\n</code></pre>\n"}, {"tags": ["rust", "union-find"], "comments": [{"owner": {"reputation": 2991, "user_id": 3877787, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/DPxhf.jpg?s=128&g=1", "display_name": "Zalman Stern", "link": "https://stackoverflow.com/users/3877787/zalman-stern"}, "edited": false, "score": 0, "creation_date": 1514313524, "post_id": 47982204, "comment_id": 82933291, "body": "I don&#39;t see anywhere this code updates the <code>map</code> field after the initial insertion. <code>find_internal</code> updates <code>parent</code>, but this is not going to help if your intent is to iterate over <code>map</code> directly. Perhaps <code>finalize</code> needs to rewrite the index in <code>map</code> for each value to the index returned from <code>find_internal</code> inside of the loop over all values. Or to ask another debugging question, do you get the correct information after calling <code>finalize</code> if you call <code>find</code> rather than iterating over the <code>map</code>? Perhaps you want to implement iteration as a trait of <code>DisjointSet</code> itself using <code>find_internal</code>?"}, {"owner": {"reputation": 3859, "user_id": 1191072, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/768517ebc5e0277492cf54a891d5aafe?s=128&d=identicon&r=PG", "display_name": "Alessandro", "link": "https://stackoverflow.com/users/1191072/alessandro"}, "reply_to_user": {"reputation": 2991, "user_id": 3877787, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/DPxhf.jpg?s=128&g=1", "display_name": "Zalman Stern", "link": "https://stackoverflow.com/users/3877787/zalman-stern"}, "edited": false, "score": 0, "creation_date": 1514326933, "post_id": 47982204, "comment_id": 82937614, "body": "Thanks for these tips. I&#39;m new to rust so I might have misunderstood, but I replaced self.clusters.parent[*tag] with self.clusters.find(address.clone()) and I get the same result."}, {"owner": {"reputation": 2991, "user_id": 3877787, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/DPxhf.jpg?s=128&g=1", "display_name": "Zalman Stern", "link": "https://stackoverflow.com/users/3877787/zalman-stern"}, "edited": false, "score": 0, "creation_date": 1514482222, "post_id": 47982204, "comment_id": 82992082, "body": "I&#39;d suggest debugging this by printing out values at various points since I don&#39;t think the error is due to unique features of Rust. E.g. if you call <code>self.clusters.find(&quot;a&quot;)</code> and <code>self.clusters.find(&quot;b&quot;)</code> immediately after the call to <code>finalize</code> do they return the same thing they did before the call? Your second comment here applies to the serialization loop I think. I was referring to this line <code>for (k, v) in self.clusters.map.clone()</code>. Is the serialization loop supposed to replace the values in <code>map</code>?"}], "answers": [{"comments": [{"owner": {"reputation": 3859, "user_id": 1191072, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/768517ebc5e0277492cf54a891d5aafe?s=128&d=identicon&r=PG", "display_name": "Alessandro", "link": "https://stackoverflow.com/users/1191072/alessandro"}, "edited": false, "score": 0, "creation_date": 1514897418, "post_id": 48015496, "comment_id": 83095108, "body": "very good code, thanks for providing test cases. How could I implement the find_parent method for a generic type?"}, {"owner": {"reputation": 4565, "user_id": 1134885, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c428466054762cf7d4b5fb5f4396fa2?s=128&d=identicon&r=PG", "display_name": "NovaDenizen", "link": "https://stackoverflow.com/users/1134885/novadenizen"}, "reply_to_user": {"reputation": 3859, "user_id": 1191072, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/768517ebc5e0277492cf54a891d5aafe?s=128&d=identicon&r=PG", "display_name": "Alessandro", "link": "https://stackoverflow.com/users/1191072/alessandro"}, "edited": false, "score": 0, "creation_date": 1514995054, "post_id": 48015496, "comment_id": 83135771, "body": "Use <code>fwd</code> to find the <code>usize</code> corresponding to your <code>T</code>, use <code>uf.find_parent()</code> to find the parent <code>usize</code>, then use <code>rev</code> to map from the parent <code>usize</code> back to an <code>Rc&lt;T&gt;</code>."}], "tags": [], "owner": {"reputation": 4565, "user_id": 1134885, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c428466054762cf7d4b5fb5f4396fa2?s=128&d=identicon&r=PG", "display_name": "NovaDenizen", "link": "https://stackoverflow.com/users/1134885/novadenizen"}, "is_accepted": true, "score": 1, "last_activity_date": 1514753834, "last_edit_date": 1514753834, "creation_date": 1514502494, "answer_id": 48015496, "question_id": 47982204, "link": "https://stackoverflow.com/questions/47982204/union-find-implementation-does-not-update-parent-tags/48015496#48015496", "title": "Union-Find implementation does not update parent tags", "body": "<p>I think you're just not extracting the information out of your <code>DisjointSet</code> struct correctly.</p>\n\n<p>I got <a href=\"https://xkcd.com/356/\" rel=\"nofollow noreferrer\">sniped</a> by this and implemented union find.  First, with a basic usize implemention:</p>\n\n<pre><code>pub struct UnionFinderImpl {\n    parent: Vec&lt;usize&gt;,\n}\n</code></pre>\n\n<p>Then with a wrapper for more generic types:</p>\n\n<pre><code>pub struct UnionFinder&lt;T: Hash&gt; {\n    rev: Vec&lt;Rc&lt;T&gt;&gt;,\n    fwd: HashMap&lt;Rc&lt;T&gt;, usize&gt;,\n    uf: UnionFinderImpl,\n}\n</code></pre>\n\n<p>Both structs implement a <code>groups()</code> method that returns a <code>Vec&lt;Vec&lt;&gt;&gt;</code> of groups.  <code>Clone</code> isn't required because I used <code>Rc</code>.  </p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=e9c9ab23cb9136563724f2db24de56dc&amp;version=stable\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}], "owner": {"reputation": 3859, "user_id": 1191072, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/768517ebc5e0277492cf54a891d5aafe?s=128&d=identicon&r=PG", "display_name": "Alessandro", "link": "https://stackoverflow.com/users/1191072/alessandro"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 90, "favorite_count": 0, "accepted_answer_id": 48015496, "answer_count": 1, "score": 0, "last_activity_date": 1514754010, "creation_date": 1514312042, "last_edit_date": 1514754010, "question_id": 47982204, "link": "https://stackoverflow.com/questions/47982204/union-find-implementation-does-not-update-parent-tags", "title": "Union-Find implementation does not update parent tags", "body": "<p>I'm trying to create some sets of <code>String</code>s and then merge some of these sets so that they have the same tag (of type <code>usize</code>). Once I initialize the map, I start adding strings:</p>\n\n<pre><code>self.clusters.make_set(\"a\");\nself.clusters.make_set(\"b\");\n</code></pre>\n\n<p>When I call <code>self.clusters.find(\"a\")</code> and <code>self.clusters.find(\"b\")</code>, different values are returned, which is fine because I haven't merged the sets yet. Then I call the following method to merge two sets</p>\n\n<pre><code>let _ = self.clusters.union(\"a\", \"b\");\n</code></pre>\n\n<p>If I call <code>self.clusters.find(\"a\")</code> and <code>self.clusters.find(\"b\")</code> now, I get the same value. However, when I call the <code>finalize()</code> method and try to iterate through the map, the original tags are returned, as if I never merged the sets.</p>\n\n<pre><code>self.clusters.finalize();\n\nfor (address, tag) in &amp;self.clusters.map {\n    self.clusterizer_writer.write_all(format!(\"{};{}\\n\", address, \n    self.clusters.parent[*tag]).as_bytes()).unwrap();\n}\n\n// to output all keys with the same tag as a list. \nlet a: Vec&lt;(usize, Vec&lt;String&gt;)&gt; = {\n    let mut x = HashMap::new();\n    for (k, v) in self.clusters.map.clone() {\n        x.entry(v).or_insert_with(Vec::new).push(k)\n    }\n    x.into_iter().collect()\n};\n</code></pre>\n\n<p>I can't figure out why this is the case, but I'm relatively new to Rust; maybe its an issue with pointers?</p>\n\n<p>Instead of \"a\" and \"b\", I'm actually using something like <code>utils::arr_to_hex(&amp;input.outpoint.txid)</code> of type <code>String</code>.</p>\n\n<p>This is the Rust implementation of the Union-Find algorithm that I am using:</p>\n\n<pre><code>/// Tarjan's Union-Find data structure.\n#[derive(RustcDecodable, RustcEncodable)]\npub struct DisjointSet&lt;T: Clone + Hash + Eq&gt; {\n    set_size: usize,\n    parent: Vec&lt;usize&gt;,\n    rank: Vec&lt;usize&gt;,\n    map: HashMap&lt;T, usize&gt;, // Each T entry is mapped onto a usize tag.\n}\n\nimpl&lt;T&gt; DisjointSet&lt;T&gt;\nwhere\n    T: Clone + Hash + Eq,\n{\n    pub fn new() -&gt; Self {\n        const CAPACITY: usize = 1000000;\n        DisjointSet {\n            set_size: 0,\n            parent: Vec::with_capacity(CAPACITY),\n            rank: Vec::with_capacity(CAPACITY),\n            map: HashMap::with_capacity(CAPACITY),\n        }\n    }\n\n    pub fn make_set(&amp;mut self, x: T) {\n        if self.map.contains_key(&amp;x) {\n            return;\n        }\n\n        let len = &amp;mut self.set_size;\n        self.map.insert(x, *len);\n        self.parent.push(*len);\n        self.rank.push(0);\n\n        *len += 1;\n    }\n\n    /// Returns Some(num), num is the tag of subset in which x is.\n    /// If x is not in the data structure, it returns None.\n    pub fn find(&amp;mut self, x: T) -&gt; Option&lt;usize&gt; {\n        let pos: usize;\n        match self.map.get(&amp;x) {\n            Some(p) =&gt; {\n                pos = *p;\n            }\n            None =&gt; return None,\n        }\n\n        let ret = DisjointSet::&lt;T&gt;::find_internal(&amp;mut self.parent, pos);\n        Some(ret)\n    }\n\n    /// Implements path compression.\n    fn find_internal(p: &amp;mut Vec&lt;usize&gt;, n: usize) -&gt; usize {\n        if p[n] != n {\n            let parent = p[n];\n            p[n] = DisjointSet::&lt;T&gt;::find_internal(p, parent);\n            p[n]\n        } else {\n            n\n        }\n    }\n\n    /// Union the subsets to which x and y belong.\n    /// If it returns Ok&lt;u32&gt;, it is the tag for unified subset.\n    /// If it returns Err(), at least one of x and y is not in the disjoint-set.\n    pub fn union(&amp;mut self, x: T, y: T) -&gt; Result&lt;usize, ()&gt; {\n        let x_root;\n        let y_root;\n        let x_rank;\n        let y_rank;\n        match self.find(x) {\n            Some(x_r) =&gt; {\n                x_root = x_r;\n                x_rank = self.rank[x_root];\n            }\n            None =&gt; {\n                return Err(());\n            }\n        }\n\n        match self.find(y) {\n            Some(y_r) =&gt; {\n                y_root = y_r;\n                y_rank = self.rank[y_root];\n            }\n            None =&gt; {\n                return Err(());\n            }\n        }\n\n        // Implements union-by-rank optimization.\n        if x_root == y_root {\n            return Ok(x_root);\n        }\n\n        if x_rank &gt; y_rank {\n            self.parent[y_root] = x_root;\n            return Ok(x_root);\n        } else {\n            self.parent[x_root] = y_root;\n            if x_rank == y_rank {\n                self.rank[y_root] += 1;\n            }\n            return Ok(y_root);\n        }\n    }\n\n    /// Forces all laziness, updating every tag.\n    pub fn finalize(&amp;mut self) {\n        for i in 0..self.set_size {\n            DisjointSet::&lt;T&gt;::find_internal(&amp;mut self.parent, i);\n        }\n    }\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 158, "user_id": 1582976, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/jyjsn.jpg?s=128&g=1", "display_name": "UsAndRufus", "link": "https://stackoverflow.com/users/1582976/usandrufus"}, "edited": false, "score": 0, "creation_date": 1514309852, "post_id": 47981860, "comment_id": 82932150, "body": "FYI it&#39;s an implementation of Nine Men&#39;s Morris (hence the references to player and move). You can see the full code <a href=\"https://github.com/UsAndRufus/nineman\" rel=\"nofollow noreferrer\">here</a>."}, {"owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "edited": false, "score": 0, "creation_date": 1514312362, "post_id": 47981860, "comment_id": 82932925, "body": "Interesting thing: you know a thing called borrow checker but you don&#39;t know what it is? :) You should re-read the rust book, especially the ownership chapter."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1514319199, "post_id": 47981860, "comment_id": 82935245, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/41664099/how-to-prevent-a-value-from-being-moved\">How to prevent a value from being moved?</a> In your case, you&#39;re already taking <code>self</code> by reference; all you need to do is take <code>mv</code> by reference too."}, {"owner": {"reputation": 1011, "user_id": 3891638, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/pqkeX.jpg?s=128&g=1", "display_name": "cozyconemotel", "link": "https://stackoverflow.com/users/3891638/cozyconemotel"}, "edited": false, "score": 0, "creation_date": 1514378407, "post_id": 47981860, "comment_id": 82952898, "body": "Read the <a href=\"https://doc.rust-lang.org/book/second-edition/\" rel=\"nofollow noreferrer\">rust book</a> and you&#39;ll never have to ask this question again~ it&#39;s a must read"}, {"owner": {"reputation": 158, "user_id": 1582976, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/jyjsn.jpg?s=128&g=1", "display_name": "UsAndRufus", "link": "https://stackoverflow.com/users/1582976/usandrufus"}, "edited": false, "score": 0, "creation_date": 1514382084, "post_id": 47981860, "comment_id": 82954544, "body": "I have been chugging through the Rust book, but juggling it in spare-time jobs etc means I forget bits. In my mind once the method was done with the value it would give up ownership - clearly you need references for this which I didn&#39;t realise!"}], "answers": [{"comments": [{"owner": {"reputation": 158, "user_id": 1582976, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/jyjsn.jpg?s=128&g=1", "display_name": "UsAndRufus", "link": "https://stackoverflow.com/users/1582976/usandrufus"}, "edited": false, "score": 0, "creation_date": 1514382151, "post_id": 47986444, "comment_id": 82954577, "body": "Thanks, that works! I changed the method signature to <code>fn move_valid(&amp;self, mv: &amp;(String, String)) -&gt; bool {</code>, and decomposed the tuple inside the method. Now to read more..."}], "tags": [], "owner": {"reputation": 4565, "user_id": 1134885, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c428466054762cf7d4b5fb5f4396fa2?s=128&d=identicon&r=PG", "display_name": "NovaDenizen", "link": "https://stackoverflow.com/users/1134885/novadenizen"}, "is_accepted": true, "score": 1, "last_activity_date": 1514349977, "creation_date": 1514349977, "answer_id": 47986444, "question_id": 47981860, "link": "https://stackoverflow.com/questions/47981860/how-do-i-check-if-a-value-is-valid-and-then-return-it/47986444#47986444", "title": "How do I check if a value is valid and then return it?", "body": "<p>When you just pass an unadorned parameter (like <code>(String,String)</code>) to a function, you are <strong>moving</strong> the value into that function.  You don't have it anymore, you've given it to the function.</p>\n\n<p>You probably just want to change the parameter type to <code>&amp;(String,String)</code> to pass a reference instead.  Then the function will be able to look at the data, but no ownership change will take place.</p>\n"}], "owner": {"reputation": 158, "user_id": 1582976, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/jyjsn.jpg?s=128&g=1", "display_name": "UsAndRufus", "link": "https://stackoverflow.com/users/1582976/usandrufus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 250, "favorite_count": 0, "accepted_answer_id": 47986444, "answer_count": 1, "score": 0, "last_activity_date": 1514349977, "creation_date": 1514309716, "question_id": 47981860, "link": "https://stackoverflow.com/questions/47981860/how-do-i-check-if-a-value-is-valid-and-then-return-it", "title": "How do I check if a value is valid and then return it?", "body": "<p>I am trying to receive some input, and then either return the value if it's valid or get input again if it's not. However, I'm running into borrow checker issues trying to both check the value and return it (new to Rust). Here's the code snippet:</p>\n\n<pre><code>fn get_move(&amp;self) -&gt; (String, String) {\n    let player = self.current_player();\n\n    let mut mv;\n    let mut is_valid = false;\n\n    loop {\n        mv = player.make_move();\n        {\n            is_valid = self.move_valid(mv);\n        }\n        match is_valid {\n            true =&gt; return mv,\n            _ =&gt; continue,\n        }\n    }\n}\n\nfn move_valid(&amp;self, (_from,_to): (String, String)) -&gt; bool {\n    false\n}\n</code></pre>\n\n<p>Error returned is</p>\n\n<pre><code>error[E0382]: use of moved value: `mv`\n  --&gt; src/game.rs:75:32\n   |\n72 |                 is_valid = self.move_valid(mv);\n   |                                            -- value moved here\n...\n75 |                 true =&gt; return mv,\n   |                                ^^ value used here after move\n   |\n   = note: move occurs because `mv` has type `(std::string::String, std::string::String)`, which does not implement the `Copy` trait\n</code></pre>\n\n<p>I tried adding the scope around <code>self.move_valid</code>, but it the <code>move_valid</code> method still appears to be owning <code>mv</code> when I try and return it.</p>\n\n<p>Is there a standard Rust pattern for repeated input until the value is valid? How can I get this to work?</p>\n"}, {"tags": ["gcc", "build", "rust", "ld", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 534, "user_id": 6192935, "user_type": "registered", "accept_rate": 86, "profile_image": "https://lh4.googleusercontent.com/-WzVJWA1aLts/AAAAAAAAAAI/AAAAAAAABfQ/FxZhI2PBCBA/photo.jpg?sz=128", "display_name": "Manish Champaneri", "link": "https://stackoverflow.com/users/6192935/manish-champaneri"}, "edited": false, "score": 0, "creation_date": 1590149111, "post_id": 47997512, "comment_id": 109577496, "body": "copy library in the same folder as your build. As sciter tries to find library in serval place like.  1. Enviroment Variable 2. Path 3. Same folder"}, {"owner": {"reputation": 121, "user_id": 7487146, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/E4wJD.png?s=128&g=1", "display_name": "Denis Kotlyarov", "link": "https://stackoverflow.com/users/7487146/denis-kotlyarov"}, "reply_to_user": {"reputation": 534, "user_id": 6192935, "user_type": "registered", "accept_rate": 86, "profile_image": "https://lh4.googleusercontent.com/-WzVJWA1aLts/AAAAAAAAAAI/AAAAAAAABfQ/FxZhI2PBCBA/photo.jpg?sz=128", "display_name": "Manish Champaneri", "link": "https://stackoverflow.com/users/6192935/manish-champaneri"}, "edited": false, "score": 0, "creation_date": 1590258342, "post_id": 47997512, "comment_id": 109616028, "body": "You can use LD_LIBRARY_PATH, but you need to configure it before starting, which is not very."}], "tags": [], "owner": {"reputation": 121, "user_id": 7487146, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/E4wJD.png?s=128&g=1", "display_name": "Denis Kotlyarov", "link": "https://stackoverflow.com/users/7487146/denis-kotlyarov"}, "is_accepted": false, "score": 1, "last_activity_date": 1514402261, "creation_date": 1514402261, "answer_id": 47997512, "question_id": 47980378, "link": "https://stackoverflow.com/questions/47980378/ld-cannot-find-library-even-though-ldconfig-does-rust-sciter/47997512#47997512", "title": "ld cannot find library even though ldconfig does (rust-sciter)", "body": "<p><strong>Visit</strong> <a href=\"https://sciter.com/download/\" rel=\"nofollow noreferrer\">https://sciter.com/download/</a> . Download Sciter SDK!! Unpack!</p>\n\n<pre><code>Linux: sciter/bin.gtk/libsciter-gtk-64.so\ncp -a sciter/bin.gtk/libsciter-gtk-64.so /lib\n</code></pre>\n\n<p>I'm writing through an interpreter. Himself faced this.</p>\n\n<p>With the rest of the files you will understand. </p>\n\n<p><em>To compile enough library!</em></p>\n"}], "owner": {"reputation": 691, "user_id": 2013773, "user_type": "registered", "accept_rate": 31, "profile_image": "https://i.stack.imgur.com/rQFEE.jpg?s=128&g=1", "display_name": "Liam Martens", "link": "https://stackoverflow.com/users/2013773/liam-martens"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 82, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1514402261, "creation_date": 1514300792, "last_edit_date": 1514301286, "question_id": 47980378, "link": "https://stackoverflow.com/questions/47980378/ld-cannot-find-library-even-though-ldconfig-does-rust-sciter", "title": "ld cannot find library even though ldconfig does (rust-sciter)", "body": "<p>I'm attempting to run the <code>rust-sciter</code> minimal example however the run command <code>cargo run --example minimal</code> is telling me the library <code>-lsciter-gtk-64</code> cannot be found.</p>\n\n<p>However when I check <code>ldconfig -p | grep sciter</code> it returns just fine <code>libsciter-gtk-64.so (libc6, x86-64) =&gt; libsciter-gtk-64.so</code>.</p>\n\n<p>I've also ran <code>ldd</code> on the <code>.so</code> file itself and all <code>sciter</code> dependencies were found as well.</p>\n\n<p>I'm not sure what I'm doing wrong.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1514299570, "post_id": 47980023, "comment_id": 82928747, "body": "<code>u8</code> != <code>&amp;u8</code>.  Possible duplicate of <a href=\"https://stackoverflow.com/questions/24689463/collect-into-owned-vec-of-owned-strings-in-rust\" title=\"collect into owned vec of owned strings in rust\">stackoverflow.com/questions/24689463/&hellip;</a>, but the syntax changed a little bit since then."}, {"owner": {"user_type": "does_not_exist", "display_name": "user8370684"}, "reply_to_user": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1514300106, "post_id": 47980023, "comment_id": 82928951, "body": "@Stefan What does <code>u8</code> have to do with strings?"}, {"owner": {"reputation": 165, "user_id": 2160593, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5718e8258aaa158265aecc28cc8b3932?s=128&d=identicon&r=PG", "display_name": "Ranjith Raj D", "link": "https://stackoverflow.com/users/2160593/ranjith-raj-d"}, "edited": false, "score": 0, "creation_date": 1514301921, "post_id": 47980023, "comment_id": 82929574, "body": "let a = &amp;[0u8]; let b: Vec&lt;&amp;u8&gt; = a.iter().collect(); @Roxy , I tried this and it does work for me. If we make the genric as &amp;u8 for b:Vec."}], "answers": [{"tags": [], "owner": {"reputation": 99643, "user_id": 445517, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/57e2ba76e6290c4e9e19821a068bc8c1?s=128&d=identicon&r=PG", "display_name": "CodesInChaos", "link": "https://stackoverflow.com/users/445517/codesinchaos"}, "is_accepted": true, "score": 7, "last_activity_date": 1514301238, "last_edit_date": 1514301238, "creation_date": 1514300221, "answer_id": 47980272, "question_id": 47980023, "link": "https://stackoverflow.com/questions/47980023/how-to-convert-from-u8-to-vecu8/47980272#47980272", "title": "How to convert from &amp;[u8] to Vec&lt;u8&gt;?", "body": "<p>The iterator only returns references to the elements (here <code>&amp;u8</code>). To get owned values (here <code>u8</code>), you can used <code>.cloned()</code>.</p>\n\n<pre><code>let a: &amp;[u8] = &amp;[0u8];\nlet b: Vec&lt;u8&gt; = a.iter().cloned().collect();\n</code></pre>\n"}, {"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user8370684"}, "edited": false, "score": 0, "creation_date": 1514409355, "post_id": 47982727, "comment_id": 82965808, "body": "I actually needed to do something more complicated and unfortunately <code>to_vec</code> didn&#39;t work. The error I get is: <code>error[E0599]: no method named to_vec found for type std::iter::Take&lt;std::iter::Cycle&lt;std::slice::Iter&lt;&#39;_, u8&gt;&gt;&gt; in the current scope</code>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1514423764, "post_id": 47982727, "comment_id": 82969465, "body": "@Roxy That&#39;s a different question: &quot;how do I convert an iterator to a <code>Vec</code>?&quot; <code>.collect()</code> is definitely the right answer to that one."}], "tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": false, "score": 51, "last_activity_date": 1514316141, "last_edit_date": 1514316141, "creation_date": 1514315319, "answer_id": 47982727, "question_id": 47980023, "link": "https://stackoverflow.com/questions/47980023/how-to-convert-from-u8-to-vecu8/47982727#47982727", "title": "How to convert from &amp;[u8] to Vec&lt;u8&gt;?", "body": "<p>Collecting into a <code>Vec</code> is so common that slices have a method <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.to_vec\" rel=\"noreferrer\"><code>to_vec</code></a> that does exactly this:</p>\n\n<pre><code>let b = a.to_vec();\n</code></pre>\n\n<p>You get the same thing as <a href=\"https://stackoverflow.com/a/47980272/3650362\">CodesInChaos's answer</a>, but more concisely.</p>\n\n<p>Notice that <code>to_vec</code> requires <code>T: Clone</code>. To get a <code>Vec&lt;T&gt;</code> out of a <code>&amp;[T]</code> you have to be able to get an owned <code>T</code> out of a non-owning <code>&amp;T</code>, which is what <code>Clone</code> does.</p>\n\n<p><a href=\"https://doc.rust-lang.org/std/primitive.slice.html#impl-ToOwned\" rel=\"noreferrer\">Slices also implement <code>ToOwned</code></a>, so you can use <code>to_owned</code> instead of <code>to_vec</code> if you want to be generic over different types of non-owning container. If your code only works with slices, prefer <code>to_vec</code> instead.</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user8370684"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 11471, "favorite_count": 5, "accepted_answer_id": 47980272, "answer_count": 2, "score": 30, "last_activity_date": 1514316141, "creation_date": 1514299015, "question_id": 47980023, "link": "https://stackoverflow.com/questions/47980023/how-to-convert-from-u8-to-vecu8", "title": "How to convert from &amp;[u8] to Vec&lt;u8&gt;?", "body": "<p>I'm attempting to simply convert a slice to a vector. The following code:</p>\n\n<pre><code>let a = &amp;[0u8];\nlet b: Vec&lt;u8&gt; = a.iter().collect();\n</code></pre>\n\n<p>fails with the following error message: </p>\n\n<pre><code>3 |     let b: Vec&lt;u8&gt; = a.iter().collect();\n  |                               ^^^^^^^ a collection of type `std::vec::Vec&lt;u8&gt;` cannot be built from an iterator over elements of type `&amp;u8`\n</code></pre>\n\n<p>What am I missing?</p>\n"}, {"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1514289124, "post_id": 47978224, "comment_id": 82925168, "body": "This is not a downcast. This is an upcast."}], "answers": [{"tags": [], "owner": {"reputation": 6357, "user_id": 6086311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb99289473f6393b89474785f2d294d1?s=128&d=identicon&r=PG", "display_name": "dtolnay", "link": "https://stackoverflow.com/users/6086311/dtolnay"}, "is_accepted": false, "score": 3, "last_activity_date": 1519599750, "creation_date": 1519599750, "answer_id": 48979406, "question_id": 47978224, "link": "https://stackoverflow.com/questions/47978224/unable-to-upcast-into-supertrait-in-rust/48979406#48979406", "title": "Unable to upcast into supertrait in Rust", "body": "<p>While for now Rust does not natively support upcasting trait objects to a supertrait, usually you can work around it by exposing a trait method to perform the concrete upcast that you care about.</p>\n\n<p>In your case that could consist of an <code>as_any_ref</code> method as follows.</p>\n\n<pre><code>use std::any::Any;\n\ntrait T: Any {\n    fn as_any_ref(&amp;self) -&gt; &amp;Any;\n}\n\nstruct Implementor {}\n\nimpl T for Implementor {\n    fn as_any_ref(&amp;self) -&gt; &amp;Any {\n        self\n    }\n}\n\nfn give_T_ref() -&gt; &amp;'static T {\n    &amp;Implementor {}\n}\n\nfn main() {\n    let y: &amp;Any = give_T_ref().as_any_ref();\n}\n</code></pre>\n"}], "owner": {"reputation": 474, "user_id": 1753929, "user_type": "registered", "accept_rate": 25, "profile_image": "https://i.stack.imgur.com/nXwCf.png?s=128&g=1", "display_name": "Loovjo", "link": "https://stackoverflow.com/users/1753929/loovjo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 440, "favorite_count": 0, "closed_date": 1519601513, "answer_count": 1, "score": 1, "last_activity_date": 1519599750, "creation_date": 1514288919, "last_edit_date": 1514317413, "question_id": 47978224, "link": "https://stackoverflow.com/questions/47978224/unable-to-upcast-into-supertrait-in-rust", "closed_reason": "Duplicate", "title": "Unable to upcast into supertrait in Rust", "body": "<p>I'm trying to make a program in Rust where I have a function that returns a trait object reference (<code>&amp;T</code>), where <code>T</code> has <code>std::any::Any</code> as a supertrait (T is defined as <code>trait T: std::any::Any</code>). Since every value that implements <code>T</code> also has to implement <code>std::any::Any</code>, I would expect to be able to do:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn give_T_ref() -&gt; &amp;'static T {\n    ...\n}\n\nlet y: &amp;std::any::Any = give_T_ref();\n</code></pre>\n\n<p>But this gives a compiler error, saying <code>expected trait `std::any::Any`, found trait `T`</code>.</p>\n\n<p>Is this a bug/problem in the compiler, or am I missing something? Is there currently any way to work around this?</p>\n\n<p>Here is a minimal runnable example of my problem (<a href=\"https://play.rust-lang.org/?gist=435232e8cb141d08669d9be33a0047a0&amp;version=nightly\" rel=\"nofollow noreferrer\">link to play.rust-lang.org</a>):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::any::Any;\n\ntrait T: Any {}\n\nstruct Implementor {}\n\nimpl T for Implementor {}\n\nfn give_T_ref() -&gt; &amp;'static T {\n    &amp;Implementor {}\n}\n\nfn main() {\n    let y: &amp;Any = give_T_ref();\n    //  ^ expected trait `std::any::Any`, found trait `T`\n}\n</code></pre>\n"}, {"tags": ["rust", "rust-piston"], "comments": [{"owner": {"reputation": 5308, "user_id": 4038191, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/10ec10e81b5315fe2147c38bf3e15e9e?s=128&d=identicon&r=PG", "display_name": "EvilTak", "link": "https://stackoverflow.com/users/4038191/eviltak"}, "edited": false, "score": 0, "creation_date": 1514306528, "post_id": 47977393, "comment_id": 82931131, "body": "Do you want to draw the items to texture and keep redrawing that texture instead of the triangles directly, or do you want some kind of &quot;persistent&quot; buffer? If you are doing this purely for performance considerations, you shouldn&#39;t worry about it too much until you are completely sure that it is the bottleneck. Plus, such draw calls are pretty cheap, even by the hundreds."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 5308, "user_id": 4038191, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/10ec10e81b5315fe2147c38bf3e15e9e?s=128&d=identicon&r=PG", "display_name": "EvilTak", "link": "https://stackoverflow.com/users/4038191/eviltak"}, "edited": false, "score": 0, "creation_date": 1514307173, "post_id": 47977393, "comment_id": 82931340, "body": "@EvilTak The question is about redrawing a single texture instead of triangles. Maybe I should also think about keeping the data in the graphical memory although I would need a lower level library than piston... I think you are right, I will benchmark my code."}], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 92, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1514285040, "creation_date": 1514285040, "question_id": 47977393, "link": "https://stackoverflow.com/questions/47977393/how-to-draw-primitives-in-a-texture", "title": "How to draw primitives in a texture?", "body": "<p>When I want to draw some primitives in Piston, I do something like that:</p>\n\n<pre><code>let gl = &amp;mut GlGraphics::new(OpenGL::V3_2);\n\ngl.draw(viewport, |context, gl| {\n    Rectangle::new([1., 1., 1., 1.])\n        .draw([0., 0., 10., 20.], &amp;context.draw_state, context.view, gl);\n});\n</code></pre>\n\n<p>This code draws a rectangle in a buffer and diplay it on the screen. But what if I want to draw some primitives in a texture (<em>i.e.</em> keep the buffer for reusing it)? I am not sure about the library optimization, and if I could make this, I would have hundreds less triangles to draw.</p>\n"}, {"tags": ["list", "rust", "replicate"], "answers": [{"tags": [], "owner": {"reputation": 126353, "user_id": 14660, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/e55e0ec3c00f834d78fbdddeaa36e308?s=128&d=identicon&r=PG", "display_name": "Schwern", "link": "https://stackoverflow.com/users/14660/schwern"}, "is_accepted": true, "score": 5, "last_activity_date": 1514250950, "creation_date": 1514250950, "answer_id": 47973112, "question_id": 47972984, "link": "https://stackoverflow.com/questions/47972984/how-to-replicate-a-slice-in-rust/47973112#47973112", "title": "How to replicate a slice in Rust?", "body": "<p>Create an iterator from the array with <a href=\"https://doc.rust-lang.org/std/slice/struct.Iter.html\" rel=\"noreferrer\"><code>iter</code></a>, then an endlessly repeating iterator with <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.cycle\" rel=\"noreferrer\"><code>cycle</code></a>, then limit it to 4 cycles with <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.take\" rel=\"noreferrer\"><code>take</code></a>.</p>\n\n<pre><code>fn main() {\n    let xs = [5,7,13];\n    let ys = xs.iter()\n                .cycle()\n                .take(xs.len() * 4);\n\n    for y in ys {\n        println!(\"{}\", y);\n    }\n}\n</code></pre>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user8370684"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 147, "favorite_count": 1, "accepted_answer_id": 47973112, "answer_count": 1, "score": 4, "last_activity_date": 1514252374, "creation_date": 1514248962, "question_id": 47972984, "link": "https://stackoverflow.com/questions/47972984/how-to-replicate-a-slice-in-rust", "title": "How to replicate a slice in Rust?", "body": "<p>I have a slice that I want to replicate. For example, if <code>xs = [1, 2, 3]</code>, and I need to replicate it 4 times, I would end up with <code>ys = [1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3]</code>.</p>\n\n<p>In Haskell, I would do something like this:</p>\n\n<pre><code>ys = take (4 * length xs) $ cycle xs\n</code></pre>\n\n<p>How might this be similarly done in Rust?</p>\n"}, {"tags": ["graphics", "rust"], "answers": [{"tags": [], "owner": {"reputation": 824, "user_id": 6655004, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/011d07b3868b32e1dc6082918f6b45b5?s=128&d=identicon&r=PG&f=1", "display_name": "Filipe Rodrigues", "link": "https://stackoverflow.com/users/6655004/filipe-rodrigues"}, "is_accepted": false, "score": 0, "last_activity_date": 1595863078, "creation_date": 1595863078, "answer_id": 63118344, "question_id": 47971557, "link": "https://stackoverflow.com/questions/47971557/how-is-updating-the-indices-buffer-handled-in-gfx-rs/63118344#63118344", "title": "How is updating the indices buffer handled in gfx-rs?", "body": "<p>You can update the index buffer by using the <code>slice</code> that comes from creating the vertex buffer.</p>\n<p>The slice has a public field, <a href=\"https://docs.rs/gfx/0.18.2/gfx/struct.Slice.html\" rel=\"nofollow noreferrer\"><code>slice.buffer</code></a> that represents the index buffer itself, although this is a <a href=\"https://docs.rs/gfx/0.18.2/gfx/enum.IndexBuffer.html\" rel=\"nofollow noreferrer\"><code>gfx::IndexBuffer</code></a>, not a <a href=\"https://docs.rs/gfx/0.18.2/gfx/handle/struct.Buffer.html\" rel=\"nofollow noreferrer\"><code>gfx::handle::Buffer</code></a>, which is required for the call to <a href=\"https://docs.rs/gfx/0.18.2/gfx/struct.Encoder.html#method.update_buffer\" rel=\"nofollow noreferrer\"><code>encoder.update_buffer(...)</code></a>.</p>\n<p>In order to get the underlying buffer, match on the <code>IndexBuffer</code> to the type you created, as such:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>match &amp;slice.buffer {\n    // On `Auto`, there is no index buffer\n    gfx::IndexBuffer::Auto =&gt; ...,\n    \n    // On `Index16`, the indices are `u16`\n    gfx::IndexBuffer::Index16(buffer) =&gt; ...,\n\n    // On `Index32`, the indices are `u32`\n    gfx::IndexBuffer::Index32(buffer) =&gt; ...,\n}\n</code></pre>\n<p>Only one of these will match at runtime, depending on the index buffer you chose when creating the vertex buffer.</p>\n<p>On the <code>Index16</code> and <code>Index32</code> cases, <code>buffer</code> will be a <code>gfx::handle::Buffer&lt;R, T&gt;</code>, where <code>T</code> is <code>u16</code> or <code>u32</code>.</p>\n"}], "owner": {"reputation": 49, "user_id": 9139587, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/22bdded367394777a4e26622beaed391?s=128&d=identicon&r=PG&f=1", "display_name": "Skemp", "link": "https://stackoverflow.com/users/9139587/skemp"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 133, "favorite_count": 0, "answer_count": 1, "score": 4, "last_activity_date": 1595863078, "creation_date": 1514231033, "last_edit_date": 1514232229, "question_id": 47971557, "link": "https://stackoverflow.com/questions/47971557/how-is-updating-the-indices-buffer-handled-in-gfx-rs", "title": "How is updating the indices buffer handled in gfx-rs?", "body": "<p>The only way I have found that accepts the indices buffer is:</p>\n\n<pre><code>let (vbuf, slice) = factory.create_vertex_buffer(&amp;verts, &amp;indices);\n</code></pre>\n\n<p>This creates a new buffer and I can't do it every frame.</p>\n\n<p>I can update the vertex buffer with <code>encoder.update_buffer(&amp;buf, &amp;data, offset)</code>, but I don't know how to update indices buffer.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1514229469, "post_id": 47971178, "comment_id": 82912306, "body": "<a href=\"https://meta.stackexchange.com/q/39223/281829\"><b>One</b> question per post, please</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1514230188, "post_id": 47971178, "comment_id": 82912477, "body": "See also <a href=\"https://stackoverflow.com/q/47620011/155423\">Can an FFI function modify a variable that wasn&#39;t declared mutable?</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1514230422, "post_id": 47971178, "comment_id": 82912515, "body": "For what it&#39;s worth, your question doesn&#39;t really have anything to do with ownership or borrowing, both of which usually refer to how long a given value is valid."}, {"owner": {"reputation": 1604, "user_id": 9131220, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/d949395713366e2abe1cafff2510149d?s=128&d=identicon&r=PG&f=1", "display_name": "tinker", "link": "https://stackoverflow.com/users/9131220/tinker"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1514231430, "post_id": 47971178, "comment_id": 82912704, "body": "@Shepmaster Thanks, and sorry for multiple questions. I checked the question that you have linked. Since, I do not have enough reputation to comment there, I will ask here. In the question that you have linked I see that the OP asks modifying a parameter that is marked as <code>const</code> inside the function. But, what I see in his <code>main</code> function is that the <code>val</code> variable is also not defined as <code>mut</code>. Now, what I don&#39;t understand is what is the proper way to call it? Just <code>foo(&amp;val)</code> or <code>foo(&amp;mut val)</code> assuming <code>val</code> is not <code>mut</code>, or to define the <code>val</code> as <code>mut</code> and do <code>foo(&amp;val)</code> or <code>foo(&amp;mut val)</code>?"}], "answers": [{"comments": [{"owner": {"reputation": 1604, "user_id": 9131220, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/d949395713366e2abe1cafff2510149d?s=128&d=identicon&r=PG&f=1", "display_name": "tinker", "link": "https://stackoverflow.com/users/9131220/tinker"}, "edited": false, "score": 0, "creation_date": 1514379062, "post_id": 47971646, "comment_id": 82953163, "body": "Thank you for the helpful response."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1514232536, "last_edit_date": 1514232536, "creation_date": 1514231942, "answer_id": 47971646, "question_id": 47971178, "link": "https://stackoverflow.com/questions/47971178/what-is-the-correct-way-to-call-an-ffi-function-that-swaps-two-values/47971646#47971646", "title": "What is the correct way to call an FFI function that swaps two values?", "body": "<p>You could have answered your question with a minimal amount of exploration. Don't be afraid to <em>try</em> things when programming; you are usually very unlikely to lose anything of value.</p>\n\n<p>For example...</p>\n\n<p><strong>build.rs</strong></p>\n\n<pre><code>extern crate cc;\n\nfn main() {\n    cc::Build::new()\n        .file(\"src/swap.c\")\n        .compile(\"repro\");\n}\n</code></pre>\n\n<p><strong>src/swap.c</strong></p>\n\n<pre class=\"lang-c prettyprint-override\"><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nvoid swap(int32_t *a, int32_t *b) {\n  printf(\"Swapping %p, %p\\n\", a, b);\n\n  int32_t t = *a;\n  *a = *b;\n  *b = t;\n}\n</code></pre>\n\n<p><strong>src/main.rs</strong></p>\n\n<pre><code>extern crate libc;\n\nuse libc::int32_t;\n\nextern \"C\" {\n    fn swap(a: &amp;mut int32_t, b: &amp;mut int32_t);\n}\n\nfn swap_wrapper_1(a: &amp;mut i32, b: &amp;mut i32) {\n    unsafe { swap(a, b) }\n}\n\nfn main() {\n    let mut a = 1;\n    let mut b = 2;\n\n    swap_wrapper_1(&amp;mut a, &amp;mut b);\n    println!(\"{}, {}\", a, b);\n}\n</code></pre>\n\n<p>This prints:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Swapping 0x7ffee1cf9ff0, 0x7ffee1cf9ff4\n2, 1\n</code></pre>\n\n<p>If you attempt to use your second form:</p>\n\n<pre><code>fn swap_wrapper_2(a: &amp;mut i32, b: &amp;mut i32) {\n    unsafe { swap(&amp;mut a, &amp;mut b) }\n}\n</code></pre>\n\n<p>You get a bunch of warnings:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0596]: cannot borrow immutable argument `a` as mutable\n  --&gt; src/main.rs:15:15\n   |\n14 | fn swap_wrapper_2(a: &amp;mut i32, b: &amp;mut i32) {\n   |                   - consider changing this to `mut a`\n15 |     swap(&amp;mut a, &amp;mut b)\n   |               ^ cannot borrow mutably\n</code></pre>\n\n<p>If you fix that and then call both forms back-to-back, you get:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Swapping 0x7ffee7483f60, 0x7ffee7483f64\n2, 1\nSwapping 0x7ffee7483f60, 0x7ffee7483f64\n1, 2\n</code></pre>\n\n<p>That's right \u2014 it's swapping the exact same addresses. That's because Rust will <a href=\"https://stackoverflow.com/q/28519997/155423\">automatically dereference your value</a> when it needs to to match the signature, so it doesn't matter as long as you've defined the FFI signature correctly.</p>\n"}], "owner": {"reputation": 1604, "user_id": 9131220, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/d949395713366e2abe1cafff2510149d?s=128&d=identicon&r=PG&f=1", "display_name": "tinker", "link": "https://stackoverflow.com/users/9131220/tinker"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 142, "favorite_count": 0, "accepted_answer_id": 47971646, "answer_count": 1, "score": 2, "last_activity_date": 1514232536, "creation_date": 1514227475, "last_edit_date": 1514230957, "question_id": 47971178, "link": "https://stackoverflow.com/questions/47971178/what-is-the-correct-way-to-call-an-ffi-function-that-swaps-two-values", "title": "What is the correct way to call an FFI function that swaps two values?", "body": "<p>I'm pretty new to Rust, and I'm trying to understanding the core concept of it which is ownership and borrowing. I already read the book and some other articles, but it still confuses me.</p>\n\n<p>I have a struct defined like this:</p>\n\n<pre><code>#[repr(C)]\n#[derive(Copy, Clone)]\npub struct Element(pub (crate) [u64; 12]);\n</code></pre>\n\n<p>I have an external function which swaps the values of two <code>Element</code> based on the <code>flag</code> value. If <code>flag</code> is 0, they are not swapped, and if <code>flag</code> is 1, they are swapped. That's why in the prototype I use <code>&amp;mut</code>:</p>\n\n<pre><code>extern {\n    pub fn swap(x: &amp;mut Element, y: &amp;mut Element, flag: u8);\n}\n</code></pre>\n\n<p>I create a wrapper method in Rust around this external function:</p>\n\n<pre><code>impl for Element {\n    fn wrapper_swap(&amp;mut self, y: &amp;mut Element, flag: u8) {\n        unsafe {\n            swap(self, y, flag); // OR swap(&amp;mut self, &amp;mut y, flag); ?!\n        }\n    }\n}\n</code></pre>\n\n<p>My <code>wrapper_swap</code> function has the same signature as the external prototype function <code>swap</code>. How do I need to call the external function <code>swap</code> here?</p>\n\n<p>Since <code>self</code> and <code>y</code> already are defined as <code>&amp;mut self</code> and <code>&amp;mut y</code>, can I just call the swap function as <code>swap(self, y, flag);</code>? Or will that remove the mutable references, and actually I need to call it as <code>swap(&amp;mut self, &amp;mut y, flag);</code>?</p>\n\n<p>It also gets complicated for me as to how I call it with actual values. For example, I have three variables defined like this:</p>\n\n<pre><code>let mut one = Element([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]);\nlet mut two = Element([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\nlet flag: u8 = 0;\n</code></pre>\n\n<p>Since the variables are already defined as mutable, do I need to call the <code>wrapper_swap</code> function as <code>(&amp;one).wrapper_swap(&amp;two, flag);</code> or will this  make references immutable no matter that the variables are defined as mutable, and instead I need to call it as <code>(&amp;mut one).wrapper_swap(&amp;mut two, flag);</code>? Which is the correct approach? </p>\n\n<p>Maybe it's because I'm using unsafe functions, but the compiler does not complain about how I call this function.</p>\n\n<p>What would happen if the variables <code>one</code> and <code>two</code> were not defined as mutable? Can I still borrow them mutable as <code>&amp;mut one</code> or <code>&amp;mut two</code>, and change their value in another function?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"user_type": "does_not_exist", "display_name": "user743382"}, "is_accepted": true, "score": 6, "last_activity_date": 1514198242, "creation_date": 1514198242, "answer_id": 47967822, "question_id": 47967549, "link": "https://stackoverflow.com/questions/47967549/what-is-the-rationale-for-not-being-able-to-use-the-outer-type-parameter-within/47967822#47967822", "title": "What is the rationale for not being able to use the outer type parameter within an inner function?", "body": "<p>From <a href=\"https://doc.rust-lang.org/error-index.html#E0401\" rel=\"noreferrer\">Rust Compiler Error Index</a>:</p>\n\n<blockquote>\n  <h1>E0401</h1>\n  \n  <p>Inner items do not inherit type parameters from the functions they are embedded in.</p>\n  \n  <p>[...]</p>\n  \n  <p>Items inside functions are basically just like top-level items, except that they can only be used from the function they are in.</p>\n  \n  <p>There are a couple of solutions for this.</p>\n  \n  <p>[...]</p>\n  \n  <p>For a generic item, you can copy over the parameters:</p>\n  \n  <p>[...]</p>\n</blockquote>\n\n<p>I would conclude from this that items inside functions are also <em>compiled as</em> top-level items. Allowing references to the outer function type parameters would allow two different function definitions with the same name, without any type parameters on the function itself to disambiguate, so would require name mangling changes. Making a small test program confirms this:</p>\n\n<pre><code>struct Foo&lt;T&gt;(T);\nimpl &lt;T&gt; Foo&lt;T&gt; {\n    pub fn bar() {\n        fn baz() { }\n        baz();\n    }\n}\nfn main() {\n    Foo::&lt;i32&gt;::bar();\n    Foo::&lt;u32&gt;::bar();\n}\n</code></pre>\n\n<p>Compiling this and calling <code>nm</code> on the generated output shows two definitions of <code>bar</code>, and a single definition of <code>baz</code>.</p>\n\n<p>It's possible to change Rust in the way you expect, but it would need to be designed first, and the perceived benefits must outweigh the cost to implement it. Given the available workarounds, the perceived benefits may be small. In your case, as indicated on that page, the workaround is to specify the type parameters for the inner function as well.</p>\n"}], "owner": {"reputation": 307, "user_id": 8984610, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/de739400d7fc13ff5008e2968c5983e8?s=128&d=identicon&r=PG&f=1", "display_name": "Erlich ", "link": "https://stackoverflow.com/users/8984610/erlich"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1997, "favorite_count": 0, "accepted_answer_id": 47967822, "answer_count": 1, "score": 8, "last_activity_date": 1514212926, "creation_date": 1514195860, "last_edit_date": 1514212926, "question_id": 47967549, "link": "https://stackoverflow.com/questions/47967549/what-is-the-rationale-for-not-being-able-to-use-the-outer-type-parameter-within", "title": "What is the rationale for not being able to use the outer type parameter within an inner function?", "body": "<p>I'm trying to create a recursive inner function that will print all elements in a linked list:</p>\n\n<pre><code> fn print_stack(&amp;self) {\n    fn print_nodes(head: &amp;Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt;) {\n        match head {\n            Some(ref p) =&gt; {\n                println!(\"{:?}\",p.data);\n                print_nodes(head.next);\n            },\n        }\n   };\n   print_nodes(&amp;self.head);\n}\n</code></pre>\n\n<p>The compiler generates the following error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>can't use type parameters from outer function; try using a local  type parameter instead.\n</code></pre>\n\n<p>Why is this an error?</p>\n"}, {"tags": ["rust", "rust-cargo", "rust-rocket"], "comments": [{"owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "edited": false, "score": 0, "creation_date": 1514191231, "post_id": 47966985, "comment_id": 82903579, "body": "The best place to ask this question is the <a href=\"https://github.com/SergioBenitez/Rocket\" rel=\"nofollow noreferrer\">rocket issues page</a>."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 1, "creation_date": 1514193649, "post_id": 47966985, "comment_id": 82904058, "body": "What version of Rust?  What version of Cargo?  What&#39;s in <code>Cargo.toml</code>?"}], "answers": [{"comments": [{"owner": {"reputation": 3199, "user_id": 2828227, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/CEPMO.jpg?s=128&g=1", "display_name": "Casper", "link": "https://stackoverflow.com/users/2828227/casper"}, "edited": false, "score": 0, "creation_date": 1514291947, "post_id": 47969753, "comment_id": 82926165, "body": "Unable to upgrade Rustc by using <code>rustup update</code> in Windows PowerShell. I finally solved it by reinstall Rust using the <code>rustup\u2011init.exe</code> installer."}, {"owner": {"reputation": 3199, "user_id": 2828227, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/CEPMO.jpg?s=128&g=1", "display_name": "Casper", "link": "https://stackoverflow.com/users/2828227/casper"}, "edited": false, "score": 0, "creation_date": 1514292905, "post_id": 47969753, "comment_id": 82926471, "body": "This time I encountered the problem: <a href=\"https://stackoverflow.com/questions/47941738/cannot-compile-the-ring-crate-file-not-found-for-module-montgomery\" title=\"cannot compile the ring crate file not found for module montgomery\">stackoverflow.com/questions/47941738/&hellip;</a>"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1514214014, "creation_date": 1514214014, "answer_id": 47969753, "question_id": 47966985, "link": "https://stackoverflow.com/questions/47966985/unable-to-build-rocket-rs-the-given-version-requirement-is-invalid/47969753#47969753", "title": "Unable to build Rocket.rs: The given version requirement is invalid", "body": "<blockquote>\n  <p>I am following the Rocket getting started guide</p>\n</blockquote>\n\n<p>The <a href=\"https://rocket.rs/guide/getting-started/#installing-rust\" rel=\"nofollow noreferrer\">very first section of the guide you linked</a> to states (emphasis mine):</p>\n\n<blockquote>\n  <p>Rocket makes abundant use of Rust\u2019s syntax extensions and other advanced, unstable features. Because of this, we\u2019ll need to <strong>use a nightly version of Rust</strong>.</p>\n</blockquote>\n\n<p>Slightly later, it states:</p>\n\n<blockquote>\n  <p>Rocket always requires the <strong>latest version of Rust nightly</strong>. </p>\n</blockquote>\n\n<p>Yet you have a stable version of Rust (1.7.0); one that is almost <strong>22 months old</strong> at this point (2016-02-29). Rust 1.22.1 is the current stable version of Rust.</p>\n\n<p>The guide continues on to describe how to install the latest nightly; I suggest following it.</p>\n"}, {"tags": [], "owner": {"reputation": 3199, "user_id": 2828227, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/CEPMO.jpg?s=128&g=1", "display_name": "Casper", "link": "https://stackoverflow.com/users/2828227/casper"}, "is_accepted": true, "score": 1, "last_activity_date": 1514292197, "creation_date": 1514292197, "answer_id": 47978835, "question_id": 47966985, "link": "https://stackoverflow.com/questions/47966985/unable-to-build-rocket-rs-the-given-version-requirement-is-invalid/47978835#47978835", "title": "Unable to build Rocket.rs: The given version requirement is invalid", "body": "<ul>\n<li>Uninstall Rust language in your PC</li>\n<li>Go to <a href=\"https://www.rust-lang.org/en-US/install.html\" rel=\"nofollow noreferrer\">the Rust official website</a> to download and reinstall the latest Rust.</li>\n</ul>\n"}], "owner": {"reputation": 3199, "user_id": 2828227, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/CEPMO.jpg?s=128&g=1", "display_name": "Casper", "link": "https://stackoverflow.com/users/2828227/casper"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 290, "favorite_count": 0, "accepted_answer_id": 47978835, "answer_count": 2, "score": 2, "last_activity_date": 1514292197, "creation_date": 1514190461, "last_edit_date": 1514213731, "question_id": 47966985, "link": "https://stackoverflow.com/questions/47966985/unable-to-build-rocket-rs-the-given-version-requirement-is-invalid", "title": "Unable to build Rocket.rs: The given version requirement is invalid", "body": "<p>I am following <a href=\"https://rocket.rs/guide/getting-started/\" rel=\"nofollow noreferrer\">the Rocket getting started guide</a> to learn the Rocket web framework for Rust. When I execute <code>cargo run --verbose</code> I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>PS C:\\Users\\kin\\Desktop\\hello-rocket&gt; cargo run --verbose\nUpdating registry `https://github.com/rust-lang/crates.io-index`\nfailed to parse registry's information for: serde\n\nCaused by:\n  the given version requirement is invalid\n</code></pre>\n\n<h3>System details</h3>\n\n<pre class=\"lang-none prettyprint-override\"><code>Desktop Environment:   Windows 10\nCargo Version      :   cargo 0.8.0-nightly (28a0cbb 2016-01-17)\nrustc Version      :   rustc 1.7.0 (a5d1e7a59 2016-02-29)\n</code></pre>\n\n<h3>Cargo.toml</h3>\n\n<pre><code>[package]\nname = \"hello-rocket\"\nversion = \"0.1.0\"\nauthors = [\"XXX\"]\n\n[dependencies]\nrocket = \"0.3.5\"\nrocket_codegen = \"0.3.5\"\n</code></pre>\n"}, {"tags": ["rust", "polymorphism", "traits"], "answers": [{"comments": [{"owner": {"reputation": 319, "user_id": 1167407, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/f24815b6b60543ac37af378a22031e4f?s=128&d=identicon&r=PG", "display_name": "Dan Wiebe", "link": "https://stackoverflow.com/users/1167407/dan-wiebe"}, "edited": false, "score": 0, "creation_date": 1514289335, "post_id": 47966422, "comment_id": 82925237, "body": "Merry Christmas!  I tried it, just now, in the Playground, and it didn&#39;t seem to work.  Maybe I did it wrong.  I&#39;d show you what I did, but StackOverflow does horrible things to the formatting of code in a comment.  Anyway, the upshot is that it still complains that a XxxWithKeys is not a ThingWithKeys and cannot be passed into the use_keys method.  (I know: I&#39;ll edit the original question instead to put my new code in.)"}, {"owner": {"reputation": 319, "user_id": 1167407, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/f24815b6b60543ac37af378a22031e4f?s=128&d=identicon&r=PG", "display_name": "Dan Wiebe", "link": "https://stackoverflow.com/users/1167407/dan-wiebe"}, "edited": false, "score": 0, "creation_date": 1514297999, "post_id": 47966422, "comment_id": 82928187, "body": "Wow.  I had actually just figured out the generic-method-signature thing and gotten the complaint about Sized, but I never in a million years would have thought to try + ?Sized, because it&#39;s a reference and references are all the same size.  Is there a good reason you need + ?Sized, or is it just a magical incantation you have to remember? (Thanks, by the way--it works fine now.)"}, {"owner": {"reputation": 5308, "user_id": 4038191, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/10ec10e81b5315fe2147c38bf3e15e9e?s=128&d=identicon&r=PG", "display_name": "EvilTak", "link": "https://stackoverflow.com/users/4038191/eviltak"}, "reply_to_user": {"reputation": 319, "user_id": 1167407, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/f24815b6b60543ac37af378a22031e4f?s=128&d=identicon&r=PG", "display_name": "Dan Wiebe", "link": "https://stackoverflow.com/users/1167407/dan-wiebe"}, "edited": false, "score": 0, "creation_date": 1514305768, "post_id": 47966422, "comment_id": 82930877, "body": "That&#39;s because generic type parameters, by default, are <code>Sized</code>. Trait types, however, are not. To allow the type parameter to accept unsized (trait) types, you must add the unsized (<code>?Sized</code>) bound."}, {"owner": {"reputation": 5308, "user_id": 4038191, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/10ec10e81b5315fe2147c38bf3e15e9e?s=128&d=identicon&r=PG", "display_name": "EvilTak", "link": "https://stackoverflow.com/users/4038191/eviltak"}, "reply_to_user": {"reputation": 319, "user_id": 1167407, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/f24815b6b60543ac37af378a22031e4f?s=128&d=identicon&r=PG", "display_name": "Dan Wiebe", "link": "https://stackoverflow.com/users/1167407/dan-wiebe"}, "edited": false, "score": 0, "creation_date": 1514306339, "post_id": 47966422, "comment_id": 82931068, "body": "Also, the type parameter binds to the type of the reference, not the reference itself."}], "tags": [], "owner": {"reputation": 5308, "user_id": 4038191, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/10ec10e81b5315fe2147c38bf3e15e9e?s=128&d=identicon&r=PG", "display_name": "EvilTak", "link": "https://stackoverflow.com/users/4038191/eviltak"}, "is_accepted": true, "score": 20, "last_activity_date": 1541455884, "last_edit_date": 1541455884, "creation_date": 1514185141, "answer_id": 47966422, "question_id": 47965967, "link": "https://stackoverflow.com/questions/47965967/subclassing-traits-in-rust/47966422#47966422", "title": "&quot;Subclassing&quot; traits in Rust", "body": "<p>Trait inheritance in Rust differs from OOP inheritance. Trait inheritance is just a way to specify requirements. <code>trait B: A</code> <em>does not imply</em> that if a type implements <code>B</code> it will automatically implement <code>A</code>;  it means that if a type implements <code>B</code> it <em>must implement</em> <code>A</code>. This also means that you will have to implement <code>A</code> <em>separately</em> if <code>B</code> is implemented.</p>\n\n<p>As an example,</p>\n\n<pre><code>trait A {}\ntrait B: A {}\n\nstruct S;\n\nimpl B for S {}\n\n// Commenting this line will result in a \"trait bound unsatisfied\" error\nimpl A for S {}\n\nfn main() {\n    let _x: &amp;B = &amp;S;\n}\n</code></pre>\n\n<p>However, if want a type to automatically implement <code>C</code> if it implements <code>A</code> and <code>B</code> (and thereby avoiding manually implementing <code>C</code> for that type), then you can use a generic <code>impl</code>:</p>\n\n<pre><code>impl&lt;T: A + B&gt; C for T {}\n</code></pre>\n\n<p>In your example, this translates to</p>\n\n<pre><code>impl&lt;T: Florida + ThingWithKeys&gt; FloridaWithKeys for T {}\n</code></pre>\n\n<p>Take a look at <a href=\"https://users.rust-lang.org/t/extending-traits/1802/8\" rel=\"noreferrer\">this forum thread</a> for more information.</p>\n\n<p>As an aside, you do not require the <code>ThingWithKeys</code> bound for <code>PianoWithKeys</code> as <code>Piano</code> already requires <code>ThingWithKeys</code>.</p>\n\n<p><strong>EDIT</strong> (in accordance with your comment and question edit):</p>\n\n<p>As stated before, <em>trait inheritance in Rust differs from OOP inheritance.</em> Even if <code>trait B: A</code>, you cannot coerce a trait object of <code>B</code> to a trait object of <code>A</code>. If you have no other choice but to pass the trait objects as is to the method, using generics works:</p>\n\n<pre><code>fn use_keys&lt;T: ThingWithKeys + ?Sized&gt;(thing_with_keys: &amp;T) {\n    println! (\"{}\", thing_with_keys.use_keys ());\n}\n</code></pre>\n\n<p>The generic method will work for type references (non trait objects) too.</p>\n\n<p>Also check: <a href=\"https://stackoverflow.com/questions/28632968/why-doesnt-rust-support-trait-object-upcasting\">Why doesn&#39;t Rust support trait object upcasting?</a></p>\n"}], "owner": {"reputation": 319, "user_id": 1167407, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/f24815b6b60543ac37af378a22031e4f?s=128&d=identicon&r=PG", "display_name": "Dan Wiebe", "link": "https://stackoverflow.com/users/1167407/dan-wiebe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 6036, "favorite_count": 2, "accepted_answer_id": 47966422, "answer_count": 1, "score": 9, "last_activity_date": 1541455884, "creation_date": 1514180186, "last_edit_date": 1514295684, "question_id": 47965967, "link": "https://stackoverflow.com/questions/47965967/subclassing-traits-in-rust", "title": "&quot;Subclassing&quot; traits in Rust", "body": "<p>I have a situation where several of my structs should implement multiple traits, but all of them implement at least one trait in common.  When I get hold of a mixed bag of these structs, I want to treat them all as being of the common trait: pass them as method parameters typed to that trait, store them in collections typed for that trait, etc.</p>\n\n<p>I haven't been able to figure out how to do it.  Here is some code where I try to do the way it was suggested here, but it fails to compile:</p>\n\n<pre><code>trait ThingWithKeys {\n    fn use_keys (&amp;self) -&gt; String;\n}\n\n//////\n\ntrait CorrectionsOfficer {\n    fn hitch_up_pants (&amp;self) -&gt; String;\n}\n\ntrait CorrectionsOfficerWithKeys: ThingWithKeys + CorrectionsOfficer {}\n\nstruct CorrectionsOfficerReal {}\n\nimpl ThingWithKeys for CorrectionsOfficerReal {\n    fn use_keys (&amp;self) -&gt; String {\n        String::from (\"Clank, clank\")\n    }\n}\n\nimpl CorrectionsOfficer for CorrectionsOfficerReal {\n    fn hitch_up_pants (&amp;self) -&gt; String {\n        String::from (\"Grunt\")\n    }\n}\n\nimpl &lt;T: ThingWithKeys + CorrectionsOfficer&gt; CorrectionsOfficerWithKeys for T {}\n\n//////\n\ntrait Piano {\n    fn close_lid (&amp;self) -&gt; String;\n}\n\ntrait PianoWithKeys: Piano + ThingWithKeys {}\n\nstruct PianoReal {}\n\nimpl ThingWithKeys for PianoReal {\n    fn use_keys (&amp;self) -&gt; String {\n        String::from (\"Tinkle, tinkle\")\n    }\n}\n\nimpl Piano for PianoReal {\n    fn close_lid (&amp;self) -&gt; String {\n        String::from (\"Bang!\")\n    }\n}\n\nimpl &lt;T: ThingWithKeys + Piano&gt; PianoWithKeys for T {}\n\n//////\n\ntrait Florida {\n    fn hurricane (&amp;self) -&gt; String;\n}\n\ntrait FloridaWithKeys: ThingWithKeys + Florida {}\n\nstruct FloridaReal {}\n\nimpl ThingWithKeys for FloridaReal {\n    fn use_keys (&amp;self) -&gt; String {\n        String::from (\"Another margarita, please\")\n    }\n}\n\nimpl Florida for FloridaReal {\n    fn hurricane (&amp;self) -&gt; String {\n        String::from (\"Ho-hum...\")\n    }\n}\n\nimpl &lt;T: ThingWithKeys + Florida&gt; FloridaWithKeys for T {}\n\n//////\n\nfn main() {\n    let corrections_officer_ref: &amp;CorrectionsOfficerWithKeys = &amp;CorrectionsOfficerReal {};\n    let piano_ref: &amp;PianoWithKeys = &amp;PianoReal {};\n    let florida_ref: &amp;FloridaWithKeys = &amp;FloridaReal {};\n\n    use_keys (corrections_officer_ref);\n    use_keys (piano_ref);\n    use_keys (florida_ref);\n}\n\nfn use_keys (thing_with_keys: &amp;ThingWithKeys) {\n    println! (\"{}\", thing_with_keys.use_keys ());\n}\n</code></pre>\n\n<p>Here are the compilation errors:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Compiling playground v0.0.1 (file:///playground)\nerror[E0308]: mismatched types\n  --&gt; src/main.rs:80:19\n   |\n80 |         use_keys (corrections_officer_ref);\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^ expected trait `ThingWithKeys`, found trait `CorrectionsOfficerWithKeys`\n   |\n   = note: expected type `&amp;ThingWithKeys`\n              found type `&amp;CorrectionsOfficerWithKeys`\n\nerror[E0308]: mismatched types\n  --&gt; src/main.rs:81:19\n   |\n81 |         use_keys (piano_ref);\n   |                   ^^^^^^^^^ expected trait `ThingWithKeys`, found trait `PianoWithKeys`\n   |\n   = note: expected type `&amp;ThingWithKeys`\n              found type `&amp;PianoWithKeys`\n\nerror[E0308]: mismatched types\n  --&gt; src/main.rs:82:19\n   |\n82 |         use_keys (florida_ref);\n   |                   ^^^^^^^^^^^ expected trait `ThingWithKeys`, found trait `FloridaWithKeys`\n   |\n   = note: expected type `&amp;ThingWithKeys`\n              found type `&amp;FloridaWithKeys`\n\nerror: aborting due to 3 previous errors\n</code></pre>\n\n<p>Essentially, it still can't find the ThingWithKeys implementation inside the XxxWithKeys implementations.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1514162066, "post_id": 47964764, "comment_id": 82899528, "body": "I don&#39;t know about that, but <code>quickcheck</code> seems to be the most direct equivalent."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 0, "last_activity_date": 1514159542, "creation_date": 1514159542, "answer_id": 47964764, "question_id": 47964624, "link": "https://stackoverflow.com/questions/47964624/does-rust-offer-a-package-to-perform-blackbox-testing-with-arbitrary-values/47964764#47964764", "title": "Does Rust offer a package to perform blackbox testing with arbitrary values?", "body": "<p>You want the <a href=\"https://crates.io/crates/quickcheck\" rel=\"nofollow noreferrer\"><code>quickcheck</code></a> crate.</p>\n"}], "owner": {"reputation": 1604, "user_id": 9131220, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/d949395713366e2abe1cafff2510149d?s=128&d=identicon&r=PG&f=1", "display_name": "tinker", "link": "https://stackoverflow.com/users/9131220/tinker"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 52, "favorite_count": 0, "accepted_answer_id": 47964764, "answer_count": 1, "score": 0, "last_activity_date": 1514161906, "creation_date": 1514157059, "last_edit_date": 1514161906, "question_id": 47964624, "link": "https://stackoverflow.com/questions/47964624/does-rust-offer-a-package-to-perform-blackbox-testing-with-arbitrary-values", "title": "Does Rust offer a package to perform blackbox testing with arbitrary values?", "body": "<p>There is a Go package called <a href=\"https://golang.org/pkg/testing/quick/\" rel=\"nofollow noreferrer\">quick</a> that lets you create a function that returns a boolean and call that function with arbitrary values for each of its parameters, running it for the specified number of iterations. </p>\n\n<p>As an example, it looks like this:</p>\n\n<pre class=\"lang-golang prettyprint-override\"><code>func TestOddMultipleOfThree(t *testing.T) {\n    f := func(x int) bool {\n        y := OddMultipleOfThree(x)\n        return y%2 == 1 &amp;&amp; y%3 == 0\n    }\n    if err := quick.Check(f, config); err != nil {\n        t.Error(err)\n    }\n}\n</code></pre>\n\n<p>Does Rust offer something similar? I have a few Rust functions that I want to test for many iterations using different arbitrary values each time, and not worry about giving the values myself or complicate stuff.</p>\n"}, {"tags": ["reference", "rust", "closures", "ownership-semantics"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1514129289, "post_id": 47961805, "comment_id": 82892907, "body": "Keep reading. The entire purpose of the code you are looking at is to present <i>many errors that you might see anyway</i>. The code you have pasted doesn&#39;t even compile."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1514129665, "creation_date": 1514129665, "answer_id": 47961912, "question_id": 47961805, "link": "https://stackoverflow.com/questions/47961805/why-doesnt-optionmap-take-ownership-in-a-linked-list-implementation-of-iterat/47961912#47961912", "title": "Why doesn&#39;t Option::map take ownership in a linked list implementation of Iterator::next?", "body": "<blockquote>\n  <p>Wouldn't that \"steal\" the value? </p>\n</blockquote>\n\n<p>It would, except that <code>Option&lt;&amp;T&gt;</code> is copyable. Thus <code>self</code> keeps one copy and <code>map</code> gets another.</p>\n\n<blockquote>\n  <p>need complete access to <code>self</code></p>\n</blockquote>\n\n<p>Since the value is copied into the <code>map</code>, there's no connection to the one in <code>self</code>. Thus the value in <code>self</code> can be replaced inside the closure.</p>\n"}], "owner": {"reputation": 269, "user_id": 1084637, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/745239e23061d746727436ec06e5dd2e?s=128&d=identicon&r=PG", "display_name": "asp5", "link": "https://stackoverflow.com/users/1084637/asp5"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 46, "favorite_count": 1, "answer_count": 1, "score": 0, "last_activity_date": 1514129745, "creation_date": 1514128884, "last_edit_date": 1514129745, "question_id": 47961805, "link": "https://stackoverflow.com/questions/47961805/why-doesnt-optionmap-take-ownership-in-a-linked-list-implementation-of-iterat", "title": "Why doesn&#39;t Option::map take ownership in a linked list implementation of Iterator::next?", "body": "<p>I'm trying to follow along <a href=\"http://cglab.ca/~abeinges/blah/too-many-lists/book/README.html\" rel=\"nofollow noreferrer\">Rust With Entirely Too Many Linked Lists</a>. </p>\n\n<pre><code>type Link&lt;T&gt; = Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt;;\n\npub struct List&lt;T&gt; {\n    head: Link&lt;T&gt;,\n}\n\nstruct Node&lt;T&gt; {\n    elem: T,\n    next: Link&lt;T&gt;,\n}\n\npub struct Iter&lt;T&gt; {\n    next: Option&lt;&amp;Node&lt;T&gt;&gt;,\n}\n</code></pre>\n\n<p>When <a href=\"http://cglab.ca/~abeinges/blah/too-many-lists/book/second-iter.html\" rel=\"nofollow noreferrer\">implementing a <code>iter</code></a>, </p>\n\n<pre><code>impl&lt;'a, T&gt; Iterator for Iter&lt;'a, T&gt; {\n    type Item = &amp;'a T;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        self.next.map(|node| {\n            self.next = node.next.as_ref().map(|node| &amp;**node);\n            &amp;node.elem\n        })\n    }\n}\n</code></pre>\n\n<p>In the <code>next</code> method, <code>map</code> takes an <code>Option</code> by value so it would need to\ntake <code>self.next</code> which happens to be of type <code>Option&lt;&amp;Node&lt;T&gt;&gt;</code> by value. Wouldn't that \"steal\" the value? </p>\n\n<p>Since the closure is a mutating one, shouldn't it need complete access to <code>self</code> and this code shouldn't compile? Am I missing something here? </p>\n"}, {"tags": ["functional-programming", "rust", "fold"], "answers": [{"tags": [], "owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "is_accepted": true, "score": 2, "last_activity_date": 1514119419, "creation_date": 1514119419, "answer_id": 47960695, "question_id": 47960371, "link": "https://stackoverflow.com/questions/47960371/what-is-the-idiomatic-and-functional-way-to-iterate-over-successive-fold-results/47960695#47960695", "title": "What is the idiomatic and functional way to iterate over successive fold results?", "body": "<p>I'd say the closest abstraction is <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.scan\" rel=\"nofollow noreferrer\"><code>Iterator::scan</code></a>.  It is a little bit more powerful, as it has an internal mutable state (i.e. can yield a different value for the resulting iterator) and can abort early.</p>\n\n<p>You could use it like this to build an iterator extension trait:</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=a625ebc21bfacb3ea0ae68729d925c09&amp;version=stable\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<pre><code>pub trait FoldListExt: Iterator {\n    fn fold_list&lt;'a, St: 'a, F: 'a&gt;(self, initial_state: St, f: F) -&gt; Box&lt;Iterator&lt;Item = St&gt; + 'a&gt;\n    where\n        St: Clone,\n        F: FnMut(St, Self::Item) -&gt; St,\n        Self: 'a;\n}\n\nimpl&lt;I: Iterator&gt; FoldListExt for I {\n    fn fold_list&lt;'a, St: 'a, F: 'a&gt;(\n        self,\n        initial_state: St,\n        mut f: F,\n    ) -&gt; Box&lt;Iterator&lt;Item = St&gt; + 'a&gt;\n    where\n        St: Clone,\n        F: FnMut(St, Self::Item) -&gt; St,\n        Self: 'a,\n    {\n        Box::new(self.scan(Some(initial_state), move |state, item| {\n            let old_state = state.take().unwrap();\n            *state = Some(f(old_state.clone(), item));\n            Some(old_state)\n        }))\n    }\n}\n\npub fn main() {\n    println!(\n        \"{:?}\",\n        (0..16)\n            .into_iter()\n            .fold_list(0, |a, b| a + b)\n            .collect::&lt;Vec&lt;_&gt;&gt;()\n    );\n}\n</code></pre>\n\n<p>I used <code>Option&lt;St&gt;</code> for the inner mutable state to avoid another <code>clone()</code> call.</p>\n\n<p>You could use this instead:</p>\n\n<pre><code>Box::new(self.scan(initial_state, move |state, item| {\n    let old_state = state.clone();\n    *state = f(old_state.clone(), item);\n    Some(old_state)\n}))\n</code></pre>\n"}], "owner": {"reputation": 501, "user_id": 5235351, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f099e6f496a9eeaa466f957a6670d083?s=128&d=identicon&r=PG", "display_name": "Reiner Martin", "link": "https://stackoverflow.com/users/5235351/reiner-martin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 162, "favorite_count": 0, "accepted_answer_id": 47960695, "answer_count": 1, "score": 0, "last_activity_date": 1514126809, "creation_date": 1514116558, "last_edit_date": 1514126809, "question_id": 47960371, "link": "https://stackoverflow.com/questions/47960371/what-is-the-idiomatic-and-functional-way-to-iterate-over-successive-fold-results", "title": "What is the idiomatic and functional way to iterate over successive fold results?", "body": "<p>I have a sequence (list, iterator) <code>a0, a1, a2, ...</code>, and I use a function <code>f</code> to fold. I would like to have a generator which gives me </p>\n\n<pre><code>a0, f(a0, a1), f(f(a0, a1), a2), ...\n</code></pre>\n\n<p>This is similar to <code>FoldList</code> in Mathematica. Is there a <code>fold_list</code> function available? I couldn't find any.</p>\n"}, {"tags": ["pointers", "rust"], "answers": [{"tags": [], "owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "is_accepted": true, "score": 1, "last_activity_date": 1514127862, "last_edit_date": 1514127862, "creation_date": 1514101199, "answer_id": 47958905, "question_id": 47958132, "link": "https://stackoverflow.com/questions/47958132/what-is-the-difference-between-comparing-for-equality-with-variations-of-and/47958905#47958905", "title": "What is the difference between comparing for equality with variations of &amp; and * on the arguments?", "body": "<p>The relevant difference is in the behavior of the equality operator. The semantics of <code>x == y</code> and <code>&amp;x == &amp;y</code> are the same: they compare <code>x</code> and <code>y</code>.</p>\n\n<p><code>&amp;x == &amp;y</code> desugars to <a href=\"https://doc.rust-lang.org/std/cmp/trait.PartialEq.html#tymethod.eq\" rel=\"nofollow noreferrer\"><code>PartialEq::eq(&amp;&amp;x, &amp;&amp;y)</code></a>. <code>PartialEq</code> in turn has the blanket implementation</p>\n\n<pre><code>impl&lt;'a, 'b, A, B&gt; PartialEq&lt;&amp;'b B&gt; for &amp;'a A\nwhere\n    A: PartialEq&lt;B&gt; + ?Sized,\n    B: ?Sized,\n</code></pre>\n\n<p>It reads \"If values of types <code>A</code> and <code>B</code> can be compared for equality (<code>where A: PartialEq&lt;B&gt;</code>), then we provide an implementation for comparison of values of types <code>&amp;A</code> and <code>&amp;B</code> (<code>impl PartialEq&lt;&amp;B&gt; for &amp;A</code>).\" I'm omitting the lifetimes for brevity.</p>\n\n<p>The implementation is <a href=\"https://github.com/rust-lang/rust/blob/51b47dc4a1af3260738aa7c5d4e31e8d77c0c0b6/src/libcore/cmp.rs#L912\" rel=\"nofollow noreferrer\">straightforward</a>, it compares the dereferenced values.</p>\n\n<pre><code>fn eq(&amp;self, other: &amp; &amp;'b B) -&gt; bool { \n    PartialEq::eq(*self, *other) \n}\n</code></pre>\n\n<p>thus <code>PartialEq::eq(&amp;&amp;x, &amp;&amp;y)</code> calls <code>PartialEq::eq(*&amp;&amp;x, *&amp;&amp;y)</code>, which is the same as <code>PartialEq::eq(&amp;x, &amp;y)</code> or <code>x == y</code>.</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user8370684"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 37, "favorite_count": 0, "accepted_answer_id": 47958905, "answer_count": 1, "score": 0, "last_activity_date": 1514128516, "creation_date": 1514090742, "last_edit_date": 1514128516, "question_id": 47958132, "link": "https://stackoverflow.com/questions/47958132/what-is-the-difference-between-comparing-for-equality-with-variations-of-and", "title": "What is the difference between comparing for equality with variations of &amp; and * on the arguments?", "body": "<p>I wrote the following function:</p>\n\n<pre><code>fn test() {\n    let xs = [b\"AAA\", b\"BBB\"];\n    let buf = b\"AAA\";\n    println!(\"{:?}\", xs.iter().find(|&amp;x| &amp;x == &amp;&amp;buf));\n}\n</code></pre>\n\n<p>This works, but I'm confused because these also work:</p>\n\n<ul>\n<li><code>println!(\"{:?}\", xs.iter().find(|&amp;x| x == &amp;buf));</code></li>\n<li><code>println!(\"{:?}\", xs.iter().find(|&amp;x| *x == buf));</code></li>\n</ul>\n\n<p>What is the difference between these variations? <code>*</code> and <code>&amp;</code> certainly seem to behave very differently from the same in C. What nuance of these operators do I need to understand to understand the above?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 1, "creation_date": 1514114128, "post_id": 47956653, "comment_id": 82889307, "body": "You didn&#39;t handle/log/unwrap any of the <code>Result</code>s, which probably would have shown the problem. Don&#39;t ignore the compiler warnings!"}, {"owner": {"reputation": 1731, "user_id": 2227895, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/97b12755843e6d207524d92bf1959c89?s=128&d=identicon&r=PG", "display_name": "German Lashevich", "link": "https://stackoverflow.com/users/2227895/german-lashevich"}, "reply_to_user": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1514114413, "post_id": 47956653, "comment_id": 82889366, "body": "Thanks for the notice @Stefan! You&#39;re right, in real program we should respect compiler&#39;s warnings. But this piece of code was needed only to show the problem clearly, without distracting details."}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 1, "creation_date": 1514114990, "post_id": 47956653, "comment_id": 82889494, "body": "If I unwrap the <code>read_to_string</code> result I get a &quot;Bad file descriptor&quot; error - which tells me it just doesn&#39;t want to read from it, no matter the <code>flush</code>, <code>sync_all</code> and <code>seek</code> calls. Not unwrapping the errors and then wondering about the result is &quot;not showing any research effort&quot; in my eyes. So in a real program you should <i>handle</i> the errors, in examples you should at least unwrap the <code>Result</code>s."}], "answers": [{"tags": [], "owner": {"reputation": 1731, "user_id": 2227895, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/97b12755843e6d207524d92bf1959c89?s=128&d=identicon&r=PG", "display_name": "German Lashevich", "link": "https://stackoverflow.com/users/2227895/german-lashevich"}, "is_accepted": true, "score": 6, "last_activity_date": 1524752991, "last_edit_date": 1524752991, "creation_date": 1514069305, "answer_id": 47956654, "question_id": 47956653, "link": "https://stackoverflow.com/questions/47956653/is-it-possible-to-use-the-same-file-for-reading-and-writing/47956654#47956654", "title": "Is it possible to use the same File for reading and writing?", "body": "<p>The problem was with <code>File::create</code> \u2014 it <a href=\"https://doc.rust-lang.org/std/fs/struct.File.html#method.create\" rel=\"nofollow noreferrer\">opens a file in write-only mode</a>. The fix is to use <a href=\"https://doc.rust-lang.org/std/fs/struct.OpenOptions.html\" rel=\"nofollow noreferrer\"><code>std::fs::OpenOptions</code></a>:</p>\n\n<pre><code>let mut f = std::fs::OpenOptions::new()\n    .create(true)\n    .write(true)\n    .read(true)\n    .open(FILE_PATH)\n    .unwrap();\n</code></pre>\n\n<p>Don't forget to reset the reading position with <code>seek</code>.</p>\n"}], "owner": {"reputation": 1731, "user_id": 2227895, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/97b12755843e6d207524d92bf1959c89?s=128&d=identicon&r=PG", "display_name": "German Lashevich", "link": "https://stackoverflow.com/users/2227895/german-lashevich"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1085, "favorite_count": 0, "accepted_answer_id": 47956654, "answer_count": 1, "score": 4, "last_activity_date": 1524752991, "creation_date": 1514069305, "last_edit_date": 1524752861, "question_id": 47956653, "link": "https://stackoverflow.com/questions/47956653/is-it-possible-to-use-the-same-file-for-reading-and-writing", "title": "Is it possible to use the same File for reading and writing?", "body": "<p>I'm trying to use the same <code>std::fs::File</code> object for writing and reading, but reading returns an empty string.</p>\n\n<p>I tried to <code>flush</code>, <code>sync_all</code> and <code>seek</code>, but nothing helped. With a new <code>File</code> object I can read the file easily.</p>\n\n<pre><code>use std::io::{Read, Seek, Write};\n\nconst FILE_PATH: &amp;str = \"test.txt\";\n\nfn main() {\n    // Create file\n    let mut f = std::fs::File::create(FILE_PATH).unwrap();\n    f.write_all(\"foo bar\".as_bytes());\n    f.seek(std::io::SeekFrom::Start(0));\n\n    // Read from the same descriptor\n    let mut content = String::new();\n    f.read_to_string(&amp;mut content);\n    println!(\"{:?}\", content); // -&gt; \"\"\n\n    // Read from the other descriptor\n    let mut f = std::fs::File::open(FILE_PATH).unwrap();\n    let mut content = String::new();\n    f.read_to_string(&amp;mut content);\n    println!(\"{:?}\", content); // -&gt; \"foo bar\"\n}\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 36166, "user_id": 393701, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/250889c646cd2a916920d9252f7c6f42?s=128&d=identicon&r=PG", "display_name": "SirDarius", "link": "https://stackoverflow.com/users/393701/sirdarius"}, "is_accepted": true, "score": 1, "last_activity_date": 1514039050, "creation_date": 1514039050, "answer_id": 47953266, "question_id": 47952841, "link": "https://stackoverflow.com/questions/47952841/generic-struct-field-with-trait-bounds/47953266#47953266", "title": "Generic struct field with trait bounds", "body": "<p>The <code>group_test</code> function is not generic, it is supposed to return a <code>Group&lt;T&gt;</code> but instead you return a <code>Group&lt;Person&gt;</code>.</p>\n\n<p>This compiles:</p>\n\n<pre><code>fn group_test() -&gt; Group&lt;Person&gt; {\n    Group {\n        admin: Person::new(),\n    }\n}\n</code></pre>\n\n<p>This would also compile:</p>\n\n<pre><code>fn group_test&lt;T: Printable&gt;(printable: T) -&gt; Group&lt;T&gt; {\n    Group {\n        admin: printable,\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 1731, "user_id": 2227895, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/97b12755843e6d207524d92bf1959c89?s=128&d=identicon&r=PG", "display_name": "German Lashevich", "link": "https://stackoverflow.com/users/2227895/german-lashevich"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1970, "favorite_count": 0, "closed_date": 1514039684, "accepted_answer_id": 47953266, "answer_count": 1, "score": 2, "last_activity_date": 1514039721, "creation_date": 1514035209, "last_edit_date": 1514039721, "question_id": 47952841, "link": "https://stackoverflow.com/questions/47952841/generic-struct-field-with-trait-bounds", "closed_reason": "Duplicate", "title": "Generic struct field with trait bounds", "body": "<p>I'm trying to implement a structure with a field of generic type which has trait bounds. I want to have a value of <code>Group.admin</code> to be <code>Printable</code>. It doesn't matter what exactly type it is.</p>\n\n<pre><code>struct Group&lt;T: Printable&gt; {\n    admin: T,\n}\n\nstruct Person {\n    name: String,\n}\n\nimpl Person {\n    fn new() -&gt; Person {\n        Person {\n            name: String::from(\"Bob\"),\n        }\n    }\n}\n\ntrait Printable {\n    fn print(&amp;self);\n}\n\nimpl Printable for Person {\n    fn print(&amp;self) {\n        println!(\"{}\", self.name);\n    }\n}\n\nfn group_test&lt;T: Printable&gt;() -&gt; Group&lt;T&gt; {\n    Group {\n        admin: Person::new(),\n    }\n}\n</code></pre>\n\n<p>But the compiler doesn't allow this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/lib.rs:27:16\n   |\n27 |         admin: Person::new(),\n   |                ^^^^^^^^^^^^^ expected type parameter, found struct `Person`\n   |\n   = note: expected type `T`\n              found type `Person`\n</code></pre>\n\n<p>I'm not sure what's wrong here. Maybe I have to cast value of <code>Person::new()</code> to <code>&lt;T: Printable&gt;</code> somehow?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1514042556, "post_id": 47953527, "comment_id": 82876539, "body": "I think it&#39;s exactly what I want."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1514123988, "post_id": 47953527, "comment_id": 82891508, "body": "Seems a little complicated. Why wouldn&#39;t you just have <code>struct Ptr(Data)</code> and <code>struct Fd(Data)</code> and put any shared behavior in a trait? I&#39;m uncertain how this is used, so maybe I&#39;m missing something."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1514124623, "post_id": 47953527, "comment_id": 82891669, "body": "@trentcl I don&#39;t see any reason there can&#39;t be multiple answers :-)"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1514057538, "last_edit_date": 1514057538, "creation_date": 1514041360, "answer_id": 47953527, "question_id": 47949601, "link": "https://stackoverflow.com/questions/47949601/how-to-force-a-union-to-behave-as-if-there-is-only-one-type/47953527#47953527", "title": "How to force a union to behave as if there is only one type?", "body": "<p>You can wrap the union in another type. That type will have a generic parameter of a specific trait. You can then implement specific sets of methods based on the concrete implementation.</p>\n\n<p>In this case, we wrap the union <code>Data</code> in the type <code>Event</code>. <code>Event</code> has a generic type parameter for any type that implements <code>EventMode</code>. We implement specific methods for the concrete types <code>Event&lt;Fd&gt;</code> and <code>Event&lt;Ptr&gt;</code>:</p>\n\n<pre><code>extern crate libc;\nuse std::os::unix::io::RawFd;\nuse std::marker::PhantomData;\n\n#[derive(Copy, Clone)]\npub union Data {\n    pub ptr: *mut libc::c_void,\n    pub fd: RawFd,\n}\n\ntrait EventMode {}\n\n#[derive(Debug, Copy, Clone)]\nstruct Fd {\n    _marker: PhantomData&lt;RawFd&gt;,\n}\nimpl Fd {\n    fn new() -&gt; Self {\n        Fd {\n            _marker: PhantomData,\n        }\n    }\n}\nimpl EventMode for Fd {}\n\n#[derive(Debug, Copy, Clone)]\nstruct Ptr&lt;T&gt; {\n    _marker: PhantomData&lt;Box&lt;T&gt;&gt;,\n}\nimpl&lt;T&gt; Ptr&lt;T&gt; {\n    fn new() -&gt; Self {\n        Ptr {\n            _marker: PhantomData,\n        }\n    }\n}\nimpl&lt;T&gt; EventMode for Ptr&lt;T&gt; {}\n\n#[derive(Copy, Clone)]\npub struct Event&lt;M&gt; {\n    pub data: Data,\n    mode: M,\n}\n\nimpl Event&lt;Fd&gt; {\n    fn new_fd(fd: RawFd) -&gt; Self {\n        Event {\n            data: Data { fd },\n            mode: Fd::new(),\n        }\n    }\n\n    fn fd(&amp;self) -&gt; RawFd {\n        unsafe { self.data.fd }\n    }\n}\n\nimpl&lt;T&gt; Event&lt;Ptr&lt;T&gt;&gt; {\n    fn new_ptr(t: T) -&gt; Self {\n    let ptr = Box::into_raw(Box::new(t)) as *mut _;\n        Event {\n            data: Data {\n                ptr: ptr,\n            },\n            mode: Ptr::new(),\n        }\n    }\n\n    fn ptr(&amp;self) -&gt; &amp;T {\n        unsafe { &amp;*(self.data.ptr as *const T) }\n    }\n}\n\nfn main() {\n    let event = Event::new_ptr(42);\n    println!(\"{}\", event.ptr());\n    // event.fd();\n}\n</code></pre>\n\n<p>Attempting to call <code>event.fd()</code> gives the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `fd` found for type `Event&lt;Ptr&lt;{integer}&gt;&gt;` in the current scope\n  --&gt; src/main.rs:76:11\n   |\n76 |     event.fd();\n   |           ^^\n</code></pre>\n\n<p>As a bonus, we can use the same <code>PhantomData</code> to encode what the concrete type of the pointer we have stashed in the union is and thus avoid mismatching it when we go to retrieve it.</p>\n\n<p>Strictly speaking, the trait isn't <em>needed</em>, but I think it provides some nice built-in documentation.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/47624992/155423\">Can a trait guarantee certain type properties such as a vector is non-empty?</a></li>\n</ul>\n"}], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 386, "favorite_count": 0, "accepted_answer_id": 47953527, "answer_count": 1, "score": 3, "last_activity_date": 1514099919, "creation_date": 1514001267, "last_edit_date": 1514099919, "question_id": 47949601, "link": "https://stackoverflow.com/questions/47949601/how-to-force-a-union-to-behave-as-if-there-is-only-one-type", "title": "How to force a union to behave as if there is only one type?", "body": "<p>I'm trying to write a wrapper for the epoll Linux API. I forked <a href=\"https://github.com/nathansizemore/epoll\" rel=\"nofollow noreferrer\">this</a> repository, but this crate doesn't use the <code>union</code> type used by the <code>epoll</code> API. I decided to use Rust's C union feature to create a complete wrapper where user will not need to use unsafe code.</p>\n\n<p>This union causes me some trouble. </p>\n\n<p>How could I lock the used type of the union to one type at compile time?  epoll's union can't be differentiated; you can only use one member of the union by epoll fd. Well, you can but that will not be safe.</p>\n\n<p>The user could use an enum type as the <code>ptr</code> field of the union to use multiple types but this will be safe because it will use Rust's <code>enum</code>.</p>\n\n<p>I searched with \"generic\" or \"macro\" but I can't find any way that will fit my will. </p>\n\n<pre><code>extern crate libc;\n\n#[derive(Clone, Copy)]\npub union Data {\n    pub ptr: *mut libc::c_void,\n    pub fd: std::os::unix::io::RawFd,\n    pub u32: libc::uint32_t,\n    pub u64: libc::uint64_t,\n}\n\n#[repr(C)]\n#[repr(packed)]\n#[derive(Clone, Copy)]\npub struct Event {\n    pub data: Data,\n}\n\nimpl Event {\n    fn new(data: Data) -&gt; Event {\n        Event { data: data }\n    }\n}\n\nfn main() {\n    let event = Event::new(Data {\n        ptr: Box::into_raw(Box::new(42)) as *mut libc::c_void,\n    });\n    unsafe { Box::from_raw(event.data.ptr) };\n}\n</code></pre>\n\n<p>I would like something like that:</p>\n\n<pre><code>fn main() {\n    let event = event!(ptr, Box::new(42));\n    let _ = event.ptr();\n    let _ = event.fd(); // fails to compile; we can only use ptr\n}\n</code></pre>\n\n<p>My fork can be found <a href=\"https://github.com/Stargateur/epoll/tree/3c70ab3314246643822373986948135e54f12ef0\" rel=\"nofollow noreferrer\">here</a>. I don't know what macro, generic or other could be the suitable solution. You can look at my code, especially <a href=\"https://github.com/Stargateur/epoll/blob/3c70ab3314246643822373986948135e54f12ef0/src/lib.rs\" rel=\"nofollow noreferrer\">the integration test</a>, there is a lot of unsafe code, I want to remove as much as possible of unsafe code from user side. Currently it looks very ugly.</p>\n"}, {"tags": ["rust", "iron"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1513985072, "post_id": 47948348, "comment_id": 82866888, "body": "What would you expect the struct to contain if the address field is not present? Maybe <code>Option&lt;String&gt;</code> is the type you want. (I am not familiar with Iron or body-parser.)"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1513985877, "post_id": 47948348, "comment_id": 82867031, "body": "I don&#39;t know about iron but with serdejson, we use <code>Option&lt;T&gt;</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1513996298, "post_id": 47948348, "comment_id": 82868398, "body": "<a href=\"https://docs.rs/bodyparser/0.8.0/bodyparser/struct.Struct.html\" rel=\"nofollow noreferrer\"><code>bodyparser::Struct</code></a> uses <a href=\"https://docs.rs/serde/1.0.24/serde/trait.Deserialize.html\" rel=\"nofollow noreferrer\"><code>serde::Deserialize</code></a>. serde is the <i>de facto</i> serialization library in Rust and will be much more fruitful as a search term. TL;DR: <code>#[serde(default)] address: Option&lt;String&gt;</code>"}], "owner": {"reputation": 468, "user_id": 1117026, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/1b833426c9221e4b886def0ddd170d05?s=128&d=identicon&r=PG", "display_name": "elgris", "link": "https://stackoverflow.com/users/1117026/elgris"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 315, "favorite_count": 0, "closed_date": 1513996110, "answer_count": 0, "score": 0, "last_activity_date": 1513996337, "creation_date": 1513984225, "last_edit_date": 1513996337, "question_id": 47948348, "link": "https://stackoverflow.com/questions/47948348/can-i-parse-json-with-empty-fields-with-irons-bodyparser", "closed_reason": "Duplicate", "title": "Can I parse JSON with empty fields with Iron&#39;s bodyparser?", "body": "<p>I'm writing a simple REST API using Iron. There is an endpoint that parses incoming JSON into a structure. Not all fields of the structure are mandatory, some can be omitted. I'm trying to parse JSON with the bodyparser crate like this</p>\n\n<pre><code>let body = r.get::&lt;bodyparser::Struct&lt;MyFancyDataRequest&gt;&gt;();\n</code></pre>\n\n<p>The structure looks like this:</p>\n\n<pre><code>#[derive(Serialize, Deserialize, Clone)]\nstruct MyFancyDataRequest {\n    name: String,\n    address: String\n}\n</code></pre>\n\n<p>The incoming JSON contains only \"name\"</p>\n\n<pre><code>{\"name\":\"John Doe\"}\n</code></pre>\n\n<p>I'm getting the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Can't parse body to the struct (missing field `address`)\n</code></pre>\n\n<p>Is it possible to make the parser ignore the missing fields? For instance, in Go I could mark optional struct fields with the <code>omitempty</code> tag.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1513980687, "post_id": 47947611, "comment_id": 82865798, "body": "<i>use a function that returns a <code>Result</code></i> \u2014 yes, so just make one (<a href=\"https://play.rust-lang.org/?gist=7dc7332ec71906d7e84051e24d1c5dea&amp;version=stable\" rel=\"nofollow noreferrer\">example</a>). <i>I believe <code>main()</code> does not</i> \u2014 <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1937-ques-in-main.md\" rel=\"nofollow noreferrer\">not for long</a>"}], "owner": {"reputation": 6552, "user_id": 183133, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/318e718ec9296ec9ffab5824c5c4f668?s=128&d=identicon&r=PG", "display_name": "Rohan Prabhu", "link": "https://stackoverflow.com/users/183133/rohan-prabhu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 108, "favorite_count": 0, "closed_date": 1513979605, "answer_count": 0, "score": 2, "last_activity_date": 1513982799, "creation_date": 1513978212, "last_edit_date": 1513982799, "question_id": 47947611, "link": "https://stackoverflow.com/questions/47947611/what-is-the-idiomatic-rust-way-to-deal-with-a-lot-of-if-let-else-code", "closed_reason": "Duplicate", "title": "What is the idiomatic Rust way to deal with a lot of if-let-else code?", "body": "<p>I am trying to find out the current home directory of the user (toy project, learning Rust) and this is the code I am at currently:</p>\n\n<pre><code>let mut home_dir = if let Some(path) = env::home_dir() {\n    if let Some(path_str) = path.to_str() {\n        path_str.to_owned()\n    } else {\n        panic!(\"Found a home directory, but the encoding of the filename was invalid\")\n    }\n} else {\n    panic!(\"Could not find home directory for current user, specify prefix manually\");\n};\n</code></pre>\n\n<p>I come from a heavily managed-language background so maybe that is why this appears to me as a bit of an anti-pattern, but I am trying to understand if I there is a better way to do this. </p>\n\n<p>In Kotlin I would deal with this situation using:</p>\n\n<pre><code>val homeDir = env.getHomeDir()?.toString() ?: throw RuntimeException(...)\n</code></pre>\n\n<p>The way the <code>?</code> macro works in Rust requires me to use a function that returns a <code>Result</code> which I believe <code>main()</code> does not, and it doesn't necessarily make sense anyways. Any pointers?</p>\n"}, {"tags": ["arrays", "struct", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1513971015, "post_id": 47946335, "comment_id": 82862853, "body": "<i>The reason I want to do this is mainly performance</i> \u2014 please benchmark your code before resorting to unsafe. <i>I can guarantee that whenever I need to access a variable of this array the values will be defined</i> \u2014 your demonstration code doesn&#39;t even do this correctly; you read <code>a[3].a</code> before defining it."}], "owner": {"reputation": 727, "user_id": 6860744, "user_type": "registered", "accept_rate": 79, "profile_image": "https://lh5.googleusercontent.com/-3_2Ewze_gI8/AAAAAAAAAAI/AAAAAAAAACQ/fz_BqGtzSd4/photo.jpg?sz=128", "display_name": "Darius Duesentrieb", "link": "https://stackoverflow.com/users/6860744/darius-duesentrieb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 30, "favorite_count": 0, "closed_date": 1513970373, "answer_count": 0, "score": 1, "last_activity_date": 1513970933, "creation_date": 1513970209, "last_edit_date": 1513970933, "question_id": 47946335, "link": "https://stackoverflow.com/questions/47946335/how-to-initialize-an-array-of-structs-without-writing-any-data-into-it", "closed_reason": "Duplicate", "title": "How to initialize an array of structs without writing any data into it?", "body": "<p>Can I  initialize an array of structs so that I can use it but without initializing the data at the allocated memory with any default or custom initializer? The reason I want to do this is mainly performance. </p>\n\n<p>I don't care if the memory is just garbage, I can guarantee that whenever I need to access a variable of this array the values will be defined.</p>\n\n<p>Maybe I can split this question into two smaller ones:</p>\n\n<ol>\n<li>How can I initialize a struct instance without changing the data at the allocated memory?</li>\n<li>How can I initialize an array without changing the data at the allocated memory?</li>\n</ol>\n\n<p>The code that I would like to write:</p>\n\n<pre><code>struct AbcStruct {\n    pub a: i32,\n    pub b: i32,\n    pub c: i32,\n}\n\nfn main() {\n    let mut a: [AbcStruct; 128];\n    println!(\"{}\", a[3].a);\n}\n</code></pre>\n\n<p>In C++ I would do this:</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>struct AbcStruct\n{\n  int a;\n  int b;\n  int c;\n};\n\nint main()\n{\n  AbcStruct a[128];\n  std::cout &lt;&lt; a[0].b &lt;&lt; std::endl;\n  return 0;\n}\n</code></pre>\n"}, {"tags": ["rust", "rustup"], "comments": [{"owner": {"reputation": 1681, "user_id": 1394731, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/18e7f1db4c9cd9109baef63567e26f51?s=128&d=identicon&r=PG", "display_name": "theicfire", "link": "https://stackoverflow.com/users/1394731/theicfire"}, "edited": false, "score": 0, "creation_date": 1513963943, "post_id": 47945066, "comment_id": 82860245, "body": "I think the first part of your question isn&#39;t relevant -- right now you&#39;re just having trouble with <code>rustfmt</code> from a clean rustup install. I am too.."}], "answers": [{"comments": [{"owner": {"reputation": 1681, "user_id": 1394731, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/18e7f1db4c9cd9109baef63567e26f51?s=128&d=identicon&r=PG", "display_name": "theicfire", "link": "https://stackoverflow.com/users/1394731/theicfire"}, "edited": false, "score": 1, "creation_date": 1513965410, "post_id": 47945288, "comment_id": 82860704, "body": "To add <code>rustfmt-preview</code> with that toolchain, you&#39;ll also need to install the toolchain: <code>rustup install nightly-2017-12-20-x86_64-apple-darwin</code>"}], "tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 22, "last_activity_date": 1591721281, "last_edit_date": 1591721281, "creation_date": 1513964031, "answer_id": 47945288, "question_id": 47945066, "link": "https://stackoverflow.com/questions/47945066/error-toolchain-stable-x86-64-apple-darwin-does-not-have-the-binary-rustfmt/47945288#47945288", "title": "error: toolchain &#39;stable-x86_64-apple-darwin&#39; does not have the binary `rustfmt`", "body": "<p>The most standard and reliable way to have <code>rustfmt</code> in your system is to ensure that the <strong><code>rustfmt</code> component is installed</strong> in your Rustup toolchain.</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>rustup component add rustfmt\n</code></pre>\n\n<p>Or for a specific toolchain:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>rustup component add rustfmt --toolchain nightly-2020-06-09\n</code></pre>\n\n<p>There is a possibility that the tests and builds in nightly toolchains fail, which means that those are not as likely to always have this component. The latest <code>stable</code> and <code>beta</code> toolchains will usually have it in accordance to the <a href=\"https://forge.rust-lang.org/#no-tools-breakage-week\" rel=\"nofollow noreferrer\">No Tool Breakage Week</a> policy.</p>\n\n<p>In order to let Rustup  manage <code>rustfmt</code>, see the following steps:</p>\n\n<ol>\n<li>Once you update Rustup to the latest version, you may receive the message <code>warning: tool rustfmt is already installed</code>. Remove the binaries from Cargo's binary folder, as suggested. <code>cargo uninstall rustfmt</code> (or <code>rustfmt-nightly</code> if you installed that) works well.</li>\n<li>Run <code>rustup update</code> to let it fill in the deleted binaries with its own, managed <code>rustfmt</code> and <code>cargo-fmt</code>.</li>\n<li>Ensure that the toolchain that you wish to work with is installed (e.g. <code>stable</code>)</li>\n<li>Run the command above too ensure that the <code>rustfmt</code> component is installed for that toolchain.</li>\n</ol>\n\n<p>With that done, calling <code>rustfmt</code> will work as intended:</p>\n\n<pre><code>$ rustup run stable rustfmt --version\nrustfmt 1.4.12-stable (a828ffea 2020-03-11)\n</code></pre>\n\n<p>Or via the Cargo subcommand:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>$ cargo fmt --version\nrustfmt 1.4.12-stable (a828ffea 2020-03-11)\n</code></pre>\n\n<hr>\n\n<p>In the early days, <code>rustfmt</code> managed by Rustup could have been a bit confusing, because Rustup did not always have <code>rustfmt</code>, and would still too often emerge as a preview component which had to be installed under the name <code>rustfmt-preview</code>. There are a few relevant issues and PRs on the subject (<a href=\"https://github.com/rust-lang-nursery/rustup.rs/issues/1305\" rel=\"nofollow noreferrer\">#1305</a> and <a href=\"https://github.com/rust-lang-nursery/rustup.rs/pull/1310\" rel=\"nofollow noreferrer\">#1310</a>).</p>\n"}, {"comments": [{"owner": {"reputation": 2855, "user_id": 11800, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d37a63484d9878cf6c07dcc08adda9e2?s=128&d=identicon&r=PG", "display_name": "xdg", "link": "https://stackoverflow.com/users/11800/xdg"}, "edited": false, "score": 4, "creation_date": 1532025286, "post_id": 50352205, "comment_id": 89830352, "body": "Thanks! This was what I needed for the &quot;default&quot; newbie install."}], "tags": [], "owner": {"reputation": 197, "user_id": 3681925, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/awO7I.png?s=128&g=1", "display_name": "cooljl86", "link": "https://stackoverflow.com/users/3681925/cooljl86"}, "is_accepted": false, "score": 18, "last_activity_date": 1526392799, "creation_date": 1526392799, "answer_id": 50352205, "question_id": 47945066, "link": "https://stackoverflow.com/questions/47945066/error-toolchain-stable-x86-64-apple-darwin-does-not-have-the-binary-rustfmt/50352205#50352205", "title": "error: toolchain &#39;stable-x86_64-apple-darwin&#39; does not have the binary `rustfmt`", "body": "<p>The Error tells you that you don't have the <code>rustfmt-preview</code> is not installed on the actual <code>*-apple-darwin</code>.</p>\n\n<p>what you need to do is:</p>\n\n<p><code>rustup component add rustfmt-preview --toolchain stable-x86_64-apple-darwin</code></p>\n\n<p>after you'll be good to go :)</p>\n"}, {"tags": [], "owner": {"reputation": 11878, "user_id": 588759, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/216ea4da5cae7be4030b6242ab90631c?s=128&d=identicon&r=PG", "display_name": "rofrol", "link": "https://stackoverflow.com/users/588759/rofrol"}, "is_accepted": false, "score": 1, "last_activity_date": 1540784047, "creation_date": 1540784047, "answer_id": 53038397, "question_id": 47945066, "link": "https://stackoverflow.com/questions/47945066/error-toolchain-stable-x86-64-apple-darwin-does-not-have-the-binary-rustfmt/53038397#53038397", "title": "error: toolchain &#39;stable-x86_64-apple-darwin&#39; does not have the binary `rustfmt`", "body": "<pre><code>$ rustup run stable rustfmt --version\nerror: `toolchain 'stable-x86_64-pc-windows-msvc' does not have th`e binary `rustfmt.exe`\n\n$ rustup component remove rustfmt-preview --toolchain=stable-x86_64-pc-windows-msvc\ninfo: removing component 'rustfmt-preview'\nwarning: during uninstall component rustfmt-preview-x86_64-pc-windows-msvc was not found\n\n$ rustup component add rustfmt-preview --toolchain=stable-x86_64-pc-windows-msvc\ninfo: downloading component 'rustfmt-preview'\ninfo: installing component 'rustfmt-preview'\n\n$ rustup run stable rustfmt --version\nrustfmt 0.99.1-stable (da17b689 2018-08-04)\n</code></pre>\n\n<p><a href=\"https://users.rust-lang.org/t/problem-with-rustfmt-on-stable/15165/7\" rel=\"nofollow noreferrer\">https://users.rust-lang.org/t/problem-with-rustfmt-on-stable/15165/7</a></p>\n"}], "owner": {"reputation": 2536, "user_id": 1032340, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/tUV0d.jpg?s=128&g=1", "display_name": "dvnguyen", "link": "https://stackoverflow.com/users/1032340/dvnguyen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 6553, "favorite_count": 7, "accepted_answer_id": 47945288, "answer_count": 3, "score": 26, "last_activity_date": 1591721281, "creation_date": 1513962714, "last_edit_date": 1513963777, "question_id": 47945066, "link": "https://stackoverflow.com/questions/47945066/error-toolchain-stable-x86-64-apple-darwin-does-not-have-the-binary-rustfmt", "title": "error: toolchain &#39;stable-x86_64-apple-darwin&#39; does not have the binary `rustfmt`", "body": "<p>I've run <code>rustup update</code> to update my toolchain and saw two warnings:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning: tool `rustfmt` is already installed, remove it from `/Users/&lt;username&gt;/.cargo/bin`, then run `rustup update` to have rustup manage this tool.\nwarning: tool `cargo-fmt` is already installed, remove it from `/Users/&lt;username&gt;/.cargo/bin`, then run `rustup update` to have rustup manage this tool.\n</code></pre>\n\n<p>I followed the instructions in the warning messages, then tried to run <code>rustfmt</code> again. I got the error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: toolchain 'stable-x86_64-apple-darwin' does not have the binary rustfmt`\n</code></pre>\n\n<p>What went wrong and how can I fix it?</p>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 3199, "user_id": 2828227, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/CEPMO.jpg?s=128&g=1", "display_name": "Casper", "link": "https://stackoverflow.com/users/2828227/casper"}, "edited": false, "score": 0, "creation_date": 1514292865, "post_id": 47943719, "comment_id": 82926461, "body": "Rocket always requires the latest version of Rust nightly. How can I use the older version of Rust?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 3199, "user_id": 2828227, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/CEPMO.jpg?s=128&g=1", "display_name": "Casper", "link": "https://stackoverflow.com/users/2828227/casper"}, "edited": false, "score": 1, "creation_date": 1514736247, "post_id": 47943719, "comment_id": 83058783, "body": "@kin you need to wait until Rocket and Ring have upgraded to the newest nightly."}, {"owner": {"reputation": 3199, "user_id": 2828227, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/CEPMO.jpg?s=128&g=1", "display_name": "Casper", "link": "https://stackoverflow.com/users/2828227/casper"}, "edited": false, "score": 0, "creation_date": 1514787755, "post_id": 47943719, "comment_id": 83066733, "body": "OK. Thank you. It seems that it is not production ready. Does it built in session like <code>session_start</code> in PHP?"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1513955846, "creation_date": 1513955846, "answer_id": 47943719, "question_id": 47941738, "link": "https://stackoverflow.com/questions/47941738/cannot-compile-the-ring-crate-file-not-found-for-module-montgomery/47943719#47943719", "title": "Cannot compile the ring crate: file not found for module `montgomery`", "body": "<p>This is <a href=\"https://github.com/briansmith/ring/issues/598\" rel=\"nofollow noreferrer\">an issue with Ring and Rust 1.24.0-nightly (2017-12-21)</a>. It also has an associated <a href=\"https://github.com/rust-lang/rust/issues/46936\" rel=\"nofollow noreferrer\">issue in the Rust repository</a>.</p>\n\n<p>To work around it, use an older version of Rust nightly (or avoid nightly if you can).</p>\n"}], "owner": {"reputation": 447, "user_id": 595309, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/1939c75d4c2f5ebfdd9901ef2db98b88?s=128&d=identicon&r=PG", "display_name": "John McCrae", "link": "https://stackoverflow.com/users/595309/john-mccrae"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 709, "favorite_count": 0, "accepted_answer_id": 47943719, "answer_count": 1, "score": 2, "last_activity_date": 1513955897, "creation_date": 1513946432, "last_edit_date": 1513955897, "question_id": 47941738, "link": "https://stackoverflow.com/questions/47941738/cannot-compile-the-ring-crate-file-not-found-for-module-montgomery", "title": "Cannot compile the ring crate: file not found for module `montgomery`", "body": "<p>Cargo is not compiling with the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo build\nCompiling ring v0.12.1\nerror[E0583]: file not found for module `montgomery`\n    --&gt; \n C:\\Users\\jmccrae\\.cargo\\registry\\src\\github.com1ecc6299db9ec823\\ring-0.12.1\\src\\arithmetic/arithmetic.rs:15:9\n   |\n15 | pub mod montgomery;\n   |         ^^^^^^^^^^\n   |\n   = help: name the file either arithmetic\\montgomery.rs or arithmetic\\montgomery\\mod.rs inside the directory \n\"C:\\\\Users\\\\jmccrae\\\\.cargo\\\\registry\\\\src\\\\github.com-1ecc6299db9ec823\\\\ring-0.12.1\\\\src\\\\arithmetic\"\n</code></pre>\n\n<p>The project was a new project with Cargo.toml modified to include a dependency to the most recent version (0.12.1) of the <code>ring</code> crate. The Cargo.toml is as follows:</p>\n\n<pre><code>[package]\nname = \"testring\"\nversion = \"0.1.0\"\nauthors = [\"John McCrae &lt;john@mccr.ae&gt;\"]\n\n[dependencies]\nring = \"0.12.1\"\n</code></pre>\n\n<p>The required file seems to actually exist:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ ls  C:\\\\Users\\\\jmccrae\\\\.cargo\\\\registry\\\\src\\\\github.com-1ecc6299db9ec823\\\\ring-0.12.1\\\\src\\\\arithmetic\narithmetic.rs  montgomery.rs\n</code></pre>\n\n<p>The cargo version is <code>cargo 0.25.0-nightly (930f9d949 2017-12-05)</code> and it is running on MINGW.</p>\n\n<p>Is there anything wrong with the compiler set-up?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 3, "last_activity_date": 1513901589, "last_edit_date": 1513901589, "creation_date": 1513901259, "answer_id": 47934358, "question_id": 47933779, "link": "https://stackoverflow.com/questions/47933779/optionmapfnonce-does-not-seem-to-accept-fnonce/47934358#47934358", "title": "Option::map(FnOnce) does not seem to accept FnOnce ...?", "body": "<p>The problem is that you are not calling <code>Option::map</code> with a <code>FnOnce</code> directly, but with a <code>&amp;FnOnce</code>.</p>\n\n<p>But if you look at the <a href=\"https://doc.rust-lang.org/std/ops/trait.FnOnce.html#implementors\" rel=\"nofollow noreferrer\">implementors for <code>FnOnce</code></a>, you'll notice that while <code>FnOnce</code> is implemented for <code>&amp;Fn</code>, it is not implemented for <code>&amp;FnOnce</code> or <code>&amp;FnMut</code>.\nTo understand why, consider the following:</p>\n\n<pre><code>let a: &amp;FnOnce(u32) -&gt; u32 = &amp;|x: u32| { v = x; x };\nlet b: &amp;FnOnce(u32) -&gt; u32 = a;\n\na(42); // would be allowed if `&amp;FnOnce: FnOnce`, moves `a`\n       // actually gives: \n       // error[E0507]: cannot move out of borrowed content\na(6);  // would not be allowed as `a` was moved\nb(7);  // would be allowed if `&amp;FnOnce: FnOnce`\n       // oh no! this calls the function again!\n</code></pre>\n"}], "owner": {"reputation": 1234, "user_id": 2232000, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/feca4a8ce6ae5868a181cf0aca7f00c9?s=128&d=identicon&r=PG&f=1", "display_name": "left4bread", "link": "https://stackoverflow.com/users/2232000/left4bread"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 209, "favorite_count": 0, "accepted_answer_id": 47934358, "answer_count": 1, "score": 1, "last_activity_date": 1513901589, "creation_date": 1513896730, "last_edit_date": 1513897133, "question_id": 47933779, "link": "https://stackoverflow.com/questions/47933779/optionmapfnonce-does-not-seem-to-accept-fnonce", "title": "Option::map(FnOnce) does not seem to accept FnOnce ...?", "body": "<p>I am a bit confused by <code>Option::map()</code>. The <a href=\"https://doc.rust-lang.org/src/core/option.rs.html#396\" rel=\"nofollow noreferrer\">documentation</a> says it accepts a <code>FnOnce</code>. </p>\n\n<p>If so, why do <code>a</code> and <code>b</code> cause compilations errors?</p>\n\n<pre><code>let mut v = 3;\n\nlet mut a: &amp;FnOnce(u32) -&gt; u32 = &amp;|x: u32| { v = x; x };\nlet mut b: &amp;FnMut(u32) -&gt; u32 = &amp;|x: u32| { x };\nlet mut c: &amp;Fn(u32) -&gt; u32 = &amp;|x: u32| { x };\n\nlet o = Option::Some(3);\n\no.map(a); // trait bound `std::ops::FnOnce(u32) -&gt; u32: std::ops::Fn&lt;(u32,)&gt;` is not satisfied\no.map(b); // trait bound `std::ops::FnMut(u32) -&gt; u32: std::ops::Fn&lt;(u32,)&gt;` is not satisfied\no.map(c); // works\n</code></pre>\n\n<p>Shouldn't all of them, including <code>a</code> and <code>b</code>, implement <code>FnOnce</code> according to <a href=\"https://stackoverflow.com/questions/30177395/when-does-a-closure-implement-fn-fnmut-and-fnonce\">this post</a>?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1513896332, "post_id": 47933532, "comment_id": 82836673, "body": "<a href=\"https://stackoverflow.com/questions/31067031/cannot-borrow-as-mutable-more-than-once-at-a-time-in-one-code-but-can-in-anoth\" title=\"cannot borrow as mutable more than once at a time in one code but can in anoth\">stackoverflow.com/questions/31067031/&hellip;</a> could be a duplicate. Do you want to understand why the two things are different or do you just want to know how to fix it?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1513896442, "post_id": 47933532, "comment_id": 82836708, "body": "I&#39;m always trying to root out the cause of this mistake; <i>why</i> do you have so many lifetimes defined in your code? What learning route suggested that doing that was a good idea?"}, {"owner": {"reputation": 41, "user_id": 8022804, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bb368ccd3941d984a63f4fdf93b7dbf6?s=128&d=identicon&r=PG&f=1", "display_name": "Maple", "link": "https://stackoverflow.com/users/8022804/maple"}, "edited": false, "score": 0, "creation_date": 1513896513, "post_id": 47933532, "comment_id": 82836731, "body": "I&#39;m more interested in an explanation as I already found a workaround. Although a fix would be fine."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1513896567, "post_id": 47933532, "comment_id": 82836746, "body": "(Also <a href=\"https://stackoverflow.com/questions/24847533/why-does-rust-borrow-checker-reject-this-code/24861538#24861538\" title=\"why does rust borrow checker reject this code\">stackoverflow.com/questions/24847533/&hellip;</a> and <a href=\"https://stackoverflow.com/questions/39827244/who-borrowed-a-variable\" title=\"who borrowed a variable\">stackoverflow.com/questions/39827244/who-borrowed-a-variable</a> ...)"}, {"owner": {"reputation": 41, "user_id": 8022804, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bb368ccd3941d984a63f4fdf93b7dbf6?s=128&d=identicon&r=PG&f=1", "display_name": "Maple", "link": "https://stackoverflow.com/users/8022804/maple"}, "edited": false, "score": 0, "creation_date": 1513897374, "post_id": 47933532, "comment_id": 82836999, "body": "I dont think those three links are much related since they all involve immutable references. Changing the reference in my code snippet to an immutable reference and removing the &quot;+= 5&quot; compiles fine."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1513898133, "post_id": 47933532, "comment_id": 82837225, "body": "@Maple My question is: why did you define <code>outer</code> at all? What blog post, book, documentation etc. suggested that was a good idea to start with?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1513898142, "post_id": 47933532, "comment_id": 82837230, "body": "In fact I think this definitely is a duplicate of one of the ones I linked -- <code>&#39;outer</code> and <code>&#39;inner</code> just make it look funny. The error is the same if you use <code>&#39;inner</code> everywhere, and for the same reason. The answer is the same, too: <a href=\"https://play.rust-lang.org/?gist=9bbaecdc211bafdcf5bc77981d218a8b&amp;version=stable\" rel=\"nofollow noreferrer\"><i>delete all the lifetimes</i></a>."}, {"owner": {"reputation": 41, "user_id": 8022804, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bb368ccd3941d984a63f4fdf93b7dbf6?s=128&d=identicon&r=PG&f=1", "display_name": "Maple", "link": "https://stackoverflow.com/users/8022804/maple"}, "edited": false, "score": 0, "creation_date": 1513898203, "post_id": 47933532, "comment_id": 82837247, "body": "I&#39;m using two lifetimes. &#39;outer for self and &#39;inner for the mutable reference. I think <a href=\"https://stackoverflow.com/a/39828602/8022804\">stackoverflow.com/a/39828602/8022804</a> explains why they should be separate. I accidentally deleted the previous comment you replied to, sorry about that."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1513898699, "post_id": 47933532, "comment_id": 82837375, "body": "<code>&amp;mut self</code> is the problem here, not the mutability of the internal reference (necessarily)."}, {"owner": {"reputation": 41, "user_id": 8022804, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bb368ccd3941d984a63f4fdf93b7dbf6?s=128&d=identicon&r=PG&f=1", "display_name": "Maple", "link": "https://stackoverflow.com/users/8022804/maple"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1513899079, "post_id": 47933532, "comment_id": 82837486, "body": "@trentcl your link to the rust playground helped clarify things more. Thanks."}], "owner": {"reputation": 41, "user_id": 8022804, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bb368ccd3941d984a63f4fdf93b7dbf6?s=128&d=identicon&r=PG&f=1", "display_name": "Maple", "link": "https://stackoverflow.com/users/8022804/maple"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 42, "favorite_count": 0, "closed_date": 1513912119, "answer_count": 0, "score": 1, "last_activity_date": 1513896248, "creation_date": 1513895182, "last_edit_date": 1513896248, "question_id": 47933532, "link": "https://stackoverflow.com/questions/47933532/accessing-mutable-reference-with-getter-not-working-as-expected", "closed_reason": "Duplicate", "title": "Accessing mutable reference with getter not working as expected", "body": "<p>I'm trying to make a struct that holds an mutable reference. Accessing the mutable reference multiple times through its field works fine. However, if I use a getter instead, it does not compile.</p>\n\n<pre><code>struct IntBorrower&lt;'inner&gt;(&amp;'inner mut i32);\n\nimpl&lt;'outer: 'inner, 'inner&gt; IntBorrower&lt;'inner&gt; {\n    fn int_mut(&amp;'outer mut self) -&gt; &amp;'inner mut i32 {\n        &amp;mut self.0\n    }\n\n    //this compiles\n    fn do_something(&amp;'outer mut self) {\n        {\n            *self.0 += 5;\n        }\n\n        {\n            *self.0 += 5;\n        }\n    }\n\n    //this does not compile\n    fn do_something_but_with_getters(&amp;'outer mut self) {\n        {\n            *self.int_mut() += 5;\n        }\n\n        {\n            *self.int_mut() += 5;\n        }\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>I get this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `*self` as mutable more than once at a time\n  --&gt; src/main.rs:26:14\n   |\n22 |             *self.int_mut() += 5;\n   |              ---- first mutable borrow occurs here\n...\n26 |             *self.int_mut() += 5;\n   |              ^^^^ second mutable borrow occurs here\n27 |         }\n28 |     }\n   |     - first borrow ends here\n</code></pre>\n\n<p>Shouldn't the first mutable borrow end inside those brackets just like in the previous function? Why does this happen? </p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1513881089, "post_id": 47930654, "comment_id": 82830160, "body": "Here is a proper MCVE: <a href=\"https://play.rust-lang.org/?gist=779264cd1d675f36092aba170bd92d02&amp;version=stable\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> How are you currently interpreting the error message?"}, {"owner": {"reputation": 638, "user_id": 6772989, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a05dc0e117ea9018de89f926894ea906?s=128&d=identicon&r=PG&f=1", "display_name": "Bulat M.", "link": "https://stackoverflow.com/users/6772989/bulat-m"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1513883404, "post_id": 47930654, "comment_id": 82831391, "body": "@E_net4, the error is the same."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 2, "creation_date": 1513883700, "post_id": 47930654, "comment_id": 82831545, "body": "You misunderstood me. What do you think that the compiler is telling you with &quot;private type in public interface&quot;?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1513887065, "post_id": 47930654, "comment_id": 82833160, "body": "FWIW, your documentation comment is incorrect \u2014 your function does not panic when the size is 0."}], "answers": [{"tags": [], "owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "is_accepted": false, "score": 3, "last_activity_date": 1513906419, "creation_date": 1513906419, "answer_id": 47934873, "question_id": 47930654, "link": "https://stackoverflow.com/questions/47930654/how-to-use-struct-in-impl/47934873#47934873", "title": "How to use struct in impl?", "body": "<p><code>pub fn new(\u2026) -&gt; Result&lt;\u2026, PoolCreationError&gt;</code> refers to <code>struct PoolCreationError</code>, which is private (by default items are private to their module).</p>\n\n<p>Rust doesn't allow public functions to expose private types. You need to make the type public as well:</p>\n\n<pre><code>pub struct PoolCreationError;\n</code></pre>\n\n<p><a href=\"https://doc.rust-lang.org/error-index.html#E0446\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/error-index.html#E0446</a></p>\n"}], "owner": {"reputation": 638, "user_id": 6772989, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a05dc0e117ea9018de89f926894ea906?s=128&d=identicon&r=PG&f=1", "display_name": "Bulat M.", "link": "https://stackoverflow.com/users/6772989/bulat-m"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 776, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1513906419, "creation_date": 1513880592, "last_edit_date": 1513885579, "question_id": 47930654, "link": "https://stackoverflow.com/questions/47930654/how-to-use-struct-in-impl", "title": "How to use struct in impl?", "body": "<p>I'm trying to <a href=\"https://doc.rust-lang.org/book/second-edition/ch20-04-storing-threads.html\" rel=\"nofollow noreferrer\">implement a web server using using a thread pool</a> as described in Rust's documentation. The application's code is in <em>src/bin/main.rs</em> and the library's code is in <em>src/lib.rs</em>.</p>\n\n<p>Trying to use <code>PoolCreationError</code> gives an error:</p>\n\n<pre><code>pub struct ThreadPool;\n\nstruct PoolCreationError;\n\nimpl ThreadPool {\n    /// Create a new ThreadPool.\n    ///\n    /// The size is the number of threads in the pool\n    ///\n    /// # Panics\n    ///\n    /// The `new` function will panic if the size is zero.\n    pub fn new(size: u32) -&gt; Result&lt;ThreadPool, PoolCreationError&gt; {\n        if size &gt; 0 {\n            Ok(ThreadPool)\n        } else {\n            Err(PoolCreationError)\n        }\n    }\n\n    pub fn execute&lt;F&gt;(&amp;self, f: F)\n    where\n        F: FnOnce() + Send + 'static,\n    {\n    }\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0446]: private type `PoolCreationError` in public interface\n  --&gt; src/main.rs:13:5\n   |\n13 | /     pub fn new(size: u32) -&gt; Result&lt;ThreadPool, PoolCreationError&gt; {\n14 | |         if size &gt; 0 {\n15 | |             Ok(ThreadPool)\n16 | |         } else {\n17 | |             Err(PoolCreationError)\n18 | |         }\n19 | |     }\n   | |_____^ can't leak private type\n</code></pre>\n\n<p>How one should cope with it and use the struct?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1513885944, "post_id": 47930595, "comment_id": 82832672, "body": "Referring to your link \u2014 please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>, emphasis on <b>minimal</b>. Your code only needs one implementation of the trait and no nightly features. The code posted here is better, but still doesn&#39;t need any nightly features."}, {"owner": {"reputation": 6154, "user_id": 29813, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7781336447293058f65fad13dd8513b8?s=128&d=identicon&r=PG", "display_name": "Andrew Stanton-Nurse", "link": "https://stackoverflow.com/users/29813/andrew-stanton-nurse"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1513888308, "post_id": 47930595, "comment_id": 82833678, "body": "That&#39;s why I wrote the reduced example inline here. The playground link was to where I was narrowing that down. Apologies if that wasn&#39;t clear"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1513888416, "post_id": 47930595, "comment_id": 82833708, "body": "And to clarify, <code>self.call_mut((c,))</code> -&gt; <code>self(c)</code>."}], "answers": [{"comments": [{"owner": {"reputation": 6154, "user_id": 29813, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7781336447293058f65fad13dd8513b8?s=128&d=identicon&r=PG", "display_name": "Andrew Stanton-Nurse", "link": "https://stackoverflow.com/users/29813/andrew-stanton-nurse"}, "edited": false, "score": 0, "creation_date": 1513888098, "post_id": 47932020, "comment_id": 82833592, "body": "Fair enough. I was hoping to avoid having to wrap it up further when I&#39;ve already got an instance of the trait, but that would work."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 0, "last_activity_date": 1513886709, "creation_date": 1513886709, "answer_id": 47932020, "question_id": 47930595, "link": "https://stackoverflow.com/questions/47930595/passing-trait-implemented-on-fnmut-into-helper-function-without-moving/47932020#47932020", "title": "Passing trait implemented on FnMut into helper function without moving", "body": "<p>If a closure is a valid implementation of your trait, then make a closure:</p>\n\n<pre><code>pub fn scan_until&lt;P: CharPredicate&gt;(mut predicate: P) {\n    while helper(|c| predicate.test(c)) {}\n}\n</code></pre>\n"}], "owner": {"reputation": 6154, "user_id": 29813, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7781336447293058f65fad13dd8513b8?s=128&d=identicon&r=PG", "display_name": "Andrew Stanton-Nurse", "link": "https://stackoverflow.com/users/29813/andrew-stanton-nurse"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 152, "favorite_count": 0, "accepted_answer_id": 47932020, "answer_count": 1, "score": 0, "last_activity_date": 1513886709, "creation_date": 1513880346, "last_edit_date": 1513885987, "question_id": 47930595, "link": "https://stackoverflow.com/questions/47930595/passing-trait-implemented-on-fnmut-into-helper-function-without-moving", "title": "Passing trait implemented on FnMut into helper function without moving", "body": "<p>I'm trying to have a set of functions that can take a <code>CharPredicate</code> which is my own trait that is implemented over a <code>FnMut(char) -&gt; bool</code>, <code>Range&lt;char&gt;</code>, <code>char</code>, etc.</p>\n\n<p>The goal is to be able to call helpers like this:</p>\n\n<pre><code>scan_until(';');\nscan_while('0'..='9');\nscan_while(|c| { c.is_digit() });\n</code></pre>\n\n<p>For some of these helpers I want to call them multiple times and pass them between functions. However, the borrow checker is grumpy at me with this example:</p>\n\n<pre><code>#![feature(fn_traits)]\n\npub fn helper&lt;P: CharPredicate&gt;(mut predicate: P) -&gt; bool {\n    predicate.test('a')\n}\n\npub fn scan_until&lt;P: CharPredicate&gt;(mut predicate: P) {\n    // [A] This works\n    while predicate.test('a') {}\n\n    // [B] This doesn't: Use of moved value `predicate`\n    //while helper(predicate) {}\n\n    // [C] This doesn't either: the trait bound `P: std::ops::FnMut&lt;(char,)&gt;` is not satisfied\n    //while helper(&amp;mut predicate) {}\n}\n\npub trait CharPredicate {\n    fn test(&amp;mut self, c: char) -&gt; bool;\n}\n\nimpl&lt;F: FnMut(char) -&gt; bool&gt; CharPredicate for F {\n    fn test(&amp;mut self, c: char) -&gt; bool {\n        self.call_mut((c,))\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=d32936d4c1fce9f2b230ee542d0e4933&amp;version=nightly\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>Case <strong>A</strong> works; I can call the predicate multiple times in the loop.</p>\n\n<p>Case <strong>B</strong> fails because I'm moving the predicate into the helper in the first iteration. This makes sense to me.</p>\n\n<p>Case <strong>C</strong> is my attempt at fixing <code>B</code> so that it works, I want to pass a reference to the closure in to allow it to be called.</p>\n\n<p>Changing <code>helper</code> to take <code>&amp;mut P</code> does allow Case <strong>C</strong> to work, but <code>helper</code> can also be called directly, which means callers will have to put <code>&amp;mut</code> in front of every call they make. I tried doing <code>impl&lt;P: CharPredicate&gt; CharPredicate for &amp;mut P</code> but that ended up with conflicting trait implementations with the <code>FnMut</code> version.</p>\n\n<p>Is this something I can get working or do I have to cave and use <code>&amp;mut</code> in my helper function?</p>\n"}, {"tags": ["rust", "universal", "existential-type"], "comments": [{"owner": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 1, "creation_date": 1513877779, "post_id": 47929824, "comment_id": 82828647, "body": "It was chosen to work this way because these are the most common use cases. There are also cases where an existential argument type or a universal return type would be useful, but these are relatively rare so the RFC chose not to implement them and keep things simple."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 0, "creation_date": 1532859175, "post_id": 47929824, "comment_id": 90123791, "body": "@interjay A common example of a universally quantified return type is <code>Into::into()</code>. The caller supplies the type that they want to get back (usually by inference)."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 7, "last_activity_date": 1513878081, "last_edit_date": 1513878081, "creation_date": 1513877216, "answer_id": 47929931, "question_id": 47929824, "link": "https://stackoverflow.com/questions/47929824/what-makes-impl-trait-as-an-argument-universal-and-as-a-return-value-existe/47929931#47929931", "title": "What makes `impl Trait` as an argument &quot;universal&quot; and as a return value &quot;existential&quot;?", "body": "<p>The RFC defines the terms multiple times in multiple manners:</p>\n\n<blockquote>\n  <p>between existential types (where the callee chooses the type) and universal types (where the caller chooses)</p>\n</blockquote>\n\n\n\n<blockquote>\n  <p>There's been a lot of discussion around universals vs. existentials (in today's Rust, generics vs impl Trait).</p>\n</blockquote>\n\n\n\n<blockquote>\n  <ul>\n  <li><p>Universal quantification, i.e. \"for any type T\", i.e. \"caller\n  chooses\". This is how generics work today. When you write\n  <code>fn foo&lt;T&gt;(t: T)</code>, you're saying that the function will work for any\n  choice of <code>T</code>, and leaving it to your caller to choose the <code>T</code>.</p></li>\n  <li><p>Existential quantification, i.e. \"for some type T\", i.e. \"callee\n  chooses\". This is how <code>impl Trait</code> works today (which is in return\n  position only). When you write <code>fn foo() -&gt; impl Iterator</code>, you're\n  saying that the function will produce some type <code>T</code> that implements\n  <code>Iterator</code>, but the caller is not allowed to assume anything else\n  about that type.</p></li>\n  </ul>\n</blockquote>\n\n<p>TL;DR:</p>\n\n<ul>\n<li><p><code>fn take_iter(t: impl Iterator)</code> \u2014 the person calling <code>take_iter</code> picks the concrete type. The function has to work for the entire \"universe\" of types that implement the trait.</p></li>\n<li><p><code>fn give_iter() -&gt; impl Iterator</code> \u2014 the implementation of <code>give_iter</code> picks the concrete type. There is some type which \"exists\" and implements the trait that will be returned by the function.</p></li>\n</ul>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user8370684"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 643, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1513878081, "creation_date": 1513876711, "last_edit_date": 1513876920, "question_id": 47929824, "link": "https://stackoverflow.com/questions/47929824/what-makes-impl-trait-as-an-argument-universal-and-as-a-return-value-existe", "title": "What makes `impl Trait` as an argument &quot;universal&quot; and as a return value &quot;existential&quot;?", "body": "<p>I was reading the <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1951-expand-impl-trait.md\" rel=\"nofollow noreferrer\">RFC on \"expanding\" impl Trait</a> when I came upon the following:</p>\n\n<blockquote>\n  <p>By contrast, a programmer who first learned: <code>fn take_iter(t: impl\n  Iterator)</code> and then tried: <code>fn give_iter() -&gt; impl Iterator</code> would be\n  successful, without any rigorous understanding that they just\n  transitioned from a universal to an existential.</p>\n</blockquote>\n\n<p>While I understand universal vs existential from a logic perspective, what makes the first one above universal and the second one existential?</p>\n"}, {"tags": ["rust", "deadlock", "rust-tokio"], "comments": [{"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1513878070, "post_id": 47929646, "comment_id": 82828771, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/47853778/how-to-get-the-cookie-from-a-get-response\">How to get the cookie from a GET response?</a>"}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 1, "creation_date": 1513878087, "post_id": 47929646, "comment_id": 82828777, "body": "In short: don&#39;t use <code>wait()</code>."}, {"owner": {"reputation": 1, "user_id": 9127989, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/87711860fd53ac61317b602fbcb52a32?s=128&d=identicon&r=PG&f=1", "display_name": "gin66", "link": "https://stackoverflow.com/users/9127989/gin66"}, "reply_to_user": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1513959946, "post_id": 47929646, "comment_id": 82858713, "body": "Thanks for the hint with wait(). Apparently this future system from Tokio is difficult to master. If there would be a task-blocking and not thread-blocking wait(), then this would be much better. Looking to nightly with async/await is promising to have a sound implementation finally."}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1513988309, "post_id": 47929646, "comment_id": 82867424, "body": "task-but-not-thread-blocking wait is usually named &quot;green threads&quot; or &quot;lightweight threads&quot;, and requires allocating separate stacks and switching between them (sometimes called &quot;coroutine&quot;). async/await and tokio/futures are exactly the opposite approach. (although async/await looks similar to the &quot;task-but-not-thread-blocking&quot; thing it is implemented differently.)"}, {"owner": {"reputation": 1, "user_id": 9127989, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/87711860fd53ac61317b602fbcb52a32?s=128&d=identicon&r=PG&f=1", "display_name": "gin66", "link": "https://stackoverflow.com/users/9127989/gin66"}, "reply_to_user": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1514023547, "post_id": 47929646, "comment_id": 82872492, "body": "Now I understand futures much better. As I come from python 3 with await/async, this seems not to be a good starting point to understand rust&#39;s future concept."}], "answers": [{"tags": [], "owner": {"reputation": 1, "user_id": 9127989, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/87711860fd53ac61317b602fbcb52a32?s=128&d=identicon&r=PG&f=1", "display_name": "gin66", "link": "https://stackoverflow.com/users/9127989/gin66"}, "is_accepted": false, "score": 0, "last_activity_date": 1514023191, "creation_date": 1514023191, "answer_id": 47951516, "question_id": 47929646, "link": "https://stackoverflow.com/questions/47929646/using-tokios-mpsc-and-oneshot-leads-to-deadlock/47951516#47951516", "title": "Using Tokio&#39;s mpsc and oneshot leads to deadlock", "body": "<p>After having read <a href=\"https://aturon.github.io/blog/2016/09/07/futures-design/\" rel=\"nofollow noreferrer\">Aaron's blog</a>, the concept of futures is now more clear. My first approach is not demand-driven and thus inadequate. The function resolve() should actually return a future and not a result.</p>\n\n<p>In order to close this question appropriately, here is my modified, further reduced minimal example to show the concept:</p>\n\n<pre><code>extern crate futures;\nextern crate tokio_core;\nextern crate tokio_timer;\n\nuse std::time;\nuse std::time::{Instant,Duration};\nuse tokio_core::reactor::{Core, Interval};\nuse tokio_timer::wheel;\nuse futures::{Future,Stream,Sink};\nuse futures::sync::{oneshot,mpsc};\n\ntype MsgRequest&lt;A,E&gt; = oneshot::Sender&lt;Result&lt;A,E&gt;&gt;;\n\nfn main() {\n    let mut lp = Core::new().unwrap();\n    let handle = lp.handle();\n\n    let (fut_tx, fut_rx) = mpsc::channel::&lt;MsgRequest&lt;u8,String&gt;&gt;(100);\n    let handle2 = handle.clone();\n    let resolver = fut_rx.and_then(move |tx| {\n            println!(\"Got query...wait a bit\");\n            let delay = time::Duration::from_secs(5);\n            handle2.spawn({\n                wheel().build().sleep(delay)\n                    .then(move |_|{\n                        println!(\"Answer query\");\n                        tx.send(Ok(0)).unwrap();\n                        println!(\"query answered\");\n                        Ok(())\n                })\n            });\n            Ok(())\n        })\n        .for_each(|_| {Ok(())});\n    handle.spawn(resolver);\n\n    let server = Interval::new_at(Instant::now(),\n                                Duration::new(2,0),&amp;handle).unwrap()\n            .then(move |_| {\n                let fut_tx = fut_tx.clone();\n                let (res_tx, res_rx) = oneshot::channel::&lt;Result&lt;u8,String&gt;&gt;();\n                println!(\"send query\");\n                fut_tx.send(res_tx)\n                    .then( |tx|{\n                        if let Ok(_tx) = tx { println!(\"Sink flushed\"); }\n                        res_rx\n                    })\n            })\n            .for_each(|res| {\n                println!(\"Received result {:?}\",res);\n                Ok(())\n            }).map_err(|_| ());\n    handle.spawn(server);\n\n    loop {\n        lp.turn(None);\n    }\n}\n</code></pre>\n\n<p>It outputs as expected:</p>\n\n<pre><code>send query\nSink flushed\nGot query...wait a bit\nAnswer query\nquery answered\nReceived result Ok(0)\nsend query\nSink flushed\nGot query...wait a bit\nAnswer query\nquery answered\nReceived result Ok(0)\n...\n</code></pre>\n"}], "owner": {"reputation": 1, "user_id": 9127989, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/87711860fd53ac61317b602fbcb52a32?s=128&d=identicon&r=PG&f=1", "display_name": "gin66", "link": "https://stackoverflow.com/users/9127989/gin66"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 989, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1514023191, "creation_date": 1513876003, "last_edit_date": 1513876874, "question_id": 47929646, "link": "https://stackoverflow.com/questions/47929646/using-tokios-mpsc-and-oneshot-leads-to-deadlock", "title": "Using Tokio&#39;s mpsc and oneshot leads to deadlock", "body": "<p>I want to write a SOCKS server which selects one of several internet gateways depending on the destination as requested by the client. The general flow is</p>\n\n<ol>\n<li>Perform SOCKS5 negotiation and derive the address information from client</li>\n<li>Request an internal server to select the internet gateway and the destination's IP</li>\n<li>Connect and do the communication</li>\n</ol>\n\n<p>For this internal server, a Tokio task is spawned which waits on a mpsc queue. The received messages should contain the SOCKS5 address info and the tx side of a oneshot channel to give back the result.</p>\n\n<p>Another Tokio task just periodically queries the internal server:</p>\n\n<pre><code>extern crate futures;\nextern crate tokio_core;\nextern crate tokio_timer;\n\nuse std::time;\nuse std::time::{Duration, Instant};\nuse std::fmt::Debug;\nuse tokio_core::reactor::{Core, Interval};\nuse tokio_timer::wheel;\nuse futures::{Future, Sink, Stream};\nuse futures::sync::{mpsc, oneshot};\n\ntype MsgRequest&lt;A, E&gt; = oneshot::Sender&lt;Result&lt;A, E&gt;&gt;;\ntype FutRequest&lt;A, E&gt; = mpsc::Sender&lt;MsgRequest&lt;A, E&gt;&gt;;\n\n#[derive(Debug)]\nstruct Responder&lt;A, E&gt; {\n    fut_tx: FutRequest&lt;A, E&gt;,\n}\n\nimpl&lt;A: 'static, E: 'static&gt; Responder&lt;A, E&gt;\nwhere\n    E: Debug,\n{\n    fn query(&amp;self) -&gt; Result&lt;A, E&gt; {\n        println!(\"enter query\");\n        let (res_tx, res_rx) = oneshot::channel::&lt;Result&lt;A, E&gt;&gt;();\n        println!(\"send query\");\n        let fut_tx = self.fut_tx.clone();\n        let res = fut_tx\n            .send(res_tx)\n            .then(|tx| {\n                if let Ok(_tx) = tx {\n                    println!(\"Sink flushed\");\n                }\n                res_rx\n            })\n            .and_then(|x| Ok(x))\n            .wait()\n            .unwrap();\n        res\n    }\n}\n\nimpl&lt;A: 'static, E: 'static&gt; Clone for Responder&lt;A, E&gt; {\n    fn clone(&amp;self) -&gt; Self {\n        Responder {\n            fut_tx: self.fut_tx.clone(),\n        }\n    }\n}\n\nfn resolve(tx: oneshot::Sender&lt;Result&lt;u8, String&gt;&gt;) -&gt; Result&lt;(), ()&gt; {\n    println!(\"resolve\");\n    let delay = time::Duration::from_secs(10);\n    wheel()\n        .build()\n        .sleep(delay)\n        .then(|_| tx.send(Ok(0)))\n        .wait()\n        .unwrap();\n    println!(\"resolve answered\");\n    Ok(())\n}\n\nfn main() {\n    let mut lp = Core::new().unwrap();\n    let handle = lp.handle();\n\n    let (fut_tx, fut_rx) = mpsc::channel::&lt;MsgRequest&lt;u8, String&gt;&gt;(100);\n    let resolver = fut_rx.for_each(|msg| resolve(msg));\n    handle.spawn(resolver);\n\n    let responder = Responder { fut_tx };\n\n    let server = Interval::new_at(Instant::now(), Duration::new(2, 0), &amp;handle)\n        .unwrap()\n        .for_each(move |_| {\n            println!(\"Call query for_each\");\n            let rx = responder.clone();\n            let _res = rx.query();\n            Ok(())\n        })\n        .map_err(|_| ());\n    handle.spawn(server);\n\n    loop {\n        lp.turn(None);\n    }\n}\n</code></pre>\n\n<p>Using Cargo.toml dependencies:</p>\n\n<pre><code>[dependencies]\nfutures = \"0.1\"\ntokio-core = \"0.1\"\ntokio-timer = \"0.1\"\n</code></pre>\n\n<p>This code deadlocks. The output is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Call query for_each\nenter query\nsend query\nSink flushed\n</code></pre>\n\n<p>Expected output is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Call query for_each\nenter query\nsend query\nSink flushed\nresolve\nresolve answered\nCall query for_each\nenter query\nsend query\nSink flushed\nresolve\nresolve answered\n....    \n</code></pre>\n\n<p>This indicates that the request with the <code>tx</code> end has been successfully sent to the internal server but the internal server does not process it. From my understanding, mpsc and oneshot can be used to transfer between tasks and not only threads, so the containing thread should not deadlock as it does.</p>\n\n<p>What's wrong here?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "edited": false, "score": 0, "creation_date": 1513857086, "post_id": 47924312, "comment_id": 82816280, "body": "Looks ridiculous to me repeat one thing many times. Is there any explanation of why it was made so? I mean, we have already required <code>T</code> to be <code>ValTrait</code>, why to require <code>ValRequireTrait</code> to be <code>ValTrait</code>? I see a repetition here."}, {"owner": {"reputation": 1127, "user_id": 6171872, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/2wfQM.jpg?s=128&g=1", "display_name": "StarSheriff", "link": "https://stackoverflow.com/users/6171872/starsheriff"}, "reply_to_user": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "edited": false, "score": 0, "creation_date": 1513857997, "post_id": 47924312, "comment_id": 82816769, "body": "Your are right it is redundant and the compiler manages to infer the trait bounds itself. You don&#39;t have to specify the trait bound explicitely. This works as well: <code>trait ValRequireTrait&lt;T = Self&gt;: ValTrait&lt;T&gt; {}</code>. I am not a rust expert myself, I am currently learning myself. In general I found that the <a href=\"https://github.com/rust-lang/rfcs\" rel=\"nofollow noreferrer\">rfcs</a> contain valuable information on <i>why</i> things are done in a specific way. I didn&#39;t find anything relevant on supertraits though."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "edited": false, "score": 3, "creation_date": 1513858307, "post_id": 47924312, "comment_id": 82816943, "body": "@VictorPolevoy <code>ValRequireTrait</code> is nearly useless because it&#39;s parameterized the same way <code>ValTrait</code> is. I suspect you&#39;re looking for <code>trait ValRequireTrait : Sized + ValTrait {}</code> (no parameter on <code>ValRequireTrait</code>). <a href=\"https://play.rust-lang.org/?gist=d1a5cbda10d5b63e6082b8caada49911&amp;version=stable\" rel=\"nofollow noreferrer\">Example</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1513858390, "post_id": 47924312, "comment_id": 82816985, "body": "(<a href=\"https://doc.rust-lang.org/std/cmp/trait.Eq.html\" rel=\"nofollow noreferrer\"><code>Eq</code></a> and <a href=\"https://doc.rust-lang.org/std/cmp/trait.PartialEq.html\" rel=\"nofollow noreferrer\"><code>PartialEq</code></a> have the same relationship, where <code>Eq</code> requires <code>PartialEq&lt;Self&gt;</code>.)"}, {"owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1513858619, "post_id": 47924312, "comment_id": 82817119, "body": "@trentcl you are right but only for this my example. My real usage has parameters and it needs to have a template parameter. But thank you for noticing this too."}, {"owner": {"reputation": 309, "user_id": 2038713, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/FQjD8.png?s=128&g=1", "display_name": "6005", "link": "https://stackoverflow.com/users/2038713/6005"}, "edited": false, "score": 1, "creation_date": 1607568314, "post_id": 47924312, "comment_id": 115316384, "body": "Updated book link: <a href=\"https://doc.rust-lang.org/book/ch19-03-advanced-traits.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/book/ch19-03-advanced-traits.html</a>"}], "tags": [], "owner": {"reputation": 1127, "user_id": 6171872, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/2wfQM.jpg?s=128&g=1", "display_name": "StarSheriff", "link": "https://stackoverflow.com/users/6171872/starsheriff"}, "is_accepted": true, "score": 7, "last_activity_date": 1513867052, "last_edit_date": 1513867052, "creation_date": 1513856768, "answer_id": 47924312, "question_id": 47923080, "link": "https://stackoverflow.com/questions/47923080/how-to-require-a-trait-in-another-trait-correctly/47924312#47924312", "title": "How to require a trait in another trait correctly?", "body": "<p>It sounds like you want <code>ValTrait</code> to be a <strong>supertrait</strong> of <code>ValRequireTrait</code>. A good introduction can be found in <a href=\"https://doc.rust-lang.org/book/second-edition/ch19-03-advanced-traits.html#supertraits-to-use-one-traits-functionality-within-another-trait\" rel=\"noreferrer\">the Rust book (2nd edition)</a>:</p>\n\n<blockquote>\n  <p>Sometimes, we may want a trait to be able to rely on another trait also being implemented wherever our trait is implemented, so that our trait can use the other trait\u2019s functionality. The required trait is a supertrait of the trait we\u2019re implementing.</p>\n</blockquote>\n\n<p>If you change this line:</p>\n\n<pre><code>trait ValRequireTrait&lt;T: ValTrait = Self&gt; {}\n</code></pre>\n\n<p>to this, it compiles fine:</p>\n\n<pre><code>trait ValRequireTrait&lt;T: ValTrait = Self&gt;: ValTrait&lt;T&gt; {}\n</code></pre>\n"}], "owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2812, "favorite_count": 1, "accepted_answer_id": 47924312, "answer_count": 1, "score": 9, "last_activity_date": 1513867052, "creation_date": 1513852668, "last_edit_date": 1513867000, "question_id": 47923080, "link": "https://stackoverflow.com/questions/47923080/how-to-require-a-trait-in-another-trait-correctly", "title": "How to require a trait in another trait correctly?", "body": "<p>I tried to write two traits where one requires another to be implemented and got this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `T: ValTrait` is not satisfied\n  --&gt; src/main.rs:20:1\n   |\n20 | / fn get&lt;T: ValRequireTrait + std::fmt::Debug&gt;(_t: T) {\n21 | |     println!(\"{:?}\", T::VAL);\n22 | | }\n   | |_^ the trait `ValTrait` is not implemented for `T`\n   |\n   = help: consider adding a `where T: ValTrait` bound\n   = note: required by `ValRequireTrait`\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=3eaf27b96d59eddfec085a90687053cb&amp;version=stable\" rel=\"nofollow noreferrer\">The code</a>:</p>\n\n<pre><code>trait ValTrait&lt;T = Self&gt; {\n    const VAL: T;\n}\n\ntrait ValRequireTrait&lt;T: ValTrait = Self&gt; {}\n\n#[derive(Debug, Copy, Clone)]\nstruct A {\n    field: u64,\n}\n\nimpl ValTrait for A {\n    const VAL: A = A {\n        field: 0u64\n    };\n}\nimpl ValRequireTrait for A {}\n\n\nfn get&lt;T: ValRequireTrait + std::fmt::Debug&gt;(_t: T) {\n    println!(\"{:?}\", T::VAL);\n}\n\nfn main() {\n    let a = A { field: 6u64 };\n    get(a);\n}\n</code></pre>\n\n<p>How to do this correctly? If I do what the compiler says I will not need the <code>ValRequireTrait</code> because it will be useless. I wanted <code>ValRequireTrait</code> to be a mark that the structure implements enough methods as I need. </p>\n\n<p>In other words, I expect such a requirement be transitive so when in <code>get()</code> function I require one trait (<code>ValRequireTrait</code>), others (<code>ValTrait</code>) will be required automatically without any specification in the code as compiler wants.</p>\n"}, {"tags": ["multithreading", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1513828677, "post_id": 47917343, "comment_id": 82803347, "body": "<a href=\"https://stackoverflow.com/q/27791532/155423\">How do I create a global, mutable singleton?</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1513828718, "post_id": 47917343, "comment_id": 82803352, "body": "<i>How do I prevent a thread from closing once the function that created it returns</i> \u2014 that&#39;s already the behavior of <code>thread::spawn</code>."}, {"owner": {"reputation": 300, "user_id": 1019845, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/82ad0f5b8b10f5edf1c0b25a68ac68fb?s=128&d=identicon&r=PG", "display_name": "Marius", "link": "https://stackoverflow.com/users/1019845/marius"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1513829808, "post_id": 47917343, "comment_id": 82803583, "body": "@Shepmaster You are correct. I was mistaken, it seems that the threads remain open but on program exit were automatically closed. Also, thanks for the link"}], "answers": [{"tags": [], "owner": {"reputation": 300, "user_id": 1019845, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/82ad0f5b8b10f5edf1c0b25a68ac68fb?s=128&d=identicon&r=PG", "display_name": "Marius", "link": "https://stackoverflow.com/users/1019845/marius"}, "is_accepted": true, "score": 2, "last_activity_date": 1513965598, "last_edit_date": 1513965598, "creation_date": 1513834096, "answer_id": 47918467, "question_id": 47917343, "link": "https://stackoverflow.com/questions/47917343/background-worker-thread-and-synchronization-in-rust/47918467#47918467", "title": "Background worker thread and synchronization in Rust", "body": "<p>I think I figured out a way to implement what I wanted in Rust without needing to use global variables.</p>\n\n<pre><code>struct Device {\n    sender: Sender&lt;u8&gt;, //other stuff\n}\n\ntrait New {\n    fn new() -&gt; Self;\n}\n\ntrait SendCommand {\n    fn send_command(&amp;self, u8);\n}\n\nimpl New for Device {\n    fn new() -&gt; Device {\n        let (tx, rx) = channel();\n        let device = Device { sender: tx };\n        thread::spawn(move || {\n            loop {\n                let cmd = rx.recv().unwrap();\n                println!(\"Command: {}\", cmd); //process commands here\n            }\n        });\n        return device;\n    }\n}\n\nimpl SendCommand for Device {\n    fn send_command(&amp;self, cmd: u8) {\n        self.sender.send(cmd).unwrap();\n    }\n}\n\nfn main() {\n    let dev = Device::new(); //create the device\n    for i in 0..10 {\n        dev.send_command(i); //send commands\n        sleep(Duration::from_millis(50));\n    }\n    loop {}\n}\n</code></pre>\n"}], "owner": {"reputation": 300, "user_id": 1019845, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/82ad0f5b8b10f5edf1c0b25a68ac68fb?s=128&d=identicon&r=PG", "display_name": "Marius", "link": "https://stackoverflow.com/users/1019845/marius"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1303, "favorite_count": 1, "accepted_answer_id": 47918467, "answer_count": 1, "score": 2, "last_activity_date": 1513965598, "creation_date": 1513825625, "last_edit_date": 1513828581, "question_id": 47917343, "link": "https://stackoverflow.com/questions/47917343/background-worker-thread-and-synchronization-in-rust", "title": "Background worker thread and synchronization in Rust", "body": "<p>I'm trying to write a simple library that has a background worker thread that processes commands when the library functions are called. </p>\n\n<p>The way that I would normally do it in C is have a global semaphore handle that the worker would block on. The functions would give the semaphore after they sent a command, at which point the worker would unblock etc... There are other ways but this is just an example.</p>\n\n<p>I have a few questions about how I can achieve something similar with Rust. </p>\n\n<ol>\n<li><p>How do I prevent a thread from closing once the function that created it returns? e.g the thread would be created when I call <code>init()</code>, but would exit when <code>init()</code> returns, how to prevent this?</p></li>\n<li><p>How to have a have a global synchronization method between the worker thread and function calls? I was looking at using channels but how do I access the <code>rx</code> from the thread and multiple <code>tx</code>'s from different functions? e.g <code>send_cmd_a()</code>, <code>send_cmd_b()</code> to the same thread</p></li>\n</ol>\n\n<p>Pseudo code of what I'm trying to accomplish:</p>\n\n<pre><code>static (tx, rx) = mpsc::channel(); //how to do something like this?\n\nfn init() {\n    thread::spawn(|| {\n        loop {\n            let cmd = rx.recv().unwrap(); //blocks till there is data\n                                          //process data....\n            if cmd == \"exit\" {\n                return;\n            }\n        }\n    });\n}\n\nfn send_cmd_a() {\n    //Do a bunch of other stuff...\n    tx.send(\"cmd_a\").unwrap();\n}\n\nfn exit() {\n    tx.send(\"exit\").unwrap();\n}\n</code></pre>\n\n<p>Do I have to create one big object that encapsulates all of this, thus owning the synchronization mechanism? (still doesn't answer question #1) </p>\n\n<p>What would be the preferred way of doing something like this in Rust? </p>\n"}, {"tags": ["multithreading", "rust", "mutex"], "answers": [{"comments": [{"owner": {"reputation": 21, "user_id": 5065509, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/934d39680bee908f5bfcdb5f3136159d?s=128&d=identicon&r=PG&f=1", "display_name": "Bretana", "link": "https://stackoverflow.com/users/5065509/bretana"}, "edited": false, "score": 0, "creation_date": 1513860337, "post_id": 47916954, "comment_id": 82818132, "body": "Thanks!  I kinda understood that if the if a lock fall out of scope, then it is released, but I could figure it out how to make it happen to the write lock. The drop is just what I need."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 5, "last_activity_date": 1513822808, "last_edit_date": 1513822808, "creation_date": 1513822238, "answer_id": 47916954, "question_id": 47916718, "link": "https://stackoverflow.com/questions/47916718/how-to-unlock-an-rwlock/47916954#47916954", "title": "How to &quot;unlock&quot; an RwLock?", "body": "<p>To release a lock, you let it fall out of scope or explicitly invoke its destructor by calling <a href=\"https://doc.rust-lang.org/stable/std/mem/fn.drop.html\" rel=\"nofollow noreferrer\"><code>drop</code></a>.</p>\n\n<p>Here's how your program could be written using <code>drop</code> in two places:</p>\n\n<pre><code>fn main() {\n    use std::sync::{Arc, RwLock};\n    use std::sync::mpsc::channel;\n    use std::thread;\n    use std::time::Duration;\n\n    const N: usize = 503;\n    const STOP_POINT: usize = 100;\n\n    let n = Arc::new(RwLock::new(1));\n\n    let (sender, receiver) = channel();\n\n    for i in 1..N {\n        let (n_c, channel) = (n.clone(), sender.clone());\n        // println!(\"Thread n.{} beeing created!\", i);\n\n        thread::Builder::new()\n            .name(i.to_string())\n            .spawn(move || {\n                loop {\n                    let mut read_only = n_c.read().unwrap();\n                    let say_my_name = (*thread::current().name().unwrap()).to_string();\n\n                    // println!(\"Thread {} says: gonna try!\", say_my_name);\n                    while (*read_only % N) != i {\n                        if *read_only == 0 {\n                            break;\n                        }\n\n                        drop(read_only); // release the lock before sleeping\n                        // println!(\"Thread {} says: aint mine!\", say_my_name);\n                        thread::sleep(Duration::from_millis(1));\n                        read_only = n_c.read().unwrap();\n                    }\n\n                    println!(\"Thread {} says: my turn!\", say_my_name);\n                    drop(read_only); // release the read lock before taking a write lock\n                    let mut ref_to_num = n_c.write().unwrap();\n                    *ref_to_num += 1;\n\n                    if *ref_to_num == STOP_POINT {\n                        channel.send(say_my_name).unwrap();\n                        break;\n                    }\n                }\n            })\n            .expect(\"failed to spawn a thread\");\n        // println!(\"Thread n.{} created!\", i);\n    }\n\n    println!(\"{}\", receiver.recv().unwrap());\n}\n</code></pre>\n\n<p>Note that if we don't reassign <code>read_lock</code> in the <code>while</code> loop, the compiler will give an error because <code>read_lock</code> doesn't hold a valid value after we call <code>drop(read_lock)</code>. Rust is fine with local variables that are temporarily uninitialized, but of course we need to reinitialize them before we can use them again.</p>\n\n<p>Here's how the thread's main loop could be written to use a scope to replace one of the <code>drop</code>s:</p>\n\n<pre><code>loop {\n    let say_my_name = (*thread::current().name().unwrap()).to_string();\n    {\n        let mut read_only = n_c.read().unwrap();\n\n        // println!(\"Thread {} says: gonna try!\", say_my_name);\n        while (*read_only % N) != i {\n            if *read_only == 0 {\n                break;\n            }\n\n            drop(read_only);\n            thread::sleep(Duration::from_millis(1));\n            // println!(\"Thread {} says: aint mine!\", say_my_name);\n            read_only = n_c.read().unwrap();\n        }\n\n        println!(\"Thread {} says: my turn!\", say_my_name);\n    } // read_only is dropped here\n\n    let mut ref_to_num = n_c.write().unwrap();\n    *ref_to_num += 1;\n\n    if *ref_to_num == STOP_POINT {\n        channel.send(say_my_name).unwrap();\n        break;\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 21, "user_id": 5065509, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/934d39680bee908f5bfcdb5f3136159d?s=128&d=identicon&r=PG&f=1", "display_name": "Bretana", "link": "https://stackoverflow.com/users/5065509/bretana"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 964, "favorite_count": 1, "answer_count": 1, "score": 2, "last_activity_date": 1513822808, "creation_date": 1513820219, "last_edit_date": 1513822735, "question_id": 47916718, "link": "https://stackoverflow.com/questions/47916718/how-to-unlock-an-rwlock", "title": "How to &quot;unlock&quot; an RwLock?", "body": "<p>I'm trying to solve the <a href=\"https://benchmarksgame.alioth.debian.org/u64q/threadring-description.html#threadring\" rel=\"nofollow noreferrer\">thread-ring</a> problem. In each thread I read the token value</p>\n\n<ul>\n<li><p>if it is not mine, check if it's the end of the program</p>\n\n<ul>\n<li>if it is then finish the thread</li>\n<li>otherwise, read again and repeat</li>\n</ul></li>\n<li><p>if it is mine (i.e. has my id) then acquire the write lock, increase the value of the token, check if it's the end then tell main thread that I finished it and finish the current thread loop</p></li>\n<li><p>If it not over, then release the write lock, and start to read again</p></li>\n</ul>\n\n<p>There is no unlock. Is there any unlock like the one I need in here?</p>\n\n<p>It seems that I should release the read lock as well, because the write lock won't happen if there is someone reading the data. Is it necessary?</p>\n\n<pre><code>fn main() {\n    use std::sync::{Arc, RwLock};\n    use std::thread;\n    use std::sync::mpsc::channel;\n\n    const N: usize = 5; //503;\n    const STOP_POINT: usize = 100;\n\n    let n = Arc::new(RwLock::new(1));\n\n    let (sender, reciever) = channel();\n\n    for i in 1..N {\n        let (n_c, channel) = (n.clone(), sender.clone());\n        // println!(\"Thread n.{} beeing created!\", i);\n\n        let a = thread::Builder::new()\n            .name(i.to_string())\n            .spawn(move || -&gt; () {\n                loop {\n                    let mut read_only = n_c.read().unwrap();\n                    let say_my_name = (*thread::current().name().unwrap()).to_string();\n\n                    // println!(\"Thread {} says: gonna try!\", say_my_name);\n                    while (*read_only % N) != i {\n                        if *read_only == 0 {\n                            break;\n                        }\n                        // println!(\"Thread {} says: aint mine!\", say_my_name);\n                        read_only = n_c.read().unwrap();\n                    } // WAIT\n\n                    println!(\"Thread {} says: my turn!\", say_my_name);\n                    let mut ref_to_num = n_c.write().unwrap();\n                    *ref_to_num += 1;\n\n                    if *ref_to_num == STOP_POINT {\n                        channel.send(say_my_name).unwrap();\n                        break;\n                    }\n                }\n                ()\n            });\n        assert_eq!(a.is_ok(), true);\n        // thread::spawn();\n        // println!(\"Thread n.{} created!\", i);\n    }\n\n    println!(\"{}\", reciever.recv().unwrap());\n}\n</code></pre>\n"}]