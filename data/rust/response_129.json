[{"tags": ["rust", "rust-diesel"], "answers": [{"comments": [{"owner": {"reputation": 3439, "user_id": 5665799, "user_type": "registered", "accept_rate": 59, "profile_image": "https://i.stack.imgur.com/YOrLl.jpg?s=128&g=1", "display_name": "Kieran E", "link": "https://stackoverflow.com/users/5665799/kieran-e"}, "edited": false, "score": 0, "creation_date": 1498682411, "post_id": 44812078, "comment_id": 76604928, "body": "That&#39;s exactly it. Thank you!"}], "tags": [], "owner": {"reputation": 35314, "user_id": 344347, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/1d83837bce9d9a2656c4f5704d40c430?s=128&d=identicon&r=PG", "display_name": "Pavel Strakhov", "link": "https://stackoverflow.com/users/344347/pavel-strakhov"}, "is_accepted": true, "score": 2, "last_activity_date": 1498682068, "creation_date": 1498682068, "answer_id": 44812078, "question_id": 44810825, "link": "https://stackoverflow.com/questions/44810825/move-diesel-methods-into-other-directories/44812078#44812078", "title": "Move Diesel methods into other directories", "body": "<p>Making a folder doesn't automatically make a Rust submodule. You need to do two things:</p>\n\n<ol>\n<li><p>Declare the module explicitly in the crate root (<code>lib.rs</code> or <code>main.rs</code>):</p>\n\n<pre><code>mod controllers;\n</code></pre></li>\n<li><p>Create <code>controllers/mod.rs</code> file and declare a submodule in it:</p>\n\n<pre><code>mod posts;\n</code></pre></li>\n</ol>\n"}], "owner": {"reputation": 3439, "user_id": 5665799, "user_type": "registered", "accept_rate": 59, "profile_image": "https://i.stack.imgur.com/YOrLl.jpg?s=128&g=1", "display_name": "Kieran E", "link": "https://stackoverflow.com/users/5665799/kieran-e"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 67, "favorite_count": 0, "accepted_answer_id": 44812078, "answer_count": 1, "score": 0, "last_activity_date": 1498682498, "creation_date": 1498677427, "last_edit_date": 1498682498, "question_id": 44810825, "link": "https://stackoverflow.com/questions/44810825/move-diesel-methods-into-other-directories", "title": "Move Diesel methods into other directories", "body": "<p>I'm following the Diesel examples guide, and my project looks exactly <a href=\"https://github.com/diesel-rs/diesel/tree/master/examples/sqlite/getting_started_step_3\" rel=\"nofollow noreferrer\">like this</a>. I want to change it so that instead of running <code>cargo run --bin publish_post 1</code>, you use <code>cargo run</code> and are presented with a loop prompting you for what action you want to run.</p>\n\n<p>I've moved everything out of <code>bin/</code> and into the <code>controllers/</code> directory.  I want to reference this in <code>main.rs</code> as <code>use controllers::post</code>, so I have access to <code>post::delete()</code>, etc.</p>\n\n<p>Once I move the files out of <code>bin/</code>, all the imports break. Likewise, I can't reference it from <code>lib.rs</code>.</p>\n\n<p>Why do none of my imports work when the files are moved?  How I could access the methods from these files?</p>\n\n<p>I want a structure like this: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>\u251c\u2500\u2500 controllers\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 posts.rs\n\u251c\u2500\u2500 lib.rs\n\u251c\u2500\u2500 main.rs\n\u251c\u2500\u2500 models.rs\n\u251c\u2500\u2500 schema.rs\n</code></pre>\n\n<p>And within <code>main.rs</code>, I want to be able to do something like:</p>\n\n<pre><code>use controllers::posts;\n\npub fn main() {\n    // pseudocode\n    loop {\n        println!(\"what action would you like to perform?\");\n        let ans = capture_input();\n\n        if ans == \"insert\" {\n            posts::insert();\n        } else if ans == \"delete\" {\n            posts::delete();\n        }\n    }\n}\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 3, "last_activity_date": 1498671575, "creation_date": 1498671575, "answer_id": 44809256, "question_id": 44809063, "link": "https://stackoverflow.com/questions/44809063/how-can-i-simplify-converting-errors-into-strings-multiple-times-in-a-function/44809256#44809256", "title": "How can I simplify converting errors into strings multiple times in a function?", "body": "<p>Well, a not too terrible option would simply be to create a function to abstract over the repetition:</p>\n\n<pre><code>use std::fmt::Display;\nuse std::iter::Iterator;\nuse std::str::FromStr;\n\nfn parse_next&lt;'a, Target, T&gt;(it: &amp;mut T) -&gt; Result&lt;Target, String&gt;\n    where\n        T: Iterator&lt;Item = &amp;'a str&gt;,\n        Target: FromStr,\n        &lt;Target as FromStr&gt;::Err: Display\n{\n    it.next().ok_or(\"Invalid line\")?.parse::&lt;Target&gt;().map_err(|e| e.to_string())\n}\n\nfn parse(line: &amp;str) -&gt; Result&lt;(usize, f64), String&gt; {\n    let mut it = line.split_whitespace();\n    Ok((parse_next(&amp;mut it)?, parse_next(&amp;mut it)?))\n}\n\nfn main() {       \n    println!(\"Results: {:?}\", parse(\"5 17.2\").unwrap())\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1498673513, "creation_date": 1498673513, "answer_id": 44809757, "question_id": 44809063, "link": "https://stackoverflow.com/questions/44809063/how-can-i-simplify-converting-errors-into-strings-multiple-times-in-a-function/44809757#44809757", "title": "How can I simplify converting errors into strings multiple times in a function?", "body": "<p>I'd introduce a dedicated error type. If <em>needed</em>, I'd then transform the error into a string once after that:</p>\n\n<pre><code>#[macro_use]\nextern crate quick_error;\n\nquick_error! {\n    #[derive(Debug)]\n    pub enum Error {\n        InvalidLine {}\n        Int(err: std::num::ParseIntError) {\n            from()\n        }\n        Float(err: std::num::ParseFloatError) {\n            from()\n        }\n    }\n}\n\nfn parse_inner(line: &amp;str) -&gt; Result&lt;(usize, f64), Error&gt; {\n    let mut it = line.split_whitespace();\n    let n = it.next().ok_or(Error::InvalidLine)?;\n    let n = n.parse()?;\n    let f = it.next().ok_or(Error::InvalidLine)?;\n    let f = f.parse()?;\n    Ok((n, f))\n}\n\nfn parse(line: &amp;str) -&gt; Result&lt;(usize, f64), String&gt; {\n    parse_inner(line).map_err(|e| e.to_string())\n}\n\nfn main() {\n    println!(\"Results: {:?}\", parse(\"5 17.2\").unwrap())\n}\n</code></pre>\n"}], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 248, "favorite_count": 0, "accepted_answer_id": 44809256, "answer_count": 2, "score": 4, "last_activity_date": 1498673575, "creation_date": 1498670848, "last_edit_date": 1498673575, "question_id": 44809063, "link": "https://stackoverflow.com/questions/44809063/how-can-i-simplify-converting-errors-into-strings-multiple-times-in-a-function", "title": "How can I simplify converting errors into strings multiple times in a function?", "body": "<p>Is there any way to simplify this code?</p>\n\n<pre><code>fn parse(line: &amp;str) -&gt; Result&lt;(usize, f64), String&gt; {\n    let mut it = line.split_whitespace();\n    let n  = it.next().ok_or(\"Invalid line\")?;\n    let n = n.parse::&lt;usize&gt;().map_err(|e| e.to_string())?;\n    let f = it.next().ok_or(\"Invalid line\")?;\n    let f = f.parse::&lt;f64&gt;().map_err(|e| e.to_string())?;\n    Ok((n, f))\n}\n\nfn main() {       \n    println!(\"Results: {:?}\", parse(\"5 17.2\").unwrap())\n}\n</code></pre>\n\n<p>In real code I need to parse 4 values in line,\nand it is boring to write <code>.map_err(|e| e.to_string())</code></p>\n\n<p>As I understand it, it is impossible to implement <code>std::convert::From</code> for <code>ParseIntError</code> / <code>ParseFloatError</code> -> <code>String</code>, because none of the types are defined in my code, am I right?</p>\n\n<p>I see one way to simplify this code:</p>\n\n<pre><code>fn econv&lt;E: ToString&gt;(e: E) -&gt; String {\n    e.to_string()\n} \n</code></pre>\n\n<p>and use <code>.map_err(econv)</code>. Are there any other options to simplify my code?</p>\n"}, {"tags": ["rust", "match"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1498633414, "post_id": 44795582, "comment_id": 76571764, "body": "the compiler tell you the opposite: it expect an integer but you give him an Option. Why to you want match <code>try</code> a integer variable with <code>Some</code> and <code>None</code> a Option variant ?"}, {"owner": {"reputation": 522, "user_id": 7253302, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/29a996c703d3166f2b2cf63c11309c9b?s=128&d=identicon&r=PG&f=1", "display_name": "LizzAlice", "link": "https://stackoverflow.com/users/7253302/lizzalice"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1498633567, "post_id": 44795582, "comment_id": 76571851, "body": "So is it an error concerning <code>x</code> and not <code>try</code>? I thought that in my case, match returned either 3, which is an i32 or 0, which is also an i32?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1498633747, "post_id": 44795582, "comment_id": 76571953, "body": "Did you read the book ? <a href=\"https://doc.rust-lang.org/stable/book/second-edition/ch02-00-guessing-game-tutorial.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/stable/book/second-edition/&hellip;</a>."}], "answers": [{"comments": [{"owner": {"reputation": 522, "user_id": 7253302, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/29a996c703d3166f2b2cf63c11309c9b?s=128&d=identicon&r=PG&f=1", "display_name": "LizzAlice", "link": "https://stackoverflow.com/users/7253302/lizzalice"}, "edited": false, "score": 0, "creation_date": 1498634372, "post_id": 44795726, "comment_id": 76572347, "body": "Thank you, unwrap_or is what I was looking for. Would this also work on a Result, meaning that it would return a 0 if the Result was an Err? Or would it return Some(Err)?"}, {"owner": {"reputation": 54533, "user_id": 94559, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ab13b7f135315a91b9ef13e073354d90?s=128&d=identicon&r=PG&f=1", "display_name": "user94559", "link": "https://stackoverflow.com/users/94559/user94559"}, "reply_to_user": {"reputation": 522, "user_id": 7253302, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/29a996c703d3166f2b2cf63c11309c9b?s=128&d=identicon&r=PG&f=1", "display_name": "LizzAlice", "link": "https://stackoverflow.com/users/7253302/lizzalice"}, "edited": false, "score": 0, "creation_date": 1498634549, "post_id": 44795726, "comment_id": 76572456, "body": "Yes, it looks like <code>Result</code> implements <a href=\"https://doc.rust-lang.org/std/result/enum.Result.html#method.unwrap_or\" rel=\"nofollow noreferrer\"><code>unwrap_or</code></a> with the same semantics."}], "tags": [], "owner": {"reputation": 54533, "user_id": 94559, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ab13b7f135315a91b9ef13e073354d90?s=128&d=identicon&r=PG&f=1", "display_name": "user94559", "link": "https://stackoverflow.com/users/94559/user94559"}, "is_accepted": true, "score": 4, "last_activity_date": 1498633495, "creation_date": 1498633495, "answer_id": 44795726, "question_id": 44795582, "link": "https://stackoverflow.com/questions/44795582/why-do-i-get-the-error-expected-integral-variable-found-option-when-matching/44795726#44795726", "title": "Why do I get the error &quot;expected integral variable, found Option&quot; when matching on an integer?", "body": "<p>I think you want this:</p>\n\n<pre><code>fn main() {\n    let try = Some(3);\n    let x = match try {\n        Some(number) =&gt; number,\n        None =&gt; 0,\n    };\n}\n</code></pre>\n\n<p>The issue is that you're trying to match an integer against <code>Some(...)</code> and <code>None</code>, which are <code>Option</code>s. This doesn't really make sense... an integer can never be <code>None</code>.</p>\n\n<p>Instead, I think you want to use the type <code>Option&lt;i32&gt;</code> and convert it to an <code>i32</code> by using a default value. The above code should accomplish that. Note that if that's all you're trying to do, this is an easier way:</p>\n\n<pre><code>let x = try.unwrap_or(0);\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": false, "score": 1, "last_activity_date": 1498633767, "creation_date": 1498633767, "answer_id": 44795808, "question_id": 44795582, "link": "https://stackoverflow.com/questions/44795582/why-do-i-get-the-error-expected-integral-variable-found-option-when-matching/44795808#44795808", "title": "Why do I get the error &quot;expected integral variable, found Option&quot; when matching on an integer?", "body": "<p>In <code>match</code> expressions the type of the value you are matching on must correspond to the variants in the block following it; in your case this means that <code>try</code> either needs to be an <code>Option</code> or the <code>match</code> block needs to have integral variants.</p>\n\n<p>I highly recommend reading <a href=\"https://doc.rust-lang.org/stable/book/\" rel=\"nofollow noreferrer\">The Rust Book</a>; Rust is strongly typed and this is one of the most basic concepts you will need to familiarize yourself with.</p>\n"}], "owner": {"reputation": 522, "user_id": 7253302, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/29a996c703d3166f2b2cf63c11309c9b?s=128&d=identicon&r=PG&f=1", "display_name": "LizzAlice", "link": "https://stackoverflow.com/users/7253302/lizzalice"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3284, "favorite_count": 1, "accepted_answer_id": 44795726, "answer_count": 2, "score": 2, "last_activity_date": 1498662924, "creation_date": 1498633066, "last_edit_date": 1498662924, "question_id": 44795582, "link": "https://stackoverflow.com/questions/44795582/why-do-i-get-the-error-expected-integral-variable-found-option-when-matching", "title": "Why do I get the error &quot;expected integral variable, found Option&quot; when matching on an integer?", "body": "<p>I am trying to use <code>match</code> in Rust. I wrote a function:</p>\n\n<pre><code>fn main() {\n    let try = 3;\n    let x = match try {\n        Some(number) =&gt; number,\n        None =&gt; 0,\n    };\n}\n</code></pre>\n\n<p>But I'm getting the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; src/main.rs:4:9\n  |\n4 |         Some(number) =&gt; number,\n  |         ^^^^^^^^^^^^ expected integral variable, found enum `std::option::Option`\n  |\n  = note: expected type `{integer}`\n             found type `std::option::Option&lt;_&gt;`\n\nerror[E0308]: mismatched types\n --&gt; src/main.rs:5:9\n  |\n5 |         None =&gt; 0,\n  |         ^^^^ expected integral variable, found enum `std::option::Option`\n  |\n  = note: expected type `{integer}`\n             found type `std::option::Option&lt;_&gt;`\n</code></pre>\n\n<p>I tried something like <code>let try: i32 = 3;</code> to make sure that <code>try</code> is an integral value, but I still get the same error. </p>\n"}, {"tags": ["rust", "rust-rocket"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1498633576, "post_id": 44795305, "comment_id": 76571854, "body": "I cannot test it now, so I post it as comment: try to put the last <code>Err(())</code> in a <code>else</code> branch. Your syntax in not valid."}, {"owner": {"reputation": 216, "user_id": 4175331, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/fRYkE.jpg?s=128&g=1", "display_name": "chenshuiluke", "link": "https://stackoverflow.com/users/4175331/chenshuiluke"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1498633834, "post_id": 44795305, "comment_id": 76572012, "body": "@Boiethios thanks man! That was the problem :)"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1498634358, "post_id": 44795305, "comment_id": 76572333, "body": "Not a good <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>."}], "answers": [{"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 3, "last_activity_date": 1498662995, "last_edit_date": 1498662995, "creation_date": 1498634138, "answer_id": 44795911, "question_id": 44795305, "link": "https://stackoverflow.com/questions/44795305/cant-return-string-from-rocket-route/44795911#44795911", "title": "Can&#39;t return String from Rocket route", "body": "<p>When you use the functional-like style, see one function as one expression. Your function <code>get_resource</code> has two expressions put side by side. The compiler does not understand anything. You must put the alternative in an <code>else</code> branch, <em>i.e.</em>: if I could get some path, do this; else this is an error:</p>\n\n<pre><code>fn get_resource(path: PathBuf) -&gt; Result&lt;String, ()&gt; { \n    if let Some(page_path) = path.to_str() {\n        match assets::get(&amp;format!(\"{}/{}\", \"resources\", page_path)) {\n            Ok(page) =&gt; Ok(utf8_to_string(page)),\n            Err(e) =&gt; Err(()),\n        }\n    } else {\n        Err(())\n    }\n}\n</code></pre>\n\n<p>In other words, you can see a function as a logic tree where each <code>if</code> or <code>match</code> block is a set of branches. The program will follow a path in this tree depending on the input: so you must have only one trunk, otherwise it does not make sense.</p>\n"}], "owner": {"reputation": 216, "user_id": 4175331, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/fRYkE.jpg?s=128&g=1", "display_name": "chenshuiluke", "link": "https://stackoverflow.com/users/4175331/chenshuiluke"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 268, "favorite_count": 0, "accepted_answer_id": 44795911, "answer_count": 1, "score": 0, "last_activity_date": 1506694107, "creation_date": 1498632104, "last_edit_date": 1506694107, "question_id": 44795305, "link": "https://stackoverflow.com/questions/44795305/cant-return-string-from-rocket-route", "title": "Can&#39;t return String from Rocket route", "body": "<p>I'm trying to create a Rocket route that returns a string to the client, but I can't get it to work. So far, this is what I have:</p>\n\n<pre><code>#![feature(plugin)]\n#![plugin(rocket_codegen)]\n#[macro_use]\n\nextern crate serde_derive;\nextern crate toml;\nextern crate rocket;\n\nmod utilities;\nmod pipeline_config;\nmod assets;\n\nuse std::path::PathBuf;\n\n#[get(\"/resources/&lt;path..&gt;\")]\nfn get_resource(path: PathBuf) -&gt; Result&lt;String, ()&gt; {\n    if let Some(page_path) = path.to_str() {\n        match assets::get(&amp;format!(\"{}/{}\", \"resources\", page_path)) {\n            Ok(page) =&gt; Ok(utf8_to_string(page)),\n            Err(e) =&gt; Err(()),\n        }\n    }\n    Err(())\n}\n\nfn main() {\n    let rocket_obj = rocket::ignite();\n    rocket_obj.mount(\"/\", routes![get_resource]).launch();\n}\n\npub fn utf8_to_string(bytes: &amp;[u8]) -&gt; String {\n    let vector: Vec&lt;u8&gt; = Vec::from(bytes);\n    String::from_utf8(vector).unwrap()\n}\n</code></pre>\n\n<p>It looks like it should work, but it gives me an error <code>expected (), found enum std::result::Result</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:18:9\n   |\n18 | /         match assets::get(&amp;format!(\"{}/{}\", \"resources\", page_path)) {\n19 | |             Ok(page) =&gt; Ok(utf8_to_string(page)),\n20 | |             Err(e) =&gt; Err(()),\n21 | |         }\n   | |         ^- help: try adding a semicolon: `;`\n   | |_________|\n   |           expected (), found enum `std::result::Result`\n   |\n   = note: expected type `()`\n              found type `std::result::Result&lt;std::string::String, ()&gt;`\n</code></pre>\n\n<p>which makes no sense to me because I'm returning a <code>Result</code> with a <code>String</code>.</p>\n"}, {"tags": ["rust", "traits"], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 4, "last_activity_date": 1498662708, "last_edit_date": 1498662708, "creation_date": 1498619702, "answer_id": 44793049, "question_id": 44790642, "link": "https://stackoverflow.com/questions/44790642/unsatisfied-trait-bound-involving-associated-type/44793049#44793049", "title": "Unsatisfied trait bound involving associated type", "body": "<p>As of Rust 1.18, the compiler requires you to write these bounds in order for the types to be <em>well-formed</em>. Basically, in order for the bound <code>T: A&lt;I = bool&gt;</code> to hold, it is required that the bound <code>T::F: Q&lt;bool&gt;</code> also holds. For example, if some type tried to implement <code>A</code> like this:</p>\n\n<pre><code>struct Y;\nstruct Z;\n\nimpl A for Y {\n    type I = bool;\n    type F = Z; // Z does not implement Q&lt;bool&gt;\n}\n</code></pre>\n\n<p>then <code>Y</code> would not be well-formed, because the bound <code>T::F: Q&lt;bool&gt;</code> doesn't hold (and indeed, the compiler gives an error on the <code>impl</code>). But frustratingly, for now, the bound <code>T::F: Q&lt;bool&gt;</code> must be given explicitly whenever the bound <code>T: A&lt;I = bool&gt;</code> appears. In some way, it reassures the compiler that, hey, <code>T::I = bool</code> there too!</p>\n\n<blockquote>\n  <p>Why is the trait bound automatically assumed with line (1) or generic types, but not with line (2)?</p>\n</blockquote>\n\n<p>With line (1), the bound would be <code>T::F: Q&lt;T::I&gt;</code>, which is <em>precisely</em> the requirement of <code>A</code> (with <code>T</code> substituted for <code>Self</code>). Indeed, we can also write the bound equivalently like this:</p>\n\n<pre><code>pub trait A\nwhere\n    Self::F: Q&lt;Self::I&gt;,\n{\n    type I;\n    type F;\n}\n</code></pre>\n\n<p>With line (2), the bound <code>T::F: Q&lt;bool&gt;</code> may look like it's just a matter of replacing <code>T::I</code> with <code>bool</code>, but that difference is important to the compiler; <code>T::I</code> is an associated type, while <code>bool</code> is a concrete type.</p>\n\n<hr>\n\n<p>The Rust developers are considering improving the compiler so that bounds like this don't have to have to be repeated all over the place by <a href=\"https://internals.rust-lang.org/t/lang-team-minutes-implied-bounds/4905\" rel=\"nofollow noreferrer\">having the compiler infer those bounds</a>. </p>\n"}], "owner": {"reputation": 53, "user_id": 8222779, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d977d85abab5cc99b89b0fb0fa19607c?s=128&d=identicon&r=PG&f=1", "display_name": "fagu", "link": "https://stackoverflow.com/users/8222779/fagu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 105, "favorite_count": 0, "accepted_answer_id": 44793049, "answer_count": 1, "score": 3, "last_activity_date": 1498662708, "creation_date": 1498600803, "last_edit_date": 1498602369, "question_id": 44790642, "link": "https://stackoverflow.com/questions/44790642/unsatisfied-trait-bound-involving-associated-type", "title": "Unsatisfied trait bound involving associated type", "body": "<p>The code</p>\n\n<pre><code>pub trait Q&lt;S&gt; {\n    fn f();\n}\n\npub trait A {\n    type I;\n    type F: Q&lt;Self::I&gt;;\n}\n\n// this works (1)\n//\n// pub struct S&lt;T&gt;\n// where\n//     T: A\n// {                 \n\n// unsatisfied trait bound (2)\npub struct S&lt;T&gt;                                  \nwhere\n    T: A&lt;I = bool&gt;,\n{\n\n    t: T,\n}\n</code></pre>\n\n<p>fails to compile:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `&lt;T as A&gt;::F: Q&lt;bool&gt;` is not satisfied\n  --&gt; src/main.rs:18:1\n   |\n18 | / pub struct S&lt;T&gt;                                  \n19 | | where\n20 | |     T: A&lt;I = bool&gt;,\n21 | | {\n22 | |     t: T,\n23 | | }\n   | |_^ the trait `Q&lt;bool&gt;` is not implemented for `&lt;T as A&gt;::F`\n   |\n   = help: consider adding a `where &lt;T as A&gt;::F: Q&lt;bool&gt;` bound\n   = note: required by `A`\n</code></pre>\n\n<p>Interestingly, it works if you use the commented out line (1) instead of (2). It also works if you turn the associated type <code>I</code> into a generic type (write <code>trait A&lt;I&gt;</code> and <code>A&lt;bool&gt;</code>).</p>\n\n<pre><code>impl&lt;T&gt; S&lt;T&gt;\n    where T: A\n{\n    fn g() {\n        T::F::f()\n    }\n}\n</code></pre>\n\n<p>succeeds with line (1) or generic type <code>I</code>, so <code>T::F : Q&lt;bool&gt;</code> is indeed assumed in those cases.</p>\n\n<p>Why is the trait bound automatically assumed with line (1) or generic types, but not with line (2)?</p>\n\n<p>Can we fix the above code without appending <code>where T::F: Q&lt;bool&gt;</code> every time we use <code>T: A&lt;I=bool&gt;</code>?</p>\n"}, {"tags": ["struct", "rust"], "comments": [{"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1538921843, "post_id": 44789286, "comment_id": 92305643, "body": "You should first check if your use case isn&#39;t simply covered by <a href=\"https://serde.rs/\" rel=\"nofollow noreferrer\"><code>serde</code></a>."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1538920209, "last_edit_date": 1538920209, "creation_date": 1498597904, "answer_id": 44789968, "question_id": 44789286, "link": "https://stackoverflow.com/questions/44789286/how-can-i-set-a-struct-field-value-by-string-name/44789968#44789968", "title": "How can I set a struct field value by string name?", "body": "<p>With macros, I always advocate starting from the direct code, then seeing what duplication there is. In this case, we'd start with</p>\n\n<pre><code>fn load_data(&amp;mut self, data: &amp;HashMap&lt;String, String&gt;) {\n    if let Some(v) = data.get(\"x\") {\n        self.x = v.clone();\n    }\n    if let Some(v) = data.get(\"y\") {\n        self.y = v.clone();\n    }\n    if let Some(v) = data.get(\"z\") {\n        self.z = v.clone();\n    }\n}\n</code></pre>\n\n<p>Note the number of differences:</p>\n\n<ol>\n<li>The struct must take <code>&amp;mut self</code>.</li>\n<li>It's inefficient to check if a value is there and then get it separately.</li>\n<li>We need to clone the value because we only only have a reference.</li>\n<li>We cannot store an <code>Option</code> in a <code>String</code>.</li>\n</ol>\n\n<p>Once you have your code working, you can see how to abstract things. <em>Always</em> start by trying to use \"lighter\" abstractions (functions, traits, etc.). Only after exhausting that, I'd start bringing in macros. Let's start by using <code>stringify</code></p>\n\n<pre><code>if let Some(v) = data.get(stringify!(x)) {\n    self.x = v.clone();\n}\n</code></pre>\n\n<p>Then you can extract out a macro:</p>\n\n<pre><code>macro_rules! thing {\n    ($this: ident, $data: ident, $($name: ident),+) =&gt; {\n        $(\n            if let Some(v) = $data.get(stringify!($name)) {\n                $this.$name = v.clone();\n            } \n        )+\n    };\n}\n\nimpl Container {\n    fn load_data(&amp;mut self, data: &amp;HashMap&lt;String, String&gt;) {\n        thing!(self, data, x, y, z);\n    }\n}\n\nfn main() {\n    let mut c = Container::default();\n    let d: HashMap&lt;_, _&gt; = vec![(\"x\".into(), \"alpha\".into())].into_iter().collect(); \n\n    c.load_data(&amp;d);\n\n    println!(\"{:?}\", c);\n}\n</code></pre>\n\n<hr>\n\n<p>Full disclosure: I don't think this is a good idea.</p>\n"}], "owner": {"reputation": 88, "user_id": 2213013, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/JW2f7.jpg?s=128&g=1", "display_name": "Maxie", "link": "https://stackoverflow.com/users/2213013/maxie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1217, "favorite_count": 0, "accepted_answer_id": 44789968, "answer_count": 1, "score": 3, "last_activity_date": 1538920209, "creation_date": 1498595211, "last_edit_date": 1498596445, "question_id": 44789286, "link": "https://stackoverflow.com/questions/44789286/how-can-i-set-a-struct-field-value-by-string-name", "title": "How can I set a struct field value by string name?", "body": "<p>Out of habit from interpreted programming languages, I want to rewrite many values based on their key. I assumed that I would store all the information in the struct prepared for this project. So I started iterating:</p>\n\n<pre><code>struct Container {\n    x: String,\n    y: String,\n    z: String\n}\nimpl Container {\n    // (...)    \n    fn load_data(&amp;self, data: &amp;HashMap&lt;String, String&gt;) {\n        let valid_keys = vec_of_strings![ // It's simple vector with Strings\n            \"x\", \"y\", \"z\"\n        ] ;\n        for key_name in &amp;valid_keys {\n            if data.contains_key(key_name) {\n                self[key_name] = Some(data.get(key_name);\n                // It's invalid of course but\n                // I do not know how to write it correctly.\n                // For example, in PHP I would write it like this:\n                // $this[$key_name] = $data[$key_name];\n            }\n        }\n    }\n    // (...)\n}\n</code></pre>\n\n<p>Maybe macros? I tried to use them. <code>key_name</code> is always interpreted as it is, I cannot get value of <code>key_name</code> instead.</p>\n\n<p>How can I do this without repeating the code for each value?</p>\n"}, {"tags": ["boolean", "rust"], "comments": [{"owner": {"reputation": 157, "user_id": 6879615, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d9e8e439eff6de054928592076c4d3dd?s=128&d=identicon&r=PG&f=1", "display_name": "asteriskTheServer", "link": "https://stackoverflow.com/users/6879615/asterisktheserver"}, "edited": false, "score": 6, "creation_date": 1498591180, "post_id": 44788026, "comment_id": 76557180, "body": "You can dereference the value with <code>*</code> see <a href=\"https://rustbyexample.com/flow_control/match/destructuring/destructure_pointers.html\" rel=\"nofollow noreferrer\">rust by example</a> for the specifics."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 5, "last_activity_date": 1498595065, "creation_date": 1498595065, "answer_id": 44789254, "question_id": 44788026, "link": "https://stackoverflow.com/questions/44788026/expected-type-bool-found-type-bool/44789254#44789254", "title": "Expected type `bool`, found type `&amp;bool`", "body": "<blockquote>\n  <p>take a <code>bool</code> from a <code>Vec&lt;bool&gt;</code></p>\n</blockquote>\n\n<p>Just do that:</p>\n\n<pre><code>let foo = vec![true];\nif foo[0] { /* ... */ }\n</code></pre>\n\n<p><code>bool</code> implements <a href=\"https://doc.rust-lang.org/std/marker/trait.Copy.html\" rel=\"noreferrer\"><code>Copy</code></a>, so indexing the array will copy the value out.</p>\n\n<p>If you had a reference to the boolean inside the vector, you will need to dereference it:</p>\n\n<pre><code>let foo = vec![true];\nif let Some(val) = foo.last() {\n    if *val { /* ... */ }\n}\n</code></pre>\n\n<p>Or</p>\n\n<pre><code>let foo = vec![true];\nif let Some(&amp;val) = foo.last() {\n    if val { /* ... */ }\n}\n</code></pre>\n"}], "owner": {"reputation": 183, "user_id": 6681281, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/088985880d56731fa98ac975cd79cf78?s=128&d=identicon&r=PG&f=1", "display_name": "JaM", "link": "https://stackoverflow.com/users/6681281/jam"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1831, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1498595065, "creation_date": 1498590461, "last_edit_date": 1498594931, "question_id": 44788026, "link": "https://stackoverflow.com/questions/44788026/expected-type-bool-found-type-bool", "title": "Expected type `bool`, found type `&amp;bool`", "body": "<p>I would like to take a <code>bool</code> from a <code>Vec&lt;bool&gt;</code> and compare it in an if statement. How do I solve the following error?</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>  |\n7 |             if cell {\n  |                ^^^^ expected bool, found &amp;bool\n  |\n  = note: expected type `bool`\n             found type `&amp;bool`\n</code></pre>\n\n<p><code>if cell.clone()</code> works for me but seems a bit hackisch.</p>\n"}, {"tags": ["generics", "types", "rust", "traits"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 2, "creation_date": 1498577299, "post_id": 44784147, "comment_id": 76549205, "body": "<i>&quot;compiler starts to complain&quot;</i> It will be much easier to help if you provide these complaints. :) I also wonder what the main context is, since that last function signature is quite unlike what you mentioned before that."}, {"owner": {"reputation": 235, "user_id": 2912280, "user_type": "registered", "accept_rate": 60, "profile_image": "https://graph.facebook.com/1085475776/picture?type=large", "display_name": "Ivan Bratoev", "link": "https://stackoverflow.com/users/2912280/ivan-bratoev"}, "edited": false, "score": 0, "creation_date": 1498640809, "post_id": 44784147, "comment_id": 76576401, "body": "I said the compiler starts to complain, because, at first it&#39;s about not being sized, them It&#39;s about not not being able to specify additional traits with &quot;+&quot; if they are not sync or send, them It&#39;s about not being able to use generics in this context, etc. etc."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1498663545, "post_id": 44784147, "comment_id": 76593418, "body": "You haven&#39;t <b>shown us in your question</b> what kind of code you have tried that is causing the problem. All you have done is show us code that <i>works</i>, then said &quot;if I add in some generics, I get some errors&quot;, without showing <i>how</i> those generics were added or the exact complete errors that were generated."}], "answers": [{"comments": [{"owner": {"reputation": 235, "user_id": 2912280, "user_type": "registered", "accept_rate": 60, "profile_image": "https://graph.facebook.com/1085475776/picture?type=large", "display_name": "Ivan Bratoev", "link": "https://stackoverflow.com/users/2912280/ivan-bratoev"}, "edited": false, "score": 0, "creation_date": 1498919045, "post_id": 44846416, "comment_id": 76703522, "body": "I suppose the box will help, but then comes another problem. Deserialize requires one lifetime parameter, which refers to the arguments of the function. It definitely must not be one shared lifetime across the entire map, that&#39;s a leak. Is it possible for the lifetimes to be declared for each function separately?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 235, "user_id": 2912280, "user_type": "registered", "accept_rate": 60, "profile_image": "https://graph.facebook.com/1085475776/picture?type=large", "display_name": "Ivan Bratoev", "link": "https://stackoverflow.com/users/2912280/ivan-bratoev"}, "edited": false, "score": 1, "creation_date": 1498921818, "post_id": 44846416, "comment_id": 76704293, "body": "<i>&quot;but then comes another problem&quot;</i> \u2014 and this is why it is difficult for anyone to help you effectively without a <a href=\"https://stackoverflow.com/help/mcve\">Minimal, Complete, and Verifiable Example</a>."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 1, "last_activity_date": 1498828735, "last_edit_date": 1498828735, "creation_date": 1498825368, "answer_id": 44846416, "question_id": 44784147, "link": "https://stackoverflow.com/questions/44784147/using-generics-as-arguments-to-a-functions-inside-a-collection/44846416#44846416", "title": "Using generics as arguments to a functions inside a collection", "body": "<p>If you need to the map to be heterogeneous, i.e. to hold different versions of the function instantiated with different types, then you will need to change its signature.</p>\n\n<p>For any <em>given</em> type <code>R</code>, if the type is <code>Sized</code>, then this function will work. But for <em>all possible</em> <code>R</code>s, the compiler cannot know the size because each could be different. </p>\n\n<p>To get that to work, you will need to use a trait object like <code>Box&lt;Serialize&gt;</code> or <code>&amp;Serialize</code>.</p>\n\n<p>You are also likely to have other problems. But your question and code example are not complete enough to make observations beyond those I have made above, related to \"objects not being sized and so on\".</p>\n"}], "owner": {"reputation": 235, "user_id": 2912280, "user_type": "registered", "accept_rate": 60, "profile_image": "https://graph.facebook.com/1085475776/picture?type=large", "display_name": "Ivan Bratoev", "link": "https://stackoverflow.com/users/2912280/ivan-bratoev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 66, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1498828735, "creation_date": 1498577044, "last_edit_date": 1498825484, "question_id": 44784147, "link": "https://stackoverflow.com/questions/44784147/using-generics-as-arguments-to-a-functions-inside-a-collection", "title": "Using generics as arguments to a functions inside a collection", "body": "<p>I am trying to store several functions inside a HashMap inside a struct. \nIt works if I use solid types:</p>\n\n<pre><code>extern crate bson;\nextern crate serde;\n\nuse std::sync::Arc;\nuse std::collections::HashMap;\n\ntype CBack = Fn(Vec&lt;bson::Array&gt;) -&gt; Vec&lt;u8&gt; + Send + Sync + 'static;\n\nstruct Struct {\n    cback_map: HashMap&lt;String, Arc&lt;CBack&gt;&gt;\n}\n\nfn main() {}\n</code></pre>\n\n<p>When I start using generics for the arguments and return type of the closures, the compiler starts to complain about objects not being sized and so on. I want, instead, my map to hold closures with the following signature:</p>\n\n<pre><code>fn fun&lt;'de, D, R&gt;(_: D) -&gt; R\n   where D: serde::Deserialize&lt;'de&gt;, R: serde::Serialize {}\n</code></pre>\n\n<p>How do I define that map properly?</p>\n"}, {"tags": ["oop", "rust", "traits"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 4, "creation_date": 1498576742, "post_id": 44783925, "comment_id": 76548783, "body": "You&#39;re looking for <a href=\"https://doc.rust-lang.org/book/second-edition/ch17-02-trait-objects.html\" rel=\"nofollow noreferrer\">trait objects</a>."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 4, "creation_date": 1498578619, "post_id": 44783925, "comment_id": 76550136, "body": "So, Rust is very much <i>Composition Over Inheritance</i>."}, {"owner": {"reputation": 181215, "user_id": 82294, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5c5f910416e2b92bb73fa59c56fe695d?s=128&d=identicon&r=PG", "display_name": "Dietrich Epp", "link": "https://stackoverflow.com/users/82294/dietrich-epp"}, "edited": false, "score": 9, "creation_date": 1498584207, "post_id": 44783925, "comment_id": 76553471, "body": "These kinds of questions, &quot;How do I do class inheritance in Rust?&quot; are usually solved best by taking a step back, looking at the actual problem you&#39;re trying to solve (the <i>real</i> problem, not a fake problem with <code>foo</code> and <code>xxx</code> for function names) and looking at your new toolbox. If you try to translate class inheritance directly into Rust code, you&#39;ll figure out a way to make it work, but the code may be very clunky compared to more idiomatic Rust code."}], "answers": [{"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 7, "creation_date": 1498634755, "post_id": 44786419, "comment_id": 76572593, "body": "The most important part of your answer is this: &quot;Using a new language should involve checking out new paradigms&quot;, in my opinion. Too often forgotten."}, {"owner": {"reputation": 1618, "user_id": 2131957, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Rh43j.png?s=128&g=1", "display_name": "Yuri Feldman", "link": "https://stackoverflow.com/users/2131957/yuri-feldman"}, "edited": false, "score": 0, "creation_date": 1609774435, "post_id": 44786419, "comment_id": 115920413, "body": "&quot;Inheritnace for the purposes of code reuse&quot; - Why is it not a good idea? Isn&#39;t it one of the main points in OOP?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1618, "user_id": 2131957, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Rh43j.png?s=128&g=1", "display_name": "Yuri Feldman", "link": "https://stackoverflow.com/users/2131957/yuri-feldman"}, "edited": false, "score": 1, "creation_date": 1609774589, "post_id": 44786419, "comment_id": 115920482, "body": "@YuriFeldman the question is about C++ <i>virtual</i> functions, which have no code to reuse."}, {"owner": {"reputation": 109956, "user_id": 159145, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/r8ryC.png?s=128&g=1", "display_name": "Dai", "link": "https://stackoverflow.com/users/159145/dai"}, "edited": false, "score": 0, "creation_date": 1612499800, "post_id": 44786419, "comment_id": 116791730, "body": "@Shepmaster Only if you define &quot;code&quot; as the <i>body</i> of a function. I feel that &quot;interfaces&quot; (in the C++ sense, not the Java sense) also count as &quot;code&quot; insofar as adding them to a type still constitutes a lot of tedium for the programmer (when you consider line-of-business software where a type may have dozens of members). At least Rust has traits/mixins, but this isn&#39;t a perfect solution."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1498584500, "creation_date": 1498584500, "answer_id": 44786419, "question_id": 44783925, "link": "https://stackoverflow.com/questions/44783925/what-is-the-rust-equivalent-to-cs-virtual-functions/44786419#44786419", "title": "What is the Rust equivalent to C++&#39;s virtual functions?", "body": "<blockquote>\n  <p>keep some functions undefined</p>\n</blockquote>\n\n<p>I'm adding the implicit \"and have some functions that call that to-be-defined function\".</p>\n\n<p>As <a href=\"https://stackoverflow.com/questions/44783925/what-is-the-rust-equivalent-to-cs-virtual-functions#comment76548783_44783925\">E_net4 says</a>, use a <a href=\"https://doc.rust-lang.org/stable/book/second-edition/ch10-02-traits.html\" rel=\"noreferrer\"><em>trait</em></a>:</p>\n\n<pre><code>trait Foo {\n    fn foo(&amp;self, a: i32, b: i32) -&gt; i32;\n\n    fn function_that_calls_foo(&amp;self) {\n        println!(\"{}\", self.foo(1, 2));\n    }\n}\n</code></pre>\n\n<p>You can then implement the trait for <code>Base</code>:</p>\n\n<pre><code>struct Base {\n    stuff: i32,\n}\n\nimpl Foo for Base {\n    fn foo(&amp;self, a: i32, b: i32) -&gt; i32 {\n        self.stuff + a + b\n    }\n}\n</code></pre>\n\n<p>And as <a href=\"https://stackoverflow.com/questions/44783925/what-is-the-rust-equivalent-to-cs-virtual-functions#comment76550136_44783925\">Matthieu M. says</a>, Rust doesn't have inheritance, so use composition:</p>\n\n<pre><code>struct Base {\n    stuff: i32,\n}\n\nimpl Base {\n    fn reusable(&amp;self) -&gt; i32 {\n        self.stuff + 1\n    }\n}\n\nstruct Alpha {\n    base: Base,\n    modifier: i32,\n}\n\nimpl Foo for Alpha {\n    fn foo(&amp;self, a: i32, b: i32) -&gt; i32 {\n        (self.base.reusable() + a + b) * self.modifier\n    }\n}\n</code></pre>\n\n<p>You can combine the two concepts as well, by taking a <a href=\"https://doc.rust-lang.org/stable/book/second-edition/ch10-00-generics.html\" rel=\"noreferrer\"><em>generic</em></a> that is constrained by a type parameter.</p>\n\n<hr>\n\n<p>I'll strongly second <a href=\"https://stackoverflow.com/questions/44783925/what-is-the-rust-equivalent-to-cs-virtual-functions/44786419#comment76553471_44783925\">Dietrich Epp's point</a>. Using a new  language should involve checking out new paradigms. Inheritance for the purposes of code reuse is not usually a great idea, even in languages that support it. Instead, create smaller building blocks and combine them together.</p>\n"}], "owner": {"reputation": 407, "user_id": 1032861, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/419e249c946f252fcd39151020d9c7eb?s=128&d=identicon&r=PG", "display_name": "user1032861", "link": "https://stackoverflow.com/users/1032861/user1032861"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3574, "favorite_count": 2, "accepted_answer_id": 44786419, "answer_count": 1, "score": 5, "last_activity_date": 1498584500, "creation_date": 1498576415, "last_edit_date": 1498583882, "question_id": 44783925, "link": "https://stackoverflow.com/questions/44783925/what-is-the-rust-equivalent-to-cs-virtual-functions", "title": "What is the Rust equivalent to C++&#39;s virtual functions?", "body": "<p>I'm trying to implement something in Rust that works like a C++ virtual function in a class, I would have a base struct with data, then I would keep some functions undefined, like the following example:</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>class A {\n    int stuff;\npublic:\n    virtual void foo(int a, int b) = 0;\n    void function_that_calls_foo() { /*...*/ foo(1, 2); /*...*/ }\n}\n\nclass B: public A { void foo(int a, int b) { /* ... */ } }\n</code></pre>\n\n<p>I was trying to implement it using function pointers, but without much success. I could use a trait with A's functions, and implement A on the other class, but I would lose the struct's data. What's the best (fastest?) way to implement this kind of thing in Rust?</p>\n\n<pre><code>struct A {\n    ...\n}\n\nimpl A {\n    fn function_that_calls_foo(&amp;self) {\n        ...\n        self.foo(a, b);\n        ...\n    }\n}\n\nstruct B {\n    a: A;\n}\n\nimpl B {\n    fn xxx(&amp;self) {\n        a.function_that_calls_foo(1, 2);\n    }\n\n    fn foo(&amp;self, a: i32, b: i32) {...}\n}\n</code></pre>\n"}, {"tags": ["struct", "static", "initialization", "rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1498556420, "post_id": 44776591, "comment_id": 76534341, "body": "Related: <a href=\"https://stackoverflow.com/questions/27582739/how-do-i-create-a-hashmap-literal\" title=\"how do i create a hashmap literal\">stackoverflow.com/questions/27582739/&hellip;</a> and <a href=\"https://stackoverflow.com/questions/28392008/more-concise-hashmap-initialization\" title=\"more concise hashmap initialization\">stackoverflow.com/questions/28392008/&hellip;</a>"}, {"owner": {"reputation": 4048, "user_id": 2173516, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/P3SKn.png?s=128&g=1", "display_name": "Noel Widmer", "link": "https://stackoverflow.com/users/2173516/noel-widmer"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1498556787, "post_id": 44776591, "comment_id": 76534627, "body": "@Boiethios These are (more) convenient ways to initialize <code>HashSet</code>s right? But they don&#39;t solve the static issue I believe..."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1498578971, "post_id": 44776591, "comment_id": 76550375, "body": "This is the same as a &quot;global&quot; singleton, just put it inside the function that cares about it."}], "answers": [{"comments": [{"owner": {"reputation": 4048, "user_id": 2173516, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/P3SKn.png?s=128&g=1", "display_name": "Noel Widmer", "link": "https://stackoverflow.com/users/2173516/noel-widmer"}, "edited": false, "score": 0, "creation_date": 1498559353, "post_id": 44777475, "comment_id": 76536388, "body": "I will benchmark the time complexity for the <code>match</code> vs the <code>HashSet</code> and take a look int the <i>lazy</i> crate."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 4048, "user_id": 2173516, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/P3SKn.png?s=128&g=1", "display_name": "Noel Widmer", "link": "https://stackoverflow.com/users/2173516/noel-widmer"}, "edited": false, "score": 2, "creation_date": 1498565317, "post_id": 44777475, "comment_id": 76540222, "body": "@NoelWidmer: Unless the optimizer is <i>really</i>, <i>really</i>, good, I expect <code>match</code> to beat <code>HashSet</code> hands down. <code>match</code> will compile down to a couple CPU instructions (it&#39;s just a range check) whereas the other requires (1) computing a hash, (2) doing a table look-up with some collision-handling logic, (3) while chasing some pointers around, ... even if you managed to get the <code>HashSet</code> initialized at compile-time, I&#39;d still not expect the optimizer to manage to catch to <code>match</code> performance."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 2, "last_activity_date": 1498579006, "last_edit_date": 1498579006, "creation_date": 1498557802, "answer_id": 44777475, "question_id": 44776591, "link": "https://stackoverflow.com/questions/44776591/how-would-i-create-a-function-local-static-hashsetchar-and-initialize-it-onc/44777475#44777475", "title": "How would I create a function-local static `HashSet&lt;char&gt;` and initialize it once?", "body": "<p>To use a <code>static</code> variable like in other languages (for example C++), you can use <a href=\"https://crates.io/crates/lazy_static\" rel=\"nofollow noreferrer\">this crate</a>. It does lazy initialization to simulate this behavior.</p>\n\n<p>But IMO, in your example, such a feature is overkill. You can simply do this:</p>\n\n<pre><code>fn is_digit(c: char) -&gt; bool {\n    match c {\n        '0'...'9' =&gt; true,\n        _ =&gt; false,\n    }\n}\n\nfn main() {\n    assert_eq!(is_digit('0'), true);\n    assert_eq!(is_digit('5'), true);\n    assert_eq!(is_digit('9'), true);\n    assert_eq!(is_digit('a'), false);\n}\n</code></pre>\n\n<p>Or even better, use the standard:</p>\n\n<pre><code>fn is_digit(c: char) -&gt; bool {\n    c.is_digit(10)\n}\n</code></pre>\n\n<p>About the struct, you are right: constructors do not exist in Rust. The compiler speaks about enum constructors that are different from constructors in other object languages. The best for you is to continue reading the book if you want more information.</p>\n"}], "owner": {"reputation": 4048, "user_id": 2173516, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/P3SKn.png?s=128&g=1", "display_name": "Noel Widmer", "link": "https://stackoverflow.com/users/2173516/noel-widmer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 772, "favorite_count": 0, "closed_date": 1498578946, "accepted_answer_id": 44777475, "answer_count": 1, "score": 2, "last_activity_date": 1498579006, "creation_date": 1498555356, "last_edit_date": 1498578912, "question_id": 44776591, "link": "https://stackoverflow.com/questions/44776591/how-would-i-create-a-function-local-static-hashsetchar-and-initialize-it-onc", "closed_reason": "Duplicate", "title": "How would I create a function-local static `HashSet&lt;char&gt;` and initialize it once?", "body": "<p>I have read through the first half of the book's <a href=\"https://doc.rust-lang.org/book/second-edition/\" rel=\"nofollow noreferrer\">second edition</a> as well as <a href=\"https://doc.rust-lang.org/book/first-edition/const-and-static.html\" rel=\"nofollow noreferrer\">this chapter</a> in the first edition. I am still confused how to initialize static variables.</p>\n\n<p>In the end I'd like to have a function local static <code>HashSet&lt;char&gt;</code> containing all digit characters.</p>\n\n<p><strong>Attempt 1:</strong></p>\n\n<pre><code>fn is_digit(c: char) -&gt; bool {\n    static set: std::collections::HashSet&lt;char&gt; =\n        ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0']\n            .iter()\n            .cloned()\n            .collect();\n\n    return set.contains(&amp;c);\n}\n</code></pre>\n\n<p>The compiler yields:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0015]: calls in statics are limited to struct and enum constructors\n --&gt; src/main.rs:3:9\n  |\n3 | /         ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0']\n4 | |             .iter()\n  | |___________________^\n  |\nnote: a limited form of compile-time function evaluation is available on a nightly compiler via `const fn`\n --&gt; src/main.rs:3:9\n  |\n3 | /         ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0']\n4 | |             .iter()\n  | |___________________^\n</code></pre>\n\n<p><strong>Attempt 2: (No data, only construction)</strong></p>\n\n<pre><code>static set: std::collections::HashSet&lt;char&gt; = std::collections::HashSet::new();\n</code></pre>\n\n<p>The compiler yields: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0015]: calls in statics are limited to struct and enum constructors\n --&gt; src/main.rs:1:47\n  |\n1 | static set: std::collections::HashSet&lt;char&gt; = std::collections::HashSet::new();\n  |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n</code></pre>\n\n<p>This on the other hand works:</p>\n\n<pre><code>let set: std::collections::HashSet&lt;char&gt; = std::collections::HashSet::new();\n</code></pre>\n\n<p><code>HashSet</code> is a <code>struct</code>.</p>\n\n<p>That is why I don't understand the error from attempt 2. I am trying to call the struct's constructor and the compiler says I can only call the constructor of a struct or enum.</p>\n\n<p>I guess <code>new()</code> is not a constructor call after all...?</p>\n"}, {"tags": ["collections", "hashmap", "rust"], "answers": [{"comments": [{"owner": {"reputation": 183, "user_id": 3088402, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/0059891b899335c629d49e8130d078ed?s=128&d=identicon&r=PG&f=1", "display_name": "Dramentiaras", "link": "https://stackoverflow.com/users/3088402/dramentiaras"}, "edited": false, "score": 0, "creation_date": 1498571375, "post_id": 44776345, "comment_id": 76544674, "body": "OrderMap seems to do exactly what I need! Thank you!"}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 4, "last_activity_date": 1594732424, "last_edit_date": 1594732424, "creation_date": 1498554639, "answer_id": 44776345, "question_id": 44776239, "link": "https://stackoverflow.com/questions/44776239/iterating-over-hashmap-values-compared-to-vec/44776345#44776345", "title": "Iterating over HashMap values compared to Vec", "body": "<p>Iterating over a <code>HashMap</code> will be slower, simply because the values are not as tightly packed in the <code>HashMap</code>: there are empty slots.</p>\n<p>How many empty slots there are will depend on your usage, if you have high peak usage however iterating over a now mostly empty <code>HashMap</code> will be quite slower than iterating over a <code>Vec</code> which is much more compact.</p>\n<p>For this particular usecase I would recommend <a href=\"https://github.com/bluss/indexmap\" rel=\"nofollow noreferrer\"><code>indexmap</code></a> which marries the good characteristics of both <code>HashMap</code> and <code>Vec</code>:</p>\n<ul>\n<li>the values are accessible by key, with performance similar to <code>HashMap</code>,</li>\n<li>the values are kept in a <code>Vec</code>, with no interleaving empty slot, so iterating has the same performance as iterating a <code>Vec</code>.</li>\n</ul>\n"}], "owner": {"reputation": 183, "user_id": 3088402, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/0059891b899335c629d49e8130d078ed?s=128&d=identicon&r=PG&f=1", "display_name": "Dramentiaras", "link": "https://stackoverflow.com/users/3088402/dramentiaras"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1147, "favorite_count": 0, "accepted_answer_id": 44776345, "answer_count": 1, "score": 1, "last_activity_date": 1594732424, "creation_date": 1498554309, "last_edit_date": 1498557715, "question_id": 44776239, "link": "https://stackoverflow.com/questions/44776239/iterating-over-hashmap-values-compared-to-vec", "title": "Iterating over HashMap values compared to Vec", "body": "<p>In the program I'm currently writing (a game engine), I would like an efficient way to map integer values (IDs) to an array of objects. The data structure I see as most fit for this is a <a href=\"https://doc.rust-lang.org/std/collections/struct.HashMap.html\" rel=\"nofollow noreferrer\"><code>HashMap</code></a>, but I would also like to be able to loop over the array of objects.</p>\n\n<p>How much slower is it to iterate through the values of a <code>HashMap</code> using:</p>\n\n<pre><code>for val in map.values()\n</code></pre>\n\n<p>Compared to having a <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html\" rel=\"nofollow noreferrer\"><code>Vec</code></a> and iterating over it:</p>\n\n<pre><code>for val in vec.iter()\n</code></pre>\n\n<p>and then having another system in place for mapping IDs to different indices of the vector?</p>\n\n<p>Are there any other drawbacks to the <code>HashMap</code> approach?</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1498554201, "post_id": 44775806, "comment_id": 76532880, "body": "<code>map</code> is the least of your issue here. <code>hs0.get(&quot;&quot;)</code> returns a reference into <code>hs0</code>, and you want to call <code>fn1</code> with (1) this reference and (2) a mutable reference to <code>hs0</code>. This is not a tractable requirement, you have to abandon either (1) or (2)."}, {"owner": {"reputation": 82712, "user_id": 598696, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/k1Yif.png?s=128&g=1", "display_name": "Vittorio Romeo", "link": "https://stackoverflow.com/users/598696/vittorio-romeo"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1498555139, "post_id": 44775806, "comment_id": 76533464, "body": "@MatthieuM. good point - unfortunately I made a mistake while minimizing the real code. I&#39;ve edited the snippet to more closely resemble the real scenario."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1498556591, "post_id": 44775806, "comment_id": 76534456, "body": "I think that your edit don&#39;t change the point of @MatthieuM. comment."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1498557561, "post_id": 44775806, "comment_id": 76535196, "body": "I&#39;m not convinced that <code>map</code> is idiomatic here anyway, since you are making use of side effects and discarding its result."}], "answers": [{"tags": [], "owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "is_accepted": true, "score": 5, "last_activity_date": 1498662777, "last_edit_date": 1498662777, "creation_date": 1498555974, "answer_id": 44776851, "question_id": 44775806, "link": "https://stackoverflow.com/questions/44775806/idiomatic-way-of-resolving-nested-mutable-borrow-conflct/44776851#44776851", "title": "Idiomatic way of resolving nested mutable borrow conflct", "body": "<p>Roughly speaking, <code>hs0</code> remains borrowed until there's no references to any part of it. That is, while <code>x: &amp;String</code> lives, you cannot mutably borrow <code>hs0</code>. It means we need to do something to end the lifetime of <code>x</code>, like convert it into <code>String</code> and pass that string into the next <code>map</code>.</p>\n\n<pre><code>fn fn0(hs0: &amp;mut HS, hs1: &amp;mut HS) {\n    hs0.get(\"\").map(|x| x.clone()).map(|x| fn1(x, hs0, hs1));\n}\n</code></pre>\n"}], "owner": {"reputation": 82712, "user_id": 598696, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/k1Yif.png?s=128&g=1", "display_name": "Vittorio Romeo", "link": "https://stackoverflow.com/users/598696/vittorio-romeo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 324, "favorite_count": 0, "accepted_answer_id": 44776851, "answer_count": 1, "score": 2, "last_activity_date": 1498662777, "creation_date": 1498553010, "last_edit_date": 1498578621, "question_id": 44775806, "link": "https://stackoverflow.com/questions/44775806/idiomatic-way-of-resolving-nested-mutable-borrow-conflct", "title": "Idiomatic way of resolving nested mutable borrow conflct", "body": "<p>Consider the minimal example below, which presents a situation I encountered in some real code:</p>\n\n<pre><code>use std::collections::HashSet;\ntype HS = HashSet&lt;String&gt;;\n\nfn fn1(x: String, hs0: &amp;mut HS, hs1: &amp;mut HS) {\n    // ...\n}\n\nfn fn0(hs0: &amp;mut HS, hs1: &amp;mut HS) {\n    hs0.get(\"\").map(|x| fn1(x.clone(), hs0, hs1));\n}\n\nfn main() {\n    let mut hs0 = HS::new();\n    let mut hs1 = HS::new();\n    fn0(&amp;mut hs0, &amp;mut hs1);\n}\n</code></pre>\n\n<p>The borrow checker is not happy:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0500]: closure requires unique access to `hs0` but `*hs0` is already borrowed\n --&gt; &lt;anon&gt;:9:21\n  |\n9 |     hs0.get(\"\").map(|x| fn1(x, hs0, hs1));\n  |     ---             ^^^        ---      - borrow ends here\n  |     |               |          |\n  |     |               |          borrow occurs due to use of `hs0` in closure\n  |     |               closure construction occurs here\n  |     borrow occurs here\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=0fa6c84ccea2598c1054bc65621b3efc&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\"><strong>on the Rust playground</strong></a></p>\n\n<hr>\n\n<p>I understand the error message above, and I want to know the idiomatic way of solving this issue. Note that: </p>\n\n<ul>\n<li><p>I want <code>fn0</code> and <code>fn1</code> to be separate functions for readability/testability reasons. (I.e. they make sense alone on their own.)</p></li>\n<li><p>I want to call <code>fn1</code> from <code>fn0</code> with the same arguments in a <code>.map(...)</code> chained call.</p></li>\n</ul>\n\n<p>Is the only sensible option not using <code>.map</code>?</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1498518930, "post_id": 44769922, "comment_id": 76520866, "body": "What do you mean with <code>try to use it</code>? Does the dependent project actually build ok, as you mentioned in the previous sentence?"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1498519034, "post_id": 44769922, "comment_id": 76520889, "body": "Also note that the <a href=\"http://doc.crates.io/specifying-dependencies.html#specifying-dependencies-from-git-repositories\" rel=\"nofollow noreferrer\">docs</a> actually suggest specifying a dependency from a GitHub repository like <code>{ git = &quot;https:&#47;&#47;github.com&#47;rust-lang-nursery&#47;rand&quot; }</code>."}, {"owner": {"reputation": 6509, "user_id": 356011, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/d17ff41be1044be6fb5ef186b83efb20?s=128&d=identicon&r=PG", "display_name": "marathon", "link": "https://stackoverflow.com/users/356011/marathon"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1498519296, "post_id": 44769922, "comment_id": 76520963, "body": "@E_net4 that works for public repos, but for private repos you must use the ssh url.    That portion of it works ok.  The ssh url isn&#39;t documented."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1498520282, "post_id": 44769922, "comment_id": 76521213, "body": "<code>libmylib</code> is confuse... please use something more clear or the true name. Have you try <code>libmy</code> (I don&#39;t know just a idea) ?"}], "answers": [{"comments": [{"owner": {"reputation": 6509, "user_id": 356011, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/d17ff41be1044be6fb5ef186b83efb20?s=128&d=identicon&r=PG", "display_name": "marathon", "link": "https://stackoverflow.com/users/356011/marathon"}, "edited": false, "score": 0, "creation_date": 1498579909, "post_id": 44771221, "comment_id": 76550974, "body": "I did try <code>extern crate foo</code>.  Some more digging, <code>foo</code> works if <code>crate-type = [&quot;cdylib&quot;]</code> is absent.   But if it is there, I get the same error.  I&#39;m assuming something is wrong, so I opened an issue on the cargo project."}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "reply_to_user": {"reputation": 6509, "user_id": 356011, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/d17ff41be1044be6fb5ef186b83efb20?s=128&d=identicon&r=PG", "display_name": "marathon", "link": "https://stackoverflow.com/users/356011/marathon"}, "edited": false, "score": 2, "creation_date": 1498611254, "post_id": 44771221, "comment_id": 76564862, "body": "I would argue that this is completely normal. <code>cdylib</code> represents a library that presents a C interface, not a Rust interface. A <code>cdylib</code> doesn&#39;t contain the metadata necessary to use <code>extern crate</code> on it, so Cargo doesn&#39;t even pass <code>--extern</code> to <code>rustc</code> for such dependencies. If you want a C interface <i>and</i> a Rust interface, use <code>crate-type = [&quot;cdylib&quot;, &quot;lib&quot;]</code> instead (or <code>crate-type = [&quot;cdylib&quot;, &quot;dylib&quot;]</code> if you want a dynamic library). If you just need a Rust interface, omit <code>crate-type</code>."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 9, "last_activity_date": 1498528570, "creation_date": 1498528570, "answer_id": 44771221, "question_id": 44769922, "link": "https://stackoverflow.com/questions/44769922/how-to-import-a-crate-dependency-when-the-library-name-is-different-from-the-pac/44771221#44771221", "title": "How to import a crate dependency when the library name is different from the package name?", "body": "<p>Cargo is interested in <em>package names</em> when it comes to dependencies, while the compiler (<code>rustc</code>) is interested in <em>library names</em> when it comes to loading their metadata and linking with them.</p>\n\n<p>Let's take a look again at this <code>Cargo.toml</code> excerpt:</p>\n\n<pre><code>[package]\nname = \"libfoo\"\n\n[lib]\nname = \"foo\"\n</code></pre>\n\n<p>Here, the <em>package name</em> is <code>libfoo</code> and the <em>library name</em> is <code>foo</code>.</p>\n\n<p>When you want to declare a dependency on <code>libfoo</code> in your project, you need to write the <em>package name</em> (<code>libfoo</code>) in the <code>[dependencies]</code> table. For example:</p>\n\n<pre><code>[dependencies]\nlibfoo = { git = \"ssh://git@github.com/me/libfoo\", branch = \"dev\" }\n</code></pre>\n\n<p>This is what you already have, and it's correct.</p>\n\n<p>However, when you want to import the library in your crate, you need to write the <em>library name</em> in the <code>extern crate</code> item, i.e.</p>\n\n<pre><code>extern crate foo;\n</code></pre>\n\n<hr>\n\n<p>How did I figure this out? First, I wrote <code>libfoo</code> in both <code>Cargo.toml</code> and the <code>extern crate</code> item, as you described. When I ran <code>cargo build</code>, I noticed that <code>libfoo</code> was built successfully, indicating that Cargo correctly resolved the dependency. But I also noticed that the compiler couldn't find <code>libfoo</code>, as you experienced.</p>\n\n<p>I then inspected the command line passed to <code>rustc</code> by running <code>cargo build --verbose</code>. This is what I saw (irrelevant parts omitted):</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Running `rustc [...] --extern foo=/[path]/target/debug/deps/libfoo-5cf876c5c8ac1bfb.rlib`                                                                 \n</code></pre>\n\n<p>The <code>--extern name=path</code> argument tells <code>rustc</code> that the crate named <code>name</code> is located in <code>path</code>. The name here is <code>foo</code>, so we must write <code>extern crate foo;</code> in the code to reference it.</p>\n"}], "owner": {"reputation": 6509, "user_id": 356011, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/d17ff41be1044be6fb5ef186b83efb20?s=128&d=identicon&r=PG", "display_name": "marathon", "link": "https://stackoverflow.com/users/356011/marathon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2721, "favorite_count": 1, "accepted_answer_id": 44771221, "answer_count": 1, "score": 4, "last_activity_date": 1498580045, "creation_date": 1498518400, "last_edit_date": 1498580045, "question_id": 44769922, "link": "https://stackoverflow.com/questions/44769922/how-to-import-a-crate-dependency-when-the-library-name-is-different-from-the-pac", "title": "How to import a crate dependency when the library name is different from the package name?", "body": "<p>I have a crate that is imported straight off of GitHub, as per Cargo's <a href=\"http://doc.crates.io/specifying-dependencies.html\" rel=\"nofollow noreferrer\">documentation</a>:</p>\n\n<pre><code>[dependencies]\nlibfoo = { git = \"ssh://git@github.com/me/libfoo\", branch = \"dev\" }\n\n[lib]\npath = \"src/rust/lib.rs\"\nname = \"myprj\"\ncrate-type = [\"cdylib\"]\n</code></pre>\n\n<p>Running <code>cargo build</code> works fine here, Cargo fetches <code>libfoo</code> and builds it in the <code>~/.cargo</code> directory. When I try to use (import) it in <code>lib.rs</code>:</p>\n\n<pre><code>extern crate libfoo;   //also tried foo\n</code></pre>\n\n<p>Cargo chokes:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0463]: can't find crate for `libfoo`\n --&gt; src/rust/lib.rs:1:1\n  |\n1 | extern crate libfoo;\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^ can't find crate\n</code></pre>\n\n<p>Interestingly, IntelliJ's Rust plugin does find the crate when I click on it in <code>lib.rs</code> \u2013 it navigates to the downloaded source in <code>~/.cargo</code>...</p>\n\n<p>In the dependency <code>libfoo</code>, the <code>lib</code> section of the <code>Cargo.toml</code> file is specified as:</p>\n\n<pre><code>[package]\nname = \"libfoo\"\n[lib]\nname = \"foo\"\ncrate-type = [\"cdylib\"]\n</code></pre>\n\n<p>I have tried all permutations of libfoo and foo to see if Cargo is getting confused between the lib name and the package/directory name.</p>\n\n<p>It also fails if I specify a local path to the dependency. (Cargo compiles the dependency but then claims not to find it when it is declared/imported in <code>lib.rs</code>.)</p>\n\n<pre><code>[dependencies]\nlibfoo = { path = \"/Users/me/dev/libfoo\" }\n</code></pre>\n\n<p>If I include a crate from git or the file system that has the same <code>[lib]</code> name as the <code>[package]</code> name, it works fine. So it appears the problem is with crates that have a have a library (<code>[lib]</code>) name that is different from the package (<code>[package]</code>) name.</p>\n\n<p>If I remove the <code>[lib]</code> section from the dependency's <code>Cargo.toml</code> file, it works.</p>\n\n<p><strong>Update</strong>:  if <code>crate-type = [\"cdylib\"]</code> is removed from <code>libfoo</code>, this works with <code>foo</code> imported.   If that is there, I get the same error with <code>extern crate foo;</code>.</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1498517508, "post_id": 44769506, "comment_id": 76520490, "body": "<a href=\"https://play.rust-lang.org/?gist=66ba6046049adf4589f975dc646c2878&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 82712, "user_id": 598696, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/k1Yif.png?s=128&g=1", "display_name": "Vittorio Romeo", "link": "https://stackoverflow.com/users/598696/vittorio-romeo"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1498550677, "post_id": 44769506, "comment_id": 76530756, "body": "@Stargateur: thanks. What if <code>bar</code> accepted a <code>Context</code> though? Is accepting separate arguments the only way to make it work?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1498551310, "post_id": 44769506, "comment_id": 76531114, "body": "Sorry I can&#39;t answer you, because I don&#39;t fully understand what you ask and I probably don&#39;t have the knowledge to answer this. Maybe you can go on the <a href=\"https://chat.stackoverflow.com/rooms/62927/rust\">rust chat</a>. To ask this to experimented user. I&#39;m still learning rust."}], "owner": {"reputation": 82712, "user_id": 598696, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/k1Yif.png?s=128&g=1", "display_name": "Vittorio Romeo", "link": "https://stackoverflow.com/users/598696/vittorio-romeo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 32, "favorite_count": 0, "closed_date": 1498522383, "answer_count": 0, "score": 1, "last_activity_date": 1498515680, "creation_date": 1498515680, "question_id": 44769506, "link": "https://stackoverflow.com/questions/44769506/packaging-common-function-arguments-into-struct-reducing-repetition-fighting", "closed_reason": "Duplicate", "title": "Packaging common function arguments into struct - reducing repetition, fighting borrow checker", "body": "<p>I'm working on a small application where I found myself passing many of the same <code>&amp;mut</code> arguments to functions over and over. Example:</p>\n\n<pre><code>fn xyz(a: &amp;mut A, b: &amp;mut B) { /* ... */ }\nfn bar(a: &amp;mut A, b: &amp;mut B, c: &amp;mut C) { xyz(a, b); /* ... */ }\nfn foo(a: &amp;mut A, b: &amp;mut B, c: &amp;mut C) { bar(a, b, c); /* ... */ }\n</code></pre>\n\n<p>While in my real world case the functions slightly varied in arity between each other, there were always 3-4 arguments in common. I decided to do something that I thought was sensible: wrap the common arguments in a <code>struct</code> and pass the <code>struct</code> instead.</p>\n\n<pre><code>struct Context {\n    a: A, \n    b: B, \n    c: C\n}\n\nfn xyz(c: &amp;mut Context) { /* ... */ }\nfn bar(c: &amp;mut Context) { xyz(c); /* ... */ }\nfn foo(c: &amp;mut Context) { bar(c); /* ... */ }\n</code></pre>\n\n<hr>\n\n<p>If a function only needs a subset of <code>Context</code>'s arguments and if the call depends on one of them, the borrow checker complains. Here's an example:</p>\n\n<pre><code>struct Context {\n    f0: HashSet&lt;String&gt;,\n    f1: HashSet&lt;String&gt;,\n}\n\nfn bar(f1: &amp;mut HashSet&lt;String&gt;) {}\n\nfn foo(k: &amp;str, c: &amp;mut Context) {\n    c.f0.get(k).map(|_| bar(&amp;mut c.f1));\n}\n</code></pre>\n\n<p></p>\n\n<pre><code>error[E0500]: closure requires unique access to `c` but `c.f0` is already borrowed\n  --&gt; &lt;anon&gt;:11:21\n   |\n11 |     c.f0.get(k).map(|_| bar(&amp;mut c.f1));\n   |     ----            ^^^          -    - borrow ends here\n   |     |               |            |\n   |     |               |            borrow occurs due to use of `c` in closure\n   |     |               closure construction occurs here\n   |     borrow occurs here\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=8b03525f8a46439208d50ab121a401e2&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\"><strong>on rust playground</strong></a></p>\n\n<hr>\n\n<p>I understand why the error is happening, but I would like to avoid all the code repetition that happens when passing arguments individually. Note that passing arguments individually does prevent the issue:</p>\n\n<pre><code>fn bar(f1: &amp;mut HashSet&lt;String&gt;) {}\n\nfn foo(k: &amp;str, f0: &amp;mut HashSet&lt;String&gt;, f1: &amp;mut HashSet&lt;String&gt;) {\n    f0.get(k).map(|_| bar(f1));\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=d97e1c0db35547320ac3b5fe15f783e2&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\"><strong>on rust playground</strong></a></p>\n\n<p>While not true for this minimal example, using something like <code>Context</code> increased the readability of my real code significantly, as the function signatures were shorter and code repetition was diminished.</p>\n\n<hr>\n\n<p><strong>Is there a way to reduce code repetition when multiple functions share a subset of arguments?</strong> </p>\n"}, {"tags": ["rust", "nickel"], "answers": [{"tags": [], "owner": {"reputation": 212, "user_id": 8216962, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/mDnUk.png?s=128&g=1", "display_name": "Daedalus", "link": "https://stackoverflow.com/users/8216962/daedalus"}, "is_accepted": false, "score": 0, "last_activity_date": 1498578244, "last_edit_date": 1498578244, "creation_date": 1498515007, "answer_id": 44769399, "question_id": 44766393, "link": "https://stackoverflow.com/questions/44766393/how-to-render-a-webpage-using-the-nickel-framework/44769399#44769399", "title": "How to render a webpage using the Nickel framework?", "body": "<p>You have to re-utilize the <strong>www</strong> directory after the GET request:</p>\n\n<pre><code>server.get(\"/login\", tmpl_handler);\nserver.utilize(StaticFilesHandler::new(\"www/\"));\n</code></pre>\n\n<p>is working... even if it doesn't seem really good.</p>\n"}], "owner": {"reputation": 212, "user_id": 8216962, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/mDnUk.png?s=128&g=1", "display_name": "Daedalus", "link": "https://stackoverflow.com/users/8216962/daedalus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 234, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1498578244, "creation_date": 1498502049, "last_edit_date": 1498502228, "question_id": 44766393, "link": "https://stackoverflow.com/questions/44766393/how-to-render-a-webpage-using-the-nickel-framework", "title": "How to render a webpage using the Nickel framework?", "body": "<p>I'm trying to make a webpage that interacts with JavaScript and sends JSON data to Rust functions, then renders the <strong>www</strong> files. The structure of my project is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>/..\n   /src\n   /www\n     |___index.html\n     |___/css\n     |      |__style.css\n     |\n     |___/javascript\n     |             |__javascript-supp.js\n     |___/images\n               |__myImg.png\n</code></pre>\n\n<p><strong>main.rs</strong></p>\n\n<pre><code>use nickel::{Nickel, HttpRouter, StaticFilesHandler, NickelError, Request, Response,\n             MiddlewareResult};\nuse std::collections::HashMap;\n\nfn tmpl_handler&lt;'a&gt;(_: &amp;mut Request, res: Response&lt;'a&gt;) -&gt; MiddlewareResult&lt;'a&gt; {\n    let mut data = HashMap::&lt;&amp;str, &amp;str&gt;::new();\n\n    // add data for render\n    // name = {{ name }} in template\n    data.insert(\"name\", \"Nickel\");\n\n    res.render(\"www/\", &amp;data)\n}\n\nfn main() {\n    let mut server = Nickel::new();\n\n    server.utilize(StaticFilesHandler::new(\"www/\"));\n    server.get(\"/login/*\", tmpl_handler);\n\n    server.listen(\"127.0.0.1:6767\");\n}\n</code></pre>\n\n<p><strong>index.html</strong></p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;script src=javascript/javascript.js&gt;&lt;/script&gt;\n    &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"css/style.css\"&gt;\n    &lt;title&gt;Encryptor Test&lt;/title&gt;\n  &lt;/head&gt;\n\n  &lt;body&gt;\n&lt;div class=header&gt;\n  &lt;h1&gt;\n        Hello {{ name }}!\n  &lt;/h1&gt;\n&lt;/div&gt;\n    &lt;div class=main-row&gt;\n\n        &lt;div class=\"col-3 menu\"&gt;\n          &lt;ul&gt;\n            &lt;li&gt;Login&lt;/li&gt;\n            &lt;li&gt;Download File&lt;/li&gt;\n            &lt;li&gt;Upload File&lt;/li&gt;\n            &lt;li&gt;Exit&lt;/li&gt;\n          &lt;/ul&gt;\n        &lt;/div&gt;\n\n        &lt;div class=\"col-9 context-area\"&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div class=footer&gt;&lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>This code is working until:</p>\n\n<pre><code>server.utilize(StaticFilesHandler::new(\"www/\"));\n</code></pre>\n\n<p>I want to send the data <code>$name = \"Nickel\"</code> and render the index.html.</p>\n\n<p>How do I render the whole <strong>www/</strong> directory so that after visiting <strong>127.0.0.1:6767/login</strong> the whole page will be there (JS, CSS and images) and not just plaintext?</p>\n\n<p>I can provide the CSS file on request.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1498484353, "post_id": 44760946, "comment_id": 76502925, "body": "I do not know the explanation, but for sure that is not consistent."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1498484852, "post_id": 44760946, "comment_id": 76503241, "body": "Feels related to the &quot;lifetime checking stops at function boundaries&quot; aspect. The working case has a struct initializer and thus is more &quot;transparent&quot; to the compiler, while the failing case is a function call."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1498485463, "post_id": 44760946, "comment_id": 76503665, "body": "@Shepmaster: That could be something like this indeed, after all borrowing works independently for fields of a local variable, but not across function calls."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1498485702, "post_id": 44760946, "comment_id": 76503804, "body": "@Shepmaster: Ah... looks like enum constructors are treated like functions... (see updated tests)."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1498485871, "post_id": 44760946, "comment_id": 76503900, "body": "@MatthieuM. because they <i>are</i> functions :-) That&#39;s why you can do things like <code>iterator.map(MyEnum::Alpha)</code>. Also your updated code doesn&#39;t have any enums...?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1498485933, "post_id": 44760946, "comment_id": 76503939, "body": "@Shepmaster: Well... they are many things, you cannot generally pattern match on functions, but of course you can on enumerators."}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1498531363, "post_id": 44760946, "comment_id": 76523572, "body": "We wouldn&#39;t have to worry about this if <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/0066-better-temporary-lifetimes.md\" rel=\"nofollow noreferrer\">RFC 66</a> was implemented!"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1498543098, "post_id": 44760946, "comment_id": 76526634, "body": "@FrancisGagn&#233;: That RFC! Felix is talking about <code>~[T]</code> which is a syntax I hadn&#39;t seen in ages!"}], "answers": [{"tags": [], "owner": {"reputation": 5869, "user_id": 2543666, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/4e7c6887ce958029525412ab297b5895?s=128&d=identicon&r=PG", "display_name": "Thayne", "link": "https://stackoverflow.com/users/2543666/thayne"}, "is_accepted": false, "score": 1, "last_activity_date": 1502800844, "last_edit_date": 1502800844, "creation_date": 1502770047, "answer_id": 45686342, "question_id": 44760946, "link": "https://stackoverflow.com/questions/44760946/when-is-a-temporary-destructed/45686342#45686342", "title": "When is a temporary destructed?", "body": "<p>Let's look at the second failing line first:</p>\n\n<pre><code>let cmd = Cmd::new(&amp;None);\n</code></pre>\n\n<p><code>&amp;None</code> creates a temporary with a lifetime of the single line. <code>Cmd::new</code> returns a <code>Cmd</code> that has the same lifetime. Then we have attempt to store that temporary in a variable with <code>let</code>. </p>\n\n<p>The <a href=\"https://doc.rust-lang.org/reference/expressions.html#temporary-lifetimes\" rel=\"nofollow noreferrer\">Rust reference states</a>:</p>\n\n<blockquote>\n  <p>When a temporary rvalue is being created that is assigned into a let\n  declaration, however, the temporary is created with the lifetime of\n  the enclosing block instead...</p>\n</blockquote>\n\n<p>It tries to increase the lifetime of the <code>Cmd</code> temporary, but that depends on the lifetime of the <code>&amp;None</code> temporary, and since that temporary isn't actually stored in a <code>let</code> (the exception to the rule about temporaries lasting until the end of the statement), its lifetime is less than the lifetime of <code>cmd</code> and you get a lifetime error.</p>\n\n<p>The direct struct statements work, because the <code>let</code> lifetime applies to the struct and its members. </p>\n\n<p>The fact that it doesn't work for <code>Some</code> (an enum) seems like a bug to me (or at least a missing feature).</p>\n"}], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 235, "favorite_count": 2, "answer_count": 1, "score": 16, "last_activity_date": 1502800844, "creation_date": 1498483823, "last_edit_date": 1498486552, "question_id": 44760946, "link": "https://stackoverflow.com/questions/44760946/when-is-a-temporary-destructed", "title": "When is a temporary destructed?", "body": "<p>Up until now, I assumed that a temporary was destructed at the end of the evaluation of the statement that had spawned it.</p>\n\n<p>However, it appears that there is an exception made when using a temporary to initialize the field of a <code>struct</code>.</p>\n\n<p>PeterHall helpfully provided a simple <a href=\"https://play.rust-lang.org/?gist=f72221dc92e4a1b08029f7bdac294f9b&amp;version=stable&amp;backtrace=0\" rel=\"noreferrer\">code sample illustrating the difference</a> in a comment to <a href=\"https://stackoverflow.com/a/44748749/147192\">his answer</a>, which I've <strike>simplified</strike> complicated a bit:</p>\n\n<pre><code>struct Wrapper&lt;'a&gt; {\n    cmd: &amp;'a Cmd&lt;'a&gt;,\n}\n\nstruct Cmd&lt;'a&gt; {\n    args: &amp;'a Option&lt;String&gt;,\n}\n\nimpl &lt;'a&gt; Cmd&lt;'a&gt; {\n    fn new(args: &amp;'a Option&lt;String&gt;) -&gt; Cmd&lt;'a&gt; {\n        Cmd {\n            args: args,\n        }\n    }\n}\n\npub fn main() {\n    // OK\n    let cmd = Cmd {\n        args: &amp;None,\n    };\n\n    // OK\n    let cmd = Wrapper {\n        cmd: &amp;Cmd {\n            args: &amp;None,\n        }\n    };\n\n    // Lifetime error\n    let cmd = Some(Cmd {\n        args: &amp;None,\n    });\n\n    // Lifetime error\n    let cmd = Cmd::new(&amp;None);\n}\n</code></pre>\n\n<p>So, what is the exact rule for when a temporary is destructed?</p>\n"}, {"tags": ["windows", "rust", "command-prompt"], "comments": [{"owner": {"reputation": 26723, "user_id": 995714, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/w1393.jpg?s=128&g=1", "display_name": "phuclv", "link": "https://stackoverflow.com/users/995714/phuclv"}, "edited": false, "score": 0, "creation_date": 1498473900, "post_id": 44757893, "comment_id": 76496464, "body": "Chrome is probably in the path so you just need to use <code>chrome</code> to run it. And what if the user doesn&#39;t like chrome?"}, {"owner": {"reputation": 639, "user_id": 5515741, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/682630a1255cc563c0fd53ad1820f6b0?s=128&d=identicon&r=PG&f=1", "display_name": "blz", "link": "https://stackoverflow.com/users/5515741/blz"}, "reply_to_user": {"reputation": 26723, "user_id": 995714, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/w1393.jpg?s=128&g=1", "display_name": "phuclv", "link": "https://stackoverflow.com/users/995714/phuclv"}, "edited": false, "score": 0, "creation_date": 1498474826, "post_id": 44757893, "comment_id": 76496941, "body": "In my environment, <code>chrome</code> is not in path. Actually, <code>comm</code> is a value which is input by user."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 3, "creation_date": 1498475342, "post_id": 44757893, "comment_id": 76497188, "body": "Rust doesn&#39;t just concatenate arguments together, it quotes them for you.  Have you tried it <i>without</i> the extra set of quotes around the argument?"}], "answers": [{"comments": [{"owner": {"reputation": 639, "user_id": 5515741, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/682630a1255cc563c0fd53ad1820f6b0?s=128&d=identicon&r=PG&f=1", "display_name": "blz", "link": "https://stackoverflow.com/users/5515741/blz"}, "edited": false, "score": 0, "creation_date": 1498487462, "post_id": 44760995, "comment_id": 76505033, "body": "I understand. Thank you."}, {"owner": {"reputation": 4324, "user_id": 1045510, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/abde71672c5b271c778d3ed312347866?s=128&d=identicon&r=PG", "display_name": "Kroltan", "link": "https://stackoverflow.com/users/1045510/kroltan"}, "edited": false, "score": 1, "creation_date": 1498501128, "post_id": 44760995, "comment_id": 76513240, "body": "Specifically, you will only need <code>cmd &#47;C</code> to run <code>cmd</code> builtins, such as <code>dir</code> and the like, or lines of batch script. (if you have a batch <i>file</i>, you can run that directly, AFAIK)"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1498484425, "last_edit_date": 1498484425, "creation_date": 1498483992, "answer_id": 44760995, "question_id": 44757893, "link": "https://stackoverflow.com/questions/44757893/cmd-c-doesnt-work-in-rust-when-command-includes-spaces/44760995#44760995", "title": "cmd /C doesn&#39;t work in Rust when command includes spaces", "body": "<p>This is <a href=\"https://github.com/rust-lang/rust/issues/29494\" rel=\"nofollow noreferrer\">a known issue</a>. Unfortunately, the Windows rules for escaping arguments are non-trivial and hard to get right.</p>\n\n<p>This code:</p>\n\n<pre><code>let comm = r#\"\"C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe\" https://stackoverflow.com/\"#;\nlet mut cmd = Command::new(\"cmd\");\ncmd.arg(\"/c\");\ncmd.arg(comm);\n</code></pre>\n\n<p>Executes this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>\"cmd\" \"/c\" \"\\\"C:\\\\Program Files\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe\\\" https://stackoverflow.com/\"\n</code></pre>\n\n<p>Unfortunately, the inner quotes have been escaped, although in this case they should not have been.</p>\n\n<hr>\n\n<p>As a workaround, in many cases, you don't actually need to use <code>cmd</code>. In those cases, it's much more sensible to directly execute the process instead:</p>\n\n<pre><code>let output = Command::new(r#\"C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe\"#)\n    .args(&amp;[\"https://stackoverflow.com/\"])\n    .output()\n    .expect(\"failed to execute process\");\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 329, "user_id": 10028531, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/c0CxX.jpg?s=128&g=1", "display_name": "Holly Plyler", "link": "https://stackoverflow.com/users/10028531/holly-plyler"}, "is_accepted": false, "score": 0, "last_activity_date": 1532358291, "last_edit_date": 1532358291, "creation_date": 1532112837, "answer_id": 51448792, "question_id": 44757893, "link": "https://stackoverflow.com/questions/44757893/cmd-c-doesnt-work-in-rust-when-command-includes-spaces/51448792#51448792", "title": "cmd /C doesn&#39;t work in Rust when command includes spaces", "body": "<p>I've found a solution to a similar situation:</p>\n\n<pre><code>use std::process::Command;\nuse std::thread;\nuse std::time;\n\nfn main() {\n    let child = Command::new(\"netsh\")\n        .arg(\"advfirewall\")\n        .arg(\"firewall\")\n        .arg(\"add\")\n        .arg(\"rule\")\n        .arg(r#\"name=\"something2\"\"#)\n        .arg(\"dir=in\")\n        .arg(\"action=allow\")\n        .arg(\"protocol=TCP\")\n        .arg(\"localport=12006\")\n        .spawn()\n        .expect(\"failed\");\n    thread::sleep(time::Duration::new(10, 0));\n    println!(\"done\");\n    let output = child.stdout;\n    println!(\"{:?}\", output);\n}\n</code></pre>\n\n<p>This deals with the command line prompt </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>netsh advfirewall firewall add rule name=\"something2\" dir=in action=allow protocol=TCP localport=12006\n</code></pre>\n"}], "owner": {"reputation": 639, "user_id": 5515741, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/682630a1255cc563c0fd53ad1820f6b0?s=128&d=identicon&r=PG&f=1", "display_name": "blz", "link": "https://stackoverflow.com/users/5515741/blz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1186, "favorite_count": 0, "accepted_answer_id": 44760995, "answer_count": 2, "score": 1, "last_activity_date": 1532358291, "creation_date": 1498473697, "last_edit_date": 1498482885, "question_id": 44757893, "link": "https://stackoverflow.com/questions/44757893/cmd-c-doesnt-work-in-rust-when-command-includes-spaces", "title": "cmd /C doesn&#39;t work in Rust when command includes spaces", "body": "<p>I want to run this command from a Rust program:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>\"C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe\" \"https://stackoverflow.com/\"\n</code></pre>\n\n<p>In cmd, this works.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>cmd /C \"\"C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe\" \"https://stackoverflow.com/\"\"\n</code></pre>\n\n<p>In C#, this works.</p>\n\n<pre><code>var comm = @\"\"\"\"\"C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe\"\" \"\"https://stackoverflow.com/\"\"\"\"\";\nSystem.Diagnostics.Process.Start(\"cmd\", \"/C \" + comm);\n</code></pre>\n\n<p>In Rust, this doesn't work.</p>\n\n<pre><code>let comm = r#\"\"\"C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe\" \"https://stackoverflow.com/\"\"\"#;\nlet output = Command::new(\"cmd\")\n    .args(&amp;[\"/C\", comm])\n    .output()\n    .expect(\"failed to execute process\");\n</code></pre>\n\n<p>I get a following error.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>The network path was not found.\n</code></pre>\n\n<p>However, it works when <code>comm</code> is <code>echo hello</code>.</p>\n\n<p>I tried two additional ways:</p>\n\n<ol>\n<li><p>This</p>\n\n<pre><code>let comm = r#\"C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe https://stackoverflow.com/\"#;\n</code></pre>\n\n<p>is</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>'C:\\Program' is not recognized as an internal or external command,\noperable program or batch file.\n</code></pre></li>\n<li><p>This</p>\n\n<pre><code>let comm = r#\"\"C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe https://stackoverflow.com/\"\"#;\n</code></pre>\n\n<p>is</p>\n\n<pre><code>'\\\"C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe\\\"' is not recognized as an internal or external command,\noperable program or batch file.\n</code></pre></li>\n</ol>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1498467926, "post_id": 44756215, "comment_id": 76493227, "body": "Any case of &quot;casting type <code>Result</code> into X&quot; sounds horrible. Can you show a concrete example?"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1498468058, "post_id": 44756215, "comment_id": 76493288, "body": "With that update, I can tell you that you just want proper error handling. That is covered in the book <a href=\"https://doc.rust-lang.org/book/second-edition/ch09-02-recoverable-errors-with-result.html\" rel=\"nofollow noreferrer\">here</a>."}, {"owner": {"reputation": 1, "user_id": 8206265, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3753f1c48b2eac4479b158fe0eae9df1?s=128&d=identicon&r=PG&f=1", "display_name": "lolman", "link": "https://stackoverflow.com/users/8206265/lolman"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1498468079, "post_id": 44756215, "comment_id": 76493299, "body": "So, I&#39;m trying to make it so I can call test.enable, which is a <code>minhook::Hook</code> method. And I don&#39;t know how to achieve this. I need to call create and enable. Do you have any idea how to accomplish this?"}, {"owner": {"reputation": 1, "user_id": 8206265, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3753f1c48b2eac4479b158fe0eae9df1?s=128&d=identicon&r=PG&f=1", "display_name": "lolman", "link": "https://stackoverflow.com/users/8206265/lolman"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1498468135, "post_id": 44756215, "comment_id": 76493323, "body": "Alright @E_net4 thanks!!!"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1498468172, "post_id": 44756215, "comment_id": 76493338, "body": "Your code is not really readable. You can use a type binding, like: <code>type MyFunc = fn(f32, *mut UserCmd) -&gt; bool</code>"}, {"owner": {"reputation": 1, "user_id": 8206265, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3753f1c48b2eac4479b158fe0eae9df1?s=128&d=identicon&r=PG&f=1", "display_name": "lolman", "link": "https://stackoverflow.com/users/8206265/lolman"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1498468368, "post_id": 44756215, "comment_id": 76493439, "body": "Hmmm.... good idea Boiethios I never thought of this, @E_net4 can you please answer it? So I can accept it as best answer?"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 3, "creation_date": 1498469738, "post_id": 44756215, "comment_id": 76494204, "body": "I&#39;ve answered it, although, as you might have realised, the question&#39;s quality is a bit on the poor side. We expect questions to show effort before being asked, and the subject of error handling with a result should be a fairly trivial one to grasp by either reading the book or checking the official documentation on the <code>Result</code> data type. It would have been a better question if it was narrowed down to a particular use of <code>Result</code> that you did not understand."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1498485299, "post_id": 44756215, "comment_id": 76503544, "body": "<i>As you can see</i> \u2014 no, we <b>cannot</b> because you haven&#39;t provided the complete error message! The library doesn&#39;t seem to have been published to crates.io yet, you didn&#39;t provide a link to the crate, and the crate I found with a matching name only compiles on certain platforms. This question provides very little information. Please review what a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> is and how to provide one."}], "answers": [{"tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 4, "last_activity_date": 1498754963, "last_edit_date": 1498754963, "creation_date": 1498469542, "answer_id": 44756688, "question_id": 44756215, "link": "https://stackoverflow.com/questions/44756215/is-it-possible-to-cast-type-stdresultresult-to-minhookhook/44756688#44756688", "title": "Is it possible to cast type `std::result::Result` to `minhook::Hook`?", "body": "<p><a href=\"https://doc.rust-lang.org/std/result/enum.Result.html\" rel=\"nofollow noreferrer\"><code>Result&lt;T, E&gt;</code></a> is the standard type for representing success or failure of an operation in Rust. It's declared roughly like this:</p>\n\n<pre><code>enum Result&lt;T, E&gt; {\n    Ok(T),\n    Err(E),\n}\n</code></pre>\n\n<p>Any function that could fail in a fairly recoverable way (examples: attempting to open a file that does not exist or a parsing error occurred when reading a corrupted JSON file) will usually return a <code>Result</code>. See also <a href=\"https://stackoverflow.com/questions/22187926/whats-the-benefit-of-using-a-result?rq=1\">What&#39;s the benefit of using a Result?</a>.</p>\n\n<p>You should <strong>not</strong> attempt to reinterpret result objects. Casting is not possible, and you should definitely not use transmutation. Instead, you should always (and I do mean always) use proper methods for handling them. Pointing out <em>just a few examples</em> of result handling:</p>\n\n<ul>\n<li><p>To assertively retrieve the positive outcome (the object of type <code>T</code>), use the <a href=\"https://doc.rust-lang.org/std/result/enum.Result.html#method.unwrap\" rel=\"nofollow noreferrer\"><code>unwrap()</code></a> method. The program will panic if the result holds an error. This is often used when you are sure that no errors can happen in that particular case, or when you really want the program to terminate when that happens.</p></li>\n<li><p>In some other cases, you want to propagate an error out of a function. This is most elegantly achieved with the <a href=\"https://doc.rust-lang.org/book/second-edition/ch09-02-recoverable-errors-with-result.html#a-shortcut-for-propagating-errors-\" rel=\"nofollow noreferrer\"><code>?</code> operator</a>.</p></li>\n</ul>\n\n<p>The Rust Programming language provides a comprehensive section on <a href=\"https://doc.rust-lang.org/book/second-edition/ch09-00-error-handling.html\" rel=\"nofollow noreferrer\">Error Handling</a>, and Rust developers are strongly encouraged to understand these concepts.</p>\n"}], "owner": {"reputation": 1, "user_id": 8206265, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3753f1c48b2eac4479b158fe0eae9df1?s=128&d=identicon&r=PG&f=1", "display_name": "lolman", "link": "https://stackoverflow.com/users/8206265/lolman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 245, "favorite_count": 0, "accepted_answer_id": 44756688, "answer_count": 1, "score": -2, "last_activity_date": 1498754963, "creation_date": 1498467790, "last_edit_date": 1498485136, "question_id": 44756215, "link": "https://stackoverflow.com/questions/44756215/is-it-possible-to-cast-type-stdresultresult-to-minhookhook", "title": "Is it possible to cast type `std::result::Result` to `minhook::Hook`?", "body": "<p>Is it possible to cast type <code>std::result::Result</code> to <code>minhook::Hook</code> using <a href=\"https://github.com/Jascha-N/minhook-rs\" rel=\"nofollow noreferrer\">the minhook library</a>? </p>\n\n<pre><code>test =\n    unsafe {\n        minhook::Hook::&lt;fn(f32, *mut UserCmd) -&gt; bool&gt;::create::&lt;fn(f32, *mut UserCmd) -&gt; bool&gt;(hook_createmove, fn_ptrs.addy)\n    } as minhook::Hook&lt;fn(f32, *mut UserCmd) -&gt; bool&gt;;\n</code></pre>\n\n<p><code>minhook::Hook:::create</code> returns a <code>std:::result::Result&lt;Hook&gt;</code></p>\n\n<p>As you can see, this is giving me the non-scalar cast problem. Is there a workaround for this? </p>\n"}, {"tags": ["syntax", "reference", "rust", "mutable"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1498415000, "post_id": 44748656, "comment_id": 76479578, "body": "If you don&#39;t specify, we assume that you are using the current stable version of Rust. If you are not, it is <b>strongly</b> encouraged that you upgrade. Error messages improve all the time."}, {"owner": {"reputation": 41, "user_id": 8212540, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/34fc5fc8e577870185be5413b87b358c?s=128&d=identicon&r=PG&f=1", "display_name": "heyo", "link": "https://stackoverflow.com/users/8212540/heyo"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1498415644, "post_id": 44748656, "comment_id": 76479741, "body": "I didn&#39;t realize that it wasn&#39;t brew that maintains the rust version. Thanks for the heads up."}], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1498483246, "post_id": 44748749, "comment_id": 76502149, "body": "Now I&#39;m getting confused: what is the lifetime of a temporary? It seems here that the temporary <code>None</code> gets an extended lifetime (at least greater than <code>cmd</code>), when I thought temporaries would not outlive the evaluation of the expression that created them."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1498483579, "post_id": 44748749, "comment_id": 76502376, "body": "@MatthieuM The lifetime will last for the containing block scope. If it was passed as a function argument instead then it would just be the immediately surrounding parentheses. See: <a href=\"https://play.rust-lang.org/?gist=f72221dc92e4a1b08029f7bdac294f9b&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1498483899, "post_id": 44748749, "comment_id": 76502613, "body": "I could not find a definitive answer, and google brings up a bunch of RFCs/blog articles/PRs but it&#39;s not clear whether they&#39;re up to date, so I&#39;ve created a question: <a href=\"https://stackoverflow.com/questions/44760946/when-is-a-temporary-destructed\" title=\"when is a temporary destructed\">stackoverflow.com/questions/44760946/&hellip;</a> in which I invite you to share your knowledge since you seem to know the rules :)"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 4, "last_activity_date": 1498414637, "last_edit_date": 1498414637, "creation_date": 1498411146, "answer_id": 44748749, "question_id": 44748656, "link": "https://stackoverflow.com/questions/44748656/how-do-i-initialize-a-struct-field-which-is-a-mutable-reference-to-an-option/44748749#44748749", "title": "How do I initialize a struct field which is a mutable reference to an Option?", "body": "<p>You just need to provide a mutable reference. Like this:</p>\n\n<pre><code>let cmd = Cmd {\n    exec: String::from(\"whoami\"),\n    args: &amp;mut None,\n};\n</code></pre>\n"}], "owner": {"reputation": 41, "user_id": 8212540, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/34fc5fc8e577870185be5413b87b358c?s=128&d=identicon&r=PG&f=1", "display_name": "heyo", "link": "https://stackoverflow.com/users/8212540/heyo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1281, "favorite_count": 1, "accepted_answer_id": 44748749, "answer_count": 1, "score": 1, "last_activity_date": 1548163573, "creation_date": 1498410507, "last_edit_date": 1548163573, "question_id": 44748656, "link": "https://stackoverflow.com/questions/44748656/how-do-i-initialize-a-struct-field-which-is-a-mutable-reference-to-an-option", "title": "How do I initialize a struct field which is a mutable reference to an Option?", "body": "<p>How do I initialize a struct field which is a mutable reference to an <code>Option&lt;T&gt;</code>? Here is my struct:</p>\n\n<pre><code>pub struct Cmd&lt;'a&gt; {\n    pub exec: String,\n    pub args: &amp;'a mut Option&lt;Vec&lt;String&gt;&gt;,\n}\n</code></pre>\n\n<p>I tried to initialize this struct like this:</p>\n\n<pre><code>let cmd = Cmd {\n    exec: String::from(\"whoami\"),\n    args: None,\n};\n</code></pre>\n\n<p>But I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; src/main.rs:9:15\n  |\n9 |         args: None,\n  |               ^^^^ expected mutable reference, found enum `std::option::Option`\n  |\n  = note: expected type `&amp;mut std::option::Option&lt;std::vec::Vec&lt;std::string::String&gt;&gt;`\n             found type `std::option::Option&lt;_&gt;`\n  = help: try with `&amp;mut None`\n</code></pre>\n\n<p>What is the proper syntax?</p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1498404066, "post_id": 44747543, "comment_id": 76476374, "body": "This is <b>highly</b> related to <a href=\"https://stackoverflow.com/q/25702909/155423\">Can I write an Iterator that yields a reference into itself?</a> but, since it doesn&#39;t need to mutate itself, is actually solvable."}], "answers": [{"comments": [{"owner": {"reputation": 23, "user_id": 8212148, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/70f2719ab870e07f0706c6ed36f9635f?s=128&d=identicon&r=PG&f=1", "display_name": "sabsad", "link": "https://stackoverflow.com/users/8212148/sabsad"}, "edited": false, "score": 0, "creation_date": 1498432506, "post_id": 44748302, "comment_id": 76483891, "body": "Even though all answers were really helpful I&#39;m going to accept this one since this is pretty much what I wound up doing."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 2, "last_activity_date": 1498412861, "last_edit_date": 1498412861, "creation_date": 1498407862, "answer_id": 44748302, "question_id": 44747543, "link": "https://stackoverflow.com/questions/44747543/how-do-i-specify-the-lifetime-for-the-associated-type-of-an-iterator-that-refers/44748302#44748302", "title": "How do I specify the lifetime for the associated type of an iterator that refers to itself but does not mutate itself?", "body": "<p>As discussed in the <a href=\"https://stackoverflow.com/q/25702909/155423\">question</a> that Shepmaster linked to, this is a bit tricky because you really want to change the type of <code>next()</code>, but you can't because it's part of the trait. There are a couple of approaches to solve this though.</p>\n\n<p>Making minimal changes to your code, you can just use the <code>Iterator</code> implementation on the <code>&amp;'a RepIter&lt;T&gt;</code>:</p>\n\n<pre><code>pub fn main() {\n    let mut iter = RepIter { item: 5 };\n    let res = (&amp;iter).next();\n}\n</code></pre>\n\n<p>It's a bit unpleasant though.</p>\n\n<p>Another way of looking at this is to change the ownership of your item. If it was already borrowed, then you can make all the types match up nicely:</p>\n\n<pre><code>struct RepIter&lt;'a, T: 'a&gt; {\n    item: &amp;'a T,\n}\n\nimpl&lt;'a, T&gt; Iterator for RepIter&lt;'a, T&gt; {\n    type Item = &amp;'a T;\n    fn next(&amp;mut self) -&gt; Option&lt;&amp;'a T&gt; {\n        Some(&amp;self.item)\n    }\n}\n\npub fn main() {\n    let val: u64 = 5;\n    let mut iter = RepIter { item: &amp;val };\n    let res = iter.next();\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1498409095, "post_id": 44748468, "comment_id": 76477787, "body": "Oh. That is a bit weird!"}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 2, "creation_date": 1498412082, "post_id": 44748468, "comment_id": 76478718, "body": "I think that&#39;s because the compiler will only autoref <i>once</i>. In order to call the methods that take <code>self</code> by value, it only needs to autoref once, but to call the methods that take <code>self</code> by reference, it would need to autoref twice."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1498408993, "creation_date": 1498408993, "answer_id": 44748468, "question_id": 44747543, "link": "https://stackoverflow.com/questions/44747543/how-do-i-specify-the-lifetime-for-the-associated-type-of-an-iterator-that-refers/44748468#44748468", "title": "How do I specify the lifetime for the associated type of an iterator that refers to itself but does not mutate itself?", "body": "<p>I would recommend writing your code as:</p>\n\n<pre><code>use std::iter;\n\nfn main() {\n    let val = 5u64;\n    let mut iter = iter::repeat(&amp;val);\n    let res = iter.next();\n}\n</code></pre>\n\n<hr>\n\n<p>One thing that I don't quite understand yet is that your existing code <em>almost</em> works, but only for certain <code>Iterator</code> methods; those that take <code>self</code> by value instead of reference!</p>\n\n<pre><code>struct RepIter&lt;T&gt; {\n    item: T,\n}\n\nimpl&lt;'a, T&gt; Iterator for &amp;'a RepIter&lt;T&gt; {\n    type Item = &amp;'a T;\n    fn next(&amp;mut self) -&gt; Option&lt;&amp;'a T&gt; {\n        return Some(&amp;self.item);\n    }\n}\n\nfn main() {\n    let iter: RepIter&lt;u64&gt; = RepIter { item: 5 };\n\n    // Works\n    let res = iter.fuse().next();\n    println!(\"{:?}\", res);\n\n    // Doesn't work\n    let res = iter.by_ref().next();\n    println!(\"{:?}\", res);\n}\n</code></pre>\n\n<p>There's probably some interesting interaction happening.</p>\n"}, {"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 3, "last_activity_date": 1498413000, "last_edit_date": 1498413000, "creation_date": 1498412451, "answer_id": 44748916, "question_id": 44747543, "link": "https://stackoverflow.com/questions/44747543/how-do-i-specify-the-lifetime-for-the-associated-type-of-an-iterator-that-refers/44748916#44748916", "title": "How do I specify the lifetime for the associated type of an iterator that refers to itself but does not mutate itself?", "body": "<p>When designing an iterator, it's often useful to have distinct types for the <em>collection</em> and for the <em>iterator over that collection</em>. Usually, the collection will own the data, and the iterator will borrow from the collection. Collection types typically implement <code>IntoIterator</code> and don't implement <code>Iterator</code>. This means that creating an iterator happens in two steps: we need to create the collection first, then create the iterator from the collection.</p>\n\n<p>Here's a solution that turns your <code>RepIter</code> type into a collection. I'll use <a href=\"https://stackoverflow.com/a/44748468/234590\">Shepmaster</a>'s proposition to use <a href=\"https://doc.rust-lang.org/stable/std/iter/fn.repeat.html\" rel=\"nofollow noreferrer\"><code>iter::repeat</code></a> to produce the iterator.</p>\n\n<pre><code>use std::iter::{self, Repeat};\n\nstruct RepIter&lt;T&gt; {\n    item: T,\n}\n\nimpl&lt;T&gt; RepIter&lt;T&gt; {\n    // When IntoIterator is implemented on `&amp;Self`,\n    // then by convention, an inherent iter() method is provided as well.\n    fn iter(&amp;self) -&gt; Repeat&lt;&amp;T&gt; {\n        iter::repeat(&amp;self.item)\n    }\n}\n\nimpl&lt;'a, T&gt; IntoIterator for &amp;'a RepIter&lt;T&gt; {\n    type Item = &amp;'a T;\n    type IntoIter = Repeat&lt;&amp;'a T&gt;;\n\n    fn into_iter(self) -&gt; Self::IntoIter {\n        self.iter()\n    }\n}\n\nfn main() {\n    let iter: RepIter&lt;u64&gt; = RepIter { item: 5 };\n\n    let res = iter.iter().next();\n    println!(\"{:?}\", res);\n\n    let res = iter.iter().fuse().next();\n    println!(\"{:?}\", res);\n\n    let res = iter.iter().by_ref().next();\n    println!(\"{:?}\", res);\n}\n</code></pre>\n"}], "owner": {"reputation": 23, "user_id": 8212148, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/70f2719ab870e07f0706c6ed36f9635f?s=128&d=identicon&r=PG&f=1", "display_name": "sabsad", "link": "https://stackoverflow.com/users/8212148/sabsad"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 486, "favorite_count": 2, "accepted_answer_id": 44748302, "answer_count": 3, "score": 2, "last_activity_date": 1498428505, "creation_date": 1498402528, "last_edit_date": 1498428505, "question_id": 44747543, "link": "https://stackoverflow.com/questions/44747543/how-do-i-specify-the-lifetime-for-the-associated-type-of-an-iterator-that-refers", "title": "How do I specify the lifetime for the associated type of an iterator that refers to itself but does not mutate itself?", "body": "<p>I have this struct:</p>\n\n<pre><code>struct RepIter&lt;T&gt; {\n    item: T\n}\n</code></pre>\n\n<p>I want to implement <code>Iterator</code> for it so that it returns a reference to its <code>item</code> every time:</p>\n\n<pre><code>impl&lt;T&gt; Iterator for RepIter&lt;T&gt; {\n    type Item = &amp;T;\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        return Some(&amp;self.item);\n    }\n}\n</code></pre>\n\n<p>This doesn't compile since a lifetime must be specified for <code>type Item = &amp;T;</code>. Searching for a way to do this I found <a href=\"https://stackoverflow.com/questions/33734640/lifetime-parameters-in-associated-type\">this question</a>. The first solution doesn't seem applicable since I'm implementing a preexisting trait. Trying to copy the second solution directly I get something like this:</p>\n\n<pre><code>impl&lt;'a, T&gt; Iterator for &amp;'a RepIter&lt;T&gt; {\n    type Item = &amp;'a T;\n    fn next(self) -&gt; Option&lt;&amp;'a T&gt; {\n        return Some(&amp;self.item);\n    }\n}\n</code></pre>\n\n<p>This doesn't work either since I need a mutable <code>self</code> as argument to <code>next</code>. The only way I was able to get it to compile was to write it like this:</p>\n\n<pre><code>impl&lt;'a, T&gt; Iterator for &amp;'a RepIter&lt;T&gt; {\n    type Item = &amp;'a T;\n    fn next(&amp;mut self) -&gt; Option&lt;&amp;'a T&gt; {\n        return Some(&amp;self.item);\n    }\n}\n</code></pre>\n\n<p>But now <code>self</code> is a reference to a reference, right? I don't know how to call <code>next</code> on an instance of <code>RepIter</code>. For example, this doesn't work:</p>\n\n<pre><code>fn main() {\n    let mut iter: RepIter&lt;u64&gt; = RepIter { item: 5 };\n    let res = iter.next();\n}\n</code></pre>\n\n<p>This makes me think my implementation of the trait could be written in a better way.</p>\n"}, {"tags": ["enums", "rust"], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 13, "last_activity_date": 1498368065, "creation_date": 1498368065, "answer_id": 44743445, "question_id": 44743409, "link": "https://stackoverflow.com/questions/44743409/why-can-i-use-ok-and-err-directly-without-the-result-prefix/44743445#44743445", "title": "Why can I use Ok and Err directly without the Result:: prefix?", "body": "<p>A <code>use</code> item can add enum variants to a namespace, so that you don't have to prefix them by the enum's name.</p>\n\n<pre><code>use Foobar::*;\n\nenum Foobar {\n    Foo(i32),\n    Bar(i32)\n}\n\nfn main() {\n    let a: Result&lt;i32, i32&gt; = Result::Ok(1);\n    let b: Result&lt;i32, i32&gt; = Ok(1);\n    let c: Foobar = Foobar::Foo(1);\n    let d: Foobar = Foo(1); // Not an error anymore!\n}\n</code></pre>\n\n<p>The reason why <code>Ok</code>, <code>Err</code>, <code>Some</code> and <code>None</code> are available without qualification is that the <a href=\"https://doc.rust-lang.org/stable/std/prelude/v1/index.html\" rel=\"noreferrer\">prelude</a> has some <code>use</code> items that add these names to the prelude (in addition to the enums themselves):</p>\n\n<pre><code>pub use option::Option::{self, Some, None};\npub use result::Result::{self, Ok, Err};\n</code></pre>\n"}], "owner": {"reputation": 2027, "user_id": 722720, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/7c5d12bf3c52daa8c9169da94ec021b8?s=128&d=identicon&r=PG", "display_name": "EFanZh", "link": "https://stackoverflow.com/users/722720/efanzh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 262, "favorite_count": 2, "accepted_answer_id": 44743445, "answer_count": 1, "score": 9, "last_activity_date": 1498401961, "creation_date": 1498367670, "last_edit_date": 1498401961, "question_id": 44743409, "link": "https://stackoverflow.com/questions/44743409/why-can-i-use-ok-and-err-directly-without-the-result-prefix", "title": "Why can I use Ok and Err directly without the Result:: prefix?", "body": "<p>For example:</p>\n\n<pre><code>enum Foobar {\n    Foo(i32),\n    Bar(i32),\n}\n\nfn main() {\n    let a: Result&lt;i32, i32&gt; = Result::Ok(1);\n    let b: Result&lt;i32, i32&gt; = Ok(1);\n    let c: Foobar = Foobar::Foo(1);\n    let d: Foobar = Foo(1); // Error!\n}\n</code></pre>\n\n<p>I have to write <code>Foobar::Foo()</code> instead of just <code>Foo()</code>, but I can just write <code>Ok()</code> without <code>Result::</code>. Why is that? I have the same question for <code>Some</code> and <code>None</code>.</p>\n"}, {"tags": ["rust", "function-pointers"], "answers": [{"comments": [{"owner": {"reputation": 348, "user_id": 1118408, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/4Mxbh.jpg?s=128&g=1", "display_name": "Umur Gedik", "link": "https://stackoverflow.com/users/1118408/umur-gedik"}, "edited": false, "score": 0, "creation_date": 1498365580, "post_id": 44743232, "comment_id": 76467550, "body": "Also you can use <code>Self</code> (capital S) in traits and impls. In your case for example you can change <code>new</code> function&#39;s return type to <code>Self</code> instead of keep repeating <code>Test</code>."}], "tags": [], "owner": {"reputation": 348, "user_id": 1118408, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/4Mxbh.jpg?s=128&g=1", "display_name": "Umur Gedik", "link": "https://stackoverflow.com/users/1118408/umur-gedik"}, "is_accepted": true, "score": 2, "last_activity_date": 1498365499, "creation_date": 1498365499, "answer_id": 44743232, "question_id": 44743023, "link": "https://stackoverflow.com/questions/44743023/how-do-i-get-a-function-pointer-from-a-trait-in-rust/44743232#44743232", "title": "How do I get a function pointer from a trait in Rust?", "body": "<p>There are few mistakes with your code. new function (by the convention) should not take self reference, since it is expected to create Self type. </p>\n\n<p>But the real issue is, <code>Test::foo</code> expecting a function type <code>fn()</code>, but <code>Test::a</code>'s type is <code>fn(&amp;Test)</code> == <code>fn a(&amp;self)</code> if you change the type of <code>foo</code> to <code>fn(&amp;Test)</code> it will work. Also you need to use function name with the trait name instead of <code>self</code>. Instead of assigning to <code>self.a</code> you should assign <code>Test::a</code>.</p>\n\n<p>Here is the working version:</p>\n\n<pre><code>extern crate chrono;\n\nstruct Test {\n    foo: Option&lt;fn(&amp;Test)&gt;\n}\n\nimpl Test {\n    fn new() -&gt; Test {\n        Test {\n            foo: Some(Test::a)\n        }\n    }\n\n    fn a(&amp;self) {\n        println!(\"a run!\");\n    }\n}\n\nfn main() {\n    let test = Test::new();\n    test.foo.unwrap()(&amp;test);\n}\n</code></pre>\n\n<p>Also if you gonna assign a field in <code>new()</code> function, and the value must always set, then there is no need to use <code>Option</code> instead it can be like that:</p>\n\n<pre><code>extern crate chrono;\n\nstruct Test {\n    foo: fn(&amp;Test)\n}\n\nimpl Test {\n    fn new() -&gt; Test {\n        Test {\n            foo: Test::a\n        }\n    }\n\n    fn a(&amp;self) {\n        println!(\"a run!\");\n    }\n}\n\nfn main() {\n    let test = Test::new();\n    (test.foo)(&amp;test); // Make sure the paranthesis are there\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": false, "score": 4, "last_activity_date": 1498365633, "creation_date": 1498365633, "answer_id": 44743241, "question_id": 44743023, "link": "https://stackoverflow.com/questions/44743023/how-do-i-get-a-function-pointer-from-a-trait-in-rust/44743241#44743241", "title": "How do I get a function pointer from a trait in Rust?", "body": "<p>What you're trying to do here is get a function pointer from a (to use Python terminology here, since Rust doesn't <em>have</em> a word for this) bound method.  You can't.</p>\n\n<p>Firstly, because Rust doesn't have a concept of \"bound\" methods; that is, you can't refer to a method with the invocant (the thing on the left of the <code>.</code>) already bound in place.  If you want to construct a callable which approximates this, you'd use a closure; <em>i.e.</em> <code>|| self.a()</code>.</p>\n\n<p>However, this <em>still</em> wouldn't work because closures <em>aren't function pointers</em>.  There is no \"base type\" for callable things like in some other languages.  Function pointers are a single, specific kind of callable; closures are completely different.  Instead, there are traits which (when implemented) make a type callable.  They are <code>Fn</code>, <code>FnMut</code>, and <code>FnOnce</code>.  Because they are traits, you can't use them as types, and must instead use them from behind some layer of indirection, such as <code>Box&lt;FnOnce()&gt;</code> or <code>&amp;mut FnMut(i32) -&gt; String</code>.</p>\n\n<p>Now, you <em>could</em> change <code>Test</code> to store an <code>Option&lt;Box&lt;Fn()&gt;&gt;</code> instead, but that still wouldn't help.  That's because of the other, <em>other</em> problem: you're trying to store a reference to the struct inside of itself.  This is <em>not</em> going to work well.  If you manage to do this, you effectively render the <code>Test</code> value permanently unusable.  More likely is that the compiler just won't let you get that far.</p>\n\n<blockquote>\n  <p><strong>Aside</strong>: you <em>can</em> do it, but not without resorting to reference counting and dynamic borrow checking, which is out of scope here.</p>\n</blockquote>\n\n<p>So the answer to your question as-asked is: you don't.</p>\n\n<p>Let's change the question: instead of trying to crowbar a self-referential closure in, we can instead store a callable that <em>doesn't</em> attempt to capture the invocant at all.</p>\n\n<pre><code>struct Test {\n    foo: Option&lt;Box&lt;Fn(&amp;Test)&gt;&gt;,\n}\n\nimpl Test {\n    fn new() -&gt; Test {\n        Test {\n            foo: Option::Some(Box::new(Self::a)),\n        }\n    }\n\n    fn a(&amp;self) { /* can use Test */ }\n\n    fn invoke(&amp;self) {\n        if let Some(f) = self.foo.as_ref() {\n            f(self);\n        }\n    }\n}\n\nfn main() {\n    let t = Test::new();\n    t.invoke();\n}\n</code></pre>\n\n<p>The callable being stored is now a function that takes the invocant explicitly, side-stepping the issues with cyclic references.  We can use this to store <code>Test::a</code> directly, by referring to it as a free function.  Also note that because <code>Test</code> is the implementation type, I can also refer to it as <code>Self</code>.</p>\n\n<blockquote>\n  <p><strong>Aside</strong>: I've also corrected your <code>Test::new</code> function.  Rust doesn't have constructors, just functions that return values like any other.</p>\n</blockquote>\n\n<p>If you're confident you will never want to store a closure in <code>foo</code>, you can replace <code>Box&lt;Fn(&amp;Test)&gt;</code> with <code>fn(&amp;Test)</code> instead.  This limits you to function pointers, but avoids the extra allocation.</p>\n\n<p>If you haven't already, I <em>strongly</em> urge you to read <a href=\"https://doc.rust-lang.org/book/\" rel=\"nofollow noreferrer\">the Rust Book</a>.</p>\n"}], "owner": {"reputation": 407, "user_id": 1032861, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/419e249c946f252fcd39151020d9c7eb?s=128&d=identicon&r=PG", "display_name": "user1032861", "link": "https://stackoverflow.com/users/1032861/user1032861"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1735, "favorite_count": 1, "accepted_answer_id": 44743232, "answer_count": 2, "score": 0, "last_activity_date": 1498402266, "creation_date": 1498362502, "last_edit_date": 1498402266, "question_id": 44743023, "link": "https://stackoverflow.com/questions/44743023/how-do-i-get-a-function-pointer-from-a-trait-in-rust", "title": "How do I get a function pointer from a trait in Rust?", "body": "<p>How do I get over something like this:</p>\n\n<pre><code>struct Test {\n    foo: Option&lt;fn()&gt;\n}\n\nimpl Test {\n    fn new(&amp;mut self) {\n        self.foo = Option::Some(self.a);\n    }\n\n    fn a(&amp;self) { /* can use Test */ }\n}\n</code></pre>\n\n<p>I get this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: attempted to take value of method `a` on type `&amp;mut Test`\n --&gt; src/main.rs:7:36\n  |\n7 |             self.foo = Option::Some(self.a);\n  |                                          ^\n  |\n  = help: maybe a `()` to call it is missing? If not, try an anonymous function\n</code></pre>\n\n<p>How do I pass a function pointer from a trait? Similar to what would happen in this case:</p>\n\n<pre><code>impl Test {\n    fn new(&amp;mut self) {\n        self.foo = Option::Some(a);\n    }\n}\n\nfn a() { /* can't use Test */ }\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 479, "user_id": 1349450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8b0be7d1d308696a2d4f3feb122ee3b1?s=128&d=identicon&r=PG", "display_name": "Michael Yoo", "link": "https://stackoverflow.com/users/1349450/michael-yoo"}, "edited": false, "score": 0, "creation_date": 1498328406, "post_id": 44737275, "comment_id": 76460442, "body": "Thank you for the full form, I realise now That &quot;Self&quot; in <code>fn from(T) -&gt; Self;</code> refers actually not to std::io::Error but hyper::Error, which is automatically inferred!"}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": false, "score": 6, "last_activity_date": 1498313440, "creation_date": 1498313440, "answer_id": 44737275, "question_id": 44737154, "link": "https://stackoverflow.com/questions/44737154/how-does-rust-infer-resultant-types-from-fromfrom/44737275#44737275", "title": "How does Rust infer resultant types from From::&lt;&gt;::from()?", "body": "<p>Type information in Rust can flow backwards.</p>\n\n<p>The return type of the closure is specified to be <code>hyper::Error</code>.  Therefore, the result of the block must be <code>hyper::Error</code>, therefore the result of <code>From::from</code> must be <code>hyper::Error</code>.</p>\n\n<p>If you wanted to, you could use ...</p>\n\n<pre><code>&lt;hyper::Error as ::std::convert::From&gt;::&lt;std::io::Error&gt;::from(x)\n</code></pre>\n\n<p>... which would be the even more fully qualified version.  But with the closure return type there, it's unnecessary.</p>\n"}, {"comments": [{"owner": {"reputation": 479, "user_id": 1349450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8b0be7d1d308696a2d4f3feb122ee3b1?s=128&d=identicon&r=PG", "display_name": "Michael Yoo", "link": "https://stackoverflow.com/users/1349450/michael-yoo"}, "edited": false, "score": 0, "creation_date": 1498328263, "post_id": 44739469, "comment_id": 76460393, "body": "Ah, I see. Coming from an OOP background I&#39;ve only ever seen types going downwards, never thought about them converging and altering a &quot;parent&quot; signature that way!"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 479, "user_id": 1349450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8b0be7d1d308696a2d4f3feb122ee3b1?s=128&d=identicon&r=PG", "display_name": "Michael Yoo", "link": "https://stackoverflow.com/users/1349450/michael-yoo"}, "edited": false, "score": 0, "creation_date": 1498328368, "post_id": 44739469, "comment_id": 76460428, "body": "@MichaelYoo: If it seems like magic, it&#39;s just advanced technology ;)"}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 3, "last_activity_date": 1498327769, "creation_date": 1498327769, "answer_id": 44739469, "question_id": 44737154, "link": "https://stackoverflow.com/questions/44737154/how-does-rust-infer-resultant-types-from-fromfrom/44739469#44739469", "title": "How does Rust infer resultant types from From::&lt;&gt;::from()?", "body": "<p>Type inference has varying degrees.</p>\n\n<p>For example, in C++ each literal is typed, and only a fully formed type can be instantiated, therefore the type of any expression can be computed (and is). Before C++11, this led to the compiler giving an error message: <em>You are attempting to assign a value of type <code>X</code> to a variable of type <code>Y</code></em>. In C++11, <code>auto</code> was introduced to let the compiler figure out the type of the variable based on the value that was assigned to it.</p>\n\n<p>In Java, this works slightly differently: the type of a variable has to be fully spelled out, but in exchange when constructing a type the generic bits can be left out since they are deduced from the variable the value is assigned to.</p>\n\n<p>Those two examples are interesting because type information does not flow the same way in both of them, which hints that there is no reason for the flow to go one way or another; there are however technical constraints aplenty.</p>\n\n<p>Rust, instead, uses a variation of the Hindley Milner type unification algorithm.</p>\n\n<p>I personally see Hindley Milner as a system of equation:</p>\n\n<ol>\n<li>Give each potential type a name: A, B, C, ...</li>\n<li>Create equations tying together those types based on the structure of the program.</li>\n</ol>\n\n<p>For example, imagine the following:</p>\n\n<pre><code>fn print_slice(s: &amp;[u32]) {\n    println!(\"{:?}\", s);\n}\n\nfn main() {\n    let mut v = Vec::new();\n    v.push(1);\n    print_slice(&amp;v);\n}\n</code></pre>\n\n<p>And start from <code>main</code>:</p>\n\n<ol>\n<li>Assign names to types: <code>v =&gt; A</code>, <code>1 =&gt; B</code>,</li>\n<li>Put forth some equations: <code>A = Vec&lt;C&gt;</code> (from <code>v = Vec::new()</code>), <code>C = B</code> (from <code>v.push(1)</code>), <code>A = &amp;[u32]</code> OR <code>&lt;A as Deref&gt;::Output = &amp;[u32]</code> OR <code>...</code> (from <code>print_slice(&amp;v)</code>,</li>\n<li>First round of solving: <code>A = Vec&lt;B&gt;</code>, <code>&amp;[B] = &amp;[u32]</code>,</li>\n<li>Second round of solving: <code>B = u32</code>, <code>A = Vec&lt;u32&gt;</code>.</li>\n</ol>\n\n<p>There are some difficulties woven into the mix because of <em>subtyping</em> (which the original HM doesn't have), however it's essentially just that.</p>\n\n<p>In this process, there is no consideration for going backward or forwarded, it's just equation solving either way.</p>\n\n<p>This process is known as <strong>Type Unification</strong> and if it fails you get a hopefully helpful compiler error.</p>\n"}], "owner": {"reputation": 479, "user_id": 1349450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8b0be7d1d308696a2d4f3feb122ee3b1?s=128&d=identicon&r=PG", "display_name": "Michael Yoo", "link": "https://stackoverflow.com/users/1349450/michael-yoo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 170, "favorite_count": 1, "accepted_answer_id": 44739469, "answer_count": 2, "score": 0, "last_activity_date": 1498341209, "creation_date": 1498312674, "last_edit_date": 1498341209, "question_id": 44737154, "link": "https://stackoverflow.com/questions/44737154/how-does-rust-infer-resultant-types-from-fromfrom", "title": "How does Rust infer resultant types from From::&lt;&gt;::from()?", "body": "<p>In this snippet from Hyper's example, there's a bit of code that I've annotated with types that compiles successfully:</p>\n\n<pre><code>.map_err(|x: std::io::Error| -&gt; hyper::Error {\n    ::std::convert::From::&lt;std::io::Error&gt;::from(x)\n})\n</code></pre>\n\n<p>The type definition of <code>From::from()</code> seems to be <code>fn from(T) -&gt; Self;</code></p>\n\n<p>How is it that what seems to be a <code>std::io::Error -&gt; Self</code> seems to return a <code>hyper::Error</code> value, when none of the generics and arguments I give it are of the type <code>hyper::Error</code>?</p>\n\n<p>It seems that some sort of implicit type conversion is happening even when I specify all the types explicitly?</p>\n"}, {"tags": ["enums", "rust", "pattern-matching", "monads", "combinators"], "answers": [{"comments": [{"owner": {"reputation": 1237, "user_id": 4521118, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/d11ca9b6705ca00f5e59250eda7001b4?s=128&d=identicon&r=PG&f=1", "display_name": "rhaps0dy", "link": "https://stackoverflow.com/users/4521118/rhaps0dy"}, "edited": false, "score": 0, "creation_date": 1498297573, "post_id": 44735006, "comment_id": 76451769, "body": "The problem I originally posted was a little too simple, I am actually using the<code>serde_json</code> library, and doing this would be somewhat cumbersome. However, turns out they implement this already! <a href=\"https://docs.serde.rs/serde_json/enum.Value.html\" rel=\"nofollow noreferrer\">docs.serde.rs/serde_json/enum.Value.html</a> . So to any readers, know that you can look for this pattern in libraries."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1498341150, "post_id": 44735006, "comment_id": 76463775, "body": "This is an established pattern, so the example code should follow the established naming convention. Since this takes ownership, it should be <code>into_first</code>. There can be related functions for references (<code>as_first</code>) and mutable references (<code>as_first_mut</code>)."}, {"owner": {"reputation": 608, "user_id": 1907543, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7597ff99ee5f0704208709c3d17d9f33?s=128&d=identicon&r=PG", "display_name": "daboross", "link": "https://stackoverflow.com/users/1907543/daboross"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1498355073, "post_id": 44735006, "comment_id": 76466084, "body": "@Shepmaster definitely - sounds like a good idea. I was thinking <code>into</code> really makes sense when some internal thing is being transformed, String -&gt; Vec, but I can see it making sense for this kind of unwrapping too."}], "tags": [], "owner": {"reputation": 608, "user_id": 1907543, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7597ff99ee5f0704208709c3d17d9f33?s=128&d=identicon&r=PG", "display_name": "daboross", "link": "https://stackoverflow.com/users/1907543/daboross"}, "is_accepted": true, "score": 3, "last_activity_date": 1498297145, "creation_date": 1498297145, "answer_id": 44735006, "question_id": 44734860, "link": "https://stackoverflow.com/questions/44734860/composing-optionenum-with-closures-that-pattern-match-arguments/44735006#44735006", "title": "Composing Option&lt;Enum&gt; with closures that pattern-match arguments", "body": "<p>The best way to handle this specific case would be to create a method on the <code>enum</code> specifically for retrieving the one variant. Somewhat like <a href=\"https://doc.rust-lang.org/std/result/enum.Result.html#method.ok\" rel=\"nofollow noreferrer\"><code>Result::ok</code></a>.</p>\n\n<pre><code>enum Possibilities {\n    First(i32),\n    Second(String),\n}\nuse Possibilities::*;\n\nimpl Possibilities {\n    fn first(self) -&gt; Option&lt;i32&gt; {\n        match self {\n            Possibilities::First(x) =&gt; Some(x),\n            _ =&gt; None,\n        }\n    }\n}\n</code></pre>\n\n<p>This would allow you to implement your function like:</p>\n\n<pre><code>some_fun().and_then(|p| p.first()).map(|x| x * 2)\n// or, if you prefer this style:\nsome_fun().and_then(Possibilities::first).map(|x| x * 2);\n</code></pre>\n\n<p>This makes it explicit what each step is doing - <code>some_poss</code> gets an <code>Option&lt;Possiblities&gt;</code>, then <code>first()</code> gets an <code>Option&lt;i32&gt;</code> from that <code>Possibilities</code>, and then <code>and_then</code> collapses <code>Option&lt;Option&lt;i32&gt;&gt;</code> into <code>Option&lt;i32&gt;</code>.</p>\n"}], "owner": {"reputation": 1237, "user_id": 4521118, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/d11ca9b6705ca00f5e59250eda7001b4?s=128&d=identicon&r=PG&f=1", "display_name": "rhaps0dy", "link": "https://stackoverflow.com/users/4521118/rhaps0dy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 447, "favorite_count": 0, "accepted_answer_id": 44735006, "answer_count": 1, "score": 2, "last_activity_date": 1498341053, "creation_date": 1498296014, "last_edit_date": 1498341053, "question_id": 44734860, "link": "https://stackoverflow.com/questions/44734860/composing-optionenum-with-closures-that-pattern-match-arguments", "title": "Composing Option&lt;Enum&gt; with closures that pattern-match arguments", "body": "<p>I have an enum with two different possible \"types\" and a function that may return any of them, wrapped in an <code>Option</code>:</p>\n\n<pre><code>enum Possibilities {\n    First(i32),\n    Second(String),\n}\nuse Possibilities::*;\n\nfn some_poss() -&gt; Option&lt;Possibilities&gt; {\n    Some(Second(String::from(\"hi\")))\n}\n</code></pre>\n\n<p>I want to apply an operation to the result of <code>some_poss</code>, but this operation only makes sense for one of the possibilities of the enum, otherwise it should return <code>None</code>. For example:   </p>\n\n<pre><code>let a: Option&lt;i32&gt; = some_poss().and_then(|poss| if let First(x) = poss {\n    Some(x * 2)\n} else {\n    None\n});\n</code></pre>\n\n<p>How can I concisely combine this operation? Would it be possible to write this in a way similar to the following?</p>\n\n<pre><code>// Compile error: pattern `Second(_)` not covered\nlet b: Option&lt;i32&gt; = some_poss().map(|First(x)| x * 2);\n</code></pre>\n"}, {"tags": ["json", "validation", "rust"], "comments": [{"owner": {"reputation": 54533, "user_id": 94559, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ab13b7f135315a91b9ef13e073354d90?s=128&d=identicon&r=PG&f=1", "display_name": "user94559", "link": "https://stackoverflow.com/users/94559/user94559"}, "edited": false, "score": 0, "creation_date": 1498383521, "post_id": 44733603, "comment_id": 76471073, "body": "Isn&#39;t this example what you want? <a href=\"https://github.com/rustless/valico#json-schema\" rel=\"nofollow noreferrer\">github.com/rustless/valico#json-schema</a>"}, {"owner": {"reputation": 1155, "user_id": 4983469, "user_type": "registered", "accept_rate": 94, "profile_image": "https://lh6.googleusercontent.com/-btlwMISgi2c/AAAAAAAAAAI/AAAAAAAAAKs/L041fOZBcY0/photo.jpg?sz=128", "display_name": "leoOrion", "link": "https://stackoverflow.com/users/4983469/leoorion"}, "reply_to_user": {"reputation": 54533, "user_id": 94559, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ab13b7f135315a91b9ef13e073354d90?s=128&d=identicon&r=PG&f=1", "display_name": "user94559", "link": "https://stackoverflow.com/users/94559/user94559"}, "edited": false, "score": 0, "creation_date": 1499147693, "post_id": 44733603, "comment_id": 76773298, "body": "<code>serialize::json;</code> is deprecated. I cant use it in a stable Rust"}, {"owner": {"reputation": 54533, "user_id": 94559, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ab13b7f135315a91b9ef13e073354d90?s=128&d=identicon&r=PG&f=1", "display_name": "user94559", "link": "https://stackoverflow.com/users/94559/user94559"}, "edited": false, "score": 0, "creation_date": 1499194568, "post_id": 44733603, "comment_id": 76801450, "body": "I don&#39;t understand your comment. Why is that relevant?"}, {"owner": {"reputation": 54533, "user_id": 94559, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ab13b7f135315a91b9ef13e073354d90?s=128&d=identicon&r=PG&f=1", "display_name": "user94559", "link": "https://stackoverflow.com/users/94559/user94559"}, "edited": false, "score": 0, "creation_date": 1499195921, "post_id": 44733603, "comment_id": 76802000, "body": "Oh, sorry, I think I see. (<code>serialize::json</code> is <code>use</code>d at the top of the sample.) The open issues (and how long they&#39;ve been open) make me think this library might not get fixed: <a href=\"https://github.com/rustless/valico/issues\" rel=\"nofollow noreferrer\">github.com/rustless/valico/issues</a>."}], "answers": [{"comments": [{"owner": {"reputation": 1155, "user_id": 4983469, "user_type": "registered", "accept_rate": 94, "profile_image": "https://lh6.googleusercontent.com/-btlwMISgi2c/AAAAAAAAAAI/AAAAAAAAAKs/L041fOZBcY0/photo.jpg?sz=128", "display_name": "leoOrion", "link": "https://stackoverflow.com/users/4983469/leoorion"}, "edited": false, "score": 1, "creation_date": 1498317863, "post_id": 44736676, "comment_id": 76457399, "body": "That&#39;s precisely my problem. I already have a JSON schema. I dont want to build a new schema to validate against."}], "tags": [], "owner": {"reputation": 1, "user_id": 8206265, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3753f1c48b2eac4479b158fe0eae9df1?s=128&d=identicon&r=PG&f=1", "display_name": "lolman", "link": "https://stackoverflow.com/users/8206265/lolman"}, "is_accepted": false, "score": 0, "last_activity_date": 1498309928, "last_edit_date": 1498309928, "creation_date": 1498309296, "answer_id": 44736676, "question_id": 44733603, "link": "https://stackoverflow.com/questions/44733603/how-do-i-validate-json-using-an-existing-schema-file-in-rust/44736676#44736676", "title": "How do I validate JSON using an existing schema file in Rust?", "body": "<p>I guess you can try this:</p>\n\n<pre><code>use valico::json_dsl;\nuse serde_json::{from_str, to_string_pretty}\n\n...\n\nlet params = json_dsl::Builder::build(|params| {\n    // code here\n});\n\nlet mut obj = from_str(&amp;jsonSchemaString).unwrap();\n\nlet state = params.process(&amp;mut obj, &amp;None);\n</code></pre>\n\n<p>Instead of using a type Value. This should work.</p>\n"}, {"tags": [], "owner": {"reputation": 1298, "user_id": 143279, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/I0Npe.jpg?s=128&g=1", "display_name": "bleakgadfly", "link": "https://stackoverflow.com/users/143279/bleakgadfly"}, "is_accepted": true, "score": 6, "last_activity_date": 1516039938, "creation_date": 1516039938, "answer_id": 48268543, "question_id": 44733603, "link": "https://stackoverflow.com/questions/44733603/how-do-i-validate-json-using-an-existing-schema-file-in-rust/48268543#48268543", "title": "How do I validate JSON using an existing schema file in Rust?", "body": "<p>Late to the party here, but in case <a href=\"https://xkcd.com/979/\" rel=\"noreferrer\">anyone</a> else is having trouble with this, below is a MVCE I've adjusted to using the schema and data you used as an example. I included the strings directly in the code for \"simplicity\", but you can just replace that with <code>fs::File</code>/<code>io::Read</code> operations you already had.</p>\n\n<pre><code>extern crate serde_json;\nextern crate valico;\n\nuse serde_json::from_str;\nuse valico::json_schema;\n\nfn main() {\n    let s = from_str(r#\"\n    {\n        \"Address\": {\n            \"Street\":\"Downing Street 10\",\n            \"City\":\"London\",\n            \"Country\":\"Great Britain\"\n        }\n    }\n    \"#).unwrap();\n\n    let j_schema = from_str(r#\"\n    {\n        \"type\": \"object\",\n        \"properties\": {\n            \"Address\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"Country\": {\n                        \"type\": \"string\"\n                    },\n                    \"Street\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\"Country\", \"Street\"]\n            }\n        },\n        \"required\": [\"Address\"]\n    }\n    \"#).unwrap();\n\n    let mut scope = json_schema::Scope::new();\n    let r_schema = scope.compile_and_return(j_schema, true).ok().unwrap();\n\n    println!(\"Is valid: {}\", r_schema.validate(&amp;s).is_valid())\n}\n</code></pre>\n\n<p>Running this prints <code>Is valid: true</code>. Changing the \"Address\" to \"Addresses\" and running it again prints <code>Is valid: false</code></p>\n\n<p>Please note that I had to make some small adjustments to your schema. First, to verify that valico is validating it correctly I set required fields. Secondly, since the root object doesn't have a name (it's only <code>{}</code>) the \"Address\" would be a property of that root object.</p>\n\n<p>So instead of</p>\n\n<pre><code>{\n    \"Address\": {\n        \"properties\": {\n            ...\n</code></pre>\n\n<p>it is instead</p>\n\n<pre><code>{\n    \"type\": \"object\",\n    \"properties\": {\n        \"Address\": {\n            \"type\": \"object\",\n                ....\n</code></pre>\n\n<p>Also, it seems like valico requires an older version of serde_json, so I added this as dependency in my Cargo.toml</p>\n\n<pre><code>serde_json = \"0.8\"\n</code></pre>\n"}], "owner": {"reputation": 1155, "user_id": 4983469, "user_type": "registered", "accept_rate": 94, "profile_image": "https://lh6.googleusercontent.com/-btlwMISgi2c/AAAAAAAAAAI/AAAAAAAAAKs/L041fOZBcY0/photo.jpg?sz=128", "display_name": "leoOrion", "link": "https://stackoverflow.com/users/4983469/leoorion"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1701, "favorite_count": 4, "accepted_answer_id": 48268543, "answer_count": 2, "score": 7, "last_activity_date": 1516039938, "creation_date": 1498286388, "last_edit_date": 1498341552, "question_id": 44733603, "link": "https://stackoverflow.com/questions/44733603/how-do-i-validate-json-using-an-existing-schema-file-in-rust", "title": "How do I validate JSON using an existing schema file in Rust?", "body": "<p>I'm trying to validate a JSON given a JSON file and a schema.</p>\n\n<p>Schema: </p>\n\n<pre><code>{\n    \"Address\":{\n        \"properties\":{\n            \"City\":{\n                \"type\":\"string\"\n            },\n            \"Country\":{\n                \"type\":\"string\"\n            },\n            \"Street\":{\n                \"type\":\"string\"\n            }\n        },\n        \"type\":\"object\"\n    }\n}\n</code></pre>\n\n<p>JSON:</p>\n\n<pre><code>{\n    \"Address\":{\n        \"Street\":\"Downing Street 10\",\n        \"City\":\"London\",\n        \"Country\":\"Great Britain\"\n    }\n}\n</code></pre>\n\n<p>My Rust file: </p>\n\n<pre><code>#[macro_use]\nextern crate serde_derive;\nextern crate serde;\nextern crate serde_json;\nextern crate valico;\n\nuse std::fs::File;\nuse std::io::Read;\nuse serde_json::Value;\n\nuse valico::json_dsl;\nuse valico::json_schema;\n\nfn main() {\n    let mut schemaFile = File::open(\"src/schema.json\").unwrap();\n    let mut jsonSchemaString = String::new();\n    schemaFile.read_to_string(&amp;mut jsonSchemaString).unwrap();\n\n    let json_v4_schema: Value = serde_json::from_str(&amp;jsonSchemaString).unwrap();\n\n\n    let state = jsonSchemaString.process(&amp;mut json_v4_schema, &amp;None); //this is wrong as jsonSchemaString is not a jsonDsl.\n\n    println!(\"Is valid: {}\", state.is_valid())\n\n}\n</code></pre>\n\n<p>I'm trying to use <a href=\"https://github.com/rustless/valico/blob/master/examples/example01.rs\" rel=\"noreferrer\">valico</a> for the JSON validation, but I cant figure out how to pass the schema against which the JSON has to be validated. I have seen examples where a <code>JsonDsl</code> is built using the valico builder, but how do I do it if I already have a JSON schema and I want to validate against that?  Is there any other way that I can achieve this? </p>\n"}, {"tags": ["docker", "amazon-s3", "openssl", "rust", "rusoto"], "comments": [{"owner": {"reputation": 82953, "user_id": 608639, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/aPIhh.jpg?s=128&g=1", "display_name": "jww", "link": "https://stackoverflow.com/users/608639/jww"}, "edited": false, "score": 0, "creation_date": 1498250392, "post_id": 44728421, "comment_id": 76441988, "body": "Plus one. A docker question with some code!"}], "answers": [{"comments": [{"owner": {"reputation": 5087, "user_id": 2942471, "user_type": "registered", "accept_rate": 57, "profile_image": "https://graph.facebook.com/100000008666513/picture?type=large", "display_name": "manonthemat", "link": "https://stackoverflow.com/users/2942471/manonthemat"}, "edited": false, "score": 0, "creation_date": 1498835251, "post_id": 44838307, "comment_id": 76679802, "body": "At what step? For the original approach using <code>FROM scratch</code>, there&#39;s no place for that, as there&#39;s no <code>&#47;bin&#47;sh</code> that could even execute <code>update-ca-certificates</code>.  If plugged into let&#39;s say the docker image that&#39;s build from Alpine, then running <code>update-ca-certificates</code> still has nothing to do with the <code>standard_init_linux.go:178: exec user process caused &quot;no such file or directory&quot;</code> error I&#39;m getting."}, {"owner": {"reputation": 14729, "user_id": 2494262, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/4a9b1f56d8fca99b42c3cf56affb943b?s=128&d=identicon&r=PG", "display_name": "MrE", "link": "https://stackoverflow.com/users/2494262/mre"}, "edited": false, "score": 0, "creation_date": 1498836898, "post_id": 44838307, "comment_id": 76680839, "body": "you can always add the step before you run you script."}, {"owner": {"reputation": 14729, "user_id": 2494262, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/4a9b1f56d8fca99b42c3cf56affb943b?s=128&d=identicon&r=PG", "display_name": "MrE", "link": "https://stackoverflow.com/users/2494262/mre"}, "edited": false, "score": 0, "creation_date": 1498836939, "post_id": 44838307, "comment_id": 76680875, "body": "from scratch is for images you build yourself, to shrink layers, to debug you should use the origonal image"}, {"owner": {"reputation": 5087, "user_id": 2942471, "user_type": "registered", "accept_rate": 57, "profile_image": "https://graph.facebook.com/100000008666513/picture?type=large", "display_name": "manonthemat", "link": "https://stackoverflow.com/users/2942471/manonthemat"}, "edited": false, "score": 0, "creation_date": 1498837557, "post_id": 44838307, "comment_id": 76681318, "body": "And what would that &quot;original image&quot; be if all I&#39;m doing is compiling a binary? The original image is &quot;scratch&quot;. Either you haven&#39;t read the whole post or you need to put a little bit more explanation into your answers, because I&#39;m not sure what kind of good advice you want to give me here."}, {"owner": {"reputation": 14729, "user_id": 2494262, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/4a9b1f56d8fca99b42c3cf56affb943b?s=128&d=identicon&r=PG", "display_name": "MrE", "link": "https://stackoverflow.com/users/2494262/mre"}, "edited": false, "score": 0, "creation_date": 1498837826, "post_id": 44838307, "comment_id": 76681515, "body": "where is &#39;scratch&#39; from? You built it or it&#39;s missing something. So you go from the original of the binary, or you make your own. What I&#39;m suggesting is that you need to run <code>update-ca-certificates</code> before you run your script. Even with the binary you can add a <code>RUN update-ca-certificates</code> command. before your entrypoint. See edit"}, {"owner": {"reputation": 5087, "user_id": 2942471, "user_type": "registered", "accept_rate": 57, "profile_image": "https://graph.facebook.com/100000008666513/picture?type=large", "display_name": "manonthemat", "link": "https://stackoverflow.com/users/2942471/manonthemat"}, "edited": false, "score": 0, "creation_date": 1498842882, "post_id": 44838307, "comment_id": 76684249, "body": "<a href=\"https://docs.docker.com/engine/userguide/eng-image/baseimages/#creating-a-simple-parent-image-using-scratch\" rel=\"nofollow noreferrer\">docs.docker.com/engine/userguide/eng-image/baseimages/&hellip;</a>"}, {"owner": {"reputation": 14729, "user_id": 2494262, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/4a9b1f56d8fca99b42c3cf56affb943b?s=128&d=identicon&r=PG", "display_name": "MrE", "link": "https://stackoverflow.com/users/2494262/mre"}, "edited": false, "score": 0, "creation_date": 1498843122, "post_id": 44838307, "comment_id": 76684358, "body": "I know what a scratch image is. Your exe just doesn&#39;t have all the dependencies it needs to work with the openSSL library properly. So, either you compile everything statically, or you run the proper commands and install the dependencies before you run your exe."}], "tags": [], "owner": {"reputation": 14729, "user_id": 2494262, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/4a9b1f56d8fca99b42c3cf56affb943b?s=128&d=identicon&r=PG", "display_name": "MrE", "link": "https://stackoverflow.com/users/2494262/mre"}, "is_accepted": false, "score": 1, "last_activity_date": 1498839851, "last_edit_date": 1498839851, "creation_date": 1498794676, "answer_id": 44838307, "question_id": 44728421, "link": "https://stackoverflow.com/questions/44728421/docker-and-the-openssl-library-reported-an-error-when-deployed/44838307#44838307", "title": "Docker and &quot;The OpenSSL library reported an error&quot; when deployed", "body": "<p>try running </p>\n\n<p><code>update-ca-certificates</code> in the image</p>\n\n<p>like:</p>\n\n<pre><code>FROM scratch\nADD target/x86_64-unknown-linux-musl/release/project /\nRUN update-ca-certificates\nCMD [\"/project\"]\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 5087, "user_id": 2942471, "user_type": "registered", "accept_rate": 57, "profile_image": "https://graph.facebook.com/100000008666513/picture?type=large", "display_name": "manonthemat", "link": "https://stackoverflow.com/users/2942471/manonthemat"}, "is_accepted": true, "score": 4, "last_activity_date": 1498863952, "creation_date": 1498863952, "answer_id": 44855828, "question_id": 44728421, "link": "https://stackoverflow.com/questions/44728421/docker-and-the-openssl-library-reported-an-error-when-deployed/44855828#44855828", "title": "Docker and &quot;The OpenSSL library reported an error&quot; when deployed", "body": "<p>These are the steps I've taken to make the deployment work on AWS.</p>\n\n<p>I'm sure there are ways to optimize this and I will edit this post as I'll learn more about the process, but these are the steps I've taken.</p>\n\n<ol>\n<li><p>I built the binary on macOS:</p>\n\n<p><code>docker run -v $PWD:/volume -w /volume -e RUST_LOG=\"rusoto,hyper=debug\" -e OPENSSL_STATIC=1 -e OPENSSL_DIR=/usr/local -e SSL_CERT_DIR=/etc/ssl/certs -t manonthemat/muslrust cargo build --release --features \"logging\"</code></p></li>\n<li><p>I modified the Dockerfile</p>\n\n<p><code>FROM alpine:edge\nCOPY target/x86_64-unknown-linux-musl/release/project /\nRUN apk update &amp;&amp; apk add --no-cache pkgconfig openssl-dev ca-certificates linux-headers &amp;&amp; update-ca-certificates\nCMD [ \"/project\" ]</code></p></li>\n<li><p>I built the docker image</p>\n\n<ul>\n<li><em>I then pushed the docker image to a private repo and pulled it via ssh-session on the EC2 instance for testing. I ran it successfully via <code>docker run -e SSL_CERT_DIR=/etc/ssl/certs secretuser/secretrepo:notsosecrettag</code></em></li>\n</ul></li>\n<li><p>I tagged and pushed the docker image to the AWS repository</p></li>\n<li><p>For a successful run on Amazon Elastic Container Service, I had to modify the task definition. In the containerDefinitions I had to up the memory and add this into the environment array:</p>\n\n<pre><code>`{\n  \"name\": \"SSL_CERT_DIR\",\n  \"value\": \"/etc/ssl/certs\"\n}`\n</code></pre></li>\n<li><p>For some unknown and probably unrelated reason I also had to update the agents on the EC2 instances and then restart those.</p></li>\n</ol>\n"}], "owner": {"reputation": 5087, "user_id": 2942471, "user_type": "registered", "accept_rate": 57, "profile_image": "https://graph.facebook.com/100000008666513/picture?type=large", "display_name": "manonthemat", "link": "https://stackoverflow.com/users/2942471/manonthemat"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2198, "favorite_count": 4, "accepted_answer_id": 44855828, "answer_count": 2, "score": 13, "last_activity_date": 1498863952, "creation_date": 1498244938, "last_edit_date": 1498844830, "question_id": 44728421, "link": "https://stackoverflow.com/questions/44728421/docker-and-the-openssl-library-reported-an-error-when-deployed", "title": "Docker and &quot;The OpenSSL library reported an error&quot; when deployed", "body": "<p>I'm providing an API via Rust and Rocket via Amazon Elastic Container Service. Whenever I put or get objects to Amazon S3, it works great locally, but if deployed on Amazon ECS, I'm getting this run-time error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>HttpDispatch(HttpDispatchError { message: \"The OpenSSL library reported an error\" })\n</code></pre>\n\n<p>This also happens when I run the Docker image on my machine.</p>\n\n<p>I've added comments where the error is happening:</p>\n\n<pre><code>use super::types::SomeCustomType;\nuse rusoto_core::{DefaultCredentialsProvider, Region, default_tls_client};\nuse rusoto_s3::{S3, S3Client, GetObjectRequest};\n\npub fn load_data_from_s3(object_name: String) -&gt; SomeCustomType {\n    let credentials = DefaultCredentialsProvider::new().unwrap();\n    let client = S3Client::new(default_tls_client().unwrap(), credentials, Region::UsWest2);\n    let mut request = GetObjectRequest::default();\n    request.bucket = \"bucket-name\".to_string();\n    request.key = object_name.to_string();\n    match client.get_object(&amp;request) {\n        // *** This is going to fail in docker container on run-time ***\n        Ok(file) =&gt; {\n            // this part is actually not important for this example,\n            // so code has been omitted\n            someCustomType\n        }\n        Err(e) =&gt; {\n            println!(\"{:?}\", e); // *** errors out here! ***\n            SomeCustomType::default()\n        }\n    }\n}\n</code></pre>\n\n<p><strong>Cargo.toml</strong></p>\n\n<pre><code>[dependencies]\nbrotli=\"1.0.8\"\nchrono = \"0.3.1\"\nfnv = \"1.0.5\"\nrusted_cypher = \"1.1.0\"\nrocket = { git = \"https://github.com/SergioBenitez/Rocket\", rev = \"614297eb9bc8fa5d9c54f653dc35b8cc3a22891f\" }\nrocket_codegen = { git = \"https://github.com/SergioBenitez/Rocket\", rev = \"614297eb9bc8fa5d9c54f653dc35b8cc3a22891f\" }\nrocket_contrib = { git = \"https://github.com/SergioBenitez/Rocket\", rev = \"614297eb9bc8fa5d9c54f653dc35b8cc3a22891f\" }\nrusoto_core = \"0.25.0\"\nrusoto_s3 = \"0.25.0\"\nserde = \"1.0.8\"\nserde_json = \"1.0.2\"\nserde_derive = \"1.0.8\"\n</code></pre>\n\n<p>This is how I build the Docker image on macOS:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>cargo clean &amp;&amp;\ndocker run -v $PWD:/volume -w /volume -t manonthemat/muslrust cargo build --release &amp;&amp;\ndocker build -t dockerimagename .\n</code></pre>\n\n<p>The Docker image <em>manonthemat/muslrust</em> is essentially <em>clux/muslrust</em>. I had to build my own image because I needed a more recent nightly build of Rust.</p>\n\n<p>This is the (simplified) <strong>Dockerfile</strong> which has been working great for me so far:</p>\n\n<pre><code>FROM scratch\nADD target/x86_64-unknown-linux-musl/release/project /\nCMD [\"/project\"]\n</code></pre>\n\n<hr>\n\n<p>Some of the things I've tried to resolve the issue....</p>\n\n<ol>\n<li><p>Added <code>openssl = \"0.9.14\"</code> to the Cargo.toml.</p></li>\n<li><p>Change my Dockerfile to this:</p>\n\n<pre><code>FROM alpine:edge\n\nADD target/x86_64-unknown-linux-musl/release/project /    \nRUN apk add --no-cache curl perl openssl-dev ca-certificates linux-headers build-base zsh\n\nCMD [\"/project\"]\n</code></pre>\n\n<p>This also didn't change anything, but gave me some more options to look inside.</p></li>\n<li><p>I changed the cross-compilation step after <code>cargo clean</code> to this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>docker run -v $PWD:/volume -w /volume -e RUST_LOG=\"rusoto,hyper=debug\" -e OPENSSL_STATIC=1 -e OPENSSL_DIR=/usr/local -t manonthemat/muslrust cargo build --release --features \"logging\"\n</code></pre>\n\n<p>After the new docker images was built, get a shell:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>docker run -i -e ROCKET_ENV=prod -e ROCKET_ADDRESS=0.0.0.0 -e RUST_LOG=\"rusoto,hyper=debug\" dockerimagename /bin/zsh\n</code></pre>\n\n<p>There I executed my project by providing a different path to the ssl certificates that doesn't exist with no different effect.</p>\n\n<p>In the next run, I set it to point to a different path:\n<code>SSL_CERT_DIR=/etc/ssl/certs /project</code> and I got an interesting result, when printing out the error of the <code>client.get_object(&amp;request)</code> call:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Unknown(\"&lt;?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?&gt;\\n&lt;Error&gt;&lt;Code&gt;SignatureDoesNotMatch&lt;/Code&gt;&lt;Message&gt;The request signature we calculated does not match the signature you provided. Check your key and signing method.&lt;/Message&gt;&lt;AWSAccessKeyId&gt;...\n</code></pre></li>\n<li><p>I replaced rusoto with the aws-sdk-rust crate</p></li>\n</ol>\n\n<pre class=\"lang-none prettyprint-override\"><code>thread 'main' panicked at 'Error dispatching request: HttpDispatchError { message: \"the handshake failed\" }', /checkout/src/libcore/result.rs:860            stack backtrace:\n    0: std::sys::imp::backtrace::tracing::imp::unwind_backtrace                                                                                                            at ./checkout/src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\n    1: std::sys_common::backtrace::_print                                                                                                                                  at ./checkout/src/libstd/sys_common/backtrace.rs:71\n    2: std::panicking::default_hook::{{closure}}                                                                                                                           at ./checkout/src/libstd/sys_common/backtrace.rs:60\n              at ./checkout/src/libstd/panicking.rs:355\n    3: std::panicking::default_hook\n              at ./checkout/src/libstd/panicking.rs:371\n    4: std::panicking::rust_panic_with_hook\n             at ./checkout/src/libstd/panicking.rs:549\n    5: std::panicking::begin_panic\n             at ./checkout/src/libstd/panicking.rs:511\n    6: std::panicking::begin_panic_fmt\n             at ./checkout/src/libstd/panicking.rs:495\n    7: rust_begin_unwind\n             at ./checkout/src/libstd/panicking.rs:471\n    8: core::panicking::panic_fmt\n             at ./checkout/src/libcore/panicking.rs:69\n    9: core::result::unwrap_failed\n   10: &lt;aws_sdk_rust::aws::s3::s3client::S3Client&lt;P, D&gt;&gt;::get_object\n   11: himitsu::ingest::load_data_from_s3\n   12: himitsu::ingest::load_data\n   13: himitsu::main\n   14: __rust_maybe_catch_panic\n             at ./checkout/src/libpanic_unwind/lib.rs:98\n   15: std::rt::lang_start\n             at ./checkout/src/libstd/panicking.rs:433\n             at ./checkout/src/libstd/panic.rs:361\n             at ./checkout/src/libstd/rt.rs:59\n</code></pre>\n\n<ol start=\"5\">\n<li><p>I installed a Linux distribution via VirtualBox on my Mac, updated libraries, installed the OpenSSL headers and rust, then imported the project. Now I'm getting the SignatureDoesNotMatch error right away. I verified that I can access a Neo4j server via https through the vpn of the host machine, so SSL seems to work at least in parts.</p></li>\n<li><p>Compiling and running the project on Amazon ECS-Optimized Amazon Linux AMI 2017.03.a works. Building the docker image works, too. Running the docker image from within that system does not, as it returns with <code>standard_init_linux.go:178: exec user process caused \"no such file or directory\"</code> even though the file is there, has the right permissions, can run other operations on it etc... Just not executing it. This is also the case when rolling back to a previous state that doesn't have any S3/OpenSSL dependencies. This is true for <code>scratch</code> and <code>alpine</code> base images. But, if I build the docker image with <code>ubuntu</code> as base image, I get the pre-S3/OpenSSL version running. For the version with rusuto, I'll get an OpenSSL error, even when installing the OpenSSL library and its headers.</p></li>\n<li><p>Compiled the Docker image on my Mac, pushed to private repo to docker hub. Pulled that docker image via ssh session onto EC2 instance (same one as in 6). Running it now does not give me the \"no such file or directory\" error as in 6, but the good ol' <code>HttpDispatch(HttpDispatchError { message: \"The OpenSSL library reported an error\" })</code> (now even when passing SSL_CERTS_DIR=/etc/ssl/certs into the container's environment)</p></li>\n</ol>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 341, "user_id": 1317464, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/aa2e9bd3a4509c9d56939abad40202e3?s=128&d=identicon&r=PG", "display_name": "Pethor", "link": "https://stackoverflow.com/users/1317464/pethor"}, "edited": false, "score": 0, "creation_date": 1498248057, "post_id": 44727738, "comment_id": 76440971, "body": "Oh, that makes sense. I guess I have to read once more over lifetimes and borrowing."}], "tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": true, "score": 3, "last_activity_date": 1498243114, "last_edit_date": 1498243114, "creation_date": 1498242068, "answer_id": 44727738, "question_id": 44727626, "link": "https://stackoverflow.com/questions/44727626/cannot-infer-an-appropriate-lifetime-when-building-a-struct-with-multiple-refere/44727738#44727738", "title": "Cannot infer an appropriate lifetime when building a struct with multiple references with the same lifetime", "body": "<p>You need to explicitly specify the lifetime of both parameters so that they are the same:</p>\n\n<pre><code>impl&lt;'a&gt; Line&lt;'a&gt; {\n    pub fn new(start: &amp;'a Point, end: &amp;'a Point) -&gt; Self {\n        Line {\n            start: start,\n            end: end,\n        }\n    }\n}\n</code></pre>\n\n<p>Otherwise the compiler cannot decide which input lifetime to choose for the output. I recommend the relevant <a href=\"https://doc.rust-lang.org/book/first-edition/lifetimes.html#lifetime-elision\" rel=\"nofollow noreferrer\">Rust Book section on lifetime elision</a>, especially the following 3 rules:</p>\n\n<blockquote>\n  <ul>\n  <li>Each elided lifetime in a function\u2019s arguments becomes a distinct lifetime \n  parameter.</li>\n  <li><p>If there is exactly one input lifetime, elided or not, that lifetime\n  is assigned to all elided lifetimes in the return values of that\n  function.</p></li>\n  <li><p>If there are multiple input lifetimes, but one of them is &amp;self or\n  &amp;mut self, the lifetime of self is assigned to all elided output\n  lifetimes.</p></li>\n  </ul>\n  \n  <p>Otherwise, it is an error to elide an output lifetime.</p>\n</blockquote>\n"}], "owner": {"reputation": 341, "user_id": 1317464, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/aa2e9bd3a4509c9d56939abad40202e3?s=128&d=identicon&r=PG", "display_name": "Pethor", "link": "https://stackoverflow.com/users/1317464/pethor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 489, "favorite_count": 0, "accepted_answer_id": 44727738, "answer_count": 1, "score": 1, "last_activity_date": 1498243114, "creation_date": 1498241569, "last_edit_date": 1498242877, "question_id": 44727626, "link": "https://stackoverflow.com/questions/44727626/cannot-infer-an-appropriate-lifetime-when-building-a-struct-with-multiple-refere", "title": "Cannot infer an appropriate lifetime when building a struct with multiple references with the same lifetime", "body": "<p>I've seen multiple posts like <a href=\"https://stackoverflow.com/questions/41270052/cannot-infer-an-appropriate-lifetime-for-autoref-due-to-conflicting-requirements\">this</a> or <a href=\"https://stackoverflow.com/questions/35517514/error-cannot-infer-an-appropriate-lifetime-for-autoref-due-to-conflicting-requi\">this</a> but I think this is no duplicate. I guess I haven't quite understood how to use lifetimes to outlive one another. Here is a MWE: </p>\n\n<pre><code>struct Point;\n\npub struct Line&lt;'a&gt; {\n    pub start: &amp;'a Point,\n    pub end: &amp;'a Point,\n}\n\nimpl&lt;'a&gt; Line&lt;'a&gt; {\n    pub fn new(start: &amp;Point, end: &amp;Point) -&gt; Self {\n        Line {\n            start: start,\n            end: end,\n        }\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>I get the error message</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for lifetime parameter `'a` due to conflicting requirements\n  --&gt; src/main.rs:10:9\n   |\n10 |         Line {\n   |         ^^^^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #2 defined on the body at 9:51...\n  --&gt; src/main.rs:9:52\n   |\n9  |       pub fn new(start: &amp;Point, end: &amp;Point) -&gt; Self {\n   |  ____________________________________________________^\n10 | |         Line {\n11 | |             start: start,\n12 | |             end: end,\n13 | |         }\n14 | |     }\n   | |_____^\nnote: ...so that reference does not outlive borrowed content\n  --&gt; src/main.rs:12:18\n   |\n12 |             end: end,\n   |                  ^^^\nnote: but, the lifetime must be valid for the lifetime 'a as defined on the body at 9:51...\n  --&gt; src/main.rs:9:52\n   |\n9  |       pub fn new(start: &amp;Point, end: &amp;Point) -&gt; Self {\n   |  ____________________________________________________^\n10 | |         Line {\n11 | |             start: start,\n12 | |             end: end,\n13 | |         }\n14 | |     }\n   | |_____^\nnote: ...so that expression is assignable (expected Line&lt;'a&gt;, found Line&lt;'_&gt;)\n  --&gt; src/main.rs:10:9\n   |\n10 | /         Line {\n11 | |             start: start,\n12 | |             end: end,\n13 | |         }\n   | |_________^\n</code></pre>\n\n<p>and I am completely lost about how to interpret it.</p>\n"}, {"tags": ["rust", "rust-macros"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1498225375, "post_id": 44722605, "comment_id": 76428048, "body": "Or even the extremely opaque but concise <code>{&amp;x}</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1498226143, "post_id": 44722605, "comment_id": 76428608, "body": "Wouldn&#39;t doing this hide the non-use of <code>x</code> in the second example though? If I understand the OP correctly, they would like a warning generated there."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1498293645, "post_id": 44722605, "comment_id": 76450868, "body": "@Shepmaster: Either a variable is going to be &quot;always used&quot; and an inert use can be added to the expansion, or it isn&#39;t.  If the author doesn&#39;t know which is which, then no one does and there is no solution."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1498460702, "post_id": 44722605, "comment_id": 76489835, "body": "@DK As the macro author, I can&#39;t know if the macro user uses the variable or not without a full rust parser.But from the standpoint of the macro user, it looks like <code>x</code> is used in the first example and not in the second."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1498461085, "post_id": 44722605, "comment_id": 76490002, "body": "@Jmb: Well, then this sounds infeasible.  <i>Someone</i> has to know whether a variable that is genuinely not being used from the compiler&#39;s perspective is supposed to be treated as &quot;used&quot;.  If that&#39;s not you, and it&#39;s not the end-user, then there&#39;s no one left."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1498461261, "post_id": 44722605, "comment_id": 76490090, "body": "I was wondering if there was a way to tell the compiler that &quot;these two variables are linked&quot; and so if one is used then you can assume that the other is &quot;used&quot; too."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": false, "score": 2, "last_activity_date": 1498224371, "creation_date": 1498224371, "answer_id": 44722605, "question_id": 44722279, "link": "https://stackoverflow.com/questions/44722279/unused-variable-in-macro-generated-code/44722605#44722605", "title": "Unused variable in macro-generated code", "body": "<p>The simplest way I can think of is to ensure <code>x</code> <em>is</em> being used, by using some inert operation.  For example, you can use <code>drop(&amp;x);</code> or perhaps <code>{let _ = &amp;x;}</code>.  Neither of these should have any effect on the surrounding code, since they both create, and then immediately relinquish, a borrow.</p>\n"}], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 491, "favorite_count": 0, "answer_count": 1, "score": 4, "last_activity_date": 1498225828, "creation_date": 1498223333, "last_edit_date": 1498225828, "question_id": 44722279, "link": "https://stackoverflow.com/questions/44722279/unused-variable-in-macro-generated-code", "title": "Unused variable in macro-generated code", "body": "<p>I have written a macro that implements Scala-like for comprehensions in Rust. It will turn this:</p>\n\n<pre><code>map_for!{\n    x &lt;- 0..4;\n    y = 2*x;\n    z &lt;- 0..1;\n    =&gt; y+z\n}\n</code></pre>\n\n<p>into this:</p>\n\n<pre><code>((0..4).map (move |x| { let y = 2 * x; (x, y) }))\n    .flat_map (move |params| {\n        let (x, y) = params;\n        (0..1).map (move |z| { y + z })\n    })\n</code></pre>\n\n<p>This works, but the compiler emits an \"unused variable\" warning because <code>x</code> is not used inside the <code>flat_map</code>. I can disable the warning by adding <code>#[allow(unused_variables)]</code> before the <code>let</code> statements in the macro, but then it removes <em>all</em> unused variable warnings so this:</p>\n\n<pre><code>map_for!{\n    x &lt;- 0..4;\n    y = 2;\n    z &lt;- 0..1;\n    =&gt; y+z\n}\n</code></pre>\n\n<p>will expand into:</p>\n\n<pre><code>((0..4).map (move |x| { let y = 2; (x, y) }))\n    .flat_map (move |params| {\n        #[allow(unused_variables)]\n        let (x, y) = params;\n        (0..1).map (move |z| { y + z })\n    })\n</code></pre>\n\n<p>and will not generate a warning either even though <code>x</code> really is not used.</p>\n\n<p>Is there a way to make it so that the first example will not generate a warning, but the second one will?</p>\n\n<p>The <a href=\"https://bitbucket.org/jmb/rust-map_for/src/e5c6597b64df1ae764311a7e00fa55a2c87173fb/src/lib.rs?at=default&amp;fileviewer=file-view-default\" rel=\"nofollow noreferrer\">full code of the macro with warnings</a> is available, as is the <a href=\"https://bitbucket.org/jmb/rust-map_for/src/fa257bd023b642d2e3efa1d7de58ce4351bf8065/src/lib.rs?at=default&amp;fileviewer=file-view-default\" rel=\"nofollow noreferrer\">full code with warnings suppressed</a>.</p>\n"}, {"tags": ["formatting", "integer", "rust"], "comments": [{"owner": {"reputation": 37211, "user_id": 60075, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/da582d6fbfa2ae515004ef49fcb7c281?s=128&d=identicon&r=PG", "display_name": "Craig McQueen", "link": "https://stackoverflow.com/users/60075/craig-mcqueen"}, "edited": false, "score": 0, "creation_date": 1598489392, "post_id": 44711012, "comment_id": 112478424, "body": "Oof, this is an unfortunate gotcha of the language. Thousands of people will be searching for this issue for years to come."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1498186671, "post_id": 44712309, "comment_id": 76407211, "body": "I swear access to the formatter options didn&#39;t used to be there, but it looks like they&#39;ve been there since 1.5.0, so I dunno what I was thinking."}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1498187919, "post_id": 44712309, "comment_id": 76407487, "body": "Well <a href=\"https://doc.rust-lang.org/nightly/std/fmt/struct.Formatter.html#method.flags\" rel=\"nofollow noreferrer\"><code>flags()</code></a> was always there, it&#39;s just that &quot;which bit is what&quot; is not really documented..."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 7, "last_activity_date": 1498186298, "creation_date": 1498186298, "answer_id": 44712309, "question_id": 44711012, "link": "https://stackoverflow.com/questions/44711012/how-do-i-format-a-signed-integer-to-a-sign-aware-hexadecimal-representation/44712309#44712309", "title": "How do I format a signed integer to a sign-aware hexadecimal representation?", "body": "<blockquote>\n  <p>Is there a way to do this formatting procedure while still adhering to a standard <a href=\"https://doc.rust-lang.org/nightly/std/fmt/struct.Formatter.html\" rel=\"noreferrer\"><code>Formatter</code></a>?</p>\n</blockquote>\n\n<p>Yes, but you need to make a newtype in order to provide a distinct implementation of <code>UpperHex</code>. Here's an implementation that respects the <code>+</code>, <code>#</code> and <code>0</code> flags (and possibly more, I haven't tested):</p>\n\n<pre><code>use std::fmt::{self, Formatter, UpperHex};\n\nstruct ReallySigned(i32);\n\nimpl UpperHex for ReallySigned {\n    fn fmt(&amp;self, f: &amp;mut Formatter) -&gt; fmt::Result {\n        let prefix = if f.alternate() { \"0x\" } else { \"\" };\n        let bare_hex = format!(\"{:X}\", self.0.abs());\n        f.pad_integral(self.0 &gt;= 0, prefix, &amp;bare_hex)\n    }\n}\n\nfn main() {\n    for &amp;v in &amp;[15, -15] {\n        for &amp;v in &amp;[&amp;v as &amp;UpperHex, &amp;ReallySigned(v) as &amp;UpperHex] {\n            println!(\"Value: {:X}\", v);\n            println!(\"Value: {:08X}\", v);\n            println!(\"Value: {:+08X}\", v);\n            println!(\"Value: {:#08X}\", v);\n            println!(\"Value: {:+#08X}\", v);\n            println!();\n        }\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 37211, "user_id": 60075, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/da582d6fbfa2ae515004ef49fcb7c281?s=128&d=identicon&r=PG", "display_name": "Craig McQueen", "link": "https://stackoverflow.com/users/60075/craig-mcqueen"}, "is_accepted": false, "score": 0, "last_activity_date": 1598492906, "creation_date": 1598492906, "answer_id": 63607986, "question_id": 44711012, "link": "https://stackoverflow.com/questions/44711012/how-do-i-format-a-signed-integer-to-a-sign-aware-hexadecimal-representation/63607986#63607986", "title": "How do I format a signed integer to a sign-aware hexadecimal representation?", "body": "<p>This is like <a href=\"/a/44712309/60075\">Francis Gagn\u00e9's answer</a>, but made generic to handle <code>i8</code> through <code>i128</code>.</p>\n<pre><code>use std::fmt::{self, Formatter, UpperHex};\nuse num_traits::Signed;\n\nstruct ReallySigned&lt;T: PartialOrd + Signed + UpperHex&gt;(T);\n\nimpl&lt;T: PartialOrd + Signed + UpperHex&gt; UpperHex for ReallySigned&lt;T&gt; {\n    fn fmt(&amp;self, f: &amp;mut Formatter) -&gt; fmt::Result {\n        let prefix = if f.alternate() { &quot;0x&quot; } else { &quot;&quot; };\n        let bare_hex = format!(&quot;{:X}&quot;, self.0.abs());\n        f.pad_integral(self.0 &gt;= T::zero(), prefix, &amp;bare_hex)\n    }\n}\n\nfn main() {\n    println!(&quot;{:#X}&quot;, -0x12345678);\n    println!(&quot;{:#X}&quot;, ReallySigned(-0x12345678));\n}\n</code></pre>\n"}], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 429, "favorite_count": 0, "accepted_answer_id": 44712309, "answer_count": 2, "score": 7, "last_activity_date": 1598492906, "creation_date": 1498175537, "last_edit_date": 1543492027, "question_id": 44711012, "link": "https://stackoverflow.com/questions/44711012/how-do-i-format-a-signed-integer-to-a-sign-aware-hexadecimal-representation", "title": "How do I format a signed integer to a sign-aware hexadecimal representation?", "body": "<p>My initial intent was to convert a signed primitive number to its hexadecimal representation in a way that preserves the number's sign. It turns out that the current implementations of <code>LowerHex</code>, <code>UpperHex</code> and relatives for signed primitive integers will simply treat them as unsigned. Regardless of what extra formatting flags that I add, these implementations appear to simply reinterpret the number as its unsigned counterpart for formatting purposes. (<a href=\"http://play.integer32.com/?gist=813f0a2f055c5877b001502d8e452389&amp;version=stable\" rel=\"nofollow noreferrer\">Playground</a>)</p>\n\n<pre><code>println!(\"{:X}\", 15i32);           // F\nprintln!(\"{:X}\", -15i32);          // FFFFFFF1   (expected \"-F\")\nprintln!(\"{:X}\", -0x80000000i32);  // 80000000   (expected \"-80000000\")\nprintln!(\"{:+X}\", -0x80000000i32); // +80000000\nprintln!(\"{:+o}\", -0x8000i16);     // +100000\nprintln!(\"{:+b}\", -0x8000i16);     // +1000000000000000\n</code></pre>\n\n<p>The documentation in <a href=\"https://doc.rust-lang.org/stable/std/fmt/index.html\" rel=\"nofollow noreferrer\"><code>std::fmt</code></a> is not clear on whether this is supposed to happen, or is even valid, and <a href=\"https://doc.rust-lang.org/stable/std/fmt/trait.UpperHex.html\" rel=\"nofollow noreferrer\"><code>UpperHex</code></a> (or any other formatting trait) does not mention that the implementations for signed integers interpret the numbers as unsigned. There seem to be no related issues on Rust's GitHub repository either. (<strong>Post-addendum notice:</strong> Starting from <code>1.24.0</code>, the documentation has been improved to properly address these concerns, see issue <a href=\"https://github.com/rust-lang/rust/issues/42860\" rel=\"nofollow noreferrer\">#42860</a>)</p>\n\n<p>Ultimately, one could implement specific functions for the task (as below), with the unfortunate downside of not being very compatible with the formatter API.</p>\n\n<pre><code>fn to_signed_hex(n: i32) -&gt; String {\n    if n &lt; 0 {\n        format!(\"-{:X}\", -n)\n    } else {\n        format!(\"{:X}\", n)\n    }\n}\n\nassert_eq!(to_signed_hex(-15i32), \"-F\".to_string());\n</code></pre>\n\n<p>Is this behaviour for signed integer types intentional? Is there a way to do this formatting procedure while still adhering to a standard <a href=\"https://doc.rust-lang.org/stable/std/fmt/struct.Formatter.html\" rel=\"nofollow noreferrer\"><code>Formatter</code></a>?</p>\n"}, {"tags": ["rust", "rust-chrono"], "answers": [{"comments": [{"owner": {"reputation": 5580, "user_id": 26685, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/51bde710f2efaa9597f5f264937a8967?s=128&d=identicon&r=PG", "display_name": "schmoopy", "link": "https://stackoverflow.com/users/26685/schmoopy"}, "edited": false, "score": 4, "creation_date": 1498175077, "post_id": 44710935, "comment_id": 76404762, "body": "Thank you, i missed the arithmetic part.  Great community, great crates. The documentation format tho feels like I am reading MSDN.  Thanks for the correct easy answer, a lot better than what i was doing after reading through those docs for the 11th time :-)"}, {"owner": {"reputation": 4235, "user_id": 210029, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/5603b531354ca5e45c7adebaf6a7bdd3?s=128&d=identicon&r=PG&f=1", "display_name": "Marcus", "link": "https://stackoverflow.com/users/210029/marcus"}, "edited": false, "score": 4, "creation_date": 1589489653, "post_id": 44710935, "comment_id": 109323767, "body": "Doesn&#39;t work as of May/2020; <code>chrono::Duration</code> needs to be used instead of <code>time::Duration</code>."}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 37, "last_activity_date": 1611660122, "last_edit_date": 1611660122, "creation_date": 1498174860, "answer_id": 44710935, "question_id": 44710877, "link": "https://stackoverflow.com/questions/44710877/how-do-i-add-days-to-a-chrono-utc/44710935#44710935", "title": "How do I add days to a Chrono UTC?", "body": "<p>Just use <a href=\"https://docs.rs/chrono/0.4.19/chrono/struct.Duration.html\" rel=\"noreferrer\"><code>Duration</code></a> and appropriate <a href=\"https://doc.rust-lang.org/std/ops/index.html\" rel=\"noreferrer\">operator</a>:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use chrono::{Duration, Utc};\n\nfn main() {\n    let dt = Utc::now() + Duration::days(137);\n\n    println!(&quot;today date + 137 days {}&quot;, dt);\n}\n</code></pre>\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=2b364249ed0066dd9ed1f1b03bb31629\" rel=\"noreferrer\">Test on playground</a>.</p>\n"}, {"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1523522724, "post_id": 49790631, "comment_id": 86598374, "body": "Note that currently <code>Duration</code> is just a wrapper to <code>time::Duration</code>, there could be breaking change by using <code>Duration</code> directly"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 7, "creation_date": 1523544590, "post_id": 49790631, "comment_id": 86613926, "body": "@Stargateur If there was a breaking change between chrono and time crates, I&#39;d think that using the, using chrono&#39;s <code>Duration</code> lets me rely on the chrono crate to fix the problem, so I can just update that one dependency without having to make a code change myself."}, {"owner": {"reputation": 4235, "user_id": 210029, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/5603b531354ca5e45c7adebaf6a7bdd3?s=128&d=identicon&r=PG&f=1", "display_name": "Marcus", "link": "https://stackoverflow.com/users/210029/marcus"}, "edited": false, "score": 1, "creation_date": 1589489686, "post_id": 49790631, "comment_id": 109323783, "body": "As of May/2020, using <code>chrono::Duration</code> is actually necessary, since <code>time::Duration</code> doesn&#39;t implement the addition trait."}], "tags": [], "owner": {"reputation": 1677, "user_id": 2610048, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8d292ad35efc8a59d27b3798a54c034?s=128&d=identicon&r=PG", "display_name": "Yerke", "link": "https://stackoverflow.com/users/2610048/yerke"}, "is_accepted": false, "score": 38, "last_activity_date": 1523518708, "creation_date": 1523518708, "answer_id": 49790631, "question_id": 44710877, "link": "https://stackoverflow.com/questions/44710877/how-do-i-add-days-to-a-chrono-utc/49790631#49790631", "title": "How do I add days to a Chrono UTC?", "body": "<p>I just wanted to improve on @Stargateur answer. There is no need to use <code>time</code> crate, since <code>chrono</code> crate has <code>Duration</code> struct in it:</p>\n\n<pre><code>extern crate chrono;\n\nuse chrono::{Duration, Utc};\n\nfn main() {\n    let dt = Utc::now() + Duration::days(137);\n\n    println!(\"{}\", dt);\n}\n</code></pre>\n\n<p><a href=\"https://play.integer32.com/?gist=c02aa7cc77d77ba018c169cdd16394ab&amp;version=stable\" rel=\"noreferrer\">Another test on playground</a></p>\n"}], "owner": {"reputation": 5580, "user_id": 26685, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/51bde710f2efaa9597f5f264937a8967?s=128&d=identicon&r=PG", "display_name": "schmoopy", "link": "https://stackoverflow.com/users/26685/schmoopy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 8495, "favorite_count": 1, "accepted_answer_id": 44710935, "answer_count": 2, "score": 26, "last_activity_date": 1611660122, "creation_date": 1498174427, "last_edit_date": 1498177477, "question_id": 44710877, "link": "https://stackoverflow.com/questions/44710877/how-do-i-add-days-to-a-chrono-utc", "title": "How do I add days to a Chrono UTC?", "body": "<p>I am trying to find the preferred way to add days to a Chrono <code>UTC</code>. I want to add 137 days to the current time: </p>\n\n<pre><code>let dt = UTC::now();\n</code></pre>\n"}, {"tags": ["winapi", "rust"], "answers": [{"comments": [{"owner": {"reputation": 449289, "user_id": 65863, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f00013ceab8fb1928885c5c172fbfd4a?s=128&d=identicon&r=PG", "display_name": "Remy Lebeau", "link": "https://stackoverflow.com/users/65863/remy-lebeau"}, "edited": false, "score": 0, "creation_date": 1498178444, "post_id": 44710057, "comment_id": 76405505, "body": "&quot;<i>I&#39;m not sure if TCHAR strings can be split arbitrarily, I know UTF-8 cannot</i>&quot; - <code>TCHAR</code> is the same way.  If compiling for Unicode, <code>TCHAR</code> is <code>WCHAR</code> and uses UTF-16.  Otherwise, it is <code>CHAR</code> and uses ANSI/MBCS.  Either way, the data is just as variable-length as UTF-8 is, and can potentially split Unicode characters across multiple <code>TCHAR</code>s."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 1, "creation_date": 1498184321, "post_id": 44710057, "comment_id": 76406715, "body": "Wide strings in Windows aren&#39;t <i>really</i> UTF-16; rather, they&#39;re <i>potentially</i> UTF-16, but they can also be arbitrary binary data that won&#39;t decode as Unicode.  A <code>WCHAR</code> string <i>can</i> be split anywhere, because WinAPI more or less doesn&#39;t care if the result is valid or not, and when you&#39;re writing code against WinAPI, you&#39;re not allowed to assume the strings you get are valid.  Such is life."}, {"owner": {"reputation": 35031, "user_id": 1889329, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/57bec3f0b9c5879cdd9d9fa2e8629318?s=128&d=identicon&r=PG&f=1", "display_name": "IInspectable", "link": "https://stackoverflow.com/users/1889329/iinspectable"}, "reply_to_user": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 1, "creation_date": 1498262992, "post_id": 44710057, "comment_id": 76445634, "body": "@DK.: Any references for those claims? They sound, quite frankly, pretty much made up."}, {"owner": {"reputation": 1190, "user_id": 3207828, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/1EPkw.jpg?s=128&g=1", "display_name": "Dan Korn", "link": "https://stackoverflow.com/users/3207828/dan-korn"}, "edited": false, "score": 0, "creation_date": 1498266731, "post_id": 44710057, "comment_id": 76446250, "body": "To be pedantic, wide-character strings in Windows, consisting of 16-bit type wchar_t characters, are UCS-2, not UTF-16. (UTF-16 can have escapes for characters over 65535, just like UTF-8 can have escapes for characters over 255.)"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 35031, "user_id": 1889329, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/57bec3f0b9c5879cdd9d9fa2e8629318?s=128&d=identicon&r=PG&f=1", "display_name": "IInspectable", "link": "https://stackoverflow.com/users/1889329/iinspectable"}, "edited": false, "score": 0, "creation_date": 1498294300, "post_id": 44710057, "comment_id": 76451042, "body": "@IInspectable: Well, there&#39;s <a href=\"https://github.com/rust-lang/rust/issues/12056\" rel=\"nofollow noreferrer\">the Rust issue about changing how filesystem paths are handled</a> because of this.  I don&#39;t have an exhaustive list of places in the Win32 API where strings may or may not be valid Unicode, because as far as I know there is no such list."}, {"owner": {"reputation": 35031, "user_id": 1889329, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/57bec3f0b9c5879cdd9d9fa2e8629318?s=128&d=identicon&r=PG&f=1", "display_name": "IInspectable", "link": "https://stackoverflow.com/users/1889329/iinspectable"}, "reply_to_user": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1498303738, "post_id": 44710057, "comment_id": 76453204, "body": "@DK.: There is no such list, because Windows uses UTF-16 throughout. The file handling APIs may be special, in that they can pass pathnames unchecked downstream the driver stack. In case of NTFS, any sequence of UTF-16 code units is legal. Those need not form valid code points. That&#39;s specific to the filesystem, though, not the Windows API."}, {"owner": {"reputation": 35031, "user_id": 1889329, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/57bec3f0b9c5879cdd9d9fa2e8629318?s=128&d=identicon&r=PG&f=1", "display_name": "IInspectable", "link": "https://stackoverflow.com/users/1889329/iinspectable"}, "reply_to_user": {"reputation": 1190, "user_id": 3207828, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/1EPkw.jpg?s=128&g=1", "display_name": "Dan Korn", "link": "https://stackoverflow.com/users/3207828/dan-korn"}, "edited": false, "score": 0, "creation_date": 1498304043, "post_id": 44710057, "comment_id": 76453267, "body": "@DanKorn: Not being pedantic, but Windows uses <b>true</b> UTF-16 (<a href=\"https://en.wikipedia.org/wiki/Unicode_in_Microsoft_Windows\" rel=\"nofollow noreferrer\">since Windows 2000</a>). It supported UCS-2 only, at the time Windows NT was in development. Because UTF-16 hadn&#39;t been invented yet. Don&#39;t keep spreading the myth."}, {"owner": {"reputation": 3189, "user_id": 4660481, "user_type": "registered", "accept_rate": 50, "profile_image": "https://lh4.googleusercontent.com/-ItEMC8arS-M/AAAAAAAAAAI/AAAAAAAAAj4/BpyDN7x-Wok/photo.jpg?sz=128", "display_name": "GaspardP", "link": "https://stackoverflow.com/users/4660481/gaspardp"}, "edited": false, "score": 0, "creation_date": 1570500988, "post_id": 44710057, "comment_id": 102924660, "body": "From the documentation: &quot;lpBuffer: A pointer to the buffer to receive the user&#39;s logon name. If this buffer is not large enough to contain the entire user name, the function fails. A buffer size of (UNLEN + 1) characters will hold the maximum length user name including the terminating null character. UNLEN is defined in Lmcons.h.&quot;  In other words, consider using <code>UNLEN+1</code> to make the static initialization safe, i.e. <code>TCHAR buf[UNLEN+1];</code>"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 10, "last_activity_date": 1511884617, "last_edit_date": 1511884617, "creation_date": 1498169212, "answer_id": 44710057, "question_id": 44709780, "link": "https://stackoverflow.com/questions/44709780/calling-the-getusername-winapi-function-with-a-mutable-string-doesnt-populate-t/44710057#44710057", "title": "Calling the GetUserName WinAPI function with a mutable string doesn&#39;t populate the string", "body": "<h3><code>GetUserName</code></h3>\n\n<p>You should re-read the <a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/ms724432(v=vs.85).aspx\" rel=\"nofollow noreferrer\">API documentation for <code>GetUserName</code></a> to recall how the arguments work:</p>\n\n<blockquote>\n  <p><code>lpnSize [in, out]</code></p>\n  \n  <p>On input, this variable specifies the size of the\n  <code>lpBuffer</code> buffer, in <code>TCHAR</code>s. On output, the variable receives the\n  number of <code>TCHAR</code>s copied to the buffer, including the terminating null\n  character. If <code>lpBuffer</code> is too small, the function fails and\n  <code>GetLastError</code> returns <code>ERROR_INSUFFICIENT_BUFFER</code>. This parameter\n  receives the required buffer size, including the terminating null\n  character.</p>\n</blockquote>\n\n<p>TL;DR:</p>\n\n<ul>\n<li>On input: caller tells the API how many spaces the buffer has.</li>\n<li>On success: API tells the caller how many spaces were used.</li>\n<li>On failure: API tells the caller how many spaces were needed.</li>\n</ul>\n\n<h3>C version</h3>\n\n<p>This has a fixed-size stack-allocated array of 100 <code>TCHAR</code>s.</p>\n\n<p>This code is broken and <strong>unsafe</strong> because <code>sz</code> is uninitialized. This allows the API to write an <em>undefined number of characters</em> to a buffer that's only 100 long. If the username is over 100 characters, you've just introduced a security hole into your program.</p>\n\n<h3>Rust version</h3>\n\n<p>The Rust code is broken in a much better way. <code>sz</code> is set to zero, which means \"you may write zero entries of data\", so it writes zero entries. Thus, the <code>Vec</code> buffer is full of zeros and the resulting string is empty.  The buffer is reported too small to receive the username, so <code>GetUserNameW</code> sets <code>sz</code> to the number of characters that the buffer needs to have allocated.</p>\n\n<h3>What to do</h3>\n\n<p>One \"fix\" would be to set <code>sz</code> to the length of your array. However, this is likely to have over- or under-allocated the buffer. </p>\n\n<p>If you are ok with a truncated string (and I'm not sure if <code>TCHAR</code> strings can be split arbitrarily, I know UTF-8 cannot), then it would be better to use a fixed-size array like the C code. </p>\n\n<p>If you want to more appropriately allocate memory to call this type of WinAPI function, see <a href=\"https://stackoverflow.com/q/39550856/155423\">What is the right way to allocate data to pass to an FFI call?</a>.</p>\n\n<pre><code>extern crate advapi32;\nextern crate winapi;\n\nuse std::ptr;\n\nfn get_user_name() -&gt; String {\n    unsafe {\n        let mut size = 0;\n        let retval = advapi32::GetUserNameW(ptr::null_mut(), &amp;mut size);\n        assert_eq!(retval, 0, \"Should have failed\");\n\n        let mut username = Vec::with_capacity(size as usize);\n        let retval = advapi32::GetUserNameW(username.as_mut_ptr(), &amp;mut size);\n        assert_ne!(retval, 0, \"Perform better error handling\");\n        assert!((size as usize) &lt;= username.capacity());\n        username.set_len(size as usize);\n\n        // Beware: This leaves the trailing NUL character in the final string,\n        // you may want to remove it!\n        String::from_utf16(&amp;username).unwrap()\n    }\n}\n\nfn main() {\n    println!(\"{:?}\", get_user_name()); // \"IEUser\\u{0}\"\n}\n</code></pre>\n"}], "owner": {"reputation": 2439, "user_id": 2294472, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/231b9fba4257295e39e1484a410d246d?s=128&d=identicon&r=PG", "display_name": "Delta_Fore", "link": "https://stackoverflow.com/users/2294472/delta-fore"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1002, "favorite_count": 0, "accepted_answer_id": 44710057, "answer_count": 1, "score": 1, "last_activity_date": 1511884617, "creation_date": 1498167475, "last_edit_date": 1498169235, "question_id": 44709780, "link": "https://stackoverflow.com/questions/44709780/calling-the-getusername-winapi-function-with-a-mutable-string-doesnt-populate-t", "title": "Calling the GetUserName WinAPI function with a mutable string doesn&#39;t populate the string", "body": "<p>This appears to partially work but I cannot get the string value to print</p>\n\n<pre><code>pub fn test() {\n    let mut buf: Vec&lt;u16&gt; = vec![0; 64];\n    let mut sz: DWORD = 0;\n    unsafe {\n        advapi32::GetUserNameW(buf.as_mut_ptr(), &amp;mut sz);\n    }\n    let str1 = OsString::from_wide(&amp;buf).into_string().unwrap();\n    println!(\"Here: {} {}\", sz, str1);\n}\n</code></pre>\n\n<p>Prints:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Here: 10\n</code></pre>\n\n<p>When I expect it to also print </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Here: 10 &lt;username&gt;\n</code></pre>\n\n<p>As a test, the C version</p>\n\n<pre><code>TCHAR buf[100];\nDWORD sz;\nGetUserName(buf, &amp;sz);\n</code></pre>\n\n<p>seems to populate <code>buf</code> fine.</p>\n"}, {"tags": ["struct", "rust", "lifetime"], "answers": [{"comments": [{"owner": {"reputation": 2693, "user_id": 1338952, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/8b68393134f679f403bf573569e94161?s=128&d=identicon&r=PG", "display_name": "user1338952", "link": "https://stackoverflow.com/users/1338952/user1338952"}, "edited": false, "score": 0, "creation_date": 1498224272, "post_id": 44709856, "comment_id": 76427308, "body": "Maybe <i>foo&lt;...&gt;(...b: &amp;str)</i> should be <i>foo&lt;...&gt;(...b: &#39;b &amp;str)</i>? Strange no compiler error or warning on unused scope &#39;b.  With original question I thought need for different lifetimes was very contrived. But hey if it can happen just make them independent. I think this example showing advantage of same lifetimes is also very contrived. Who knows upfront (or should know) all potential lifetime issues client&#39;s may face? Letting extra typing be guide I&#39;m back to just setting them same. Unfortunately, once choice is made changing is not easy."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2693, "user_id": 1338952, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/8b68393134f679f403bf573569e94161?s=128&d=identicon&r=PG", "display_name": "user1338952", "link": "https://stackoverflow.com/users/1338952/user1338952"}, "edited": false, "score": 0, "creation_date": 1498225282, "post_id": 44709856, "comment_id": 76427995, "body": "@user1338952 yes, the vast majority of examples are contrived; that&#39;s how examples work. Your second point is called <i>software design</i>. For example, why would you ever write <code>add(a: u8, b: u8)</code> when you could write <code>add&lt;A&gt;(a: A, b: A)</code> or when you could write <code>add&lt;A, B&gt;(a: A, b: B)</code> or when you could write <code>add&lt;A: Copy, B: Clone&gt;(a: A, b: B)</code>? Thinking about how your code will be used is the thing that makes software both challenging and rewarding. Yes, we sometimes get it wrong, sometimes we have to make (breaking) changes."}, {"owner": {"reputation": 2693, "user_id": 1338952, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/8b68393134f679f403bf573569e94161?s=128&d=identicon&r=PG", "display_name": "user1338952", "link": "https://stackoverflow.com/users/1338952/user1338952"}, "edited": false, "score": 0, "creation_date": 1498229497, "post_id": 44709856, "comment_id": 76431123, "body": "Any blogs that cover topic (i.e. <i>software design</i> choices when choosing lifetimes for your structs)? This is a bit more than: this is how it works. Pre-release book <i>Programming Rust</i> has section <i>Distinct Lifetimes Parameters</i> which touches on issue. Seems suggestion is try same first, if you find you need them independent change them. Not sure that scales."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2693, "user_id": 1338952, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/8b68393134f679f403bf573569e94161?s=128&d=identicon&r=PG", "display_name": "user1338952", "link": "https://stackoverflow.com/users/1338952/user1338952"}, "edited": false, "score": 0, "creation_date": 1498229846, "post_id": 44709856, "comment_id": 76431369, "body": "@user1338952 I don&#39;t know that there <i>is</i> a right way; that&#39;s what I was getting at with my generic types example. You could start from a very generic point of view and make the API more complicated for potentially no benefit, or you could start from a simpler point of view and add complexity as it emerges. I prefer to start from the simpler and grow more complex, but I know there&#39;s another frequent SO contributor that starts with distinct lifetimes and only unifies them later. I know of no longer blog posts on the topic, unfortunately."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1550779126, "last_edit_date": 1550779126, "creation_date": 1498167929, "answer_id": 44709856, "question_id": 44709632, "link": "https://stackoverflow.com/questions/44709632/why-would-you-ever-use-the-same-lifetimes-for-references-in-a-struct/44709856#44709856", "title": "Why would you ever use the same lifetimes for references in a struct?", "body": "<blockquote>\n  <p>is there ever benefit to requiring references in a struct have the same lifetime</p>\n</blockquote>\n\n<p>Yes, and it goes beyond having a struct. If lifetimes were always distinct from each other, then you couldn't write this function:</p>\n\n<pre><code>fn foo&lt;'a, 'b&gt;(a: &amp;'a str, b: &amp;'b str) -&gt; &amp;str {\n    // What lifetime to return?\n    if (global_random_number() == 42) {\n        a\n    } else {\n        b\n    }\n}\n</code></pre>\n\n<p>Applying to the struct, you could have something like this:</p>\n\n<pre><code>struct EvenOrOdd&lt;'a, 'b&gt; {\n    even: &amp;'a str,\n    odd: &amp;'b str,\n}\n\nimpl&lt;'a, 'b&gt; EvenOrOdd&lt;'a, 'b&gt; {\n    fn do_it(&amp;self, i: u8) -&gt; &amp;str {\n        if i % 2 == 0 {\n            self.even\n        } else {\n            self.odd\n        }\n    }\n}\n</code></pre>\n\n<p>Note that while this compiles, it <em>doesn't return a string that can outlive the structure itself</em>, which is not what was intended. This code fails, even though it should be able to work:</p>\n\n<pre><code>fn foo&lt;'a, 'b&gt;(a: &amp;'a str, b: &amp;'b str) {\n    let result = { EvenOrOdd { even: a, odd: b }.do_it(42) };\n\n    println!(\"{}\", result);\n}\n</code></pre>\n\n<p>This will work with unified lifetimes:</p>\n\n<pre><code>struct EvenOrOdd&lt;'a&gt; {\n    even: &amp;'a str,\n    odd: &amp;'a str,\n}\n\nimpl&lt;'a&gt; EvenOrOdd&lt;'a&gt; {\n    fn do_it(&amp;self, i: u8) -&gt; &amp;'a str {\n        if i % 2 == 0 {\n            self.even\n        } else {\n            self.odd\n        }\n    }\n}\n</code></pre>\n\n<p>This is the opposite of the linked answer, which has the comment:</p>\n\n<blockquote>\n  <p>you want to be able to take an aggregate value and split off parts of it after using it</p>\n</blockquote>\n\n<p>In this case, we want to take an aggregate value and <em>unify</em> them.</p>\n\n<p>In rarer occasions, you may need to thread the needle between distinct and unified lifetimes :</p>\n\n<pre><code>struct EvenOrOdd&lt;'a, 'b: 'a&gt; {\n    even: &amp;'a str,\n    odd: &amp;'b str,\n}\n\nimpl&lt;'a, 'b&gt; EvenOrOdd&lt;'a, 'b&gt; {\n    fn do_it(&amp;self, i: u8) -&gt; &amp;'a str {\n        if i % 2 == 0 {\n            self.even\n        } else {\n            self.odd\n        }\n    }\n}\n</code></pre>\n\n<p>While this is useful when needed, I can't imagine the wailing and gnashing of teeth that would erupt if we had to write it this way every time. </p>\n\n<hr>\n\n<blockquote>\n  <p>ignoring the extra typing</p>\n</blockquote>\n\n<p>I wouldn't. Having </p>\n\n<pre><code>foo&lt;'a&gt;(Bar&lt;'a&gt;)\n</code></pre>\n\n<p>is definitely better than</p>\n\n<pre><code>foo&lt;'a, 'b', 'c, 'd&gt;(Bar&lt;'a, 'b', 'c, 'd&gt;)\n</code></pre>\n\n<p>When you aren't benefiting from the extra generic parameters.</p>\n"}], "owner": {"reputation": 2693, "user_id": 1338952, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/8b68393134f679f403bf573569e94161?s=128&d=identicon&r=PG", "display_name": "user1338952", "link": "https://stackoverflow.com/users/1338952/user1338952"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 190, "favorite_count": 1, "accepted_answer_id": 44709856, "answer_count": 1, "score": 10, "last_activity_date": 1550779126, "creation_date": 1498166775, "last_edit_date": 1498167028, "question_id": 44709632, "link": "https://stackoverflow.com/questions/44709632/why-would-you-ever-use-the-same-lifetimes-for-references-in-a-struct", "title": "Why would you ever use the same lifetimes for references in a struct?", "body": "<p>This question is similar to <a href=\"https://stackoverflow.com/questions/29861388/when-is-it-useful-to-define-multiple-lifetimes-in-a-struct\">When is it useful to define multiple lifetimes in a struct?</a>, but hopefully different enough. The answer to that question is helpful  but focuses on advantages of one approach (using distinct lifetimes for references in struct) but not on drawbacks (if any). This question, like that, is looking for guidance on how to choose lifetimes when creating structs. </p>\n\n<p>Call this the <em>tied together</em> version because <em>x</em> and <em>y</em> are required to have the same lifetime:</p>\n\n<pre><code>struct Foo&lt;'a&gt; {\n    x: &amp;'a i32,\n    y: &amp;'a i32,\n}\n</code></pre>\n\n<p>and call this the <em>loose</em> version because lifetimes can vary:</p>\n\n<pre><code>struct Foo&lt;'a, 'b&gt; {\n    x: &amp;'a i32,\n    y: &amp;'b i32,\n}\n</code></pre>\n\n<p>The answer to the referenced question gives a clear case where client code can compile/run given the <em>loose</em> version but will fail for the <em>tied together</em> version. Isn't it the case that any client code that works for the <em>tied together</em> version will also work for the <em>loose</em> version and will be guaranteed <em>just as safe</em> (i.e. safe)? The obverse is not true. The <em>loose</em> version is clearly more flexible from a struct designer perspective. Given it is a good/accepted answer the guidance might be - when using references in a struct <em>always</em> give them distinct lifetimes.</p>\n\n<p>What is the drawback to this advice, ignoring the extra typing? For example, is there ever benefit to <strong>requiring</strong> references in a struct have the same lifetime?</p>\n"}, {"tags": ["plugins", "rust"], "answers": [{"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 7, "last_activity_date": 1524582293, "last_edit_date": 1524582293, "creation_date": 1498203760, "answer_id": 44715785, "question_id": 44708483, "link": "https://stackoverflow.com/questions/44708483/idiomatic-rust-plugin-system/44715785#44715785", "title": "Idiomatic Rust plugin system", "body": "<p>There is no official plugin system, and you cannot do plugins loaded at runtime in pure Rust. I saw some discussions about doing a native plugin system, but nothing is decided for now, and maybe there will never be any such thing. You can use one of these solutions:</p>\n\n<ol>\n<li><p>You can extend your code with native dynamic libraries <a href=\"https://doc.rust-lang.org/1.5.0/book/ffi.html\" rel=\"noreferrer\">using FFI</a>. To use the C ABI, you have to use <a href=\"https://doc.rust-lang.org/nomicon/other-reprs.html\" rel=\"noreferrer\"><code>repr(C)</code></a>, <code>no_mangle</code> attribute, <code>extern</code> etc. You will find more information by searching Rust FFI on the internets. With this solution, you must use raw pointers: they come with no safety guarantee (<em>i.e.</em> you must use unsafe code).</p>\n\n<p>Of course, you can write your dynamic library in Rust, but to load it and call the functions, you must go through the C ABI. This means that the safety guarantees of Rust do not apply there. Furthermore, you cannot use the highest level Rust's functionalities as <code>trait</code>, <code>enum</code>, etc. between the library and the binary.</p></li>\n<li><p>If you do not want this complexity, you can use a language adapted to expand Rust: with which you can dynamically add functions to your code and execute them with same guarantees as in Rust. This is, in my opinion, the easier way to go: if you have the choice, and if the execution speed is not critical, <strong>use this to avoid tricky C/Rust interfaces</strong>.</p>\n\n<p>Here is a (not exhaustive) list of languages that can easily extend Rust:</p>\n\n<ul>\n<li><a href=\"http://gluon-lang.org/book/embedding-api.html\" rel=\"noreferrer\">Gluon</a>, a functional language like Haskell</li>\n<li><a href=\"https://github.com/PistonDevelopers/dyon/issues/171\" rel=\"noreferrer\">Dyon</a>, a small but powerful scripting language intended for video games</li>\n<li>Lua with <a href=\"https://github.com/chucklefish/rlua\" rel=\"noreferrer\">rlua</a> or <a href=\"https://github.com/tomaka/hlua\" rel=\"noreferrer\">hlua</a></li>\n</ul>\n\n<p>You can also use <a href=\"https://github.com/dgrunwald/rust-cpython\" rel=\"noreferrer\">Python</a> or Javascript, or see the list in <a href=\"https://github.com/rust-unofficial/awesome-rust#scripting\" rel=\"noreferrer\"><em>awesome-rust</em></a>.</p></li>\n</ol>\n"}, {"comments": [{"owner": {"reputation": 295, "user_id": 2941084, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/741ea1562f264146b46d181fff800295?s=128&d=identicon&r=PG&f=1", "display_name": "Shane", "link": "https://stackoverflow.com/users/2941084/shane"}, "edited": false, "score": 0, "creation_date": 1554345352, "post_id": 46249019, "comment_id": 97719669, "body": "Did you try to mitigate sync problems using macros?  Perhaps by adding the rustc version and compilation (debug vs release) mode into the trait somehow (fn version -&gt; String)..."}, {"owner": {"reputation": 1865, "user_id": 2272617, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d37782227e26a130ced333e9a4409946?s=128&d=identicon&r=PG", "display_name": "Justin", "link": "https://stackoverflow.com/users/2272617/justin"}, "edited": false, "score": 0, "creation_date": 1582634068, "post_id": 46249019, "comment_id": 106837858, "body": "+1 Thanks, this answered a lot of questions. I was able to return a boxed trait object with no issues. I was also able to confirm that dropping the plugin (The libloader Library object in this case) with an active trait object is a bad idea. This also means you need to be sure the trait object is dropped <i>before</i> the plugin or you&#39;ll get the expected SIGSEGV on drop."}], "tags": [], "owner": {"reputation": 17491, "user_id": 901827, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/86a6acccf7e8dbe398ebda4f8524ed50?s=128&d=identicon&r=PG", "display_name": "LinearZoetrope", "link": "https://stackoverflow.com/users/901827/linearzoetrope"}, "is_accepted": false, "score": 18, "last_activity_date": 1579549932, "last_edit_date": 1579549932, "creation_date": 1505522578, "answer_id": 46249019, "question_id": 44708483, "link": "https://stackoverflow.com/questions/44708483/idiomatic-rust-plugin-system/46249019#46249019", "title": "Idiomatic Rust plugin system", "body": "<h2>UPDATE 3/27/2018:</h2>\n\n<p>After using plugins this way for some time, I have to caution that in my experience things do get out of sync, and it can be very frustrating to debug (strange segfaults, weird OS errors). Even in cases where my team independently verified the dependencies were in sync, passing non-primitive structs between the dynamic library binaries tended to fail on OS X for some reason. I'd like to revisit this, find what cases it happens in, and perhaps open an issue with Rust, but I'm going to advise caution with this going forward. </p>\n\n<p>LLDB and valgrind are near-essential to debug these issues.</p>\n\n<h1>Intro</h1>\n\n<p>I've been investigating things along these lines myself, and I've found there's little official documentation for this, so I decided to play around!</p>\n\n<p>First let me note, as there is little official word on these properties <strong>please</strong> do not rely on any code here if you're trying to keep planes in the air or nuclear missiles from errantly launching, at least not without doing far more comprehensive testing than I've done. I'm not responsible if the code here deletes your OS and emails an erroneous tearful confession of committing the Zodiac killings to your local police; we're on the fringes of Rust here and things could change from one release or toolchain to another.</p>\n\n<p>I have personally tested this on Rust 1.20 stable in both debug and release configurations on Windows 10 (<code>stable-x86_64-pc-windows-msvc</code>) and Cent OS 7 (<code>stable-x86_64-unknown-linux-gnu</code>).</p>\n\n<h1>Approach</h1>\n\n<p>The approach I took was a shared <code>common</code> crate both crates listed as a dependency defining common <code>struct</code> and <code>trait</code> definitions. At first, I was also going to test having a struct with the same structure, or trait with the same definitions, defined independently in both libraries, but I opted against it because it's too fragile and you wouldn't want to do it in a real design. That said, if anybody wants to test this, feel free to do a PR on the repository above and I will update this answer.</p>\n\n<p>In addition, the Rust plugin was declared <code>dylib</code>. I'm not sure how compiling as <code>cdylib</code> would interact, since I think it would mean that upon loading the plugin there are two versions of the Rust standard library hanging around (since I believe <code>cdylib</code> statically links the Rust stdlib into the shared object).</p>\n\n<h1>Tests</h1>\n\n<h2>General Notes</h2>\n\n<ul>\n<li>The structs I tested were not declared <code>#repr(C)</code>. This could provide an extra layer of safety by guaranteeing a layout, but I was most curious about writing \"pure\" Rust plugins with as little \"treating Rust like C\" fiddling as possible. We already <strong>know</strong> you can use Rust via FFI by wrapping things in opaque pointers, manually dropping, and such, so it's not very enlightening to test this.</li>\n<li>The function signature I used was <code>pub fn foo(args) -&gt; output</code> with the <code>#[no_mangle]</code> directive, it turns out that <code>rustfmt</code> automatically changes <code>extern \"Rust\" fn</code> to simply <code>fn</code>. I'm not sure I agree with this in this case since they are most certainly \"extern\" functions here, but I will choose to abide by <code>rustfmt</code>.</li>\n<li>Remember that even though this is Rust, this has elements of unsafety because <code>libloading</code> (or the unstable <code>DynamicLib</code> functionality) will not type check the symbols for you. At first I thought my <code>Vec</code> test was proving you couldn't pass Vecs between host and plugin until I realized on one end I had <code>Vec&lt;i32&gt;</code> and on the other I had <code>Vec&lt;usize&gt;</code></li>\n<li>Interestingly, there were a few times I pointed an optimized test build to an unoptimized plugin and vice versa and it still worked. However, I still can't in good faith recommending building plugins and host applications with different toolchains, and even <strong>if</strong> you do, I can't promise that for some reason rustc/llvm won't decide to do certain optimizations on one version of a struct and not another. In addition, I'm not sure if this means that passing types through FFI prevents certain optimizations such as Null Pointer Optimizations from occurring.</li>\n<li>You're still limited to calling bare functions, no <code>Foo::bar</code> because of the lack of name mangling. In addition, due to the fact that functions with trait bounds are monomorphized, generic functions and structs are also out. The compiler can't know you're going to call <code>foo&lt;i32&gt;</code> so no <code>foo&lt;i32&gt;</code> is going to be generated. Any functions over the plugin boundary must take only concrete types and return only concrete types.</li>\n<li>Similarly, you have to be careful with lifetimes for similar reasons, since there's no static lifetime checking Rust is forced to believe you when you say a function returns <code>&amp;'a</code> when it's really <code>&amp;'b</code>.</li>\n</ul>\n\n<h2>Native Rust</h2>\n\n<p>The first tests I performed were on no custom structures; just pure, native Rust types. This would give a baseline for if this is even possible. I chose three baseline types: <code>&amp;mut i32</code>, <code>&amp;mut Vec</code>, and <code>Option&lt;i32&gt; -&gt; Option&lt;i32&gt;</code>. These were all chosen for very specific reasons: the <code>&amp;mut i32</code> because it tests a reference, the <code>&amp;mut Vec</code> because it tests growing the heap from memory allocated in the host application, and the <code>Option</code> as a dual purpose of testing passing by move and matching a simple enum.</p>\n\n<p>All three work as expected. Mutating the reference mutates the value, pushing to a Vec works properly, and the Option works properly whether <code>Some</code> or <code>None</code>.</p>\n\n<h2>Shared Struct Definition</h2>\n\n<p>This was meant to test if you could pass a non-builtin struct with a common definition on both sides between plugin and host. This works as expected, but as mentioned in the \"General Notes\" section, can't <strong>promise</strong> you Rust won't fail to optimize and/or optimize a structure definition on one side and not another. Always test your specific use case and use CI in case it changes.</p>\n\n<h2>Boxed Trait Object</h2>\n\n<p>This test uses a struct whose definition is only defined on the <strong>plugin</strong> side, but implements a trait defined in a common crate, and returns a <code>Box&lt;Trait&gt;</code>. This works as expected. Calling <code>trait_obj.fun()</code> works properly.</p>\n\n<p>At first I actually anticipated there would be issues with dropping without making the trait explicitly have <code>Drop</code> as a bound, but it turns out Drop is properly called as well (this was verified by setting the value of a variable declared on the test stack via raw pointer from the struct's <code>drop</code> function). (Naturally I'm aware <code>drop</code> is always called even with trait objects in Rust, but I wasn't sure if dynamic libraries would complicate it).</p>\n\n<p><strong>NOTE</strong>:</p>\n\n<blockquote>\n  <p>I did not test what would happen if you load a plugin, create a trait object, then drop the plugin (which would likely close it). I can only assume this is potentially catastrophic. I recommend keeping the plugin open as long as the trait object persists.</p>\n</blockquote>\n\n<h1>Remarks</h1>\n\n<p>Plugins work exactly as you'd expect just linking a crate naturally, albeit with some restrictions and pitfalls. As long as you test, I think this is a very natural way to go. It makes symbol loading more bearable, for instance, if you only need to load a <code>new</code> function and then receive a trait object implementing an interface. It also avoids nasty C memory leaks because you couldn't or forgot to load a <code>drop</code>/<code>free</code> function. That said, be careful, and always test!</p>\n"}], "owner": {"reputation": 211, "user_id": 8201887, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/KXBjJ.jpg?s=128&g=1", "display_name": "xnor14state", "link": "https://stackoverflow.com/users/8201887/xnor14state"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4917, "favorite_count": 8, "answer_count": 2, "score": 21, "last_activity_date": 1579549932, "creation_date": 1498162036, "last_edit_date": 1498163302, "question_id": 44708483, "link": "https://stackoverflow.com/questions/44708483/idiomatic-rust-plugin-system", "title": "Idiomatic Rust plugin system", "body": "<p>I want to outsource some code for a plugin system. Inside my project, I have a trait called <code>Provider</code> which is the code for my plugin system. If you activate the feature \"consumer\" you can use plugins; if you don't, you are an author of plugins.</p>\n\n<p>I want authors of plugins to get their code into my program by compiling to a shared library. Is a shared library a good design decision? The limitation of the plugins is using Rust anyway.</p>\n\n<p>Does the plugin host have to go the C way for loading the shared library: loading an unmangled function?</p>\n\n<p>I just want authors to use the trait <code>Provider</code> for implementing their plugins and that's it.\nAfter taking a look at <a href=\"https://crates.io/crates/sharedlib\" rel=\"noreferrer\">sharedlib</a> and <a href=\"https://crates.io/crates/libloading\" rel=\"noreferrer\">libloading</a>, it seems impossible to load plugins in a idiomatic Rust way.</p>\n\n<p>I'd just like to load trait objects into my <code>ProviderLoader</code>:</p>\n\n<pre><code>// lib.rs\n\npub struct Sample { ... }\n\npub trait Provider { \n    fn get_sample(&amp;self) -&gt; Sample;\n}\n\npub struct ProviderLoader {\n    plugins: Vec&lt;Box&lt;Provider&gt;&gt;\n}\n</code></pre>\n\n<p>When the program is shipped, the file tree would look like:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>.\n\u251c\u2500\u2500 fancy_program.exe\n\u2514\u2500\u2500 providers\n    \u251c\u2500\u2500 fp_awesomedude.dll\n    \u2514\u2500\u2500 fp_niceplugin.dll\n</code></pre>\n\n<p>Is that possible if plugins are compiled to shared libs? This would also affect the decision of the plugins' crate-type.</p>\n\n<p>Do you have other ideas? Maybe I'm on the wrong path so that shared libs aren't the holy grail. </p>\n\n<p>I first posted this on the <a href=\"https://users.rust-lang.org/t/rusty-plugin-system-for-my-project/11490\" rel=\"noreferrer\">Rust forum</a>. A friend advised me to give it a try on Stack Overflow.</p>\n"}, {"tags": ["rust"], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 73, "favorite_count": 1, "closed_date": 1498153265, "answer_count": 0, "score": 2, "last_activity_date": 1498152663, "creation_date": 1498152663, "question_id": 44705934, "link": "https://stackoverflow.com/questions/44705934/best-way-to-convert-optionresult-into-resultoption", "closed_reason": "Duplicate", "title": "Best way to convert `Option&lt;Result&lt;_, _&gt;&gt;` into `Result&lt;Option&lt;_&gt;, _&gt;`", "body": "<p>In a larger application I have many functions that return a <code>Result&lt;_, _&gt;</code>. Thanks to <code>?</code> I can easily compose those. Unfortunately, my code sometimes naturally results in a <code>Option&lt;Result&lt;_, _&gt;&gt;</code>. Take this dummy example:</p>\n\n<pre><code>std::env::args().nth(1)\n    .and_then(|filename| File::open(filename))\n</code></pre>\n\n<p>To easily compose functions that may fail, I want the <code>Result</code> at the very \"outer level\". Of course, <code>match</code> helps: </p>\n\n<pre><code>match std::env::args().nth(1) {\n    Some(filename) =&gt; File::open(filename).map(|f| Some(f)),\n    None =&gt; Ok(None),\n}\n</code></pre>\n\n<p>But this is rather verbose and annoying to write. I am searching for a function that helps this conversion. I am somehow reminded of the <code>FromIterator&lt;Result&lt;A, E&gt;&gt;</code> impl for <code>Result&lt;V, E&gt; where V: FromIterator&lt;A&gt;</code> -- it also pulls the <code>Result</code> to the outer layer.</p>\n\n<p><strong>So what is the best way to achieve what I want?</strong> Writing an own helper function or macro is OK, too.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1498141876, "post_id": 44695216, "comment_id": 76387512, "body": "For reference, this was <a href=\"https://users.rust-lang.org/t/should-simple-enum-derive-copy-trait/11483?u=shepmaster\" rel=\"nofollow noreferrer\">cross-posted to the Rust user&#39;s forum</a>."}], "answers": [{"tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": true, "score": 17, "last_activity_date": 1498123578, "creation_date": 1498123578, "answer_id": 44695401, "question_id": 44695216, "link": "https://stackoverflow.com/questions/44695216/should-simple-enums-derive-copy-is-there-any-difference-in-performance/44695401#44695401", "title": "Should simple enums derive Copy? Is there any difference in performance?", "body": "<p>Citing the <a href=\"https://doc.rust-lang.org/stable/std/marker/trait.Copy.html#when-should-my-type-be-copy\" rel=\"noreferrer\">docs</a>:</p>\n\n<blockquote>\n  <p>Generally speaking, if your type can implement <code>Copy</code>, it should.</p>\n</blockquote>\n\n<p>Since your <code>SomeEnum</code> has no composite variants (e.g. <code>Vec</code>s or <code>String</code>s), I recommend making it <code>Copy</code>able. It appears that it is actually smaller than a reference to it:</p>\n\n<pre><code>use std::mem;\n\nenum SomeEnum {\n    Some1,\n    Some2,\n}\n\nfn main() {\n    assert_eq!(1, mem::size_of::&lt;SomeEnum&gt;());\n    assert_eq!(8, mem::size_of::&lt;&amp;SomeEnum&gt;());\n}\n</code></pre>\n\n<p>Though I doubt that in this case you will be able to detect any difference in performance.</p>\n"}], "owner": {"reputation": 237, "user_id": 4716298, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c11dd6bca3d9fa2122bc6b3a513b28d0?s=128&d=identicon&r=PG&f=1", "display_name": "sbant", "link": "https://stackoverflow.com/users/4716298/sbant"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3998, "favorite_count": 1, "accepted_answer_id": 44695401, "answer_count": 1, "score": 17, "last_activity_date": 1498134690, "creation_date": 1498123050, "last_edit_date": 1498134690, "question_id": 44695216, "link": "https://stackoverflow.com/questions/44695216/should-simple-enums-derive-copy-is-there-any-difference-in-performance", "title": "Should simple enums derive Copy? Is there any difference in performance?", "body": "<pre><code>use std::collections::HashMap;\n\n// #[derive(Copy, Clone)]\nenum SomeEnum {\n    Some1,\n    Some2,\n}\n\nstruct SomeStruct {\n    pub some_enum: SomeEnum,\n    pub s: String,\n}\n\nfn proc_struct(some_struct: &amp;SomeStruct) {\n    let mut map = HashMap::new();\n    map.insert(String::from(\"any\"), 0);\n\n    match map.get(&amp;some_struct.s) { // just to make a reference in SomeStruct\n        Some(v) =&gt; {\n            proc1(some_struct.some_enum);\n            proc2(&amp;some_struct.some_enum);\n        }\n        None =&gt; {}\n    }\n}\n\nfn proc1(some: SomeEnum) {}\n\nfn proc2(some: &amp;SomeEnum) {}\n\nfn main() {\n    let some_struct = SomeStruct { some_enum: SomeEnum::Some1, s: String::from(\"s\") };\n\n    proc_struct(&amp;some_struct);\n}\n</code></pre>\n\n<p>The above code produces the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n  --&gt; src/main.rs:20:19\n   |\n20 |             proc1(some_struct.some_enum);\n   |                   ^^^^^^^^^^^ cannot move out of borrowed content\n</code></pre>\n\n<p>When I add <code>#[derive(Copy, Clone)]</code> to <code>SomeEnum</code>, it compiles fine.</p>\n\n<p>Should simple enums like <code>SomeEnum</code> derive the <code>Copy</code> trait?\nIs there any difference in performance between functions <code>proc1()</code> and <code>proc2()</code>?</p>\n"}, {"tags": ["security", "rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1498112793, "post_id": 44691363, "comment_id": 76366668, "body": "@LukasKalbertodt this wiki help me ^^ <a href=\"https://en.wikipedia.org/wiki/Timing_attack\" rel=\"nofollow noreferrer\">en.wikipedia.org/wiki/Timing_attack</a>"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 3, "creation_date": 1498112911, "post_id": 44691363, "comment_id": 76366727, "body": "Why do you think that hashing is vulnerable to timing attacks? Wouldn&#39;t it depend on the particular hash algorithm being used?"}], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1498113839, "post_id": 44691912, "comment_id": 76367256, "body": "Note: while writing a constant time comparison is easy, the problem is the compiler optimizations wreaking havoc. Which is why, in general, such functions are written in assembly."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1498114383, "post_id": 44691912, "comment_id": 76367574, "body": "@MatthieuM. Oh, very correct, thanks! But this strange xor-algorithm is already designed to prevent optimizers from optimizing stuff. Sadly, I don&#39;t have the time right now to verify that Rust won&#39;t optimize it in a way we don&#39;t want. I&#39;m still too slow at reading assembly :&lt;  ... <a href=\"https://godbolt.org/g/pmon3m\" rel=\"nofollow noreferrer\">be my guest (with a slightly simplified/less fancy version</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1498135028, "post_id": 44691912, "comment_id": 76382029, "body": "This code allows an attacker to recover the length of the target string by varying the input until the function takes slightly longer (the code has passed the first check). That narrows down the window to continue looking."}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": false, "score": 3, "last_activity_date": 1498114250, "last_edit_date": 1498114250, "creation_date": 1498113507, "answer_id": 44691912, "question_id": 44691363, "link": "https://stackoverflow.com/questions/44691363/how-to-compare-strings-in-constant-time/44691912#44691912", "title": "How to compare strings in constant time?", "body": "<p>To write a timing-attack-safe string comparison algorithm yourself is pretty easy in theory. There are many resources online on how to do it in other languages. The important part is to trick the optimizer in not optimizing your code in a way you don't want. Here is one example Rust implementation which uses the algorithm described <a href=\"https://codahale.com/a-lesson-in-timing-attacks/\" rel=\"nofollow noreferrer\">here</a>:</p>\n\n<pre><code>fn ct_compare(a: &amp;str, b: &amp;str) -&gt; bool {\n    if a.len() != b.len() {\n        return false;\n    }\n\n    a.bytes().zip(b.bytes())\n        .fold(0, |acc, (a, b)| acc | (a ^ b) ) == 0\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?gist=ee6b71d555c62968d565312c11103f2e&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">Playground</a>)</p>\n\n<p>Of course, this algorithm can be easily generalized to everything that is <code>AsRef&lt;[u8]&gt;</code>. This is left as an exercise to the reader ;-)</p>\n\n<hr>\n\n<p>It looks like there is a crate already offering these kinds of comparisons: <a href=\"https://crates.io/crates/consistenttime\" rel=\"nofollow noreferrer\"><code>consistenttime</code></a>. I haven't tested it, but the documentation looks quite good.</p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1498137750, "post_id": 44700409, "comment_id": 76384127, "body": "Do you think <i>any</i> language other than assembly is suitable for such?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1498137877, "post_id": 44700409, "comment_id": 76384225, "body": "@Shepmaster: I think it&#39;s less a matter of language and more a matter of toolchain. I&#39;m pretty sure that a straightforward translation of C, C++ or Rust code could easily be constant time... but today&#39;s compilers rarely do straightforward translations."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 5, "last_activity_date": 1498142237, "last_edit_date": 1498142237, "creation_date": 1498137086, "answer_id": 44700409, "question_id": 44691363, "link": "https://stackoverflow.com/questions/44691363/how-to-compare-strings-in-constant-time/44700409#44700409", "title": "How to compare strings in constant time?", "body": "<p><strong>TL;DR: Use assembly.</strong></p>\n\n<hr>\n\n<p>Constant Time code is <em>really</em> hard to pull off. To be truly constant time you need:</p>\n\n<ul>\n<li>a constant time algorithm,</li>\n<li>a constant time implementation of said algorithm.</li>\n</ul>\n\n<hr>\n\n<blockquote>\n  <p>What does \"constant time algorithm\" mean?</p>\n</blockquote>\n\n<p>The example of string comparison is great. Most of the time, you want the comparison to take as little as possible, which means bailing out at the first difference:</p>\n\n<pre><code>fn simple_compare(a: &amp;str, b: &amp;str) -&gt; bool {\n    if a.len() != b.len() { return false; }\n\n    for (a, b) in a.bytes().zip(b.bytes()) {\n        if a != b { return false; }\n    }\n\n    true\n}\n</code></pre>\n\n<p>The constant time version algorithm version however should have constant time regardless of the input:</p>\n\n<ul>\n<li>the input should always have the same size,</li>\n<li>the time taken to compute the result should be identical no matter where the difference is located (if any).</li>\n</ul>\n\n<p>The algorithm Lukas gave is almost right:</p>\n\n<pre><code>/// Prerequisite: a.len() == b.len()\nfn ct_compare(a: &amp;str, b: &amp;str) -&gt; bool {\n    debug_assert!(a.len() == b.len());\n\n    a.bytes().zip(b.bytes())\n        .fold(0, |acc, (a, b)| acc | (a ^ b) ) == 0\n}\n</code></pre>\n\n<hr>\n\n<blockquote>\n  <p>What does \"constant time implementation\" mean?</p>\n</blockquote>\n\n<p>Even if the algorithm is constant time, the implementation may not be.</p>\n\n<p>If the exact same sequence of CPU instructions is not used, then on some architecture one of the instructions could be faster, while the other is slower, and the implementation would lose.</p>\n\n<p>If the algorithm uses table look-up, then there could be more or less cache misses.</p>\n\n<hr>\n\n<blockquote>\n  <p>Can you write a constant time implementation of string comparison in Rust?</p>\n</blockquote>\n\n<p><strong>No</strong>.</p>\n\n<p>The Rust language could potentially be suited to the task, however <em>its toolchain is not</em>:</p>\n\n<ul>\n<li>the LLVM optimizer will wreak havoc with your algorithm, short-circuiting it, eliminating unnecessary reads, now or in the future,</li>\n<li>the LLVM backends will wreak havoc with your implementation, picking different instructions.</li>\n</ul>\n\n<p><strong>The short and long is that, today, the only way to access a constant time implementation from Rust is to write said implementation in assembly.</strong></p>\n"}, {"tags": [], "owner": {"reputation": 31, "user_id": 9881851, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/55f42e59b4476ebaf015fa3dcb9afaea?s=128&d=identicon&r=PG&f=1", "display_name": "Elrendio", "link": "https://stackoverflow.com/users/9881851/elrendio"}, "is_accepted": false, "score": 1, "last_activity_date": 1619083321, "creation_date": 1619083321, "answer_id": 67210446, "question_id": 44691363, "link": "https://stackoverflow.com/questions/44691363/how-to-compare-strings-in-constant-time/67210446#67210446", "title": "How to compare strings in constant time?", "body": "<p>For those looking for a crate providing such implementation, you can use <a href=\"https://docs.rs/rust-crypto/0.2.36/crypto/index.html\" rel=\"nofollow noreferrer\">rust-crypto</a> that provides the function <a href=\"https://docs.rs/rust-crypto/0.2.36/crypto/util/fn.fixed_time_eq.html\" rel=\"nofollow noreferrer\"><code>fixed_time_eq</code></a>.</p>\n<p>The implementation is very similar to the one of Lukas Kalbertodt.</p>\n"}], "owner": {"reputation": 151, "user_id": 8182830, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0a9f4f5d491e40347beb66456f88f825?s=128&d=identicon&r=PG&f=1", "display_name": "RoundSauce3", "link": "https://stackoverflow.com/users/8182830/roundsauce3"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3486, "favorite_count": 2, "accepted_answer_id": 44700409, "answer_count": 3, "score": 3, "last_activity_date": 1619083321, "creation_date": 1498111578, "last_edit_date": 1498134862, "question_id": 44691363, "link": "https://stackoverflow.com/questions/44691363/how-to-compare-strings-in-constant-time", "title": "How to compare strings in constant time?", "body": "<p>How does one safely compare two strings with bounded length in such a way that each comparison takes the same time? Hashing unfortunately has a timing attack vulnerability.</p>\n\n<p>Is there any way to compare two strings without hashing in a way that is not vulnerable to timing-attacks?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 58, "user_id": 11105624, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-qTkPlZ6wGkg/AAAAAAAAAAI/AAAAAAAAADg/RpfZE0Vmm2Q/photo.jpg?sz=128", "display_name": "Atul Gopinathan", "link": "https://stackoverflow.com/users/11105624/atul-gopinathan"}, "edited": false, "score": 0, "creation_date": 1609302612, "post_id": 44690529, "comment_id": 115805313, "body": "How can I put underscores in between to make it more readable?"}, {"owner": {"reputation": 7952, "user_id": 354144, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/4d9bcaff13bb112adcca63a5bd74aaad?s=128&d=identicon&r=PG", "display_name": "Neal Ehardt", "link": "https://stackoverflow.com/users/354144/neal-ehardt"}, "reply_to_user": {"reputation": 58, "user_id": 11105624, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-qTkPlZ6wGkg/AAAAAAAAAAI/AAAAAAAAADg/RpfZE0Vmm2Q/photo.jpg?sz=128", "display_name": "Atul Gopinathan", "link": "https://stackoverflow.com/users/11105624/atul-gopinathan"}, "edited": false, "score": 0, "creation_date": 1609966079, "post_id": 44690529, "comment_id": 115988742, "body": "@AtulGopinathan you will need a custom crate. <a href=\"https://stackoverflow.com/questions/26998485/is-it-possible-to-print-a-number-formatted-with-thousand-separator-in-rust\" title=\"is it possible to print a number formatted with thousand separator in rust\">stackoverflow.com/questions/26998485/&hellip;</a>"}], "tags": [], "owner": {"reputation": 7952, "user_id": 354144, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/4d9bcaff13bb112adcca63a5bd74aaad?s=128&d=identicon&r=PG", "display_name": "Neal Ehardt", "link": "https://stackoverflow.com/users/354144/neal-ehardt"}, "is_accepted": true, "score": 31, "last_activity_date": 1549569561, "last_edit_date": 1549569561, "creation_date": 1498107824, "answer_id": 44690529, "question_id": 44690439, "link": "https://stackoverflow.com/questions/44690439/how-do-i-print-an-integer-in-binary-with-leading-zeros/44690529#44690529", "title": "How do I print an integer in binary with leading zeros?", "body": "<pre><code>let flags = 0b0000000000101100u16;\nprintln!(\"flags: {:#018b}\", flags);\n</code></pre>\n\n<p>The <code>018</code> pads with zeros to a width of 18. That width includes <code>0b</code> (length=2) plus a u16 (length=16) so <code>18 = 2 + 16</code>. It must come <strong>between</strong> <code>#</code> and <code>b</code>.</p>\n\n<p>Rust's fmt docs explain both <a href=\"https://doc.rust-lang.org/std/fmt/#sign0\" rel=\"noreferrer\">leading zeros</a> and <a href=\"https://doc.rust-lang.org/std/fmt/#formatting-traits\" rel=\"noreferrer\">radix formatting</a>, but don't show how to combine them.</p>\n\n<p>Here are u8, u16, and u32:</p>\n\n<pre><code>//                       Width  0       8      16      24      32\n//                              |       |       |       |       |\nprintln!(\"{:#010b}\", 1i8);  // 0b00000001\nprintln!(\"{:#018b}\", 1i16); // 0b0000000000000001\nprintln!(\"{:#034b}\", 1i32); // 0b00000000000000000000000000000001\n</code></pre>\n"}], "owner": {"reputation": 7952, "user_id": 354144, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/4d9bcaff13bb112adcca63a5bd74aaad?s=128&d=identicon&r=PG", "display_name": "Neal Ehardt", "link": "https://stackoverflow.com/users/354144/neal-ehardt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 9562, "favorite_count": 1, "accepted_answer_id": 44690529, "answer_count": 1, "score": 18, "last_activity_date": 1549569561, "creation_date": 1498107376, "question_id": 44690439, "link": "https://stackoverflow.com/questions/44690439/how-do-i-print-an-integer-in-binary-with-leading-zeros", "title": "How do I print an integer in binary with leading zeros?", "body": "<p>I'm doing some bit twiddling and I'd like to print all the bits in my u16.</p>\n\n<pre><code>let flags = 0b0000000000101100u16;\nprintln!(\"flags: {:#b}\", flags);\n</code></pre>\n\n<p>This prints <code>flags: 0b101100</code>.</p>\n\n<p>How do I make it print <code>flags: 0b0000000000101100</code>?</p>\n"}]