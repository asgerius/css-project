[{"tags": ["typescript", "odata", "code-generation"], "comments": [{"owner": {"reputation": 2073, "user_id": 2617732, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/e542e1ac9138b5b9a7434524595dc83f?s=128&d=identicon&r=PG", "display_name": "rdans", "link": "https://stackoverflow.com/users/2617732/rdans"}, "edited": false, "score": 0, "creation_date": 1428656181, "post_id": 28998500, "comment_id": 47264828, "body": "I&#39;m not aware of anything but of course you could write some t4 templates to do it. If you do come up with anything, please share :)"}, {"owner": {"reputation": 667, "user_id": 2470594, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/75ba4324024d632b0ce093739f17023b?s=128&d=identicon&r=PG", "display_name": "Svakinn", "link": "https://stackoverflow.com/users/2470594/svakinn"}, "edited": false, "score": 0, "creation_date": 1429373386, "post_id": 28998500, "comment_id": 47573904, "body": "<a href=\"http://type.litesolutions.net/\" rel=\"nofollow noreferrer\">type.litesolutions.net</a>  could be the tool you are looking for."}, {"owner": {"reputation": 8181, "user_id": 1220627, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/bcc4752767827a60b2e32ac3d090f337?s=128&d=identicon&r=PG", "display_name": "Sn&#230;bj&#248;rn", "link": "https://stackoverflow.com/users/1220627/sn%c3%a6bj%c3%b8rn"}, "reply_to_user": {"reputation": 667, "user_id": 2470594, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/75ba4324024d632b0ce093739f17023b?s=128&d=identicon&r=PG", "display_name": "Svakinn", "link": "https://stackoverflow.com/users/2470594/svakinn"}, "edited": false, "score": 0, "creation_date": 1429535067, "post_id": 28998500, "comment_id": 47629620, "body": "Thanks @Svakinn that looks useful"}, {"owner": {"reputation": 16389, "user_id": 1938988, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/GPf1K.jpg?s=128&g=1", "display_name": "johnny 5", "link": "https://stackoverflow.com/users/1938988/johnny-5"}, "edited": false, "score": 1, "creation_date": 1523008168, "post_id": 28998500, "comment_id": 86391478, "body": "This questions quite old but <a href=\"https://github.com/FuryTechs/FuryTech.OdataTypescriptServiceGenerator\" rel=\"nofollow noreferrer\">this</a> may be of use to someone in the future"}, {"owner": {"reputation": 8181, "user_id": 1220627, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/bcc4752767827a60b2e32ac3d090f337?s=128&d=identicon&r=PG", "display_name": "Sn&#230;bj&#248;rn", "link": "https://stackoverflow.com/users/1220627/sn%c3%a6bj%c3%b8rn"}, "reply_to_user": {"reputation": 1679, "user_id": 1534823, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/AyODe.jpg?s=128&g=1", "display_name": "Rafael Emshoff", "link": "https://stackoverflow.com/users/1534823/rafael-emshoff"}, "edited": false, "score": 0, "creation_date": 1531303654, "post_id": 28998500, "comment_id": 89542706, "body": "@RafaelCichocki while ts-odata is cool and helps you write the odata queries. It doesn&#39;t help you generate the model from the $metadata so you&#39;ll still be using magic string property names."}], "owner": {"reputation": 8181, "user_id": 1220627, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/bcc4752767827a60b2e32ac3d090f337?s=128&d=identicon&r=PG", "display_name": "Sn&#230;bj&#248;rn", "link": "https://stackoverflow.com/users/1220627/sn%c3%a6bj%c3%b8rn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 2222, "favorite_count": 1, "answer_count": 0, "score": 5, "last_activity_date": 1562673125, "creation_date": 1426112493, "question_id": 28998500, "link": "https://stackoverflow.com/questions/28998500/generate-typescript-interface-from-odata-metadata", "title": "Generate TypeScript interface from OData $metadata", "body": "<p>I'm getting into OData and TypeScript and it struck me when learning about <a href=\"http://blogs.msdn.com/b/odatateam/archive/2014/03/11/how-to-use-odata-client-code-generator-to-generate-client-side-proxy-class.aspx\" rel=\"noreferrer\">OData Client Code Generator</a> that something similar could be done for getting TypeScript interfaces for OData endpoints. Would really help when refactoring :)</p>\n\n<p>So was wondering if anyone got some experience on the matter. Like what tools they use. (if any exist)\nProblems they encountered.</p>\n"}, {"tags": ["generics", "typescript"], "answers": [{"comments": [{"owner": {"reputation": 2107, "user_id": 1852503, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/bh4J6.jpg?s=128&g=1", "display_name": "user1852503", "link": "https://stackoverflow.com/users/1852503/user1852503"}, "edited": false, "score": 0, "creation_date": 1426113304, "post_id": 28998603, "comment_id": 46245274, "body": "Just in time! i just found a similar solution  to this myself:) by doing a double casting &lt;T&gt;&lt;any&gt;function(){}. but this is better. thanks man. i mean it&#39;s still a double cast, one is just implicit. but using the ...x syntax is sweet."}, {"owner": {"reputation": 6734, "user_id": 2095953, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/43bf3d601243314c3eb2da2c7a0b4b30?s=128&d=identicon&r=PG", "display_name": "frodo2975", "link": "https://stackoverflow.com/users/2095953/frodo2975"}, "edited": false, "score": 0, "creation_date": 1439319608, "post_id": 28998603, "comment_id": 51809164, "body": "Genius! Where do you find this stuff?"}, {"owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "edited": false, "score": 1, "creation_date": 1439424106, "post_id": 28998603, "comment_id": 51860951, "body": "Lots of spare time coding ... sadly no shortcut as far as I know :( Wasn&#39;t born <i>super smart</i> ... just smart enough"}, {"owner": {"reputation": 105, "user_id": 2407071, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6e10a1f94ae40b9b68189a45aff1655a?s=128&d=identicon&r=PG&f=1", "display_name": "Geraldo B. Landre", "link": "https://stackoverflow.com/users/2407071/geraldo-b-landre"}, "edited": false, "score": 0, "creation_date": 1617821775, "post_id": 28998603, "comment_id": 118417559, "body": "There is one problem with this code though... The <code>f</code> function is typed as if it would return the same value as its <code>a</code> argument, but it&#39;s returning null.  The code above would be consistent with the typing:  <code>ts function f&lt;A extends Function&gt;(a:A):A {     let newFunc = (...x:any[]) =&gt; {         let result = a.apply(undefined, x)         console.log(&#39;(&#39;+x.join(&#39;,&#39;)+&#39;) =&gt; &#39;, );         return result;     }     return &lt;any&gt;newFunc; } </code>  I&#39;m using <code>let</code> but <code>var</code> would be good enough as well."}], "tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": true, "score": 9, "last_activity_date": 1426112957, "creation_date": 1426112957, "answer_id": 28998603, "question_id": 28998417, "link": "https://stackoverflow.com/questions/28998417/create-a-generic-function-returning-a-function-with-the-same-signature/28998603#28998603", "title": "create a generic function returning a function with the same signature", "body": "<p>Here you go : </p>\n\n<pre><code>function f&lt;A extends Function&gt;(a:A):A {\n    var newFunc = (...x:any[]) =&gt; {\n        console.log('('+x.join(',')+') =&gt; ', a.apply(undefined, x));\n        return null;\n    }\n    return &lt;any&gt;newFunc;\n}\n\nfunction a(j:string, k:number): boolean {\n    return j === String(k);\n}\n\nvar b = f(a);\n\nb(\"1\", 1);\nb(\"a\", 2);\nb('123','123'); // ERROR\n</code></pre>\n"}], "owner": {"reputation": 2107, "user_id": 1852503, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/bh4J6.jpg?s=128&g=1", "display_name": "user1852503", "link": "https://stackoverflow.com/users/1852503/user1852503"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1847, "favorite_count": 2, "accepted_answer_id": 28998603, "answer_count": 1, "score": 6, "last_activity_date": 1426117061, "creation_date": 1426112111, "last_edit_date": 1426117061, "question_id": 28998417, "link": "https://stackoverflow.com/questions/28998417/create-a-generic-function-returning-a-function-with-the-same-signature", "title": "create a generic function returning a function with the same signature", "body": "<p>In Typescript I want to create a function that will take a function and return a function with the same input-output. the function itself needs to be generic. so that it can take any number of arguments and return any type.</p>\n\n<pre><code>function improveFunction &lt;T,U&gt;(func:'that takes T and returns U') : (T):U {\n  var newFunc = doDomethingToTheFunction(func); \n  return newFunc;\n}\n</code></pre>\n\n<p>if I was returning the function itself this would work. But since I am using the  arguments special parameter to be able to accept any number of argument I am in fact creating a new function that the typescript compiler can't understand.</p>\n\n<p>Edit:</p>\n\n<p>I made one more variant to go from</p>\n\n<pre><code>(U =&gt; T) to (U =&gt; Promise&lt;T&gt;)\n\nfunction ddd&lt;T&gt;(func: (...x: any[]) =&gt; T) : (...x: any[]) =&gt; ng.IPromise&lt;T&gt; {\n    // return a function returning a promise of T;\n}\n</code></pre>\n"}, {"tags": ["javascript", "three.js", "typescript"], "comments": [{"owner": {"reputation": 9062, "user_id": 54364, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/eed5cd2268da6f34389ab3d4bf10117c?s=128&d=identicon&r=PG", "display_name": "MilkyWayJoe", "link": "https://stackoverflow.com/users/54364/milkywayjoe"}, "edited": false, "score": 1, "creation_date": 1426104529, "post_id": 28996271, "comment_id": 46240831, "body": "if you&#39;re extending <code>MeshBasicMaterial</code>, wouldn&#39;t <code>map</code> be a property of you rew class? so case you could <code>this.map...</code>, no? not a typescript user"}], "answers": [{"tags": [], "owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "is_accepted": true, "score": 0, "last_activity_date": 1426110909, "creation_date": 1426110909, "answer_id": 28998147, "question_id": 28996271, "link": "https://stackoverflow.com/questions/28996271/cant-access-member-data-three-js-typescript/28998147#28998147", "title": "Can&#39;t access member data Three.js TypeScript", "body": "<p>When accessing an inherited property, use <code>this</code>:</p>\n\n<pre><code>class WoodStyle extends THREE.MeshBasicMaterial{\n    putTexture(image: any){\n        this.map=image;\n    }\n    constructor(){\n        LoadImage().then(putTexture);\n        super();\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 604, "user_id": 3884974, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/a1f5eca7d4c975bd4ad5886c04a942fc?s=128&d=identicon&r=PG", "display_name": "Adri&#225;n Arroyo Calle", "link": "https://stackoverflow.com/users/3884974/adri%c3%a1n-arroyo-calle"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 276, "favorite_count": 0, "accepted_answer_id": 28998147, "answer_count": 1, "score": 0, "last_activity_date": 1426110909, "creation_date": 1426104232, "question_id": 28996271, "link": "https://stackoverflow.com/questions/28996271/cant-access-member-data-three-js-typescript", "title": "Can&#39;t access member data Three.js TypeScript", "body": "<p>I'm using three.d.ts from DefinitelyTyped and TypeScript. I have the following code</p>\n\n<pre><code>class WoodStyle extends THREE.MeshBasicMaterial{\n    putTexture(image: any){\n        super.map=image;\n    }\n    constructor(){\n        LoadImage().then(putTexture);\n        super();\n    }\n}\n</code></pre>\n\n<p>In which I load an image and then I update the material with the new image. But when I'm trying to compile the code it shows an error: <code>2340 Only public and protected methods of the base class are accessible via the 'super' keyword</code>. What I'm doing wrong?</p>\n"}, {"tags": ["asp.net-mvc", "razor", "knockout.js", "typescript", "requirejs-text"], "comments": [{"owner": {"reputation": 11216, "user_id": 2692688, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/woiEs.png?s=128&g=1", "display_name": "Tushar", "link": "https://stackoverflow.com/users/2692688/tushar"}, "edited": false, "score": 0, "creation_date": 1426098699, "post_id": 28994546, "comment_id": 46237313, "body": "What about partial views in mvc ? Have you tried them?"}, {"owner": {"reputation": 3059, "user_id": 842245, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d9f018c94c6f88c9f8ee58006d9043fa?s=128&d=identicon&r=PG", "display_name": "Santhos", "link": "https://stackoverflow.com/users/842245/santhos"}, "reply_to_user": {"reputation": 11216, "user_id": 2692688, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/woiEs.png?s=128&g=1", "display_name": "Tushar", "link": "https://stackoverflow.com/users/2692688/tushar"}, "edited": false, "score": 0, "creation_date": 1426098899, "post_id": 28994546, "comment_id": 46237431, "body": "I use some partial views in the administration part of the application, but they get compiled at run time. I haven&#39;t tried it but I believe that if I requested the cshtml directly through the amd-dependecy, it would not get compiled and I would end up with invalid code being loaded. However, I am not sure if I understand it correctly. I did not write these partial html files myself, but now I have to deal with them."}, {"owner": {"reputation": 3059, "user_id": 842245, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d9f018c94c6f88c9f8ee58006d9043fa?s=128&d=identicon&r=PG", "display_name": "Santhos", "link": "https://stackoverflow.com/users/842245/santhos"}, "reply_to_user": {"reputation": 11216, "user_id": 2692688, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/woiEs.png?s=128&g=1", "display_name": "Tushar", "link": "https://stackoverflow.com/users/2692688/tushar"}, "edited": false, "score": 0, "creation_date": 1426099496, "post_id": 28994546, "comment_id": 46237828, "body": "I have also found this article: <a href=\"http://afana.me/post/aspnet-mvc-internationalization-strings-localization-client-side.aspx\" rel=\"nofollow noreferrer\">afana.me/post/&hellip;</a>  However, it seems silly to load static content dynamically"}, {"owner": {"reputation": 992, "user_id": 2551849, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/030899b90aa92c1fbaac1d923495c218?s=128&d=identicon&r=PG", "display_name": "Moe Bataineh", "link": "https://stackoverflow.com/users/2551849/moe-bataineh"}, "edited": false, "score": 0, "creation_date": 1426102550, "post_id": 28994546, "comment_id": 46239668, "body": "ASP should see what header / language it is getting from the browser and change the string variables depending on what you send it. Are you sure you&#39;re using it right?"}, {"owner": {"reputation": 3059, "user_id": 842245, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d9f018c94c6f88c9f8ee58006d9043fa?s=128&d=identicon&r=PG", "display_name": "Santhos", "link": "https://stackoverflow.com/users/842245/santhos"}, "edited": false, "score": 0, "creation_date": 1426112531, "post_id": 28994546, "comment_id": 46244996, "body": "I will try it and get back to you if it doesn&#39;t work."}, {"owner": {"reputation": 3059, "user_id": 842245, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d9f018c94c6f88c9f8ee58006d9043fa?s=128&d=identicon&r=PG", "display_name": "Santhos", "link": "https://stackoverflow.com/users/842245/santhos"}, "edited": false, "score": 0, "creation_date": 1426206154, "post_id": 28994546, "comment_id": 46288523, "body": "I had to do a bit of work but after all I managed to make it work with razor partial views."}], "answers": [{"comments": [{"owner": {"reputation": 3059, "user_id": 842245, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d9f018c94c6f88c9f8ee58006d9043fa?s=128&d=identicon&r=PG", "display_name": "Santhos", "link": "https://stackoverflow.com/users/842245/santhos"}, "edited": false, "score": 0, "creation_date": 1429449687, "post_id": 29724422, "comment_id": 47594250, "body": "This is quite sophisticated approach. What if the resource files are big? It must be quite an overhead to load them every time the language or the context changes, doesn&#39;t it? What is shown to the user when the request takes up a lot of time or when the resource is not found?"}, {"owner": {"reputation": 667, "user_id": 2470594, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/75ba4324024d632b0ce093739f17023b?s=128&d=identicon&r=PG", "display_name": "Svakinn", "link": "https://stackoverflow.com/users/2470594/svakinn"}, "reply_to_user": {"reputation": 3059, "user_id": 842245, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d9f018c94c6f88c9f8ee58006d9043fa?s=128&d=identicon&r=PG", "display_name": "Santhos", "link": "https://stackoverflow.com/users/842245/santhos"}, "edited": false, "score": 0, "creation_date": 1429452660, "post_id": 29724422, "comment_id": 47595234, "body": "No matter what approach you take the texts must be loaded to the browser, big or not.  It should not matter if texts are part of html or web-service payload.   This approach is view based so you only fetch texts per view once it is being loaded.   For each page you are usually loading some data anyway so you are probably showing some load indicator.  The updateTexts method is returning a promise so it fits in the model of loading data before the view-page is shown."}, {"owner": {"reputation": 667, "user_id": 2470594, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/75ba4324024d632b0ce093739f17023b?s=128&d=identicon&r=PG", "display_name": "Svakinn", "link": "https://stackoverflow.com/users/2470594/svakinn"}, "reply_to_user": {"reputation": 3059, "user_id": 842245, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d9f018c94c6f88c9f8ee58006d9043fa?s=128&d=identicon&r=PG", "display_name": "Santhos", "link": "https://stackoverflow.com/users/842245/santhos"}, "edited": false, "score": 0, "creation_date": 1429452758, "post_id": 29724422, "comment_id": 47595270, "body": "If resources are not found this is a programming error and should be discovered in programming or testing phase.  However if you want to show an error message you can hook that up in the updateTexts message if response is empty or if the service returns an exception.    The bottom line is that this approach does not take any longer than other methods of loading application texts.  It is complicated to set up but\u2026 makes life very simple for programmers to maintain and program new views/viewmodels into your application."}, {"owner": {"reputation": 3059, "user_id": 842245, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d9f018c94c6f88c9f8ee58006d9043fa?s=128&d=identicon&r=PG", "display_name": "Santhos", "link": "https://stackoverflow.com/users/842245/santhos"}, "edited": false, "score": 0, "creation_date": 1429544742, "post_id": 29724422, "comment_id": 47637012, "body": "If the texts are per view then it is fine. If there was one file per application, it could be used with a some modifications, perhaps including caching of the file."}], "tags": [], "owner": {"reputation": 667, "user_id": 2470594, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/75ba4324024d632b0ce093739f17023b?s=128&d=identicon&r=PG", "display_name": "Svakinn", "link": "https://stackoverflow.com/users/2470594/svakinn"}, "is_accepted": true, "score": 1, "last_activity_date": 1429453001, "last_edit_date": 1429453001, "creation_date": 1429403130, "answer_id": 29724422, "question_id": 28994546, "link": "https://stackoverflow.com/questions/28994546/partial-html-localisation/29724422#29724422", "title": "Partial html localisation", "body": "<p>What I do in my projects is to use a base viewmodel class to handle text data retrieval from the server.\nEach viewmodel has its own Id that matches the resource id used on the server.\nFetched texts are kept in the base viewmodel class in a structure like this:</p>\n\n<pre><code>public texts: KnockoutObservableArray&lt;ITextItem&gt; = ko.observableArray&lt;ITextItem&gt;();\n</code></pre>\n\n<p>.. where the <em>ITextItem</em> is a structure like this:</p>\n\n<pre><code>interface ITextItem {\n    id: string;\n    value: KnockoutObservable&lt;string&gt;;\n}\n</code></pre>\n\n<p>.. fetched with a function like this:</p>\n\n<pre><code>public updateTexts(cultId: string): Q.Promise&lt;any&gt; {\n    if (this.textsName === '')\n        this.textsName = this.modelId;\n    if (this.lastCultureIdFetched != cultId) {\n        this.lastCultureIdFetched = cultId;\n        return mm_cspData.cspCtx.getTexts(this.textsName, this.texts);\n    }\n    else\n        return Q.resolve(true);\n}\n</code></pre>\n\n<p>.. specific text fetched from within the viewmodel like this:</p>\n\n<pre><code>public tx(id: string): string {\n    var match: ITextItem = ko.utils.arrayFirst(this.texts(), item=&gt; item.id === id);\n    if (!match)\n        return ''; \n    else\n        return match.value();\n}\n</code></pre>\n\n<p>So each time a viewmodel is activated or application language is change the <em>updateText</em> method is triggered.</p>\n\n<p>To display the text in my html view I use knockout binding handler to fetch the correct text from the viewmodel.  As a rule each viewmodel is exported to a variable named <strong>vm</strong> so I get away with doing it like this:</p>\n\n<pre><code>ko.getVmTx = (label: any, bindingContext: any) : string =&gt; {\n    if (label === null)\n        return '';\n    var vm: any;\n    var labelId;\n    if (typeof label === 'object' &amp;&amp; typeof label.vm === 'object' &amp;&amp; typeof label.vm.tx !== 'function') {\n        vm = label.vm;\n        labelId = label.tx;\n    } else {\n        vm = bindingContext.$root.vm;\n        labelId = ko.unwrap(label);\n    }\n    if (vm === null || typeof vm === 'undefined' || typeof vm.tx !== 'function') {\n        console.log('tx binding: unable to find vm for ' + label);\n        return '';       \n    }\n    else\n    return vm.tx(labelId);\n}\nko.bindingHandlers.tx = {\n    update: (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) =&gt; {\n        $(element).text(ko.getVmTx(valueAccessor(),bindingContext));\n    }\n};\nko.bindingHandlers.txVal = {\n    update: (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) =&gt; {\n        $(element).val(ko.getVmTx(valueAccessor(), bindingContext));\n    }\n};\n</code></pre>\n\n<p>Finally in my views I use the binding handlers like this:</p>\n\n<pre><code>&lt;span class=\"app-badge-label-bg\" data-bind=\"tx: 'FinInvAmount'\"&gt;&lt;/span&gt;\n</code></pre>\n\n<p>This is a massive setup, but once in place, the text handling is taken care of by the base viewmodel class and the only thing you need to do for each viewmodel is to set-up the resource files on the server side and data-bind your labels and values with simple knockout binding.</p>\n"}], "owner": {"reputation": 3059, "user_id": 842245, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d9f018c94c6f88c9f8ee58006d9043fa?s=128&d=identicon&r=PG", "display_name": "Santhos", "link": "https://stackoverflow.com/users/842245/santhos"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 450, "favorite_count": 0, "accepted_answer_id": 29724422, "answer_count": 1, "score": 1, "last_activity_date": 1429453001, "creation_date": 1426098372, "last_edit_date": 1426099219, "question_id": 28994546, "link": "https://stackoverflow.com/questions/28994546/partial-html-localisation", "title": "Partial html localisation", "body": "<h2>The problem</h2>\n\n<p>I need to localise my web application. I use two languages - english and norwegian (that should not matter).</p>\n\n<p>I use resource files to localise standard views. They sit in a separate project called Myproject.Localisation:</p>\n\n<ul>\n<li>Localised.resx</li>\n<li>Localised.no.resx</li>\n</ul>\n\n<p>It looks like this in razor views:</p>\n\n<pre><code>&lt;li&gt;@Localised.WhatEverINeedToLocalise&lt;/li&gt;\n</code></pre>\n\n<p>Then I have two standard partial html files with some html and some knockout.js that are loaded as amd dependency like this and used in my typescript class later on:</p>\n\n<pre><code>///&lt;amd-dependency path=\"text!./productTemplate.html\" /&gt;\n///&lt;amd-dependency path=\"text!./anotherTemplate .html\" /&gt;\n\nvar contentTemplate = require(\"text!./productTemplate.html\");\nvar anotherTemplate = require(\"text!./anotherTemplate .html\");\n</code></pre>\n\n<hr>\n\n<h2>The question</h2>\n\n<p>Obviously, I have to do the translation in them as well. Is there a way I can generate these partial html files using razor and using the resource files I have?</p>\n\n<p>If not, are there any other options, possibly simpler than my solution (read below)?</p>\n\n<hr>\n\n<h2>My solution</h2>\n\n<p>The only way that I came up was to install i18next and its knockout binding, write a T4 template that would generate translation jsons from the resx files and then translate the partial htmls using knockout. <strong>However, it seems quite overcomplicated</strong>.</p>\n"}, {"tags": ["gruntjs", "typescript", "grunt-ts"], "comments": [{"owner": {"reputation": 1032, "user_id": 4216004, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/efe074828279087bf739ba50da9e6237?s=128&d=identicon&r=PG&f=1", "display_name": "Hugues Stefanski", "link": "https://stackoverflow.com/users/4216004/hugues-stefanski"}, "edited": false, "score": 0, "creation_date": 1426187286, "post_id": 28993671, "comment_id": 46280524, "body": "It seems the sourceMap option set to false would prevent generating the map files. As for individual js files, I never noticed it (did not pay attention to be correct). A clean task could be a work-around?"}], "answers": [{"tags": [], "owner": {"reputation": 666, "user_id": 2260862, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/bvkXJ.jpg?s=128&g=1", "display_name": "z0r0", "link": "https://stackoverflow.com/users/2260862/z0r0"}, "is_accepted": false, "score": 0, "last_activity_date": 1434020794, "creation_date": 1434020794, "answer_id": 30779063, "question_id": 28993671, "link": "https://stackoverflow.com/questions/28993671/prevent-grunt-ts-from-generating-multiple-map-and-js-files/30779063#30779063", "title": "Prevent grunt-ts from generating multiple .map and .js files", "body": "<p>It seams that your IDE is compiling your TS files.</p>\n\n<p>It happens with me once with webstorm,</p>\n\n<p>Witch IDE are you using?</p>\n\n<p>Try to disable typescript compiler.</p>\n\n<p>In case you are using webstorm:</p>\n\n<pre><code>Ctrl+Alt+S\n\nSearch for typescript under Languages &amp; Frameworks\n\nuncheck \"Enable TypeScript Compiler\" checkbox\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 4905, "user_id": 1038726, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f02ecb842c637880ae527ea6e32b4222?s=128&d=identicon&r=PG", "display_name": "None", "link": "https://stackoverflow.com/users/1038726/none"}, "is_accepted": false, "score": 0, "last_activity_date": 1487208563, "creation_date": 1487208563, "answer_id": 42263227, "question_id": 28993671, "link": "https://stackoverflow.com/questions/28993671/prevent-grunt-ts-from-generating-multiple-map-and-js-files/42263227#42263227", "title": "Prevent grunt-ts from generating multiple .map and .js files", "body": "<p>In <em>tsconfig.json</em> turn off the <code>compileOnSave</code> option to signal to IDEs not to generate all files for a given configuration upon saving:</p>\n\n<pre><code>{\n    \"compileOnSave\": false\n}\n</code></pre>\n\n<p>Not all IDEs currently obey the option. See <a href=\"https://www.typescriptlang.org/docs/handbook/tsconfig-json.html\" rel=\"nofollow noreferrer\">https://www.typescriptlang.org/docs/handbook/tsconfig-json.html</a> for more detail.</p>\n"}], "owner": {"reputation": 21, "user_id": 4659637, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4752283abb54dfbb73c605e34c09ebb3?s=128&d=identicon&r=PG&f=1", "display_name": "Matthew Crouse", "link": "https://stackoverflow.com/users/4659637/matthew-crouse"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 296, "favorite_count": 0, "answer_count": 2, "score": 2, "last_activity_date": 1487208563, "creation_date": 1426095726, "last_edit_date": 1426096225, "question_id": 28993671, "link": "https://stackoverflow.com/questions/28993671/prevent-grunt-ts-from-generating-multiple-map-and-js-files", "title": "Prevent grunt-ts from generating multiple .map and .js files", "body": "<p>We are using Grunt to compile and concatenate our typescript files into a single javascript file located in our distribution folder. That functionality is working properly, but Grunt also creates .map and .js files for every ts file it finds; auto-generating them in the same location as the TS files.</p>\n\n<p>Is there a way to prevent grunt from making these extra files and just generate the output.js and output.map?</p>\n\n<p>This is a snip of our grunt.js file.</p>\n\n<pre><code>    ts: {\n      task : {\n        src: [\"**/*.ts\", \"!node_modules/**/*.ts\"],\n        out: 'app/dist/app.js'\n      },\n        options: {\n            fast: 'never'\n        }\n    },\n    watch: {\n        typescript: {\n            files: '**/**/*.ts',\n            tasks: ['ts']\n        },\n        sass: {\n            files: '**/**/*.scss',\n            tasks: ['sass']\n        }\n    }\n</code></pre>\n"}, {"tags": ["interface", "typescript"], "answers": [{"comments": [{"owner": {"reputation": 6437, "user_id": 128991, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/a5d6ca1107e75169a207f106b6f8d95c?s=128&d=identicon&r=PG", "display_name": "Alexander Trauzzi", "link": "https://stackoverflow.com/users/128991/alexander-trauzzi"}, "edited": false, "score": 0, "creation_date": 1426096002, "post_id": 28993662, "comment_id": 46235574, "body": "Have any practices emerged for distributing interfaces via NPM?"}, {"owner": {"reputation": 5586, "user_id": 777928, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/1cf46fa2f23b44d172a14a72e6bb2dc3?s=128&d=identicon&r=PG", "display_name": "Dynalon", "link": "https://stackoverflow.com/users/777928/dynalon"}, "reply_to_user": {"reputation": 6437, "user_id": 128991, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/a5d6ca1107e75169a207f106b6f8d95c?s=128&d=identicon&r=PG", "display_name": "Alexander Trauzzi", "link": "https://stackoverflow.com/users/128991/alexander-trauzzi"}, "edited": false, "score": 1, "creation_date": 1426096559, "post_id": 28993662, "comment_id": 46235966, "body": "Yes, but not via npm but the tsd tool that uses the <a href=\"https://github.com/borisyankov/DefinitelyTyped\" rel=\"nofollow noreferrer\">DefinitelyTyped</a> repo. But you should only add your interfaces if the library implementing them is available to others, not for your internal use. For internal use, you might setup a custom repo and can still use the tsd tool if you point it to that repo."}, {"owner": {"reputation": 5586, "user_id": 777928, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/1cf46fa2f23b44d172a14a72e6bb2dc3?s=128&d=identicon&r=PG", "display_name": "Dynalon", "link": "https://stackoverflow.com/users/777928/dynalon"}, "reply_to_user": {"reputation": 6437, "user_id": 128991, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/a5d6ca1107e75169a207f106b6f8d95c?s=128&d=identicon&r=PG", "display_name": "Alexander Trauzzi", "link": "https://stackoverflow.com/users/128991/alexander-trauzzi"}, "edited": false, "score": 0, "creation_date": 1426096618, "post_id": 28993662, "comment_id": 46236006, "body": "Also note that the tsc compiler can create the .d.ts file of your library (which will also contain the type annotation of exported classes) for you."}, {"owner": {"reputation": 10067, "user_id": 2415802, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/m5mFC.jpg?s=128&g=1", "display_name": "mwilson", "link": "https://stackoverflow.com/users/2415802/mwilson"}, "edited": false, "score": 1, "creation_date": 1531272106, "post_id": 28993662, "comment_id": 89529774, "body": "Even with this solution it seems as though you would be maintaining two seperate files. The ideal solution is to just manage one that&#39;s in a central location and have your projects import it. The only reasonable solution I&#39;ve found thus far is build out your interfaces in their own projects and keep them in NPM or some other repo where you can reference the interface project/modules via npm install. This way, the only drawback is having to go and update all your projects anytime you have an update."}], "tags": [], "owner": {"reputation": 5586, "user_id": 777928, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/1cf46fa2f23b44d172a14a72e6bb2dc3?s=128&d=identicon&r=PG", "display_name": "Dynalon", "link": "https://stackoverflow.com/users/777928/dynalon"}, "is_accepted": false, "score": 5, "last_activity_date": 1426095701, "creation_date": 1426095701, "answer_id": 28993662, "question_id": 28993391, "link": "https://stackoverflow.com/questions/28993391/share-an-interface-between-two-apps/28993662#28993662", "title": "Share an interface between two apps?", "body": "<p>Just define the interface in a separate file, or collect all shared interfaces in a file <code>interfaces.ts</code> (or a <code>interfaces.d.ts</code>). Both projects can reference this file, you can have copies of that file in both projects.</p>\n\n<p>TypeScript is not like i.e. C# where you have to reference an underlying assembly (although this will be fixed in C# with <a href=\"http://davidfowl.com/assembly-neutral-interfaces/\" rel=\"noreferrer\">assembly neutral interfaces</a>).</p>\n\n<p>But beware: TypeScript has no dedicated runtime that assures your interfaces match. As everything is still JavaScript, at runtime you have to make sure the interfaces match. If one projects uses i.e. another version of the interfaces with properties that didn't exist in previous versions, you will still run into trouble.</p>\n"}, {"tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": false, "score": 3, "last_activity_date": 1426113063, "creation_date": 1426113063, "answer_id": 28998630, "question_id": 28993391, "link": "https://stackoverflow.com/questions/28993391/share-an-interface-between-two-apps/28998630#28998630", "title": "Share an interface between two apps?", "body": "<blockquote>\n  <p>Are there any established or emerging conventions in the TypeScript ecosystem to distribute libraries of interfaces via NPM</p>\n</blockquote>\n\n<p>Use the <code>typescript</code> key in your package.json to point to the definition file :</p>\n\n<p><a href=\"https://github.com/DefinitelyTyped/tsd#link-to-bundled-definitions\" rel=\"nofollow\">https://github.com/DefinitelyTyped/tsd#link-to-bundled-definitions</a></p>\n"}, {"tags": [], "owner": {"reputation": 6437, "user_id": 128991, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/a5d6ca1107e75169a207f106b6f8d95c?s=128&d=identicon&r=PG", "display_name": "Alexander Trauzzi", "link": "https://stackoverflow.com/users/128991/alexander-trauzzi"}, "is_accepted": true, "score": 1, "last_activity_date": 1602791054, "creation_date": 1602791054, "answer_id": 64378674, "question_id": 28993391, "link": "https://stackoverflow.com/questions/28993391/share-an-interface-between-two-apps/64378674#64378674", "title": "Share an interface between two apps?", "body": "<p>Several years and many projects later, the simplest answer to this question today is to simply publish a <code>.d.ts</code> to an npm package and consume it!  This project can be built from typescript sources and even include built code.</p>\n<p>Of course, a lot of this answer now is long after TypeScript and the JS community have matured and come together to establish these conventions.</p>\n"}], "owner": {"reputation": 6437, "user_id": 128991, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/a5d6ca1107e75169a207f106b6f8d95c?s=128&d=identicon&r=PG", "display_name": "Alexander Trauzzi", "link": "https://stackoverflow.com/users/128991/alexander-trauzzi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2254, "favorite_count": 1, "accepted_answer_id": 64378674, "answer_count": 3, "score": 8, "last_activity_date": 1602791054, "creation_date": 1426094947, "question_id": 28993391, "link": "https://stackoverflow.com/questions/28993391/share-an-interface-between-two-apps", "title": "Share an interface between two apps?", "body": "<p>What mechanism for sharing can I put in place to allow two separate typescript projects to communicate along common interfaces?</p>\n\n<p>The basic idea is that I have one main project that will implement the interfaces, and there will be another project that consumes them.  However I don't want either of the projects to be dependent on the other.</p>\n\n<p>Specifically: How can I can create and distribute a library of contracts (and perhaps any functionality that complements them if applicable).\nAre there any established or emerging conventions in the TypeScript ecosystem to distribute libraries of interfaces via NPM?</p>\n"}, {"tags": ["javascript", "typescript", "htmlcollection"], "comments": [{"owner": {"reputation": 99450, "user_id": 1686485, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/g3GW9.png?s=128&g=1", "display_name": "tymeJV", "link": "https://stackoverflow.com/users/1686485/tymejv"}, "edited": false, "score": 0, "creation_date": 1426087610, "post_id": 28990587, "comment_id": 46229602, "body": "<i>&quot; include the element itself&quot;</i> - not sure I get what you&#39;re asking..."}, {"owner": {"reputation": 9954, "user_id": 361762, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/76eSl.jpg?s=128&g=1", "display_name": "Dave", "link": "https://stackoverflow.com/users/361762/dave"}, "edited": false, "score": 0, "creation_date": 1426087614, "post_id": 28990587, "comment_id": 46229608, "body": "You&#39;re going to have to include more information, and some HTML code, if you want us to understand what you are trying to do."}, {"owner": {"reputation": 229718, "user_id": 82548, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/db5a61382c2ba7309071c323edb4013b?s=128&d=identicon&r=PG", "display_name": "David says reinstate Monica", "link": "https://stackoverflow.com/users/82548/david-says-reinstate-monica"}, "edited": false, "score": 0, "creation_date": 1426087631, "post_id": 28990587, "comment_id": 46229619, "body": "The node you get from <code>getElementById()</code> will retain its <code>childNodes</code> / <code>children </code>; so... Just retrieve that one node and access its children directly when you need to?"}, {"owner": {"reputation": 184244, "user_id": 14104, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/otetW.jpg?s=128&g=1", "display_name": "epascarello", "link": "https://stackoverflow.com/users/14104/epascarello"}, "edited": false, "score": 1, "creation_date": 1426087733, "post_id": 28990587, "comment_id": 46229716, "body": "related: <a href=\"http://stackoverflow.com/questions/8856281/how-to-add-an-element-into-the-htmlcollection-in-javascript\" title=\"how to add an element into the htmlcollection in javascript\">stackoverflow.com/questions/8856281/&hellip;</a>"}], "answers": [{"comments": [{"owner": {"reputation": 851, "user_id": 3657925, "user_type": "registered", "accept_rate": 50, "profile_image": "https://graph.facebook.com/100004154013255/picture?type=large", "display_name": "DonO", "link": "https://stackoverflow.com/users/3657925/dono"}, "edited": false, "score": 0, "creation_date": 1426088580, "post_id": 28990868, "comment_id": 46230318, "body": "Thank you! This is what I am looking for except I want it to be a little more universal. So it can work with any tag dynamically. In this case you know it is a UL tag. Lets pretend we don&#39;t know what tag the element is. in other words in a function where the element is passed in how can I get the element itself and its children into a html collection."}, {"owner": {"reputation": 32973, "user_id": 3903374, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/f154c343ddbc43f16a09e2098ddf4965?s=128&d=identicon&r=PG&f=1", "display_name": "Rick Hitchcock", "link": "https://stackoverflow.com/users/3903374/rick-hitchcock"}, "reply_to_user": {"reputation": 851, "user_id": 3657925, "user_type": "registered", "accept_rate": 50, "profile_image": "https://graph.facebook.com/100004154013255/picture?type=large", "display_name": "DonO", "link": "https://stackoverflow.com/users/3657925/dono"}, "edited": false, "score": 0, "creation_date": 1426088709, "post_id": 28990868, "comment_id": 46230424, "body": "I&#39;ve updated my answer.  To use <code>querySelectorAll</code> with an id, prepend a pound sign to the id."}], "tags": [], "owner": {"reputation": 32973, "user_id": 3903374, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/f154c343ddbc43f16a09e2098ddf4965?s=128&d=identicon&r=PG&f=1", "display_name": "Rick Hitchcock", "link": "https://stackoverflow.com/users/3903374/rick-hitchcock"}, "is_accepted": true, "score": 2, "last_activity_date": 1426088665, "last_edit_date": 1426088665, "creation_date": 1426087980, "answer_id": 28990868, "question_id": 28990587, "link": "https://stackoverflow.com/questions/28990587/typescript-or-js-how-to-select-an-element-and-all-its-children-into-a-htmlcolle/28990868#28990868", "title": "TypeScript or JS- How to select an element and all its children into a HTMLCollection?", "body": "<p>You can use a comma-separated list with <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll\" rel=\"nofollow\"><strong><code>querySelectorAll</code></strong></a>, where the first item is the element itself.</p>\n\n<p>This Snippet uses your HTML to retrieve section <code>Test</code> and its children: <code>header</code>, <code>p</code>, and <code>div</code>:</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>var elements= document.querySelectorAll('#Test, #Test *');\r\nconsole.log(elements.length); //4</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;section id=\"Test\"&gt;\r\n   &lt;header&gt;Welcome&lt;/header&gt;\r\n   &lt;p&gt;This is a test&lt;/p&gt;\r\n   &lt;div&gt;Nothing here&lt;/div&gt;\r\n&lt;/section&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"}], "owner": {"reputation": 851, "user_id": 3657925, "user_type": "registered", "accept_rate": 50, "profile_image": "https://graph.facebook.com/100004154013255/picture?type=large", "display_name": "DonO", "link": "https://stackoverflow.com/users/3657925/dono"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3725, "favorite_count": 0, "accepted_answer_id": 28990868, "answer_count": 1, "score": 0, "last_activity_date": 1426088665, "creation_date": 1426087333, "last_edit_date": 1426088324, "question_id": 28990587, "link": "https://stackoverflow.com/questions/28990587/typescript-or-js-how-to-select-an-element-and-all-its-children-into-a-htmlcolle", "title": "TypeScript or JS- How to select an element and all its children into a HTMLCollection?", "body": "<p><strong>Updated</strong>\nThe code I have come up with is: </p>\n\n<pre><code>&lt;section id=\"Test\"&gt;\n   &lt;header&gt;Welcome&lt;/header&gt;\n   &lt;p&gt;This is a test&lt;/p&gt;\n   &lt;div&gt;Nothing here&lt;/div&gt;\n&lt;/section&gt;\n\nvar element =  document.getElementById(\"Test\");\nvar elements = &lt;HTMLCollection&gt;element.getElementsByTagName(\"*\");\n</code></pre>\n\n<p>I want the collection to include <code>&lt;section&gt;</code>, <code>&lt;header&gt;</code>, <code>&lt;p&gt;</code>, and <code>&lt;div&gt;</code> the above code only has <code>&lt;header&gt;</code>, <code>&lt;p&gt;</code>, and <code>&lt;div&gt;</code>. Is there anyway I can add the <code>&lt;section&gt;</code> itself to the collection?</p>\n\n<p>The problem is that I want to include the element itself into the elements collection. I know I can use outerHTML and put it in a temp container and then get all the element inside from that but i'm looking for a cleaner way.</p>\n"}, {"tags": ["javascript", "typescript"], "answers": [{"tags": [], "owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "is_accepted": false, "score": 3, "last_activity_date": 1426084992, "last_edit_date": 1495541424, "creation_date": 1426084992, "answer_id": 28989650, "question_id": 28989399, "link": "https://stackoverflow.com/questions/28989399/do-i-have-to-reference-typescript-definition-in-every-file/28989650#28989650", "title": "Do I have to reference TypeScript definition in every file?", "body": "<p>Some IDEs auto-detect all the files in a project (Visual Studio).</p>\n\n<p>For everything else, you can create a <code>_references.ts</code> file and put all of your reference comments in there - then you only ever need to add:</p>\n\n<pre><code>/// &lt;reference path=\"_references.ts\" /&gt;\n</code></pre>\n\n<p>...to each file (instead of possibly many).</p>\n\n<p>Your IDE may also support <a href=\"https://stackoverflow.com/questions/28959847/global-visual-studio-2013-typescript-flags\">tsconfig files</a>.</p>\n"}, {"comments": [{"owner": {"reputation": 2317, "user_id": 1029825, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/242c1419868a8948373673cf179ec22e?s=128&d=identicon&r=PG", "display_name": "Paolo", "link": "https://stackoverflow.com/users/1029825/paolo"}, "edited": false, "score": 4, "creation_date": 1432882310, "post_id": 28991341, "comment_id": 49119753, "body": "What if: inside the same module you have class A in file A.ts and class B in file B.ts, and A extends B, you still need to tell to tsc that B.ts should be transpiled beofre A.ts, right?"}, {"owner": {"reputation": 5586, "user_id": 777928, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/1cf46fa2f23b44d172a14a72e6bb2dc3?s=128&d=identicon&r=PG", "display_name": "Dynalon", "link": "https://stackoverflow.com/users/777928/dynalon"}, "reply_to_user": {"reputation": 2317, "user_id": 1029825, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/242c1419868a8948373673cf179ec22e?s=128&d=identicon&r=PG", "display_name": "Paolo", "link": "https://stackoverflow.com/users/1029825/paolo"}, "edited": false, "score": 0, "creation_date": 1440570387, "post_id": 28991341, "comment_id": 52321861, "body": "Thats right, the order of inclusion matters. That is still one nasty thing about typescript&#39;s internal modules (now called <code>namespaces</code>)"}, {"owner": {"reputation": 23145, "user_id": 2788872, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a2616878b8bfb95d8fbb8a63ad18d729?s=128&d=identicon&r=PG&f=1", "display_name": "John Weisz", "link": "https://stackoverflow.com/users/2788872/john-weisz"}, "edited": false, "score": 1, "creation_date": 1450394841, "post_id": 28991341, "comment_id": 56433946, "body": "You still need the explicit reference path in a case like what Paolo described, unfortunately."}, {"owner": {"reputation": 5586, "user_id": 777928, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/1cf46fa2f23b44d172a14a72e6bb2dc3?s=128&d=identicon&r=PG", "display_name": "Dynalon", "link": "https://stackoverflow.com/users/777928/dynalon"}, "reply_to_user": {"reputation": 23145, "user_id": 2788872, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a2616878b8bfb95d8fbb8a63ad18d729?s=128&d=identicon&r=PG&f=1", "display_name": "John Weisz", "link": "https://stackoverflow.com/users/2788872/john-weisz"}, "edited": false, "score": 0, "creation_date": 1450425655, "post_id": 28991341, "comment_id": 56443424, "body": "@JohnWhite No you don&#39;t, you can omit the <code>files</code> property in the <code>tsconfig.json</code> file; the <code>tsc</code> compiler will then include all .ts files in the directory. I&#39;ve updated the answer to include this information."}, {"owner": {"reputation": 23145, "user_id": 2788872, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a2616878b8bfb95d8fbb8a63ad18d729?s=128&d=identicon&r=PG&f=1", "display_name": "John Weisz", "link": "https://stackoverflow.com/users/2788872/john-weisz"}, "edited": false, "score": 0, "creation_date": 1450436887, "post_id": 28991341, "comment_id": 56449902, "body": "@Dyna Yes, of course, what I actually meant is that you need to manually specify some kind of ordering either way."}, {"owner": {"reputation": 12083, "user_id": 681538, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/LNlya.jpg?s=128&g=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/681538/alex"}, "edited": false, "score": 0, "creation_date": 1455544574, "post_id": 28991341, "comment_id": 58523075, "body": "Using gulp, can is it still possible for the compiler to resolve the internal dependencies and order the files in the correct order? I&#39;m trying to get this to work, but no success so far."}, {"owner": {"reputation": 12083, "user_id": 681538, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/LNlya.jpg?s=128&g=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/681538/alex"}, "reply_to_user": {"reputation": 23145, "user_id": 2788872, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a2616878b8bfb95d8fbb8a63ad18d729?s=128&d=identicon&r=PG&f=1", "display_name": "John Weisz", "link": "https://stackoverflow.com/users/2788872/john-weisz"}, "edited": false, "score": 1, "creation_date": 1455555319, "post_id": 28991341, "comment_id": 58530578, "body": "Even with using pure visual studio, it refuses to order the files correctly in the concatenated output file. Seems like @JohnWhite is still right?"}, {"owner": {"reputation": 5586, "user_id": 777928, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/1cf46fa2f23b44d172a14a72e6bb2dc3?s=128&d=identicon&r=PG", "display_name": "Dynalon", "link": "https://stackoverflow.com/users/777928/dynalon"}, "reply_to_user": {"reputation": 12083, "user_id": 681538, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/LNlya.jpg?s=128&g=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/681538/alex"}, "edited": false, "score": 0, "creation_date": 1455559255, "post_id": 28991341, "comment_id": 58532926, "body": "@Alex pure visual studio (without gulp) also just invokes the  <code>tsc</code> command under the hood - so it suffers the same shortcommings (no ordering of source files)."}, {"owner": {"reputation": 12083, "user_id": 681538, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/LNlya.jpg?s=128&g=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/681538/alex"}, "edited": false, "score": 1, "creation_date": 1455611430, "post_id": 28991341, "comment_id": 58553547, "body": "I see now that I misunderstood your answer. I interpreted it like the compiler can get the order right by itself, while what&#39;s implicit in your answer is that you have to sort the input to the compiler."}], "tags": [], "owner": {"reputation": 5586, "user_id": 777928, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/1cf46fa2f23b44d172a14a72e6bb2dc3?s=128&d=identicon&r=PG", "display_name": "Dynalon", "link": "https://stackoverflow.com/users/777928/dynalon"}, "is_accepted": true, "score": 41, "last_activity_date": 1509444327, "last_edit_date": 1509444327, "creation_date": 1426089171, "answer_id": 28991341, "question_id": 28989399, "link": "https://stackoverflow.com/questions/28989399/do-i-have-to-reference-typescript-definition-in-every-file/28991341#28991341", "title": "Do I have to reference TypeScript definition in every file?", "body": "<p>When using TypeScript's internal module system, you can avoid having any <code>&lt;reference&gt;</code> tags at all in the code. I personally do this because I don't want to encode paths (realtive or absolute) within the code as I constantly move stuff around.</p>\n\n<p>One way to do this is by making sure all required declaration files and TypeScript source files are passed to the compiler as arguments during compile time.</p>\n\n<p>Using <a href=\"http://gulpjs.com\" rel=\"noreferrer\">gulp</a> together with <a href=\"https://www.npmjs.com/package/gulp-typescript\" rel=\"noreferrer\">gulp-typescript</a> simplifies this task. You can set <code>noExternalResolve</code> in <code>gulp-typescript</code> to true, and create gulp tasks that take all your .d.ts files along with your sources and pipe it down to the compiler. When you pull in <a href=\"http://definitelytyped.org/tsd/\" rel=\"noreferrer\">tsd</a> into your stack, you only need to pass the <code>tsd.d.ts</code>file that contains references to all other definition files installed via <code>tsd</code>.</p>\n\n<p><strong>UPDATE for TypeScript >= v1.5</strong>: you can use a <a href=\"https://github.com/Microsoft/TypeScript/wiki/tsconfig.json\" rel=\"noreferrer\">tsconfig.json</a> file, and the compiler will get the ordering of the classes right. This removes the need to use <code>gulp-typescript</code> alltogether. You can either chose to have all files explicitly listed in the <code>tsconfig.json</code> file, or completely leave out the <code>files</code> property to include all <code>*.ts/*.tsx</code> files within the directory the <code>tsconfig.json</code> resides (including all subfolders).</p>\n\n<p>A sample <code>tsconfig.json</code>may look like:</p>\n\n<pre><code>{\n    \"compilerOptions\": {\n        \"target\": \"ES5\",\n        \"module\": \"commonjs\",\n        \"lib\": [ \"es5\", \"es2015.promise\", \"dom\" ]\n    },\n    \"include\": [\n        \"src/**/*.ts\"\n    ]\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 3413, "user_id": 3819736, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/a50773e7b55371cf3175de7eb322665c?s=128&d=identicon&r=PG", "display_name": "sbedulin", "link": "https://stackoverflow.com/users/3819736/sbedulin"}, "edited": false, "score": 1, "creation_date": 1453109295, "post_id": 34761061, "comment_id": 57442217, "body": "Better option is to not specify &quot;files&quot; at all. <a href=\"https://github.com/Microsoft/TypeScript/wiki/tsconfig.json#details\" rel=\"nofollow noreferrer\">github.com/Microsoft/TypeScript/wiki/tsconfig.json#details</a> <code>If no &quot;files&quot; property is present in a tsconfig.json, the compiler defaults to including all TypeScript (*.ts or *.tsx) files in the containing directory and subdirectories. When a &quot;files&quot; property is present, only the specified files are included.</code>"}, {"owner": {"reputation": 5586, "user_id": 777928, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/1cf46fa2f23b44d172a14a72e6bb2dc3?s=128&d=identicon&r=PG", "display_name": "Dynalon", "link": "https://stackoverflow.com/users/777928/dynalon"}, "edited": false, "score": 2, "creation_date": 1455559165, "post_id": 34761061, "comment_id": 58532870, "body": "This is not necessarily &quot;better&quot;. In a real-world project, your exclude list would grow enormously (i.e. I regularly have to exclude <code>node_modules</code>, <code>dist</code>, <code>bower_components</code>, <code>typings</code> etc.). I am desperately waiting for <code>filesGlob</code> to land in core TS."}], "tags": [], "owner": {"reputation": 9099, "user_id": 190625, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/d068edea1bead593aef5840dff0d500a?s=128&d=identicon&r=PG", "display_name": "Richard", "link": "https://stackoverflow.com/users/190625/richard"}, "is_accepted": false, "score": 3, "last_activity_date": 1452671306, "last_edit_date": 1495542751, "creation_date": 1452671306, "answer_id": 34761061, "question_id": 28989399, "link": "https://stackoverflow.com/questions/28989399/do-i-have-to-reference-typescript-definition-in-every-file/34761061#34761061", "title": "Do I have to reference TypeScript definition in every file?", "body": "<p>This question is a duplicate of <a href=\"https://stackoverflow.com/questions/29974875/reference-typescript-definitions-in-one-file-instead-of-all-js-files\">Reference typescript definitions in one file, instead of all JS files?</a></p>\n\n<p>The answer is, for now, add each file you want to reference to your tsconfig.json file's \"files\" section.  It's still many lines, but all in one file.</p>\n\n<p>In future when <a href=\"https://github.com/Microsoft/TypeScript/wiki/Roadmap#20\" rel=\"nofollow noreferrer\">Typescript 2</a> is released you can then use the \"filesGlob\" section and solve the problem in two lines.</p>\n"}, {"tags": [], "owner": {"reputation": 1, "user_id": 4009614, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2b12fae40e1fac6cafea1f5ab57ea738?s=128&d=identicon&r=PG&f=1", "display_name": "Cika Raki", "link": "https://stackoverflow.com/users/4009614/cika-raki"}, "is_accepted": false, "score": 0, "last_activity_date": 1479315458, "last_edit_date": 1479315458, "creation_date": 1479309318, "answer_id": 40635693, "question_id": 28989399, "link": "https://stackoverflow.com/questions/28989399/do-i-have-to-reference-typescript-definition-in-every-file/40635693#40635693", "title": "Do I have to reference TypeScript definition in every file?", "body": "<p>I've started recently with TypeScript and as I've understood the internal modules resolution is that yes, you can compile all <code>.ts</code> files from the <code>tsconfig.json</code>'s directory and all its subdirectories, provided that you don't have set <code>.ts</code> files in it without <code>/// &lt;references path=\"\" /&gt;</code>.</p>\n\n<p>But the order in which the <code>.ts</code> files are compiled into resulting <code>.js</code> files is not determined by the dependencies the files (or classes they contain) have. So it is possible to have a situation where the child class is compiled before the parent one (child inherits from parent relation). Then the code won't run, even though it is compiled successfully. It will complain that it couldn't understand the parent class within the child class. Therefore you need to add a <code>/// &lt;references path=\"\" /&gt;</code> as a hint to the compiler to resolve the dependencies between <code>.ts</code> files.</p>\n\n<p>This is want the Typescript documentation says:</p>\n\n<blockquote>\n  <p>The ///  directive is the most common of this group. It serves as a declaration of dependency between files.</p>\n  \n  <p>Triple-slash references instruct the compiler to include additional files in the compilation process.</p>\n  \n  <p>They also serve as a method to order the output when using --out or --outFile. Files are emitted to the output file location in the same order as the input after preprocessing pass.</p>\n</blockquote>\n"}, {"tags": [], "owner": {"reputation": 15408, "user_id": 187650, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/422053bcc0c90ab9ad4f61a62d975f60?s=128&d=identicon&r=PG", "display_name": "juFo", "link": "https://stackoverflow.com/users/187650/jufo"}, "is_accepted": false, "score": 14, "last_activity_date": 1480408565, "creation_date": 1480408565, "answer_id": 40861142, "question_id": 28989399, "link": "https://stackoverflow.com/questions/28989399/do-i-have-to-reference-typescript-definition-in-every-file/40861142#40861142", "title": "Do I have to reference TypeScript definition in every file?", "body": "<p>What I've learned so far is that <strong>/// &lt; reference >-ing a module</strong> with reference comments is not a good method.</p>\n\n<p>For example: in case you have a file <em>Foo</em> and a file <em>Bar</em>. Both files use jquery, but only file <em>Foo</em> has a reference comment to jquery. If file <em>Foo</em> is deleted for some reason, your file <em>Bar</em> is broken, because the reference is missing.</p>\n\n<p>If you are using TypeScript >= 2.0 It is better to define the TypeScript definition files (.d.ts) in your tsconfig.json under the <strong>\"files\"</strong> section.</p>\n\n<p>This could look like this:</p>\n\n<pre><code>{\n  \"compileOnSave\": true,\n  \"compilerOptions\": {\n    \"noImplicitAny\": true,\n    \"noEmitOnError\": true,\n    \"removeComments\": false,\n    \"sourceMap\": true,\n    \"target\": \"es5\", \n    \"outDir\": \"./Scripts/\"\n  },\n  \"files\": [\n    \"./src/foo.ts\",\n    \"./src/bar.ts\",\n    \"./Scripts/typings/jquery/jquery.d.ts\",\n    \"./Scripts/typings/jqueryui/jqueryui.d.ts\",\n    \"./Scripts/MicrosoftMaps/Microsoft.Maps.d.ts\"\n  ]\n}\n</code></pre>\n\n<p>Using the /// directive (reference comments) is often used in examples to get you started quickly, but it is not a best practice. <em>Also many examples come from a version &lt; TypeScript 2.0.</em></p>\n"}], "owner": {"reputation": 855, "user_id": 1578097, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/d1fa36e38411cb43ae80db4206097f81?s=128&d=identicon&r=PG", "display_name": "HotStuff68", "link": "https://stackoverflow.com/users/1578097/hotstuff68"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 43984, "favorite_count": 13, "accepted_answer_id": 28991341, "answer_count": 5, "score": 59, "last_activity_date": 1607243900, "creation_date": 1426084360, "last_edit_date": 1607243900, "question_id": 28989399, "link": "https://stackoverflow.com/questions/28989399/do-i-have-to-reference-typescript-definition-in-every-file", "title": "Do I have to reference TypeScript definition in every file?", "body": "<p>Is there a way to tell TypeScript to use a certain file (or set of files) as a definition for everything compiled?</p>\n<p>My only alternative currently is to add something like this in every single TypeScript file (which seems clunky):</p>\n<pre><code>/// &lt;reference path=&quot;DefinitelyTyped/requirejs/require.d.ts&quot; /&gt;\n</code></pre>\n"}, {"tags": ["module", "namespaces", "typescript"], "answers": [{"tags": [], "owner": {"reputation": 15625, "user_id": 3786294, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/o0RBY.png?s=128&g=1", "display_name": "Paleo", "link": "https://stackoverflow.com/users/3786294/paleo"}, "is_accepted": true, "score": 4, "last_activity_date": 1426455173, "last_edit_date": 1426455173, "creation_date": 1426265966, "answer_id": 29037932, "question_id": 28986172, "link": "https://stackoverflow.com/questions/28986172/how-to-address-internal-module-when-a-name-conflict-exists-in-typescript/29037932#29037932", "title": "How to address internal module when a name conflict exists in TypeScript", "body": "<p>You can't do that.</p>\n\n<p>Take this code in TypeScript:</p>\n\n<pre><code>var B = 'test';\nmodule A.B {\n    // Declare a function\n    export function fn() {\n    }\n    // Tests\n    console.log(B); // Object {  }\n    A.B.fn(); // valid\n    B.fn(); // valid\n    fn(); // valid\n}\n</code></pre>\n\n<p>The message displayed in the console is: <code>Object {  }</code> and not <code>test</code>. Look at the transpiled code:</p>\n\n<pre><code>var B = 'test'; // root scope\nvar A;\n(function (A) {\n    var B; // same name, hide the root scope one\n    (function (B) {\n        // Declare a function\n        function fn() {\n        }\n        B.fn = fn;\n        // Tests\n        console.log(B); // Object {  }\n        A.B.fn(); // valid\n        B.fn(); // valid\n        fn(); // valid\n    })(B = A.B || (A.B = {}));\n})(A || (A = {}));\n</code></pre>\n\n<p>The module <code>A.B</code> is transpiled to two JavaScript variables <code>A</code> and <code>B</code>. We can use them in order to access to the exported members of the module: the function <code>fn</code> is accessible from <code>A.B.fn</code>, <code>B.fn</code> and <code>fn</code>. In the module, the variable <code>B</code> from the root scope is hidden by the variable <code>B</code> of the module.</p>\n\n<p>You can't access to a global variable <code>Rx</code> from a module named <code>Rx</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 15625, "user_id": 3786294, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/o0RBY.png?s=128&g=1", "display_name": "Paleo", "link": "https://stackoverflow.com/users/3786294/paleo"}, "edited": false, "score": 0, "creation_date": 1426497255, "post_id": 29068004, "comment_id": 46380324, "body": "<code>OrigRx.Observable.prototype...</code>, no?"}], "tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": false, "score": 4, "last_activity_date": 1426539506, "last_edit_date": 1495540418, "creation_date": 1426466425, "answer_id": 29068004, "question_id": 28986172, "link": "https://stackoverflow.com/questions/28986172/how-to-address-internal-module-when-a-name-conflict-exists-in-typescript/29068004#29068004", "title": "How to address internal module when a name conflict exists in TypeScript", "body": "<p>As mentioned by Tarh you cannot refer to an outer module if its been shadowed by a local variable. I've +1ed his answer and that should be the accepted answer. I'll just leave a few workarounds: </p>\n\n<p>One workaround which you already know is to rename <code>MyModule.Rx</code> to something that doesn't have <code>Rx</code>. An alternative is to capture <code>Rx</code> with some other name: </p>\n\n<pre><code>import OrigRx = Rx;\nmodule MyModule.Rx {\n    OrigRx.Observable.prototype.myExtension = function() { /* ... */ };\n}\n</code></pre>\n\n<p>This is very similar to <a href=\"https://stackoverflow.com/a/29021964/390330\">https://stackoverflow.com/a/29021964/390330</a> </p>\n"}], "owner": {"reputation": 5586, "user_id": 777928, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/1cf46fa2f23b44d172a14a72e6bb2dc3?s=128&d=identicon&r=PG", "display_name": "Dynalon", "link": "https://stackoverflow.com/users/777928/dynalon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2529, "favorite_count": 0, "accepted_answer_id": 29037932, "answer_count": 2, "score": 3, "last_activity_date": 1426539506, "creation_date": 1426075444, "question_id": 28986172, "link": "https://stackoverflow.com/questions/28986172/how-to-address-internal-module-when-a-name-conflict-exists-in-typescript", "title": "How to address internal module when a name conflict exists in TypeScript", "body": "<p>In my TypeScript project (using only internal modules), I want to include polyfills/extension for an existing library. For this example, I will use the RxJS library but the question/problem is not specific to this library.</p>\n\n<p>The following code is what I came up with:</p>\n\n<pre><code>module MyModule.Rx {\n    Rx.Observable.prototype.myExtension = function() { /* ... */ };\n}\n</code></pre>\n\n<p>The RxJS definitions (.d.ts files) are used and compiled together with the code. This leads to the following compiler error: <code>2339 Property 'Observable' does not exist on type 'typeof Rx'</code></p>\n\n<p>As far as I can tell this happens because I used the same <code>Rx</code> identifier in <code>MyModule.Rx</code>. When switching the namespace in the first line to <code>module MyModule.NotRx {</code> everything works fine - the <code>Observable</code> type is correctly looked up from the RxJS .d.ts file.</p>\n\n<p>So it seems that the names <code>MyModule.Rx</code> and the RxJS declared <code>Rx</code> namespaces are in conflict. I know that I could simply rename my namespace to  <code>MyModule.SomethingElse</code> but that seems somewhat of a hack.</p>\n\n<p>Having all polyfills/extensions for <code>Rx</code> in the <code>MyModue.Rx</code> namespace seems a natural choice for me - how can this be done in a clean way?</p>\n"}, {"tags": ["typescript", "jsrender", "jsviews"], "comments": [{"owner": {"reputation": 8024, "user_id": 1054484, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f51ce9b674549f361ed759d740779c4?s=128&d=identicon&r=PG", "display_name": "BorisMoore", "link": "https://stackoverflow.com/users/1054484/borismoore"}, "edited": false, "score": 0, "creation_date": 1426095144, "post_id": 28986019, "comment_id": 46235027, "body": "It seems to work for me. Are you using the latest jQuery and JsViews?"}, {"owner": {"reputation": 160, "user_id": 2987607, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2a8a4294194decdd60e3787be21c5c1d?s=128&d=identicon&r=PG&f=1", "display_name": "Erik v O.", "link": "https://stackoverflow.com/users/2987607/erik-v-o"}, "reply_to_user": {"reputation": 8024, "user_id": 1054484, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f51ce9b674549f361ed759d740779c4?s=128&d=identicon&r=PG", "display_name": "BorisMoore", "link": "https://stackoverflow.com/users/1054484/borismoore"}, "edited": false, "score": 0, "creation_date": 1426174313, "post_id": 28986019, "comment_id": 46272681, "body": "I was using JQuery 1.9.1. I&#39;ve updated to 2.1.3, however it&#39;s still not working. I Just realised the issue is a bit more complicated. The reason I subclassed Array into Collection&lt;T&gt; is so that I can subclass Collection&lt;T&gt; as well. For instance: <code>class NumberCollection extends Collection&lt;number&gt;</code>. I&#39;ve created a <a href=\"http://jsfiddle.net/hkLttzg4/\" rel=\"nofollow noreferrer\">JsFiddle</a> to illustrate the issue. When using Collection it works, but when using SubclassedCollection it doesn&#39;t. As I mentioned above: I got it to work when changing JsView to use <code>(data instanceof Array)</code> instead of <code>$.isArray(data)</code>."}], "answers": [{"tags": [], "owner": {"reputation": 8024, "user_id": 1054484, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f51ce9b674549f361ed759d740779c4?s=128&d=identicon&r=PG", "display_name": "BorisMoore", "link": "https://stackoverflow.com/users/1054484/borismoore"}, "is_accepted": true, "score": 2, "last_activity_date": 1426520384, "last_edit_date": 1426520384, "creation_date": 1426199179, "answer_id": 29021467, "question_id": 28986019, "link": "https://stackoverflow.com/questions/28986019/jsrender-jsviews-how-to-get-for-working-for-subclassed-arrays/29021467#29021467", "title": "JsRender/JsViews: How to get {for} working for subclassed arrays", "body": "<p>Your SubclassedCollection is not a JavaScript array (just as a jQuery object is not a JavaScript array). Unlike your Collection, it returns <code>\"[object Object]\"</code> from <code>Object.prototype.toString.call(ob)</code> - rather than <code>\"[object Array]\"</code>.</p>\n\n<p>One possible approach might be to use the function: </p>\n\n<pre><code>function toArray(ob) {\n    return Array.prototype.slice.call(ob);\n}\n</code></pre>\n\n<p>and either write</p>\n\n<pre><code>MyModule.ViewModel = { Coll: toArray(collection2) };\n</code></pre>\n\n<p>or else register <code>toArray</code> as a helper (<code>~toArray</code>) or a converter (<code>\"toArray\"</code>) and then write your template as:</p>\n\n<pre><code>{{for ~toArray(Coll)}}\n</code></pre>\n\n<p>(or alternatively <code>{{for Coll convert=~toArray}}</code> or <code>{{for Coll convert=\"toArray\"}}</code>).  </p>\n\n<p>Here is an updated fork of your jsfiddle: <a href=\"http://jsfiddle.net/16L670re/\" rel=\"nofollow\">http://jsfiddle.net/16L670re/</a></p>\n"}], "owner": {"reputation": 160, "user_id": 2987607, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2a8a4294194decdd60e3787be21c5c1d?s=128&d=identicon&r=PG&f=1", "display_name": "Erik v O.", "link": "https://stackoverflow.com/users/2987607/erik-v-o"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 312, "favorite_count": 0, "accepted_answer_id": 29021467, "answer_count": 1, "score": 1, "last_activity_date": 1426520384, "creation_date": 1426074954, "last_edit_date": 1426163010, "question_id": 28986019, "link": "https://stackoverflow.com/questions/28986019/jsrender-jsviews-how-to-get-for-working-for-subclassed-arrays", "title": "JsRender/JsViews: How to get {for} working for subclassed arrays", "body": "<p>I've subclassed Array (using TypeScript), in order to be able to add extra functions to the Array. See code below.</p>\n\n<p>Since then, I've noticed that the <code>{for}</code> tag of JsRender/JsViews does not work any more.\nI've also noticed JsRender/JsViews uses <code>$.isArray(...)</code> in order to iterate arrays, which will return <code>false</code> on subclassed arrays.</p>\n\n<p>When I change JsRender/JsViews code to use <code>(data instanceof Array)</code> it does work.</p>\n\n<p>Is there another way (without changing JsRender/JsViews code) to get subclassed arrays to work with JsRender/JsViews <code>{for}</code> tag?</p>\n\n<p><b>Typescript:</b></p>\n\n<pre><code>module MyModule {\n    export class Collection&lt;T&gt; implements Array&lt;T&gt; {\n        constructor() {\n            Array.apply(this, arguments);\n            return new Array();\n        }\n\n        length: number;\n        toString(): string { return \"\"; }\n        //... All other Array properties/methods\n    }\n\n    // replace dummy declarations with the real thing\n    Collection['prototype'] = new Array();\n}\n</code></pre>\n\n<p><b>Generated Javascript:</b></p>\n\n<pre><code>var MyModule;\n(function (MyModule) {\n    var Collection = (function () {\n        function Collection() {\n            Array.apply(this, arguments);\n            return new Array();\n        }\n\n        Collection.prototype.toString = function () { return \"\"; };\n        //... All other Array properties/methods\n\n        return Collection;\n    })();\n    MyModule.Collection = Collection;\n\n    // replace dummy declarations with the real thing\n    Collection['prototype'] = new Array();\n})(MyModule|| (MyModule= {}));\n</code></pre>\n"}, {"tags": ["visual-studio-2013", "typescript"], "answers": [{"tags": [], "owner": {"reputation": 10969, "user_id": 1523814, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7263b6f605379925111266939ee054d4?s=128&d=identicon&r=PG", "display_name": "Dick van den Brink", "link": "https://stackoverflow.com/users/1523814/dick-van-den-brink"}, "is_accepted": true, "score": 1, "last_activity_date": 1426080942, "creation_date": 1426080942, "answer_id": 28988067, "question_id": 28983380, "link": "https://stackoverflow.com/questions/28983380/can-not-install-typescript-0-9-1-1-explicitly-for-vs2013-it-installs-version-1/28988067#28988067", "title": "Can not install TypeScript 0.9.1.1 explicitly for VS2013, it installs version 1.0.3.0", "body": "<p>Probably your PATH environment variable is wrong, you can check that by executing <code>echo %PATH%</code> and you will probably see something like<code>C:\\Program Files (x86)\\Microsoft SDKs\\TypeScript\\1.0\\;</code> and maybe some extra ones which are before the 0.9 one.</p>\n\n<p>You can also try executing <code>where tsc</code> and maybe you find the path there to the 0.9.1.1 version.</p>\n\n<p>If you find that path you can add it to the environment. You can change that by going to the Control Panel -> System &amp; Security -> and on the left there is \"Advanced System settings\", click on It and a popup will open. Chose the tab \"advanced\" there and click the button \"Environment variables\", there you can change your path. Make sure to add the 0.9.1.1 version before the 1.0 version.</p>\n\n<p>You need to restart cmd after changing this.</p>\n"}], "owner": {"reputation": 3, "user_id": 4563184, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/GvP0G.jpg?s=128&g=1", "display_name": "Rachit", "link": "https://stackoverflow.com/users/4563184/rachit"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 165, "favorite_count": 0, "accepted_answer_id": 28988067, "answer_count": 1, "score": 0, "last_activity_date": 1426080942, "creation_date": 1426067765, "question_id": 28983380, "link": "https://stackoverflow.com/questions/28983380/can-not-install-typescript-0-9-1-1-explicitly-for-vs2013-it-installs-version-1", "title": "Can not install TypeScript 0.9.1.1 explicitly for VS2013, it installs version 1.0.3.0", "body": "<p>I want to install TypeScript 0.9.1.1 only and no other version for MS Visual Studio 2013. \nI have tried the exe file available here <a href=\"http://download.microsoft.com/download/2/F/F/2FFA1FBA-97CA-4FFB-8ED7-A4AE06398948/TypeScriptSetup.0.9.1.1.exe\" rel=\"nofollow\">Download Link for Typescript 0.9.1.1</a></p>\n\n<p>It installs Version 1.0.3.0 (checked from CMD using command \"<strong>tsc -- version</strong>\")</p>\n\n<p>Please Help!</p>\n"}, {"tags": ["typescript", "null-check"], "comments": [{"owner": {"reputation": 100, "user_id": 2829223, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e10ef8929d9094ce318a973ba10084d?s=128&d=identicon&r=PG", "display_name": "pawciobiel", "link": "https://stackoverflow.com/users/2829223/pawciobiel"}, "edited": false, "score": 11, "creation_date": 1441029679, "post_id": 28975896, "comment_id": 52501240, "body": "<code>Since TypeScript is strongly-typed</code> I couldn&#39;t find this in it&#39;s docs and I have doubts about it..."}, {"owner": {"reputation": 1674, "user_id": 192814, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/d4cf266dbf1445c4913f017867ed876b?s=128&d=identicon&r=PG", "display_name": "RyBolt", "link": "https://stackoverflow.com/users/192814/rybolt"}, "edited": false, "score": 3, "creation_date": 1470402624, "post_id": 28975896, "comment_id": 64950315, "body": "Recommend to read up on the latest non-nullable types , this is Typescript 2 , but already in beta as of today.  [Non-nullable types #7140] (<a href=\"https://github.com/Microsoft/TypeScript/pull/7140\" rel=\"nofollow noreferrer\">github.com/Microsoft/TypeScript/pull/7140</a>)"}, {"owner": {"user_type": "does_not_exist", "display_name": "user663031"}, "edited": false, "score": 3, "creation_date": 1502266682, "post_id": 28975896, "comment_id": 78129288, "body": "TypeScript has no dedicated functions to do anything. It&#39;s a typing system and a transpiler, not a library."}, {"owner": {"reputation": 3901, "user_id": 5203853, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/fc13d83da1b2b866c973e239ea3b38d3?s=128&d=identicon&r=PG&f=1", "display_name": "Tom el Safadi", "link": "https://stackoverflow.com/users/5203853/tom-el-safadi"}, "edited": false, "score": 0, "creation_date": 1598001509, "post_id": 28975896, "comment_id": 112322004, "body": "As you say it is bad to just check <code>if () {}</code> since that will also be true for <code>0</code>."}], "answers": [{"comments": [{"owner": {"reputation": 80876, "user_id": 188246, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/bTzLq.jpg?s=128&g=1", "display_name": "David Sherret", "link": "https://stackoverflow.com/users/188246/david-sherret"}, "edited": false, "score": 3, "creation_date": 1426039783, "post_id": 28976117, "comment_id": 46205756, "body": "I like doing two equals <code>myVar == null</code>. Just another option."}, {"owner": {"reputation": 15157, "user_id": 252087, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/rntY6.png?s=128&g=1", "display_name": "C Snover", "link": "https://stackoverflow.com/users/252087/c-snover"}, "edited": false, "score": 34, "creation_date": 1426043060, "post_id": 28976117, "comment_id": 46206541, "body": "<code>== null</code> is the correct way to test for null &amp; undefined. <code>!!something</code> is a useless coercion in a conditional in JS (just use <code>something</code>). <code>!!something</code> will also coerce 0 and &#39;&#39; to false, which is not what you want to do if you are looking for null/undefined."}], "tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": false, "score": 66, "last_activity_date": 1582599959, "last_edit_date": 1582599959, "creation_date": 1426030933, "answer_id": 28976117, "question_id": 28975896, "link": "https://stackoverflow.com/questions/28975896/is-there-a-way-to-check-for-both-null-and-undefined/28976117#28976117", "title": "Is there a way to check for both `null` and `undefined`?", "body": "<blockquote>\n  <p>Does TypeScript has dedicated function or syntax sugar for this</p>\n</blockquote>\n\n<p>TypeScript fully understands the JavaScript version which is <code>something == null</code>. </p>\n\n<p>TypeScript will correctly rule out both <code>null</code> and <code>undefined</code> with such checks. </p>\n\n<h1>More</h1>\n\n<p><a href=\"https://basarat.gitbook.io/typescript/recap/null-undefined\" rel=\"noreferrer\">https://basarat.gitbook.io/typescript/recap/null-undefined</a></p>\n"}, {"comments": [{"owner": {"reputation": 148157, "user_id": 35364, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/f11512869fe2f8d87a2f2b687b76686c?s=128&d=identicon&r=PG", "display_name": "hasen", "link": "https://stackoverflow.com/users/35364/hasen"}, "edited": false, "score": 25, "creation_date": 1463594339, "post_id": 28977628, "comment_id": 62135308, "body": "Wouldn&#39;t work for numbers because <code>0</code> also passes the <code>!foo</code> test."}, {"owner": {"reputation": 1940, "user_id": 225386, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/d16ba5dc73f2d713319a7f89fce6597d?s=128&d=identicon&r=PG", "display_name": "Gingi", "link": "https://stackoverflow.com/users/225386/gingi"}, "edited": false, "score": 10, "creation_date": 1464372028, "post_id": 28977628, "comment_id": 62475728, "body": "Does not work for booleans either, where <code>undefined</code> is different than <code>false</code>. This is very common with optional boolean function parameters, where you should use the common JavaScript approach: <code>function fn(flag?: boolean) { if (typeof flag === &quot;undefined&quot;) flag = true; &#47;* set default value *&#47; }</code>"}, {"owner": {"reputation": 6834, "user_id": 271012, "user_type": "registered", "accept_rate": 68, "profile_image": "https://i.stack.imgur.com/m3wdQ.png?s=128&g=1", "display_name": "Drenai", "link": "https://stackoverflow.com/users/271012/drenai"}, "reply_to_user": {"reputation": 1940, "user_id": 225386, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/d16ba5dc73f2d713319a7f89fce6597d?s=128&d=identicon&r=PG", "display_name": "Gingi", "link": "https://stackoverflow.com/users/225386/gingi"}, "edited": false, "score": 0, "creation_date": 1470597058, "post_id": 28977628, "comment_id": 65002172, "body": "Seems to work ok for booleans: <code>var isTrue;               if(isTrue)&#47;&#47;skips,          if(!isTrue)&#47;&#47; enters         if(isTrue === undefined)&#47;&#47;enters</code>. Also tried it in typescript with <code>var isTrue:boolean</code> which was undefined, and the same if checks. @Gingi, is there something different about what you tried and what I tried?"}], "tags": [], "owner": {"reputation": 679, "user_id": 1576430, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/42afbfa6c59e3b6a2125548bc4b8075a?s=128&d=identicon&r=PG&f=1", "display_name": "AlexB", "link": "https://stackoverflow.com/users/1576430/alexb"}, "is_accepted": false, "score": -6, "last_activity_date": 1568073269, "last_edit_date": 1568073269, "creation_date": 1426041384, "answer_id": 28977628, "question_id": 28975896, "link": "https://stackoverflow.com/questions/28975896/is-there-a-way-to-check-for-both-null-and-undefined/28977628#28977628", "title": "Is there a way to check for both `null` and `undefined`?", "body": "<p>I always write it like this:</p>\n\n<pre><code>var foo:string;\n\nif(!foo){\n   foo=\"something\";    \n}\n</code></pre>\n\n<p>This will work fine and I think it's very readable.</p>\n"}, {"comments": [{"owner": {"reputation": 3202, "user_id": 751200, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/5f4101868ff175fc306cc570f725b0ae?s=128&d=identicon&r=PG", "display_name": "kolobok", "link": "https://stackoverflow.com/users/751200/kolobok"}, "edited": false, "score": 74, "creation_date": 1470056113, "post_id": 28984306, "comment_id": 64776702, "body": "What is &quot;juggling-check&quot;?"}, {"owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "reply_to_user": {"reputation": 3202, "user_id": 751200, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/5f4101868ff175fc306cc570f725b0ae?s=128&d=identicon&r=PG", "display_name": "kolobok", "link": "https://stackoverflow.com/users/751200/kolobok"}, "edited": false, "score": 23, "creation_date": 1470058442, "post_id": 28984306, "comment_id": 64778298, "body": "@akapelko it is where the type is juggled (i.e. &quot;can we make this type a boolean&quot;). So an empty string is treated as a boolean false, for example. A common bug when juggling is: <code>&quot;false&quot; == false</code> a non-empty string like &quot;false&quot; evaluates to <code>true</code>."}, {"owner": {"reputation": 575, "user_id": 275655, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/a962725401812452fa19661fba10fb58?s=128&d=identicon&r=PG", "display_name": "Astravagrant", "link": "https://stackoverflow.com/users/275655/astravagrant"}, "edited": false, "score": 13, "creation_date": 1484572797, "post_id": 28984306, "comment_id": 70551806, "body": "This is due to JS&#39;s &#39;type coercion&#39;."}, {"owner": {"reputation": 1315, "user_id": 4098983, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/sJHA9.jpg?s=128&g=1", "display_name": "Jon Gunter", "link": "https://stackoverflow.com/users/4098983/jon-gunter"}, "edited": false, "score": 0, "creation_date": 1498148719, "post_id": 28984306, "comment_id": 76392516, "body": "Except if x is 0 (and that&#39;s a valid value), it will pass your undefined/null test."}, {"owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "reply_to_user": {"reputation": 1315, "user_id": 4098983, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/sJHA9.jpg?s=128&g=1", "display_name": "Jon Gunter", "link": "https://stackoverflow.com/users/4098983/jon-gunter"}, "edited": false, "score": 3, "creation_date": 1502304431, "post_id": 28984306, "comment_id": 78156406, "body": "@JonGunter that would be true of truthy/falsey <code>if(x)</code> style checks, but not <code>if(x == null)</code>, which only catches <code>null</code> and <code>undefined</code>. Check it using <code>var c: number = 0; check(c, &#39;b&#39;);</code> it is not &quot;nully&quot;, <code>null</code>, or <code>undefined</code>."}, {"owner": {"reputation": 1164, "user_id": 1955609, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/8f91b80579634687d213c848af9a1f19?s=128&d=identicon&r=PG", "display_name": "developer", "link": "https://stackoverflow.com/users/1955609/developer"}, "edited": false, "score": 0, "creation_date": 1509721434, "post_id": 28984306, "comment_id": 81147302, "body": "Is if(!x) equal to if(x == null)?"}, {"owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "reply_to_user": {"reputation": 1164, "user_id": 1955609, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/8f91b80579634687d213c848af9a1f19?s=128&d=identicon&r=PG", "display_name": "developer", "link": "https://stackoverflow.com/users/1955609/developer"}, "edited": false, "score": 1, "creation_date": 1509786696, "post_id": 28984306, "comment_id": 81168482, "body": "@developer - not quite, as <code>if (!x)</code> would treat (for example) the number <code>0</code> and the string <code>&#39;&#39;</code> as null, whereas <code>if (x == null)</code> would not."}, {"owner": {"reputation": 6412, "user_id": 9117, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/5e2c288f79d772a6b7560487e6db1a19?s=128&d=identicon&r=PG", "display_name": "Mark Meuer", "link": "https://stackoverflow.com/users/9117/mark-meuer"}, "edited": false, "score": 0, "creation_date": 1520958837, "post_id": 28984306, "comment_id": 85526211, "body": "How about checking for not null or undefined?  Is <code>if ( x!= null)</code> equivalent to <code>if (!(x != null))</code>?"}, {"owner": {"reputation": 1118, "user_id": 2054586, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/WqhpB.jpg?s=128&g=1", "display_name": "stonedauwg", "link": "https://stackoverflow.com/users/2054586/stonedauwg"}, "edited": false, "score": 1, "creation_date": 1607093766, "post_id": 28984306, "comment_id": 115171955, "body": "@Fenton I think u meant to say &quot;as falsy&quot; instead of &quot;as null&quot;"}, {"owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "reply_to_user": {"reputation": 1118, "user_id": 2054586, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/WqhpB.jpg?s=128&g=1", "display_name": "stonedauwg", "link": "https://stackoverflow.com/users/2054586/stonedauwg"}, "edited": false, "score": 0, "creation_date": 1607347057, "post_id": 28984306, "comment_id": 115235126, "body": "@stonedauwg correct!"}], "tags": [], "owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "is_accepted": false, "score": 461, "last_activity_date": 1528876752, "last_edit_date": 1528876752, "creation_date": 1426070291, "answer_id": 28984306, "question_id": 28975896, "link": "https://stackoverflow.com/questions/28975896/is-there-a-way-to-check-for-both-null-and-undefined/28984306#28984306", "title": "Is there a way to check for both `null` and `undefined`?", "body": "<p>Using a juggling-check, you can test both <code>null</code> and <code>undefined</code> in one hit:</p>\n\n<pre><code>if (x == null) {\n</code></pre>\n\n<p>If you use a strict-check, it will only be true for values set to <code>null</code> and won't evaluate as true for undefined variables:</p>\n\n<pre><code>if (x === null) {\n</code></pre>\n\n<p>You can try this with various values using this example:</p>\n\n<pre><code>var a: number;\nvar b: number = null;\n\nfunction check(x, name) {\n    if (x == null) {\n        console.log(name + ' == null');\n    }\n\n    if (x === null) {\n        console.log(name + ' === null');\n    }\n\n    if (typeof x === 'undefined') {\n        console.log(name + ' is undefined');\n    }\n}\n\ncheck(a, 'a');\ncheck(b, 'b');\n</code></pre>\n\n<p>Output</p>\n\n<blockquote>\n  <p>\"a == null\" </p>\n  \n  <p>\"a is undefined\"</p>\n  \n  <p>\"b == null\"</p>\n  \n  <p>\"b === null\"</p>\n</blockquote>\n"}, {"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user663031"}, "edited": false, "score": 1, "creation_date": 1502339864, "post_id": 40175472, "comment_id": 78168205, "body": "Why would you use the TypeScript playground for this? Nothing here has anything to do with TypeScript."}, {"owner": {"reputation": 4009, "user_id": 627161, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/329fd7d295cb5a2289888520ae2871b5?s=128&d=identicon&r=PG", "display_name": "Juangui Jord&#225;n", "link": "https://stackoverflow.com/users/627161/juangui-jord%c3%a1n"}, "edited": false, "score": 12, "creation_date": 1502437870, "post_id": 40175472, "comment_id": 78218634, "body": "Because the question was related to Typescript, I was trying to test different  proposed solutions against the Typescript transpiler."}, {"owner": {"user_type": "does_not_exist", "display_name": "user663031"}, "edited": false, "score": 7, "creation_date": 1502440336, "post_id": 40175472, "comment_id": 78220066, "body": "The TS transpiler would not transform any of this code at all."}], "tags": [], "owner": {"reputation": 4009, "user_id": 627161, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/329fd7d295cb5a2289888520ae2871b5?s=128&d=identicon&r=PG", "display_name": "Juangui Jord&#225;n", "link": "https://stackoverflow.com/users/627161/juangui-jord%c3%a1n"}, "is_accepted": false, "score": 43, "last_activity_date": 1484096234, "last_edit_date": 1484096234, "creation_date": 1477049111, "answer_id": 40175472, "question_id": 28975896, "link": "https://stackoverflow.com/questions/28975896/is-there-a-way-to-check-for-both-null-and-undefined/40175472#40175472", "title": "Is there a way to check for both `null` and `undefined`?", "body": "<p>I did different tests on the typescript playground:</p>\n\n<p><a href=\"http://www.typescriptlang.org/play/\" rel=\"noreferrer\">http://www.typescriptlang.org/play/</a></p>\n\n<pre><code>let a;\nlet b = null;\nlet c = \"\";\nvar output = \"\";\n\nif (a == null) output += \"a is null or undefined\\n\";\nif (b == null) output += \"b is null or undefined\\n\";\nif (c == null) output += \"c is null or undefined\\n\";\nif (a != null) output += \"a is defined\\n\";\nif (b != null) output += \"b is defined\\n\";\nif (c != null) output += \"c is defined\\n\";\nif (a) output += \"a is defined (2nd method)\\n\";\nif (b) output += \"b is defined (2nd method)\\n\";\nif (c) output += \"c is defined (2nd method)\\n\";\n\nconsole.log(output);\n</code></pre>\n\n<p>gives:</p>\n\n<pre><code>a is null or undefined\nb is null or undefined\nc is defined\n</code></pre>\n\n<p>so:</p>\n\n<ul>\n<li>checking if (a == null) is right to know if a is null or undefined</li>\n<li>checking if (a != null) is right to know if a is defined</li>\n<li>checking if (a) is wrong to know if a is defined</li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 166, "user_id": 269998, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1503be68bfe073bcd89c9447eedd83c0?s=128&d=identicon&r=PG", "display_name": "counterflow", "link": "https://stackoverflow.com/users/269998/counterflow"}, "edited": false, "score": 2, "creation_date": 1507330623, "post_id": 41763539, "comment_id": 80181925, "body": "And if data is of boolean type?"}, {"owner": {"reputation": 2558, "user_id": 2809294, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/0fdcc9ccb35a1df7723808984e863a57?s=128&d=identicon&r=PG", "display_name": "ARK", "link": "https://stackoverflow.com/users/2809294/ark"}, "edited": false, "score": 0, "creation_date": 1510937667, "post_id": 41763539, "comment_id": 81663667, "body": "can you combine two variables eg. if(value1 &amp;&amp; value2) to check if both of them are undefined ?"}, {"owner": {"reputation": 279, "user_id": 7737346, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-v7RR3XIYT20/AAAAAAAAAAI/AAAAAAAAFhI/POgYjCPTm9g/photo.jpg?sz=128", "display_name": "KBeDev", "link": "https://stackoverflow.com/users/7737346/kbedev"}, "reply_to_user": {"reputation": 166, "user_id": 269998, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1503be68bfe073bcd89c9447eedd83c0?s=128&d=identicon&r=PG", "display_name": "counterflow", "link": "https://stackoverflow.com/users/269998/counterflow"}, "edited": false, "score": 0, "creation_date": 1589919742, "post_id": 41763539, "comment_id": 109483557, "body": "@ianstigator A boolean can be evaluated as <code>true</code> or <code>false</code> only. If you have a boolean with a <code>null</code> assignation or an <code>undefined</code> value, in both cases the value will be evaluated as <code>false</code>."}], "tags": [], "owner": {"reputation": 256, "user_id": 2958358, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/e98ba871f6fb9bf6468e913f89391179?s=128&d=identicon&r=PG&f=1", "display_name": "artemitSoft", "link": "https://stackoverflow.com/users/2958358/artemitsoft"}, "is_accepted": false, "score": 15, "last_activity_date": 1484914719, "creation_date": 1484914719, "answer_id": 41763539, "question_id": 28975896, "link": "https://stackoverflow.com/questions/28975896/is-there-a-way-to-check-for-both-null-and-undefined/41763539#41763539", "title": "Is there a way to check for both `null` and `undefined`?", "body": "<pre><code>if(data){}\n</code></pre>\n\n<p>it's mean !data</p>\n\n<ul>\n<li>null</li>\n<li>undefined</li>\n<li>false</li>\n<li>....</li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 166, "user_id": 269998, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1503be68bfe073bcd89c9447eedd83c0?s=128&d=identicon&r=PG", "display_name": "counterflow", "link": "https://stackoverflow.com/users/269998/counterflow"}, "edited": false, "score": 24, "creation_date": 1507330599, "post_id": 44017547, "comment_id": 80181917, "body": "What if value is of boolean type?"}, {"owner": {"reputation": 2558, "user_id": 2809294, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/0fdcc9ccb35a1df7723808984e863a57?s=128&d=identicon&r=PG", "display_name": "ARK", "link": "https://stackoverflow.com/users/2809294/ark"}, "edited": false, "score": 1, "creation_date": 1510937574, "post_id": 44017547, "comment_id": 81663631, "body": "can you combine two variables eg. if(value1 &amp;&amp; value2) to check if both of them are undefined ?"}, {"owner": {"reputation": 3505, "user_id": 1259233, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/bNpUC.jpg?s=128&g=1", "display_name": "Ramazan Sa\u011f\u0131r", "link": "https://stackoverflow.com/users/1259233/ramazan-sa%c4%9f%c4%b1r"}, "reply_to_user": {"reputation": 2558, "user_id": 2809294, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/0fdcc9ccb35a1df7723808984e863a57?s=128&d=identicon&r=PG", "display_name": "ARK", "link": "https://stackoverflow.com/users/2809294/ark"}, "edited": false, "score": 0, "creation_date": 1511361254, "post_id": 44017547, "comment_id": 81828813, "body": "@AkshayrajKore yes you can"}, {"owner": {"reputation": 4061, "user_id": 3241889, "user_type": "registered", "accept_rate": 72, "profile_image": "https://i.stack.imgur.com/snb4P.jpg?s=128&g=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/3241889/alex"}, "edited": false, "score": 0, "creation_date": 1519725318, "post_id": 44017547, "comment_id": 85015997, "body": "And now, if I wait a number, and I want to check if this number is not null, but let&#39;s say it&#39;s value is 0; it does not pass the condition check, so how I do this properly with numbers ?"}, {"owner": {"reputation": 3505, "user_id": 1259233, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/bNpUC.jpg?s=128&g=1", "display_name": "Ramazan Sa\u011f\u0131r", "link": "https://stackoverflow.com/users/1259233/ramazan-sa%c4%9f%c4%b1r"}, "reply_to_user": {"reputation": 4061, "user_id": 3241889, "user_type": "registered", "accept_rate": 72, "profile_image": "https://i.stack.imgur.com/snb4P.jpg?s=128&g=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/3241889/alex"}, "edited": false, "score": 0, "creation_date": 1519726275, "post_id": 44017547, "comment_id": 85016613, "body": "@Alex if the value==0 returns false"}, {"owner": {"reputation": 4061, "user_id": 3241889, "user_type": "registered", "accept_rate": 72, "profile_image": "https://i.stack.imgur.com/snb4P.jpg?s=128&g=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/3241889/alex"}, "edited": false, "score": 9, "creation_date": 1519727507, "post_id": 44017547, "comment_id": 85017452, "body": "@RamazanSa\u011f\u0131r yeah thanks I know that, but the fact is 0 value is something valid that I can have, the only check I want to do is that the variable is neither null or undefined. I have read that I can do it by using val != null (the != instead of !== also checks undefined value)"}, {"owner": {"reputation": 913, "user_id": 1158150, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/lmgOm.jpg?s=128&g=1", "display_name": "Yohan Hirimuthugoda", "link": "https://stackoverflow.com/users/1158150/yohan-hirimuthugoda"}, "edited": false, "score": 0, "creation_date": 1527914591, "post_id": 44017547, "comment_id": 88317525, "body": "@RamazanSa\u011f\u0131r I just checked with one of my piece of code and &quot;if (undefined)&quot; evaluated to true. This is my object { businessId: &quot;undefined&quot; } look like, then if I check &quot;if (businessId)&quot; it is evaluated to true. :("}, {"owner": {"reputation": 913, "user_id": 1158150, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/lmgOm.jpg?s=128&g=1", "display_name": "Yohan Hirimuthugoda", "link": "https://stackoverflow.com/users/1158150/yohan-hirimuthugoda"}, "edited": false, "score": 0, "creation_date": 1527915038, "post_id": 44017547, "comment_id": 88317588, "body": "@RamazanSa\u011f\u0131r I found the reason it&#39;s because of double quote surrounding undefined keyword. Otherwise if (undefined) evaluated to false;"}, {"owner": {"reputation": 172, "user_id": 1705343, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/9IxWA.jpg?s=128&g=1", "display_name": "ip_x", "link": "https://stackoverflow.com/users/1705343/ip-x"}, "edited": false, "score": 6, "creation_date": 1537789386, "post_id": 44017547, "comment_id": 91898133, "body": "This solution will not work if the tslint rule - &quot;strict-boolean-expressions&quot; is enabled."}, {"owner": {"reputation": 381, "user_id": 12184583, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qeGgL.jpg?s=128&g=1", "display_name": "Ayfri", "link": "https://stackoverflow.com/users/12184583/ayfri"}, "edited": false, "score": 1, "creation_date": 1587183113, "post_id": 44017547, "comment_id": 108415396, "body": "It will evaluate false if value us falsy, as simple as this."}], "tags": [], "owner": {"reputation": 3505, "user_id": 1259233, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/bNpUC.jpg?s=128&g=1", "display_name": "Ramazan Sa\u011f\u0131r", "link": "https://stackoverflow.com/users/1259233/ramazan-sa%c4%9f%c4%b1r"}, "is_accepted": false, "score": 323, "last_activity_date": 1523891384, "last_edit_date": 1523891384, "creation_date": 1495003806, "answer_id": 44017547, "question_id": 28975896, "link": "https://stackoverflow.com/questions/28975896/is-there-a-way-to-check-for-both-null-and-undefined/44017547#44017547", "title": "Is there a way to check for both `null` and `undefined`?", "body": "<pre><code>if( value ) {\n}\n</code></pre>\n\n<p>will evaluate to <code>true</code> if <code>value</code> is not:</p>\n\n<ul>\n<li><code>null</code></li>\n<li><code>undefined</code></li>\n<li><code>NaN</code></li>\n<li>empty string <code>''</code></li>\n<li><code>0</code></li>\n<li><code>false</code></li>\n</ul>\n\n<p>typescript includes javascript rules.</p>\n"}, {"tags": [], "owner": {"reputation": 41, "user_id": 5272524, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-iPr2l4EMzhA/AAAAAAAAAAI/AAAAAAAAAaw/BdLY-Dwo8uI/photo.jpg?sz=128", "display_name": "akshay reddy", "link": "https://stackoverflow.com/users/5272524/akshay-reddy"}, "is_accepted": false, "score": 0, "last_activity_date": 1495554788, "last_edit_date": 1495554788, "creation_date": 1495524231, "answer_id": 44128273, "question_id": 28975896, "link": "https://stackoverflow.com/questions/28975896/is-there-a-way-to-check-for-both-null-and-undefined/44128273#44128273", "title": "Is there a way to check for both `null` and `undefined`?", "body": "<p>you can use </p>\n\n<pre><code>if(x === undefined)\n</code></pre>\n"}, {"tags": [], "owner": {"user_type": "does_not_exist", "display_name": "user663031"}, "is_accepted": false, "score": 5, "last_activity_date": 1495526184, "creation_date": 1495526184, "answer_id": 44128978, "question_id": 28975896, "link": "https://stackoverflow.com/questions/28975896/is-there-a-way-to-check-for-both-null-and-undefined/44128978#44128978", "title": "Is there a way to check for both `null` and `undefined`?", "body": "<p>If you are using TypeScript, it is a better approach to let the compiler check for nulls and undefineds (or the possibility thereof), rather than checking for them at run-time. (If you do want to check at run-time, then as many answers indicate, just use <code>value == null</code>).</p>\n\n<p>Use the compile option <a href=\"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-0.html\" rel=\"noreferrer\"><code>strictNullChecks</code></a> to tell the compiler to choke on possible null or undefined values. If you set this option, and then there is a situation where you <strong>do</strong> want to allow null and undefined, you can define the type as <code>Type | null | undefined</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 2655, "user_id": 123696, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/39897d5613035d1b98f47171f79327e9?s=128&d=identicon&r=PG", "display_name": "simonhamp", "link": "https://stackoverflow.com/users/123696/simonhamp"}, "edited": false, "score": 0, "creation_date": 1510231598, "post_id": 46665302, "comment_id": 81352774, "body": "This is not good test. None of those values are <i>strictly</i> <code>null</code>. Try this: <a href=\"https://plnkr.co/edit/NfiVnQNes1p8PvXd1fCG?p=preview\" rel=\"nofollow noreferrer\">plnkr.co/edit/NfiVnQNes1p8PvXd1fCG?p=preview</a>"}], "tags": [], "owner": {"reputation": 2078, "user_id": 3122378, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/97677628666ee64f04bf6f56bd11020c?s=128&d=identicon&r=PG", "display_name": "Ben Croughs", "link": "https://stackoverflow.com/users/3122378/ben-croughs"}, "is_accepted": false, "score": 0, "last_activity_date": 1507633881, "creation_date": 1507633881, "answer_id": 46665302, "question_id": 28975896, "link": "https://stackoverflow.com/questions/28975896/is-there-a-way-to-check-for-both-null-and-undefined/46665302#46665302", "title": "Is there a way to check for both `null` and `undefined`?", "body": "<p>All,</p>\n\n<p>The answer with the most votes, does not really work if you are working with an object. In that case, if a property is not present, the check will not work. And that was the issue in our case: see this sample:</p>\n\n<pre><code>var x =\n{ name: \"Homer\", LastName: \"Simpson\" };\n\nvar y =\n{ name: \"Marge\"} ;\n\nvar z =\n{ name: \"Bart\" , LastName: undefined} ;\n\nvar a =\n{ name: \"Lisa\" , LastName: \"\"} ;\n\nvar hasLastNameX = x.LastName != null;\nvar hasLastNameY = y.LastName != null;\nvar hasLastNameZ = z.LastName != null;\nvar hasLastNameA = a.LastName != null;\n\n\n\nalert (hasLastNameX + ' ' + hasLastNameY + ' ' + hasLastNameZ + ' ' + hasLastNameA);\n\nvar hasLastNameXX = x.LastName !== null;\nvar hasLastNameYY = y.LastName !== null;\nvar hasLastNameZZ = z.LastName !== null;\nvar hasLastNameAA = a.LastName !== null;\n\nalert (hasLastNameXX + ' ' + hasLastNameYY + ' ' + hasLastNameZZ + ' ' + hasLastNameAA);\n</code></pre>\n\n<p>Outcome:</p>\n\n<pre><code>true , false, false , true (in case of !=)\ntrue , true, true, true (in case of !==) =&gt; so in this sample not the correct answer\n</code></pre>\n\n<p>plunkr link: <a href=\"https://plnkr.co/edit/BJpVHD95FhKlpHp1skUE\" rel=\"nofollow noreferrer\">https://plnkr.co/edit/BJpVHD95FhKlpHp1skUE</a></p>\n"}, {"tags": [], "owner": {"reputation": 1380, "user_id": 675561, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1ab1f8d1bd45b30c2e1cbe4ed74cd83c?s=128&d=identicon&r=PG", "display_name": "Graeme Wicksted", "link": "https://stackoverflow.com/users/675561/graeme-wicksted"}, "is_accepted": false, "score": 5, "last_activity_date": 1510693280, "creation_date": 1510693280, "answer_id": 47295117, "question_id": 28975896, "link": "https://stackoverflow.com/questions/28975896/is-there-a-way-to-check-for-both-null-and-undefined/47295117#47295117", "title": "Is there a way to check for both `null` and `undefined`?", "body": "<p>If you want to pass <code>tslint</code> without setting <code>strict-boolean-expressions</code> to <code>allow-null-union</code> or <code>allow-undefined-union</code>, you need to use <code>isNullOrUndefined</code> from <code>node</code>'s <code>util</code> module or roll your own:</p>\n\n<pre><code>// tslint:disable:no-null-keyword\nexport const isNullOrUndefined =\n  &lt;T&gt;(obj: T | null | undefined): obj is null | undefined =&gt; {\n    return typeof obj === \"undefined\" || obj === null;\n  };\n// tslint:enable:no-null-keyword\n</code></pre>\n\n<p>Not exactly syntactic sugar but useful when your tslint rules are strict.</p>\n"}, {"comments": [{"owner": {"reputation": 928, "user_id": 2364553, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/exkVm.jpg?s=128&g=1", "display_name": "paul cheung", "link": "https://stackoverflow.com/users/2364553/paul-cheung"}, "edited": false, "score": 0, "creation_date": 1549943252, "post_id": 49792111, "comment_id": 96076563, "body": "so, if someValue is &#39;false&#39;(with string type), then !!someValue is false(boolean type)?"}, {"owner": {"reputation": 4155, "user_id": 4163254, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/zv1t7.jpg?s=128&g=1", "display_name": "avi.elkharrat", "link": "https://stackoverflow.com/users/4163254/avi-elkharrat"}, "reply_to_user": {"reputation": 928, "user_id": 2364553, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/exkVm.jpg?s=128&g=1", "display_name": "paul cheung", "link": "https://stackoverflow.com/users/2364553/paul-cheung"}, "edited": false, "score": 0, "creation_date": 1549960901, "post_id": 49792111, "comment_id": 96083071, "body": "I guess you may say so.This technic is precisely used to avoid having this kind of confusion. I hope you like it!"}, {"owner": {"reputation": 928, "user_id": 2364553, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/exkVm.jpg?s=128&g=1", "display_name": "paul cheung", "link": "https://stackoverflow.com/users/2364553/paul-cheung"}, "edited": false, "score": 0, "creation_date": 1549962440, "post_id": 49792111, "comment_id": 96083938, "body": "but what confused me is !!&#39;false&#39; equals true. Just because of this case, i can not use this technic."}, {"owner": {"reputation": 4155, "user_id": 4163254, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/zv1t7.jpg?s=128&g=1", "display_name": "avi.elkharrat", "link": "https://stackoverflow.com/users/4163254/avi-elkharrat"}, "reply_to_user": {"reputation": 928, "user_id": 2364553, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/exkVm.jpg?s=128&g=1", "display_name": "paul cheung", "link": "https://stackoverflow.com/users/2364553/paul-cheung"}, "edited": false, "score": 0, "creation_date": 1549964615, "post_id": 49792111, "comment_id": 96085333, "body": "<code>!!&#39;false&#39;</code> is in deed <code>true</code> because <code>&#39;false&#39;</code> is a valid string"}, {"owner": {"reputation": 928, "user_id": 2364553, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/exkVm.jpg?s=128&g=1", "display_name": "paul cheung", "link": "https://stackoverflow.com/users/2364553/paul-cheung"}, "edited": false, "score": 0, "creation_date": 1549965368, "post_id": 49792111, "comment_id": 96085810, "body": "so this technic can not cover this case, or is there a workaround solution?"}], "tags": [], "owner": {"reputation": 4155, "user_id": 4163254, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/zv1t7.jpg?s=128&g=1", "display_name": "avi.elkharrat", "link": "https://stackoverflow.com/users/4163254/avi-elkharrat"}, "is_accepted": false, "score": 28, "last_activity_date": 1523523144, "creation_date": 1523523144, "answer_id": 49792111, "question_id": 28975896, "link": "https://stackoverflow.com/questions/28975896/is-there-a-way-to-check-for-both-null-and-undefined/49792111#49792111", "title": "Is there a way to check for both `null` and `undefined`?", "body": "<p>You may want to try</p>\n\n<pre><code>if(!!someValue)\n</code></pre>\n\n<p>with <code>!!</code>.</p>\n\n<p><strong>Explanation</strong></p>\n\n<p>The first <code>!</code> will turn your expression into a <code>boolean</code> value.</p>\n\n<p>Then <code>!someValue</code> is <code>true</code> if <code>someValue</code> is <em>falsy</em> and <code>false</code> if <code>someValue</code> is <em>truthy</em>. This might be confusing.</p>\n\n<p>By adding another <code>!</code>, the expression is now <code>true</code> if <code>someValue</code> is <em>truthy</em> and <code>false</code> if <code>someValue</code> is <em>falsy</em>, which is much easier to manage.</p>\n\n<p><strong>Discussion</strong></p>\n\n<p>Now, why do I bother myself with <code>if (!!someValue)</code> when something like <code>if (someValue)</code> would have give me the same result?</p>\n\n<p>Because <code>!!someValue</code> is precisely a boolean expression, whereas <code>someValue</code> could be absolutely anything. This kind of expression will now alow to write functions (and God we need those) like:</p>\n\n<pre><code>isSomeValueDefined(): boolean {\n  return !!someValue\n}\n</code></pre>\n\n<p>instead of:</p>\n\n<pre><code>isSomeValueDefined(): boolean {\n  if(someValue) {\n    return true\n  }\n  return false\n}\n</code></pre>\n\n<p>I hope it helps.</p>\n"}, {"comments": [{"owner": {"reputation": 1486, "user_id": 1322957, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f1c077ea29f08d12ee4d99a662e00eb4?s=128&d=identicon&r=PG&f=1", "display_name": "justcode", "link": "https://stackoverflow.com/users/1322957/justcode"}, "edited": false, "score": 4, "creation_date": 1542796544, "post_id": 51259620, "comment_id": 93695096, "body": "M. Kamal if something = 0, your verification with !something will give you problems."}, {"owner": {"reputation": 1683, "user_id": 8195572, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NMhnN.jpg?s=128&g=1", "display_name": "Ahmed Kamal", "link": "https://stackoverflow.com/users/8195572/ahmed-kamal"}, "reply_to_user": {"reputation": 1486, "user_id": 1322957, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f1c077ea29f08d12ee4d99a662e00eb4?s=128&d=identicon&r=PG&f=1", "display_name": "justcode", "link": "https://stackoverflow.com/users/1322957/justcode"}, "edited": false, "score": 1, "creation_date": 1542806682, "post_id": 51259620, "comment_id": 93700584, "body": "@arturios can you please give me an example!!"}, {"owner": {"reputation": 1486, "user_id": 1322957, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f1c077ea29f08d12ee4d99a662e00eb4?s=128&d=identicon&r=PG&f=1", "display_name": "justcode", "link": "https://stackoverflow.com/users/1322957/justcode"}, "edited": false, "score": 0, "creation_date": 1542812543, "post_id": 51259620, "comment_id": 93704152, "body": "@M. Kamal If you are dealing with numbers the 0 will be interpreted as false which is a problem.  // In this case the value will be undefined wich is ok var value; if (!value) { \tconsole.log(&quot;value is false, undefined or empty&quot;) }  // In this case value is set as 0, this is the problem of using this approach when you deal with number value = 0; if (!value) { \tconsole.log(&quot;value is false, undefined or empty&quot;) }"}, {"owner": {"reputation": 1683, "user_id": 8195572, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NMhnN.jpg?s=128&g=1", "display_name": "Ahmed Kamal", "link": "https://stackoverflow.com/users/8195572/ahmed-kamal"}, "reply_to_user": {"reputation": 1486, "user_id": 1322957, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f1c077ea29f08d12ee4d99a662e00eb4?s=128&d=identicon&r=PG&f=1", "display_name": "justcode", "link": "https://stackoverflow.com/users/1322957/justcode"}, "edited": false, "score": 2, "creation_date": 1542819695, "post_id": 51259620, "comment_id": 93708603, "body": "@arturios But 0 is already a falsy value in JavaScript !! so what is the point here?"}, {"owner": {"reputation": 1486, "user_id": 1322957, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f1c077ea29f08d12ee4d99a662e00eb4?s=128&d=identicon&r=PG&f=1", "display_name": "justcode", "link": "https://stackoverflow.com/users/1322957/justcode"}, "edited": false, "score": 0, "creation_date": 1542822389, "post_id": 51259620, "comment_id": 93709899, "body": "Yes i understand but the question refers only to undefined and null, but now i look that you put the comment of false also."}, {"owner": {"reputation": 2256, "user_id": 4906586, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/wSTXo.jpg?s=128&g=1", "display_name": "Al-un", "link": "https://stackoverflow.com/users/4906586/al-un"}, "edited": false, "score": 0, "creation_date": 1547745039, "post_id": 51259620, "comment_id": 95306404, "body": "For what it&#39;s worth: I would have written the update as <code>typeof sth !== &#39;undefined&#39; &amp;&amp; sth !== null</code>. As tests are executed from left to right, I had an error with an undefined <code>sth</code> for the test <code>sth !== null</code>"}, {"owner": {"reputation": 1683, "user_id": 8195572, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NMhnN.jpg?s=128&g=1", "display_name": "Ahmed Kamal", "link": "https://stackoverflow.com/users/8195572/ahmed-kamal"}, "reply_to_user": {"reputation": 2256, "user_id": 4906586, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/wSTXo.jpg?s=128&g=1", "display_name": "Al-un", "link": "https://stackoverflow.com/users/4906586/al-un"}, "edited": false, "score": 1, "creation_date": 1547768702, "post_id": 51259620, "comment_id": 95316310, "body": "@Al-un nope, see it in action <a href=\"http://www.typescriptlang.org/play/#src=%2F%2F%20it&#39;s%20undefined.%0D%0Aconst%20something%20%3D%20undefined%0D%0A%0D%0Aif%20(something%20!%3D%3D%20null%20%26%26%20typeof%20something%20!%3D%3D%20&#39;undefined&#39;)%20%7B%0D%0A%20%20%2F%2F%20your%20logic%20here...%0D%0A%7D%20else%20%7B%0D%0A%20%20%20%20console.log(&#39;NOPE%2C%20no%20errors!&#39;)%0D%0A%7D\" rel=\"nofollow noreferrer\">here</a>"}, {"owner": {"reputation": 12309, "user_id": 480700, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/991498a27b7f3690fbfcb13143052ac9?s=128&d=identicon&r=PG", "display_name": "Jaider", "link": "https://stackoverflow.com/users/480700/jaider"}, "edited": false, "score": 1, "creation_date": 1562779063, "post_id": 51259620, "comment_id": 100487590, "body": "the updated version is wrong. The first thing to check should be undefined... like: <code>if(typeof something !== &#39;undefined&#39; &amp;&amp; something !== null){...}</code>"}], "tags": [], "owner": {"reputation": 1683, "user_id": 8195572, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NMhnN.jpg?s=128&g=1", "display_name": "Ahmed Kamal", "link": "https://stackoverflow.com/users/8195572/ahmed-kamal"}, "is_accepted": false, "score": 31, "last_activity_date": 1562782209, "last_edit_date": 1562782209, "creation_date": 1531208358, "answer_id": 51259620, "question_id": 28975896, "link": "https://stackoverflow.com/questions/28975896/is-there-a-way-to-check-for-both-null-and-undefined/51259620#51259620", "title": "Is there a way to check for both `null` and `undefined`?", "body": "<p>I think this answer needs an update, check the edit history for the old answer.</p>\n\n<p>Basically, you have three deferent cases null, undefined, and undeclared, see the snippet below.</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>// bad-file.ts\nconsole.log(message)\n</code></pre>\n\n<p>You'll get an error says that variable <code>message</code> is undefined (aka undeclared), of course, the Typescript compiler shouldn't let you do that but REALLY nothing can prevent you.</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>// evil-file.ts\n// @ts-gnore\nconsole.log(message)\n</code></pre>\n\n<p>The compiler will be happy to just compile the code above.\nSo, if you're sure that all variables are declared you can simply do that</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>if ( message != null ) {\n    // do something with the message\n}\n</code></pre>\n\n<p>the code above will check for <code>null</code> and <code>undefined</code>, BUT in case the <code>message</code> variable may be undeclared (for safety), you may consider the following code</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>if ( typeof(message) !== 'undefined' &amp;&amp; message !== null ) {\n    // message variable is more than safe to be used.\n}\n</code></pre>\n\n<p>Note: the order here <code>typeof(message) !== 'undefined' &amp;&amp; message !== null</code> is very important you have to check for the <code>undefined</code> state first atherwise it will be just the same as <code>message != null</code>, thanks @Jaider.</p>\n"}, {"comments": [{"owner": {"reputation": 98, "user_id": 5815046, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/oloxB.jpg?s=128&g=1", "display_name": "Thomas Poignant", "link": "https://stackoverflow.com/users/5815046/thomas-poignant"}, "edited": false, "score": 1, "creation_date": 1560436123, "post_id": 51652757, "comment_id": 99743482, "body": "Why this method are -2 ? Lodash is not good with type script ?"}], "tags": [], "owner": {"reputation": 27, "user_id": 4399415, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c4b71849021e34fb7d6c11ec6c6adf7d?s=128&d=identicon&r=PG&f=1", "display_name": "7e2e63de", "link": "https://stackoverflow.com/users/4399415/7e2e63de"}, "is_accepted": false, "score": -1, "last_activity_date": 1533210130, "creation_date": 1533210130, "answer_id": 51652757, "question_id": 28975896, "link": "https://stackoverflow.com/questions/28975896/is-there-a-way-to-check-for-both-null-and-undefined/51652757#51652757", "title": "Is there a way to check for both `null` and `undefined`?", "body": "<p>Since TypeScript is a typed superset of ES6 JavaScript. And lodash are a library of javascript.</p>\n\n<p>Using lodash to checks if value is null or undefined can be done using <code>_.isNil()</code>.</p>\n\n<pre><code>_.isNil(value)\n</code></pre>\n\n<h3>Arguments</h3>\n\n<p><strong>value</strong> (*): The value to check.</p>\n\n<h3>Returns</h3>\n\n<p><strong>(boolean)</strong>: Returns true if value is nullish, else false.</p>\n\n<h3>Example</h3>\n\n<pre><code>_.isNil(null);\n// =&gt; true\n\n_.isNil(void 0);\n// =&gt; true\n\n_.isNil(NaN);\n// =&gt; false\n</code></pre>\n\n<h3>Link</h3>\n\n<p><a href=\"https://lodash.com/docs/4.17.10#isNil\" rel=\"nofollow noreferrer\">Lodash Docs</a></p>\n"}, {"comments": [{"owner": {"reputation": 482, "user_id": 4797961, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/lt7dd.png?s=128&g=1", "display_name": "Totati", "link": "https://stackoverflow.com/users/4797961/totati"}, "edited": false, "score": 0, "creation_date": 1605217700, "post_id": 52097700, "comment_id": 114591498, "body": "I wish they added this as an util function."}], "tags": [], "owner": {"reputation": 12623, "user_id": 930170, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/ehN7q.jpg?s=128&g=1", "display_name": "Sergei Panfilov", "link": "https://stackoverflow.com/users/930170/sergei-panfilov"}, "is_accepted": false, "score": 24, "last_activity_date": 1568101624, "last_edit_date": 1568101624, "creation_date": 1535633876, "answer_id": 52097700, "question_id": 28975896, "link": "https://stackoverflow.com/questions/28975896/is-there-a-way-to-check-for-both-null-and-undefined/52097700#52097700", "title": "Is there a way to check for both `null` and `undefined`?", "body": "<p>For <code>Typescript 2.x.x</code> you should do it in a following way(using <a href=\"https://www.typescriptlang.org/docs/handbook/advanced-types.html#user-defined-type-guards\" rel=\"noreferrer\">type guard</a>):</p>\n\n<p><strong>tl;dr</strong></p>\n\n<pre><code>function isDefined&lt;T&gt;(value: T | undefined | null): value is T {\n  return &lt;T&gt;value !== undefined &amp;&amp; &lt;T&gt;value !== null;\n}\n</code></pre>\n\n<hr>\n\n<p><strong>Why?</strong></p>\n\n<p>In this way <code>isDefined()</code> will respect variable's type and the following code would know take this check in account.</p>\n\n<p><strong>Example 1</strong> - basic check:</p>\n\n<pre><code>function getFoo(foo: string): void { \n  //\n}\n\nfunction getBar(bar: string| undefined) {   \n  getFoo(bar); //ERROR: \"bar\" can be undefined\n  if (isDefined(bar)) {\n    getFoo(bar); // Ok now, typescript knows that \"bar' is defined\n  }\n}\n</code></pre>\n\n<p><strong>Example 2</strong> - types respect:</p>\n\n<pre><code>function getFoo(foo: string): void { \n  //\n}\n\nfunction getBar(bar: number | undefined) {\n  getFoo(bar); // ERROR: \"number | undefined\" is not assignable to \"string\"\n  if (isDefined(bar)) {\n    getFoo(bar); // ERROR: \"number\" is not assignable to \"string\", but it's ok - we know it's number\n  }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 442, "user_id": 10395209, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/rmdQp.jpg?s=128&g=1", "display_name": "Harry Stylesheet", "link": "https://stackoverflow.com/users/10395209/harry-stylesheet"}, "is_accepted": false, "score": 0, "last_activity_date": 1540539973, "creation_date": 1540539973, "answer_id": 53003862, "question_id": 28975896, "link": "https://stackoverflow.com/questions/28975896/is-there-a-way-to-check-for-both-null-and-undefined/53003862#53003862", "title": "Is there a way to check for both `null` and `undefined`?", "body": "<p>A faster and shorter notation for <code>null</code> checks can be: </p>\n\n<pre><code>value == null ? \"UNDEFINED\" : value\n</code></pre>\n\n<p>This line is equivalent to: </p>\n\n<pre><code>if(value == null) {\n       console.log(\"UNDEFINED\")\n} else {\n    console.log(value)\n}\n</code></pre>\n\n<p>Especially when you have a lot of <code>null</code> check it is a nice short notation. </p>\n"}, {"tags": [], "owner": {"reputation": 7365, "user_id": 4374291, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/oxcAX.jpg?s=128&g=1", "display_name": "T04435", "link": "https://stackoverflow.com/users/4374291/t04435"}, "is_accepted": false, "score": 0, "last_activity_date": 1550712550, "creation_date": 1550712550, "answer_id": 54797861, "question_id": 28975896, "link": "https://stackoverflow.com/questions/28975896/is-there-a-way-to-check-for-both-null-and-undefined/54797861#54797861", "title": "Is there a way to check for both `null` and `undefined`?", "body": "<p>I had this issue and some of the answer work just fine for <code>JS</code> but not for <code>TS</code> here is the reason.</p>\n\n<pre><code>//JS\nlet couldBeNullOrUndefined;\nif(couldBeNullOrUndefined == null) {\n  console.log('null OR undefined', couldBeNullOrUndefined);\n} else {\n  console.log('Has some value', couldBeNullOrUndefined);\n}\n</code></pre>\n\n<p>That is all good as JS has no Types</p>\n\n<pre><code>//TS\nlet couldBeNullOrUndefined?: string | null; // THIS NEEDS TO BE TYPED AS undefined || null || Type(string)\n\nif(couldBeNullOrUndefined === null) { // TS should always use strict-check\n  console.log('null OR undefined', couldBeNullOrUndefined);\n} else {\n  console.log('Has some value', couldBeNullOrUndefined);\n}\n</code></pre>\n\n<p>In TS if the variable wasn't defined with <code>null</code> when you try to check for that <code>null</code> the <code>tslint</code> | compiler will complain.</p>\n\n<pre><code>//tslint.json\n...\n\"triple-equals\":[true],\n...\n</code></pre>\n\n<pre><code> let couldBeNullOrUndefined?: string; // to fix it add | null\n\n Types of property 'couldBeNullOrUndefined' are incompatible.\n      Type 'string | null' is not assignable to type 'string | undefined'.\n        Type 'null' is not assignable to type 'string | undefined'.\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 1238, "user_id": 2210256, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/bMxaw.jpg?s=128&g=1", "display_name": "Shahid Manzoor Bhat", "link": "https://stackoverflow.com/users/2210256/shahid-manzoor-bhat"}, "is_accepted": false, "score": 1, "last_activity_date": 1554825831, "creation_date": 1554825831, "answer_id": 55596948, "question_id": 28975896, "link": "https://stackoverflow.com/questions/28975896/is-there-a-way-to-check-for-both-null-and-undefined/55596948#55596948", "title": "Is there a way to check for both `null` and `undefined`?", "body": "<p>Late to join this thread but I find this JavaScript hack very handy in checking whether a value is undefined </p>\n\n<pre><code> if(typeof(something) === 'undefined'){\n   // Yes this is undefined\n }\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 153, "user_id": 4812980, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cd66ef3c74c35997e5747152579bd95c?s=128&d=identicon&r=PG", "display_name": "Neo", "link": "https://stackoverflow.com/users/4812980/neo"}, "is_accepted": false, "score": 0, "last_activity_date": 1561076596, "creation_date": 1561076596, "answer_id": 56695419, "question_id": 28975896, "link": "https://stackoverflow.com/questions/28975896/is-there-a-way-to-check-for-both-null-and-undefined/56695419#56695419", "title": "Is there a way to check for both `null` and `undefined`?", "body": "<p>Usually I do the  juggling-check as Fenton already <a href=\"https://stackoverflow.com/a/28984306/4812980\">discussed</a>. \nTo make it more readable, you can use <a href=\"https://ramdajs.com/docs/#isNil\" rel=\"nofollow noreferrer\">isNil</a> from ramda.</p>\n\n<pre><code>import * as isNil from 'ramda/src/isNil';\n\ntotalAmount = isNil(totalAmount ) ? 0 : totalAmount ;\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 14155, "user_id": 632088, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/4b02313659bcb668d49a0075c2de0bc1?s=128&d=identicon&r=PG", "display_name": "robert king", "link": "https://stackoverflow.com/users/632088/robert-king"}, "is_accepted": false, "score": 0, "last_activity_date": 1568073340, "creation_date": 1568073340, "answer_id": 57862452, "question_id": 28975896, "link": "https://stackoverflow.com/questions/28975896/is-there-a-way-to-check-for-both-null-and-undefined/57862452#57862452", "title": "Is there a way to check for both `null` and `undefined`?", "body": "<p>careful if you're using local storage, you can end up with the string undefined rather than the value undefined:</p>\n\n<pre><code>localStorage.setItem('mykey',JSON.stringify(undefined));\nlocalStorage.getItem('mykey') === \"undefined\"\ntrue\n</code></pre>\n\n<p>People may find this useful: <a href=\"https://github.com/angular/components/blob/master/src/cdk/coercion/boolean-property.spec.ts\" rel=\"nofollow noreferrer\">https://github.com/angular/components/blob/master/src/cdk/coercion/boolean-property.spec.ts</a></p>\n\n<pre><code>/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Coerces a data-bound value (typically a string) to a boolean. */\nexport function coerceBooleanProperty(value: any): boolean {\n  return value != null &amp;&amp; `${value}` !== 'false';\n}\n\nimport {coerceBooleanProperty} from './boolean-property';\n\ndescribe('coerceBooleanProperty', () =&gt; {\n\n  it('should coerce undefined to false', () =&gt; {\n    expect(coerceBooleanProperty(undefined)).toBe(false);\n  });\n\n  it('should coerce null to false', () =&gt; {\n    expect(coerceBooleanProperty(null)).toBe(false);\n  });\n\n  it('should coerce the empty string to true', () =&gt; {\n    expect(coerceBooleanProperty('')).toBe(true);\n  });\n\n  it('should coerce zero to true', () =&gt; {\n    expect(coerceBooleanProperty(0)).toBe(true);\n  });\n\n  it('should coerce the string \"false\" to false', () =&gt; {\n    expect(coerceBooleanProperty('false')).toBe(false);\n  });\n\n  it('should coerce the boolean false to false', () =&gt; {\n    expect(coerceBooleanProperty(false)).toBe(false);\n  });\n\n  it('should coerce the boolean true to true', () =&gt; {\n    expect(coerceBooleanProperty(true)).toBe(true);\n  });\n\n  it('should coerce the string \"true\" to true', () =&gt; {\n    expect(coerceBooleanProperty('true')).toBe(true);\n  });\n\n  it('should coerce an arbitrary string to true', () =&gt; {\n    expect(coerceBooleanProperty('pink')).toBe(true);\n  });\n\n  it('should coerce an object to true', () =&gt; {\n    expect(coerceBooleanProperty({})).toBe(true);\n  });\n\n  it('should coerce an array to true', () =&gt; {\n    expect(coerceBooleanProperty([])).toBe(true);\n  });\n});\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 753, "user_id": 1414170, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/a22f63723bc37cb95442d0686179fbf9?s=128&d=identicon&r=PG", "display_name": "tkd_aj", "link": "https://stackoverflow.com/users/1414170/tkd-aj"}, "edited": false, "score": 8, "creation_date": 1574719947, "post_id": 59029956, "comment_id": 104324168, "body": "This should be the accepted answer now.  Typescript 3.7 also supports &quot;Nullish Coalescing&quot;.      var foo = possibleUndefinedOrNull ?? fallbackValueIfFirstValueIsUndefinedOrNull;  Here is the documentation: <a href=\"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-7.html\" rel=\"nofollow noreferrer\">typescriptlang.org/docs/handbook/release-notes/&hellip;</a>"}, {"owner": {"reputation": 1434, "user_id": 407986, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/c4160f0aa742b3cc615f7ffae18b53f0?s=128&d=identicon&r=PG", "display_name": "dVaffection", "link": "https://stackoverflow.com/users/407986/dvaffection"}, "edited": false, "score": 0, "creation_date": 1603861975, "post_id": 59029956, "comment_id": 114167488, "body": "Optional chaining and Nullish Coalescing are great but in case of a single <code>if</code> stmt like <code>if (context != null) word.ctx = context;</code> one still has to resort to the old juggling-check  as described in the upvoted comment <a href=\"https://stackoverflow.com/a/28984306/407986\">stackoverflow.com/a/28984306/407986</a>"}, {"owner": {"reputation": 1441, "user_id": 4477343, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/WuDCO.jpg?s=128&g=1", "display_name": "hien", "link": "https://stackoverflow.com/users/4477343/hien"}, "edited": false, "score": 0, "creation_date": 1610087103, "post_id": 59029956, "comment_id": 116026220, "body": "Yes, for almost scenarios, we could we <code>Optional chaining</code> , e.g. <code>if (foo?.bar?.baz)</code> <a href=\"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-7.html\" rel=\"nofollow noreferrer\">typescriptlang.org/docs/handbook/release-notes/&hellip;</a>"}], "tags": [], "owner": {"reputation": 15822, "user_id": 4399281, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/JkroG.jpg?s=128&g=1", "display_name": "Fateh Mohamed", "link": "https://stackoverflow.com/users/4399281/fateh-mohamed"}, "is_accepted": false, "score": 72, "last_activity_date": 1601886960, "last_edit_date": 1601886960, "creation_date": 1574678580, "answer_id": 59029956, "question_id": 28975896, "link": "https://stackoverflow.com/questions/28975896/is-there-a-way-to-check-for-both-null-and-undefined/59029956#59029956", "title": "Is there a way to check for both `null` and `undefined`?", "body": "<p>In <strong>TypeScript 3.7</strong> we have now <strong>Optional chaining</strong>  and <strong>Nullish Coalescing</strong> to check <strong>null</strong> and <strong>undefined</strong> in the same time, example:</p>\n<pre><code>let x = foo?.bar.baz();\n</code></pre>\n<p>this code will check if foo is defined otherwise it will return undefined</p>\n<p><strong>old way</strong> :</p>\n<pre><code>if(foo != null &amp;&amp; foo != undefined) {\n   x = foo.bar.baz();\n} \n</code></pre>\n<p>this:</p>\n<pre><code>let x = (foo === null || foo === undefined) ? undefined : foo.bar();\n\nif (foo &amp;&amp; foo.bar &amp;&amp; foo.bar.baz) { // ... }\n</code></pre>\n<p>With optional chaining will be:</p>\n<pre><code>let x = foo?.bar();\n\nif (foo?.bar?.baz) { // ... }\n</code></pre>\n<p>another new feature is <strong>Nullish Coalescing</strong>, example:</p>\n<pre><code>let x = foo ?? bar(); // return foo if it's not null or undefined otherwise calculate bar\n</code></pre>\n<p>old way:</p>\n<pre><code>let x = (foo !== null &amp;&amp; foo !== undefined) ?\nfoo :\nbar();\n</code></pre>\n<p><strong>BONUS</strong>\n<a href=\"https://i.stack.imgur.com/OPBH5.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/OPBH5.png\" alt=\"enter image description here\" /></a></p>\n"}, {"comments": [{"owner": {"reputation": 1504, "user_id": 2321037, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/txWPp.jpg?s=128&g=1", "display_name": "carlosvini", "link": "https://stackoverflow.com/users/2321037/carlosvini"}, "edited": false, "score": 1, "creation_date": 1587670682, "post_id": 60528481, "comment_id": 108610551, "body": "somethingToCompare == (undefined || null).                      (undefined || null) resolves to null, so it&#39;s a loose comparison between somethingToCompare and null"}, {"owner": {"reputation": 279, "user_id": 7737346, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-v7RR3XIYT20/AAAAAAAAAAI/AAAAAAAAFhI/POgYjCPTm9g/photo.jpg?sz=128", "display_name": "KBeDev", "link": "https://stackoverflow.com/users/7737346/kbedev"}, "reply_to_user": {"reputation": 1504, "user_id": 2321037, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/txWPp.jpg?s=128&g=1", "display_name": "carlosvini", "link": "https://stackoverflow.com/users/2321037/carlosvini"}, "edited": false, "score": 0, "creation_date": 1587672139, "post_id": 60528481, "comment_id": 108611170, "body": "@carlosvini Sure, the point of the comparison is to be verbose and provide a code for reference. That&#39;s the reason of the non-strict equals comparison. The purpose of the answer is to be clear and explicative. I&#39;ll edit the text to avoid confusion"}, {"owner": {"reputation": 13641, "user_id": 1871033, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/30bea353b9b21b063e2be8ab57a1465e?s=128&d=identicon&r=PG", "display_name": "CherryDT", "link": "https://stackoverflow.com/users/1871033/cherrydt"}, "edited": false, "score": 0, "creation_date": 1604781234, "post_id": 60528481, "comment_id": 114453437, "body": "I don&#39;t understand what you mean. The code is not verbose or explicit, it is confusing at best and plain wrong at worst. The code <code>a == (b || c)</code> is the <b>not</b> the same as <code>a == b || a == c</code>, instead it will evaluate <code>b || c</code> (in this case to <code>c</code> since <code>b</code> is falsy in your example) and then compare that against <code>a</code>."}], "tags": [], "owner": {"reputation": 279, "user_id": 7737346, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-v7RR3XIYT20/AAAAAAAAAAI/AAAAAAAAFhI/POgYjCPTm9g/photo.jpg?sz=128", "display_name": "KBeDev", "link": "https://stackoverflow.com/users/7737346/kbedev"}, "is_accepted": false, "score": 5, "last_activity_date": 1599251424, "last_edit_date": 1599251424, "creation_date": 1583332613, "answer_id": 60528481, "question_id": 28975896, "link": "https://stackoverflow.com/questions/28975896/is-there-a-way-to-check-for-both-null-and-undefined/60528481#60528481", "title": "Is there a way to check for both `null` and `undefined`?", "body": "<p><strong>UPDATE (Sept 4, 2020)</strong></p>\n<p>You can now use the <code>??</code> operator to validate <code>null</code> and <code>undefined</code> &quot;values&quot; and set a default value. For example:</p>\n<pre class=\"lang-js prettyprint-override\"><code>const foo = null;\nconst bar = foo ?? 'exampleValue';\nconsole.log(bar); // This will print 'exampleValue' due to the value condition of the foo constant, in this case, a null value\n</code></pre>\n<hr />\n<p>As a verbose way, if you want to compare <em>null</em> and <em>undefined</em> values <strong>ONLY</strong>, use the following example code for reference:</p>\n<pre class=\"lang-js prettyprint-override\"><code>const incomingValue : string = undefined;\nconst somethingToCompare : string = incomingValue; // If the line above is not declared, TypeScript will return an excepion\n\nif (somethingToCompare == (undefined || null)) {\n  console.log(`Incoming value is: ${somethingToCompare}`);\n}\n</code></pre>\n<p>If <code>incomingValue</code> is not declared, TypeScript should return an exception. If this is declared but not defined, the <code>console.log()</code> will return &quot;Incoming value is: undefined&quot;. Note we are not using the strict equals operator.</p>\n<p>The &quot;correct&quot; way (check the other answers for details), if the <code>incomingValue</code> is not a <code>boolean</code> type, just evaluate if its value is true, this will be evaluated according to the constant/variable type. A <code>true</code> string have to be defined explicitly as string using the <code>= ''</code> assignation. If not, it will be evaluated as <code>false</code>. Let's check this case using the same context:</p>\n<pre class=\"lang-js prettyprint-override\"><code>const incomingValue : string = undefined;\nconst somethingToCompare0 : string = 'Trumpet';\nconst somethingToCompare1 : string = incomingValue;\n\nif (somethingToCompare0) {\n  console.log(`somethingToCompare0 is: ${somethingToCompare0}`); // Will return &quot;somethingToCompare0 is: Trumpet&quot;\n}\n\n// Now, we will evaluate the second constant\nif (somethingToCompare1) {\n  console.log(`somethingToCompare1 is: ${somethingToCompare1}`); // Launched if incomingValue is defined\n} else {\n  console.log(`somethingToCompare1 is: ${somethingToCompare1}`); // Launched if incomingValue is undefined. Will return &quot;somethingToCompare1 is: undefined&quot;\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 2624, "user_id": 2612536, "user_type": "registered", "accept_rate": 67, "profile_image": "https://graph.facebook.com/1252209416/picture?type=large", "display_name": "Sindri &#222;&#243;r", "link": "https://stackoverflow.com/users/2612536/sindri-%c3%9e%c3%b3r"}, "edited": false, "score": 0, "creation_date": 1617397698, "post_id": 64131912, "comment_id": 118300795, "body": "Works great here"}], "tags": [], "owner": {"reputation": 184, "user_id": 1520221, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b13011595ec6657e45e5d32cef7ffe9c?s=128&d=identicon&r=PG", "display_name": "Ruthi", "link": "https://stackoverflow.com/users/1520221/ruthi"}, "is_accepted": false, "score": 3, "last_activity_date": 1601446761, "creation_date": 1601446761, "answer_id": 64131912, "question_id": 28975896, "link": "https://stackoverflow.com/questions/28975896/is-there-a-way-to-check-for-both-null-and-undefined/64131912#64131912", "title": "Is there a way to check for both `null` and `undefined`?", "body": "<p>The simplest way is to use:</p>\n<p><code>import { isNullOrUndefined } from 'util';</code></p>\n<p>and than:</p>\n<p><code>if (!isNullOrUndefined(foo))</code></p>\n"}, {"tags": [], "owner": {"reputation": 3488, "user_id": 152711, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/c7564ed5b848eda69e4fea42ab2323b5?s=128&d=identicon&r=PG", "display_name": "Freewalker", "link": "https://stackoverflow.com/users/152711/freewalker"}, "is_accepted": false, "score": -1, "last_activity_date": 1618394324, "creation_date": 1618394324, "answer_id": 67089554, "question_id": 28975896, "link": "https://stackoverflow.com/questions/28975896/is-there-a-way-to-check-for-both-null-and-undefined/67089554#67089554", "title": "Is there a way to check for both `null` and `undefined`?", "body": "<p>We wrote a helper <code>hasValue</code> that both checks for nulls/undefined and ensures via TypeScript that unnecessary checks are not performed. (The latter is similar to how TS would complain about <code>if (&quot;a&quot; === undefined)</code>, since it is always false).</p>\n<p>Using this consistently is always safe, unlike <code>!val</code> which matches empty strings, zero, etc.  It also avoid the use of fuzzy <code>==</code> matching which is almost always a bad practice - no need to introduce an exception.</p>\n<pre><code>\ntype MustBeNullable&lt;T&gt; = null extends T ? T : undefined extends T ? T : never;\n\nexport function hasValue&lt;T&gt;(\n  value: MustBeNullable&lt;T&gt;,\n): value is NonNullable&lt;MustBeNullable&lt;T&gt;&gt; {\n  return (value as unknown) !== undefined &amp;&amp; (value as unknown) !== null;\n}\n\n// Test cases:\ntype a1 = MustBeNullable&lt;null | string&gt;;             // null | string\ntype a2 = MustBeNullable&lt;null | string | undefined&gt;; // null | string | undefined\ntype a3 = MustBeNullable&lt;null | undefined&gt;;          // null | undefined\ntype a4 = MustBeNullable&lt;string&gt;;                    // **Never** - compiler will complain\n\n</code></pre>\n<p>The <code>as unknown</code> casts are needed since <code>value</code> might not be a union with <code>null</code>, or with <code>undefined</code> - though it must always be a union with at least one.</p>\n"}], "owner": {"reputation": 12184, "user_id": 554241, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/7085efed913ec6d5186e7c57352acfbd?s=128&d=identicon&r=PG", "display_name": "David Liu", "link": "https://stackoverflow.com/users/554241/david-liu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 610106, "favorite_count": 71, "answer_count": 23, "score": 471, "last_activity_date": 1618394324, "creation_date": 1426029802, "last_edit_date": 1587628411, "question_id": 28975896, "link": "https://stackoverflow.com/questions/28975896/is-there-a-way-to-check-for-both-null-and-undefined", "title": "Is there a way to check for both `null` and `undefined`?", "body": "<p>Since TypeScript is strongly-typed, simply using <code>if () {}</code> to check for <code>null</code> and <code>undefined</code> doesn't sound right. </p>\n\n<p>Does TypeScript have any dedicated function or syntax sugar for this?</p>\n"}, {"tags": ["javascript", "animation", "typescript", "winjs"], "comments": [{"owner": {"reputation": 103, "user_id": 1316554, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/df8dd30b1247f43a086d5489b46fd364?s=128&d=identicon&r=PG", "display_name": "Ravi", "link": "https://stackoverflow.com/users/1316554/ravi"}, "edited": false, "score": 0, "creation_date": 1426701065, "post_id": 28975644, "comment_id": 46484139, "body": "well, I was able to finally figure out the &quot;weird behavior&quot;. The keyframes should have been set in CSS, and I was trying a few other things and apparently that&#39;s the reason that it didn&#39;t work."}], "answers": [{"tags": [], "owner": {"reputation": 103, "user_id": 1316554, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/df8dd30b1247f43a086d5489b46fd364?s=128&d=identicon&r=PG", "display_name": "Ravi", "link": "https://stackoverflow.com/users/1316554/ravi"}, "is_accepted": false, "score": 0, "last_activity_date": 1426701518, "creation_date": 1426701518, "answer_id": 29129356, "question_id": 28975644, "link": "https://stackoverflow.com/questions/28975644/winjs-enterpage-animation-not-working-as-expected/29129356#29129356", "title": "WinJS enterPage animation not working as expected", "body": "<p>well, I was able to finally figure out the \"weird behavior\". The @keyframes should have been set in CSS, and I was trying a few other things and apparently that's the reason that it didn't work.</p>\n\n<p>However, I would probably say the explanation could have been a little more clearer in the site as well.</p>\n\n<p>when we are already providing the from - to values in the javascript, I would otherwise about providing the same again as part of CSS too which is still weird.</p>\n\n<p>Like mentioned in the site,\nadd this to css: <code>@keyframes custom-translate-in    { from { transform: translateY(50px); } to { transform: none; } }</code></p>\n\n<p>and have this in js:\n<code>\nfunction runCustomShowStoryboard() {\n    return WinJS.UI.executeAnimation(\n        target,\n        {\n            keyframe: \"custom-translate-in\",\n            property: \"transform\",\n            delay: 0,\n            duration: 367,\n            timing: \"cubic-bezier(0.1, 0.9, 0.2, 1)\",\n            from: \"translate(50px)\", \n            to: \"none\"\n        });\n}</code></p>\n\n<p>Never was able to figure out why and how the \"bottom to top\" animation started working (probably restarting visual studio helped)</p>\n"}], "owner": {"reputation": 103, "user_id": 1316554, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/df8dd30b1247f43a086d5489b46fd364?s=128&d=identicon&r=PG", "display_name": "Ravi", "link": "https://stackoverflow.com/users/1316554/ravi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 145, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1426701518, "creation_date": 1426028373, "last_edit_date": 1426554149, "question_id": 28975644, "link": "https://stackoverflow.com/questions/28975644/winjs-enterpage-animation-not-working-as-expected", "title": "WinJS enterPage animation not working as expected", "body": "<p>I wanted to add animations to my app on page enter, and hooked with the default <code>WinJS.UI.Animation.enterPage(element)</code>, and that worked fine sliding in the element from right to left.\nI need to slide it from bottom (100px) to top. Once I overrode the default values with <code>WinJS.UI.Animation.enterPage(element, { top: \"100px\", left: \"0px\" })</code> I saw no animation at all on my screen which is weird.\nHowever when coupled with <code>WinJS.UI.Animation.exitPage(oldElement)</code>, the animation seemed to work but I wanted to further tweak the timing.</p>\n\n<p>following as per <a href=\"https://msdn.microsoft.com/en-us/library/windows/apps/Dn127042(v=win.10).aspx#creating_custom_animations\" rel=\"nofollow\">https://msdn.microsoft.com/en-us/library/windows/apps/Dn127042(v=win.10).aspx#creating_custom_animations</a>, didn't help. After using the example from \"Combining custom animations and transitions\" in the link, I could see only the opacity changing and the element fading in, however no translation at all. I tried the same pairing with <code>WinJS.UI.Animation.exitPage()</code>, and adding my own customExitPage - basically using from WinJS, and with just opacity... and nothing just works.\nI was referring to some of the animation implementations from here as well -\n<a href=\"https://github.com/winjs/winjs/blob/ad8691b3d5227ff1576a5d2a90a42f022498d2a9/src/js/WinJS/Animations.js\" rel=\"nofollow\">https://github.com/winjs/winjs/blob/ad8691b3d5227ff1576a5d2a90a42f022498d2a9/src/js/WinJS/Animations.js</a>, to get control over the timing.</p>\n\n<p>Anyone else having this issue? or am I doing something wrong... or is it WinJS behaving bad?</p>\n\n<p>EDIT: \nweirdly enough the \"to top\" animation with <code>enterPage(element, {top: \"100px\", left: \"0px\"})</code> started working. However the custom animation still remains elusive.</p>\n"}, {"tags": ["javascript", "node.js", "typescript"], "comments": [{"owner": {"reputation": 1473, "user_id": 823542, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/1647ac229214e20b6e8316e77eaae60a?s=128&d=identicon&r=PG", "display_name": "Lex R", "link": "https://stackoverflow.com/users/823542/lex-r"}, "edited": false, "score": 0, "creation_date": 1426009890, "post_id": 28970572, "comment_id": 46192874, "body": "The easiest way to make your class(es) visible is to <a href=\"http://www.typescriptlang.org/Handbook#modules\" rel=\"nofollow noreferrer\">define a module</a>, but I&#39;m not sure how you commonjsify the result. <code>module.exports = MyModule</code> I guess?"}], "answers": [{"tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": true, "score": 2, "last_activity_date": 1426029234, "creation_date": 1426029234, "answer_id": 28975786, "question_id": 28970572, "link": "https://stackoverflow.com/questions/28970572/how-to-include-typescript-class-in-node-js-app/28975786#28975786", "title": "How to include typescript class in node.js app?", "body": "<p>in <code>car.ts</code>: </p>\n\n<pre><code>class Car{\n    public Color;\n\n    constructor(aColor:string){\n        this.Color = aColor;\n    }\n}\nexport = Car;\n</code></pre>\n\n<p>in some other file: </p>\n\n<pre><code>import Car = require('./car');\nvar MyCar = new Car(\"green\");\n</code></pre>\n\n<p>Compile both files with <code>--module commonjs</code>.</p>\n\n<p>More about external modules : <a href=\"https://www.youtube.com/watch?v=KDrWLMUY0R0&amp;hd=1\" rel=\"nofollow\">https://www.youtube.com/watch?v=KDrWLMUY0R0&amp;hd=1</a></p>\n"}], "owner": {"reputation": 600, "user_id": 1425639, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/231e0e9bb8ebb97417515867c9d48629?s=128&d=identicon&r=PG", "display_name": "Artur Stary", "link": "https://stackoverflow.com/users/1425639/artur-stary"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2322, "favorite_count": 0, "accepted_answer_id": 28975786, "answer_count": 1, "score": 0, "last_activity_date": 1426029234, "creation_date": 1426009514, "question_id": 28970572, "link": "https://stackoverflow.com/questions/28970572/how-to-include-typescript-class-in-node-js-app", "title": "How to include typescript class in node.js app?", "body": "<p>What's the best way to include typescript class definition in node.js file?</p>\n\n<p>Let's say I have this code:</p>\n\n<pre><code>class Car{\n    public Color;\n\n    constructor(aColor:string){\n        this.Color = aColor;\n    }\n}\n</code></pre>\n\n<p>I want to be able to make an instance of a Car this way:</p>\n\n<pre><code>var MyCar = new Car(\"green\");\n</code></pre>\n\n<p>I know that require() will return an object, but I dont need an object I only need to know the definition of a Car.</p>\n\n<p>What's the best way to do this?</p>\n"}, {"tags": ["typescript"], "answers": [{"comments": [{"owner": {"reputation": 16322, "user_id": 215969, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/4a50a54d4d142661b7b2ac1e6dce80da?s=128&d=identicon&r=PG", "display_name": "Ilia Choly", "link": "https://stackoverflow.com/users/215969/ilia-choly"}, "edited": false, "score": 0, "creation_date": 1426087378, "post_id": 28968819, "comment_id": 46229423, "body": "Having a more specific name is valuable if you&#39;re pulling it into another namespace. But assuming you always use the last segment of the module to qualify the type, a redundant name will cause stutter. <code>Foo.FooOptions</code>. I agree with you about remove the <code>I</code> prefix."}], "tags": [], "owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "is_accepted": true, "score": 2, "last_activity_date": 1426004273, "creation_date": 1426004273, "answer_id": 28968819, "question_id": 28968395, "link": "https://stackoverflow.com/questions/28968395/typescript-organizing-related-classes-interfaces/28968819#28968819", "title": "TypeScript: Organizing related classes &amp; interfaces", "body": "<p>For internal modules, it would look like this:</p>\n\n<pre><code>module Foo {\n  export interface FooOptions {\n    // ...\n  }\n\n  export class Foo {\n    constructor(options: FooOptions) {}\n  }\n}\n\n// usage\nvar foo = new Foo.Foo({\n    //...\n});\n</code></pre>\n\n<p>The use of the <code>I</code> prefix on interfaces is discouraged (although it does exist in the wild).</p>\n\n<p>The specificity of the interface name comes from the principle that names should be more specific the deeper you go. So you start general and get more specific, a bit like this example from C# (in C#, the <code>I</code> prefix is recommended for interfaces, but it is a nominal type system whereas TypeScript is structural)...</p>\n\n<pre><code>System.Data.SqlClient.SqlConnection\nSystem.Data.FooClient.FooConnection\n</code></pre>\n\n<p>Note that they <em>could</em> have used <code>Connection</code>, because it is nested in <code>SqlClient</code> - but it actually makes you work harder to understand the code if you have to see the full namespace to know what you are dealing with.</p>\n\n<p>If the interface is common between <code>SqlClient</code> and <code>FooClient</code>, this is where you see a <code>System.Data.IConnection</code>, which is less nested and less specific.</p>\n"}], "owner": {"reputation": 16322, "user_id": 215969, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/4a50a54d4d142661b7b2ac1e6dce80da?s=128&d=identicon&r=PG", "display_name": "Ilia Choly", "link": "https://stackoverflow.com/users/215969/ilia-choly"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 853, "favorite_count": 0, "accepted_answer_id": 28968819, "answer_count": 1, "score": 2, "last_activity_date": 1426004273, "creation_date": 1426003188, "question_id": 28968395, "link": "https://stackoverflow.com/questions/28968395/typescript-organizing-related-classes-interfaces", "title": "TypeScript: Organizing related classes &amp; interfaces", "body": "<p>I'm porting a JavaScript project to TypeScript and I'm unsure how to organize related entities (types/interfaces/classes).</p>\n\n<p>Below are the different approaches I'm considering. </p>\n\n<p><strong>Prefix all interfaces with class name</strong></p>\n\n<pre><code>interface IFooOptions {}\n\nclass Foo {\n  constructor(options: IFooOptions) {}\n}\n\n// usage\nvar foo = new Foo({});\n</code></pre>\n\n<p><strong>Create a module:</strong></p>\n\n<pre><code>module Foo {\n  export interface IOptions {\n    // ...\n  }\n\n  export class Foo {\n    constructor(options: IOptions) {}\n  }\n}\n\n// usage\nvar foo = new Foo.Foo({});\n</code></pre>\n\n<p><strong>Create a module with factory function:</strong></p>\n\n<pre><code>module Foo {\n  export interface IOptions {\n    // ...\n  }\n\n  export class Foo {\n    constructor(options: IOptions) {}\n  }\n\n  export function create(options: IOptions): Foo {\n    return new Foo(options);\n  }\n}\n\n// usage\nvar foo = Foo.create({});\n</code></pre>\n\n<p>What are the pros/cons of these methods? Is there a convention in the community?</p>\n"}, {"tags": ["typescript"], "answers": [{"comments": [{"owner": {"reputation": 108, "user_id": 515357, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d82061a125fbc96f4ddb0630d54aefa4?s=128&d=identicon&r=PG", "display_name": "Emilio", "link": "https://stackoverflow.com/users/515357/emilio"}, "edited": false, "score": 0, "creation_date": 1426004470, "post_id": 28968589, "comment_id": 46189291, "body": "But in your example <code>RoomGame</code> is not extending from <code>Room&lt;Player&gt;</code> so doesn&#39;t have <code>getIds</code> method. I think that the solution is to use parametric classes with constraints to <code>Player</code> type on the base class."}, {"owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "reply_to_user": {"reputation": 108, "user_id": 515357, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d82061a125fbc96f4ddb0630d54aefa4?s=128&d=identicon&r=PG", "display_name": "Emilio", "link": "https://stackoverflow.com/users/515357/emilio"}, "edited": false, "score": 0, "creation_date": 1426069747, "post_id": 28968589, "comment_id": 46217051, "body": "I have added an example that promotes that method to the base class - it uses a generic type constraint to ensure that it will only work with types that have a <code>getId</code> method."}], "tags": [], "owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "is_accepted": true, "score": 1, "last_activity_date": 1426069699, "last_edit_date": 1426069699, "creation_date": 1426003682, "answer_id": 28968589, "question_id": 28968031, "link": "https://stackoverflow.com/questions/28968031/typescript-parametric-collection-and-inheritance/28968589#28968589", "title": "TypeScript: Parametric collection and inheritance", "body": "<p>I may not be able to fully understand your intent, but the following generic base class would do what you describe:</p>\n\n<pre><code>class Room&lt;T&gt; {\n   protected playersById : PlayerDict&lt;T&gt;;\n\n   getFirst() {\n      return _.first(this.playersById);\n   }\n}\n\nclass PlayerRoom extends Room&lt;Player&gt; {\n    getIds() {\n      _.map(this.playersById, (p : Player) =&gt; { return p.getId() })\n   }\n}\n\nclass RoomGame extends Room&lt;PlayerGame&gt; {\n   someMethod() {\n      var player = this.getFirst();\n      player.getB();\n   }\n}\n</code></pre>\n\n<p>This means your original <code>Room</code> is actually called <code>PlayerRoom</code> in my example (although you could name them however you like).</p>\n\n<p>This allows you to share the appropriate methods such as <code>getFirst</code> but have methods reliant on the type of <code>PlayerDict</code> in the sub-classes.</p>\n\n<p>Update</p>\n\n<p>Here is the amended version that promotes the <code>getIds()</code> method to the base class...</p>\n\n<pre><code>interface HasId {\n    getId(): number;\n}\n\nclass Room&lt;T extends HasId&gt; {\n   protected playersById : PlayerDict&lt;T&gt;;\n\n   getFirst() {\n      return _.first(this.playersById);\n   }\n\n    getIds() {\n      _.map(this.playersById, (p : T) =&gt; { return p.getId(); })\n   }\n}\n\nclass PlayerRoom extends Room&lt;Player&gt; {\n\n}\n\nclass RoomGame extends Room&lt;PlayerGame&gt; {\n   someMethod() {\n      var player = this.getFirst();\n      player.getB();\n   }\n}\n</code></pre>\n"}], "owner": {"reputation": 108, "user_id": 515357, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d82061a125fbc96f4ddb0630d54aefa4?s=128&d=identicon&r=PG", "display_name": "Emilio", "link": "https://stackoverflow.com/users/515357/emilio"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 59, "favorite_count": 0, "accepted_answer_id": 28968589, "answer_count": 1, "score": 0, "last_activity_date": 1426069699, "creation_date": 1426002273, "question_id": 28968031, "link": "https://stackoverflow.com/questions/28968031/typescript-parametric-collection-and-inheritance", "title": "TypeScript: Parametric collection and inheritance", "body": "<p>I'm migrating a codebase from JS to TypeScript. I'm having some trouble designing a situation like this:</p>\n\n<p>Suppose a Room class:</p>\n\n<pre><code>class Room {\n   protected playersById : PlayerDict&lt;Player&gt;;\n\n   getIds() {\n      _.map(this.playersById, (p : Player) =&gt; { return p.getId() })\n   }\n\n   getFirst() {\n      return _.first(this.playersById);\n   }\n}\n</code></pre>\n\n<p>And a subclass of Room called RoomGame</p>\n\n<pre><code>class RoomGame extends Room {\n   protected playersById : PlayerDict&lt;PlayerGame&gt;;\n\n   someMethod() {\n      var player = this.getFirst();\n      player.getB(); // Error because player if of type `Player` not `PlayerGame`\n   }\n}\n</code></pre>\n\n<p>How Can I resolve this situation on <code>someMethod</code> where what I want is the first item of the collection <code>playersById</code> of type <code>PlayerGame</code>. I tried to use Generic Classes but if I do <code>Room&lt;GenericType&gt;</code> I can't write functions like <code>getIds</code> on parent class  Room (because <code>p.getId()</code> is unknown for the compiler because the missing type info). </p>\n\n<p>Minimal example with all classes here <a href=\"http://pastebin.com/fL4JcGLj\" rel=\"nofollow\">http://pastebin.com/fL4JcGLj</a></p>\n\n<p>Thanks!</p>\n"}, {"tags": ["javascript", "angularjs", "typescript", "atscript"], "comments": [{"owner": {"reputation": 3537, "user_id": 326807, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/EQtEs.jpg?s=128&g=1", "display_name": "Reporter", "link": "https://stackoverflow.com/users/326807/reporter"}, "edited": false, "score": 5, "creation_date": 1425982461, "post_id": 28960934, "comment_id": 46174091, "body": "Have you read the tooltips of both tags? atscript is now a part of typescript."}, {"owner": {"reputation": 2417, "user_id": 1071526, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/fXuba.png?s=128&g=1", "display_name": "mfeineis", "link": "https://stackoverflow.com/users/1071526/mfeineis"}, "edited": false, "score": 10, "creation_date": 1425983720, "post_id": 28960934, "comment_id": 46174852, "body": "<a href=\"http://blogs.msdn.com/b/typescript/archive/2015/03/05/angular-2-0-built-on-typescript.aspx\" rel=\"nofollow noreferrer\">AtScript is gone - long live TypeScript</a>"}, {"owner": {"reputation": 10107, "user_id": 142191, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/aqN2A.png?s=128&g=1", "display_name": "Ali Habibzadeh", "link": "https://stackoverflow.com/users/142191/ali-habibzadeh"}, "edited": false, "score": 1, "creation_date": 1425986365, "post_id": 28960934, "comment_id": 46176568, "body": "<a href=\"http://en.wikipedia.org/wiki/AtScript\" rel=\"nofollow noreferrer\">en.wikipedia.org/wiki/AtScript</a>"}, {"owner": {"reputation": 23145, "user_id": 2788872, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a2616878b8bfb95d8fbb8a63ad18d729?s=128&d=identicon&r=PG&f=1", "display_name": "John Weisz", "link": "https://stackoverflow.com/users/2788872/john-weisz"}, "reply_to_user": {"reputation": 2417, "user_id": 1071526, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/fXuba.png?s=128&g=1", "display_name": "mfeineis", "link": "https://stackoverflow.com/users/1071526/mfeineis"}, "edited": false, "score": 0, "creation_date": 1484839610, "post_id": 28960934, "comment_id": 70683823, "body": "@mfeineis -- <i>&quot;AtScript is gone&quot;</i> -- Thank you, exactly the clarification I was looking for."}], "answers": [{"tags": [], "owner": {"reputation": 30803, "user_id": 97614, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/343f4aabd790030a01f5f1510218bb7e?s=128&d=identicon&r=PG", "display_name": "Sam Holder", "link": "https://stackoverflow.com/users/97614/sam-holder"}, "is_accepted": false, "score": 6, "last_activity_date": 1425982673, "creation_date": 1425982673, "answer_id": 28961064, "question_id": 28960934, "link": "https://stackoverflow.com/questions/28960934/what-is-difference-between-typescript-and-atscript/28961064#28961064", "title": "What is difference between TypeScript and AtScript", "body": "<p>As I understand it the intention was <a href=\"https://docs.google.com/document/d/11YUzC-1d0V1-Q3V0fQ7KSit97HnZoKVygDxpWzEYW0U/edit\" rel=\"noreferrer\">that ATScript will be a superset of TypeScript</a> which will add some additional features around reflection and metadata.</p>\n\n<p>It was <a href=\"http://sdtimes.com/google-microsoft-combine-typescript-atscript-angular-2/\" rel=\"noreferrer\">recently announced</a> that <a href=\"http://blogs.msdn.com/b/somasegar/archive/2015/03/05/typescript-lt-3-angular.aspx\" rel=\"noreferrer\">google and microsoft have been working together</a> and that ATScript and Typescript will be merged moving forward.</p>\n"}, {"comments": [{"owner": {"reputation": 4248, "user_id": 1044208, "user_type": "registered", "accept_rate": 47, "profile_image": "https://www.gravatar.com/avatar/4cbcf8f0354c7cf629e579751ed5f161?s=128&d=identicon&r=PG", "display_name": "virender", "link": "https://stackoverflow.com/users/1044208/virender"}, "edited": false, "score": 0, "creation_date": 1425983677, "post_id": 28961376, "comment_id": 46174827, "body": "AtScript+TypeScript =Angular 2 ?"}, {"owner": {"reputation": 3422, "user_id": 557821, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dbbcbe575b8141b309e59ac36492d777?s=128&d=identicon&r=PG", "display_name": "AhmadAssaf", "link": "https://stackoverflow.com/users/557821/ahmadassaf"}, "reply_to_user": {"reputation": 4248, "user_id": 1044208, "user_type": "registered", "accept_rate": 47, "profile_image": "https://www.gravatar.com/avatar/4cbcf8f0354c7cf629e579751ed5f161?s=128&d=identicon&r=PG", "display_name": "virender", "link": "https://stackoverflow.com/users/1044208/virender"}, "edited": false, "score": 2, "creation_date": 1425983743, "post_id": 28961376, "comment_id": 46174869, "body": "Angular has been using its own AtScript superset of Microsoft\u2019s TypeScript for a while now.  Angular 2 will be written in TypeScript and developers will be able to write their Angular 2 applications in this language,too."}], "tags": [], "owner": {"reputation": 3422, "user_id": 557821, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dbbcbe575b8141b309e59ac36492d777?s=128&d=identicon&r=PG", "display_name": "AhmadAssaf", "link": "https://stackoverflow.com/users/557821/ahmadassaf"}, "is_accepted": false, "score": 16, "last_activity_date": 1425983570, "creation_date": 1425983570, "answer_id": 28961376, "question_id": 28960934, "link": "https://stackoverflow.com/questions/28960934/what-is-difference-between-typescript-and-atscript/28961376#28961376", "title": "What is difference between TypeScript and AtScript", "body": "<p>Rather than create another new programming language\u2014Google has already done that with Dart\u2014AtScript is designed to run on top of not only ECMAScript 5 and the upcoming ECMAScript 6, but atop Microsoft\u2019s superset TypeScript language as well. The goal of AtScript is to make type annotation data available at runtime, also known as type introspection, in an effort to enhance JavaScript with type, field and metadata annotations.\n<img src=\"https://i.stack.imgur.com/TXJrG.png\" alt=\"enter image description here\">\nReferences</p>\n\n<ul>\n<li><a href=\"http://sdtimes.com/atscript-googles-new-superset-javascript-runtime/\" rel=\"noreferrer\">http://sdtimes.com/atscript-googles-new-superset-javascript-runtime/</a></li>\n<li><a href=\"http://techcrunch.com/2015/03/05/microsoft-and-google-collaborate-on-typescript-hell-has-not-frozen-over-yet\" rel=\"noreferrer\">http://techcrunch.com/2015/03/05/microsoft-and-google-collaborate-on-typescript-hell-has-not-frozen-over-yet</a></li>\n</ul>\n"}], "owner": {"reputation": 4248, "user_id": 1044208, "user_type": "registered", "accept_rate": 47, "profile_image": "https://www.gravatar.com/avatar/4cbcf8f0354c7cf629e579751ed5f161?s=128&d=identicon&r=PG", "display_name": "virender", "link": "https://stackoverflow.com/users/1044208/virender"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 9334, "favorite_count": 3, "closed_date": 1425995377, "answer_count": 2, "score": 10, "last_activity_date": 1425983570, "creation_date": 1425982312, "question_id": 28960934, "link": "https://stackoverflow.com/questions/28960934/what-is-difference-between-typescript-and-atscript", "closed_reason": "Opinion-based", "title": "What is difference between TypeScript and AtScript", "body": "<p>As my knowledge TypeScript Developed by Microsoft and Used for dynamically generate JavaScript.</p>\n\n<p>I want know that What is difference between TypeScript and AtScript. Which one is better to learn for JavaScript programmer.</p>\n"}, {"tags": ["visual-studio-2013", "typescript", "intellisense"], "answers": [{"comments": [{"owner": {"reputation": 497, "user_id": 1235106, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/BYDja.jpg?s=128&g=1", "display_name": "Kevin", "link": "https://stackoverflow.com/users/1235106/kevin"}, "edited": false, "score": 1, "creation_date": 1426076121, "post_id": 28984461, "comment_id": 46221179, "body": "This feature is part of TypeScript 1.5 and not yet released for Visual Studio 2013. See roadmap.   Like John is telling in the article, &quot;This change should ship with TypeScript 1.5 (hopefully) for those using Visual Studio.&quot;"}, {"owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "reply_to_user": {"reputation": 497, "user_id": 1235106, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/BYDja.jpg?s=128&g=1", "display_name": "Kevin", "link": "https://stackoverflow.com/users/1235106/kevin"}, "edited": false, "score": 0, "creation_date": 1426084885, "post_id": 28984461, "comment_id": 46227541, "body": "Sure - other IDEs are already using this, so it is a quick catch up for Visual Studio."}, {"owner": {"reputation": 7260, "user_id": 86432, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/ac0f5806a57ad801fec9f5619763f667?s=128&d=identicon&r=PG", "display_name": "masonk", "link": "https://stackoverflow.com/users/86432/masonk"}, "edited": false, "score": 1, "creation_date": 1454617446, "post_id": 28984461, "comment_id": 58136942, "body": "One year on, VS2013 still doesn&#39;t honor tsconfig.json"}, {"owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "reply_to_user": {"reputation": 7260, "user_id": 86432, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/ac0f5806a57ad801fec9f5619763f667?s=128&d=identicon&r=PG", "display_name": "masonk", "link": "https://stackoverflow.com/users/86432/masonk"}, "edited": false, "score": 2, "creation_date": 1454659903, "post_id": 28984461, "comment_id": 58152768, "body": "@masonk VS2015 does, and so does Visual Studio Code. I think it would be a little unfair to expect every feature to be back-ported to older versions."}], "tags": [], "owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "is_accepted": false, "score": 2, "last_activity_date": 1426070684, "creation_date": 1426070684, "answer_id": 28984461, "question_id": 28959847, "link": "https://stackoverflow.com/questions/28959847/global-visual-studio-2013-typescript-flags/28984461#28984461", "title": "Global Visual Studio 2013 TypeScript Flags", "body": "<p>You can use a tsconfig file to set these... <a href=\"https://github.com/Microsoft/TypeScript/blob/master/src/compiler/tsconfig.json\" rel=\"nofollow\">as per this example</a> from the TypeScript project. This is described in good detail in <a href=\"http://blog.icanmakethiswork.io/2015/02/hey-tsconfigjson-where-have-you-been.html\" rel=\"nofollow\">John Reilly's tsconfig.json article</a>.</p>\n\n<pre><code>{\n    \"compilerOptions\": {\n        \"module\": \"commonjs\",\n        \"noImplicitAny\": true,\n        \"removeComments\": true,\n        \"preserveConstEnums\": true,\n        \"out\": \"../../built/local/tsc.js\",\n        \"sourceMap\": true\n    },\n    \"files\": [\n        \"core.ts\",\n        \"sys.ts\",\n        \"types.ts\",\n        \"scanner.ts\",\n        \"parser.ts\",\n        \"utilities.ts\",\n        \"binder.ts\",\n        \"checker.ts\",\n        \"emitter.ts\",\n        \"program.ts\",\n        \"commandLineParser.ts\",\n        \"tsc.ts\",\n        \"diagnosticInformationMap.generated.ts\"\n    ]\n}\n</code></pre>\n\n<p>The tsconfig file is designed to be a cross-IDE method of specifying this information - so it will only apply within an IDE that respects it - and it is part of <a href=\"https://github.com/Microsoft/TypeScript/pull/1692\" rel=\"nofollow\">this issue on GitHub</a>.</p>\n"}, {"tags": [], "owner": {"reputation": 497, "user_id": 1235106, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/BYDja.jpg?s=128&g=1", "display_name": "Kevin", "link": "https://stackoverflow.com/users/1235106/kevin"}, "is_accepted": false, "score": 1, "last_activity_date": 1426155494, "creation_date": 1426155494, "answer_id": 29007041, "question_id": 28959847, "link": "https://stackoverflow.com/questions/28959847/global-visual-studio-2013-typescript-flags/29007041#29007041", "title": "Global Visual Studio 2013 TypeScript Flags", "body": "<p>After reviewing my architectural approach, I came to the conclusion that writing TypeScript or any other compilable languages outside a project brings in issues like working with a build automation system.</p>\n\n<p>So I decided to create an empty project only for working with for example TypeScript, Sass or any other compilable language that I don't want in my main web project. </p>\n\n<p>It keeps the solution clean and maintainable.</p>\n\n<p>@SteveFenton, thanks for your answer and approach.</p>\n"}], "owner": {"reputation": 497, "user_id": 1235106, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/BYDja.jpg?s=128&g=1", "display_name": "Kevin", "link": "https://stackoverflow.com/users/1235106/kevin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3148, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1426155494, "creation_date": 1425978970, "question_id": 28959847, "link": "https://stackoverflow.com/questions/28959847/global-visual-studio-2013-typescript-flags", "title": "Global Visual Studio 2013 TypeScript Flags", "body": "<p>I am writing TypeScript in a solution folder as a solution item. TypeScript will be processed by a task defined in gulp and placed at the proper position within the web project, so that 'ts' files are not included.</p>\n\n<p>When trying to work with 'amd' and 'es6' features, Visual Studio IntelliSense doesn't understand those features unless specific flags are set like '--target' and '--module', the issue here is that I am not working within a project.</p>\n\n<p>I was thinking to fix this to set specific TypeScript flags at global level. </p>\n\n<p>So I started to look at the file 'Microsoft.TypeScript.Default.props' in folder 'C:\\Program Files (x86)\\MSBuild\\Microsoft\\VisualStudio\\v12.0\\TypeScript' and applied specific flag settings, but unfortunately this does not fix the issue.</p>\n\n<p>Does anyone know how to apply TypeScript flags at global (default) level?</p>\n"}, {"tags": ["node.js", "import", "typescript"], "answers": [{"tags": [], "owner": {"reputation": 10580, "user_id": 755393, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/73cfe2529feed18022473f2ba518b029?s=128&d=identicon&r=PG", "display_name": "David Rodrigues", "link": "https://stackoverflow.com/users/755393/david-rodrigues"}, "is_accepted": false, "score": 0, "last_activity_date": 1425961835, "creation_date": 1425961835, "answer_id": 28956199, "question_id": 28956198, "link": "https://stackoverflow.com/questions/28956198/typescript-and-node-and-importing/28956199#28956199", "title": "TypeScript and Node and importing", "body": "<p>Before I post it I found the solution. I was trying export interface on file <code>Dictionary.ts</code> like it:</p>\n\n<pre><code>export interface ... { ... }\n</code></pre>\n\n<p>But I need <code>export =</code> it. Like:</p>\n\n<pre><code>interface Name { ... }\nexport = Name;\n</code></pre>\n"}], "owner": {"reputation": 10580, "user_id": 755393, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/73cfe2529feed18022473f2ba518b029?s=128&d=identicon&r=PG", "display_name": "David Rodrigues", "link": "https://stackoverflow.com/users/755393/david-rodrigues"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1470, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1425961835, "creation_date": 1425961835, "question_id": 28956198, "link": "https://stackoverflow.com/questions/28956198/typescript-and-node-and-importing", "title": "TypeScript and Node and importing", "body": "<p>I'm trying to use <strong>TypeScript</strong> inside <strong>Node.js</strong> with <code>typescript-require</code>. So I init it like:</p>\n\n<pre><code>// index.js, line 1.\nrequire(\"typescript-require\")({ \"nodeLib\": true });\n</code></pre>\n\n<p>And so I load the <code>Main.ts</code> file. Like it:</p>\n\n<pre><code>// index.js, line 2.\nrequire(\"Main.ts\").init();\n</code></pre>\n\n<p>So I have a <code>Dictionary</code> interface:</p>\n\n<pre><code>// Main.ts, line 8.\ninterface Dictionary&lt;TValue&gt; {\n    [index: string]: TValue;\n}\n</code></pre>\n\n<p>When I put this code directly on <code>Main.ts</code> it run fine, like it:</p>\n\n<pre><code>// Main.ts, line 12.\nvar list: Dictionary&lt;number&gt; = {};\n</code></pre>\n\n<p>But I like to separate the <code>Dictionary</code> from <code>Main</code>. To allow others files use this interface without duplicate it. <strong>And here starts my problem.</strong> I don't know how I can do that. I tried a lot things, like use <code>reference</code> and <code>import require</code>, and I receive errors from all methods.</p>\n\n<pre><code>/// Without any import, I get an obvious error; or,\n/// &lt;reference path=\"Dictionary\" /&gt;; or,\n/// &lt;reference path=\"Dictionary.ts\" /&gt;; or,\n/// &lt;reference path=\"./Dictionary.ts\" /&gt;; or,\nimport Dictionary = require(\"Dictionary\");\n&gt;&gt; Main.ts(6,18): error TS2304: Cannot find name 'Dictionary'.\n\nimport Dictionary = require(\"Dictionary.ts\");\n&gt;&gt; Main.ts(1,29): error TS2304: Cannot find name 'Dictionary'.\n&gt;&gt; Main.ts(6,18): error TS2315: Type 'any' is not generic.\n</code></pre>\n\n<p>In all cases, seems that <code>Main.ts</code> doesn't include the file correctly, so I can't reuse that. So I'm forgetting something?</p>\n"}, {"tags": ["angularjs", "typescript"], "comments": [{"owner": {"reputation": 127336, "user_id": 283366, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9ad213d8adabe4b64c2d53c5e0e3cab4?s=128&d=identicon&r=PG", "display_name": "Phil", "link": "https://stackoverflow.com/users/283366/phil"}, "edited": false, "score": 0, "creation_date": 1425954180, "post_id": 28955106, "comment_id": 46163749, "body": "Angular doesn&#39;t seem to know about your <code>UserService</code> provider"}, {"owner": {"reputation": 12299, "user_id": 369759, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/8061d4c92db9a6f764b5fa8f75fd59e7?s=128&d=identicon&r=PG", "display_name": "ses", "link": "https://stackoverflow.com/users/369759/ses"}, "reply_to_user": {"reputation": 127336, "user_id": 283366, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9ad213d8adabe4b64c2d53c5e0e3cab4?s=128&d=identicon&r=PG", "display_name": "Phil", "link": "https://stackoverflow.com/users/283366/phil"}, "edited": false, "score": 0, "creation_date": 1425954429, "post_id": 28955106, "comment_id": 46163791, "body": "Yeah. Usually it happens when I forget to include service file in index.html for plain js/angular. But in this case, playing with typescript, I gave up."}, {"owner": {"reputation": 18497, "user_id": 1501926, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/4bf63da3cad700bd1a604e96b166866e?s=128&d=identicon&r=PG", "display_name": "floribon", "link": "https://stackoverflow.com/users/1501926/floribon"}, "edited": false, "score": 0, "creation_date": 1425954477, "post_id": 28955106, "comment_id": 46163806, "body": "Does your <code>UserService</code> have a dependency on the <code>UserDetailController </code> controller? It shouldn&#39;t"}, {"owner": {"reputation": 127336, "user_id": 283366, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9ad213d8adabe4b64c2d53c5e0e3cab4?s=128&d=identicon&r=PG", "display_name": "Phil", "link": "https://stackoverflow.com/users/283366/phil"}, "reply_to_user": {"reputation": 18497, "user_id": 1501926, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/4bf63da3cad700bd1a604e96b166866e?s=128&d=identicon&r=PG", "display_name": "floribon", "link": "https://stackoverflow.com/users/1501926/floribon"}, "edited": false, "score": 0, "creation_date": 1425954616, "post_id": 28955106, "comment_id": 46163842, "body": "@floribon no, you read those dependency chains as <i>&quot;is a dependency of&quot;</i>, ie <code>UserServiceProvider</code> is a dependency of <code>UserService</code> is a dependency of <code>UserDetailsController</code>"}], "answers": [{"comments": [{"owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "edited": false, "score": 0, "creation_date": 1425961584, "post_id": 28955428, "comment_id": 46165464, "body": "Your edit answer is correct : <a href=\"https://github.com/Sergey80/angular_typescript_samples/blob/master/js/services/user.service.ts#L44\" rel=\"nofollow noreferrer\">github.com/Sergey80/angular_typescript_samples/blob/master/j&zwnj;&#8203;s/&hellip;</a>"}, {"owner": {"reputation": 12299, "user_id": 369759, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/8061d4c92db9a6f764b5fa8f75fd59e7?s=128&d=identicon&r=PG", "display_name": "ses", "link": "https://stackoverflow.com/users/369759/ses"}, "edited": false, "score": 0, "creation_date": 1425991918, "post_id": 28955428, "comment_id": 46180085, "body": "This   &#39;angular            .module(&#39;app.core.services&#39;)            .service(&#39;app.core.services.UserService&#39;, UserService)&#39;; does not work either"}], "tags": [], "owner": {"reputation": 276, "user_id": 1055610, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d159a3a17b8cc87d16e4225c1b84a588?s=128&d=identicon&r=PG", "display_name": "Paul", "link": "https://stackoverflow.com/users/1055610/paul"}, "is_accepted": false, "score": 1, "last_activity_date": 1425960649, "last_edit_date": 1425960649, "creation_date": 1425956441, "answer_id": 28955428, "question_id": 28955106, "link": "https://stackoverflow.com/questions/28955106/typescript-angular-unknown-provider-by-static-inject-customservicename/28955428#28955428", "title": "TypeScript Angular - Unknown provider by static $inject [&#39;customServiceName&#39;]", "body": "<p>Try upper casing the \"U\" in UserService in the constructor.  When angular goes to inject, it just does a match on the name of the service, and it matches case.</p>\n\n<p><strong>EDIT</strong></p>\n\n<p>Just realized you're using $inject, I'm leaving the first response up in case some others find it.</p>\n\n<p>You didn't show us the code that registers the service, but that's the next culprit, usually.  I'd guess you're registering it as 'UserService', not 'app.core.services.UserService', or else you're doing an App.controller() instead of App.service() registration.  Those are the other two major culprits that come to mind.</p>\n"}, {"tags": [], "owner": {"reputation": 2038, "user_id": 1996443, "user_type": "registered", "accept_rate": 52, "profile_image": "https://i.stack.imgur.com/SX8uf.jpg?s=128&g=1", "display_name": "Pranay Dutta", "link": "https://stackoverflow.com/users/1996443/pranay-dutta"}, "is_accepted": false, "score": 0, "last_activity_date": 1426998880, "creation_date": 1426998880, "answer_id": 29191037, "question_id": 28955106, "link": "https://stackoverflow.com/questions/28955106/typescript-angular-unknown-provider-by-static-inject-customservicename/29191037#29191037", "title": "TypeScript Angular - Unknown provider by static $inject [&#39;customServiceName&#39;]", "body": "<p>you are writing the whole namespace to inject a service but there is neat way in which i do</p>\n\n<pre><code>    module portal {\n      var app =angular.module('fooModule',[]);\n          app.service(services);\n          app.controller(controllers);\n\n    }\n\n    module portal.services {\n\n       //all your services will go under this namespace\n      export class fooService{\n              //service body here\n           }\n    }\n\n\n     module portal.controller{\n\n      export class UserDetailController implements IUserDetailScope {\n\n          static $inject = ['UserService'];                                 \n\n         constructor(userService: potal.services.IUserService) {\n\n      }\n     }\n</code></pre>\n"}], "owner": {"reputation": 12299, "user_id": 369759, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/8061d4c92db9a6f764b5fa8f75fd59e7?s=128&d=identicon&r=PG", "display_name": "ses", "link": "https://stackoverflow.com/users/369759/ses"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1150, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1426998880, "creation_date": 1425954014, "last_edit_date": 1425956752, "question_id": 28955106, "link": "https://stackoverflow.com/questions/28955106/typescript-angular-unknown-provider-by-static-inject-customservicename", "title": "TypeScript Angular - Unknown provider by static $inject [&#39;customServiceName&#39;]", "body": "<p>In this <a href=\"https://github.com/Sergey80/angular_typescript_samples/blob/master/js/core/UserDetailController.ts\" rel=\"nofollow\">the repo</a></p>\n\n<p>In the controller, I'm trying to inject the <code>UserService</code>:</p>\n\n<pre><code> class UserDetailController implements IUserDetailScope {\n\n        static $inject = ['app.core.services.UserService'];              // static injection\n\n        constructor(userService: app.core.services.IUserService) {\n</code></pre>\n\n<p>But it fails on the browser' console with: </p>\n\n<blockquote>\n  <p>Unknown provider: app.core.services.UserServiceProvider &lt;-\n  app.core.services.UserService &lt;- UserDetailController</p>\n</blockquote>\n\n<p>Could you say why?</p>\n"}, {"tags": ["generics", "functional-programming", "typescript"], "answers": [{"comments": [{"owner": {"reputation": 41, "user_id": 501982, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c8de9188e1359c53807d1d22992afbd8?s=128&d=identicon&r=PG", "display_name": "Mark Gibson", "link": "https://stackoverflow.com/users/501982/mark-gibson"}, "edited": false, "score": 0, "creation_date": 1425975896, "post_id": 28954254, "comment_id": 46170486, "body": "I&#39;m trying to write the type specification for a higher-order function that returns a function which has the exact same argument types as the function passed into the higher-order function. The higher-order function doesn&#39;t care what the actual args are, it just needs to specify that the function it returns has the same args."}, {"owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "reply_to_user": {"reputation": 41, "user_id": 501982, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c8de9188e1359c53807d1d22992afbd8?s=128&d=identicon&r=PG", "display_name": "Mark Gibson", "link": "https://stackoverflow.com/users/501982/mark-gibson"}, "edited": false, "score": 0, "creation_date": 1425976088, "post_id": 28954254, "comment_id": 46170557, "body": "@MarkGibson <code>type specification for a higher-order function</code> =&gt;  <code>type specification == F</code> ,  <code>higher-order function == F</code> right?"}, {"owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "reply_to_user": {"reputation": 41, "user_id": 501982, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c8de9188e1359c53807d1d22992afbd8?s=128&d=identicon&r=PG", "display_name": "Mark Gibson", "link": "https://stackoverflow.com/users/501982/mark-gibson"}, "edited": false, "score": 0, "creation_date": 1425976695, "post_id": 28954254, "comment_id": 46170855, "body": "@MarkGibson is this what you are asking : <a href=\"https://github.com/Microsoft/TypeScript/issues/2284\" rel=\"nofollow noreferrer\">github.com/Microsoft/TypeScript/issues/2284</a> ?"}, {"owner": {"reputation": 41, "user_id": 501982, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c8de9188e1359c53807d1d22992afbd8?s=128&d=identicon&r=PG", "display_name": "Mark Gibson", "link": "https://stackoverflow.com/users/501982/mark-gibson"}, "edited": false, "score": 0, "creation_date": 1425977646, "post_id": 28954254, "comment_id": 46171372, "body": "No, the function returned by the higher-order function may have a different return type to that passed in, the only commonality is their arguments. I&#39;ll add an example to my question."}, {"owner": {"reputation": 41, "user_id": 501982, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c8de9188e1359c53807d1d22992afbd8?s=128&d=identicon&r=PG", "display_name": "Mark Gibson", "link": "https://stackoverflow.com/users/501982/mark-gibson"}, "edited": false, "score": 0, "creation_date": 1425985715, "post_id": 28954254, "comment_id": 46176136, "body": "Ah, thanks @basarat, i see where you are coming from now, but as you say its the capturing of <i>just the arguments</i> that&#39;s causing my headache."}], "tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": false, "score": 0, "last_activity_date": 1425982330, "last_edit_date": 1425982330, "creation_date": 1425947790, "answer_id": 28954254, "question_id": 28953366, "link": "https://stackoverflow.com/questions/28953366/how-to-parameterise-a-functions-argument-tuple-in-typescript/28954254#28954254", "title": "How to parameterise a functions argument tuple in Typescript", "body": "<blockquote>\n  <p>Function 'F' takes function 'a' which has a set of parameters 'x'. Function 'F' returns a new function which has exactly the same set of args as function 'a'.</p>\n</blockquote>\n\n<p>The specification is a bit unclear, but based on my understanding of what you meant, Here is a sample</p>\n\n<pre><code>// Function 'F' takes function 'a' which has a set of parameters 'x'\n// and returns a new function which has exactly the same set of args as function 'a'\nfunction F&lt;A extends Function&gt;(a:A):A{\n    return a;\n}\n\nvar foo = F(function(a:number,b:number):void{});\n\nfoo (1,3); // okay \nfoo(1); // ERROR\n</code></pre>\n\n<p><strong>UPDATE</strong></p>\n\n<p>An example for your use case: </p>\n\n<pre><code>function f&lt;A extends Function&gt;(a:A):A {\n    var newFunc = (...x:any[]) =&gt; {\n        console.log('('+x.join(',')+') =&gt; ', a.apply(undefined, x));\n        return null;\n    }\n    return &lt;any&gt;newFunc;\n}\n\nfunction a(j:string, k:number): boolean {\n    return j === String(k);\n}\n\nvar b = f(a);\n\nb(\"1\", 1);\nb(\"a\", 2);\nb('123','123'); // ERROR\n</code></pre>\n\n<p>Note: We've capture both the arguments <em>and</em> the return type. I don't see a way to capture <em>just the arguments</em>. </p>\n"}, {"tags": [], "owner": {"reputation": 11, "user_id": 5980945, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2ed627183703ecbd363cd6e44a2f2ed5?s=128&d=identicon&r=PG&f=1", "display_name": "Rora", "link": "https://stackoverflow.com/users/5980945/rora"}, "is_accepted": false, "score": 1, "last_activity_date": 1456411492, "creation_date": 1456411492, "answer_id": 35630464, "question_id": 28953366, "link": "https://stackoverflow.com/questions/28953366/how-to-parameterise-a-functions-argument-tuple-in-typescript/35630464#35630464", "title": "How to parameterise a functions argument tuple in Typescript", "body": "<p>To wrap a function with another that has different return type, one hacky trick is possible with overloading:</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>function wrap&lt;R&gt;(fn0: ()=&gt; any, p:(f,a)=&gt;R): () =&gt; R;\r\nfunction wrap&lt;R,T&gt;(fn1: (t:T)=&gt; any, p:(f,a)=&gt;R): (t:T) =&gt; R;\r\nfunction wrap&lt;R, T, U&gt;(fn2: (t:T, u:U)=&gt; any, p:(f,a)=&gt;R): (t:T,u:U) =&gt; R;\r\nfunction wrap&lt;R, T, U, V&gt;(fn3: (t:T, u:U, v:V)=&gt; any, p:(f,a)=&gt;R): (t:T,u:U, v:V) =&gt; R;\r\nfunction wrap&lt;R, T, U, V, X&gt;(fn4: (t:T, u:U, v:V, x:X)=&gt; any, p:(f,a)=&gt;R): (t:T,u:U, v:V, x:X) =&gt; R;\r\n// ...\r\nfunction wrap&lt;R&gt;(fn: Function, proc:Function):Function {\r\n\treturn (...args) =&gt; proc(fn, args);\r\n}\r\n\r\n// wrap is called with two functions fn and proc\r\n// result is a function with argument types from fn and return type of proc \r\n\r\nfunction serialize(fn, args):string {\r\n  return JSON.stringify(fn(...args))\r\n}\r\n\r\nfunction foo(a:number,b:string) {\r\n  return true;\r\n}\r\n\r\nvar wrapped = wrap(foo,serialize)\r\n// type is (a:number,b:string) =&gt; string</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p>Be careful, it will work only for functions with limited number of arguments.</p>\n"}, {"tags": [], "owner": {"reputation": 241, "user_id": 497116, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/fa81c823a40706c411cf2b967b909bcd?s=128&d=identicon&r=PG", "display_name": "Zalastax", "link": "https://stackoverflow.com/users/497116/zalastax"}, "is_accepted": false, "score": 0, "last_activity_date": 1469716307, "creation_date": 1469716307, "answer_id": 38639384, "question_id": 28953366, "link": "https://stackoverflow.com/questions/28953366/how-to-parameterise-a-functions-argument-tuple-in-typescript/38639384#38639384", "title": "How to parameterise a functions argument tuple in Typescript", "body": "<p>It's currently not possible to express this in the TypeScript type system. It's a long standing issue which you can follow on <a href=\"https://github.com/Microsoft/TypeScript/issues/212\" rel=\"nofollow\">https://github.com/Microsoft/TypeScript/issues/212</a> and <a href=\"https://github.com/Microsoft/TypeScript/issues/5453\" rel=\"nofollow\">https://github.com/Microsoft/TypeScript/issues/5453</a></p>\n"}], "owner": {"reputation": 41, "user_id": 501982, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c8de9188e1359c53807d1d22992afbd8?s=128&d=identicon&r=PG", "display_name": "Mark Gibson", "link": "https://stackoverflow.com/users/501982/mark-gibson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3054, "favorite_count": 0, "answer_count": 3, "score": 2, "last_activity_date": 1469716307, "creation_date": 1425942313, "last_edit_date": 1425979944, "question_id": 28953366, "link": "https://stackoverflow.com/questions/28953366/how-to-parameterise-a-functions-argument-tuple-in-typescript", "title": "How to parameterise a functions argument tuple in Typescript", "body": "<p>Using Typescript 1.4, say I have a higher-order function with the signature:</p>\n\n<pre><code>interface F&lt;A,B&gt; {\n    (a: (...x:any[]) =&gt; A): (...x:any[]) =&gt; B\n}\n</code></pre>\n\n<p>Function 'F' takes function 'a' which has a set of parameters 'x'. Function 'F' returns a new function which has exactly the same set of args as function 'a'.</p>\n\n<p>I've been trying to find a way to express this in Typescript, but i'm coming up short. For example:</p>\n\n<pre><code>interface F&lt;X extends Array&lt;any&gt;,A,B&gt; {\n    (a: (...x:X) =&gt; A): (...x:X) =&gt; B\n}\n</code></pre>\n\n<p>the compiler just complains with: <code>error TS2370: A rest parameter must be of an array type.</code></p>\n\n<p>Although that doesn't feel right anyway, even if it did compile. I guess i'd really need something like:</p>\n\n<pre><code>interface F&lt;X extends Tuple,A,B&gt; {\n    (a: (...x:X) =&gt; A): (...x:X) =&gt; B\n}\n</code></pre>\n\n<p>Anyone know if this kind of thing is even possible with Typescript currently (1.4 at time of writing)? or any suggestions?</p>\n\n<hr>\n\n<p><strong>Example:</strong></p>\n\n<p><em>(NOTE: This is not my actual use-case, i'm only using logging here as a simple example - please don't focus on that aspect)</em></p>\n\n<pre><code>// a higher-order function that takes any function and\n// returns a new function which takes the same args\n// passing them to the original fn and logging the args along with the result\n\nfunction f(a:(...x:any[]) =&gt; any): (...x:any[]) =&gt; void {\n    return (...x:any[]) =&gt; {\n        console.log('('+x.join(',')+') =&gt; ', a.apply(undefined, x));\n    }\n}\n\nfunction a(j:string, k:number): boolean {\n    return j === String(k);\n}\n\nvar b = f(a);\n\nb(\"1\", 1);\nb(\"a\", 2);\n</code></pre>\n\n<p>console output:</p>\n\n<pre><code>(1,1) =&gt;  true\n(a,2) =&gt;  false\n</code></pre>\n\n<p>So this works, but the derived function 'b' has the implied signature of:</p>\n\n<pre><code>(...x:any[]) =&gt; void\n</code></pre>\n\n<p>ideally i'd like it to have the same arguments as function 'a' ie:</p>\n\n<pre><code>(j: string, k: number) =&gt; void\n</code></pre>\n\n<p>I know I could explicitly define that, but it's very verbose and not at all ideal, kind of defeats the point of having the strong typing in the first place:</p>\n\n<pre><code>var b: (j:string, k:number) =&gt; void = f(a);\n</code></pre>\n"}, {"tags": ["typescript", "undefined", "extending"], "answers": [{"comments": [{"owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "edited": false, "score": 1, "creation_date": 1425937501, "post_id": 28952119, "comment_id": 46158358, "body": "Yes, use a function. About extending html element. It used to be a bad idea. Now it&#39;s consistent and accepted."}], "tags": [], "owner": {"reputation": 16, "user_id": 2105598, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/aacc5a3a477e5ca57a40ecb6bdd81efc?s=128&d=identicon&r=PG", "display_name": "Cy Brown", "link": "https://stackoverflow.com/users/2105598/cy-brown"}, "is_accepted": true, "score": 0, "last_activity_date": 1425936669, "creation_date": 1425936669, "answer_id": 28952119, "question_id": 28951125, "link": "https://stackoverflow.com/questions/28951125/extending-htmlelement-in-typescript/28952119#28952119", "title": "Extending HTMLElement in TypeScript", "body": "<p>That's because the lambda syntax you are using keeps the this value to the external this, by using a variable called _this, as you can see in the playground:\n<a href=\"http://past.is/wxBJm\" rel=\"nofollow\">http://past.is/wxBJm</a></p>\n\n<p>Since the lambda is not in a class, it is bound to the \"this\" that is global, here the window object.</p>\n\n<p>By using the function syntax, you keep the javascript behaviour, so this is bound to the object on the left hand side of the property access (dot notation).</p>\n\n<p>But I think you should not add methods to a class using directly the prototype in typescript.</p>\n"}], "owner": {"reputation": 851, "user_id": 3657925, "user_type": "registered", "accept_rate": 50, "profile_image": "https://graph.facebook.com/100004154013255/picture?type=large", "display_name": "DonO", "link": "https://stackoverflow.com/users/3657925/dono"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1239, "favorite_count": 0, "accepted_answer_id": 28952119, "answer_count": 1, "score": 1, "last_activity_date": 1425936669, "creation_date": 1425932800, "last_edit_date": 1425934249, "question_id": 28951125, "link": "https://stackoverflow.com/questions/28951125/extending-htmlelement-in-typescript", "title": "Extending HTMLElement in TypeScript", "body": "<p>Im trying to extend the HTMLElement using TypeScript. Below is my code which alerts undefined because \"this\" returns a window object, which seems right. How can I access the calling HTMLElement in a similar fashion?</p>\n\n<pre><code>interface HTMLElement {\n    setData(dataObject: any): void;\n}\n\nHTMLElement.prototype.setData = (dataObject: any) =&gt; {\n        alert(this.id); //Undefined\n        alert(this); //Window Object\n}\n\nvar data = { \"InHouse\": \"5\", \"BookedMtd\": \"105\" }\ndocument.getElementById(\"infobartemplate\").setData(data); \n</code></pre>\n\n<p>Update: Got it to work by changing the code to:</p>\n\n<pre><code>HTMLElement.prototype.setData = function (dataObject: any): void {\n        alert(this.id);\n} \n</code></pre>\n\n<p>Not sure what the difference is. I though It was the same.</p>\n"}, {"tags": ["visual-studio-2013", "tfs", "msbuild", "typescript", "typescript1.4"], "answers": [{"comments": [{"owner": {"reputation": 119030, "user_id": 16940, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/7fc2db839382b30434539fbc967c498e?s=128&d=identicon&r=PG", "display_name": "Simon_Weaver", "link": "https://stackoverflow.com/users/16940/simon-weaver"}, "edited": false, "score": 0, "creation_date": 1442741397, "post_id": 28948980, "comment_id": 53200447, "body": "v1.6 available here : <a href=\"http://blogs.msdn.com/b/typescript/archive/2015/09/16/announcing-typescript-1-6.aspx\" rel=\"nofollow noreferrer\">blogs.msdn.com/b/typescript/archive/2015/09/16/&hellip;</a>"}], "tags": [], "owner": {"reputation": 1924, "user_id": 1010029, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0bab394436a62c050f91e06681e0ba1b?s=128&d=identicon&r=PG", "display_name": "Jesan Fafon", "link": "https://stackoverflow.com/users/1010029/jesan-fafon"}, "is_accepted": true, "score": 6, "last_activity_date": 1425924820, "creation_date": 1425924820, "answer_id": 28948980, "question_id": 28948472, "link": "https://stackoverflow.com/questions/28948472/typescript-1-4-sdk-for-build-server/28948980#28948980", "title": "Typescript 1.4 SDK for build server?", "body": "<p>The Visual Studio add-in is also the stand alone Typescript 1.4 installer. </p>\n\n<p>You can get the installer <a href=\"https://visualstudiogallery.msdn.microsoft.com/2d42d8dc-e085-45eb-a30b-3f7d50d55304\">here</a>.</p>\n"}], "owner": {"reputation": 77031, "user_id": 44743, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/9af6bab469df2f4e1486c3a608446f3b?s=128&d=identicon&r=PG", "display_name": "recursive", "link": "https://stackoverflow.com/users/44743/recursive"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2499, "favorite_count": 0, "accepted_answer_id": 28948980, "answer_count": 1, "score": 4, "last_activity_date": 1425924820, "creation_date": 1425923083, "question_id": 28948472, "link": "https://stackoverflow.com/questions/28948472/typescript-1-4-sdk-for-build-server", "title": "Typescript 1.4 SDK for build server?", "body": "<p>I've updated to Visual Studio 2013 Update 4, which includes Typescript 1.4.  I've updated my project file with this, and everything works fine locally.</p>\n\n<pre><code>&lt;TypeScriptToolsVersion&gt;1.4&lt;/TypeScriptToolsVersion&gt;\n</code></pre>\n\n<p>However, the build server has not been updated with the Typescript 1.4 SDK.  Builds are now failing with this error message:</p>\n\n<blockquote>\n  <p>C:\\Program Files (x86)\\MSBuild\\Microsoft\\VisualStudio\\v12.0\\TypeScript\\Microsoft.TypeScript.targets (95): Your project file uses a different version of the TypeScript compiler and tools than is currently installed on this machine.  No compiler was found at C:\\Program Files (x86)\\Microsoft SDKs\\TypeScript\\1.4\\tsc.exe.  You may be able to fix this problem by changing the  element in your project file.</p>\n</blockquote>\n\n<p>Despite the existence of the VisualStudio folder referenced above, Visual Studio is not installed on this machine, and I'd prefer not to install it.  It seems I need to install the Typescript 1.4 SDK, but I can't find a stand-alone installer for it anywhere.  <a href=\"http://www.typescriptlang.org/#Download\" rel=\"nofollow\">http://www.typescriptlang.org/#Download</a> has npm and VS add-in downloads, but no stand-alone SDK.  </p>\n\n<p>This seems a little silly, but where can I get a typescript 1.4 SDK from?</p>\n"}, {"tags": ["javascript", "angularjs", "node.js", "intellij-idea", "typescript"], "answers": [{"tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": true, "score": 1, "last_activity_date": 1425937325, "creation_date": 1425937325, "answer_id": 28952289, "question_id": 28948410, "link": "https://stackoverflow.com/questions/28948410/intellij-idea-typescript-support-wrong-syntax-highlighting-or-wrong-ts-comp/28952289#28952289", "title": "IntelliJ IDEA - typescript support - wrong syntax highlighting (or wrong ts-compiler in use)", "body": "<blockquote>\n  <p>Q: How to know what v of typescript compiler IDE uses? And how to make that ts-file to be valid?</p>\n</blockquote>\n\n<p>There is a difference between the compiler and language service. The IntelliJ IDE has its own language service implementation. It needs to be updated for 1.4.1 (already done in beta channel). </p>\n\n<p>Either use an older definition (from the 1.3 branch on definitely typed) or use beta IntelliJ. </p>\n\n<p>It will still use your compiler so code will compile fine irrespective. </p>\n"}], "owner": {"reputation": 12299, "user_id": 369759, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/8061d4c92db9a6f764b5fa8f75fd59e7?s=128&d=identicon&r=PG", "display_name": "ses", "link": "https://stackoverflow.com/users/369759/ses"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 634, "favorite_count": 0, "accepted_answer_id": 28952289, "answer_count": 1, "score": 0, "last_activity_date": 1456884014, "creation_date": 1425922907, "last_edit_date": 1456884014, "question_id": 28948410, "link": "https://stackoverflow.com/questions/28948410/intellij-idea-typescript-support-wrong-syntax-highlighting-or-wrong-ts-comp", "title": "IntelliJ IDEA - typescript support - wrong syntax highlighting (or wrong ts-compiler in use)", "body": "<p>I use latest <code>IntelliJ IDEA</code> (14.0.3) with (embedded) <code>TypeScript</code>/<code>JS</code> Support.</p>\n\n<p>I Downloaded <a href=\"https://github.com/borisyankov/DefinitelyTyped/blob/master/angularjs/angular-route.d.ts\" rel=\"nofollow noreferrer\">this angular-route.d.ts file</a> to put to my project.</p>\n\n<p>And the IDE shows me the highlighting, that that syntax is wrong. </p>\n\n<p>I use Using <code>tsc v1.4.1</code> ts-compiler for my project. (not sure if <code>IDE</code> is aware of it though).</p>\n\n<p>Q: How to know what v of typescript compiler <code>IDE</code> uses? And how to make that ts-file to be valid?</p>\n\n<p>I've read this <a href=\"https://www.jetbrains.com/idea/help/typescript-support.html\" rel=\"nofollow noreferrer\">official doc</a>, but must be I missed something. As I understand the IDE should use that compiler I've installed as <code>nmp</code>-package. </p>\n\n<p>My project consists of <code>package.json</code>, <code>GruntFile.js</code> etc.. files - <code>nodejs</code>-like project.</p>\n\n<p>In overal the stuff from ts-files are resolved.. Like I can see and navigate to that file</p>\n\n<pre><code> function config($routeProvider: IRouteProvider): void {\n        $routeProvider\n            .when('/area11/stuff/newstuff', {\n                template: '&lt;div&gt;New Stuff&lt;/div&gt;',\n                controller: (): void =&gt; {},\n                controllerAs: 'vm'\n            });\n    }\n</code></pre>\n\n<p>So I can see/navigate to 'IRouteProvider' (which is defined in that highlighting file) from the IDE. This the project itself is set.. Just that little 'disappointment' with highlighting. </p>\n\n<p><img src=\"https://i.stack.imgur.com/cEy1i.jpg\" alt=\"enter image description here\"></p>\n"}, {"tags": ["javascript", "angularjs", "typescript"], "answers": [{"comments": [{"owner": {"reputation": 12299, "user_id": 369759, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/8061d4c92db9a6f764b5fa8f75fd59e7?s=128&d=identicon&r=PG", "display_name": "ses", "link": "https://stackoverflow.com/users/369759/ses"}, "edited": false, "score": 0, "creation_date": 1425929179, "post_id": 28950095, "comment_id": 46154172, "body": "so there is no version history, but commit history.. Like in here - by commits: <a href=\"https://github.com/DefinitelyTyped/tsd#tsdjson\" rel=\"nofollow noreferrer\">github.com/DefinitelyTyped/tsd#tsdjson</a> not as nice as it could be. Not like in package.json, bower.json - the dependencies by version. But now.. this question is more related to &#39;psd&#39;"}, {"owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "edited": false, "score": 2, "creation_date": 1425937065, "post_id": 28950095, "comment_id": 46158159, "body": "Old versions of popular live do get snapshoted. But we find there to be little community interest in maintaining them. E.g. Angular <a href=\"https://github.com/borisyankov/DefinitelyTyped/tree/master/angularjs/legacy\" rel=\"nofollow noreferrer\">github.com/borisyankov/DefinitelyTyped/tree/master/angularjs&zwnj;&#8203;/&hellip;</a> it is always best to use latest. You don&#39;t get bug fixes in JS or .d.ts otherwise."}], "tags": [], "owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "is_accepted": true, "score": 2, "last_activity_date": 1425928816, "creation_date": 1425928816, "answer_id": 28950095, "question_id": 28947379, "link": "https://stackoverflow.com/questions/28947379/typescript-d-ts-and-js-consistency/28950095#28950095", "title": "TypeScript d.ts and .js consistency", "body": "<blockquote>\n  <p>How do I know it is a proper definition?</p>\n</blockquote>\n\n<p>You use it and see if you come across a bug. Definitely Typed is open source and accepts issues and contributions so it is easy to remedy any errors in the definitions.</p>\n\n<p>In the case of Angular, the large community will typically result in fewer errors in the definitions as many people are already using them.</p>\n\n<blockquote>\n  <p>How do I know the <code>.d.ts</code> is consistent to its <code>.js</code> one?</p>\n</blockquote>\n\n<p>This is largely the same as above. This is a community endeavour, so there are many people updating type definitions to keep them correct. If you find a problem it is usually simple to solve (the type definition itself usually looks a lot like the API documentation for a library).</p>\n\n<blockquote>\n  <p>If I use an older version of Angular, how do I find the <code>.d.ts</code> file.</p>\n</blockquote>\n\n<p>You can see the history on GitHub, for example the <a href=\"https://github.com/borisyankov/DefinitelyTyped/commits/master/angularjs/angular.d.ts\" rel=\"nofollow\">angular.d.ts history</a>.</p>\n\n<p>You can usually see when the commits go in to update the library versions here.</p>\n"}], "owner": {"reputation": 12299, "user_id": 369759, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/8061d4c92db9a6f764b5fa8f75fd59e7?s=128&d=identicon&r=PG", "display_name": "ses", "link": "https://stackoverflow.com/users/369759/ses"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 215, "favorite_count": 0, "accepted_answer_id": 28950095, "answer_count": 1, "score": 1, "last_activity_date": 1425928816, "creation_date": 1425919518, "question_id": 28947379, "link": "https://stackoverflow.com/questions/28947379/typescript-d-ts-and-js-consistency", "title": "TypeScript d.ts and .js consistency", "body": "<p>Using these definitions:\n<a href=\"https://github.com/borisyankov/DefinitelyTyped\" rel=\"nofollow\">https://github.com/borisyankov/DefinitelyTyped</a></p>\n\n<p>So, say, I use angularJS 1.3.14, how to know for sure that there is proper definition for that particular angular version?</p>\n\n<p>Or how to know for sure that DefinitelyTyped *.d.ts file is consistent to its *.js one?</p>\n\n<p>Or If I use older version of AangularJS, how to find proper ts file?</p>\n"}, {"tags": ["typescript"], "comments": [{"owner": {"reputation": 1002, "user_id": 1059939, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/205c5682199886df752ae6f4ba5182e3?s=128&d=identicon&r=PG", "display_name": "user1059939", "link": "https://stackoverflow.com/users/1059939/user1059939"}, "edited": false, "score": 0, "creation_date": 1425904456, "post_id": 28931221, "comment_id": 46138544, "body": "Not an answer, just to point out that in d.ts files they are pretty awesome as either you used to be stuck with &quot;any&quot;. For example, if a property type was a string or a HTMLDivElement.  Plus you would need a ton of Overload soup depending on the library. This has all been cleaned up with union types.  Your question is great though because I never considered non-d.ts file usage and cannot see why they would be used."}], "answers": [{"tags": [], "owner": {"reputation": 15407, "user_id": 4386952, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2c4b129c5a5b3bd007ca390170d7fe0c?s=128&d=identicon&r=PG&f=1", "display_name": "Daniel Rosenwasser", "link": "https://stackoverflow.com/users/4386952/daniel-rosenwasser"}, "is_accepted": false, "score": 2, "last_activity_date": 1425856492, "creation_date": 1425856492, "answer_id": 28933037, "question_id": 28931221, "link": "https://stackoverflow.com/questions/28931221/whats-the-use-of-union-types-in-typescript/28933037#28933037", "title": "What&#39;s the use of union types in TypeScript?", "body": "<p>I don't think you can get a single answer for this; at the very least, union types handle many different use cases that enable users to write TypeScript in a manner similar to how they might write canonical JavaScript. Here's an attempt to explain anyway.</p>\n\n<p>When you have two types that are structurally (and ideally functionally) similar, one benefit is that you can use the intersection of properties that they share as a point of abstraction.</p>\n\n<p>In the cases where you have two types that are not structurally similar, but have parallels in how they their information can be treated, it can be useful for making a function for normalizing that information into a common abstracted form.</p>\n\n<p>As an example, ES6 tagged templates are very similar to call expressions:</p>\n\n<pre><code>f `hello ${ 123 } ${ 456 } world!`\n</code></pre>\n\n<p>The above tagged template desugars to something similar to the following:</p>\n\n<pre><code>var _t = [\"hello \", \" \", \" world!\"];\n_t.raw = [\"hello \", \" \", \" world!\"];\nf(_t, 123, 456);\n</code></pre>\n\n<p>You could imagine that in a compiler, it would be ideal if they could be treated equally to call expressions when convenient, but handled specially when the two are distinct enough. Let's try to model this:</p>\n\n<pre><code>interface TemplateExpression extends Expression {\n    // ...\n}\n\ninterface TaggedTemplateExpression extends Expression{\n    callTarget: Expression;\n    template: TemplateExpression;\n}\n\ninterface CallExpression extends Expression {\n    callTarget: Expression;\n    arguments: Expression[];\n}\n\ntype CallLikeExpression = CallExpression | TaggedTemplateExpression;\n\nfunction getEffectiveCallArguments(expr: CallLikeExpression): Expression[] {\n    if (expr.kind === SyntaxKind.CallExpression {\n        // ...\n    }\n    else {\n        // ...\n    }\n\n    // OR, if you don't want to have a tag,\n    // you could check expr's properties\n    if ((&lt;CallExpression&gt;expr).arguments) {\n        // treat as CallExpression\n    }\n    else {\n        // treat as TaggedTemplateExpression\n    }\n}\n</code></pre>\n\n<p>Both <code>CallExpression</code> and <code>TaggedTemplateExpression</code> have a <code>callTarget</code> in common, so you can always get the expression being invoked from a <code>CallLikeExpression</code> by just using the <code>callTarget</code> property.</p>\n\n<p>If you'd like to get the arguments that will be fed into call, you can extract it using <code>getEffectiveCallArguments</code> which is aware of how do deal with the differences between the two.</p>\n"}], "owner": {"reputation": 15873, "user_id": 139667, "user_type": "registered", "accept_rate": 36, "profile_image": "https://www.gravatar.com/avatar/e083e1865879535bb75306472b4ba5d0?s=128&d=identicon&r=PG&f=1", "display_name": "Trident D&#39;Gao", "link": "https://stackoverflow.com/users/139667/trident-dgao"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 594, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1425862074, "creation_date": 1425844834, "last_edit_date": 1425862074, "question_id": 28931221, "link": "https://stackoverflow.com/questions/28931221/whats-the-use-of-union-types-in-typescript", "title": "What&#39;s the use of union types in TypeScript?", "body": "<p>First off, there are no official guidelines (AFAIK as of March 8, 2015) on using this new feature of TypeScript called the union types. Well, I tried to find a way of using them myself.  It hasn't been easy. I am still struggling to find a place for union types in my code:</p>\n\n<ul>\n<li>they can't be used with interfaces since there is no reliable runtime check that would tell whether a value implements an interface</li>\n<li>they can't be used with generics due to issues with the type inference: <a href=\"https://github.com/Microsoft/TypeScript/issues/2264\" rel=\"nofollow\">https://github.com/Microsoft/TypeScript/issues/2264</a></li>\n</ul>\n\n<p>What is left?</p>\n\n<ul>\n<li>mixing primitives (destructuring via typeof)</li>\n<li>mixing classes (destructuring via instanceof)</li>\n</ul>\n\n<p>Am I right that those 2 are the only valid ways of consuming union types in TypeScript  at the moment?</p>\n\n<p>If so, are there any plans to extend their applicability?</p>\n\n<p>If no, what am I missing out?</p>\n"}, {"tags": ["node.js", "class", "npm", "typescript"], "comments": [{"owner": {"reputation": 1032, "user_id": 4216004, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/efe074828279087bf739ba50da9e6237?s=128&d=identicon&r=PG&f=1", "display_name": "Hugues Stefanski", "link": "https://stackoverflow.com/users/4216004/hugues-stefanski"}, "edited": false, "score": 0, "creation_date": 1425822654, "post_id": 28926603, "comment_id": 46110315, "body": "If it were me, I would only output js file(s) in the published package, and provide the .d.ts via <a href=\"https://github.com/borisyankov/DefinitelyTyped\" rel=\"nofollow noreferrer\">DefinitelyTyped</a>. As for generating declaration files (.d.ts), you can use the --declaration of the tsc command line."}], "answers": [{"tags": [], "owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "is_accepted": false, "score": 0, "last_activity_date": 1425841061, "creation_date": 1425841061, "answer_id": 28930555, "question_id": 28926603, "link": "https://stackoverflow.com/questions/28926603/typescript-import-class-from-another-npm-module/28930555#28930555", "title": "Typescript: Import Class from another npm module", "body": "<p>You need to ship the JavaScript file, because TypeScript files in your NPM package won't be compiled - but you can additionally ship the .d.ts (or even the .ts file) to provide type information to your consumers.</p>\n\n<p>This isn't a bad pattern to use for NuGet packages either - even though you can place the files into the target project.</p>\n"}], "owner": {"reputation": 5121, "user_id": 2304930, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/e0af93d717fcdf4f86137c2d2d559f20?s=128&d=identicon&r=PG", "display_name": "omer727", "link": "https://stackoverflow.com/users/2304930/omer727"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 457, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1425841061, "creation_date": 1425819115, "question_id": 28926603, "link": "https://stackoverflow.com/questions/28926603/typescript-import-class-from-another-npm-module", "title": "Typescript: Import Class from another npm module", "body": "<p>I'm working on node.js with npm. I've written a TS library and I want to use it in another project by doing npm install.\nI'm not sure what will should be the contents in my npm package:\nshould it be only .js, only .ts, or .js with additional declaration files (d.ts)?</p>\n\n<p>Furthermore if I'm using the third option, what exactly am I writing in the definition file? how exactly am I using it?I'm not sure what's the connection between d.ts and the actual javascript.\nI see a lot of different answers but most them didn't help me.</p>\n\n<p>Thanks,\n      Omer</p>\n"}, {"tags": ["node.js", "typescript"], "answers": [{"tags": [], "owner": {"reputation": 10580, "user_id": 755393, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/73cfe2529feed18022473f2ba518b029?s=128&d=identicon&r=PG", "display_name": "David Rodrigues", "link": "https://stackoverflow.com/users/755393/david-rodrigues"}, "is_accepted": false, "score": 0, "last_activity_date": 1425797945, "creation_date": 1425797945, "answer_id": 28923935, "question_id": 28923845, "link": "https://stackoverflow.com/questions/28923845/export-class-static-method/28923935#28923935", "title": "Export class static method", "body": "<p><strong>I found a good solution for me:</strong></p>\n\n<pre><code>class Help {\n    static show() { ... }\n}\n\nexport function show() { return Help.show.apply(this, arguments); }\n</code></pre>\n\n<p>But I think that is possible exists a native solution. Right?</p>\n"}, {"comments": [{"owner": {"reputation": 10580, "user_id": 755393, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/73cfe2529feed18022473f2ba518b029?s=128&d=identicon&r=PG", "display_name": "David Rodrigues", "link": "https://stackoverflow.com/users/755393/david-rodrigues"}, "edited": false, "score": 0, "creation_date": 1425840202, "post_id": 28925129, "comment_id": 46116449, "body": "Awesome! It&#39;s better than my own method. Thanks!"}, {"owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "reply_to_user": {"reputation": 10580, "user_id": 755393, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/73cfe2529feed18022473f2ba518b029?s=128&d=identicon&r=PG", "display_name": "David Rodrigues", "link": "https://stackoverflow.com/users/755393/david-rodrigues"}, "edited": false, "score": 0, "creation_date": 1425862366, "post_id": 28925129, "comment_id": 46123241, "body": "Thanks. Note you only need ` .apply` if you want to preserve <code>this</code> in a function. This is not required for static methods as <code>this</code> will not point to <i>some instance</i>. <code>this</code> preservation is need for member methods and typescript has good ways : <a href=\"https://www.youtube.com/watch?v=tvocUcbCupA\" rel=\"nofollow noreferrer\">youtube.com/watch?v=tvocUcbCupA</a>"}], "tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": true, "score": 4, "last_activity_date": 1425808242, "creation_date": 1425808242, "answer_id": 28925129, "question_id": 28923845, "link": "https://stackoverflow.com/questions/28923845/export-class-static-method/28925129#28925129", "title": "Export class static method", "body": "<p>An alternative solution: </p>\n\n<pre><code>class Help {\n    static show() {  }\n}\n\nvar show = Help.show;\nexport = show;\n</code></pre>\n\n<p>The limitation is by design. Stuff after <code>export =</code> needs to be an identifier. E.g. the following will not compile either: </p>\n\n<pre><code>var foo = {show:()=&gt;null}\nexport = foo.show;\n</code></pre>\n"}], "owner": {"reputation": 10580, "user_id": 755393, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/73cfe2529feed18022473f2ba518b029?s=128&d=identicon&r=PG", "display_name": "David Rodrigues", "link": "https://stackoverflow.com/users/755393/david-rodrigues"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2152, "favorite_count": 0, "accepted_answer_id": 28925129, "answer_count": 2, "score": 1, "last_activity_date": 1425808242, "creation_date": 1425796962, "question_id": 28923845, "link": "https://stackoverflow.com/questions/28923845/export-class-static-method", "title": "Export class static method", "body": "<p>Is possible I export a class static method on TypeScript to NodeJs? Example:</p>\n\n<pre><code>class Help {\n    static show() { ... }\n}\n\nexport = Help.show;\n</code></pre>\n\n<p>It returns it: </p>\n\n<pre><code>class.Help.ts(5,19): error TS1005: ';' expected.\n</code></pre>\n"}, {"tags": ["typescript"], "answers": [{"comments": [{"owner": {"reputation": 430, "user_id": 868528, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/14c2f9f673839d44c76a262b17568222?s=128&d=identicon&r=PG", "display_name": "Yourpalal", "link": "https://stackoverflow.com/users/868528/yourpalal"}, "edited": false, "score": 2, "creation_date": 1441474357, "post_id": 28920785, "comment_id": 52698365, "body": "You an still write arrow functions, since they will close over the <code>self</code> variable. <code>this</code> in the arrow functions will still be incorrectly typed, but at least you can save a few characters!"}], "tags": [], "owner": {"reputation": 17716, "user_id": 6722, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/2b31f1c54790d6cba8a63a3653a26c49?s=128&d=identicon&r=PG", "display_name": "Steve Cooper", "link": "https://stackoverflow.com/users/6722/steve-cooper"}, "is_accepted": false, "score": 0, "last_activity_date": 1425767269, "creation_date": 1425767269, "answer_id": 28920785, "question_id": 28920753, "link": "https://stackoverflow.com/questions/28920753/declaring-the-type-of-this-in-a-typescript-function/28920785#28920785", "title": "Declaring the type of &#39;this&#39; in a typescript function?", "body": "<p>I have a bit of an answer. I can do this;</p>\n\n<pre><code>var self = &lt;grunt.task.IMultiTask&lt;string&gt;&gt;this;\nself.files.forEach(function (f) {\n\n});\n</code></pre>\n\n<p>which works OK. It's gonna have consequences, like not being able to write arrow functions...</p>\n"}, {"tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": true, "score": 11, "last_activity_date": 1605155819, "last_edit_date": 1605155819, "creation_date": 1425768092, "answer_id": 28920916, "question_id": 28920753, "link": "https://stackoverflow.com/questions/28920753/declaring-the-type-of-this-in-a-typescript-function/28920916#28920916", "title": "Declaring the type of &#39;this&#39; in a typescript function?", "body": "<blockquote>\n<p>How do I tell TypeScript to consider this to be a different type</p>\n</blockquote>\n<p>You can do that by declaring a <code>this</code> parameter. For your use case I've added <code>this: {files:any[]}</code>:</p>\n<pre><code>grunt.registerMultiTask('clean', function(this: {files:any[]}) {\n    this.files.forEach(function(f) { Delete(f); });\n});\n</code></pre>\n<h1>More</h1>\n<ul>\n<li><a href=\"https://www.typescriptlang.org/docs/handbook/functions.html#this-parameters\" rel=\"noreferrer\">Official docs on <code>this</code> parameter</a></li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 6299, "user_id": 2014893, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/99ea6c53670ee672208131424e15cbc7?s=128&d=identicon&r=PG", "display_name": "Robert K. Bell", "link": "https://stackoverflow.com/users/2014893/robert-k-bell"}, "edited": false, "score": 8, "creation_date": 1532910495, "post_id": 41358367, "comment_id": 90136780, "body": "<a href=\"https://www.typescriptlang.org/docs/handbook/functions.html#this-parameters\" rel=\"nofollow noreferrer\">Here&#39;s the relevant documentation for the fake <code>this</code> parameter.</a>"}], "tags": [], "owner": {"reputation": 25033, "user_id": 1113002, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/CgW7b.png?s=128&g=1", "display_name": "Aleksey L.", "link": "https://stackoverflow.com/users/1113002/aleksey-l"}, "is_accepted": false, "score": 80, "last_activity_date": 1618118854, "last_edit_date": 1618118854, "creation_date": 1482914754, "answer_id": 41358367, "question_id": 28920753, "link": "https://stackoverflow.com/questions/28920753/declaring-the-type-of-this-in-a-typescript-function/41358367#41358367", "title": "Declaring the type of &#39;this&#39; in a typescript function?", "body": "<p>Now (from TS 2.0) you can specify function's <code>this</code> type by using <a href=\"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-0.html#specifying-the-type-of-this-for-functions\" rel=\"nofollow noreferrer\">fake this</a> parameter (should be the first one):</p>\n<pre><code>grunt.registerMultiTask('clean', function(this: SomeType) {\n    //...\n});\n</code></pre>\n<blockquote>\n<p><code>this</code> parameters are fake parameters that come first in the parameter list of a function</p>\n</blockquote>\n<p>More info <a href=\"https://www.typescriptlang.org/docs/handbook/2/functions.html#declaring-this-in-a-function\" rel=\"nofollow noreferrer\">here</a></p>\n"}, {"comments": [{"owner": {"reputation": 8576, "user_id": 802138, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/024ca42cf79ed90cd18eec585986629c?s=128&d=identicon&r=PG", "display_name": "Matthias", "link": "https://stackoverflow.com/users/802138/matthias"}, "edited": false, "score": 1, "creation_date": 1522902397, "post_id": 48586965, "comment_id": 86338090, "body": "Or you could use multi-line function parameters ;)"}], "tags": [], "owner": {"reputation": 603, "user_id": 6539400, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/9e66731bc0ca9f29e1248595a73275a1?s=128&d=identicon&r=PG", "display_name": "Jason", "link": "https://stackoverflow.com/users/6539400/jason"}, "is_accepted": false, "score": 1, "last_activity_date": 1517588974, "creation_date": 1517588974, "answer_id": 48586965, "question_id": 28920753, "link": "https://stackoverflow.com/questions/28920753/declaring-the-type-of-this-in-a-typescript-function/48586965#48586965", "title": "Declaring the type of &#39;this&#39; in a typescript function?", "body": "<p>While I found that is now possible with this:</p>\n\n<pre><code>class ClassyClass {\n    prop = 'Juicy Strings'\n}\n\nfunction x( this: ClassyClass ) {\n    console.log( this.prop )\n}\n</code></pre>\n\n<p>I have come prefer an alternative that doesn't take up real estate in the arguments line</p>\n\n<pre><code>function x() {\n    const that: ClassyClass = this\n\n    console.log( that.prop )\n}\n</code></pre>\n"}], "owner": {"reputation": 17716, "user_id": 6722, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/2b31f1c54790d6cba8a63a3653a26c49?s=128&d=identicon&r=PG", "display_name": "Steve Cooper", "link": "https://stackoverflow.com/users/6722/steve-cooper"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 25115, "favorite_count": 4, "accepted_answer_id": 28920916, "answer_count": 4, "score": 41, "last_activity_date": 1618118854, "creation_date": 1425767078, "question_id": 28920753, "link": "https://stackoverflow.com/questions/28920753/declaring-the-type-of-this-in-a-typescript-function", "title": "Declaring the type of &#39;this&#39; in a typescript function?", "body": "<p>I'm writing a <a href=\"http://gruntjs.com/api/inside-tasks\" rel=\"noreferrer\">grunt task</a> in TypeScript. I'm trying to translate something I already have in JavaScript. </p>\n\n<p>So, when grunt runs a task, it runs a function. When it runs, grunt sets <code>this</code> to an object with useful properties, the same way that jQuery overloads <code>this</code> with the element you are working on. I could access useful properties like <code>this.files</code>;</p>\n\n<pre><code>grunt.registerMultiTask('clean', function() {\n    this.files.forEach(function(f) { Delete(f); });\n});\n</code></pre>\n\n<p>So, \"delete all the files in <code>this.files</code>\".</p>\n\n<p>However, in TypeScript, I don't know if you can 'hint' to the compiler that <code>this</code> is a particular type, so I don't get intellisense. How do I tell TypeScript to consider <code>this</code> to be a different type?</p>\n"}, {"tags": ["asp.net", "typescript", "nuget", "visual-studio-2015"], "comments": [{"owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "edited": false, "score": 0, "creation_date": 1425841219, "post_id": 28918927, "comment_id": 46116832, "body": "The Definitely Typed NuGet packages add the <code>.d.ts</code> files to <code>Scripts&#47;...</code> usually - is this not happening?"}, {"owner": {"reputation": 890, "user_id": 147137, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/476006e216d65b710a7e572631b779b6?s=128&d=identicon&r=PG", "display_name": "Shawn Hubbard", "link": "https://stackoverflow.com/users/147137/shawn-hubbard"}, "reply_to_user": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "edited": false, "score": 0, "creation_date": 1425844701, "post_id": 28918927, "comment_id": 46118100, "body": "Not in 2015. I think that is what happens in 2013 and earlier. Maybe this is just something not quite baked in the 2015 CTP."}], "answers": [{"tags": [], "owner": {"reputation": 13152, "user_id": 24975, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/Dl8nC.jpg?s=128&g=1", "display_name": "Maxime Rouiller", "link": "https://stackoverflow.com/users/24975/maxime-rouiller"}, "is_accepted": false, "score": 0, "last_activity_date": 1447958165, "creation_date": 1447958165, "answer_id": 33811784, "question_id": 28918927, "link": "https://stackoverflow.com/questions/28918927/how-to-reference-d-ts-files-from-nuget-in-vs2015/33811784#33811784", "title": "How to reference d.ts files from Nuget in VS2015?", "body": "<p>NuGet files should not contain static files anymore. This is the new direction. NuGet is basically a way to handle dependencies between assemblies. Including static files was a nice side effect back then. </p>\n\n<p>With <a href=\"/questions/tagged/asp.net-5\" class=\"post-tag\" title=\"show questions tagged &#39;asp.net-5&#39;\" rel=\"tag\">asp.net-5</a>, it becomes a problem. So they switched to <a href=\"/questions/tagged/bower\" class=\"post-tag\" title=\"show questions tagged &#39;bower&#39;\" rel=\"tag\">bower</a> to handle those packages.</p>\n\n<p>At the time of writing your question, there might have been some missing DefinitelyTyped packages on bower but it seems that they can be found with the <code>dt-</code> prefix. </p>\n\n<p>Like so: <a href=\"http://bower.io/search/?q=dt-\" rel=\"nofollow\">http://bower.io/search/?q=dt-</a></p>\n\n<p>So for the jQuery <code>d.ts</code> file, I would go with <code>dt-jquery</code> and... it happens to be right there. </p>\n"}], "owner": {"reputation": 890, "user_id": 147137, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/476006e216d65b710a7e572631b779b6?s=128&d=identicon&r=PG", "display_name": "Shawn Hubbard", "link": "https://stackoverflow.com/users/147137/shawn-hubbard"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 372, "favorite_count": 0, "answer_count": 1, "score": 5, "last_activity_date": 1447958165, "creation_date": 1425755971, "question_id": 28918927, "link": "https://stackoverflow.com/questions/28918927/how-to-reference-d-ts-files-from-nuget-in-vs2015", "title": "How to reference d.ts files from Nuget in VS2015?", "body": "<p>In CTP6 I'm noticing that Nuget packages are getting pulled down to the %User%/.k/packages folder and then referenced in the app. This seems to be OK for DLL references, but if I'm trying to pull DefinitelyTyped packages from Nuget (because they don't all exist in NPM or Bower yet), how do I get these files back to my ASP.NET 5 project so I can reference the d.ts in my Typescript files? I could manually move them, but if I do that I'd probably not use Nuget and just download the files directly.</p>\n"}, {"tags": ["import", "module", "export", "typescript"], "answers": [{"tags": [], "owner": {"reputation": 3104, "user_id": 2820886, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NDJ7J.jpg?s=128&g=1", "display_name": "David Bohunek", "link": "https://stackoverflow.com/users/2820886/david-bohunek"}, "is_accepted": false, "score": 0, "last_activity_date": 1425749379, "creation_date": 1425749379, "answer_id": 28917800, "question_id": 28914303, "link": "https://stackoverflow.com/questions/28914303/typescript-export-and-import-modules/28917800#28917800", "title": "TypeScript - Export and import modules", "body": "<p>You are missing <code>export</code> keyword on both the interface and the class.\nTo have the class and/or the interface visible outside of the module. You need to define it like this:</p>\n\n<pre><code>module MemberDB {\n    export interface Member {\n        ...\n    }\n\n    export class Database {\n        ...\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": true, "score": 0, "last_activity_date": 1425768709, "creation_date": 1425768709, "answer_id": 28921002, "question_id": 28914303, "link": "https://stackoverflow.com/questions/28914303/typescript-export-and-import-modules/28921002#28921002", "title": "TypeScript - Export and import modules", "body": "<p>Your code has two issues: </p>\n\n<p>a.) You are using <em>internal modules</em> wrong. You need to <code>export</code> for them to get added to the module. This is explained by David's answer. But more importantly and why this answer is here: </p>\n\n<p>b.) you don't need to use <em>internal modules</em> when working with <em>commonjs</em>: </p>\n\n<p>Your code should be : </p>\n\n<p>memberDB.ts: </p>\n\n<pre><code>export interface Member {\n    name: string;\n    age: number;\n    hobbies: string[];\n}\n\nexport class Database {\n    private members: Member[];\n\n    constructor(first ? : Member) {\n        this.add(first);\n    }\n\n    add(member: Member) {\n        this.members.push(member);\n    }\n\n    logMembers() {\n        for (var member in this.members) {\n            console.log(member);\n        }\n    }\n}\n</code></pre>\n\n<p>and them <em>import/require</em> it in app.ts: </p>\n\n<pre><code>import memberDB = require('./memberDB');\nvar db = new memberDB.Database();\nvar Frank = {\n    name: \"Frank Arne\",\n    age: 38,\n    hobbies: ['Baking', 'Swimming']\n}\n\ndb.add(Frank);\ndb.logMembers();\n</code></pre>\n\n<p>Notice I also fixed up <code>db = new memberDB.Database();</code> for you i.e. you need to call the constructor function. </p>\n\n<p>More about internal vs. external modules : <a href=\"https://www.youtube.com/watch?v=KDrWLMUY0R0&amp;hd=1\" rel=\"nofollow\">https://www.youtube.com/watch?v=KDrWLMUY0R0&amp;hd=1</a> </p>\n"}], "owner": {"reputation": 40, "user_id": 3542141, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6bb53408bc96d0274fc7bdebadfd196f?s=128&d=identicon&r=PG&f=1", "display_name": "frisksitron", "link": "https://stackoverflow.com/users/3542141/frisksitron"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2424, "favorite_count": 0, "accepted_answer_id": 28921002, "answer_count": 2, "score": 0, "last_activity_date": 1425768709, "creation_date": 1425726992, "question_id": 28914303, "link": "https://stackoverflow.com/questions/28914303/typescript-export-and-import-modules", "title": "TypeScript - Export and import modules", "body": "<p>Ok, this is my files:</p>\n\n<p>memberDB.ts</p>\n\n<pre><code>module MemberDB {\n    interface Member {\n        name: string;\n        age: number;\n        hobbies: string[];\n    }\n\n    class Database {\n        private members: Member[];\n\n        constructor(first ? : Member) {\n            this.add(first);\n        }\n\n        add(member: Member) {\n            this.members.push(member);\n        }\n\n        logMembers() {\n            for (var member in this.members) {\n                console.log(member);\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>app.js</p>\n\n<pre><code>///&lt;reference path=\"memberDB.ts\"/&gt;\nvar db = MemberDB.Database;\nvar Frank = {\n    name: \"Frank Arne\",\n    age: 38,\n    hobbies: ['Baking', 'Swimming']\n}\n\ndb.add(Frank);\ndb.logMembers();\n</code></pre>\n\n<p>When I try to run app.js with node, I get this error:</p>\n\n<pre><code>/Users/.../js/app.js:2\nvar db = new MemberDB.Database;\n         ^\nReferenceError: MemberDB is not defined\nat Object.&lt;anonymous&gt; (/Users/.../js/app.js:2:14)\nat Module._compile (module.js:456:26)\nat Object.Module._extensions..js (module.js:474:10)\nat Module.load (module.js:356:32)\nat Function.Module._load (module.js:312:12)\nat Function.Module.runMain (module.js:497:10)\nat startup (node.js:119:16)\nat node.js:906:3\n</code></pre>\n\n<p>I want to separate the the MemberDB logic from app.js in its own file (memberDB.ts). Then import and make a Database object to do some work with. How can this be done? I've also tried to <code>import db = require('memberDB)';</code>, without luck.</p>\n\n<p>Thanks! :D</p>\n"}, {"tags": ["javascript", "typescript", "browserify", "typeerror"], "answers": [{"comments": [{"owner": {"reputation": 523, "user_id": 2327334, "user_type": "registered", "accept_rate": 36, "profile_image": "https://www.gravatar.com/avatar/df570f571a2be79feb25d32e60bed1cf?s=128&d=identicon&r=PG", "display_name": "\u9ed2\u3044\u96ea", "link": "https://stackoverflow.com/users/2327334/%e9%bb%92%e3%81%84%e9%9b%aa"}, "edited": false, "score": 1, "creation_date": 1425711537, "post_id": 28909958, "comment_id": 46083133, "body": "Thanks, I had it working in Javascript but was very messy so I decided to port it over to Typescript better organized. It ended up a complete mess anyways and I was worried if it was Typescript, Browserify, my code, or some combination but you answered my question. ---- I decided to rewrite it anyways and have fixed the errors. Thanks again."}], "tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": true, "score": 1, "last_activity_date": 1425688249, "creation_date": 1425688249, "answer_id": 28909958, "question_id": 28909908, "link": "https://stackoverflow.com/questions/28909908/typescript-and-browserify-uncaught-typeerror-cannot-read-property-step-of-u/28909958#28909958", "title": "Typescript and Browserify - Uncaught TypeError: Cannot read property &#39;step&#39; of undefined", "body": "<p><code>Cannot read property 'step' of undefined</code> This error is thrown on this line : <a href=\"https://github.com/wiseguy12851/wiseguy12851.github.io/blob/a24707ad4cb369ff348a849e3828bc8439b26dac/build/client/scripts/phaser/palette/monoHard.ts#L14\" rel=\"nofollow\">https://github.com/wiseguy12851/wiseguy12851.github.io/blob/a24707ad4cb369ff348a849e3828bc8439b26dac/build/client/scripts/phaser/palette/monoHard.ts#L14</a> </p>\n\n<p>Source of the error is that <code>game</code> is undefined. Effectively:</p>\n\n<pre><code>var game;\ngame.step; // Uncaught TypeError: Cannot read property 'step' of undefined\n</code></pre>\n\n<p>Look at the callstack at how MonoHard is initialized and go from there. </p>\n"}], "owner": {"reputation": 523, "user_id": 2327334, "user_type": "registered", "accept_rate": 36, "profile_image": "https://www.gravatar.com/avatar/df570f571a2be79feb25d32e60bed1cf?s=128&d=identicon&r=PG", "display_name": "\u9ed2\u3044\u96ea", "link": "https://stackoverflow.com/users/2327334/%e9%bb%92%e3%81%84%e9%9b%aa"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1935, "favorite_count": 0, "accepted_answer_id": 28909958, "answer_count": 1, "score": 0, "last_activity_date": 1425688249, "creation_date": 1425687860, "question_id": 28909908, "link": "https://stackoverflow.com/questions/28909908/typescript-and-browserify-uncaught-typeerror-cannot-read-property-step-of-u", "title": "Typescript and Browserify - Uncaught TypeError: Cannot read property &#39;step&#39; of undefined", "body": "<p>I have a project right now that basically compiles several typescript files as modules to javascript using commonjs. Then I browserify the entry file which in turn also includes all its modules to a bundle as per the norm.</p>\n\n<p>Well this has been going A-OK until I finally started making more use of Typescript and now I'm getting this weird error during script loading.</p>\n\n<pre><code>Uncaught TypeError: Cannot read property 'step' of undefined\n</code></pre>\n\n<p>\"step\" is a particular variable in one of the typescript classes I laid out. And it baffles me as to why I'm getting this error. browserify nor typescript produce any errors and and any attempt at trying to use console.log doesnt work because its almost like this happens during loading and before execution of the code.</p>\n\n<p>The entire project is open source and available here on github <a href=\"https://github.com/wiseguy12851/wiseguy12851.github.io\" rel=\"nofollow\">https://github.com/wiseguy12851/wiseguy12851.github.io</a>, the website where you can find the problem live is hosted here <a href=\"http://wiseguy12851.github.io/index-dev#/glyph\" rel=\"nofollow\">http://wiseguy12851.github.io/index-dev#/glyph</a></p>\n\n<p>Any help would be greatly appreciated, thanks in advance</p>\n"}, {"tags": ["typescript", "requestanimationframe"], "comments": [{"owner": {"reputation": 6701, "user_id": 3591273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e9f02f036080c8be4e2abfcf753be75?s=128&d=identicon&r=PG", "display_name": "Nikos M.", "link": "https://stackoverflow.com/users/3591273/nikos-m"}, "edited": false, "score": 0, "creation_date": 1425682359, "post_id": 28908999, "comment_id": 46077362, "body": "i would say it is a bad idea to have the requestAnimFrame in the constructor (since a constructor can be called/initialised under various cases), better put it in a method like .initLoop or sth. For the actual question you will have to bind the this.loop method to the &quot;this&quot; object. i.e this.loop.bind(this) so &quot;this&quot; is available and correctly assigned  when the loop method will be called"}, {"owner": {"reputation": 6701, "user_id": 3591273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e9f02f036080c8be4e2abfcf753be75?s=128&d=identicon&r=PG", "display_name": "Nikos M.", "link": "https://stackoverflow.com/users/3591273/nikos-m"}, "edited": false, "score": 1, "creation_date": 1425682433, "post_id": 28908999, "comment_id": 46077384, "body": "meaning: &quot;<b>requestAnimationFrame(this.loop.bind(this));</b>&quot;"}, {"owner": {"reputation": 375, "user_id": 3236478, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/gbtqF.png?s=128&g=1", "display_name": "Tc_", "link": "https://stackoverflow.com/users/3236478/tc"}, "reply_to_user": {"reputation": 6701, "user_id": 3591273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e9f02f036080c8be4e2abfcf753be75?s=128&d=identicon&r=PG", "display_name": "Nikos M.", "link": "https://stackoverflow.com/users/3591273/nikos-m"}, "edited": false, "score": 0, "creation_date": 1425683378, "post_id": 28908999, "comment_id": 46077686, "body": "@NikosM. I fully agree. I only did it to shorten the example. Didn&#39;t knew about <code>bind(this)</code> , I just read up on it, and know it works. =) Thanks!"}], "answers": [{"comments": [{"owner": {"reputation": 1152, "user_id": 4582948, "user_type": "registered", "profile_image": "https://graph.facebook.com/1041736225840403/picture?type=large", "display_name": "armagedescu", "link": "https://stackoverflow.com/users/4582948/armagedescu"}, "edited": false, "score": 2, "creation_date": 1583163482, "post_id": 28909471, "comment_id": 107014269, "body": "Don&#39;t forget about the time argument requestAnimationFrame((t)=&gt;this.loop(t));&lt;br/&gt;"}], "tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": true, "score": 17, "last_activity_date": 1425685058, "creation_date": 1425685058, "answer_id": 28909471, "question_id": 28908999, "link": "https://stackoverflow.com/questions/28908999/use-requestanimationframe-in-a-class/28909471#28909471", "title": "Use requestAnimationFrame in a class", "body": "<p><code>requestAnimationFrame(this.loop);</code> If you are passing someone else a function that <em>they</em> are going to call use an arrow i.e <code>requestAnimationFrame(()=&gt;this.loop());</code> or <code>loop = () =&gt; {</code></p>\n\n<p>More : <a href=\"https://www.youtube.com/watch?v=tvocUcbCupA\" rel=\"noreferrer\">https://www.youtube.com/watch?v=tvocUcbCupA</a> </p>\n"}], "owner": {"reputation": 375, "user_id": 3236478, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/gbtqF.png?s=128&g=1", "display_name": "Tc_", "link": "https://stackoverflow.com/users/3236478/tc"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5927, "favorite_count": 1, "accepted_answer_id": 28909471, "answer_count": 1, "score": 9, "last_activity_date": 1425685058, "creation_date": 1425682070, "question_id": 28908999, "link": "https://stackoverflow.com/questions/28908999/use-requestanimationframe-in-a-class", "title": "Use requestAnimationFrame in a class", "body": "<p>I'm having problem finding out how I can use <code>requestAnimationFrame</code> in a class.</p>\n\n<p>This code is working fine:</p>\n\n<pre><code>window.onload = function () {\n    var width = 20;\n    function animation() {\n        width++;\n        var element = document.getElementById(\"box\");\n        element.style.width = width + \"px\";\n        requestAnimationFrame(animation);\n    }\n    requestAnimationFrame(animation);\n};\n</code></pre>\n\n<p>But when I try putting it into a class, I don't get any result.</p>\n\n<pre><code>class Animation{\n    width: number = 20;\n\n    constructor() {\n        requestAnimationFrame(this.loop);\n    }\n    loop() {\n        this.width++;\n        var element = document.getElementById(\"box\");\n        element.style.width = this.width + \"px\";\n        requestAnimationFrame(this.loop);\n    }\n}\nwindow.onload = function () {\n    var animation = new Animation();\n};\n</code></pre>\n\n<p>Could someone tell me what's wrong here?</p>\n"}, {"tags": ["javascript", "angular", "typescript", "atscript"], "comments": [{"owner": {"reputation": 174103, "user_id": 23528, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/1595024881f1df4af9e2280926fb6272?s=128&d=identicon&r=PG", "display_name": "Daniel A. White", "link": "https://stackoverflow.com/users/23528/daniel-a-white"}, "edited": false, "score": 2, "creation_date": 1425671487, "post_id": 28906505, "comment_id": 46072414, "body": "i would read up on atscript. it is called an annotation."}, {"owner": {"reputation": 3626, "user_id": 814416, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/tKW3Z.png?s=128&g=1", "display_name": "sherb", "link": "https://stackoverflow.com/users/814416/sherb"}, "edited": false, "score": 6, "creation_date": 1467145871, "post_id": 28906505, "comment_id": 63607803, "body": "In TypeScript, the &quot;@&quot; operator denotes a decorator (in the example above, a class decorator). You can learn more about decorators in <a href=\"https://www.typescriptlang.org/docs/handbook/decorators.html\" rel=\"nofollow noreferrer\">the TypeScript docs</a>."}], "answers": [{"tags": [], "owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "is_accepted": false, "score": 17, "last_activity_date": 1425671961, "creation_date": 1425671961, "answer_id": 28906661, "question_id": 28906505, "link": "https://stackoverflow.com/questions/28906505/what-does-the-at-sign-mean-in-the-latest-typescript-presumably-v1-5-exampl/28906661#28906661", "title": "What does the @ (at sign) mean in the latest TypeScript (presumably v1.5) example?", "body": "<p>The big news this week is the merging of AtScript and TypeScript.</p>\n\n<p>The following example from the AtScript documentation...</p>\n\n<pre><code>@Component()\nclass MyApp {\n  server:Server;\n  @Bind('name') name:string;\n  @Event('foo') fooFn:Function;\n  @Inject()\n  constructor(@parent server:Server) {}\n  greet():string {}\n}\n</code></pre>\n\n<p>Compiles into the following JavaScript...</p>\n\n<pre><code>function MyApp() {}\nMyApp.properties = {\n  'server': { is: Server },\n  'name': { is:string,\n            annotate: [new Bind('name']},\n  'fooFn': { is:Function,\n             annotate:[new Event('foo')]}\n}\nMyApp.annotate = [\n  new Component(),\n  new Inject()\n];\nMyApp.parameters = [\n  {is:Server, annotate:[parent]}\n];\nMyApp.prototype.greet = function() {}\nMyApp.prototype.greet.returns = string;\n</code></pre>\n\n<p>AtScript was planned to be a layer on top of TypeScript (i.e. a super-set of a super-set) - but now the <a href=\"https://www.youtube.com/watch?v=FA5jsa1lR9c\">two projects are one</a>.</p>\n\n<p><a href=\"https://docs.google.com/document/d/11YUzC-1d0V1-Q3V0fQ7KSit97HnZoKVygDxpWzEYW0U/mobilebasic?viewopt=127\">Annotations are described thus</a>:</p>\n\n<ul>\n<li>AtScript annotation syntax is just a shorthand of placing the same information in ES5. It would be reasonable for an ES5 developer to write these annotations manually. A helper library could even be provided.</li>\n<li><p>Annotations can only be placed on functions. </p></li>\n<li><p>An annotation placed on a class is an annotation placed on the class\u2019 constructor function.</p></li>\n<li><p>An annotation placed on a field gets moved to the constructor function.</p></li>\n<li><p>All annotations are translated as properties on a function.</p></li>\n</ul>\n"}], "owner": {"reputation": 15873, "user_id": 139667, "user_type": "registered", "accept_rate": 36, "profile_image": "https://www.gravatar.com/avatar/e083e1865879535bb75306472b4ba5d0?s=128&d=identicon&r=PG&f=1", "display_name": "Trident D&#39;Gao", "link": "https://stackoverflow.com/users/139667/trident-dgao"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 6786, "favorite_count": 0, "answer_count": 1, "score": 22, "last_activity_date": 1475728973, "creation_date": 1425671386, "last_edit_date": 1475728973, "question_id": 28906505, "link": "https://stackoverflow.com/questions/28906505/what-does-the-at-sign-mean-in-the-latest-typescript-presumably-v1-5-exampl", "title": "What does the @ (at sign) mean in the latest TypeScript (presumably v1.5) example?", "body": "<p>There is a very interesting picture was posted in the official TypeScript <a href=\"http://blogs.msdn.com/b/typescript/archive/2015/03/05/angular-2-0-built-on-typescript.aspx\">blog</a>.</p>\n\n<p><img src=\"https://i.stack.imgur.com/d8D2F.png\" alt=\"Wierd syntax\"></p>\n\n<p>I wonder what the @ (at sign) symbol is doing there since (as far as I know) it cannot be used in JavaScript identifiers.</p>\n"}, {"tags": ["properties", "typescript"], "answers": [{"tags": [], "owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "is_accepted": false, "score": 1, "last_activity_date": 1425670651, "creation_date": 1425670651, "answer_id": 28906330, "question_id": 28903547, "link": "https://stackoverflow.com/questions/28903547/access-the-getter-and-setter-of-a-typescript-property/28906330#28906330", "title": "Access the getter and setter of a typescript property", "body": "<p>The simplest way to do this would be to provide methods, rather than a property:</p>\n\n<pre><code>//A sample class with a property\nclass DataClass&lt;T&gt; {\n    private val: T;\n\n    public getValue(): T {\n        return this.val;\n    }\n\n    public setValue(value: T) {\n        this.val = value;\n    }\n}\n\nclass ModifyRef {\n    public static DoSomethingByGetterAndSetter(getter: () =&gt; string, setter: (val: string) =&gt; void) {\n        var oldValue = getter();\n        setter(\"new value by DoSomethingByGetterAndSetter\");\n    }\n}\n\nvar inst = new DataClass&lt;string&gt;();\n\n//Or if not is something like this possible\nModifyRef.DoSomethingByGetterAndSetter(inst.getValue, inst.setValue);\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 108213, "user_id": 27423, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/CoNYx.jpg?s=128&g=1", "display_name": "Daniel Earwicker", "link": "https://stackoverflow.com/users/27423/daniel-earwicker"}, "is_accepted": false, "score": 0, "last_activity_date": 1425674785, "creation_date": 1425674785, "answer_id": 28907353, "question_id": 28903547, "link": "https://stackoverflow.com/questions/28903547/access-the-getter-and-setter-of-a-typescript-property/28907353#28907353", "title": "Access the getter and setter of a typescript property", "body": "<p>I've long found it very surprising that languages with properties don't include a convenient way to make a reference to a property, and <a href=\"https://smellegantcode.wordpress.com/2014/04/27/adventures-in-roslyn-a-new-kind-of-managed-lvalue-pointer/\" rel=\"nofollow\">have daydreamed about having this feature in C#</a>. It ought to work on local variables as well.</p>\n\n<p>A popular pattern for this kind of first-class or <em>reified</em> property is a single function that can be called in two ways:</p>\n\n<ol>\n<li>no arguments: returns current value.</li>\n<li>one argument: sets value, returns <code>undefined</code>.</li>\n</ol>\n\n<p>Or in TypeScript terms:</p>\n\n<pre><code>interface Property&lt;T&gt; {\n    (): T;\n    (newVal: T): void;\n}\n</code></pre>\n\n<p>The methods of jQuery objects often work like this. An example of this pattern in modelling pure data is in <a href=\"http://knockoutjs.com/\" rel=\"nofollow\">Knockout</a>, in which such properties also support change subscriptions, and there's a rather elegant pattern for defining computed properties that automatically recompute when their dependencies change.</p>\n"}], "owner": {"reputation": 9853, "user_id": 21566, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/e0c312c39c86d4e311ecb1b3e2c4fd73?s=128&d=identicon&r=PG", "display_name": "Fionn", "link": "https://stackoverflow.com/users/21566/fionn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2768, "favorite_count": 1, "answer_count": 2, "score": 0, "last_activity_date": 1425674785, "creation_date": 1425660435, "question_id": 28903547, "link": "https://stackoverflow.com/questions/28903547/access-the-getter-and-setter-of-a-typescript-property", "title": "Access the getter and setter of a typescript property", "body": "<p>I have a question about typescript properties: Is it possible to get the setter and getter of a typescript property or to declare a function argument to be of a property of X type?</p>\n\n<p>The reason is to get some sort of \"reference\" to a variable which is not possible in plain JS without writing getter/setter wrappers or access the variable via parent object itself (obj[\"varname\"]).</p>\n\n<p>For example (with some working code and other parts speculative):</p>\n\n<pre><code>//A sample class with a property\nclass DataClass&lt;T&gt; {\n    private T val;\n\n    public get value(): T {\n        return this.val;\n    }\n\n    public set value(value: T) {\n        this.val = value;\n    }\n}\n\n//Different ways of modifing a member \"by reference\"\nclass ModifyRef {\n    public static void DoSomethingByGetterAndSetter(getter: () =&gt; string, setter: (val: string) =&gt; void) {\n        var oldValue = getter();\n        setter(\"new value by DoSomethingByGetterAndSetter\");\n    }\n\n    public static void DoSomethingByObject(obj: Object, name: string) {\n        var oldValue = obj[name];\n        obj[name] = \"new value by DoSomethingByObject\";\n    }\n\n    //Is something like this possible?\n    public static void DoSomethingByProperty(somePropery: property&lt;string&gt;) {\n        var oldVlaue = someProperty;\n        someProperty = \"new value by DoSomethingByProperty\";\n    }\n}\n\nvar inst = new DataClass&lt;string&gt;();\n\n//Calling the DoSomethingByProperty if possible\nModifyRef.DoSomethingByProperty(inst.value);\n\n//Or if not is something like this possible\nModifyRef.DoSomethingByGetterAndSetter(inst.value.get, inst.value.set);\n</code></pre>\n"}, {"tags": ["typescript"], "comments": [{"owner": {"reputation": 2885, "user_id": 1903781, "user_type": "registered", "accept_rate": 53, "profile_image": "https://i.stack.imgur.com/61Mu1.jpg?s=128&g=1", "display_name": "Adrian Moisa", "link": "https://stackoverflow.com/users/1903781/adrian-moisa"}, "edited": false, "score": 9, "creation_date": 1512667245, "post_id": 28900077, "comment_id": 82360850, "body": "A bit cleaner syntax <code>var element = ev.target as HTMLElement</code>"}], "answers": [{"comments": [{"owner": {"reputation": 6623, "user_id": 487771, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/435755dc1d81ef78b78c48a7d3b13729?s=128&d=identicon&r=PG", "display_name": "daniel.sedlacek", "link": "https://stackoverflow.com/users/487771/daniel-sedlacek"}, "edited": false, "score": 11, "creation_date": 1425653941, "post_id": 28900856, "comment_id": 46062148, "body": "In that case KeyboardEvent and MouseEvent should have it&#39;s own equivalent of EventTarget that will always contain the associated Element. DOM is so dodgy... :/"}, {"owner": {"reputation": 89878, "user_id": 1945651, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/9J4D8.png?s=128&g=1", "display_name": "JLRishe", "link": "https://stackoverflow.com/users/1945651/jlrishe"}, "reply_to_user": {"reputation": 6623, "user_id": 487771, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/435755dc1d81ef78b78c48a7d3b13729?s=128&d=identicon&r=PG", "display_name": "daniel.sedlacek", "link": "https://stackoverflow.com/users/487771/daniel-sedlacek"}, "edited": false, "score": 0, "creation_date": 1425655884, "post_id": 28900856, "comment_id": 46063485, "body": "@daniel.sedlacek Sounds like you&#39;re blaming DOM for limitations in TypeScript&#39;s type system. People using plain Javascript don&#39;t have any trouble using <code>Event.target</code>."}, {"owner": {"reputation": 6623, "user_id": 487771, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/435755dc1d81ef78b78c48a7d3b13729?s=128&d=identicon&r=PG", "display_name": "daniel.sedlacek", "link": "https://stackoverflow.com/users/487771/daniel-sedlacek"}, "edited": false, "score": 7, "creation_date": 1425660180, "post_id": 28900856, "comment_id": 46066243, "body": "I am not an expert on DOM nor TypeScript but I would say the design of the EventTarget has too much ambiguity and that has nothing to do with TypeScript."}, {"owner": {"reputation": 89878, "user_id": 1945651, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/9J4D8.png?s=128&g=1", "display_name": "JLRishe", "link": "https://stackoverflow.com/users/1945651/jlrishe"}, "reply_to_user": {"reputation": 6623, "user_id": 487771, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/435755dc1d81ef78b78c48a7d3b13729?s=128&d=identicon&r=PG", "display_name": "daniel.sedlacek", "link": "https://stackoverflow.com/users/487771/daniel-sedlacek"}, "edited": false, "score": 0, "creation_date": 1425660436, "post_id": 28900856, "comment_id": 46066423, "body": "@daniel.sedlacek I would say you&#39;re only seeing it that way because you&#39;re viewing everything in terms of static types, and Javascript doesn&#39;t have static types. There is nothing ambiguous about event targets. An event target is whatever object where an event occurs. If the event was registered on an element, then the event target is that element. If the event was registered on an XHR, then the event target is that XHR. It&#39;s a simple and generalized convention that is applicable to a wide range of uses."}, {"owner": {"reputation": 89878, "user_id": 1945651, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/9J4D8.png?s=128&g=1", "display_name": "JLRishe", "link": "https://stackoverflow.com/users/1945651/jlrishe"}, "reply_to_user": {"reputation": 6623, "user_id": 487771, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/435755dc1d81ef78b78c48a7d3b13729?s=128&d=identicon&r=PG", "display_name": "daniel.sedlacek", "link": "https://stackoverflow.com/users/487771/daniel-sedlacek"}, "edited": false, "score": 0, "creation_date": 1425660988, "post_id": 28900856, "comment_id": 46066819, "body": "@daniel.sedlacek I&#39;d say it&#39;s best not to think of <code>EventTarget</code> as a type. It&#39;s really an interface for any object that provides the three methods for registering, unregistering, and dispatching events. The real &quot;ambiguity&quot; is with <code>Event.target</code>. The designers of TypeScript&#39;s type system could have defined <code>Event</code> as a generic class <code>Event&lt;T extends EventTarget&gt;</code> that has a <code>target</code> property of type <code>T</code>, but they didn&#39;t, and that&#39;s why you have to do an explicit cast. So like I said, your beef is with TypeScript, not with the DOM."}, {"owner": {"reputation": 89878, "user_id": 1945651, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/9J4D8.png?s=128&g=1", "display_name": "JLRishe", "link": "https://stackoverflow.com/users/1945651/jlrishe"}, "reply_to_user": {"reputation": 6623, "user_id": 487771, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/435755dc1d81ef78b78c48a7d3b13729?s=128&d=identicon&r=PG", "display_name": "daniel.sedlacek", "link": "https://stackoverflow.com/users/487771/daniel-sedlacek"}, "edited": false, "score": 2, "creation_date": 1425662013, "post_id": 28900856, "comment_id": 46067355, "body": "@daniel.sedlacek On the other hand, <code>KeyboardEvent</code>s can occur on both DOM elements and on the window object (and theoretically other things), so right there it&#39;s impossible to give <code>KeyboardEvent.target</code> a type that&#39;s any more specific than <code>EventTarget</code>, unless you think <code>KeyboardEvent</code> should also be a generic type <code>KeyboardEvent&lt;T extends EventTarget&gt;</code> and would like to be forced to put <code>KeyboardEvent&lt;Element&gt;</code> all throughout your code. At that point, you&#39;re better off just doing the explicit cast, painful though it may be."}, {"owner": {"reputation": 1537, "user_id": 1392763, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7197b98bd02df00b9e91b87283daf3b4?s=128&d=identicon&r=PG", "display_name": "munsellj", "link": "https://stackoverflow.com/users/1392763/munsellj"}, "edited": false, "score": 14, "creation_date": 1469729492, "post_id": 28900856, "comment_id": 64670690, "body": "In cases it&#39;s helpful for anyone else in the future, I needed to cast as a specific element type in order to access the <code>value</code> property of a <code>&lt;select&gt;</code> tag.  e.g. <code>let target = &lt;HTMLSelectElement&gt; evt.target;</code>"}, {"owner": {"reputation": 6319, "user_id": 1049693, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/osZQ0.png?s=128&g=1", "display_name": "pilau", "link": "https://stackoverflow.com/users/1049693/pilau"}, "reply_to_user": {"reputation": 1537, "user_id": 1392763, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7197b98bd02df00b9e91b87283daf3b4?s=128&d=identicon&r=PG", "display_name": "munsellj", "link": "https://stackoverflow.com/users/1392763/munsellj"}, "edited": false, "score": 2, "creation_date": 1471506110, "post_id": 28900856, "comment_id": 65376035, "body": "@munsellj (unfortunately) that is the correct way to handle ambiguities in a typed environment."}, {"owner": {"reputation": 5359, "user_id": 582917, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/98a347823cd1db90af884b227a29c29e?s=128&d=identicon&r=PG", "display_name": "CMCDragonkai", "link": "https://stackoverflow.com/users/582917/cmcdragonkai"}, "edited": false, "score": 0, "creation_date": 1558506823, "post_id": 28900856, "comment_id": 99118684, "body": "I&#39;m curious whether <code>KeyboardEvent</code> can just be used as is, or am I supposed to use <code>KeyboardEvent&lt;HTMLInputElement&gt;</code>? I find that if it gets used like this, then I still have to cast the <code>e.target</code> as <code>HTMLInputElement</code>."}], "tags": [], "owner": {"reputation": 89878, "user_id": 1945651, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/9J4D8.png?s=128&g=1", "display_name": "JLRishe", "link": "https://stackoverflow.com/users/1945651/jlrishe"}, "is_accepted": true, "score": 76, "last_activity_date": 1425662217, "last_edit_date": 1425662217, "creation_date": 1425652008, "answer_id": 28900856, "question_id": 28900077, "link": "https://stackoverflow.com/questions/28900077/why-is-event-target-not-element-in-typescript/28900856#28900856", "title": "Why is Event.target not Element in Typescript?", "body": "<p>It doesn't inherit from <code>Element</code> because not all event targets are elements.</p>\n\n<p><a href=\"https://developer.mozilla.org/en/docs/Web/API/EventTarget\" rel=\"noreferrer\">From MDN</a>:</p>\n\n<blockquote>\n  <p>Element, document, and window are the most common event targets, but other objects can be event targets too, for example XMLHttpRequest, AudioNode, AudioContext, and others.</p>\n</blockquote>\n\n<p>Even the <code>KeyboardEvent</code> you're trying to use can occur on a DOM element or on the window object (and theoretically on other things), so right there it wouldn't make sense for <code>evt.target</code> to be defined as an <code>Element</code>.</p>\n\n<p>If it is an event on a DOM element, then I would say that you can safely assume <code>evt.target</code>. is an <code>Element</code>. I don't think this is an matter of cross-browser behavior. Merely that <code>EventTarget</code> is a more abstract interface than <code>Element</code>.</p>\n\n<p>Further reading: <a href=\"https://typescript.codeplex.com/discussions/432211\" rel=\"noreferrer\">https://typescript.codeplex.com/discussions/432211</a></p>\n"}, {"comments": [{"owner": {"reputation": 683, "user_id": 3904471, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/DZ6tE.jpg?s=128&g=1", "display_name": "Kitson", "link": "https://stackoverflow.com/users/3904471/kitson"}, "edited": false, "score": 0, "creation_date": 1574846983, "post_id": 48443771, "comment_id": 104372249, "body": "This worked perfectly for me - I was trying all sorts of nastiness, extending EventTarget etc. but this is the cleanest solution +1"}, {"owner": {"reputation": 683, "user_id": 3904471, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/DZ6tE.jpg?s=128&g=1", "display_name": "Kitson", "link": "https://stackoverflow.com/users/3904471/kitson"}, "edited": false, "score": 3, "creation_date": 1574849195, "post_id": 48443771, "comment_id": 104373609, "body": "Just to add to this, if you need to extend the event definition you can do something like this: <code>handleKeyUp = (event: React.KeyboardEvent&lt;HTMLInputElement&gt; &amp; { target: HTMLInputElement }) =&gt; {...}</code>"}], "tags": [], "owner": {"reputation": 825, "user_id": 546506, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/91d15ef7d151a63d475a3fe8f0fbad82?s=128&d=identicon&r=PG", "display_name": "Bangonkali", "link": "https://stackoverflow.com/users/546506/bangonkali"}, "is_accepted": false, "score": 58, "last_activity_date": 1516886192, "creation_date": 1516886192, "answer_id": 48443771, "question_id": 28900077, "link": "https://stackoverflow.com/questions/28900077/why-is-event-target-not-element-in-typescript/48443771#48443771", "title": "Why is Event.target not Element in Typescript?", "body": "<p>Using typescript, I use a custom interface that only applies to my function. Example use case.</p>\n\n<pre><code>  handleChange(event: { target: HTMLInputElement; }) {\n    this.setState({ value: event.target.value });\n  }\n</code></pre>\n\n<p>In this case, the handleChange will receive an object with target field that is of type HTMLInputElement.</p>\n\n<p>Later in my code I can use </p>\n\n<pre><code>&lt;input type='text' value={this.state.value} onChange={this.handleChange} /&gt;\n</code></pre>\n\n<p>A cleaner approach would be to put the interface to a separate file. </p>\n\n<pre><code>interface HandleNameChangeInterface {\n  target: HTMLInputElement;\n}\n</code></pre>\n\n<p>then later use the following function definition:</p>\n\n<pre><code>  handleChange(event: HandleNameChangeInterface) {\n    this.setState({ value: event.target.value });\n  }\n</code></pre>\n\n<p>In my usecase, it's expressly defined that the only caller to handleChange is an HTML element type of input text. </p>\n"}, {"comments": [{"owner": {"reputation": 63, "user_id": 3963391, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EreMI.jpg?s=128&g=1", "display_name": "Igor Golopolosov", "link": "https://stackoverflow.com/users/3963391/igor-golopolosov"}, "edited": false, "score": 0, "creation_date": 1608234503, "post_id": 50326668, "comment_id": 115528551, "body": "This is the most typesafe solution!"}], "tags": [], "owner": {"reputation": 6836, "user_id": 146738, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/6f0bbc82a5a09f4c1efffaa4ccec419b?s=128&d=identicon&r=PG", "display_name": "Simon Epskamp", "link": "https://stackoverflow.com/users/146738/simon-epskamp"}, "is_accepted": false, "score": 54, "last_activity_date": 1526288795, "creation_date": 1526288795, "answer_id": 50326668, "question_id": 28900077, "link": "https://stackoverflow.com/questions/28900077/why-is-event-target-not-element-in-typescript/50326668#50326668", "title": "Why is Event.target not Element in Typescript?", "body": "<p>JLRishe's answer is correct, so I simply use this in my event handler:</p>\n\n<pre><code>if (event.target instanceof Element) { /*...*/ }\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 27684, "user_id": 1525840, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/e1d7083d88bd7d8eedea825a941dae57?s=128&d=identicon&r=PG", "display_name": "Konrad Viltersten", "link": "https://stackoverflow.com/users/1525840/konrad-viltersten"}, "edited": false, "score": 0, "creation_date": 1566159194, "post_id": 54351811, "comment_id": 101559129, "body": "Is that the same as the <code>&lt;HTMLInputElement&gt;event.target;</code> syntax?"}, {"owner": {"reputation": 3870, "user_id": 1769777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/06763dd36a45c8966c7171ba3697847d?s=128&d=identicon&r=PG", "display_name": "Adam", "link": "https://stackoverflow.com/users/1769777/adam"}, "reply_to_user": {"reputation": 27684, "user_id": 1525840, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/e1d7083d88bd7d8eedea825a941dae57?s=128&d=identicon&r=PG", "display_name": "Konrad Viltersten", "link": "https://stackoverflow.com/users/1525840/konrad-viltersten"}, "edited": false, "score": 0, "creation_date": 1567699051, "post_id": 54351811, "comment_id": 102049936, "body": "@KonradViltersten, they do the same thing. The <code>as</code> syntax was introduced because it conflicted with JSX. It&#39;s recommended to use <code>as</code> for consistency. <a href=\"https://basarat.gitbooks.io/typescript/docs/types/type-assertion.html\" rel=\"nofollow noreferrer\">basarat.gitbooks.io/typescript/docs/types/type-assertion.htm&zwnj;&#8203;l</a>"}, {"owner": {"reputation": 27684, "user_id": 1525840, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/e1d7083d88bd7d8eedea825a941dae57?s=128&d=identicon&r=PG", "display_name": "Konrad Viltersten", "link": "https://stackoverflow.com/users/1525840/konrad-viltersten"}, "edited": false, "score": 0, "creation_date": 1567757570, "post_id": 54351811, "comment_id": 102066846, "body": "Aha, I see. It&#39;s also appearing more C#&#39;ish which in many cases is an advantage, depending on the team&#39;s backend experience. As long as it&#39;s not one of those false friends where the syntax resembles something but implies something totally different technically. (I&#39;m thinking <i>var</i> and <i>const</i> between Angular and C#, a sad experience of mine, hehe)."}], "tags": [], "owner": {"reputation": 9558, "user_id": 486718, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/77e184ec231326f8d7bd90a43aba2c7a?s=128&d=identicon&r=PG", "display_name": "dimpiax", "link": "https://stackoverflow.com/users/486718/dimpiax"}, "is_accepted": false, "score": 40, "last_activity_date": 1548349106, "creation_date": 1548349106, "answer_id": 54351811, "question_id": 28900077, "link": "https://stackoverflow.com/questions/28900077/why-is-event-target-not-element-in-typescript/54351811#54351811", "title": "Why is Event.target not Element in Typescript?", "body": "<h1>Typescript 3.2.4</h1>\n\n<p>For retrieving property you must cast target to appropriate data type:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>e =&gt; console.log((e.target as Element).id)\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 2815, "user_id": 2167021, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/DKDQY.png?s=128&g=1", "display_name": "hovado", "link": "https://stackoverflow.com/users/2167021/hovado"}, "is_accepted": false, "score": 0, "last_activity_date": 1573497247, "creation_date": 1573497247, "answer_id": 58806863, "question_id": 28900077, "link": "https://stackoverflow.com/questions/28900077/why-is-event-target-not-element-in-typescript/58806863#58806863", "title": "Why is Event.target not Element in Typescript?", "body": "<p>@Bangonkali provide the right answer, but this syntax seems more readable and just nicer to me:</p>\n\n<pre><code>eventChange($event: KeyboardEvent): void {\n    (&lt;HTMLInputElement&gt;$event.target).value;\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 2213, "user_id": 1490636, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/FMa7z.jpg?s=128&g=1", "display_name": "Maksim Kostromin", "link": "https://stackoverflow.com/users/1490636/maksim-kostromin"}, "is_accepted": false, "score": 3, "last_activity_date": 1584844413, "last_edit_date": 1584844413, "creation_date": 1584844090, "answer_id": 60795363, "question_id": 28900077, "link": "https://stackoverflow.com/questions/28900077/why-is-event-target-not-element-in-typescript/60795363#60795363", "title": "Why is Event.target not Element in Typescript?", "body": "<p>With typescript we can leverage type aliases, like so:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>type KeyboardEvent = {\n  target: HTMLInputElement,\n  key: string,\n};\nconst onKeyPress = (e: KeyboardEvent) =&gt; {\n  if ('Enter' === e.key) { // Enter keyboard was pressed!\n    submit(e.target.value);\n    e.target.value = '';\n    return;\n  }\n  // continue handle onKeyPress input events...\n};\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 4836, "user_id": 135778, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/3161505908c3ae19ee8280f4ee893ecb?s=128&d=identicon&r=PG", "display_name": "WickyNilliams", "link": "https://stackoverflow.com/users/135778/wickynilliams"}, "reply_to_user": {"reputation": 5563, "user_id": 11407695, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6e780ea997ca2280a7e2db311220a563?s=128&d=identicon&r=PG", "display_name": "Oleg Valter", "link": "https://stackoverflow.com/users/11407695/oleg-valter"}, "edited": false, "score": 1, "creation_date": 1618324539, "post_id": 60833178, "comment_id": 118564162, "body": "@OlegValter good call. edited"}, {"owner": {"reputation": 5563, "user_id": 11407695, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6e780ea997ca2280a7e2db311220a563?s=128&d=identicon&r=PG", "display_name": "Oleg Valter", "link": "https://stackoverflow.com/users/11407695/oleg-valter"}, "edited": false, "score": 0, "creation_date": 1618356080, "post_id": 60833178, "comment_id": 118576119, "body": "huh, glad you still maintain it, thanks :) Not that <code>readonly</code> was required there, but a little extra type safety never hurts (I hope no one will try to override the <code>target</code> property, but you never know, I&#39;ve seen worse)."}], "tags": [], "owner": {"reputation": 4836, "user_id": 135778, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/3161505908c3ae19ee8280f4ee893ecb?s=128&d=identicon&r=PG", "display_name": "WickyNilliams", "link": "https://stackoverflow.com/users/135778/wickynilliams"}, "is_accepted": false, "score": 10, "last_activity_date": 1618324529, "last_edit_date": 1618324529, "creation_date": 1585060449, "answer_id": 60833178, "question_id": 28900077, "link": "https://stackoverflow.com/questions/28900077/why-is-event-target-not-element-in-typescript/60833178#60833178", "title": "Why is Event.target not Element in Typescript?", "body": "<p>Could you create your own generic interface that extends <code>Event</code>. Something like this?</p>\n<pre><code>interface DOMEvent&lt;T extends EventTarget&gt; extends Event {\n  readonly target: T\n}\n</code></pre>\n<p>Then you can use it like:</p>\n<pre><code>handleChange(event: DOMEvent&lt;HTMLInputElement&gt;) {\n  this.setState({ value: event.target.value });\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 301, "user_id": 12016139, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-HSEyTa6z_yE/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rfD8glYhZX2jMxhsQiNz_CeqGmtxg/photo.jpg?sz=128", "display_name": "Gennady Magomaev", "link": "https://stackoverflow.com/users/12016139/gennady-magomaev"}, "is_accepted": false, "score": 0, "last_activity_date": 1615888358, "last_edit_date": 1615888358, "creation_date": 1606722610, "answer_id": 65069744, "question_id": 28900077, "link": "https://stackoverflow.com/questions/28900077/why-is-event-target-not-element-in-typescript/65069744#65069744", "title": "Why is Event.target not Element in Typescript?", "body": "<p>I use this:</p>\n<pre><code>onClick({ target }: MouseEvent) =&gt; {\n    const targetDivElement: HTMLDivElement = target as HTMLDivElement;\n    \n    const listFullHeight: number = targetDivElement.scrollHeight;\n    const listVisibleHeight: number = targetDivElement.offsetHeight;\n    const listTopScroll: number = targetDivElement.scrollTop;\n    }\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 11680, "user_id": 3022127, "user_type": "registered", "accept_rate": 27, "profile_image": "https://i.stack.imgur.com/l0OvV.jpg?s=128&g=1", "display_name": "bersling", "link": "https://stackoverflow.com/users/3022127/bersling"}, "is_accepted": false, "score": 0, "last_activity_date": 1612428436, "last_edit_date": 1612428436, "creation_date": 1612427853, "answer_id": 66041989, "question_id": 28900077, "link": "https://stackoverflow.com/questions/28900077/why-is-event-target-not-element-in-typescript/66041989#66041989", "title": "Why is Event.target not Element in Typescript?", "body": "<p>I'm usually facing this problem when dealing with events from an <code>input</code> field, like key up. But remember that the event could stem from anywhere, e.g. from a <code>keyup</code> listener on <code>document</code>, where there is no associated <code>value</code>. So in order to correctly provide the information I'd provide an additional type:</p>\n<pre><code>interface KeyboardEventOnInputField extends KeyboardEvent {\n  target: HTMLInputElement;\n}\n...\n\n  onKeyUp(e: KeyboardEventOnInputField) {\n    const inputValue = e.target.value;\n    ...\n  }\n\n</code></pre>\n<p>If the input to the function has a type of <code>Event</code>, you might need to tell typescript what it actually is:</p>\n<pre><code>  onKeyUp(e: Event) {\n    const evt = e as KeyboardEventOnInputField;\n    const inputValue = evt.target.value;\n    this.inputValue.next(inputValue);\n  }\n</code></pre>\n<p>This is for example required in Angular.</p>\n"}], "owner": {"reputation": 6623, "user_id": 487771, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/435755dc1d81ef78b78c48a7d3b13729?s=128&d=identicon&r=PG", "display_name": "daniel.sedlacek", "link": "https://stackoverflow.com/users/487771/daniel-sedlacek"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 112376, "favorite_count": 15, "accepted_answer_id": 28900856, "answer_count": 9, "score": 145, "last_activity_date": 1618324529, "creation_date": 1425649404, "question_id": 28900077, "link": "https://stackoverflow.com/questions/28900077/why-is-event-target-not-element-in-typescript", "title": "Why is Event.target not Element in Typescript?", "body": "<p>I simply want to do this with my KeyboardEvent</p>\n\n<pre><code>var tag = evt.target.tagName.toLowerCase();\n</code></pre>\n\n<p>While Event.target is of type EventTarget it does not inherit from Element. So I have to cast it like this:</p>\n\n<pre><code>var tag = (&lt;Element&gt;evt.target).tagName.toLowerCase();\n</code></pre>\n\n<p>This is probably due to some browsers not following standards, right? What is the correct browser agnostic implementation in TypeScript?</p>\n\n<p>PS: I am using jQuery to capture the KeyboardEvent.</p>\n"}, {"tags": ["javascript", "typescript", "destructor"], "answers": [{"comments": [{"owner": {"reputation": 18854, "user_id": 1083572, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/9xSFI.png?s=128&g=1", "display_name": "Kokodoko", "link": "https://stackoverflow.com/users/1083572/kokodoko"}, "edited": false, "score": 7, "creation_date": 1448713595, "post_id": 28885654, "comment_id": 55699111, "body": "Garbage collection may be prevented if a timer, callback or event listener is somewhere still attached to the object to be deleted. You can also get errors if the callback/listener still exists but the object does not. If you want to be absolutely sure you could write your own destructor method and call that before deleting the object."}, {"owner": {"reputation": 2417, "user_id": 609862, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/124382dae2895c057e94dca4455b464a?s=128&d=identicon&r=PG", "display_name": "asiby", "link": "https://stackoverflow.com/users/609862/asiby"}, "edited": false, "score": 30, "creation_date": 1478121057, "post_id": 28885654, "comment_id": 68031422, "body": "This is not a correct answer. G&#225;bor Lup&#225;k most like knows that there is a garbage collection happening there. Even with a garbage collector, you still need sometimes to release some long living references at specific points during the app&#39;s execution so that the references resource could be eligible for garbage collection or at least so that there is no memory leak.  My suggestion is that you create an interface (example: interface Releasable {} and define a method called release() and maybe a flag called released that you can use to prevent running release() more than once."}, {"owner": {"reputation": 2435, "user_id": 1872867, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/PorWX.jpg?s=128&g=1", "display_name": "Tom Mettam", "link": "https://stackoverflow.com/users/1872867/tom-mettam"}, "reply_to_user": {"reputation": 2417, "user_id": 609862, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/124382dae2895c057e94dca4455b464a?s=128&d=identicon&r=PG", "display_name": "asiby", "link": "https://stackoverflow.com/users/609862/asiby"}, "edited": false, "score": 7, "creation_date": 1544618747, "post_id": 28885654, "comment_id": 94339193, "body": "@asiby - that would be an appropriate <i>workaround</i>, but that solution is <b>not a destructor</b>.  This answer is correct - Javascript has no destructors."}, {"owner": {"reputation": 1606, "user_id": 1461154, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/82d0e33bd5d4989410c7e67cefdf056c?s=128&d=identicon&r=PG", "display_name": "James M. Lay", "link": "https://stackoverflow.com/users/1461154/james-m-lay"}, "edited": false, "score": 0, "creation_date": 1563740615, "post_id": 28885654, "comment_id": 100789053, "body": "Optimistically, I&#39;d make the case that TS could (and should!) support destructors. TypeScript has been able to implement static typing on top of a dynamically typed runtime (js), so I&#39;d not be so quick to assume that RAII couldn&#39;t be implemented on top of JS using the same approach."}, {"owner": {"reputation": 1606, "user_id": 1461154, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/82d0e33bd5d4989410c7e67cefdf056c?s=128&d=identicon&r=PG", "display_name": "James M. Lay", "link": "https://stackoverflow.com/users/1461154/james-m-lay"}, "edited": false, "score": 0, "creation_date": 1563740674, "post_id": 28885654, "comment_id": 100789067, "body": "To make my case, I made <a href=\"https://gist.github.com/jameslaydigital/356121695208b9cae0ce30dd46c471e7\" rel=\"nofollow noreferrer\">a gist demonstrating how a fictitious language called DestructorScript might approach this feat</a>."}, {"owner": {"reputation": 1606, "user_id": 1461154, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/82d0e33bd5d4989410c7e67cefdf056c?s=128&d=identicon&r=PG", "display_name": "James M. Lay", "link": "https://stackoverflow.com/users/1461154/james-m-lay"}, "edited": false, "score": 4, "creation_date": 1563743332, "post_id": 28885654, "comment_id": 100789679, "body": "Lastly, destructors require no relationship to the GC to work. Strictly speaking, destructors are called when an object&#39;s lifetime ends, not when an object is collected (which has to be AFTER the destructor is called, anyway). Therefore, we don&#39;t need to sync the destructor invocation with the GC&#39;s actions. Actually, a destructor can be fired at ANY point before collection. If a language&#39;s semantics support static lifetimes, the compiler can synthesize an <code>obj.destruct()</code> at the point just before the object&#39;s lifetime expires (e.g. when it leaves program scope)."}, {"owner": {"reputation": 5003, "user_id": 584490, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/suHug.jpg?s=128&g=1", "display_name": "Tiberiu-Ionu\u021b Stan", "link": "https://stackoverflow.com/users/584490/tiberiu-ionu%c8%9b-stan"}, "edited": false, "score": 1, "creation_date": 1608303956, "post_id": 28885654, "comment_id": 115549962, "body": "You are incorrect. The only way to allow garbage collection if you are listening for events or are listened to for events is to unsubscribe the event listeners.  The method of doing this is by calling a destructor method, which sometimes calls other destructor methods of other referenced class instances, if appropiate, also for the reason of stopping event listeners.  Also, at least in NodeJS, observing GC actions is now possible."}], "tags": [], "owner": {"reputation": 162223, "user_id": 1704166, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/d256baab2fcfd81b0f109d394404fd67?s=128&d=identicon&r=PG", "display_name": "Ryan Cavanaugh", "link": "https://stackoverflow.com/users/1704166/ryan-cavanaugh"}, "is_accepted": true, "score": 72, "last_activity_date": 1425582226, "creation_date": 1425582226, "answer_id": 28885654, "question_id": 28885625, "link": "https://stackoverflow.com/questions/28885625/is-there-destructor-in-typescript/28885654#28885654", "title": "Is there destructor in typeScript", "body": "<p>JavaScript uses garbage collection to automatically delete objects when they are no longer referenced. There is no concept of destructors or finalizers.</p>\n\n<p>You can't observe when an object is deleted by the garbage collector, nor is it predictable.</p>\n"}, {"comments": [{"owner": {"reputation": 5738, "user_id": 7496073, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/9ad17da5f307d0462eff39880d8f105b?s=128&d=identicon&r=PG&f=1", "display_name": "John Montgomery", "link": "https://stackoverflow.com/users/7496073/john-montgomery"}, "edited": false, "score": 1, "creation_date": 1556213072, "post_id": 55851640, "comment_id": 98370751, "body": "Can you elaborate on how this works? My understanding of the <code>delete</code> operator is that it just removes that reference to the object, and garbage collection still happens unpredictably as usual."}, {"owner": {"reputation": 3, "user_id": 6820264, "user_type": "registered", "accept_rate": 0, "profile_image": "https://graph.facebook.com/564877260371450/picture?type=large", "display_name": "Thomas Thornier", "link": "https://stackoverflow.com/users/6820264/thomas-thornier"}, "reply_to_user": {"reputation": 5738, "user_id": 7496073, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/9ad17da5f307d0462eff39880d8f105b?s=128&d=identicon&r=PG&f=1", "display_name": "John Montgomery", "link": "https://stackoverflow.com/users/7496073/john-montgomery"}, "edited": false, "score": 1, "creation_date": 1563368418, "post_id": 55851640, "comment_id": 100676082, "body": "&quot;As of 2019, it is not possible to explicitly or programmatically trigger garbage collection in JavaScript.&quot; - Mozilla. But this scaffold provides a predictable way the object can be considered garbage."}, {"owner": {"reputation": 9764, "user_id": 1171509, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/c198605581434ac4ef852e88f70369ed?s=128&d=identicon&r=PG", "display_name": "jacobq", "link": "https://stackoverflow.com/users/1171509/jacobq"}, "edited": false, "score": 0, "creation_date": 1569008668, "post_id": 55851640, "comment_id": 102470716, "body": "Even as a work-around it&#39;s not that simple. Suppose the class sets an interval timer that calls one of its methods. That&#39;s just one of the many many things that can prevent the object from being destroyed during garbage collection. There is often a lot of confusion regarding <code>delete</code>, especially among newcomers to JavaScript, and I fear this answer perpetuates that. <b><code>delete</code> has nothing to do with garbage collection.</b> In practice, it seems that the way to implement predictable resource clean-up is to add a method (e.g. <code>destroy</code>) then call it when the object is no longer needed by the app."}, {"owner": {"reputation": 5868, "user_id": 2557263, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a28006d7f96af66be38c4c9bd52af344?s=128&d=identicon&r=PG", "display_name": "Alejandro", "link": "https://stackoverflow.com/users/2557263/alejandro"}, "edited": false, "score": 0, "creation_date": 1599510128, "post_id": 55851640, "comment_id": 112790380, "body": "@ThomasThornier <code>the object can be considered garbage</code> Sure, we always had that, when a variable goes out of scope, explicitly deleted or the last reference to it no longer points to the object. But the question wasn&#39;t about that, it&#39;s about <b>when the object is actuall garbage-collected</b>, not when it becomes a candidate for garbage collection."}, {"owner": {"reputation": 2630, "user_id": 436034, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/402d03b69b5fe3185b2e56f6d626446e?s=128&d=identicon&r=PG", "display_name": "Trinidad", "link": "https://stackoverflow.com/users/436034/trinidad"}, "edited": false, "score": 0, "creation_date": 1602118987, "post_id": 55851640, "comment_id": 113622209, "body": "There is a conceptual misunderstanding going on. The concept of destructor is only tangentially related to garbage collection, as in some languages the GC may be the one calling it, but that&#39;s not necessarily the case at all and an instance could be disposed or have it&#39;s destructor called in a moment before GC but not tied to it at all. Some languages do tie their concept of &quot;destructor&quot; to GC, but in practice implementors of IDisposable have 2 types of destructors, one being that can be used deterministically and other not. But that is just a specific implementation, not the general concept."}], "tags": [], "owner": {"reputation": 3, "user_id": 6820264, "user_type": "registered", "accept_rate": 0, "profile_image": "https://graph.facebook.com/564877260371450/picture?type=large", "display_name": "Thomas Thornier", "link": "https://stackoverflow.com/users/6820264/thomas-thornier"}, "is_accepted": false, "score": -9, "last_activity_date": 1556211776, "last_edit_date": 1556211776, "creation_date": 1556202299, "answer_id": 55851640, "question_id": 28885625, "link": "https://stackoverflow.com/questions/28885625/is-there-destructor-in-typescript/55851640#55851640", "title": "Is there destructor in typeScript", "body": "<p>You can actually</p>\n\n<pre><code>    class MyClass {\n        constructor(input1, input2){\n             this.in1 = input1;\n             this.in2 = input2;\n         }\n\n    }\n    let myObject = {};\n\n\n    try {\n         myObject = {\n             classHandler: new MyClass('1','2')\n         }\n    } catch (e) {\n    } finally {\n        delete myObject.classHandler\n    }\n</code></pre>\n"}], "owner": {"reputation": 653, "user_id": 3955528, "user_type": "registered", "profile_image": "https://graph.facebook.com/100001194311377/picture?type=large", "display_name": "G&#225;bor Lup&#225;k", "link": "https://stackoverflow.com/users/3955528/g%c3%a1bor-lup%c3%a1k"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 47899, "favorite_count": 3, "accepted_answer_id": 28885654, "answer_count": 2, "score": 65, "last_activity_date": 1578413839, "creation_date": 1425582097, "last_edit_date": 1442845083, "question_id": 28885625, "link": "https://stackoverflow.com/questions/28885625/is-there-destructor-in-typescript", "title": "Is there destructor in typeScript", "body": "<p>Is there destructor in TypeScript? If not, how can I delete an object?\nI tried <code>destructor()</code> and <code>~ClassName()</code> but it didn't work.</p>\n"}, {"tags": ["unit-testing", "typescript"], "answers": [{"tags": [], "owner": {"reputation": 80876, "user_id": 188246, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/bTzLq.jpg?s=128&g=1", "display_name": "David Sherret", "link": "https://stackoverflow.com/users/188246/david-sherret"}, "is_accepted": false, "score": 0, "last_activity_date": 1425571965, "creation_date": 1425571965, "answer_id": 28882474, "question_id": 28879507, "link": "https://stackoverflow.com/questions/28879507/accessing-modules-local-var/28882474#28882474", "title": "Accessing module&#39;s local var", "body": "<p>No, looking at the generated JavaScript helps in these situations:</p>\n\n<pre><code>var m;\n(function (m) {\n    var i = 0;\n    function go() {\n        ++i;\n    }\n    m.go = go;\n})(m || (m = {}));\n</code></pre>\n\n<p>As you can see, <code>var i</code> is scoped within the function and therefore inaccessible outside that function.</p>\n\n<p>Just follow your suggestion:</p>\n\n<blockquote>\n  <p>Of course I can export it, or make it static and wrap it in a class</p>\n</blockquote>\n"}], "owner": {"reputation": 1351, "user_id": 3415505, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/WqHbW.jpg?s=128&g=1", "display_name": "baryo", "link": "https://stackoverflow.com/users/3415505/baryo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 36, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1425571965, "creation_date": 1425563756, "question_id": 28879507, "link": "https://stackoverflow.com/questions/28879507/accessing-modules-local-var", "title": "Accessing module&#39;s local var", "body": "<p>For testing reasons, is there a way to access a module's local variable? </p>\n\n<pre><code>module m {\n   var i = 0;\n   export function go() {\n       ++i;\n   }\n}\n\nm.go();\nexpect(m[\"i\"]).toBe(1); // m[\"i\"] is undefined\n</code></pre>\n\n<p>[That is - is it possible to access a javascript function's local var?]</p>\n\n<p>Ofcourse I can export it, or make it static and wrap it in a class, but I'm looking for something cleaner.</p>\n"}, {"tags": ["visual-studio-2013", "typescript", "syntax-highlighting"], "answers": [{"tags": [], "owner": {"reputation": 2939, "user_id": 2089182, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/uS6EF.png?s=128&g=1", "display_name": "Dzienny", "link": "https://stackoverflow.com/users/2089182/dzienny"}, "is_accepted": false, "score": 1, "last_activity_date": 1426202808, "last_edit_date": 1426202808, "creation_date": 1426202038, "answer_id": 29022099, "question_id": 28878397, "link": "https://stackoverflow.com/questions/28878397/typescript-class-and-interface-highlighting-in-visual-studio-2013/29022099#29022099", "title": "Typescript Class and Interface highlighting in Visual Studio 2013", "body": "<p>It's not available in VS2013. According to the TypeScript development team <a href=\"https://github.com/Microsoft/TypeScript/issues/1200\" rel=\"nofollow\">the semantic colorization for colorizing types is only available in VS2015</a>.</p>\n"}], "owner": {"reputation": 13852, "user_id": 1489968, "user_type": "registered", "accept_rate": 61, "profile_image": "https://i.stack.imgur.com/uHIIM.png?s=128&g=1", "display_name": "Sven-Michael St&#252;be", "link": "https://stackoverflow.com/users/1489968/sven-michael-st%c3%bcbe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 523, "favorite_count": 0, "answer_count": 1, "score": 5, "last_activity_date": 1426202808, "creation_date": 1425560188, "last_edit_date": 1426009291, "question_id": 28878397, "link": "https://stackoverflow.com/questions/28878397/typescript-class-and-interface-highlighting-in-visual-studio-2013", "title": "Typescript Class and Interface highlighting in Visual Studio 2013", "body": "<p>How can I define the colors of the syntax highlighting of typscript classes and interfaces in Visual Studio 2013 Update 4? I can't find it in the items list of Fonts and Colors.</p>\n\n<p>The Hello World looks like:</p>\n\n<p><img src=\"https://i.stack.imgur.com/DSy9G.png\" alt=\"Syntax highlighting of Typescript\"></p>\n\n<p>I would prefer, if Greeter, HTMLElement and Date would look like in C# :)</p>\n\n<p><strong>Update:</strong> The Roslyn based Language Service is doing well. But only in VS 2015 Preview. <a href=\"http://blogs.msdn.com/b/typescript/archive/2014/11/12/announcing-typescript-1-3.aspx\" rel=\"nofollow noreferrer\">http://blogs.msdn.com/b/typescript/archive/2014/11/12/announcing-typescript-1-3.aspx</a> </p>\n"}, {"tags": ["angularjs", "typescript", "interceptor"], "comments": [{"owner": {"reputation": 2038, "user_id": 1996443, "user_type": "registered", "accept_rate": 52, "profile_image": "https://i.stack.imgur.com/SX8uf.jpg?s=128&g=1", "display_name": "Pranay Dutta", "link": "https://stackoverflow.com/users/1996443/pranay-dutta"}, "edited": false, "score": 1, "creation_date": 1426998999, "post_id": 28869375, "comment_id": 46596150, "body": "i had made a interceptor here <a href=\"http://stackoverflow.com/questions/20798626/write-http-interceptor-as-class/26670805#26670805\" title=\"write http interceptor as class\">stackoverflow.com/questions/20798626/&hellip;</a>"}], "answers": [{"tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": false, "score": 0, "last_activity_date": 1425525981, "creation_date": 1425525981, "answer_id": 28869453, "question_id": 28869375, "link": "https://stackoverflow.com/questions/28869375/typescript-interceptor-in-angularjs-not-working/28869453#28869453", "title": "TypeScript Interceptor in Angularjs Not Working", "body": "<p>I don't see <code>promise</code> defined anywhere. Note that due to the simplicity of interceptors I just use a function + factory: </p>\n\n<pre><code>app.factory('appHttpInterceptor', [function () {\n    return {\n        response: function (response) {\n            if (typeof (MiniProfiler) != 'undefined') {\n                var ids = response.headers()['x-miniprofiler-ids'];\n                if (ids) {\n                    MiniProfiler.fetchResultsExposed($.parseJSON(ids));\n                }\n            }\n\n            return response;\n        }\n    };\n}]);\n</code></pre>\n\n<p>And not use a <code>class</code>. </p>\n"}], "owner": {"reputation": 775, "user_id": 513056, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/423bfd2fb1a7772c00709c8a23a164ec?s=128&d=identicon&r=PG", "display_name": "hisoka21", "link": "https://stackoverflow.com/users/513056/hisoka21"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1309, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1460256056, "creation_date": 1425525386, "question_id": 28869375, "link": "https://stackoverflow.com/questions/28869375/typescript-interceptor-in-angularjs-not-working", "title": "TypeScript Interceptor in Angularjs Not Working", "body": "<p>My interceptor is not working (not triggered). Any error on my part? Sorry I'm still a rookie :(</p>\n\n<pre><code>module myApp {\nexport class HttpConfigurator {\n    public configure(httpProvider: ng.IHttpProvider) {\n        console.log(httpProvider);\n        console.log(httpProvider.interceptors[0]);\n\n        httpProvider.interceptors.push([\n            '$location',\n            '$q',\n            '$log',\n            ($location: ng.ILocationService, $q: ng.IQService, $log: ng.ILogService) =&gt; {\n                return promise =&gt; promise.then(\n                    response =&gt; { console.log(response.status); return response; },\n                    response =&gt; {\n                        console.log(response.status);\n                        if (response.status &gt;= 500) {\n\n                        }\n\n                        if (response.status === 401 || response.status === 403) {\n                            $location.path('/403');\n                            return $q.reject(response);\n                        } else {\n                            return $q.reject(response);\n                        }\n                    });\n            }]);\n    }\n}\n</code></pre>\n\n<p>}</p>\n\n<p>Note: Previously this is working when it was in javascript. When I converted it to typescript then the problem started.</p>\n"}]