[{"tags": ["interface", "typescript"], "answers": [{"tags": [], "owner": {"reputation": 7340, "user_id": 1146785, "user_type": "registered", "accept_rate": 42, "profile_image": "https://i.stack.imgur.com/l51PO.jpg?s=128&g=1", "display_name": "dcsan", "link": "https://stackoverflow.com/users/1146785/dcsan"}, "is_accepted": false, "score": 0, "last_activity_date": 1440624522, "last_edit_date": 1495539835, "creation_date": 1440624522, "answer_id": 32237012, "question_id": 32236392, "link": "https://stackoverflow.com/questions/32236392/can-i-use-an-interface-for-a-property-list/32237012#32237012", "title": "can I use an interface for a property list?", "body": "<p>it seems this maybe down to my environment not recompiling these scripts. </p>\n\n<p>also the RegExp definition is taken from here:<br>\n<a href=\"https://stackoverflow.com/questions/14650014/typescript-and-regexp\">TypeScript and RegExp</a> \nand may not be fully functional</p>\n"}, {"comments": [{"owner": {"reputation": 7340, "user_id": 1146785, "user_type": "registered", "accept_rate": 42, "profile_image": "https://i.stack.imgur.com/l51PO.jpg?s=128&g=1", "display_name": "dcsan", "link": "https://stackoverflow.com/users/1146785/dcsan"}, "edited": false, "score": 0, "creation_date": 1440635725, "post_id": 32238246, "comment_id": 52359803, "body": "is this ES6 syntax? i&#39;m targeting ES5 at the moment. which one is more reliable?"}, {"owner": {"reputation": 53661, "user_id": 1413538, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/594bb80f7ed4b0b3770df7ad97c4d16a?s=128&d=identicon&r=PG", "display_name": "Brocco", "link": "https://stackoverflow.com/users/1413538/brocco"}, "reply_to_user": {"reputation": 7340, "user_id": 1146785, "user_type": "registered", "accept_rate": 42, "profile_image": "https://i.stack.imgur.com/l51PO.jpg?s=128&g=1", "display_name": "dcsan", "link": "https://stackoverflow.com/users/1146785/dcsan"}, "edited": false, "score": 0, "creation_date": 1440637187, "post_id": 32238246, "comment_id": 52360100, "body": "This is utilizing the es6 module syntax, but the TypeScript compiler can be configured to output ES5 code"}], "tags": [], "owner": {"reputation": 53661, "user_id": 1413538, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/594bb80f7ed4b0b3770df7ad97c4d16a?s=128&d=identicon&r=PG", "display_name": "Brocco", "link": "https://stackoverflow.com/users/1413538/brocco"}, "is_accepted": false, "score": 0, "last_activity_date": 1440631311, "creation_date": 1440631311, "answer_id": 32238246, "question_id": 32236392, "link": "https://stackoverflow.com/questions/32236392/can-i-use-an-interface-for-a-property-list/32238246#32238246", "title": "can I use an interface for a property list?", "body": "<p>You are exporting the interface like this:</p>\n\n<pre><code>export = IBotCommand;\n// but you are importing it with:\nimport ICommand = require('./ICommand');\n</code></pre>\n\n<p>With you export being the way it is, change your import to be:</p>\n\n<pre><code>import { IBotCommand } from './ICommand';\n</code></pre>\n\n<p>If you'd like to import it like this:</p>\n\n<pre><code>import ICommand from './ICommand';\n</code></pre>\n\n<p>then you will want to export it like this:</p>\n\n<pre><code>export default IBotCommand;\n</code></pre>\n\n<p>If you don't use <code>default</code> then you must use the object notation to reference your imports.</p>\n\n<p>There is a caveat to the object notation, in that you could also do this:</p>\n\n<pre><code>import * as cmds from './ICommand';\n// and use it like this:\nclass SomeClass implements cmds.IBotCommand {}\n</code></pre>\n"}], "owner": {"reputation": 7340, "user_id": 1146785, "user_type": "registered", "accept_rate": 42, "profile_image": "https://i.stack.imgur.com/l51PO.jpg?s=128&g=1", "display_name": "dcsan", "link": "https://stackoverflow.com/users/1146785/dcsan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 101, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1440631311, "creation_date": 1440621909, "last_edit_date": 1440622409, "question_id": 32236392, "link": "https://stackoverflow.com/questions/32236392/can-i-use-an-interface-for-a-property-list", "title": "can I use an interface for a property list?", "body": "<p>I have an interface def\nIn order to use in many places, i understand I have to split it into its own file (at least with ES5 output). So:</p>\n\n<p>//ICommand.ts></p>\n\n<pre><code>interface RegExp {\n    $1: string;\n    $2: string;\n    $3: string;\n    // etc\n}\n\ninterface IBotCommand {\n    regex: RegExp\n    // fixme - clearer def\n    // cmd: ():Output\n    cmd: any\n}\n\nexport = IBotCommand;\n</code></pre>\n\n<p>//BotCommand.ts ></p>\n\n<pre><code>import ICommand = require(\"./ICommand\");\nclass BotCommand {\n    commandList: ICommand\n</code></pre>\n\n<p>But this gives <code>Error: cannot find name ICommand</code>\nIs this possible? What is the best syntax?</p>\n"}, {"tags": ["typescript", "atom-editor"], "comments": [{"owner": {"reputation": 46031, "user_id": 906773, "user_type": "registered", "accept_rate": 95, "profile_image": "https://graph.facebook.com/100001846242483/picture?type=large", "display_name": "Jesse Good", "link": "https://stackoverflow.com/users/906773/jesse-good"}, "edited": false, "score": 3, "creation_date": 1440623727, "post_id": 32233148, "comment_id": 52355913, "body": "If you type <code>cmd(ctrl)+shift+p</code> and then <code>tsconfig</code> I believe the command should appear."}, {"owner": {"reputation": 3137, "user_id": 596505, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/PBPo0.jpg?s=128&g=1", "display_name": "cjones26", "link": "https://stackoverflow.com/users/596505/cjones26"}, "reply_to_user": {"reputation": 46031, "user_id": 906773, "user_type": "registered", "accept_rate": 95, "profile_image": "https://graph.facebook.com/100001846242483/picture?type=large", "display_name": "Jesse Good", "link": "https://stackoverflow.com/users/906773/jesse-good"}, "edited": false, "score": 0, "creation_date": 1440625221, "post_id": 32233148, "comment_id": 52356566, "body": "Jesse--thank you, that worked perfectly!  Can you please supply this as the answer so I can accept?"}], "answers": [{"tags": [], "owner": {"reputation": 46031, "user_id": 906773, "user_type": "registered", "accept_rate": 95, "profile_image": "https://graph.facebook.com/100001846242483/picture?type=large", "display_name": "Jesse Good", "link": "https://stackoverflow.com/users/906773/jesse-good"}, "is_accepted": true, "score": 63, "last_activity_date": 1440625835, "creation_date": 1440625835, "answer_id": 32237293, "question_id": 32233148, "link": "https://stackoverflow.com/questions/32233148/atom-typescript-complaining-about-tsconfig-json-how-can-i-automatically-create/32237293#32237293", "title": "atom-typescript complaining about tsconfig.json--how can I automatically create one?", "body": "<p>Type <code>cmd(ctrl)+shift+p</code> to bring up the list of commands and then <code>tsconfig</code> to find the command to generate the <code>tsconfig.json</code> file.</p>\n"}, {"tags": [], "owner": {"reputation": 1542, "user_id": 335681, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/efoE9.jpg?s=128&g=1", "display_name": "Gatspy", "link": "https://stackoverflow.com/users/335681/gatspy"}, "is_accepted": false, "score": 12, "last_activity_date": 1460473880, "creation_date": 1460473880, "answer_id": 36577329, "question_id": 32233148, "link": "https://stackoverflow.com/questions/32233148/atom-typescript-complaining-about-tsconfig-json-how-can-i-automatically-create/36577329#36577329", "title": "atom-typescript complaining about tsconfig.json--how can I automatically create one?", "body": "<p>install typescript,then excute \"tsc --init\" command in shell.\nwill generate tsconfig.json file.</p>\n"}], "owner": {"reputation": 3137, "user_id": 596505, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/PBPo0.jpg?s=128&g=1", "display_name": "cjones26", "link": "https://stackoverflow.com/users/596505/cjones26"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 9207, "favorite_count": 6, "accepted_answer_id": 32237293, "answer_count": 2, "score": 38, "last_activity_date": 1460473880, "creation_date": 1440610651, "question_id": 32233148, "link": "https://stackoverflow.com/questions/32233148/atom-typescript-complaining-about-tsconfig-json-how-can-i-automatically-create", "title": "atom-typescript complaining about tsconfig.json--how can I automatically create one?", "body": "<p>I just started playing with the \"atom-typescript\" plugin as referenced here:</p>\n\n<p><a href=\"http://basarat.gitbooks.io/typescript/content/docs/getting-started.html\" rel=\"noreferrer\">Getting Started With TypeScript</a></p>\n\n<p>The page states that to utilize atom-typescript, we literally just need to:</p>\n\n<blockquote>\n  <p>Now create a new .ts TypeScript file and start hacking away. AtomTS will take care of compiling it to .js and create a default tsconfig.json TypeScript project file for you.</p>\n</blockquote>\n\n<p>This is <em>not</em> the case as I've created a simple directory structure and when attempting to build any *.ts file receive the following error:</p>\n\n<p><a href=\"https://i.stack.imgur.com/SQUhm.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/SQUhm.png\" alt=\"No project file found.  Please use the &#39;Create tsconfig.json profile file&#39; command\"></a></p>\n\n<p>The error states I need to utilize the 'Create tsconfig.json project file' command--I simply cannot locate this command.</p>\n\n<p>I understand I can create the file manually but I would like to know if / where the file can be created automatically.  Thanks!</p>\n"}, {"tags": ["angularjs", "typescript", "typescript1.5"], "comments": [{"owner": {"reputation": 171, "user_id": 5569115, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d4aa8d0400d00ed3504ff693a242c016?s=128&d=identicon&r=PG&f=1", "display_name": "Rudi &#216;rnh&#248;j", "link": "https://stackoverflow.com/users/5569115/rudi-%c3%98rnh%c3%b8j"}, "edited": false, "score": 0, "creation_date": 1480324364, "post_id": 32230969, "comment_id": 68898379, "body": "Way late but: In my case it was som lingering cache that needed to be flushed. The solution for me was a bit hacky, but i set the return type to <code>:void</code> saved the file and then remove the return type and saved once again. Voila no more error."}], "answers": [{"comments": [{"owner": {"reputation": 6149, "user_id": 2343743, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/51e765c5c3938fecd79ead6c8439d1b6?s=128&d=identicon&r=PG", "display_name": "David Michael Gang", "link": "https://stackoverflow.com/users/2343743/david-michael-gang"}, "edited": false, "score": 0, "creation_date": 1440605676, "post_id": 32231065, "comment_id": 52345764, "body": "I have already the last version. I have both definitions in the tsd files, but typescript assumes that i want the first version"}, {"owner": {"reputation": 6149, "user_id": 2343743, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/51e765c5c3938fecd79ead6c8439d1b6?s=128&d=identicon&r=PG", "display_name": "David Michael Gang", "link": "https://stackoverflow.com/users/2343743/david-michael-gang"}, "edited": false, "score": 0, "creation_date": 1440606593, "post_id": 32231065, "comment_id": 52346331, "body": "somehow the directive definition is problematic. When i change in Idirective from   compile?: IDirectiveCompileFn to   compile?: any; the problem is solved"}, {"owner": {"reputation": 1664, "user_id": 2531058, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ijfUC.jpg?s=128&g=1", "display_name": "deKajoo", "link": "https://stackoverflow.com/users/2531058/dekajoo"}, "reply_to_user": {"reputation": 6149, "user_id": 2343743, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/51e765c5c3938fecd79ead6c8439d1b6?s=128&d=identicon&r=PG", "display_name": "David Michael Gang", "link": "https://stackoverflow.com/users/2343743/david-michael-gang"}, "edited": false, "score": 0, "creation_date": 1440607111, "post_id": 32231065, "comment_id": 52346659, "body": "have you tried doing : <code>var TabsPane = (itemTabs) : IDirectiveFactory =&gt; {}</code>"}, {"owner": {"reputation": 6149, "user_id": 2343743, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/51e765c5c3938fecd79ead6c8439d1b6?s=128&d=identicon&r=PG", "display_name": "David Michael Gang", "link": "https://stackoverflow.com/users/2343743/david-michael-gang"}, "edited": false, "score": 0, "creation_date": 1440609298, "post_id": 32231065, "comment_id": 52347854, "body": "When trying this i get : error TS2304: Cannot find name &#39;IDirectiveFactory&#39;."}, {"owner": {"reputation": 1664, "user_id": 2531058, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ijfUC.jpg?s=128&g=1", "display_name": "deKajoo", "link": "https://stackoverflow.com/users/2531058/dekajoo"}, "reply_to_user": {"reputation": 6149, "user_id": 2343743, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/51e765c5c3938fecd79ead6c8439d1b6?s=128&d=identicon&r=PG", "display_name": "David Michael Gang", "link": "https://stackoverflow.com/users/2343743/david-michael-gang"}, "edited": false, "score": 0, "creation_date": 1440624359, "post_id": 32231065, "comment_id": 52356186, "body": "sorry <code>ng.IDirectiveFactory</code> ?"}, {"owner": {"reputation": 176, "user_id": 2704262, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/836bf281462f5730812e26c95d0d7ba9?s=128&d=identicon&r=PG&f=1", "display_name": "Ashar", "link": "https://stackoverflow.com/users/2704262/ashar"}, "edited": false, "score": 0, "creation_date": 1478795525, "post_id": 32231065, "comment_id": 68304975, "body": "I had the same problem and for me, setting the return type of my function to ng.IDirective resolved this. Thank @deKajoo"}], "tags": [], "owner": {"reputation": 1664, "user_id": 2531058, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ijfUC.jpg?s=128&g=1", "display_name": "deKajoo", "link": "https://stackoverflow.com/users/2531058/dekajoo"}, "is_accepted": false, "score": 2, "last_activity_date": 1440624369, "last_edit_date": 1440624369, "creation_date": 1440603822, "answer_id": 32231065, "question_id": 32230969, "link": "https://stackoverflow.com/questions/32230969/why-do-i-get-error-ts2345-on-directive-definition/32231065#32231065", "title": "why do i get error TS2345 on directive definition?", "body": "<p>Maybe you have to update your version of angular.d.ts since in <a href=\"https://github.com/borisyankov/DefinitelyTyped/blob/master/angularjs/angular.d.ts\" rel=\"nofollow\">the latest</a> I can see :</p>\n\n<blockquote>\n  <p>directive(name: string, directiveFactory: IDirectiveFactory): IModule;</p>\n</blockquote>\n\n<p>which will gives something like : <code>.directive('myCustomer', function(){...}</code> once compiled</p>\n\n<p>just next to :</p>\n\n<blockquote>\n  <p>directive(name: string, inlineAnnotatedFunction: any[]): IModule;</p>\n</blockquote>\n\n<p>which will gives something like <code>.directive('myCurrentTime', ['$interval', 'dateFilter', function($interval, dateFilter) {...}</code> once compiled\n(it actually changed in <a href=\"https://github.com/borisyankov/DefinitelyTyped/blob/master/angularjs/angular.d.ts\" rel=\"nofollow\">this commit</a>, but it was a bug for a long time)</p>\n\n<p><strong>Edit (since you seems to have the latest version of angular.d.ts)</strong></p>\n\n<p>Try indicating the return type of your function by using this syntax :</p>\n\n<p><code>var TabsPane = (itemTabs) : ng.IDirectiveFactory =&gt; {}</code></p>\n"}, {"tags": [], "owner": {"reputation": 31, "user_id": 5952606, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-ezONXIDf-9w/AAAAAAAAAAI/AAAAAAAAB1U/nqr6z4NzM-s/photo.jpg?sz=128", "display_name": "Mike Kleiman", "link": "https://stackoverflow.com/users/5952606/mike-kleiman"}, "is_accepted": false, "score": 3, "last_activity_date": 1456068278, "last_edit_date": 1456068278, "creation_date": 1455904569, "answer_id": 35511747, "question_id": 32230969, "link": "https://stackoverflow.com/questions/32230969/why-do-i-get-error-ts2345-on-directive-definition/35511747#35511747", "title": "why do i get error TS2345 on directive definition?", "body": "<p>When running compile in a directive, it must always return something, so in this case a simple <code>return true;</code> added to the bottom of your compile function would solve your issues.</p>\n"}, {"tags": [], "owner": {"reputation": 123, "user_id": 4636015, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1177f4f7ec5e883d979b2dd3569485eb?s=128&d=identicon&r=PG&f=1", "display_name": "Wiesio Pie", "link": "https://stackoverflow.com/users/4636015/wiesio-pie"}, "is_accepted": false, "score": 5, "last_activity_date": 1511533692, "creation_date": 1511533692, "answer_id": 47475304, "question_id": 32230969, "link": "https://stackoverflow.com/questions/32230969/why-do-i-get-error-ts2345-on-directive-definition/47475304#47475304", "title": "why do i get error TS2345 on directive definition?", "body": "<p>I've encountered the same problem while migrating from old javascript angularJs 1.4.9 code to typescript 2.6 code. I'm using @types/angular ver 1.6.39. I've added 'any' as return type of the parameter function like:</p>\n\n<pre><code>    angular.module(\"app\")\n      .directive(\"tabsPane\", function TabsPane(itemTabs): any { \n            return {\n                restrict: 'E',\n                compile: compileTabs\n            };\n\n            function compileTabs(tElement) {\n                var template = createTabsTemplate();\n                tElement.append(template);\n            }\n       });\n</code></pre>\n\n<p>The error disappeard :)</p>\n"}], "owner": {"reputation": 6149, "user_id": 2343743, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/51e765c5c3938fecd79ead6c8439d1b6?s=128&d=identicon&r=PG", "display_name": "David Michael Gang", "link": "https://stackoverflow.com/users/2343743/david-michael-gang"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 6388, "favorite_count": 0, "answer_count": 3, "score": 8, "last_activity_date": 1511533692, "creation_date": 1440603553, "last_edit_date": 1440604446, "question_id": 32230969, "link": "https://stackoverflow.com/questions/32230969/why-do-i-get-error-ts2345-on-directive-definition", "title": "why do i get error TS2345 on directive definition?", "body": "<p>I try to migrate an existing angular app to typescript (version 1.5.3):</p>\n\n<p>Here is the code:</p>\n\n<pre><code>  'use strict';\n    angular.module('x')\n    .directive('tabsPane', TabsPane)\n\n    function TabsPane(itemTabs) {\n\n        return {\n            restrict: 'E',\n            compile: compileTabs\n        };\n\n        function compileTabs(tElement) {\n            var template = createTabsTemplate(); //function which i don't include here for brevity\n            tElement.append(template);\n        }}\n</code></pre>\n\n<p>When i compile the javascript i get:</p>\n\n<blockquote>\n  <p>error TS2345: Argument of type '(itemTabs: any) => { restrict: string; compile: (tElement: any) => void; }' is not assignable to parameter of type 'any[]'.\n    Property 'push' is missing in type '(itemTabs: any) => { restrict: string; compile: (tElement: any) => void; }'.</p>\n</blockquote>\n\n<p>I tried to understand why it complains here i went to the typescript definition of angular:</p>\n\n<p>Somehow typescript implies this definition</p>\n\n<blockquote>\n  <p>directive(name: string, inlineAnnotatedFunction: any[]): IModule;</p>\n</blockquote>\n\n<p>where the following definition would be more appropriate:</p>\n\n<blockquote>\n  <p>directive(name: string, directiveFactory: IDirectiveFactory): IModule;</p>\n</blockquote>\n\n<p>I am totally new to typescript, so I assume that i make something wrong, but i can't find anything relevant with google.</p>\n"}, {"tags": ["typescript", "visual-studio-code"], "comments": [{"owner": {"reputation": 7001, "user_id": 797249, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/89deb6b4afc8e485308f85b79ef44bcc?s=128&d=identicon&r=PG", "display_name": "Artiom", "link": "https://stackoverflow.com/users/797249/artiom"}, "edited": false, "score": 0, "creation_date": 1440705066, "post_id": 32230564, "comment_id": 52396440, "body": "please provide sample of code"}, {"owner": {"reputation": 6149, "user_id": 1860561, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/3rmIX.jpg?s=128&g=1", "display_name": "gitsitgo", "link": "https://stackoverflow.com/users/1860561/gitsitgo"}, "reply_to_user": {"reputation": 7001, "user_id": 797249, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/89deb6b4afc8e485308f85b79ef44bcc?s=128&d=identicon&r=PG", "display_name": "Artiom", "link": "https://stackoverflow.com/users/797249/artiom"}, "edited": false, "score": 0, "creation_date": 1441990074, "post_id": 32230564, "comment_id": 52914823, "body": "@Artiom this is about a tool error, not about a specific code issue"}, {"owner": {"reputation": 15083, "user_id": 261782, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/fcfaef50b12dc3b632d5dcaf1d4d26a5?s=128&d=identicon&r=PG", "display_name": "Steve Greatrex", "link": "https://stackoverflow.com/users/261782/steve-greatrex"}, "edited": false, "score": 0, "creation_date": 1445498786, "post_id": 32230564, "comment_id": 54351477, "body": "Why not install the typescript definition through nuget?  <a href=\"https://www.nuget.org/packages?q=TypeScript\" rel=\"nofollow noreferrer\">nuget.org/packages?q=TypeScript</a>"}], "owner": {"reputation": 21, "user_id": 1790204, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/40ea2111dd571f16d30e5e3d6b400125?s=128&d=identicon&r=PG", "display_name": "user1790204", "link": "https://stackoverflow.com/users/1790204/user1790204"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 234, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1442080723, "creation_date": 1440602464, "last_edit_date": 1442080723, "question_id": 32230564, "link": "https://stackoverflow.com/questions/32230564/visual-studio-code-unable-to-fetch-definition", "title": "Visual Studio Code Unable to Fetch Definition", "body": "<p>I'm trying to get intellisense using Visual Studio Code. </p>\n\n<p>Error:</p>\n\n<blockquote>\n  <p>Unable to fetch d.ts file at\n  <a href=\"https://raw.githubusercontent.com/borisyankov/DefinitelyTyped/master/jquery/jquery.d.ts\" rel=\"nofollow\">https://raw.githubusercontent.com/borisyankov/DefinitelyTyped/master/jquery/jquery.d.ts</a>:\n  [object Object]</p>\n</blockquote>\n\n<p>I get the error above when right clicking the $ in <code>$(\"#element\").addClass(\"class\")</code>; and hovering over the underlined message and clicking on \"Download type definition jquery.d.ts\" </p>\n\n<p>I have not found anyone with this error in any forums. </p>\n\n<p>Visual Studio Code Version : 0.7.10\nWindows 7 Enterprise - Service Pack 1</p>\n"}, {"tags": ["typescript"], "answers": [{"comments": [{"owner": {"reputation": 115, "user_id": 4361077, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cfe73ba251f3955e7274fee2e60f73ce?s=128&d=identicon&r=PG&f=1", "display_name": "LukasH", "link": "https://stackoverflow.com/users/4361077/lukash"}, "edited": false, "score": 1, "creation_date": 1440672086, "post_id": 32228674, "comment_id": 52374825, "body": "Even though I now understand how this works, I still find it strange. Even without the <code>--noImplicitAny</code> option I would presume that when I add a type to a function declaration then it will require any caller to pass that type. The meaning of <code>any</code> should still be &quot;this can be anything&quot;, but you shouldn&#39;t just pass an &quot;anything&quot; variable somewhere where a specific type is required."}, {"owner": {"reputation": 80876, "user_id": 188246, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/bTzLq.jpg?s=128&g=1", "display_name": "David Sherret", "link": "https://stackoverflow.com/users/188246/david-sherret"}, "reply_to_user": {"reputation": 115, "user_id": 4361077, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cfe73ba251f3955e7274fee2e60f73ce?s=128&d=identicon&r=PG&f=1", "display_name": "LukasH", "link": "https://stackoverflow.com/users/4361077/lukash"}, "edited": false, "score": 1, "creation_date": 1440701147, "post_id": 32228674, "comment_id": 52394410, "body": "@LukasH I see you&#39;ve programmed in c#. The <code>any</code> type currently works like a dynamic variable in c# (ex. <code>dynamic str = &quot;asdf&quot;; int num = str;</code> is ok). So like how you should avoid dynamic types in c#, I would recommend avoiding <code>any</code> types in TypeScript."}, {"owner": {"reputation": 115, "user_id": 4361077, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cfe73ba251f3955e7274fee2e60f73ce?s=128&d=identicon&r=PG&f=1", "display_name": "LukasH", "link": "https://stackoverflow.com/users/4361077/lukash"}, "edited": false, "score": 0, "creation_date": 1440747774, "post_id": 32228674, "comment_id": 52410553, "body": "I understand your point, but it&#39;s hard to avoid <code>any</code> when you&#39;re converting existing javascript project to typescript. For this kind of workflow turning on <code>--noImplicitAny</code> is not an option as it would need a rewrite of the whole code base. The <code>any</code> I would like to have is an object that can have any properties, but you can&#39;t pass it anywhere where a certain type is requested."}, {"owner": {"reputation": 80876, "user_id": 188246, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/bTzLq.jpg?s=128&g=1", "display_name": "David Sherret", "link": "https://stackoverflow.com/users/188246/david-sherret"}, "reply_to_user": {"reputation": 115, "user_id": 4361077, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cfe73ba251f3955e7274fee2e60f73ce?s=128&d=identicon&r=PG&f=1", "display_name": "LukasH", "link": "https://stackoverflow.com/users/4361077/lukash"}, "edited": false, "score": 2, "creation_date": 1440770562, "post_id": 32228674, "comment_id": 52424649, "body": "@LukasH I opened up <a href=\"https://github.com/Microsoft/TypeScript/issues/4524\" rel=\"nofollow noreferrer\">this github issue</a>."}], "tags": [], "owner": {"reputation": 80876, "user_id": 188246, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/bTzLq.jpg?s=128&g=1", "display_name": "David Sherret", "link": "https://stackoverflow.com/users/188246/david-sherret"}, "is_accepted": true, "score": 7, "last_activity_date": 1440597340, "creation_date": 1440597340, "answer_id": 32228674, "question_id": 32227277, "link": "https://stackoverflow.com/questions/32227277/typescript-typed-function-argument-accepts-any/32228674#32228674", "title": "TypeScript typed function argument accepts any", "body": "<p>It's because you opt out of type-checking when you use <code>any</code> types.</p>\n\n<blockquote>\n  <p>[Sometimes] we want to opt-out of type-checking and let the values pass through compile-time checks. To do so, we label these with the 'any' type. - <a href=\"http://www.typescriptlang.org/Handbook#basic-types-any\" rel=\"noreferrer\">Handbook</a></p>\n</blockquote>\n\n<p>To avoid troubles with <code>any</code>:</p>\n\n<ol>\n<li>Use the <code>--noImplicitAny</code> compiler option (or turn off <code>Allow implicit any types</code> in Visual Studio).</li>\n<li>Don't use explicit <code>any</code> types except where necessary (Ex. <code>var x: any</code>)</li>\n</ol>\n"}], "owner": {"reputation": 115, "user_id": 4361077, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cfe73ba251f3955e7274fee2e60f73ce?s=128&d=identicon&r=PG&f=1", "display_name": "LukasH", "link": "https://stackoverflow.com/users/4361077/lukash"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2351, "favorite_count": 0, "accepted_answer_id": 32228674, "answer_count": 1, "score": 9, "last_activity_date": 1440597340, "creation_date": 1440593735, "question_id": 32227277, "link": "https://stackoverflow.com/questions/32227277/typescript-typed-function-argument-accepts-any", "title": "TypeScript typed function argument accepts any", "body": "<p>Here is a TypeScript snippet that compiles just fine (using 1.5.3).</p>\n\n<pre><code>function alertNumber(a: number) {\n    alert(a + 1);\n}\nvar x:any = \"string\";\nalertNumber(x);\n</code></pre>\n\n<p>How is it possible that a function requesting parameter of a certain type can be called with argument of type <code>any</code>?</p>\n"}, {"tags": ["javascript", "angularjs", "typescript", "angular-new-router"], "answers": [{"comments": [{"owner": {"reputation": 6328, "user_id": 515774, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/HEi63.jpg?s=128&g=1", "display_name": "Muthukumar", "link": "https://stackoverflow.com/users/515774/muthukumar"}, "edited": false, "score": 0, "creation_date": 1440747127, "post_id": 32255491, "comment_id": 52410177, "body": "Thanks for the answer. It was informative. But I had to do something else to make my app work."}], "tags": [], "owner": {"reputation": 3715, "user_id": 3272249, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/sgy73.png?s=128&g=1", "display_name": "wjohnsto", "link": "https://stackoverflow.com/users/3272249/wjohnsto"}, "is_accepted": false, "score": 1, "last_activity_date": 1440695206, "creation_date": 1440695206, "answer_id": 32255491, "question_id": 32226557, "link": "https://stackoverflow.com/questions/32226557/property-routeconfig-does-not-exist-on-type-router-any-void/32255491#32255491", "title": "Property &#39;$routeConfig&#39; does not exist on type &#39;($router: any) =&gt; void&#39;", "body": "<p>You have a couple options, either use a module or a class.</p>\n\n<p>The module route:</p>\n\n<pre><code>module AppController {\n    export let $routeConfig = [{\n        path: '/',\n        component: 'home'\n    }, {\n        path: '/detail/:id',\n        component: 'detail'\n    }, {\n        path: '/login',\n        component: 'login'\n    }];\n}\n\nfunction AppController($router) {\n\n}\n</code></pre>\n\n<p>and the class route:</p>\n\n<pre><code>class AppController {\n    static $routeConfig = [{\n        path: '/',\n        component: 'home'\n    }, {\n        path: '/detail/:id',\n        component: 'detail'\n    }, {\n        path: '/login',\n        component: 'login'\n    }];\n\n    constructor($router) {\n\n    }\n}\n</code></pre>\n\n<p>Depending upon your needs, use whichever works best for you.</p>\n"}, {"tags": [], "owner": {"reputation": 6328, "user_id": 515774, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/HEi63.jpg?s=128&g=1", "display_name": "Muthukumar", "link": "https://stackoverflow.com/users/515774/muthukumar"}, "is_accepted": true, "score": 0, "last_activity_date": 1440745603, "creation_date": 1440745603, "answer_id": 32265204, "question_id": 32226557, "link": "https://stackoverflow.com/questions/32226557/property-routeconfig-does-not-exist-on-type-router-any-void/32265204#32265204", "title": "Property &#39;$routeConfig&#39; does not exist on type &#39;($router: any) =&gt; void&#39;", "body": "<p>I made it work somehow. Following is the code. Now the new route compiles and works without any error.</p>\n\n<pre><code>/// &lt;reference path=\"../Scripts/typings/angularjs/angular.d.ts\"/&gt;\n/// &lt;reference path=\"../Scripts/typings/angularjs/angular-route.d.ts\"/&gt;\nmodule Application {\n    \"use strict\";\n    angular.module(\"app\", ['ngNewRouter']);\n    export var getModule: () =&gt; ng.IModule = () =&gt; {\n        return angular.module(\"app\");\n    }\n\n    var AppController: any, $routeConfig: any;\n\n    getModule().controller('AppController', ['$router', AppController = ($router) =&gt; {    }]);\n\n    AppController.$routeConfig = [\n        {\n            path: '/',\n            component: 'home'\n        },\n        {\n            path: '/detail/:id',\n            component: 'detail'\n        },\n        {\n            path: '/login',\n            component: 'login'\n        }];\n}\n</code></pre>\n"}], "owner": {"reputation": 6328, "user_id": 515774, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/HEi63.jpg?s=128&g=1", "display_name": "Muthukumar", "link": "https://stackoverflow.com/users/515774/muthukumar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1224, "favorite_count": 0, "accepted_answer_id": 32265204, "answer_count": 2, "score": 1, "last_activity_date": 1440745603, "creation_date": 1440591722, "question_id": 32226557, "link": "https://stackoverflow.com/questions/32226557/property-routeconfig-does-not-exist-on-type-router-any-void", "title": "Property &#39;$routeConfig&#39; does not exist on type &#39;($router: any) =&gt; void&#39;", "body": "<p>I am trying to use the angular new router in v1.4. I am using Typescript. When I try to compile, I get the following error.</p>\n\n<pre><code>Property '$routeConfig' does not exist on type '($router: any) =&gt; void'\n</code></pre>\n\n<p>This is my code</p>\n\n<pre><code> /// &lt;reference path=\"../Scripts/typings/angularjs/angular.d.ts\"/&gt;\n/// &lt;reference path=\"../Scripts/typings/angularjs/angular-route.d.ts\"/&gt;\nmodule Application {\n    \"use strict\";\n    angular.module(\"app\", ['ngNewRouter']);\n    export var getModule: () =&gt; ng.IModule = () =&gt; {\n        return angular.module(\"app\");\n    }\n\n    getModule().controller('AppController', ['$router', AppController]);\n\n    AppController.$routeConfig = [{\n        path: '/',\n        component: 'home'\n    }, {\n            path: '/detail/:id',\n            component: 'detail'\n        }, {\n            path: '/login',\n            component: 'login'\n        }];\n\n    function AppController($router) {\n\n    }\n\n}\n</code></pre>\n\n<p>Any help is appreciated. Thanks.</p>\n"}, {"tags": ["javascript", "node.js", "npm", "typescript"], "comments": [{"owner": {"reputation": 7686, "user_id": 1602049, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/84787ebc102aac57806f98fa87aa10d0?s=128&d=identicon&r=PG", "display_name": "nitishagar", "link": "https://stackoverflow.com/users/1602049/nitishagar"}, "edited": false, "score": 0, "creation_date": 1440579404, "post_id": 32222010, "comment_id": 52327066, "body": "Can you also paste in the <code>package.json</code> for <code>lib-project</code>"}], "answers": [{"tags": [], "owner": {"reputation": 7686, "user_id": 1602049, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/84787ebc102aac57806f98fa87aa10d0?s=128&d=identicon&r=PG", "display_name": "nitishagar", "link": "https://stackoverflow.com/users/1602049/nitishagar"}, "is_accepted": false, "score": 0, "last_activity_date": 1440581081, "last_edit_date": 1495541677, "creation_date": 1440581081, "answer_id": 32222742, "question_id": 32222010, "link": "https://stackoverflow.com/questions/32222010/require-custom-module-with-npm-and-typescript/32222742#32222742", "title": "Require custom module with npm and typescript", "body": "<p>You might want to refer to: <a href=\"https://stackoverflow.com/questions/29653735/typescript-import-external-module-from-node-modules\">TypeScript: import external module from node_modules</a></p>\n\n<p><strong>Gist:</strong>\nCompile using <code>tsc --module commonjs --declaration index.ts</code> and then use the following while import:</p>\n\n<pre><code>/// &lt;reference path=\"node_modules/lib-project/index.d.ts\" /&gt;\nimport a = require('lib-project');\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 53661, "user_id": 1413538, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/594bb80f7ed4b0b3770df7ad97c4d16a?s=128&d=identicon&r=PG", "display_name": "Brocco", "link": "https://stackoverflow.com/users/1413538/brocco"}, "is_accepted": true, "score": 1, "last_activity_date": 1440585079, "last_edit_date": 1440585079, "creation_date": 1440584038, "answer_id": 32223816, "question_id": 32222010, "link": "https://stackoverflow.com/questions/32222010/require-custom-module-with-npm-and-typescript/32223816#32223816", "title": "Require custom module with npm and typescript", "body": "<p>I believe what you're missing is a <code>lib-project.d.ts</code> file in the root of the lib project. This will fill the role of what you already have in index.ts, but you'll need to tweak it slightly to fill this role</p>\n\n<pre><code>|-- package.json\n|-- gulpfile.js\n|-- lib-project.d.ts &lt;-- formerly index.ts\n|-- dist\n   |-- a.js\n| src\n   |-- a.ts\n</code></pre>\n\n<p>Where lib-project.d.ts would look like this:</p>\n\n<pre><code>declare module 'lib-project' {\n  import a = require('./a');\n  export = {A: a.A};\n}\n</code></pre>\n\n<p>Then when consuming this you can use:</p>\n\n<pre><code>import {A} from 'lib-project';\n</code></pre>\n\n<p>You can reference what I've done here for exporting: <a href=\"https://github.com/Brocco/ng-bridge\" rel=\"nofollow\">https://github.com/Brocco/ng-bridge</a></p>\n\n<p>And importing too: <a href=\"https://github.com/Brocco/ng-bridge-samples/blob/master/app/app.ts#L1\" rel=\"nofollow\">https://github.com/Brocco/ng-bridge-samples/blob/master/app/app.ts#L1</a></p>\n"}], "owner": {"reputation": 6265, "user_id": 1614677, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/BDqPW.jpg?s=128&g=1", "display_name": "Manu", "link": "https://stackoverflow.com/users/1614677/manu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 811, "favorite_count": 0, "accepted_answer_id": 32223816, "answer_count": 2, "score": 0, "last_activity_date": 1440585079, "creation_date": 1440579041, "last_edit_date": 1440580209, "question_id": 32222010, "link": "https://stackoverflow.com/questions/32222010/require-custom-module-with-npm-and-typescript", "title": "Require custom module with npm and typescript", "body": "<p>Lets play with 2 projects: <em>main-project</em> and <em>lib-project</em> both of them are written in typescript, and then using <em>gulp</em> compiled to common javascript.<br>\nOur goal is require <em>lib-project</em> in <em>main-project</em>.</p>\n\n<p><strong><em>lib-project</em></strong></p>\n\n<pre><code>|-- package.json\n|-- gulpfile.js\n|-- dist\n   |-- index.js\n   |-- a.js\n| src\n   |-- index.ts\n   |-- a.ts\n</code></pre>\n\n<p>We have created those js compiling them from their ts; lets take a quick look to them (we have index because we'll want eventually so many exports)</p>\n\n<p><strong><em>index.ts</em></strong></p>\n\n<pre><code>import a = require('./a');\nmodule.exports = {A: a.A};\n</code></pre>\n\n<p><strong><em>a.ts</em></strong></p>\n\n<pre><code>export class A {\n  field: string;\n  constructor(aField: string) {this.field = aField;}\n  toString() : string {return `A: ${this.field}`;}\n}\n</code></pre>\n\n<p><strong><em>index.js</em></strong></p>\n\n<pre><code>var a = require('./a');\nmodule.exports = { A: a.A };\n</code></pre>\n\n<p><strong><em>a.js</em></strong></p>\n\n<pre><code>var A = (function () {\n    function A(aField) {\n        this.field = aField;\n    }\n    A.prototype.toString = function () {\n        return \"A: \" + this.field;\n    };\n    return A;\n})();\nexports.A = A;\n</code></pre>\n\n<hr>\n\n<p>That was the introduction; now, I push it to a git repo and require it as a <em>dependency</em> in the <em>package.json</em> and run <code>npm install</code>, our <em>main-project</em> is: </p>\n\n<p><strong>main-project</strong></p>\n\n<pre><code>|-- package.json\n|-- gulpfile.js\n|-- node_modules\n    |--lib-project\n       |-- dist\n         |-- index.js\n         |-- a.js\n    |--node\n       |...\n |--src\n    |--app.ts\n</code></pre>\n\n<p>Is in <em>app.ts</em> where this is failing: <strong><code>cannot find module lib-project</code></strong></p>\n\n<p><strong><em>app.ts</em></strong></p>\n\n<pre><code>import a = require('lib-project');\nvar foo = new a.A('HELLO');\nconsole.log(foo.toString());\n</code></pre>\n\n<hr>\n\n<p>What have I tried?</p>\n\n<ol>\n<li>move the index.js of the lib-project to the root folder</li>\n<li>In the package.json, set the field <code>\"main\": \"dist/index.js\"</code></li>\n<li><code>import a = require('node_modules/lib-project/dist/index');</code></li>\n<li><code>import a = require('../node_modules/lib-project/dist/index');</code></li>\n<li>Multiple version of the tsc (typescript compiler)</li>\n</ol>\n\n<p>Any help appreciated :)</p>\n\n<hr>\n\n<p><strong>EDIT</strong></p>\n\n<p><strong><em>package.json</em></strong></p>\n\n<pre><code>{\n  \"name\": \"lib-project\",\n  \"version\": \"0.1.0\",\n  \"description\": \"description here\",\n  \"main\": \"dist/index.js\",\n  \"scripts\": {},\n  \"author\": \"\",\n  \"license\": \"MIT\",\n  \"dependencies\": {\n  }\n}\n</code></pre>\n"}, {"tags": ["javascript", "angularjs", "typescript", "jsdoc"], "comments": [{"owner": {"reputation": 793, "user_id": 1922857, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/cc3dc5254756dad7e820392e4395fd64?s=128&d=identicon&r=PG&f=1", "display_name": "jchnxu", "link": "https://stackoverflow.com/users/1922857/jchnxu"}, "edited": false, "score": 0, "creation_date": 1442667117, "post_id": 32219252, "comment_id": 53182323, "body": "In the previous month, I migrated my frontend model classes to typescript. The result was that I nearly used the interfaces I designed in other places besides my models, probably because all the code is working just fine (for now) and the schedule is tight. So I could not utilize type check in the whole project, which makes the migration barely useful. Finally I removed all the specific property definition in my models. If there&#39;s no real type check, why exist at all. Moreover, I can respond quickly to model changes after doing that."}], "answers": [{"tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": true, "score": 3, "last_activity_date": 1440570634, "creation_date": 1440570634, "answer_id": 32219455, "question_id": 32219252, "link": "https://stackoverflow.com/questions/32219252/angularjs-class-type-check-solution/32219455#32219455", "title": "AngularJS class type check solution", "body": "<blockquote>\n  <p>may need to rewrite all the legacy code=.=</p>\n</blockquote>\n\n<p>Consider the transform from : </p>\n\n<pre><code>.factory('ContainerTypeModel', function () {\n    var ContainerTypeModel = function (name, constantCode) {\n        this.name = name || \"\";\n        this.constantCode = constantCode || \"\";\n    };\n    return ContainerTypeModel;\n})\n</code></pre>\n\n<p>to : </p>\n\n<pre><code>class ContainerTypeModel {\n    name: string;\n    constantCode: string;\n    constructor (name, constantCode) {\n        this.name = name || \"\";\n        this.constantCode = constantCode || \"\";\n    };\n}\n // later\n.service('ContainerTypeModel', ContainerTypeModel)\n</code></pre>\n\n<p>The good news is that <em>you can do this progressively</em>. And when you do make the shift it will start highlighting mistakes ... so the transformation will be mostly <em>guided by the compiler</em>.</p>\n\n<h1>More</h1>\n\n<p>Checkout <a href=\"http://basarat.gitbooks.io/typescript/content/docs/why-typescript.html\" rel=\"nofollow\">why typescript</a> and <a href=\"http://basarat.gitbooks.io/typescript/content/docs/types/migrating.html\" rel=\"nofollow\">migrating from JavaScript to TypeScript</a>.</p>\n"}, {"tags": [], "owner": {"reputation": 5844, "user_id": 1075401, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/b38e877fe17599d7eec56bfcc52eb63d?s=128&d=identicon&r=PG", "display_name": "gilamran", "link": "https://stackoverflow.com/users/1075401/gilamran"}, "is_accepted": false, "score": 1, "last_activity_date": 1440574116, "creation_date": 1440574116, "answer_id": 32220459, "question_id": 32219252, "link": "https://stackoverflow.com/questions/32219252/angularjs-class-type-check-solution/32220459#32220459", "title": "AngularJS class type check solution", "body": "<p>You can use interfaces to describe your business model, and a factory to create your domain objects</p>\n\n<p>Something like:</p>\n\n<pre><code>interface IContainerTypeModel {\n  name : string;\n  constantCode: string;\n}\n\ninterface IContainerTypeFactory {\n  (name:string, constantCode:string) : IContainerTypeModel; \n}\n\nangular.factory('ContainerTypeFactory', function():IContainerTypeFactory {\n    var containerTypeFactory : IContainerTypeFactory = function (name, constantCode) {\n        return {\n           name : name,\n           constantCode : constantCode\n        }\n    };\n    return containerTypeFactory;\n});\n</code></pre>\n"}], "owner": {"reputation": 793, "user_id": 1922857, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/cc3dc5254756dad7e820392e4395fd64?s=128&d=identicon&r=PG&f=1", "display_name": "jchnxu", "link": "https://stackoverflow.com/users/1922857/jchnxu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 546, "favorite_count": 0, "accepted_answer_id": 32219455, "answer_count": 2, "score": 1, "last_activity_date": 1440574116, "creation_date": 1440569883, "last_edit_date": 1592644375, "question_id": 32219252, "link": "https://stackoverflow.com/questions/32219252/angularjs-class-type-check-solution", "title": "AngularJS class type check solution", "body": "<h2>In short</h2>\n<p>How can I do type check on constructors and functions of a user-defined class, typically in AngularJS's dependency injection environment?</p>\n<h2>Background</h2>\n<p>I have a legacy angularjs code with heavy data objects. Code files are filled with so many (about 50) simple angularjs factories like:</p>\n<pre><code>    .factory('ContainerTypeModel', function () {\n        var ContainerTypeModel = function (name, constantCode) {\n            this.name = name || &quot;&quot;;\n            this.constantCode = constantCode || &quot;&quot;;\n        };\n        return ContainerTypeModel;\n    })\n\n    .factory('ContainerTypeFactory', ['ContainerTypeModel', function (ContainerTypeModel) {\n        var ContainerTypeFactory = {\n            newByModel: function (/** ContainerTypeModel */model) {\n                return new ContainerTypeModel(\n                    model.name,\n                    model.constantCode\n                );\n            }\n        };\n        return ContainerTypeFactory;\n    }])\n</code></pre>\n<p>Sadly, I may need to change the the property of the models(like <code>ContainerTypeModel</code>) a lot due to business reasons. And that is definitely causing the constructor and factory function calls mismatch the parameters. So I</p>\n<h2>My surveys</h2>\n<h2>typescript:</h2>\n<p>may need to rewrite all the legacy code=.=</p>\n<h2>Facebook flow:</h2>\n<p>may not working due to dependency injection.</p>\n<h2>JSDoc:</h2>\n<p>(I'm currently working in WebStorm 10) still figuring out how to do object type checking, like checking the parameter in <code>ContainerTypeFactory.newByModel(model)</code>.</p>\n"}, {"tags": ["javascript", "node.js", "visual-studio-2013", "typescript"], "comments": [{"owner": {"reputation": 1141, "user_id": 2023218, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a09f8323c3df64e6649c9ba9c98287dd?s=128&d=identicon&r=PG", "display_name": "idream1nC0de", "link": "https://stackoverflow.com/users/2023218/idream1nc0de"}, "edited": false, "score": 0, "creation_date": 1440554260, "post_id": 32214464, "comment_id": 52317306, "body": "Does the Immediate Window not work for you to debug in JavaScript?"}, {"owner": {"reputation": 1364, "user_id": 4134796, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/U2y1q.jpg?s=128&g=1", "display_name": "A2MetalCore", "link": "https://stackoverflow.com/users/4134796/a2metalcore"}, "reply_to_user": {"reputation": 1141, "user_id": 2023218, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a09f8323c3df64e6649c9ba9c98287dd?s=128&d=identicon&r=PG", "display_name": "idream1nC0de", "link": "https://stackoverflow.com/users/2023218/idream1nc0de"}, "edited": false, "score": 0, "creation_date": 1440593913, "post_id": 32214464, "comment_id": 52337102, "body": "The JavaScript Console has many additional features beyond the Immediate Window. Such as the ability to drill down into objects."}], "owner": {"reputation": 1364, "user_id": 4134796, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/U2y1q.jpg?s=128&g=1", "display_name": "A2MetalCore", "link": "https://stackoverflow.com/users/4134796/a2metalcore"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 282, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1440538274, "creation_date": 1440538274, "question_id": 32214464, "link": "https://stackoverflow.com/questions/32214464/javascript-console-disabled-in-visual-studio-2013-node-typescript", "title": "JavaScript Console Disabled in Visual Studio 2013 (Node, TypeScript)", "body": "<p>I have created a new Visual Studio project using a template (Basic Node.js Express 3 Application) from Node Tools for Visual Studio. I am able to debug without any issues. However, the menu selection for the JavaScript Console is disabled during debugging. How can I re-enable the JavaScript Console?</p>\n\n<p><a href=\"https://i.stack.imgur.com/1Pmru.gif\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/1Pmru.gif\" alt=\"Visual Studio 2013 menu selections during debugging session\"></a></p>\n"}, {"tags": ["visual-studio", "typescript"], "answers": [{"tags": [], "owner": {"reputation": 1787, "user_id": 2260380, "user_type": "registered", "accept_rate": 32, "profile_image": "https://i.stack.imgur.com/eodNb.png?s=128&g=1", "display_name": "Puchacz", "link": "https://stackoverflow.com/users/2260380/puchacz"}, "is_accepted": false, "score": 1, "last_activity_date": 1440535360, "creation_date": 1440535360, "answer_id": 32213676, "question_id": 32213493, "link": "https://stackoverflow.com/questions/32213493/visual-studio-typescript-project-code-metrics/32213676#32213676", "title": "Visual Studio - typescript project code metrics", "body": "<p>I found one simple solution:</p>\n\n<p>In solution property check <strong>Combine Javascript output into file</strong>, then place filename and that's all. Save project and when file will be generated, open it by some text editor (for example notepad++).</p>\n"}], "owner": {"reputation": 1787, "user_id": 2260380, "user_type": "registered", "accept_rate": 32, "profile_image": "https://i.stack.imgur.com/eodNb.png?s=128&g=1", "display_name": "Puchacz", "link": "https://stackoverflow.com/users/2260380/puchacz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 411, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1440535360, "creation_date": 1440534679, "question_id": 32213493, "link": "https://stackoverflow.com/questions/32213493/visual-studio-typescript-project-code-metrics", "title": "Visual Studio - typescript project code metrics", "body": "<p>I create application in TypeScript and I would like to know how many lines of code I wrote. How would I calculate it in Visual Studio 2015 (Community). Code metrics are much more less function than in C# solutions.</p>\n"}, {"tags": ["javascript", "node.js", "typescript", "reactjs"], "answers": [{"comments": [{"owner": {"reputation": 11185, "user_id": 1055637, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/8a8b9e4daac99ea95aa3e8e246716e73?s=128&d=identicon&r=PG", "display_name": "Mazzy", "link": "https://stackoverflow.com/users/1055637/mazzy"}, "edited": false, "score": 0, "creation_date": 1440530757, "post_id": 32212328, "comment_id": 52308628, "body": "Fixed. the problem is releated to jade template. the initialState has to be unescaped"}, {"owner": {"reputation": 11185, "user_id": 1055637, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/8a8b9e4daac99ea95aa3e8e246716e73?s=128&d=identicon&r=PG", "display_name": "Mazzy", "link": "https://stackoverflow.com/users/1055637/mazzy"}, "edited": false, "score": 0, "creation_date": 1440531049, "post_id": 32212328, "comment_id": 52308791, "body": "Unfortunately I have another issue but this time is related to React. when I click to head it says that this.state.data is not defined in the _sort function"}, {"owner": {"reputation": 91121, "user_id": 179125, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5594142dcc49a24b1902ec8059181f8d?s=128&d=identicon&r=PG&f=1", "display_name": "Jordan Running", "link": "https://stackoverflow.com/users/179125/jordan-running"}, "reply_to_user": {"reputation": 11185, "user_id": 1055637, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/8a8b9e4daac99ea95aa3e8e246716e73?s=128&d=identicon&r=PG", "display_name": "Mazzy", "link": "https://stackoverflow.com/users/1055637/mazzy"}, "edited": false, "score": 0, "creation_date": 1440531501, "post_id": 32212328, "comment_id": 52309044, "body": "You should post that as another question."}], "tags": [], "owner": {"reputation": 91121, "user_id": 179125, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5594142dcc49a24b1902ec8059181f8d?s=128&d=identicon&r=PG&f=1", "display_name": "Jordan Running", "link": "https://stackoverflow.com/users/179125/jordan-running"}, "is_accepted": false, "score": 0, "last_activity_date": 1440530568, "creation_date": 1440530568, "answer_id": 32212328, "question_id": 32211639, "link": "https://stackoverflow.com/questions/32211639/uncaught-syntaxerror-unexpected-token-in-react-when-rendering-the-client/32212328#32212328", "title": "Uncaught SyntaxError: Unexpected token &amp; in React when rendering the client", "body": "<p>I would guess this has nothing to do with React and the error is here:</p>\n\n<pre><code>var initialState = JSON.parse(document.getElementById('initial-state').innerHTML);\n</code></pre>\n\n<p>If you're trying to parse the value of <code>innerHTML</code> as JSON, then it's probably failing because it has HTML entities, e.g. <code>&amp;quot;</code>. Depending on the type of element, it may work to use <code>innerText</code> instead:</p>\n\n<pre><code>var initialState = JSON.parse(document.getElementById('initial-state').innerText);\n</code></pre>\n"}], "owner": {"reputation": 11185, "user_id": 1055637, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/8a8b9e4daac99ea95aa3e8e246716e73?s=128&d=identicon&r=PG", "display_name": "Mazzy", "link": "https://stackoverflow.com/users/1055637/mazzy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1113, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1440530568, "creation_date": 1440528029, "question_id": 32211639, "link": "https://stackoverflow.com/questions/32211639/uncaught-syntaxerror-unexpected-token-in-react-when-rendering-the-client", "title": "Uncaught SyntaxError: Unexpected token &amp; in React when rendering the client", "body": "<p>I get the following error</p>\n\n<pre><code>Uncaught SyntaxError: Unexpected token &amp;\n</code></pre>\n\n<p>when rendering the client after having rendered correctly the server</p>\n\n<p>This is my code</p>\n\n<p><strong>app.tsx</strong></p>\n\n<pre><code>import * as React from \"react\";\n\nimport Excel from \"./components/Excel\";\n\nvar initialState = JSON.parse(document.getElementById('initial-state').innerHTML);\n\nReact.render(\n  &lt;Excel header={initialState['header']} initialData={initialState['initialData']}/&gt;,\n  document.getElementById('app')\n);\n</code></pre>\n\n<hr>\n\n<p><strong>Excel component</strong></p>\n\n<pre><code>import * as React from \"react\";\n\nimport { IExcelProps } from \"../interfaces/ExcelProps\";\nimport { IExcelState } from \"../interfaces/ExcelState\";\n\nclass Excel extends React.Component&lt;IExcelProps, IExcelState&gt; {\n\n  name = \"Excel\";\n\n  static propTypes: React.ValidationMap&lt;any&gt; = {\n    header: React.PropTypes.arrayOf(\n      React.PropTypes.string\n    ).isRequired,\n    initialData: React.PropTypes.arrayOf(\n      React.PropTypes.arrayOf(React.PropTypes.string)\n    ).isRequired\n  }\n\n  // this correspond to getInitialState\n  initialState : IExcelState = {\n    data: this.props.initialData\n  };\n\n  constructor(excelProps: IExcelProps) {\n    super(excelProps);\n  }\n\n  componentWillMount() {\n    this.setState(new ExcelState(this.initialState.data));\n  }\n\n  render() {\n    return (\n      &lt;div className=\"panel panel-default\"&gt;\n        &lt;div className=\"panel-heading\"&gt;Airports Codes&lt;/div&gt;\n        &lt;table className=\"table\"&gt;\n          &lt;thead onClick={this._sort}&gt;\n            &lt;tr&gt;\n              {this._renderHeader(this.props.header)}\n            &lt;/tr&gt;\n          &lt;/thead&gt;\n          &lt;tbody&gt;\n            {this._renderTableBody(this.state.data)}\n          &lt;/tbody&gt;\n        &lt;/table&gt;\n      &lt;/div&gt;\n    );\n  }\n\n  private _renderHeader(header: string[]) : React.ReactElement&lt;any&gt;[] {\n    return header.map(function(value, idx) {\n      return &lt;th key={idx}&gt;{value}&lt;/th&gt;\n    });\n  }\n\n  private _renderTableBody(body: string[][]) : React.ReactElement&lt;any&gt;[] {\n    return (\n      body.map((row, idx) =&gt; {\n        return (\n          &lt;tr key={idx}&gt;\n          {\n            row.map((value, idx) =&gt; {\n              return &lt;td key={idx}&gt;{idx === 1 ? this._beautifyTypeColumn(value) : value}&lt;/td&gt;\n            })\n          }\n          &lt;/tr&gt;\n        );\n      })\n    );\n  }\n\n  private _sort(e) {\n    e.preventDefault();\n    // this get the cellIndex corresponding with the header column\n    let column = e.target.cellIndex;\n    // returns a shallow copy of a portion of an array into a new array object.\n    let dataTemp = this.state.data.slice();\n    this.setState(new ExcelState(dataTemp.sort((a: any, b: any) =&gt; {\n      return b[column] - a[column];\n    })));\n  }\n\n  private _beautifyTypeColumn(value: string) : string {\n    return this._capitalizeEachWord(value.replace('_', ' '));\n  }\n\n  private _capitalizeEachWord(value: string) : string {\n    return value.replace(/\\w\\S*/g, (txt) =&gt; {\n        return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n    });\n  }\n}\n\n// XXX: move somewhere else\nclass ExcelState implements IExcelState {\n\n  data : string[][];\n\n  constructor(data: string[][]) {\n    this.data = data;\n  }\n}\n\nexport default Excel;\n</code></pre>\n\n<hr>\n\n<p><strong>express route</strong></p>\n\n<pre><code>export function index(req: express.Request, res: express.Response, next: Function) {\n    fs.readFileAsync(\n        path.join(__dirname, '..', 'mockData/airport-codes.csv'),\n        'utf-8'\n    ).then((content) =&gt; {\n        return csv.parseAsync(content);\n    }).then((parsedContent: Array&lt;string[]&gt;[]) =&gt; {\n\n        let element = {\n            header: [\n                \"ID\", \"Type\", \"Name\", \"Latitude (deg)\", \"Longitude (deg)\", \"Elevation\", \"Continent\", \"Country ISO\", \"Region ISO\", \"Municipality\", \"GPS Code\", \"IATA Code\", \"Local Code\"\n            ],\n            initialData: parsedContent\n        };\n\n        ResponseHelper.renderTemplate('index', res, {\n            output: React.renderToString(React.createElement(Excel, element)),\n            initialState: JSON.stringify(element)\n        });\n    }).catch(next);\n}\n</code></pre>\n\n<p>I use browserify to place react code in the browser. Here is the complete example \n<a href=\"https://github.com/mazzy89/expressjs-typescript\" rel=\"nofollow\">https://github.com/mazzy89/expressjs-typescript</a> branch reactjs</p>\n"}, {"tags": ["javascript", "typescript", "systemjs"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 1, "creation_date": 1440524437, "post_id": 32210191, "comment_id": 52304997, "body": "What error are you getting? There is nothing wrong with <code>__extends</code> being before <code>function Index()</code> because function declarations are hoisted."}, {"owner": {"reputation": 541, "user_id": 3880291, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/a5b4684a676024be3211080fccd764d7?s=128&d=identicon&r=PG", "display_name": "oei ", "link": "https://stackoverflow.com/users/3880291/oei"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1440525557, "post_id": 32210191, "comment_id": 52305659, "body": "@ loganfsmyth: <code>console.log(&#39;set:__extends&#39;, d, b); &#47;&#47; set:__extends undefined undefined</code>"}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1440525614, "post_id": 32210191, "comment_id": 52305685, "body": "Can you reproduce the issue in a jsbin or something? It seems to work as I&#39;d expect: <a href=\"https://jsbin.com/hejoxatiru/edit?js,console\" rel=\"nofollow noreferrer\">jsbin.com/hejoxatiru/edit?js,console</a>"}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 1, "creation_date": 1440525706, "post_id": 32210191, "comment_id": 52305735, "body": "There are cases where I could see <code>b</code> being <code>undefined</code> but in that code, <code>d</code> would never be undefined ever."}, {"owner": {"reputation": 541, "user_id": 3880291, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/a5b4684a676024be3211080fccd764d7?s=128&d=identicon&r=PG", "display_name": "oei ", "link": "https://stackoverflow.com/users/3880291/oei"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1440530232, "post_id": 32210191, "comment_id": 52308359, "body": "@loganfsmyth: I love You!!! If you omit the __extends below the register, the works. But this is a mistake typescript, in fact it generates the wrong modules System... Thank you."}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1440532510, "post_id": 32210191, "comment_id": 52309680, "body": "I&#39;m not sure I follow, but if that helped, great :)"}, {"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1440533490, "post_id": 32210191, "comment_id": 52310253, "body": "@shatal: So this is <a href=\"https://stackoverflow.com/questions/tagged/typescript\">typescript</a>, not <a href=\"https://stackoverflow.com/questions/tagged/ecmascript-6\">ecmascript-6</a>?"}, {"owner": {"reputation": 541, "user_id": 3880291, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/a5b4684a676024be3211080fccd764d7?s=128&d=identicon&r=PG", "display_name": "oei ", "link": "https://stackoverflow.com/users/3880291/oei"}, "reply_to_user": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1440538722, "post_id": 32210191, "comment_id": 52312778, "body": "@Bergi: right, this is typescript, but in a compiled form."}], "owner": {"reputation": 541, "user_id": 3880291, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/a5b4684a676024be3211080fccd764d7?s=128&d=identicon&r=PG", "display_name": "oei ", "link": "https://stackoverflow.com/users/3880291/oei"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 97, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1440540290, "creation_date": 1440523023, "last_edit_date": 1440540290, "question_id": 32210191, "link": "https://stackoverflow.com/questions/32210191/why-wrong-order-execution-system-js", "title": "Why wrong order execution system.js?", "body": "<p>Why system.js first performs <code>__extends</code> and then initializes?    </p>\n\n<p>Although I see no initialization at all since the first thing is called the <code>__extends</code> and throw out errors. How to fix it?  </p>\n\n<pre><code>var __extends = (this &amp;&amp; this.__extends) || function (d, b) {\n\n        console.log('set:__extends', d, b); // set:__extends undefined undefined\n\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};System.register(['some.js'], function(exports_1) {\n\n    console.log('set:exports', exports_1); // #####\n\n    var some_js_1;\n    var Index;\n    return {\n        setters:[\n            function (_some_js_1) {\n\n                console.log('set:setters'); // #####\n\n                some_js_1 = _some_js_1;\n            }],\n        execute: function() {\n\n            console.log('set:execute'); // #####\n\n            Index = (function (_super) {\n\n                console.log('set:before __extends'); // #####\n\n                __extends(Index, _super);\n                function Index() {\n                    _super.call(this);\n                    //console.log('some', some_js_1.SomeSuperClass);\n                }\n                return Index;\n            })(some_js_1.SomeSuperClass);\n\n            console.log('set:before exports_1'); // #####\n\n            exports_1(\"default\", Index);\n        }\n    }\n});\n</code></pre>\n"}, {"tags": ["typescript"], "answers": [{"tags": [], "owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "is_accepted": true, "score": 9, "last_activity_date": 1440532703, "creation_date": 1440532703, "answer_id": 32212966, "question_id": 32209704, "link": "https://stackoverflow.com/questions/32209704/typescript-specialized-overloading/32212966#32212966", "title": "Typescript &quot;specialized&quot; overloading", "body": "<p>Specialized overloads are a specialism of one of the other overload signatures (the implementation signature is not visible, so doesn't count).</p>\n\n<p>When you use a specialized overload, there must be at least one non-specialized signature that the specialized version \"makes special\". </p>\n\n<p>The return type of the specialized signature has to be a sub-type of the non-specialized signature.</p>\n\n<p>So in short, you have to have the overload even if it is identical to the implementation signature.</p>\n"}], "owner": {"reputation": 2319, "user_id": 485183, "user_type": "registered", "accept_rate": 66, "profile_image": "https://i.stack.imgur.com/nAFij.png?s=128&g=1", "display_name": "Corey Alix", "link": "https://stackoverflow.com/users/485183/corey-alix"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1537, "favorite_count": 1, "accepted_answer_id": 32212966, "answer_count": 1, "score": 10, "last_activity_date": 1440532703, "creation_date": 1440521365, "question_id": 32209704, "link": "https://stackoverflow.com/questions/32209704/typescript-specialized-overloading", "title": "Typescript &quot;specialized&quot; overloading", "body": "<p>Is it possible to define this specialized overload without introducing the signature which exactly matches the implementation?</p>\n\n<pre><code>on(eventName: string, cb: Function);\non(eventName: \"view\", cb: (args: {\n    foo: {\n    }\n}) =&gt; void);\non(eventName: string, cb: Function) {\n}\n</code></pre>\n\n<p>When I remove it I receive this error:</p>\n\n<blockquote>\n  <p>Specialized overload signature is not assignable to any\n  non-specialized signature.</p>\n</blockquote>\n"}, {"tags": ["javascript", "node.js", "typescript", "reactjs", "react-router"], "comments": [{"owner": {"reputation": 11185, "user_id": 1055637, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/8a8b9e4daac99ea95aa3e8e246716e73?s=128&d=identicon&r=PG", "display_name": "Mazzy", "link": "https://stackoverflow.com/users/1055637/mazzy"}, "edited": false, "score": 0, "creation_date": 1440518989, "post_id": 32208768, "comment_id": 52301844, "body": "I fixed the error in the server and now it is render correctly from the server but not in the client. It seems that the rendering in the server works correctly but not that in the client"}], "answers": [{"comments": [{"owner": {"reputation": 11185, "user_id": 1055637, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/8a8b9e4daac99ea95aa3e8e246716e73?s=128&d=identicon&r=PG", "display_name": "Mazzy", "link": "https://stackoverflow.com/users/1055637/mazzy"}, "edited": false, "score": 0, "creation_date": 1440527630, "post_id": 32210658, "comment_id": 52306842, "body": "I have made some changes to the my code and now that warning and errors don&#39;t appear anymore but now I get the error Uncaught SyntaxError: Unexpected token &amp; the server is rendered correctly"}, {"owner": {"reputation": 11185, "user_id": 1055637, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/8a8b9e4daac99ea95aa3e8e246716e73?s=128&d=identicon&r=PG", "display_name": "Mazzy", "link": "https://stackoverflow.com/users/1055637/mazzy"}, "edited": false, "score": 0, "creation_date": 1440528306, "post_id": 32210658, "comment_id": 52307242, "body": "You can check the complete code here <a href=\"https://github.com/mazzy89/expressjs-typescript\" rel=\"nofollow noreferrer\">github.com/mazzy89/expressjs-typescript</a>"}, {"owner": {"reputation": 10200, "user_id": 4288327, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Mrlbd.png?s=128&g=1", "display_name": "BradByte", "link": "https://stackoverflow.com/users/4288327/bradbyte"}, "reply_to_user": {"reputation": 11185, "user_id": 1055637, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/8a8b9e4daac99ea95aa3e8e246716e73?s=128&d=identicon&r=PG", "display_name": "Mazzy", "link": "https://stackoverflow.com/users/1055637/mazzy"}, "edited": false, "score": 0, "creation_date": 1440528587, "post_id": 32210658, "comment_id": 52307396, "body": "I&#39;m getting a &quot;Can&#39;t find module &#39;../server&#39; error.. am I missing something? Or can you just paste the full error message you received?"}, {"owner": {"reputation": 11185, "user_id": 1055637, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/8a8b9e4daac99ea95aa3e8e246716e73?s=128&d=identicon&r=PG", "display_name": "Mazzy", "link": "https://stackoverflow.com/users/1055637/mazzy"}, "edited": false, "score": 0, "creation_date": 1440528669, "post_id": 32210658, "comment_id": 52307452, "body": "Did you use a transpiler typescript?js files aren&#39;t included"}, {"owner": {"reputation": 10200, "user_id": 4288327, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Mrlbd.png?s=128&g=1", "display_name": "BradByte", "link": "https://stackoverflow.com/users/4288327/bradbyte"}, "reply_to_user": {"reputation": 11185, "user_id": 1055637, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/8a8b9e4daac99ea95aa3e8e246716e73?s=128&d=identicon&r=PG", "display_name": "Mazzy", "link": "https://stackoverflow.com/users/1055637/mazzy"}, "edited": false, "score": 0, "creation_date": 1440529096, "post_id": 32210658, "comment_id": 52307703, "body": "Oh no, sorry. I don&#39;t have the bandwidth to set that up right now, could you post the error message?"}, {"owner": {"reputation": 10200, "user_id": 4288327, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Mrlbd.png?s=128&g=1", "display_name": "BradByte", "link": "https://stackoverflow.com/users/4288327/bradbyte"}, "reply_to_user": {"reputation": 11185, "user_id": 1055637, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/8a8b9e4daac99ea95aa3e8e246716e73?s=128&d=identicon&r=PG", "display_name": "Mazzy", "link": "https://stackoverflow.com/users/1055637/mazzy"}, "edited": false, "score": 0, "creation_date": 1440531429, "post_id": 32210658, "comment_id": 52308992, "body": "Let us <a href=\"http://chat.stackoverflow.com/rooms/87920/discussion-between-brad-bumbalough-and-mazzy\">continue this discussion in chat</a>."}], "tags": [], "owner": {"reputation": 10200, "user_id": 4288327, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Mrlbd.png?s=128&g=1", "display_name": "BradByte", "link": "https://stackoverflow.com/users/4288327/bradbyte"}, "is_accepted": false, "score": 1, "last_activity_date": 1440524540, "creation_date": 1440524540, "answer_id": 32210658, "question_id": 32208768, "link": "https://stackoverflow.com/questions/32208768/passing-props-to-the-handler-of-react-router-in-the-server/32210658#32210658", "title": "Passing props to the handler of React router in the server", "body": "<p>The lifecycle of the isomorphic app like yours is that first, the server runs the JS code and return an HTML string expression of the rendered result. It mounts that to the DOM and then loads your frontend app on top of that. Of course the DOM should be identical so it doesn't need to really rerender anything, but it does mount all of the JS event handlers, React code, etc to the window. </p>\n\n<p>It will still process the <code>Router.run</code> method and match the routes, but it will be the same page that was loaded from the server. However, after that point, the front-end has to replicate the server side functionality (ie fetching the data, passing to the routed component).</p>\n\n<p>So, in your frontend code you need to fetch the required data that you would normally do on the server, and pass it down to the <code>&lt;Root /&gt;</code> component as props.</p>\n\n<p>Check out this demo, specifically the <code>app/server.js</code> (server side render) and <code>app/client.js</code> (client side render). Hope this helps!</p>\n\n<p><a href=\"https://github.com/rackt/react-router-mega-demo\" rel=\"nofollow\">React Router Mega Demo</a></p>\n"}], "owner": {"reputation": 11185, "user_id": 1055637, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/8a8b9e4daac99ea95aa3e8e246716e73?s=128&d=identicon&r=PG", "display_name": "Mazzy", "link": "https://stackoverflow.com/users/1055637/mazzy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 679, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1440529265, "creation_date": 1440518502, "last_edit_date": 1440529265, "question_id": 32208768, "link": "https://stackoverflow.com/questions/32208768/passing-props-to-the-handler-of-react-router-in-the-server", "title": "Passing props to the handler of React router in the server", "body": "<p>I'm following the example reported in the react-router guide</p>\n\n<pre><code>var App = React.createClass({\n  render: function () {\n    return &lt;div&gt;Hi&lt;/div&gt;;\n  }\n});\n\nvar routes = (\n  &lt;Route handler={App} path=\"/\" /&gt;\n);\n\n// if using express it might look like this\napp.use(function (req, res) {\n  // pass in `req.url` and the router will immediately match\n  Router.run(routes, req.url, function (Handler) {\n    var content = React.renderToString(&lt;Handler/&gt;);\n    res.render('main', {content: content});\n  });\n});\n</code></pre>\n\n<p>Quite simple, isn't it? Instead this is my code:</p>\n\n<pre><code>export function index(req: express.Request, res: express.Response, next: Function) {\n    Router.run(routes, req.url, (Handler, state) =&gt; {\n        fs.readFileAsync(\n            path.join(__dirname, '..', 'mockData/airport-codes.csv'),\n            'utf-8'\n        ).then((content) =&gt; {\n            return csv.parseAsync(content);\n        }).then((parsedContent: Array&lt;string[]&gt;[]) =&gt; {\n            ResponseHelper.renderTemplate('index', res, {\n                output: React.renderToString(React.createElement(Handler, {\n                    header: [\n                        \"ID\", \"Type\", \"Name\", \"Latitude (deg)\", \"Longitude (deg)\", \"Elevation\", \"Continent\", \"Country ISO\", \"Region ISO\", \"Municipality\", \"GPS Code\", \"IATA Code\", \"Local Code\"\n                    ],\n                    initialData: parsedContent\n                }))\n            });\n        }).catch(next);\n    });\n}\n</code></pre>\n\n<p>Basically what I do is get data and pass to the Handler to initialise the component.  This is the file route in react:</p>\n\n<pre><code>import { Route } from \"react-router\";\nimport * as React from \"react\";\n\nimport Excel from \"../components/Excel\";\n\nexport default (\n  &lt;Route handler={Excel} path=\"/\" name=\"excel\" /&gt;\n);\n</code></pre>\n\n<p>and this is the entrypoint in the frontend </p>\n\n<pre><code>import * as React from \"react\";\nimport * as Router from \"react-router\";\n\nimport routes from \"./shared/routes\";\n\nRouter.run(routes, Router.HistoryLocation, (Root, state) =&gt; {\n  React.render(&lt;Root /&gt;, document.getElementById('app'));\n});\n</code></pre>\n\n<p>My problem is that when I start the application I get this warning:</p>\n\n<pre><code>Warning: Failed propType: Required prop `header` was not specified in `Excel`. Check the render method of `Router`.\nWarning: Failed propType: Required prop `initialData` was not specified in `Excel`. Check the render method of `Router`.\n</code></pre>\n\n<p>and consequently an error. Do you know which is the right way to pass props in this case?</p>\n\n<p>EDIT</p>\n\n<p>error message</p>\n\n<pre><code>Uncaught SyntaxError: Unexpected token &amp;\n1../components/Excel @ bundle.js:4s @ bundle.js:1e @ bundle.js:1(anonymous function) @ bundle.js:1\n</code></pre>\n"}, {"tags": ["typescript", "aurelia"], "answers": [{"tags": [], "owner": {"reputation": 1967, "user_id": 2193900, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/aXP0y.jpg?s=128&g=1", "display_name": "Matt McCabe", "link": "https://stackoverflow.com/users/2193900/matt-mccabe"}, "is_accepted": false, "score": 1, "last_activity_date": 1440512723, "creation_date": 1440512723, "answer_id": 32206694, "question_id": 32206257, "link": "https://stackoverflow.com/questions/32206257/aurelia-unsubscribe-event-aggregator/32206694#32206694", "title": "Aurelia Unsubscribe Event Aggregator", "body": "<p>You need to unsubscribe on deactivate()/detach(), as far as I'm aware using Typescript doesn't change this.</p>\n"}, {"comments": [{"owner": {"reputation": 3303, "user_id": 3084239, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/FyPUO.jpg?s=128&g=1", "display_name": "radu-matei", "link": "https://stackoverflow.com/users/3084239/radu-matei"}, "edited": false, "score": 0, "creation_date": 1440520407, "post_id": 32207501, "comment_id": 52302686, "body": "What I was really missing was the reference to the dispose function. Thanks a lot!:)"}, {"owner": {"reputation": 679, "user_id": 279448, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2ce852223fdc612dabb377a187095040?s=128&d=identicon&r=PG", "display_name": "Dan Wray", "link": "https://stackoverflow.com/users/279448/dan-wray"}, "edited": false, "score": 2, "creation_date": 1444811481, "post_id": 32207501, "comment_id": 54053746, "body": "This is updated in the October release of Aurelia. The subscribe call now returns a subscription object on which you can call the dispose() method to kill the subscription."}], "tags": [], "owner": {"reputation": 25584, "user_id": 725866, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/cbede50c0d1034b1b4453b2d426542e7?s=128&d=identicon&r=PG", "display_name": "Jeremy Danyow", "link": "https://stackoverflow.com/users/725866/jeremy-danyow"}, "is_accepted": true, "score": 26, "last_activity_date": 1444823764, "last_edit_date": 1444823764, "creation_date": 1440514854, "answer_id": 32207501, "question_id": 32206257, "link": "https://stackoverflow.com/questions/32206257/aurelia-unsubscribe-event-aggregator/32207501#32207501", "title": "Aurelia Unsubscribe Event Aggregator", "body": "<p><strong>10/14/2015 EDIT</strong></p>\n\n<p>The EventAggregator class's <code>subscribe</code> function returns a <s>\"dispose\" function</s> \"subscription\" object:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>var subscription = eventAggregator.subscribe('some event', value =&gt; alert(value));\n</code></pre>\n\n<p>You need to keep a reference to the subscription object so that you can destroy the subscription when it's no longer needed.</p>\n\n<p>In a view-model, the perfect time to subscribe to an event is when it's <code>attached</code>.  Likewise, a perfect time to unsubscribe is when it's <code>detached</code>.</p>\n\n<p>Here's what your <code>Home</code> view-model would look like if it used this pattern (note:  I've dropped your Subscriber and Publisher classes because I think they're adding unnecessary complexity around the EventAggregator and are making it hard to explain the solution to your issue).</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>@inject(EventAggregator)\nexport class Home {\n  eventAggregator: EventAggregator;\n  subscription: { dispose: () =&gt; void };\n\n  constructor(eventAggregator: EventAggregator) {\n    this.eventAggregator = eventAggregator;\n  }\n\n  attached() {\n    this.subscription = this.eventAggregator.subscribe('some event', value =&gt; alert(value));\n  }\n\n  detached() {\n    this.subscription.dispose();\n  }\n}\n</code></pre>\n"}], "owner": {"reputation": 3303, "user_id": 3084239, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/FyPUO.jpg?s=128&g=1", "display_name": "radu-matei", "link": "https://stackoverflow.com/users/3084239/radu-matei"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4558, "favorite_count": 2, "accepted_answer_id": 32207501, "answer_count": 2, "score": 17, "last_activity_date": 1444823764, "creation_date": 1440511615, "question_id": 32206257, "link": "https://stackoverflow.com/questions/32206257/aurelia-unsubscribe-event-aggregator", "title": "Aurelia Unsubscribe Event Aggregator", "body": "<p>I am using <code>Aurelia Framework</code> with <code>Typescript</code> and in the <code>event aggregator</code> I am able to publish and subscribe to channels.</p>\n\n<p>The problem is that I am unable to unsubscribe from a channel.</p>\n\n<blockquote>\n  <p>Note: All forms of the subscribe method return a dispose function. You can call this function to dispose of the subscription and discontinue receiving messages. A good place to dispose is either in a view-model's deactivate callback if it is managed by a router, or in its detached callback if it is any other view-model.</p>\n</blockquote>\n\n<p>This is taken from the <a href=\"http://aurelia.io/docs.html#the-event-aggregator\" rel=\"noreferrer\">aurelia official documentation website</a> and I don't really seem to understand how to implement this.</p>\n\n<p>I went on the <a href=\"https://gitter.im/Aurelia/Discuss\" rel=\"noreferrer\">aurelia gitter channel</a> and I found 3 discussions about this, where one of them gave the following example for unsubscribe:</p>\n\n<pre><code>sub = ea.subscribe();\n\n//unsubscribe the event\nsub();\n</code></pre>\n\n<p>The problem is that this code doesn't work in TypeScript.</p>\n\n<p>How do I unsubscribe from an <code>event aggregator</code> in Typescript?</p>\n\n<p>Now, using this code</p>\n\n<pre><code>    @inject(Publisher, Subscriber)\nexport class Home {\n    publisher: Publisher;\n    subscriber: Subscriber;\n    channelName = \"testChannel\";\n\n    constructor(pub: Publisher, sub: Subscriber) {\n        this.publisher = pub;\n        this.subscriber = sub;\n\n        this.subscriber.subscribe(this.channelName);\n\n        this.publisher.publish(this.channelName, \"Ana are mere\");\n    }\n}\n\n\n@inject(EventAggregator)\nexport class Publisher {\n    eventAggregator: EventAggregator = null;\n\n    constructor(agg: EventAggregator) {\n        this.eventAggregator = agg;\n    }\n\n    publish(channelName: string, object: Object) {\n        this.eventAggregator.publish(channelName, object);\n    }\n}\n\n\n@inject(EventAggregator)\nexport class Subscriber {\n    eventAggregator: EventAggregator = null;\n\n    constructor(agg: EventAggregator) {\n        this.eventAggregator = agg;\n    }\n\n    subscribe(channelName: string) {\n        this.eventAggregator.subscribe(channelName, object =&gt; {\n            //TODO do something with received object\n            alert(object);\n        });\n    }\n    unsubscribe(channelName: string) {\n        debugger;\n    }\n}\n</code></pre>\n\n<p>when executing the <code>Home</code> component, the method for subscribe isn't executed just once, but as many times as the cosntructor has been called. So, if I have been on the home page 3 times, it will get executed 3 times.</p>\n\n<p>So: \nWhy is my subscriber method fired multiple times ?\nHow do I unsubscribe from <code>event-aggregatoor</code> in TypeScript?</p>\n\n<p>Thanks!</p>\n"}, {"tags": ["jquery", "jquery-ui", "datepicker", "typescript", "aurelia"], "comments": [{"owner": {"reputation": 25584, "user_id": 725866, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/cbede50c0d1034b1b4453b2d426542e7?s=128&d=identicon&r=PG", "display_name": "Jeremy Danyow", "link": "https://stackoverflow.com/users/725866/jeremy-danyow"}, "edited": false, "score": 0, "creation_date": 1440507130, "post_id": 32204053, "comment_id": 52292993, "body": "what&#39;s the stack trace"}, {"owner": {"reputation": 4194, "user_id": 2270340, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/74dbd6553164e6938b05a3455497de9c?s=128&d=identicon&r=PG", "display_name": "Sayan Pal", "link": "https://stackoverflow.com/users/2270340/sayan-pal"}, "reply_to_user": {"reputation": 25584, "user_id": 725866, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/cbede50c0d1034b1b4453b2d426542e7?s=128&d=identicon&r=PG", "display_name": "Jeremy Danyow", "link": "https://stackoverflow.com/users/725866/jeremy-danyow"}, "edited": false, "score": 0, "creation_date": 1440507580, "post_id": 32204053, "comment_id": 52293335, "body": "Please check my edit. As the stack trace is quite long, I have added a part of it. In case the entire stack trace is required, please let me know."}, {"owner": {"reputation": 11724, "user_id": 1981050, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/MimfZ.png?s=128&g=1", "display_name": "Matthew James Davis", "link": "https://stackoverflow.com/users/1981050/matthew-james-davis"}, "edited": false, "score": 0, "creation_date": 1469461916, "post_id": 32204053, "comment_id": 64533678, "body": "I&#39;ve written a blog that might interest you about integrating third party libraries into Aurelia here: <a href=\"http://davismj.me/blog/aurelia-drag-and-drop\" rel=\"nofollow noreferrer\">davismj.me/blog/aurelia-drag-and-drop</a>"}, {"owner": {"reputation": 11724, "user_id": 1981050, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/MimfZ.png?s=128&g=1", "display_name": "Matthew James Davis", "link": "https://stackoverflow.com/users/1981050/matthew-james-davis"}, "edited": false, "score": 0, "creation_date": 1470159669, "post_id": 32204053, "comment_id": 64830083, "body": "I&#39;ve written a blog about creating custom elements for wrapping css frameworks here: <a href=\"http://davismj.me/blog/semantic-custom-element/\" rel=\"nofollow noreferrer\">davismj.me/blog/semantic-custom-element</a>"}], "answers": [{"tags": [], "owner": {"reputation": 25584, "user_id": 725866, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/cbede50c0d1034b1b4453b2d426542e7?s=128&d=identicon&r=PG", "display_name": "Jeremy Danyow", "link": "https://stackoverflow.com/users/725866/jeremy-danyow"}, "is_accepted": true, "score": 2, "last_activity_date": 1440507936, "creation_date": 1440507936, "answer_id": 32204833, "question_id": 32204053, "link": "https://stackoverflow.com/questions/32204053/jquery-ui-datepicker-not-working-with-aurelia-and-typescript/32204833#32204833", "title": "jQuery-UI DatePicker not working with Aurelia and Typescript", "body": "<p>webcomponents.js (polymer) is causing the issue.  Try removing your dependency on that library.  More troubleshooting tips here:</p>\n\n<p><a href=\"https://github.com/webcomponents/webcomponentsjs/issues/301\" rel=\"nofollow\">https://github.com/webcomponents/webcomponentsjs/issues/301</a></p>\n"}], "owner": {"reputation": 4194, "user_id": 2270340, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/74dbd6553164e6938b05a3455497de9c?s=128&d=identicon&r=PG", "display_name": "Sayan Pal", "link": "https://stackoverflow.com/users/2270340/sayan-pal"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 971, "favorite_count": 0, "accepted_answer_id": 32204833, "answer_count": 1, "score": 1, "last_activity_date": 1440507936, "creation_date": 1440505748, "last_edit_date": 1440507876, "question_id": 32204053, "link": "https://stackoverflow.com/questions/32204053/jquery-ui-datepicker-not-working-with-aurelia-and-typescript", "title": "jQuery-UI DatePicker not working with Aurelia and Typescript", "body": "<p>I am trying to create a wrapper (custom attribute) around jQuery UI DatePicker. The <strong><code>date-picker.ts</code></strong> looks like below so far:</p>\n\n<pre><code>import {inject, bindable} from \"aurelia-framework\";\n\nexport class DatePickerCustomAttribute {\n   static inject = [Element];\n\n   @bindable isdate;\n\n   constructor(public element:Element) {\n   }\n\n   bind() {\n       if (this.isdate) {\n           console.log(\"trying to set datepicker\");\n           $(this.element).datepicker();\n       }\n   }\n\n}\n</code></pre>\n\n<p><strong>Usage:</strong></p>\n\n<pre><code>&lt;require from=\"./date-picker\"&gt;&lt;/require&gt;\n...\n&lt;input ... date-picker=\"isdate.bind:isDate\"/&gt;\n</code></pre>\n\n<p>This works in Chrome, however not in Firefox or Edge. The code throws an error on execution of this line: <code>$(this.element).datepicker();</code>. And the error says: <code>Error: Assertion failed</code>. </p>\n\n<p>My Development Setup: Visual Studio 2015 - Aurelia - Typescript 1.5.4 - along with the necessary type definitions such as for aurelia, jQuery, <a href=\"https://github.com/borisyankov/DefinitelyTyped/tree/master/jqueryui\" rel=\"nofollow\">jQueryui</a>, and <a href=\"https://github.com/borisyankov/DefinitelyTyped/tree/69303fd9e52d8e0e97a92d096966aea5fb7630c5/jquery.ui.datetimepicker\" rel=\"nofollow\">jQuery-ui-datetimepicker</a>.</p>\n\n<p>Requesting for help and suggestions.</p>\n\n<p>Thank You.</p>\n\n<p><strong>EDIT:</strong>\nThe stack trace is something like this:</p>\n\n<pre><code>Stack trace: \nassert@https://localhost:44300/Scripts/webcomponents.js:112:21\nassertIsNodeWrapper@https://localhost:44300/Scripts/webcomponents.js:1573:7\n.insertBefore@https://localhost:44300/Scripts/webcomponents.js:1787:9\n.appendChild@https://localhost:44300/Scripts/webcomponents.js:1784:16\n.buildFragment@https://localhost:44300/Scripts/jquery-2.1.4.js:5150:18\n.domManip@https://localhost:44300/Scripts/jquery-2.1.4.js:5387:15\n.append@https://localhost:44300/Scripts/jquery-2.1.4.js:5218:1\n$.fn.datepicker@https://localhost:44300/Scripts/jquery-ui-1.11.4.js:5811:3\nDatePickerCustomAttribute&lt;/DatePickerCustomAttribute.prototype.bind@https://localhost:44300/aureliaviews/shared/date-picker.js:19:17\n.......\n</code></pre>\n"}, {"tags": ["angularjs", "twitter-bootstrap-3", "typescript"], "comments": [{"owner": {"reputation": 6445, "user_id": 1475346, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/532252b8858ecc94c49665dd44beb916?s=128&d=identicon&r=PG", "display_name": "Martin Seeler", "link": "https://stackoverflow.com/users/1475346/martin-seeler"}, "edited": false, "score": 4, "creation_date": 1440503236, "post_id": 32203063, "comment_id": 52290400, "body": "StackOverflow is not a community, where you can post tasks and hope someone will solve it for you. If you have a problem, please provide your code and explain what you expected and what you&#39;ve got instead."}, {"owner": {"reputation": 162935, "user_id": 1175966, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8d3d9dfbd040f9cbc1a6b82f0da2b345?s=128&d=identicon&r=PG", "display_name": "charlietfl", "link": "https://stackoverflow.com/users/1175966/charlietfl"}, "edited": false, "score": 0, "creation_date": 1440504334, "post_id": 32203063, "comment_id": 52291153, "body": "<code>ng-model</code> will create scope variables automatically. Also fix typo for <code>ng-submit</code>"}, {"owner": {"reputation": 340, "user_id": 4036780, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-Fc1uGZtnJ5E/AAAAAAAAAAI/AAAAAAAAAGU/8n5Xm78NwpU/photo.jpg?sz=128", "display_name": "MozzieMD", "link": "https://stackoverflow.com/users/4036780/mozziemd"}, "reply_to_user": {"reputation": 6445, "user_id": 1475346, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/532252b8858ecc94c49665dd44beb916?s=128&d=identicon&r=PG", "display_name": "Martin Seeler", "link": "https://stackoverflow.com/users/1475346/martin-seeler"}, "edited": false, "score": 0, "creation_date": 1440505480, "post_id": 32203063, "comment_id": 52291898, "body": "@Chasmo is right, there is youtube, google!"}], "answers": [{"tags": [], "owner": {"reputation": 5844, "user_id": 1075401, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/b38e877fe17599d7eec56bfcc52eb63d?s=128&d=identicon&r=PG", "display_name": "gilamran", "link": "https://stackoverflow.com/users/1075401/gilamran"}, "is_accepted": true, "score": 2, "last_activity_date": 1440505768, "creation_date": 1440505768, "answer_id": 32204066, "question_id": 32203063, "link": "https://stackoverflow.com/questions/32203063/login-page-with-username-and-password/32204066#32204066", "title": "Login page with username and password", "body": "<ul>\n<li>Avoid using scope, use controller as syntax (Looks much better)</li>\n<li>Renamed your module to LoginModule</li>\n<li>Registered the controller outside of the module</li>\n</ul>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>   module LoginModule {\r\n     export class LoginController {\r\n       name: string;\r\n       password: string;\r\n       constructor() {}\r\n\r\n       login() {\r\n         console.log(`Login was clicked, username is ${this.name} and password is ${this.password}`)\r\n       }\r\n     }\r\n   }\r\n\r\n   angular.module('loginModule', []).controller('LoginController', LoginModule.LoginController);</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\" ng-app=\"loginModule\"&gt;\r\n\r\n&lt;head&gt;\r\n  &lt;meta charset=\"utf-8\"&gt;\r\n  &lt;title&gt;NADA Sign In&lt;/title&gt;\r\n  &lt;link href=\"../css/bootstrap.min.css\" rel=\"stylesheet\"&gt;\r\n  &lt;link href=\"../css/signin.css\" rel=\"stylesheet\"&gt;\r\n&lt;/head&gt;\r\n\r\n&lt;body&gt;\r\n  &lt;script src=\"../js/bootstrap.min.js\"&gt;&lt;/script&gt;\r\n  &lt;script src=\"../js/jquery.min.js\"&gt;&lt;/script&gt;\r\n  &lt;script src=\"../js/angular.min.js\"&gt;&lt;/script&gt;\r\n  &lt;script src=\"../js/login.js\"&gt;&lt;/script&gt;\r\n\r\n  &lt;div class=\"container\" ng-controller=\"LoginController as vm\"&gt;\r\n    &lt;form class=\"form-signin\" ng-sumbit=\"vm.login()\"&gt;\r\n      &lt;h2 class=\"form-signin-heading\"&gt;Please sign in&lt;/h2&gt;\r\n      &lt;label for=\"username\" class=\"sr-only\"&gt;Username&lt;/label&gt;\r\n      &lt;input type=\"text\" id=\"username\" class=\"form-control\" ng-model=\"vm.username\" placeholder=\"Username\" required autofocus&gt;\r\n      &lt;label for=\"password\" class=\"sr-only\"&gt;Password&lt;/label&gt;\r\n      &lt;input type=\"password\" id=\"password\" class=\"form-control\" ng-model=\"vm.password\" placeholder=\"Password\" required&gt;\r\n      &lt;!--&lt;div class=\"checkbox\"&gt;\r\n                &lt;label&gt;\r\n                    &lt;input type=\"checkbox\" value=\"remember-me\"&gt; Remember me\r\n                &lt;/label&gt;\r\n            &lt;/div&gt;--&gt;\r\n      &lt;button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\"&gt;Sign in&lt;/button&gt;\r\n    &lt;/form&gt;\r\n  &lt;/div&gt;\r\n&lt;/body&gt;\r\n\r\n&lt;/html&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"}], "owner": {"reputation": 33, "user_id": 5264092, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/474a2c2439662c6552c5bc674bf1c68e?s=128&d=identicon&r=PG&f=1", "display_name": "Ajinkya Khavare", "link": "https://stackoverflow.com/users/5264092/ajinkya-khavare"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3937, "favorite_count": 0, "accepted_answer_id": 32204066, "answer_count": 1, "score": 0, "last_activity_date": 1531744345, "creation_date": 1440502936, "last_edit_date": 1456022051, "question_id": 32203063, "link": "https://stackoverflow.com/questions/32203063/login-page-with-username-and-password", "title": "Login page with username and password", "body": "<p>If someone has created a basic login page with username and password fields using angular and type script please do share.</p>\n\n<p>I have created this html file</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\" ng-app=\"loginModule\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"utf-8\"&gt;\n    &lt;title&gt;NADA Sign In&lt;/title&gt;\n    &lt;link href=\"../css/bootstrap.min.css\" rel=\"stylesheet\"&gt;\n    &lt;link href=\"../css/signin.css\" rel=\"stylesheet\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;script src=\"../js/bootstrap.min.js\"&gt;&lt;/script&gt;\n&lt;script src=\"../js/jquery.min.js\"&gt;&lt;/script&gt;\n&lt;script src=\"../js/angular.min.js\"&gt;&lt;/script&gt;\n&lt;script src=\"../js/login.js\"&gt;&lt;/script&gt;\n\n&lt;div class=\"container\" ng-controller=\"LoginController\"&gt;\n    &lt;form class=\"form-signin\" ng-sumbit=\"login()\"&gt;\n        &lt;h2 class=\"form-signin-heading\"&gt;Please sign in&lt;/h2&gt;\n        &lt;label for=\"username\" class=\"sr-only\"&gt;Username&lt;/label&gt;\n        &lt;input type=\"text\" id=\"username\" class=\"form-control\" ng-model=\"username\" placeholder=\"Username\" required\n               autofocus&gt;\n        &lt;label for=\"password\" class=\"sr-only\"&gt;Password&lt;/label&gt;\n        &lt;input type=\"password\" id=\"password\" class=\"form-control\" ng-model=\"password\" placeholder=\"Password\" required&gt;\n        &lt;!--&lt;div class=\"checkbox\"&gt;\n            &lt;label&gt;\n                &lt;input type=\"checkbox\" value=\"remember-me\"&gt; Remember me\n            &lt;/label&gt;\n        &lt;/div&gt;--&gt;\n        &lt;button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\"&gt;Sign in&lt;/button&gt;\n    &lt;/form&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\n\nmodule login {\n    export interface IAppCtrl extends ng.IScope{\n        name : string;\n        password : string;\n    }\n    export class LoginController {\n        constructor($scope : IAppCtrl) {\n            scope = $scope;\n        }\n\n        scope.login = function() {\n\n        }\n    }\n\n    angular.module('loginModule', []).controller('LoginController', LoginController);\n}\n</code></pre>\n\n<p>How can I access the username and password variables and the login method on the submission of the form?<br>\nHow do I access the input box values in ng-model for username and password?</p>\n"}, {"tags": ["javascript", "typescript"], "comments": [{"owner": {"reputation": 13034, "user_id": 1330137, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/ImoRJ.jpg?s=128&g=1", "display_name": "Callum Linington", "link": "https://stackoverflow.com/users/1330137/callum-linington"}, "edited": false, "score": 0, "creation_date": 1440501621, "post_id": 32202625, "comment_id": 52289340, "body": "Maybe to support future classing?"}], "answers": [{"tags": [], "owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "is_accepted": false, "score": 0, "last_activity_date": 1440509426, "creation_date": 1440509426, "answer_id": 32205376, "question_id": 32202625, "link": "https://stackoverflow.com/questions/32202625/how-does-extends-in-typescript-work/32205376#32205376", "title": "How does extends in TypeScript work?", "body": "<p>Until ECMAScript support for classes goes native, the extends function polyfills the expected behaviour of inheritance.</p>\n\n<p>If you are used to the normal JavaScript prototypical inheritance, you'll be wondering why it isn't just doing the <code>__.prototype = b.prototype;</code> part. If so, you'll be interested to know that the addition of <code>for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];</code> means that static members will be copied too. For example...</p>\n\n<pre><code>class BaseClassWithConstructor {\n    private _id: number;\n    constructor(id: number) {\n        this._id = id;\n    }\n\n    static doIt() {\n        alert('Done it');\n    }\n}\n\nclass DerivedClassWithConstructor extends BaseClassWithConstructor {\n    private _name: string;\n    constructor(id: number, name: string) {\n        this._name = name;\n        super(id);\n    }\n}\n\nDerivedClassWithConstructor.doIt();\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 9554, "user_id": 4794308, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/a25aee790dd8743107c266f2c3d8850c?s=128&d=identicon&r=PG&f=1", "display_name": "Lifu Huang", "link": "https://stackoverflow.com/users/4794308/lifu-huang"}, "is_accepted": false, "score": 0, "last_activity_date": 1490474570, "last_edit_date": 1495542331, "creation_date": 1490474570, "answer_id": 43021753, "question_id": 32202625, "link": "https://stackoverflow.com/questions/32202625/how-does-extends-in-typescript-work/43021753#43021753", "title": "How does extends in TypeScript work?", "body": "<p>The generated javascript code can be divided in two parts:</p>\n\n<p><code>for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];</code></p>\n\n<p>is for \"inheriting\" the static properties of base class. Actually in the newest version of type script, this line of code has been substituted with </p>\n\n<p><code>extendStatics(d, b);</code> </p>\n\n<p>where the definition of <code>extendStatics</code> is:</p>\n\n<p><code>var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array &amp;&amp; function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };</code></p>\n\n<p>The only difference is that in new version, manipulation of <code>[[prototype]]</code> is used if related behavior is supported by browsers, otherwise fallback to the old practice, i.e. copying every owned property from base class to derived class.</p>\n\n<hr>\n\n<p>And as for</p>\n\n<p><code>function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();</code></p>\n\n<p>It is really a slightly fancier way of setting the <code>prototype</code> of <code>d</code> to a new instance of <code>b</code>. But instead of directly assigning <code>new b(...)</code> to <code>d.instance</code>, a dummy constructor <code>__</code> is used since for the purpose of setting prototype, we don't need the constructor <code>b</code> to be really invoked, and by using dummy function, we don't need to pass arguments to the constructor. See <a href=\"https://stackoverflow.com/a/7533593/4794308\">this</a> SO answer.</p>\n"}], "owner": {"reputation": 10447, "user_id": 72990, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/YI1d0.png?s=128&g=1", "display_name": "maxyfc", "link": "https://stackoverflow.com/users/72990/maxyfc"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 949, "favorite_count": 0, "answer_count": 2, "score": 4, "last_activity_date": 1490474570, "creation_date": 1440501418, "question_id": 32202625, "link": "https://stackoverflow.com/questions/32202625/how-does-extends-in-typescript-work", "title": "How does extends in TypeScript work?", "body": "<p>The following TypeScript code:</p>\n\n<pre><code>class BaseClassWithConstructor {\n    private _id: number;\n    constructor(id: number) {\n        this._id = id;\n    }\n}\n\nclass DerivedClassWithConstructor extends BaseClassWithConstructor {\n    private _name: string;\n    constructor(id: number, name: string) {\n        this._name = name;\n        super(id);\n    }\n}\n</code></pre>\n\n<p>Generates the following JavaScript code:</p>\n\n<pre><code>var __extends = (this &amp;&amp; this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar BaseClassWithConstructor = (function () {\n    function BaseClassWithConstructor(id) {\n        this._id = id;\n    }\n    return BaseClassWithConstructor;\n})();\nvar DerivedClassWithConstructor = (function (_super) {\n    __extends(DerivedClassWithConstructor, _super);\n    function DerivedClassWithConstructor(id, name) {\n        this._name = name;\n        _super.call(this, id);\n    }\n    return DerivedClassWithConstructor;\n})(BaseClassWithConstructor);\n</code></pre>\n\n<p><code>extends</code> seems to be implemented by the <code>__extends</code> function.</p>\n\n<p>Being trying to work out the magic behind this function. I don't understand why\nwe have to copy properties in the base class to the derived class (i.e. <code>for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];</code>), and create a new object using the <code>__</code> function and hook up the prototypes between the <code>b</code>, <code>__</code>, <code>d</code> and an instance of <code>__</code>.</p>\n\n<p>What is the reasoning behind all this?</p>\n"}, {"tags": ["angularjs", "requirejs", "typescript", "ecmascript-6", "amd"], "answers": [{"tags": [], "owner": {"reputation": 62, "user_id": 2022467, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/XO30E.jpg?s=128&g=1", "display_name": "Todd Thomson", "link": "https://stackoverflow.com/users/2022467/todd-thomson"}, "is_accepted": false, "score": 0, "last_activity_date": 1443816193, "creation_date": 1443816193, "answer_id": 32914992, "question_id": 32200823, "link": "https://stackoverflow.com/questions/32200823/registering-angular-elements-using-typescript-es6-modules-and-requirejs/32914992#32914992", "title": "Registering Angular elements using TypeScript ES6 modules and RequireJS", "body": "<p>I bundle Typescript ES6 modules using the NPM TsProject gulp adaptor. Check out the <a href=\"https://github.com/ToddThomson/tsproject/tree/master/TsProjectTodoMVC\" rel=\"nofollow\">TsProjectTodoMVC</a> app that shows how to get a single js using Typescript ES6 module bundles, Angular 1.4.7 and AMD/Require.</p>\n"}], "owner": {"reputation": 10711, "user_id": 295813, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/f7d03c076c1fb195896dc1ace051458e?s=128&d=identicon&r=PG", "display_name": "Brett Postin", "link": "https://stackoverflow.com/users/295813/brett-postin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 226, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1443816193, "creation_date": 1440496337, "question_id": 32200823, "link": "https://stackoverflow.com/questions/32200823/registering-angular-elements-using-typescript-es6-modules-and-requirejs", "title": "Registering Angular elements using TypeScript ES6 modules and RequireJS", "body": "<p>I'm looking to convert an existing AMD based Angular application to use the new TypeScript 1.5 ES6 module syntax. Currently we have all modules in separate files, with the main \"<em>app</em>\" module defined as...</p>\n\n<pre><code>define('app', ['angular'], (angular) =&gt; {  \n    return angular.module('app', []);\n}); \n</code></pre>\n\n<p>... and all Angular elements registered using the <code>require()</code> method e.g.</p>\n\n<pre><code>require(['app'], (app: ng.IModule) =&gt; {\n    app.config(config);\n    function config() {\n        // Some config\n    }\n});\n</code></pre>\n\n<p>However using the TypeScript ES6 module syntax, AMD modules are generated with the <code>define()</code> method e.g.</p>\n\n<pre><code>define([\"require\", \"exports\"], function (require, exports) {\n    ...\n}); \n</code></pre>\n\n<p>We have previously been using ASP.NET Bundling &amp; Minification (System.Web.Optimization) and outputting the bundle directly as a <code>&lt;script&gt;</code> tag. However when trying to include the AMD modules declared with the <code>define()</code> method we encounter the common <a href=\"http://requirejs.org/docs/errors.html#mismatch\" rel=\"nofollow\">MISMATCHED ANONYMOUS DEFINE() error</a>.</p>\n\n<p>None of the recommendations seem ideal or work for us, so how should this be done correctly given that TypeScript compiles modules into anonymous <code>define()</code> calls?</p>\n"}, {"tags": ["typescript"], "answers": [{"comments": [{"owner": {"reputation": 1323, "user_id": 1140593, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/ej53o.jpg?s=128&g=1", "display_name": "Haocheng", "link": "https://stackoverflow.com/users/1140593/haocheng"}, "edited": false, "score": 0, "creation_date": 1440550779, "post_id": 32202305, "comment_id": 52316530, "body": "Thanks a lot, it works now. But still, is there any way to have a type guard working on functions?"}, {"owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "reply_to_user": {"reputation": 1323, "user_id": 1140593, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/ej53o.jpg?s=128&g=1", "display_name": "Haocheng", "link": "https://stackoverflow.com/users/1140593/haocheng"}, "edited": false, "score": 0, "creation_date": 1440575017, "post_id": 32202305, "comment_id": 52324444, "body": "If you had a union type of <code>string|Function</code>, it would work as expected. <a href=\"http://bit.ly/1NAKB3B\" rel=\"nofollow noreferrer\">bit.ly/1NAKB3B</a> - same goes for <code>string|number|Function</code> so the problem stems from the instanceof check on RegExp."}, {"owner": {"reputation": 1323, "user_id": 1140593, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/ej53o.jpg?s=128&g=1", "display_name": "Haocheng", "link": "https://stackoverflow.com/users/1140593/haocheng"}, "edited": false, "score": 0, "creation_date": 1440580749, "post_id": 32202305, "comment_id": 52327986, "body": "Thanks, it make sense for my case :)"}, {"owner": {"reputation": 5898, "user_id": 1299394, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/xvRhj.jpg?s=128&g=1", "display_name": "AJ Richardson", "link": "https://stackoverflow.com/users/1299394/aj-richardson"}, "edited": false, "score": 1, "creation_date": 1503704763, "post_id": 32202305, "comment_id": 78740878, "body": "The type assertion should not be necessary anymore (at least since Typescript 2.0)"}, {"owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "reply_to_user": {"reputation": 5898, "user_id": 1299394, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/xvRhj.jpg?s=128&g=1", "display_name": "AJ Richardson", "link": "https://stackoverflow.com/users/1299394/aj-richardson"}, "edited": false, "score": 0, "creation_date": 1503743291, "post_id": 32202305, "comment_id": 78747640, "body": "Updated - thanks @AJRichardson - it is so hard to keep all the answers up to date ;)"}], "tags": [], "owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "is_accepted": true, "score": 1, "last_activity_date": 1503743247, "last_edit_date": 1503743247, "creation_date": 1440500559, "answer_id": 32202305, "question_id": 32200573, "link": "https://stackoverflow.com/questions/32200573/type-guards-for-function-in-typescript/32202305#32202305", "title": "Type guards for function in TypeScript", "body": "<p>The first change in the example below is that I have typed the <code>value</code> paramater as a <code>SingleFilter</code> rather than `any.</p>\n\n<p>The second change is the type assertion in the last <code>else</code> statement to hint to the compiler that <code>value</code> is a <code>Predicator</code>.</p>\n\n<pre><code>export type Predicator = (input: string) =&gt; boolean;\nexport type SingleFilter = string | RegExp | Predicator;\n\nfunction singlePredicator(value: SingleFilter) {\n  if (typeof value === 'string') {\n    // do something for string\n    return value.charAt(0);\n  } else if (value instanceof RegExp) {\n    // do something\n    value.test(\"Something\");\n  } else {\n    // do something for function\n    var foo = \"SomeFoo\";\n    value(foo);\n  }\n}\n</code></pre>\n"}], "owner": {"reputation": 1323, "user_id": 1140593, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/ej53o.jpg?s=128&g=1", "display_name": "Haocheng", "link": "https://stackoverflow.com/users/1140593/haocheng"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 857, "favorite_count": 0, "accepted_answer_id": 32202305, "answer_count": 1, "score": 0, "last_activity_date": 1503743247, "creation_date": 1440495639, "question_id": 32200573, "link": "https://stackoverflow.com/questions/32200573/type-guards-for-function-in-typescript", "title": "Type guards for function in TypeScript", "body": "<p>I've defined a type <code>Filter</code> in TypeScript, which can be <code>string</code>, <code>RegExp</code> or <code>Predicator</code>, which is a function. Type defines are listed below.</p>\n\n<pre><code>export type Predicator = (input: string) =&gt; boolean;\nexport type SingleFilter = string | RegExp | Predicator;\n</code></pre>\n\n<p>There's a function taking <code>SingleFilter</code> as input. However, the type guards seems to be not working with <code>Predicator</code>, as long as <code>RegExp</code> presists.\nBut the issue is gone if the type is <code>string | Predicator</code> only. </p>\n\n<pre><code>function singlePredicator(value: any) {\n  if (typeof value === 'string') {\n    // do something for string\n  }\n  else if (value instanceof RegExp) {\n    // do something\n  }\n  else {\n    // do something for function\n    // Error TS2349: Cannot invoke an expression whose type lacks a call signature.\n    value(foo);\n  }\n}\n</code></pre>\n\n<p>Is there any solution to make it work in my case? Thanks. I'm using <code>tsc</code> 1.5.3</p>\n"}, {"tags": ["typescript", "tsc"], "answers": [{"tags": [], "owner": {"reputation": 80876, "user_id": 188246, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/bTzLq.jpg?s=128&g=1", "display_name": "David Sherret", "link": "https://stackoverflow.com/users/188246/david-sherret"}, "is_accepted": false, "score": 1, "last_activity_date": 1440511364, "creation_date": 1440511364, "answer_id": 32206155, "question_id": 32200494, "link": "https://stackoverflow.com/questions/32200494/does-tsc-1-5-still-need-the-module-flag/32206155#32206155", "title": "Does tsc 1.5 still need the --module flag?", "body": "<p>According to the <a href=\"https://github.com/Microsoft/TypeScript/wiki/tsconfig.json\" rel=\"nofollow\">documentation</a>:</p>\n\n<blockquote>\n  <p>When input files are specified on the command line, tsconfig.json files are ignored.</p>\n</blockquote>\n\n<p>Run <code>tsc</code> without specifying any input files and it will work fine.</p>\n"}, {"tags": [], "owner": {"reputation": 110, "user_id": 5489560, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/890fe81a3f06a02f6a73fb45c3a38002?s=128&d=identicon&r=PG&f=1", "display_name": "Gagan Jakhotiya", "link": "https://stackoverflow.com/users/5489560/gagan-jakhotiya"}, "is_accepted": false, "score": 4, "last_activity_date": 1446101479, "last_edit_date": 1446101479, "creation_date": 1445869214, "answer_id": 33348072, "question_id": 32200494, "link": "https://stackoverflow.com/questions/32200494/does-tsc-1-5-still-need-the-module-flag/33348072#33348072", "title": "Does tsc 1.5 still need the --module flag?", "body": "<p>TypeScript provides two ways to work with Modules\n1. Internal Modules\n2. External Modules</p>\n\n<p>While the first option is generally used to break a TypeScript module across different .ts files(through which one can use a component of a module of a .ts in some other .ts file in the same module without any explicit import statement), the second options is used to explicitly import a module usually from a library available. It is External Modules for which you've to provide TypeScript compiler with module parameter.</p>\n\n<p>So, in your code, the export syntax that you're using is for the first option (Internal Modules) for which you must put your code inside a module block.</p>\n\n<p>You can refer the <a href=\"http://www.typescriptlang.org/Handbook#modules\" rel=\"nofollow\">documentation</a>.</p>\n\n<p><strong>EDIT</strong>: This <a href=\"https://www.stevefenton.co.uk/2015/05/stop-mixing-typescript-internal-and-external-modules/\" rel=\"nofollow\">article</a> resolves the common doubt that occurs while working with module.</p>\n"}], "owner": {"reputation": 2516, "user_id": 98374, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/b420d81ce0151449d50681dd784faae3?s=128&d=identicon&r=PG", "display_name": "oivvio", "link": "https://stackoverflow.com/users/98374/oivvio"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1075, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1446101479, "creation_date": 1440495382, "question_id": 32200494, "link": "https://stackoverflow.com/questions/32200494/does-tsc-1-5-still-need-the-module-flag", "title": "Does tsc 1.5 still need the --module flag?", "body": "<p><a href=\"http://blogs.msdn.com/b/typescript/archive/2015/07/20/announcing-typescript-1-5.aspx\" rel=\"nofollow\">Typescript 1.5</a> added support for a <a href=\"https://github.com/Microsoft/TypeScript/pull/1692\" rel=\"nofollow\"><code>tsconfig.json</code></a> config file where one can specify things such as compiler options.</p>\n\n<p>Here's a quip from the <a href=\"http://blogs.msdn.com/b/typescript/archive/2015/07/20/announcing-typescript-1-5.aspx\" rel=\"nofollow\">blog post announcing 1.5</a>:</p>\n\n<blockquote>\n  <p>The compiler now supports \u2018tsconfig.json\u2019, a new file which allows you\n  to specify the files in your project and the compiler settings to use.</p>\n</blockquote>\n\n<p>This made me think that adding the <code>--module</code> flag to the compiler wouldn't be necessary any more. But trying to compile a simple file that exports a class I get this:</p>\n\n<pre><code>tsctest.ts(1,14): error TS1148: Cannot compile modules unless the '--module' flag is provided.\n</code></pre>\n\n<p>When running <code>tsc</code> with <code>--module commonjs</code> everything works fine.</p>\n\n<p>Here's the ts file:</p>\n\n<pre><code>//tsctest.ts\nexport class Empty {\n}\n</code></pre>\n\n<p>And here's the <code>tsconfig.json</code>:</p>\n\n<pre><code>{\n        \"compilerOptions\": {\n                \"target\": \"ES5\",\n                \"module\": \"commonjs\"\n        }\n}\n</code></pre>\n\n<p>My Typescript version is 1.5.3, <code>tsctest.ts</code> and <code>tsconfig.json</code> live in the same folder.</p>\n"}, {"tags": ["caching", "typescript"], "answers": [{"tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": true, "score": 2, "last_activity_date": 1440483137, "creation_date": 1440483137, "answer_id": 32196709, "question_id": 32196574, "link": "https://stackoverflow.com/questions/32196574/cache-within-getters-setters/32196709#32196709", "title": "cache within getters/setters?", "body": "<blockquote>\n  <p>Is it possible to do this without having to make a completely new variable inside the foo class</p>\n</blockquote>\n\n<p>nope. TypeScript doesn't have <em>static function local variables</em> which is effectively what you are asking for. </p>\n\n<blockquote>\n  <p>Is it possible in typescript to combine same variable types into one? like in java, I can do something like</p>\n</blockquote>\n\n<p>Not a part of the standard way in TypeScript + I don't have a clever trick here. </p>\n"}, {"tags": [], "owner": {"reputation": 5844, "user_id": 1075401, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/b38e877fe17599d7eec56bfcc52eb63d?s=128&d=identicon&r=PG", "display_name": "gilamran", "link": "https://stackoverflow.com/users/1075401/gilamran"}, "is_accepted": false, "score": 0, "last_activity_date": 1440503815, "creation_date": 1440503815, "answer_id": 32203379, "question_id": 32196574, "link": "https://stackoverflow.com/questions/32196574/cache-within-getters-setters/32203379#32203379", "title": "cache within getters/setters?", "body": "<p>Sounds like you should export this calculation to an external static class that does this calculation one time on the class definition like this:</p>\n\n<pre><code>class Calculator {\n    static a : number = 5;\n    static b : number = 6;\n    static c : number = 7;\n    static height : number = Math.ceil(Math.round(Math.tan(Calculator.a) + Calculator.b/2) * Calculator.c);\n}\n\nexport class foo{\n\n    constructor(){\n        //whatever\n    }\n\n    getHeight(f: number){\n        return (f + 16) * Calculator.height;\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 3013, "user_id": 4516689, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/xPRs0.png?s=128&g=1", "display_name": "Markus", "link": "https://stackoverflow.com/users/4516689/markus"}, "is_accepted": false, "score": 0, "last_activity_date": 1440512474, "creation_date": 1440512474, "answer_id": 32206588, "question_id": 32196574, "link": "https://stackoverflow.com/questions/32196574/cache-within-getters-setters/32206588#32206588", "title": "cache within getters/setters?", "body": "<p>I'm not sure what you trying to do. But how is that? <a href=\"http://www.typescriptlang.org/Playground#src=export%20class%20foo%7B%0A%20%20%20%20%2F*%20Is%20not%20visible%20outside%20of%20foo.%20*%2F%0A%20%20%20%20private%20static%20factor%20%3D%20Math.ceil%28Math.round%28Math.tan%28foo.aaa%29%20%2B%20foo.bbb%2F2%29%20*%20foo.ccc%29%3B%0A%0A%20%20%20%20public%20constructor%28%29%7B%0A%20%20%20%20%20%20%20%20%2F%2Fwhatever%0A%20%20%20%20%7D%0A%0A%20%20%20%20public%20getHeight%28f%3A%20number%29%7B%0A%20%20%20%20%20%20%20%20return%20%28f%20%2B%2016%29%20*%20foo.factor%3B%0A%20%20%20%20%7D%0A%7D%0A%0Aexport%20module%20foo%20%7B%0A%20%20%20%20%2F*%20Use%20module%20mixing%20for%20constant%20variables%2C%20*%2F%0A%20%20%20%20export%20const%20aaa%20%3D%201%3B%0A%20%20%20%20export%20const%20bbb%20%3D%202%3B%0A%20%20%20%20export%20const%20ccc%20%3D%203%3B%0A%7D\" rel=\"nofollow\">Playground</a></p>\n\n<pre><code>export class foo{\n    /* Is not visible outside of foo. */\n    private static factor = Math.ceil(Math.round(Math.tan(foo.aaa) + foo.bbb/2) * foo.ccc);\n\n    public constructor(){\n        //whatever\n    }\n\n    public getHeight(f: number){\n        return (f + 16) * foo.factor;\n    }\n}\n\nexport module foo {\n    /* Use module mixing for constant variables, */\n    export const aaa = 1;\n    export const bbb = 2;\n    export const ccc = 3;\n}\n</code></pre>\n\n<p>Or like this? <a href=\"http://www.typescriptlang.org/Playground#src=export%20class%20foo%7B%0A%0A%20%20%20%20%2F*%20or%20readonly%20propierties.%20*%2F%0A%20%20%20%20public%20get%20aaa%28%29%7B%20return%201%3B%7D%3B%0A%20%20%20%20public%20get%20bbb%28%29%7B%20return%202%3B%7D%3B%0A%20%20%20%20public%20get%20ccc%28%29%7B%20return%203%3B%7D%3B%0A%0A%20%20%20%20%2F*%20Is%20still%20not%20visible%20outside%20of%20foo.%20*%2F%0A%20%20%20%20private%20static%20factor%20%3D%20Math.ceil%28Math.round%28Math.tan%28foo.aaa%29%20%2B%20foo.bbb%2F2%29%20*%20foo.ccc%29%3B%0A%0A%20%20%20%20public%20constructor%28%29%7B%0A%20%20%20%20%20%20%20%20%2F%2Fwhatever%0A%20%20%20%20%7D%0A%0A%20%20%20%20public%20getHeight%28f%3A%20number%29%7B%0A%20%20%20%20%20%20%20%20return%20%28f%20%2B%2016%29%20*%20foo2.factor%3B%0A%20%20%20%20%7D%0A%7D\" rel=\"nofollow\">Playground</a></p>\n\n<pre><code>export class foo{\n\n    /* or readonly propierties. */\n    public get aaa(){ return 1;};\n    public get bbb(){ return 2;};\n    public get ccc(){ return 3;};\n\n    /* Is still not visible outside of foo. */\n    private static factor = Math.ceil(Math.round(Math.tan(foo.aaa) + foo.bbb/2) * foo.ccc);\n\n    public constructor(){\n        //whatever\n    }\n\n    public getHeight(f: number){\n        return (f + 16) * foo2.factor;\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 89, "user_id": 5110191, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/bb373f770cd0be7b3c331b647110185f?s=128&d=identicon&r=PG&f=1", "display_name": "NewbieProgrammer", "link": "https://stackoverflow.com/users/5110191/newbieprogrammer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1363, "favorite_count": 0, "accepted_answer_id": 32196709, "answer_count": 3, "score": 4, "last_activity_date": 1440512474, "creation_date": 1440482480, "last_edit_date": 1440482808, "question_id": 32196574, "link": "https://stackoverflow.com/questions/32196574/cache-within-getters-setters", "title": "cache within getters/setters?", "body": "<p>If I have a getter like this:</p>\n\n<pre><code>export class foo{\n    aaa: number;\n    bbb: number;\n    ccc: number;\n\n    constructor(){\n        //whatever\n    }\n\n    get getHeight(f: number){\n        return (f + 16) * Math.ceil(Math.round(Math.tan(aaa) + bbb/2) * ccc);\n    }\n}\n</code></pre>\n\n<p>where <code>aaa</code>, <code>bbb</code>, and <code>ccc</code> is a constant that does not get changed during runtime.</p>\n\n<p>I have to call the getter multiple times from other classes during runtime, so I want to be able to reduce performance as much as possible by \"cache\"ing <code>Math.ceil(Math.round(Math.tan(aaa) + bbb/2) * ccc)</code>. Is it possible to do this without having to make a completely new variable inside the <code>foo</code> class?</p>\n\n<p>*bonus question: Is it possible in typescript to combine same variable types into one? like in java, I can do something like:</p>\n\n<pre><code>int aaa, bbb, ccc;\n</code></pre>\n\n<p>but it seems like typescript doesnt allow that.</p>\n"}, {"tags": ["typescript"], "answers": [{"tags": [], "owner": {"reputation": 1679, "user_id": 5171110, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/dcb5e1caccc071299f63c26271f1d244?s=128&d=identicon&r=PG&f=1", "display_name": "Artem", "link": "https://stackoverflow.com/users/5171110/artem"}, "is_accepted": true, "score": 1, "last_activity_date": 1440454354, "creation_date": 1440454354, "answer_id": 32192583, "question_id": 32192157, "link": "https://stackoverflow.com/questions/32192157/return-class-type-in-typescript/32192583#32192583", "title": "Return class type in TypeScript", "body": "<p>Because of duck typing. <code>A</code> has no members, so <code>typeof A</code> is assignable to <code>A</code>.\nContary is not the same: <code>typeof A</code> has a constructor, so <code>A</code> cannot be assigned to <code>typeof A</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 5844, "user_id": 1075401, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/b38e877fe17599d7eec56bfcc52eb63d?s=128&d=identicon&r=PG", "display_name": "gilamran", "link": "https://stackoverflow.com/users/1075401/gilamran"}, "is_accepted": false, "score": 4, "last_activity_date": 1440457889, "creation_date": 1440457889, "answer_id": 32193148, "question_id": 32192157, "link": "https://stackoverflow.com/questions/32192157/return-class-type-in-typescript/32193148#32193148", "title": "Return class type in TypeScript", "body": "<p>When asking Typescript to verify a return type A, you actually telling Typescript to make sure that the return value should structure as an instance of A.</p>\n\n<p>When you return A, you are actually returning the prototype of A (typeof A)</p>\n\n<p>So, in your case A is just an empty object with no fields so <code>A</code> and <code>new A()</code> have the same structure, so no error.</p>\n\n<p>When you define a return type <code>typeof A</code> TypeScript will compare the prototype of the function A (Class is actually a prototyped function after all) with <code>A</code> this will also result in successful compilation.</p>\n\n<p>But, when you compare the <code>typeof A</code> (The prototype of A) with an instance of <code>A</code> it is not the same. your compilation will return an error.</p>\n\n<p>To sum it up:</p>\n\n<ul>\n<li>The prototype of A which is {}, has all the fields of A which is {} -> pass</li>\n<li>An instance of A is {} and it also contains all the fields of A which is {} -> pass</li>\n<li>The prototype of A which is a constructor function with no static fields, but fulfill the required {}, is the same as A which is {} -> pass</li>\n<li>An instance of A which is {} is not the same as the prototype of A which has an extra constructor function -> fail</li>\n</ul>\n"}], "owner": {"reputation": 83, "user_id": 4744426, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b07ab466c18c2fc3343a282b6d476d14?s=128&d=identicon&r=PG&f=1", "display_name": "Jos&#233; Carlos Lama", "link": "https://stackoverflow.com/users/4744426/jos%c3%a9-carlos-lama"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5738, "favorite_count": 1, "accepted_answer_id": 32192583, "answer_count": 2, "score": 5, "last_activity_date": 1440457889, "creation_date": 1440452281, "question_id": 32192157, "link": "https://stackoverflow.com/questions/32192157/return-class-type-in-typescript", "title": "Return class type in TypeScript", "body": "<p>If we write this:</p>\n\n<pre><code>class  A {}\n\n    function foo(): A {\n        return A; // No error. Why?\n    }\n\n    function foo2(): A {\n        return new A(); // Ok.\n    }\n\n    function bar(): typeof A {\n        return A; // Ok.\n    }\n\n    function bar2(): typeof A {\n        return new A(); // Error. It\u00b4s ok.\n    }\n</code></pre>\n\n<p>Type of A is not A, instead it is typeof A. So I don\u00b4t understand why first example works.</p>\n\n<p>Thanks.</p>\n"}, {"tags": ["twitter-bootstrap-3", "typescript", "typescript1.5"], "comments": [{"owner": {"reputation": 5844, "user_id": 1075401, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/b38e877fe17599d7eec56bfcc52eb63d?s=128&d=identicon&r=PG", "display_name": "gilamran", "link": "https://stackoverflow.com/users/1075401/gilamran"}, "edited": false, "score": 0, "creation_date": 1440456738, "post_id": 32191641, "comment_id": 52271031, "body": "This should work just as you wrote it, what is the actual error? you wrote t(...).modal is not a function. but I don&#39;t see t(...)"}, {"owner": {"reputation": 91, "user_id": 5137394, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/a2703a362459196c5899f184538ccafd?s=128&d=identicon&r=PG&f=1", "display_name": "Jama", "link": "https://stackoverflow.com/users/5137394/jama"}, "reply_to_user": {"reputation": 5844, "user_id": 1075401, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/b38e877fe17599d7eec56bfcc52eb63d?s=128&d=identicon&r=PG", "display_name": "gilamran", "link": "https://stackoverflow.com/users/1075401/gilamran"}, "edited": false, "score": 0, "creation_date": 1440483643, "post_id": 32191641, "comment_id": 52278400, "body": "After compiling , and the browser console shows below messages <code>Uncaught TypeError: t(...).modal is not a function</code>. I guess this means bootstrap is not injected into jQuery :("}], "answers": [{"tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": false, "score": 0, "last_activity_date": 1440460655, "creation_date": 1440460655, "answer_id": 32193543, "question_id": 32191641, "link": "https://stackoverflow.com/questions/32191641/typescript-twitter-bootstrap-not-injectable/32193543#32193543", "title": "Typescript Twitter Bootstrap not injectable?", "body": "<p>The provided code sample: </p>\n\n<pre><code>import $ = require('jquery');\n$('#modal').modal();\n</code></pre>\n\n<p>Works fine <a href=\"https://github.com/borisyankov/DefinitelyTyped/blob/c5a2f44bab06cf9f2bcc14530171daac1cebff6c/bootstrap/bootstrap-tests.ts#L8\" rel=\"nofollow\">as shown in the test file</a></p>\n"}, {"comments": [{"owner": {"reputation": 91, "user_id": 5137394, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/a2703a362459196c5899f184538ccafd?s=128&d=identicon&r=PG&f=1", "display_name": "Jama", "link": "https://stackoverflow.com/users/5137394/jama"}, "edited": false, "score": 0, "creation_date": 1440590887, "post_id": 32202899, "comment_id": 52334802, "body": "Do you know how I should include not-included scripts into it ? :s"}, {"owner": {"reputation": 5844, "user_id": 1075401, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/b38e877fe17599d7eec56bfcc52eb63d?s=128&d=identicon&r=PG", "display_name": "gilamran", "link": "https://stackoverflow.com/users/1075401/gilamran"}, "reply_to_user": {"reputation": 91, "user_id": 5137394, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/a2703a362459196c5899f184538ccafd?s=128&d=identicon&r=PG&f=1", "display_name": "Jama", "link": "https://stackoverflow.com/users/5137394/jama"}, "edited": false, "score": 0, "creation_date": 1440600403, "post_id": 32202899, "comment_id": 52342036, "body": "The same way you added jquery to the project (Probably in your index.html), add the missing file (Probably the bootstrap files)"}], "tags": [], "owner": {"reputation": 5844, "user_id": 1075401, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/b38e877fe17599d7eec56bfcc52eb63d?s=128&d=identicon&r=PG", "display_name": "gilamran", "link": "https://stackoverflow.com/users/1075401/gilamran"}, "is_accepted": false, "score": 0, "last_activity_date": 1440502396, "creation_date": 1440502396, "answer_id": 32202899, "question_id": 32191641, "link": "https://stackoverflow.com/questions/32191641/typescript-twitter-bootstrap-not-injectable/32202899#32202899", "title": "Typescript Twitter Bootstrap not injectable?", "body": "<p>TypeScript is aimed for development time only. If you are having runtime issues it's probably because you didn't include some scripts.</p>\n"}, {"tags": [], "owner": {"reputation": 351, "user_id": 6388058, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-_2yCcD527_U/AAAAAAAAAAI/AAAAAAAAAoE/oS_CDNvr8G4/photo.jpg?sz=128", "display_name": "Oriana Ruiz", "link": "https://stackoverflow.com/users/6388058/oriana-ruiz"}, "is_accepted": false, "score": 0, "last_activity_date": 1470531850, "creation_date": 1470531850, "answer_id": 38809987, "question_id": 32191641, "link": "https://stackoverflow.com/questions/32191641/typescript-twitter-bootstrap-not-injectable/38809987#38809987", "title": "Typescript Twitter Bootstrap not injectable?", "body": "<p>The instructions that you provide:</p>\n\n<blockquote>\n  <p><code>tsd install jquery --save</code> </p>\n  \n  <p><code>tsd install bootstrap --save</code></p>\n</blockquote>\n\n<p>Worked for me. I have in my main component (<code>app.component.ts</code>) the following:</p>\n\n<p><code>declare var $:JQueryStatic</code></p>\n\n<p>And I have a component for modals where I use the following without any complains:</p>\n\n<p><code>@ViewChild('modal') modal: ElementRef</code></p>\n\n<p><code>ngAfterViewInit() {\n    $(this.modal).modal()\n}</code></p>\n\n<p>I hope it works for you too!</p>\n"}], "owner": {"reputation": 91, "user_id": 5137394, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/a2703a362459196c5899f184538ccafd?s=128&d=identicon&r=PG&f=1", "display_name": "Jama", "link": "https://stackoverflow.com/users/5137394/jama"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 777, "favorite_count": 1, "answer_count": 3, "score": 1, "last_activity_date": 1470531850, "creation_date": 1440449973, "last_edit_date": 1440592493, "question_id": 32191641, "link": "https://stackoverflow.com/questions/32191641/typescript-twitter-bootstrap-not-injectable", "title": "Typescript Twitter Bootstrap not injectable?", "body": "<p>I tried</p>\n\n<pre><code>tsd install jquery --save\ntsd install bootstrap --save\n</code></pre>\n\n<p>and tsd.json would be</p>\n\n<pre><code> {\n   \"version\": \"v4\",\n   \"repo\": \"borisyankov/DefinitelyTyped\",\n   \"ref\": \"master\",\n   \"path\": \"typings\",\n   \"bundle\": \"typings/tsd.d.ts\",\n   \"installed\": {\n     \"jquery/jquery.d.ts\": {\n       \"commit\": \"c5a2f44bab06cf9f2bcc14530171daac1cebff6c\"\n     },\n     \"bootstrap/bootstrap.d.ts\": {\n       \"commit\": \"c5a2f44bab06cf9f2bcc14530171daac1cebff6c\"\n     }\n   }\n }\n</code></pre>\n\n<p>and tsd.d.ts was</p>\n\n<pre><code>/// &lt;reference path=\"jquery/jquery.d.ts\" /&gt;\n/// &lt;reference path=\"bootstrap/bootstrap.d.ts\" /&gt;\n</code></pre>\n\n<p>so, I thought I could do</p>\n\n<pre><code>/// &lt;reference path=\"../../typings/tsd.d.ts\" /&gt;\n\nimport $ = require('jquery');\n$('#modal').modal();\n</code></pre>\n\n<p>But I've got this Warning.</p>\n\n<p><code>Uncaught TypeError: t(...).modal is not a function</code></p>\n\n<p>Any ideas ?</p>\n"}, {"tags": ["typescript", "angular"], "answers": [{"comments": [{"owner": {"reputation": 2884, "user_id": 325206, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/efdbd34e1b065d092fca88e8f91649ce?s=128&d=identicon&r=PG", "display_name": "Necros", "link": "https://stackoverflow.com/users/325206/necros"}, "edited": false, "score": 0, "creation_date": 1440492534, "post_id": 32191833, "comment_id": 52283454, "body": "My app is actually a node app, so typescript is transpiled to ES5 and require. I don&#39;t think you can import from root with require, unless you hack it somehow or force the compiler to generate correct relative path for you."}], "tags": [], "owner": {"reputation": 5844, "user_id": 1075401, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/b38e877fe17599d7eec56bfcc52eb63d?s=128&d=identicon&r=PG", "display_name": "gilamran", "link": "https://stackoverflow.com/users/1075401/gilamran"}, "is_accepted": false, "score": 1, "last_activity_date": 1440450871, "creation_date": 1440450871, "answer_id": 32191833, "question_id": 32191057, "link": "https://stackoverflow.com/questions/32191057/typescript-import-using-path-from-some-root/32191833#32191833", "title": "Typescript import using path from some root", "body": "<p>All ES6 imports are relative, angular2 are using systemjs to handle all the imports/exports. And in the systemjs configuration you can define a map. (I wouldn't go there)</p>\n\n<p>You have to remember that imports in ES6 are just loading javascript files, so if src is your root, you should be able to just import from <strong>/src/module1/files</strong></p>\n"}, {"comments": [{"owner": {"reputation": 828, "user_id": 2938082, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8522ef14ed96cd1ce46dacd77344e726?s=128&d=identicon&r=PG", "display_name": "CharlyDelta", "link": "https://stackoverflow.com/users/2938082/charlydelta"}, "edited": false, "score": 0, "creation_date": 1462906796, "post_id": 32232102, "comment_id": 61831643, "body": "Did you manage to get <code>app-module-path</code> to work? Because it does not work for me using it."}, {"owner": {"reputation": 2884, "user_id": 325206, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/efdbd34e1b065d092fca88e8f91649ce?s=128&d=identicon&r=PG", "display_name": "Necros", "link": "https://stackoverflow.com/users/325206/necros"}, "reply_to_user": {"reputation": 828, "user_id": 2938082, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8522ef14ed96cd1ce46dacd77344e726?s=128&d=identicon&r=PG", "display_name": "CharlyDelta", "link": "https://stackoverflow.com/users/2938082/charlydelta"}, "edited": false, "score": 0, "creation_date": 1463216264, "post_id": 32232102, "comment_id": 61979450, "body": "Yes, see updated answer. This worked for me for any version of node I ran."}, {"owner": {"reputation": 828, "user_id": 2938082, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8522ef14ed96cd1ce46dacd77344e726?s=128&d=identicon&r=PG", "display_name": "CharlyDelta", "link": "https://stackoverflow.com/users/2938082/charlydelta"}, "edited": false, "score": 0, "creation_date": 1463218259, "post_id": 32232102, "comment_id": 61980029, "body": "Thank you very much, I will give it a try :))"}], "tags": [], "owner": {"reputation": 2884, "user_id": 325206, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/efdbd34e1b065d092fca88e8f91649ce?s=128&d=identicon&r=PG", "display_name": "Necros", "link": "https://stackoverflow.com/users/325206/necros"}, "is_accepted": false, "score": 1, "last_activity_date": 1463216001, "last_edit_date": 1463216001, "creation_date": 1440607092, "answer_id": 32232102, "question_id": 32191057, "link": "https://stackoverflow.com/questions/32191057/typescript-import-using-path-from-some-root/32232102#32232102", "title": "Typescript import using path from some root", "body": "<p><a href=\"https://www.npmjs.com/package/app-module-path\" rel=\"nofollow\">https://www.npmjs.com/package/app-module-path</a> seems to be the best solution for node.</p>\n\n<p>Update: </p>\n\n<p>I use it like this</p>\n\n<pre><code>root\n  \\- module1\n  |  \\- file1.ts\n  \\- module2\n  |  \\- file2.ts\n  \\- main.ts\n</code></pre>\n\n<p><code>main.ts</code> is entry point for the application, and these are the first two lines:</p>\n\n<pre><code>import * as path from 'path';\n\nrequire('app-module-path').addPath(path.resolve(__dirname, '..'));\n</code></pre>\n\n<p>then from <code>module2/file2.ts</code> i can do this:</p>\n\n<pre><code>import { Stuff } from 'root/module1/file1';\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 2884, "user_id": 325206, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/efdbd34e1b065d092fca88e8f91649ce?s=128&d=identicon&r=PG", "display_name": "Necros", "link": "https://stackoverflow.com/users/325206/necros"}, "edited": false, "score": 0, "creation_date": 1496913989, "post_id": 44404452, "comment_id": 75861006, "body": "This is a feature of typescript compiler, that has been improved a lot since this question, there is also a setting where you can configure custom paths (<a href=\"https://www.typescriptlang.org/docs/handbook/module-resolution.html\" rel=\"nofollow noreferrer\">typescriptlang.org/docs/handbook/module-resolution.html</a>). Also there are (or used to be) some differences between node and browser module resolution."}], "tags": [], "owner": {"reputation": 525, "user_id": 5348742, "user_type": "registered", "accept_rate": 57, "profile_image": "https://lh3.googleusercontent.com/-7a5lfuQIoSI/AAAAAAAAAAI/AAAAAAAAABc/B7f_7r_TdUU/photo.jpg?sz=128", "display_name": "Chris Curnow", "link": "https://stackoverflow.com/users/5348742/chris-curnow"}, "is_accepted": false, "score": 1, "last_activity_date": 1496814377, "creation_date": 1496814377, "answer_id": 44404452, "question_id": 32191057, "link": "https://stackoverflow.com/questions/32191057/typescript-import-using-path-from-some-root/44404452#44404452", "title": "Typescript import using path from some root", "body": "<p>I am working with Angular CLI and the standard structure it produces.</p>\n\n<p>So everything I work with is in <code>src/app</code>.</p>\n\n<p>My main HTTP service is located at <code>src/app/services/httpService.ts</code>.</p>\n\n<p>To get import this service I use:</p>\n\n<pre><code>import { HttpService } from 'app/services/httpService'\n</code></pre>\n\n<p>I'm not sure if this relies on any special config that Angular CLI does (and I realise Angular CLI wasn't around at the time this question was posted) but it would be worth a try in your environment.</p>\n"}], "owner": {"reputation": 2884, "user_id": 325206, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/efdbd34e1b065d092fca88e8f91649ce?s=128&d=identicon&r=PG", "display_name": "Necros", "link": "https://stackoverflow.com/users/325206/necros"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5791, "favorite_count": 0, "answer_count": 3, "score": 4, "last_activity_date": 1496814377, "creation_date": 1440447641, "question_id": 32191057, "link": "https://stackoverflow.com/questions/32191057/typescript-import-using-path-from-some-root", "title": "Typescript import using path from some root", "body": "<p>Is there any simple way to set up so that I can <code>import</code> starting from some root point?</p>\n\n<p>e.g.:</p>\n\n<pre><code>- module1\n   \\- file1.ts\n- module2\n   \\- file2.ts\n</code></pre>\n\n<p>in file2 i want to <code>import</code> file1</p>\n\n<pre><code>import { foo } from '../module1/file1'\n</code></pre>\n\n<p>What I would like to do instead is something like:</p>\n\n<pre><code>import { foo } from 'src/module1/file1'\n</code></pre>\n\n<p>Angular2 somehow uses this (see <a href=\"https://github.com/angular/angular/blob/master/modules/angular2/src/core/compiler/compiler.ts\" rel=\"nofollow\">https://github.com/angular/angular/blob/master/modules/angular2/src/core/compiler/compiler.ts</a>). I looked into their build process, but it's so complex, I'm not sure how they enabled this.</p>\n"}, {"tags": ["module", "static", "typescript"], "comments": [{"owner": {"reputation": 7340, "user_id": 1146785, "user_type": "registered", "accept_rate": 42, "profile_image": "https://i.stack.imgur.com/l51PO.jpg?s=128&g=1", "display_name": "dcsan", "link": "https://stackoverflow.com/users/1146785/dcsan"}, "edited": false, "score": 0, "creation_date": 1440456571, "post_id": 32190665, "comment_id": 52270970, "body": "update I can fix this with <code>export = Qbot</code>"}], "answers": [{"tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": false, "score": 0, "last_activity_date": 1440461127, "creation_date": 1440461127, "answer_id": 32193606, "question_id": 32190665, "link": "https://stackoverflow.com/questions/32190665/typescript-modules-across-files/32193606#32193606", "title": "typescript modules across files", "body": "<blockquote>\n  <p>Do I need to always have the extra file import to \"contain\" import modules before I can access them? Any pointers on how to achieve this would be appreciated!</p>\n</blockquote>\n\n<p>Don't mix internal modules with external modules. Just use external modules. e.g. in your case <code>FileReader.ts</code>: </p>\n\n<pre><code>import fs = require(\"fs\");\n\nexport class Utils {\n    static read(filename: string) {\n        var buf = fs.readFileSync(filename, \"utf8\");\n        return data;\n    }\n\n}\n\nUtils.read(\"test\");  // compiles OK\n</code></pre>\n"}], "owner": {"reputation": 7340, "user_id": 1146785, "user_type": "registered", "accept_rate": 42, "profile_image": "https://i.stack.imgur.com/l51PO.jpg?s=128&g=1", "display_name": "dcsan", "link": "https://stackoverflow.com/users/1146785/dcsan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 277, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1440461127, "creation_date": 1440446100, "last_edit_date": 1495541678, "question_id": 32190665, "link": "https://stackoverflow.com/questions/32190665/typescript-modules-across-files", "title": "typescript modules across files", "body": "<p>I'm trying to get a simple node project with typescript and break code into two separate files, using a shared module. But having some problems!</p>\n\n<p>1) <code>FileReader.ts</code> defines + exports a static function within a shared module</p>\n\n<pre><code>var fs = require(\"fs\");\n\nexport module Qbot {\n\n    export class Utils {\n        static read(filename: string) {\n            var buf = fs.readFileSync(filename, \"utf8\");\n            return data;\n        }\n\n    }\n\n    Qbot.Utils.read(\"test\");  // compiles OK\n\n}\n</code></pre>\n\n<p>2) <code>FileReader-spec.ts</code> a separate file to try and use the above.</p>\n\n<pre><code>/// &lt;reference path=\"./FileReader.ts\" /&gt;\n\n// should be in same module but TS compiler gives an error\nmodule Qbot {\n    var u = Qbot.Utils;  // ERR does not exist\n    var data = Qbot.Utils.read(\"somefile.json\");  // ERR cant find name\n}\n\n// outside the module? nope.\nvar data = Qbot.Utils.read(\"somefile.json\");  // Utils doesnt exist\n\n// this works but why the extra file thingy needed?\nimport something = require(\"./FileReader\");\nvar filepath = \"./topics.json\";\nvar data = something.Qbot.Utils.read(filepath);\n</code></pre>\n\n<p>Do I need to always have the extra file import to \"contain\" import modules before I can access them? Any pointers on how to achieve this would be appreciated!</p>\n\n<p>This example is also just trying to call a static function on the Qbot.Utils module ( per this example <a href=\"https://stackoverflow.com/a/13212648/1146785\">https://stackoverflow.com/a/13212648/1146785</a> )</p>\n\n<p>Thanks!</p>\n"}, {"tags": ["typescript"], "comments": [{"owner": {"reputation": 1547, "user_id": 1396477, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d7d17cb4aeab4d02d979825ec8192fd0?s=128&d=identicon&r=PG", "display_name": "Joe Skeen", "link": "https://stackoverflow.com/users/1396477/joe-skeen"}, "edited": false, "score": 0, "creation_date": 1440439574, "post_id": 32188679, "comment_id": 52262811, "body": "There is a <code>private</code> modifier that can be used on ES6/TypeScript <code>class</code>es.  At compile time, TypeScript gives you an error when trying to access <code>private</code> members, but at runtime they are still accessible. (See <a href=\"http://www.typescriptlang.org/Handbook#classes\" rel=\"nofollow noreferrer\">typescriptlang.org/Handbook#classes</a>, especially the &#39;Understanding private&#39; section)"}, {"owner": {"reputation": 279, "user_id": 2125552, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/hw3Hn.jpg?s=128&g=1", "display_name": "Jonathan Edwards", "link": "https://stackoverflow.com/users/2125552/jonathan-edwards"}, "reply_to_user": {"reputation": 1547, "user_id": 1396477, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d7d17cb4aeab4d02d979825ec8192fd0?s=128&d=identicon&r=PG", "display_name": "Joe Skeen", "link": "https://stackoverflow.com/users/1396477/joe-skeen"}, "edited": false, "score": 0, "creation_date": 1440449777, "post_id": 32188679, "comment_id": 52268293, "body": "Private is not a solution. I&#39;ve amended the question to explain why."}, {"owner": {"reputation": 1547, "user_id": 1396477, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d7d17cb4aeab4d02d979825ec8192fd0?s=128&d=identicon&r=PG", "display_name": "Joe Skeen", "link": "https://stackoverflow.com/users/1396477/joe-skeen"}, "edited": false, "score": 0, "creation_date": 1440450247, "post_id": 32188679, "comment_id": 52268529, "body": "OK, so you don&#39;t really want <code>private</code>, but more of an internal/package access.  As JavaScript wasn&#39;t designed that way, what you want to do would require some third-party JavaScript library to enforce access to members at runtime.  TypeScript, and any of its typing constraints, do not exist at runtime."}, {"owner": {"reputation": 6371, "user_id": 283851, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/8ae7bce2d58740d9e5173e9cbdea0c4f?s=128&d=identicon&r=PG", "display_name": "mindplay.dk", "link": "https://stackoverflow.com/users/283851/mindplay-dk"}, "edited": false, "score": 0, "creation_date": 1548343177, "post_id": 32188679, "comment_id": 95515085, "body": "I solved this simply by moving the public portion of my API to the root module, and moving all internal members to a sub-module - then configure a separate build for the declaration (<code>.d.ts</code>) file, in which I include only the root module. This way, anything residing in a sub-module ends up being <i>effectively</i> internal. (vice-versa, if your sub-modules are public, move your internal members to a specific sub-module and exclude that from your declaration-build.)"}, {"owner": {"reputation": 8165, "user_id": 605067, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/5933c35c89316a82964bd82d0f9dd427?s=128&d=identicon&r=PG", "display_name": "crimbo", "link": "https://stackoverflow.com/users/605067/crimbo"}, "edited": false, "score": 0, "creation_date": 1588822278, "post_id": 32188679, "comment_id": 109049676, "body": "There&#39;s a proposal for an internal modifier - something I&#39;d love to see in the future: <a href=\"https://github.com/microsoft/TypeScript/issues/5228\" rel=\"nofollow noreferrer\">github.com/microsoft/TypeScript/issues/5228</a>"}], "answers": [{"tags": [], "owner": {"reputation": 7835, "user_id": 508029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d7c58d7270127a933ea4ca10026a46e5?s=128&d=identicon&r=PG", "display_name": "Mark Knol", "link": "https://stackoverflow.com/users/508029/mark-knol"}, "is_accepted": false, "score": 3, "last_activity_date": 1440443666, "last_edit_date": 1440443666, "creation_date": 1440439594, "answer_id": 32188834, "question_id": 32188679, "link": "https://stackoverflow.com/questions/32188679/how-does-a-typescript-api-hide-internal-members/32188834#32188834", "title": "How does a Typescript API hide internal members?", "body": "<ul>\n<li>You can mark fields and functions as private using the <code>private</code> modifier keyword. </li>\n<li>You can use a naming convention, like start all privates with an underscore.</li>\n<li>If the classes should not be exposed you can also use naming convention (prefix with \"Internal\" or something. You can also put in the (class) documentation that the class is not intended to be used anywhere outside the framework.</li>\n</ul>\n\n<p>Note that in the end everything in JavaScript is quite public because of the prototyped based language. There are also no actual namespaces. So maybe you should not worry too much. Good documentation always helps.</p>\n\n<hr>\n\n<p>As a sidenote it might be interesting to know that there are great other transpilers like TypeScript. Haxe for example solves this problem a bit more elegant because of their more OOP oriented language design, where you can grant and request access using metadata on top of the access modifiers. You might find this more convenient coming from Java. Still, in the end everything will be public because of JavaScript.</p>\n"}, {"comments": [{"owner": {"reputation": 279, "user_id": 2125552, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/hw3Hn.jpg?s=128&g=1", "display_name": "Jonathan Edwards", "link": "https://stackoverflow.com/users/2125552/jonathan-edwards"}, "edited": false, "score": 0, "creation_date": 1440509356, "post_id": 32194452, "comment_id": 52294725, "body": "That&#39;s an interesting idea - use the .d.ts file like an interface definition. Generate it based on absence of @private doc comment. It would be more complicated than a grep because internal members are multiline expressions including comments, but doable with a parser."}], "tags": [], "owner": {"reputation": 121, "user_id": 4714192, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-nvZRTvKRK1s/AAAAAAAAAAI/AAAAAAAAAEg/t2sLr7Hy3bg/photo.jpg?sz=128", "display_name": "Alexander Feterman", "link": "https://stackoverflow.com/users/4714192/alexander-feterman"}, "is_accepted": false, "score": 1, "last_activity_date": 1440468363, "creation_date": 1440468363, "answer_id": 32194452, "question_id": 32188679, "link": "https://stackoverflow.com/questions/32188679/how-does-a-typescript-api-hide-internal-members/32194452#32194452", "title": "How does a Typescript API hide internal members?", "body": "<p>Starting with 1.3, <code>protected</code> is available as an access specifier. That's one of your concerns (and mine!) addressed.</p>\n\n<p>As for limiting the visibility of other members to certain libraries, at least where the TypeScript compiler is concerned, you could create different versions of the declaration files.</p>\n\n<p>Let's say you compile a file using the <code>--declaration</code> switch, producing a <code>.d.ts</code> that file looks like this:</p>\n\n<pre><code>class Something {\n    // ...\n    public internal_use_only: someType;\n    // ...\n}\n</code></pre>\n\n<p>To produce a more restrictive declaration file, simply copy it to another file and delete the line containing <code>internal_use_only</code>.</p>\n\n<p>If you want this automated within a compile/test cycle, you can have a <em>[ task runner | project build utility ]</em> script that invokes the compiler with the <code>--declaration</code> switch and <em>then</em> a text processing utility like <code>grep</code> (found in Linux or <a href=\"http://www.cygwin.org\" rel=\"nofollow\">Cygwin</a>, which provides Windows with some Un*x commands and shell environment). A grep command invocation to eliminate only the line in question would look like this:</p>\n\n<p><code>cat something.d.ts | grep -v \\\\binternal_use_only\\\\b &gt; moreRestrictiveSomething.d.ts</code></p>\n\n<p>There are similar commands for other shells, like <code>findstr</code> in Windows/CMD, which also works with <a href=\"http://www.regular-expressions.info/tutorial.html\" rel=\"nofollow\">Regular Expressions</a>.</p>\n"}, {"comments": [{"owner": {"reputation": 6292, "user_id": 1483676, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/h2IgH.jpg?s=128&g=1", "display_name": "cubuspl42", "link": "https://stackoverflow.com/users/1483676/cubuspl42"}, "edited": false, "score": 6, "creation_date": 1557052352, "post_id": 53124244, "comment_id": 98629947, "body": "<code>--stripInternal</code> is now <a href=\"https://github.com/Microsoft/TypeScript-Handbook/pull/856\" rel=\"nofollow noreferrer\">undocumented</a>"}], "tags": [], "owner": {"reputation": 7338, "user_id": 1333004, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/IWtm4.jpg?s=128&g=1", "display_name": "GregRos", "link": "https://stackoverflow.com/users/1333004/gregros"}, "is_accepted": false, "score": 17, "last_activity_date": 1541184340, "creation_date": 1541184340, "answer_id": 53124244, "question_id": 32188679, "link": "https://stackoverflow.com/questions/32188679/how-does-a-typescript-api-hide-internal-members/53124244#53124244", "title": "How does a Typescript API hide internal members?", "body": "<p>Since TypeScript 3.1, you can use the <code>stripInternal</code> compiler option. When generating declaration files, this stops declarations being generated for code that has the <code>@internal</code> JSDoc annotation. </p>\n\n<p>This compiler option can be enabled in the <code>tsconfig.json</code> file:</p>\n\n<pre><code>{\n    \"compilerOptions\" : {\n        ...\n        \"stripInternal\": true\n    }\n}\n</code></pre>\n\n<p>For example, the following declarations will be suppressed:</p>\n\n<pre><code>//Class will not be visible\n/** @internal */\nexport class MyHelperClass {\n\n}\n\nexport class MyPublicClass {\n    //Method will not be visible\n    /** @internal */ \n    helperMethod() {}\n}\n\n// Binding will not be visible\n/** @internal */\nexport const MyValue = 5;\n</code></pre>\n\n<p>However, this will have no effect on code that sees the <code>*.ts</code> source files, such as your own code. </p>\n\n<p>If you distribute your package as a mix of <code>*.js</code> and <code>*.d.ts</code> files, like most NPM packages, this will effectively hide the member from code outside your package. But if you distribute the code as <code>*.ts</code> files, it won\u2019t help you.</p>\n"}], "owner": {"reputation": 279, "user_id": 2125552, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/hw3Hn.jpg?s=128&g=1", "display_name": "Jonathan Edwards", "link": "https://stackoverflow.com/users/2125552/jonathan-edwards"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 7294, "favorite_count": 0, "answer_count": 3, "score": 13, "last_activity_date": 1541184340, "creation_date": 1440439030, "last_edit_date": 1440449740, "question_id": 32188679, "link": "https://stackoverflow.com/questions/32188679/how-does-a-typescript-api-hide-internal-members", "title": "How does a Typescript API hide internal members?", "body": "<p>Building a library in TS to be called by TS and JS code and wondering how people hide internal methods and fields. Java has package visibility to handle this. Lacking that in TS, I see two options:</p>\n\n<ol>\n<li><p>Define interfaces to only expose certain members. But this involves duplicating the definitions and extra code to cast arguments from interface to implementation types.</p></li>\n<li><p>Put an @private doc comment on the internal members. Possibly exclude such from generated docs.</p></li>\n</ol>\n\n<p>Note: the private qualifier is NOT a solution, as it only allows code from the same class access. I am talking about the need to access fields from other classes in the same library, but preventing access from clients of the library. That is what Java's package access does.</p>\n"}, {"tags": ["typescript", "visual-studio-code", "typescript1.6"], "comments": [{"owner": {"reputation": 80876, "user_id": 188246, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/bTzLq.jpg?s=128&g=1", "display_name": "David Sherret", "link": "https://stackoverflow.com/users/188246/david-sherret"}, "edited": false, "score": 0, "creation_date": 1440438838, "post_id": 32187813, "comment_id": 52262409, "body": "TypeScript 1.6 isn&#39;t out yet."}, {"owner": {"reputation": 13755, "user_id": 207051, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ktARb.jpg?s=128&g=1", "display_name": "Martin", "link": "https://stackoverflow.com/users/207051/martin"}, "edited": false, "score": 0, "creation_date": 1440440275, "post_id": 32187813, "comment_id": 52263199, "body": "They have nighty npms now"}], "answers": [{"comments": [{"owner": {"reputation": 80876, "user_id": 188246, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/bTzLq.jpg?s=128&g=1", "display_name": "David Sherret", "link": "https://stackoverflow.com/users/188246/david-sherret"}, "edited": false, "score": 1, "creation_date": 1440438747, "post_id": 32188336, "comment_id": 52262361, "body": "Not entirely true. Abstract classes are <a href=\"https://github.com/Microsoft/TypeScript/pull/3579\" rel=\"nofollow noreferrer\">coming TypeScript 1.6</a>. Additionally, take a look at the <a href=\"https://github.com/Microsoft/TypeScript/wiki/Roadmap\" rel=\"nofollow noreferrer\">roadmap</a>."}, {"owner": {"reputation": 1619, "user_id": 2283050, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/9f3e3ceb382ab478fa202bb13b39fd46?s=128&d=identicon&r=PG", "display_name": "Zachary Dow", "link": "https://stackoverflow.com/users/2283050/zachary-dow"}, "reply_to_user": {"reputation": 80876, "user_id": 188246, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/bTzLq.jpg?s=128&g=1", "display_name": "David Sherret", "link": "https://stackoverflow.com/users/188246/david-sherret"}, "edited": false, "score": 0, "creation_date": 1440438980, "post_id": 32188336, "comment_id": 52262479, "body": "@DavidSherret Good catch, you are totally right. Thank you."}], "tags": [], "owner": {"reputation": 1619, "user_id": 2283050, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/9f3e3ceb382ab478fa202bb13b39fd46?s=128&d=identicon&r=PG", "display_name": "Zachary Dow", "link": "https://stackoverflow.com/users/2283050/zachary-dow"}, "is_accepted": false, "score": 1, "last_activity_date": 1440438948, "last_edit_date": 1440438948, "creation_date": 1440437885, "answer_id": 32188336, "question_id": 32187813, "link": "https://stackoverflow.com/questions/32187813/visual-studio-code-with-abstract-syntax/32188336#32188336", "title": "visual studio code with abstract syntax", "body": "<p><strike>There is no abstract functionality in Typescript 1.6. The link you reference is a closed suggestion for Typescript 1.6.</strike></p>\n\n<p>Typescript 1.5 is the current latest release of the language. </p>\n\n<p>That said, <a href=\"http://patrickdesjardins.com/blog/typescript-abstract-classes\" rel=\"nofollow\">you can fake a level of abstract functionality.</a> I would not recommend this though, as it does not seem worth the overhead and there is very little to be gained with using this.</p>\n\n<pre><code>export class BaseClass {\n    public render() {\n        console.log('Base Start');\n        this.renderAbstract();\n        console.log('Base Start');\n    }\n\n    renderAbstract() { throw new Error('This method is abstract and must be overrided.'); }\n}\n\nexport class ChildClass extends BaseClass {\n    public renderAbstract(): void {\n        console.log('- Child -');\n    }\n}\n</code></pre>\n\n<p><strong>EDIT:</strong> I was mistaken, that suggestion is being merged into the Typescript 1.6 build. However, it still hasn't released yet, so you still can't use this functionality <em>yet</em>.</p>\n"}, {"comments": [{"owner": {"reputation": 53, "user_id": 4285885, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-8fk8gpKV1Is/AAAAAAAAAAI/AAAAAAAAEcg/nQh-PRdXObM/photo.jpg?sz=128", "display_name": "Fernando Franco", "link": "https://stackoverflow.com/users/4285885/fernando-franco"}, "edited": false, "score": 0, "creation_date": 1440440173, "post_id": 32188858, "comment_id": 52263136, "body": "I will try, soon inform if all went well"}], "tags": [], "owner": {"reputation": 10969, "user_id": 1523814, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7263b6f605379925111266939ee054d4?s=128&d=identicon&r=PG", "display_name": "Dick van den Brink", "link": "https://stackoverflow.com/users/1523814/dick-van-den-brink"}, "is_accepted": true, "score": 1, "last_activity_date": 1440439689, "creation_date": 1440439689, "answer_id": 32188858, "question_id": 32187813, "link": "https://stackoverflow.com/questions/32187813/visual-studio-code-with-abstract-syntax/32188858#32188858", "title": "visual studio code with abstract syntax", "body": "<p>If you really want to have <code>abstract</code> in VSCode today it is possible, though unsupported ;)</p>\n\n<p>What you can do is execute the command <code>npm install typescript@next</code> this will fetch a nightly build created by the TypeScript team. You can also build it yourself from the source @github offcourse.</p>\n\n<p>After you have executed the command you have the node_modules folder, we use that later. We use the files from <strong>node_modules\\typescript\\lib</strong></p>\n\n<p>Now go to your location where VSCode is, in my case</p>\n\n<blockquote>\n  <p>C:\\Users\\dvdbrink\\AppData\\Local\\Code\\app-0.3.2\\resources\\app\\plugins\\vs.language.typescript\\lib</p>\n</blockquote>\n\n<p>Change the username to yours to get to the correct folder, AppData may be a hidden folder.</p>\n\n<p>Copy the files from your npm install location to the location above and restart code.</p>\n\n<p>Now abstract should work correctly, eg it gives errors when you don't implement it correctly and you get all the squiggles. It just doesn't color the <code>abstract</code> keyword!</p>\n\n<p>You might have multiple app-<strong>0.3.2</strong>, I guess you should always have the latest one!</p>\n"}], "owner": {"reputation": 53, "user_id": 4285885, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-8fk8gpKV1Is/AAAAAAAAAAI/AAAAAAAAEcg/nQh-PRdXObM/photo.jpg?sz=128", "display_name": "Fernando Franco", "link": "https://stackoverflow.com/users/4285885/fernando-franco"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 188, "favorite_count": 0, "accepted_answer_id": 32188858, "answer_count": 2, "score": 2, "last_activity_date": 1442080616, "creation_date": 1440435876, "last_edit_date": 1442080616, "question_id": 32187813, "link": "https://stackoverflow.com/questions/32187813/visual-studio-code-with-abstract-syntax", "title": "visual studio code with abstract syntax", "body": "<p>How do I use the <strong>abstract</strong> keyword in \"Visual Studio Code\"?</p>\n\n<p>This was added in the version 1.6 of Typescript, but it doesn't work in Visual Studio Code:\n<a href=\"https://github.com/Microsoft/TypeScript/issues/3578\" rel=\"nofollow\">https://github.com/Microsoft/TypeScript/issues/3578</a></p>\n"}, {"tags": ["typescript", "ecmascript-6"], "comments": [{"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1440437414, "post_id": 32187617, "comment_id": 52261663, "body": "It definitely shoul be <code>import {SomeSuperClass} from &#39;some.js&#39;</code> and <code>export default class Test extends SomeSuperClass {\u2026}</code> and <code>import Test from &#39;test.ts&#39;</code>, but I don&#39;t know what annotations TS wants for that."}, {"owner": {"reputation": 541, "user_id": 3880291, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/a5b4684a676024be3211080fccd764d7?s=128&d=identicon&r=PG", "display_name": "oei ", "link": "https://stackoverflow.com/users/3880291/oei"}, "reply_to_user": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1440438936, "post_id": 32187617, "comment_id": 52262452, "body": "@Bergi: <code>import {SomeSuperClass} from &#39;some.js&#39;</code> === <code>error TS1192: Module &#39;&#39;some.js&#39;&#39; has no default export.</code>"}, {"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1440439126, "post_id": 32187617, "comment_id": 52262569, "body": "That makes no sense - <code>{SomeSuperClass}</code> is not a default import. TS does use ES6 module syntax, right?"}, {"owner": {"reputation": 541, "user_id": 3880291, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/a5b4684a676024be3211080fccd764d7?s=128&d=identicon&r=PG", "display_name": "oei ", "link": "https://stackoverflow.com/users/3880291/oei"}, "reply_to_user": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1440439703, "post_id": 32187617, "comment_id": 52262876, "body": "@Bergi: Trying to compile to es5 and es6, but the result is the same. Compile with gulp-typescript. Doing this in order to understand and alter existing code for the library, which I for the same reason, can&#39;t use."}], "answers": [{"tags": [], "owner": {"reputation": 5844, "user_id": 1075401, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/b38e877fe17599d7eec56bfcc52eb63d?s=128&d=identicon&r=PG", "display_name": "gilamran", "link": "https://stackoverflow.com/users/1075401/gilamran"}, "is_accepted": true, "score": 1, "last_activity_date": 1440447908, "creation_date": 1440447908, "answer_id": 32191137, "question_id": 32187617, "link": "https://stackoverflow.com/questions/32187617/typescript-es6-system-js-d-td-extends/32191137#32191137", "title": "TypeScript + ES6 + .system.js + d.td + extends", "body": "<p>You have some issues with your files:</p>\n\n<ul>\n<li>You have to export SOME module to be able to import it, you imported it in test.ts</li>\n<li>The import of SOME in test.ts was using a \"default\" import format. you should have used the implicit format. {SOME}</li>\n<li>You forgot to import Test in your main.ts (Here you used the \"default\" import/export)</li>\n</ul>\n\n<p>Here are the files as they should have been written:</p>\n\n<p>some.d.ts</p>\n\n<pre><code>export module SOME {\n    export class SomeSuperClass{\n        constructor();\n        execute();\n    }\n    export class SomeSubClass{\n        constructor();\n        execute();\n    }\n}\n</code></pre>\n\n<p>main.ts</p>\n\n<pre><code>import Test from 'test';\n\nexport class Main {\n    constructor() {\n        console.log('typescript main ');\n        new Test();\n    }\n}\n</code></pre>\n\n<p>test.ts</p>\n\n<pre><code>import {SOME} from 'some';\n\nexport default class Test extends SOME.SomeSuperClass{\n    constructor() {\n        super();\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 541, "user_id": 3880291, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/a5b4684a676024be3211080fccd764d7?s=128&d=identicon&r=PG", "display_name": "oei ", "link": "https://stackoverflow.com/users/3880291/oei"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 200, "favorite_count": 0, "accepted_answer_id": 32191137, "answer_count": 1, "score": 0, "last_activity_date": 1440447908, "creation_date": 1440435099, "last_edit_date": 1440443730, "question_id": 32187617, "link": "https://stackoverflow.com/questions/32187617/typescript-es6-system-js-d-td-extends", "title": "TypeScript + ES6 + .system.js + d.td + extends", "body": "<p>As in TypeScript in combination with ES6 + system.js to create a declarative class .d.ts, to classes described therein could be used for expansion of custom class?</p>\n\n<p>Or to paraphrase the question, how to make this code work?  </p>\n\n<p><em>some.d.ts</em></p>\n\n<pre><code>declare module SOME {\n    export class SomeSuperClass{\n        constructor();\n        execute();\n    }\n    export class SomeSubClass{\n        constructor();\n        execute();\n    }\n}\n\ndeclare module 'some.js' {\n    export = SOME;\n}\n</code></pre>\n\n<p><em>main.ts</em></p>\n\n<pre><code>export class Main {\n    constructor() {\n        console.log('typescript main ');\n        new Test();\n    }\n}\n</code></pre>\n\n<p><em>test.ts</em></p>\n\n<pre><code>import SOME from 'some.js';\n\nexport default class Test extends SOME.SomeSuperClass{\n    constructor() {\n        super();\n    }\n}\n</code></pre>\n"}, {"tags": ["typescript", "definitelytyped"], "comments": [{"owner": {"reputation": 1547, "user_id": 1396477, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d7d17cb4aeab4d02d979825ec8192fd0?s=128&d=identicon&r=PG", "display_name": "Joe Skeen", "link": "https://stackoverflow.com/users/1396477/joe-skeen"}, "edited": false, "score": 0, "creation_date": 1440434247, "post_id": 32187102, "comment_id": 52260007, "body": "I have seen this: <a href=\"https://github.com/Microsoft/TypeScript/pull/3823\" rel=\"nofollow noreferrer\">github.com/Microsoft/TypeScript/pull/3823</a>, but I&#39;m not sure if this solves this issue or not, and it is v1.6.  I would love to find a way to accomplish this in 1.5 if possible."}, {"owner": {"reputation": 1619, "user_id": 2283050, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/9f3e3ceb382ab478fa202bb13b39fd46?s=128&d=identicon&r=PG", "display_name": "Zachary Dow", "link": "https://stackoverflow.com/users/2283050/zachary-dow"}, "edited": false, "score": 0, "creation_date": 1440441750, "post_id": 32187102, "comment_id": 52264009, "body": "You would likely need to just run a lot of checks, nothing elegant I imagine. All of these cases might help you: <a href=\"http://tobyho.com/2011/01/28/checking-types-in-javascript/\" rel=\"nofollow noreferrer\">tobyho.com/2011/01/28/checking-types-in-javascript</a>"}, {"owner": {"reputation": 1547, "user_id": 1396477, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d7d17cb4aeab4d02d979825ec8192fd0?s=128&d=identicon&r=PG", "display_name": "Joe Skeen", "link": "https://stackoverflow.com/users/1396477/joe-skeen"}, "reply_to_user": {"reputation": 1619, "user_id": 2283050, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/9f3e3ceb382ab478fa202bb13b39fd46?s=128&d=identicon&r=PG", "display_name": "Zachary Dow", "link": "https://stackoverflow.com/users/2283050/zachary-dow"}, "edited": false, "score": 0, "creation_date": 1440442590, "post_id": 32187102, "comment_id": 52264488, "body": "@ZacharyDow, here I am not actually writing a JavaScript library, but instead writing TypeScript type definitions that describe the API of an existing JavaScript library (see <a href=\"https://github.com/borisyankov/DefinitelyTyped\" rel=\"nofollow noreferrer\">github.com/borisyankov/DefinitelyTyped</a>).  I have no control over the code that will ultimately be called.  My objective is to help TypeScript users to get compile errors if they pass the wrong types as options, so they don&#39;t falsely assume it will work just because it compiles.  Without these compile-time errors, the users cannot have confidence that the definitions are correct or useful."}], "answers": [{"comments": [{"owner": {"reputation": 1547, "user_id": 1396477, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d7d17cb4aeab4d02d979825ec8192fd0?s=128&d=identicon&r=PG", "display_name": "Joe Skeen", "link": "https://stackoverflow.com/users/1396477/joe-skeen"}, "edited": false, "score": 0, "creation_date": 1440444311, "post_id": 32189952, "comment_id": 52265455, "body": "I think you are right, although I personally would prefer <code>var opts: IOptions = {};</code> to <code>var opts = &lt;IOptions&gt;{};</code> I see these &#39;empty interfaces&#39; all over DefinitelyTyped, and as I go through test files I see things that pass compilation but would most definitely not work.  I was hoping there was a better way, it seems like having to add the indexer to each &#39;options&#39; interface is less than optimally elegant. Thanks for confirming this."}, {"owner": {"reputation": 1547, "user_id": 1396477, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d7d17cb4aeab4d02d979825ec8192fd0?s=128&d=identicon&r=PG", "display_name": "Joe Skeen", "link": "https://stackoverflow.com/users/1396477/joe-skeen"}, "edited": false, "score": 0, "creation_date": 1440444730, "post_id": 32189952, "comment_id": 52265707, "body": "If only there was a built-in interface that contained the default indexer, you could extend that in your interface and get the correct behavior by default."}, {"owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "reply_to_user": {"reputation": 1547, "user_id": 1396477, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d7d17cb4aeab4d02d979825ec8192fd0?s=128&d=identicon&r=PG", "display_name": "Joe Skeen", "link": "https://stackoverflow.com/users/1396477/joe-skeen"}, "edited": false, "score": 0, "creation_date": 1440446492, "post_id": 32189952, "comment_id": 52266658, "body": "I have added the base class in simple and generic form if you want to include it in your definitions :)"}], "tags": [], "owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "is_accepted": false, "score": 1, "last_activity_date": 1440446471, "last_edit_date": 1440446471, "creation_date": 1440443558, "answer_id": 32189952, "question_id": 32187102, "link": "https://stackoverflow.com/questions/32187102/typescript-type-annotation-excluding-primitives/32189952#32189952", "title": "TypeScript Type Annotation Excluding Primitives", "body": "<p>For an interface to have sensible enforcement, it must have at least one mandatory member. Essentially, the interface below enforces nothing:</p>\n\n<pre><code>interface IOptions {\n    callback?: Function;\n    readonly?: boolean;\n}\n</code></pre>\n\n<p>It is actually equivalent to the \"evil interface\":</p>\n\n<pre><code>interface IOptions {\n}\n</code></pre>\n\n<p>So you are getting auto-completion, but no real type checking.</p>\n\n<p>Your proposed solution is the way to go...</p>\n\n<pre><code>interface IOptions {\n    [name: string]: any;\n    callback?: Function;\n    readonly?: boolean;\n}\n</code></pre>\n\n<p>In most cases, people tend to construct these options within the function call, but if they really want to do it elsewhere they can use a type assertion:</p>\n\n<pre><code>// If you must\nvar opts = &lt;IOptions&gt;{};\nmyModule(opts);\n\n// More typical\nmyModule({});\n\n// Although... if its empty\nmyModule();\n</code></pre>\n\n<p>Disclaimer. A small part of this is just my opinion... but an empty interface is the worst thing you can do with an interface in TypeScript and one that enforces nothing is the second-worst thing.</p>\n\n<p>You could avoid the duplication using your own base interface...</p>\n\n<pre><code>interface Indexed {\n    [name: string]: any;\n}\n</code></pre>\n\n<p>Or even...</p>\n\n<pre><code>interface Indexed&lt;T&gt; {\n    [name: string]: T;\n}\n</code></pre>\n\n<p>And then use it on all your options interfaces...</p>\n\n<pre><code>interface IOptions extends Indexed {\n    callback?: Function;\n    readonly?: boolean;\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 1547, "user_id": 1396477, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d7d17cb4aeab4d02d979825ec8192fd0?s=128&d=identicon&r=PG", "display_name": "Joe Skeen", "link": "https://stackoverflow.com/users/1396477/joe-skeen"}, "is_accepted": true, "score": 2, "last_activity_date": 1487891483, "creation_date": 1487891483, "answer_id": 42427938, "question_id": 32187102, "link": "https://stackoverflow.com/questions/32187102/typescript-type-annotation-excluding-primitives/42427938#42427938", "title": "TypeScript Type Annotation Excluding Primitives", "body": "<p>As of TypeScript 2.2, there is now an <code>object</code> type that does almost exactly what I have described above.</p>\n\n<blockquote>\n  <p>... you can assign anything to the <code>object</code> type except for <code>string</code>, <code>boolean</code>, <code>number</code>, <code>symbol</code>, and, when using <code>strictNullChecks</code>, <code>null</code> and <code>undefined</code>.</p>\n</blockquote>\n\n<p>Check out the official announcement here: <a href=\"https://blogs.msdn.microsoft.com/typescript/2017/02/22/announcing-typescript-2-2/\" rel=\"nofollow noreferrer\">Announcing TypeScript 2.2</a></p>\n"}], "owner": {"reputation": 1547, "user_id": 1396477, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d7d17cb4aeab4d02d979825ec8192fd0?s=128&d=identicon&r=PG", "display_name": "Joe Skeen", "link": "https://stackoverflow.com/users/1396477/joe-skeen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 333, "favorite_count": 1, "accepted_answer_id": 42427938, "answer_count": 2, "score": 0, "last_activity_date": 1487891483, "creation_date": 1440433324, "last_edit_date": 1440443029, "question_id": 32187102, "link": "https://stackoverflow.com/questions/32187102/typescript-type-annotation-excluding-primitives", "title": "TypeScript Type Annotation Excluding Primitives", "body": "<p><strong>The question:</strong>\nIs there any way to write a type annotation in TypeScript that allows any object literal, but doesn't allow built-in types <code>number</code>, <code>string</code>, <code>boolean</code>, <code>Function</code> or <code>Array</code>?</p>\n\n<p><strong>Why?</strong></p>\n\n<p>I have been working on improving some type definitions on DefinitelyTyped for some libraries I am using on my projects at work.  A common pattern I have noticed in many JS libraries is to pass an 'options' object used to configure the library or plugin.  In these cases, you will often you will see type definitions looking something like this:</p>\n\n<pre><code>declare module 'myModule' {\n    interface IMyModule {\n        (opts?: IOptions): NodeJS.ReadWriteStream;\n    }\n    interface IOptions {\n        callback?: Function;\n        readonly?: boolean;\n    }\n}\n</code></pre>\n\n<p>This allows you to use it like this:</p>\n\n<pre><code>var myModule = require('myModule');\nmyModule();\nmyModule({});\nmyModule({ callback: () =&gt; {} });\nmyModule({ readonly: false });\nmyModule({ callback: () =&gt; {}, readonly: false });\n</code></pre>\n\n<p>Which all are valid use cases.  The trouble is that these type definitions also allow for these non-valid use cases:</p>\n\n<pre><code>myModule('hello');\nmyModule(false);\nmyModule(42);\nmyModule(() =&gt; {});\nmyModule([]);\n</code></pre>\n\n<p>In many cases, the above calls would result in a runtime error, as the library JS code may try to set default values on the object, or pass the options to another library.  Although I have tried many things, I haven't been able to constrain the parameter to accept only objects and not any of those other invalid cases.</p>\n\n<p>It seems that if you have an interface with only optional members (as no one option is required), the compiler will widen acceptable types to accept <code>any</code>.</p>\n\n<p>You can see a TypeScript Playground demonstration of this problem here: <a href=\"http://bit.ly/1Js7tLr\" rel=\"nofollow\">http://bit.ly/1Js7tLr</a></p>\n\n<p><strong>Update: An example of a solution that doesn't work</strong></p>\n\n<pre><code>interface IOptions {\n    [name: string]: any;\n    callback?: Function;\n    readonly?: boolean;\n}\n</code></pre>\n\n<p>This attempt requires an indexing operator to be present on the object, which means that it now complains about <code>number</code>s, <code>string</code>s, <code>boolean</code>s, <code>Function</code>s, and <code>Array</code>s.  But this creates a new problem:</p>\n\n<pre><code>var opts = {};\nmyModule(opts);\n</code></pre>\n\n<p>This now fails when it should be a valid scenario. (See this in Playground: <a href=\"http://bit.ly/1MPbxfX\" rel=\"nofollow\">http://bit.ly/1MPbxfX</a>)</p>\n"}, {"tags": ["javascript", "typescript", "reactjs"], "comments": [{"owner": {"reputation": 11185, "user_id": 1055637, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/8a8b9e4daac99ea95aa3e8e246716e73?s=128&d=identicon&r=PG", "display_name": "Mazzy", "link": "https://stackoverflow.com/users/1055637/mazzy"}, "edited": false, "score": 0, "creation_date": 1440422282, "post_id": 32182459, "comment_id": 52252031, "body": "The problem is that wherever I put the onClick function it doesn&#39;t work."}, {"owner": {"reputation": 11185, "user_id": 1055637, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/8a8b9e4daac99ea95aa3e8e246716e73?s=128&d=identicon&r=PG", "display_name": "Mazzy", "link": "https://stackoverflow.com/users/1055637/mazzy"}, "edited": false, "score": 0, "creation_date": 1440425581, "post_id": 32182459, "comment_id": 52254387, "body": "Maybe I know the reason because this code doesn&#39;t work. I render the code in a jade template passing the above React component to the function renderToString in the backend but in the front there is anything. Should I have some react in the script? I suppose yes"}], "owner": {"reputation": 11185, "user_id": 1055637, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/8a8b9e4daac99ea95aa3e8e246716e73?s=128&d=identicon&r=PG", "display_name": "Mazzy", "link": "https://stackoverflow.com/users/1055637/mazzy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 75, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1440425687, "creation_date": 1440419644, "last_edit_date": 1440424698, "question_id": 32182459, "link": "https://stackoverflow.com/questions/32182459/no-update-to-the-view-is-executed-by-calling-the-sort-function", "title": "No update to the view is executed by calling the sort function", "body": "<p>I have created this React component in Typescript</p>\n\n<pre><code>import * as React from \"react\";\n\nimport { IExcelProps } from \"../interfaces/ExcelProps\";\nimport { IExcelState } from \"../interfaces/ExcelState\";\n\nclass Excel extends React.Component&lt;IExcelProps, IExcelState&gt; {\n\n  name = \"Excel\";\n\n  static propTypes: React.ValidationMap&lt;any&gt; = {\n    header: React.PropTypes.arrayOf(\n      React.PropTypes.string\n    ).isRequired,\n    initialData: React.PropTypes.arrayOf(\n      React.PropTypes.arrayOf(React.PropTypes.string)\n    ).isRequired\n  }\n\n  // this correspond to getInitialState\n  initialState : IExcelState = {\n    data: this.props.initialData\n  };\n\n  constructor(excelProps: IExcelProps) {\n    super(excelProps);\n  }\n\n  componentWillMount() {\n    this.setState(new ExcelState(this.initialState.data));\n  }\n\n  // This cause the following warning:\n  // =================================\n  // Warning: getInitialState was defined on Excel, a plain JavaScript class\n  // This is only supported for classes created using React.createClass.\n  // Did you mean to define a state property instead?\n  // =================================\n  // getInitialState() {\n  //   return {\n  //     data: this.props.initialData\n  //   };\n  // }\n\n  render() {\n    return (\n      &lt;div className=\"panel panel-default\"&gt;\n        &lt;div className=\"panel-heading\"&gt;Airports Codes&lt;/div&gt;\n        &lt;table className=\"table\"&gt;\n          &lt;thead onClick={this._sort}&gt;\n            &lt;tr&gt;\n              {this._renderHeader(this.props.header)}\n            &lt;/tr&gt;\n          &lt;/thead&gt;\n          &lt;tbody&gt;\n            {this._renderTableBody(this.state.data)}\n          &lt;/tbody&gt;\n        &lt;/table&gt;\n      &lt;/div&gt;\n    );\n  }\n\n  private _renderHeader(header: string[]) : React.ReactElement&lt;any&gt;[] {\n    return (\n      header.map((value, idx) =&gt; {\n        return &lt;th key={idx}&gt;{value}&lt;/th&gt;\n      })\n    );\n  }\n\n  private _renderTableBody(body: string[][]) : React.ReactElement&lt;any&gt;[] {\n    return (\n      body.map((row, idx) =&gt; {\n        return (\n          &lt;tr key={idx}&gt;\n          {\n            row.map((value, idx) =&gt; {\n              return &lt;td key={idx}&gt;{idx === 1 ? this._beautifyTypeColumn(value) : value}&lt;/td&gt;\n            })\n          }\n          &lt;/tr&gt;\n        );\n      })\n    );\n  }\n\n  private _sort(event) {\n    // this get the cellIndex corresponding with the header column\n    var column = event.target.cellIndex;\n    // returns a shallow copy of a portion of an array into a new array object.\n    var dataTemp = this.state.data.slice();\n    this.setState(new ExcelState(dataTemp.sort((a: any, b: any) =&gt; {\n      return b[column] - a[column];\n    })));\n  }\n\n  private _beautifyTypeColumn(value: string) : string {\n    return this._capitalizeEachWord(value.replace('_', ' '));\n  }\n\n  private _capitalizeEachWord(value: string) : string {\n    return value.replace(/\\w\\S*/g, (txt) =&gt; {\n        return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n    });\n  }\n}\n\n// XXX: move somewhere else\nclass ExcelState implements IExcelState {\n  data : string[][];\n\n  constructor(data: string[][]) {\n    this.data = data;\n  }\n}\n\nexport default Excel;\n</code></pre>\n\n<p>what should do this component basically is to show the data that receive and when the user click on the header it should sort the element. unfortunately it doesn't work and I'm not able to figure out why. I call correctly <code>_sort</code> function but it doesn't work.</p>\n"}, {"tags": ["angularjs", "typescript"], "comments": [{"owner": {"reputation": 18564, "user_id": 360822, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/Xx2e3.jpg?s=128&g=1", "display_name": "Jimmyt1988", "link": "https://stackoverflow.com/users/360822/jimmyt1988"}, "edited": false, "score": 0, "creation_date": 1440418296, "post_id": 32180824, "comment_id": 52249364, "body": "I&#39;ve ammended the jsfiddle to help you guys out."}], "answers": [{"comments": [{"owner": {"reputation": 162935, "user_id": 1175966, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8d3d9dfbd040f9cbc1a6b82f0da2b345?s=128&d=identicon&r=PG", "display_name": "charlietfl", "link": "https://stackoverflow.com/users/1175966/charlietfl"}, "edited": false, "score": 0, "creation_date": 1440583867, "post_id": 32182743, "comment_id": 52330214, "body": "Use <code>$timeout</code>...it calls $apply internally...just remeber to inject it in controller or directive being used"}, {"owner": {"reputation": 18564, "user_id": 360822, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/Xx2e3.jpg?s=128&g=1", "display_name": "Jimmyt1988", "link": "https://stackoverflow.com/users/360822/jimmyt1988"}, "reply_to_user": {"reputation": 162935, "user_id": 1175966, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8d3d9dfbd040f9cbc1a6b82f0da2b345?s=128&d=identicon&r=PG", "display_name": "charlietfl", "link": "https://stackoverflow.com/users/1175966/charlietfl"}, "edited": false, "score": 0, "creation_date": 1442853311, "post_id": 32182743, "comment_id": 53243578, "body": "Thanks @charlietfl. Good idea."}], "tags": [], "owner": {"reputation": 18564, "user_id": 360822, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/Xx2e3.jpg?s=128&g=1", "display_name": "Jimmyt1988", "link": "https://stackoverflow.com/users/360822/jimmyt1988"}, "is_accepted": true, "score": 0, "last_activity_date": 1440420494, "creation_date": 1440420494, "answer_id": 32182743, "question_id": 32180824, "link": "https://stackoverflow.com/questions/32180824/update-scope-half-way-through-a-scope-method/32182743#32182743", "title": "Update scope half way through a scope method", "body": "<p>You can apparently use setTimeout to deal with the $scope.$apply issue:</p>\n\n<p><a href=\"http://jsfiddle.net/U3pVM/18138/\" rel=\"nofollow\">http://jsfiddle.net/U3pVM/18138/</a></p>\n\n<pre><code>$scope.Resizing = true;\n$scope.MoveToPage( col, row );\nsetTimeout( function() {\n    $scope.FirstPageTop = -$scope.PageMap.WindowInfo.Height;\n    $scope.Resizing = false;\n    $scope.$apply() // This is important\n}, 1);\n</code></pre>\n"}], "owner": {"reputation": 18564, "user_id": 360822, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/Xx2e3.jpg?s=128&g=1", "display_name": "Jimmyt1988", "link": "https://stackoverflow.com/users/360822/jimmyt1988"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 43, "favorite_count": 0, "accepted_answer_id": 32182743, "answer_count": 1, "score": 0, "last_activity_date": 1440420494, "creation_date": 1440414494, "last_edit_date": 1440418017, "question_id": 32180824, "link": "https://stackoverflow.com/questions/32180824/update-scope-half-way-through-a-scope-method", "title": "Update scope half way through a scope method", "body": "<p><strong>EDIT:</strong> I've put together a JSFiddle: <a href=\"http://jsfiddle.net/U3pVM/18137/\" rel=\"nofollow noreferrer\">http://jsfiddle.net/U3pVM/18137/</a></p>\n\n<p>I want the black to go up AND THEN the green to slide across... I do not know how to achieve this... Read on for more information:</p>\n\n<hr>\n\n<p><em>Side note: The code is in Typescript (re: () => {} )</em></p>\n\n<p>The following context shows a web page that has an overlaying div, and a couple of divs behind it. It also denotes the kind of animation that is occuring via a css class.</p>\n\n<p><a href=\"https://i.stack.imgur.com/BOFBd.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/BOFBd.png\" alt=\"enter image description here\"></a></p>\n\n<p>I have the following code (see references to diagram):</p>\n\n<pre><code>$scope.Resizing = true; // This prevents animations from happening (as a css class is linked up to it (see below))\n$scope.MoveToPage( col, row ); // 2\n$scope.$applyAsync(() =&gt; { // Update the view to remove the class and then start sliding up the overlay div\n    $scope.FirstPageTop = -$scope.PageMap.WindowInfo.Height; // 3\n    $scope.Resizing = false; // Re-enable animations // Finish\n});\n</code></pre>\n\n<p>What it is supposed to do is:</p>\n\n<ul>\n<li>When Resizing is true, it removes a css class that animates stuff.</li>\n<li>It then runs the MoveToPage method that makes a position left equal a new number.. usually it would animate to the new position but in this instance i don't want it to (thus the Resizing attribute).</li>\n</ul>\n\n<p>We can see the above expressed in my html:</p>\n\n<pre><code>&lt;div class=\"column-wrap\" \n            ng-class=\"{ 'column-wrap-animation' : !Resizing }\" \n            ng-style=\"{ 'width': PageMap.ContainerWidth + 'px',\n                        'left': PageMap.ColumnWrap.Left + 'px'}\"&gt;\n</code></pre>\n\n<p>The procedure then applies the scope asynchronously (because if i use a simple apply, it throws an error) and as a callback to this method, I am then doing pulling an overlay off of the top of the page... and then setting Resizing back to false to re-apply animations.</p>\n\n<p><strong>The problem:</strong></p>\n\n<p>I need to slide off an overlay AFTER positioning the content underneath it. What is actually happening is, it slides the overlay off of the top, while the under page animates to where i've told it to go. How do i get around this css animation digestion problem...</p>\n\n<p>Perhaps an even simpler question is, why might the class not be being removed when Resizing is set to false and actively i am telling it to update the scope?</p>\n\n<p><strong>Explaining my context:</strong></p>\n"}, {"tags": ["generics", "typescript"], "comments": [{"owner": {"reputation": 80876, "user_id": 188246, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/bTzLq.jpg?s=128&g=1", "display_name": "David Sherret", "link": "https://stackoverflow.com/users/188246/david-sherret"}, "edited": false, "score": 0, "creation_date": 1440426888, "post_id": 32177755, "comment_id": 52255310, "body": "I&#39;m guessing it doesn&#39;t work this way in TypeScript because the generated JavaScript doesn&#39;t have the generic information. You can pass in the class name on its own: <code>registerView(View);</code>"}, {"owner": {"reputation": 8164, "user_id": 146248, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/98a561a31d69c159573e90c5106a837b?s=128&d=identicon&r=PG", "display_name": "migajek", "link": "https://stackoverflow.com/users/146248/migajek"}, "reply_to_user": {"reputation": 80876, "user_id": 188246, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/bTzLq.jpg?s=128&g=1", "display_name": "David Sherret", "link": "https://stackoverflow.com/users/188246/david-sherret"}, "edited": false, "score": 0, "creation_date": 1442826237, "post_id": 32177755, "comment_id": 53225866, "body": "@DavidSherret please mak it an answer so I can accept it! thx"}], "answers": [{"tags": [], "owner": {"reputation": 80876, "user_id": 188246, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/bTzLq.jpg?s=128&g=1", "display_name": "David Sherret", "link": "https://stackoverflow.com/users/188246/david-sherret"}, "is_accepted": true, "score": 1, "last_activity_date": 1442847065, "creation_date": 1442847065, "answer_id": 32698303, "question_id": 32177755, "link": "https://stackoverflow.com/questions/32177755/refer-to-closed-generic-type-without-explicitly-declaring-subclass-extending-ba/32698303#32698303", "title": "Refer to closed-generic type without explicitly declaring subclass (extending base type)", "body": "<p>As discussed in the comments, this probably doesn't work because generics won't be in the compiled JavaScript so there would be no difference at runtime between statements like <code>registerView(View&lt;Car&gt;)</code> or <code>registerView(View&lt;string&gt;)</code> and so the compiler is probably just warning you about that.</p>\n\n<p>Due to this, you might as well just pass in <code>registerView(View)</code>.</p>\n\n<p>On a sidenote, in this scenario you probably want to change your function to handle the generic parameter. Here's an example of a function that creates a new view from the <code>typeof View</code>\u2014the class.</p>\n\n<pre><code>class View&lt;T&gt; { }\nclass Car { }\n\nfunction createView&lt;T&gt;(view: typeof View){ return new view&lt;T&gt;(); }\n\nvar v = createView&lt;Car&gt;(View); // v is typed as View&lt;Car&gt;\n</code></pre>\n"}], "owner": {"reputation": 8164, "user_id": 146248, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/98a561a31d69c159573e90c5106a837b?s=128&d=identicon&r=PG", "display_name": "migajek", "link": "https://stackoverflow.com/users/146248/migajek"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 118, "favorite_count": 0, "accepted_answer_id": 32698303, "answer_count": 1, "score": 1, "last_activity_date": 1442847065, "creation_date": 1440405170, "question_id": 32177755, "link": "https://stackoverflow.com/questions/32177755/refer-to-closed-generic-type-without-explicitly-declaring-subclass-extending-ba", "title": "Refer to closed-generic type without explicitly declaring subclass (extending base type)", "body": "<p>Is it possible to refer to generic type with specified generic parameter without previously declaring the subclass?\nI don't know how to describe it so here's the code:</p>\n\n<pre><code>registerView(CarView); // I can do this\nregisterView(View&lt;Car&gt;); // ... but I can't this. any way to avoid declaring CarView-like subclass?\n\nclass View&lt;T&gt; { }\nclass CarView extends View&lt;Car&gt; { }\nclass Car { }\n\nfunction registerView(v: Object){ }\n</code></pre>\n\n<p><em>Note</em> I come from C# background, among others. Here's what I'd do with C#</p>\n\n<pre><code>class View&lt;T&gt; {}\nclass Car {}\nclass CarView: View&lt;Car&gt;{}\n\nvoid Main()\n{\n    registerView(typeof(CarView));\n    registerView(typeof(View&lt;Car&gt;));\n}\nvoid registerView(Type t){}\n</code></pre>\n"}, {"tags": ["node.js", "module", "typescript", "package", "tsd"], "comments": [{"owner": {"reputation": 337, "user_id": 219947, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/4ffa0818a97d3dac407136330bb6cfca?s=128&d=identicon&r=PG", "display_name": "Lauri Lehmijoki", "link": "https://stackoverflow.com/users/219947/lauri-lehmijoki"}, "edited": false, "score": 1, "creation_date": 1488185548, "post_id": 32173118, "comment_id": 72102495, "body": "See <a href=\"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-1.html\" rel=\"nofollow noreferrer\">typescriptlang.org/docs/handbook/release-notes/&hellip;</a>, especially Untyped imports"}], "answers": [{"tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": true, "score": 13, "last_activity_date": 1443664623, "last_edit_date": 1443664623, "creation_date": 1440381066, "answer_id": 32173453, "question_id": 32173118, "link": "https://stackoverflow.com/questions/32173118/how-do-i-import-a-library-into-node-without-a-typescript-tsd-definition/32173453#32173453", "title": "How do I import a library into node without a Typescript/TSD definition?", "body": "<blockquote>\n  <p>error TS2307 Cannot find module 'connect-session-knex'\n  Is there a way to ignore TS for this module only? How do I import it without the TSD?</p>\n</blockquote>\n\n<p>Use <code>var/require</code> instead of <code>import/require</code>. i.e. </p>\n\n<pre><code>var csk = require('connect-session-knex');\n</code></pre>\n\n<p>Note you should have <code>node.d.ts</code> included for <code>require</code> to be declared.</p>\n\n<p>Also : <a href=\"https://basarat.gitbooks.io/typescript/content/docs/node/nodejs.html\" rel=\"noreferrer\">https://basarat.gitbooks.io/typescript/content/docs/node/nodejs.html</a></p>\n"}, {"comments": [{"owner": {"reputation": 854, "user_id": 871946, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/JYXOo.png?s=128&g=1", "display_name": "Sebastian Busek", "link": "https://stackoverflow.com/users/871946/sebastian-busek"}, "edited": false, "score": 0, "creation_date": 1476710391, "post_id": 32177019, "comment_id": 67447372, "body": "How can I connect node_module with my definition file?"}, {"owner": {"reputation": 8878, "user_id": 41403, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/476b1c3cf22e774b835403adc9af6a59?s=128&d=identicon&r=PG", "display_name": "Quango", "link": "https://stackoverflow.com/users/41403/quango"}, "reply_to_user": {"reputation": 854, "user_id": 871946, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/JYXOo.png?s=128&g=1", "display_name": "Sebastian Busek", "link": "https://stackoverflow.com/users/871946/sebastian-busek"}, "edited": false, "score": 0, "creation_date": 1476713771, "post_id": 32177019, "comment_id": 67450000, "body": "Do not quite understand the question @SebastianBusek"}, {"owner": {"reputation": 854, "user_id": 871946, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/JYXOo.png?s=128&g=1", "display_name": "Sebastian Busek", "link": "https://stackoverflow.com/users/871946/sebastian-busek"}, "edited": false, "score": 0, "creation_date": 1476714249, "post_id": 32177019, "comment_id": 67450353, "body": "For example with <code>connect-session-knex</code>; I can create file connect-session-knex.d.ts and then add use <code>import * as connectSessionKnex from &quot;connect-session-knex&quot;</code> but how TS transcripter will know that connect-session-knex.d.ts is matching with module connect-session-knex in node_modules directory?"}, {"owner": {"reputation": 8878, "user_id": 41403, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/476b1c3cf22e774b835403adc9af6a59?s=128&d=identicon&r=PG", "display_name": "Quango", "link": "https://stackoverflow.com/users/41403/quango"}, "reply_to_user": {"reputation": 854, "user_id": 871946, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/JYXOo.png?s=128&g=1", "display_name": "Sebastian Busek", "link": "https://stackoverflow.com/users/871946/sebastian-busek"}, "edited": false, "score": 0, "creation_date": 1476714912, "post_id": 32177019, "comment_id": 67450831, "body": "This is controlled by node module resolution. The .d.ts file just tells TypeScript what the module looks like (types, commands etc). It&#39;s node that actually connects to the .js file. More at <a href=\"https://www.typescriptlang.org/docs/handbook/module-resolution.html\" rel=\"nofollow noreferrer\">typescriptlang.org/docs/handbook/module-resolution.html</a>"}], "tags": [], "owner": {"reputation": 8878, "user_id": 41403, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/476b1c3cf22e774b835403adc9af6a59?s=128&d=identicon&r=PG", "display_name": "Quango", "link": "https://stackoverflow.com/users/41403/quango"}, "is_accepted": false, "score": 5, "last_activity_date": 1440402743, "creation_date": 1440402743, "answer_id": 32177019, "question_id": 32173118, "link": "https://stackoverflow.com/questions/32173118/how-do-i-import-a-library-into-node-without-a-typescript-tsd-definition/32177019#32177019", "title": "How do I import a library into node without a Typescript/TSD definition?", "body": "<p>Another suggestion is to start you own .d.ts file as an empty definition file and export the module. Then if you want to get intellisense on the module you can add definitions to it. </p>\n\n<p>e.g. <code>connect-session-knex.d.ts</code>:</p>\n\n<pre>\n\n// declare module\ndeclare module \"connect-session-knex\" {\n\n}\n</pre>\n"}], "owner": {"reputation": 9585, "user_id": 654434, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/d4046093d5c6499ff13d5b5690a6cb32?s=128&d=identicon&r=PG", "display_name": "FlavorScape", "link": "https://stackoverflow.com/users/654434/flavorscape"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4100, "favorite_count": 4, "accepted_answer_id": 32173453, "answer_count": 2, "score": 7, "last_activity_date": 1443664623, "creation_date": 1440377907, "last_edit_date": 1440378283, "question_id": 32173118, "link": "https://stackoverflow.com/questions/32173118/how-do-i-import-a-library-into-node-without-a-typescript-tsd-definition", "title": "How do I import a library into node without a Typescript/TSD definition?", "body": "<p>I'm trying to use a session helper called connect-session-knex which is obscure enough that it does not have a published typescript definition. So when I try to compile my typescript node project, I get the error, </p>\n\n<pre><code>error TS2307 Cannot find module 'connect-session-knex'\n</code></pre>\n\n<p>Is there a way to ignore TS for this module only? How do I import it without the TSD? I know knex has a tsd, but the wrapper does not. I'm asking this from a generic standpoint of what to do with libraries without type definitions. </p>\n\n<p>For anyone looking: Compiling typescript when it does not have tsd. Missing tsd. Without tsd. </p>\n"}, {"tags": ["typescript", "ecmascript-6", "pixi.js", "typescript1.6"], "comments": [{"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1440366124, "post_id": 32171397, "comment_id": 52229985, "body": "It looks like you changed the export type of <code>pixi.js</code>. Did you change its actual code as well?"}, {"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1440366165, "post_id": 32171397, "comment_id": 52229994, "body": "Probably you rather should have switched to <code>import {PIXI} from &#39;pixi.js&#39;</code> instead of messing with <code>.d.ts</code> files"}], "answers": [{"comments": [{"owner": {"reputation": 541, "user_id": 3880291, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/a5b4684a676024be3211080fccd764d7?s=128&d=identicon&r=PG", "display_name": "oei ", "link": "https://stackoverflow.com/users/3880291/oei"}, "edited": false, "score": 0, "creation_date": 1440415950, "post_id": 32172887, "comment_id": 52247791, "body": "Updated the question."}], "tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": false, "score": 3, "last_activity_date": 1440375589, "creation_date": 1440375589, "answer_id": 32172887, "question_id": 32171397, "link": "https://stackoverflow.com/questions/32171397/pixi-js-typescript-es6-why-cant-i-extend-the-class/32172887#32172887", "title": "pixi.js + typescript + es6 why can&#39;t I extend the class?", "body": "<blockquote>\n  <p>It is worth noting that pixi.js.d.ts does not fit es6.\n  I had to change one line</p>\n</blockquote>\n\n<p>Instead of changing the definition please change <code>import PIXI from 'pixi.js';</code> into <code>import * as PIXI from 'pixi.js';</code></p>\n"}], "owner": {"reputation": 541, "user_id": 3880291, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/a5b4684a676024be3211080fccd764d7?s=128&d=identicon&r=PG", "display_name": "oei ", "link": "https://stackoverflow.com/users/3880291/oei"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1741, "favorite_count": 1, "answer_count": 1, "score": 1, "last_activity_date": 1440716034, "creation_date": 1440362958, "last_edit_date": 1440716034, "question_id": 32171397, "link": "https://stackoverflow.com/questions/32171397/pixi-js-typescript-es6-why-cant-i-extend-the-class", "title": "pixi.js + typescript + es6 why can&#39;t I extend the class?", "body": "<p>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e \u0441\u0432\u044f\u0437\u043a\u0443 pixi.js + \u043c\u0430\u0448\u0438\u043d\u043e\u043f\u0438\u0441\u044c + es6 + system.js  </p>\n\n<pre><code>import Test from './test';\n\nexport class Main {\n    constructor() {\n        console.log('typescript main ');\n        new Test();\n    }\n}\n\nimport PIXI from 'pixi.js';\n\nexport default class Test extends PIXI.Sprite{\n    constructor(){\n        super();\n    }\n}\n</code></pre>\n\n<blockquote>\n  <p>typescript main test.js:4 Uncaught (in promise) TypeError: Cannot read\n  property 'prototype' of undefined\n          at new __extends (<a href=\"http://localhost:8080/javascripts/test.js:4:21\" rel=\"nofollow\">http://localhost:8080/javascripts/test.js:4:21</a>)\n          at new Main (<a href=\"http://localhost:8080/javascripts/main.js:13:21\" rel=\"nofollow\">http://localhost:8080/javascripts/main.js:13:21</a>)\n          at <a href=\"http://localhost:8080/javascripts/systemfile.js:18:16\" rel=\"nofollow\">http://localhost:8080/javascripts/systemfile.js:18:16</a></p>\n</blockquote>\n\n<p>How can I fix this error?  </p>\n\n<p>p.s.<br>\n    It is worth noting that pixi.js.d.ts does not fit es6.<br>\nI had to change one line. Was -  </p>\n\n<pre><code>declare module 'pixi.js' {\n    export = PIXI;\n}\n</code></pre>\n\n<p>Changed to -  </p>\n\n<pre><code>declare module 'pixi.js' {\n    export default PIXI;\n}  \n</code></pre>\n\n<p>Maybe something else needs to change?  </p>\n\n<p><strong>UPD: 0.0.1</strong>  </p>\n\n<p>If you return everything as it was -  </p>\n\n<pre><code>declare module 'pixi.js' {\n    export = PIXI;\n}\n</code></pre>\n\n<p>And write -  </p>\n\n<pre><code>import * as PIXI from 'pixi.js';\n</code></pre>\n\n<p>then you get the error -   </p>\n\n<blockquote>\n  <p>error TS1192: Module \"pixi.js\" has no default export.</p>\n</blockquote>\n"}, {"tags": ["typescript", "visual-studio-2015"], "comments": [{"owner": {"reputation": 1679, "user_id": 5171110, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/dcb5e1caccc071299f63c26271f1d244?s=128&d=identicon&r=PG&f=1", "display_name": "Artem", "link": "https://stackoverflow.com/users/5171110/artem"}, "edited": false, "score": 2, "creation_date": 1440370968, "post_id": 32170041, "comment_id": 52231132, "body": "<a href=\"https://github.com/Microsoft/TypeScript/issues/4300\" rel=\"nofollow noreferrer\">github.com/Microsoft/TypeScript/issues/4300</a>"}, {"owner": {"reputation": 25599, "user_id": 425823, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/00d813f85062c23d43043e6132278610?s=128&d=identicon&r=PG", "display_name": "Greg Gum", "link": "https://stackoverflow.com/users/425823/greg-gum"}, "reply_to_user": {"reputation": 1679, "user_id": 5171110, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/dcb5e1caccc071299f63c26271f1d244?s=128&d=identicon&r=PG&f=1", "display_name": "Artem", "link": "https://stackoverflow.com/users/5171110/artem"}, "edited": false, "score": 0, "creation_date": 1440421843, "post_id": 32170041, "comment_id": 52251728, "body": "Thank You. You deserve the credit for the answer."}], "answers": [{"comments": [{"owner": {"reputation": 551, "user_id": 1650463, "user_type": "registered", "accept_rate": 0, "profile_image": "https://i.stack.imgur.com/Yb0zg.jpg?s=128&g=1", "display_name": "BRebey", "link": "https://stackoverflow.com/users/1650463/brebey"}, "edited": false, "score": 0, "creation_date": 1522341834, "post_id": 35927286, "comment_id": 86130461, "body": "Using VS  2015, the accepted answer suggests an options path that doesn&#39;t exist - there is no TypeScript tab on my project&#39;s Properties page.  This answer worked perfectly for me, though."}], "tags": [], "owner": {"reputation": 17992, "user_id": 49885, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/2qrWg.png?s=128&g=1", "display_name": "Allen Rice", "link": "https://stackoverflow.com/users/49885/allen-rice"}, "is_accepted": false, "score": 6, "last_activity_date": 1457644028, "creation_date": 1457644028, "answer_id": 35927286, "question_id": 32170041, "link": "https://stackoverflow.com/questions/32170041/cannot-compile-modules-unless-the-module-flag-is-provided/35927286#35927286", "title": "Cannot compile modules unless the --module flag is provided", "body": "<p>So, we have this happen to us all of the time, but for different reasons.  We offload all of our typescript compilation to gulp (which is called by a PreBuildEvent), so the compilation works fine, but we still get this error when viewing the file in Visual Studio.</p>\n\n<p>Basically, we need to tell Visual Studio that we're using AMD, so to accomplish that, do the following:</p>\n\n<ul>\n<li>In Visual Studio, go to Tools > Options > Text Editor > TypeScript > Project</li>\n<li>Check \"Automatically compile TypeScript files which are not part of a project\"</li>\n<li>Check \"Use AMD code generation for modules that are not part of a project\"</li>\n</ul>\n\n<p>At that point, you can even uncheck the \"Automatically compile ....\" option, its just the 2nd one that needs to stay checked.  </p>\n\n<p>Again, when <em>we</em> encounter the issue, its a development time issue only and doesn't impact our builds (either locally or on our build servers).</p>\n"}, {"tags": [], "owner": {"reputation": 3725, "user_id": 1839034, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/7574a9d4d74e40af94e94b0eac36f3a2?s=128&d=identicon&r=PG", "display_name": "MarzSocks", "link": "https://stackoverflow.com/users/1839034/marzsocks"}, "is_accepted": true, "score": 7, "last_activity_date": 1474306203, "creation_date": 1474306203, "answer_id": 39578879, "question_id": 32170041, "link": "https://stackoverflow.com/questions/32170041/cannot-compile-modules-unless-the-module-flag-is-provided/39578879#39578879", "title": "Cannot compile modules unless the --module flag is provided", "body": "<p>1 Open project properties (right click on your project in the Solution Explorer, and click \"Properties\").</p>\n\n<p>2 Open the TypeScript tab.</p>\n\n<p>3 Choose AMD in the module system section.</p>\n"}, {"tags": [], "owner": {"reputation": 3670, "user_id": 2814021, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/5JVFo.jpg?s=128&g=1", "display_name": "Kent Aguilar", "link": "https://stackoverflow.com/users/2814021/kent-aguilar"}, "is_accepted": false, "score": 1, "last_activity_date": 1479182419, "creation_date": 1479182419, "answer_id": 40601784, "question_id": 32170041, "link": "https://stackoverflow.com/questions/32170041/cannot-compile-modules-unless-the-module-flag-is-provided/40601784#40601784", "title": "Cannot compile modules unless the --module flag is provided", "body": "<p>Using VS 2013.\nHere's what solved mine.</p>\n\n<p>Go to Project Properties > TypeScript Build > Choose \"AMD\" as Module system.</p>\n"}], "owner": {"reputation": 25599, "user_id": 425823, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/00d813f85062c23d43043e6132278610?s=128&d=identicon&r=PG", "display_name": "Greg Gum", "link": "https://stackoverflow.com/users/425823/greg-gum"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 12545, "favorite_count": 2, "accepted_answer_id": 39578879, "answer_count": 3, "score": 9, "last_activity_date": 1479385154, "creation_date": 1440354707, "last_edit_date": 1479385154, "question_id": 32170041, "link": "https://stackoverflow.com/questions/32170041/cannot-compile-modules-unless-the-module-flag-is-provided", "title": "Cannot compile modules unless the --module flag is provided", "body": "<p>UPDATE:<em>The issue I had at the time was due to a bug in VS/Typescript.  This issue is now resolved. Currently, the only reason for this error to occur is that no module type has been selected in Typescript properties. See accepted answer.</em></p>\n\n<p>VS 15: asp.net MVC project.</p>\n\n<p>I add a typescript file.  I then set the Module system to System.</p>\n\n<p>I then build the project.</p>\n\n<p>The error occurs: Cannot compile modules unless the --module flag is provided.</p>\n\n<p>I then check the properties of the ts file.  I set the build action to none.  The error goes away.</p>\n\n<p>However, if I start with a fresh Typescript project using the template with the Greeter class, then all works as expected.</p>\n\n<p>But I have looked at the project settings carefully, and there are no differences that I can see.</p>\n\n<p>I have read all other stack overflow answers on this error and none of them have resolved the error.</p>\n\n<p>The only workaround I have found is setting \"Compile On Save\" to true, and then setting the build action to \"None\"</p>\n"}, {"tags": ["html", "ajax", "json", "typescript"], "answers": [{"tags": [], "owner": {"reputation": 13755, "user_id": 207051, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ktARb.jpg?s=128&g=1", "display_name": "Martin", "link": "https://stackoverflow.com/users/207051/martin"}, "is_accepted": false, "score": 0, "last_activity_date": 1440349971, "creation_date": 1440349971, "answer_id": 32169292, "question_id": 32169180, "link": "https://stackoverflow.com/questions/32169180/how-to-display-the-returned-ajax-json-results-in-html-using-typescript/32169292#32169292", "title": "How to display the returned ajax Json results in HTML (using typescript)", "body": "<p>You need to transform the JSON into meaningful HTML. This can be done in typescript, javascript. It can be done with jQuery it can be done using javascript templates such a handlebars. It can be done with SPA frameworks like Angular. </p>\n\n<p>Please post an a sample of the returned JSON and I can update with a TypeScript example not using any toolsets or libs. </p>\n"}, {"tags": [], "owner": {"reputation": 1, "user_id": 5257757, "user_type": "unregistered", "profile_image": "https://www.gravatar.com/avatar/eea295ce974c2d2670fa77d6d32d46dd?s=128&d=identicon&r=PG", "display_name": "Robert", "link": "https://stackoverflow.com/users/5257757/robert"}, "is_accepted": false, "score": 0, "last_activity_date": 1440352974, "last_edit_date": 1440352974, "creation_date": 1440350624, "answer_id": 32169393, "question_id": 32169180, "link": "https://stackoverflow.com/questions/32169180/how-to-display-the-returned-ajax-json-results-in-html-using-typescript/32169393#32169393", "title": "How to display the returned ajax Json results in HTML (using typescript)", "body": "<p>JSON is an object. To output it to the document you need to first convert it to a string:</p>\n\n<pre><code>$.ajax(url, \"GET\").done(data =&gt; {\n  $('#...).html(JSON.stringify(data));\n}\n</code></pre>\n\n<p>However, if you know what kind of data you are getting back and want to output just parts of it, you'll need to loop the JSON. For example, if you had a JSON object like:</p>\n\n<pre><code>[\n   {name: \"Joe\", age: 32},\n   {name: \"Suzy\", age 23},\n   {name: \"Tom\", age 28}\n]\n</code></pre>\n\n<p>You could output the names like this:</p>\n\n<pre><code>$.ajax(url, \"GET\").done(data =&gt; {\n   data.forEach(function(person) {\n      $(ul).append('&lt;li&gt;' + person.name + '&lt;/li&gt;');\n   });\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 435, "user_id": 4891523, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/99e58d42bff2789bb7582368c9693116?s=128&d=identicon&r=PG&f=1", "display_name": "Adi", "link": "https://stackoverflow.com/users/4891523/adi"}, "is_accepted": true, "score": 0, "last_activity_date": 1440491794, "creation_date": 1440491794, "answer_id": 32199271, "question_id": 32169180, "link": "https://stackoverflow.com/questions/32169180/how-to-display-the-returned-ajax-json-results-in-html-using-typescript/32199271#32199271", "title": "How to display the returned ajax Json results in HTML (using typescript)", "body": "<p>Martin and Robert - thanks for the quick replies. I took your advises and came with the following generic solution (which can display html text returned from the server or nested json object in a table) :</p>\n\n<p>HTML:</p>\n\n<pre><code>    &lt;!--HTML--&gt;        \n    &lt;div data-bind=\"visible: isHtml, html: htmlView\"&gt;&lt;/div&gt;\n\n    &lt;!--SIMPLE JSON--&gt;\n    &lt;div data-bind=\"visible: isJson\"&gt;\n        &lt;table&gt;\n            &lt;thead&gt;\n                &lt;tr data-bind=\"foreach: columns\"&gt; \n                    &lt;th data-bind=\"text: $data\"&gt;&lt;/th&gt;\n                &lt;/tr&gt;\n            &lt;/thead&gt;\n            &lt;tbody data-bind=\"foreach: rows\"&gt;\n                &lt;tr data-bind=\"foreach: $parent.columns\"&gt;\n                    &lt;td data-bind=\"text: $parent[$data]\"&gt;&lt;/td&gt;\n                &lt;/tr&gt;\n            &lt;/tbody&gt;\n        &lt;/table&gt;\n    &lt;/div&gt;\n</code></pre>\n\n<p>TS:</p>\n\n<pre><code>function run(): void {\nthis.isHtml(false);\nthis.isJson(false);\n\n$.ajax(url, \"GET\").done(data =&gt; {\n    var jsonObj = data;\n\n    if (typeof (data) === \"string\") {\n        this.htmlView(data);\n        this.isHtml(true);\n        return;\n    }\n\n    if (data instanceof Array === false) {\n        jsonObj = [data];\n    }\n\n    this.columns([]);\n    this.rows([]);\n\n    for (var i = 0; i &lt; jsonObj.length; i++) {\n\n        var item = jsonObj[i];\n        var newItem = {};        \n\n        for (var key in item) {\n            if (i === 0)\n                this.columns.push(key);\n\n            if (typeof item[key] !== \"object\") {\n                newItem[key] = item[key];\n            } else {\n                for (var deeperKey in item[key]) {\n                    this.columns.push(deeperKey);\n                    newItem[deeperKey] = item[key][deeperKey];\n                }\n            }\n        }\n        this.rows.push(newItem);\n    }\n    this.isJson(true);\n});\n</code></pre>\n\n<p>I used another stackoverflow post (which I can't find right now) for the nested rows.  Obviously flatting the sub-rows is not what I want but it can easily be changed. </p>\n\n<p>It's my first typescript/html program :)</p>\n\n<p>Thanks Again!</p>\n"}], "owner": {"reputation": 435, "user_id": 4891523, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/99e58d42bff2789bb7582368c9693116?s=128&d=identicon&r=PG&f=1", "display_name": "Adi", "link": "https://stackoverflow.com/users/4891523/adi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1296, "favorite_count": 0, "accepted_answer_id": 32199271, "answer_count": 3, "score": 0, "last_activity_date": 1440491794, "creation_date": 1440349400, "question_id": 32169180, "link": "https://stackoverflow.com/questions/32169180/how-to-display-the-returned-ajax-json-results-in-html-using-typescript", "title": "How to display the returned ajax Json results in HTML (using typescript)", "body": "<p>The client (typescript) gets different results from the server, all are in json format.  Sometimes a simple json result, sometimes complex nested jsons.</p>\n\n<p>I need to present the results in a (very) simple html table. </p>\n\n<pre><code>function run(): void {\nvar url = this.selectedKnockoutDropList(); \n\n$.ajax(url, \"GET\").done(data =&gt; {\n    console.log(data);\n\n    *** here I want to do something like : \n        - open/embedd results.html\n        - fill a table with the json results parsed somehow\n});\n</code></pre>\n\n<p>I tried $('#...).html(data) with no success. </p>\n"}, {"tags": ["typescript"], "comments": [{"owner": {"reputation": 17529, "user_id": 398606, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9922e981f96ab7d809dfdc02c723fd41?s=128&d=identicon&r=PG", "display_name": "Sunil D.", "link": "https://stackoverflow.com/users/398606/sunil-d"}, "edited": false, "score": 0, "creation_date": 1440342350, "post_id": 32167593, "comment_id": 52222884, "body": "Type casting is purely a hint for the compiler/IDE. It will never add methods to your plain Javascript object. So you need to instantiate the JSON data as a <code>Person</code> object, there&#39;s no way around that. You could easily write a utility function to instantiate arrays/trees of objects for you. And on that note, how would casting help you with an array of objects? You&#39;d still have to iterate over the array and cast each element, right?"}], "answers": [{"comments": [{"owner": {"reputation": 2192, "user_id": 814752, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/57074da821d9593faa4d77536eec1ead?s=128&d=identicon&r=PG", "display_name": "Danny Bullis", "link": "https://stackoverflow.com/users/814752/danny-bullis"}, "edited": false, "score": 0, "creation_date": 1447453328, "post_id": 32169241, "comment_id": 55177616, "body": "It seems like there ought to be a way to skip using the <code>objType</code> argument since you&#39;re already specifying the generic in the function definition...maybe not, I&#39;m reading about typescript generics now to see if there&#39;s a way to only have to pass in the <code>json</code> argument..."}, {"owner": {"reputation": 80876, "user_id": 188246, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/bTzLq.jpg?s=128&g=1", "display_name": "David Sherret", "link": "https://stackoverflow.com/users/188246/david-sherret"}, "reply_to_user": {"reputation": 2192, "user_id": 814752, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/57074da821d9593faa4d77536eec1ead?s=128&d=identicon&r=PG", "display_name": "Danny Bullis", "link": "https://stackoverflow.com/users/814752/danny-bullis"}, "edited": false, "score": 0, "creation_date": 1447453661, "post_id": 32169241, "comment_id": 55177740, "body": "@DannyBullis the only problem with that is since it compiles to JavaScript the type information (generics included) disappear at runtime. It could be solved by analysing the typescript code itself and then generating some code from that though. It&#39;s a more complex solution. I know how to do it, but I just have to get around to writing it (probably over the holidays I will do this... I&#39;ve created a reminder)."}, {"owner": {"reputation": 2192, "user_id": 814752, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/57074da821d9593faa4d77536eec1ead?s=128&d=identicon&r=PG", "display_name": "Danny Bullis", "link": "https://stackoverflow.com/users/814752/danny-bullis"}, "edited": false, "score": 0, "creation_date": 1447454062, "post_id": 32169241, "comment_id": 55177906, "body": "ahh I just realized that. I&#39;ll continue onward. Best of luck and happy holidays."}, {"owner": {"reputation": 80876, "user_id": 188246, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/bTzLq.jpg?s=128&g=1", "display_name": "David Sherret", "link": "https://stackoverflow.com/users/188246/david-sherret"}, "reply_to_user": {"reputation": 2192, "user_id": 814752, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/57074da821d9593faa4d77536eec1ead?s=128&d=identicon&r=PG", "display_name": "Danny Bullis", "link": "https://stackoverflow.com/users/814752/danny-bullis"}, "edited": false, "score": 0, "creation_date": 1447454156, "post_id": 32169241, "comment_id": 55177953, "body": "@DannyBullis thanks, you too. I will comment back here later."}, {"owner": {"reputation": 1100, "user_id": 1068099, "user_type": "registered", "accept_rate": 3, "profile_image": "https://www.gravatar.com/avatar/4763427164f43c10c89165c62c9edfee?s=128&d=identicon&r=PG", "display_name": "Mike Argyriou", "link": "https://stackoverflow.com/users/1068099/mike-argyriou"}, "edited": false, "score": 0, "creation_date": 1454803066, "post_id": 32169241, "comment_id": 58209774, "body": "A drawback is that Person requires an empty constructor and since Typescript allows a singe constructor this is a limitation."}, {"owner": {"reputation": 80876, "user_id": 188246, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/bTzLq.jpg?s=128&g=1", "display_name": "David Sherret", "link": "https://stackoverflow.com/users/188246/david-sherret"}, "reply_to_user": {"reputation": 1100, "user_id": 1068099, "user_type": "registered", "accept_rate": 3, "profile_image": "https://www.gravatar.com/avatar/4763427164f43c10c89165c62c9edfee?s=128&d=identicon&r=PG", "display_name": "Mike Argyriou", "link": "https://stackoverflow.com/users/1068099/mike-argyriou"}, "edited": false, "score": 0, "creation_date": 1454804240, "post_id": 32169241, "comment_id": 58210119, "body": "@MikeArgyriou someone could still declare multiple signatures on the constructor with one empty one to support serialization. Alternatively multiple static factory methods could be declared that fill the class with information (ex. <code>const person = Person.createFromName(&quot;John Doe&quot;);</code>)"}, {"owner": {"reputation": 2236, "user_id": 1421778, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/9188b71e6b930c695cf18e2c8101ebdc?s=128&d=identicon&r=PG&f=1", "display_name": "Steven Yates", "link": "https://stackoverflow.com/users/1421778/steven-yates"}, "edited": false, "score": 0, "creation_date": 1477389957, "post_id": 32169241, "comment_id": 67736165, "body": "This will not work with an array. If you have instead of child, children: Child[] you cannot define the relationship"}, {"owner": {"reputation": 2236, "user_id": 1421778, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/9188b71e6b930c695cf18e2c8101ebdc?s=128&d=identicon&r=PG&f=1", "display_name": "Steven Yates", "link": "https://stackoverflow.com/users/1421778/steven-yates"}, "edited": false, "score": 0, "creation_date": 1477390384, "post_id": 32169241, "comment_id": 67736449, "body": "See here for updated version with support for array: <a href=\"http://pastebin.com/zzAzWVP4\" rel=\"nofollow noreferrer\">pastebin.com/zzAzWVP4</a>"}, {"owner": {"reputation": 3915, "user_id": 3978539, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/uDNUY.jpg?s=128&g=1", "display_name": "Stephan Bijzitter", "link": "https://stackoverflow.com/users/3978539/stephan-bijzitter"}, "edited": false, "score": 0, "creation_date": 1481562684, "post_id": 32169241, "comment_id": 69416081, "body": "What if a property is missing, or there is an additional property? This does no checking at all."}], "tags": [], "owner": {"reputation": 80876, "user_id": 188246, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/bTzLq.jpg?s=128&g=1", "display_name": "David Sherret", "link": "https://stackoverflow.com/users/188246/david-sherret"}, "is_accepted": true, "score": 6, "last_activity_date": 1440546763, "last_edit_date": 1495539929, "creation_date": 1440349710, "answer_id": 32169241, "question_id": 32167593, "link": "https://stackoverflow.com/questions/32167593/how-to-do-runtime-type-casting-in-typescript/32169241#32169241", "title": "How to do runtime type casting in TypeScript?", "body": "<p>Take a look at the compiled JavaScript and you will see the type assertion (casting) disappears because it's only for compiling. Right now you're telling the compiler that the <code>somejson</code> object is of type <code>Person</code>. The compiler believes you, but in this case that's not true.</p>\n\n<p>So this problem is a runtime JavaScript problem.</p>\n\n<p><strong>The main goal to get this to work is to somehow tell JavaScript what the relationship between the classes are. So...</strong></p>\n\n<ol>\n<li>Find a way to describe the relationship between classes.</li>\n<li>Create something to automatically map the json to classes based on this relationship data.</li>\n</ol>\n\n<p>There's many ways to solve it, but I'll offer one example off the top of my head. This should help describe what needs to be done.</p>\n\n<p>Say we have this class:</p>\n\n<pre><code>class Person {\n    name: string;\n    child: Person;\n\n    public giveName() {\n        return this.name;\n    }\n}\n</code></pre>\n\n<p>And this json data:</p>\n\n<pre><code>{ \n    name: 'John', \n    child: {\n        name: 'Sarah',\n        child: {\n            name: 'Jacob'\n        }\n    }\n}\n</code></pre>\n\n<p>To map this automatically to be instances of <code>Person</code>, we need to tell the JavaScript how the types are related. We can't use the TypeScript type information because we will loose that once it's compiled. One way to do this, is by having a static property on the type that describes this. For example:</p>\n\n<pre><code>class Person {\n    static relationships = {\n        child: Person\n    };\n\n    name: string;\n    child: Person;\n\n    public giveName() {\n        return this.name;\n    }\n}\n</code></pre>\n\n<p>Then here's an example of a reusable function that handles creating the objects for us based on this relationship data:</p>\n\n<pre><code>function createInstanceFromJson&lt;T&gt;(objType: { new(): T; }, json: any) {\n    const newObj = new objType();\n    const relationships = objType[\"relationships\"] || {};\n\n    for (const prop in json) {\n        if (json.hasOwnProperty(prop)) {\n            if (newObj[prop] == null) {\n                if (relationships[prop] == null) {\n                    newObj[prop] = json[prop];\n                }\n                else {\n                    newObj[prop] = createInstanceFromJson(relationships[prop], json[prop]);\n                }\n            }\n            else {\n                console.warn(`Property ${prop} not set because it already existed on the object.`);\n            }\n        }\n    }\n\n    return newObj;\n}\n</code></pre>\n\n<p>Now the following code will work:</p>\n\n<pre><code>const someJson = { \n        name: 'John', \n        child: {\n            name: 'Sarah',\n            child: {\n                name: 'Jacob'\n            }\n        }\n    };\nconst person = createInstanceFromJson(Person, someJson);\n\nconsole.log(person.giveName());             // John\nconsole.log(person.child.giveName());       // Sarah\nconsole.log(person.child.child.giveName()); // Jacob\n</code></pre>\n\n<p><a href=\"http://www.typescriptlang.org/Playground#src=function%20createInstanceFromJson%3CT%3E(objType%3A%20%7B%20new()%3A%20T%3B%20%7D%2C%20json%3A%20any)%20%7B%0D%0A%09const%20newObj%20%3D%20new%20objType()%3B%0D%0A%09const%20relationships%20%3D%20objType%5B%22relationships%22%5D%20%7C%7C%20%7B%7D%3B%0D%0A%09%0D%0A%09for%20(const%20prop%20in%20json)%20%7B%0D%0A%09%09if%20(json.hasOwnProperty(prop))%20%7B%0D%0A%09%09%09if%20(newObj%5Bprop%5D%20%3D%3D%20null)%20%7B%0D%0A%09%09%09%09if%20(relationships%5Bprop%5D%20%3D%3D%20null)%20%7B%0D%0A%09%09%09%09%09newObj%5Bprop%5D%20%3D%20json%5Bprop%5D%3B%0D%0A%09%09%09%09%7D%0D%0A%09%09%09%09else%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20newObj%5Bprop%5D%20%3D%20createInstanceFromJson(relationships%5Bprop%5D%2C%20json%5Bprop%5D)%3B%0D%0A%09%09%09%09%7D%0D%0A%09%09%09%7D%0D%0A%09%09%09else%20%7B%0D%0A%09%09%09%09console.warn(%60Property%20%24%7Bprop%7D%20not%20set%20because%20it%20already%20existed%20on%20the%20object.%60)%3B%0D%0A%09%09%09%7D%0D%0A%09%09%7D%0D%0A%09%7D%0D%0A%09%0D%0A%09return%20newObj%3B%0D%0A%7D%0D%0A%0D%0Aclass%20Person%20%7B%0D%0A%20%20%20%20static%20relationships%20%3D%20%7B%0D%0A%09%09child%3A%20Person%0D%0A%09%7D%3B%0D%0A%0D%0A%09name%3A%20string%3B%0D%0A%09child%3A%20Person%3B%0D%0A%0D%0A%09public%20giveName()%20%7B%0D%0A%09%09return%20this.name%3B%0D%0A%09%7D%0D%0A%7D%0D%0A%0D%0Aconst%20someJson%20%3D%20%7B%20%0D%0A%09%09name%3A%20&#39;John&#39;%2C%20%0D%0A%09%09child%3A%20%7B%0D%0A%09%09%09name%3A%20&#39;Sarah&#39;%2C%0D%0A%09%09%09child%3A%20%7B%0D%0A%09%09%09%09name%3A%20&#39;Jacob&#39;%0D%0A%09%09%09%7D%0D%0A%09%09%7D%0D%0A%09%7D%3B%0D%0Aconst%20person%20%3D%20createInstanceFromJson(Person%2C%20someJson)%3B%0D%0A%0D%0Aconsole.log(person.giveName())%3B%20%2F%2F%20John%0D%0Aconsole.log(person.child.giveName())%3B%20%2F%2F%20Sarah%0D%0Aconsole.log(person.child.child.giveName())%3B%20%2F%2F%20Jacob\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p><strong>Ideally</strong>, the best way would be to use something that actually reads the TypeScript code and creates an object that holds the relationship between classes. That way we don't need to manually maintain the relationships and worry about code changes. For example, right now refactoring code is a bit of a risk with this setup. I'm not sure that something like that exists at the moment, but it's definitely possible.</p>\n\n<p><strong>Alternative Solution</strong></p>\n\n<p>I just realized I already answered a similar question with a slightly different solution (that doesn't involve nested data though). You can read it here for some more ideas:</p>\n\n<p><a href=\"https://stackoverflow.com/questions/29758765/json-to-typescript-class-instance/29759472#29759472\">JSON to TypeScript class instance?</a></p>\n"}, {"comments": [{"owner": {"reputation": 80876, "user_id": 188246, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/bTzLq.jpg?s=128&g=1", "display_name": "David Sherret", "link": "https://stackoverflow.com/users/188246/david-sherret"}, "edited": false, "score": 1, "creation_date": 1440519635, "post_id": 32186367, "comment_id": 52302248, "body": "J&#39;aime lire la documentation en francais ;) This solution works as long as the class doesn&#39;t have any arrow functions."}, {"owner": {"reputation": 15625, "user_id": 3786294, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/o0RBY.png?s=128&g=1", "display_name": "Paleo", "link": "https://stackoverflow.com/users/3786294/paleo"}, "reply_to_user": {"reputation": 80876, "user_id": 188246, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/bTzLq.jpg?s=128&g=1", "display_name": "David Sherret", "link": "https://stackoverflow.com/users/188246/david-sherret"}, "edited": false, "score": 0, "creation_date": 1440521009, "post_id": 32186367, "comment_id": 52303034, "body": "Ha ha! Sorry! I edited. The properties (including arrow functions) are stored in the object instance, not in the prototype. Yes, this solution will not add any properties in the object."}], "tags": [], "owner": {"reputation": 15625, "user_id": 3786294, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/o0RBY.png?s=128&g=1", "display_name": "Paleo", "link": "https://stackoverflow.com/users/3786294/paleo"}, "is_accepted": false, "score": 8, "last_activity_date": 1504627950, "last_edit_date": 1504627950, "creation_date": 1440430906, "answer_id": 32186367, "question_id": 32167593, "link": "https://stackoverflow.com/questions/32167593/how-to-do-runtime-type-casting-in-typescript/32186367#32186367", "title": "How to do runtime type casting in TypeScript?", "body": "<p>The prototype of the class can be dynamically affected to the object:</p>\n\n<pre><code>function cast&lt;T&gt;(obj: any, cl: { new(...args): T }): T {\n  obj.__proto__ = cl.prototype;\n  return obj;\n}\n\nvar john = cast(/* somejson */, Person);\n</code></pre>\n\n<p>See <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\" rel=\"nofollow noreferrer\">the documentation of <code>__proto__</code> here</a>.</p>\n"}, {"tags": [], "owner": {"reputation": 51, "user_id": 7375370, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-PqSD7lxPWpk/AAAAAAAAAAI/AAAAAAAAALQ/dno1YVIeFYw/photo.jpg?sz=128", "display_name": "Omar Ayoub", "link": "https://stackoverflow.com/users/7375370/omar-ayoub"}, "is_accepted": false, "score": 5, "last_activity_date": 1562665674, "creation_date": 1562665674, "answer_id": 56949819, "question_id": 32167593, "link": "https://stackoverflow.com/questions/32167593/how-to-do-runtime-type-casting-in-typescript/56949819#56949819", "title": "How to do runtime type casting in TypeScript?", "body": "<p>You can use Object.assign, for example :</p>\n\n<pre><code>var somejson = { 'name' : 'Ann' };\nvar ann = Object.assign(new Person, somejson);\n\nconsole.log(ann.name);        // 'Ann'\nconsole.log(ann.giveName());  // 'Ann'\n</code></pre>\n\n<p>But if you have nested classes, you have to map throw the object and assign for each element.</p>\n"}], "owner": {"reputation": 4910, "user_id": 896697, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/54961255558784dffca95db840c2c6d2?s=128&d=identicon&r=PG", "display_name": "Jochen van Wylick", "link": "https://stackoverflow.com/users/896697/jochen-van-wylick"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 32227, "favorite_count": 8, "accepted_answer_id": 32169241, "answer_count": 3, "score": 25, "last_activity_date": 1562665674, "creation_date": 1440339268, "last_edit_date": 1504628306, "question_id": 32167593, "link": "https://stackoverflow.com/questions/32167593/how-to-do-runtime-type-casting-in-typescript", "title": "How to do runtime type casting in TypeScript?", "body": "<p>Currently I'm working on a typescript project and I'm really enjoying the type inference that TypeScript brings to the table. However - when getting objects from HTTP calls - I can cast them to the desired type, get code completion and call functions on them <em>compile time</em>, but those result in errors <em>runtime</em></p>\n\n<p><strong>Example:</strong></p>\n\n<pre><code>class Person{\n    name: string;\n\n    public giveName() {\n        return this.name;\n    }\n\n    constructor(json: any) {\n        this.name = json.name;\n    }\n}\n\nvar somejson = { 'name' : 'John' }; // Typically from AJAX call\nvar john = &lt;Person&gt;(somejson);      // The cast\n\nconsole.log(john.name);       // 'John'\nconsole.log(john.giveName()); // 'undefined is not a function'\n</code></pre>\n\n<p>Although this compiles nicely - and intellisense suggests me to use the function, it gives a runtime exception. A solution for this could be:</p>\n\n<pre><code>var somejson = { 'name' : 'Ann' };\nvar ann = new Person(somejson);\n\nconsole.log(ann.name);        // 'Ann'\nconsole.log(ann.giveName());  // 'Ann'\n</code></pre>\n\n<p>But that will require me to create constructors for all my types. In paticular, when dealing with tree-like types and/or with collections coming in from the AJAX-call, one would have to loop through all the items and new-up an instance for each.</p>\n\n<p><strong>So my question:</strong> is there a more elegant way to do this? That is, cast to a type and have the prototypical functions available for it immediately?</p>\n"}, {"tags": ["multidimensional-array", "parameters", "typescript"], "answers": [{"tags": [], "owner": {"reputation": 1309, "user_id": 400771, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1be4725b0bd0f9813afbe767dc269f0d?s=128&d=identicon&r=PG", "display_name": "David Driscoll", "link": "https://stackoverflow.com/users/400771/david-driscoll"}, "is_accepted": true, "score": 1, "last_activity_date": 1440333587, "creation_date": 1440333587, "answer_id": 32166739, "question_id": 32165195, "link": "https://stackoverflow.com/questions/32165195/specifying-argument-array-length/32166739#32166739", "title": "Specifying argument Array length", "body": "<p>Yes it's possible using Tuples.  (see : <a href=\"https://github.com/Microsoft/TypeScript/blob/master/doc/spec.md#3.3.3\" rel=\"nofollow\">https://github.com/Microsoft/TypeScript/blob/master/doc/spec.md#3.3.3</a> )</p>\n\n<p>something like...</p>\n\n<pre><code>type TMatrixRow4x4 = [number, number, number, number];\ntype TMatrix4x4 = [TMatrixRow4x4, TMatrixRow4x4, TMatrixRow4x4, TMatrixRow4x4];\n\nclass Matrix4x4{\n    constructor(matrix: TMatrix4x4){}\n}\n</code></pre>\n\n<p>You can change it around for any size matrix you might need.</p>\n"}, {"tags": [], "owner": {"reputation": 7603, "user_id": 941319, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4f8f456a2f35fc05e048e45ba55be48a?s=128&d=identicon&r=PG", "display_name": "thoughtrepo", "link": "https://stackoverflow.com/users/941319/thoughtrepo"}, "is_accepted": false, "score": 1, "last_activity_date": 1440337322, "last_edit_date": 1440337322, "creation_date": 1440335646, "answer_id": 32167033, "question_id": 32165195, "link": "https://stackoverflow.com/questions/32165195/specifying-argument-array-length/32167033#32167033", "title": "Specifying argument Array length", "body": "<p>If you don't need to limit the length of the array, and only need to define the array's elements you can use tuples like in David D.'s answer. However, in your case that would be the same as doing <code>number[][]</code>.</p>\n\n<p>Otherwise it gets a little tricky.</p>\n\n<pre><code>interface Array4&lt;T&gt; {\n    0: T;\n    1: T;\n    2: T;\n    3: T;\n    // Copied directly from the 'lib.d.ts' file\n    push(...items: T[]): number;\n}\n\ninterface MatrixArray4x4&lt;T&gt; {\n    0: T;\n    1: T;\n    2: T;\n    3: T;\n    // Copied directly from the 'lib.d.ts' file\n    map&lt;U&gt;(callbackfn: (value: T, index: number, array: T[]) =&gt; U, thisArg?: any): U[];\n}\n\n// Alias for clarity\ntype MatrixData4x4 = MatrixArray4x4&lt;Array4&lt;number&gt;&gt;;\n\nclass Matrix4x4{\n    constructor(matrix: MatrixData4x4){\n    }\n}\n</code></pre>\n\n<p>Works</p>\n\n<pre><code>var matrix: MatrixData4x4 = [\n    [1, 3, 3, 7],\n    [1, 9, 8, 4],\n    [9, 0, 0, 1],\n    [2, 0, 3, 8],\n];\n</code></pre>\n\n<p>The type of <code>a</code> is <code>number</code>.</p>\n\n<pre><code>var a = matrix[0][0];\n</code></pre>\n\n<p>The type of <code>b</code> is <code>any</code>. If <code>--noImplicitAny</code> is set, a type error will occur.</p>\n\n<pre><code>var b = matrix[4][0];\n</code></pre>\n\n<p>Works</p>\n\n<pre><code>new Matrix4x4([\n    [1, 3, 3, 7],\n    [1, 9, 8, 4],\n    [9, 0, 0, 1],\n    [2, 0, 3, 8],\n]);\n</code></pre>\n\n<p>Error: Property <code>4</code> is not assignable in <code>MatrixData4x4</code>.</p>\n\n<pre><code>new Matrix4x4([\n    [1, 3, 3, 7],\n    [1, 9, 8, 4],\n    [9, 0, 0, 1],\n    [2, 0, 3, 8],\n    [1, 2, 3, 4],\n]);\n</code></pre>\n\n<p>Error: Property <code>map</code> missing in the literal object.</p>\n\n<pre><code>new Matrix4x4({\n    0: [1, 3, 3, 7],\n    1: [1, 9, 8, 4],\n    2: [9, 0, 0, 1],\n    3: [2, 0, 3, 8],\n});\n</code></pre>\n\n<p>Error: Property <code>3</code> missing in <code>MatrixData4x4</code>.</p>\n\n<pre><code>new Matrix4x4([\n    [1, 3, 3, 7],\n    [1, 9, 8, 4],\n    [9, 0, 0, 1],\n]);\n</code></pre>\n\n<p>Error: Property <code>3</code> missing in <code>Array4&lt;number&gt;</code>.</p>\n\n<pre><code>new Matrix4x4([\n    [1, 3, 3],\n    [1, 9, 8, 4],\n    [9, 0, 0, 1],\n    [9, 0, 0, 1],\n]);\n</code></pre>\n\n<p>Error: Type <code>string</code> is not assignable to <code>number</code>.</p>\n\n<pre><code>new Matrix4x4([\n    [1, '3', 3, 5],\n    [1, 9, 8, 4],\n    [9, '0', 0, 1],\n    [9, 0, 0, '1'],\n]);\n</code></pre>\n\n<p>The limitation is that <code>MatrixArray4x4</code> and <code>Array4</code> don't extend <code>Array</code>. So type errors will occur if <code>Array</code> methods are called on it and they're not defined.</p>\n\n<p>Works, since <code>map</code> is defined above in <code>MatrixArray4x4</code>.</p>\n\n<pre><code>matrix.map((x) =&gt; x[3]);\n</code></pre>\n\n<p>Works, since <code>push</code> is defined above in <code>Array4</code>.</p>\n\n<pre><code>matrix.map((arr) =&gt; arr.push(4));\n</code></pre>\n\n<p>Error: Property <code>push</code> doesn't exist on the type <code>MatrixArray4x4</code>.</p>\n\n<pre><code>matrix.push([1, 2, 3, 4]);\n</code></pre>\n\n<p>Error: Property <code>map</code> doesn't exist on the type <code>Array4</code>.</p>\n\n<pre><code>matrix.map((arr) =&gt; {\n    arr.map((x) =&gt; x[3]);\n});\n</code></pre>\n\n<p>They way I got around this was to make an interface called <code>ArrayMethods</code> containing all the methods from the <code>Array</code> class without the element definition. I then extended that interface to make new limited length array interfaces.</p>\n"}], "owner": {"reputation": 89, "user_id": 5110191, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/bb373f770cd0be7b3c331b647110185f?s=128&d=identicon&r=PG&f=1", "display_name": "NewbieProgrammer", "link": "https://stackoverflow.com/users/5110191/newbieprogrammer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 33, "favorite_count": 0, "accepted_answer_id": 32166739, "answer_count": 2, "score": 0, "last_activity_date": 1440337322, "creation_date": 1440322589, "question_id": 32165195, "link": "https://stackoverflow.com/questions/32165195/specifying-argument-array-length", "title": "Specifying argument Array length", "body": "<p>Is it possible to specify the length of a double array upon parameter settings? for example:</p>\n\n<pre><code>class Matrix4x4{\n    constructor(matrix: /*must be a 4x4 number matrix*/){\n    }\n}\n</code></pre>\n"}, {"tags": ["typescript", "webstorm", "typescript1.6"], "answers": [{"comments": [{"owner": {"reputation": 57, "user_id": 3273735, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a2049a91fbd92d1281a8c058d9722426?s=128&d=identicon&r=PG&f=1", "display_name": "jayapal", "link": "https://stackoverflow.com/users/3273735/jayapal"}, "edited": false, "score": 0, "creation_date": 1440435007, "post_id": 32180396, "comment_id": 52260413, "body": "thanks progara..is there way to create folder dynamically in Typescript as if Coffeescript? and one more : file watcher and bulit in Typescript compiler both are doing same..but is there any important feature in bulit in Typescript compiler than file watcher...share me your thoughts"}, {"owner": {"reputation": 3557, "user_id": 471674, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8c2149e27cd64a4c4d441585079b332a?s=128&d=identicon&r=PG", "display_name": "Ekaterina Prigara", "link": "https://stackoverflow.com/users/471674/ekaterina-prigara"}, "reply_to_user": {"reputation": 57, "user_id": 3273735, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a2049a91fbd92d1281a8c058d9722426?s=128&d=identicon&r=PG&f=1", "display_name": "jayapal", "link": "https://stackoverflow.com/users/3273735/jayapal"}, "edited": false, "score": 0, "creation_date": 1440682445, "post_id": 32180396, "comment_id": 52382187, "body": "You can try tsc with <a href=\"https://github.com/Microsoft/TypeScript/wiki/Compiler-Options\" rel=\"nofollow noreferrer\">--outDir</a> param that redirect output structure to the directory."}, {"owner": {"reputation": 3557, "user_id": 471674, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8c2149e27cd64a4c4d441585079b332a?s=128&d=identicon&r=PG", "display_name": "Ekaterina Prigara", "link": "https://stackoverflow.com/users/471674/ekaterina-prigara"}, "reply_to_user": {"reputation": 57, "user_id": 3273735, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a2049a91fbd92d1281a8c058d9722426?s=128&d=identicon&r=PG&f=1", "display_name": "jayapal", "link": "https://stackoverflow.com/users/3273735/jayapal"}, "edited": false, "score": 0, "creation_date": 1440682498, "post_id": 32180396, "comment_id": 52382225, "body": "The benefit of using a built-in compiler compered to a file watcher is that it doesn&#39;t start a new compilation process on every change, so works faster."}], "tags": [], "owner": {"reputation": 3557, "user_id": 471674, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8c2149e27cd64a4c4d441585079b332a?s=128&d=identicon&r=PG", "display_name": "Ekaterina Prigara", "link": "https://stackoverflow.com/users/471674/ekaterina-prigara"}, "is_accepted": true, "score": 2, "last_activity_date": 1440413212, "creation_date": 1440413212, "answer_id": 32180396, "question_id": 32163623, "link": "https://stackoverflow.com/questions/32163623/typescript-in-webstorm-file-watcher-issue/32180396#32180396", "title": "Typescript in webstorm : File watcher issue", "body": "<p>The example provided in the WebStorm help is for CoffeeScript compiler that has different command-line options.\nWith TypeScript compiler use --sourceMap to generate source maps and --out to specify the output file. Here you can find information about TypeScript compiler and it's options: <a href=\"https://github.com/Microsoft/TypeScript/wiki/Compiler-Options\" rel=\"nofollow\">https://github.com/Microsoft/TypeScript/wiki/Compiler-Options</a>\nIf you're using WebStorm 10, use a built-in TypeScript compiler instead of a file watcher.</p>\n"}], "owner": {"reputation": 57, "user_id": 3273735, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a2049a91fbd92d1281a8c058d9722426?s=128&d=identicon&r=PG&f=1", "display_name": "jayapal", "link": "https://stackoverflow.com/users/3273735/jayapal"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 818, "favorite_count": 1, "accepted_answer_id": 32180396, "answer_count": 1, "score": 1, "last_activity_date": 1440413212, "creation_date": 1440308989, "question_id": 32163623, "link": "https://stackoverflow.com/questions/32163623/typescript-in-webstorm-file-watcher-issue", "title": "Typescript in webstorm : File watcher issue", "body": "<p>I am trying to use typescript in webstorm, I've done almost except \"arranging js files in the folder structure that repeats the original structure of .ts files\".      </p>\n\n<p>I've used the command which is given in site <a href=\"https://www.jetbrains.com/webstorm/help/using-file-watchers.html#generalOptions\" rel=\"nofollow\">https://www.jetbrains.com/webstorm/help/using-file-watchers.html#generalOptions</a> for coffiescript.  </p>\n\n<p><strong>Below are commends showed in websites</strong>:    </p>\n\n<p><em>Arguments</em> :  --output $ProjectFileDir$\\js\\$FileDirRelativeToProjectRoot$\\ --compile --map $FileName$</p>\n\n<p><em>Output path for refresh</em> :  </p>\n\n<p>$ProjectFileDir$\\js\\$FileDirRelativeToProjectRoot$\\$FileNameWithoutExtension$.js:$ProjectFileDir$\\js\\$FileDirRelativeToProjectRoot$\\$FileNameWithoutExtension$.map</p>\n\n<p>I've used above commend with little change as per my project.But i'm getting error on console. </p>\n\n<p>Here i've attached both the my configuration of File watchers img and error in console img.  </p>\n\n<p><strong>my file watcher Image</strong> &amp; <strong>Error in Console Image</strong><br>\n<a href=\"http://pho.to/9fH8J\" rel=\"nofollow\">http://pho.to/9fH8J</a></p>\n\n<p><strong>Below is the commands which used in my file watcher  \"arguments\" and \"output paths to refers\"</strong>  </p>\n\n<p><em>Arguments</em> :  --output $ProjectFileDir$\\js\\$FileDirRelativeToProjectRoot$\\ --compile --map $FileName$  </p>\n\n<p><em>Output paths for refers</em> :       </p>\n\n<p>$ProjectFileDir$\\js\\$FileDirRelativeToProjectRoot$\\$FileNameWithoutExtension$.js:$ProjectFileDir$\\js\\$FileDirRelativeToProjectRoot$\\$FileNameWithoutExtension$.js.map</p>\n\n<p>*Typescript are installed in project level, not globally installed. </p>\n\n<p>Help me out from this.</p>\n"}, {"tags": ["angular", "typescript", "visual-studio-2013"], "comments": [{"owner": {"reputation": 909, "user_id": 1881162, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/1622d02685e825e7549edefa70cd0675?s=128&d=identicon&r=PG", "display_name": "Josiane Ferice", "link": "https://stackoverflow.com/users/1881162/josiane-ferice"}, "edited": false, "score": 0, "creation_date": 1452817313, "post_id": 32159998, "comment_id": 57347766, "body": "Were you able to get Angular2 to work with visual studio 2013? If yes, how were you able to resolved?"}, {"owner": {"reputation": 557, "user_id": 1038912, "user_type": "registered", "accept_rate": 47, "profile_image": "https://www.gravatar.com/avatar/bef8371ef7334d2f24bed9eb88ddffe3?s=128&d=identicon&r=PG", "display_name": "spoof3r", "link": "https://stackoverflow.com/users/1038912/spoof3r"}, "edited": false, "score": 0, "creation_date": 1461076150, "post_id": 32159998, "comment_id": 61027541, "body": "Alexander Zhidkov answered the question correctly. You need to set your TypeScript module system to &quot;System&quot;."}], "answers": [{"tags": [], "owner": {"reputation": 901, "user_id": 578769, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/Irztp.jpg?s=128&g=1", "display_name": "keithm", "link": "https://stackoverflow.com/users/578769/keithm"}, "is_accepted": false, "score": 0, "last_activity_date": 1440278475, "creation_date": 1440278475, "answer_id": 32160910, "question_id": 32159998, "link": "https://stackoverflow.com/questions/32159998/visual-studio-2013-and-angular-2-0/32160910#32160910", "title": "Visual Studio 2013 and Angular 2.0", "body": "<p>I believe you need to have a <code>tsconfig.json</code> file in your project to instruct the TypeScript compiler on how to compile your TypeScript to Javascript. Here is more info on <a href=\"https://github.com/Microsoft/TypeScript/wiki/tsconfig.json\" rel=\"nofollow\">tsconfig.json</a></p>\n"}, {"tags": [], "owner": {"reputation": 461, "user_id": 5939098, "user_type": "registered", "accept_rate": 50, "profile_image": "https://lh4.googleusercontent.com/-NzMq5VgIyJc/AAAAAAAAAAI/AAAAAAAABNA/nMFSD0f_4q4/photo.jpg?sz=128", "display_name": "Alexander Zhidkov", "link": "https://stackoverflow.com/users/5939098/alexander-zhidkov"}, "is_accepted": false, "score": 1, "last_activity_date": 1455695131, "creation_date": 1455695131, "answer_id": 35450659, "question_id": 32159998, "link": "https://stackoverflow.com/questions/32159998/visual-studio-2013-and-angular-2-0/35450659#35450659", "title": "Visual Studio 2013 and Angular 2.0", "body": "<p>Go to your project properties - TypeScript Build - set \"Module system\" to \"System\". </p>\n"}], "owner": {"reputation": 15, "user_id": 966502, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2b3f6430452223d47ddc2488c127c56c?s=128&d=identicon&r=PG", "display_name": "akornev", "link": "https://stackoverflow.com/users/966502/akornev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3416, "favorite_count": 1, "answer_count": 2, "score": 1, "last_activity_date": 1503363229, "creation_date": 1440271899, "last_edit_date": 1503363229, "question_id": 32159998, "link": "https://stackoverflow.com/questions/32159998/visual-studio-2013-and-angular-2-0", "title": "Visual Studio 2013 and Angular 2.0", "body": "<p>I tried to do quickstart for Angular 2.0 using Visual Studio 2013.\nI installed TypedScript 1.5 and created a new project called \"HTML Application with TypedScript\".</p>\n\n<p>app.ts:</p>\n\n<pre><code>/// &lt;reference path=\"../typings/angular2/angular2.d.ts\" /&gt;    \nimport {Component, View, bootstrap} from 'angular2/angular2';\n\n// Annotation section\n@Component({\n    selector: 'my-app',\n})\n\n@View({\n    template: '&lt;h1&gt;Hello {{ name }}&lt;/h1&gt;',\n})\n\n// Component controller\nexport class MyAppComponent {\n    name: string;\n\n    constructor() {\n        this.name = 'Alice';\n    }\n}\n\nbootstrap(MyAppComponent);\n</code></pre>\n\n<p>On build I get error \"Cannot compile modules unless the '--module' flag is provided\" on line 2 (import...).</p>\n\n<p>Please, help me. How should I solve this problem?</p>\n"}, {"tags": ["javascript", "node.js", "typescript", "reactjs"], "answers": [{"tags": [], "owner": {"reputation": 162223, "user_id": 1704166, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/d256baab2fcfd81b0f109d394404fd67?s=128&d=identicon&r=PG", "display_name": "Ryan Cavanaugh", "link": "https://stackoverflow.com/users/1704166/ryan-cavanaugh"}, "is_accepted": true, "score": 1, "last_activity_date": 1440255227, "creation_date": 1440255227, "answer_id": 32157485, "question_id": 32157449, "link": "https://stackoverflow.com/questions/32157449/error-param-type-in-react-app-written-in-typescript/32157485#32157485", "title": "Error param type in React app written in Typescript", "body": "<p>You're trying to use the entire module instead of its exported member. In this case, you'd need to use <code>React.createElement(HelloWorld.HelloWorld, null);</code> to access the member.</p>\n\n<p>Alternatively, change your <code>import</code> to <code>import {HelloWorld as HelloWorld} from ...</code></p>\n"}], "owner": {"reputation": 11185, "user_id": 1055637, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/8a8b9e4daac99ea95aa3e8e246716e73?s=128&d=identicon&r=PG", "display_name": "Mazzy", "link": "https://stackoverflow.com/users/1055637/mazzy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 57, "favorite_count": 0, "accepted_answer_id": 32157485, "answer_count": 1, "score": 0, "last_activity_date": 1440255227, "creation_date": 1440255048, "question_id": 32157449, "link": "https://stackoverflow.com/questions/32157449/error-param-type-in-react-app-written-in-typescript", "title": "Error param type in React app written in Typescript", "body": "<p>I'm using atom-typescript package and I have made a simple example. Here is it:</p>\n\n<pre><code>import * as React from \"react\"\n\ninterface Props {}\n\nexport class HelloWorld extends React.Component&lt;Props, {}&gt; {\n  render() {\n    return &lt;div&gt;Hello World&lt;/div&gt;;\n  }\n}\n</code></pre>\n\n<hr>\n\n<pre><code>import * as React from \"react\"\n\nimport * as HelloWorld from \"./components/HelloWorld\"\n\nReact.render(\n  React.createElement(HelloWorld, null),\n  document.getElementById('app')\n);\n</code></pre>\n\n<p>The problem is that I get this error:</p>\n\n<pre><code>at line 6, file /Users/mazzy/vagrant-devbox/expressjs-typescript/app/app.tsx Argument of type 'typeof \"/Users/mazzy/vagrant-devbox/expressjs-typescript/app/components/HelloWorld\"' is not assignable to parameter of type 'ComponentClass&lt;any&gt;'.\n</code></pre>\n\n<p>Obviously I have installed <code>react.d.ts</code> file. Have any idea about this?</p>\n"}, {"tags": ["javascript", "angularjs", "date", "typescript"], "comments": [{"owner": {"reputation": 6741, "user_id": 1744702, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/a7e5fecd4f7413d813f737a616c9a4e8?s=128&d=identicon&r=PG", "display_name": "Roope Hakulinen", "link": "https://stackoverflow.com/users/1744702/roope-hakulinen"}, "edited": false, "score": 0, "creation_date": 1440253346, "post_id": 32156823, "comment_id": 52202373, "body": "Are you sure that <code>formats.dateTimeString</code> is a <i>Date</i> object? It seems that it isn&#39;t <i>Date</i> object since <i>toISOString</i> isn&#39;t a function."}, {"owner": {"reputation": 191, "user_id": 5255156, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ca05592967ba437ea61ab358b86d206?s=128&d=identicon&r=PG&f=1", "display_name": "JB123", "link": "https://stackoverflow.com/users/5255156/jb123"}, "reply_to_user": {"reputation": 6741, "user_id": 1744702, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/a7e5fecd4f7413d813f737a616c9a4e8?s=128&d=identicon&r=PG", "display_name": "Roope Hakulinen", "link": "https://stackoverflow.com/users/1744702/roope-hakulinen"}, "edited": false, "score": 0, "creation_date": 1440263964, "post_id": 32156823, "comment_id": 52205410, "body": "Yeah, it&#39;s definitely a Date.  Poor choice of property name on my part (I&#39;ve been through a few iterations trying to get this to work, and I didn&#39;t update the property name).  I&#39;ll edit my question to make it more clear.  Thanks!"}, {"owner": {"reputation": 6741, "user_id": 1744702, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/a7e5fecd4f7413d813f737a616c9a4e8?s=128&d=identicon&r=PG", "display_name": "Roope Hakulinen", "link": "https://stackoverflow.com/users/1744702/roope-hakulinen"}, "edited": false, "score": 0, "creation_date": 1440265453, "post_id": 32156823, "comment_id": 52205848, "body": "What does it show if you do something like <code>alert(formats.dateTimeString.toString());</code> or use <code>console.error(..);</code> if that suits better your usage."}, {"owner": {"reputation": 7603, "user_id": 941319, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4f8f456a2f35fc05e048e45ba55be48a?s=128&d=identicon&r=PG", "display_name": "thoughtrepo", "link": "https://stackoverflow.com/users/941319/thoughtrepo"}, "edited": false, "score": 0, "creation_date": 1440422911, "post_id": 32156823, "comment_id": 52252470, "body": "That&#39;s a type error, so it doesn&#39;t really matter whether it&#39;s actually a <code>Date</code> or not, since either way TypeScript doesn&#39;t think it is a <code>Date</code>. Go to where <code>dateTimeValue</code> is defined and make sure its type is <code>Date</code>. You can check the implementation afterwards."}], "answers": [{"comments": [{"owner": {"reputation": 7603, "user_id": 941319, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4f8f456a2f35fc05e048e45ba55be48a?s=128&d=identicon&r=PG", "display_name": "thoughtrepo", "link": "https://stackoverflow.com/users/941319/thoughtrepo"}, "edited": false, "score": 0, "creation_date": 1440427242, "post_id": 32184548, "comment_id": 52255558, "body": "I just came back to check, and actually I got it backwards, but I&#39;m glad it helped in some way then :)"}], "tags": [], "owner": {"reputation": 191, "user_id": 5255156, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ca05592967ba437ea61ab358b86d206?s=128&d=identicon&r=PG&f=1", "display_name": "JB123", "link": "https://stackoverflow.com/users/5255156/jb123"}, "is_accepted": true, "score": 11, "last_activity_date": 1443025799, "last_edit_date": 1443025799, "creation_date": 1440425718, "answer_id": 32184548, "question_id": 32156823, "link": "https://stackoverflow.com/questions/32156823/typeerror-formats-datetimestring-toisostring-is-not-a-function/32184548#32184548", "title": "TypeError: formats.dateTimeString.toISOString is not a function", "body": "<p>Although the dateTimeValue was defined as a Date in TypeScript, it was being instantiated at runtime as a string because it was being pulled from the API.  Therefore, the TypeScript would compile just fine, but when the javascript ran it was seeing <code>.toISOString()</code> being called against a string, not a Date.</p>\n"}, {"tags": [], "owner": {"reputation": 586, "user_id": 3159801, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/rxkdK.jpg?s=128&g=1", "display_name": "Alamgir", "link": "https://stackoverflow.com/users/3159801/alamgir"}, "is_accepted": false, "score": 1, "last_activity_date": 1547441953, "creation_date": 1547441953, "answer_id": 54175986, "question_id": 32156823, "link": "https://stackoverflow.com/questions/32156823/typeerror-formats-datetimestring-toisostring-is-not-a-function/54175986#54175986", "title": "TypeError: formats.dateTimeString.toISOString is not a function", "body": "<p>Moment.js creates a wrapper for the Date object.formats.dateTimeValue is not wrapper object. To get this wrapper object, simply call moment() with one of the supported input types. so convert it like this:</p>\n\n<pre><code>this.dateDisplay = moment(formats.dateTimeValue).toISOString();\n</code></pre>\n\n<p>I have solved my problem like above.</p>\n"}], "owner": {"reputation": 191, "user_id": 5255156, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ca05592967ba437ea61ab358b86d206?s=128&d=identicon&r=PG&f=1", "display_name": "JB123", "link": "https://stackoverflow.com/users/5255156/jb123"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 15368, "favorite_count": 0, "accepted_answer_id": 32184548, "answer_count": 2, "score": 5, "last_activity_date": 1547441953, "creation_date": 1440251062, "last_edit_date": 1440263995, "question_id": 32156823, "link": "https://stackoverflow.com/questions/32156823/typeerror-formats-datetimestring-toisostring-is-not-a-function", "title": "TypeError: formats.dateTimeString.toISOString is not a function", "body": "<p>I'm new to TypeScript and AngularJS, and I'm trying to convert a date from my API that is something like:</p>\n\n<pre><code>\"8/22/2015\"\n</code></pre>\n\n<p>...to an ISO Date.  The date is properly deserialized into a TypeScript property of type <code>Date</code>.  However, when I try the following command (in typescript, and <code>this.dateDisplay</code> is of type string)</p>\n\n<pre><code>this.dateDisplay = formats.dateTimeValue.toISOString();\n</code></pre>\n\n<p>I get the error:</p>\n\n<blockquote>\n  <p>TypeError: formats.dateTimeValue.toISOString is not a function\n      at dataFormatsTests.js:42\n      at processQueue (angular.js:14567)\n      at angular.js:14583\n      at Scope.$get.Scope.$eval (angular.js:15846)\n      at Scope.$get.Scope.$digest (angular.js:15657)\n      at Scope.$get.Scope.$apply (angular.js:15951)\n      at done (angular.js:10364)\n      at completeRequest (angular.js:10536)\n      at XMLHttpRequest.requestLoaded (angular.js:10477)</p>\n</blockquote>\n\n<p>I've also been to <a href=\"http://kangax.github.io/compat-table/es5/\" rel=\"noreferrer\">this site</a> and it says my browser supports the <code>toISOString</code> function.</p>\n\n<p>So, my questions is: Why doesn't my browser, or angular, or whatever, recognize the <code>toISOString</code> function?</p>\n"}, {"tags": ["typescript", "aurelia"], "answers": [{"comments": [{"owner": {"reputation": 25584, "user_id": 725866, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/cbede50c0d1034b1b4453b2d426542e7?s=128&d=identicon&r=PG", "display_name": "Jeremy Danyow", "link": "https://stackoverflow.com/users/725866/jeremy-danyow"}, "edited": false, "score": 0, "creation_date": 1440276945, "post_id": 32159193, "comment_id": 52209008, "body": "Mike Graham also helped me port of Aurelia&#39;s skeleton-navigation project to TypeScript.  You can find that <b><a href=\"https://github.com/jdanyow/aurelia-typescript-skeleton\" rel=\"nofollow noreferrer\">here</a></b>.  There are two commits that show the changes that were required."}, {"owner": {"reputation": 1048, "user_id": 767080, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/c0f26dbbbe8554e410d23d53b4fbe7d3?s=128&d=identicon&r=PG", "display_name": "Jacques Bourque", "link": "https://stackoverflow.com/users/767080/jacques-bourque"}, "edited": false, "score": 0, "creation_date": 1440298773, "post_id": 32159193, "comment_id": 52213014, "body": "That did make it work... But it kind of feel weird to use a different module loader syntax than the one I am actually using. No? I guess Typescript did not implement correctly the &quot;system&quot; code generation?"}, {"owner": {"reputation": 1048, "user_id": 767080, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/c0f26dbbbe8554e410d23d53b4fbe7d3?s=128&d=identicon&r=PG", "display_name": "Jacques Bourque", "link": "https://stackoverflow.com/users/767080/jacques-bourque"}, "edited": false, "score": 0, "creation_date": 1440299538, "post_id": 32159193, "comment_id": 52213124, "body": "I guess what I&#39;m asking is what it the best approach: Use babel to compile my Typescript files or tell the Typescript compiler to target AMD when I am using SystemJS?"}, {"owner": {"reputation": 1034, "user_id": 385426, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/869065593aa1af3e88c6b5ccbb55b9c1?s=128&d=identicon&r=PG", "display_name": "Mike Graham", "link": "https://stackoverflow.com/users/385426/mike-graham"}, "edited": false, "score": 0, "creation_date": 1440339739, "post_id": 32159193, "comment_id": 52221969, "body": "i think there is an issue with typescript, system register, and deduping module references, and maybe the loader too.  sorry for the vagueness..."}, {"owner": {"reputation": 1048, "user_id": 767080, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/c0f26dbbbe8554e410d23d53b4fbe7d3?s=128&d=identicon&r=PG", "display_name": "Jacques Bourque", "link": "https://stackoverflow.com/users/767080/jacques-bourque"}, "edited": false, "score": 0, "creation_date": 1440341340, "post_id": 32159193, "comment_id": 52222527, "body": "No problem Mike :) I guess your solution is safer since SystemJS officially support the amd module format. We cannot say the same for babel and typescript... Thank you very much! :)"}], "tags": [], "owner": {"reputation": 1034, "user_id": 385426, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/869065593aa1af3e88c6b5ccbb55b9c1?s=128&d=identicon&r=PG", "display_name": "Mike Graham", "link": "https://stackoverflow.com/users/385426/mike-graham"}, "is_accepted": true, "score": 7, "last_activity_date": 1440266593, "creation_date": 1440266593, "answer_id": 32159193, "question_id": 32156334, "link": "https://stackoverflow.com/questions/32156334/aurelia-typescript-bindable/32159193#32159193", "title": "Aurelia + Typescript + @bindable", "body": "<p>please try module: \"amd\" instead of module: \"system\"</p>\n"}], "owner": {"reputation": 1048, "user_id": 767080, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/c0f26dbbbe8554e410d23d53b4fbe7d3?s=128&d=identicon&r=PG", "display_name": "Jacques Bourque", "link": "https://stackoverflow.com/users/767080/jacques-bourque"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1119, "favorite_count": 0, "accepted_answer_id": 32159193, "answer_count": 1, "score": 2, "last_activity_date": 1440266593, "creation_date": 1440247864, "last_edit_date": 1440248406, "question_id": 32156334, "link": "https://stackoverflow.com/questions/32156334/aurelia-typescript-bindable", "title": "Aurelia + Typescript + @bindable", "body": "<p>I started to learn Aurelia and I am following the <a href=\"http://aurelia.io/get-started.html\" rel=\"nofollow\">Getting Started</a> guide on their website but instead of Javascript, I am using Typescript. All is good but I am having an issue making the <code>@bindable</code> decorator work in the <code>nav-bar</code> component.</p>\n\n<p>My setup is as follow:</p>\n\n<ul>\n<li>Visual Studio 2015 (ASP.NET vNext project)</li>\n<li>Typescript 1.5.3</li>\n<li>JSPM 0.16.0 beta 7</li>\n<li>SystemJS 0.18.9</li>\n<li>Aurelia (framework: 0.15.0; bootstrapper: 0.16.0)</li>\n</ul>\n\n<p>Here the content of my nav-bar.ts file:</p>\n\n<pre><code>import {bindable} from \"aurelia-framework\";\nimport {Router} from \"aurelia-router\";\n\nexport class NavBar {\n      @bindable router: Router = null;\n}\n</code></pre>\n\n<p>I have a <code>tsconfig.json</code> file as follow:</p>\n\n<pre><code>{\n   \"compilerOptions\": {\n      \"noImplicitAny\": false,\n      \"noEmitOnError\": false,\n      \"removeComments\": false,\n      \"target\": \"es5\",\n      \"module\": \"system\",\n      \"experimentalDecorators\": true,\n      \"emitDecoratorMetadata\": true\n   }\n}\n</code></pre>\n\n<p>If I let VS transpile the Typescript files, the generated nav-bar.js file looks like this:</p>\n\n<pre><code>var __decorate = (this &amp;&amp; this.__decorate) || function (decorators, target, key, desc) {\n    if (typeof Reflect === \"object\" &amp;&amp; typeof Reflect.decorate === \"function\") return Reflect.decorate(decorators, target, key, desc);\n    switch (arguments.length) {\n        case 2: return decorators.reduceRight(function(o, d) { return (d &amp;&amp; d(o)) || o; }, target);\n        case 3: return decorators.reduceRight(function(o, d) { return (d &amp;&amp; d(target, key)), void 0; }, void 0);\n        case 4: return decorators.reduceRight(function(o, d) { return (d &amp;&amp; d(target, key, o)) || o; }, desc);\n    }\n};\nvar __metadata = (this &amp;&amp; this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" &amp;&amp; typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};System.register(['aurelia-framework', 'aurelia-router'], function(exports_1) {\n    var aurelia_framework_1, aurelia_router_1;\n    var NavBar;\n    return {\n        setters:[\n            function (_aurelia_framework_1) {\n                aurelia_framework_1 = _aurelia_framework_1;\n            },\n            function (_aurelia_router_1) {\n                aurelia_router_1 = _aurelia_router_1;\n            }],\n        execute: function() {\n            NavBar = (function () {\n                function NavBar() {\n                    this.router = null;\n                }\n                __decorate([\n                    aurelia_framework_1.bindable, \n                    __metadata('design:type', aurelia_router_1.Router)\n                ], NavBar.prototype, \"router\");\n                return NavBar;\n            })();\n            exports_1(\"NavBar\", NavBar);\n        }\n    }\n});\n</code></pre>\n\n<p>I also tried using <code>gulp-typescript</code> and the result is the same. With those two solution, the binding is not working and the navbar is empty. </p>\n\n<p>If I use <code>gulp-babel</code> instead, the generated nav-bar.js file looks like this:</p>\n\n<pre><code>System.register([\"aurelia-framework\", \"aurelia-router\"], function (_export) {\n    \"use strict\";\n\n    var bindable, Router, NavBar;\n\n    var _createDecoratedClass = (function () { function defineProperties(target, descriptors, initializers) { for (var i = 0; i &lt; descriptors.length; i++) { var descriptor = descriptors[i]; var decorators = descriptor.decorators; var key = descriptor.key; delete descriptor.key; delete descriptor.decorators; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor || descriptor.initializer) descriptor.writable = true; if (decorators) { for (var f = 0; f &lt; decorators.length; f++) { var decorator = decorators[f]; if (typeof decorator === \"function\") { descriptor = decorator(target, key, descriptor) || descriptor; } else { throw new TypeError(\"The decorator for method \" + descriptor.key + \" is of the invalid type \" + typeof decorator); } } if (descriptor.initializer !== undefined) { initializers[key] = descriptor; continue; } } Object.defineProperty(target, key, descriptor); } } return function (Constructor, protoProps, staticProps, protoInitializers, staticInitializers) { if (protoProps) defineProperties(Constructor.prototype, protoProps, protoInitializers); if (staticProps) defineProperties(Constructor, staticProps, staticInitializers); return Constructor; }; })();\n\n    function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n    function _defineDecoratedPropertyDescriptor(target, key, descriptors) { var _descriptor = descriptors[key]; if (!_descriptor) return; var descriptor = {}; for (var _key in _descriptor) descriptor[_key] = _descriptor[_key]; descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined; Object.defineProperty(target, key, descriptor); }\n\n    return {\n        setters: [function (_aureliaFramework) {\n            bindable = _aureliaFramework.bindable;\n        }, function (_aureliaRouter) {\n            Router = _aureliaRouter.Router;\n        }],\n        execute: function () {\n            NavBar = (function () {\n                var _instanceInitializers = {};\n\n                function NavBar() {\n                    _classCallCheck(this, NavBar);\n\n                    _defineDecoratedPropertyDescriptor(this, \"router\", _instanceInitializers);\n                }\n\n                _createDecoratedClass(NavBar, [{\n                    key: \"router\",\n                    decorators: [bindable],\n                    initializer: function initializer() {\n                        return null;\n                    },\n                    enumerable: true\n                }], null, _instanceInitializers);\n\n                return NavBar;\n            })();\n\n            _export(\"NavBar\", NavBar);\n        }\n    };\n});\n</code></pre>\n\n<p>Using the gulp-babel method works but I guess it is not necessarily the right option since I do not think babel is meant to transpile Typescript so I might have issues later on when writing some advanced code.</p>\n\n<h2>Questions</h2>\n\n<p>Is there anything I can to make it work using the official Typescript transpiler? </p>\n\n<p>Anyone succeeded?</p>\n"}, {"tags": ["typescript"], "answers": [{"tags": [], "owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "is_accepted": true, "score": 1, "last_activity_date": 1440357173, "creation_date": 1440357173, "answer_id": 32170479, "question_id": 32152020, "link": "https://stackoverflow.com/questions/32152020/private-class-properties-in-type-comparison/32170479#32170479", "title": "Private class properties in type comparison", "body": "<p>This restriction is the only way to <a href=\"https://www.stevefenton.co.uk/2014/12/why-private-members-result-in-unmatchable-typescript-structures/\" rel=\"nofollow\">create unmatchable types in TypeScript</a>.</p>\n\n<p>You can create an interface to represent the shared type if you need to (code taken from the article linked)...</p>\n\n<pre><code>interface GeneralId {\n    getId() : number;\n}\n\nclass CustomerId {\n    constructor(private id: number) {}\n\n    getId() { return this.id; }\n}\n\nclass ProductId {\n    constructor(private id: number) {}\n\n    getId() { return this.id; }\n}\n\nfunction nonSpecificMethod(id: GeneralId) {\n    //...\n}\n\nvar id1 = new CustomerId(1);\nvar id2 = new ProductId(2);\n\n// Type passes\nnonSpecificMethod(id1);\n\n// Type passes\nnonSpecificMethod(id2);\n</code></pre>\n\n<p>In this example, a <code>CustomerId</code> cannot be used in place of a <code>ProductId</code> (this is the point of creating this kind of wrapper class). If wish to allow them to be interchangeable, you can use the <code>GeneralId</code> type instead.</p>\n"}], "owner": {"reputation": 1570, "user_id": 1769408, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/c37b7ea8a916f892317e439d682e4279?s=128&d=identicon&r=PG", "display_name": "jfu", "link": "https://stackoverflow.com/users/1769408/jfu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 135, "favorite_count": 1, "accepted_answer_id": 32170479, "answer_count": 1, "score": 2, "last_activity_date": 1440357173, "creation_date": 1440214620, "question_id": 32152020, "link": "https://stackoverflow.com/questions/32152020/private-class-properties-in-type-comparison", "title": "Private class properties in type comparison", "body": "<p>In general, types in <code>TypeScript</code> are <code>structural</code>. However, according to  <a href=\"http://www.typescriptlang.org/Handbook\" rel=\"nofollow\">The <code>TypeScript</code> manual</a>, when testing two classes for compatibility, private properties are required to come from the same hierarchy. What is the reason for this restriction?</p>\n"}, {"tags": ["typescript"], "answers": [{"tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": false, "score": 0, "last_activity_date": 1447281616, "last_edit_date": 1447281616, "creation_date": 1440373978, "answer_id": 32172724, "question_id": 32151638, "link": "https://stackoverflow.com/questions/32151638/compiling-multiple-typescript-files-in-parallel/32172724#32172724", "title": "Compiling multiple Typescript Files in Parallel", "body": "<blockquote>\n  <p>and I was thinking if there is a way we could compile the Typescript files in parallel.</p>\n</blockquote>\n\n<p>If you are not using <code>--out</code> then you can compile <em>just the changed <code>js</code> file</em>. It takes under a second. And then on deployment you can do a full compile \u2026 which will take around 5 seconds (still pretty fast compared to most legacy workflows).</p>\n"}], "owner": {"reputation": 1, "user_id": 5254071, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/73b8976384e3ec8bdad4c400e6609671?s=128&d=identicon&r=PG&f=1", "display_name": "ANK", "link": "https://stackoverflow.com/users/5254071/ank"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 753, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1447282967, "creation_date": 1440210145, "last_edit_date": 1447282967, "question_id": 32151638, "link": "https://stackoverflow.com/questions/32151638/compiling-multiple-typescript-files-in-parallel", "title": "Compiling multiple Typescript Files in Parallel", "body": "<p>We have a really great set of Typescript files in our solution and this is still growing and I was thinking if there is a way we could compile the Typescript files in parallel. If possible I am not sure on how it will resolve the dependencies\u2026 Can someone help?</p>\n"}, {"tags": ["typescript", "webstorm"], "comments": [{"owner": {"reputation": 4669, "user_id": 230637, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hwJg5.jpg?s=128&g=1", "display_name": "Alon Amir", "link": "https://stackoverflow.com/users/230637/alon-amir"}, "edited": false, "score": 1, "creation_date": 1450298783, "post_id": 32151141, "comment_id": 56385283, "body": "If my answer helped you, please consider accepting it by clicking the \u2714, or let me know what&#39;s missing."}, {"owner": {"reputation": 11724, "user_id": 1981050, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/MimfZ.png?s=128&g=1", "display_name": "Matthew James Davis", "link": "https://stackoverflow.com/users/1981050/matthew-james-davis"}, "edited": false, "score": 1, "creation_date": 1455763992, "post_id": 32151141, "comment_id": 58638999, "body": "accept the answer bro"}], "answers": [{"comments": [{"owner": {"reputation": 4669, "user_id": 230637, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hwJg5.jpg?s=128&g=1", "display_name": "Alon Amir", "link": "https://stackoverflow.com/users/230637/alon-amir"}, "reply_to_user": {"reputation": 541, "user_id": 3880291, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/a5b4684a676024be3211080fccd764d7?s=128&d=identicon&r=PG", "display_name": "oei ", "link": "https://stackoverflow.com/users/3880291/oei"}, "edited": false, "score": 0, "creation_date": 1440276328, "post_id": 32159595, "comment_id": 52208844, "body": "@shatal That&#39;s not what I meant, you only have to include 2 typescript files in <code>tsconfig.json</code>: (1) the tsd.d.ts file (bundle of all typings), (2) your main typescript file (i.e main.ts). That&#39;s enough info for <code>tsc</code> to know that it should compile all dependencies of your main.ts file as well."}, {"owner": {"reputation": 4669, "user_id": 230637, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hwJg5.jpg?s=128&g=1", "display_name": "Alon Amir", "link": "https://stackoverflow.com/users/230637/alon-amir"}, "reply_to_user": {"reputation": 541, "user_id": 3880291, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/a5b4684a676024be3211080fccd764d7?s=128&d=identicon&r=PG", "display_name": "oei ", "link": "https://stackoverflow.com/users/3880291/oei"}, "edited": false, "score": 0, "creation_date": 1440276541, "post_id": 32159595, "comment_id": 52208900, "body": "@shatal You can actually use relative paths :}, <code>tsc</code> knows how to handle these as well, both in <code>tsconfig.json</code> and for calls of <code>import</code> and <code>require</code> in your <code>.ts</code> files. See the example I&#39;ve presented in <code>tsconfig.json</code>."}, {"owner": {"reputation": 4669, "user_id": 230637, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hwJg5.jpg?s=128&g=1", "display_name": "Alon Amir", "link": "https://stackoverflow.com/users/230637/alon-amir"}, "reply_to_user": {"reputation": 541, "user_id": 3880291, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/a5b4684a676024be3211080fccd764d7?s=128&d=identicon&r=PG", "display_name": "oei ", "link": "https://stackoverflow.com/users/3880291/oei"}, "edited": false, "score": 0, "creation_date": 1440279225, "post_id": 32159595, "comment_id": 52209532, "body": "@shatal For gulp you can use <a href=\"https://www.npmjs.com/package/gulp-tsc\" rel=\"nofollow noreferrer\">gulp-tsc</a> or <a href=\"https://github.com/ivogabe/gulp-typescript\" rel=\"nofollow noreferrer\">gulp-typescript</a>. Keep in mind, for such a trivial task like transpiling typescript files to js: Once you configure tsconfig.json, you can simply run <code>tsc</code> and that&#39;s it. if you use web storm, it does it automatically for you, no need to run anything. if you are working without webstorm, you can run <code>tsc -w</code> which will run and compile on the go, monitoring live changes."}, {"owner": {"reputation": 3191, "user_id": 881739, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/9da1d18623d4c9e46e10c875858df6b2?s=128&d=identicon&r=PG", "display_name": "skiabox", "link": "https://stackoverflow.com/users/881739/skiabox"}, "edited": false, "score": 0, "creation_date": 1473961948, "post_id": 32159595, "comment_id": 66350504, "body": "Since tsd is deprecated (even the officially site is down) I want to state that typings is working very well with the latest WebStorm version (2016.2.3).In fact just after installing a local library (in my case lodash) I can easily use it in my typescript code.Pressing alt + enter on my mac after using a lodash function , webstorm added the following line to my app.ts : import _ = require(&quot;lodash&quot;);"}, {"owner": {"reputation": 4669, "user_id": 230637, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hwJg5.jpg?s=128&g=1", "display_name": "Alon Amir", "link": "https://stackoverflow.com/users/230637/alon-amir"}, "reply_to_user": {"reputation": 3191, "user_id": 881739, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/9da1d18623d4c9e46e10c875858df6b2?s=128&d=identicon&r=PG", "display_name": "skiabox", "link": "https://stackoverflow.com/users/881739/skiabox"}, "edited": false, "score": 0, "creation_date": 1474036038, "post_id": 32159595, "comment_id": 66382102, "body": "@skiabox Thanks, updated accordingly. <code>typings</code> is definitely more common than <code>tsd</code> now."}], "tags": [], "owner": {"reputation": 4669, "user_id": 230637, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hwJg5.jpg?s=128&g=1", "display_name": "Alon Amir", "link": "https://stackoverflow.com/users/230637/alon-amir"}, "is_accepted": false, "score": 23, "last_activity_date": 1474037746, "last_edit_date": 1474037746, "creation_date": 1440269301, "answer_id": 32159595, "question_id": 32151141, "link": "https://stackoverflow.com/questions/32151141/webstormtypescript-how-to-use-without-reference-path/32159595#32159595", "title": "WebStorm+Typescript: How to use without reference path?", "body": "<p>For <strong>internal</strong> modules, use a module loader such as <a href=\"http://requirejs.org\" rel=\"nofollow noreferrer\">RequireJS</a> / <a href=\"https://github.com/systemjs/systemjs\" rel=\"nofollow noreferrer\">SystemJS</a> / <a href=\"http://webpack.github.io\" rel=\"nofollow noreferrer\">Webpack</a> / <a href=\"http://browserify.org\" rel=\"nofollow noreferrer\">Browserify</a>, it will save you from having to write <code>/// &lt;reference path=\"...\" /&gt;</code> for <strong>internal</strong> modules and you will no longer need to use <code>module</code> <em>namespaces</em>.<br/>\nIf you use RequireJS, you need to run <code>tsc</code> with the argument <code>-m amd</code>, for Browserify <code>-m commonjs</code>, SystemJS &amp; Webpack support both <code>amd</code> and <code>commonjs</code> styles (and others as well), however there's a simpler solution using <a href=\"https://github.com/Microsoft/TypeScript/wiki/tsconfig.json\" rel=\"nofollow noreferrer\">tsconfig.json</a> files (keep reading) where you don't have to add this <em>argument</em>.</p>\n\n<p>For <strong>external</strong> <em>TypeScript</em> modules; usually <em>d.ts</em> files (Type Definitions for external JS libs, aka <strong><em>Typings</em></strong>), install the <a href=\"https://nodejs.org\" rel=\"nofollow noreferrer\">typings</a> module via <a href=\"https://nodejs.org\" rel=\"nofollow noreferrer\">Node</a>'s package manager - <a href=\"https://www.npmjs.com\" rel=\"nofollow noreferrer\">NPM</a>.<br/>\n<a href=\"https://nodejs.org\" rel=\"nofollow noreferrer\">typings</a> helps you manage the <em>Typings</em> in your project, and combine all the <code>/// &lt;reference path=\"...\" /&gt;</code> lines into a single <code>d.ts</code> file.</p>\n\n<p>For both internal and external modules, you can use a <a href=\"https://github.com/Microsoft/TypeScript/wiki/tsconfig.json\" rel=\"nofollow noreferrer\">tsconfig.json</a> file to eliminate the need for any <code>/// &lt;reference path=\"...\" /&gt;</code> lines.</p>\n\n<p><a href=\"https://confluence.jetbrains.com/display/WI/WebStorm+11+EAP\" rel=\"nofollow noreferrer\">Webstorm 11</a> (currently during development phase, distributed under an early-access-program, EAP) has built-in support for tsconfig.json files.<br/>\nFor Webstorm 10 you can use <a href=\"https://devnet.jetbrains.com/thread/465700;jsessionid=4E17E9ABA28D55378CDB8A43F53A8511\" rel=\"nofollow noreferrer\">this solution</a>.</p>\n\n<p>If you choose not to use <em>tsconfig.json</em> while still using <code>typings</code> to manage your typings, and a module loader such as <em>RequireJS</em>, you would have to add the <code>-m [...]</code> <em>command line option</em>, and include a <strong>single</strong> line of <code>/// &lt;reference path=\"path/typings/something.d.ts\" /&gt;</code> on top of your internal <em>.ts</em> files, this .d.ts file will include all external <em>Typings</em> your project depends on.</p>\n\n<hr>\n\n<h2>tsconfig.json</h2>\n\n<p>Put it in your project's root.<br/>\nIt's content might look something like this:</p>\n\n<pre><code>{\n  \"compilerOptions\": {\n    \"module\": \"commonjs\",\n    \"sourceMap\": true,\n    \"target\": \"es5\",\n    \"experimentalDecorators\": true\n  },\n  \"files\": [\n    \"typings/something.d.ts\",\n    \"main.ts\"\n  ]\n}\n</code></pre>\n\n<p><strong>Note</strong> that you do not have to list out all of your <code>.ts</code> files under the <code>files:</code> key, <code>tsc</code> automatically knows it should include the dependencies (recursively) of any file mentioned under <code>files:</code>.</p>\n\n<hr>\n\n<h2>Webstorm 11</h2>\n\n<p>Config <em>webstorm</em> to use <code>tsconfig.json</code>:<br/><br/>\n<a href=\"https://i.stack.imgur.com/tLGmZ.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/tLGmZ.png\" alt=\"enter image description here\"></a></p>\n\n<hr>\n\n<h2>tl;dr</h2>\n\n<p>If you can, it's best (IMHO) to do the following:</p>\n\n<ul>\n<li>Use a module loader (RequireJS/SystemJS/Browserify/Webpack).</li>\n<li>Manage your d.ts files (<em>typings</em>) with the <code>typings</code> module.</li>\n<li>Wrap it all in a <em>tsconfig.json</em> file (configure <em>webstorm</em> to use it).</li>\n</ul>\n\n<p>After that, you can delete all of your <code>/// &lt;reference path=\"...\" /&gt;</code> lines.</p>\n"}], "owner": {"reputation": 7429, "user_id": 55327, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/fa95348b80c90d47fb6278c45601a818?s=128&d=identicon&r=PG", "display_name": "Hao", "link": "https://stackoverflow.com/users/55327/hao"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 11388, "favorite_count": 4, "answer_count": 1, "score": 16, "last_activity_date": 1474037746, "creation_date": 1440203991, "last_edit_date": 1440272485, "question_id": 32151141, "link": "https://stackoverflow.com/questions/32151141/webstormtypescript-how-to-use-without-reference-path", "title": "WebStorm+Typescript: How to use without reference path?", "body": "<p>In Visual Studio, it's possible to use internal modules without having to include <code>/// &lt;reference path=\"...\" /&gt;</code> tags.<br/>How can one accomplish the same in WebStorm 10?</p>\n\n<p>Another question, how can I get WebStorm to import the typings to a project? WebStorm 10 puts typings in the cache folder.</p>\n"}, {"tags": ["visual-studio", "typescript"], "answers": [{"tags": [], "owner": {"reputation": 25995, "user_id": 5152732, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-eL0xfQom3xQ/AAAAAAAAAAI/AAAAAAAAB1E/j1B2Mcgvt6M/photo.jpg?sz=128", "display_name": "toskv", "link": "https://stackoverflow.com/users/5152732/toskv"}, "is_accepted": false, "score": 0, "last_activity_date": 1440450076, "creation_date": 1440450076, "answer_id": 32191666, "question_id": 32147465, "link": "https://stackoverflow.com/questions/32147465/how-can-i-get-visual-studio-to-refuse-to-compile-if-there-are-typescript-errors/32191666#32191666", "title": "How can I get Visual Studio to refuse to compile if there are Typescript errors?", "body": "<p>Setting the <strong>noEmitOnError</strong> in the project`s <strong>tsconfig.json</strong> file should result in this behaviour.</p>\n"}], "owner": {"reputation": 6745, "user_id": 152796, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/ffffd204ecbbae82a04f5b574d76746b?s=128&d=identicon&r=PG", "display_name": "thedayturns", "link": "https://stackoverflow.com/users/152796/thedayturns"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 185, "favorite_count": 2, "answer_count": 1, "score": 2, "last_activity_date": 1440450076, "creation_date": 1440183063, "question_id": 32147465, "link": "https://stackoverflow.com/questions/32147465/how-can-i-get-visual-studio-to-refuse-to-compile-if-there-are-typescript-errors", "title": "How can I get Visual Studio to refuse to compile if there are Typescript errors?", "body": "<p>When I try to compile a Typescript file with errors, I expect Visual Studio to simply halt the compilation and show me the errors, like it does with every other language.</p>\n\n<p>Instead, it blindly goes ahead and runs the app. This happens even though I've ticked off \"Do not emit outputs if any errors are reported\".</p>\n\n<p>I've noticed if I turn off \"Compile on save,\" then I get this behavior. But then I'm giving up faster compilations! Is there any way to get the best of both worlds? </p>\n"}, {"tags": ["typescript", "typescript1.5"], "comments": [{"owner": {"reputation": 162223, "user_id": 1704166, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/d256baab2fcfd81b0f109d394404fd67?s=128&d=identicon&r=PG", "display_name": "Ryan Cavanaugh", "link": "https://stackoverflow.com/users/1704166/ryan-cavanaugh"}, "edited": false, "score": 2, "creation_date": 1440182143, "post_id": 32146973, "comment_id": 52183765, "body": "Your code isn&#39;t resilient to someone assigning a <code>name</code> property to <code>String.prototype</code>, or <code>person1.name</code> being <code>&quot;&quot;</code> (in which case you&#39;re probably going to see <code>[Object object]</code> or something similarly useless). David Sherret&#39;s answer is very useful in this regard."}], "answers": [{"comments": [{"owner": {"reputation": 3482, "user_id": 271351, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/gtbCX.jpg?s=128&g=1", "display_name": "cjbarth", "link": "https://stackoverflow.com/users/271351/cjbarth"}, "edited": false, "score": 0, "creation_date": 1440182747, "post_id": 32147098, "comment_id": 52184068, "body": "The comment directly answers my question. I don&#39;t know why it was down-voted. This answer could be applicable to other type-casting situations in TypeScript."}], "tags": [], "owner": {"reputation": 120106, "user_id": 1009603, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/spzYW.jpg?s=128&g=1", "display_name": "PSL", "link": "https://stackoverflow.com/users/1009603/psl"}, "is_accepted": false, "score": 0, "last_activity_date": 1440181660, "creation_date": 1440181660, "answer_id": 32147098, "question_id": 32146973, "link": "https://stackoverflow.com/questions/32146973/error-2339-with-and-union-types/32147098#32147098", "title": "Error 2339 With || and Union Types", "body": "<p>You would need to assert the type in your expression, since the operand is of union type. i.e</p>\n\n<pre><code> var personsName: string = (&lt;Person&gt;person1).name || &lt;string&gt;person1;\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 3482, "user_id": 271351, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/gtbCX.jpg?s=128&g=1", "display_name": "cjbarth", "link": "https://stackoverflow.com/users/271351/cjbarth"}, "edited": false, "score": 0, "creation_date": 1440182778, "post_id": 32147150, "comment_id": 52184089, "body": "This answer, while not directly answering my question, answers the question I should have asked. Thanks."}], "tags": [], "owner": {"reputation": 80876, "user_id": 188246, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/bTzLq.jpg?s=128&g=1", "display_name": "David Sherret", "link": "https://stackoverflow.com/users/188246/david-sherret"}, "is_accepted": true, "score": 2, "last_activity_date": 1440185090, "last_edit_date": 1440185090, "creation_date": 1440181861, "answer_id": 32147150, "question_id": 32146973, "link": "https://stackoverflow.com/questions/32146973/error-2339-with-and-union-types/32147150#32147150", "title": "Error 2339 With || and Union Types", "body": "<p>I recommend using a <a href=\"http://blogs.msdn.com/b/typescript/archive/2014/11/18/what-s-new-in-the-typescript-type-system.aspx\" rel=\"nofollow\">type guard</a>:</p>\n\n<pre><code>function showName(person1: Person | string) {\n    var personsName = (typeof person1 === \"string\") ? person1 : person1.name;\n\n    document.write(personsName);\n    document.write('&lt;br /&gt;');\n}\n</code></pre>\n\n<p>Note that this code will throw an error when <code>person1</code> is <code>null || undefined</code>, but so did the original code. There's lots of different ways to handle that so I'll leave it up to you.</p>\n"}], "owner": {"reputation": 3482, "user_id": 271351, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/gtbCX.jpg?s=128&g=1", "display_name": "cjbarth", "link": "https://stackoverflow.com/users/271351/cjbarth"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 153, "favorite_count": 0, "accepted_answer_id": 32147150, "answer_count": 2, "score": 0, "last_activity_date": 1440185090, "creation_date": 1440181252, "question_id": 32146973, "link": "https://stackoverflow.com/questions/32146973/error-2339-with-and-union-types", "title": "Error 2339 With || and Union Types", "body": "<p>I've created a sample block of code that shows a syntax error in TypeScript, but runs fine as JavaScript: <a href=\"http://www.typescriptlang.org/Playground/#src=%09class%20Person%20%7B%0A%09%09name%3A%20string%3B%0A%09%09job%3A%20string%3B%0A%09%7D%0A%09%0A%09var%20person1%3APerson%20%3D%20%7Bname%3A%20&#39;hi&#39;%2C%09job%3A%20&#39;yes&#39;%7D%3B%0A%09var%20name%20%3D%20&#39;bye&#39;%3B%0A%09%0A%09function%20showName(person1%3APerson%20%7C%20string%20)%20%7B%0A%09%09var%20personsName%3A%20string%20%3D%20person1.name%20%7C%7C%20person1%3B%0A%09%09%0A%09%09document.write(personsName)%3B%0A%09%09document.write(&#39;%3Cbr%20%2F%3E&#39;)%3B%0A%09%7D%0A%09%0A%09showName(person1)%3B%0A%09showName(name)%3B%0A\" rel=\"nofollow\">TypeScript Sandbox</a></p>\n\n<p>Basically, when I'm trying to use the <code>||</code> (<code>OR</code>) operator to collaese an object property that may be <code>undefined</code> TypeScript it saying that the property doesn't exist, which I know and is why I'm using <code>||</code>.</p>\n\n<pre><code>class Person {\n    name: string;\n    job: string;\n}\n\nvar person1:Person = {name: 'hi',   job: 'yes'};\nvar name = 'bye';\n\nfunction showName(person1:Person | string ) {\n    var personsName: string = person1.name || person1;\n\n    document.write(personsName);\n    document.write('&lt;br /&gt;');\n}\n\nshowName(person1);\nshowName(name);\n</code></pre>\n\n<p>The output is exactly as I would expect it to be:</p>\n\n<pre><code>hi\nbye\n</code></pre>\n\n<p>However, TypeScript shows a syntax error on person1.name. Why? What is the correct TypeScript way of doing this?</p>\n"}, {"tags": ["typescript", "visual-studio-2015"], "comments": [{"owner": {"reputation": 1619, "user_id": 2283050, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/9f3e3ceb382ab478fa202bb13b39fd46?s=128&d=identicon&r=PG", "display_name": "Zachary Dow", "link": "https://stackoverflow.com/users/2283050/zachary-dow"}, "edited": false, "score": 2, "creation_date": 1440163508, "post_id": 32135247, "comment_id": 52172287, "body": "Honestly, as much as I tried to make a visual studio workflow work for me, it just is not set up for handling typescript compilation well. I&#39;d seriously consider trying Gulp."}, {"owner": {"reputation": 7001, "user_id": 797249, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/89deb6b4afc8e485308f85b79ef44bcc?s=128&d=identicon&r=PG", "display_name": "Artiom", "link": "https://stackoverflow.com/users/797249/artiom"}, "edited": false, "score": 0, "creation_date": 1440168990, "post_id": 32135247, "comment_id": 52176391, "body": "@Roaders could you please set build vervosity to detailed and take a look in output window at executed tsc command?"}, {"owner": {"reputation": 18152, "user_id": 320460, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f01a0f0ee570e81375d7261711cad52b?s=128&d=identicon&r=PG", "display_name": "Elisabeth", "link": "https://stackoverflow.com/users/320460/elisabeth"}, "reply_to_user": {"reputation": 1619, "user_id": 2283050, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/9f3e3ceb382ab478fa202bb13b39fd46?s=128&d=identicon&r=PG", "display_name": "Zachary Dow", "link": "https://stackoverflow.com/users/2283050/zachary-dow"}, "edited": false, "score": 0, "creation_date": 1456908335, "post_id": 32135247, "comment_id": 59157971, "body": "@ZacharyDow ...and TS and VS are both from Microsoft and even then they did an epic fail! What a shame!"}, {"owner": {"reputation": 1619, "user_id": 2283050, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/9f3e3ceb382ab478fa202bb13b39fd46?s=128&d=identicon&r=PG", "display_name": "Zachary Dow", "link": "https://stackoverflow.com/users/2283050/zachary-dow"}, "reply_to_user": {"reputation": 18152, "user_id": 320460, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f01a0f0ee570e81375d7261711cad52b?s=128&d=identicon&r=PG", "display_name": "Elisabeth", "link": "https://stackoverflow.com/users/320460/elisabeth"}, "edited": false, "score": 0, "creation_date": 1456926799, "post_id": 32135247, "comment_id": 59171372, "body": "@Elisabeth To be fair, Typescript is amazing beyond the compilation process. Yeah Microsoft dropped the ball a bit, but you can&#39;t stay mad at them when you have such good tools in place. :)"}, {"owner": {"reputation": 18152, "user_id": 320460, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f01a0f0ee570e81375d7261711cad52b?s=128&d=identicon&r=PG", "display_name": "Elisabeth", "link": "https://stackoverflow.com/users/320460/elisabeth"}, "edited": false, "score": 0, "creation_date": 1456951980, "post_id": 32135247, "comment_id": 59188983, "body": "Well look at atom IDE that offers great TS support!"}, {"owner": {"reputation": 3886, "user_id": 151770, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/bc6adfcfa50a3695878cfa3a089eb2be?s=128&d=identicon&r=PG", "display_name": "Roaders", "link": "https://stackoverflow.com/users/151770/roaders"}, "edited": false, "score": 0, "creation_date": 1456952036, "post_id": 32135247, "comment_id": 59189025, "body": "I use atom at home, don&#39;t have a choice at work."}], "answers": [{"tags": [], "owner": {"reputation": 4160, "user_id": 3499063, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/050eeed49bdb16718e28bca5d1107244?s=128&d=identicon&r=PG&f=1", "display_name": "Lukkha Coder", "link": "https://stackoverflow.com/users/3499063/lukkha-coder"}, "is_accepted": true, "score": 2, "last_activity_date": 1440184480, "creation_date": 1440184480, "answer_id": 32147807, "question_id": 32135247, "link": "https://stackoverflow.com/questions/32135247/how-do-i-make-visual-studio-overwrite-my-js-file-when-doing-a-typescript-build/32147807#32147807", "title": "How do I make Visual Studio overwrite my JS file when doing a Typescript build", "body": "<p>Often times this will happen when there is a compile time error in Typescript and the following options are checked:</p>\n\n<ol>\n<li><code>Compile on save:</code> This will cause the build to be marked as succeeded even when there are compile error in Typescript.</li>\n<li><code>Do not emit outputs if an error are reported:</code> This along with the previous option will make it seem that the build succeeds but the js file is not updated. </li>\n</ol>\n\n<p><a href=\"https://i.stack.imgur.com/aRAiU.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/aRAiU.png\" alt=\"enter image description here\"></a></p>\n"}, {"tags": [], "owner": {"reputation": 18152, "user_id": 320460, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f01a0f0ee570e81375d7261711cad52b?s=128&d=identicon&r=PG", "display_name": "Elisabeth", "link": "https://stackoverflow.com/users/320460/elisabeth"}, "is_accepted": false, "score": 0, "last_activity_date": 1456908432, "creation_date": 1456908432, "answer_id": 35742295, "question_id": 32135247, "link": "https://stackoverflow.com/questions/32135247/how-do-i-make-visual-studio-overwrite-my-js-file-when-doing-a-typescript-build/35742295#35742295", "title": "How do I make Visual Studio overwrite my JS file when doing a Typescript build", "body": "<p>var del = require(gulp-delete);</p>\n\n<p>Just run a gulp del(PathToDelete) before you compile!</p>\n"}], "owner": {"reputation": 3886, "user_id": 151770, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/bc6adfcfa50a3695878cfa3a089eb2be?s=128&d=identicon&r=PG", "display_name": "Roaders", "link": "https://stackoverflow.com/users/151770/roaders"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1619, "favorite_count": 0, "accepted_answer_id": 32147807, "answer_count": 2, "score": 1, "last_activity_date": 1474040178, "creation_date": 1440144014, "question_id": 32135247, "link": "https://stackoverflow.com/questions/32135247/how-do-i-make-visual-studio-overwrite-my-js-file-when-doing-a-typescript-build", "title": "How do I make Visual Studio overwrite my JS file when doing a Typescript build", "body": "<p>I have Visual Studio and am using it to build my typescript project. I have one build.ts file that links to all my other TS files and they are all compiled to one app.js file (with an associated map file).</p>\n\n<p>The build apparently works fine but if the js file is already there it is not updated.\nIf I delete the js file and build it is created no problem, it is only a problem if the js file is already there.\nThe js file is NOT read only.</p>\n\n<p>I have solved this by adding a call to tsc in my prebuild event command line - this works fine. This does not seem ideal though as I have to have my build configuration setup in 2 different places. When I moved to Typescript 1.5 I got all sorts of odd errors as VS was on 1.5 but my build command was on 1.4.</p>\n\n<p>I can live with the workaround but it seems like a fairly major failing by VS that it doesn't actually update my compiled output.</p>\n"}, {"tags": ["enums", "typescript"], "answers": [{"tags": [], "owner": {"reputation": 162223, "user_id": 1704166, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/d256baab2fcfd81b0f109d394404fd67?s=128&d=identicon&r=PG", "display_name": "Ryan Cavanaugh", "link": "https://stackoverflow.com/users/1704166/ryan-cavanaugh"}, "is_accepted": true, "score": 2, "last_activity_date": 1440107840, "creation_date": 1440107840, "answer_id": 32129078, "question_id": 32128734, "link": "https://stackoverflow.com/questions/32128734/declare-enum-with-global-names/32129078#32129078", "title": "Declare enum with global names", "body": "<pre><code>// Version A\nconst enum _MyType {\n    FOO,\n    BAR\n}\nlet FOO = _MyType.FOO;\nlet BAR = _MyType.BAR;\n</code></pre>\n\n<p>or</p>\n\n<pre><code>// Version B (if FOO and BAR come from another file)\ndeclare const enum _MyType {\n    FOO,\n    BAR\n}\ndeclare let FOO: _MyType;\ndeclare let BAR: _MyType;\n</code></pre>\n\n<p>Either way,</p>\n\n<pre><code>function fn(x: _MyType) { /* ... */ }\n\nfn(FOO); // OK\nfn('quack'); // Error\n</code></pre>\n"}], "owner": {"reputation": 8267, "user_id": 315129, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/mSRT4.jpg?s=128&g=1", "display_name": "vbezhenar", "link": "https://stackoverflow.com/users/315129/vbezhenar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 77, "favorite_count": 0, "accepted_answer_id": 32129078, "answer_count": 1, "score": 0, "last_activity_date": 1440107840, "creation_date": 1440106245, "question_id": 32128734, "link": "https://stackoverflow.com/questions/32128734/declare-enum-with-global-names", "title": "Declare enum with global names", "body": "<p>I have a Javascript function which accepts a number. Also there are some top-level constants:</p>\n\n<pre><code>var FOO = 1;\nvar BAR = 2;\n</code></pre>\n\n<p>and it only makes sense to call this function using one of these constants.</p>\n\n<p>I want to create a type-safe interface for this function using enum:</p>\n\n<pre><code>declare enum MyType {\n    FOO,\n    BAR\n}\n\ninterface MyClass {\n    process(MyType type);\n}\n</code></pre>\n\n<p>but this code outputs <code>MyType.FOO</code> in js file. I need it to output just <code>FOO</code> but still be type-safe in typescript code. Is it possible?</p>\n"}, {"tags": ["angularjs", "typescript"], "answers": [{"tags": [], "owner": {"reputation": 80876, "user_id": 188246, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/bTzLq.jpg?s=128&g=1", "display_name": "David Sherret", "link": "https://stackoverflow.com/users/188246/david-sherret"}, "is_accepted": false, "score": 4, "last_activity_date": 1440099385, "creation_date": 1440099385, "answer_id": 32126883, "question_id": 32125207, "link": "https://stackoverflow.com/questions/32125207/what-is-the-purpose-of-using-typescript-interfaces-for-angular-services-for-type/32126883#32126883", "title": "What is the purpose of using TypeScript interfaces for angular services for type information", "body": "<blockquote>\n  <p>...unless you have different implementations of a service that can be used but have a common base. Or when you want to mock services in unit tests instead of using them directly.</p>\n</blockquote>\n\n<p>That's exactly why. There is no performance benefit to using interfaces as interfaces do not show up in the transpiled JavaScript.</p>\n\n<p>You can use the service class for type information if you'd like and that's what's done in the angular <a href=\"https://angular.io/docs/js/latest/guide/displaying-data.html\" rel=\"nofollow\">Step by Step Guide</a>\u2014see <em>Create a class for the array property and inject into component</em>.</p>\n"}, {"comments": [{"owner": {"reputation": 120106, "user_id": 1009603, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/spzYW.jpg?s=128&g=1", "display_name": "PSL", "link": "https://stackoverflow.com/users/1009603/psl"}, "edited": false, "score": 0, "creation_date": 1440184949, "post_id": 32127498, "comment_id": 52185159, "body": "I thought this was spot on!!"}, {"owner": {"reputation": 22725, "user_id": 263457, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/46d17e48edfc5cb3668245151783609e?s=128&d=identicon&r=PG", "display_name": "Robert Baker", "link": "https://stackoverflow.com/users/263457/robert-baker"}, "edited": false, "score": 1, "creation_date": 1440188391, "post_id": 32127498, "comment_id": 52186691, "body": "It is a typescript question, because I want to know what the ts compiler will do in both cases. Especially when it comes to ES6 importing a class just for type info."}], "tags": [], "owner": {"reputation": 5844, "user_id": 1075401, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/b38e877fe17599d7eec56bfcc52eb63d?s=128&d=identicon&r=PG", "display_name": "gilamran", "link": "https://stackoverflow.com/users/1075401/gilamran"}, "is_accepted": true, "score": 6, "last_activity_date": 1440442456, "last_edit_date": 1440442456, "creation_date": 1440101589, "answer_id": 32127498, "question_id": 32125207, "link": "https://stackoverflow.com/questions/32125207/what-is-the-purpose-of-using-typescript-interfaces-for-angular-services-for-type/32127498#32127498", "title": "What is the purpose of using TypeScript interfaces for angular services for type information", "body": "<p>This is not a TypeScript question, this is a \"What are interfaces good for\"\n(In short) The answer is: A client should not \"know\" what is the real implementation of a requested service.\nYour UiService today is enough for your needs, but one day you might have another implementation for it, or even you would like to mock it in your tests.</p>\n\n<p>Another case would be, that UiService was extended by ProUiService all over your system, you would have to go all over your system and change the type of your injects while it is not really needed.</p>\n\n<p>As said before: A client should not know what is the real implementation of a requested service.</p>\n\n<p><strong>Edit (Answering the edit):</strong></p>\n\n<p>The TypeScript compiler will does not \"know\" where to pick these types Class/Interface you will have to use tsconfig.json or a reference (comment) in your code to let TypeScript understand where this declaration is defined. It does not matter if it's a type of a class.</p>\n\n<p>It is important to understand that when you import (ES6 style) a class and never really use it (Only use it as a type definition) it will get removed by the compiler, because types does not really exist in JavaScript.\n<strong>BUT</strong>, if you use it. For example:</p>\n\n<pre><code>var ui = new UiService(); // This will generate a javascript code\n</code></pre>\n\n<p>The compiler will not remove the import statement.</p>\n"}], "owner": {"reputation": 22725, "user_id": 263457, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/46d17e48edfc5cb3668245151783609e?s=128&d=identicon&r=PG", "display_name": "Robert Baker", "link": "https://stackoverflow.com/users/263457/robert-baker"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 619, "favorite_count": 0, "accepted_answer_id": 32127498, "answer_count": 2, "score": 1, "last_activity_date": 1440442456, "creation_date": 1440093568, "last_edit_date": 1440193662, "question_id": 32125207, "link": "https://stackoverflow.com/questions/32125207/what-is-the-purpose-of-using-typescript-interfaces-for-angular-services-for-type", "title": "What is the purpose of using TypeScript interfaces for angular services for type information", "body": "<p>What are the advantages of creating an interface for a angular service vs exporting the service class and using that for type information instead?</p>\n\n<p>Example:</p>\n\n<pre><code>class Dashboard {\n    constructor(ui: IUiService){}\n}\n</code></pre>\n\n<p>vs</p>\n\n<pre><code>class Dashboard {\n    constructor(ui: UiService){}\n}\n</code></pre>\n\n<p>Is there a performance benefit? What happens if I just use the service class for type information?</p>\n\n<p>It seems to be additional work with no benefit unless you have different implementations of a service that can be used but have a common base. Or when you want to mock services in unit tests instead of using them directly.</p>\n\n<p>Edit: I'm interested to know what the typescript compiler will do for imports that are just used for type info. Will it invoke a constructor or add to the require statement (ES6)? Would it new up an instance of the class?</p>\n"}, {"tags": ["javascript", "jquery", "xml", "dom", "typescript"], "comments": [{"owner": {"reputation": 1619, "user_id": 2283050, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/9f3e3ceb382ab478fa202bb13b39fd46?s=128&d=identicon&r=PG", "display_name": "Zachary Dow", "link": "https://stackoverflow.com/users/2283050/zachary-dow"}, "edited": false, "score": 0, "creation_date": 1440092321, "post_id": 32123817, "comment_id": 52141258, "body": "Are you getting this xml/html from a webservice?"}, {"owner": {"reputation": 478, "user_id": 977084, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6c4fb248778bb5045a7f42cb69fb17d0?s=128&d=identicon&r=PG", "display_name": "matan7890", "link": "https://stackoverflow.com/users/977084/matan7890"}, "reply_to_user": {"reputation": 1619, "user_id": 2283050, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/9f3e3ceb382ab478fa202bb13b39fd46?s=128&d=identicon&r=PG", "display_name": "Zachary Dow", "link": "https://stackoverflow.com/users/2283050/zachary-dow"}, "edited": false, "score": 0, "creation_date": 1440092364, "post_id": 32123817, "comment_id": 52141280, "body": "I&#39;m getting it as a string, does it matter how?"}, {"owner": {"reputation": 1619, "user_id": 2283050, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/9f3e3ceb382ab478fa202bb13b39fd46?s=128&d=identicon&r=PG", "display_name": "Zachary Dow", "link": "https://stackoverflow.com/users/2283050/zachary-dow"}, "edited": false, "score": 0, "creation_date": 1440092456, "post_id": 32123817, "comment_id": 52141339, "body": "Kind of. If it&#39;s off of a webservice, you could potentially add a header to your response that says if it&#39;s xml or html, like it&#39;s Content-Type for example. That way you can know without having to pollute your data."}, {"owner": {"reputation": 478, "user_id": 977084, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6c4fb248778bb5045a7f42cb69fb17d0?s=128&d=identicon&r=PG", "display_name": "matan7890", "link": "https://stackoverflow.com/users/977084/matan7890"}, "reply_to_user": {"reputation": 1619, "user_id": 2283050, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/9f3e3ceb382ab478fa202bb13b39fd46?s=128&d=identicon&r=PG", "display_name": "Zachary Dow", "link": "https://stackoverflow.com/users/2283050/zachary-dow"}, "edited": false, "score": 0, "creation_date": 1440092642, "post_id": 32123817, "comment_id": 52141446, "body": "So the answer is no, I&#39;m getting it as a literal string."}, {"owner": {"reputation": 1619, "user_id": 2283050, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/9f3e3ceb382ab478fa202bb13b39fd46?s=128&d=identicon&r=PG", "display_name": "Zachary Dow", "link": "https://stackoverflow.com/users/2283050/zachary-dow"}, "edited": false, "score": 0, "creation_date": 1440092701, "post_id": 32123817, "comment_id": 52141490, "body": "You can&#39;t control what you are getting as this string? Is it from a third party source?"}, {"owner": {"reputation": 478, "user_id": 977084, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6c4fb248778bb5045a7f42cb69fb17d0?s=128&d=identicon&r=PG", "display_name": "matan7890", "link": "https://stackoverflow.com/users/977084/matan7890"}, "reply_to_user": {"reputation": 1619, "user_id": 2283050, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/9f3e3ceb382ab478fa202bb13b39fd46?s=128&d=identicon&r=PG", "display_name": "Zachary Dow", "link": "https://stackoverflow.com/users/2283050/zachary-dow"}, "edited": false, "score": 0, "creation_date": 1440092779, "post_id": 32123817, "comment_id": 52141540, "body": "Yes, this is from a third party source. This is the reason I need to determine in the first place what kind of parsing I need to do."}], "owner": {"reputation": 478, "user_id": 977084, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6c4fb248778bb5045a7f42cb69fb17d0?s=128&d=identicon&r=PG", "display_name": "matan7890", "link": "https://stackoverflow.com/users/977084/matan7890"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 434, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1440088980, "creation_date": 1440088980, "question_id": 32123817, "link": "https://stackoverflow.com/questions/32123817/how-to-differentiate-between-xmldocument-documentelement-and-htmldocument-docume", "title": "How to differentiate between XMLDocument.documentElement and HTMLDocument.documentElement in TypeScript", "body": "<p>In my code I'm parsing a few html strings and xml strings in order to manipulate their DOM.</p>\n\n<p>Before I'm parsing them, I differentiate between the types of the strings by searching for an <code>&lt;?xml ... ?&gt;</code> tag in the beginning of them, so I know if I should parse them using <code>parseAsHTML</code> or <code>$.parseXML</code> functions. In order to manipulate their DOM tree, I am forwarding to the next functions (which manipulates them) their <code>documentElement</code> attributes (or \"body\" in the case of html strings, which gives the same). Here comes the problem. </p>\n\n<p>It seems that for both <code>HTMLDocument</code> objects and <code>XMLDocument</code> objects the <code>documentElement</code> is instance of the type <code>HTMLElement</code>. Farthermore, the <code>documentElement</code> does not have the <code>&lt;?xml ... ?&gt;</code> tag in its DOM tree, even though it came from an xml string. That means that if I need to check later what type of DOM tree I have, I won't be able to do so because all my trees are from the type of <code>HTMLElement</code>. The html trees are also not full trees so i can't search for  tags or something like that.</p>\n\n<p>I know I can just pass the <code>Document</code>objects themselves, but it will make me change tens of functions that already gets <code>Element</code> so I would not like to do so. So my question is how can I distinguish between the elements? Or is there a way to make some kind of <code>XMLEntity</code> that will have of the <code>HTMLEntity</code> properties out of <code>XMLDocument</code> so I'll be able to make the difference?</p>\n\n<p>Thanks for the help!</p>\n\n<p>If anything is not clear, you are free to ask and I'll try to explain the situation better.</p>\n"}, {"tags": ["node.js", "typescript"], "answers": [{"comments": [{"owner": {"reputation": 2360, "user_id": 727961, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/417d7352ce1d9543ecb451d3e1cbe3fa?s=128&d=identicon&r=PG", "display_name": "Cuthbert", "link": "https://stackoverflow.com/users/727961/cuthbert"}, "edited": false, "score": 0, "creation_date": 1440165376, "post_id": 32127349, "comment_id": 52173663, "body": "Is there a way to combine all definitions into a single file? I&#39;ve exposed all of the classes through a single module so I would only need to do use one <code>import classes = require(&#39;classes&#39;);</code> in any file."}, {"owner": {"reputation": 5844, "user_id": 1075401, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/b38e877fe17599d7eec56bfcc52eb63d?s=128&d=identicon&r=PG", "display_name": "gilamran", "link": "https://stackoverflow.com/users/1075401/gilamran"}, "reply_to_user": {"reputation": 2360, "user_id": 727961, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/417d7352ce1d9543ecb451d3e1cbe3fa?s=128&d=identicon&r=PG", "display_name": "Cuthbert", "link": "https://stackoverflow.com/users/727961/cuthbert"}, "edited": false, "score": 0, "creation_date": 1440442906, "post_id": 32127349, "comment_id": 52264671, "body": "Yes, add <b>--out lib.js</b> to your compiler options. This will create one js file lib.js and one declarations file lib.d.ts"}], "tags": [], "owner": {"reputation": 5844, "user_id": 1075401, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/b38e877fe17599d7eec56bfcc52eb63d?s=128&d=identicon&r=PG", "display_name": "gilamran", "link": "https://stackoverflow.com/users/1075401/gilamran"}, "is_accepted": false, "score": 0, "last_activity_date": 1440101093, "creation_date": 1440101093, "answer_id": 32127349, "question_id": 32123424, "link": "https://stackoverflow.com/questions/32123424/custom-class-libraries-in-typescript/32127349#32127349", "title": "Custom class libraries in Typescript", "body": "<p>All you have to do is add --declaration to your compiler options and it will create the corresponding d.ts file/s for you. No need to do that manually.</p>\n"}], "owner": {"reputation": 2360, "user_id": 727961, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/417d7352ce1d9543ecb451d3e1cbe3fa?s=128&d=identicon&r=PG", "display_name": "Cuthbert", "link": "https://stackoverflow.com/users/727961/cuthbert"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 722, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1440101093, "creation_date": 1440087688, "question_id": 32123424, "link": "https://stackoverflow.com/questions/32123424/custom-class-libraries-in-typescript", "title": "Custom class libraries in Typescript", "body": "<p>I'm trying to figure out the best way to write a class library in Typescript and deploy it to NPM with a definitions file. </p>\n\n<p>The classes in the library are essentially models that are shared across our various RESTful services. Some of them have a few utility functions.</p>\n\n<p>In my current process, I've created a single module where all of the classes can be accessed from (index.js). And then I manually maintain a .d.ts that has all of the class and interface definitions. Any time I make a change to the actual implementation, I must remember to also update the definition file. </p>\n\n<p>When I deploy to our private NPM server, I only deploy the the transpiled .js files and the definitions file. Services that install my npm package just need to add a single <code>/// &lt;reference path=\"...\" /&gt;</code> to their references file. </p>\n\n<p>This works; it's just cumbersome and error-prone. Is there a decent/easy way for me to generate a single definitions file automatically from all of the classes I have? If not, is there something different I can/should do to share common Typescript modules across projects? </p>\n"}, {"tags": ["typescript"], "answers": [{"tags": [], "owner": {"reputation": 80876, "user_id": 188246, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/bTzLq.jpg?s=128&g=1", "display_name": "David Sherret", "link": "https://stackoverflow.com/users/188246/david-sherret"}, "is_accepted": true, "score": 0, "last_activity_date": 1440189468, "last_edit_date": 1440189468, "creation_date": 1440087885, "answer_id": 32123485, "question_id": 32119817, "link": "https://stackoverflow.com/questions/32119817/coroutine-support-in-typescript/32123485#32123485", "title": "Coroutine support in Typescript", "body": "<p>It's <a href=\"https://github.com/Microsoft/TypeScript/issues/3605\" rel=\"nofollow\">not supported</a> yet, but will arrive in <a href=\"https://github.com/Microsoft/TypeScript/wiki/Roadmap\" rel=\"nofollow\">TypeScript 1.6</a>.</p>\n\n<p>Specifically:\n<a href=\"https://github.com/Microsoft/TypeScript/issues/2873\" rel=\"nofollow\">https://github.com/Microsoft/TypeScript/issues/2873</a></p>\n"}], "owner": {"reputation": 5, "user_id": 5158601, "user_type": "registered", "profile_image": "https://graph.facebook.com/10153049487783733/picture?type=large", "display_name": "Sean Hogg", "link": "https://stackoverflow.com/users/5158601/sean-hogg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1782, "favorite_count": 0, "accepted_answer_id": 32123485, "answer_count": 1, "score": 0, "last_activity_date": 1440189468, "creation_date": 1440077847, "question_id": 32119817, "link": "https://stackoverflow.com/questions/32119817/coroutine-support-in-typescript", "title": "Coroutine support in Typescript", "body": "<p>Does Typescript support Coroutines (ECMAScript 6)? I've tried something like:</p>\n\n<p><strong>function*(){}</strong></p>\n\n<p>However, typescript won't compile.</p>\n\n<p>Thanks</p>\n"}, {"tags": ["typescript", "visual-studio-2015"], "answers": [{"comments": [{"owner": {"reputation": 645, "user_id": 2393079, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/2ff00569d3bffede6e19fc761eaf7de3?s=128&d=identicon&r=PG", "display_name": "Jon Preece", "link": "https://stackoverflow.com/users/2393079/jon-preece"}, "edited": false, "score": 0, "creation_date": 1440071653, "post_id": 32116512, "comment_id": 52127500, "body": "I would highly recommend this approach to people getting started with TypeScript.  I don&#39;t commit js files to source control, and just run a task during the release build, and of course set to &quot;Copy To Output Directory&quot; option to &quot;Do Not Copy&quot; on each of my TS files so they don&#39;t get deployed."}, {"owner": {"reputation": 24448, "user_id": 150967, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/91e55968cae0db7346488a42abc42f85?s=128&d=identicon&r=PG", "display_name": "gsharp", "link": "https://stackoverflow.com/users/150967/gsharp"}, "edited": false, "score": 0, "creation_date": 1440400363, "post_id": 32116512, "comment_id": 52238546, "body": "ok thanks for the info. I don&#39;t know it just feelsfeels unnaturally strange to me not having them in the project. (You could say the same about less/css however they are included in the project..)"}], "tags": [], "owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "is_accepted": true, "score": 5, "last_activity_date": 1440068569, "creation_date": 1440068569, "answer_id": 32116512, "question_id": 32116305, "link": "https://stackoverflow.com/questions/32116305/generated-js-from-ts-in-visual-studio-2015/32116512#32116512", "title": "Generated *.js from *.ts in Visual Studio 2015", "body": "<p>This is by design - the JavaScript file is a build artefact, just like a DLL.</p>\n\n<p>The idea is that you check in your TypeScript code and allow the build server to create your JavaScript files. While you may be running in \"Debug\" mode, the build server can generate them in \"Release\" mode, which may have more optimisations enabled.</p>\n"}, {"tags": [], "owner": {"reputation": 645, "user_id": 2393079, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/2ff00569d3bffede6e19fc761eaf7de3?s=128&d=identicon&r=PG", "display_name": "Jon Preece", "link": "https://stackoverflow.com/users/2393079/jon-preece"}, "is_accepted": false, "score": 3, "last_activity_date": 1440068618, "creation_date": 1440068618, "answer_id": 32116526, "question_id": 32116305, "link": "https://stackoverflow.com/questions/32116305/generated-js-from-ts-in-visual-studio-2015/32116526#32116526", "title": "Generated *.js from *.ts in Visual Studio 2015", "body": "<p>I don't know if this is deliberate or not.  </p>\n\n<p>If you want to include the JavaScript files in your project, you need to edit the project file manually.  Open it up in Notepad (or your favourite text editor) and do the following;</p>\n\n<ol>\n<li>Look for</li>\n</ol>\n\n<p><code>&lt;Content Include=\"Scripts\\yourfile.ts\" /&gt;</code></p>\n\n<ol start=\"2\">\n<li>Change to</li>\n</ol>\n\n<p><code>&lt;Content Include=\"Scripts\\yourfile.js\"&gt;\n    &lt;DependentUpon&gt;yourfile.ts&lt;/DependentUpon&gt;\n &lt;/Content&gt;\n</code></p>\n\n<p>The JavaScript file should now get pulled in. </p>\n\n<p>You'll want this is you are using Visual Studio to publish your project to deployment.  </p>\n"}, {"tags": [], "owner": {"reputation": 25995, "user_id": 5152732, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-eL0xfQom3xQ/AAAAAAAAAAI/AAAAAAAAB1E/j1B2Mcgvt6M/photo.jpg?sz=128", "display_name": "toskv", "link": "https://stackoverflow.com/users/5152732/toskv"}, "is_accepted": false, "score": 0, "last_activity_date": 1440189075, "creation_date": 1440189075, "answer_id": 32148819, "question_id": 32116305, "link": "https://stackoverflow.com/questions/32116305/generated-js-from-ts-in-visual-studio-2015/32148819#32148819", "title": "Generated *.js from *.ts in Visual Studio 2015", "body": "<p>If you want to change the output folder of the .js file(s) consider adding a <strong>tsconf.json</strong> file to your source folder.\nThat way you can configure where the outputed .js file(s) ends up.</p>\n\n<p>Eg:</p>\n\n<p><code>\n{\n    \"compilerOptions\": {\n        \"target\": \"es5\",\n        \"out\": \"www/scripts/appBundle.js\",\n        \"sourceMap\": true,\n        \"removeComments\": true,\n        \"sourceRoot\": \"/\"\n    }\n}\n</code></p>\n\n<p>The documentation for <strong>tsconfig.json</strong> can be found on github at this <a href=\"https://github.com/Microsoft/TypeScript/wiki/tsconfig.json\" rel=\"nofollow\">page</a>.</p>\n"}], "owner": {"reputation": 24448, "user_id": 150967, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/91e55968cae0db7346488a42abc42f85?s=128&d=identicon&r=PG", "display_name": "gsharp", "link": "https://stackoverflow.com/users/150967/gsharp"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 6672, "favorite_count": 0, "accepted_answer_id": 32116512, "answer_count": 3, "score": 4, "last_activity_date": 1440189075, "creation_date": 1440067950, "question_id": 32116305, "link": "https://stackoverflow.com/questions/32116305/generated-js-from-ts-in-visual-studio-2015", "title": "Generated *.js from *.ts in Visual Studio 2015", "body": "<p>When I add a *.ts file to Visual Studio 2015 and this get compiled, the *.js file isn't a code behind file of the *.ts. It just resides in the folder and it's not part of the visual studio project.</p>\n\n<p>Is that by design or did I break something in my project?</p>\n\n<p>If it is by design, what is the motivation behind? (If i want to have a look at the file i have to show hidden files and eventually hit the refresh button... )</p>\n"}, {"tags": ["typescript", "visual-studio-2015", "typescript1.5"], "answers": [{"tags": [], "owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "is_accepted": true, "score": 13, "last_activity_date": 1440069409, "last_edit_date": 1440069409, "creation_date": 1440068790, "answer_id": 32116589, "question_id": 32115328, "link": "https://stackoverflow.com/questions/32115328/type-canvasrenderingcontext2d-webglrenderingcontext-is-not-assignable-to-typ/32116589#32116589", "title": "Type &#39;CanvasRenderingContext2D | WebGLRenderingContext&#39; is not assignable to type &#39;CanvasRenderingContext2D&#39;", "body": "<p>From the error message, the return type of <code>getContext</code> appears to be a union type, which means it is either one of <code>CanvasRenderingContext2D</code> or <code>WebGLRenderingContext</code>.</p>\n\n<p>The compiler cannot tell which, so you need to help it out:</p>\n\n<pre><code>var ctx = &lt;CanvasRenderingContext2D&gt; canvas.getContext(\"2d\");\n</code></pre>\n\n<p>However, if I try this with the latest version of everything, this works just fine:</p>\n\n<pre><code>var canvas = &lt;HTMLCanvasElement&gt; $('#example').find('canvas').get(0);\nvar ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n</code></pre>\n\n<p>So it looks like something isn't quite right.</p>\n\n<p>The current definition of <code>getContext</code> has a specialized signature for the value \"2d\" that should give you back a <code>CanvasRenderingContext2D</code>. Here are the three signatures...</p>\n\n<ol>\n<li>\"2d\" : <code>CanvasRenderingContext2D</code></li>\n<li>\"experimental-webgl\" : <code>WebGLRenderingContext</code></li>\n<li>other <code>string</code> : <code>CanvasRenderingContext2D | WebGLRenderingContext</code></li>\n</ol>\n\n<p>It should only give you back the union type if it doesn't recognise the string being passed in.</p>\n\n<p>If your auto-completion doesn't suggest these three overloads when you type the <code>(</code> after <code>getContext</code>, that may indicate a problem.</p>\n\n<p><a href=\"https://i.stack.imgur.com/kqa1a.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/kqa1a.png\" alt=\"Auto-Completion for getContext with 2d argument\"></a></p>\n"}], "owner": {"reputation": 11724, "user_id": 1981050, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/MimfZ.png?s=128&g=1", "display_name": "Matthew James Davis", "link": "https://stackoverflow.com/users/1981050/matthew-james-davis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 8382, "favorite_count": 0, "accepted_answer_id": 32116589, "answer_count": 1, "score": 5, "last_activity_date": 1440069409, "creation_date": 1440065141, "question_id": 32115328, "link": "https://stackoverflow.com/questions/32115328/type-canvasrenderingcontext2d-webglrenderingcontext-is-not-assignable-to-typ", "title": "Type &#39;CanvasRenderingContext2D | WebGLRenderingContext&#39; is not assignable to type &#39;CanvasRenderingContext2D&#39;", "body": "<p>I have upgraded to Visual Studio 2015 Community with Typescript 1.5 Beta. I am getting the following error.</p>\n\n<blockquote>\n  <p>Type 'CanvasRenderingContext2D | WebGLRenderingContext' is not\n  assignable to type 'CanvasRenderingContext2D'</p>\n</blockquote>\n\n<p>This is happening on the following line</p>\n\n<pre><code>var canvas: HTMLCanvasElement = $(element).find('canvas').get(0);\nvar ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n</code></pre>\n\n<p>I have set TypeScript tools version to both 1.4 and 1.5 and get the same error.</p>\n"}, {"tags": ["visual-studio", "requirejs", "typescript"], "answers": [{"tags": [], "owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "is_accepted": true, "score": 1, "last_activity_date": 1440069516, "creation_date": 1440069516, "answer_id": 32116840, "question_id": 32115314, "link": "https://stackoverflow.com/questions/32115314/typescript-requirejs-and-custom-requirejs-module-paths/32116840#32116840", "title": "TypeScript, RequireJS and custom RequireJS module paths", "body": "<p>You need to add the <a href=\"https://github.com/borisyankov/DefinitelyTyped/tree/master/knockout\" rel=\"nofollow\">type definition</a> for Knockout:</p>\n\n<p>This will provide type information for Knockout and also solve the import error you are seeing.</p>\n\n<p>Also available via NuGet (other package managers are available)!</p>\n"}], "owner": {"reputation": 38542, "user_id": 26414, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/fac42e3f137bfe0f34b8493c41d28f9e?s=128&d=identicon&r=PG", "display_name": "Neil Barnwell", "link": "https://stackoverflow.com/users/26414/neil-barnwell"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 248, "favorite_count": 0, "accepted_answer_id": 32116840, "answer_count": 1, "score": 0, "last_activity_date": 1440069516, "creation_date": 1440065106, "question_id": 32115314, "link": "https://stackoverflow.com/questions/32115314/typescript-requirejs-and-custom-requirejs-module-paths", "title": "TypeScript, RequireJS and custom RequireJS module paths", "body": "<p>I'm using TypeScript in VS2015, and trying to import the knockout module in some other module. Knockout is installed to a path other than \"/knockout\", in fact, all my \"libraries\" are installed to \"/app/lib\". As a result of the folder names not necessarily matching the module names, I've defined the following in my <code>main.ts</code>:</p>\n\n<pre><code>requirejs.config({\n    baseUrl: \"/app\",\n    paths: {\n        \"text\"       : \"lib/requirejs-text/text\",\n        \"durandal\"   : \"lib/durandal/js\",\n        \"plugins\"    : \"lib/durandal/js/plugins\",\n        \"transitions\": \"lib/durandal/js/transitions\",\n        \"knockout\"   : \"lib/knockout.js/knockout\",\n        \"jquery\"     : \"lib/jquery/jquery\",\n        \"bootstrap\"  : \"lib/bootstrap-sass-official/javascript/bootstrap\"\n    }\n});\n</code></pre>\n\n<p>So my app at runtime can find knockout using just <code>var ko = require(\"knockout\")</code>.</p>\n\n<p>However, at design time in visual studio, I get a \"red squiggly\" under my <code>require()</code> call:</p>\n\n<p><a href=\"https://i.stack.imgur.com/gs52u.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/gs52u.png\" alt=\"enter image description here\"></a></p>\n\n<p>I believe this is because VS is trying to use paths rather than my custom path configuration to look for Knockout. How then, can I tell VS about my custom path configuration so this works? At the moment the generated JavaScript is:</p>\n\n<pre><code>var receiveDeliveryViewModel = (function () {\n    function receiveDeliveryViewModel() {\n        this.deliveryReference = (\"\");\n    }\n    return receiveDeliveryViewModel;\n})();\n</code></pre>\n\n<p>Which as you can see does not reference Knockout.js.</p>\n\n<p>Many thanks in advance.</p>\n"}, {"tags": ["javascript", "ajax", "angularjs", "typescript"], "answers": [{"comments": [{"owner": {"reputation": 2946, "user_id": 2159158, "user_type": "registered", "accept_rate": 40, "profile_image": "https://i.stack.imgur.com/y2XjU.png?s=128&g=1", "display_name": "d-_-b", "link": "https://stackoverflow.com/users/2159158/d-b"}, "edited": false, "score": 0, "creation_date": 1440134876, "post_id": 32114655, "comment_id": 52156412, "body": "The added is my actual polling method that polls server every 1 sec to check if requested zip file has already been created and is working fine. My question here is why the method behaves differently with and without &quot;return&quot; right before this.$timeout(continuation, 1000);  Could you help me understand on this?"}, {"owner": {"reputation": 2946, "user_id": 2159158, "user_type": "registered", "accept_rate": 40, "profile_image": "https://i.stack.imgur.com/y2XjU.png?s=128&g=1", "display_name": "d-_-b", "link": "https://stackoverflow.com/users/2159158/d-b"}, "edited": false, "score": 0, "creation_date": 1440238001, "post_id": 32114655, "comment_id": 52197946, "body": "Actually what I wanted to know is that how the polling method behaves when with and without &quot;return&quot; right before &quot;this.$timeout(continuation, 1000);&quot; ."}, {"owner": {"reputation": 2200, "user_id": 2887713, "user_type": "registered", "accept_rate": 25, "profile_image": "https://graph.facebook.com/627478899/picture?type=large", "display_name": "Steve Staple", "link": "https://stackoverflow.com/users/2887713/steve-staple"}, "edited": false, "score": 0, "creation_date": 1548255710, "post_id": 32114655, "comment_id": 95478180, "body": "@basarat I like that, but what is the purpose of the last line: continuation().then((/*definitely good*/));"}], "tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": false, "score": 6, "last_activity_date": 1440144232, "last_edit_date": 1440144232, "creation_date": 1440063277, "answer_id": 32114655, "question_id": 32113876, "link": "https://stackoverflow.com/questions/32113876/whats-the-bestright-way-to-write-a-polling-method-with-typescript-angularj/32114655#32114655", "title": "What&#39;s the best(right) way to write a polling method (with Typescript &amp; AngularJS)?", "body": "<p>Basically abstract the methods out as shown below: </p>\n\n<pre><code>let poll = () =&gt; this.apiRequest.downloadRequest(params,ApiUrl.URL_FOR_DOWNLOAD_REQUEST)\n\nlet continuation = () =&gt; poll().then((/*something*/)=&gt; {\n /*if still bad*/ return continuation();\n /*else */ return good;\n})\n\ncontinuation().then((/*definitely good*/));\n</code></pre>\n\n<h1>Update</h1>\n\n<p>As requested in the comment below: </p>\n\n<blockquote>\n  <p>return this.$timeout(continuation, 1000);</p>\n</blockquote>\n\n<p>This is needed to get angular to kick off a digest cycle.</p>\n"}], "owner": {"reputation": 2946, "user_id": 2159158, "user_type": "registered", "accept_rate": 40, "profile_image": "https://i.stack.imgur.com/y2XjU.png?s=128&g=1", "display_name": "d-_-b", "link": "https://stackoverflow.com/users/2159158/d-b"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2456, "favorite_count": 1, "answer_count": 1, "score": 4, "last_activity_date": 1440144232, "creation_date": 1440061089, "last_edit_date": 1440134240, "question_id": 32113876, "link": "https://stackoverflow.com/questions/32113876/whats-the-bestright-way-to-write-a-polling-method-with-typescript-angularj", "title": "What&#39;s the best(right) way to write a polling method (with Typescript &amp; AngularJS)?", "body": "<p>I am trying to write a polling method that polls a server periodically to check whether a zip file has already been created or not.</p>\n\n<p>What I want to accomplish are the following:</p>\n\n<ol>\n<li>Calls(ajax) an API that creates a zip file on server </li>\n<li>Calls(ajax) another API that checks if the zip file has already been created (polling method)</li>\n<li>Some subsequent process</li>\n</ol>\n\n<p>Here is my code snippet \u2193</p>\n\n<pre><code>var success: boolean = false;\n//1. requests a server to create a zip file\nthis.apiRequest.downloadRequest(params,ApiUrl.URL_FOR_DOWNLOAD_REQUEST)\n.then((resObj) =&gt; {\n       var apiRes: IDownloadService = resObj.data;\n       if (apiRes.status[0].statusCode == \"000\") {\n            success = true;\n       } else {\n            //Error\n       }\n}).then(() =&gt; {\n       if (success) {\n         //2. polls the server to check if the zip file is ready\n         &lt;- Polling method\u2193 -&gt;\n         this.polling(params).then((zipUrl) =&gt; {\n                    console.log(zipUrl); //always logs zipUrl\n                    //some subsequent process...\n         });\n       }\n});\n</code></pre>\n\n<p>Could anyone give some examples of polling method that would work in this case?</p>\n\n<p>Added:</p>\n\n<pre><code>private polling(params: any): ng.IPromise&lt;any&gt; {\n            var poller = () =&gt; this.apiRequest.polling(params, ApiUrl.URL_FOR_POLLING);\n            var continuation = () =&gt; poller().then((resObj) =&gt; {\n                var apiRes: IDownloadService = resObj.data;\n                if (apiRes.zipFilePath == \"\") {\n                    return this.$timeout(continuation, 1000);\n                } else {\n                    return apiRes.zipFilePath;\n                }\n            })\n            var result: ng.IPromise&lt;any&gt; = continuation();\n            return result;          \n        }\n</code></pre>\n"}, {"tags": ["angularjs", "typescript"], "comments": [{"owner": {"reputation": 2847, "user_id": 2760557, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/259dfbcc7f03ebddcbe070f8fc9115f7?s=128&d=identicon&r=PG&f=1", "display_name": "Gustav", "link": "https://stackoverflow.com/users/2760557/gustav"}, "edited": false, "score": 0, "creation_date": 1440060580, "post_id": 32112911, "comment_id": 52120199, "body": "Are you adding the js-files to the html? Are you adding the controller to the module?"}, {"owner": {"reputation": 45, "user_id": 1240582, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/04ea67f2af7ebf1c424839d52a3ba93e?s=128&d=identicon&r=PG", "display_name": "pro meta", "link": "https://stackoverflow.com/users/1240582/pro-meta"}, "reply_to_user": {"reputation": 2847, "user_id": 2760557, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/259dfbcc7f03ebddcbe070f8fc9115f7?s=128&d=identicon&r=PG&f=1", "display_name": "Gustav", "link": "https://stackoverflow.com/users/2760557/gustav"}, "edited": false, "score": 0, "creation_date": 1440149048, "post_id": 32112911, "comment_id": 52163776, "body": "Yes, we are adding js files to html as well as the controller to a module, as required"}, {"owner": {"reputation": 2847, "user_id": 2760557, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/259dfbcc7f03ebddcbe070f8fc9115f7?s=128&d=identicon&r=PG&f=1", "display_name": "Gustav", "link": "https://stackoverflow.com/users/2760557/gustav"}, "edited": false, "score": 0, "creation_date": 1440151618, "post_id": 32112911, "comment_id": 52165338, "body": "And what angular version are you using?"}], "answers": [{"tags": [], "owner": {"reputation": 79, "user_id": 4393369, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e3dfe02dfae4668144c558a79f0c7a5?s=128&d=identicon&r=PG&f=1", "display_name": "oded", "link": "https://stackoverflow.com/users/4393369/oded"}, "is_accepted": false, "score": 0, "last_activity_date": 1459164736, "last_edit_date": 1459164736, "creation_date": 1459163302, "answer_id": 36261085, "question_id": 32112911, "link": "https://stackoverflow.com/questions/32112911/issue-with-angular-ui-grid-tree-view-when-working-with-typesript/36261085#36261085", "title": "Issue with Angular UI grid Tree View when working with Typesript", "body": "<p>You need to set this controller as an <code>Angular Controller</code>. </p>\n\n<p>You miss this stuff</p>\n\n<pre><code>var myModule = angular.module('myModule', []);\nmyModule.controller('myController', [()=&gt; {new MyController()}]);\n</code></pre>\n\n<p>and @ the html you should write is: </p>\n\n<pre><code>ng-controller='myController'\n</code></pre>\n\n<p>You also missed the concept of <code>$scope</code>...      </p>\n"}, {"tags": [], "owner": {"reputation": 143, "user_id": 2394785, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d2f177148c6e97281113db9d1d7a9bdd?s=128&d=identicon&r=PG", "display_name": "Abhishek", "link": "https://stackoverflow.com/users/2394785/abhishek"}, "is_accepted": false, "score": 0, "last_activity_date": 1516175446, "creation_date": 1516175446, "answer_id": 48296046, "question_id": 32112911, "link": "https://stackoverflow.com/questions/32112911/issue-with-angular-ui-grid-tree-view-when-working-with-typesript/48296046#48296046", "title": "Issue with Angular UI grid Tree View when working with Typesript", "body": "<p>I think it was one of my team members who asked this question.. sorry for coming back late.</p>\n\n<p>The issue was resolved after adding the dependency for <code>ui.grid.treeView</code> in the angular dependency list.</p>\n\n<p>The portions which @oded recommended are the ones which are not included here in the sample.\nLastly, just to clarify, this is angular 1 to typescript.</p>\n"}], "owner": {"reputation": 45, "user_id": 1240582, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/04ea67f2af7ebf1c424839d52a3ba93e?s=128&d=identicon&r=PG", "display_name": "pro meta", "link": "https://stackoverflow.com/users/1240582/pro-meta"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 781, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1516175446, "creation_date": 1440058284, "question_id": 32112911, "link": "https://stackoverflow.com/questions/32112911/issue-with-angular-ui-grid-tree-view-when-working-with-typesript", "title": "Issue with Angular UI grid Tree View when working with Typesript", "body": "<p>Below is a usual angularJS html sample using ui-grid-tree-view, which renders properly.</p>\n\n<pre><code>&lt;div id=\"grid1\" ui-grid=\"gridOptions\" ui-grid-tree-view class=\"grid\"&gt;\n</code></pre>\n\n<p>when converting the code to typescript, ui-grid-tree-view directive is not rendering, even the pre function in the directive is not being reached.</p>\n\n<p>For typescript code, \"gridOptions\" is being added as a public var to the controller class. Relevant code sample:</p>\n\n<pre><code>export class MyController{\n    constructor(){\n        this.gridOptions = {\n            columnDefs: [\n                { name: 'Name', width: '15%' },\n                { name: 'Description', width: '15%' },\n                { name: 'IsActive', cellTemplate: '&lt;ul ng-if=\"row.entity.IsActive == true\"&gt;&lt;li style=\"color:green\"&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul ng-if=\"row.entity.IsActive== false\"&gt;&lt;li style=\"color:red\"&gt;&lt;/li&gt;&lt;/ul&gt;', width: '10%' }\n            ]\n        }\n    }\n}\n</code></pre>\n\n<p>Created the required dataArray for tree view using a recursion function. Using in HTML:</p>\n\n<pre><code>&lt;div ng-controller=\"MyController as ctrl\"\n    &lt;div id=\"grid1\" ui-grid=\"ctrl.gridOptions\" ui-grid-tree-view class=\"grid\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Any suggestions are welcome.</p>\n"}]