[{"tags": ["typescript", "visual-studio-code"], "comments": [{"owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "edited": false, "score": 0, "creation_date": 1430352848, "post_id": 29953995, "comment_id": 48034334, "body": "don&#39;t leave me &lt; joking. I&#39;m testing it out myself as well :)"}, {"owner": {"reputation": 9151, "user_id": 783653, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/4a35d104523ef520dd5d9f60c7e1eeb1?s=128&d=identicon&r=PG", "display_name": "vilicvane", "link": "https://stackoverflow.com/users/783653/vilicvane"}, "reply_to_user": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "edited": false, "score": 0, "creation_date": 1430374831, "post_id": 29953995, "comment_id": 48041225, "body": "@basarat Ahh, haha. I can&#39;t promise that, but thanks for your great work anyway! (And looking forward to your innovation later when the extension system is ready!)"}], "answers": [{"comments": [{"owner": {"reputation": 5096, "user_id": 183544, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/7e497922b6a3060aa8fedd117b0eb7ff?s=128&d=identicon&r=PG", "display_name": "Ciantic", "link": "https://stackoverflow.com/users/183544/ciantic"}, "edited": false, "score": 0, "creation_date": 1430659671, "post_id": 29957194, "comment_id": 48146477, "body": "I don&#39;t think this answers the need for compileOnSave. There is no such option in VSCode at the moment."}, {"owner": {"reputation": 9151, "user_id": 783653, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/4a35d104523ef520dd5d9f60c7e1eeb1?s=128&d=identicon&r=PG", "display_name": "vilicvane", "link": "https://stackoverflow.com/users/783653/vilicvane"}, "reply_to_user": {"reputation": 5096, "user_id": 183544, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/7e497922b6a3060aa8fedd117b0eb7ff?s=128&d=identicon&r=PG", "display_name": "Ciantic", "link": "https://stackoverflow.com/users/183544/ciantic"}, "edited": false, "score": 0, "creation_date": 1430672876, "post_id": 29957194, "comment_id": 48150929, "body": "Think so. But it matches &quot;similar functionality&quot;. Looking forward to that option. :)"}], "tags": [], "owner": {"reputation": 9151, "user_id": 783653, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/4a35d104523ef520dd5d9f60c7e1eeb1?s=128&d=identicon&r=PG", "display_name": "vilicvane", "link": "https://stackoverflow.com/users/783653/vilicvane"}, "is_accepted": true, "score": 1, "last_activity_date": 1430357170, "last_edit_date": 1430357170, "creation_date": 1430355208, "answer_id": 29957194, "question_id": 29953995, "link": "https://stackoverflow.com/questions/29953995/compileonsave-typescript-source-files-in-visual-studio-code/29957194#29957194", "title": "&quot;compileOnSave&quot; TypeScript source files in Visual Studio Code", "body": "<p>Found out that something added a PATH with TypeScript 1.0 SDK, removing that PATH variable and add <code>\"isShellCommand\": true,</code> works fine for me.</p>\n"}], "owner": {"reputation": 9151, "user_id": 783653, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/4a35d104523ef520dd5d9f60c7e1eeb1?s=128&d=identicon&r=PG", "display_name": "vilicvane", "link": "https://stackoverflow.com/users/783653/vilicvane"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 505, "favorite_count": 2, "accepted_answer_id": 29957194, "answer_count": 1, "score": 5, "last_activity_date": 1452098024, "creation_date": 1430339703, "last_edit_date": 1430483965, "question_id": 29953995, "link": "https://stackoverflow.com/questions/29953995/compileonsave-typescript-source-files-in-visual-studio-code", "title": "&quot;compileOnSave&quot; TypeScript source files in Visual Studio Code", "body": "<p>I tried to turn on \"watch\" switch but it doesn't seem to work. How should I achieve similar functionality using Visual Studio Code?</p>\n"}, {"tags": ["intellij-idea", "typescript"], "comments": [{"owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "edited": false, "score": 0, "creation_date": 1430356562, "post_id": 29950920, "comment_id": 48035387, "body": "FWIW atom-typescript also has it : <a href=\"https://github.com/TypeStrong/atom-typescript#quick-fix\" rel=\"nofollow noreferrer\">github.com/TypeStrong/atom-typescript#quick-fix</a> ;)"}, {"owner": {"reputation": 820, "user_id": 173491, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/c7d37b416ca54313267a16a142361ef5?s=128&d=identicon&r=PG&f=1", "display_name": "Core", "link": "https://stackoverflow.com/users/173491/core"}, "reply_to_user": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "edited": false, "score": 0, "creation_date": 1430418473, "post_id": 29950920, "comment_id": 48069989, "body": "Can&#39;t seem to find it - seems so basic!  After like 10 hours theres already stuff I miss from eclipse, crazy."}], "owner": {"reputation": 820, "user_id": 173491, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/c7d37b416ca54313267a16a142361ef5?s=128&d=identicon&r=PG&f=1", "display_name": "Core", "link": "https://stackoverflow.com/users/173491/core"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 28, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1430329700, "creation_date": 1430329700, "question_id": 29950920, "link": "https://stackoverflow.com/questions/29950920/create-field-in-typescript-intellij-14-1-2-ultimate-from-usage", "title": "create field in typescript intellij 14.1.2 ultimate from usage", "body": "<p>Coming from Eclipse, I like to use a field first (for example) this.fieldname = \"value\", and then quick fix (control-1) the field declaration into existence without having to type it myself.  It would create \"private String fieldname;\" for example in my class file.</p>\n\n<p>In intellij I thought the same thing was possible across its editors, but I am not able to alt-enter or control space the field into existence.  How do I accomplish this?  This is for Typescript in Intellij Ultimate.  I have enabled the TypeScript compiler per the banner popup.</p>\n"}, {"tags": ["javascript", "typescript", "minify", "google-closure-compiler", "bundling-and-minification"], "comments": [{"owner": {"reputation": 29842, "user_id": 1641941, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/Q8zet.png?s=128&g=1", "display_name": "HMR", "link": "https://stackoverflow.com/users/1641941/hmr"}, "edited": false, "score": 0, "creation_date": 1430313152, "post_id": 29944248, "comment_id": 48010350, "body": "Closure compiler removes dead code. You can use goog.provide to export this class and goog.require to use it. But if you don&#39;t use it in any code it won&#39;t show in the compiled code"}, {"owner": {"reputation": 2063, "user_id": 2045685, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/c742289a1e01e45b0493ea2106df4445?s=128&d=identicon&r=PG", "display_name": "anandaravindan", "link": "https://stackoverflow.com/users/2045685/anandaravindan"}, "reply_to_user": {"reputation": 29842, "user_id": 1641941, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/Q8zet.png?s=128&g=1", "display_name": "HMR", "link": "https://stackoverflow.com/users/1641941/hmr"}, "edited": false, "score": 0, "creation_date": 1430313363, "post_id": 29944248, "comment_id": 48010533, "body": "so it should be given to the generated code manually..?"}, {"owner": {"reputation": 2063, "user_id": 2045685, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/c742289a1e01e45b0493ea2106df4445?s=128&d=identicon&r=PG", "display_name": "anandaravindan", "link": "https://stackoverflow.com/users/2045685/anandaravindan"}, "reply_to_user": {"reputation": 29842, "user_id": 1641941, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/Q8zet.png?s=128&g=1", "display_name": "HMR", "link": "https://stackoverflow.com/users/1641941/hmr"}, "edited": false, "score": 0, "creation_date": 1430313443, "post_id": 29944248, "comment_id": 48010603, "body": "I tried goog.provide(&#39;TestData&#39;); still doesnt work"}, {"owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "edited": false, "score": 0, "creation_date": 1430313705, "post_id": 29944248, "comment_id": 48010855, "body": "It seems wrong that the intermediate code example calls the constructor with no arguments: <code>var myTestData = new TestData();</code> if this passed arguments, wouldn&#39;t the Closure compiler keep the constructor?"}, {"owner": {"reputation": 29842, "user_id": 1641941, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/Q8zet.png?s=128&g=1", "display_name": "HMR", "link": "https://stackoverflow.com/users/1641941/hmr"}, "edited": false, "score": 0, "creation_date": 1430313767, "post_id": 29944248, "comment_id": 48010897, "body": "If you use myTestData and or pass some values to the constructor you wil see more code. Closure compiler only compiles and optimizes code that&#39;s used. You can find how to specify and use library classes in the closure library documentation."}, {"owner": {"reputation": 2063, "user_id": 2045685, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/c742289a1e01e45b0493ea2106df4445?s=128&d=identicon&r=PG", "display_name": "anandaravindan", "link": "https://stackoverflow.com/users/2045685/anandaravindan"}, "edited": false, "score": 0, "creation_date": 1430314257, "post_id": 29944248, "comment_id": 48011289, "body": "No it didnt unfortunately. I have tried passing arguments. Still the constructor is removed. I believe it is because of the module pattern that is emitted out of typescript which closure doesnt like."}, {"owner": {"reputation": 2923, "user_id": 2645347, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/JCvoY.png?s=128&g=1", "display_name": "birdspider", "link": "https://stackoverflow.com/users/2645347/birdspider"}, "edited": false, "score": 0, "creation_date": 1430314434, "post_id": 29944248, "comment_id": 48011429, "body": "have you tried invoking <code>.addBlog</code> on the dummy? I don&#39;t know how good the compiler is but just constucting a var that is never used, might as well be a noop"}, {"owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "edited": false, "score": 1, "creation_date": 1430315312, "post_id": 29944248, "comment_id": 48012166, "body": "@anandaravindan it is removed in advanced mode because you never use those properties. If this is &quot;all your code&quot; it is correctly optimizing it - because you never need those values. If this is &quot;some of your code&quot; you need to be more conservative and use simple optimizations to avoid losing what may be used elsewhere."}, {"owner": {"reputation": 2063, "user_id": 2045685, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/c742289a1e01e45b0493ea2106df4445?s=128&d=identicon&r=PG", "display_name": "anandaravindan", "link": "https://stackoverflow.com/users/2045685/anandaravindan"}, "reply_to_user": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "edited": false, "score": 1, "creation_date": 1430315634, "post_id": 29944248, "comment_id": 48012443, "body": "@Steve Fenton. Understood. I used those variables inside the method blog and it worked. Thanks."}, {"owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "edited": false, "score": 0, "creation_date": 1430315817, "post_id": 29944248, "comment_id": 48012611, "body": "@anandaravindan np - glad to help."}], "answers": [{"comments": [{"owner": {"reputation": 2063, "user_id": 2045685, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/c742289a1e01e45b0493ea2106df4445?s=128&d=identicon&r=PG", "display_name": "anandaravindan", "link": "https://stackoverflow.com/users/2045685/anandaravindan"}, "edited": false, "score": 0, "creation_date": 1430314092, "post_id": 29945155, "comment_id": 48011154, "body": "I was talking about advanced compilation. Not white space."}, {"owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "reply_to_user": {"reputation": 2063, "user_id": 2045685, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/c742289a1e01e45b0493ea2106df4445?s=128&d=identicon&r=PG", "display_name": "anandaravindan", "link": "https://stackoverflow.com/users/2045685/anandaravindan"}, "edited": false, "score": 0, "creation_date": 1430315380, "post_id": 29945155, "comment_id": 48012218, "body": "The example above is simple optimization (not white-space). For advanced compilation to be an option for you - you need to supply all of your code to the compiler. It removed unused code, so it needs to know all of the code before it can correctly understand what is used. For example if you add a console log statement to show the value of <code>myTestData.BlogName</code>, suddenly that parameter is not removed, because it is used... <code>var b=new function(a){this.a=a}(&quot;name&quot;,22,&quot;cpyright&quot;);console.log(b.a)&zwnj;&#8203;;</code>"}], "tags": [], "owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "is_accepted": true, "score": 1, "last_activity_date": 1430315745, "last_edit_date": 1430315745, "creation_date": 1430313892, "answer_id": 29945155, "question_id": 29944248, "link": "https://stackoverflow.com/questions/29944248/closure-compiler-export-typescript-classes-and-functions/29945155#29945155", "title": "Closure compiler export Typescript classes and functions", "body": "<p>I ran a very basic test of this. Perhaps you changed your code and haven't re-tried.</p>\n\n<p>If you compile the TypeScript in your question, it should result in the following JavaScript:</p>\n\n<pre><code>var TestData = (function () {\n    function TestData(blogName, cacheTimeOut, copyrightHolder) {\n        this.BlogName = blogName;\n        this.CacheTimeOut = cacheTimeOut;\n        this.CopyrightHolder = copyrightHolder;\n    }\n    TestData.prototype.addBlog = function (value) {\n        console.log('add blog');\n        return true;\n    };\n    TestData.prototype.validate = function () {\n        console.log('all valid');\n        return true;\n    };\n    return TestData;\n})();\nvar myTestData = new TestData(\"name\", 22, \"cpyright\");\n</code></pre>\n\n<p>In particular, the last line passes arguments to the <code>TestData</code> constructor.</p>\n\n<p>A quick run of this results in (white-space is mine) using <code>@compilation_level SIMPLE_OPTIMIZATIONS</code>:</p>\n\n<pre><code>var TestData=function(){\n    function a(a,b,c){\n        this.BlogName=a;this.CacheTimeOut=b;this.CopyrightHolder=c\n    }\n    a.prototype.addBlog=function(a){console.log(\"add blog\");return!0};\n    a.prototype.validate=function(){\n        console.log(\"all valid\");return!0\n    };\n    return a\n}(),myTestData=new TestData(\"name\",22,\"cpyright\");\n</code></pre>\n\n<p>If you use advanced optimizations on partial code, it will be too aggressive. You need to supply <em>all</em> of your code for the Closure compiler to understand what really isn't used.</p>\n\n<p>If your example represents all of your code, you'll notice that the constructor along with all three properties (BlogName, CacheTimeOut, and CopyrightHolder) are genuinely never used, so can be removed without affecting the behaviour of the program.</p>\n"}, {"comments": [{"owner": {"reputation": 2063, "user_id": 2045685, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/c742289a1e01e45b0493ea2106df4445?s=128&d=identicon&r=PG", "display_name": "anandaravindan", "link": "https://stackoverflow.com/users/2045685/anandaravindan"}, "edited": false, "score": 0, "creation_date": 1430315437, "post_id": 29945623, "comment_id": 48012258, "body": "I got this. But why there is no code in the constructor"}, {"owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "reply_to_user": {"reputation": 2063, "user_id": 2045685, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/c742289a1e01e45b0493ea2106df4445?s=128&d=identicon&r=PG", "display_name": "anandaravindan", "link": "https://stackoverflow.com/users/2045685/anandaravindan"}, "edited": false, "score": 0, "creation_date": 1430315547, "post_id": 29945623, "comment_id": 48012354, "body": "@anandaravindan because the compiler can tell you never use those values - so you don&#39;t need to accept them in the constructor, or store them."}, {"owner": {"reputation": 2923, "user_id": 2645347, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/JCvoY.png?s=128&g=1", "display_name": "birdspider", "link": "https://stackoverflow.com/users/2645347/birdspider"}, "edited": false, "score": 0, "creation_date": 1430315671, "post_id": 29945623, "comment_id": 48012487, "body": "because there is no code that does anything, what do you mean by <code>but why there is no code in the constructor</code>. As far as I understand it without externs the compiler sees your code as &quot;thats all there is&quot;, and since you never use the var, it drops the constructor, then drops the whole &quot;type&quot; since none of it is needed, until &quot;nothing&quot; remains."}, {"owner": {"reputation": 2063, "user_id": 2045685, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/c742289a1e01e45b0493ea2106df4445?s=128&d=identicon&r=PG", "display_name": "anandaravindan", "link": "https://stackoverflow.com/users/2045685/anandaravindan"}, "edited": false, "score": 0, "creation_date": 1430315925, "post_id": 29945623, "comment_id": 48012711, "body": "Is there anyway I can automate this window[&#39;TestData&#39;] = TestData; window[&#39;TestData&#39;].prototype[&#39;addBlog&#39;] = TestData.prototype.addBlog window[&#39;TestData&#39;].prototype[&#39;validate&#39;] = TestData.prototype.validate I thought I can use @export comment. But it didnt work. I added the required base.js as well."}, {"owner": {"reputation": 2923, "user_id": 2645347, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/JCvoY.png?s=128&g=1", "display_name": "birdspider", "link": "https://stackoverflow.com/users/2645347/birdspider"}, "reply_to_user": {"reputation": 2063, "user_id": 2045685, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/c742289a1e01e45b0493ea2106df4445?s=128&d=identicon&r=PG", "display_name": "anandaravindan", "link": "https://stackoverflow.com/users/2045685/anandaravindan"}, "edited": false, "score": 0, "creation_date": 1430316858, "post_id": 29945623, "comment_id": 48013525, "body": "@anandaravindan, I don&#39;t understand, what is your overall goal ?"}], "tags": [], "owner": {"reputation": 2923, "user_id": 2645347, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/JCvoY.png?s=128&g=1", "display_name": "birdspider", "link": "https://stackoverflow.com/users/2645347/birdspider"}, "is_accepted": false, "score": 1, "last_activity_date": 1430315074, "creation_date": 1430315074, "answer_id": 29945623, "question_id": 29944248, "link": "https://stackoverflow.com/questions/29944248/closure-compiler-export-typescript-classes-and-functions/29945623#29945623", "title": "Closure compiler export Typescript classes and functions", "body": "<p>Answer: optimized noops are - wait for it - noops :)</p>\n\n<p>Explanation:</p>\n\n<p>If you use your gen code here <a href=\"http://www.closure-compiler.appspot.com/home\" rel=\"nofollow\">http://www.closure-compiler.appspot.com/home</a> \nwith ADVANCED_OPTIMIZATIONS it produces: </p>\n\n<pre><code>new function(){};\n</code></pre>\n\n<p>if you add <code>myTestData.addBlog(\"test\");</code> it produces:</p>\n\n<pre><code>(new (function(){function a(){}a.prototype.a=function(){console.log(\"add blog\")};return a}())).a();\n</code></pre>\n"}], "owner": {"reputation": 2063, "user_id": 2045685, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/c742289a1e01e45b0493ea2106df4445?s=128&d=identicon&r=PG", "display_name": "anandaravindan", "link": "https://stackoverflow.com/users/2045685/anandaravindan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 530, "favorite_count": 0, "accepted_answer_id": 29945155, "answer_count": 2, "score": 4, "last_activity_date": 1430315745, "creation_date": 1430311769, "question_id": 29944248, "link": "https://stackoverflow.com/questions/29944248/closure-compiler-export-typescript-classes-and-functions", "title": "Closure compiler export Typescript classes and functions", "body": "<p>I am trying to use closure compiler advanced mode on typescript generated classes with no success. Is there anyone who has accomplished such things. </p>\n\n<p>Typescript Class</p>\n\n<pre><code>class TestData {\nBlogName: string;\nCacheTimeOut: number;\nCopyrightHolder: string;\n\nconstructor(blogName: string, cacheTimeOut: number, copyrightHolder: string) {\n    this.BlogName = blogName;\n    this.CacheTimeOut = cacheTimeOut;\n    this.CopyrightHolder = copyrightHolder;\n}\n\naddBlog(value: string): boolean {\n    console.log('add blog');\n    return true;\n}\n\nvalidate(): boolean {\n    console.log('all valid');\n    return true\n}       \n}\n\nvar myTestData = new TestData(\"name\",22,\"cpyright\");\n</code></pre>\n\n<p>Generated Code</p>\n\n<pre><code>var TestData = (function () {\nfunction TestData(blogName, cacheTimeOut, copyrightHolder) {\n    this.BlogName = blogName;\n    this.CacheTimeOut = cacheTimeOut;\n    this.CopyrightHolder = copyrightHolder;\n}\nTestData.prototype.addBlog = function (value) {\n    console.log('add blog');\n    return true;\n};\nTestData.prototype.validate = function () {\n    console.log('all valid');\n    return true;\n};\nreturn TestData;\n\n})();var myTestData = new TestData();\n</code></pre>\n\n<p>This compiles into </p>\n\n<pre><code>new function() {};\n</code></pre>\n\n<p>I understand I should provide exports, so I added</p>\n\n<pre><code>window['TestData'] = TestData;\nwindow['TestData'].prototype['addBlog'] = TestData.prototype.addBlog\nwindow['TestData'].prototype['validate'] = TestData.prototype.validate\n</code></pre>\n\n<p>my output from closure compiler advanced compilation is </p>\n\n<pre><code>var a = function() {\n  function b() {\n  }\n  b.prototype.a = function() {\n    console.log(\"add blog\");\n    return !0;\n  };\n  b.prototype.b = function() {\n    console.log(\"all valid\");\n    return !0;\n  };\n  return b;\n}();\nwindow.TestData = a;\nwindow.TestData.prototype.addBlog = a.prototype.a;\nwindow.TestData.prototype.validate = a.prototype.b;\nnew a;\n</code></pre>\n\n<p>If you see there is still no constructor code that is left. This gets worse when we add this inside a module.</p>\n\n<p>I also tried to use the @export of google closure wiht no success</p>\n\n<p><img src=\"https://i.stack.imgur.com/xl9eN.png\" alt=\"Google recommendations\"></p>\n\n<p>I see couple of pluggins which can generate closure compiler annotations based on typescript, but those also doesnt generate proper code.</p>\n\n<p><a href=\"https://www.npmjs.com/package/typescript-closure-compiler\" rel=\"nofollow noreferrer\">Thirdparty closure annotations generator</a></p>\n"}, {"tags": ["angularjs", "typescript"], "comments": [{"owner": {"reputation": 27685, "user_id": 610979, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/ku5ga.png?s=128&g=1", "display_name": "Frank Schmitt", "link": "https://stackoverflow.com/users/610979/frank-schmitt"}, "edited": false, "score": 0, "creation_date": 1430295961, "post_id": 29937974, "comment_id": 47997667, "body": "Typescript already wraps the class&#39;s contents into a <code>function()</code>, so I&#39;m not sure what you want to achieve - just check the generated code at <a href=\"http://www.typescriptlang.org/Playground/\" rel=\"nofollow noreferrer\">typescriptlang.org/Playground</a> . Or did I misunderstand you?"}, {"owner": {"reputation": 15625, "user_id": 3786294, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/o0RBY.png?s=128&g=1", "display_name": "Paleo", "link": "https://stackoverflow.com/users/3786294/paleo"}, "edited": false, "score": 1, "creation_date": 1430300636, "post_id": 29937974, "comment_id": 48000828, "body": "I think that it will be possible <a href=\"https://github.com/Microsoft/TypeScript/wiki/Roadmap#16\" rel=\"nofollow noreferrer\">with TS 1.6</a> : &quot;Support for local types and class expressions&quot;."}], "answers": [{"comments": [{"owner": {"reputation": 15625, "user_id": 3786294, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/o0RBY.png?s=128&g=1", "display_name": "Paleo", "link": "https://stackoverflow.com/users/3786294/paleo"}, "edited": false, "score": 0, "creation_date": 1430300849, "post_id": 29938584, "comment_id": 48000992, "body": "But <code>Stack</code> is exposed and khagesh &quot;don&#39;t want to expose any global variables&quot;."}, {"owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "reply_to_user": {"reputation": 15625, "user_id": 3786294, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/o0RBY.png?s=128&g=1", "display_name": "Paleo", "link": "https://stackoverflow.com/users/3786294/paleo"}, "edited": false, "score": 3, "creation_date": 1430303045, "post_id": 29938584, "comment_id": 48002617, "body": "I have shown a number of solutions, the last one is zero-global-scope (external modules). The goal of zero-global-scope is admirable, but I like to provide answers that will help other people looking for fewer items in global scope as well as zero items."}, {"owner": {"reputation": 923, "user_id": 844062, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/958493a986e9ff38c5c1226abe5ddd18?s=128&d=identicon&r=PG", "display_name": "khagesh", "link": "https://stackoverflow.com/users/844062/khagesh"}, "edited": false, "score": 0, "creation_date": 1430395110, "post_id": 29938584, "comment_id": 48053840, "body": "@SteveFenton, as Tarh said, it still exposes Stack as a global variable. And using external modules, means you will have to use require.js for client side. It still does not solve the problem at hand."}, {"owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "reply_to_user": {"reputation": 923, "user_id": 844062, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/958493a986e9ff38c5c1226abe5ddd18?s=128&d=identicon&r=PG", "display_name": "khagesh", "link": "https://stackoverflow.com/users/844062/khagesh"}, "edited": false, "score": 0, "creation_date": 1430395559, "post_id": 29938584, "comment_id": 48054138, "body": "@khagesh - I&#39;m just presenting all of the current options. The decision of which one to use is entirely yours: you can use external modules and leave nothing on the global scope, or you accept one item on the global scope, or you can avoid using classes."}, {"owner": {"reputation": 923, "user_id": 844062, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/958493a986e9ff38c5c1226abe5ddd18?s=128&d=identicon&r=PG", "display_name": "khagesh", "link": "https://stackoverflow.com/users/844062/khagesh"}, "edited": false, "score": 0, "creation_date": 1430395720, "post_id": 29938584, "comment_id": 48054254, "body": "@SteveFenton, I agree with your point. As of now i have avoided using classes. I don&#39;t want to leave any global variables. Because same pattern will be applicable to many other files and they all can&#39;t have one global variable each."}, {"owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "edited": false, "score": 3, "creation_date": 1430396988, "post_id": 29938584, "comment_id": 48055139, "body": "Did you know that you can contribute to the same module across all of your files (i.e. 20 files would still only add to the single global) ?"}], "tags": [], "owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "is_accepted": false, "score": 4, "last_activity_date": 1430296983, "creation_date": 1430296983, "answer_id": 29938584, "question_id": 29937974, "link": "https://stackoverflow.com/questions/29937974/typescript-cant-define-class-inside-an-iife/29938584#29938584", "title": "TypeScript: Can&#39;t define class inside an IIFE", "body": "<p>When you create a class, it generates an IIFE for you:</p>\n\n<p>The class:</p>\n\n<pre><code>class Example {\n\n}\n</code></pre>\n\n<p>Results in the JavaScript:</p>\n\n<pre><code>var Example = (function () {\n    function Example() {\n    }\n    return Example;\n})();\n</code></pre>\n\n<p>If you want to keep your classes out of the global scope, you can use modules:</p>\n\n<pre><code>module Stack {\n    export class Example {\n\n    }\n\n    export class Overflow {\n\n    }\n}\n</code></pre>\n\n<p>Only the <code>Stack</code> module appears in the global scope.</p>\n\n<pre><code>var Stack;\n(function (Stack) {\n    var Example = (function () {\n        function Example() {\n        }\n        return Example;\n    })();\n    Stack.Example = Example;\n    var Overflow = (function () {\n        function Overflow() {\n        }\n        return Overflow;\n    })();\n    Stack.Overflow = Overflow;\n})(Stack || (Stack = {}));\n</code></pre>\n\n<p>If you want to go a step further, you can use external modules - when you do that, none of your classes or modules is added to the global scope.</p>\n"}], "owner": {"reputation": 923, "user_id": 844062, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/958493a986e9ff38c5c1226abe5ddd18?s=128&d=identicon&r=PG", "display_name": "khagesh", "link": "https://stackoverflow.com/users/844062/khagesh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1677, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1430296983, "creation_date": 1430295234, "question_id": 29937974, "link": "https://stackoverflow.com/questions/29937974/typescript-cant-define-class-inside-an-iife", "title": "TypeScript: Can&#39;t define class inside an IIFE", "body": "<p>I want to define a class inside an IIFE using TypeScript and keeps getting error, <code>class can be defined either in a module or a file</code>. Below code does not work.</p>\n\n<pre><code>(function(){\n    // Error here\n    class Person {\n\n    }\n})()\n</code></pre>\n\n<p>The reason i need to do this is because i don't want to expose any global variables, not even module. You may wonder why, because i would add them to angular modules in below way</p>\n\n<pre><code>(function(){\n    angular.module('app').controller('HomeController', HomeController);\n    // error here\n    class HomeController {\n    }\n})();\n</code></pre>\n"}, {"tags": ["typescript"], "comments": [{"owner": {"reputation": 40105, "user_id": 28278, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/1cc9e6fee8abccebed1d4f7a88f0b9cb?s=128&d=identicon&r=PG", "display_name": "CodingWithSpike", "link": "https://stackoverflow.com/users/28278/codingwithspike"}, "edited": false, "score": 0, "creation_date": 1430261734, "post_id": 29931203, "comment_id": 47985085, "body": "I copy/pasted your code to the Typescript playground on their site and it compiled fine. What errors do you get, and on what lines? What version of TS?"}], "answers": [{"tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": false, "score": 0, "last_activity_date": 1430265759, "creation_date": 1430265759, "answer_id": 29932038, "question_id": 29931203, "link": "https://stackoverflow.com/questions/29931203/typescript-this-cannot-be-referenced-inside-a-module-body/29932038#29932038", "title": "typescript this cannot be referenced inside a module body", "body": "<p>Based on <code>new animalPositionMonitor(this);</code> you should refactor <code>animalPositionMonitor</code> into a <code>class</code> as you are calling it with <code>new</code>. </p>\n\n<p>Going furhter into your code you are adding stuff to <code>me</code> of type stream handler. To pass in <code>this</code> into that you would use a lambda, no need to capture <code>this</code> in a variable <code>monitor</code>. </p>\n\n<pre><code>class animalPositionMonitor{\n    constructor(trayContrller:ITrayController){\n        var me: IGenXStreamHandler&lt;IAnimal&gt; = new GenXStreamHandler('Animal');\n        me.process = animal =&gt; {\n            var ll = this[\"trayController\"].gridOptions.data.length**;\n        }   \n    }\n}\n</code></pre>\n\n<p>This quick video should help you understand <code>this</code> better : <a href=\"https://www.youtube.com/watch?v=tvocUcbCupA\" rel=\"nofollow\">https://www.youtube.com/watch?v=tvocUcbCupA</a></p>\n"}], "owner": {"reputation": 127, "user_id": 333397, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/cea4ae6c363e7513ab35dbe4ef0af3e0?s=128&d=identicon&r=PG", "display_name": "Bhaskar", "link": "https://stackoverflow.com/users/333397/bhaskar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 612, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1430265759, "creation_date": 1430260822, "question_id": 29931203, "link": "https://stackoverflow.com/questions/29931203/typescript-this-cannot-be-referenced-inside-a-module-body", "title": "typescript this cannot be referenced inside a module body", "body": "<p>I have a module like </p>\n\n<pre><code>module nganimaltracker {\n   export class TrayController implements ITrayController{\n        public startTracker() {\n        var monitor = new animalPositionMonitor(this);\n        this.animalTrackerServices.TrackPosition(monitor,  this.errorCallbackFn);\n    }\n   }\n}\nvar animalPositionMonitor: any = (() =&gt; {\n    var jsClass: any = (trayController: ITrayController) =&gt; {\n        **var monitor =  this;**\n         var me: IGenXStreamHandler&lt;IAnimal&gt; = new GenXStreamHandler('Animal');\n        me.process = animal =&gt; {\n            var ll = **monitor[\"trayController\"].gridOptions.data.length**;\n        }\n    }\n}\n</code></pre>\n\n<p>If i don't have module it works. But I need to keep the module, also I need the monitor[\"trayController\"] to access the element on a process call back so i won't lose scope. how do i do this?</p>\n"}, {"tags": ["interface", "typescript", "typescript1.4"], "answers": [{"comments": [{"owner": {"reputation": 1468, "user_id": 1169948, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/15dabf482babeb55fe25f5c1a7731173?s=128&d=identicon&r=PG", "display_name": "Dan Caddigan", "link": "https://stackoverflow.com/users/1169948/dan-caddigan"}, "edited": false, "score": 0, "creation_date": 1430247450, "post_id": 29926978, "comment_id": 47977162, "body": "Thanks for the speedy reply!  This makes sense in the classical sense of an Interface, but why then would it throw when you do <code>ddo.transclude = false;</code>?"}, {"owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "reply_to_user": {"reputation": 1468, "user_id": 1169948, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/15dabf482babeb55fe25f5c1a7731173?s=128&d=identicon&r=PG", "display_name": "Dan Caddigan", "link": "https://stackoverflow.com/users/1169948/dan-caddigan"}, "edited": false, "score": 0, "creation_date": 1430247853, "post_id": 29926978, "comment_id": 47977386, "body": "I have added a section on this - as it isn&#39;t really to do with interfaces specifically."}, {"owner": {"reputation": 1468, "user_id": 1169948, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/15dabf482babeb55fe25f5c1a7731173?s=128&d=identicon&r=PG", "display_name": "Dan Caddigan", "link": "https://stackoverflow.com/users/1169948/dan-caddigan"}, "edited": false, "score": 0, "creation_date": 1430252154, "post_id": 29926978, "comment_id": 47980126, "body": "Hmmm, I understand the option param, but if it&#39;s going to warn me about <code>transclude</code>, shouldn&#39;t it have warned me about controller?  I feel like either it should act like a classical interface or it should warn about unknown attributes, but it seems like it&#39;s being inconsistent.  Also, I didn&#39;t know about the <code>dancing past the compiler</code> - this is a little scary."}, {"owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "reply_to_user": {"reputation": 1468, "user_id": 1169948, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/15dabf482babeb55fe25f5c1a7731173?s=128&d=identicon&r=PG", "display_name": "Dan Caddigan", "link": "https://stackoverflow.com/users/1169948/dan-caddigan"}, "edited": false, "score": 0, "creation_date": 1430252296, "post_id": 29926978, "comment_id": 47980228, "body": "Here is the interesting distinction. TypeScript is structurally typed and will generate a type for you when you create a variable - and enforce that generated type. That means you can put anything you like on <code>ddo</code> when you first create it - but after that, the type is checked. (I go into a lot of detail about this in my book... hint hint ;) )"}, {"owner": {"reputation": 1468, "user_id": 1169948, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/15dabf482babeb55fe25f5c1a7731173?s=128&d=identicon&r=PG", "display_name": "Dan Caddigan", "link": "https://stackoverflow.com/users/1169948/dan-caddigan"}, "edited": false, "score": 0, "creation_date": 1430363921, "post_id": 29926978, "comment_id": 48037434, "body": "Thanks Steve.  I&#39;m not a huge fan of how this works, but I think your description deserves the check mark. :)"}], "tags": [], "owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "is_accepted": true, "score": 1, "last_activity_date": 1430247828, "last_edit_date": 1430247828, "creation_date": 1430245031, "answer_id": 29926978, "question_id": 29926191, "link": "https://stackoverflow.com/questions/29926191/prohibited-attributes-in-a-typescript-interface/29926978#29926978", "title": "Prohibited attributes in a Typescript Interface", "body": "<p>In short (but depending on your definition of \"tighter\") you can't restrict things beyond this.</p>\n\n<p>The interface is a contract that says \"if these members are not present, you aren't one of these\". If your object happens to have additional members, that's fine; when you are using the interface, they are invisible to you.</p>\n\n<p>For example (based on your code), when you type <code>ddo.</code> it will only suggest the members on the interface, because you have told the compiler to use the interface type.</p>\n\n<p>You can't use an interface to <em>prevent</em> a member being defined. I can't think of any language that does this off the top of my head. For example, in C# you can implement more than the interface requires you to implement, but when you are using the interface type, those other members are not available.</p>\n\n<h1>Adding Properties Dynamically</h1>\n\n<p>The question as to why <code>ddo.tranclude = false;</code> generates a warning is a bit different. This isn't related to interfaces - it will do it when there is no interface:</p>\n\n<pre><code>  var ddo = {\n    scope: {\n      dt: '='\n    },\n    templateUrl: 'directives.datepicker',\n    controller: function() {\n      console.log('hello world');\n    }\n  };\n\n  ddo.transclude = false; // Nope\n</code></pre>\n\n<p>The reason for this is... this is the point of TypeScript! It is warning you that you might have typed <code>transclude</code> incorrectly. Perhaps you meant <code>templateUrl</code>, which <em>does</em> exist. If TypeScript didn't warn you about this kind of problem, it would allow you to introduce typographical bugs into your code.</p>\n\n<p>So TypeScript will generate a type for any object you create and then enforce that structure, unless you tell it otherwise.</p>\n\n<p>If you wanted there to \"sometimes be a <code>transclude</code> member\" you can make that possible:</p>\n\n<pre><code>interface SometimesTransclude {\n    scope: { dt: string};\n    templateUrl: string;\n    controller: () =&gt; void;\n    transclude?: boolean;\n}\n\n  var ddo: SometimesTransclude = {\n    scope: {\n      dt: '='\n    },\n    templateUrl: 'directives.datepicker',\n    controller: function() {\n      console.log('hello world');\n    }\n  };\n\n  ddo.transclude = false;\n</code></pre>\n\n<p>Or you can dance straight past the compiler (at your own risk) using:</p>\n\n<pre><code>ddo['transclude'] = false;\n</code></pre>\n"}], "owner": {"reputation": 1468, "user_id": 1169948, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/15dabf482babeb55fe25f5c1a7731173?s=128&d=identicon&r=PG", "display_name": "Dan Caddigan", "link": "https://stackoverflow.com/users/1169948/dan-caddigan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 903, "favorite_count": 0, "accepted_answer_id": 29926978, "answer_count": 1, "score": 0, "last_activity_date": 1430247828, "creation_date": 1430242493, "question_id": 29926191, "link": "https://stackoverflow.com/questions/29926191/prohibited-attributes-in-a-typescript-interface", "title": "Prohibited attributes in a Typescript Interface", "body": "<p>I was to create a TypeScript interface that not only requires that particular attributes are present, but also prohibits attributes that are not part of the definition.  Here is an example:</p>\n\n<pre><code>  export interface IComponentDirective {\n    scope : any;\n    templateUrl : string;\n  };\n\n  var ddo : IComponentDirective = {\n    scope: {\n      dt: '='\n    },\n    templateUrl: 'directives.datepicker',\n    controller: function() {\n      console.log('hello world');\n    }\n  };\n</code></pre>\n\n<p>Even though <code>controller</code> is not defined in the interface, the <code>ddo</code> assignment doesn't throw an error.   Doing some research, this looks like it might be as designed: </p>\n\n<blockquote>\n  <p>Notice that our object actually has more properties than this, but the\n  compiler only checks to that at least the ones required are present\n  and match the types required.</p>\n  \n  <p><a href=\"http://www.typescriptlang.org/Handbook#interfaces\" rel=\"nofollow\">http://www.typescriptlang.org/Handbook#interfaces</a></p>\n</blockquote>\n\n<p>Notice, however, that after I declare <code>ddo</code> as a <code>IComponentDirective</code>, if I try something like:</p>\n\n<pre><code>ddo.transclude = false;\n</code></pre>\n\n<p>The transpiler will complain with:</p>\n\n<blockquote>\n  <p>2339 Property 'transclude' does not exist on type\n  'IComponentDirective'.</p>\n</blockquote>\n\n<p>Is there any way to enforce a tighter contract?</p>\n"}, {"tags": ["typescript", "amd"], "answers": [{"tags": [], "owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "is_accepted": true, "score": 1, "last_activity_date": 1430225585, "creation_date": 1430225585, "answer_id": 29920081, "question_id": 29917361, "link": "https://stackoverflow.com/questions/29917361/referencing-external-module-in-typescript-error-ts2304-cannot-find-name-gene/29920081#29920081", "title": "Referencing external module in typescript - error TS2304: Cannot find name &#39;general&#39;", "body": "<p>Your definition works, in that you can import it...</p>\n\n<p>For example, I can reference <code>Langs</code> like so:</p>\n\n<pre><code>var x = general.General.Langs;\n</code></pre>\n\n<p>However, you haven't declared that <code>Langs</code> is a class, so you can't extend it as if it were one.</p>\n\n<p>If it <em>is</em> implemented in a way that allows you to extend it, declaring it as a class will allow it to be used as a base class (simplified example to demonstrate that using a class works):</p>\n\n<pre><code>declare module 'general' {\n    export module General {\n        export class Langs {\n\n\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 23, "user_id": 3849330, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e0138cb288c7d2ac19763fbf0d9bf383?s=128&d=identicon&r=PG&f=1", "display_name": "Petr Juna", "link": "https://stackoverflow.com/users/3849330/petr-juna"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1002, "favorite_count": 0, "accepted_answer_id": 29920081, "answer_count": 1, "score": 1, "last_activity_date": 1430225585, "creation_date": 1430218271, "question_id": 29917361, "link": "https://stackoverflow.com/questions/29917361/referencing-external-module-in-typescript-error-ts2304-cannot-find-name-gene", "title": "Referencing external module in typescript - error TS2304: Cannot find name &#39;general&#39;", "body": "<p>I prepared these two files:</p>\n\n<p>1st one is general.d.ts file</p>\n\n<pre><code>interface IgeneralStatic {\n    General: {\n        Langs: any;\n    };\n}\n\ndeclare var general: IgeneralStatic;\n\ndeclare module 'general' {\n    export = general;\n}\n</code></pre>\n\n<p>2nd one is just something.ts file where i'm trying to import a file alias:</p>\n\n<pre><code>/// &lt;reference path=\"general.d.ts\" /&gt;\n\nimport general = require('general');\n\nexport class SpecificLangs extends general.General.Langs\n  ...\n}\n</code></pre>\n\n<p>When i trying to compile it i'm getting this error:</p>\n\n<pre><code>error TS2304: Cannot find name 'general'\n</code></pre>\n\n<p>The reason of this that I don't know where is my module and I can't import it for typescript usage. It is resolved on requirejs side as package. So there is no way to reference, using import, original general.ts file.</p>\n"}, {"tags": ["angularjs", "typescript"], "comments": [{"owner": {"reputation": 6911, "user_id": 280842, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/smz6q.jpg?s=128&g=1", "display_name": "Filype", "link": "https://stackoverflow.com/users/280842/filype"}, "edited": false, "score": 0, "creation_date": 1430212574, "post_id": 29915175, "comment_id": 47951958, "body": "Not sure about typescript specific. But in Javascript you need to load the main angular source code."}, {"owner": {"reputation": 1032, "user_id": 2374076, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/9d95de929ee8e36e7b139b67d12125ab?s=128&d=identicon&r=PG", "display_name": "Sarun Intaralawan", "link": "https://stackoverflow.com/users/2374076/sarun-intaralawan"}, "reply_to_user": {"reputation": 6911, "user_id": 280842, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/smz6q.jpg?s=128&g=1", "display_name": "Filype", "link": "https://stackoverflow.com/users/280842/filype"}, "edited": false, "score": 0, "creation_date": 1430212716, "post_id": 29915175, "comment_id": 47952045, "body": "Yes, after the <code>tsc</code> command, I&#39;ll get a .js file to be included into html page as usual."}, {"owner": {"reputation": 6911, "user_id": 280842, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/smz6q.jpg?s=128&g=1", "display_name": "Filype", "link": "https://stackoverflow.com/users/280842/filype"}, "edited": false, "score": 0, "creation_date": 1430212934, "post_id": 29915175, "comment_id": 47952212, "body": "I see, maybe you need to tell typescript to treat angular as a global dependency.."}, {"owner": {"reputation": 6911, "user_id": 280842, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/smz6q.jpg?s=128&g=1", "display_name": "Filype", "link": "https://stackoverflow.com/users/280842/filype"}, "edited": false, "score": 1, "creation_date": 1430212992, "post_id": 29915175, "comment_id": 47952247, "body": "Have a look at this project in typescript and angular - <a href=\"https://github.com/tastejs/todomvc/blob/gh-pages/examples/typescript-angular/js/Application.ts\" rel=\"nofollow noreferrer\">github.com/tastejs/todomvc/blob/gh-pages/examples/&hellip;</a>"}], "answers": [{"comments": [{"owner": {"reputation": 53661, "user_id": 1413538, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/594bb80f7ed4b0b3770df7ad97c4d16a?s=128&d=identicon&r=PG", "display_name": "Brocco", "link": "https://stackoverflow.com/users/1413538/brocco"}, "edited": false, "score": 3, "creation_date": 1430216621, "post_id": 29915815, "comment_id": 47954670, "body": "Just to add for the non-visual studio folks, take a look at this tool to assist on getting individual type definitions without pulling down the entire repo... <a href=\"https://github.com/DefinitelyTyped/tsd\" rel=\"nofollow noreferrer\">github.com/DefinitelyTyped/tsd</a> (can work like bower/npm via config file)"}, {"owner": {"reputation": 3660, "user_id": 3282, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/459097b9ced4413093907cbbcbcab2e8?s=128&d=identicon&r=PG", "display_name": "Thomas Eyde", "link": "https://stackoverflow.com/users/3282/thomas-eyde"}, "edited": false, "score": 1, "creation_date": 1451234667, "post_id": 29915815, "comment_id": 56706877, "body": "I installed the nuget package today (DefinitelyTyped). It&#39;s broken."}, {"owner": {"reputation": 1535, "user_id": 610610, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/db1aeb72c95a77c259849d455c16776a?s=128&d=identicon&r=PG", "display_name": "Itanex", "link": "https://stackoverflow.com/users/610610/itanex"}, "edited": false, "score": 2, "creation_date": 1486257908, "post_id": 29915815, "comment_id": 71267999, "body": "bad solution, this removes any typescript type support from the imported *.d.ts file for angular"}, {"owner": {"reputation": 1535, "user_id": 610610, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/db1aeb72c95a77c259849d455c16776a?s=128&d=identicon&r=PG", "display_name": "Itanex", "link": "https://stackoverflow.com/users/610610/itanex"}, "edited": false, "score": 0, "creation_date": 1486539647, "post_id": 29915815, "comment_id": 71383600, "body": "@sohnee that is a great assumption. Perhaps the answer could be rewritten so you can&#39;t make that assumption."}, {"owner": {"reputation": 23126, "user_id": 64279, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/5xdjT.png?s=128&g=1", "display_name": "adam0101", "link": "https://stackoverflow.com/users/64279/adam0101"}, "edited": false, "score": 0, "creation_date": 1513811207, "post_id": 29915815, "comment_id": 82799278, "body": "That link is broken"}, {"owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "reply_to_user": {"reputation": 23126, "user_id": 64279, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/5xdjT.png?s=128&g=1", "display_name": "adam0101", "link": "https://stackoverflow.com/users/64279/adam0101"}, "edited": false, "score": 1, "creation_date": 1513849936, "post_id": 29915815, "comment_id": 82811964, "body": "@adam0101 I have replaced the broken like with a link to the type search utility. This will find any available definition and link through to the NPM page for it."}], "tags": [], "owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "is_accepted": true, "score": 37, "last_activity_date": 1513849903, "last_edit_date": 1513849903, "creation_date": 1430214188, "answer_id": 29915815, "question_id": 29915175, "link": "https://stackoverflow.com/questions/29915175/getting-error-cannot-find-name-angular/29915815#29915815", "title": "Getting Error - Cannot find name &#39;angular&#39;", "body": "<p>You could simplistically tell the compiler to stop worrying by telling it that \"you know all about angular\":</p>\n\n<pre><code>declare var angular: any;\n</code></pre>\n\n<p>To get all the good tooling and type checking, you need to pull in the <a href=\"https://microsoft.github.io/TypeSearch/\" rel=\"noreferrer\">Angular type definition</a> so the compiler knows what is available.</p>\n\n<p>The type definitions are available via NuGet if you are using Visual Studio or various other methods for your favourite IDE.</p>\n"}, {"tags": [], "owner": {"reputation": 123, "user_id": 5570449, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-0OkpOMAjCaA/AAAAAAAAAAI/AAAAAAAAADw/H0euWrkaBMw/photo.jpg?sz=128", "display_name": "Sonu Jose", "link": "https://stackoverflow.com/users/5570449/sonu-jose"}, "is_accepted": false, "score": 7, "last_activity_date": 1457087090, "creation_date": 1457087090, "answer_id": 35793577, "question_id": 29915175, "link": "https://stackoverflow.com/questions/29915175/getting-error-cannot-find-name-angular/35793577#35793577", "title": "Getting Error - Cannot find name &#39;angular&#39;", "body": "<p>You need to include angular.t.ds file in the library</p>\n"}, {"tags": [], "owner": {"reputation": 13717, "user_id": 4742733, "user_type": "registered", "accept_rate": 40, "profile_image": "https://i.stack.imgur.com/bGGhh.jpg?s=128&g=1", "display_name": "Aakash", "link": "https://stackoverflow.com/users/4742733/aakash"}, "is_accepted": false, "score": 1, "last_activity_date": 1473938755, "last_edit_date": 1473938755, "creation_date": 1461298385, "answer_id": 36784689, "question_id": 29915175, "link": "https://stackoverflow.com/questions/29915175/getting-error-cannot-find-name-angular/36784689#36784689", "title": "Getting Error - Cannot find name &#39;angular&#39;", "body": "<p><strong>ATOM</strong></p>\n\n<p>In <code>tsconfig.json</code> file ensure your <code>\"fileGlobs\"</code> points to both:-</p>\n\n<ol>\n<li>The TypeScript Definitions you installed with <code>tsd</code> &amp;</li>\n<li>Your <code>src .ts files</code></li>\n</ol>\n\n<pre class=\"lang-js prettyprint-override\"><code>\"filesGlob\": [\n  \"./typings/**/*.ts\",\n  \"./src/client/**/*.ts\"\n]\n</code></pre>\n\n<p>This will ensure you have tooling for the libraries you have installed <em>(with <code>tsd</code>)</em> without having to <code>declare</code> any variables.  For example, if you <code>tsd install angularjs --save</code>, you can work <code>angular</code> in your <code>src/../*.ts files</code> with all the goody tooling.</p>\n\n<p>Hope this helps.  Good Luck.</p>\n"}, {"tags": [], "owner": {"reputation": 3437, "user_id": 1454888, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/IBah1.jpg?s=128&g=1", "display_name": "Augusto Barreto", "link": "https://stackoverflow.com/users/1454888/augusto-barreto"}, "is_accepted": false, "score": 21, "last_activity_date": 1493572265, "creation_date": 1493572265, "answer_id": 43709106, "question_id": 29915175, "link": "https://stackoverflow.com/questions/29915175/getting-error-cannot-find-name-angular/43709106#43709106", "title": "Getting Error - Cannot find name &#39;angular&#39;", "body": "<p>Using AngularJS 1.x and TypeScript 2.x, I solved this issue by running:</p>\n\n<pre><code>npm install --save-dev @types/angular\n</code></pre>\n\n<p>and then include the following line on top of the .ts file:</p>\n\n<pre><code>import * as angular from \"angular\";\n</code></pre>\n\n<p>Reference: <a href=\"https://blogs.msdn.microsoft.com/typescript/2016/06/15/the-future-of-declaration-files/\" rel=\"noreferrer\">The Future of Declaration Files</a></p>\n"}, {"tags": [], "owner": {"reputation": 439, "user_id": 1261464, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/gtPyi.png?s=128&g=1", "display_name": "rekotc", "link": "https://stackoverflow.com/users/1261464/rekotc"}, "is_accepted": false, "score": 0, "last_activity_date": 1495535631, "creation_date": 1495535631, "answer_id": 44132350, "question_id": 29915175, "link": "https://stackoverflow.com/questions/29915175/getting-error-cannot-find-name-angular/44132350#44132350", "title": "Getting Error - Cannot find name &#39;angular&#39;", "body": "<p>I solved the problem by adding the following line to my package.json, inside the \"devDependencies\" section:</p>\n\n<pre><code>\"@types/angular\" : \"1.6.17\"\n</code></pre>\n\n<p>after that, i just needed to run</p>\n\n<pre><code>npm install\n</code></pre>\n\n<p>in order for npm to download all the needed dependencies.</p>\n"}, {"tags": [], "owner": {"reputation": 578, "user_id": 379264, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/AQMbB.png?s=128&g=1", "display_name": "Indy-Jones", "link": "https://stackoverflow.com/users/379264/indy-jones"}, "is_accepted": false, "score": 3, "last_activity_date": 1503592730, "creation_date": 1503592730, "answer_id": 45866921, "question_id": 29915175, "link": "https://stackoverflow.com/questions/29915175/getting-error-cannot-find-name-angular/45866921#45866921", "title": "Getting Error - Cannot find name &#39;angular&#39;", "body": "<p>For me inside of VisualStudio I used part of Augusto's suggested answer and simply did:</p>\n\n<pre><code>npm install --save @types/angular\n</code></pre>\n\n<p>and it worked like a charm.</p>\n"}, {"tags": [], "owner": {"reputation": 16, "user_id": 6576962, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6c0d10e63c99fb1329a15d12d1ee6c71?s=128&d=identicon&r=PG&f=1", "display_name": "Itai Shperber", "link": "https://stackoverflow.com/users/6576962/itai-shperber"}, "is_accepted": false, "score": 0, "last_activity_date": 1562966644, "last_edit_date": 1562966644, "creation_date": 1562955084, "answer_id": 57012132, "question_id": 29915175, "link": "https://stackoverflow.com/questions/29915175/getting-error-cannot-find-name-angular/57012132#57012132", "title": "Getting Error - Cannot find name &#39;angular&#39;", "body": "<p>Make sure that in the <code>tsconfig.json</code> the <code>filesGlob</code> points and exposed the typings file:</p>\n\n<pre><code>\"filesGlob\": [\"typings.d.ts\" ]\n</code></pre>\n"}], "owner": {"reputation": 1032, "user_id": 2374076, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/9d95de929ee8e36e7b139b67d12125ab?s=128&d=identicon&r=PG", "display_name": "Sarun Intaralawan", "link": "https://stackoverflow.com/users/2374076/sarun-intaralawan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 54286, "favorite_count": 4, "accepted_answer_id": 29915815, "answer_count": 7, "score": 30, "last_activity_date": 1562966644, "creation_date": 1430212427, "last_edit_date": 1430212735, "question_id": 29915175, "link": "https://stackoverflow.com/questions/29915175/getting-error-cannot-find-name-angular", "title": "Getting Error - Cannot find name &#39;angular&#39;", "body": "<p>I'm starting writing AngularJS app using TypeScript. I have this simple module command:</p>\n\n<pre><code>(() =&gt; {\n    angular\n        .module('app', []);\n})();\n</code></pre>\n\n<p>When I run <code>tsc app.ts</code>, I got this: <code>app.ts(2,5): error TS2304: Cannot find name 'angular'.</code></p>\n\n<p>Do I need to include something to <code>app.ts</code> to make <code>tsc</code> understand the <code>angular</code>?</p>\n\n<p>Regards,</p>\n"}, {"tags": ["gruntjs", "typescript", "karma-runner"], "answers": [{"tags": [], "owner": {"reputation": 6869, "user_id": 1048274, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3d5625c035057aa5e2535f6bf6f3c984?s=128&d=identicon&r=PG", "display_name": "Ludohen", "link": "https://stackoverflow.com/users/1048274/ludohen"}, "is_accepted": false, "score": 0, "last_activity_date": 1430241886, "creation_date": 1430241886, "answer_id": 29926010, "question_id": 29912082, "link": "https://stackoverflow.com/questions/29912082/error-cannot-find-name-using-karma-typescript-preprocessor-plugin/29926010#29926010", "title": "Error &#39;cannot find name ...&#39; using karma-typescript-preprocessor plugin", "body": "<p>I had the same issue, and I ended up doing  gulp tasks to run in sequence typescript compile and karma test.</p>\n"}, {"comments": [{"owner": {"reputation": 576, "user_id": 218901, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/becef3d5b49a8178f7b3ab165dd00c25?s=128&d=identicon&r=PG", "display_name": "Claudio Mezzasalma", "link": "https://stackoverflow.com/users/218901/claudio-mezzasalma"}, "edited": false, "score": 0, "creation_date": 1438172661, "post_id": 30616343, "comment_id": 51339676, "body": "This one fixed the issue for me."}], "tags": [], "owner": {"reputation": 8640, "user_id": 46635, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/i6ZRh.jpg?s=128&g=1", "display_name": "splintor", "link": "https://stackoverflow.com/users/46635/splintor"}, "is_accepted": false, "score": 1, "last_activity_date": 1433324436, "creation_date": 1433324436, "answer_id": 30616343, "question_id": 29912082, "link": "https://stackoverflow.com/questions/29912082/error-cannot-find-name-using-karma-typescript-preprocessor-plugin/30616343#30616343", "title": "Error &#39;cannot find name ...&#39; using karma-typescript-preprocessor plugin", "body": "<p>Try removing the line</p>\n\n<pre><code>noResolve: true,\n</code></pre>\n\n<p>from the typescriptPreprocessor configuration. It seems to cause the compiler not to resolve your references properly.</p>\n"}, {"tags": [], "owner": {"reputation": 1, "user_id": 3879905, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a5eaa606a966abb916d4f010d729d941?s=128&d=identicon&r=PG", "display_name": "juancarlosqr", "link": "https://stackoverflow.com/users/3879905/juancarlosqr"}, "is_accepted": false, "score": 0, "last_activity_date": 1436478071, "creation_date": 1436478071, "answer_id": 31328737, "question_id": 29912082, "link": "https://stackoverflow.com/questions/29912082/error-cannot-find-name-using-karma-typescript-preprocessor-plugin/31328737#31328737", "title": "Error &#39;cannot find name ...&#39; using karma-typescript-preprocessor plugin", "body": "<p>Set the 'noResolve' value to false, and add the references</p>\n\n<p>I also comment about this here</p>\n\n<p><a href=\"https://github.com/sergeyt/karma-typescript-preprocessor/issues/29\" rel=\"nofollow\">https://github.com/sergeyt/karma-typescript-preprocessor/issues/29</a></p>\n"}, {"tags": [], "owner": {"reputation": 100, "user_id": 2829223, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e10ef8929d9094ce318a973ba10084d?s=128&d=identicon&r=PG", "display_name": "pawciobiel", "link": "https://stackoverflow.com/users/2829223/pawciobiel"}, "is_accepted": false, "score": 0, "last_activity_date": 1440583591, "creation_date": 1440583591, "answer_id": 32223646, "question_id": 29912082, "link": "https://stackoverflow.com/questions/29912082/error-cannot-find-name-using-karma-typescript-preprocessor-plugin/32223646#32223646", "title": "Error &#39;cannot find name ...&#39; using karma-typescript-preprocessor plugin", "body": "<p>What helped me is adding </p>\n\n<pre><code>///&lt;reference path=\"../node_modules/karma-typescript-preprocessor/typings/jasmine/jasmine.d.ts\"/&gt;\n</code></pre>\n\n<p>On the beginning of each test file.</p>\n\n<p>When I tried adding </p>\n\n<pre><code>typescriptPreprocessor: {\n    typings: ['path/to/typings/jasmine.d.ts']\n...\n</code></pre>\n\n<p>I was getting errors complaining about duplicate definitions...</p>\n"}], "owner": {"reputation": 43, "user_id": 4840664, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d9330591d2df696dcd6262af91d28d3f?s=128&d=identicon&r=PG&f=1", "display_name": "loic audiger", "link": "https://stackoverflow.com/users/4840664/loic-audiger"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2292, "favorite_count": 1, "answer_count": 4, "score": 1, "last_activity_date": 1440583591, "creation_date": 1430203278, "question_id": 29912082, "link": "https://stackoverflow.com/questions/29912082/error-cannot-find-name-using-karma-typescript-preprocessor-plugin", "title": "Error &#39;cannot find name ...&#39; using karma-typescript-preprocessor plugin", "body": "<p>I am trying to automate unit test execution using grunt karma and karma-typescript-preprocessor.</p>\n\n<p>However, when I run 'grunt watch', karma outputs the following error :\nERROR [preprocessor.typescript]: /home/loic/Code/appName/src/app/app.spec.ts.ktp.ts(15,13): error TS2304: Cannot find name 'expect'.</p>\n\n<p>This error happens with a lot of names : 'describe, angular, expect 'etc</p>\n\n<p>The strange thing is that when i run the command line 'tsc /path/to/app.spec.ts', the new js file is created, there is no error.</p>\n\n<p>below my karma.conf.js :</p>\n\n<pre><code>module.exports = function ( karma ) {\n    karma.set({\n    /**\n     * From where to look for files, starting with the location of this file.\n     */\n    basePath: '../',\n\n    typescriptPreprocessor: {\n        // options passed to the typescript compiler\n        options: {\n            sourceMap: false, // (optional) Generates corresponding .map file.\n            target: 'ES5', // (optional) Specify ECMAScript target version: 'ES3' (default), or 'ES5'\n            module: 'amd', // (optional) Specify module code generation: 'commonjs' or 'amd'\n            noImplicitAny: false, // (optional) Warn on expressions and declarations with an implied 'any' type.\n            noResolve: true, // (optional) Skip resolution and preprocessing.\n            removeComments: true // (optional) Do not emit comments to output.\n        },\n        // transforming the filenames\n        transformPath: function(path) {\n            return path.replace(/\\.ts$/, '.js');\n        }\n    },\n\n    /**\n     * This is the list of file patterns to load into the browser during testing.\n     */\n    files: [\n    &lt;% scripts.forEach( function ( file ) { %&gt;'&lt;%= file %&gt;',\n        &lt;% }); %&gt;\n'src/**/*.ts'\n],\nexclude: [\n    'src/assets/**/*.ts',\n    'src/typeScript/**/*.ts'\n],\n    frameworks: [ 'jasmine' ],\n    plugins: [ 'karma-jasmine', 'karma-firefox-launcher', 'karma-typescript-preprocessor' ],\n    preprocessors: {\n    '**/*.ts': 'typescript'\n},\n\n/**\n * How to report, by default.\n */\nreporters: 'dots',\n\n/**\n * On which port should the browser connect, on which port is the test runner\n * operating, and what is the URL path for the browser to use.\n */\n    port: 9018,\n    runnerPort: 9100,\n    urlRoot: '/',\n\n/**\n * Disable file watching by default.\n */\n    autoWatch: false,\n\n/**\n * The list of browsers to launch to test on. This includes only \"Firefox\" by\n * default, but other browser names include:\n * Chrome, ChromeCanary, Firefox, Opera, Safari, PhantomJS\n *\n * Note that you can also use the executable name of the browser, like \"chromium\"\n * or \"firefox\", but that these vary based on your operating system.\n *\n * You may also leave this blank and manually navigate your browser to\n * http://localhost:9018/ when you're running tests. The window/tab can be left\n * open and the tests will automatically occur there during the build. This has\n * the aesthetic advantage of not launching a browser every time you save.\n */\n    browsers: [\n    'Firefox'\n]\n});\n};\n</code></pre>\n\n<p>Any help would be appreciated</p>\n"}, {"tags": ["typescript"], "answers": [{"comments": [{"owner": {"reputation": 1741, "user_id": 2871709, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/TKAfD.jpg?s=128&g=1", "display_name": "pixelmike", "link": "https://stackoverflow.com/users/2871709/pixelmike"}, "edited": false, "score": 0, "creation_date": 1430181379, "post_id": 29908233, "comment_id": 47939033, "body": "Thanks for all your help. I haven&#39;t found a good reference yet for how tsconfig and the outDir parameter works. Preserving relative reference paths makes sense now, I didn&#39;t understand why it was disobeying my direct orders in tsconfig.json. :)"}, {"owner": {"reputation": 1741, "user_id": 2871709, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/TKAfD.jpg?s=128&g=1", "display_name": "pixelmike", "link": "https://stackoverflow.com/users/2871709/pixelmike"}, "edited": false, "score": 0, "creation_date": 1430186718, "post_id": 29908233, "comment_id": 47940501, "body": "Hmm, if I organize it like that and want to output public/js/test &amp; public/js/lib, it generates public/js/ts/test &amp; public/js/ts/lib. I don&#39;t really care if it compiles everything at once (compile file on save is fine.) Really I&#39;d just like it to disregard the reference tag except to resolve dependencies, not to change the output folder structure."}, {"owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "reply_to_user": {"reputation": 1741, "user_id": 2871709, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/TKAfD.jpg?s=128&g=1", "display_name": "pixelmike", "link": "https://stackoverflow.com/users/2871709/pixelmike"}, "edited": false, "score": 0, "creation_date": 1430188260, "post_id": 29908233, "comment_id": 47940953, "body": "Its in how the compiler is written. The commonroot logic is not in my control and I don&#39;t want to hack it in."}, {"owner": {"reputation": 1741, "user_id": 2871709, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/TKAfD.jpg?s=128&g=1", "display_name": "pixelmike", "link": "https://stackoverflow.com/users/2871709/pixelmike"}, "edited": false, "score": 0, "creation_date": 1430188261, "post_id": 29908233, "comment_id": 47940954, "body": "Ok haha, I think I figured it out. Using your layout, I can use 2 separate tsconfig files (I was trying with 1 global tsconfig at the root.) However &#39;test&#39;, which has a reference to files in &#39;lib&#39; will auto-generate its own folder in the outDir. The tsconfig in &#39;lib&#39; will compile files directly to outDir (unless I add reference paths to any of those files I guess.) I get why it does this (for requires and imports etc.) but I think the default behaviour should be &quot;do as tsconfig says&quot; rather than doing fancy restructuring based on reference paths."}, {"owner": {"reputation": 1741, "user_id": 2871709, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/TKAfD.jpg?s=128&g=1", "display_name": "pixelmike", "link": "https://stackoverflow.com/users/2871709/pixelmike"}, "edited": false, "score": 0, "creation_date": 1430188328, "post_id": 29908233, "comment_id": 47940968, "body": "basarat, thanks for all your help again it is much appreciated. I&#39;m complaining about the tsconfig spec, not atom-typescript. :)"}, {"owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "reply_to_user": {"reputation": 1741, "user_id": 2871709, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/TKAfD.jpg?s=128&g=1", "display_name": "pixelmike", "link": "https://stackoverflow.com/users/2871709/pixelmike"}, "edited": false, "score": 0, "creation_date": 1430188346, "post_id": 29908233, "comment_id": 47940973, "body": "<code>do as tsconfig says</code> if we did just that then the files in your <code>reference</code> that are not in your <code>tsconfig</code> would get ignored and you would get compile errors"}, {"owner": {"reputation": 1741, "user_id": 2871709, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/TKAfD.jpg?s=128&g=1", "display_name": "pixelmike", "link": "https://stackoverflow.com/users/2871709/pixelmike"}, "edited": false, "score": 0, "creation_date": 1430188885, "post_id": 29908233, "comment_id": 47941099, "body": "Sure, the reference path is used at compile time to find the referenced ts source, but I don&#39;t see why it must structure the output js like that. (For require &amp; imports yes, but not for save, compile &amp; reload browser workflow.)"}, {"owner": {"reputation": 1741, "user_id": 2871709, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/TKAfD.jpg?s=128&g=1", "display_name": "pixelmike", "link": "https://stackoverflow.com/users/2871709/pixelmike"}, "edited": false, "score": 0, "creation_date": 1430192562, "post_id": 29908233, "comment_id": 47941975, "body": "I suppose part of the problem is that the compiler will compile and output referenced files rather than just using them to compile your file. The thing is I&#39;m already doing that when working in the other directory."}], "tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": false, "score": 6, "last_activity_date": 1430180782, "creation_date": 1430180782, "answer_id": 29908233, "question_id": 29908200, "link": "https://stackoverflow.com/questions/29908200/tsconfig-how-to-set-correct-compiler-output-location-for-multiple-directories/29908233#29908233", "title": "tsconfig - How to set correct compiler output location for multiple directories (Atom)", "body": "<blockquote>\n  <p>How would I configure it to compile lib/ts/<em>.ts to public/js/lib/</em>.js and test/ts/<em>.ts to public/js/</em>.js?</p>\n</blockquote>\n\n<p>If you want to compile <code>test</code> and <code>public</code> in a <em>single</em> compilation context then effectively your ts tree is : </p>\n\n<pre><code>test/\n    ts/\nlib/\n    ts/\n</code></pre>\n\n<p>Therefore if you use an <code>outDir</code> of <code>./public/js</code> you will get: </p>\n\n<pre><code>public/\n    js/\n        test/\n            ts/\n        lib/\n            ts/\n</code></pre>\n\n<p>This is because the <em>relative</em> nature of <code>lib/ts</code> to <code>test/ts</code> needs to be preserved by <code>outDir</code>. This is a limation in how you are trying to organize your project. </p>\n\n<p>Reorganize your project as </p>\n\n<pre><code>ts/\n    test/\n    lib/\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "edited": false, "score": 0, "creation_date": 1430199399, "post_id": 29910102, "comment_id": 47944264, "body": "Good solution. Will point to this in future if people want multi project folder structure guidance :)"}], "tags": [], "owner": {"reputation": 1741, "user_id": 2871709, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/TKAfD.jpg?s=128&g=1", "display_name": "pixelmike", "link": "https://stackoverflow.com/users/2871709/pixelmike"}, "is_accepted": false, "score": 23, "last_activity_date": 1430225471, "last_edit_date": 1430225471, "creation_date": 1430193844, "answer_id": 29910102, "question_id": 29908200, "link": "https://stackoverflow.com/questions/29908200/tsconfig-how-to-set-correct-compiler-output-location-for-multiple-directories/29910102#29910102", "title": "tsconfig - How to set correct compiler output location for multiple directories (Atom)", "body": "<p>I ended up getting what I wanted with this layout:</p>\n\n<pre><code>public/\n    js/\n        lib/\n        test/\nsrc/\n    ts/\n        lib/\n        test/\n</code></pre>\n\n<p>In src/ts/test/tsconfig.json:</p>\n\n<pre><code>\"outDir\": \"../../../public/js\"\n</code></pre>\n\n<p>In src/ts/lib/tsconfig.json:</p>\n\n<pre><code>\"outDir\": \"../../../public/js/lib\"\n</code></pre>\n\n<p>In src/ts/test/test.ts:</p>\n\n<pre><code>/// &lt;reference path=\"../lib/CoolStuff.ts\" /&gt;\n</code></pre>\n\n<p>In Atom, if you're working in src/ts/lib, building will compile those files into public/js/lib.</p>\n\n<p>If you're working in src/ts/test, the build will compile *.ts in test - <em>as well as all files referenced</em>. I don't see a way to prevent referenced file compilation, but at least with this layout they go to the same location.</p>\n"}], "owner": {"reputation": 1741, "user_id": 2871709, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/TKAfD.jpg?s=128&g=1", "display_name": "pixelmike", "link": "https://stackoverflow.com/users/2871709/pixelmike"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 40962, "favorite_count": 2, "answer_count": 2, "score": 31, "last_activity_date": 1452894023, "creation_date": 1430180515, "question_id": 29908200, "link": "https://stackoverflow.com/questions/29908200/tsconfig-how-to-set-correct-compiler-output-location-for-multiple-directories", "title": "tsconfig - How to set correct compiler output location for multiple directories (Atom)", "body": "<p>Suppose I have this directory structure:</p>\n\n<pre><code>public/\n    js/\n        lib/\ntest/\n    ts/\nlib/\n    ts/\n</code></pre>\n\n<p>How would I configure it to compile <code>lib/ts/*.ts</code> to <code>public/js/lib/*.js</code> and <code>test/ts/*.ts</code> to <code>public/js/*.js</code>?</p>\n\n<p>I've tried setting up a separate tsconfig.json in each ts directory with the desired <code>outDir</code>, but as soon as I add a <code>///&lt;reference</code> to a file, the compiler outputs an unwanted directory tree (on save and on build.)</p>\n"}, {"tags": ["javascript", "casting", "typescript"], "answers": [{"comments": [{"owner": {"reputation": 327, "user_id": 375810, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/8ff5972d5df55a7df725c6230bcf3b73?s=128&d=identicon&r=PG", "display_name": "lizlux", "link": "https://stackoverflow.com/users/375810/lizlux"}, "edited": false, "score": 3, "creation_date": 1430327708, "post_id": 29907188, "comment_id": 48021499, "body": "<code>FormElements</code> actually corresponds to form.elements, not the form itself, so it&#39;s better to extend from <code>HTMLCollection</code>, or possibly <code>HTMLFormControlsCollection</code> than <code>HTMLFormElement</code>. But the <code>extends</code> aspect is correct."}], "tags": [], "owner": {"reputation": 162223, "user_id": 1704166, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/d256baab2fcfd81b0f109d394404fd67?s=128&d=identicon&r=PG", "display_name": "Ryan Cavanaugh", "link": "https://stackoverflow.com/users/1704166/ryan-cavanaugh"}, "is_accepted": false, "score": 6, "last_activity_date": 1430174238, "creation_date": 1430174238, "answer_id": 29907188, "question_id": 29907163, "link": "https://stackoverflow.com/questions/29907163/how-to-work-with-form-elements-in-typescript/29907188#29907188", "title": "How to work with form elements in typescript", "body": "<p>Best way would be to write it like this:</p>\n\n<pre><code>// Note 'extends' clause here\ninterface FormElements extends HTMLFormElement {\n    day: HTMLInputElement;\n    month: HTMLInputElement;\n    year: HTMLInputElement;\n}\n\nclass BirthdateInput {\n    constructor(form: HTMLFormElement) {\n        var elements: FormElements = &lt;FormElements&gt; form.elements; // OK\n        // ...\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 327, "user_id": 375810, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/8ff5972d5df55a7df725c6230bcf3b73?s=128&d=identicon&r=PG", "display_name": "lizlux", "link": "https://stackoverflow.com/users/375810/lizlux"}, "is_accepted": false, "score": 5, "last_activity_date": 1430175420, "creation_date": 1430175420, "answer_id": 29907403, "question_id": 29907163, "link": "https://stackoverflow.com/questions/29907163/how-to-work-with-form-elements-in-typescript/29907403#29907403", "title": "How to work with form elements in typescript", "body": "<p>Turns out adding an <code>extends</code> clause fixes it: </p>\n\n<pre><code>interface FormElements extends HTMLCollection {\n    day: HTMLInputElement;\n    month: HTMLInputElement;\n    year: HTMLInputElement;\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 4797, "user_id": 250094, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/49d80e4d995467c5c00f1300db855698?s=128&d=identicon&r=PG", "display_name": "Alex Dresko", "link": "https://stackoverflow.com/users/250094/alex-dresko"}, "is_accepted": false, "score": 0, "last_activity_date": 1440501993, "creation_date": 1440501993, "answer_id": 32202780, "question_id": 29907163, "link": "https://stackoverflow.com/questions/29907163/how-to-work-with-form-elements-in-typescript/32202780#32202780", "title": "How to work with form elements in typescript", "body": "<p>Whether right or wrong, I have found that you can also do something like this:</p>\n\n<pre><code>interface FormElements {\n    day: HTMLInputElement;\n    month: HTMLInputElement;\n    year: HTMLInputElement;\n}\n\nclass BirthdateInput {\n    constructor(form: HTMLFormElement) {\n        var elements: FormElements = &lt;FormElements&gt;(&lt;any&gt; form.elements); \n\n        this.day = elements.day;\n        this.month = elements.month;\n        this.year = elements.year;\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 327, "user_id": 375810, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/8ff5972d5df55a7df725c6230bcf3b73?s=128&d=identicon&r=PG", "display_name": "lizlux", "link": "https://stackoverflow.com/users/375810/lizlux"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 10263, "favorite_count": 0, "answer_count": 3, "score": 5, "last_activity_date": 1440501993, "creation_date": 1430174112, "question_id": 29907163, "link": "https://stackoverflow.com/questions/29907163/how-to-work-with-form-elements-in-typescript", "title": "How to work with form elements in typescript", "body": "<p>I'd like to access form elements via <code>myForm.elements</code>, and then access each element by it's name, for example, <code>myForm.elements.month</code>. Typescript doesn't like this b/c it doesn't know that <code>form.elements</code> contains a property of <code>month</code>. I thought, let's create an interface! So I did, (see code below), but I'm getting this typescript error: <code>Neither type 'HTMLCollection' nor type 'FormElements' is assignable to the other</code></p>\n\n<p>Here's the code I'm working with: </p>\n\n<pre><code>interface FormElements {\n    day: HTMLInputElement;\n    month: HTMLInputElement;\n    year: HTMLInputElement;\n}\n\nclass BirthdateInput {\n    constructor(form: HTMLFormElement) {\n        var elements: FormElements = &lt;FormElements&gt; form.elements; // error here\n\n        this.day = elements.day;\n        this.month = elements.month;\n        this.year = elements.year;\n    }\n}\n</code></pre>\n\n<p>Any ideas on how to better cast my <code>form.elements</code> object so typescript won't complain?</p>\n"}, {"tags": ["typescript"], "comments": [{"owner": {"reputation": 1444, "user_id": 879239, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f77643a95d9bb85e64fd602bd8f2a627?s=128&d=identicon&r=PG", "display_name": "bert", "link": "https://stackoverflow.com/users/879239/bert"}, "edited": false, "score": 0, "creation_date": 1430215592, "post_id": 29906143, "comment_id": 47954009, "body": "Can you explain more about the usecase? &quot;declare&quot; is usually used to tell typescript about variables that already exist but you&#39;re also saying that you want to instantiate the interface. Interfaces are never instantiated.  Lots of questions. Please add more explanation."}], "answers": [{"comments": [{"owner": {"reputation": 127, "user_id": 333397, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/cea4ae6c363e7513ab35dbe4ef0af3e0?s=128&d=identicon&r=PG", "display_name": "Bhaskar", "link": "https://stackoverflow.com/users/333397/bhaskar"}, "edited": false, "score": 0, "creation_date": 1430177574, "post_id": 29907738, "comment_id": 47937947, "body": "I guess you would the need the class inside the module. I can&#39;t have it inside a module as the javascript library that I am writing typescript def for is not inside a module."}], "tags": [], "owner": {"reputation": 8361, "user_id": 439026, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/eb050c54b891309ffdd14a0e1fdd5e66?s=128&d=identicon&r=PG", "display_name": "zeh", "link": "https://stackoverflow.com/users/439026/zeh"}, "is_accepted": false, "score": 4, "last_activity_date": 1430177409, "creation_date": 1430177409, "answer_id": 29907738, "question_id": 29906143, "link": "https://stackoverflow.com/questions/29906143/typescript-definition-implementing-a-generic-class-that-implements-generic-inter/29907738#29907738", "title": "typescript definition implementing a generic class that implements generic interface", "body": "<p>The problem is that with an interface you need an implementation both for the static and instance interfaces, plus the constructor(<code>new()</code>). This would work:</p>\n\n<pre><code>interface IStreamHandler_Static {\n    new&lt;E&gt;():IStreamHandler&lt;E&gt;; \n}\ninterface IStreamHandler&lt;E&gt; {\n    stopStream(): void;\n    process(e : E);\n    onReady(bReady : boolean):void;\n}\n\ndeclare var StreamHandler: IStreamHandler_Static;\n</code></pre>\n\n<p>But if it's external, it's probably better to fully declare the class.</p>\n\n<pre><code>interface IStreamHandler&lt;E&gt; {\n    stopStream(): void;\n    process(e : E);\n    onReady(bReady : boolean):void;\n}\n\ndeclare class StreamHandler&lt;E&gt; implements IStreamHandler&lt;E&gt; {\n    constructor() {}\n    stopStream(): void;\n    process(e : E);\n    onReady(bReady : boolean):void;\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 624, "user_id": 756172, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/332b7450963cc9b6c461b5a6c7324b9c?s=128&d=identicon&r=PG", "display_name": "Antonio", "link": "https://stackoverflow.com/users/756172/antonio"}, "is_accepted": false, "score": 0, "last_activity_date": 1430238214, "creation_date": 1430238214, "answer_id": 29924811, "question_id": 29906143, "link": "https://stackoverflow.com/questions/29906143/typescript-definition-implementing-a-generic-class-that-implements-generic-inter/29924811#29924811", "title": "typescript definition implementing a generic class that implements generic interface", "body": "<p>It seems to me that you want to restrict the parameter type of a function but you want to provide the implementation of the function later.\nThis is a way to implement what I understood</p>\n\n<pre><code>interface Animals {\n    walk():void\n}\n\nclass Cat {\n    walk =():void =&gt;{\n        alert(\"I am walking\");\n    }\n}\n\ninterface IStreamHandler&lt;E extends Animals&gt; {\n    stopStream(): void;\n    process(E : E);\n    onReady(bReady : boolean):void;\n}\n\nvar animal:Animals = new Cat();  \nvar sh = &lt;IStreamHandler&lt;Cat&gt;&gt;{};\n\nsh.process=(animal)=&gt;{\n    animal.walk();\n}\nsh.process(animal);\n</code></pre>\n"}], "owner": {"reputation": 127, "user_id": 333397, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/cea4ae6c363e7513ab35dbe4ef0af3e0?s=128&d=identicon&r=PG", "display_name": "Bhaskar", "link": "https://stackoverflow.com/users/333397/bhaskar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1480, "favorite_count": 1, "answer_count": 2, "score": 3, "last_activity_date": 1430238214, "creation_date": 1430169654, "question_id": 29906143, "link": "https://stackoverflow.com/questions/29906143/typescript-definition-implementing-a-generic-class-that-implements-generic-inter", "title": "typescript definition implementing a generic class that implements generic interface", "body": "<p>I have a typescript definition file with an interface like </p>\n\n<pre><code>   interface IStreamHandler&lt;E&gt; {\n      stopStream(): void;\n      process(E : E);\n      onReady(bReady : boolean):void;\n   }\n</code></pre>\n\n<p>I want to instantiate this so I declare a variable like</p>\n\n<pre><code> declare var StreamHandler: IStreamHandler&lt;E&gt;; \n</code></pre>\n\n<p>but this is not allowed.</p>\n\n<p>How do I create the definition syntax so i could do this ?</p>\n\n<pre><code>   var sh = new StreamHandler&lt;Animal&gt;(); \n   sh.process(E: Animal){//code impl}\n</code></pre>\n"}, {"tags": ["angularjs", "typescript"], "answers": [{"comments": [{"owner": {"reputation": 148, "user_id": 4533587, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/3e5696042b9f0d6ab8e421a1ce6f1bce?s=128&d=identicon&r=PG&f=1", "display_name": "Johan Lindberg", "link": "https://stackoverflow.com/users/4533587/johan-lindberg"}, "edited": false, "score": 0, "creation_date": 1430202435, "post_id": 29899603, "comment_id": 47945751, "body": "Thanx, it wasnt the problem but it solved my next question why it didnt update the value :)"}, {"owner": {"reputation": 7051, "user_id": 4252741, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/L3CRt.jpg?s=128&g=1", "display_name": "Chic", "link": "https://stackoverflow.com/users/4252741/chic"}, "reply_to_user": {"reputation": 148, "user_id": 4533587, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/3e5696042b9f0d6ab8e421a1ce6f1bce?s=128&d=identicon&r=PG&f=1", "display_name": "Johan Lindberg", "link": "https://stackoverflow.com/users/4533587/johan-lindberg"}, "edited": false, "score": 0, "creation_date": 1430240032, "post_id": 29899603, "comment_id": 47972417, "body": "@JohanLindberg Glad you figured it out. Thanks for also posting your solution"}], "tags": [], "owner": {"reputation": 7051, "user_id": 4252741, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/L3CRt.jpg?s=128&g=1", "display_name": "Chic", "link": "https://stackoverflow.com/users/4252741/chic"}, "is_accepted": false, "score": 1, "last_activity_date": 1430147775, "creation_date": 1430147775, "answer_id": 29899603, "question_id": 29899240, "link": "https://stackoverflow.com/questions/29899240/angular-service-trying-to-implement-retrying-http-get-typescript/29899603#29899603", "title": "Angular service, Trying to implement retrying $http.get. (Typescript)", "body": "<p>The issue is that your .error() callback isn't connected to your deferred object. You might want to set up an optional TypeScript parameter to pass in the deferred object so that you can chain the recursive calls.</p>\n\n<pre><code>getCategories(updatedFunction: Function, deferror?: angular.IDeferred&lt;{}&gt;) {\n    var deferred;\n    if (deferor) {\n        deferred = deferror;\n    } else {\n        deferred = this.$q.defer();\n    }\n\n    this.httpService.get('/api/listCategories')\n        .success((response) =&gt; {\n        deferred.resolve(response);\n\n    }).error(() =&gt; {\n        this.$timeout(() =&gt; this.getCategories(deffered), 10000);\n    });\n    return deferred.promise;\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 148, "user_id": 4533587, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/3e5696042b9f0d6ab8e421a1ce6f1bce?s=128&d=identicon&r=PG&f=1", "display_name": "Johan Lindberg", "link": "https://stackoverflow.com/users/4533587/johan-lindberg"}, "is_accepted": false, "score": 1, "last_activity_date": 1430202531, "creation_date": 1430202531, "answer_id": 29911900, "question_id": 29899240, "link": "https://stackoverflow.com/questions/29899240/angular-service-trying-to-implement-retrying-http-get-typescript/29911900#29911900", "title": "Angular service, Trying to implement retrying $http.get. (Typescript)", "body": "<p>My problem was that i didn't have my api request(/api/listCategories) under the NETWORK: section in my .appcache file.\nSo it tried to use some cached resource that didnt exist instead of trying to make a real http request.</p>\n"}], "owner": {"reputation": 148, "user_id": 4533587, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/3e5696042b9f0d6ab8e421a1ce6f1bce?s=128&d=identicon&r=PG&f=1", "display_name": "Johan Lindberg", "link": "https://stackoverflow.com/users/4533587/johan-lindberg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 449, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1430202531, "creation_date": 1430146825, "question_id": 29899240, "link": "https://stackoverflow.com/questions/29899240/angular-service-trying-to-implement-retrying-http-get-typescript", "title": "Angular service, Trying to implement retrying $http.get. (Typescript)", "body": "<p>Im trying to implement some offline support for my angular web-app but i cant get my simple retry function to work.\nI have a service with the following code</p>\n\n<pre><code>constructor($http: ng.IHttpService, private $q: ng.IQService, private $interval: ng.IIntervalService, private $timeout: ng.ITimeoutService) {           \n        this.httpService = $http;\n    }\ngetCategories(updatedFunction: Function) {\n        var deferred = this.$q.defer();\n\n            this.httpService.get('/api/listCategories')\n                .success((response) =&gt; {\n                deferred.resolve(response);\n\n            }).error(() =&gt; {\n                this.$timeout(() =&gt; this.getCategories(), 10000);\n            });\n        return deferred.promise;\n    }\n</code></pre>\n\n<p>And on the controller i have the following.</p>\n\n<pre><code>    service.getCategories().then(c =&gt; {\n                //Stuff in here\n            });\n</code></pre>\n\n<p>If im online the service works fine and i get the expected data. But if im offline at start i begin to receieve \"GET <a href=\"http://correct_looking_path/\" rel=\"nofollow\">http://correct_looking_path/</a> ERR_FAILED and if i step the js file i can se that it runs this.httpService.get method but instantly fails to .error().\nThen i connect, but still i get the same error message and pattern. \nThe httpService.get method runs every 10 seconds but fails all the time.</p>\n\n<p>If i refresh it works.</p>\n"}, {"tags": ["typescript", "definitelytyped", "angular-cookies"], "answers": [{"comments": [{"owner": {"reputation": 97, "user_id": 2645143, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/ca153c9628e6336e7490435db209ee92?s=128&d=identicon&r=PG&f=1", "display_name": "quicky", "link": "https://stackoverflow.com/users/2645143/quicky"}, "edited": false, "score": 0, "creation_date": 1430207589, "post_id": 29905866, "comment_id": 47948853, "body": "Thanks a lot. I&#39;m new to this TypeScript story. Next time I will already know or even create a definition myself"}, {"owner": {"reputation": 7051, "user_id": 4252741, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/L3CRt.jpg?s=128&g=1", "display_name": "Chic", "link": "https://stackoverflow.com/users/4252741/chic"}, "reply_to_user": {"reputation": 97, "user_id": 2645143, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/ca153c9628e6336e7490435db209ee92?s=128&d=identicon&r=PG&f=1", "display_name": "quicky", "link": "https://stackoverflow.com/users/2645143/quicky"}, "edited": false, "score": 0, "creation_date": 1430240287, "post_id": 29905866, "comment_id": 47972591, "body": "@quicky I&#39;m new to it too but I&#39;m liking it and the community. The <a href=\"https://github.com/borisyankov/DefinitelyTyped/pull/4209\" rel=\"nofollow noreferrer\">pull request</a> has been merged so it should be available."}, {"owner": {"reputation": 97, "user_id": 2645143, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/ca153c9628e6336e7490435db209ee92?s=128&d=identicon&r=PG&f=1", "display_name": "quicky", "link": "https://stackoverflow.com/users/2645143/quicky"}, "edited": false, "score": 0, "creation_date": 1430289641, "post_id": 29905866, "comment_id": 47993982, "body": "yes you&#39;re right, it&#39;s pretty nice. Like two weeks ago I didn&#39;t even know about TypeScript but it&#39;s goin quite fast :)"}], "tags": [], "owner": {"reputation": 7051, "user_id": 4252741, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/L3CRt.jpg?s=128&g=1", "display_name": "Chic", "link": "https://stackoverflow.com/users/4252741/chic"}, "is_accepted": true, "score": 5, "last_activity_date": 1447273982, "last_edit_date": 1447273982, "creation_date": 1430168508, "answer_id": 29905866, "question_id": 29897971, "link": "https://stackoverflow.com/questions/29897971/angular-cookies-definitelytyped/29905866#29905866", "title": "angular-cookies DefinitelyTyped", "body": "<p>It appears that the DefinitelyTyped definition has not been updated for Angular 1.4 yet. the ICookiesService interface should be something like: </p>\n\n<pre><code>interface ICookiesService {\n    get(key: string): string;\n    getObject(key: string): any;\n    getAll(): any;\n    put(key: string, value: string, options?: any): void;\n    putObject(key: string, value: any, options?: any): void;\n    remove(key: string, options?: any): void;\n}\n</code></pre>\n\n<p>In the future, you can feel free to submit a pull request on GitHub to update the definition. I've <a href=\"https://github.com/borisyankov/DefinitelyTyped/pull/4209\" rel=\"nofollow\">created one</a> for this now.</p>\n\n<h2>Update:</h2>\n\n<p>The above mentioned pull request was merged so this should no longer be a problem.</p>\n"}], "owner": {"reputation": 97, "user_id": 2645143, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/ca153c9628e6336e7490435db209ee92?s=128&d=identicon&r=PG&f=1", "display_name": "quicky", "link": "https://stackoverflow.com/users/2645143/quicky"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4722, "favorite_count": 0, "accepted_answer_id": 29905866, "answer_count": 1, "score": 5, "last_activity_date": 1447273982, "creation_date": 1430143379, "question_id": 29897971, "link": "https://stackoverflow.com/questions/29897971/angular-cookies-definitelytyped", "title": "angular-cookies DefinitelyTyped", "body": "<p>I'm creating an app using <code>angularjs</code> and <code>typescript</code>. I am using cookies to store same data about user's login and rights etc. I ran into a problem with angular-cookies.d.ts file.</p>\n\n<p>$cookieStore work just fine but according to <a href=\"https://docs.angularjs.org/api/ngCookies/service/$cookieStore\" rel=\"noreferrer\">AngularJS docs</a> this service has been deprecated, so I tried using $cookies instead.\nUsing $cookies caused an error while compiling <code>Property 'put' does not exist</code> so I checked the definition and there is really no property with such name in ICookiesService interface.</p>\n\n<pre><code>declare module \"angular-cookies\" {\n    var _: string;\n    export = _;\n}\n\ndeclare module angular.cookies {\n\n    interface ICookiesService {\n        [index: string]: any;\n    }\n\n    interface ICookieStoreService {\n        get(key: string): any;\n        put(key: string, value: any): void;\n        remove(key: string): void;\n    }\n}\n</code></pre>\n\n<p>Is there actually an error in this type definition or am I doing something wrong?\nThanks for your responses.</p>\n"}, {"tags": ["visual-studio-2013", "typescript", "jasmine", "chutzpah"], "answers": [{"tags": [], "owner": {"reputation": 3214, "user_id": 4416181, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/RfkzC.jpg?s=128&g=1", "display_name": "Jurijs Kovzels", "link": "https://stackoverflow.com/users/4416181/jurijs-kovzels"}, "is_accepted": false, "score": 0, "last_activity_date": 1433456516, "creation_date": 1433456516, "answer_id": 30655218, "question_id": 29897020, "link": "https://stackoverflow.com/questions/29897020/testing-typescript-with-jasmine-in-vs-2013/30655218#30655218", "title": "Testing typescript with Jasmine in vs 2013", "body": "<p>It is difficult to give definitive answer to you question without knowing configuration of your project and what is in your chutzpah.json configuration. It could be difficult setup chutzpah at first but the following steps could help diagnose problems:</p>\n\n<ol>\n<li>Enable tracing in VS->Tools->Options->Chutzpah Setting. This will write extensive log to C:\\Users{username}\\AppData\\Local\\Temp\\chutzpah.log</li>\n<li>Try to run tests in browser (Open in browser context menu option) with F12 tools on.</li>\n<li>See what's in Output. There is two relevant output sources: Tests and Test</li>\n<li>Use <a href=\"https://github.com/mmanela/chutzpah/wiki/Chutzpah.json-Settings-File\" rel=\"nofollow\">chutzpah settings</a>. These is log you can tweak using it.</li>\n</ol>\n"}], "owner": {"reputation": 601, "user_id": 1237164, "user_type": "registered", "accept_rate": 44, "profile_image": "https://i.stack.imgur.com/k4ghU.jpg?s=128&g=1", "display_name": "CuriousBenjamin", "link": "https://stackoverflow.com/users/1237164/curiousbenjamin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 140, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1433458911, "creation_date": 1430140876, "last_edit_date": 1433458911, "question_id": 29897020, "link": "https://stackoverflow.com/questions/29897020/testing-typescript-with-jasmine-in-vs-2013", "title": "Testing typescript with Jasmine in vs 2013", "body": "<p>I am trying to test typescript in vs2013 using Jasmine and Chutzpaah, when I right click on  my <code>test.ts</code> file which has below content and select <code>Run JS Tests</code>, it keeps showing testing is pending in the test explorer.\nAm I doing correct or is there another way to test this?</p>\n\n<pre><code>    /// &lt;reference path=\"../typings/jasmine/jasmine.d.ts\" /&gt;\n\n/// &lt;reference path=\"person.ts\" /&gt;\n\n\ndescribe(\"Person FullName\", () =&gt; {\n\n    var person: Person;\n\n    beforeEach(() =&gt; {\n\n        person = new Person();\n        person.setFirstName(\"Joe\");\n        person.setLastName(\"Smith\");\n    });\n\n    it(\"should concatenate first and last names\", () =&gt; {\n        expect(person.getFullName()).toBe(\"Joe, Smith\");\n    });\n}); \n</code></pre>\n"}, {"tags": ["javascript", "angularjs", "typescript"], "comments": [{"owner": {"reputation": 2514, "user_id": 4763449, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/RkPIB.jpg?s=128&g=1", "display_name": "Vadim Landa", "link": "https://stackoverflow.com/users/4763449/vadim-landa"}, "edited": false, "score": 3, "creation_date": 1430119731, "post_id": 29889650, "comment_id": 47902856, "body": "What&#39;s your exact question? Consider posting some source code as well."}], "answers": [{"tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": false, "score": 2, "last_activity_date": 1430123409, "creation_date": 1430123409, "answer_id": 29890760, "question_id": 29889650, "link": "https://stackoverflow.com/questions/29889650/how-to-external-js-method-in-angularjs-controller/29890760#29890760", "title": "How to external js method in Angularjs controller", "body": "<blockquote>\n  <p>I have a jQuery defined method named \"Mymethod()\" in widjets.js which needs to be called in AngularJs Controller written in Typescript.</p>\n</blockquote>\n\n<p>The jQuery method will most likely need access to the DOM element. Therefore instead of doing this in a controller you should wrap in an angular directive.</p>\n\n<p>Docs : <a href=\"https://docs.angularjs.org/guide/directive\" rel=\"nofollow\">https://docs.angularjs.org/guide/directive</a></p>\n"}], "owner": {"reputation": 2704, "user_id": 457348, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/CMrBy.jpg?s=128&g=1", "display_name": "sandeep", "link": "https://stackoverflow.com/users/457348/sandeep"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 40, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1430123409, "creation_date": 1430119589, "question_id": 29889650, "link": "https://stackoverflow.com/questions/29889650/how-to-external-js-method-in-angularjs-controller", "title": "How to external js method in Angularjs controller", "body": "<p>Hi I have a jQuery defined method named \"Mymethod()\" in widjets.js which needs to be called in AngularJs Controller written in Typescript. </p>\n"}, {"tags": ["typescript", "typescript1.4"], "answers": [{"tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": false, "score": 1, "last_activity_date": 1430100413, "creation_date": 1430100413, "answer_id": 29886042, "question_id": 29885877, "link": "https://stackoverflow.com/questions/29885877/force-only-enum-values-but-ensure-the-string-name-is-passed/29886042#29886042", "title": "Force only enum values, but ensure the string name is passed", "body": "<blockquote>\n  <p>how can I make it transform to ONLINE_DEBIT string without having to typecast it</p>\n</blockquote>\n\n<p>If you want compile time safety you would need something that is <code>string</code> underneath (enums are <code>numbers</code> and all numbers are compatible with an enum). </p>\n\n<p>There is a request for this here : <a href=\"https://github.com/Microsoft/TypeScript/issues/1003\" rel=\"nofollow\">https://github.com/Microsoft/TypeScript/issues/1003</a> (also called <code>tagged unions</code> or <code>string unions</code>).</p>\n"}, {"comments": [{"owner": {"reputation": 6319, "user_id": 647380, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/07709965ee03bbc0a25288dc62102114?s=128&d=identicon&r=PG&f=1", "display_name": "pocesar", "link": "https://stackoverflow.com/users/647380/pocesar"}, "edited": false, "score": 0, "creation_date": 1430171562, "post_id": 29895146, "comment_id": 47935878, "body": "the problem with this method is that the person using the library would need to use <code>Util.enumKey</code>... which kinda defeats the purpose of type safe of enums, but is an interesting workaround"}], "tags": [], "owner": {"reputation": 624, "user_id": 756172, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/332b7450963cc9b6c461b5a6c7324b9c?s=128&d=identicon&r=PG", "display_name": "Antonio", "link": "https://stackoverflow.com/users/756172/antonio"}, "is_accepted": false, "score": 3, "last_activity_date": 1430170006, "last_edit_date": 1430170006, "creation_date": 1430136004, "answer_id": 29895146, "question_id": 29885877, "link": "https://stackoverflow.com/questions/29885877/force-only-enum-values-but-ensure-the-string-name-is-passed/29895146#29895146", "title": "Force only enum values, but ensure the string name is passed", "body": "<p>According to the <a href=\"http://www.typescriptlang.org/Handbook#basic-types-enum\" rel=\"nofollow\">TypeScript Handbook</a>, you can get the string value of an Enum by referencing the Enum as an array with its index.</p>\n\n<pre><code>enum IFundingMethods {\n   ONLINE_DEBIT,\n   BOLETO,\n   CREDIT_CARD\n}\nclass EnumHelper{\n    help(base:IFundingMethods)  {\n        return IFundingMethods[base]\n    }\n}\nvar test :EnumHelper = new EnumHelper();\nalert(test.help(IFundingMethods.CREDIT_CARD));\n</code></pre>\n\n<p>more generic solution</p>\n\n<pre><code>enum IFundingMethods {\n   ONLINE_DEBIT,\n   BOLETO,\n   CREDIT_CARD\n}\nclass Util{         \n    static enumKey&lt;T&gt;(innerEnum:T,value:number):string{\n        return innerEnum[value];\n    }\n}\nvar test = Util.enumKey(IFundingMethods,IFundingMethods.CREDIT_CARD);\nalert(test);\n</code></pre>\n\n<p>hope this helps</p>\n"}, {"tags": [], "owner": {"reputation": 1444, "user_id": 879239, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f77643a95d9bb85e64fd602bd8f2a627?s=128&d=identicon&r=PG", "display_name": "bert", "link": "https://stackoverflow.com/users/879239/bert"}, "is_accepted": true, "score": 2, "last_activity_date": 1430138770, "creation_date": 1430138770, "answer_id": 29896218, "question_id": 29885877, "link": "https://stackoverflow.com/questions/29885877/force-only-enum-values-but-ensure-the-string-name-is-passed/29896218#29896218", "title": "Force only enum values, but ensure the string name is passed", "body": "<p>I have seen this being used. </p>\n\n<pre><code> enum IFundingMethods {\n    ONLINE_DEBIT =&lt;any&gt;'ONLINE_DEBIT',\n    BOLETO =&lt;any&gt;'BOLETO',\n    CREDIT_CARD =&lt;any&gt;'CREDIT_CARD'\n}\n</code></pre>\n\n<p>Typescript compiles it to this:</p>\n\n<pre><code>var IFundingMethods;\n(function (IFundingMethods) {\n    IFundingMethods[IFundingMethods[\"ONLINE_DEBIT\"] = 'ONLINE_DEBIT'] = \"ONLINE_DEBIT\";\n    IFundingMethods[IFundingMethods[\"BOLETO\"] = 'BOLETO'] = \"BOLETO\";\n    IFundingMethods[IFundingMethods[\"CREDIT_CARD\"] = 'CREDIT_CARD'] = \"CREDIT_CARD\";\n})(IFundingMethods || (IFundingMethods = {}));\n</code></pre>\n\n<p>It's not the nicest code but creates an enum that uses strings as values. This should achieve what you're trying to accomplish for the time being. Once typescript allows for a more direct way of creating a string-enum you can change to that.</p>\n"}], "owner": {"reputation": 6319, "user_id": 647380, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/07709965ee03bbc0a25288dc62102114?s=128&d=identicon&r=PG&f=1", "display_name": "pocesar", "link": "https://stackoverflow.com/users/647380/pocesar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 406, "favorite_count": 0, "accepted_answer_id": 29896218, "answer_count": 3, "score": 0, "last_activity_date": 1430170006, "creation_date": 1430099140, "question_id": 29885877, "link": "https://stackoverflow.com/questions/29885877/force-only-enum-values-but-ensure-the-string-name-is-passed", "title": "Force only enum values, but ensure the string name is passed", "body": "<p>Assuming I have these enum and interface:</p>\n\n<pre class=\"lang-typescript prettyprint-override\"><code>export enum IFundingMethods = {\n   ONLINE_DEBIT,\n   BOLETO,\n   CREDIT_CARD\n}\n\nexport interface IFunding {\n   method: IFundingMethods;\n   /* ... */\n}\n\nfunction send(opts: IFunding) { /*...*/ }\n</code></pre>\n\n<p>When calling the function <code>send</code>, the compiler will ask for either IFundMethods.ONLINE_DEBIT, BOLETO or CREDIT_CARD. So when calling the function with:</p>\n\n<pre class=\"lang-typescript prettyprint-override\"><code>send({method: IFundMethods.ONLINE_DEBIT});\n</code></pre>\n\n<p>the function receives a <code>{method: 0}</code>, how can I make it transform to <code>ONLINE_DEBIT</code> string without having to typecast it? </p>\n"}, {"tags": ["javascript", "angularjs", "typescript", "chart.js"], "answers": [{"tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": true, "score": 7, "last_activity_date": 1515402274, "last_edit_date": 1515402274, "creation_date": 1430100478, "answer_id": 29886053, "question_id": 29885809, "link": "https://stackoverflow.com/questions/29885809/how-to-work-out-chartjs-using-typescript-with-chartjs-definitelytyped-from-githu/29886053#29886053", "title": "How to work out Chartjs using TypeScript with Chartjs.definitelyTyped from github", "body": "<p>You can find example usages of <code>chart.d.ts</code> in the form of a tests file right next to the definition : <a href=\"https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/chart.js/chart.js-tests.ts\" rel=\"nofollow noreferrer\">https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/chart.js/chart.js-tests.ts</a></p>\n"}], "owner": {"reputation": 43, "user_id": 3477105, "user_type": "registered", "profile_image": "https://graph.facebook.com/100000029497324/picture?type=large", "display_name": "amcpanaligan", "link": "https://stackoverflow.com/users/3477105/amcpanaligan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 24174, "favorite_count": 2, "accepted_answer_id": 29886053, "answer_count": 1, "score": 4, "last_activity_date": 1515403706, "creation_date": 1430098703, "last_edit_date": 1515403706, "question_id": 29885809, "link": "https://stackoverflow.com/questions/29885809/how-to-work-out-chartjs-using-typescript-with-chartjs-definitelytyped-from-githu", "title": "How to work out Chartjs using TypeScript with Chartjs.definitelyTyped from github", "body": "<p>I want to use Chartjs(chartjs.org) as my charting tool along with AngularJS using TypeScript. I have installed DefinitelyTyped for Chartjs from GitHub to incorporate creation of Chartjs charts in my TypeScript written controller. I can't find any related questions on doing this thing.</p>\n\n<p>I just need to know how we populate data to our charts using DefinitelyTyped.</p>\n"}, {"tags": ["angularjs", "typescript"], "comments": [{"owner": {"reputation": 630270, "user_id": 571407, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2f0d9dec16bae1e06552af55ddefc11f?s=128&d=identicon&r=PG", "display_name": "JB Nizet", "link": "https://stackoverflow.com/users/571407/jb-nizet"}, "edited": false, "score": 0, "creation_date": 1430054610, "post_id": 29878123, "comment_id": 47880455, "body": "Not used to TypeScript, but showParameters is on the scope, not on the controller, so it should probably be <code>this.$scope.$watch(() =&gt; $scope.showParameters</code> or <code>this.$scope.$watch(&#39;showParameters&#39;</code>."}, {"owner": {"reputation": 53661, "user_id": 1413538, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/594bb80f7ed4b0b3770df7ad97c4d16a?s=128&d=identicon&r=PG", "display_name": "Brocco", "link": "https://stackoverflow.com/users/1413538/brocco"}, "edited": false, "score": 0, "creation_date": 1430068191, "post_id": 29878123, "comment_id": 47885616, "body": "If you are using angular v1.3 or later, you can use the bindToController option on your directive which will associate your directive&#39;s scope to your controller."}], "answers": [{"tags": [], "owner": {"reputation": 117193, "user_id": 1679310, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/o6Zfp.jpg?s=128&g=1", "display_name": "Radim K&#246;hler", "link": "https://stackoverflow.com/users/1679310/radim-k%c3%b6hler"}, "is_accepted": false, "score": 3, "last_activity_date": 1430054995, "last_edit_date": 1430054995, "creation_date": 1430054670, "answer_id": 29878206, "question_id": 29878123, "link": "https://stackoverflow.com/questions/29878123/how-to-access-typescript-directives-isolated-scope-value-in-typescript-controlle/29878206#29878206", "title": "How to access typescript directives isolated scope value in typescript controller class?", "body": "<p>We can create interface for our isolated scope and pass it into controller:</p>\n\n<pre><code>// the custom scope interface\nexport interface IUwAuthorityScope extends ng.IScope\n{\n    showParameters: boolean;\n}\n\n// the controller interface\nexport interface IUwAuthorityController \n{\n    loadFinancingType(): void;\n}\n\n\nexport class UwAuthorityController implements IUwAuthorityController \n{\n    // here we inform compiler, that injected '$scope' will be of \n    // our custom type - IUwAuthorityScope\n    constructor(\n        private userService: Services.IUserService,\n        private $scope: IUwAuthorityScope) \n    {\n        ... \n        // here we can watch whatever we expect to be in the $scope \n        this.$scope.$watch(\"showParameters\", showParms =&gt; {\n            // here we can access fully type $scope variables\n            if(this.$scope.showParameters === true) ...\n        });\n    }\n ...\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 13, "user_id": 1112772, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/7f51e5dd38b51a1e17d8797f3e294f09?s=128&d=identicon&r=PG", "display_name": "libin jose chemperi", "link": "https://stackoverflow.com/users/1112772/libin-jose-chemperi"}, "edited": false, "score": 0, "creation_date": 1432205463, "post_id": 30326104, "comment_id": 48833106, "body": "You can use something like   this.$scope[&quot;showParameters&quot;].property. it works"}], "tags": [], "owner": {"reputation": 109, "user_id": 3648235, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/bd6a088938fa1df58cb337ab46133a97?s=128&d=identicon&r=PG&f=1", "display_name": "user3648235", "link": "https://stackoverflow.com/users/3648235/user3648235"}, "is_accepted": false, "score": 1, "last_activity_date": 1432039706, "creation_date": 1432039706, "answer_id": 30326104, "question_id": 29878123, "link": "https://stackoverflow.com/questions/29878123/how-to-access-typescript-directives-isolated-scope-value-in-typescript-controlle/30326104#30326104", "title": "How to access typescript directives isolated scope value in typescript controller class?", "body": "<p>I did follow your advise here but I keep having this error:\nError: [$injector:unpr] Unknown provider: IUwAuthorityScopeProvider &lt;- $scope</p>\n"}], "owner": {"reputation": 13, "user_id": 1112772, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/7f51e5dd38b51a1e17d8797f3e294f09?s=128&d=identicon&r=PG", "display_name": "libin jose chemperi", "link": "https://stackoverflow.com/users/1112772/libin-jose-chemperi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3354, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1432039706, "creation_date": 1430054217, "last_edit_date": 1430055189, "question_id": 29878123, "link": "https://stackoverflow.com/questions/29878123/how-to-access-typescript-directives-isolated-scope-value-in-typescript-controlle", "title": "How to access typescript directives isolated scope value in typescript controller class?", "body": "<p>I have a <code>Typescript</code> directive class and a controller class like below. I want to set a <em>watch</em> on <em>isolated scope</em> variable in the <code>Typescript</code> <em>controller</em> class. I am not able to access the <em>isolated scope</em> variables inside the controller class. </p>\n\n<p>How can I do that?</p>\n\n<p>My <code>directive</code> class:</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>module Sgm.Workspace.Web.Users {\r\n  \"use strict\";\r\n  export class UwAuthority implements ng.IDirective {\r\n    restrict = \"E\";\r\n    replace = false;\r\n    templateUrl = \"/app/features/users/uwAuthority.html\";\r\n    scope = {\r\n      showParameters: '=showParameters'\r\n    };\r\n    controller = UwAuthorityController;\r\n    //controllerAs = \"vm\";\r\n\r\n    link(scope: ng.IScope, element: ng.IAugmentedJQuery, attr: ng.IAttributes, controller: UserParametersController): void {\r\n\r\n    }\r\n\r\n    static instance(): ng.IDirective {\r\n      return new UwAuthority();\r\n    }\r\n\r\n  }\r\n  angular.module(\"workspaceApp\")\r\n    .directive(\"showUwAuthority\", UwAuthority.instance)\r\n    .controller(\"UwAuthorityController\", ['userService', '$scope', (userService: Sgm.Workspace.Web.Services.IUserService, $scope: ng.IScope) =&gt; new UwAuthorityController(userService, $scope)]);\r\n}</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p>and my <code>controller</code> class is </p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>module Sgm.Workspace.Web.Users {\r\n  export interface IUwAuthorityController {\r\n\r\n    loadFinancingType(): void;\r\n  }\r\n\r\n\r\n  export class UwAuthorityController implements IUwAuthorityController {\r\n\r\n    public modernBrowsers: any = [];\r\n    public outputBrowsers: any = [];\r\n    public localLang: any = [];\r\n    public showParameters: boolean;\r\n    static $inject = ['userService', '$scope'];\r\n\r\n    constructor(\r\n      private userService: Services.IUserService,\r\n      private $scope: ng.IScope) {\r\n      var vm = this;\r\n\r\n      var a = this.showParameters;\r\n      this.loadFinancingType();\r\n\r\n      this.$scope.$watch(() =&gt; this.showParameters, (oldValue: string, newValue: string) =&gt; {\r\n        console.log(\"showParameters\")\r\n      });\r\n\r\n      this.$scope.$watch(() =&gt; this.outputBrowsers, (oldValue: string, newValue: string) =&gt; {\r\n        this.tellmeItChanged(oldValue, newValue);\r\n      });\r\n    }\r\n    public loadFinancingType = (): void =&gt; {\r\n\r\n      this.modernBrowsers = [{\r\n        name: \"JUMBO 5/1 LIBOR ARM EVERBANK\",\r\n        ticked: false\r\n      }];\r\n\r\n      this.localLang = {\r\n        selectAll: \"All\",\r\n        selectNone: \"None\",\r\n        reset: \"Reset\",\r\n        search: \"Search...\",\r\n        nothingSelected: \"Select\"\r\n      }\r\n\r\n\r\n    }\r\n\r\n    private tellmeItChanged(oldValue: string, newValue: string) {\r\n\r\n      if (oldValue !== newValue) {\r\n        if (this.outputBrowsers.length &gt; 1) {\r\n          document.getElementById('plan').childNodes[0].childNodes[0].nodeValue = this.outputBrowsers.length + ' Selected';\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n\r\n}</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"}, {"tags": ["angularjs", "typescript", "systemjs", "typescript1.5"], "answers": [{"comments": [{"owner": {"reputation": 2121, "user_id": 1451296, "user_type": "registered", "accept_rate": 48, "profile_image": "https://i.stack.imgur.com/jIpxd.jpg?s=128&g=1", "display_name": "httpete", "link": "https://stackoverflow.com/users/1451296/httpete"}, "edited": false, "score": 0, "creation_date": 1433951975, "post_id": 29885325, "comment_id": 49575699, "body": "How about outputting AMD basarat? Is there an advantage over commonjs?"}, {"owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "reply_to_user": {"reputation": 2121, "user_id": 1451296, "user_type": "registered", "accept_rate": 48, "profile_image": "https://i.stack.imgur.com/jIpxd.jpg?s=128&g=1", "display_name": "httpete", "link": "https://stackoverflow.com/users/1451296/httpete"}, "edited": false, "score": 0, "creation_date": 1433979182, "post_id": 29885325, "comment_id": 49590176, "body": "You get to use it in node (as is)"}, {"owner": {"reputation": 2121, "user_id": 1451296, "user_type": "registered", "accept_rate": 48, "profile_image": "https://i.stack.imgur.com/jIpxd.jpg?s=128&g=1", "display_name": "httpete", "link": "https://stackoverflow.com/users/1451296/httpete"}, "edited": false, "score": 0, "creation_date": 1433980053, "post_id": 29885325, "comment_id": 49590422, "body": "This is a browser only angular app. I don&#39;t think I need to think about commonjs. Am I right?"}, {"owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "reply_to_user": {"reputation": 2121, "user_id": 1451296, "user_type": "registered", "accept_rate": 48, "profile_image": "https://i.stack.imgur.com/jIpxd.jpg?s=128&g=1", "display_name": "httpete", "link": "https://stackoverflow.com/users/1451296/httpete"}, "edited": false, "score": 0, "creation_date": 1433981805, "post_id": 29885325, "comment_id": 49590851, "body": "You might want to test portions with node. Also you might want to use modules from NPM"}], "tags": [], "owner": {"reputation": 204459, "user_id": 390330, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1400be56ff17549b926dd3260da4a494?s=128&d=identicon&r=PG", "display_name": "basarat", "link": "https://stackoverflow.com/users/390330/basarat"}, "is_accepted": true, "score": 0, "last_activity_date": 1430094529, "creation_date": 1430094529, "answer_id": 29885325, "question_id": 29876678, "link": "https://stackoverflow.com/questions/29876678/angularjs-typescript-migration/29885325#29885325", "title": "Angularjs typescript migration", "body": "<blockquote>\n  <p>Should I output es6 modules from typescript and use system.js module loading with the generated code</p>\n</blockquote>\n\n<p>I would output <code>commonjs</code> modules and then use System.js at the moment. Note that <code>System.js</code> module output is going to arrive in TypeScript 1.6. See roadmap : <a href=\"https://github.com/Microsoft/TypeScript/wiki/Roadmap#16\" rel=\"nofollow\">https://github.com/Microsoft/TypeScript/wiki/Roadmap#16</a></p>\n"}, {"tags": [], "owner": {"reputation": 5204, "user_id": 4917853, "user_type": "registered", "accept_rate": 75, "profile_image": "https://graph.facebook.com/931926383494838/picture?type=large", "display_name": "Prasanjit Dey", "link": "https://stackoverflow.com/users/4917853/prasanjit-dey"}, "is_accepted": false, "score": 0, "last_activity_date": 1432161098, "creation_date": 1432161098, "answer_id": 30361482, "question_id": 29876678, "link": "https://stackoverflow.com/questions/29876678/angularjs-typescript-migration/30361482#30361482", "title": "Angularjs typescript migration", "body": "<p>I would suggest using commonjs since there are lot of node modules already written using that. The problem with using es6 modules is a large number of browsers are not going to support es6 modules for a long time.</p>\n"}], "owner": {"reputation": 6612, "user_id": 1401202, "user_type": "registered", "accept_rate": 37, "profile_image": "https://www.gravatar.com/avatar/c6c31f018cbb2c264b877339b9568568?s=128&d=identicon&r=PG", "display_name": "kpg", "link": "https://stackoverflow.com/users/1401202/kpg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 598, "favorite_count": 1, "accepted_answer_id": 29885325, "answer_count": 2, "score": 2, "last_activity_date": 1432161098, "creation_date": 1430045344, "last_edit_date": 1430057030, "question_id": 29876678, "link": "https://stackoverflow.com/questions/29876678/angularjs-typescript-migration", "title": "Angularjs typescript migration", "body": "<p>I have a fairly sizeable angularjs application that I will eventually migrate to Angular 2.</p>\n\n<p>I want to to take whatever steps I can now to make future migration easier. </p>\n\n<p>I am converting my controllers and services to typescript and organising my files in a component-oriented folder structure. </p>\n\n<p>What I would really like to be able to do is use es6 style module loading. </p>\n\n<p>I understand that system.js can provide the loading functionality now and I can use es6 import syntax in typescript 1.5. </p>\n\n<p>My question is, how should I use the two together? Should I output es6 modules from typescript and use system.js module loading with the generated code? Or is some other step required? </p>\n"}, {"tags": ["angular", "typescript", "annotations", "components"], "answers": [{"comments": [{"owner": {"reputation": 982, "user_id": 2619454, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/692663640cecaed3db06900e71c7be6b?s=128&d=identicon&r=PG", "display_name": "Kaushik", "link": "https://stackoverflow.com/users/2619454/kaushik"}, "edited": false, "score": 0, "creation_date": 1430025778, "post_id": 29873962, "comment_id": 47873003, "body": "I already tried changing the file name. Are you telling I need to change only the file name or also the System.import statement along with it. Changing only the file name from main.js to main.es6.js does not work, the same issue shows up."}, {"owner": {"reputation": 127321, "user_id": 2435473, "user_type": "registered", "accept_rate": 59, "profile_image": "https://i.stack.imgur.com/8hKGc.jpg?s=128&g=1", "display_name": "Pankaj Parkar", "link": "https://stackoverflow.com/users/2435473/pankaj-parkar"}, "reply_to_user": {"reputation": 982, "user_id": 2619454, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/692663640cecaed3db06900e71c7be6b?s=128&d=identicon&r=PG", "display_name": "Kaushik", "link": "https://stackoverflow.com/users/2619454/kaushik"}, "edited": false, "score": 0, "creation_date": 1430028868, "post_id": 29873962, "comment_id": 47873528, "body": "@Kaushik I&#39;m only saying to change file name that should solve your issue"}, {"owner": {"reputation": 127321, "user_id": 2435473, "user_type": "registered", "accept_rate": 59, "profile_image": "https://i.stack.imgur.com/8hKGc.jpg?s=128&g=1", "display_name": "Pankaj Parkar", "link": "https://stackoverflow.com/users/2435473/pankaj-parkar"}, "reply_to_user": {"reputation": 982, "user_id": 2619454, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/692663640cecaed3db06900e71c7be6b?s=128&d=identicon&r=PG", "display_name": "Kaushik", "link": "https://stackoverflow.com/users/2619454/kaushik"}, "edited": false, "score": 1, "creation_date": 1430037572, "post_id": 29873962, "comment_id": 47875387, "body": "@Kaushik can you reproduce the problem in plunkr, see the problem I reproduced here <a href=\"http://plnkr.co/edit/Is9U5q3oydB7DY8DKuBE?p=preview\" rel=\"nofollow noreferrer\">plnkr.co/edit/Is9U5q3oydB7DY8DKuBE?p=preview</a>, if you rename the file to main.es6.js then it will fix. are you sure you are using <code>es5</code>/<code>es6</code>?"}, {"owner": {"reputation": 982, "user_id": 2619454, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/692663640cecaed3db06900e71c7be6b?s=128&d=identicon&r=PG", "display_name": "Kaushik", "link": "https://stackoverflow.com/users/2619454/kaushik"}, "edited": false, "score": 0, "creation_date": 1430038580, "post_id": 29873962, "comment_id": 47875634, "body": "@pankajparkar The snippet is already there in plunkr. I have mentioned in the last passage of my question that it works fine in plunkr but not in local server. I have mentioned the links there. Can you try running it from a local server and try the same?"}, {"owner": {"reputation": 982, "user_id": 2619454, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/692663640cecaed3db06900e71c7be6b?s=128&d=identicon&r=PG", "display_name": "Kaushik", "link": "https://stackoverflow.com/users/2619454/kaushik"}, "edited": false, "score": 0, "creation_date": 1430038834, "post_id": 29873962, "comment_id": 47875698, "body": "@pankajparkar I checked the plnkr link that you commented. It works there. :) The same exact code when I run in local server it does not work."}, {"owner": {"reputation": 982, "user_id": 2619454, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/692663640cecaed3db06900e71c7be6b?s=128&d=identicon&r=PG", "display_name": "Kaushik", "link": "https://stackoverflow.com/users/2619454/kaushik"}, "edited": false, "score": 0, "creation_date": 1430039334, "post_id": 29873962, "comment_id": 47875819, "body": "@pankajparkar check the question. I have posted the images itself"}], "tags": [], "owner": {"reputation": 127321, "user_id": 2435473, "user_type": "registered", "accept_rate": 59, "profile_image": "https://i.stack.imgur.com/8hKGc.jpg?s=128&g=1", "display_name": "Pankaj Parkar", "link": "https://stackoverflow.com/users/2435473/pankaj-parkar"}, "is_accepted": false, "score": 2, "last_activity_date": 1430025116, "last_edit_date": 1430025116, "creation_date": 1430024541, "answer_id": 29873962, "question_id": 29873381, "link": "https://stackoverflow.com/questions/29873381/cannot-read-property-split-of-undefined/29873962#29873962", "title": "Cannot read property &#39;split&#39; of undefined", "body": "<p>The problem is with your file name in which you declared angular app.</p>\n\n<p>It should be the <code>main.es6.js</code> instead of <code>main.js</code></p>\n\n<p>The file-name format should always be the name specified in <code>System.import('main')</code> which is <code>main.</code> + <code>es6.</code> + <code>js</code></p>\n\n<p><a href=\"http://www.htmlxprs.com/post/54/creating-a-super-simple-todo-app-using-angular-2-tutorial\" rel=\"nofollow\"><strong>Read this article for better uderstanding</strong></a></p>\n"}, {"tags": [], "owner": {"reputation": 982, "user_id": 2619454, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/692663640cecaed3db06900e71c7be6b?s=128&d=identicon&r=PG", "display_name": "Kaushik", "link": "https://stackoverflow.com/users/2619454/kaushik"}, "is_accepted": true, "score": 4, "last_activity_date": 1430042241, "last_edit_date": 1430042241, "creation_date": 1430040878, "answer_id": 29875953, "question_id": 29873381, "link": "https://stackoverflow.com/questions/29873381/cannot-read-property-split-of-undefined/29875953#29875953", "title": "Cannot read property &#39;split&#39; of undefined", "body": "<p>It seems we have to import traceur-runtime.js and set traceur options.</p>\n\n<p>Here is the <a href=\"http://plnkr.co/edit/P17i9CS10Vwqd7vJSesr?p=preview\" rel=\"nofollow\">plunker link</a></p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;link rel=\"stylesheet\" href=\"style.css\"&gt;\n&lt;script src=\"https://github.jspm.io/jmcriffey/bower-traceur-runtime@0.0.87/traceur-runtime.js\"&gt;&lt;/script&gt;\n&lt;script src=\"https://jspm.io/system@0.16.js\"&gt;&lt;/script&gt;\n&lt;script src=\"https://code.angularjs.org/2.0.0-alpha.19/angular2.dev.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;my-app&gt;&lt;/my-app&gt;\n&lt;script&gt;\nSystem.config({\n    traceurOptions: {\n        annotations: true,\n        memberVariables: true,\n        types: true\n    },\n    paths: {\n        '*': '*.js',\n        'angular2/*': 'angular2/*'\n    }\n});\nSystem.import('main');\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n"}], "owner": {"reputation": 982, "user_id": 2619454, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/692663640cecaed3db06900e71c7be6b?s=128&d=identicon&r=PG", "display_name": "Kaushik", "link": "https://stackoverflow.com/users/2619454/kaushik"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 9241, "favorite_count": 0, "accepted_answer_id": 29875953, "answer_count": 2, "score": 3, "last_activity_date": 1487581578, "creation_date": 1430018990, "last_edit_date": 1487581578, "question_id": 29873381, "link": "https://stackoverflow.com/questions/29873381/cannot-read-property-split-of-undefined", "title": "Cannot read property &#39;split&#39; of undefined", "body": "<p>I have the following code running on my local server.</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n   &lt;link rel=\"stylesheet\" href=\"style.css\"&gt;\n   &lt;script src=\"https://jspm.io/system@0.16.js\"&gt;&lt;/script&gt;\n   &lt;script src=\"https://code.angularjs.org/2.0.0-alpha.19/angular2.dev.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;my-app&gt;&lt;/my-app&gt;\n  &lt;script&gt;\n     System.config({\n       paths: {\n          '*': '*.js',\n          'angular2/*': 'angular2/*'\n      }\n });\n System.import('main');\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>The above is the index.html page.</p>\n\n<pre><code>import {Component, View, bootstrap} from 'angular2/angular2';\n\n@Component({\n  selector: 'my-app'\n})\n@View({\n  template: '&lt;h1&gt;My first Angular 2 App&lt;/h1&gt;'\n})\nclass AppComponent {\n}\n\nbootstrap(AppComponent);\n</code></pre>\n\n<p>The above is the main.js file.</p>\n\n<p>When I run this on the server I get the following in console.</p>\n\n<pre><code>http://localhost:63342/es6/main.js:3:1: Unexpected token @\nangular2.dev.js:752 TypeError: Error loading \"main\" at      http://localhost:63342/es6/main.js\nCannot read property 'split' of undefined\nangular2.dev.js:753 TypeError: Error loading \"main\" at http://localhost:63342/es6/main.js\nCannot read property 'split' of undefined\n  at Zone.longStackTraceZone.getLongStacktrace (https://code.angularjs.org/2.0.0-alpha.19/angular2.dev.js:728:35)\n  at Zone.longStackTraceZone.onError (https://code.angularjs.org/2.0.0-alpha.19/angular2.dev.js:753:19)\n  at Zone.run (https://code.angularjs.org/2.0.0-alpha.19/angular2.dev.js:92:14)\n  at zoneBoundFn (https://code.angularjs.org/2.0.0-alpha.19/angular2.dev.js:66:19)\n  at D (https://jspm.io/es6-module-loader@0.16.5.js:1:7439)\n  at I (https://jspm.io/es6-module-loader@0.16.5.js:1:7071)\n  at O.7.O.when (https://jspm.io/es6-module-loader@0.16.5.js:1:10745)\n  at w.7.w.run (https://jspm.io/es6-module-loader@0.16.5.js:1:9781)\n  at e.3.e._drain (https://jspm.io/es6-module-loader@0.16.5.js:1:1740)\n  at 3.e.drain (https://jspm.io/es6-module-loader@0.16.5.js:1:1394)\n--- Sun Apr 26 2015 08:27:39 GMT+0530 (IST) - 738ms ago\n Error\n  at Function.getStacktraceWithUncaughtError (https://code.angularjs.org/2.0.0-alpha.19/angular2.dev.js:699:32)\n  at Zone.longStackTraceZone.fork (https://code.angularjs.org/2.0.0-alpha.19/angular2.dev.js:758:43)\n  at Zone.bind (https://code.angularjs.org/2.0.0-alpha.19/angular2.dev.js:64:21)\n  at Function.Zone.bindArguments (https://code.angularjs.org/2.0.0-alpha.19/angular2.dev.js:195:22)\n  at t.fnNames.forEach.obj.(anonymous function) [as then] (https://code.angularjs.org/2.0.0-alpha.19/angular2.dev.js:186:42)\n  at k (https://jspm.io/es6-module-loader@0.16.5.js:1:21515)\n  at https://jspm.io/es6-module-loader@0.16.5.js:1:22664\n  at Zone.run (https://code.angularjs.org/2.0.0-   alpha.19/angular2.dev.js:89:19)\n  at zoneBoundFn (https://code.angularjs.org/2.0.0-alpha.19/angular2.dev.js:66:19)\n  at D (https://jspm.io/es6-module-loader@0.16.5.js:1:7439)\n--- Sun Apr 26 2015 08:27:39 GMT+0530 (IST) - 739ms ago\nError\n  at Function.getStacktraceWithUncaughtError (https://code.angularjs.org/2.0.0-alpha.19/angular2.dev.js:699:32)\n  at Zone.longStackTraceZone.fork (https://code.angularjs.org/2.0.0-alpha.19/angular2.dev.js:758:43)\n  at Zone.bind (https://code.angularjs.org/2.0.0-alpha.19/angular2.dev.js:64:21)\n  at Function.Zone.bindArguments (https://code.angularjs.org/2.0.0-alpha.19/angular2.dev.js:195:22)\n  at t.fnNames.forEach.obj.(anonymous function) [as then] (https://code.angularjs.org/2.0.0-alpha.19/angular2.dev.js:186:42)\n  at x.import (https://jspm.io/es6-module-loader@0.16.5.js:1:22539)\n  at x.$__global.upgradeSystemLoader.e.import (https://jspm.io/system@0.16.7.js:5:1180)\n  at http://localhost:63342/es6/index.html:17:18\n angular2.dev.js:752 TypeError: Cannot read property '__useDefault' of    undefined\nangular2.dev.js:753 TypeError: Cannot read property '__useDefault' of undefined\n  at https://jspm.io/system@0.16.7.js:5:1220\n  at Zone.run (https://code.angularjs.org/2.0.0-alpha.19/angular2.dev.js:89:19)\n  at zoneBoundFn (https://code.angularjs.org/2.0.0-alpha.19/angular2.dev.js:66:19)\n  at D (https://jspm.io/es6-module-loader@0.16.5.js:1:7439)\n  at I (https://jspm.io/es6-module-loader@0.16.5.js:1:7071)\n  at O.7.O.when (https://jspm.io/es6-module-loader@0.16.5.js:1:10745)\n  at w.7.w.run (https://jspm.io/es6-module-loader@0.16.5.js:1:9781)\n  at e.3.e._drain (https://jspm.io/es6-module-loader@0.16.5.js:1:1740)\n  at 3.e.drain (https://jspm.io/es6-module-loader@0.16.5.js:1:1394)\n  at MutationObserver.t (https://jspm.io/es6-module-loader@0.16.5.js:1:3302)\n--- Sun Apr 26 2015 08:27:39 GMT+0530 (IST) - 742ms ago\nError\n  at Function.getStacktraceWithUncaughtError (https://code.angularjs.org/2.0.0-alpha.19/angular2.dev.js:699:32)\n  at Zone.longStackTraceZone.fork (https://code.angularjs.org/2.0.0-alpha.19/angular2.dev.js:758:43)\n  at Zone.bind (https://code.angularjs.org/2.0.0-alpha.19/angular2.dev.js:64:21)\n  at Function.Zone.bindArguments (https://code.angularjs.org/2.0.0-alpha.19/angular2.dev.js:195:22)\n  at t.fnNames.forEach.obj.(anonymous function) [as then] (https://code.angularjs.org/2.0.0-alpha.19/angular2.dev.js:186:42)\n  at x.$__global.upgradeSystemLoader.e.import (https://jspm.io/system@0.16.7.js:5:1195)\n  at http://localhost:63342/es6/index.html:17:18\n</code></pre>\n\n<p>The above code is taken from <a href=\"https://angular.io/docs/js/latest/guide/setup.html\" rel=\"nofollow noreferrer\">angular.io</a>, the official angular 2 website. If the same code is executed in <a href=\"http://plnkr.co/edit/MRz2i7sjupzxERPAa3SF?p=preview\" rel=\"nofollow noreferrer\">plunkr</a>, I get the output \"My first Angular 2 App\" but not in my local. </p>\n\n<p>Am I missing something?</p>\n"}, {"tags": ["javascript", "typescript"], "comments": [{"owner": {"reputation": 3755, "user_id": 183704, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/xdlU1.jpg?s=128&g=1", "display_name": "BuZZ-dEE", "link": "https://stackoverflow.com/users/183704/buzz-dee"}, "edited": false, "score": 1, "creation_date": 1527636587, "post_id": 29868120, "comment_id": 88197873, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/21247278/about-d-ts-in-typescript\">About &quot;*.d.ts&quot; in TypeScript</a>"}], "answers": [{"comments": [{"owner": {"reputation": 84872, "user_id": 2545680, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/DCo33.jpg?s=128&g=1", "display_name": "Max Koretskyi", "link": "https://stackoverflow.com/users/2545680/max-koretskyi"}, "edited": false, "score": 0, "creation_date": 1429983394, "post_id": 29868264, "comment_id": 47862039, "body": "Thanks, does it mean that they write this code using TypeScript? Or can it be that they just wanted to make information about interfaces easily accessible? Can you also please elaborate a bit on this <i>The resulting declaration file can then be used to describe the exported virtual TypeScript types of a JavaScript library or module when a third-party developer consumes it from TypeScript.</i>?"}, {"owner": {"reputation": 682, "user_id": 3324375, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/5ce271f8dad684423464974f0b204d6c?s=128&d=identicon&r=PG", "display_name": "Marcus Henrique", "link": "https://stackoverflow.com/users/3324375/marcus-henrique"}, "edited": false, "score": 0, "creation_date": 1429983786, "post_id": 29868264, "comment_id": 47862201, "body": "In C/C++ we use header files to expose funtions, structs, classes to external users without reveal our implementation. With TypeScript is the same, external users know only exported types, so they know what are the operations, classes but not the implementation."}, {"owner": {"reputation": 84872, "user_id": 2545680, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/DCo33.jpg?s=128&g=1", "display_name": "Max Koretskyi", "link": "https://stackoverflow.com/users/2545680/max-koretskyi"}, "reply_to_user": {"reputation": 682, "user_id": 3324375, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/5ce271f8dad684423464974f0b204d6c?s=128&d=identicon&r=PG", "display_name": "Marcus Henrique", "link": "https://stackoverflow.com/users/3324375/marcus-henrique"}, "edited": false, "score": 0, "creation_date": 1429985770, "post_id": 29868264, "comment_id": 47862871, "body": "@MarcusHenrique, yeah, I&#39;m curios whether this is by-product of writing using <code>TypeScript</code>, or it was generated from JavaScript source files."}, {"owner": {"reputation": 8361, "user_id": 439026, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/eb050c54b891309ffdd14a0e1fdd5e66?s=128&d=identicon&r=PG", "display_name": "zeh", "link": "https://stackoverflow.com/users/439026/zeh"}, "edited": false, "score": 0, "creation_date": 1430084436, "post_id": 29868264, "comment_id": 47891763, "body": "This can be generated in a number of ways (manually, from the TSC compiler, sometimes from JavaScript, etc). It is <i>needed</i> in the sense that if you want TypeScript code to refer to this module with auto-completion, type checking, and etc, you need the definition file. If not you could define it as of the &quot;any&quot; type and just use it as in regular JavaScript, that is, without any compiler checking."}], "tags": [], "owner": {"reputation": 955936, "user_id": 29407, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/e3a181e9cdd4757a8b416d93878770c5?s=128&d=identicon&r=PG", "display_name": "Darin Dimitrov", "link": "https://stackoverflow.com/users/29407/darin-dimitrov"}, "is_accepted": false, "score": 5, "last_activity_date": 1429981936, "creation_date": 1429981936, "answer_id": 29868264, "question_id": 29868120, "link": "https://stackoverflow.com/questions/29868120/what-is-d-ts-file-and-why-it-is-needed/29868264#29868264", "title": "what is .d.ts file and why it is needed", "body": "<p>It's a <a href=\"http://en.wikipedia.org/wiki/TypeScript#Declaration_files\" rel=\"nofollow noreferrer\">declaration file</a>:</p>\n\n<blockquote>\n  <p>When a TypeScript script gets compiled there is an option to generate a\n  declaration file (with the extension .d.ts) that functions as an\n  interface to the components in the compiled JavaScript. In the process\n  the compiler strips away all function and method bodies and preserves\n  only the signatures of the types that are exported. The resulting\n  declaration file can then be used to describe the exported virtual\n  TypeScript types of a JavaScript library or module when a third-party\n  developer consumes it from TypeScript.</p>\n  \n  <p>The concept of declaration files is analogous to the concept of header\n  file found in C/C++.</p>\n</blockquote>\n"}, {"comments": [{"owner": {"reputation": 793, "user_id": 4371525, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/1fp8o.jpg?s=128&g=1", "display_name": "Shy Agam", "link": "https://stackoverflow.com/users/4371525/shy-agam"}, "edited": false, "score": 0, "creation_date": 1522538048, "post_id": 29868265, "comment_id": 86194206, "body": "Could you elaborate on that? Why is this important? Why can&#39;t we just write a class and export it for example?"}], "tags": [], "owner": {"reputation": 1175, "user_id": 1330907, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/0jEMz.png?s=128&g=1", "display_name": "Neo Ko", "link": "https://stackoverflow.com/users/1330907/neo-ko"}, "is_accepted": false, "score": 1, "last_activity_date": 1527646590, "last_edit_date": 1527646590, "creation_date": 1429981944, "answer_id": 29868265, "question_id": 29868120, "link": "https://stackoverflow.com/questions/29868120/what-is-d-ts-file-and-why-it-is-needed/29868265#29868265", "title": "what is .d.ts file and why it is needed", "body": "<p>Here is the <a href=\"http://www.typescriptlang.org/Handbook#writing-dts-files\" rel=\"nofollow noreferrer\">definition</a>. \nThe <code>d.ts</code> files describe the shape of 3rd party library, and make the TypeScript compiler know how to deal with this 3rd party code (supply type information to compiler)</p>\n"}], "owner": {"reputation": 84872, "user_id": 2545680, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/DCo33.jpg?s=128&g=1", "display_name": "Max Koretskyi", "link": "https://stackoverflow.com/users/2545680/max-koretskyi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 7114, "favorite_count": 0, "answer_count": 2, "score": 5, "last_activity_date": 1527646590, "creation_date": 1429981168, "question_id": 29868120, "link": "https://stackoverflow.com/questions/29868120/what-is-d-ts-file-and-why-it-is-needed", "title": "what is .d.ts file and why it is needed", "body": "<p>I'm reviewing a source code for <code>angular-ui-router</code> and there is the <code>angular-ui-router.d.ts</code> file inside <a href=\"https://github.com/angular-ui/ui-router/tree/master/api\" rel=\"noreferrer\">api</a> folder with the following content:</p>\n\n<pre><code>declare module ng.ui {\n\n    interface IState {\n        name?: string;\n        template?: string;\n        templateUrl?: any; // string || () =&gt; string\n        templateProvider?: any; // () =&gt; string || IPromise&lt;string&gt;\n    }\n\n    interface ITypedState&lt;T&gt; extends IState {\n        data?: T;\n    }\n</code></pre>\n\n<p>I've read that is file is TypeScript type definitions. What is it? Why is it needed?</p>\n"}, {"tags": ["node.js", "visual-studio-2013", "npm", "typescript", "firebase"], "answers": [{"comments": [{"owner": {"reputation": 2847, "user_id": 2760557, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/259dfbcc7f03ebddcbe070f8fc9115f7?s=128&d=identicon&r=PG&f=1", "display_name": "Gustav", "link": "https://stackoverflow.com/users/2760557/gustav"}, "edited": false, "score": 0, "creation_date": 1430050789, "post_id": 29872363, "comment_id": 47879159, "body": "Thank you! That did it. A bit embarrassed I forgot about the definition files. But point 2 and 3 were really helpful. To get it working I had to do a bit more actually. I looked at how the express.d.ts were set up and it had a module declared at the top level with the same name as the file and the export at the bottom of that module. When I did that with the firebase.d.ts it started working. Not optimal editing in those files though.. still thank you."}], "tags": [], "owner": {"reputation": 4066, "user_id": 567091, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/db9fadaca93c6c592ed619248daf9b89?s=128&d=identicon&r=PG", "display_name": "NYCdotNet", "link": "https://stackoverflow.com/users/567091/nycdotnet"}, "is_accepted": true, "score": 2, "last_activity_date": 1430008696, "creation_date": 1430008696, "answer_id": 29872363, "question_id": 29864875, "link": "https://stackoverflow.com/questions/29864875/visual-studio-not-finding-firebase-node-module/29872363#29872363", "title": "visual studio not finding firebase node module", "body": "<p>Three things:</p>\n\n<ul>\n<li>You should download the Firebase type definition from Definitely Typed using NuGet, TSD, or some other method.</li>\n<li>The Firebase definition on Definitely Typed doesn't seem to be written in an external module form.  You may need to add the line <code>export = Firebase;</code> at the bottom of it.</li>\n<li>TypeScript currently has odd default behavior with definition files (d.ts) that describe external modules written in JavaScript; it will search in each directory from the directory where the file is back to the root of the current drive looking for a <code>.ts</code> or <code>.d.ts</code> file with a name that matches the name of the thing you've imported.  So your best bet is to move the <code>Firebase.d.ts</code> file to the root of the project.  If you're interested in a bit more discussion on this, check out <a href=\"https://github.com/Microsoft/TypeScript/issues/2338\" rel=\"nofollow\">https://github.com/Microsoft/TypeScript/issues/2338</a> .  They're working on it.</li>\n</ul>\n\n<p>If you do those three things, it should work.</p>\n"}], "owner": {"reputation": 2847, "user_id": 2760557, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/259dfbcc7f03ebddcbe070f8fc9115f7?s=128&d=identicon&r=PG&f=1", "display_name": "Gustav", "link": "https://stackoverflow.com/users/2760557/gustav"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1326, "favorite_count": 1, "accepted_answer_id": 29872363, "answer_count": 1, "score": 1, "last_activity_date": 1430008696, "creation_date": 1429963223, "question_id": 29864875, "link": "https://stackoverflow.com/questions/29864875/visual-studio-not-finding-firebase-node-module", "title": "visual studio not finding firebase node module", "body": "<p>I used the command <code>npm install firebase --save</code> from the root of my project folder and a firebase folder was successfully added to my node_modules folder and the packages.json was also updated.</p>\n\n<p>I also use typescript so I have a app.ts file where I try and do <code>import Firebase = require(\"firebase\");</code></p>\n\n<p>However it doesn't work. I get red squiggles and error saying <code>cannot find external module \"firebase\"</code>.</p>\n\n<p>I have installed express and importing it in app.ts as well and that works fine, no errors.</p>\n\n<p>I have tried to look through the firebase source but its minified and impossible to try and do any finding there, about what is exported and such.</p>\n\n<p>Any ideas about what might be wrong and how I can fix it?</p>\n"}, {"tags": ["javascript", "typescript", "compatibility", "tsc", "ecmascript-3"], "comments": [{"owner": {"reputation": 14720, "user_id": 2074608, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WzNwl.png?s=128&g=1", "display_name": "Qantas 94 Heavy", "link": "https://stackoverflow.com/users/2074608/qantas-94-heavy"}, "edited": false, "score": 3, "creation_date": 1429955828, "post_id": 29863616, "comment_id": 47852583, "body": "JavaScript and the DOM API are separate things, so no."}], "answers": [{"comments": [{"owner": {"reputation": 9417, "user_id": 46810, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/2079ae5b8b9992f633c41db678767d89?s=128&d=identicon&r=PG", "display_name": "QueueHammer", "link": "https://stackoverflow.com/users/46810/queuehammer"}, "edited": false, "score": 1, "creation_date": 1497284539, "post_id": 29866615, "comment_id": 76001996, "body": "It should be stated that ES5 is also not supported in transpiling. So <code>Array.prototype.reduce</code> or object getters / setters are not supported when using the ES3 option."}], "tags": [], "owner": {"reputation": 8361, "user_id": 439026, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/eb050c54b891309ffdd14a0e1fdd5e66?s=128&d=identicon&r=PG", "display_name": "zeh", "link": "https://stackoverflow.com/users/439026/zeh"}, "is_accepted": true, "score": 4, "last_activity_date": 1429973008, "creation_date": 1429973008, "answer_id": 29866615, "question_id": 29863616, "link": "https://stackoverflow.com/questions/29863616/tsc-what-does-target-es3-compatibility-flag-do/29866615#29866615", "title": "TSC: what does --target ES3 compatibility flag do?", "body": "<p>Flags like <code>-es5</code>, <code>es3</code>, etc do indeed take care of supporting transpiling of advanced TS/ES6 features into their equivalent (when possible) in previous versions of JavaScript (for example, with <a href=\"https://github.com/Microsoft/TypeScript/wiki/What&#39;s-new-in-TypeScript#forof-support\" rel=\"nofollow\">for..off</a>).</p>\n\n<p>However, <code>document.querySelector</code> is not part of the ECMAScript standard. It's part of the DOM API, and ignored by TypeScript. The transpiler is not trying to provide browser compatibility, but rather, <em>language</em> compatibility. You might find shims that say they're for specific ECMAScript versions that roll API shims into it, but that's a misunderstanding as they're not exactly the same thing.</p>\n\n<p>With TypeScript, you still need to use shims for missing DOM features that are browser-specific.</p>\n"}], "owner": {"reputation": 2780, "user_id": 1712065, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/a01e7526819002d3b8afd13600c7f979?s=128&d=identicon&r=PG", "display_name": "Annie", "link": "https://stackoverflow.com/users/1712065/annie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 387, "favorite_count": 0, "accepted_answer_id": 29866615, "answer_count": 1, "score": 1, "last_activity_date": 1429973008, "creation_date": 1429955383, "last_edit_date": 1429959075, "question_id": 29863616, "link": "https://stackoverflow.com/questions/29863616/tsc-what-does-target-es3-compatibility-flag-do", "title": "TSC: what does --target ES3 compatibility flag do?", "body": "<p>I installed typescript npm package:</p>\n\n<pre><code>npm install typescript\n</code></pre>\n\n<p>and ran</p>\n\n<pre><code>node_modules\\.bin\\tsc doodle.ts -t ES3\n</code></pre>\n\n<p>Where <code>doodle.ts</code> has:</p>\n\n<pre><code>var test = document.querySelector('.test');\n</code></pre>\n\n<p>It echoed back the same in output <code>doodle.js</code>.</p>\n\n<p>How to configure it so in the output, I get:</p>\n\n<pre><code>var test = document.getElementsByClassName('.test')[0];\n</code></pre>\n\n<p>Shouldn't <code>-t ES3</code> flag take care of such compatibility aspects?</p>\n"}, {"tags": ["typescript"], "comments": [{"owner": {"reputation": 292139, "user_id": 965051, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/XgLe7.gif?s=128&g=1", "display_name": "adeneo", "link": "https://stackoverflow.com/users/965051/adeneo"}, "edited": false, "score": 1, "creation_date": 1429923198, "post_id": 29859748, "comment_id": 47845358, "body": "The first one looks invalid to me ?"}, {"owner": {"reputation": 699354, "user_id": 218196, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/4P5DY.jpg?s=128&g=1", "display_name": "Felix Kling", "link": "https://stackoverflow.com/users/218196/felix-kling"}, "edited": false, "score": 2, "creation_date": 1429923252, "post_id": 29859748, "comment_id": 47845367, "body": "Do you mean <code>import http from &#39;http&#39;</code> maybe? The former is a ES6 module import declaration, the latter is a CommonJS module import."}, {"owner": {"reputation": 2818, "user_id": 1254278, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/a4ef1416956f8b866006977c418884d8?s=128&d=identicon&r=PG", "display_name": "mfc", "link": "https://stackoverflow.com/users/1254278/mfc"}, "reply_to_user": {"reputation": 292139, "user_id": 965051, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/XgLe7.gif?s=128&g=1", "display_name": "adeneo", "link": "https://stackoverflow.com/users/965051/adeneo"}, "edited": false, "score": 1, "creation_date": 1429923522, "post_id": 29859748, "comment_id": 47845409, "body": "@adeneo, the first one is what gets auto generated by visual studio using their Typescript + node.js addin"}, {"owner": {"reputation": 292139, "user_id": 965051, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/XgLe7.gif?s=128&g=1", "display_name": "adeneo", "link": "https://stackoverflow.com/users/965051/adeneo"}, "edited": false, "score": 2, "creation_date": 1429923909, "post_id": 29859748, "comment_id": 47845491, "body": "Okay, but that&#39;s still not javascript but probably Typescript. In javascript it&#39;s like Felix wrote above, either the ES6 <code>import stuff from module</code> or the commonJS version used in Node with a regular variable and a call to <code>require()</code>"}], "answers": [{"comments": [{"owner": {"reputation": 438, "user_id": 801977, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/84ca94306b9fce0432c1b6c07d481b45?s=128&d=identicon&r=PG", "display_name": "vlscanner", "link": "https://stackoverflow.com/users/801977/vlscanner"}, "edited": false, "score": 1, "creation_date": 1511726479, "post_id": 29859774, "comment_id": 81956310, "body": "how does this answer the question ? the information is interesting but it is not an answer."}, {"owner": {"reputation": 51458, "user_id": 436641, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d9bebc8f32aaad1275a931e2045196e0?s=128&d=identicon&r=PG", "display_name": "Trott", "link": "https://stackoverflow.com/users/436641/trott"}, "reply_to_user": {"reputation": 438, "user_id": 801977, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/84ca94306b9fce0432c1b6c07d481b45?s=128&d=identicon&r=PG", "display_name": "vlscanner", "link": "https://stackoverflow.com/users/801977/vlscanner"}, "edited": false, "score": 0, "creation_date": 1511872029, "post_id": 29859774, "comment_id": 82019519, "body": "@viscanner The question was edited subsequently to add &quot;TypeScript&quot; (which wasn&#39;t in the original question). Then  <b>8 months after this answer was posted</b>, it was edited again to remove &quot;Node.js&quot; making this answer <b>appear</b> invalid. This answer addressed the question as it appeared at the time this answer was written."}, {"owner": {"reputation": 810, "user_id": 1161132, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/gNKM0.jpg?s=128&g=1", "display_name": "bgura", "link": "https://stackoverflow.com/users/1161132/bgura"}, "edited": false, "score": 0, "creation_date": 1579703062, "post_id": 29859774, "comment_id": 105855070, "body": "@Trott, MS has removed the link you provided named &quot;Going External&quot;. I paged through their new github docs and couldn&#39;t find the page. Any chance you can find it and put a quick jist about it in your answer rather than a link?"}, {"owner": {"reputation": 51458, "user_id": 436641, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d9bebc8f32aaad1275a931e2045196e0?s=128&d=identicon&r=PG", "display_name": "Trott", "link": "https://stackoverflow.com/users/436641/trott"}, "reply_to_user": {"reputation": 810, "user_id": 1161132, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/gNKM0.jpg?s=128&g=1", "display_name": "bgura", "link": "https://stackoverflow.com/users/1161132/bgura"}, "edited": false, "score": 1, "creation_date": 1579705853, "post_id": 29859774, "comment_id": 105856811, "body": "@bgura A lot has changed with both TypeScript and Node.js but the relevant section has been renamed &quot;Using Modules&quot; and can be found at <a href=\"http://www.typescriptlang.org/docs/handbook/namespaces-and-modules.html#using-modules\" rel=\"nofollow noreferrer\">typescriptlang.org/docs/handbook/&hellip;</a>. I&#39;ll update the answer."}], "tags": [], "owner": {"reputation": 51458, "user_id": 436641, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d9bebc8f32aaad1275a931e2045196e0?s=128&d=identicon&r=PG", "display_name": "Trott", "link": "https://stackoverflow.com/users/436641/trott"}, "is_accepted": true, "score": 9, "last_activity_date": 1579705921, "last_edit_date": 1579705921, "creation_date": 1429923332, "answer_id": 29859774, "question_id": 29859748, "link": "https://stackoverflow.com/questions/29859748/typescript-var-vs-import/29859774#29859774", "title": "TypeScript var vs import", "body": "<p>Your <code>import</code> statement is TypeScript and will not run as-is in Node. You will need to compile (transpile?) it to JavaScript first. You can read the TypeScript docs for more info about how the TypeScript <code>import</code> keyword works. See the <a href=\"http://www.typescriptlang.org/docs/handbook/namespaces-and-modules.html#using-modules\" rel=\"nofollow noreferrer\">\"Using Modules\" subsection of the \"Namespaces and Modules\" section of the TypeScript handbook</a>.</p>\n\n<p>There is an <code>import</code> keyword in JavaScript too, but it doesn't work the way TypeScript's <code>import</code> works. It will only work in versions of Node that support ES6 modules. There are differences between this <code>import</code> and <code>require</code> that you can read about at <a href=\"http://www.2ality.com/2014/09/es6-modules-final.html\" rel=\"nofollow noreferrer\">\"ES6 Modules: The Final Syntax\"</a>. That <code>import</code> is something you can compare/contrast with <code>require</code> but not really <code>var</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 7289, "user_id": 1057052, "user_type": "registered", "accept_rate": 72, "profile_image": "https://i.stack.imgur.com/qGN8h.jpg?s=128&g=1", "display_name": "Jose A", "link": "https://stackoverflow.com/users/1057052/jose-a"}, "edited": false, "score": 0, "creation_date": 1458009219, "post_id": 36001649, "comment_id": 59655811, "body": "That&#39;s the main difference. if we use var it seems that it passes by reference. In English this means (from my understanding, correct me if I&#39;m wrong) that any changes that happen to the object you assigned to var, will change even if you didn&#39;t reassigned it. Whereas using import will create an independent copy of it."}], "tags": [], "owner": {"reputation": 7289, "user_id": 1057052, "user_type": "registered", "accept_rate": 72, "profile_image": "https://i.stack.imgur.com/qGN8h.jpg?s=128&g=1", "display_name": "Jose A", "link": "https://stackoverflow.com/users/1057052/jose-a"}, "is_accepted": false, "score": 2, "last_activity_date": 1511736443, "last_edit_date": 1511736443, "creation_date": 1458009083, "answer_id": 36001649, "question_id": 29859748, "link": "https://stackoverflow.com/questions/29859748/typescript-var-vs-import/36001649#36001649", "title": "TypeScript var vs import", "body": "<p>I had the same inquiry. Just found this in the \"Alias\" section of Typescript:</p>\n\n<blockquote>\n  <p>This is similar to using var, but also works on the type and namespace meanings of the imported symbol. Importantly, for values, import is a distinct reference from the original symbol, <strong>so changes to an aliased var will not be reflected in the original variable</strong></p>\n</blockquote>\n\n<p><a href=\"https://www.typescriptlang.org/docs/handbook/namespaces.html#aliases\" rel=\"nofollow noreferrer\">https://www.typescriptlang.org/docs/handbook/namespaces.html#aliases</a></p>\n"}, {"tags": [], "owner": {"reputation": 1996, "user_id": 8634147, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-36eQ4qJ6F9o/AAAAAAAAAAI/AAAAAAAADZg/coKQfu-5HzM/photo.jpg?sz=128", "display_name": "Romain Deneau", "link": "https://stackoverflow.com/users/8634147/romain-deneau"}, "is_accepted": false, "score": 2, "last_activity_date": 1512300071, "last_edit_date": 1512300071, "creation_date": 1511878518, "answer_id": 47533708, "question_id": 29859748, "link": "https://stackoverflow.com/questions/29859748/typescript-var-vs-import/47533708#47533708", "title": "TypeScript var vs import", "body": "\n\n<p>TypeScript <code>import</code> keyword has several usages, some depending on the environment, explaining why it's confusing. Let's see that with the minimum detail level (cause in real project it can be even more complex):</p>\n\n<h2>Modules CommonJs / Node</h2>\n\n<blockquote>\n  <p>@mfc: This is the case that corresponds to your question.</p>\n</blockquote>\n\n<p>The TypeScript project is using CommonJs modules, typically a node project:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>// tsconfig.json\n{\n    \"compilerOptions\": {\n        \"module\": \"commonjs\",\n        ...\n    }\n}\n</code></pre>\n\n<p>In this context, <code>import _ = require('http');</code> (<em>version #1</em>) is transpiled to <code>var _ = require('http');</code> (<em>version #2</em>). So version #1 is the TypeScript syntax whereas version #2 is the JavaScript syntax.</p>\n\n<p><code>require()</code> is supported in version 1 but not in version #2 (error <code>[ts] Cannot find name 'require'.</code>) unless adding node typings to the project via <code>npm i @types/node --save-dev</code> <em>(see this <a href=\"https://stackoverflow.com/questions/31173738/#35961176\">stackoverflow Q/A</a>)</em>.</p>\n\n<h2>Modules ES6</h2>\n\n<blockquote>\n  <p>@mfc: This is not the case you've asked for. But it's in <a href=\"https://stackoverflow.com/questions/29859748/#29859774\">Trott's answer</a> so I've taken it into account.</p>\n</blockquote>\n\n<p><code>import</code> is the ES6 keyword and has its <a href=\"http://2ality.com/2014/09/es6-modules-final.html\" rel=\"nofollow noreferrer\">own syntax</a>:</p>\n\n<ul>\n<li>\"Full\" import of named exports: <code>import * as lib from 'lib';</code></li>\n<li>\"Picking\" import of named exports: <code>import { square, diag } from 'lib';</code></li>\n<li>Import of the default export: <code>import myFunc from 'myFunc';</code></li>\n</ul>\n\n<p>These imports are transpiled differently according to the module compiler option mentioned above:</p>\n\n<ul>\n<li><code>ES6</code> \u2192 no change</li>\n<li><code>CommonJS</code> \u2192 <code>var ... = require('...');</code></li>\n<li><code>AMD</code> \u2192 <code>define(...);</code></li>\n</ul>\n\n<h2>Namespaces</h2>\n\n<h3>Alias</h3>\n\n<blockquote>\n  <p>@mfc: This is not the case you've asked for. But it's in <a href=\"https://stackoverflow.com/questions/29859748/#36001649\">Jose A's answer</a> so I've added here to have the full picture.</p>\n</blockquote>\n\n<p>In a <a href=\"https://www.typescriptlang.org/docs/handbook/namespaces.html\" rel=\"nofollow noreferrer\"><code>namespace</code></a>, formerly called \"(internal) module\", <code>import</code> is used to create an <a href=\"https://www.typescriptlang.org/docs/handbook/namespaces.html#aliases\" rel=\"nofollow noreferrer\">alias</a>, a shortcut to an exported element of another namespace.</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>namespace Root.Branch.Leaf {\n    export const configPath = '...';\n}\n\nnamespace LeafClient {\n    import configPath = Root.Branch.Leaf.configPath;\n    console.log(`configPath=${configPath}`);\n}\n</code></pre>\n\n<p>The line <code>import configPath = Root.Branch.Leaf.configPath;</code> is transpiled into <code>var configPath = Root.Branch.Leaf.configPath;</code>, cf. <a href=\"https://www.typescriptlang.org/play/#src=namespace%20Root.Branch.Leaf%20%7B%0D%0A%20%20%20%20export%20const%20configPath%20%3D%20&#39;...&#39;%3B%0D%0A%7D%0D%0A%0D%0Anamespace%20LeafClient%20%7B%0D%0A%20%20%20%20import%20configPath%20%3D%20Root.Branch.Leaf.configPath%3B%0D%0A%20%20%20%20console.log(%60configPath%3D%24%7BconfigPath%7D%60)%3B%0D%0A%7D\" rel=\"nofollow noreferrer\">TypeScript PlayGround</a>.</p>\n\n<p>Watch out for usages outside a namespace, since it created global variables!</p>\n\n<h3>Global module</h3>\n\n<p>Some libraries modify the global object <em>(the <code>window</code> global variable in a browser)</em>, for instance:</p>\n\n<ul>\n<li>jQuery and its <code>$</code> global variable,</li>\n<li><a href=\"https://github.com/rbuckton/reflect-metadata\" rel=\"nofollow noreferrer\">reflect-metadata</a> to extends <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect\" rel=\"nofollow noreferrer\"><code>Reflect</code></a>.</li>\n</ul>\n\n<p>ES6 syntax also allows to load this kind of library using a <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import#Import_a_module_for_its_side_effects_only\" rel=\"nofollow noreferrer\">side effects only import</a>: <code>import \"reflect-metadata\";</code></p>\n\n<p>TypeScript supports this <a href=\"https://www.typescriptlang.org/docs/handbook/modules.html#import-a-module-for-side-effects-only\" rel=\"nofollow noreferrer\">kind of imports</a>. The compiler will try to fetch the corresponding <a href=\"https://www.typescriptlang.org/docs/handbook/namespaces-and-modules.html#-reference-ing-a-module\" rel=\"nofollow noreferrer\">typing definition</a> to understand the library effects, for instance the new method <a href=\"https://rbuckton.github.io/reflect-metadata/#syntax\" rel=\"nofollow noreferrer\"><code>Reflect.getMetadata()</code></a>.</p>\n"}], "owner": {"reputation": 2818, "user_id": 1254278, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/a4ef1416956f8b866006977c418884d8?s=128&d=identicon&r=PG", "display_name": "mfc", "link": "https://stackoverflow.com/users/1254278/mfc"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5776, "favorite_count": 1, "accepted_answer_id": 29859774, "answer_count": 3, "score": 23, "last_activity_date": 1579705921, "creation_date": 1429923032, "last_edit_date": 1511871963, "question_id": 29859748, "link": "https://stackoverflow.com/questions/29859748/typescript-var-vs-import", "title": "TypeScript var vs import", "body": "<p>In TypeScript, what is the difference between </p>\n\n<pre><code> import http = require('http');\n</code></pre>\n\n<p>and </p>\n\n<pre><code> var http = require('http');\n</code></pre>\n\n<p>I am seeing both ways being used in code source, are they interchangeable?</p>\n"}, {"tags": ["visual-studio", "typescript"], "comments": [{"owner": {"reputation": 80876, "user_id": 188246, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/bTzLq.jpg?s=128&g=1", "display_name": "David Sherret", "link": "https://stackoverflow.com/users/188246/david-sherret"}, "edited": false, "score": 0, "creation_date": 1429913619, "post_id": 29857469, "comment_id": 47842708, "body": "possible duplicate of <a href=\"http://stackoverflow.com/questions/21233108/cross-project-references-between-two-projects\">Cross-project references between two projects</a> -- Also for the opinion part: yes it is a good idea. I break up ts code into projects and then use those in multiple applications. Basically, you write it as if you were creating a javascript library then use it in your application."}, {"owner": {"reputation": 8220, "user_id": 1831530, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/RFtYx.jpg?s=128&g=1", "display_name": "mehrandvd", "link": "https://stackoverflow.com/users/1831530/mehrandvd"}, "reply_to_user": {"reputation": 80876, "user_id": 188246, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/bTzLq.jpg?s=128&g=1", "display_name": "David Sherret", "link": "https://stackoverflow.com/users/188246/david-sherret"}, "edited": false, "score": 0, "creation_date": 1429986801, "post_id": 29857469, "comment_id": 47863281, "body": "@DavidSherret That&#39;s cool, but I&#39;m looking for a way to reference those project, without referencing those projects. Just by adding dll or something like that. I&#39;ve updated my question to clarify that."}, {"owner": {"reputation": 80876, "user_id": 188246, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/bTzLq.jpg?s=128&g=1", "display_name": "David Sherret", "link": "https://stackoverflow.com/users/188246/david-sherret"}, "edited": false, "score": 0, "creation_date": 1429987159, "post_id": 29857469, "comment_id": 47863413, "body": "It doesn&#39;t work the same way as in languages like c# where you can add a reference to a project. You have to copy the other files from the one project over to the other (best way is to transpile the typescript to a single <code>.js</code> file along with a <code>.d.ts</code> file then copy these two over--in a sense these are your <code>.dll</code>). You can automate this by following the instructions in the referenced question. (also, apparently you can use linked files... It&#39;s one of the answers in the question. I&#39;ve never tried that before though)"}, {"owner": {"reputation": 1207, "user_id": 3738720, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/634242bb311914e4dad13109942b3e3d?s=128&d=identicon&r=PG", "display_name": "W&#233;dney Yuri", "link": "https://stackoverflow.com/users/3738720/w%c3%a9dney-yuri"}, "edited": false, "score": 0, "creation_date": 1430136799, "post_id": 29857469, "comment_id": 47913511, "body": "Compile each project separately (minification) and distribute only the <code>.d.ts</code> files for reference.  Example: <code>jQuery</code> and <code>Angular</code> are &quot;external dll&#39;s&quot;"}, {"owner": {"reputation": 8220, "user_id": 1831530, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/RFtYx.jpg?s=128&g=1", "display_name": "mehrandvd", "link": "https://stackoverflow.com/users/1831530/mehrandvd"}, "reply_to_user": {"reputation": 1207, "user_id": 3738720, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/634242bb311914e4dad13109942b3e3d?s=128&d=identicon&r=PG", "display_name": "W&#233;dney Yuri", "link": "https://stackoverflow.com/users/3738720/w%c3%a9dney-yuri"}, "edited": false, "score": 0, "creation_date": 1430141732, "post_id": 29857469, "comment_id": 47917197, "body": "@W&#233;dneyYuri great idea. But how can I apply new changes of framework? <code>jQuery</code> and <code>Angular</code> are some 3rd party frameworks. They wont change as fast as my internal framework and also their changes are managed by some tools like Nuget."}, {"owner": {"reputation": 1207, "user_id": 3738720, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/634242bb311914e4dad13109942b3e3d?s=128&d=identicon&r=PG", "display_name": "W&#233;dney Yuri", "link": "https://stackoverflow.com/users/3738720/w%c3%a9dney-yuri"}, "edited": false, "score": 0, "creation_date": 1430150334, "post_id": 29857469, "comment_id": 47923706, "body": "@mehrandvd I am using bower to manage my dependencies. In my case, I have a repository for each independent project.  <a href=\"http://stackoverflow.com/questions/20196707/can-i-add-a-git-repository-to-my-bower-json\" title=\"can i add a git repository to my bower json\">stackoverflow.com/questions/20196707/&hellip;</a>"}, {"owner": {"reputation": 8220, "user_id": 1831530, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/RFtYx.jpg?s=128&g=1", "display_name": "mehrandvd", "link": "https://stackoverflow.com/users/1831530/mehrandvd"}, "reply_to_user": {"reputation": 1207, "user_id": 3738720, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/634242bb311914e4dad13109942b3e3d?s=128&d=identicon&r=PG", "display_name": "W&#233;dney Yuri", "link": "https://stackoverflow.com/users/3738720/w%c3%a9dney-yuri"}, "edited": false, "score": 0, "creation_date": 1430292212, "post_id": 29857469, "comment_id": 47995452, "body": "@W&#233;dneyYuri your comments looks like an answer. Why don&#39;t you post them as answer!?"}], "answers": [{"comments": [{"owner": {"reputation": 1702, "user_id": 1421847, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/309e05ec5e99e04f9717c51435b1e4f7?s=128&d=identicon&r=PG", "display_name": "Eivind Gussi&#229;s L&#248;kseth", "link": "https://stackoverflow.com/users/1421847/eivind-gussi%c3%a5s-l%c3%b8kseth"}, "edited": false, "score": 0, "creation_date": 1459421642, "post_id": 29934600, "comment_id": 60284648, "body": "This is true, and here&#39;s a feature request for TypeScript and Visual Studio to fix the library project and references stuff: <a href=\"https://github.com/Microsoft/TypeScript/issues/11\" rel=\"nofollow noreferrer\">github.com/Microsoft/TypeScript/issues/11</a>"}, {"owner": {"reputation": 3012, "user_id": 610168, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/620e1401766b11cd74f9a503fb953ed6?s=128&d=identicon&r=PG", "display_name": "bdparrish", "link": "https://stackoverflow.com/users/610168/bdparrish"}, "edited": false, "score": 0, "creation_date": 1486760016, "post_id": 29934600, "comment_id": 71501885, "body": ".net core will allow you to embed resources in DLL -- <code>&quot;buildOptions&quot;: { &quot;embed&quot;: [ &quot;wwwroot&#47;**&quot; ] }</code>"}], "tags": [], "owner": {"reputation": 1217, "user_id": 4268356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3ffa1da43e79ff1b286b3f04290d2515?s=128&d=identicon&r=PG", "display_name": "Rajeev Goel", "link": "https://stackoverflow.com/users/4268356/rajeev-goel"}, "is_accepted": false, "score": 0, "last_activity_date": 1430282952, "creation_date": 1430282952, "answer_id": 29934600, "question_id": 29857469, "link": "https://stackoverflow.com/questions/29857469/is-it-possible-to-reference-typescript-files-in-other-projects-without-adding-pr/29934600#29934600", "title": "Is it possible to reference typescript files in other projects without adding projects to the solution?", "body": "<p>I'm sure you know this, but Typescript files (.TS) get compiled to Javascript files (.JS).  Neither the Typescript files nor the generated Javascript files end up inside the DLL.  The DLL contains server-side code only, and the Typescript/Javascript is client-side code. </p>\n\n<p>So, trying to add a reference from your ProductA project to the DLL from the Framework project is not going to pull in any Typescript files that were in your Framework project.</p>\n\n<p>As long as the final rendered HTML page includes the  tags for both the generated Javascript from both ProjectA as well as Framework, then everything will work fine, even if the two projects have no connection between them. If what you're really after is Visual Studio Intellisense for the Framework classes while you're coding in Typescript in ProjectA, then you should do as @WedneyYuri and @DavidSherret suggested, which is to add the .d.ts file from your Framework project into your ProjectA project.</p>\n"}, {"tags": [], "owner": {"reputation": 1207, "user_id": 3738720, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/634242bb311914e4dad13109942b3e3d?s=128&d=identicon&r=PG", "display_name": "W&#233;dney Yuri", "link": "https://stackoverflow.com/users/3738720/w%c3%a9dney-yuri"}, "is_accepted": false, "score": 0, "last_activity_date": 1431516900, "last_edit_date": 1431516900, "creation_date": 1430495973, "answer_id": 29990443, "question_id": 29857469, "link": "https://stackoverflow.com/questions/29857469/is-it-possible-to-reference-typescript-files-in-other-projects-without-adding-pr/29990443#29990443", "title": "Is it possible to reference typescript files in other projects without adding projects to the solution?", "body": "<h2>Managing Dependencies</h2>\n\n<p>The simplest solution is to use a package manager like <a href=\"http://bower.io\" rel=\"nofollow\">bower</a>:</p>\n\n<p>On terminal: Create an empty folder and start an empty bower repository:</p>\n\n<pre><code>$ bower init\n</code></pre>\n\n<p>For each <strong>definition file</strong> use this command:</p>\n\n<pre><code>$ bower install [URL] --save-dev\n</code></pre>\n\n<p><em>Example for jQuery definition file</em>:</p>\n\n<pre><code>$ bower install https://raw.githubusercontent.com/borisyankov/DefinitelyTyped/master/jquery/jquery.d.ts --save-dev\n</code></pre>\n\n<p>Thanks to the bower you can use any URL here. For more information visit the <a href=\"http://bower.io/docs/api/#install\" rel=\"nofollow\">bower documentation</a>.</p>\n\n<h2>Compilation</h2>\n\n<p>Create a file (name isn't important) <strong>definitions.d.ts</strong> in the same folder where you ran the command <code>$ bower init</code>.</p>\n\n<p>For each installed definition file you must add <strong>manually</strong> a new line in this file:</p>\n\n<p><em>example after adding jQuery and angularjs</em>:</p>\n\n<pre><code>/// &lt;reference path=\"jquery.d/index.ts\" /&gt;\n/// &lt;reference path=\"angular.d/index.ts\" /&gt;\n</code></pre>\n\n<p>Now, in your project you only need to include references to the <strong>definitions.d.ts</strong> file</p>\n\n<h2>Running the code</h2>\n\n<p>For the code to work you need the <code>.js</code> files. In development environment I use the bower to manage the dependencies in a separate folder and I manually add the <code>.js</code> files in html. In production use any tool to concatenate them.</p>\n\n<h2>TSD (TypeScript Definition manager for DefinitelyTyped)</h2>\n\n<p>In the near future the package manager will have option to install modules from anywhere. It's not ready, but it is a goal.</p>\n\n<blockquote>\n  <p>The goal of TSD future is to seamlessly support any TypeScript\n  definition files, from any source. By default, you should still be\n  able to search the definitely typed repository and install from there.\n  However, more focus will be trained onto support independent\n  definitions, specifically ones bundled with modules.\n  <a href=\"https://github.com/DefinitelyTyped/tsd/issues/150\" rel=\"nofollow\">https://github.com/DefinitelyTyped/tsd/issues/150</a></p>\n</blockquote>\n"}], "owner": {"reputation": 8220, "user_id": 1831530, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/RFtYx.jpg?s=128&g=1", "display_name": "mehrandvd", "link": "https://stackoverflow.com/users/1831530/mehrandvd"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 3052, "favorite_count": 0, "answer_count": 2, "score": 2, "last_activity_date": 1496933276, "creation_date": 1429909542, "last_edit_date": 1496933276, "question_id": 29857469, "link": "https://stackoverflow.com/questions/29857469/is-it-possible-to-reference-typescript-files-in-other-projects-without-adding-pr", "title": "Is it possible to reference typescript files in other projects without adding projects to the solution?", "body": "<p>In large scale software, it's a good idea to break code into projects.\nFor example, have a <em>framework</em> project which contains all base classes in some project called <strong>Company.Framework</strong> and some other projects which uses those shared codes like <strong>Company.ProductA, Company.ProductB</strong>.</p>\n\n<p>Is it possible to reference <code>.ts</code> files in other projects, for example just referencing its <code>dll</code>, not adding the project, so the <em>framework</em> project can be hidden from the business developers.</p>\n\n<p>The question is how to reference <code>.ts</code> files in other projects without adding those projects to the solution. For example just by adding their <em>dlls</em>.</p>\n"}, {"tags": ["typescript"], "answers": [{"tags": [], "owner": {"reputation": 162223, "user_id": 1704166, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/d256baab2fcfd81b0f109d394404fd67?s=128&d=identicon&r=PG", "display_name": "Ryan Cavanaugh", "link": "https://stackoverflow.com/users/1704166/ryan-cavanaugh"}, "is_accepted": false, "score": 2, "last_activity_date": 1429909816, "creation_date": 1429909816, "answer_id": 29857540, "question_id": 29857314, "link": "https://stackoverflow.com/questions/29857314/how-to-use-module-loading-in-typescript/29857540#29857540", "title": "How to use module loading in TypeScript", "body": "<p>Because you wrapped <code>LevensteinAlgorithm</code> in the internal module <code>levenstein</code> in an external module, the way to reference that object once you've imported it as <code>levenstein</code> is <code>levenstein.levenstein.LevensteinAlgorithm</code>.</p>\n\n<p>The best fix here is to just remove the <code>export module Levenstein {</code> from <code>LevensteinAlgorithm.ts</code> and export the class directly out of the external module.</p>\n\n<p>See also the \"Needless Namepsacing\" heading here: <a href=\"https://typescript.codeplex.com/wikipage?title=Modules%20in%20TypeScript\" rel=\"nofollow\">https://typescript.codeplex.com/wikipage?title=Modules%20in%20TypeScript</a></p>\n"}], "owner": {"reputation": 8220, "user_id": 1831530, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/RFtYx.jpg?s=128&g=1", "display_name": "mehrandvd", "link": "https://stackoverflow.com/users/1831530/mehrandvd"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 48, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1429909816, "creation_date": 1429908978, "question_id": 29857314, "link": "https://stackoverflow.com/questions/29857314/how-to-use-module-loading-in-typescript", "title": "How to use module loading in TypeScript", "body": "<p>In TypeScript, I have a code like this:</p>\n\n<p>levenstein/LevensteinAlgorithm.ts</p>\n\n<pre><code>export module levenstein {\n    export class LevensteinAlgorithm\n    {\n        getDistance(left: string, right: string): number {\n        // Some code for the alogorithm...\n        }\n    }\n}\n</code></pre>\n\n<p>To have a unit test for it, I have written a test in another path:</p>\n\n<p>tests/levensteinAlgorithmTests.ts</p>\n\n<pre><code>/// &lt;reference path=\"../scripts/typings/qunit/qunit.d.ts\" /&gt;\n/// &lt;reference path=\"../levenstein/levensteinalgorithm.ts\" /&gt;\n\nQUnit.module(\"levensteinalgorithm.ts tests\");\n\nimport levenstein = require(\"levenstein/LevensteinAlgorithm\");\n\ntest(\"Simple update cost is equal to 1\", ()=&gt; {\n// Arrange\nvar leven = new levenstein.LevensteinAlgorithm();\n\n//... \n</code></pre>\n\n<p>Unfortunately it has a build error saying:</p>\n\n<pre><code>Property LevensteinAlgorithm doesn't exist on type: ....\n</code></pre>\n\n<p>I'm using <em>QUnit</em> and <strong>Chutzpah</strong> to run the tests.</p>\n\n<p>What's the problem with my module loading?</p>\n"}, {"tags": ["typescript", "typescript1.4"], "answers": [{"comments": [{"owner": {"reputation": 8220, "user_id": 1831530, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/RFtYx.jpg?s=128&g=1", "display_name": "mehrandvd", "link": "https://stackoverflow.com/users/1831530/mehrandvd"}, "edited": false, "score": 0, "creation_date": 1429909651, "post_id": 29857457, "comment_id": 47840807, "body": "So is it like JavaScript that properties are accessible in a dictionary like way!?"}, {"owner": {"reputation": 162223, "user_id": 1704166, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/d256baab2fcfd81b0f109d394404fd67?s=128&d=identicon&r=PG", "display_name": "Ryan Cavanaugh", "link": "https://stackoverflow.com/users/1704166/ryan-cavanaugh"}, "reply_to_user": {"reputation": 8220, "user_id": 1831530, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/RFtYx.jpg?s=128&g=1", "display_name": "mehrandvd", "link": "https://stackoverflow.com/users/1831530/mehrandvd"}, "edited": false, "score": 0, "creation_date": 1429909781, "post_id": 29857457, "comment_id": 47840863, "body": "TypeScript is a syntactic superset of JavaScript."}], "tags": [], "owner": {"reputation": 162223, "user_id": 1704166, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/d256baab2fcfd81b0f109d394404fd67?s=128&d=identicon&r=PG", "display_name": "Ryan Cavanaugh", "link": "https://stackoverflow.com/users/1704166/ryan-cavanaugh"}, "is_accepted": true, "score": 3, "last_activity_date": 1429909524, "creation_date": 1429909524, "answer_id": 29857457, "question_id": 29857144, "link": "https://stackoverflow.com/questions/29857144/why-length-should-be-subtype-of-the-indexer/29857457#29857457", "title": "Why length should be subtype of the indexer?", "body": "<p>Because <code>x['length']</code> is a number, but you said that indexing <code>x</code> string produces a string. They can't both be true.</p>\n"}], "owner": {"reputation": 8220, "user_id": 1831530, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/RFtYx.jpg?s=128&g=1", "display_name": "mehrandvd", "link": "https://stackoverflow.com/users/1831530/mehrandvd"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 235, "favorite_count": 0, "accepted_answer_id": 29857457, "answer_count": 1, "score": 2, "last_activity_date": 1429909524, "creation_date": 1429908328, "question_id": 29857144, "link": "https://stackoverflow.com/questions/29857144/why-length-should-be-subtype-of-the-indexer", "title": "Why length should be subtype of the indexer?", "body": "<p>I see an example in the TypeScript handbook at <a href=\"http://www.typescriptlang.org/Handbook#interfaces-function-types\" rel=\"nofollow\">here</a>.\nI don't understand why the <code>length</code> property is not valid?</p>\n\n<pre><code>interface Dictionary {\n  [index: string]: string;\n  length: number;    // error, the type of 'length' is not a subtype of the indexer\n} \n</code></pre>\n"}, {"tags": ["interface", "typescript"], "answers": [{"comments": [{"owner": {"reputation": 11, "user_id": 4829973, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e958651956508d88fc1a8616bfd96e18?s=128&d=identicon&r=PG&f=1", "display_name": "Eugene", "link": "https://stackoverflow.com/users/4829973/eugene"}, "edited": false, "score": 0, "creation_date": 1430151537, "post_id": 29856076, "comment_id": 47924548, "body": "Thank you for you response, Ryan! It does make me wonder however that if interface can&#39;t enforce the data type, what&#39;s the point of specifying it in the interface?"}], "tags": [], "owner": {"reputation": 162223, "user_id": 1704166, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/d256baab2fcfd81b0f109d394404fd67?s=128&d=identicon&r=PG", "display_name": "Ryan Cavanaugh", "link": "https://stackoverflow.com/users/1704166/ryan-cavanaugh"}, "is_accepted": false, "score": 1, "last_activity_date": 1429904424, "creation_date": 1429904424, "answer_id": 29856076, "question_id": 29855654, "link": "https://stackoverflow.com/questions/29855654/typescript-interface-type-checking-from-the-beginning-tutorial/29856076#29856076", "title": "TypeScript interface type checking from the beginning tutorial", "body": "<p>The type of the <code>Student</code> constructor parameters is <code>any</code> because there is no type annotation:</p>\n\n<pre><code>class Student {\n    fullname : string;\n    constructor(public firstname, public middleinitial, public lastname) {\n        this.fullname = firstname + \" \" + middleinitial + \" \" + lastname;\n    }\n}\n</code></pre>\n\n<p>If we change it to have some type annotations, we'll get an error:</p>\n\n<pre><code>class Student {\n    fullname : string;\n    constructor(public firstname: string, // &lt;-- add ': string' here\n                public middleinitial: string, // and here\n                public lastname: string) { // and here\n        this.fullname = firstname + \" \" + middleinitial + \" \" + lastname;\n    }\n}\n\nvar x = new Student(1, 2, 3); // Error\n</code></pre>\n"}], "owner": {"reputation": 11, "user_id": 4829973, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e958651956508d88fc1a8616bfd96e18?s=128&d=identicon&r=PG&f=1", "display_name": "Eugene", "link": "https://stackoverflow.com/users/4829973/eugene"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 47, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1429904850, "creation_date": 1429902795, "last_edit_date": 1429904850, "question_id": 29855654, "link": "https://stackoverflow.com/questions/29855654/typescript-interface-type-checking-from-the-beginning-tutorial", "title": "TypeScript interface type checking from the beginning tutorial", "body": "<p>I've just started learning TypeScript and I'm having a hard time wrapping my head around an interface behavior from the beginning tutorial on <a href=\"http://www.typescriptlang.org/Playground/#tut=ex5\" rel=\"nofollow\">http://www.typescriptlang.org/Playground/#tut=ex5</a></p>\n\n<p>As I understand it, the interface should enforce the type of the parameters, however this particular line throws me off</p>\n\n<pre><code>var user = new Student(\"Jane\", \"M.\", \"User\");\n</code></pre>\n\n<p>It compiles correctly and all is well, but when I modify it to </p>\n\n<pre><code>var user = new Student(1, 2, 3);\n</code></pre>\n\n<p>it also compiles just fine.</p>\n\n<p>Could anyone elaborate why it's working ?</p>\n\n<p>I understand that this is a beginners question but I could not find any info on this searching online and I don't have any TypeScript experts around me.</p>\n\n<p>Thanks in advance,\nEugene</p>\n"}, {"tags": ["typescript", "typescript1.5"], "answers": [{"comments": [{"owner": {"reputation": 15625, "user_id": 3786294, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/o0RBY.png?s=128&g=1", "display_name": "Paleo", "link": "https://stackoverflow.com/users/3786294/paleo"}, "edited": false, "score": 0, "creation_date": 1429886223, "post_id": 29850113, "comment_id": 47826580, "body": "But, no regret. <a href=\"http://babeljs.io/repl/#?experimental=true&amp;evaluate=false&amp;loose=false&amp;spec=false&amp;playground=false&amp;code=const%20arr%20%3D%20%5B%27a%27%2C%20%27b%27%5D%3B%0Afor%20%28let%20val%20of%20arr%29%0A%20%20console.log%28val%29%3B%0A\" rel=\"nofollow noreferrer\">The code generated by Babel for a <code>for of</code> statement is ugly because of iterators</a>."}], "tags": [], "owner": {"reputation": 15625, "user_id": 3786294, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/o0RBY.png?s=128&g=1", "display_name": "Paleo", "link": "https://stackoverflow.com/users/3786294/paleo"}, "is_accepted": true, "score": 1, "last_activity_date": 1429886796, "last_edit_date": 1429886796, "creation_date": 1429885700, "answer_id": 29850113, "question_id": 29849842, "link": "https://stackoverflow.com/questions/29849842/using-for-of-with-map-generates-invalid-es5/29850113#29850113", "title": "Using for..of with Map generates invalid ES5", "body": "<p>The syntax <code>for of</code> that is supported by TypeScript with targets ES3/5, is very limited. Iterables need the target ES6.</p>\n\n<blockquote>\n  <p>Is this a limitation of the 1.5 release?</p>\n</blockquote>\n\n<p>Yes:</p>\n\n<blockquote>\n  <p>This works for arrays and strings. Other iterables will not be supported for ES3/ES5 <a href=\"https://github.com/Microsoft/TypeScript/pull/2207#issuecomment-77513924\" rel=\"nofollow\">(Source)</a></p>\n</blockquote>\n"}], "owner": {"reputation": 64960, "user_id": 571194, "user_type": "registered", "accept_rate": 95, "profile_image": "https://i.stack.imgur.com/nVvTj.jpg?s=128&g=1", "display_name": "CodingIntrigue", "link": "https://stackoverflow.com/users/571194/codingintrigue"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 293, "favorite_count": 0, "accepted_answer_id": 29850113, "answer_count": 1, "score": 1, "last_activity_date": 1429886796, "creation_date": 1429884997, "question_id": 29849842, "link": "https://stackoverflow.com/questions/29849842/using-for-of-with-map-generates-invalid-es5", "title": "Using for..of with Map generates invalid ES5", "body": "<p>I'm having an issue using the latest TypeScript 1.5 compiler in conjunction with <code>Map</code> and <code>for..of</code>. Example:</p>\n\n<pre><code>var map: Map&lt;string, string&gt; = new Map&lt;string, string&gt;();\nmap.set(\"A\", \"one\");\nmap.set(\"B\", \"two\");\nmap.set(\"C\", \"three\");\nfor(let [key, value] of map) {\n    console.log(key, value);\n}\n</code></pre>\n\n<p>According to <a href=\"http://blogs.msdn.com/b/typescript/archive/2015/03/27/announcing-typescript-1-5-alpha.aspx\" rel=\"nofollow\">this</a>, TypeScript 1.5 supports destructuring and for..of so I can't really see why this shouldn't work, but it outputs invalid ES5:</p>\n\n<pre><code>for (var _i = 0, _a = map; _i &lt; _a.length; _i++) {\n//                              ^^^^^^^^^\n// A Map doesn't have a length, so this block never executes\n    var _b = _a[_i], key = _b[0], value = _b[1];\n    console.log(key, value);\n}\n</code></pre>\n\n<p>I worked around this by using <code>map.forEach((value, key) =&gt; { ... });</code> but it's not as nice as <code>for..of</code>.</p>\n\n<p>Is this a limitation of the 1.5 release? Am I expecting it to transpile <code>Map</code> to ES5 when it's not supported?</p>\n"}, {"tags": ["typescript"], "answers": [{"comments": [{"owner": {"reputation": 10498, "user_id": 1217536, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/TWeCs.png?s=128&g=1", "display_name": "gung - Reinstate Monica", "link": "https://stackoverflow.com/users/1217536/gung-reinstate-monica"}, "edited": false, "score": 1, "creation_date": 1429893117, "post_id": 29852411, "comment_id": 47831462, "body": "This is rather sparse. Can you add some text to explain this code / how it solves the OP&#39;s problem?"}, {"owner": {"reputation": 7307, "user_id": 472015, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/dd31c566b8e5e541810b1cfcdce25170?s=128&d=identicon&r=PG", "display_name": "Deathspike", "link": "https://stackoverflow.com/users/472015/deathspike"}, "edited": false, "score": 1, "creation_date": 1429909147, "post_id": 29852411, "comment_id": 47840548, "body": "Unfortunately not the appropriate answer. Exporting a variable named <code>defaults</code> does nothing."}], "tags": [], "owner": {"reputation": 816, "user_id": 4792392, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/c35cfaa023bad81980c6c7aba13af413?s=128&d=identicon&r=PG", "display_name": "vasa_c", "link": "https://stackoverflow.com/users/4792392/vasa-c"}, "is_accepted": false, "score": -1, "last_activity_date": 1429891775, "creation_date": 1429891775, "answer_id": 29852411, "question_id": 29849274, "link": "https://stackoverflow.com/questions/29849274/typescript-1-5-export-default-implementing-an-interface/29852411#29852411", "title": "TypeScript 1.5: Export default implementing an interface", "body": "<pre><code>export var defaults:IFoo&lt;string&gt; = {\n    bar: () =&gt; 'Hello world'\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 7307, "user_id": 472015, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/dd31c566b8e5e541810b1cfcdce25170?s=128&d=identicon&r=PG", "display_name": "Deathspike", "link": "https://stackoverflow.com/users/472015/deathspike"}, "is_accepted": true, "score": 2, "last_activity_date": 1429909186, "creation_date": 1429909186, "answer_id": 29857365, "question_id": 29849274, "link": "https://stackoverflow.com/questions/29849274/typescript-1-5-export-default-implementing-an-interface/29857365#29857365", "title": "TypeScript 1.5: Export default implementing an interface", "body": "<p>Casting in 1.5 will preserve the compile-time checking, so this will work:</p>\n\n<pre><code>export default &lt;IFoo&lt;string&gt;&gt; {\n    bar: () =&gt; 'Hello world'\n}\n</code></pre>\n"}], "owner": {"reputation": 7307, "user_id": 472015, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/dd31c566b8e5e541810b1cfcdce25170?s=128&d=identicon&r=PG", "display_name": "Deathspike", "link": "https://stackoverflow.com/users/472015/deathspike"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1442, "favorite_count": 0, "accepted_answer_id": 29857365, "answer_count": 2, "score": 3, "last_activity_date": 1430023429, "creation_date": 1429883396, "last_edit_date": 1430023429, "question_id": 29849274, "link": "https://stackoverflow.com/questions/29849274/typescript-1-5-export-default-implementing-an-interface", "title": "TypeScript 1.5: Export default implementing an interface", "body": "<p>In TypeScript 1.5, I have the following interface in <code>IFoo.ts</code>:</p>\n\n<pre><code>// IFoo.ts\ninterface IFoo&lt;T&gt; {\n    bar(): T;\n}\n</code></pre>\n\n<p>And an implementation in <code>FooString.ts</code>:</p>\n\n<pre><code>// FooString.ts\nexport default {\n    bar: () =&gt; 'Hello world'\n}\n</code></pre>\n\n<p>How can the module <code>FooString.ts</code> declare the object literal it is exporting as an implementation of <code>IFoo&lt;sring&gt;</code>? Without a declaration, the implementation of the interface is not checked by the compiler, and losing compile-time checking of the <code>FooString</code> module would be problematic.</p>\n"}, {"tags": ["typescript", "definition"], "answers": [{"comments": [{"owner": {"reputation": 1060, "user_id": 488653, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/bUxrb.jpg?s=128&g=1", "display_name": "Lewis Peel", "link": "https://stackoverflow.com/users/488653/lewis-peel"}, "edited": false, "score": 0, "creation_date": 1429882655, "post_id": 29847954, "comment_id": 47823876, "body": "Thanks for your reply Steve. The way I access any of the state values is like so;  Lib.Graphics.Image.STATE_READY rather than a public property - not my decision but that&#39;s how the library is. Is there a way to do static enums on classes?"}, {"owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "reply_to_user": {"reputation": 1060, "user_id": 488653, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/bUxrb.jpg?s=128&g=1", "display_name": "Lewis Peel", "link": "https://stackoverflow.com/users/488653/lewis-peel"}, "edited": false, "score": 0, "creation_date": 1429882883, "post_id": 29847954, "comment_id": 47824047, "body": "In that case, I think you just want to declare the enum-like members on the <code>Image</code> class (which will be <code>number</code> types, just like enums are under the hood)."}, {"owner": {"reputation": 1060, "user_id": 488653, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/bUxrb.jpg?s=128&g=1", "display_name": "Lewis Peel", "link": "https://stackoverflow.com/users/488653/lewis-peel"}, "edited": false, "score": 0, "creation_date": 1429883263, "post_id": 29847954, "comment_id": 47824347, "body": "I see. Although I have a function that should only accept idle, loading, ready or error - if it&#39;s not one of those it shouldn&#39;t be allowed. If I had them declared as numbers people could send &quot;100&quot; and it would be valid right?"}], "tags": [], "owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "is_accepted": false, "score": 1, "last_activity_date": 1429882845, "last_edit_date": 1429882845, "creation_date": 1429879737, "answer_id": 29847954, "question_id": 29844959, "link": "https://stackoverflow.com/questions/29844959/enum-inside-class-typescript-definition-file/29847954#29847954", "title": "Enum inside class (TypeScript definition file)", "body": "<p>I'm not sure what you intend to do, but I would have expected that you would want an <code>enum</code> to represent the possible state values, and then a <code>state</code> member on the image to indicate the current state of the image.</p>\n\n<pre><code>declare module 'Lib' {\n    export module Graphics {\n\n        enum State {\n            STATE_IDLE,\n            STATE_LOADING,\n            STATE_READY,\n            STATE_ERROR\n        }\n\n        export class Image {\n            public state: State;\n\n            constructor();\n        }\n\n    }\n}\n</code></pre>\n\n<p>It sounds like you want to declare a class that has enum-like members, rather than declare an enum within a class. i.e:</p>\n\n<pre><code>declare module 'Lib' {\n\n    export module Graphics {\n\n        export class Image {\n            static STATE_IDLE: number;\n            static STATE_LOADING: number;\n            static STATE_READY: number;\n            static STATE_ERROR: number;\n\n            constructor();\n        }\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 80876, "user_id": 188246, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/bTzLq.jpg?s=128&g=1", "display_name": "David Sherret", "link": "https://stackoverflow.com/users/188246/david-sherret"}, "edited": false, "score": 0, "creation_date": 1429884717, "post_id": 29849715, "comment_id": 47825471, "body": "Same applies for <a href=\"http://stackoverflow.com/q/28717059/188246\">creating a class within a class</a>."}, {"owner": {"reputation": 1060, "user_id": 488653, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/bUxrb.jpg?s=128&g=1", "display_name": "Lewis Peel", "link": "https://stackoverflow.com/users/488653/lewis-peel"}, "edited": false, "score": 0, "creation_date": 1429885219, "post_id": 29849715, "comment_id": 47825836, "body": "That kinda works but it means I have to write &quot;Lib.Graphics.Image.State.STATE_IDLE&quot; instead of &quot;Lib.Graphics.Image.STATE_IDLE&quot;"}, {"owner": {"reputation": 80876, "user_id": 188246, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/bTzLq.jpg?s=128&g=1", "display_name": "David Sherret", "link": "https://stackoverflow.com/users/188246/david-sherret"}, "reply_to_user": {"reputation": 1060, "user_id": 488653, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/bUxrb.jpg?s=128&g=1", "display_name": "Lewis Peel", "link": "https://stackoverflow.com/users/488653/lewis-peel"}, "edited": false, "score": 2, "creation_date": 1429885321, "post_id": 29849715, "comment_id": 47825923, "body": "@LewisPeel then what you&#39;re looking for is not an enum in a class, but static number properties on a class. Use Steve&#39;s answer, but explicitly give each of those properties a value... ex. <code>static STATE_IDLE: number = 0; static STATE_LOADING: number = 1;</code> etc..."}, {"owner": {"reputation": 1060, "user_id": 488653, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/bUxrb.jpg?s=128&g=1", "display_name": "Lewis Peel", "link": "https://stackoverflow.com/users/488653/lewis-peel"}, "edited": false, "score": 0, "creation_date": 1429886260, "post_id": 29849715, "comment_id": 47826615, "body": "I think that&#39;s my only option. It&#39;s a shame though because like I said, you could use 100 instead of Image.STATE_LOADING and the compiler wouldn&#39;t flag it up...but when the code runs it&#39;ll throw an error."}, {"owner": {"reputation": 80876, "user_id": 188246, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/bTzLq.jpg?s=128&g=1", "display_name": "David Sherret", "link": "https://stackoverflow.com/users/188246/david-sherret"}, "reply_to_user": {"reputation": 1060, "user_id": 488653, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/bUxrb.jpg?s=128&g=1", "display_name": "Lewis Peel", "link": "https://stackoverflow.com/users/488653/lewis-peel"}, "edited": false, "score": 0, "creation_date": 1429889723, "post_id": 29849715, "comment_id": 47829236, "body": "Oh, I forgot this was a definition file. You can&#39;t assign the values to those members, but just make sure you do that in the corresponding javascript file (I meant to originally say members and and not properties too)"}, {"owner": {"reputation": 1060, "user_id": 488653, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/bUxrb.jpg?s=128&g=1", "display_name": "Lewis Peel", "link": "https://stackoverflow.com/users/488653/lewis-peel"}, "edited": false, "score": 0, "creation_date": 1429889935, "post_id": 29849715, "comment_id": 47829384, "body": "I think I might have found a solution. <a href=\"http://stackoverflow.com/a/29851144/488653\">stackoverflow.com/a/29851144/488653</a>"}, {"owner": {"reputation": 80876, "user_id": 188246, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/bTzLq.jpg?s=128&g=1", "display_name": "David Sherret", "link": "https://stackoverflow.com/users/188246/david-sherret"}, "reply_to_user": {"reputation": 1060, "user_id": 488653, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/bUxrb.jpg?s=128&g=1", "display_name": "Lewis Peel", "link": "https://stackoverflow.com/users/488653/lewis-peel"}, "edited": false, "score": 0, "creation_date": 1429890410, "post_id": 29849715, "comment_id": 47829729, "body": "@LewisPeel I updated the answer so you don&#39;t have to write state twice. I think it makes more sense to do this than anything (as long as you have control over the original javascript)."}], "tags": [], "owner": {"reputation": 80876, "user_id": 188246, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/bTzLq.jpg?s=128&g=1", "display_name": "David Sherret", "link": "https://stackoverflow.com/users/188246/david-sherret"}, "is_accepted": false, "score": 0, "last_activity_date": 1429889953, "last_edit_date": 1429889953, "creation_date": 1429884607, "answer_id": 29849715, "question_id": 29844959, "link": "https://stackoverflow.com/questions/29844959/enum-inside-class-typescript-definition-file/29849715#29849715", "title": "Enum inside class (TypeScript definition file)", "body": "<p>You could create a module and class with the same name. It might also help to rename your enum so that you don't have to say <code>State</code> twice:</p>\n\n<pre><code>declare module 'Lib' {\n    export module Graphics {\n        export class Image {\n            constructor();\n        }\n\n        export module Image {\n            export enum State {\n                Idle,\n                Loading,\n                Ready,\n                Error\n            }\n        }\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 1060, "user_id": 488653, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/bUxrb.jpg?s=128&g=1", "display_name": "Lewis Peel", "link": "https://stackoverflow.com/users/488653/lewis-peel"}, "edited": false, "score": 0, "creation_date": 1429890042, "post_id": 29851144, "comment_id": 47829468, "body": "I could probably even remove the values from inside the enums too without affecting anything."}, {"owner": {"reputation": 80876, "user_id": 188246, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/bTzLq.jpg?s=128&g=1", "display_name": "David Sherret", "link": "https://stackoverflow.com/users/188246/david-sherret"}, "edited": false, "score": 0, "creation_date": 1429890526, "post_id": 29851144, "comment_id": 47829809, "body": "Now you can access it two ways: <code>Image.State.STATE_IDLE</code> and <code>Image.STATE_IDLE</code>. It&#39;s a little difficult for someone looking at your definition to figure out what they&#39;re supposed to use."}, {"owner": {"reputation": 1060, "user_id": 488653, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/bUxrb.jpg?s=128&g=1", "display_name": "Lewis Peel", "link": "https://stackoverflow.com/users/488653/lewis-peel"}, "reply_to_user": {"reputation": 80876, "user_id": 188246, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/bTzLq.jpg?s=128&g=1", "display_name": "David Sherret", "link": "https://stackoverflow.com/users/188246/david-sherret"}, "edited": false, "score": 0, "creation_date": 1429890935, "post_id": 29851144, "comment_id": 47830094, "body": "True. I&#39;ve edited the answer and removed the values from inside the enum...which makes more sense. This actually looks like what threejs has in their definition file."}], "tags": [], "owner": {"reputation": 1060, "user_id": 488653, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/bUxrb.jpg?s=128&g=1", "display_name": "Lewis Peel", "link": "https://stackoverflow.com/users/488653/lewis-peel"}, "is_accepted": true, "score": 2, "last_activity_date": 1429891877, "last_edit_date": 1429891877, "creation_date": 1429888298, "answer_id": 29851144, "question_id": 29844959, "link": "https://stackoverflow.com/questions/29844959/enum-inside-class-typescript-definition-file/29851144#29851144", "title": "Enum inside class (TypeScript definition file)", "body": "<p>I think I may have found a solution...whether it's valid TypeScript I don't know but it works and doesn't cause any compile errors. It's a combination of the above answers.</p>\n\n<pre><code>declare module 'Lib' {\n\n  module Graphics {\n\n    module Image {\n      enum State { }\n      var STATE_IDLE: State;\n      var STATE_LOADING: State;\n      var STATE_READY: State;\n      var STATE_ERROR: State;\n    }\n\n    class Image {\n      constructor();\n    }\n\n  }\n\n}\n</code></pre>\n\n<p>Can anyone spot any potential issues with this that I haven't noticed?</p>\n"}, {"tags": [], "owner": {"reputation": 381, "user_id": 5479901, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1673036ca8c7cbcfbd478f9b6530434c?s=128&d=identicon&r=PG&f=1", "display_name": "KoenT", "link": "https://stackoverflow.com/users/5479901/koent"}, "is_accepted": false, "score": 38, "last_activity_date": 1445601339, "creation_date": 1445601339, "answer_id": 33301725, "question_id": 29844959, "link": "https://stackoverflow.com/questions/29844959/enum-inside-class-typescript-definition-file/33301725#33301725", "title": "Enum inside class (TypeScript definition file)", "body": "<p>I also bumped into this problem recently.\nThis is what I am currently using as a solution:</p>\n\n<pre><code>// File: Image.ts\n\nclass Image\n{\n    constructor()\n    {\n        this.state = Image.State.Idle;\n    }\n\n    state: Image.State;\n}\n\nmodule Image\n{\n    export enum State\n    {\n        Idle,\n        Loading,\n        Ready,\n        Error\n    }\n}\n\nexport = Image;\n</code></pre>\n\n<p>Then in the place where I'm using the class and its enum:</p>\n\n<pre><code>import Image = require(\"Image\");\n\nlet state = Image.State.Idle;\nlet image = new Image();\nstate = image.state;\n</code></pre>\n\n<p>This seems to work fine (even though I don't consider it as the expected way to do this kind of thing).</p>\n\n<p>Hopefully there will be a way in TypeScript to do it this way:</p>\n\n<pre><code>class Image\n{\n    enum State\n    {\n        Idle,\n        Loading,\n        Ready,\n        Error\n    }\n\n    constructor()\n    {\n        this.state = State.Idle;\n    }\n\n    state: State;\n}\n\nexport = Image;\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 1060, "user_id": 488653, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/bUxrb.jpg?s=128&g=1", "display_name": "Lewis Peel", "link": "https://stackoverflow.com/users/488653/lewis-peel"}, "edited": false, "score": 0, "creation_date": 1483525084, "post_id": 41308367, "comment_id": 70128069, "body": "I appreciate that but I was trying to write a declaration for for an existing library, something out of my control so &#39;Graphics.Image.State.STATE_ERROR&#39; would not work for me - it has to be &#39;Graphics.Image.STATE_ERROR&#39;"}, {"owner": {"reputation": 12083, "user_id": 681538, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/LNlya.jpg?s=128&g=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/681538/alex"}, "reply_to_user": {"reputation": 1060, "user_id": 488653, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/bUxrb.jpg?s=128&g=1", "display_name": "Lewis Peel", "link": "https://stackoverflow.com/users/488653/lewis-peel"}, "edited": false, "score": 0, "creation_date": 1483532308, "post_id": 41308367, "comment_id": 70132718, "body": "@LewisPeel Ah, sorry. I&#39;ve updated the answer, would that give you any value?"}], "tags": [], "owner": {"reputation": 12083, "user_id": 681538, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/LNlya.jpg?s=128&g=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/681538/alex"}, "is_accepted": false, "score": 3, "last_activity_date": 1483527161, "last_edit_date": 1483527161, "creation_date": 1482531068, "answer_id": 41308367, "question_id": 29844959, "link": "https://stackoverflow.com/questions/29844959/enum-inside-class-typescript-definition-file/41308367#41308367", "title": "Enum inside class (TypeScript definition file)", "body": "<p>I think that this stuff with module augmentation is a very hacky and non-intuitive way* of doing things, so consider this:</p>\n\n<pre><code>export module Graphics\n{\n    enum State\n    {\n        STATE_IDLE,\n        STATE_LOADING,\n        STATE_READY,\n        STATE_ERROR\n    }\n\n    export class Image\n    {\n        constructor() { }\n        public static readonly State = State;\n    }\n}\n\n//...\n\nlet imgState = Graphics.Image.State.STATE_ERROR;\n</code></pre>\n\n<p>That is, just declare the enum in the scope of the class that you want to add it to without exporting it, then expose it through a member of the class.</p>\n\n<p><sub>* Which in regards of structuring and organization of code is BAD, even if it technically works.</sub></p>\n\n<p><strong>Update</strong></p>\n\n<pre><code>declare module Lib\n{\n    enum State\n    {\n        STATE_IDLE,\n        STATE_LOADING,\n        STATE_READY,\n        STATE_ERROR\n    }\n\n    class ImageClass\n    {\n        constructor();\n        public Prop: any;\n    }\n\n    export interface Graphics\n    {\n        Image: typeof State &amp; ImageClass &amp; (new () =&gt; typeof State &amp; ImageClass);\n    }\n}\n\ndeclare var Graphics: Lib.Graphics;\n</code></pre>\n\n<p>Then you get typing like:</p>\n\n<pre><code>var someEnum = Graphics.Image.STATE_ERROR;\nvar image = new Graphics.Image();\nvar anotherEnum = image.STATE_IDLE;\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 14021, "user_id": 7571258, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/fBP6e.png?s=128&g=1", "display_name": "zett42", "link": "https://stackoverflow.com/users/7571258/zett42"}, "edited": false, "score": 7, "creation_date": 1577627980, "post_id": 47600870, "comment_id": 105211072, "body": "This technique is also described in the official reference under <a href=\"https://www.typescriptlang.org/docs/handbook/declaration-merging.html#merging-namespaces-with-classes\" rel=\"nofollow noreferrer\">Declaration Merging</a>. To use this technique with <code>export default</code>, one would remove the <code>export</code> keyword from <code>class</code> and <code>namespace</code> and add the line <code>export default Image;</code> after the closing bracket of the <code>namespace</code>."}, {"owner": {"reputation": 795, "user_id": 5254957, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/WgxtF.jpg?s=128&g=1", "display_name": "Janis Jansen", "link": "https://stackoverflow.com/users/5254957/janis-jansen"}, "edited": false, "score": 0, "creation_date": 1588159179, "post_id": 47600870, "comment_id": 108790905, "body": "Thanks for that answer! I did not know about this Declaration merging yet and.. wow, that&#39;s powerfull!"}, {"owner": {"reputation": 4233, "user_id": 1063653, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/cfbfb15f60df712bdd013c4423a4774e?s=128&d=identicon&r=PG", "display_name": "Shadoweb", "link": "https://stackoverflow.com/users/1063653/shadoweb"}, "edited": false, "score": 0, "creation_date": 1599995647, "post_id": 47600870, "comment_id": 112942854, "body": "It&#39;s not working anymore. Error: &#39;namespace&#39; and &#39;module&#39; are disallowed (no-namespace). Check <a href=\"https://www.typescriptlang.org/docs/handbook/declaration-merging.html#disallowed-merges\" rel=\"nofollow noreferrer\">typescriptlang.org/docs/handbook/&hellip;</a>"}, {"owner": {"reputation": 7110, "user_id": 800619, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/374b8f6eb41fb881b3c726786bc8383a?s=128&d=identicon&r=PG", "display_name": "NSjonas", "link": "https://stackoverflow.com/users/800619/nsjonas"}, "reply_to_user": {"reputation": 4233, "user_id": 1063653, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/cfbfb15f60df712bdd013c4423a4774e?s=128&d=identicon&r=PG", "display_name": "Shadoweb", "link": "https://stackoverflow.com/users/1063653/shadoweb"}, "edited": false, "score": 0, "creation_date": 1600019800, "post_id": 47600870, "comment_id": 112949617, "body": "@Shadoweb this definitely still works... The &quot;no-namespace&quot; error is a ts-lint configuration (and a controversial one), NOT a typescript error.  See <a href=\"https://palantir.github.io/tslint/rules/no-namespace/\" rel=\"nofollow noreferrer\">palantir.github.io/tslint/rules/no-namespace</a> and <a href=\"https://github.com/microsoft/TypeScript/issues/30994\" rel=\"nofollow noreferrer\">github.com/microsoft/TypeScript/issues/30994</a>"}, {"owner": {"reputation": 216, "user_id": 14027870, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/52d70d3588d808104416914a06ed6c58?s=128&d=identicon&r=PG&f=1", "display_name": "phil123456", "link": "https://stackoverflow.com/users/14027870/phil123456"}, "edited": false, "score": 1, "creation_date": 1602204709, "post_id": 47600870, "comment_id": 113653993, "body": "not working, you cannot use the enums inside the class itself, what a load of...."}, {"owner": {"reputation": 7110, "user_id": 800619, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/374b8f6eb41fb881b3c726786bc8383a?s=128&d=identicon&r=PG", "display_name": "NSjonas", "link": "https://stackoverflow.com/users/800619/nsjonas"}, "reply_to_user": {"reputation": 216, "user_id": 14027870, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/52d70d3588d808104416914a06ed6c58?s=128&d=identicon&r=PG&f=1", "display_name": "phil123456", "link": "https://stackoverflow.com/users/14027870/phil123456"}, "edited": false, "score": 0, "creation_date": 1603230755, "post_id": 47600870, "comment_id": 113970652, "body": "@phil123456 Sounds like you are confused.  It definitely works and you can use the enum inside the class (as clearly illustrated in the example itself)  <a href=\"https://stackblitz.com/edit/typescript-playground-sandbox-7v4d5j\" rel=\"nofollow noreferrer\">stackblitz.com/edit/typescript-playground-sandbox-7v4d5j</a>"}, {"owner": {"reputation": 5649, "user_id": 338581, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/2acbf0ee0888104f1c90a85266682990?s=128&d=identicon&r=PG", "display_name": "noisy", "link": "https://stackoverflow.com/users/338581/noisy"}, "edited": false, "score": 0, "creation_date": 1607627087, "post_id": 47600870, "comment_id": 115339058, "body": "@NSjonas it constructor... yes... but it doesn&#39;t work if I want to define some properties"}, {"owner": {"reputation": 7110, "user_id": 800619, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/374b8f6eb41fb881b3c726786bc8383a?s=128&d=identicon&r=PG", "display_name": "NSjonas", "link": "https://stackoverflow.com/users/800619/nsjonas"}, "reply_to_user": {"reputation": 5649, "user_id": 338581, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/2acbf0ee0888104f1c90a85266682990?s=128&d=identicon&r=PG", "display_name": "noisy", "link": "https://stackoverflow.com/users/338581/noisy"}, "edited": false, "score": 0, "creation_date": 1607627296, "post_id": 47600870, "comment_id": 115339151, "body": "@noisy can you elaborate? Maybe provide a link to what you are trying to do?"}], "tags": [], "owner": {"reputation": 7110, "user_id": 800619, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/374b8f6eb41fb881b3c726786bc8383a?s=128&d=identicon&r=PG", "display_name": "NSjonas", "link": "https://stackoverflow.com/users/800619/nsjonas"}, "is_accepted": false, "score": 66, "last_activity_date": 1587137542, "last_edit_date": 1587137542, "creation_date": 1512159345, "answer_id": 47600870, "question_id": 29844959, "link": "https://stackoverflow.com/questions/29844959/enum-inside-class-typescript-definition-file/47600870#47600870", "title": "Enum inside class (TypeScript definition file)", "body": "<p>I think the following is an improvement on KoenT's solution:</p>\n\n<pre><code>export class Image\n{\n    constructor ()\n    {\n        this.state = Image.State.Idle;\n    }\n\n    state: Image.State;\n}\n\nexport namespace Image\n{\n    export enum State\n    {\n        Idle,\n        Loading,\n        Ready,\n        Error\n    }\n}\n</code></pre>\n\n<p>The advantage being that you can leverage named imports:</p>\n\n<pre><code>import {Image} from './image';\nlet img = new Image()\nimg.state = Image.State.Error\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 6018, "user_id": 1122806, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/09b0387240456c6a2e480460127195b0?s=128&d=identicon&r=PG", "display_name": "Dimanoid", "link": "https://stackoverflow.com/users/1122806/dimanoid"}, "edited": false, "score": 2, "creation_date": 1533050682, "post_id": 48431641, "comment_id": 90199301, "body": "Nice approach but what if I need to declare a variable of enum&#39;s type? <code>enumVar: Program.Status;</code> not working"}, {"owner": {"reputation": 952, "user_id": 700283, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c821fc490447cfc7701a5fb074bc4e2d?s=128&d=identicon&r=PG", "display_name": "graup", "link": "https://stackoverflow.com/users/700283/graup"}, "edited": false, "score": 1, "creation_date": 1552372787, "post_id": 48431641, "comment_id": 96972598, "body": "This should be the accepted solution, the other ones produce lint warnings (<a href=\"https://github.com/bradzacher/eslint-plugin-typescript/blob/master/docs/rules/no-namespace.md\" rel=\"nofollow noreferrer\">github.com/bradzacher/eslint-plugin-typescript/blob/master/&zwnj;&#8203;docs/&hellip;</a>)"}, {"owner": {"reputation": 128, "user_id": 4012426, "user_type": "registered", "profile_image": "https://graph.facebook.com/100000105441681/picture?type=large", "display_name": "Hutch Moore", "link": "https://stackoverflow.com/users/4012426/hutch-moore"}, "edited": false, "score": 0, "creation_date": 1599916653, "post_id": 48431641, "comment_id": 112926762, "body": "Doesn&#39;t work with Angular unless you remove the <code>static</code> since templates can&#39;t use static properties of their component."}, {"owner": {"reputation": 922, "user_id": 2358659, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2507b387674450082f63930a449d19ae?s=128&d=identicon&r=PG", "display_name": "Ma\u017evydas Tadaravi\u010dius", "link": "https://stackoverflow.com/users/2358659/ma%c5%bevydas-tadaravi%c4%8dius"}, "edited": false, "score": 1, "creation_date": 1604922156, "post_id": 48431641, "comment_id": 114485364, "body": "Hence <code>readonly Status = Program.Status;</code> just under <code>static</code>."}], "tags": [], "owner": {"reputation": 922, "user_id": 2358659, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2507b387674450082f63930a449d19ae?s=128&d=identicon&r=PG", "display_name": "Ma\u017evydas Tadaravi\u010dius", "link": "https://stackoverflow.com/users/2358659/ma%c5%bevydas-tadaravi%c4%8dius"}, "is_accepted": false, "score": 45, "last_activity_date": 1516828206, "creation_date": 1516828206, "answer_id": 48431641, "question_id": 29844959, "link": "https://stackoverflow.com/questions/29844959/enum-inside-class-typescript-definition-file/48431641#48431641", "title": "Enum inside class (TypeScript definition file)", "body": "<h2>Here's my solution.</h2>\n\n<p><strong>program.ts:</strong></p>\n\n<pre><code>enum Status {\n    Deleting,\n    Editing,\n    Existing,\n    New\n}\n\nexport class Program {\n    static readonly Status = Status;\n    readonly Status = Program.Status;\n\n    title: string;\n\n    status: Status;\n\n    constructor(init?: Partial&lt;Program&gt;) {\n        Object.assign(this, init);\n    }\n}\n</code></pre>\n\n<hr>\n\n<p><strong>Usage:</strong></p>\n\n<pre><code>let program = new Program({ title: `some title` });\n\nprogram.status = Program.Status.New;\n</code></pre>\n\n<p><em>or</em></p>\n\n<pre><code>program.status = program.Status.New;\n</code></pre>\n\n<hr>\n\n<p><strong>Added benefit for Angular 2+ users:</strong> this can be used in templates</p>\n\n<pre><code>&lt;div *ngIf=\"program.status === program.Status.New\"&gt;\n  Only display if status of the program is New\n&lt;/div&gt;\n</code></pre>\n"}], "owner": {"reputation": 1060, "user_id": 488653, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/bUxrb.jpg?s=128&g=1", "display_name": "Lewis Peel", "link": "https://stackoverflow.com/users/488653/lewis-peel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 82154, "favorite_count": 13, "accepted_answer_id": 29851144, "answer_count": 7, "score": 85, "last_activity_date": 1615586374, "creation_date": 1429870925, "last_edit_date": 1615586374, "question_id": 29844959, "link": "https://stackoverflow.com/questions/29844959/enum-inside-class-typescript-definition-file", "title": "Enum inside class (TypeScript definition file)", "body": "<p>I've searched around but can't seem to find an answer for this, hopefully you can help.</p>\n<p>How can I add an enum to <code>Image</code>? This is what I would like ideally but I get an error.</p>\n<pre class=\"lang-ts prettyprint-override\"><code>declare module 'Lib' {\n  export module Graphics {\n    export class Image {\n      enum State {}\n\n      static STATE_IDLE: State;\n      static STATE_LOADING: State;\n      static STATE_READY: State;\n      static STATE_ERROR: State;\n      constructor();\n    }\n  }\n}\n</code></pre>\n<p>If I move <code>State</code> into the <code>Graphics</code> module it works but now <code>State</code> belongs to <code>Graphics</code>, which is incorrect. It needs to be part of <code>Image</code>.</p>\n"}, {"tags": ["typescript", "protocol-buffers"], "answers": [{"tags": [], "owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "is_accepted": true, "score": 2, "last_activity_date": 1430226257, "creation_date": 1430226257, "answer_id": 29920365, "question_id": 29830408, "link": "https://stackoverflow.com/questions/29830408/forcing-protobuf-js-to-ignore-unrecognized-js-side-fields/29920365#29920365", "title": "Forcing Protobuf.js to ignore unrecognized JS-side fields", "body": "<p>I have created a short example for you. You can solve this problem using <code>Object.defineProperty</code> to add a non-enumerable property (this won't show up when you use <code>for (var key in obj)</code>.</p>\n\n<p>In the example below, the <code>first</code> property is enumerable (and will appear in the console window along with the <code>name</code> property). The <code>second</code> property is not enumerable, so it won't appear in the console window.</p>\n\n<p>Using this technique, you could add properties that won't be picked up in your <code>for</code> loop.</p>\n\n<pre><code>var obj = {\n    name: 'Steve'\n};\n\nObject.defineProperty(obj, 'first', {\n  enumerable: true,\n  value: 'example'\n});\n\nObject.defineProperty(obj, 'second', {\n  enumerable: false,\n  value: 'example'\n});\n\nfor (var key in obj) {\n    if (obj.hasOwnProperty(key) \n        &amp;&amp; typeof (value = obj[key]) !== 'undefined') {\n\n        console.log(key);   \n    }\n}\n</code></pre>\n\n<p>So to tie this back to your specific question, you could use...</p>\n\n<pre><code>Object.defineProperty(ReceivedObject, 'RuntimeField', {\n  enumerable: false,\n  value: new RuntimeField()\n});\n</code></pre>\n"}], "owner": {"reputation": 257, "user_id": 1340169, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/bf61bededbf9346fb28abda084256930?s=128&d=identicon&r=PG", "display_name": "bunt", "link": "https://stackoverflow.com/users/1340169/bunt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 574, "favorite_count": 0, "accepted_answer_id": 29920365, "answer_count": 1, "score": 3, "last_activity_date": 1430226257, "creation_date": 1429809846, "question_id": 29830408, "link": "https://stackoverflow.com/questions/29830408/forcing-protobuf-js-to-ignore-unrecognized-js-side-fields", "title": "Forcing Protobuf.js to ignore unrecognized JS-side fields", "body": "<p>In sending objects back and forth between JS (TypeScript actually) and .NET w/ protobuf.js I would like to decorate the JS objects w/ fields only meaningful at runtime (e.g. WebGL context, handles, etc.).  Adding a new dynamic field is straightforward:</p>\n\n<pre><code>ReceivedObject.RuntimeField = new RuntimeField();\n</code></pre>\n\n<p>However, when serializing back up to the server protobuf.js discovers the new field and throws an exception.  </p>\n\n<p>I have found I can hack around this by adding the three lines below directly to protobuf.js:</p>\n\n<pre><code>MessagePrototype.set = function (keyOrObj, value, noAssert) {\n    if (keyOrObj &amp;&amp; typeof keyOrObj === 'object') {\n        noAssert = value;\n        for (var ikey in keyOrObj)\n            if (keyOrObj.hasOwnProperty(ikey) &amp;&amp; typeof (value = keyOrObj[ikey]) !== 'undefined') {\n                if (ikey == \"RuntimeField\") {   // added\n                    continue;                   // added    \n                }                               // added\n                this.$set(ikey, value, noAssert);\n            }\n        return this;\n    }\n    ...\n}\n</code></pre>\n\n<p>This is of course not very maintainable.  Is there a better approach?  The object hierarchy is rich and deep so I'd like to avoid approaches involving wholesale copying of 100s of fields to/from custom JS-side objects.</p>\n\n<p>Thanks for any suggestions.</p>\n"}, {"tags": ["javascript", "typescript"], "comments": [{"owner": {"reputation": 162223, "user_id": 1704166, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/d256baab2fcfd81b0f109d394404fd67?s=128&d=identicon&r=PG", "display_name": "Ryan Cavanaugh", "link": "https://stackoverflow.com/users/1704166/ryan-cavanaugh"}, "edited": false, "score": 1, "creation_date": 1429806713, "post_id": 29829283, "comment_id": 47785132, "body": "What&#39;s going on with &quot;warning here&quot; in that last example? There&#39;s no error when I paste that code into the Playground."}], "answers": [{"tags": [], "owner": {"reputation": 10969, "user_id": 1523814, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7263b6f605379925111266939ee054d4?s=128&d=identicon&r=PG", "display_name": "Dick van den Brink", "link": "https://stackoverflow.com/users/1523814/dick-van-den-brink"}, "is_accepted": false, "score": 2, "last_activity_date": 1429809683, "creation_date": 1429809683, "answer_id": 29830361, "question_id": 29829283, "link": "https://stackoverflow.com/questions/29829283/typescript-classes-constructor-and-method/29830361#29830361", "title": "TypeScript classes : constructor and method", "body": "<p>This sounds like a error from TSLint. Are you by any change using WebEssentials?</p>\n\n<p>You might want to disable this rule as from what you are saying it looks buggy. WebEssentials loads the <code>tslint.json</code> from your user home directory (<code>%userprofile%</code>). You should be able to find a tslint.json file there. This is the place where you can enable/disable rules.</p>\n\n<p>It sounds like there is a bug in the following rule</p>\n\n<blockquote>\n  <p><code>no-use-before-declare</code> disallows usage of variables before their declaration`</p>\n</blockquote>\n\n<p>You can disable this rule by adding (or changing) the configuration with this:</p>\n\n<pre><code>\"no-use-before-declare\": false\n</code></pre>\n\n<p>More info about tslint and its rules can be found here: <a href=\"https://github.com/palantir/tslint/\" rel=\"nofollow\">https://github.com/palantir/tslint/</a></p>\n"}, {"tags": [], "owner": {"reputation": 13755, "user_id": 207051, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ktARb.jpg?s=128&g=1", "display_name": "Martin", "link": "https://stackoverflow.com/users/207051/martin"}, "is_accepted": false, "score": -2, "last_activity_date": 1429810926, "creation_date": 1429810926, "answer_id": 29830714, "question_id": 29829283, "link": "https://stackoverflow.com/questions/29829283/typescript-classes-constructor-and-method/29830714#29830714", "title": "TypeScript classes : constructor and method", "body": "<p>Your error <code>variable XXX used before declaration</code> is caused because declaring your class methods as class properties. </p>\n\n<p>Instead of declaring your method like this:</p>\n\n<pre><code>public method = () =&gt; {\n</code></pre>\n\n<p>Declare it like this: </p>\n\n<pre><code>public method() {\n</code></pre>\n\n<p>So your class would look like this:</p>\n\n<pre><code>module ModuleName {\n    export class ClassName {\n        constructor(private dependency: any ) { }\n\n        public method() {\n            this.dependency.someUse();\n        }\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 80876, "user_id": 188246, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/bTzLq.jpg?s=128&g=1", "display_name": "David Sherret", "link": "https://stackoverflow.com/users/188246/david-sherret"}, "edited": false, "score": 0, "creation_date": 1429898068, "post_id": 29842527, "comment_id": 47834469, "body": "That&#39;s not good. The issue should be reported to TSLint if it already hasn&#39;t been."}], "tags": [], "owner": {"reputation": 3096, "user_id": 3292234, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/1g62z.jpg?s=128&g=1", "display_name": "antoinestv", "link": "https://stackoverflow.com/users/3292234/antoinestv"}, "is_accepted": true, "score": 0, "last_activity_date": 1429864596, "creation_date": 1429864596, "answer_id": 29842527, "question_id": 29829283, "link": "https://stackoverflow.com/questions/29829283/typescript-classes-constructor-and-method/29842527#29842527", "title": "TypeScript classes : constructor and method", "body": "<p>Finally I think it is a bad idea to remove this warning because it can be very usefull in some cases. </p>\n\n<p>But I found how to solve my problem :\nIf we <strong>move the constructor to the end of the class</strong>, we have no more warnings : </p>\n\n<pre><code>module ModuleName {\n    export class ClassName {\n\n        public method = () =&gt; {\n            this.dependency.someUse();\n        };\n\n        constructor(\n            private dependency: any ) {\n            this.method();\n        }\n\n    }\n}\n</code></pre>\n\n<p>If we look at the generated JS that easier to understand what is happening : the constructor's parameters are still placed at the start of the generated function :</p>\n\n<pre><code>var ModuleName;\n(function (ModuleName) {\n    var ClassName = (function () {\n        function ClassName(dependency) {\n            var _this = this;\n            this.dependency = dependency;\n            this.method = function () {\n                _this.dependency.someUse();\n            };\n            this.method();\n        }\n        return ClassName;\n    })();\n    ModuleName.ClassName = ClassName;\n})(ModuleName || (ModuleName = {}));\n</code></pre>\n"}], "owner": {"reputation": 3096, "user_id": 3292234, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/1g62z.jpg?s=128&g=1", "display_name": "antoinestv", "link": "https://stackoverflow.com/users/3292234/antoinestv"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1191, "favorite_count": 0, "accepted_answer_id": 29842527, "answer_count": 3, "score": 3, "last_activity_date": 1429864596, "creation_date": 1429806335, "last_edit_date": 1429806602, "question_id": 29829283, "link": "https://stackoverflow.com/questions/29829283/typescript-classes-constructor-and-method", "title": "TypeScript classes : constructor and method", "body": "<p>I am trying to avoid double declaration in my Typescript classes.</p>\n\n<p>Before I was writing my classes like that :</p>\n\n<pre><code>module ModuleName {\n    export class ClassName {\n        public method: () =&gt; void;\n\n        constructor(\n            private dependency: any ) {\n            this.method = () =&gt; {\n                dependency.someUse();\n            };\n        }\n    }\n}\n</code></pre>\n\n<p>But the declaration of the type of the method (here <code>public method: () =&gt; void;</code>) looks useless, especially when you already have an interface which declare it. So I wanted to write :</p>\n\n<pre><code>module ModuleName {\n    export class ClassName {\n        constructor(\n            private dependency: any ) { }\n\n        public method = () =&gt; {\n            this.dependency.someUse();\n        };\n\n    }\n}\n</code></pre>\n\n<p>Note : To avoid warnings <code>variable XXX used before declaration</code>, we have to put the methods after the constructor.</p>\n\n<p>But now if we use our methods in the constructor, we again get the warnings on this methods :</p>\n\n<pre><code>module ModuleName {\n    export class ClassName {\n        constructor(\n            private dependency: any ) {\n            this.method(); // warning here\n        }\n\n        public method = () =&gt; {\n            this.dependency.someUse();\n        };\n\n    }\n}\n</code></pre>\n\n<p>So, my question is : <strong>How should we write our classes properly ?</strong></p>\n\n<p><em>Note : As typescript compiler corrects the declaration's order, that's not a big deal, I just want to know if it's possible to write classes without double declarations and warnings.</em></p>\n"}, {"tags": ["angularjs", "gruntjs", "typescript", "definitelytyped"], "answers": [{"comments": [{"owner": {"reputation": 97, "user_id": 2645143, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/ca153c9628e6336e7490435db209ee92?s=128&d=identicon&r=PG&f=1", "display_name": "quicky", "link": "https://stackoverflow.com/users/2645143/quicky"}, "edited": false, "score": 0, "creation_date": 1429860839, "post_id": 29828225, "comment_id": 47808835, "body": "I see... Thank u Ryan"}], "tags": [], "owner": {"reputation": 162223, "user_id": 1704166, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/d256baab2fcfd81b0f109d394404fd67?s=128&d=identicon&r=PG", "display_name": "Ryan Cavanaugh", "link": "https://stackoverflow.com/users/1704166/ryan-cavanaugh"}, "is_accepted": true, "score": 0, "last_activity_date": 1429803547, "creation_date": 1429803547, "answer_id": 29828225, "question_id": 29827318, "link": "https://stackoverflow.com/questions/29827318/grunt-error-ts2304-cannot-find-name/29828225#29828225", "title": "grunt error TS2304 cannot find name", "body": "<p><code>ICookiesService</code> is declared in the namespace <code>angular.cookies</code>. You need to reference it via that namespace (e.g. <code>angular.cookies.ICookiesService</code>), or use an <code>import</code> to create a shorter local name for it (e.g. <code>import ics = angular.cookies.ICookiesService</code>, then refer to it by <code>ics</code>)</p>\n"}], "owner": {"reputation": 97, "user_id": 2645143, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/ca153c9628e6336e7490435db209ee92?s=128&d=identicon&r=PG&f=1", "display_name": "quicky", "link": "https://stackoverflow.com/users/2645143/quicky"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2393, "favorite_count": 0, "accepted_answer_id": 29828225, "answer_count": 1, "score": 1, "last_activity_date": 1429803547, "creation_date": 1429801230, "question_id": 29827318, "link": "https://stackoverflow.com/questions/29827318/grunt-error-ts2304-cannot-find-name", "title": "grunt error TS2304 cannot find name", "body": "<p>I'm struggling with <code>error TS2304: Cannot find name 'ICookiesService'</code>. Despite I searched for solutions I don't seem to find one. I believe the reference is correct. I loaded the module ngCookies in app.ts and added the dependency.  What am I missing?</p>\n\n<p>Many thanks for your help...</p>\n\n<p>My controller looks like this:</p>\n\n<pre><code>/// &lt;reference path='loginComponentScope.interface.ts' /&gt;\n/// &lt;reference path='xxx/angular-cookies.d.ts' /&gt;\n/// &lt;reference path='xxx/login.service.ts' /&gt;\n\n'use strict';\n   class LoginComponentController {\n\n    public static $inject = [\n      '$scope',\n      '$cookies',\n      'loginRestService'\n    ];\n\n    constructor( \n      private $scope: ILoginComponentScope,\n              $cookies: ICookiesService,\n              service: LoginService\n    ) {\n        ...     \n        $cookies.put('securityToken', data);\n        ...\n</code></pre>\n\n<p>angular-cookies.d.ts</p>\n\n<pre><code> /// &lt;reference path=\"angular.d.ts\" /&gt;\n    declare module \"angular-cookies\" {\n        var _: string;\n        export = _;\n    }\n\n    declare module angular.cookies {\n\n        interface ICookiesService {\n            [index: string]: any;\n        }\n    ...\n    }\n</code></pre>\n"}, {"tags": ["javascript", "typescript", "local-variables"], "comments": [{"owner": {"reputation": 20729, "user_id": 1470607, "user_type": "registered", "accept_rate": 72, "profile_image": "https://i.stack.imgur.com/6CA0X.png?s=128&g=1", "display_name": "Etheryte", "link": "https://stackoverflow.com/users/1470607/etheryte"}, "edited": false, "score": 1, "creation_date": 1429795077, "post_id": 29824627, "comment_id": 47775578, "body": "Use strict like you should be anyway. Also, Jslint."}, {"owner": {"reputation": 369690, "user_id": 182668, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/b19917aa04a6839aef577f1117c71d48?s=128&d=identicon&r=PG", "display_name": "Pointy", "link": "https://stackoverflow.com/users/182668/pointy"}, "edited": false, "score": 0, "creation_date": 1429795087, "post_id": 29824627, "comment_id": 47775586, "body": "Technically it wasn&#39;t the <code>var</code> part of the stray statement that caused your problem, it was the initialization expression. All <code>var</code> declarations are <i>hoisted</i> to the top of the function anyway, so redundant declarations are not a problem. It&#39;s the <i>assignment</i> that overwrote the variable&#39;s previous value."}, {"owner": {"reputation": 871364, "user_id": 157247, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/4HovX.jpg?s=128&g=1", "display_name": "T.J. Crowder", "link": "https://stackoverflow.com/users/157247/t-j-crowder"}, "edited": false, "score": 1, "creation_date": 1429795145, "post_id": 29824627, "comment_id": 47775629, "body": "<i>&quot;by another var server = ... statement, effectively creating a new variable named server&quot;</i> Not in JavaScript (I can&#39;t speak for typescript). In JavaScript, if it&#39;s the same scope, the <code>var</code> part of that was a complete no-op; it was just an assigment expression."}, {"owner": {"reputation": 871364, "user_id": 157247, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/4HovX.jpg?s=128&g=1", "display_name": "T.J. Crowder", "link": "https://stackoverflow.com/users/157247/t-j-crowder"}, "reply_to_user": {"reputation": 20729, "user_id": 1470607, "user_type": "registered", "accept_rate": 72, "profile_image": "https://i.stack.imgur.com/6CA0X.png?s=128&g=1", "display_name": "Etheryte", "link": "https://stackoverflow.com/users/1470607/etheryte"}, "edited": false, "score": 0, "creation_date": 1429795196, "post_id": 29824627, "comment_id": 47775671, "body": "@Nit: Strict mode doesn&#39;t turn redundant declarations into errors. Unfortunately. Nor does JSLint warn you of them."}, {"owner": {"reputation": 7251, "user_id": 2407212, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/OXj1N.jpg?s=128&g=1", "display_name": "Jonathan", "link": "https://stackoverflow.com/users/2407212/jonathan"}, "edited": false, "score": 0, "creation_date": 1429795394, "post_id": 29824627, "comment_id": 47775878, "body": "I checked this in the online version but neither jsHint nor Lint complained about the double declaration... Totally expected them to complain with default settings though."}, {"owner": {"reputation": 871364, "user_id": 157247, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/4HovX.jpg?s=128&g=1", "display_name": "T.J. Crowder", "link": "https://stackoverflow.com/users/157247/t-j-crowder"}, "reply_to_user": {"reputation": 7251, "user_id": 2407212, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/OXj1N.jpg?s=128&g=1", "display_name": "Jonathan", "link": "https://stackoverflow.com/users/2407212/jonathan"}, "edited": false, "score": 0, "creation_date": 1429795440, "post_id": 29824627, "comment_id": 47775914, "body": "@Jonathan: So did I. :-) Strict mode I knew didn&#39;t, but I assumed either JSLint or JSHint (or both) would and was very surprised. I couldn&#39;t even find an option on JSHint to do it (JSHint having a lot more options than JSLint)."}, {"owner": {"reputation": 7251, "user_id": 2407212, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/OXj1N.jpg?s=128&g=1", "display_name": "Jonathan", "link": "https://stackoverflow.com/users/2407212/jonathan"}, "reply_to_user": {"reputation": 871364, "user_id": 157247, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/4HovX.jpg?s=128&g=1", "display_name": "T.J. Crowder", "link": "https://stackoverflow.com/users/157247/t-j-crowder"}, "edited": false, "score": 0, "creation_date": 1429795584, "post_id": 29824627, "comment_id": 47776036, "body": "@T.J.Crowder found it: <code>&quot;shadow&quot;        : true,     &#47;&#47; true: Allows re-define variables later in code e.g. var x=1; x=2;</code> This default is useful for for loops which begin with <code>var i = 0</code>"}, {"owner": {"reputation": 871364, "user_id": 157247, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/4HovX.jpg?s=128&g=1", "display_name": "T.J. Crowder", "link": "https://stackoverflow.com/users/157247/t-j-crowder"}, "reply_to_user": {"reputation": 7251, "user_id": 2407212, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/OXj1N.jpg?s=128&g=1", "display_name": "Jonathan", "link": "https://stackoverflow.com/users/2407212/jonathan"}, "edited": false, "score": 0, "creation_date": 1429795681, "post_id": 29824627, "comment_id": 47776112, "body": "@Jonathan: That&#39;s how I read it too (well, <code>shadow: inner</code> I think it would be). <b>But</b> even if I explicitly turn that on, the online version still doesn&#39;t complain about a redundant declaration in the same scope. (I tried <code>true</code>, <code>false</code>, <code>inner</code>, and <code>outer</code> just in case I was completely misunderstanding.)"}, {"owner": {"reputation": 123667, "user_id": 257182, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/f2c683e7dc0c4d4bcc790f87eaa67301?s=128&d=identicon&r=PG", "display_name": "RobG", "link": "https://stackoverflow.com/users/257182/robg"}, "edited": false, "score": 0, "creation_date": 1429796329, "post_id": 29824627, "comment_id": 47776719, "body": "&quot;<i>\u2026declaring two variables with the same name, in the same scope, ought not to be allowed at all</i>&quot;. It is allowed because it has no effect, the second declaration is ignored (see <a href=\"http://ecma-international.org/ecma-262/5.1/#sec-10.5\" rel=\"nofollow noreferrer\"><i>ECMA\u2013262 &#167;10.5 Declaration Binding Instantiation step 8</i></a>). Declarations are processed before <b>any</b> code in the same scope is executed, therefore you can&#39;t have two instances of the same variable attached to the same execution context."}, {"owner": {"reputation": 7251, "user_id": 2407212, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/OXj1N.jpg?s=128&g=1", "display_name": "Jonathan", "link": "https://stackoverflow.com/users/2407212/jonathan"}, "reply_to_user": {"reputation": 123667, "user_id": 257182, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/f2c683e7dc0c4d4bcc790f87eaa67301?s=128&d=identicon&r=PG", "display_name": "RobG", "link": "https://stackoverflow.com/users/257182/robg"}, "edited": false, "score": 0, "creation_date": 1429797113, "post_id": 29824627, "comment_id": 47777390, "body": "@RobG <code>the second declaration is ignored</code> Nah..."}, {"owner": {"reputation": 20729, "user_id": 1470607, "user_type": "registered", "accept_rate": 72, "profile_image": "https://i.stack.imgur.com/6CA0X.png?s=128&g=1", "display_name": "Etheryte", "link": "https://stackoverflow.com/users/1470607/etheryte"}, "reply_to_user": {"reputation": 871364, "user_id": 157247, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/4HovX.jpg?s=128&g=1", "display_name": "T.J. Crowder", "link": "https://stackoverflow.com/users/157247/t-j-crowder"}, "edited": false, "score": 0, "creation_date": 1429798373, "post_id": 29824627, "comment_id": 47778376, "body": "@T.J.Crowder Depends on what software you use, I suppose, does for me."}, {"owner": {"reputation": 871364, "user_id": 157247, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/4HovX.jpg?s=128&g=1", "display_name": "T.J. Crowder", "link": "https://stackoverflow.com/users/157247/t-j-crowder"}, "reply_to_user": {"reputation": 7251, "user_id": 2407212, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/OXj1N.jpg?s=128&g=1", "display_name": "Jonathan", "link": "https://stackoverflow.com/users/2407212/jonathan"}, "edited": false, "score": 1, "creation_date": 1429801023, "post_id": 29824627, "comment_id": 47780653, "body": "@Jonathan: RobG&#39;s correct, the second declaration is ignored. The <b>assignment</b>, on the other hand, isn&#39;t."}, {"owner": {"reputation": 7251, "user_id": 2407212, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/OXj1N.jpg?s=128&g=1", "display_name": "Jonathan", "link": "https://stackoverflow.com/users/2407212/jonathan"}, "edited": false, "score": 0, "creation_date": 1429810426, "post_id": 29824627, "comment_id": 47787567, "body": "Ok, thanks for clearing that up."}], "answers": [{"comments": [{"owner": {"reputation": 80876, "user_id": 188246, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/bTzLq.jpg?s=128&g=1", "display_name": "David Sherret", "link": "https://stackoverflow.com/users/188246/david-sherret"}, "edited": false, "score": 0, "creation_date": 1429815969, "post_id": 29826846, "comment_id": 47790954, "body": "It&#39;s correct to say to use <code>let</code>, but the example isn&#39;t that pertinent to OP&#39;s situation because using <code>var</code> in the example would not change the value of the first <code>x</code>. I think in OPs case he means a situation where &quot;the variable is in the same scope&quot;, such as <code>var server = ...; var server = ...</code> (no error). This can result in an error if using <code>let</code> instead\u2014<code>Cannot redeclare blocked-scoped variable</code>\u2014which would be desired."}, {"owner": {"reputation": 6371, "user_id": 283851, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/8ae7bce2d58740d9e5173e9cbdea0c4f?s=128&d=identicon&r=PG", "display_name": "mindplay.dk", "link": "https://stackoverflow.com/users/283851/mindplay-dk"}, "edited": false, "score": 0, "creation_date": 1430469928, "post_id": 29826846, "comment_id": 48087127, "body": "Yes, correct - the issue was with variables in the same scope. I should have posted a code sample. +1 for the answer, but marking Shaun&#39;s answer as accepted because it was more complete."}], "tags": [], "owner": {"reputation": 162223, "user_id": 1704166, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/d256baab2fcfd81b0f109d394404fd67?s=128&d=identicon&r=PG", "display_name": "Ryan Cavanaugh", "link": "https://stackoverflow.com/users/1704166/ryan-cavanaugh"}, "is_accepted": false, "score": 6, "last_activity_date": 1429800161, "creation_date": 1429800161, "answer_id": 29826846, "question_id": 29824627, "link": "https://stackoverflow.com/questions/29824627/can-i-prevent-accidental-overwrite-of-local-variables-in-typescript-javascript/29826846#29826846", "title": "Can I prevent accidental overwrite of local variables in TypeScript / JavaScript?", "body": "<p>Use <code>let</code> everywhere possible.</p>\n\n<p>A <code>let</code> variable cannot be used before its declaration:</p>\n\n<pre><code>var x = 3;\nfunction f() {\n  console.log(x); // ReferenceError, x is not defined\n  let x = 5;\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 6371, "user_id": 283851, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/8ae7bce2d58740d9e5173e9cbdea0c4f?s=128&d=identicon&r=PG", "display_name": "mindplay.dk", "link": "https://stackoverflow.com/users/283851/mindplay-dk"}, "edited": false, "score": 0, "creation_date": 1430469760, "post_id": 29835310, "comment_id": 48087055, "body": "I thought I had seen <code>let</code> used in this way in other languages, but had not seen anything to suggest it would work that way in JS. Great news! Thanks :-)"}], "tags": [], "owner": {"reputation": 106152, "user_id": 1108891, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/zUoEd.jpg?s=128&g=1", "display_name": "Shaun Luttin", "link": "https://stackoverflow.com/users/1108891/shaun-luttin"}, "is_accepted": true, "score": 2, "last_activity_date": 1429847478, "last_edit_date": 1592644375, "creation_date": 1429827326, "answer_id": 29835310, "question_id": 29824627, "link": "https://stackoverflow.com/questions/29824627/can-i-prevent-accidental-overwrite-of-local-variables-in-typescript-javascript/29835310#29835310", "title": "Can I prevent accidental overwrite of local variables in TypeScript / JavaScript?", "body": "<p>Two options:</p>\n<ol>\n<li>Use ECMA Script 6 and <code>let</code>.</li>\n<li>Use <a href=\"http://jslint.com/\" rel=\"nofollow noreferrer\">jslint</a> with <code>var</code>.</li>\n</ol>\n<p><a href=\"https://github.com/Microsoft/TypeScript/issues/656\" rel=\"nofollow noreferrer\">There is a closed issue about this on the GitHub/Microsoft/Typescript</a> page. The recommendation is to target ECMA Script 6 and use <code>let</code>.</p>\n<h1>ECMA Script 6 with <code>let</code></h1>\n<p><a href=\"http://www.es6fiddle.net/i8uq6hz5/\" rel=\"nofollow noreferrer\">In ECMA Script 6 this would create an error</a>:</p>\n<pre><code>let x = &quot;foo&quot;;\nlet x = &quot;bar&quot;; // TypeScript with ECMA 6 will complain here\nconsole.log(x);\n</code></pre>\n<blockquote>\n<p>Duplicate declaration, x</p>\n</blockquote>\n<h1>JSLint with <code>var</code></h1>\n<p>Also, <a href=\"http://www.es6fiddle.net/i8uqsiak/\" rel=\"nofollow noreferrer\">though the following won't throw a TypeScript error</a>, the <a href=\"http://jslint.com/\" rel=\"nofollow noreferrer\">jslint</a> tool will complain about it, even if you aren't using strict.</p>\n<pre><code>(function () {\n\n    var x, y;\n    x = &quot;foo&quot;;\n    y = &quot;foo&quot;;\n\n    function sayMsg() {\n        // jslint will complain here\n        var y = &quot;bar&quot;;\n    }\n\n    sayMsg();\n\n    // jslint will also complain here\n    var x = &quot;bar&quot; + y;\n\n}());\n</code></pre>\n<p>This is what <a href=\"http://jslint.com/\" rel=\"nofollow noreferrer\">jslint</a> will tell you:</p>\n<blockquote>\n<p>Redefinition of 'y' from line 3.</p>\n<p>Combine this with the previous 'var' statement.</p>\n</blockquote>\n"}], "owner": {"reputation": 6371, "user_id": 283851, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/8ae7bce2d58740d9e5173e9cbdea0c4f?s=128&d=identicon&r=PG", "display_name": "mindplay.dk", "link": "https://stackoverflow.com/users/283851/mindplay-dk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1040, "favorite_count": 0, "accepted_answer_id": 29835310, "answer_count": 2, "score": 2, "last_activity_date": 1429847478, "creation_date": 1429794978, "question_id": 29824627, "link": "https://stackoverflow.com/questions/29824627/can-i-prevent-accidental-overwrite-of-local-variables-in-typescript-javascript", "title": "Can I prevent accidental overwrite of local variables in TypeScript / JavaScript?", "body": "<p>Today I wasted an hour debugging a trivial issue, where a local variable named <code>server</code> was being initialized and configured - then, on one of the last lines in the same file, accidentally it was being redeclared, e.g. by another <code>var server = ...</code> statement, effectively creating a <em>new</em> variable named <code>server</code>, thus causing the previous variable to fall out of scope; yet, because these were the same type of variable, with the same name, everything else continued to work, making this fairly hard to debug.</p>\n\n<p>Is there a TypeScript or JavaScript language feature, that prevents this sort of thing?</p>\n\n<p>My thinking is that, declaring two variables with the same name, in the same scope, ought not to be allowed at all.</p>\n\n<p>Perhaps there's a linter or some quality assurance tool that has the ability to check for and prevent this sort of thing? (and perhaps other \"bad\" patterns?)</p>\n"}, {"tags": ["javascript", "function", "parameters", "typescript"], "answers": [{"comments": [{"owner": {"reputation": 1474, "user_id": 2350085, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/QE3fS.png?s=128&g=1", "display_name": "xDreamCoding", "link": "https://stackoverflow.com/users/2350085/xdreamcoding"}, "edited": false, "score": 1, "creation_date": 1429794387, "post_id": 29823606, "comment_id": 47774998, "body": "Yeah that would work, but i wouldn&#39;t get the benefit of typescript checking if <code>someFunc()</code> is actually defined on <code>Foo</code>."}], "tags": [], "owner": {"reputation": 1231, "user_id": 59148, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5de60bb7f26eaa682b4a13528ee09005?s=128&d=identicon&r=PG", "display_name": "Erik Lieben", "link": "https://stackoverflow.com/users/59148/erik-lieben"}, "is_accepted": false, "score": 0, "last_activity_date": 1429792416, "creation_date": 1429792416, "answer_id": 29823606, "question_id": 29822773, "link": "https://stackoverflow.com/questions/29822773/passing-class-method-as-parameter-in-typescript/29823606#29823606", "title": "Passing class method as parameter in Typescript", "body": "<p>Javascript would allow this, but not sure if that is what you want?</p>\n\n<pre><code>class Foo {\n public someFunc(name:string){\n  return \"Hello, \" + name;\n }\n\nfunction bar(funcName: string) {\n    return eval(funcName);\n}\n\nconsole.log(bar(\"new Foo().someFunc('erik')\"));\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 1474, "user_id": 2350085, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/QE3fS.png?s=128&g=1", "display_name": "xDreamCoding", "link": "https://stackoverflow.com/users/2350085/xdreamcoding"}, "edited": false, "score": 0, "creation_date": 1429796410, "post_id": 29824364, "comment_id": 47776782, "body": "You&#39;re right, I was hoping in typescript was a way to let the compiler check if that given function exists on the class. Thanks for the answer though, didn&#39;t know that you could call a function of an object like that:  <code>obj[&quot;functionname&quot;]()</code>"}, {"owner": {"reputation": 8753, "user_id": 5512020, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/b5e7518fcbe90f23110ca1ba15368df4?s=128&d=identicon&r=PG&f=1", "display_name": "suku", "link": "https://stackoverflow.com/users/5512020/suku"}, "edited": false, "score": 0, "creation_date": 1494071941, "post_id": 29824364, "comment_id": 74678739, "body": "Awesome answer. Thanks a lot"}], "tags": [], "owner": {"reputation": 715, "user_id": 4817677, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0a09791349eb1721b4fd7027ef5b68f3?s=128&d=identicon&r=PG", "display_name": "thetoast", "link": "https://stackoverflow.com/users/4817677/thetoast"}, "is_accepted": false, "score": 5, "last_activity_date": 1429794380, "creation_date": 1429794380, "answer_id": 29824364, "question_id": 29822773, "link": "https://stackoverflow.com/questions/29822773/passing-class-method-as-parameter-in-typescript/29824364#29824364", "title": "Passing class method as parameter in Typescript", "body": "<p>I'm assuming you're looking for some way for the TypeScript compiler to enforce that the given function exists on Foo?  Unfortunately, I don't think there's a way to do that.  Maybe another TypeScript guru can come in here and answer that more concretely, but I'm pretty sure this is the closest that you can get:</p>\n\n<pre><code>class Foo {\n    constructor(private name:string) { }\n\n    public somefunc() {\n        console.log(\"someFunc called on\", this.name);\n    }\n    public anyfunc() {\n        console.log(\"anyFunc called on\", this.name);\n    }\n}\n\nfunction bar(obj: Foo, func: string) {\n    if (obj[func] &amp;&amp; obj[func] instanceof Function) {\n        obj[func]();\n    } else {\n        throw new Error(\"Function '\" + func + \"' is not a valid function\");\n    }\n}\n\nbar(new Foo(\"foo1\"), \"somefunc\");  // output: 'somefunc called on foo1'\nbar(new Foo(\"foo2\"), \"anyfunc\");  // output: 'anyfunc called on foo1'\nbar(new Foo(\"foo3\"), \"badFunction\");  // throws: Error: Function 'badFunction' is not a valid function\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 746, "user_id": 3407539, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EDvV7.png?s=128&g=1", "display_name": "Farrukh Normuradov", "link": "https://stackoverflow.com/users/3407539/farrukh-normuradov"}, "edited": false, "score": 0, "creation_date": 1609862416, "post_id": 29827015, "comment_id": 115951490, "body": "what is the name of this pattern?"}], "tags": [], "owner": {"reputation": 162223, "user_id": 1704166, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/d256baab2fcfd81b0f109d394404fd67?s=128&d=identicon&r=PG", "display_name": "Ryan Cavanaugh", "link": "https://stackoverflow.com/users/1704166/ryan-cavanaugh"}, "is_accepted": false, "score": 32, "last_activity_date": 1429800535, "creation_date": 1429800535, "answer_id": 29827015, "question_id": 29822773, "link": "https://stackoverflow.com/questions/29822773/passing-class-method-as-parameter-in-typescript/29827015#29827015", "title": "Passing class method as parameter in Typescript", "body": "<p>This doesn't compile-time check that the function came from a <code>Foo</code>, but does the rest:</p>\n\n<pre><code>class Foo {\n    public somefunc() {\n        // do some\n    }\n    public anyfunc() {\n        // do any\n    }\n}\n\nfunction bar(obj: Foo ,func: () =&gt; void) {\n    func.call(obj);\n}\n\nbar(new Foo(), Foo.prototype.somefunc);  // do some\nbar(new Foo(), Foo.prototype.anyfunc);  // do any\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 4237, "user_id": 451495, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/deb25f2da0b8a097d0dc074fca10aecb?s=128&d=identicon&r=PG", "display_name": "gdbdable", "link": "https://stackoverflow.com/users/451495/gdbdable"}, "is_accepted": false, "score": 5, "last_activity_date": 1473242487, "last_edit_date": 1473242487, "creation_date": 1473242116, "answer_id": 39366724, "question_id": 29822773, "link": "https://stackoverflow.com/questions/29822773/passing-class-method-as-parameter-in-typescript/39366724#39366724", "title": "Passing class method as parameter in Typescript", "body": "<p>Yes, declare function like this:</p>\n\n<pre><code>myfunction(action: () =&gt; void){\n   action();\n}\n</code></pre>\n\n<p>Call it like this from typescript:</p>\n\n<pre><code>myfunction(() =&gt; alert(\"hello\"));\n</code></pre>\n\n<p>Or from javascript:</p>\n\n<pre><code>myfunction(function() { alert(\"hello\"); });\n</code></pre>\n\n<p>Also you can pass method:</p>\n\n<pre><code>myfunction(this.someMethod);\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 4080, "user_id": 3095779, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/0770fa80aceedf83720dd6899638240e?s=128&d=identicon&r=PG&f=1", "display_name": "Deilan", "link": "https://stackoverflow.com/users/3095779/deilan"}, "is_accepted": false, "score": 16, "last_activity_date": 1528566919, "last_edit_date": 1528566919, "creation_date": 1505581776, "answer_id": 46256398, "question_id": 29822773, "link": "https://stackoverflow.com/questions/29822773/passing-class-method-as-parameter-in-typescript/46256398#46256398", "title": "Passing class method as parameter in Typescript", "body": "<h1>Typescript 2+ solution</h1>\n\n<p><strong>TL;DR</strong>: <a href=\"https://www.typescriptlang.org/play/index.html#src=class%20Foo%20%7B%0D%0A%20%20%20%20private%20result%3A%20number%20%3D%2042%3B%0D%0A%0D%0A%20%20%20%20public%20func(this%3A%20Foo)%3A%20number%20%7B%0D%0A%20%20%20%20%20%20%20%20return%20this.result%3B%0D%0A%20%20%20%20%7D%0D%0A%7D%0D%0A%0D%0Afunction%20action()%3A%20void%20%7B%0D%0A%20%20%20%20console.log(%22Hello%20world!%22)%3B%0D%0A%7D%0D%0A%0D%0Afunction%20bar(callbackFn%3A%20(this%3A%20void)%20%3D%3E%20any%2C%20thisArg%3F%3A%20undefined)%3A%20any%3B%0D%0Afunction%20bar%3CT%3E(callbackFn%3A%20(this%3A%20T)%20%3D%3E%20any%2C%20thisArg%3A%20T)%3A%20any%3B%0D%0Afunction%20bar%3CT%2C%20TResult%3E(callbackFn%3A%20(this%3A%20T)%20%3D%3E%20TResult%2C%20thisArg%3A%20T)%3A%20TResult%20%7B%0D%0A%20%20%20%20return%20callbackFn.call(thisArg)%3B%0D%0A%7D%0D%0A%0D%0Aconst%20foo%20%3D%20new%20Foo()%3B%0D%0A%0D%0Abar(action)%3B%20%2F%2F%20success%0D%0Abar(foo.func)%3B%20%2F%2F%20ERROR%3A%20forgot%20to%20pass%20%60thisArg%60%0D%0Abar(foo.func%2C%20foo)%3B%20%2F%2F%20success\" rel=\"noreferrer\">TypeScript Playground</a>, <a href=\"https://github.com/deilan-stackoverflow-samples/typescript-instance-method-as-callback\" rel=\"noreferrer\">Repo with a demo</a></p>\n\n<p>Advantages:</p>\n\n<ol>\n<li>Compile-time checking.</li>\n<li>Won't let you lost <code>this</code> context when\npassing an instance's method.</li>\n<li>Don't lose performance: don't have to declare class' methods as instance methods (e. g. <code>public somefunc = () =&gt; { return this.prop; }</code>) - <a href=\"https://github.com/Microsoft/TypeScript/issues/3927#issuecomment-123434208\" rel=\"noreferrer\">Learn more</a>.</li>\n<li>Don't mess with a class's prototype.</li>\n<li>Consistent signature pattern: passing a callback as the first arg and <code>thisArg</code> as the second (e. g. <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\" rel=\"noreferrer\">Array.prototype.map()</a>).</li>\n</ol>\n\n<p>Consider the following code:</p>\n\n<pre><code>class Foo {\n    private result: number = 42;\n\n    public func(this: Foo): number {\n        return this.result;\n    }\n}\n\nfunction action(): void {\n    console.log(\"Hello world!\");\n}\n\nfunction bar(callbackFn: (this: void) =&gt; any, thisArg?: undefined): any;\nfunction bar&lt;T&gt;(callbackFn: (this: T) =&gt; any, thisArg: T): any;\nfunction bar&lt;T, TResult&gt;(callbackFn: (this: T) =&gt; TResult, thisArg: T): TResult {\n    return callbackFn.call(thisArg);\n}\n\nconst foo = new Foo();\n\nbar(action); // success\nbar(foo.func); // ERROR: forgot to pass `thisArg`\nbar(foo.func, foo); // success\n</code></pre>\n\n<p>Turn your attention to the signature of <code>Foo#func</code>:</p>\n\n<pre><code>public func(this: Foo): number\n</code></pre>\n\n<p>It states that this function should be invoked in a context of the class' instance. This is the first part of the solution which won't let you lost <code>this</code> context.</p>\n\n<p>The second part is <code>bar</code> function overloads:</p>\n\n<pre><code>function bar(callbackFn: (this: void) =&gt; any, thisArg?: undefined): any;\nfunction bar&lt;T&gt;(callbackFn: (this: T) =&gt; any, thisArg: T): any;\nfunction bar&lt;T, TResult&gt;(callbackFn: (this: T) =&gt; TResult, thisArg: T): TResult\n</code></pre>\n\n<p>This would let you you pass generic functions as well as instance methods.</p>\n\n<p>You can learn more about these topics in TypeScript Handbook:</p>\n\n<ol>\n<li><a href=\"https://www.typescriptlang.org/docs/handbook/functions.html#this-parameters\" rel=\"noreferrer\"><code>this</code> parameters in callbacks</a></li>\n<li><a href=\"https://www.typescriptlang.org/docs/handbook/functions.html#overloads\" rel=\"noreferrer\">Function overloads</a></li>\n<li><a href=\"https://www.typescriptlang.org/docs/handbook/generics.html\" rel=\"noreferrer\">Generics</a></li>\n</ol>\n"}, {"tags": [], "owner": {"reputation": 227, "user_id": 8788732, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f85394a4f39dcfcea3906eeb704c4da8?s=128&d=identicon&r=PG", "display_name": "Cl&#233;ment MARTZLOFF", "link": "https://stackoverflow.com/users/8788732/cl%c3%a9ment-martzloff"}, "is_accepted": false, "score": 1, "last_activity_date": 1581544996, "last_edit_date": 1581544996, "creation_date": 1580471972, "answer_id": 60003487, "question_id": 29822773, "link": "https://stackoverflow.com/questions/29822773/passing-class-method-as-parameter-in-typescript/60003487#60003487", "title": "Passing class method as parameter in Typescript", "body": "<p>For my part; according to the statement of the problem, I could have done like this:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>class Foo {\n    public constructor() {\n        this.welcome = this.welcome.bind(this)\n    }\n\n    public welcome(msg: string): void {\n        console.log(`hello ${msg}`)\n    }\n}\n\nfunction bar(msg: string, fn: void): void {\n    fn(msg)\n}\n\nconst foo = new Foo()\nbar('world', foo.welcome) // 'hello world'\n</code></pre>\n\n<p>In addition, I should point out that I was inspired by <a href=\"https://github.com/facebook/react/issues/9851#issue-233622657\" rel=\"nofollow noreferrer\">this clear explanation</a>.</p>\n\n<p>Hope it helps !</p>\n"}, {"tags": [], "owner": {"reputation": 660, "user_id": 6151870, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wXI7z.jpg?s=128&g=1", "display_name": "Azat", "link": "https://stackoverflow.com/users/6151870/azat"}, "is_accepted": false, "score": 1, "last_activity_date": 1595592212, "creation_date": 1595592212, "answer_id": 63073177, "question_id": 29822773, "link": "https://stackoverflow.com/questions/29822773/passing-class-method-as-parameter-in-typescript/63073177#63073177", "title": "Passing class method as parameter in Typescript", "body": "<p>You could use fat arrow functions. They shouldn't lose &quot;this&quot;</p>\n<pre><code>class Foo {\n    public somefunc = () =&gt; {\n        // do some\n    }\n    public anyfunc = () =&gt; {\n        // do any\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 104, "user_id": 4926564, "user_type": "registered", "profile_image": "https://graph.facebook.com/10206428026689706/picture?type=large", "display_name": "Alperen S&#246;zer", "link": "https://stackoverflow.com/users/4926564/alperen-s%c3%b6zer"}, "is_accepted": false, "score": 0, "last_activity_date": 1595597679, "creation_date": 1595597679, "answer_id": 63074660, "question_id": 29822773, "link": "https://stackoverflow.com/questions/29822773/passing-class-method-as-parameter-in-typescript/63074660#63074660", "title": "Passing class method as parameter in Typescript", "body": "<p>In my opinion, you should use facade design pattern for this case.</p>\n<p>When you create a complex library, tool or system,consisting of many functions and/or classes; It gets hard to understand and dependent. So you should implement a class which provides a simple uniform interface.</p>\n<pre><code>class Foo{\n\n      public somefunc() {\n        console.log(&quot;some&quot;)\n      }\n\n      public anyfunc() {\n        console.log(&quot;any&quot;)\n      }\n\n\n    };\n\n\n    class FuncFacade {\n\n      getFunc(obj: any, func_name: string) {\n        switch (func_name) {\n          case obj.somefunc.name: {\n            return obj.somefunc;\n          }\n\n          case obj.anyfunc.name: {\n            return obj.anyfunc;\n          }\n          default: {\n            throw new Error(&quot;No such func!&quot;);\n          }\n\n        }\n      }\n    }\n\n    let ff = new FuncFacade();\n\n    function bar(obj: Foo, func_name: string) {\n      ff.getFunc(obj,func_name)();\n    }\n\n    bar(new Foo(), Foo.prototype.anyfunc.name);\n</code></pre>\n<p>Maybe this was not what you asked for but this is the way how it should be.</p>\n"}], "owner": {"reputation": 1474, "user_id": 2350085, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/QE3fS.png?s=128&g=1", "display_name": "xDreamCoding", "link": "https://stackoverflow.com/users/2350085/xdreamcoding"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 45978, "favorite_count": 6, "answer_count": 8, "score": 33, "last_activity_date": 1595597679, "creation_date": 1429790267, "last_edit_date": 1429823278, "question_id": 29822773, "link": "https://stackoverflow.com/questions/29822773/passing-class-method-as-parameter-in-typescript", "title": "Passing class method as parameter in Typescript", "body": "<p>I'm searching for a possibility to pass a class-method to a function which then can execute that function on an instance of that class.\nSomething like that pseudocode: (note that this is an abstract example)</p>\n\n<pre><code>class Foo {\n    public somefunc() {\n        // do some\n    }\n    public anyfunc() {\n        // do any\n    }\n}\n\nfunction bar(obj: Foo ,func: \"Foo.method\") {  // \"that's what im looking for\"\n    obj.func();\n}\n\nbar(new Foo(), Foo.somefunc);  // do some\nbar(new Foo(), Foo.anyfunc);  // do any\n</code></pre>\n\n<p>Is there a possiblity to do this?</p>\n\n<p>I know i could be doing something like that:</p>\n\n<pre><code>class Foo {\n    static somefunc(fooObj: Foo) {\n        // do some\n    }\n    static anyfunc(fooObj: Foo) {\n        // do any\n    }\n}\n\ninterface func {\n    (fooObj: Foo);\n}\n\nfunction bar(obj: Foo, fn: func) {\n    fn(obj);\n}\n\nbar(new Foo(), Foo.somefunc);  // do some\nbar(new Foo(), Foo.anyfunc);  // do any\n</code></pre>\n\n<p>but that involves static functions which I don't want.</p>\n"}, {"tags": ["javascript", "typescript"], "answers": [{"tags": [], "owner": {"reputation": 204677, "user_id": 75525, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/IYU63.png?s=128&g=1", "display_name": "Fenton", "link": "https://stackoverflow.com/users/75525/fenton"}, "is_accepted": false, "score": 1, "last_activity_date": 1429785809, "creation_date": 1429785809, "answer_id": 29821081, "question_id": 29820607, "link": "https://stackoverflow.com/questions/29820607/typescript-type-definitions-versions/29821081#29821081", "title": "Typescript type definitions versions", "body": "<p>There are two interesting sides to this discussion.</p>\n\n<p>The first problem is that the definitions get updated as new versions of the TypeScript language come out with features that make definitions easier and more accurate. A good example of this is union types.</p>\n\n<p>The second problem is that the third party libraries are constantly being updated and the definitions therefore move with the libraries.</p>\n\n<p>If you are using \"pretty much the latest of everything\" this is all fine, but if you are looking for a combination it will become impossible (i.e. TypeScript 1.1 with jQuery 1.9).</p>\n\n<p>You can usually see the history of a definition by reviewing the changes, so if you need an older version of a library you can find it - but you may stumble across the TypeScript language issue. For example, if you wanted to use a rather old version of a library, you might find the <code>.d.ts</code> uses <code>bool</code> not <code>boolean</code> and needs to be updated before it will compile.</p>\n\n<p>There are two related issues on Definitely Typed relating to this:</p>\n\n<p><a href=\"https://github.com/borisyankov/DefinitelyTyped/issues/3031\" rel=\"nofollow\">https://github.com/borisyankov/DefinitelyTyped/issues/3031</a></p>\n\n<p><a href=\"https://github.com/borisyankov/DefinitelyTyped/issues/2972\" rel=\"nofollow\">https://github.com/borisyankov/DefinitelyTyped/issues/2972</a></p>\n"}], "owner": {"reputation": 1816, "user_id": 389262, "user_type": "registered", "accept_rate": 33, "profile_image": "https://i.stack.imgur.com/GLQnP.jpg?s=128&g=1", "display_name": "futtetennista", "link": "https://stackoverflow.com/users/389262/futtetennista"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 262, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1429786658, "creation_date": 1429784611, "last_edit_date": 1429786658, "question_id": 29820607, "link": "https://stackoverflow.com/questions/29820607/typescript-type-definitions-versions", "title": "Typescript type definitions versions", "body": "<p>I'm having issues with type definitions (td) versioning. Could someone explain to me why the current guidelines enforce the use of a version for type definitions for all versions but the latest one and why they don't say anything about specifying a version for type definitions they depend upon?</p>\n\n<p>I'll explain my perplexity: I'm facing the issue that right now, the <code>browserify</code> td doesn't work with the latest <code>node</code> td (but it works with v0.11.0). Given the current guidelines, how can someone who writes a td that references another one be sure that a new update to the referenced td doesn't brake theirs? I don't see a way right now. As an end user, right now the only solution I've got is to manually change the <code>browserify</code> td to reference the <code>node</code> version that doesn't break it. It doesn't sound like an ideal scenario to me.</p>\n"}]